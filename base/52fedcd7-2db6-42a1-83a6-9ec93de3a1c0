{
    "title": "Savage Desire Ch. 06",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nJeremy Stanton vs. Ryan Hicks\n\nDedicated to lovekinkysex (#tryingtograntyourwish)\n\nParting!\n\n***\n\nJeremy moaned in his sleep. He was having the most incredibly erotic dream. He was standing under a waterfall with Ryan. Ryan was in his arms, with his arms and legs locked around him as it had been during their kiss in the arena. But this time around, they were both naked with Jeremy slowly fucking into Ryan. Somehow, Jeremy knew it was a dream. Hell, he was fucking a willing Ryan. That was too good to be true. But that was one dream the alpha didn't plan on waking up from. Jeremy moaned throatily when Ryan licked and sucked at the side of his neck until he felt as if he was on fire even though he stood directly beneath the falls. \n\n\"You smell so good.\" Jeremy heard Ryan murmur against his neck between licks. \"Damn, I love your body.\" Ryan's words were muffled against his flesh but Jeremy heard him perfectly. \"Jeremy...\" A whisper. But his name on Ryan's lips flooded him with such delicious pleasure Jeremy's eyes fluttered open. And that's when illusion melded with reality. \n\nThe first thing Jeremy noticed was how hard he was and how desperately he needed release. The second thing he noticed was that he wasn't inside Ryan but rather, his rock, hard, leaking cock was curved up within the crease of Ryan's arse, relentlessly rubbing against his hole. Ryan was still in the position he'd been the night before when they went to sleep...stretched out on top of him. The only difference between the night before and that very moment, however, was that Ryan's lips were latched onto Jeremy's neck, sucking and nibbling the skin, whilst he rocked his lower body against Jeremy.\n\n\"Oh fuck, baby.\" Jeremy groaned as he uncontrollably thrust up against Ryan. He could feel the wetness against his stomach, obviously resulting from the precum spilling from Ryan. \n\nMoans spilled out of Ryan as he pleasured himself against Jeremy's gorgeous body. His knees were on either side of Jeremy's hips, giving him the leverage he needed to fuck himself against Jeremy whilst simultaneously stimulating his twitching hole with the alpha's cock. The mind-blowing sensations Ryan was getting from the point where his nipples rubbed against Jeremy's hairy chest, the point where his cocks rubbing between their bodies, and the point where his hole was being massaged by the velvety, veiny length of Jeremy's cock was so amazing his toes curled. Ryan was in heaven.\n\n\"Jeremy...\" A breathless gasp tore out of Ryan as he began to move almost frenziedly. \n\nRyan was so gone on pleasure that if Jeremy had actually surged into his body and taken him that very moment, he would have welcomed it without any protest. He was being driven by pure hunger. At that point, Ryan didn't give a shit about pain. He just needed Jeremy to give him that thrill his body was so desperate for. His defenses were completely down. He didn't have any shields protecting his thoughts... \n\n\"I'm here baby.\" Jeremy murmured huskily. \"I've got you.\" The alpha knew exactly what his mate wanted.\n\nJeremy slid a finger into his mouth to get it wet. Then he slipped the now slick finger beneath the covers and sought his mate's hungry hole. Jeremy's finger slipped inside that hot tight channel, encountering no resistance. He went straight for gold.\n\n\"Oh god...\" Ryan's back arched in ecstasy when he felt Jeremy's finger hit that same spot inside him that had sent him into a meltdown the night before. His entire world tilted on its axis. A surprised cry tore out of him. \"Fuck, I'm going to come...\" He gasped shakily, shamelessly rocking back against Jeremy's finger, working toward the orgasm he needed so desperately. \"Jer ...god ...I'm going to...\" His rhythm faltered as his body got ready to explode. \"I'm coming...I'm...\" He didn't stand a chance against the intense pleasurable orgasm that tore through him.\n\nRyan cried out Jeremy's name as he found the pinnacle of pleasure. He erupted powerfully between them, his entire body shaking as his channel grasped and rippled along the finger inside him. Even as his body writhed in ecstasy, strong fingers slid into the hair at his nape and tugged his head down to meet Jeremy's in a fierce kiss filled with passion and promise. They kissed till Ryan stopped spurting and trembling against Jeremy. When his body stopped spasming, Jeremy pulled out his finger and released his kiss-swollen lips. Ryan collapsed on top of him, still breathing hard. \n\nJeremy wrapped his arms around Ryan and held him as if he was never going to let him go. He was hard but again, he ignored it. For Jeremy, Ryan being able to freely and without fear, use his body for his own pleasure was pleasure enough. It was a step in the right direction. At least not only was his mate not afraid of him as he was expected to after what he did to him, but he also felt free enough to take his pleasure from him as he should. Jeremy scattered tiny kisses all over Ryan's closed eyelids till he opened beautiful green eyes to look at him. \n\n\"Sorry about that.\" Ryan muttered.\n\n\"Hey, if you ever apologize for getting your rocks off, I'll throw you into the dungeon.\" Jeremy growled, making Ryan laugh softly. \"If that's how you plan on waking me up every day, I'll be the happiest man on earth.\"\n\nRyan groaned at that because he could feel Jeremy's still hard cock against his arse. He was achingly aware of Jeremy's arousal. It poured off Jeremy like heat waves. Surly he needed some relief.\n\n\"What can I do to get you off?\" Ryan asked softly.\n\n\"That's not necess...\"\n\n\"I want to Jeremy.\" Ryan wriggled his arse against the hot hard flesh still nestled between his cheeks.\n\n\"Hey, stop that.\" Jeremy tightened his hold on Ryan to stop his movement.\n\n\"Don't you want me anymore?\" He asked in a small voice.\n\nJeremy laughed. \"You really need an answer to that question?\" Jeremy reached down to pull his erection back. When he let it go it slapped against Ryan's arse with an erotic but funny sound, making both of them laugh. \"Feel that? If I want you anymore than I already do, I'll probably end up in some science lab somewhere.\"\n\n\"So why don't you want me to...\"\n\n\"Let's just say I'm saving myself for tonight.\" Jeremy drawled huskily. \"How about that?\" He gave Ryan's arse a light slap. \"I'm going to fuck this gorgeous arse so good you're not going to remember your name for days.\"\n\n\"Oh god...\" Ryan moaned as a shudder jolted through him at Jeremy's words. They both felt his dicks jerk between them and laughed. \"Damn, you're...\" Ryan trailed off and turned his head to look behind him when the door to Jeremy's suite opened.\n\nA tall, dark-haired beauty, clad in skintight black leather pants and vest, with black spiky-heeled boots who could easily pass for a dominatrix entered the suite. Her eyes went straight to Ryan's, their silver gray irises showing her shock as she took in the scene on Jeremy's bed. Ryan turned shocked eyes onto Jeremy.\n\n\"So not only do you have mind-links with them, they also have access to your suite?\" Ryan looked and sounded incredulous.\n\n\"What the fuck is going on here?\" Dominatrix's shocked voice drowned out Jeremy's groan. \n\nWith a cuss that would have made a sailor proud, Jeremy got out of bed with Ryan held tightly against him. \"What are you doing back, Paige?\" His irritated question was directed at the woman but he didn't even look like he was interested in an answer. \"She's not my lover, baby.\" Jeremy told Ryan as he gently placed Ryan back on the bed with his back against the headboard.\n\n\"Baby?\" Paige Harrington burst into laughter. \"Seriously, what's going on Jeremy?\"\n\n\"How many people have access to your room?\" Ryan asked, staring at the amused lady through the glass.\n\n\"And who the fuck are you to ask?\" Dominatrix's eyes flashed with amusement.\n\nJeremy sighed as he reached for one of the small towels he always kept in the compartment beneath the bedside table, and began to wipe the cum off Ryan's stomach. \n\n\"Philip, Stan, Mum, Joel and the soon to be dead woman standing there.\" The way Jeremy spoke sounded so funny to Ryan he actually smiled.\n\n\"Soon to be dead huh?\" The lady said dryly. \"We'll see about that. Still waiting for an expla...\"\n\n\"Paige Harrington if you don't get out of here, so help me God I'll...\" \n\n\"Harrington?\" Ryan relaxed against the headboard and watched his mate draw the covers over his nakedness. \"As in...Philip...Harrington?\" He looked up at Jeremy.\n\n\"That's Philip's sister, Ryan.\" Jeremy leaned down and dropped a kiss against Ryan's mouth. Then he turned to leave the sleeping area, still stark naked. \"That's my mate, Paige. Now, care to tell me why you're back?\" He asked as he moved towards the bathroom.\n\n\"What?\" Paige screeched. \"You're kidding me right?\" Her eyes bulged out to the extent that Ryan feared they would pop out. \"Hey, Jer...\" She followed Jeremy into the bathroom and watched as he washed his hands and brushed his teeth. \"Tell me it's a joke please.\" She leaned against the vanity and watched the alpha. \"Jeremy seriously, I'm dying here.\" \n\nJeremy deliberately took his time to rinse his mouth and clean the cum that still decorated his sexy six-pack. Then he turned to look at Paige. \"I'm not kidding.\" With that, he walked out of the bathroom, straight to his walk-in closet.\n\n\"Oh my god!\" Paige gasped, watching as Jeremy pulled on sweatpants and a t-shirt. He took out another sweats and t-shirt...obviously meant for Ryan. \"You're serious.\" Suddenly, a naughty smile appeared on her face. \"Okay, here goes.\" She started towards Ryan whose wary eyes remain on Paige the whole time.\n\n\"Paige...\" Jeremy groaned just as the door to the suite opened to admit Philip and Stan. \"Guys, you really need to stop barging in here without announcing your... Paige?\"\n\nBut Paige Harrington was already standing beside Ryan who could feel a blush rising up his neck. That naughty and predatory smile on Paige's face... Ryan didn't know what to think or expect. In no time at all, he was assailed with a full-body blush. What happened next, Ryan wouldn't have been able to predict in a million years. Philip's sister shocked the hell out of him by leaning down and kissing him full on the mouth. Jeremy didn't say a word. Philip and Stan erupted into laughter. Ryan reeled from that surprise kiss...his very first from a woman. \n\n\"Your mate will explain all this, Hot Lips.\" Paige's delighted smile was so infectious Ryan found himself smiling back. \"You're breathtakingly yummy by the way.\"\n\nRyan grinned. \"You got me at Hot Lips. You can kiss me again if you want to.\" He joked, making Paige howl with laughter whilst Jeremy growled. \n\n\"Don't you dare...\" Jeremy glared at Ryan as he threw the clothes he held onto Ryan's lap.\n\n\"Well, I didn't think you'd mind a second kiss since you didn't react to the first one.\" Ryan smirked, making Paige laugh even harder.\n\n\"I like him.\" She said as she turned to leave Jeremy and Ryan. \"So...he just accepted it and suddenly started loving cock?\" Paige asked loudly enough for everyone in the suite to hear, drawing laughter from her brother and Stan who were pouring coffee into mugs at the bar. \n\n\"You'll never change, Slip.\" Philip chuckled, enfolding his big sister in a bear hug. \"Missed you, Sis.\"\n\n\"Missed you more, brother.\" Paige mumbled, hugging Philip back tightly.\n\n\"We have a lot of catching up to do.\" Philip kissed his sister on the forehead. \"But let's finish with you first. Whatever news you have must be serious if you didn't want to risk calling to tell us. When Clara called to tell me you're here I almost shit my pants.\"\n\n\"Almost?\" Stan drawled, drawing Paige into his arms. \"Lucky you, man. I did.\" He said in his usual jovial way, making Paige and Philip laugh. \"Good to see you, Slip. So how bad is it?\"\n\n\"It's terrible guys.\" Paige sighed and then turned to look at Jeremy who was giving Ryan a lingering kiss on the bed. \"Ugh that's so shocking to see...but so fucking hot and sweet.\" She muttered, picking up two mugs of coffee...one for herself and one for Jeremy. All three left the bar for the dining area. \"If Jeremy could just come out of that cum-scented bed, I could start talking.\" Paige said loudly enough for the alpha to hear and laughed when Jeremy flipped her a bird even as he continued kissing Ryan.\n\n\"Wait...you know how cum smells like?\" Stan drawled. \"I guess even lesbians need a good cock action once in a while.\" He dodged the punch Paige aimed his way.\n\n\"Fuck you Stan.\" Paige laughed as Stan gave Philip a hi-five. \"So tell me...how many girls are you two currently fucking? And who are they?\" She asked dryly, making the guys burst into laughter. Paige always insisted that as the eldest amongst them, she needed to know who they were in bed with.\n\nMeanwhile on Jeremy's bed, Ryan, who was dressed in sweats and t-shirt, tried to bring his breathing under control. \n\n\"Are you okay?\" Jeremy asked softly against Ryan's wet lips.\n\n\"You mean after that frenchie from Paige?\" Ryan whispered shakily. Desire, that had nothing to do with Paige's kiss, was turning his insides to mush. \n\n\"Shut up, it wasn't a frenchie.\" Jeremy laughed. \"We had a silly agreement of sorts when we were teens. We get to kiss each other's mates the first time we meet them. Philip and Stan couldn't kiss you because...\"\n\n\"I'm a guy.\" Ryan nodded. \n\n\"Yeah. Paige's a lesbian but I guess that didn't matter to her at all.\"\n\n\"Oh snap. She must have been looking forward to kissing the shit out of your mates.\" Ryan chuckled. \"Too bad she had to settle for a guy's mouth.\" \n\n\"A very sweet mouth if you ask me.\" The alpha murmured and leaned in for another kiss. \"You better not offer it to...\" Jeremy trailed off when his cell phone began to ring. \"Mum.\" He muttered when he looked at the caller ID. \"Good morning Ma.\" He listened for a second and turned to his mate. \"She's been calling your phone.\"\n\n\"Shit, I left it in my...\"\n\n\"He's with me Ma.\" Jeremy said. \"I'm putting you on speaker.\"\n\n\"How are you this morning Ryan?\" Gloria asked with a smile in her voice.\n\n\"I'm good, Gloria. How about you?\"\n\n\"Couldn't be better darling. Been laughing my head off this morning. Apparently the pack is on a lookout for potential attackers.\" Gloria laughed. \"They're all being kept under tight security, I hear for their own safety.\" Jeremy chuckled at how amused his mother sounded. \"Your reputation definitely precedes you honey-buns.\"\n\n\"You mean my reputation is shitty.\" Ryan groaned.\n\n\"We're beasts darling.\" Gloria chuckled. \"That's the best reputation to have if you want some peace. Anyway that's not the reason I called. The council will meet you at ten a.m. It's going to be just you two and the council but you can bring your crew for moral support if you want to, Jer. Joel called to tell me Paige is back.\"\n\n\"Yep.\"\n\n\"Perfect timing. She would have been pissed if you'd done this without her.\" Gloria chuckled.\n\n\"I know right.\" Jeremy sighed. \"We'll see you at the council quarters at ten Ma.\" Jeremy said and hung up. \"Would you mind if I meet with those three for a while? Paige is my head of Sentinel. That's like the intelligence arm of the pack.\"\n\n\"What's her profession?\" Ryan turned his head to look at Paige. The way she was dressed...\n\nJeremy chuckled. \"She's an engineer. Used to lecture at a point actually. Anyway, she's been out of the country to investigate something weird that's been going on of late. She must have very sensitive information for us if she came back without alerting any of us.\"\n\n\"Hey, go do your thing. I'll just go take a shower and get something to eat.\" Ryan stretched. \n\n\"Thanks.\" Jeremy kissed him again and got to his feet. \"And don't kill anyone. Remember, you're the only one I want.\" He grinned when Ryan rolled his eyes. \n\nSomehow their relationship had sort of taken a different turn after they shared that intimate time in the Jacuzzi the night before. Ryan had always felt free around Jeremy but after the night they'd shared, he felt closer to the alpha. He enjoyed their light banter and loved Jeremy's relaxed and seductive charm. Maybe it was because he'd accepted to mate with Jeremy but Ryan's entire body buzzed with awareness of the man. The look in his eyes as he looked at the alpha said it all.\n\n\"In fact, order in.\" Jeremy threw over his shoulder as he opened the sliding door that cut off the bed area from the rest of the suite. \"I'll join you when I'm done.\" He headed for Paige's outstretched arms. 'I love watching you eat.' The alpha added on their mind-link.\n\n'You're nuts, you know that?' Ryan responded, watching as Jeremy gave Paige a tight hug.\n\n'Nuts about you.' Came Jeremy's husky voice which sent a delicious shiver down Ryan's spine.\n\n\"Holy shit.\" Ryan moaned when he felt his cocks twitch inside his sweats. And to think he'd come mere minutes ago, he thought surprised. But then that was how insanely Jeremy turned him on. \n\nThe four people didn't even turn to look in Ryan's direction as he left Jeremy's suite via the connecting door between their rooms. They were all listening attentively to Paige as they drank their coffee. Whatever the problem was, Ryan could tell it was very serious. Well, he had faith in his mate to make everything right. He didn't even know how the guy operated when it came to the running of his pack. But Ryan just knew that Jeremy would make sure everything and everyone was okay. \n\n\"Fuck.\" Ryan muttered to himself, surprised at his thoughts on Jeremy. He had so much faith and confidence in Jeremy it surprised him. Despite everything that had happened between his mate and himself, he knew he had it real bad for the guy. \n\n***\n\n\"Can you please come forward, Alpha Jeremy?\" The High Priestess called with a delightful smile on her face. Like the other members of council, she looked thrilled that their alpha had found his mate.\n\nThey were in the cozy and beautifully decorated council meeting room with the Members of the Council. The Council was the highest body of authority in the pack. It was made up of eight elders, headed by the High Priestess. Gloria and Joel were both members of the council. The only non-council members present were the alpha himself, Ryan, Philip, Stan, and Paige. The meeting had commenced with the alpha introducing his mate to the council. The members were thrilled. Although two had raised the obvious issue of an heir to the throne, they'd all agreed that Luna knew best. Members had unanimously agreed that the mating ceremony could take place that evening. All that was left was for the High Priestess to ask for Luna's blessing and protection for the upcoming ceremony. After that, they could go and inform the pack and then begin preparation towards the ceremony. \n\nEverything had gone better than Jeremy had expected. The council had been too thrilled for him they hadn't opposed his request to do the ceremony that very evening. Jeremy was very happy. He planned on showing his mate some good time that evening. He was going to show Ryan how to party, werewolf style. Jeremy squeezed Ryan's hand reassuringly and stood up to approach the High Priestess.\n\n\"At this point, I'll ask for complete silence as we ask for Luna's guidance for our Alpha.\" The voice of the High Priestess filled the room. \"We ask Luna to guide his steps, thoughts and heart as he claims his lifetime partner tonight.\" The priestess picked up a wand. \"We ask for protection during the ceremony.\" She smiled as she reached out towards Jeremy with the wand in her hand. \"Even as we make merry and have fun, we...\" The wand touched Jeremy's forehead... \n\nThen all hell broke loose!\n\nThe high priestess gave a loud cry and went into a trance, her eyes completely white and unfocused. Jeremy tried to raise his head but the wand kept him exactly where he was. The people in the room looked confused as they stared at the High Priestess and the suddenly glowing statue of Luna behind her. No one in that room...not even the council member who was over a century old...remembered ever seeing that statue glow hot red as it was doing that very moment. It meant just one thing. Luna was pissed!",
        "\"You have wronged him and disrespected me.\" The High Priestess said in an eerie voice. \"You have to be punished.\"\n\nA collective gasp went up from the people in the room.\n\n\"What's going on?\" Paige gasped with a confused look. \"Philip?\" But Philip looked frozen. \"Stan?\"\n\n\"Not now Paige.\" Stan mumbled. \n\nRyan looked lost. He didn't know what was going on. All he knew was that everyone seemed tensed in the room. Jeremy hadn't moved from where he stood in front of the High Priestess. He looked to where Gloria sat and felt a shudder of dread slither down his spine. She looked...terrified. And it broke Ryan's heart to see such a strong woman reduced to a terrified creature. \n\n\"What does it mean?\" Ryan asked no one in particular.\n\n\"At this point, I'll recuse Gloria Stanton and Joel Harrington.\" The High Priestess, who was no longer in a trance, announced. She looked all business. \"The rest of the council should please stand around the alpha. Bring your wands.\" She instructed.\n\n\"Why are they being recused?\" Ryan asked as he watched the council members move to form a circle around his mate. \"Philip?\"\n\n\"As his mother and mentor, their emotions may interfere with the council's consultation with Luna. They may not be as objective as they should be so...they can't be in the circle.\"\n\n\"Objective about what?\" Ryan asked but Philip's attention was fully back on the council and his alpha.\n\nThe council, including the High Priestess, raised their wands high above their heads, pointing to the middle above Jeremy's head. The council members seemed to be in a trance. Their eyes were closed and they appeared to be listening to something. A bright red light shot up from the tip of each wand after about five minutes and came together high above Jeremy's head. The light exploded on top of Jeremy's head as though it was a fourth of July celebration. Then the council members snapped out of their trance and took steps back...away from the alpha.\n\n\"It's been decided.\" The High Priestess said in a loud authoritative voice. \"Alpha Jeremy is sentenced to the Fort.\" \n\nGloria's pitiful moan drew Ryan's attention to her. The elder he'd come to see as a very strong woman was shaking, her fists clenched tightly in her lap. One look at her tight and terrified face showed how hard she was trying to keep in her scream. Ryan didn't have to be a genius to deduce that the Fort was a very bad thing...or place. He turned to Philip...\n\n\"What does Fort...\" But before he could complete his sentence, the High Priestess was speaking again.\n\n\"You will be there for two years.\" A pained gasp tore out of Joel's throat at that decree. \"You have a day to put your house in order. Get the one you want to be Alpha in your absence ready. You leave at midnight tomorrow. Sorry.\" The elderly woman added quietly.\n\nThe High Priestess' final word was like the sound of a rap of a gavel, indicating the closing of proceedings with a symbolic finality. Along with those words came Gloria Stanton's scream.\n\n\"What does it mean?\" Ryan's muttered, looking around frantically but none of the people he knew looked sane enough to answer him.\n\nGloria was screaming and Paige was bawling her eyes out. Even some of the council members were in tears. Ryan watched as Jeremy bowed, showing his respect for the High Priestess and her elders, and then turned around and headed directly towards him. Ryan stood up and waited for Jeremy, unable to read the expression on his face. He could however feel the calmness within the alpha. It almost looked as if he was content with whatever the Fort verdict meant.\n\n\"Jeremy...\" Ryan began but Jeremy grabbed his hand and turned towards the door.\n\n\"Let's get out of here.\" He said softly. \"I don't have much time.\"\n\n\"What's going on? What's the Fort? What does it mean?\" But Jeremy didn't answer. \"Jeremy answer me please.\" Ryan was getting desperate. \"Jeremy!\" He hissed as he yanked his hand out of Jeremy's and stood still. Jeremy turned to face him. \"I'm not taking another step till you tell me what that was all about.\" He said through clenched teeth.\n\nJeremy stared at his mate. The man who had come to mean so much to him. The man who was the center of his world. The man against whom he'd committed the greatest sin. He couldn't believe he wasn't going to see that sweet face for two whole years. But he knew he deserved whatever punishment Luna meted out to him.\n\n\"I'll explain everything Ryan.\" Jeremy said quietly. \"But right now, I just want to get out of here. Please.\"\n\nSomething in Jeremy's voice got to Ryan. He nodded and fell into step beside his mate with no more protests. When they got to where Gloria knelt with Joel's arms around her, Jeremy let go of Ryan's hand and drew his mother into his arms.\n\n\"Shh...it's okay mum.\" He turned to look at Philip's father who he respected so much. \n\n\"Take care of her for me Uncle Jo.\" \n\n\"You know I will.\" The elderly man who didn't make any attempt to wipe the tears off his own face responded in a hoarse voice. \"Go and handle things with Philip. I'll take her home.\"\n\nJeremy hugged Gloria tightly and kissed her on the forehead. Then he gave her to Joel and grabbed Ryan's hand again. Philip fell into step beside his alpha. Stan had taken a wailing Paige away.\n\n\"Hey, hang in there.\" Philip muttered.\n\nJeremy threw an arm around Philip's shoulder and bumped his head against his. \"Scared?\"\n\n\"Terrified.\" Philip muttered. \"I'm not ready for this. A month or two I can handle. But two whole years? Fuck!\"\n\n\"You can do it bro.\" Jeremy assured him as they climbed into Philip's black sedan. \"There's no better person than you. Hell, I just might leave it for you to handle permanently even if I get lucky enough to come back alive.\"\n\n\"Don't fucking joke with this Jer.\" Philip growled. \"Don't you dare. You're going to survive. I won't have it any other way. If you die on me, I'll find a way to follow you in there, look for a way to revive you, and kill you all over again. Slowly and painfully. That's a promise.\"\n\n\"I will fight to survive, Lip.\" Jeremy said softly, turning to look at Ryan. \"I have a lot to live for.\"\n\n\"Jeremy...\" Ryan was shaking with dread. There was so much he could take. \"I need to know.\"\n\n\"I'll explain, I promise.\" Jeremy said but he really didn't have any idea how he was going to bring himself to explain the verdict reached at the council quarters, to Ryan. Not only was he ashamed, Jeremy dreaded breaking the news to Ryan. The alpha dreaded how Ryan would react to the news? Would he be happy? Relieved? Indifferent? Sad? Jeremy congratulated himself on his outward calm because inside, he was a quivering mess. \"Let's make a quick stop to the office. I need to go over some stuff with Lip. After that we'll go home and then I'll tell you everything, okay?\"\n\nRyan nodded as the SUV sped away from the council quarters. From the little he'd gathered, Jeremy was going away for two years. He didn't know exactly where that Fort was but he'd already resolved to go with Jeremy because no way in hell was he going to stay away from the man for two years. He was entitled to a long sabbatical anyway so it wouldn't be a problem at all. If the school didn't let him off, he would resign and look for another job when they got back. He however didn't particularly like the way Jeremy and Philip kept talking about survival and death. But he knew Jeremy would explain soon.\n\nAt the pack office, Ryan paced as Jeremy and Philip went over some documents. At a point he wandered into an empty office and sat down in one of the chairs with his head in his hand. He didn't know how long he sat there but when he came to himself, he wondered what was taking Jeremy so long. He got to his feet and slowly made his way out of the office, slipping his hands into his pocket as he walked. When Ryan felt his cell phone inside his pocket, he pulled it out and just stared at it for a while. Then he dialed Gloria's number.\n\n\"Are you okay, Ryan?\" Came Gloria's shaky voice. That voice sounded nothing like that of the Gloria he'd come to know and love.\n\n\"Are you okay?\" Ryan threw back at her, hating how defeated the elder sounded.\n\n\"No I'm not.\" She sniffled. \"How are you holding up?\" \n\n\"Well, I still don't know exactly what's going on.\" Ryan could hear Joel trying to soothe Gloria in the background, saying they had to go home. \"Where are you, Gloria?\" He asked, curious.\n\n\"Parked downstairs.\" The elderly woman breathed shakily.\n\n\"I'll be right down.\" Ryan said and hung up. He went back to the conference room where he'd left Jeremy and Philip and found them standing around the conference table with Stan and Paige. They seemed engrossed in some maps they were looking at. \"Hey, I'll be downstairs with Gloria and Joel.\" Ryan told Jeremy quietly when he got to his side.\n\nJeremy nodded. \"I'll be done soon.\" \n\n\"Just concentrate on what you're doing here okay?\" Ryan said quietly. Then as if it was the most natural thing to do, Ryan went up on his toes and kissed Jeremy on the cheek.\n\nJeremy watched his mate go and groaned, cursing himself. \"I'm counting on you to keep him safe, guys. He will be safe after I mark him. But if what's happening to all these alphas is any kind of war, he's going to be a target.\"\n\n\"On my life I swear to you brother, he will be safe.\" Philip said with so much emotion. \n\n\"We'll all protect him with our lives, Jer.\" Stan added, lightly slapping Jeremy on the back. \n\nThe alpha nodded and turned his attention to a quiet and pensive Paige. \"It's not his fault Paige.\" He said softly, knowing instinctively that Paige blamed his mate for his predicament.\n\n\"Pardon me Jer, but I don't really know him. And as far as I'm concerned his presence triggered all this.\" She said stonily. \n\n\"Are you saying I shouldn't have met my mate?\" Jeremy asked tightly.\n\n\"You can't expect me to be happy you did when thanks to him,\" she jabbed a thumb toward the door, \"I don't even know whether I'm going to see you again or not.\" She hissed, showing how furious she was. She'd always been protective of her boys as she called the three men. And she hated that Jeremy had to suffer Luna's axe.\n\n\"Paige...\" Philip growled a warning to the woman who was not only his sister, but was also part of their clique. \"Settle down. This is not the time for anger.\" \n\nJeremy took his eyes off Paige's angry face, back onto the map spread out on the conference table. For a moment he couldn't see anything on the map. The drawings swam before his eyes. Shit, not again, he told himself as he blinked to get his sight back. He felt his hands shaking and clenched them. Paige had always been a brutally honest person. The friends always relied on her to say what was on everyone's mind. They affectionately called her Slip because she never held her thoughts back. She would always say innocently, after dropping whatever outrageous thought that was on her mind, that it slipped out. Something that others would find difficult to say would just slip out of Paige's mouth with cheeky ease. How many people felt as Paige felt, Jeremy wondered worriedly. Those very close to him were the people he was counting on to keep his mate safe. And if they felt any way as Paige did, his mate wasn't safe. \n\nJeremy was dying inside but he knew he had to look strong for his people. Fuck!\n\n***\n\n\"I'm waiting for Jeremy to tell me the meaning of what I saw and heard at the council quarters.\" Ryan said quietly. He was sitting opposite Gloria in the back seat of Joel's Navy blue Mercedes-Benz S600 Pullman. Joel sat beside the miserable looking woman. \"Care to do the honours? What's this Fort that's scaring everyone? I plan to go with him by the way.\"\n\n\"Oh Ryan, you can't.\" A sob escaped the elderly woman.\n\n\"But I can, and I'm gonna. I'm entitled to leave...\"\n\n\"You can't follow him into purgatory, son.\" Joel cut in. \"And even if you could, his punishment demands he goes alone.\"\n\n\"Purgatory?\" Ryan gasped. He didn't even know it actually existed. \"What kind of punishment is that? I know it's because of what he did to me. I gathered as much. But I don't want him to be punished. Doesn't what I want matter? After all, I was the one wronged. Can't I just go and talk to the council to forget...\"\n\n\"He wronged Luna too Ryan.\" Gloria said quietly. \"Jeremy showed disrespect by hating her choice of mate for him. So he's being punished by Luna.\"\n\n\"Seriously?\" Ryan hissed. \"Some god you have. Isn't she rather supposed to be merciful? I mean she should know that Jeremy didn't have control over his actions.\"\n\n\"His Ojah power was triggered because of his level of anger and hatred for the idea of you as his mate.\" Joel explained. \"So the fact that he was not in control is really not the issue. He shouldn't have allowed himself to lose control in the first place. Even you, Ryan...you knew he wasn't in control of his actions.\" Joel pointed out softly. \"And yet that didn't make him any less guilty in your eyes.\" Joel could have bet his last cent that Ryan hadn't even forgiven Jeremy for what he'd done to him. He didn't blame him though.\n\n\"But I'm no god.\" Ryan rasped. \"I'm only human.\"\n\n\"Well, Luna did show some mercy.\" The elderly man said. \"Ideally, Jeremy would have been stripped of his alpha status. He did that to none other than his mate, Ryan. And as Alpha, he has to lead an exemplary life. The only reason his alpha status wasn't stripped was because Luna took into consideration the fact that his Ojah power was in control. But he can't go unpunished.\"\n\n\"This is all my fault.\" Ryan gasped. \"If only I'd tried harder to forgive him...\"\n\n\"It wouldn't have changed anything, Ryan.\" Gloria said, squeezing Ryan's hands which were clasped in hers. \"He's not only being punished for what he did to you. It's also for hating Luna's choice as Joel rightly explained. We just have to accept it.\"\n\n\"What exactly is going to happen to him at this...place?\" Ryan couldn't even bring himself to mention the name.\n\n\"He will relive every hell he's ever gone through, again and again.\" Gloria whispered. \"It's like a never-ending loop. And he's going to feel the pain a thousand times over.\"\n\n\"Oh my god.\" Ryan's hand went to his mouth. Thanks to his wolf he knew the kind of hell Jeremy went through each time he thought about the death of his father and brother. \"His father and...\"\n\n\"Oh there's more.\" Gloria breathed. \"That day, he'd gone on a rampage and killed lots of hunters. Some innocent bystanders had lost their lives when the hunters tried to shoot at Jeremy. Although he hadn't pulled the trigger, he's never forgiven himself. All the tragedies that have befallen this pack members and the pain he went through during each... What he did to you...\"\n\n\"Jesus!\" Ryan felt sick.\n\n\"I'm so scared.\" Gloria sobbed. \"People don't usually survive the Fort.\"\n\n\"That boy is strong Gloria.\" Joel soothed. \"He'll be okay.\"\n\n\"But who told the council?\" Ryan's eyes welled up. \"How did they know?\"\n\n\"They didn't.\" Joel answered. \"Luna just decided to pick today to...\"\n\n\"But they must know that sending him away is punishing me too.\" Ryan groaned.\n\n\"He's been permitted to give you his mark before he leaves Ryan.\" Gloria said. \"To keep you safe.\"\n\n\"That won't change anything.\" Ryan growled. \"I can't be without him. I should be allowed to go with him.\"\n\n\"Oh Sweetie...\" Gloria gave a tremulous smile. \"Your pain will be taken away. You will miss him but that pain... the kind you felt when he didn't come to see you for a while during your hospitalization, will be taken away. You'll be fine.\"\n\n\"No I won't.\" Ryan rasped, his cheeks wet with years. \"And at what point was all this decided? I was right there.\"\n\n\"Though we were not part of the channeling, Gloria and I could listen in because we were linked to the council.\" Joel explained. \"Jeremy was given one wish. He could have asked for anything...even for his punishment to be waived. And it would have been.\" The elderly man looked angry. \"It was almost as if he welcomed the punishment.\"\n\n\"When people are asked to make a wish when faced with punishment, they usually can't wish the punishment away.\" Ryan pointed out quietly.\n\n\"That's the human world.\" Joel countered. \"We are supernatural beings. Jeremy is a powerful being and Luna, though angry at his actions, knew he wasn't completely responsible for all. That punishment would have been waived if he'd pleaded his case and asked for that and he knew it. He could have pleaded and asked to be spared and Luna would have spared him. Hell, he could have even asked for a reduced sentence. But all he could think about was you. He said he wanted you to be safe. Said something about you not being comfortable with bodyguards. So his wish was to be permitted to mark you. That is the surest way to keep people with evil intentions away from you. And with that, you can move around freely without someone shadowing you. He got his wish.\"\n\nRyan stared at Joel with his face as white as sheet. Despite the way his heart pounded within his chest, he felt numb all over. The roaring in his ears was so loud it felt like he was about to explode. He gently withdrew his hands from Gloria's, opened the car door and got out. \n\n\"Ryan...\" Gloria called but the door shut behind a physically trembling Ryan.\n\nHis focus was on the huge office building where he knew his mate was.\n\n***\n\n\"I can't believe they got Sasha.\" Jeremy muttered. The Russian alpha was one of the oldest and strongest alphas on the planet, and his boss. So to think anyone had succeeded in kidnapping him in the first place was rather strange.\n\n\"Like I said, the very toughest alphas are the targets.\" Paige sighed. \"I just hope Sasha lives. He's in a really bad shape Jer. Agyemang was really lucky to have escaped before the psychos started draining him. The others weren't so lucky. They seriously think you're next, Jer.\"\n\n\"Well, they have to show up today or miss me for two years.\" Jeremy drawled. \"Blood and bone marrow huh? Who the fuck are these people? And what are they up to? At least now we have an idea where they're located. Please be careful when you go on the mission. I don't want to lose any of you.\" Jeremy said seriously. All the top warriors in the various packs were to meet and go after whoever was kidnapping and maiming powerful alphas. The alphas were usually returned dead or half dead as their blood was usually virtually drained. \"Fuck.\"\n\n\"They must be a very determined bunch.\" Stan said. \"I mean if they were the same people who made you go psycho all those years ago during the alpha conference, then they sure are coming back stronger and better now. This is war.\"\n\n\"Obviously taking all of us out hadn't worked at that time so now, their strategy is to take us one by one.\" Jeremy sighed. \"I really wish I would be here to help but I know...\" He trailed off when Ryan burst into the conference room with his face wet with tears. \"Ryan?\" Jeremy felt his heart drop.\n\n\"Why did you do it?\" Ryan whispered, coming towards a gloomy-faced. \"Why did you use your wish on me?\" He began to sob. \"Why?\"\n\n\"Oh Ryan.\" Jeremy sighed as he automatically started towards his sobbing mate. \"Please don't do this...\" Jeremy pulled Ryan into his arms. \n\n\"You could have asked to go with me.\" Ryan sobbed. \"You could have pleaded your case. Why didn't you tell her to waive the punishment?\" He was crying so hard. \"It was a wish damnit. You could ha...have asked for any...anything. Anything Jeremy. Why didn't you...didn't you just...ask to be spared?\"\n\n\"Ryan I deserve to be punished.\" Jeremy whispered shakily, feeling his eyes fill with tears. Fuck, he couldn't break down there. Not in front of his people. He was their alpha and therefore couldn't show weakness in front of them. But he could feel himself crumbling. Jeremy buried his face in Ryan's hair. \"Baby please, don't let us do this here.\" He whispered shakily. \"Please.\"",
        "But Ryan was weeping so hard he didn't even hear Jeremy's whispered plea. \"You could have saved yourself.\" Gut-wrenching sobs racked his body. \"I c...can't sur...survive this, Jer.\"\n\n\"You'll be okay.\" Jeremy choked.\n\n\"How do you expect me to be okay when...when you're going through so much pain? Do you think that little of me? Strip me of all this supernatural crap and I'd still go crazy at the thought of you in pain. So don't you dare tell me I'll be okay 'cause I won't.\"\n\n\"I'm an alpha, Ryan.\" Jeremy didn't even feel the wetness on his own face. \"What kind of example would I be setting if I don't accept punishment when I make mistakes?\"\n\n\"But it wasn't you.\" Ryan felt as if his heart was breaking. \"Everyone who knows about it knows it was not your fault. Didn't you think about your pack at all? Don't you think your pack needs you? How about me? How am I to live without you? What have I done to you to deserve this Jeremy? Please let me know and I'll apologize. What wrong have I...\" Ryan was sobbing so hard he couldn't even speak again. He just bawled his eyes out.\n\nSeeing his mate break down so completely and pitifully in his arms was Jeremy's undoing. \"You've done noth...\" He started to say shakily but the words got stuck in his throat. The alpha couldn't hold back anymore. \n\nAnd right there, in the conference room, in front of his three best friends, his mother and Joel, the alpha collapsed onto his knees with his sobbing mate in his arms and wept like never before. Gloria, Joel and Paige sobbed too. Stan had his forehead against a pillar, with his body so tensed up it looked as if he was about to explode. Philip just stared at his best friend and alpha with undisguised helplessness, his eyes red from unshed tears. The beta obviously didn't know what to do as he'd never seen Jeremy in that state before. \n\nAfter what seemed like hours, Joel went to pull Jeremy up. The alpha's arms remained around Ryan who kept taking deep breaths to try and bring down his heart rate. \n\n\"You have to go home son.\" The elderly man urged. \"I'm sure Philip, Stan and Paige can handle things here. Come on, I'll take you.\"\n\nJeremy could only nod. He wiped his and Ryan's faces with tissues that Philip gave him and then turned to follow Joel out of the conference room. In the car and on the elevator ride, Jeremy didn't remove his arms from around Ryan even once. And when they got out of the elevator, they automatically turned towards Jeremy's suite. At the door, Jeremy programmed Ryan's thumbprint into the system to enable him enter his suite whenever he wanted to. And inside the suite, the two men stripped to their boxer briefs and got into bed where they just held and breathed each other in. There was so much each man wanted to tell the other but neither said anything for hours. \n\n\"Hungry?\" Jeremy finally asked but Ryan shook his head, no. \"You still owe me a run.\" He croaked. \"We had a date remember?\" Ryan nodded. \"We were to go yesterday but you picked my mother over me.\"\n\n\"I'm sorry.\" Ryan finally whispered. He hadn't known the day before that he was going to go for years without Jeremy. He'd taken him for granted. And now... Ryan started crying again. \"I'm so so sorry Jer.\" \n\n\"Hey, come on.\" Jeremy crooned, pressing a kiss to Ryan's forehead. \"I didn't mean to upset you. You can pick that old woman over me any day.\"\n\nRyan tried to laugh but what came out was a sob. \"Oh my god, I'm so sorry.\"\n\n\"This is not your fault, baby.\" Jeremy said softly. \"And I will be very angry if you blame yourself. I disrespected Luna and in effect, sealed my fate.\" He said quietly. \n\n\"No, you don't understand.\" Ryan said shakily. \"You accepted that punishment because you're on a guilt trip. And I put you there...\"\n\n\"Ryan...\"\n\n\"I'm so sorry Jeremy.\" Ryan wept quietly. He was convinced that in a way he'd pushed Jeremy to accept that punishment. Reminding Jeremy of how badly he'd treated him any opportunity he got, and never really making any effort to forgive him would easily make Jeremy want to atone for his sins. \"I tried not to. I really did. But...\" \n\n\"Hey, listen to me.\" Jeremy took hold of Ryan's chin and tilted his head back to see his face. \"I know what's right and what's wrong. So I know I deserve to be punished. This is on me, not you. Never think it's your fault. How about that run?\" Jeremy asked softly and waited till Ryan gave a shaky nod, then he got off the bed and went to the closet to pull on shorts and t-shirt. He took same to Ryan who had his head buried under a pillow, sobbing quietly. \"Come here Ryan.\" Jeremy pulled his sniveling mate to him and quickly dressed him up. \n\nThen the alpha and his mate finally went on their planned first date. \n\n***\n\n'Isn't there any other way?' Ryan's wolf murmured, snuggling closer to the alpha. \n\nThe alpha and his mate were enjoying the peace and fresh air near a stream after running, hunting and running some more. The red wolf sighed and licked at the muzzle of his mate. He didn't have to ask what his mate was talking about.\n\n'I have to do this Ryan.' Jeremy prayed his mate would understand. \n\n'I'll miss you.' Ryan whined. 'I'll more than miss you, Jer. I don't know how I'm going to endure your absence.'\n\n'You'll be fine.' Jeremy closed his eyes, hiding the pain he knew was reflected in there. He wanted to spare Ryan that. 'You have Gloria...and all the others who have access to my suite.' He tried to be humorous but failed. \n\n'Jeremy...'\n\n'Don't think about it.' Jeremy whispered nuzzling Ryan's cheek with his wet nose. 'We have the rest of today and the whole of tomorrow. Let's make the most of it. No negative thoughts. Promise me.'\n\n'I can't promise that.' Ryan growled.\n\n'Listen baby,' Jeremy began softly, 'my whole stay at the Fort is going to be filled with painful memories. Now, if we try and enjoy being with each other, maybe...just maybe, I'll get lucky and enjoy snippets of these memories at some points. Please Ryan. I know it's going to be difficult not to think about what's coming but...let's try.' He whispered. 'Can you do that for me?' \n\nBut instead of answering that question, the white wolf let out a loud pitiful howl which forced a painful growl from the alpha. The alpha felt a physical pain within his chest at his mate's sad howl but didn't stop him. He knew that the wolf needed that. It needed to somehow let out its misery. And the best way for a wolf to do that was howl its pain to the world. There were answering howls from three wolves who although were with them in the woods, maintained a respectful distance. Jeremy was grateful to know his friend were there for them despite the fact that they virtually had a war on their hands. They were the best. They were hurting just as Ryan was. If it weren't for his mate, Jeremy would have been with Philip, Stan and Paige at that miserable point in his life. But he knew his friends understood. The alpha cuddled even closer to his beautiful howling mate, waiting patiently for those sad howls to end. \n\nWhen Ryan eventually quieted down, he turned to face Jeremy and asked shakily; 'Is there any...witchery...magic...spell that can be done to put me to sleep? So that I wouldn't feel your absence?'\n\nJeremy's breath hitched in his throat at that question. 'Ryan... There's no such spell. And even if there was, you can't put your life on hold for me.'\n\n'I don't have a life without you.' Ryan growled, suddenly angry. 'Can't you understand that?' He stood up and began to walk away. 'I can't do this. I can't...' And with those anguished words, Ryan began to shift back into human. Then he just collapsed onto the ground and began to sob uncontrollably.\n\nThe alpha immediately shifted and went to cover Ryan with his body, making sure he didn't put his full weight on him. He held Ryan as he sobbed, feeling his own heart break. Did he do the right thing by accepting his punishment, Jeremy asked himself as he rocked Ryan. Should he have simply pleaded his case and promised not to question Luna again? Should he have insisted on another form of punishment which wouldn't have taken him away from his mate? Over the years, he'd come to know just how much his being an Alpha with Ojah powers pleased Luna. Hell, it had been said in numerous circles how Luna saw him as her best creation yet. Yes, Luna would have listened to him if he'd asked to be spared. But Jeremy knew it wasn't right. As alpha and leader of his people, he had to do the right thing. The fact that his pack didn't know what he'd done didn't really matter. It was honorable to accept one's punishment no matter how bad it was. Especially so when that individual knew he deserved to be punished. Jeremy knew that there was a high probability that he was going to die but as far as he was concerned, Luna had in fact been lenient with him. It was rather unfortunate that Ryan had to go through all that sadness but...if even he, wanted him dead at a point for what he'd done to him, then how much more Luna, who he'd disrespected with his actions. She was a god for fuck's sake. She should have smote him months ago.\n\nRyan must have cried for about thirty minutes straight. Jeremy just held and rocked him, not knowing what to say. Somehow nothing sounded appropriate. They were so much locked up in their grief they didn't even know what was going on around them. They didn't feel the danger when a stubborn lover managed to escape her family and came into the woods to challenge Ryan. Neither did they see how Paige's wolf tore out the challenger's throat without blinking. The alpha and his mate were in a world of their own...a world filled with anguish and misery. \n\n\"Can we go back please?\" Ryan finally asked shakily. \n\nJeremy turned him onto his back and stared down at him. He could feel the calmness within Ryan. It was good he'd allowed him to let out his emotions for as long as he wanted. \n\n\"Tell me you're okay?\" Jeremy whispered, rubbing at Ryan's cheeks.\n\nRyan let out a shaky breath. \"I can never be okay.\" He sighed. \"But I feel a little better.\"\n\n\"How's your wolf?\"\n\n\"Going crazy.\" Ryan sighed. \"Better than before though.\"\n\n\"Good.\" Jeremy got to his feet and pulled up a drained Ryan. \"Let's go take a hot shower.\"\n\n***\n\n\"What now?\" Ryan asked quietly, his voice still weak and broken from crying so much. \n\nThey were lying naked on the plush white rug in Jeremy's suite. Ryan played absentmindedly with the hairs around Jeremy's nipples. They'd taken a long hot shower, bathing each other's bodies till they felt refreshed. Then they'd decided to relax on the rug in the living area instead of getting into bed. All the lights had been turned off in the suite. The only source of light came from the sixty-four inch LED on the wall, which had been left on a music channel, with the sound very low. \n\n\"Now, I mark you.\" Jeremy said softly.\n\n\"You mean you carry out your wish.\" Ryan muttered with a slight frown.\n\n\"Hey.\" Jeremy whispered, moving to lean over Ryan. \"At least Luna granted me a wish.\" He gently combed his fingers through Ryan's hair. \"Why don't you grant me one too? By ignoring everything and just...being with me. I'd really love that.\" Jeremy leaned down and captured Ryan's lips in a sweet kiss. \"Very much.\" He murmured against his lips when he released them. \n\n\"You really think I can do that?\" Ryan murmured.\n\n\"I know it will be difficult but I'd be grateful if you could.\" Jeremy dropped a kiss on the tip of Ryan's nose. \"You see...apart from the fact that I hate seeing you sad, seeing you miserable...especially after I mark you, will mess me up.\" He kissed each eye. \"I just might rebel when it's time to go, if I think you're in too much pain. It won't be pretty.\"\n\n\"You're not going to cause any chaos.\" Ryan said softly. \"I won't let you.\"\n\n\"Oh baby, I won't even get the chance.\" Jeremy's chuckle was without humour. \"It won't even get there. Luna will...\" He gave a deep sign. \"Let's just say I'll be history.\"\n\n\"She wouldn't dare...\" Ryan gasped.\n\n\"No one defies Luna, baby.\"\n\n\"The bitch.\" Ryan hissed.\n\n\"Hey, don't.\" Jeremy chastised Ryan with a slight shake of his head, always the alpha. \"Don't be angry at her. This is all my fault. I fucked up. And I'm so sorry.\"\n\n\"Alright, alright...no negativity.\" Ryan sighed. \"Let's just...enjoy the time left.\" He rolled his eyes, making Jeremy laugh. \"But you have to make me a promise.\" Ryan said quietly.\n\n\"Anything.\" Jeremy's gaze locked on his mate's.\n\n\"Promise me you're going to survive this.\" Ryan had never sounded more serious. He clearly remembered Gloria saying that people didn't usually survive the Fort.\n\nJeremy's eyes widened. Yes, he was determined to survive but he couldn't promise that. He definitely didn't want to promise his mate and then break the promise. Two years was an awful long time for anyone to survive the fort. He had to be real. The alpha gave a deep sigh.\n\n\"I promise to try.\" Jeremy whispered.\n\n\"Not good enough.\" Ryan growled. \"Swear it! Give me your oath.\"\n\n\"Ryan...\"\n\n\"It's the only thing I'm asking of you, Jeremy.\" Ryan's eyes flashed. \"Let me know you have the will. You owe me that.\" He growled, a myriad of emotions swirling in his eyes...desperation, frustration and anger.\n\n\"I promise Ryan.\" Jeremy kept his voice low and soothing, using his best calming tone. Ryan was getting worked up and he didn't want that. \"I promise to come back to you.\" The alpha vowed. \"I promise on my soul. Okay?\"\n\nRyan could tell from the look in Jeremy's eyes that he meant what he'd said. In order to survive anything, a person first of all, needed to have the strong will to survive. And that was all Ryan wanted from his mate. He felt himself instantly calm down. \n\nRyan nodded. \"Thank you.\" He murmured and then leaned up to take Jeremy's lips in a hot kiss.\n\nRyan told himself not to think about what was coming as he kissed his mate senseless. He needed to give his mate what he'd asked for. He could do that, Ryan told himself. With that resolution made, he threw himself into the kiss. He couldn't get enough of Jeremy's sexy mouth. Ryan couldn't believe he was going to be deprived of their sweetness for two whole years. Well, he had them now didn't he? He kissed Jeremy as though it were his last time. By the time the two came up for a much needed air, Jeremy was on top of Ryan, and both were rock hard. \n\n\"Shit.\" Jeremy groaned as he rubbed his hardness against Ryan's in a wickedly slow grind. \"You feel so fucking good.\" He moaned, staring down at Ryan with glazed eyes. \"Your lips are so soft.\" He whispered. \"I love your eyes. Their colour makes me go crazy for you. Fuck, we have to stop this.\" Jeremy groaned, leaning his forehead against Ryan's. But his hips didn't stop their movement against Ryan for even a second. \"I'm only supposed to mark you and nothing more.\" He took Ryan's mouth again before he could respond.\n\nRyan was in another realm. He slid his legs around Jeremy and twined his ankles together on his lower back. In that position, Jeremy's heavy balls rubbed against his exposed hole with every movement of his hips. Ryan gasped into the kiss, his face flushed with arousal. \n\n\"Fuck...\" Jeremy tore his mouth away with a whimper and buried his face against Ryan's neck. \"Ryan please...\" The alpha pleaded brokenly, his whole body trembling with the intensity of his need. \"We can't...\"\n\n\"Yes, we can.\" Ryan breathed, pushing Jeremy's head up to gaze into his dazed blue eyes with his own lust-filled ones. \"I only get to be marked once. I want this to be as memorable as it can be.\" He licked at the corner of Jeremy's mouth, drawing a tortured moan from the alpha. \"Since we're granting wishes, why don't you grant mine?\" He licked from Jeremy's mouth to his ear.\n\n\"Ryan...\" But Jeremy lost his train of thought when Ryan began to swirl his wet tongue along the shell of his ear. \"Oh God... Listen to me Ryan...\"\n\n\"No, you listen to me.\" Ryan growled as he rolled them so that he was on top of Jeremy. \n\nIf it had been any other person, Jeremy would have been pissed off because it was a clear challenge. But the sexy man looking down at him was his mate. And Jeremy loved how in control he was that very moment.\n\n\"Gloria told me you were going to mark me during sex...\"\n\n\"That's during the ceremo...\"\n\n\"Shut up Jeremy.\" Ryan said dryly. \"Sorry to bring this up now but the last time you bit me...let's just say I'd rather forget.\" He ignored Jeremy's mortified groan. The alpha's eyes fluttered close. He was obviously trying to hide his shame. \"Look at me Jeremy.\" Ryan said softly and waited till his mate opened his eyes. Then he leaned down and gave him a quick kiss. \"As I was saying...and got rudely interrupted...\" Ryan loved the smile that appeared on his mate's handsome face at his words. \"Gloria told me how good that bite is going to be when you give it to me during...\"\n\n\"I can still make it good even if we don't...\"\n\n\"Did I tell you to speak?\" Ryan growled and almost laughed at the amused but admiring look on Jeremy's face. \"The way your mother described it... God, she has a way with words.\" He gasped, and then grinned when Jeremy rolled his eyes. That was so weird but adorable. \"Well, I want it. I want what she described. I'm not going to allow you to mark me any other way Jer. I want to feel everything. Call me selfish but...that's how it's gonna go. You get your wish by granting mine.\" Ryan watched as a shocked and obviously speechless Jeremy looked up at him. \"What? Cat got your tongue?\" He purred.\n\n\"Are you insane?\" Jeremy growled. He hadn't thought Ryan was serious till he'd given that condition. \"I have to follow the rules!\"\n\n\"Fuck the rules.\" Ryan snapped. \"It's not like you always follow them anyway.\" He drawled. \"Listen, he that is down needs fear no fall, right?\" He grinned. \"What's the worst that could happen?\"\n\n\"I know what you're trying to do.\" Jeremy said quietly.\n\n\"And what's that?\"\n\n\"You want to send me off with a...something nice. Sex. But you don't have to. Really.\"\n\n\"I don't know what you're talking about.\" Ryan's eyes lowered to lock on Jeremy's mouth. \"I want you Jeremy. Not once have I ever looked at you and not wanted to jump your bones. You know that.\" He murmured but his mate read right through him.\n\n\"I know you want me Ryan.\" Jeremy's voice softened. \"But just wanting me, wouldn't make you offer yourself to me as you're doing now. If I go ahead and have sex with you, you might regret it later. And that will crash me Ryan.\" Jeremy let out a deep breath. \"Listen, I know you try to tolerate me because of the mate pull. You can't fight that. I know. But I'll be a fool not to know how much you hate me deep down. It's only natural, taking into consideration how badly I've treated you. I understand. You don't have to do this.\"\n\n\"I don't hate you Jeremy.\" Ryan said quietly. \"Don't get me wrong. I'm still sickened by what you did. And I did hate you. God knows I did.\" He squeezed his eyes shut for a moment and then opened them. \"When I was a little boy...\"\n\n\"Are you seriously going to tell me a story right now?\" Jeremy looked incredulous.\n\n\"Will you just listen?\" Ryan groaned. \"When I was a little boy, I screamed for hours because my mum killed a spider on my bed. I thought that was cruel. I thought everything deserved life. Till I met you. I wanted you dead. You made me go to a place that I'd never known. A place of rage and darkness.\" Ryan rubbed his knuckles soothingly against Jeremy's cheek when he felt him tense up against him. \"I hope I never go to that place again. So yes, I hated you with a passion. I remember telling you too. So believe me, when I say I don't anymore. I wouldn't be this devastated at what's happening if I hated you as much as you think and you know it.\" Ryan said, getting off Jeremy. \"I want you to mark me whilst you're making love to me, Jeremy...as you're supposed to.\" He said as he moved towards the bed area. \"And I'm not taking no for an answer.\" He pulled open the bedside drawer. ",
        "Jeremy groaned and covered his eyes with an arm when he heard the drawer open. He knew what Ryan was looking for. What scared him was that he didn't think he had enough self-control to deny his mate what he was asking for. He'd gone too long without. Hell, his cock throbbed painfully even then, spitting out so much precum as if he was actually being stimulated. No, he definitely didn't have the strength to deny his mate. When he heard the sound of the tube of lube he usually kept inside his drawer land beside him, he uncovered his eyes and watched as his beautiful mate stroked his cocks slowly and sexily...as if he had all the time in the world. Captivated by the sight, Jeremy stared.\n\n\"Fuck!\" Jeremy breathed. He couldn't stop the shiver of arousal that rippled through him. He gazed up at Ryan with that feral hunger that always made Ryan's heart pound with desire. \n\n\"I want you to make this so good, Jeremy. I want you to savour the bliss that I know you're going to derive from it, and dwell on that when you reach your breaking point. I can't do anything to prevent the torture that you're going to endure. I wish I could. But I want this to be so good it will push through all that pain.\" Ryan stared into Jeremy's eyes with so much hunger and heat. \"Let's make our own memories.\" He finished in the sexiest voice Jeremy had ever heard.\n\nAnd oh what erotic memories they made! \n\n*\n\nJeremy started by kissing every inch of Ryan's body, paying close attention to all his sensitive spots. His taut nipples were tingling from the tongue bath Jeremy gave them. For Ryan, there was nothing sweeter than Jeremy's mouth. But it felt amazing not only for Ryan, but for Jeremy too. The lustful sounds pouring from Ryan was music to Jeremy's ears. He loved the fact that his mate loved his touch. \n\n\"So perfect.\" Jeremy breathed, his voice low and so sexy.\n\nThat voice and that compliment sent warm shivers of delight through Ryan. Although a part of him slightly dreaded sex with Jeremy, he was determined to forget about his fears and simply enjoy his mate's sensuous attentions. He trusted that Jeremy wouldn't hurt him. He wouldn't have asked for it if he'd thought otherwise. Ryan completely let himself go. \n\n\"Sweet Lord...\" Ryan gasped when Jeremy took his balls into his mouth. \"Damn...\" It felt so amazing.\n\nEvery spot Jeremy touched sent a delicious sizzle through Ryan. He knew exactly what Ryan wanted...knew were to touch and how hard or gentle Ryan wanted that touch to be. They were completely in sync with each other because before Jeremy began, he'd asked Ryan to let down his mind barrier.\n\n\"I want to be able to read you.\" Jeremy had informed Ryan. \"I need to know you're okay with whatever I do.\" \n\nAnd whatever Jeremy was doing to Ryan's balls that very moment felt so good he couldn't even think. When he felt Jeremy move up to slowly lick across the leaking tips of his cocks, Ryan almost lost it.\n\n\"Fuck.\" Ryan clenched up all over, gasping in shock. The warm wetness over his sensitive slits felt heavenly. Then Jeremy began to suck hard on both leaking cocks, sending Ryan into an instant meltdown. He came completely undone. \"Jeremy!\" He cried as he erupted into Jeremy's warm mouth, the shock of the orgasm rippling through his body from head to toe. \"I'm sorry...\" Ryan gasped even as his body writhed. He knew he should have alerted Jeremy that he was about to blow, to enable him get off his cocks. And he would have done exactly that if his orgasm hadn't taken him by surprise. \"I'm so sorry I didn't...oh fuck...\" He bucked when he felt Jeremy move down to engulf more of his cocks with his warm mouth. \"Jer...\"\n\nWith determination that surprised himself, Jeremy sucked on Ryan. The taste of Ryan's cum sent his senses reeling. He wanted more. Thanks to his wolf genes, he had the ability to make his tongue even rougher to give Ryan maximum pleasure. Jeremy knew firsthand how mind-blowing it felt to have a rough tongue on ones cock. The ecstatic sounds falling out of Ryan said it all. Ryan was in rough-tongue heaven.\n\n\"Christ.\" Ryan gasped brokenly, his hands moving down to hold Jeremy's head. Now he understood why men loved having mouths on their dicks. Jeremy's mouth on him felt rapturous. \"F-feels so amazing.\" Ryan moaned breathlessly. But suddenly... \"Jeremy...\" Ryan cried out and jackknifed upward. \"What are you doing?\" His shocked gasp couldn't mask the pleasure in his voice however. \n\nBut Jeremy held him tight, not letting him go. Neither did he stop flicking that wicked wet tongue against Ryan's twitching hole. And when he stiffened his tongue and started slowly pushing it into Ryan's puckered rosette, he almost passed out from sensory overload.\n\n'Oh god, how's he even able to do that?' Ryan asked himself unconsciously, loving the feel of that gloriously soft but surprisingly firm flesh flicking in and out of his hungry hole. \n\n'We're wolves baby.' Jeremy immediately answered through their mind-link even as he kept Ryan happy with shallow thrusts. He could taste the lemon scented soap Ryan had used. He tasted so clean and sweet. 'Our tongues are not like that of humans. You should know that.'\n\n\"Fuck, fuck, fuck....\" Ryan moaned as his back arched in wanton bliss. \"God, Jeremy...\" With a sharp jerk of his body, Ryan moved away from Jeremy and turned around so fast he left Jeremy stunned.\n\nThen Ryan's mouth was on Jeremy's, his tongue plundering in to dual with Jeremy's. They fought for dominance but the alpha won of course. He maneuvered their bodies till he was on top of Ryan, his leaking mammoth cock thrusting against Ryan's wet hole.\n\n\"Need you, Jer.\" Ryan tore his mouth away long enough to gasp. Then he was eating at Jeremy's mouth again, thrusting almost frenziedly against him.\n\nJeremy ended the kiss and looked down into Ryan's passion-glazed eyes. The alpha knew he wanted this; his hunger for his mate was like an uncontrollable force within him. But he was also scared. Scared he was going to fuck up, scared he was going to hurt him, scared he was going to remind Ryan of the pain he'd unleashed on him weeks earlier. What if Ryan panicked when he finally attempted to penetrate him? What if he was reminded of that pain all over again? If what he was about to do triggered any negative reaction from his mate, Jeremy knew he wouldn't be able to take it. Especially not at that particular moment in his life. He had enough regrets in his life. Every muscle in Jeremy's body was strung so tight, he thought he might snap. \n\n\"Jeremy?\" Ryan whispered shakily, reading the fear and uncertainty in the alpha's eyes. \"I want this, baby.\" He reached up and caught Jeremy's face between his hands. \"It's okay. I'm okay. No negativity, remember?\" He gave a tremulous smile. But Jeremy couldn't even return the smile. Ryan saw the struggle his mate was going through and suddenly felt guilty for pushing him. \"Hey, you don't have to if...\"\n\n\"Yes, I do.\" Jeremy's breathing had changed, becoming more ragged. \"If you crave something, I have to give it to you no matter the cost, Ryan.\"\n\n\"Jer...\"\n\n\"Shh...\" Jeremy reached for the lube, his eyes never once leaving Ryan's. He squeezed a generous amount into his palm and began to slowly slick himself up. \n\nRyan's eyes dropped to the movement of Jeremy's hand and couldn't suppress the heated moan that tore out of his throat. Damn, the guy was fucking huge. Ryan couldn't take his eyes off the drop of clear fluid that oozed from the slit...almost like a teardrop. Saliva pooled in his mouth.\n\n\"Fucking awesome.\" Ryan breathed with wonderment, making Jeremy chuckle despite himself.\n\nThe sounds that Jeremy's hand made from the act of coating his hardened flesh was so erotic Ryan unconsciously licked his lips. His arse ached with surprised longing as he watched his mate stroke his thick length. That massive cock, which was darker than the rest of Jeremy, was slick, wet and so hard, huge veins stood out along the length. The man had a beautiful organ, Ryan couldn't help but think as he stared at the huge head with its leaking slit. He didn't think he'd seen anything so blatantly erotic in his entire life.\n\n\"Fuck...\" A whisper. But it conveyed exactly what Ryan felt at that moment. He was awed.\n\nJeremy moaned low in his throat as he watched Ryan watch him stroke himself. What he saw on that face wasn't fear. It was unadulterated lust. Ryan's eyes were heavy-lidded with desire, his mouth parted sexily with his breath coming out harshly. To Jeremy, he was like a wet dream. He couldn't resist leaning down to press a kiss against those kiss-swollen lips. And with his lips still locked with Ryan's, Jeremy squeezed more lube and began to slick Ryan up with a finger. He was already wet, thanks to that delicious rimming he'd given him. So Jeremy had no resistance entering that hot channel at all. Soon he had three fingers scissoring in and out of Ryan, stretching him...opening him up for his cock.\n\nRyan moaned into the kiss. He couldn't remain still. He rocked his hips against those fingers, loving the feel of them inside him. He opened his legs wider, willing Jeremy to go deeper. Ryan wanted Jeremy to touch that spot again...that spot that caused his insides to melt as if he was butter under the sun. But Jeremy wouldn't. \n\n'Jeremy please...' Ryan pleaded on their mind-link, arching upward, needing more...seeking a deeper contact. 'Go deeper, Jer.\" He drew his knees high and wide and rotated his hips but still couldn't get those fingers where he wanted them. \"Jeremy, come on...\" He tore his mouth away from Jeremy's to growl.\n\n\"Soon baby. Soon.\" With that Jeremy leaned down and latched onto a taut nipple just as he added a fourth finger. He wanted to make sure that Ryan was opened enough to take him.\n\n\"Fuck...\" Ryan cried out at the sensation of his nipple being tugged between Jeremy's teeth and that blissfully full feeling in his arse. His eyes fluttered shut against the sensations. He felt only pleasure and nothing else. Then he felt the fingers leave his body. \"Please don't stop.\" He groaned. \"Please don't...\" But his words were swallowed by Jeremy's mouth when he claimed his lips in another kiss. \n\nJeremy began to slowly rub the slick wide crest of his cock against Ryan's equally slick hole, but he didn't push in. He simply rubbed, letting Ryan know that he was ready and waiting. When Ryan's lustful whimpers increased, Jeremy released his mouth and looked down at his closed eyes.\n\n\"Look at me Ryan.\" He whispered huskily and waited for Ryan's eyes to open. \"All you have to do is say the word and I'll stop.\" His voice was shaky, and more savage than Ryan had ever heard it.\n\n\"I know.\" Ryan whispered shakily. \n\nAnd with their gazes locked on each other's, the alpha began to slowly push into his mate. Despite being very slick and well opened, there was a slight resistance. Ryan's breath came out harshly, his eyes dilated. Jeremy groaned as sweat instantly broke out across his forehead. For the very first time in his life, the alpha cursed the size of his cock. The last thing he wanted to do was hurt his mate. He began to pull out but Ryan spread his legs wider and raised his arse, causing Jeremy's engorged crown to slide forward through his resisting ring. \n\n\"Ahhh...\" Ryan gave a long moan as his head tilted back on the rug, exposing the creamy column of his throat, the act calling to the alpha to sink his teeth into that flesh...claim him.\n\n\"Fuck.\" Jeremy almost flew apart at that sight. His eyes glowed amber. He could feel his wolf right there at the surface. \"Ryan...\" His breathed huskily.\n\n\"Keep going...\" Came the breathless response. \"I'm okay.\" His eyes fell closed.\n\nJeremy wanted to tell Ryan to keep his eyes open but he didn't. He pressed forward with agonizing slowness, stretching the quivering muscles surrounding his girth. His breath wrenched from his lungs at the exquisite heat that engulfed him as he sank into that sheath. Ryan's arse was fucking nirvana, Jeremy thought with a look of utter reverence on his face. By the time he pushed all the way in to the hilt, the alpha was shaking so hard. \n\n\"Oh God.\" Jeremy breathed shakily as his own eyes fluttered close despite himself. Every bone in his body had melted. He could barely think beyond the rushing of blood in his ears. Hell, he couldn't even read Ryan. He took deep breaths to calm himself. Ryan was his number one priority. He needed to know his mate was okay. \"Talk to me baby.\" Jeremy almost sounded as if he was praying. \n\nRyan opened his eyes. He was filled and stretched to the point where he thought he just might explode. But surprisingly, he felt no pain. Rather, the pleasure that was assailing his senses at that particular moment was so overwhelming he just couldn't bring himself to speak. Unfocused green eyes stared up at Jeremy. The look in those eyes said it all but the alpha still needed to know. Jeremy managed a weak smile for Ryan as he tenderly brushed a tendril of hair off his wet forehead. \n\n\"Are you okay?\" The alpha couldn't recognize his own voice. That was how overcome he felt.\n\nRyan nodded and gave a breathy moan. \"I'm more than okay.\" He whispered, the dreamy softness of his voice exciting Jeremy even more.\n\nJeremy looked down between them and saw the load of clear liquid that had pooled on Ryan's stomach. Two thin strings of precum linked the slit of each rock hard cock to the precum on his stomach. Jeremy thought it was beautiful.\n\nA low whimper escaped Ryan at the feeling within. There was a buildup within him that was so intense it was almost scary. But he wanted to reach for it. He wanted that explosion he could feel coming. He yearned for it.\n\n\"Are you going to start moving anytime soon?\" Ryan finally asked softly, instinctively knowing that Jeremy was only giving him time to get used to having him within his depths. \n\nWhat Ryan didn't know was that not only was Jeremy waiting for him to adjust, but he was also trying to stop himself from completely losing it and embarrassing himself. Hell, he'd gone without for weeks. Everything that had been accumulating inside of him over the past weeks had all converged inside his cock and was about to explode. He needed to regain some control or everything would end before it actually began. He had to give Ryan another orgasm at least, before he finally let go. Jeremy lowered his lips to Ryan's ear, nuzzling the soft, sensitive shell.\n\n\"Do you want me to?\" His voice sounded strained.\n\n\"Oh god.\" Ryan gasped as a delicious shiver spiraled up his spine. Jeremy's voice in his ear...his tongue...fuck. \"You're supposed to, aren't you?\" He gasped, trembling beneath the alpha.\n\n\"I am...\" Jeremy's lips moved down, grazing the sensitive spot on Ryan's neck with his lips. \"But I'm waiting for you to tell me when to.\" He began to suck up a mark, sending a bolt of electricity throughout Ryan's entire body.\n\n\"Ahh, fuck Jer...\" Ryan moaned brokenly, thrusting up uncontrollably and causing that sweet spot to take a hard hit. He instantly went into a million pieces, screaming Jeremy's name as one cock erupted, shooting ropes of cum between them.\n\n\"Fuck...\" Jeremy breathed, looking down at his mate in amazement. What the fuck just happened, he asked himself.\n\nRaw sounds of pleasure vibrated from Ryan's throat as he writhed against Jeremy in blinding ecstasy. His neck arched as his senses overloaded. The sensations slamming inside him seemed to increase with each rapturous spasm. Ryan began to rock rhythmically against Jeremy even before his orgasm subsided, ecstatic cries falling unchecked from his lips.\n\n\"Ryan...\" Jeremy groaned as of its own accord, his hips began to move. He slowly slid out and then back in, his powerful muscles flexing and contracting against Ryan. \"Fuck...\" His eyes, which had been reduced to slits, stayed on Ryan's, his intent gaze more intimate than even the erotic love dance against Ryan's body. \n\n\"Oh my fucking god...\" Ryan gasped, his whole body shuddering. The feeling, as Jeremy began to thrust in and out was so exquisite he could do nothing but spread wider and let him go as deep as he could. What blew Ryan's mind was the look of absolute enjoyment on Jeremy's face. \"You're fucking hot.\" He breathed. \n\nBut Ryan couldn't focus on Jeremy for long. Soon his eyes rolled into his head as the cock inside him unfailingly began to nail that hyper-stimulated gland with each thrust from Jeremy. Cries of pleasure fell continuously from his mouth as he clutched at Jeremy's waist almost desperately, his legs moving up to lock around Jeremy's hips as if they had a mind of their own. \n\n\"You feel so fucking good baby.\" Jeremy murmured huskily as he worked that spot back and forth. \"So snug, soft and scorching hot.\" His mouth brushed against Ryan's parted ones as he thrust in a gentle rhythm that completely went against what he was used to. But the alpha loved the stark pleasure he saw on his mate's face so he maintained that gentle rhythm. If he had to be gently in order to see that orgasmic look on Ryan's face, he would die being gentle. \"Absolutely stunning.\" He whispered, his words and voice tantalizing every inch of Ryan.\n\nRyan was distantly aware of the helpless sounds spilling from his throat but he couldn't bring himself to stop. Not with that cock unfalteringly and relentlessly massaging that sweet tender spot inside him. He was shocked to feel the beginnings of another orgasm so soon after the two powerful unexpected ones he'd had. Hell, his blood had barely stilled from his last climax.\n\n\"Christ\" Ryan gasped and tightened up reflexively around that massive cock, drawing a growl from the alpha. Ryan had never felt that level of ecstasy in his entire life. His senses were completely lost in Jeremy's scent which not only surround him but also filled him possessively. The way Jeremy's eyes glinted down at him...with so much tenderness and something else he couldn't put him finger on, made Ryan's heart sing with a feeling of joy he'd never experienced. \"Jeremy, I'm...\" He tightened up even more.\n\n\"Fuck...\" Jeremy growled and threw his head back in pleasure even as he reached down to squeeze the base of Ryan's cocks, holding him at the precipice of his third orgasm. \n\n\"Oh shit...\" Ryan wanted to cry. \"Jeremy, what the fuck...\"\n\n\"Want you on your knees, baby.\" Jeremy growled, his brightly glittering amber eyes and dropped fangs alerting Ryan to the fact that his mate's wolf was right there with them. The alpha was ready to mark his mate.\n\nJeremy reached around his hips, unlocked Ryan's legs from around him, and then gently pulled out of him. He groaned when he saw the gaping hole his cock had left. He had to heal Ryan when he was done, Jeremy thought grimly as he drew Ryan up into his arms and gave him a quick, wet, openmouthed kiss. Then he turned him around and gently pushed him onto his forearms, leaving him completely opened to him. With one hand at the small of Ryan's back, holding him down, Jeremy slowly fed his cock back into the exquisite heat. Neither man could suppress his moan of pleasure. \n\n\"Holy shit...\" Ryan gasped at the sweet nerve-stimulating sensation of being penetrated, feeling that hard flesh fill him up. \"Damn, you're thick.\" He breathed when he felt Jeremy bottom out inside him. In that position, Jeremy was even deeper than before and that drove Ryan wild. \"Fuck!\"\n\n\"Are you okay?\" Jeremy husked, his eyes shut tightly against the mind-numbing pleasure he was getting from being that deep inside Ryan. \n\n\"Feels fucking amazing.\" Ryan moaned. He was going out of his mind with pleasure.\n\n\"Well, you don't only feel amazing, you are amazing.\" Jeremy whispered, folding himself over Ryan's back and dropping tiny kisses on the back of his neck. \"Brace yourself.\" He commanded in a voice harsh with lust. \n\nAnd that was when the real mating began.\n\nWith that hoarse command to Ryan, Jeremy stated fucking slowly but deeply into his mate, demanding his total submission. Holding Ryan teetering on the edge of his climax, Jeremy rode him hard and deep, stroking over and over and over that sweet spot inside Ryan that made him shake with unadulterated ecstasy. Ryan screamed at the controlled primal possession, the pleasure so intense his vision blurred. He couldn't believe how good it felt. He never wanted Jeremy to stop. ",
        "\"Ahhh...god, right there Jer...\" Ryan whispered shamelessly. He could always get mortified later but at that particular moment, he expressed exactly how he felt. \"This is so fucking good...\" He moaned as he rocked backward to meet each thrust, his thighs shaking with the power behind each thrust. He thought he could very well die from the pleasure of it. His dicks were rock hard and stuck against his belly as though that was their permanent position. \"So good...\" \n\nJeremy did exactly as his mate demanded. He fucked the shit out of him. Ryan didn't even notice exactly when he leaned forward and rested the side of his face on the rug. Not only was he totally open for Jeremy's deep and hard penetration, he was also in the most submissive of poses, which fired up his dominant alpha like nothing else. All Ryan wanted was to feel Jeremy moving inside him, driving him towards that explosion that hovered just beyond his reach. Nothing else mattered at that moment. \n\nWith a knee and a foot planted firmly on the rug, Jeremy fucked into Ryan hard, deep-dicking his mate relentlessly. Damn, being inside Ryan was like no pleasure he'd ever experienced. The sensations running through Jeremy were too intense and too different for him to articulate if he'd been asked to. The familiar tingle, when it came, wasn't just along his spine. It was all over his body. It felt as if he was about to fly into pieces. After watching his mate come twice, Jeremy's body was desperate for release. He knew he had to let go before he lost his mind. He'd definitely not expected himself to last that long after all the weeks of deprivation. Jeremy could practically feel his come traveling from his balls up into his cock. \n\n\"Oh shit...\" Jeremy gasped, willing himself to hold on for a moment. He could feel his balls begin to draw up. Under normal circumstances, he would have really drawn it out. But not now. What he felt was not the usual. He couldn't control it. His wolf was ready to take what was his.\n\nJeremy straightened, pulling Ryan up with him so that his thighs bracketed Ryan's. He remained deeply inside Ryan, his arms sliding across Ryan's belly as he pulled him back against the length of his hard body. Jeremy's darker skin contrasted so beautifully with Ryan's creamy one it almost looked like a work of art. Ryan was oblivion to how beautiful he looked against his mate though. All he could concentrate on was the pressure that was building everywhere...in his balls, his belly, inside his head... he was flooded with sensations. His head fell back against Jeremy's shoulder as he ground his arse onto Jeremy, working toward the orgasm he needed so desperately...driving the alpha out of his mind with bliss in the process. \n\n\"Ryan...\" The sound that ripped from Jeremy's throat was inhuman and savagely erotic.\n\n\"I need to come, Jeremy.\" He whimpered, hips gyrating frantically in a shameless, sweaty dance. \"Gotta come...please...\" He begged, seeking that elusive end.\n\nThere was something about Ryan begging whilst in the throes of passion that completely blew Jeremy's mind. He planted a tender kiss at the nape of Ryan's neck even as his fingers found and pinched his sensitive, taut nipples hard. His other hand moved down to grip Ryan's cocks and began to stroke him slowly, his slow deep thrusts never stopping for even a second. \n\n\"Holy fuck!\" Ryan's back arched, his head trashing from side to side on Jeremy's shoulder in blissful abandon. The combination of the pleasure of having his cocks stroked, the toe-curling stimulation of his prostate by that wicked cock, and the spark of sweet pain from his nipples drove him crazy. Loud cries which would have embarrassed him if he weren't that far gone on pleasure fell out of his lips as Jeremy's talented fingers and cock relentlessly worked their magic. Ryan couldn't resist the onslaught. \"I'm gonna come Jer. God I'm gonna...\" \n\nBut before Ryan could complete his sentence, Jeremy began to suckle at that sensitive spot between his neck and shoulder. His warm tongue licked the area, getting it ready for the bite. An intense wave of pleasure coursed through Ryan making him shudder. Fuck! He felt a change come over him...felt the being inside him right there at the surface. His senses magnified, the sensations within becoming even more intense. Ryan tilted his head, baring his neck to his mate. He suddenly needed that bite like he needed air. He felt Jeremy's fingers leave his sensitized nipples and move up into his hair to hold his head motionless, whilst the hand stroking his cocks, speed up. Ryan's brain short-circuited. The feeling inside was indescribable. \n\n\"Christ...\" A breathless whimper... But that was all the prompting the alpha needed. He struck. \n\nJeremy's long canines sunk deep into that tender spot in a painless hold that conveyed his dominance, ownership, possessiveness, admiration, respect and...love? Ryan's mind was instantly flooded with all the emotions Jeremy felt for him even as he felt the warmth of his mate's cum flooding him. Ryan was taken a little off guard by the emotion depicting love but he didn't even have the time to dwell on it. He was also oblivious to the fact that his mate's eyes had turned bloody red. He'd mated not only Jeremy and his wolf, but with his Ojah spirit as well. And that naturally meant three times the pleasure.\n\nThe raw euphoric rapture that slammed into Ryan was like nothing he'd ever experienced in his entire thirty-one years on earth. The world disappeared. He couldn't cry out, couldn't scream, couldn't make a sound. His mouth opened in a silent scream as for the first time ever, cum shot out from both cocks at the same time. Ryan watched in a trance-like shock as two ropes of cum continued to shoot up in unison. And they wouldn't stop. Surely he was bound to become dehydrated if the cum-works didn't stop soon, Ryan thought. Was it even normal? But then he was a werewolf. What was normal about that? His body jerked spasmodically in agonized rapture as his dicks kept shooting his load onto the white rug. Ryan was completely floored by the intensity of the sensual gratification within. He'd never come so hard in his life. Pleasure consumed him.\n\n*\n\nUnknown to the alpha and his newly marked mate, every mated werewolf in the pack house felt the urge to have sex with their mates at that very moment. Whilst every unmated werewolf who was of age, got as horny as fuck. Those who were in relationships quickly sought out their partners, and those who were not, hooked up with any available horny person. As for those who couldn't get together with anyone for one reason or the other...let's just say their hands were put to good use. It was a fuckfest!\n\n*\n\nBack in the alpha's suite, animalistic groans vibrated inside Jeremy's chest as he came violently, spurting scalding-hot cum repeatedly into his mate. The sweet release of tension after weeks of denying himself was almost too much to bear. But although he was completely lost in his own pleasure, Jeremy's eyes were glued to the shots of cum erupting out of his mate onto his hand and the rug. It was the sexiest fucking sight he'd ever witnessed in his entire life. And he'd seen some crazy shit. Seeing that only ramped up the erotic sensations within Jeremy, making him come even harder in fiery pulses. The alpha felt drunk on bliss. He waited till Ryan stopped spurting before pulling his fangs free. He licked the wound close with soothing licks of his tongue but the mark remained. Then the alpha latched onto the mark and started sucking softly on it.\n\nThe fourth climax hit Ryan in a helpless rush. This time he screamed Jeremy's name as he began to convulse in sheer ecstasy, the pleasure so sharp and unexpected. No cum came out, but it was just as intense.\n\n\"Oh god, please.\" Ryan gasped as he panted harshly. \"Jeremy...\" His whole body felt highly sensitized...almost as if he'd been electrocuted. He could feel himself vibrating. \"Are you fucking kidding me?\" He laughed shakily as he went lax against Jeremy. He felt utterly drained as the last spasm robbed him of all remaining strength. \"Oh god, I can't feel my limbs.\" He gasped, aftershocks still shaking and rattling his wrung-out body. \"What are you doing to me, Jeremy Stanton?\" Ryan asked breathlessly as he attempted to turn his body to face Jeremy. He wasn't able to manage even that. \"Help me, Jer.\" He groaned. But when Jeremy made to pull him off his cock, Ryan protested. \"I don't want you out just yet.\" He whimpered.\n\n\"That makes two of us.\" Jeremy said quietly as be moved back to lean against the couch. \"I love being inside you, Ryan. I never want this to end.\" He sounded so sad and regretful Ryan's heart tightened painfully inside his chest.\n\n\"Jer... No negativity, remember?\" Ryan said quietly as Jeremy managed to turn him around to face him without pulling out of him. \n\n\"Sorry.\" Jeremy muttered with a sad smile. \n\nIt was only after Ryan was fully facing him that Jeremy noticed how wet his cheeks were with tears. Knowing that they were tears of pleasure didn't stop the alpha's heart from pounding with worry though. But just as he was about to question Ryan, his blissed out mate closed the distance between them and captured his mouth in a fierce but sweet kiss. And what Jeremy felt from that kiss was so humbling it made his senses reel. He felt his mate's absolute acceptance of him and his complete surrender to him. The emotion that exploded within the alpha in that instant was so overwhelmingly euphoric he felt lightheaded. With a wolven growl he completely took over the kiss and ravaged Ryan's willing mouth, his tongue thrusting swift and deep. He felt as if he'd been given a precious gift.\n\nWhen the kiss ended, Ryan's body went limp against Jeremy's. He felt floaty and sated, his mind buzzing from the most amazing high. When he felt Jeremy's arms wrap around him, he sighed with contentment. The alpha buried his face against the mark on his mate and breathed him in deeply. To him, nothing and no one had ever smelt that good.\n\n\"You're mine, Ryan.\" Though the alpha made the claim softly, the emotion and power behind it didn't go unnoticed. \"And I promise to do right by you.\"\n\n\"You had better.\" Ryan purred, drawing a smile from Jeremy. \"And yes, I'm so yours.\" \n\n\"I'm yours too.\" Jeremy said and then finally gave in to the emotions swirling inside him.\n\nRyan could feel Jeremy shaking against him and could also feel the wetness on his neck but didn't stop Jeremy. The alpha deserved a free pass after what they'd experienced on that rug that evening. Fuck, it had been intense. After a while the alpha sniffled and raised his head to look at his mate. And that look made Ryan gasp with shock. Jeremy looked at him like he was worth the world.\n\n\"Thank you.\" Jeremy croaked. \"For accepting me despite all my flaws.\"\n\n\"Hmmm...\" Ryan wiped at Jeremy's face. \"Tell me, did you cry because it dawned on you that you're mine too? Or you...\"\n\n\"Fuck you Ryan.\" Jeremy gave a mock growl, making Ryan burst into laughter.\n\n\"You just did.\" He murmured almost shyly, his heavy-lidded eyes still filled with dreamy satisfaction. If someone had told him just a month earlier that he would be fucked in the arse by Jeremy and actually enjoy it, he would have probably slapped the person. And to make it even more surprising, he was crazy about the guy. To think he'd never even looked twice at another guy before Jeremy. Fuck!\n\n\"Was it okay?\" The alpha actually sounded nervous. \n\n\"Did you seriously just ask me that?\" Ryan asked softly, trailing his fingers down Jeremy's cheek, his eyes glinting with amusement in the faint light coming from the TV. \"There are no words for what just happened. Maybe the words are yet to be invented. For now, I'll go with phenomenal. That was...fuck!\"\n\nJeremy laughed softly, tenderly brushing Ryan's hair from his damp forehead. Soft blue eyes filled with reverence, looked into Ryan's which were still red from shedding so much tears that day. Then his eyes dropped down to Ryan's mouth, which was plump and red from all the kissing. Jeremy didn't think he'd seen a more beautiful creature.\n\n\"I'm glad you enjoyed it.\" Jeremy murmured. \"I never thought that level of feeling and ecstasy even existed. Thanks for showing me it does.\"\n\n\"You have no idea how thrilled I am that you got to experience that with me and not any of your...\" Ryan trailed off when Jeremy leaned in to claim his mouth again, effectively shutting him up. \"Okay, that shut me up alright.\" He gasped when his mouth was released. \"I think you're magnificent.\" He murmured.\n\n\"No need to flatter me.\" Jeremy leaned forward to lick at Ryan's kiss-swollen lips. He just couldn't get enough of those lips. \"You've already gotten inside my pants.\" He said with a twinkle in him eyes.\n\nRyan laughed. \"We need to go take a shower.\" He murmured, shivering at the feel of Jeremy's tongue on his lips.\n\n\"I wish we didn't have to.\" Jeremy growled against his mate's swollen, moist lips. \"I prefer how you smell.\"\n\n\"You mean how I smell of you.\" Ryan drawled, rolling his eyes.\n\n\"Yes.\" Jeremy grinned. \"I want it to remain as such.\"\n\n\"Jeremy, you know very well that no matter how hard I scrub myself, I can never get rid of your scent now so why can't we take that shower?\" He kissed Jeremy again. \"We're covered in cum and sweat.\" Hell, he could feel Jeremy's cum leaking out of him onto Jeremy. \n\n\"You have a point.\" Jeremy groaned. \"Okay let's go take a shower. But I need to heal you after we're done bathing.\"\n\n\"Heal me...\" Ryan looked confused.\n\n\"You'll understand when I pull out of you.\" Jeremy said, rolling Ryan onto his back. \n\n\"Oh...\" Hot colour rose in Ryan's cheeks. \"Are you going to do that now?\" At Jeremy's amused nod, Ryan's eyes widened. \"I'll leak onto the rug, Jer. Maybe we should do that in the bathroom.\"\n\n\"Just say you want me to carry you into the bathroom.\" Jeremy chuckled as he nuzzled his nose against Ryan's mark.\n\n\"Oh fuck...\" Ryan let out a loud moan and shivered violently. Was it always going to be like that, he wondered. He didn't miss Jeremy's satisfied grin at his telling reaction. \"You're an asshole Jer.\" He laughed breathlessly. \"Seriously Jeremy... feels like I have gallons of your cum inside me. The rug...\"\n\n\"Fuck the rug.\" Jeremy growled softly, dropping tiny kisses all over Ryan's face. \"Besides, you've already christened it with that fountain you sprayed earlier. That was hot by the way.\"\n\n\"Oh my god...\" Ryan groaned in mortification, making Jeremy laugh. \"That has never happened before.\"\n\n\"Really?\"\n\n\"Yes, really.\" Ryan murmured. \"That was intense.\"\n\n\"Tell me about it.\" Jeremy looked into Ryan's soft and dreamy eyes and felt pride. He'd put that look there...Sweet! \"I'm gonna pull out now.\" He whispered. \"Don't wanna do it standing up in some bathroom. That might hurt you.\" His eyes dropped down to lock on Ryan's luscious kiss-swollen mouth. \"Fuck, you're beautiful.\" Jeremy sounded drunk. \"If you're so concerned about the rug, just clench up when I pull out. Okay?\"\n\nRyan nodded. \"Okay.\"\n\nJeremy gently pulled out with a deep growl. Ryan couldn't help the loud moan that tore out of his throat either. The friction of Jeremy's cock moving against his nerve-rich tissues was so pleasurable. \n\n\"Damn.\" Jeremy groaned. \"Are you okay?\" He husked, dropping tiny kissed along Ryan's jaw.\n\n\"You're still hard.\" Ryan gasped, drawing laughter from Jeremy.\n\n\"I'm virtually never completely soft around you Ryan.\" He chuckled, getting to his feet with Ryan in his arms. \"You need to pay attention, mate.\"\n\n\"You're so fucking perverted.\" Ryan laughed, putting his head on Jeremy's shoulder. \n\n\"Yeah, well blame my mate. 'Cause when it comes to him, my entire body just goes crazy.\" Jeremy murmured as he entered the bathroom.\n\nRyan laughed softly. \"Same here Jer. Same here.\" \n\nAnd after taking a very long shower amidst languid kisses, the alpha and his mate went directly to their comfortable massive bed. At Jeremy's insistence, Ryan allowed him to lick all over his sore hole and perineum...that small stretch of flesh between Ryan's ravaged hole and his balls which was rich in nerve endings. A wolf's tongue was known to have healing properties. An alpha's even more so. But although Jeremy's ministration was meant to heal and soothe Ryan, it only ended up arousing both of them unbearably. Before long, helpless whimpers were falling out of Ryan. Neither man could fight the lust. They ended up fucking again and again till the early hours of the morning. Both lost count of the number of orgasms they had. The alpha and his mate were definitely on cloud nine. And till it become very necessary, neither one was ready to descend. \n\n***\n\n\"Fuck, I really need to take these idiots out of the system.\" Jeremy panted harshly when the door to his suite opened to reveal a haggard looking Philip.\n\n\"Not the best time.\" Ryan gasped breathlessly, rocking back harder against Jeremy. He didn't even care that Philip was in the suite and could see them. No, he didn't give a flying fuck. He was on the verge of a climax and nothing was going to stop him from grasping that sweet release.\n\n\"I know.\" Jeremy grunted, thrusting deeply into Ryan from behind. \"They need to be able to come in to check on you in my absence.\"\n\nJeremy was surprised but thrilled that his mate hadn't scrambled away from him when Philip entered the suite. They were in bed with Jeremy spooned behind Ryan, slowly fucking the breath out of him beneath the covers. Jeremy pushed himself up on his elbows to get a better look at his Beta. He looked...\n\n\"Don't stop, Jer...\" Ryan gasped, his body shaking with the beginnings of his climax. \"Please don't stop...\"\n\n\"Not going anywhere, beautiful.\" Jeremy whispered, suddenly understanding why his mate hadn't moved away. He was almost there... Jeremy leaned down and latched onto the mark, and then began to suck on it...hard. \n\nWith a cry, Ryan flew apart, the spasms intense, the pleasure incredible. His contracting channel gripped Jeremy's cock so tightly he didn't have any choice but to follow his mate into bliss. Jeremy's hold on Ryan's hip tightened as he erupted inside his spasming heat, his gorgeous face contorted in ecstasy. The alpha came so hard he couldn't catch his breath. Even after both men stopped spurting, they writhed against each other in delirious pleasure. \n\n\"Fuuuuck!\" Jeremy growled, hugging Ryan to him fiercely. \"I didn't realize you had me that worked up. Fuck.\" He gasped. \"Are you okay?\" At Ryan's sleepy nod, Jeremy pressed a kiss against his temple. \"Get some sleep whilst I see to Lip.\" Jeremy said softly as he reached behind him for one of the small towels, dislodging his spent cock from Ryan's body in the process. \"And I promise immediately I get back, they're so gone off my system.\" He murmured as he first wiped Ryan clean, and then himself. \n\n\"Leave them alone.\" Ryan yawned, an overwhelming exhaustion tugging at his muscles. He couldn't keep his eyes open. \"Tell Philip I said I'm sorry.\" He mumbled.\n\n\"What are you sorry for?\" Jeremy asked with a curious look.\n\n\"Having sex in his presence.\" He responded to Jeremy's surprise. They were wolves for fuck's sake. They had sex in the presence of each other all the fucking time. His mate obviously didn't get the memo.\n\n\"Why the fuck do you have to apologize?\" Jeremy drawled. \"He came into your room without announcing himself first. He should be the one apologizing.\" Jeremy leaned over a virtually sleeping Ryan. \"Are you really bothered he saw us? Would you rather we'd stopped when he came in?\"\n\n\"Hell, no.\" Ryan chuckled sleepily. \"I couldn't have stopped even if the room had caught fire. Just trying to be a gentleman, that's all.\" He slurred, making Jeremy burst into laughter.\n\nAnd even before Jeremy left the bed, Ryan was already dead to the world.",
        "***\n\n\"What the fuck happened to you?\" Jeremy asked, giving Philip a once-over.\n\n\"Do you have any idea what you've done?\" Philip growled with an icy glare at the alpha.\n\n\"I can't say I do.\" Jeremy said as he turned towards the closet. \"But I'm sure you're going to tell me.\" He pulled on a black sweatpants and black t-shirt. Then he went back to where his obviously pissed off beta stood. \"I'm waiting.\"\n\n\"You were supposed to mark him not have sex with him.\" Jeremy said coolly.\n\n\"So I had sex with my mate.\" Jeremy shrugged. \"What's it to you?\"\n\n\"Jeremy, people couldn't help but have sex at a point last night.\" Philip whispered. \"It was...insane. We couldn't control ourselves.\"\n\n\"So you got some.\" Jeremy grinned, completely missing the point. \"Cool.\" Jeremy went to the fridge and took out a 1.5 liter bottle of water, totally missing the incredulous look on Philip's face. By the time the bottle came away from his lips, it was empty.\n\n\"Just how long have you two been going at it, Jer.\" Philip asked curiously.\n\n\"Since last night. Not that it's any of your business though.\" Jeremy shrugged. \"So unless you have something very important to tell me, I'll go join my mate now. I need to catch some sleep.\"\n\n\"Did you hear the part about people having the urge to fuck...at the same time last night?\" Philip asked.\n\n\"What do you mean at the same time?\" Jeremy asked with a frown. \"Not that there's anything wrong with being horny.\"\n\n\"Do you remember the exact time you...marked him?\"\n\n\"Around eight p.m. Why.\"\n\n\"Oh Jer...\" Philip groaned, racking his fingers through his hair. \"They're right. You triggered it.\"\n\n\"Who's right? And what did I trigger?\" The alpha looked confused.\n\n\"You...you marked Ryan whilst fucking him.\"\n\n\"Well, that's how it's supposed to be done.\"\n\n\"Yeah but...everyone felt it in the pack house, Jer. And it couldn't be ignored. Even those who are not mated and are not together, but found themselves together at that moment couldn't help but have sex. It was that intense.\"\n\n\"What the fuck!\" Jeremy exclaimed. \"All because I... This is sick. Who did you find yourself...\"\n\n\"Never mind who I fucked.\" Philip snapped. \"Dad and...Mama G were together.\"\n\n\"Oh fuck!\" Jeremy bellowed. \n\n\"That's what I said.\" Philip groaned. \n\n\"So they...people fucked till this morning?\"\n\n\"No, thank God.\" Philip breathed. \"It was all about the urge, Jeremy. Once it took hold of you, you only got free after a release.\" Philip explained. \"I'm sure that was probably the moment you bit him.\"\n\n\"Oh god.\" Jeremy muttered.\n\n\"How come we never asked why an alpha really had to go through all that exhibitionistic bullshit just to claim his mate?\" Philip looked genuinely surprised. \n\n\"Well... we all know it's so that everyone will see that the alpha can make his mate happy.\" Jeremy drawled with a shrug. \"Is there supposed to be another reason?\"\n\n\"Apparently there is.\" Philip folded his arms across his broad chest. \"When an alpha mates and marks his mate, the intensity of their hunger for each other flows through pack members who are of age. A full-blown orgy can actually breakout if the right steps are not taken.\"\n\n\"What?\" Jeremy looked shocked. \"Right steps?\"\n\n\"The council. Apparently whatever those freaky elders do during the ceremony prevents such bizarre situations from occurring. They only want the alpha to fuck and mark in the presence of everyone to enable them keep an eye on the pack...make sure whatever they did to prevent a fuckfest worked. And that was why you were asked to simply mark him, you pervy fucker.\" Philip growled.\n\n\"Perv... I seem to be getting that word a lot between last night and this morning.\" Jeremy shook his head with mock hurt. \"And from none other than my mate and best friend. With friends like you, who needs enemies?\" He ducked with a burst of laughter, dodging the punch aimed his way. \"Well, that'll teach the council for keeping everything shrouded in secrecy. If I knew the real reason behind this...\" He waved his hand to indicate Philip's revelation, \"it may have stopped me from...\" His grin was downright dirty.\n\n\"Yeah right.\" Philip muttered, knowing his friend would have still gone ahead and fucked his mate. \n\n\"Aww come on, Lip.\" Jeremy laughed. \"I would probably have insisted on the ceremony before I'm kicked to the Fort.\" He said, sounding nothing like someone who was actually going to 'hell' by midnight that very day. He looked...content. \"So...what are we going to do about those two?\" Jeremy asked, referring to their parents.\n\n\"What can we do?\" Philip shrugged. \"I think it's about time they both let go of the dead and have some fun anyway, don't you think?\"\n\n\"Yeah, but mum...eww?\" Jeremy shivered at the thought of his mother having sex. \"So...who did you fuck?\"\n\n\"Buzz off.\" Philip laughed. \"Go get some sleep. I need some myself. I'll come and check up on you later.\"\n\n\"Okay.\" Jeremy yawned, looking up at the projected clock on the wall. It was a quarter past five a. m. \"Fuck, how time flies when you need it to stay still.\" He muttered wistfully.\n\n\"Are you okay?\" Philip asked quietly.\n\n\"Never better. I just wish I had more time.\" Jeremy gave a deep sigh, his gorgeous face etched with sudden sadness. \"I'm scared, Lip.\" He finally whispered.\n\n\"Oh god, Jer...\" With an anguished growl Philip drew his alpha, best friend and the brother he never had, into his arms and hugged him fiercely.\n\nIt was obvious that Jeremy was trying to put up a brave face. The satisfaction derived from being with his mate had only made it easier. For the umpteenth time the Beta wished for a miracle to prevent what was about to happen. After about two minutes of just drawing strength from each other, they let each other go. But Philip didn't miss the smirk on Jeremy's face.\n\n\"Camilla. I can smell her on you.\" Jeremy couldn't hide his amusement. \"She was the one huh?\"\n\n\"Fuck.\" Philip groaned. \"She came to apologize. Said she knew I would be pissed off at her for what she did. Shit, I'm sorry Jer...\"\n\n\"There's nothing to be sorry for.\" Jeremy chuckled. \"I just hope she showed you a good time.\" He smirked.\n\n\"I'm a gentleman just like your mate, asshole.\" Philip laughed. \"I don't kiss and tell.\"\n\n\"Yeah whatever. Get out of here man.\" Jeremy began to strip. \"Talk to you later.\" \n\nThe alpha climbed back into bed and plastered himself against his beautiful mate, smiling when Ryan though fast asleep, turned to face him and snuggled closer. Even in sleep, Ryan seemed to crave his closeness. That was evident in the way his sexy, silken body pressed so close it almost felt as if they were one. Jeremy loved it.\n\nJust having Ryan in his arms made Jeremy's heartbeat quicken. Then he felt his cock stir, throbbing in time with the quickened beat of his heart. Shit, he wanted Ryan again, Jeremy groaned. What the fuck was wrong with him? He thought he'd worn his cock out for fuck's sake. Jeremy pressed a kiss against Ryan's temple and willed himself to sleep. But thoughts of his impending doom intruded. He just couldn't bring himself to sleep. He was wired. Who, in his situation, would be able to sleep anyway? Jeremy finally gave up and just held his mate. And somehow, listening to Ryan breathe so peacefully actually brought him some calm. With his whole being filled with that calm, Jeremy drifted off into a mindless and utterly content sleep. \n\n***\n\n\"Hmm...\" Jeremy moaned low in his throat as pleasure sizzled through him. He didn't need to open his eyes to know what was going on. His mate was insatiable.\n\nThey had woken up around ten a.m., had breakfast, spoken to Gloria, Stan and Paige on phone thanks to Philip who had stopped those three from budging into the alpha's suite, fucked each other's brains out for about two hours, then had a shower whilst their bedding was being changed and then fallen back to sleep. For some reason neither man wanted to do much talking. Maybe deep down, they both knew what they would talk about if they did. And since they'd promised each other not to talk about any negative stuff, they thought it was better to communicate with their bodies. \n\nWell, Fort or no Fort, Jeremy loved his mate's method of waking him up. That mouth sucking on the wide head of his cock was absolutely heaven. It was obvious Ryan didn't know what to do but the mere feel of his mouth was driving Jeremy nuts. His hands drifted down to tangle in Ryan's silky white tresses.\n\n\"Yeah that's it, baby.\" Jeremy moaned, looking down at Ryan's pouty lips around his cock. That sight... \"Oh fuck, you look so hot like this.\" Jeremy had to fight the urge to shut his eyes in pleasure. He could already feel himself about to lose it. \"Harder, baby...suck harder.\" He began to trust slowly. \"Wrap one hand around the rest of my cock and stroke me firmly as you suck.\" Jeremy instructed. He knew that Ryan wouldn't be able to take him into his mouth. But just having him sucking on his sensitive crown whilst stroking him was okay for him. He was already so close. \"Play with my balls with your other hand.\" Jeremy directed huskily and then promptly groaned when Ryan began to roll his balls in his palm. \"Fuck...\" It was so good the alpha felt his toes curl almost painfully from sensations. \"Flick your tongue against the rough underside as you suck, Ryan...\" Jeremy gasped breathlessly. And when Ryan did as he demanded, Jeremy threw his head back with a loud cry and just gave himself over to the sensation. \"That's it...that's it...ahh...\" Jeremy's thighs quivered, sweat misting his brow as his excitement mounted. His grip on Ryan's hair became almost painful. But when he felt that sweet feeling of an impending orgasm low in his belly, he instinctively loosened his grip. \"Fuck, I'm going to come...Ryan get off...\" He didn't want to come inside Ryan's mouth because he didn't think his mate would want that. \"Ryan, I can't hold it...\" Jeremy's body shook with restraint.\n\n'Just come, dumb-ass.' Ryan screamed on their mind link and almost jumped when the first thick spurt exploded in his mouth. Jeremy flooded his mouth. \n\nRyan swallowed fast, his throat working convulsively. His hand squeezed and pulled on the throbbing cock to lure out more of Jeremy's rich essence. It was so much the excess spilled out the corners of his mouth. He milked that cock, taking everything from Jeremy until he was emptied.\n\n\"Oh my god.\" Jeremy gasped when he came back to himself, after that mind-blowing orgasm. His breath came out harshly as he watched Ryan flicking his tongue against his wet slit. With his face flushed and his lips blood-red from sucking him, he looked gorgeous. But then even if he saw Ryan covered in rubbish, he would still find him gorgeous. \"Come here.\" Jeremy said huskily, pulling Ryan into an embrace against his heaving chest. \"You're amazing.\" He whispered, his fingers running along Ryan's crack, sending delicious tingles throughout his body. After a long moment he lifted Ryan's head up and slowly brought out his tongue to lick at the cum at the corner of his mouth.\n\nRyan's eyes fluttered shut as a shudder blazed through him. With a moan, he closed the distance between their mouths and took Jeremy's mouth in a kiss so hot and sweet it left both men shaking with need.\n\n\"What do you want?\" Jeremy whispered against Ryan's mouth. He could feel how hard Ryan was against his stomach. \"Tell me...\"\n\n\"Is that a trick question?\" Ryan murmured, opening eyes filled with amused confusion. \"You really need to ask me what I want?\" What else could he want besides a cancellation of that dreaded trip looming over them? \n\n\"You know what I mean smartass.\" Jeremy chuckled. \"Do you want me to take you in my mouth or...\"\n\n\"I want you in my arse for now.\" Ryan said huskily, moving a hand down to rub Jeremy's already hardening cock. \"I can't get enough of your cock.\" He whispered shamelessly. His mate was like a drug to his system. Now Ryan knew how all those drug addicts felt. He began to rub the wide crest against his already lubed up arse. \"You've ruined me for everyone else.\" He breathed as he started to push back against the erect cock poking against his hole. Fuck, he's huge, Ryan couldn't help but think as he began to slowly sit up. \n\n\"I am. But you handle me like a pro.\" Jeremy said huskily as Ryan's movement got inch after slow inch of his cock inside his slick but tight sheath. \n\nThe praise sent warm shivers of delight down Ryan's back. \"I love having you inside me.\" Ryan breathed, his cheeks turning a lovely shade of red. But he could tell by the look on Jeremy's face that he was thrilled by that information. \n\n\"Fuck, you look edible when you blush.\" Jeremy moaned as his hands went to Ryan's hips. \"This feels so good.\" His eyes began to flutter shut.\n\n\"Don't close your eyes, Jer.\" Ryan gushed breathlessly. \"Keep them on me...fuck.\" He gasped when he finally took Jeremy to the hilt.\n\n\"Holy shit.\" Jeremy gasped, eyes reduced to slits, lost in utter ecstasy. The feel of Ryan's tightness around him was absolutely amazing. He watched as Ryan kept leaning backward, his cocks, which had remained rock hard throughout, leaking so much precum. His mate obviously got off on his cock. And that thrilled the alpha to no end.\n\nReaching behind him, Ryan set his hands on Jeremy's knees. Then without taking his eyes off Jeremy, he began to slowly rise and fall, making them both feel every nuance of the delicious friction. With his bottom lip caught sexily between his teeth, Ryan rode Jeremy, worshiping his body with his. And he looked so fucking hot doing it too. \n\n\"How flexible are you, Jeremy?\" Ryan asked breathlessly as he slowly...maddeningly, undulated his hips. \n\n\"Oh fuck...\" Jeremy moaned, feeling every twist and squeeze along his length. \"I'm a wolf, Ryan.\" Jeremy grunted as he too begun to thrust up into Ryan. \"I am flexible.\"\n\n\"Good. You can take me in your mouth now.\" And with that sexy demand, Ryan threw his head back and began to ride Jeremy in earnest. \n\n\"Fuck!\" Jeremy growled as he watched his sexy mate fuck himself in wanton abandon, his skin coated in a fine sheen of sweat. He wanted to lick him all over. But since he couldn't possibly do so at that moment, he did as he'd been told. \n\nJeremy leaned forward and grabbed those cocks that he'd come to fall in love with. He stroked them for a bit, getting them slick with Ryan's precum. Then he dropped his head and took as much of the two dicks as he could into his mouth. \n\nRyan went berserk. \n\n\"Holy fuck!\" He screamed as he rose and fell over Jeremy hard and fast, his prostate getting nailed with each downward movement. It was a wild ride which made Jeremy groan around the cocks in his mouth. \"Oh fuck, fuck...\" The vibration from Jeremy's groans...the battering his button was receiving... It was too much. Ryan lost it.\n\nThe orgasm, when it hit, didn't just washed over Ryan...it exploded through him. He came with a hoarse cry of Jeremy's name, his entire body convulsing as ecstasy slammed into him again and again. Jeremy's relentless sucking extended Ryan's pleasure till he thought he'd go insane from it all. His hands gave out and he fell heavily on his back between Jeremy's legs, gasping for air even as his body shook with blinding pleasure.\n\nJeremy pulled off Ryan even before he stopped spurting and pushed legs his onto his shoulder, practically folding Ryan in half. Then he plunged deep, hard and fast, showing no mercy. Jeremy fucked like the feral beast he was. He would pause to roll his hips for a while, and then go right back to deep thrusting. He set a brutal rhythm, sending shockwaves through an already blissed out Ryan by nailing that bundle of nerves inside him with devastating precision. Jeremy knew he wasn't going to last long. That ride Ryan had given him had seen to that. He could already feel his own orgasm build. \n\n\"I need you to come again, baby.\" Jeremy groaned, his breath coming in ragged gasps as he pounded relentlessly into Ryan. \"Come with me.\"\n\n\"I don't think I can...\" Ryan whimpered, feeling totally spent. He didn't think there was an orgasm left in his body to wring out. But his mate was having none of that.\n\n\"Did you just say you don't think you can?\" Jeremy growled as he slipped a hand between them to grip Ryan's still hard cocks. \"We'll see about that.\" He leaned down and blew on Ryan's mark.\n\n\"Oh fuck, Jeremy...\" Ryan cried as a violent shiver surged through him. And when Jeremy began to suck on that mark, Ryan's body ignited. \"Oh my god...\" He was reduced to a blubbering mess. Making love with Jeremy was pure bliss whatever form it took...hands, mouths or his fantastic cock deep inside him, driving them both to rapture as he was doing right then. Between Jeremy's tireless rutting which caused that quivering gland inside him to take the most delicious pounding, and that mouth sucking hard at his mark, Ryan's mind lost control of his body. \"Gonna come. Oh shit, Jer.\" Ryan gasped. \"So good, so fucking...oh god I'm coming...\" \n\nAnd even as Jeremy's pulsing cock began to release hot cum into his mate, Ryan tumbled into ecstasy, sobbing Jeremy's name as he rippled and constricted around him in release.\n\nAfterwards, Jeremy collapsed onto Ryan, both exhausted. Ryan welcomed Jeremy's weight on him, wishing they could stay like that forever. But after a while, Jeremy slid off Ryan and drew him into his side, his own body shaking with sweet aftershocks. Jeremy felt so satiated he thought he was floating on the clouds till his eyes fell on the clock on the bedside table. The alpha immediately tensed up. His mate didn't miss it.\n\n\"Are you okay?\" Ryan asked quietly. \n\nBut Jeremy couldn't speak. He only nodded and clung to Ryan. He felt his chest tighten almost painfully, and had to make an effort to stifle the scream building up in his throat. Jeremy began to take in deep breaths. Ryan leaned his head back and looked at his mate's face. Then he followed the direction of his eyes to the clock and shivered with dread. It was already a quarter past seven. Jeremy had less than five hours to go. Fuck! Ryan pulled the covers over both of them and snuggled closer into Jeremy's chest. He felt Jeremy grip him tighter. When the first sob tore out of Jeremy, Ryan moved up and cradled the alpha's head against his chest. His own eyes stung with the need to cry too but he knew he had to remain strong for Jeremy. And that's exactly what he did. He held his sobbing mate as his body shook with great heaving sobs. Ryan allowed him to let it out. When Jeremy finally quieted down, he apologized to Ryan shakily. \n\n\"I'm so sorry for everything I've done to you Ryan.\" His voice was hoarse from sobbing.\n\n\"Shush.\" Ryan said softly. \"You don't have to tell me. I already know. And I forgive you Jeremy.\" Ryan said, suddenly feeling light and free which surprised him. \"Fuck...\" He breathed, letting down his mind-barrier. He wanted Jeremy to see for himself that he'd forgiven him with all his heart. The last thing he wanted was to compound his mate's woes by giving him something else to worry about. When he saw the smile that appeared on Jeremy's face, Ryan leaned down to kiss him softly. Then he raised his head and gave a mock scowl. \"Just know that I'm making it my personal mission to ensure you never fuck up again. And if you ever do, you have me to contend with. And trust me, that Luna chic will be the least of your worries. Got that?\"\n\n\"Got it.\" Jeremy tried to laugh but couldn't manage it. \"Thank you.\" He croaked.\n\n\"Just come back to me.\" Ryan said in a small voice. \"Please.\" He whispered.\n\n\"You can bet your sweet arse I'm gonna.\" Jeremy rasped. \"Nothing is keeping me away from this epic arse.\" He murmured, making Ryan laugh softly. \"Talking about arse...I need to heal...\"\n\n\"No. I want to feel you in there for as long as I can. That wicked tongue of yours is getting nowhere near my epic arse.\" Ryan said, leaning down to give Jeremy a sweet kiss.",
        "\"Fuck, I'm going to miss this amazing mouth.\" Jeremy groaned when they eventually came up for air.\n\n\"More than the epic arse?\" Ryan teased, drawing soft laughter from Jeremy. \"I'll miss you too.\" He sighed. \"We have to get decent. The others will be here soon.\" The plan was for Jeremy's three close friends, his mum and mentor to come sit with them till midnight when they had to say bye. Gloria said she would get to the suite at eight p.m. so they'd already stayed in bed for too long as it were. \"Go take a shower or something whilst I change these sheets.\" Ryan said, rolling out of bed.\n\n\"You really expect me to wash off your scent when I need it the most?\" Jeremy chuckled, getting out of bed too. \"You go take a shower. I'll dress the bed and wait for mum.\"\n\n\"Okay but I think I'll go do that in my room.\" Ryan went on his toes to drop a kiss on Jeremy's lips. \"Wouldn't wanna freak anyone out when I come out of your bathroom with you know what, on display.\" He laughed when Jeremy lightly slapped his naked arse when he turned to leave.\n\n\"I need you to fully move into this room, baby.\" Jeremy called out, smiling as he watched a naked Ryan move towards the connecting door between their rooms.\n\n\"Whatever you want.\" Ryan threw over his shoulder and disappeared through the door.\n\nJeremy stared at the door through which his mate had disappeared with a sad smile on his face. For the umpteenth time, the alpha of Stanwood Pack wished he could turn back time.\n\n\"Fuck!\"\n\n***\n\nThe atmosphere in Jeremy's suite was a solemn one. It was almost midnight. The only dry eyes in the room were that of Jeremy's. He was focusing every ounce of energy he had left on acting calm to enable the others relax. But it was obviously not working. Even Philip couldn't hold in his grief. He kept disappearing into Jeremy's bathroom to weep. \n\n\"Dude,\" Jeremy growled when Philip joined them after staying inside the bathroom for about ten minutes. \"Pull yourself together. You're the fucking alpha.\"\n\nBut Philip couldn't even give his usual flippant responses. He just stood quietly beside Stan with his head bowed. Jeremy sighed as he gently rubbed Ryan on the back. He was proud of how composed his mate looked. His eyes were wet but he'd managed not to break down. Jeremy was grateful because he really didn't know whether he could handle it if Ryan did breakdown. There was a sudden shimmering of light which made everyone tense up. The High Priestess stood before them by the time the shimmering light disappeared.\n\nAt twelve midnight on the dot, a portal was going to open for Jeremy to go through. It was only going to stay opened for a minute. But the High Priestess wasn't there to ensure Jeremy entered the portal. He didn't have any choice but to enter it. She was there for Ryan. Immediately Jeremy disappeared, she was to cloak Ryan's feelings for his mate. The indestructible cloaking was to take away Ryan's hunger and pain, to enable Ryan live comfortably and peacefully in the absence of his mate. Jeremy on the other hand was to experience the full-blown pain and hunger that came with the absence of a mate, in addition to whatever agony he was going to endure from every painful memory. The High Priestess was there to see to the cloaking herself because it was the highest form of cloaking and therefore needed an ultimate power and authority to be effected. \n\n\"Alpha Jeremy.\" She bowed her head respectfully. \"You should say your farewells. It's almost time.\"\n\n\"Fuck!\" Stan roared and punched the wall. He left a dent. The warrior's fangs had dropped down and his claws had elongated.\n\n\"Stan.\" Jeremy gave a sharp growl and went to his friend. \"Hey, settle down.\" He ordered. Then the alpha drew his friend into his arms. Stan's body shook. It was obvious that he was trying very hard not to give in to the rage that was boiling in his veins and for that, Jeremy was grateful. \"Better?\" Jeremy asked after a while. At Stan's nod, Jeremy bumped their foreheads together and said with mock anger; \"Better fix that dent before I get back.\"\n\n\"Oh Jer...\" Stan hugged Jeremy again. \"Come back safe.\"\n\n\"I don't have any other choice.\" Jeremy muttered and then let go of Stan. Then he turned to a quietly sobbing Paige and drew her into a tight embrace. \"Damn, it sure is refreshing to see the queen bitch in tears.\" He teased, drawing a teary smile from Paige.\n\n\"Jer, about what I said yesterday...I didn't mean...\"\n\n\"Yes you did.\" Jeremy cut her off softly. \"You never say anything you don't mean. And that's what I love about you.\" He leaned in and kissed her forehead. \"I know how you feel.\" Jeremy murmured. \"And I respect that. But please keep an eye...\" But Paige covered Jeremy's mouth with her hand to stop his request.\n\n\"I'm never leaving his side.\" Paige said quietly. \"You have my word. I've already asked Philip to assign me to him as his guard. I'm told he doesn't like having guards so I'm just going to be his friend. I called Professor Fynn this morning.\" She nodded with a grin when Jeremy raised a brow. Professor Fynn was on the board of UCLA and a very good friend of Joel's...Paige's dad. \"It's been arranged. I start lecturing their freshman engineering class from Monday. Your man and I will be joined at the hip, Jer.\" She grinned.\n\n\"Oh god, that doesn't sound good.\" Jeremy groaned. \"You're going to corrupt him Slip.\" He reached up to catch a tear that slipped onto her cheek, with his thumb.\n\n\"You bet your sexy self I am.\" Paige smiled through her tears. \"I'm going to be his partner in crime, his best friend, the yin to his yang...\"\n\nJeremy burst into laughter, making everyone turn to look at them. \"Oh my god, you're crazy.\" He laughed. \"He will appreciate having a friend than a guard. Thanks Paige.\" Jeremy said softly. \"Maybe you should convince your stubborn new best friend to move in here.\" He murmured. \"You can fully convert his room into a study for him.\"\n\n\"Consider it done.\" Paige smirked. \"Just make sure you come back to him because that mouth...\"\n\n\"Fuck you Slip.\" Jeremy moved to Joel next. \"So sorry for letting you down Uncle Jo.\" Jeremy said quietly.\n\n\"You have no idea how proud I am of you son.\" Joel said in a hoarse voice. \"Everyone makes mistakes. It's how they make up for those mistakes that matters most. That man couldn't have asked for a more caring and amazing mate. I've never respected you more Jeremy. I know it's going to be difficult but try to focus on him no matter the pain you're in. It should help.\"\n\n\"Thanks Uncle. Please keep an eye on mum...\" Jeremy trailed off. He didn't know whether to smile or frown or maintain a straight face. None of them had even given a thought to what happened between Joel and Gloria the night before. They'd been too preoccupied with what was about to happen.\n\nJoel cleared his throat. \"You don't have to ask me to.\" The elderly man actually blushed. \"You know I'll take care of her.\"\n\n\"I know you will. Thanks.\" With that, Jeremy moved to his mother and just took her into his arms. He held her as she sobbed her heart out. And he had to suppress the urge to cry too. \"You do know you could have baked me some muffins to take, don't you?\" Jeremy finally drawled, knowing that would get a rise out of his mother. It did.\n\n\"You silly boy.\" She said through her tears. \"I've never gone more than a month without seeing or talking to you. Now I'm not going to see you or hear your voice for two whole years... And you're thinking about muffins? What am I going to do Jeremy?\" She sobbed.\n\n\"Shh...you'll be fine, mum. I'll be back before you know it.\" Jeremy hugged her tighter to him. \"Two years is just around the corner.\"\n\n\"No, it's not.\" Gloria snapped. \"You had better stay strong and come back to us because you're all I have in this world. And Ryan...you're all he has. Don't forget that.\"\n\n\"I won't.\" He hugged his mother again. \"He's going to be a mess mum. Look out for him please. Make sure he doesn't do anything stupid.\"\n\n\"Don't worry about him.\" Gloria said softly. \"He'll be okay. I love you son.\"\n\n\"Love you too mum.\" Jeremy kissed his mother on both cheeks and then moved to Philip.\n\n\"This is it.\" Philip's voice didn't even sound like his.\n\n\"This is it.\" Jeremy said. \"Listen, if this goes south, I want a big funeral, alright? I'm talking epic. Open bar, choir, orgies, the works...\"\n\nA tear slid down Philip's cheek even as he shook his head in amusement. \"Done.\" He whispered.\n\n\"Great.\" Jeremy grinned. \"Come here.\" And the two friends hugged each other fiercely. \n\n\"Alpha?\" The high priestess called softly. A gentle reminder.\n\nJeremy went to where Ryan sat with his hands covering his face and gently pulled him up into his arms. There was no hiding it...Ryan was trembling. His breath came out harshly. He'd been able to keep it together since their 'no negativity' agreement. He understood that he would only be adding to Jeremy's pain if he made him any sadder than he already was. But Ryan couldn't seem to hold it together. Panic bubbled up within him. His chest burned.\n\n\"Ryan...\" Jeremy whispered, the pain and wretchedness etched on his mate's gorgeous face hitting him like a physical blow.\n\n\"I can't Jer.\" Ryan's voice shook. \"I'm sorry but...\" His bottom lip quivered. \n\n\"Oh god...\" Jeremy breathed shakily, feeling a sharp pain through my chest. He was fully mated to Ryan now so seeing and feeling his misery cause him great pain. A pained whimper tore out of Jeremy's throat that had him squeezing his eyes shut.\n\n\"I'm trying to be strong.\" Ryan sounded out of breath. \"Really, I am.\"\n\n\"I know...\"\n\n\"I hate this...\" Ryan was hyperventilating. \n\n\"Baby, breathe... Come on Ryan, breathe.\" Jeremy looked desperate. \"Look at me, Ryan.\"\n\nBut the urge to cry was overwhelming and Ryan couldn't fight it anymore. The pressure building up within him made him feel as if his head was about to explode. \n\n\"Jeremy...\" Tears poured down his face. \"Jeremy...\"\n\n\"God, Ryan...\" Jeremy knew he had to reach Ryan on some level...calm him down...reduce his pain and in the process, reduce his own suffering. He did the only thing he could... He kissed his mate.\n\nJeremy entwined his fingers in Ryan's hair and took his mouth in an incredibly gentle, delicate, tender and simply delicious kiss. He kissed Ryan as if he couldn't stop. He could taste the salt in their kiss but didn't know whether it was due to Ryan's tears or his and frankly, he didn't care. Their open mouths slid across each other's, tongues licking and tasting, making love to each other. \n\nEveryone in the suite quietly watched the intimate display. Even the high priestess looked totally floored. Though it was time, she didn't have the heart to interrupt. \n\nAt exactly midnight, there was a loud whoosh sound. The portal that was to take Jeremy opened. Everyone gasped but the kissing couple. They were totally lost in each other. Jeremy knew it was time for him to go. Hell, he couldn't have missed that dreadful sound. He gently broke off the kiss and hugged Ryan fiercely, practically suffocating him. But Ryan didn't mind at all. He figured he could get away without breathing for a while. They both trembled, their cheeks wet with tears. They could hear sobbing from some of the people inside the suite but they didn't let go of each other to see who it was. Both men felt as if their world had come to an end. And there was nothing they could do about it. Jeremy finally kissed Ryan lightly on the mouth...a final kiss. Then he stepped back from him.\n\n\"I love you Ryan.\" Jeremy's voice broke with emotion, his heart in his eyes for everyone to see. He heard the collective gasp that went up and also saw the shock in Ryan's eyes and gave a tremulous smile. \"So fucking much.\" And with that heartfelt declaration, the alpha took another step backward, turned around and stepped into the portal. Then the portal closed.\n\nIf only Jeremy knew what he'd done to his mate with those three little words... What happened next shocked everyone, especially the High Priestess. \n\nNobody move after the portal closed. They all stared at the spot where it had been...probably willing it to reappear. For Ryan, however, the feeling was different. Jeremy's final words had hit him hard enough to steal his breath. And the breath-taking joy that invaded his entire body at those words, turned into blinding pain and rage when Jeremy disappeared through that portal. For about ten seconds Ryan ceased breathing. He knew he had to breathe...tried to breathe, but he couldn't. Just when he thought he was going to pass out, he finally succeeded in taking a deep breath. But when he exhaled, his breath came out with a bloodcurdling scream that caused the building itself to shake. Then right before the eyes of the people gathered in the suite, the portal reopened to reveal a stunned Jeremy, staring back at them.\n\n\"Oh my god!\" Gloria gasped as her hand went to her throat, her shocked gaze fixed on Ryan. That kind of portal...meant to be a doorway to purgatory, could only be opened by a divine power. Even the high priestess couldn't have opened it. So how had Ryan...\n\nThe High Priestess moved towards Ryan so quickly it was almost a blur. Then reciting some words, she touched Ryan on the forehead with her glowing wand. Ryan instantly stopped screaming and crumbled to the floor in a faint. And that was when everyone heard Jeremy's spine-chilling scream. The portal was still opened so he'd watched his mate fall to the ground. His already affected mind conjured the worst thought...his mate was dead. All the alpha felt was the most intense agony and fury. His eyes turned bloody red. Then he started running towards the people in his suite, his main goal - to reach his mate and kill that high priestess who had caused his death. The High Priestess heard the alpha's enraged scream and pointed her still glowing wand at the portal, closing it instantly. \n\n\"Luna!\" The High Priestess gasped as she was thrown violently onto her back. She'd never experienced that much power. And it had come from none other than a newly turned werewolf. She felt totally drained. \"All that power...\" She panted harshly, staring at Ryan. Her skin was covered in Goosebumps. \"We need him on the council.\" She breathed as Joel helped her up.\n\n\"Don't hold your breath, you old cow.\" Stan growled angrily as Philip bent to pick his alpha's mate off the ground.\n\n\"You might want to keep your warrior in check Alpha.\" The high priestess addressed Philip as she got to her feet.\n\n\"Everyone is tired High Priestess.\" Philip responded quietly, a passed out Ryan in his arms. \"If you would just excuse us... Unless of course there's something else...\" He trailed off with a raised brow.\n\n\"I'm not the enemy here.\" The High Priestess said quietly. \"You all knew what he'd done and yet you kept quiet. He's an alpha. He has to have better control. Otherwise the pack is not safe. He had to be punished for his actions.\"\n\n\"We know that High Priestess.\" Joel responded quietly. \"We were not trying to hide or cover up anything. We knew it was up to Luna and we accept the verdict. But we just parted ways with someone we all love dearly. Don't blame us for feeling as shitty as we do this very moment.\"\n\n\"Two years will come very soon.\" The High Priestess responded. \"It could have been worse.\"\n\n\"A day, a month, a year...it doesn't really matter.\" Joel countered. \"He's our alpha.\"\n\n\"And did it have to be two years?\" Stan sneered. \"The longest a werewolf has been sent to the Fort since time immemorial has been two months and you know it. And even those were for murdering. You've condemned him to suffer in purgatory for two whole years. Why don't you just kill him?\" He growled, taking a threatening step towards the High Priestess.\n\n\"Relax Stanley.\" Gloria said, pulling the angry warrior back. \"They didn't determine the length of time. Luna did.\"\n\n\"I was there Mama G.\" Stan gave the high priestess an ice-cold glare. \"They so did. And did you have to stop him when he was coming back just now?\" He growled at the high priestess.\n\n\"Stanley!\" The warning in Joel's voice was clear. \"You will stop this at once.\" He rasped. \"If he'd succeeded in coming out, Luna would have seen it as Jeremy rebelling. She would have struck him down. High Priestess did all of us a favour by closing it. At least we know he's still alive.\"\n\n\"Well, Luna is a mean bitch.\" Stanley muttered. \"Two fucking years?\"\n\n\"That's where you're wrong.\" Gloria said quietly. \"The length of punishment was determined by the level of pain inside the person wronged. Ryan was hurting. Not to mention the fact that Luna is pissed at Jeremy's reaction to her choice of mate.\" She explained. \n\n\"What?\" Stan gasped, turning to look at Jeremy's oblivious mate. \"But I thought he was okay.\"\n\n\"What he went through is not something you come out of easily Stanley.\" Gloria said. \"None of us knew the extent of his pain. He's been very strong.\"\n\n\"Shit.\" Philip cussed as he turned to go and put Ryan in Jeremy's bed.\n\n\"Thank you High Priestess.\" Gloria said quietly. At least thanks to her, Ryan didn't have to go through any pain for the absence of his mate. \n\nThe High Priestess gave a slight nod and gestured towards a quietly sobbing Paige who was huddled in a corner. \"Will she be okay?\" The elderly priestess asked quietly.\n\n\"She'll be fine.\" Joel said, turning to go to his daughter.\n\nWith a sad smile the high priestess disappeared just as she'd appeared...in a shimmer of white light.\n\nAnd for the first time, Alpha Jeremy's suite, which had been the center of so much fun and happiness over the years, was eerily quiet. The feeling of misery and dejection was so palpable that none of the suite's occupants could speak. One word best described the whole atmosphere... \n\nEmptiness!\n\n***\n\nSomewhere in a state-of-the-art board room in one of the finest office buildings in New York... \n\n*\n\n\"What do you mean you don't know where he's travelled to?\" A tall, white-haired, angry looking man bellowed. \"He's the alpha. How come nobody seems to know where he's travelled to? Are you sure your source is being truthful?\"\n\n\"She is, Sir.\" The frightened looking albino answered. The Lord Command was not safe to be around when he was as angry as he was right then. The Jackal knew he should tread cautiously. \"She wouldn't dare lie to me. We have her daughter.\"\n\n\"Fuck! First, you idiots allow Agyemang to escape. Now you don't know the whereabouts of the most important alpha of all. We need to finish that potion soon otherwise all our hard work will be for nothing. That will be four decades of planning, down the drain. We need Jeremy Stanton's blood and bone marrow to complete this. He beat us once, putting a massive hitch in our plan. I'm not going to allow him to do it again.\"\n\n\"Maybe he's gone into hiding because of Sasha's death.\" One of the fifteen people around the conference table spoke up. \n\n\"Jeremy Stanton doesn't hide from anyone, Frank.\" The Lord Command snapped. \n\n\"Reynard, he can't be gone for long.\" A pretty brunette who looked not a day over twenty-one but was actually seventy-four years old, said. \"I hear he got mated in a private ceremony of sorts just three days ago. He can't possibly leave his mate for long, can he?\"\n\n\"A mate huh?\" The Lord Command's face lit up. \"Great. That's the first person Jeremy will go to when he gets back from wherever he's gone to. Find her and keep an eye on her...\"\n\n\"Him.\" The brunette said.\n\n\"What?\" The Lord Command looked confused.\n\n\"Jeremy's mate...it's a man.\" She looked as if she was enjoying the man's shock.\n\n\"Interesting.\" The Lord Command turned glassy green eyes onto the albino. \"Well, I want eyes on him at all times. And don't fuck this up, Jackal.\" The threat in his voice was unmistakable. \"It is now or never.\" The desperation and determination in his eyes could not be masked. \"That dreadful prophecy cannot come to pass.\"",
        "According to the prophecy, the Wyatt clan, the most ruthless and deadliest Warlock clan that ever existed, was to be brought to its knees that year by a formidable force. Well, the clan prided itself on the mayhem, destruction and fear they brought upon humankind just for the fun of it. Of course their services were available to any person who could either pay with ridiculously huge sums of money or human sacrifices. Their name struck fear into the hearts of every warlock and witch who knew about them. The Wyatt clan was definitely a force to reckon with. They sure as hell weren't going to wait around to get kicked off the top of the pinnacle. And fortified with all that power from their latest discovery...a potion made from the life force of powerful alphas, that prophecy was as good as void.\n\nEND OF PART 1 "
    ],
    "authorname": "adjoaq",
    "tags": [
        "mating",
        "passion",
        "parting",
        "heartbreak",
        "ryan",
        "jeremy",
        "punishment"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/savage-desire-ch-06"
}