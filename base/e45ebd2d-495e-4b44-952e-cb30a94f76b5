{
    "title": "Hampered in His Plans Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\n Feedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\n This story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n\n\n Part 12 - The Crime Scene \n\n \"Teresa and I were at the Hospital when Tanya called me.\" said Cindy. \"We took Buddy to see Amy. Teresa is taking Buddy home, to your home, and I came on down here.\"\n\n It was still Monday, January 11th, about 2:30pm. There was a Police cordon around Union Hall, and I was delighted to see Patrolman Culver firmly holding the line. He was aided by a number of officers in heavier-than-normal protective equipment, and I realized Lt. Masters had had them prepared in case of trouble. We now had 'trouble'.\n\n \"So what do we have in here?\" I asked, going inside. It took a second for my eyes to adjust to the light. When they did, I saw Crime Lab personnel at work gathering evidence, and Tanya and Theo Washington examining the body.\n\n He had been sitting at the table, facing the wall with the television. He had fallen forward onto the table, then he slid out of the chair onto the floor, and was now sprawled on his back.\n\n \"So he fell out of the chair, Perlman?\" I asked.\n\n \"Looks like it.\" she said.\n\n \"How can you tell?\" asked Cindy.\n\n I said \"He's lying on his back, which means he fell out of the chair. It would be rare for him to be standing and to fall straight onto his back like that. But if he was sitting in his chair, fell forward against the table, then slid over to the side... then where he is now is a very probable outcome.\" Tanya nodded in agreement.\n\n \"He has a stab wound to the back of his neck.\" Tanya said. \"I felt for a pulse and got blood on my fingers, and felt the wound when I explored for it.\"\n\n \"You were the first to arrive?\" I asked, surprised.\n\n \"Yes sir.\" said Tanya. \"Theo and I were having lunch with Theo's brother Franklin just down the street when we got the call.\"\n\n \"Who called it in?\" I asked.\n\n \"The Duty Desk called it in to me.\" said Tanya. \"I don't know who called it in to them.\"\n\n \"I can tell you that, sir.\" said Sergeant Rudistan. \"One of the striking EMTs, man named Jimmy Lawson. He was one of the so-called leadership group that was a liaison between the Union reps and the rank-and-file. He's a redhead like you, Commander.\"\n\n \"Well!\" I said, \"At least he has that going for him. Ah, there's Martha the M.E. Hi, Martha. If you wouldn't mind giving me a cause of death as quickly as possible, I'd be very grateful and will be out of your way.\"\n\n \"I'll see what I can do.\" said Martha acerbically. She and I had developed something of a rapport, once I'd figured out her acerbity was actually a sardonic sense of humor. I watched as she began examining the body. It did not take long when she turned the body onto its side.\n\n \"Yep, stabbed with a sharp knife right here in the neck.\" said Martha. \"Base of the skull. Looks like the perp cut his spinal cord.\"\n\n \"Looks like he knew right where to do it, too.\" I said, looking closely at it as I squatted next to Martha. \"Am I right that that is just the right spot between the neck and skull?\"\n\n \"Yes sir.\" said Martha. \"I think he may have stabbed the knife, which is thin and very sharp, like a stiletto, right up into the head, too... but that might've been secondary to the first cut that severed the spine.\"\n\n \"So who am I looking at on the floor here, Theo?\" I asked abruptly. Theo was ready.\n\n \"Jack Naples, Commander.\" Theo said. \"He's the National EMT Union president. Came down to help organize the strike, so I'm told. One of his people found the body, began shouting, and others came in. Lawson checked for vitals, said he was dead, and called the Police.\"\n\n \"Tell me more about Naples.\" I said. \"Besides the fact that he's not married and has not been married for some time, if ever; that he uses amphetamines; gets little sleep; is diabetic; and is not a very popular man even with his Union associates.\"\n\n \"Oh my God.\" said Cindy. \"You're just showing off, Commander.\" A red crowbar was waved in her general direction. Undaunted, she said \"Okay, I can see the amphetamines and no sleep, but where are you getting the diabetes and unpopularity?\"\n\n \"The diabetes is on the medical alert tag on the bracelet on his right wrist.\" I said. \"Yeah, even I could see that one, Crowbar 2.\" A blue crowbar was waved in my general direction.\n\n \"As to the unpopularity,\" I said, \"the fact he's lying here dead in the middle of a Union Hall floor was my first clue to that.\" That got Theo laughing, Tanya's eyes rolling, and Cindy giving me a look that hinted at a desire to kill.\n\n Theo saved me by saying \"He's forty-nine years old, lives in Washington, D.C., Georgetown area address on his drivers license. Been with the EMT Union for the last ten years. He was with the SEIU before that. Was arrested numerous times participating in demonstrations and protests. He was part of the PCGW protests against Crown Chemicals here.\" That made Cindy groan.\n\n \"That just widened our list of suspects.\" said Cindy. \"If someone recognized him from the PCGW protests, they might've acted to kill him. There's still bad blood over all of that, even after years have passed.\"\n\n \"True enough.\" I said. \"Okay, we need to talk to people to see who was here, when.\"\n\n * * * * * * * * * * * * * * * *\n\n Chief Moynahan had been asking me to allow my Detectives to take the lead roles in questioning suspects. With that in mind, I told Lt. Perlman to have Teddy Parker and Theo Washington interrogate those closest to the situation and most possibly involved. But I had to admit that I was chafing hard in my exercise of extreme patience as I listened in as much as I could.\n\n The interviews were videotaped, giving me the opportunity to review them, as well. Hans Logan was interviewed by Detective Parker. His name was explained by him having a German mother who met his American serviceman father while said father was stationed in West Germany. They married and she came to the United States with him, and named their son 'Hans'.\n\n \"I left here for lunch with a couple of EMTs and a reporter.\" said Logan, whose answers to questions are condensed here. \"When we got back, Naples was dead... no, we were all going to lunch, and Naples generally stayed behind alone and made phone calls and emails... no, I don't know if anyone stayed behind after I left.... I'll be honest, none of us liked Jack Naples very much. He was pushy, he was manipulative, he was basically trying to come in and run this whole thing, which I thought was very bad.... no, I don't think he had our interests at heart, only himself and his national Union...\"\n\n Next was Wilbur James, interviewed by Theo Washington: \"I left for lunch right about the same time as Hans and Jimmy. No, I was pretty much by myself. Walked out with several others, then went my own way to get lunch... I'd say that's right, that Jack Naples was not very popular with us. I think he wanted the best for us, because without a local EMS, there's no local Union, and that hurts him... no, I can't say that anyone expressed a particular hatred of Naples.... look, he was brash, offensive, wanted to run things himself, really wanted to create a lot of conflict to give the Media a story as well as to push his own agenda... no, I was not opposed to the strike call, far from it... yes, we were being destroyed anyway, so we might as well go down fighting, you know...\"\n\n Then came Jimmy Lawson: \"Yes, I was a medic in the military, got this job when I was discharged... honorable discharge... yes, I have a wife and a son, he was born a few weeks ago... no, I wanted to avoid an outright strike; we're losing our jobs over this... no, I didn't like Mr. Naples's tactics, he was very confrontational, really wanted the strike... he was strongly opposed to any dialogue with the Council, he was telling us to not even try... well, I went to the restroom, and everyone broke for lunch, and I left behind most of them... didn't see Naples, I thought he went to lunch, too... no, I went home to see my wife and the baby, we don't have much money so I don't eat out very much for lunch...\"\n\n While I was listening to Teddy Parker interview the people who found the body, I noticed that Theo and Tanya were talking to Cindy, and the conversation seemed animated. Then Cindy took out her cellphone and made a call. Quite frankly, I would've preferred my Detective Leadership be involved in interrogating these suspects, but I curbed my irritation when I saw that Cindy's face was becoming increasingly worried.\n\n \"Okay, Perlman,\" I said as she came up, \"so what are you deducing about this case?\"\n\n \"Uh, not enough data, sir.\" Tanya said.\n\n \"And why don't you have the data?\" I asked, rather acidly. \"Going to wait to review the tapes of the interviews rather than listen to them and watch the interviewees firsthand?\"\n\n \"Well, yes, I was planning to do that, sir.\" she replied, then looked at me. \"Is there a problem, sir?\"\n\n \"You tell me.\" I said, my eyes boring into hers.\n\n \"Well, yes there is.\" Tanya said. \"You might want to ask Captain Ross or Theo about it, though. I'm just hearing it secondhand.\"\n\n \"Okay, then.\" I said. \"But be ready to answer any question I have about this case tomorrow morning. Carry on.\" With that, I walked away from her, observing that she was irritated at me. The feeling was mutual.\n\n Cindy was on her phone again, and getting frustrated. \"Is there a problem, Captain?\" I asked, stiffly and formally.\n\n \"Yes sir, there is.\" Cindy replied. She looked up at me and saw that I was not very amused right now. \"Sir, may I explain?\" By that, she meant she wanted to tell the story without Crowbar interruption.\n\n \"By all means.\" I replied, giving her the latitude.\n\n \"Detective Washington got a call from his brother, ADA Franklin Washington.\" Cindy said. \"There was a meeting of the D.A. and his staff, and it turned ugly when Solicitor Walters brought up Krasney negotiating deals with the Firefighters, including the rapists. Unfortunately, ADA Stiles got angry when Krasney wouldn't outright deny negotiating, and Washington said Stiles slapped Krasney. She then walked out, and no one has heard from here since. So I'm trying to call her.\"\n\n \"I see.\" I said. \"Well, you'd better----\"\n\n *BRING!* *BRING!* *BRING!* *BRING!*\n\n It was my own Police cellphone. And it was Bettina Wurtzburg calling. I pressed the button to send it to voicemail.\n\n *BRING!* *BRING!* *BRING!* *BRING!*\n\n Now it was Bettina on my personal cellphone. I thought maybe this one was big, and bad, so I called Bettina back on the Police cellphone.\n\n \"It better be good, Bettina... no, this is off the record, confirm that... okay, yes I've heard about it... no, I don't know... no, I don't know... oh really?... you've confirmed that?... okay. By the way, are you not interested in the murder of a national Union president?... Yes, Jack Naples. I'm here at the crime scene... no, Hardwood is not here... okay... okay, see you later.\"\n\n I looked at Cindy, who'd tried twice more to reach Jenna as I'd talked to Bettina. I said \"Well, Jenna was seen meeting with Councilwoman Malinda Adams at lunchtime, so Bettina tells me. Bettina was calling for confirmation of the story about slapping Krasney, and trying to get me to confirm Krasney is going to make plea deals.\"\n\n \"So Jenna's okay?\" Cindy asked.\n\n \"So it appears.\" I said. \"But it's pretty obvious what she's up to if she's meeting Adams, isn't it?\"\n\n \"Uh.... I guess she's bitching about Krasney?\" Cindy offered. I just looked at her.\n\n \"Think about it, Crowbar 2.\" I said. \"It's much deeper than that. Okay, you go find Jenna. Get out of here. You're distracting me, and your head's not going to be in the game right now. Go.\" Cindy looked faintly shocked at me, but she headed out. I returned to the crime scene.\n\n \"Okay,\" I said to Lt. Perlman, \"anyone find a stiletto-type knife anywhere around here?\"\n\n \"No sir.\" said Perlman. \"Rudistan has officers checking all the trash cans and curb drains in the area, but nothing showing up so far. Oh, here comes KXTC.\"\n\n Bettina and her cameraman burst out of the van and made a beeline to me. I whispered to Tanya: \"Today is 'Be nice to the Press' day, so I'll handle Bettina. Go take charge of this investigation, light a fire under everyone's asses.... ah, there you are, Bettina. I'll give you a quick interview, but make it fast. I have to go...\"\n\n * * * * * * * * * * * * * * * *\n\n \"Where the hell were you?\" Bettina asked John Hardwood as she came up to him at his desk at KXTC News Headquarters.\n\n \"What do you mean?\" asked Hardwood.\n\n \"I sent you to Union Hall.\" said Bettina. \"A man was murdered there. National Union president. BIG story, John. Why didn't you show up?\"\n\n \"Your assistant called me.\" said Hardwood. \"He redirected me to the Courthouse, said there was a bigger story brewing there.\"\n\n \"My assistant called you?\" Bettina asked. \"Hell, John, I don't have an assistant, other than my camera crew.\"\n\n \"Oh.\" said Hardwood. \"Well, all I know is that I was sent to the Courthouse, and there *is* a big story brewing. Krasney wants to cut deals with the firefighters, his entire ADA staff is essentially rebelling. He's going to work through the night and make the announcement of the deals tomorrow.\"\n\n \"Oh, wow.\" said Bettina, going into 'reporter' mode. \"What have you gotten on that?\"\n\n \"I've confirmed with sources with knowledge of both Krasney and the Firefighters' Union's actions, and working on people near the lawyers right now.\"\n\n \"Great!\" said Bettina. \"Okay, keep on it. I'll look into this 'assistant' thing----\"\n\n \"Ms. Wurtzburg?\" asked a breathless young intern who rushed up. \"There's someone in the publisher's office to see you. Says he's the owner of the company!\"\n\n * * * * * * * * * * * * * * * *\n\n \"Mr. Burke?\" asked Bettina as she came into the office. Inside was Todd Burke, CEO of BOW Enterprises, parent company of the company that owned KXTC.\n\n \"Ah, Bettina.\" Todd said with his charming smile. He was wearing a well-tailored suit, looking like the young, successful executive that he was. \"Come in, have a seat.\"\n\n \"How can I help you?\" she asked, sitting down. Todd leaned back against the edge of the desk.\n\n He said \"I wanted to tell you that it was me who redirected your reporter Hardwood to the the D.A. Office situation. And while I'm not telling you to lay off the Union man murder, I would like to... 'suggest'... that it be a back-burner, low priority story for you.\"\n\n \"Uh, why?\" asked Bettina. \"A murder is big, no matter what.\"\n\n \"Yes, I understand.\" said Todd. \"And again, I'm not telling you to bury it. This is all off the record, by the way. But I know that my uncle will need as few distractions as possible as he solves the case, and it's going to end up not being all that much of a story.\"\n\n \"Did your uncle ask you to talk to me about this?\" Bettina asked warily, trying to make the gears in her head turn.\n\n \"Oh no, he'd never ask me to do that.\" Todd said. \"But this thing with the District Attorney's office? That's big, Bettina. Really big.\"\n\n \"I know.\" said Bettina. \"Okay, I'll follow the murder case by just following the Police reports, with no further deep digging. But you do realize that this could become a national story, and it might not be easily buried?\"\n\n Todd grinned, even chuckled. \"Bettina, there's a reason Rush Limbaugh calls the Press the 'Drive-By Media'. You report, the story lasts two days, then everyone moves on to the next story, leaving pure destruction of people's lives in their wake. This Union man story won't last the full two days, if I don't miss my guess.\"\n\n \"Are your guesses as good as your uncle's, Mr. Burke?\" asked Bettina. It could've been playful skepticism, or flirtation in her voice.\n\n \"In some places, yes.\" said Todd, smiling that charming smile of his. \"Knowing what technologies are going to be the next best thing, and which aren't... I've done very well with those guesses, so far. Can I solve crimes like my uncle can and does? Oh hell no.\"\n\n Todd then leaned over close to Bettina and said \"One thing I don't have to guess on... my uncle thinks you're a really great piece of ass.\"\n\n Bettina did not rise to the bait. She merely looked at Todd and said \"Well, and definitely off the record, your uncle definitely knows what a great piece of ass I am... but he didn't tell you that. He's too much of a gentleman. Nice try, though.\" She got up to leave. \"Have a nice day, Mr. Burke.\"\n\n Todd grinned as Bettina left. She's good, he thought to himself. Not good enough to break the biggest story of the century to this point, but she's good.\n\n Part 13 - Multiple Lines of Inquiry \n\n I knew that I did not even have the night in order to get this problem nipped in the bud. I had called ahead to the Station and put out some orders, and now they'd come to fruition.\n\n The contingent in front of City Hall was fairly large as the sun dipped behind the building on its way to the western horizon. I had called a Press conference, and the Media was well-represented at it, including Diane Williams from the City.\n\n I brought out one of the big police shields that had been used in the Jenna Stiles rescue. The several pockmarks of machine gun fire that had struck it were easily visible.\n\n \"Ladies and gentlemen,\" I said into the microphones. \"Look at this. Take pictures of this. Take camera shots of this and show your viewers. This is the shield that my Officers used to go into the dungeon and rescue ADA Jenna Stiles. The perps tried to kill my people with machine guns. Jenna Stiles endured unspeakable atrocities at their hands.\"\n\n Now that I had their attention, I said \"My officers did not need this heavy shield the other day, but they still went into harm's way and had to engage in physical altercations to rescue a young woman that was being brutalized. My officers acted with courage, and with distinction.\"\n\n \"And now I'm told,\" I said, letting anger creep into my voice, \"that these rapists of this young woman at the Fire Station are going to be able to make plea deals... they're going to walk free with no consequences for their actions. The whole thing is going to be swept under the rug in the name of political expediency. Now these accused men do have their right to a fair and speedy trial. But I genuinely hope that District Attorney Gil Krasney will reconsider, and will prosecute these accused men to the limits of his Office's ability.\"\n\n \"I will be very angry if my Officers went into harm's way to protect the victims of these crimes, only to see the perps plead down because some politician doesn't want to be bothered by the bad publicity.\" I thundered. \"I've been in harm's way, and I've had to ask my Officers to go into harm's way... and for what? Political expediency? If D.A. Krasney does cut a deal, I hope someone will run for office against him, and I hope you'll consider supporting that opposition candidate. I call upon District Attorney Krasney to do the right thing, and bring this case forward to and through a fair and speedy trial. Thank you.\"\n\n With that, I took the big shield and stepped aside. Chief Moynahan then took the podium. \"I wish to support my Police Commander's words on this.\" he said. \"I have only been Chief here for a short time, but I have known Commander Troy for a longer time, and I am completely impressed with his integrity, his courage, and the leadership he provides the excellent Officers of the Town & County Police Force. I also hope that his leadership, and the courage of his Officers, has not been wasted in the making of the arrests of the alleged perpetrators. That's all I have.\"",
        "* * * * * * * * * * * * * * * *\n\n The room was full of cigar smoke and the smell of half eaten submarine sandwiches. The various lawyers were talking back and forth, mostly over each other. D.A. Krasney was feeling sick to his stomach, despite the Pepto-Bismol he'd consumed.\n\n \"Mr. Krasney,\" said ADA Gregory, his only aide in the room against the battery of legal beagles for the Fire Department Union as well as the accused Firemen, \"there's something on TV you need to see.\" All voices ceased as the TV was turned on. It was 10:00pm.\n\n \"This is Amber Harris, KXTC Channel Two News at Ten!\" said the athletic blonde beauty. \"The Town is reeling from the Press Conference given by Police Commander Donald Troy and Chief Sean Moynahan today.\" Video footage of my press conference was played, showing the bullet-scarred shield as well as my words.\n\n Amber Harris, speaking from the KXTC anchor desk, said \"Channel Two News has confirmed that District Attorney Krasney is indeed in talks with attorneys for the Fire Department Union and the accused firefighters. Let's go to John Hardwood at the Courthouse. John!\"\n\n \"Thank you, Amber!\" said Hardwood. \"D.A. Krasney is in his offices now, meeting with attorneys. His office is releasing no press statements, only saying that they'll have an announcement in the morning. Also making an announcement in the morning will be A.D.A. Jenna Stiles. Channel Two News has learned that Ms. Stiles and D.A. Krasney had an altercation this morning, and she has spent the rest of the day at City Hall, filing paperwork, and she has also been in consultation with Councilwoman Malinda Adams and representatives of the State Organization for Women, the S.O.W.s.\"\n\n All eyes went to Krasney. \"Oh God, no.\" he gasped. \"Jesus fucking Christ.\" He then looked around. \"Okay guys, we'll have to resume this tomorrow.\"\n\n \"I thought you wanted to get this done tonight, spring it on them as a done deal.\" said one of the Union lawyers. He was clearly needling Krasney, egging him on.\n\n \"If it's not obvious to you, the element of surprise has been destroyed, thanks to the Iron Crowbar.\" said Krasney. \"I'm backing off for now. We'll have to wait until tomorrow.\"\n\n * * * * * * * * * * * * * * * *\n\n I collected Buddy after he spent two and a half hours with Amy. Teresa had talked to Amy and Buddy while I worked on my iPad tablet on the Naples murder case. Then it was time to go.\n\n \"She's getting worse, isn't she?\" Teresa said as we walked into the parking lot. \"She tries not to show it, but she is.\"\n\n \"I'm afraid so. She needs that transplant soon.\" I said as I carried Buddy to my SUV. Teresa was parked nearby. As we said our goodnights, I looked over at the entrance to the Hospital. Striking EMTs were posted there, on the sidewalk, having chosen that location as one of the places to publicly protest their treatment at the hands of the Fire Department, and the Council.\n\n * * * * * * * * * * * * * * * *\n\n \"THERE you are!\" gasped Cindy as Jenna came in. It was nearly midnight.\n\n \"Hi.\" said Jenna. \"I got your texts, but I was way too busy to reply. I'm sorry. You want a drink?\"\n\n Cindy was staring, unable to believe what she was seeing and hearing.\n\n \"Jenna.\" she finally said. \"I am told that you slapped your boss, left the room, have been gone all day, I can't reach you, you don't reply to my texts, and now you just walk in like nothing has happened....\" Jenna still said nothing, but she sat down on the sofa, on the opposite side from Cindy.\n\n \"Well,\" Cindy said, pretending to return to her reading, \"it's a good thing I work for the Iron Crowbar. I'd be tearing my hair out of my head by now if he didn't tell me what you're doing.\"\n\n \"What does he think I'm doing?\" Jenna asked, then caught herself. \"Oh, never mind, I'm sure he did figure it out. And yes... the incident at the Courthouse is true. Krasney wanting to plead down is true. And tomorrow... I'm announcing that I am going to run against him for District Attorney...\"\n\n Part 14 - Battle of the Sexes \n\n Tuesday, January 12th, 7:00am. You know what that means: Bettina!\n\n \"This is Bettina Wurtzburg, KXTC Channel Two News! Channel Two News has learned that District Attorney Krasney's press conference, scheduled for 10:00am, has been postponed. Sources close to the D.A.'s office are telling Channel Two News that D.A. Krasney did not come to an agreement with lawyers representing the arrested Firefighters to reduce the charges against them in exchange for guilty pleas.\"\n\n Bettina continued: \"Meanwhile, a press conference has been called by Town & County Councilwoman Malinda Adams for 9:00am, to make an important announcement. Ms. Adams is an outspoken critic of D.A. Krasney for his generally tepid responses to crimes against women in the County.\"\n\n \"Also, a lawsuit was filed by the EMTs Union against the Council, asking a judge to enjoin the Council from firing the striking EMTs.\" said Bettina. \"The lawsuit was denied in Superior Court, as Judge Harry \"Spud\" Nance said the Council was acting legally.\" Bettina went on. \"An appeal to the Appellate Court was summarily dismissed. The Union is now filing in Federal Court, but so for the Court has not issued any ruling to prevent the Council from terminating the employment of the EMTs and disbanding the EMS as a County service.\"\n\n \"Also, don't miss my special report tonight.\" Bettina said. \"The year before last, I brought you the story of Teresa Croyle, the Vice Lieutenant of the TCPD. We'll have a follow-up story, as well as the story of the orphan girl she has befriended, who needs a transplant to live.\"\n\n All eyes in MCD were on the Vice Lieutenant when she walked in. \"What?\" she asked.\n\n \"Consorting with the Press, Lieutenant Croyle?\" Cindy asked.\n\n \"If it'll get Amy a transplant, then not only yeah, but 'hell yeah!'.\" Teresa replied defiantly.\n\n \"Sounds like a plan.\" I said in support of my Vice Lieutenant. \"I hope it works. And speaking of what works, Lieutenant Perlman, I hope you and your MCD Detectives have been working on the Naples murder.\"\n\n \"Your hopes are well met, and we have been working on it.\" said Tanya.\n\n \"We will find out.\" I said. \"At eight thirty.\"\n\n * * * * * * * * * * * * * * * *\n\n The meeting in the main Conference Room was attended by Chief Moynahan, me, Captain Cindy Ross, Lt. Tanya Perlman, Detectives Theo Washington, Teddy Parker, David Krueger, and Data Gurus Myron and Mary Milton.\n\n \"Okay, Lt. Perlman,\" I said, putting her right on the spot, \"tell me what you have. Don't delegate; you make the report.\" I think Tanya finally fully realized that I was still irritated at her not paying attention at the crime scene the day before.\n\n \"Sir,\" Tanya replied, \"as you know, Jack Naples was the National NBESW Union president. He came down to facilitate the EMT strike; some say he pushed it onto them. He was 49 years old and from Washington, D.C. He had no friends here, and didn't exactly make any while he was here.\"\n\n Tanya continued: \"The autopsy shows he was killed by a very sharp, thin knife that cut through his spinal cord right below the base of the skull. The knife was then driven into his cerebellum from below. His drink cup was tested, and contained a barbiturate, which the M.E. says had begun working into his system.\"\n\n \"The last three people that were with him were Hans Logan, Wilbur James, and Jimmy Lawson, who were the liaisons between Naples and the EMTs. Well, more accurately, they were the local EMT Union reps. This is what we've gathered on them:\n\n \"Hans Logan is a full Paramedic, which is the same as a Police Sergeant or Fire Engineer. He is divorced, his wife leaving him after a couple of domestic disputes. The Police reports are attached to the workup of him in his file. He is considered to be a very good Paramedic, and has saved several lives at the scene of the trauma incidents, and is one of only two EMTs to be put in for any medals at all in the last two years.\"\n\n \"Wilbur James is fifty-three years old. He was a part-time EMT while he was in Law School here at the University. Upon getting his law degree, he began working as a Union rep for the EMTs, and has seen most of the Fire Department/EMT wars before and after the Merger.\"\n\n \"Jimmy Lawson served in Afghanistan as an Army medic. He had extensive training as a medic, including being able to perform things like tracheotomies in the field. His military record is clean, but after his enlistment he did not re-enlist, despite efforts to keep him. He was honorably discharged and came home to his wife. He's been an EMT for a little over a year, and he and his wife just had a baby a few weeks ago.\"\n\n \"So what were their attitudes towards the strike?\" I asked. By now, my Detectives knew that I did not ask idle questions, nor questions idly. They tuned in.\n\n \"I had people interview a number of EMTs, as well as people on the scene.\" Tanya replied, finally impressing me with her initiative. \"The consensus I get from the consolidated reports is that Hans Logan and Naples were like oil and water on the issue. Logan felt like Naples was using the situation and the EMTs for his own purposes and his own gains. Logan also was the primary person calling for a dialogue with the Council.\"\n\n \"Wilbur James apparently believed that the Council was inevitably going to destroy the EMTs. So he was cautious, but he was in favor of calling for a vote to strike, if not the actual strike itself. Some say Logan was more strongly pushing for it, so I get the idea that people's opinions are mixed on who wanted what.\"\n\n \"But one thing is for sure.\" Tanya continued. \"Jimmy Lawson did not want the strike. He was very concerned the EMTs would be summarily terminated, so he wanted to take a less confrontational path that would not put the EMTs's jobs and existence on the line.\"\n\n \"Murder weapon not found yet?\" I asked.\n\n \"No sir.\" Tanya said. \"We're still working on warrants to search these three guys' cars. Wilbur James allowed a search, and nothing was found, but both Logan and Lawson asked that warrants be obtained first.\"\n\n \"Interesting.\" Cindy said. I knew what she was thinking.\n\n \"It is more strange to me that the lawyer of the bunch, Mr. James, would allow the search without a warrant.\" I said. \"Even if he's innocent, he more than any of them knows he should make us work by the book. So, why don't we have warrants?\"\n\n \"I don't know, sir.\" said Tanya. \"Paulina put in for them yesterday afternoon, but Folsom is sitting on the requests, and we don't know why.\"\n\n \"Hmmm.\" I said, more to myself than anyone else. After a moment of thought, I said \"Chief, do you think we have enough probable cause to search the cars while we wait for the warrants?\" Several people at the table were surprised at my question; sadly, some were not.\n\n \"Noooooo,\" the Chief said with his peculiar inflection. \"If you'd done it on the spot, you might have no admissibility problems. But if you do it now, especially with the warrants being asked for but not issued, that would probably be a case-killer.\"\n\n \"Yes sir, you're right.\" I said. \"And the evidence is probably destroyed and the car cleaned out by now, so it's probably a moot point.\"\n\n \"So what's next?\" asked the Chief.\n\n \"Interviews.\" I said. \"Lt. Perlman, bring in Logan, James, and Lawson. To the Station.\"\n\n I noticed Cindy glancing furtively at her watch. \"Okay, everyone,\" I said, \"who wants to watch the 9:00am announcement at City Hall?\"\n\n * * * * * * * * * * * * * * * *\n\n At 9:00am, a group of women stepped up to the podium. They included ADA Jenna Stiles, Councilwoman Malinda Adams, Fire Marshal Zoe Singer (not in uniform), KXTC Managing Editor Bettina Wurtzburg, the president of the State Organization for Women (SOWs), and State Senator Katherine Woodburn.\n\n In the audience were women brought on buses by the SOW, a large number of EMTs that had been asked to attend in uniform and make a presence, and a number of college students that Katherine Woodburn's political machine had arranged to attend. Some of them had signs with various political slogans. A few of those slogans cannot be repeated here.\n\n It was Jenna Stiles that took the podium. \"Thank you for coming. My name is Jenna Stiles, and I am an Assistant District Attorney for this Town & County. As you know, I was recently kidnapped and brutalized for hours before the Town & County Police Force made a daring raid to rescue me and my assistant. I will be forever grateful to the Police Force for putting their lives on the line for mine.\" The crowd applauded politely, not yet warmed up.\n\n \"You may also know that another young woman, who served this county as an Emergency Services Worker as well as a volunteer Nurse, was attacked and brutalized by two men who were employees of the Fire Department, and other men stopped others from helping the girl, and even tried to prevent the Police from doing their jobs in saving this girl's life and arresting the thugs that violated her.\"\n\n Jenna continued: \"We now know that District Attorney Gil Krasney was in negotiations as recently as last night to arrange plea bargains with these criminal monsters. I guess I should say 'alleged' criminal monsters, but the point is that District Attorney Krasney is bowing to political pressure to sweep these crimes under the rug on behalf of the Fire Department. I am disgusted that the District Attorney of this County would even consider such a thing. I do not believe Gil Krasney is fit to continue as District Attorney, and I urge him to step down immediately.\"\n\n There was applause from the crowd, then Jenna said \"Whether or not Mr. Krasney continues as District Attorney, I urge you to contact his office as well as the Town & County Council to express your anger at the callous way rape and the abuse of women is treated by District Attorney Krasney. And I intend to do more. I will stand with and stand for the women of this County, which is why I am now announcing that I am running against Gil Krasney for the office of District Attorney!\" A very loud cheer followed.\n\n \"It is time to tell criminals that the violation of women in this County will not be tolerated!\" Jenna yelled. \"And it is time to tell the District Attorney that coddling rapists will not be tolerated by the women of this County, nor the men who love those women!\" More applause. The crowd was getting heated up...\n\n * * * * * * * * * * * * * * * *\n\n At 10:00am, District Attorney Krasney appeared at a podium hastily set up inside a hallway of the Courthouse just outside his office. He stepped up to it.\n\n \"Good morning.\" he said. \"I called this press conference to clear up some disinformation, and I hope you will report this as zealously as you've reported the disinformation. First, there are no plea deals offered for the alleged rapists. There are no negotiations presently occurring to reduce their charges.\"\n\n \"Second, we are in consultation with the Sheriff's Department and the Fire Department, to determine which of the lesser charges against other Firemen can be handled as an internal matter, and which should be handled judicially through the Court System.\"\n\n \"Third, A.D.A. Stiles has every right to run for the office of District Attorney. However, as a matter of County regulations, she is on leave of absence from the D.A.'s office while running against the incumbent D.A. that is also running. This is to prevent any conflicts of interest, and I refer you to the Town & County Council's Office for any questions regarding that policy.\"\n\n \"To conclude my remarks,\" said Krasney, \"I wish to express my disappointment in the Press for reporting false information, and my disappointment that so many people chose to believe this false information and making rash statements before getting the facts. That especially includes high level Police Officers who have a brilliant record of solving difficult cases, but couldn't take the time to find out the real truth of this matter. Thank you for coming, I'll be taking no questions.\" \n\n With that, he walked away from the podium as Security in suits held back the reporters as they shouted questions...\n\n * * * * * * * * * * * * * * * *\n\n \"I take it that last bit was a shot at you, Mr. Crowbar.\" said Chief Moynahan as we sat in his office. Sheriff Allgood had come to visit after hearing the D.A.'s press conference.\n\n \"Sure.\" I said. \"As was that really cheap shot at the Sheriff.\"\n\n \"You got that right.\" Daniel Allgood said. \"We have not had any discussions with Krasney nor anyone else in his office about any of the Firefighters being disciplined administratively. Once Fire Marshal Singer referred it to the Inspector General, and therefore to us, any chance of that happening ceased.\"\n\n \"That was Krasney's gambit to drag the entire Public Service Department into the mud with him.\" I said. \"He's trying to suggest that others are amenable to administrative discipline. Are you going to have a press conference and shoot him down?\"\n\n \"That's why I'm here now.\" said Daniel. \"To consult with you, and then with the Town & County Attorney's Office, that handles these things for us. I take it you want these charges to be pressed, all the way?\"\n\n \"At this point, we're boxed in and have to do it.\" I said. \"My original plan was to drop the charges against Superintendent Harris, let the guy Cindy beat up plead out to administrative discipline, let the two guys who beat up the EMTs plead down but still do time, and then throw the book and the kitchen sink at the rapists. But now... Krasney is going to be fighting for his political life, and he's forced our hand as well.\"\n\n \"You'll never believe this,\" Daniel said, \"but Krasney still wants to severely reduce charges against all but the rapists, even the guys that beat up the EMTs, and let them have probation in exchange for guilty pleas to misdemeanor offenses.\"\n\n \"Is he nuts?\" asked Chief Moynahan.\n\n \"That's a debatable point.\" I said. \"But a debate for later. What it shows us, Chief, is that Krasney is still being pressured hard to put out these fires in a way beneficial to the Fire Department. Am I the only one smelling sleaze and corruption, here?\"\n\n I was not.\n\n Part 15 - Interviews \n\n We call them \"ABC' days... days when all three of our lettered Interrogation Rooms are used. These are the rooms that lead to the outside and are used for witnesses and not-yet-arrested people.\n\n I stepped into Interrogation-Charlie with Theo Washington. Hans Logan and was with a Union-furnished lawyer.\n\n \"Paramedic Logan,\" I said, \"For our protection and the preservation of your rights, I am going to read you your rights.\" I did so from the card. Logan affirmed his understanding, and said he reserved the right to invoke his 5th Amendment rights at any time.\n\n \"Okay, you say you left Mr. Naples, Mr. James and Mr. Lawson to go to lunch, is that correct?\"\n\n \"I think Lawson had already left the room.\" said Logan. \"But yes, I left and met up with others to go to lunch.\" He gave two other names, saying he was in sight of at least one of them until they got back, by which time Naples was already found dead.\n\n \"Okay.\" I said. \"Just a couple of other questions----\"\n\n \"My client has already provided an alibi for his whereabouts.\" said the lawyer. \"It should not be necessary to ask him any further questions.\"\n\n I just looked at the legal beagle. \"Counselor, I would be shocked if you were not aware that I'm not asking these questions solely to determine Mr. Logan's guilt or innocence, but to provide information that might lead to who else might have committed this crime. Now Mr. Logan, I do understand that you and Mr. Naples were at odds over calling the strike, is that not so?\"\n\n \"Not quite.\" said Logan. \"Let me explain fully: I did not like what Mr. Naples was doing regarding pressuring us to go on strike. I did not feel his motives included our best interests. To that end, I was definitely skeptical of him and cautious to rush into anything he suggested. But that does not mean I was at odds over calling the strike. I was in favor of it, as were many of my colleagues. But I wanted to try dialogue first, and at least show our side's willingness to negotiate in good faith. The Town & County Council showed bad faith in summarily refusing to even talk with us, even after one of their County employees was violently raped.\"",
        "\"I see.\" I said. \"Okay, you are a skilled EMT; indeed, you are a full paramedic, is that not so?\"\n\n \"That is correct.\"\n\n \"Are you aware of how Mr. Naples was murdered?\" I asked, my eyes boring into his.\n\n \"Uh, I heard he was stabbed, but I have no details.\" said Logan.\n\n \"Then I will give you some.\" I said. \"Mr Naples was stabbed in the back of the neck, in a way that an expert at human physiology would know would cut his spinal cord and kill him. You would have that kind of knowledge, wouldn't you, Mr. Logan?\"\n\n The lawyer immediately pulled Logan towards him, and began whispering in his ear. Then the lawyer said to us: \"Your question is a leading one, and an insinuation. I am advising my client to not answer it at all. Furthermore, unless you are going to arrest my client, I am concluding this interview and demand we be let out of here immediately.\"\n\n \"Okay.\" I said shortly. I then looked at Logan. \"Mr. Logan, you are not under arrest, at least not yet. However, you are a 'person of interest' in this case, and your rights have already been read to you vis-a-vis that designation. Do not leave the County, Mr. Logan. If you do, we will ask the Federal Marshals to find and arrest you, and you will be detained as a fugitive fleeing from the jurisdiction. Is that clear?\" Logan looked discomfited and angry, but said he understood.\n\n * * * * * * * * * * * * * * * *\n\n I then went to Interrogation-Bravo, where Mr. Wilbur James was sitting. Alone.\n\n \"Mr. James,\" I said, \"I will read you your rights.\" I did so from the card, and he affirmed he understood. Then I said \"I understand you are a lawyer, Mr. James, but you may have, and I advise you to have, separate counsel to represent you. Do you want to obtain such representation?\"\n\n \"No, I'll represent myself.\" said James.\n\n \"Very well.\" I said, having stuffed one legal loophole. \"So I understand you left Mr. Naples, Mr. Logan, and Mr. Lawson when you went to lunch, is that right?\"\n\n \"Partly.\" said Mr. James. \"Mr. Lawson was not in the room; I believe he went to the restroom. Mr. Logan left just ahead of me.\"\n\n \"How much ahead of you?\" I asked.\n\n \"I mean I could see the stitches on the back of his suit coat, and those of his two friends.\" said James.\n\n \"Were you with someone else the entire time you were at lunch?\" I asked.\n\n \"I can't say that I was.\" said James. \"I followed Mr. Logan and his friends out the door. They were going to a bistro, so I went to City Hall to take care of some legal and paperwork issues concerning the strike. I was in the City Attorney's office most of the hour, talking with one or more persons the entire time, then I walked back. Others had found Mr. Naples dead by that time.\"\n\n \"How long did it take you to walk to City Hall?\" I asked. Mr. James replied that it was about ten minutes, as he did not walk swiftly. Getting back was about six or seven minutes, as he walked more quickly then.\n\n \"Mr. James, you were an EMT in your younger days, is that right?\"\n\n \"Yes, I worked with the University Hospital's ambulance service while I was a law student, which paid my way through school. I was then with the County EMTs, but soon found that being a Union lawyer was much more my calling.\"\n\n \"Were you ever in the military, or had any kind of para-military medic training?\" I asked.\n\n \"No, nothing like that.\" said James.\n\n \"Do you know how Mr. Naples was killed?\" I asked.\n\n \"Yes.\" said James. \"I've seen the autopsy report.\"\n\n \"What?!\" I asked, astonished. \"How? I only saw it this morning.\"\n\n Wilbur James smiled. \"You saw the raw report, straight from the Medical Examiner, and first thing in the morning, I would bet. I saw the official report, signed off on by the Coroner a few hours ago. The Union filed an Open Records Act for it, which we're able to do for portions of it under the law, and the Coroner readily complied.\"\n\n \"O-kay.\" I said, not really happy about that, but unable to do anything at the moment. \"So, what other Unions have you represented as a lawyer?\" I asked.\n\n \"For a while I represented the SEIU in the City.\" said Mr. James. \"But after a few years, I saw what that Union really was: a front for activists and anarchists. So I dropped them and concentrated on the labor unions: the IBEW was my biggest portfolio for a long time. But I've always served the EMTs here, and they've needed all the help they could get with the headwinds they were facing. I've never seen such hatred for public service workers as the Fire Department and the Town & County Council showed for these EMTs.\"\n\n \"Why is that?\" I asked out of curiosity. \"I'm admittedly a newcomer to this County, and I don't understand it.\"\n\n \"I don't have that answer for you, Commander.\" said Wilbur James. \"But I can tell you this: the truth of it is as easy as the answer to almost any other unexplained political matter: follow the money. Just follow the money, and somewhere down that path you will find the true answer.\"\n\n I gave him the boilerplate about not leaving Town, and had a Patrol Officer escort him out.\n\n * * * * * * * * * * * * * * * *\n\n I went into Interrogation-Alpha with Theo. Inside was EMT Jimmy Lawson. His hair was almost the same color as mine. He was slender, almost slight, and a bit nerdish looking. He also had a Union-supplied lawyer, but this lawyer looked bored and disinterested in what was going on around him.\n\n \"Okay, Mr. Lawson,\" I said, \"I will read you your rights at this time.\" I did so, and Lawson said he understood. Surprisingly, the lawyer did not advise Lawson about the nuances of his rights, so I said \"Mr. Lawson, we will appreciate your cooperation in answering our questions, but you may invoke the Fifth at any time. Once you do, any waiving of those rights means they cannot be re-invoked.\" The lawyer seemed faintly shocked that I was being so helpful to his client. And I began wondering if he was intentionally not serving his client. Were they going to set up Lawson to take the fall? I wondered.\n\n \"Okay, Mr. Lawson,\" I said. \"You were in the military as a medic, is that right?\"\n\n \"Yes sir, I was part of a MASH unit, one of the bigger-bed hospitals.\" Lawson said. \"I went out to help transport the wounded back to the hospitals.\"\n\n \"You were not assigned to any combat troops as a medic?\" I asked.\n\n \"No sir.\" said Lawson. \"I had an Expert Medical Badge, but my assignments didn't allow me to qualify for a Combat Medical Badge.\"\n\n \"I see.\" I said. \"Still, you must've seen some harrowing things over there. Afghanistan, wasn't it? So you had to learn how to take care of yourself, is that right?\"\n\n \"Iraq at first, then Afghanistan, sir.\" said Lawson. \"And yes, we were trained and prepared for just about anything. We never knew if terrorists would attack our field hospital, or attack our medical convoys.\"\n\n \"Would you say your medical training was of a high quality?\" I asked.\n\n \"Yes sir, it was.\" said Lawson. \"It's helped me to be a good EMT, and I was trying to get to Paramedic ahead of time, but the Fire Department brass caught that and began holding me back.\"\n\n \"So you must be pretty pissed at the Fire Department?\" I asked, looking steadily at Lawson.\n\n \"I'm not happy about it, but it's the System.\" said Lawson. \"You really can't fight the System. I never could get put in a place to get my CMB, either. So I was just looking for a job somewhere else.\"\n\n \"So Mr. Lawson,\" I said in my folksiest manner, \"I am hearing from some others that you were not really in favor of the strike. Why not? Especially as the Fire Department was holding you back.\"\n\n At this point, the lawyer should've said something. My question was presumptive, suggesting Lawson was against the strike as if it were fact. But the lawyer remained silent, passive, and bored. Lawson was practically left on his own.\n\n \"Uh, it's not that I was against the strike.\" said Lawson. \"But I knew that going on strike without really laying groundwork, getting the public on our side, would simply mean us being out of our jobs, which I guess is going to happen tonight.\"\n\n \"Mr. Lawson,\" I asked, \"who do you think would want to kill Mr. Naples, and why?\"\n\n \"Uh, I have no idea, sir.\" said Lawson. I again noted his lawyer had let my question go unchallenged. \"I don't think anyone liked him, but why they'd want to kill him, I'm not sure.\"\n\n \"Okay, one more question.\" I said. \"By all accounts, you were the last person in the room with Naples before he was found dead. Is that so?\"\n\n \"Uh...\" said Lawson. \"I don't know. I went to the restroom just as everyone was breaking for lunch. When I came out, the room was empty. I figured Mr. Naples had gone to lunch or was in the other restroom. So I left and went home to see my wife and baby. When I got back, a couple of people had just found Naples. He was dead. I called the Police, and other people started coming back in from lunch.\"\n\n \"All right, then.\" I said. \"By the way, you need to stay in Town, as you are a person of interest in this case. Should you need to leave town, you need to let the Police Department know first. Thank you for your time.\" I had an Officer escort him and his worthless piece of crap lawyer out of the building.\n\n * * * * * * * * * * * * * * * *\n\n Once the interviews were over, I did something I don't often do: I went into MCD to talk to Tanya and Theo about the case in an off-the-cuff manner.\n\n \"So, who did it?\" I asked. \"Theo?\"\n\n \"Sir, we're not there yet.\" Theo replied. \"From the interviews, I can make cases for and against Logan and Lawson. I'm inclined to think Mr. James is not involved, though.\"\n\n \"Why is that?\"\n\n Theo replied \"I think either EMT or Paramedic, Logan or Lawson, could have the knowledge to kill like the perp did. Mr. James, not so much. Second, he's physically less fit that the other two younger men. Third, Logan and Naples were at odds, that could be motive, but Logan may have the best alibi of the three. Lawson might have means and opportunity; he was apparently the last to leave the building, and may or may not have been alone with Naples. But, and this applies to all of them, I'm not seeing where this murder benefits any of them, especially a guy with a wife and baby to take care of.\"\n\n \"Very true. That's very true.\" I said. \"But we cannot count out Mr. James just yet. Lt. Perlman, what say you?\"\n\n \"Theo was bringing me up to speed on the interviews,\" Tanya said, \"and we've been talking about it. I agree with what Theo just said.\"\n\n \"So, what's your plan of action?\" I asked.\n\n Theo said \"I don't know if this is the correct action, but I thought I would work on Logan's alibi. It could be that his friends were in on it with him, and they came back around and killed him. So I was going to go to the restaurant he said they went to, ask around to see if anyone remembers him being there. If they do, we can at least back-burner him and look into the other two more closely.\"\n\n \"That's a good idea.\" I said. \"What else?\"\n\n \"What Myron is doing now, sir.\" said Tanya. \"He's getting background data on them, financial data, all that stuff. We'll see if anything pops out and go from there.\" I nodded, and after a pause she asked \"Sir, what do you think of the case?\"\n\n \"I will withhold judgement until the data comes in, and Theo checks out Logan's alibi.\" I said.\n\n Part 16 - Television Specials and Ringing Endorsements \n\n Cindy took a long lunch, not getting back until 3:00pm. I was good with that, having given her permission, and I knew well the reason: to do the closing paperwork to buy out Melina's half of ownership of Town Fitness Centers.\n\n When she got back, she came to my office. \"I see you kept the Police Force from going on strike while I was gone.\" she teased after I had her sit down in one of the comfortable 'hot seat' chairs. \"So, what's up, sir?\"\n\n \"Detective Washington is confirming Hans Logan's alibi.\" I said. \"Once that's done, we may be able to move quickly on this case.\"\n\n \"You know who did it?\" Cindy asked, surprised.\n\n \"It's easy enough.\" I said. \"You tell me, Crowbar 2. You were watching the interviews in the anterooms. You were at the crime scene, saw what I saw, and you've read the reports.\"\n\n \"The problem for me is reasonable doubt.\" Cindy said. \"I can make a case for any of them, and then I can pretty much knock the case down for any of them. We're going to need something solid to get a conviction.\"\n\n \"A conviction... yeah.\" I said. Cindy did not fail to notice that I was going into a reverie. She waited me out.\n\n \"So,\" I finally said. \"Who was your lawyer for the gym closing?\"\n\n \"Virginia Madison, of Dewey, Burnham & Winn.\" Cindy said. \"It was pretty straightforward. I've added Melina's taxes to the sale, so that she does not lose on that. It being this year means I don't have to pay taxes on the sale, and all but two percent of her shares, or 48% of the total, are in an escrow to sell to someone else in the next two months so that my LLC doesn't get hit with a huge tax bill next year. All cut-and-dried, and you probably heard a ton of this from your father while you were growing up.\"\n\n \"As a matter of fact,\" I said, \"I did. By the way, have you heard from your parents since they left for home, for Canada?\"\n\n \"No, Molly talked to our mom.\" Cindy said. \"It's hockey season, and that's apparently all that is going on up there. My dad asked Molly about Amy and Buddy, and she told them the current situation. Why?\"\n\n \"Oh... I was just wondering, since you've made so much progress with them.\" I said. \"What about Jenna?\"\n\n \"She's pissed that I was not on the stage with her when she announced.\" Cindy said. She then paused and said, reflectively, \"I don't know, maybe I should've been there. I thought it might be inappropriate, with me being a Police Captain and all.\"\n\n \"You definitely can't do anything for her campaign while in uniform.\" I said. \"So make sure to be in civilian clothes if you so much as enter her campaign headquarters, for any reason.\"\n\n \"You know me, Don, I'm a political atheist.\" said Cindy. \"Jenna's always wanted me to get more involved in lesbian issues, but I'm not like that. I just want to be a Police Officer. Is that so wrong?\"\n\n I chuckled. \"Not for me. But it must be tough for you. These are not easy questions. Help your fianc\u00e9e in a highly politically charged situation at risk to your political future, or stay out of the fracas, do your job, and piss off the woman you love.\"\n\n \"My political future?\" Cindy asked.\n\n \"Oh, you bet.\" I said. \"Even in a small Town like this, Police Captain is a political position. You are not just a Patrol Officer on the street, no offense to them. And yes, my ass is even higher up the flagpole than yours, but I of course just do not care, as T-Square is so fond of saying.\" Cindy laughed.\n\n \"So,\" I said, \"are you going to watch the Bettina special tonight with Teresa and Amy? She's already told me she'll be at the Hospital.\"\n\n \"Yes sir.\" Cindy said. \"Where are you going to be?\"\n\n \"At home. Mountain Nest.\" I said. \"I'll take Buddy to visit Amy, but I'll bring him home before the show starts.\"\n\n * * * * * * * * * * * * * * * *\n\n \"This is Bettina Wurtzburg, KXTC Channel Two News!\" said Bettina from the anchor desk at 8:00pm, still Tuesday, January 12th. \"Tonight, my special report will be a follow-up on Town & County Police Lieutenant Teresa Croyle.\"\n\n Bettina recapped the previous special, then said \"Since returning to the TCPD, Lieutenant Croyle has led the Vice Squad to some tough victories in the War on Drugs. Her superiors credit her as a major factor in stopping a diamond smuggling ring in the County, and after a year-long operation, her team took down Viscotti Cabs for their drug smuggling operations.\n\n \"That was quickly followed up by the takedown of the Beanstalk Gang, a well-established and feared drug gang. She endured gunfire while leading the raid that captured many of the gang as well as the biggest haul of drugs since Sergei Molotov was raided and run out of Town by the now-famous Iron Crowbar.\"\n\n Bettina then brought out the shield that I had brought out at the press conference before: \"This police shield was used by the lead SWAT Officer on the raid to rescue the kidnapped ADA Jenna Stiles. As you can see, it was directly hit by machine gun fire several times. What has not been publicly told, until now, is that besides the SWAT Officer holding this shield, Lt. Croyle was behind it, leading the charge, firing at the perpetrators. Actions like these were certainly a contributing factor to Lieutenant Croyle being inducted into the Police Honorary Society, the Orange Order, in early December.\" The tape showed Teresa saying that she'd never expected the Orange Order honor because of her past, and she was totally surprised by it. \n\n Then Bettina continued: \"But Teresa's personal life also has changed. In the previous show, we told of her sister Alexis's death one Christmas Eve years ago. Since then, Teresa's father became grievously ill, and she reached his deathbed just in time before he passed away. What she had never known, and only learned then, was that her father was a decorated hero of the Viet Nam War.\" The tape showed Teresa saying that she was glad her father got the military funeral that he deserved, and his coffin's flag, in it's triangular display box in Teresa's office, was shown close up to the viewers of the show.\n\n \"And that's not all.\" said Bettina. \"This past Christmas Eve, Lt. Croyle found a runaway orphan named Amy, who was caring for her dog Buddy.\" One of my Christmas pictures of Amy, Buddy, and Teresa was shown. \"Teresa and her Police colleagues took Amy and Buddy into their family for Christmas. But the news is not all good. Commander Troy's wife, Dr. Laura Fredricson, who is on Staff at University Hospital, discovered that Amy is very ill... and will need a very rare liver transplant to survive. Celebrated cardiologist Dr. Richard Searles says he is ready to perform the potentially complicated operation just as soon as a suitable organ can be found.\"\n\n On screen now was a picture of Teresa and Amy at the hospital, with Buddy the adorable Cocker Spaniel sitting next to Amy. Bettina continued: \"Teresa Croyle applied for and was granted temporary guardianship of Amy, and the process continues to make that permanent, and she has found a new sister on the day her older sister was taken from her by a drunk driver. But it will take a post-Christmas miracle to get Amy the transplant she needs, and they ask that you keep Amy in your prayers. By the way, Buddy is being cared for by friends.\"\n\n Bettina then closed up with a change of subject: \"In closing tonight, I want to say something to you, the viewers, that I have never discussed before, but needs to be brought out. Recently, a young woman, working as an EMT to help others, was brutally raped by two Firemen. In addition to Lt. Croyle and her fellow officers saving ADA Stiles, who endured hours of being raped and beaten, the Police acted swiftly to save the woman's life and arrest the thugs that violated her.\n\n \"What I have not said before is that a few years ago, I was also attacked and sexually assaulted, and brutally beaten as well, in a effort to stop my reporting. In all of these cases, the efforts of the Police Force are to be lauded. But District Attorney Gil Krasney's actions and tepid responses to crimes against women are inexcusable. KXTC has confirmed that he was negotiating to let these 'alleged' rapists go free on much lesser charges, and these negotiations only stopped when they were revealed to the Public.\n\n \"As Managing Editor of KXTC, and on behalf of the Board and ownership of KXTC,\" declared Bettina, \"I am authorized to endorse Jenna Stiles for District Attorney, in the hope that Gil Krasney will be defeated. Only when he is defeated will the women of this Town and County know that the District Attorney's Office has their interest at hearts instead of the political convenience of others. This is Bettina Wurtzburg, saying goodnight.\"",
        "Part 17 - Progress and Hope \n\n \"This is Bettina Wurtzburg, KXTC Channel Two News!\" said Bettina at 7:00am, Thursday, January 14th. \"The outpouring for support for young Amy Croyle has been tremendous! People from across the State and even the Nation have called in, asking how they can help. Amy's name was elevated on the national organ donation list, in the hopes that the very rare match she needs can be found before it is too late.\" \n\n A video came on, showing Amy, Buddy, and a visitor at the Hospital: \"Yesterday, the famous rapper T-Square visited Amy and her dog Buddy in the Hospital. Amy is a fan of T-Square, and said she was very excited to be visited by the world-renowned rapper.\"\n\n \"Meanwhile, the first Public Policy Polling has come out since Jenna Stiles announced her candidacy for District Attorney, and D.A. Krasney as a four point lead, almost within the margin of error. As to the continuing EMT strike, only 25% of respondents support the striking EMTs. Ten percent have no opinion, and 65% say they either support the Fire Department's side or simply don't care. Over 75% of respondents do say that their County taxes should not go up to pay for a private ambulance service.\"\n\n * * * * * * * * * * * * * * * *\n\n Cindy and I were in my office just before 8:00am, preparing for the 'Angels' meeting, when our Catholic Chaplain, Father Romano, came to my office. I offered him some coffee, which he gratefully accepted.\n\n \"I just wanted to tell you,\" he said happily, \"that last night young Amy professed faith in Christ and received the Sacraments. We also prayed for success in finding her a transplant, and she insisted on praying for Buddy, as well.\"\n\n \"I also believe the Lord loves dogs, Father.\" I said. \"But I perceive that there is something else you came to tell us?\"\n\n \"I've been told that not much gets by you, Commander,\" said the good Father, \"and I can see that's true. Amy told me an enlightening but... difficult story last night. She said she was no longer afraid to die, not just because she had accepted Christ, but... well, she said that she thought she would be buried in an unmarked grave, with no one knowing her name. But now, she said, she has a name for her tombstone, since Lt. Croyle has 'adopted' her. Lt. Croyle was there, and told her that she expected a transplant organ to come, and that tombstones could wait. For myself, I... was not sure what to say about that.\"\n\n I just nodded, understanding. Cindy asked to be excused for a moment, and left the room...\n\n * * * * * * * * * * * * * * * *\n\n At 9:00am, I got a piece of news, as Detective David Krueger, Supervisor Myron Milton, and Master Technician Mary Mahoney Milton came to my office. I fought the urge to call them the 'Three Musketeers'.\n\n \"Sir,\" said Krueger, \"a money transfer went through Vauxhall Holdings last night. Rather major amount: $200,000 came in, essentially laundered through several banks on the East Coast. The money then went out in two directions, being laundered again. But we were able to trace one of the two paths to a little distribution and delivery company called 'Moschel and Stein, LLC'.\"\n\n Mary took it up: \"There's not much on them, but the only officer on the State incorporation filing is one 'Steven Moschel'. Here's his DMV picture.\" I took the file folder, seeing the photo of a youngish man with very curly black hair. Mary continued: \"He's 5'9\" tall, pretty lean. Has a few hundred on his credit cards now and again, pays them off. But he also has offshore bank accounts, and it looks like his business routed a good bit of this money to them.\"\n\n \"Can you get the information on the offshore account?\" I asked.\n\n \"It'll take a bit of time.\" said Krueger. \"We'll need Jack Muscone's FBI team to work with us on that.\"\n\n \"Which they'll do, as soon as you tell them about this.\" I said. \"Okay guys, great work. Keep monitoring, and as usual, not a word about this.\" Everyone agreed. I dismissed them. David and Mary got up and left. Myron remained seated.\n\n \"I take it you need to talk to me about something?\" I asked. I took out the bug-killer, in case I.A. was listening in, and activated it.\n\n \"Yes sir.\" said Myron. \"And it may be something big.\"\n\n * * * * * * * * * * * * * * * *\n\n \"I think we've got it!\" said Dr. Richard Searles. It was 9:30pm, and Laura and I had brought Buddy to see Amy. Teresa was there, of course. Dr. Searles had practically knocked the door down.\n\n \"Let's go into the hallway.\" Laura said. She and I went out with Dr. Searles.\n\n \"City University Hospital has a woman that is dying.\" said Dr. Searles. \"She's expected to die within about 24 hours. As you can see from this report, her liver may be 'close enough'.\"\n\n \"Have you put in the claim?\" Laura asked.\n\n \u2028\"You bet.\" said Dr. Searles. \"Several of her organs have been asked for, but Amy's top of the list for the liver. Only one other claim was made, and that's not an exact match either. We've already been told we'll get it.\"\n\n \"Should we tell Amy?\" I asked.\n\n \"We need to tell her that it's possible, and that things will go fast if it happens. She'll have to be prepped for surgery, we'll have to get ready because that organ will be here very fast once the woman dies.\"\n\n \"Is there anything I can do to help?\" I asked. \"Transportation, etc.?\"\n\n \"No, it has to go through an accredited delivery service.\" said Dr. Searles. \"Don't worry, that's all been arranged, and is routine for all our hospitals for organs going in or out.\"\n\n \"Okay,\" I said, looking at Laura. \"I'm going to allow myself to feel some hope. How about you?\"\n\n \"It's not a perfect match, but it might save her.\" Laura said. \"It'll definitely give us time to find a better match...\"\n\n * * * * * * * * * * * * * * * *\n\n \"Hello, my lovely Sinon.\" he said as the lovely Sinon came into his private study. \"Would you care for a drink?\"\n\n \"Thank you, but not tonight.\" she said. \"I have hours of work ahead of me. I came here because a very urgent situation has developed.\"\n\n \"Yes, I know.\" he said. \"The liver for donation has been claimed for that orphan girl at University Hospital.\"\n\n \"She's a national story now, too.\" she said. \"I guess we'll let this one go?\"\n\n \"Are you kidding?\" he snarled. \"That little waif getting sympathy for caring for a filthy dog? That simply disgusts me. But think no more of it, my dear. And by the way, we may be near getting Robert Brownlee the heart he needs.\"\n\n \"It'll be the first time that bastard has ever had a heart.\" she said. \"And what he really needs is brains.\"\n\n \"And a pair of balls.\" he said, making her giggle. \"So what will have your attention for the next few hours?\"\n\n \"The Police.\" she said. \"The three Mouseketeers, Krueger and the Miltons, are working on something hot. I'm going to have to try to invade their systems and find out what it is. Thankfully, everyone is distracted by the exploding politics of the Fire Department and the D.A.'s Office.\"\n\n \"Yes, that.\" he said. \"Between all this, my plans are indeed being hampered. I shall have to take swift action to rectify these problems. By all means, do let me know what you find in your hacking efforts. Are you sure you don't care for a drink?\"\n\n \"No, thank you.\" she said. \"But after all this settles down, I'll take you up on that... and have a long, hard night with my boy-toy stud. Would you like to watch, as you often do?\"\n\n Part 18 - Victory and Failure \n\n \"War is hell!\" ---- General William Tecumseh Sherman\n\n Friday, January 15th. The ROTC Cadets made a point to start their Winter P.T. by trying to run the Town & County Police Commander into the ground. But they did not run me into the ground. Even after a grueling hour of work with Sergeant Tate, I kept up with them.\n\n After the run, I addressed them. \"Ladies and gentlemen, I am honored that I am able to work out with you. Your commitment to our Armed Forces is something I am very grateful for. Having said that, and having been there myself, there is something you need to know.\"\n\n \"I was never in military combat in the Army,\" I said, \"but I've been in situations close to it with the Police Force. And I can tell you what my ROTC Instructor, who was a Green Beret in Viet Nam, told me and my ROTC class: there is nothing on this earth as hard, as physically strenuous and mentally taxing, as combat. There is nothing else on earth that can prepare you, except for the training you are doing every morning, and even it is not enough when the balloon goes up and the shit hits the fan.\"\n\n \"There is no silver medal in war, ladies and gentlemen.\" I told my very attentive audience. \"If you lose in war, you lose everything. And I mean everything. Your conquerers will take your possessions, your families, your spouses and your children. They will rape your wives and daughters in front of you because they won and you lost. The Freedom we enjoy today... will be gone if you lose. Period. No silver medal. So remember that every time you do your pushups, every time you run around this campus, every note you take in class. It is not 'win or go home', it is not 'win or lose'. It is 'win'. Period.\"\n\n * * * * * * * * * * * * * * * *\n\n South Vietnam. Somewhere west of Saigon.\n\n \"All right, guys, get these god-damned helicopters ready to go!\" yelled the Captain, the shoulder patch of the 173d Airborne Brigade standing out against the olive drab of his uniform. \"There is no telling when we're going to have to jump to go fuck up Charlie!\" Men scrambled.\n\n \"Cordell!\" the Captain yelled at the Corpsman, who came up and saluted. The Captain returned the salute and then said \"You got all your medical stuff ready to go on ten second's notice?\"\n\n \"Yes sir!\" said Cordell as the stood in front of a sandbagged building that served as the terminal for the line of choppers. \"Sir, do you think an attack is imminent? The TV is full of chatter about peace talks in Paris.\"\n\n \"I don't care about that shit.\" said the Captain. \"I don't know if we're going to be attacked, but there's chatter going on in our own intel room, and they won't tell me about it. Besides, we have a job to do here, until they tell us we can go home. Besides, Cordell, you're the cynical one.\"\n\n \"Yes sir.\" said Cordell. \"I'm just wondering what's going to happen to these people, the Vietnamese people, when we leave. I don't trust the NVA not to cross the line and invade once we're gone. And they'll show no mercy. They're going to kill a lot of people, brutalize the women in front of their children. And then... well, it'll be oppressive under the Communists.\"\n\n \"Well, Cordell, we can't do a damn thing about that. All we can do is our job right here, right now. Besides, Cordell, those so-called peace talks are a sham. They're making too much money to pull out now. But you and I will be home by Christmas.\"\n\n \"I hope so, sir. I hope so...\"\n\n To be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/hampered-in-his-plans-ch-03"
}