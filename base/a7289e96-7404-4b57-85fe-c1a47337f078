{
    "title": "Montana Winter Ch. 02",
    "pages": [
        " ALL CHARACTERS IN SEXUAL SITUATIONS ARE OVER 18.\n\nCharacters are fictional. \n\n*\n\nThe next day with my morning students Lore showed me some of the techniques he used with his clients back in Chicago. They were amazing and totally different from mine. It was easy to tell he was really knew what he was doing. Between clients he told me that he had a masters in social work, a masters in physical therapy, and was debating going back to school for his PhD in physical therapy.\n\n\"I is impressed,\" I said, and smiled.\n\nThat night, as soon as we got to his cabin, he gently removed my hat and jacket and looked me in the eyes. \"Love making tonight, Noah.\"\n\nI felt like I swallowed a mouth full of flax flowers, but I smiled.\n\nHe went to turn on music. \"So, smooth R & B. No urban funk this time.\"\n\nLore turned on the R & B station and the opening notes to \"Let's Get It On,\" by Marvin Gaye filled the room.\n\nWe cracked up.\n\nLore tilted his head. \"Gotta listen to the man,\" he said.\n\nThen he whipped me around and shoved my torso face first down on the bed.\n\n\"Well, maybe we could get a little fucking mixed in with it.\"\n\nI smiled over my shoulder. Fine with me.\n\nLore stretched my arms over my head on the bed. He grabbed my hips and moved me around a little, until my legs were open and firmly planted on the floor. Then his body was pressed behind mine, head to toe contact, and I felt it everywhere. The weight of his chest on my back, his hips snug against my ass, his arms stretched over mine, the palms of his hands pressed firmly over the backs of my hands. He was like a living, personal, cut to fit you, warm, heavy blanket of love and comfort\u2014but better.\n\n\"Oh, Lore,\" I said on a sigh.\n\n\"That's it, baby.\"\n\nI expected him to do something right away, but he didn't. He just seemed to pour his heat into my body. Then he moved his hips against my ass, a slow grind like we were dancing. Lore grabbed my wrists and used his whole body to stretch my torso out on the bed. I felt vulnerable, and trusting, and aching, and romanced all at the same time.\n\nI closed my eyes. Don't get hurt again, Noah. Just don't. He's only here for another few days, and then he's going home.\n\nThe song changed, and the new song was \"As Long As We're Together\", by Al Green, I think. I decided it was a sign I should be grateful for the moment and stay in the present.\n\nLore kissed the back of my ear.\n\n\"Whatya thinking about, baby?\"\n\n\"How glad I am to be here with you. How amazing it feels to be underneath you.\"\n\n\"Yeah?\" He ground his hips into me, and this time I could feel that he'd gotten hard.\n\n\"Oh yeah,\" I whispered. \"Better than anything.\"\n\n\"Well then,\" Lore said. \"We'll have to just keep moving in that direction.\"\n\nLore shoved my shirt up, nipped my side. \"Keep your hands there,\" he said in a husky whisper. \n\nHe reached under me, undid my jeans. Pulled my jeans and underwear down.\n\nHe palmed my ass, caressed it.\n\n\"You've got such a beautiful ass,\" he said.\n\nLore got up; I thought he was reaching for a condom, but he seemed to change his mind. I turned around to see him stroking himself, just a few times, so magnificent.\n\nHe laid his body back over mine, his cock bare against the valley between the muscles of my ass he just caressed. I couldn't believe he did that. It should have made me nervous, but it didn't.\n\nI trusted him. I trusted him completely. \n\nThe next song was \"I Wanna Be Your Man\". I didn't know who sang it. I'm not really much of an R & B guy.\n\nHe stretched my arms out to the sides, like a cross, rubbed his cock more in the same place, nuzzled his nose into my hair, kissed behind my ear, kissed the back of my neck.\n\nIt was intimate. Maybe too intimate.\n\nLore moved away again. Just the sensation of him backing off me for a second was like being robbed of something precious, and it took an act of willpower not to cry out like a baby deprived of a favorite toy. He hadn't gone far. I turned my head to look. He was reaching for a condom with one hand, and stroking himself slowly with the other. And looking at me with a mind-blowing hot lust like I was the only man in the world.\n\nI closed my eyes.\n\nOh God.\n\n\"No, not like this,\" Lore said.\n\nHe pulled me up and laid down on top of me, rubbing his hard cock against mine.\n\n\"God, that feels fantastic,\" I said.\n\n\"Yeah, for me too. Noah, open your eyes. Look at me.\"\n\nI did. \n\n\"I want to make love to you face to face, so I can see every expression on that beautiful mug of yours.\" \n\n\"What? What?\"\n\n\"Will you let me make love to you this way?\"\n\n\"Um, I thought only straight couples made love this way.\"\n\nHis eyes went with wide in an incredulous expression and then he blinked, stopping to see if I was serious. I was.\n\n\"I mean, uh, how could that even work? I don't have an entrance in the front.\"\n\nIn one fierce move he grabbed the back of my thighs, rolled my hips up, slammed his shoulders forward. He pressed the underside of his cock over my entrance.\n\n\"Holy shit.\"\n\nA completely animalistic smile spread across his face. \"You've never done it this way?\"\n\nI shook my head.\n\n\"Willing to do it with me?\"\n\nFor a second neither of us breathed. Oh yeah, I was willing.\n\nI nodded. He jumped off me again and got the lube and put on the condom. I watched him begin to roll the condom over his cock, and then I closed my eyes, I couldn't look at him; he was too handsome.\n\n\"Hey, baby,\" he said softly, putting me in the position he had me in earlier. His big, brown eyes stared into mine.\n\nMy stomach fluttered.\n\n\"You ready?\"\n\nI nodded.\n\nWith one hard thrust he buried himself to the hilt.\n\n\"Oh fuck.\"\n\nHe grinned at me, the cat that ate the canary but more so. The cat that ate the aviary.\n\n\"Ready?\"\n\n\"Yeah,\" I said.\n\nLore started moving, slow, sinuous thrusts. God, Lore, on top of me. At this angle everything was different. He pushed my knees up higher, and grabbed both my hands. He pressed my hands back into the mattress on either side of me and threaded his fingers threw mine, lacing our fingers together.\n\nMy God, I was having sex and holding hands.\n\nI closed my eyes to savor it all.\n\n\"Look at me, baby,\" he said.\n\nMy eyelids flicked open. The connection of feeling him move inside me, his low belly rubbing my cock, our hearts so close, the expression of heat on his face... it was all so much.\n\nI closed my eyes again.\n\n\"I'll just look at you then,\" he said over the music, a new song now, by Barry White I think. \"I love looking you anyway, so it's okay if it's just me, looking at you then,\" he repeated, and then he squeezed my hands harder.\n\nLore pumped faster, and I bucked up against him. The smells of him got more vivid with the increasing heat of his skin, that cologne, his soap, the pure male, clean sweat of him. He was making this 'mmmn, mmmn, mmmn,' sound, a cross between a groan, a savor song , and a plea.\n\nLore kept the same fast speed but drilled me harder. My toes started to tingle, and my balls seized up, and I couldn't believe how much I wanted him, all of him.\n\n\"Come for me, baby, come now.\"\n\nAnd I did. As soon as he said it, like his voice controlled some deep brain command center in my body, I came so hard I saw stars.\n\nAnd then I saw only one star. Him.\n\n\"Close,\" he said. Then his cock twitched inside me, the kick setting me off again.\n\nWhen it was done he stayed in me, on top of me, still holding both my hands in his. He kissed me gently. \n\nThen he chuckled. \"I think I recall once telling you I thought I could teach you a thing or two. Didn't think it would be that it was your first time at that.\"\n\n\"You can teach me anything,\" I said. \n\nOh God. Don't fall for this guy. He's leaving. He lives 1,000 miles away. Or however far Chicago is.\n\n\"Come on, handsome,\" Lore said, rolling off me. \"Let's take a shower. If you're a good boy I'll wash your hair.\"\n\nI smiled a coy grin at him. \"I'll be good,\" I said, and touched my tongue to my upper lip, and then my nose. \"I promise.\"\n\nHe laughed and walked naked to the bathroom while I stayed in the bed for a minute, marveling at the intimacy of the missionary position, and ogling his fabulous butt.\n\n*\n\nI woke up with that tune in my head; the one I couldn't place. It played over and over. I couldn't think of any words.\n\nThe weather report was mixed. It was supposed to be a clear afternoon and evening in Billings, but on the drive it misted slightly, and then a little bit of fog rolled in. \n\nThe drive to Billings is about an hour and half. Lore told me a lot about his family and life in Chicago on the drive. \n\nIt's a pretty boring drive to Billings. Flat land, ranches, and more ranches. I saw a buck a good ways up the road.\n\n\"Look, a deer,\" Lore said pointing at the buck. \n\n\"Yeah,\" I said. \"We get a lot of them out h\u2014\" \n\nA doe ran into the road, right at our car. I saw her from the corner of my eye, the crash a split second away. I did something that went against all instincts; I wrenched the wheel toward her, and she went sailing over my hood. Time stopped for a second, as she was suspended in mid-air, her torso seeming larger than it probably actually was\u2014because it was only inches from my windshield.\n\nShe landed gracefully on the other side. I had my right hand extended out across Lore's chest. I used all the might in my left hand to correct the car's spin. I pressed the brakes as the right front tire squealed off the road.\n\n\"You all right?\" I asked.\n\n\"Holy fuck,\" Lore said, watching the deer bound away.\n\n\"Lore,\" I asked quietly. \"You okay?\"\n\n\"Yeah,\" he said. \"What in the hell made you think to swerve toward the deer?\"\n\n\"If I didn't, she'd stop right in front of the car,\" I said. \"Like a deer in headlights. No, not like. Exactly. Frozen. A deer in headlights. I can't bear to think of the accident. She'd crash through the windshield. And I could have lost you two days early. I couldn't stand that.\"\n\nHe stared at me, obviously still startled, and scared, and full of adrenaline.\n\n\"Besides,\" I said. \"I don't have my dehydrator with me to make jerky. I'd hate to waste good venison.\"\n\n\"Jerk.\"\n\n\"You sure you're okay?\"\n\n\"Yeah, I'm all right.\"\n\nI was able to back the car up, and we didn't have any more excitement on the way to Billings.\n\nI took him to see the 2,000 year-old cave drawings at Pictograph Cave State Park, and then we walked around the city. Lore had looked up a few things on the Internet, and although I'd been to Billings quite a few times, and he never had, after the cave park it seemed more like he was leading me rather than the other way around.\n\nThe city boy thing again, I guess.\n\nHe suggested the museum, and of course I'd never been; it's not like I've had a ton of time to goof off from the ranch. Truthfully, I'd never been the really 'refined-seek-out-culture' type of guy anyway. But it was interesting; I liked it.\n\nAt Lore's suggestion, we went to the restaurant at the Crowne Plaza Hotel. It was posh, slick, and modern, yet cozy at the same time, all done up in reds, and yellows, and gold. There was a wall of almost floor-to-ceiling windows overlooking the city, and we got a table at one of the windows. The sun sank lower in the sky, sending magenta ribbons over Billings.\n\n\"Nice,\" Lore said. \"Really stunning.\"\n\nNothing compared to you, handsome.\n\nI looked down at my menu.\n\n\"Hey, Noah. Would you like to go see the Nutcracker tonight? I could see if they still have any tickets.\"\n\n\"The Nutcracker? Isn't that, like, ballet?\" It sounded really stupid when I said it, but then I thought, it could be an orchestra performance, right?\n\nHe smiled at me. \"Yeah, like, ballet.\"\n\n\"Ahhhh....\"\n\n\"Men with cute butts in tight tights.\"\n\n\"I have a man with a cute butt in no tights,\" I said.\n\nHe sighed.\n\n\"I mean, if you want to,\" I said. Just another way we were different. How many cowboys see ballet?\n\n\"Never mind, I just thought it would be nice, you know, Christmas-y.\"\n\n\"No, no, let's go,\" I said.\n\nHe shook his head. \"You're just doing it to please me,\" he said.\n\nThen I gave him my best version of bedroom eyes. \"You betcha. I'm hoping you'll be so thankful you'll want to make it up to me in the\u2014\"\n\n\"Hi, I'm Amber, I'll be your waitress.\"\n\nSigh.\n\nThere was sparkling laughter in Lore's eyes. One that said, I know the end to that sentence, and you better believe you don't need to go to the ballet to get what's coming to you.\n\nWe ordered.\n\n\"So, tickets,\" Lore said firmly.\n\n\"Let's do it,\" I said.\n\nHe took out his phone and bought tickets online.\n\nWhile we were waiting for dinner I started humming again without even realizing it.\n\n\"There's that same tune again,\" Lore said.\n\n\"What?\"\n\n\"You're humming.\" He hummed it back to me.\n\n\"Oh.\"\n\n\"Remember what it is yet?\"\n\n\"Nope. \"La-La-da-en-er. Swear I've never heard it before. Lah-da-pa-en-er, Lah-la-ah-en-er, da-da-da-da-di-da,-Ooooo-Vivian...\"\n\n\"You have a cute voice.\"\n\n\"Liar.\"\n\nThe food was excellent. We watched the sun set and lights come on over the city. \n\n\"Noah, what happened to you that you keep your heart in a box?\"\n\nI choked on my steak.\n\nLore waited patiently.\n\nI swallowed hard.\n\n\"I mean, don't get me wrong, the sex is fantastic\u2014and I'm always up for fantastic sex. But, it's like we're having parallel experiences. I'd like to have one joint experience.\"\n\nI hung my head.\n\n\"Look at me, baby.\"\n\nI looked at him.\n\n\"What happened?\"\n\nI shook my head. Maybe it wasn't even as much what happened as what didn't. I didn't really want to get into it. I wasn't much of a talker.\n\n\"I know what a disappointment it can be when things don't work out. Hey, when my marriage\u2014\"\n\n\"What? What?\"\n\nLore stopped and looked at me.\n\n\"You were married?\" My voice went up a lot at the end.\n\n\"Oh, ah, yeah.\" He waved his hand like it was no big deal. \"It was a long time ago.\"\n\n\"Married?\"\n\n\"Yeah, right out of college. When the same sex legislation went into effect in Massachusetts my boyfriend and I jumped on it. Like, the day it went live we packed up all our stuff, moved out there, and got in line. It was more like we wanted to show Massachusetts they were doing the right thing; support the state, hope other states would follow. We never should have gotten married. We were too young. That was the wrong reason.\"\n\nI just stared at him, blinking.\n\n\"What happened?\"\n\n\"He left me.\"\n\n\"No. Impossible. No one in their right mind would leave you.\"\n\nLore smiled. \"We drifted apart. I was his first boyfriend, and he felt he never got to experiment. He wanted to play the field; I didn't want to share. We had a pretty amicable split. We had five good years.\" He lifted one shoulder slightly and let it drop. \"My point is, not everything works out. I didn't turn myself into an automaton because of it.\"\n\nI frowned at him.\n\n\"I didn't mean that the way it came out.\"\n\n\"Can I get you guys anything else?\" Amber rested her hand on Lore's shoulder when she asked.\n\n\"The check would be great, please. We're in a bit of a rush.\" Lore didn't want to be late for the ballet.\n\n\"You bought the tickets; I'll pay for dinner,\" I said.\n\n\"No.\"\n\n\"Fair's fair.\"\n\n\"I'll get it,\" Lore said.\n\nI reached for the check.\n\nLore kicked my legs further open and suddenly the bottom of his shoe was on my crotch, exerting gentle pressure. \n\n\"Listen.\" He leaned forward; his whispered voice was fierce. \"You're going to fucking let me take care of you.\"\n\nWow. Okay.\n\nHe increased the pressure of his foot, ever so slightly. I resisted the urge to squirm.\n\n\"I want to devour you, have all of you. You only give a part. Fine. But I'm going to fucking do this. It's a date, damn it. A date we're on together. To fuck we're gonna go Dutch.\"\n\nWhoa.\n\nHe removed his foot. He picked up the check booklet thing and bopped me on the top of the head with it.\n\nPhew. Is it hot in here?\n\nDang.\n\nThe ballet was majestic. I guess I didn't expect such athleticism. And yeah, handsome muscular guys in interesting outfits floating through the air wasn't exactly a hardship to watch. But it was more sitting with Lore in a dark theatre, his arm around the back of my chair, which did it for me. There was an expectant hush in the theatre, like everyone was enthralled, hanging with anticipation of each new step.\n\nI liked it better than I thought I would. I'd probably never go again, but I had to give Lore credit. It was just another gift from him I would never forget.\n\nI sort of wished the date would last forever. But pretty soon it was time to drive home.\n\nWe didn't have sex that night. He held me in his arms, first with my head on his chest. We stayed that way a long time, and he stroked loving circles on my back. He pet my hair. Then, later in the night, his arms were warm, firm bands around me when he was spooned up behind me as we fell asleep.\n\nThen it was Sunday again. I don't think I've ever prayed so hard in life. I don't even know what I was praying for. Not to have more pain than I could deal with maybe.\n\nWah-ta-pa-ii-en-er, Hah-la-ah-en-er, wah-da-in-ah-da-ah-ooo-ah-uh-uh,-Ooooo-Vivian...\n\nEarly Sunday afternoon Josh put on a magic show. He'd gotten pretty darn good. He must have spent a lot of time with Johnny practicing to get all those tricks down. I guess while I was spending all that time with Lore, my nephew was monopolizing a Hassim brother of his own.\n\nAfterwards Lore and I went back to his cabin. I was more blue than ever. I hated myself for asking, but I couldn't stop myself.\n\n\"Lore, could you possibly extend your stay a couple of days?\"\n\nHe looked pained. \"I can't. Tomorrow's Christmas Eve Day, and we're flying directly to Florida to visit my parents. Every year we fly down to spend Christmas with them.\"\n\n\"Oh.\"\n\n\"We spend a week with them, so taking almost three weeks off this year is a really big deal. So it's not like after I get back to my practice I should really be taking time off right away. But, I could come back here soon, like in two months. You know, for a long weekend or something.\"\n\nI looked at him.\n\n\"If you want to try. I mean, if you want to still see me. We could do the long distance thing. I could come out here once a month; you could come to Chicago once a month. That way it would be like every other week.\"\n\nI rolled my lips in together.\n\n\"Or, I could come out once every other month, and you could come see me on the odd months.\"\n\n\"Long distance relationships don't work.\"\n\n\"You could come to Chicago,\" he said. \"Join my practice.\"\n\nI shook my head.\n\n\"Fine,\" he said. His voice huffy and hurt.\n\n\"I could move here. At least part of the year.\"\n\n\"Yeah. Like you'd be happy in Montana.\"\n\n\"Why not? Plenty of other people are.\"\n\n\"Ranch people. Country people. Not... refined PhD city people.\"\n\n\"Now you're just making shit up because you're too scared to commit. People move from the country to the city or the city to the country all the time.\"\n\nI stared at him.\n\n\"Listen,\" he said. \"When I was making love, that's what I was doing. Making. Love. Maybe that's not what it was for you. But every time I was with you, that's what it was, more love.\"\n\nOh God. \"Don't make this harder than it already is.\"\n\n\"Fine. Fine!\" he said. He threw up his arms.\n\n\"You remember when we were out in your beautiful magic circle,\" he said. His voice was getting louder and louder. \"And I said that if I'd known you were here I'd move heaven and earth to come here. I meant it. You say the word. Just say it. And after I visit my parents in Florida I'll come right back. I'll give up my practice. I'll forget about going back to school. Shit. What do you want?\"\n\nI closed my eyes. Rip my heart to pieces, why don't you? I spoke very quietly, my eyes still closed. \"It's not that I don't want you; I do.\"\n\n\"Then what's your problem?\"\n\nI looked at him. \"You won't be happy here. I want you to be happy.\"",
        "\"Sheesh.\" He threw up his hands. \"Then come to the city!\"\n\n\"Look,\" I said. \"Bundle up.\" He put on his jacket and hat, and I put on mine. For a second I was very aware of the differences, his new, expensive-looking European-ish black coat and cap and my worn brown duster and cowboy hat.\n\nI dragged him outside.\n\n\"You see the top of that big house over there?\" I pointed. He nodded. \"That's where I was born. A horrendous freak storm blew in, all white powder and horizontal hail, and my parents couldn't get to the hospital.\" I turned him a little, \"You see there, beyond our casual kitchen, is our living room. That's where Clay and I were, late the night I was thirteen, and I found out my parents died.\"\n\nI turned him again. \"See there?\" I pointed, you couldn't really see it from here, but I showed him the direction. \"That's where our tractor rolled over.\" I pointed him toward the barn. \"That's where I shovel shit. I've shoed horses, and put down horses. I've delivered more cows than years I am alive, including one this week.\"\n\n\"I get it,\" he said, his voice full of sadness and heartbreak. We went inside. He took off his hat, and coat. Slowly he took off his shirt. Very pointedly, he turned so he gave me his back.\n\n\"Maybe you should go,\" he said quietly.\n\n\"Lore,\" I said. But he put his hand up like he didn't want to hear it.\n\nI turned away and stared at the doorknob. I was numb beyond thinking or feeling. I left. \n\nI jammed my hands in my pockets. My feet were so heavy I don't know how I even made it a few steps.\n\nLore ran out after me. \n\n\"You know what your problem is, you little shit?\" He was furious thunder. His feet were planted wide, his hands on his hips. He was magnificent heated male, with his chest heaving and his breath coming out hard. His shirtless torso looked like it was heated enough to melt the snow. \"You've got all these preconceived notions. That's what. But when you strip them down, the truth is you just don't think I'm worth fighting for.\"\n\nI blinked.\n\n\"You know what\"\u2014he balled his hands into fists\u2014\"that's not even true. You don't think YOU'RE worth fighting for.\"\n\nMy mouth hung open.\n\nHe spun on his heel. He stormed back in the cabin and slammed the door.\n\nI stood there in the snow. Lore made me feel like a jerk. Oh, wait. Maybe I did that to myself.\n\nI went back to the cabin and let myself in.\n\n\"Lore. It's your last night here. I don't want to fight. I want to spend it with you.\"\n\nHe stood with his back to me. It sounded like he was crying.\n\n\"Please, Lore. Let me stay.\"\n\nHe nodded.\n\nI walked closer to him, leaving a little space between us. He sniffled, wiped his face in his hands, and straightened his shoulders.\n\nI palmed the left side his ass. The taught, rounded curve fit perfectly in my hand. I rubbed an inch down and back over his jeans.\n\nI moved in a little closer.\n\nI fitted the front of my hips into his ass.\n\n\"You know what I want,\" I whispered.\n\nHe laughed, a sorrowful sound.\n\n\"It's been a long time for me,\" he said.\n\n\"Longer for me, I bet,\" I said.\n\nWe were silent for a second.\n\n\"Is it like riding a bike?\" I asked. \"Will I remember how, or will you need to write me down step-by-step instructions?\"\n\nA soft chuckle.\n\nI unbuttoned his jeans, opened the flaps, and slipped my hands in. I rested my palms on either side of his cock, over his underwear. Not caressing, not stroking, just resting.\n\nLore leaned his back against my front.\n\n\"Don't shut me out, Noah.\"\n\n\"I won't, Lore. Not tonight.\"\n\nWe just stood like that for a long time, until he finally melted into me. I slid one hand across his chest, and with the other, I palmed his cock.\n\n\"I want to be inside you, Lore. I want to be inside you everywhere, as deeply as you're inside me,\" I said.\n\n\"You're already inside me,\" he said.\n\n\"You're killing me here,\" I said.\n\n\"You're a jerk; you deserve it.\"\n\n\"You're right,\" I said. \"Punish me.\" \n\nHe laughed. And just like that we were okay again, at least for a little while.\n\n\"Enough of this talking,\" I said. \"Talking's for chicks.\"\n\nI yanked his pants down and forced him onto the bed. The energy between us changed, snapping to urgent.\n\nI got his pants the rest of the way off, tore off my clothes, and pressed my body on top of his.\n\nGod, it was so new, a crazy rush. Every nerve I had was on sensory overload. My body on top of his, touching everywhere: skin on skin, soul to soul, my cock crushed between us. It was all incredible. Awe inducing. The amazing way my body fit with his. That he let me be with him like this. The power was a glorious surge that was almost out of control. I had to give up control in order not to be overcome by it. \n\nAnd it was fantastic.\n\nI started thrusting my hips up and down, just rubbing against his crack, rutting like a wild, crazy animal with no finesse whatsoever. \n\nHe pushed me off him, rubbed his hands up my thighs, and took my cock in his mouth.\n\nOh God.\n\nSo good.\n\nI watched him bob up and down, as all my muscles screamed and flexed in pleasure. I put my hand on the back of his head. His hair had gotten slightly longer in the week and a half he'd been here, the texture now feeling like long brush-y stubble. Somehow the sensation of that, the millions of prickly hairs under my hand, was what threw me almost over the edge.\n\nI pushed him off me. He landed half on his side, looking both eager and spent. \n\nThen I grabbed a pillow, and roughly shoved Lore face down, adjusting the pillow under his hips. He probably thought I was going to do what I did the first night we were together, loving down his back and lavishing all those carefully found out sensitive spots.\n\nBut I was way, way too far gone for that.\n\nI put a firm hand on his upper back and grazed my teeth down his lower back, heading right toward his ass.\n\nThen I did something that I'd never done to anybody.\n\nI spread his muscles and gently dipped my tongue in.\n\nHe cried out. His head jacked back, he writhed so hard.\n\nI used my forearm to pin him down, and plundered him with my tongue, fucking him. Fucking him with my mouth as furiously as I could, letting all the untamed, thunderous, held back, unfair, pent-up tornadoes inside me out\u2014pushing them inside him with my tongue. \n\nHe groaned, an almost-whimper sound.\n\nI pushed in farther, punished him harder.\n\nIt was wet and sloppy, and slick, and beautiful. Lore was thrashing around more, and I had to use more of my weight and leverage to hold him down.\n\n\"I'm coming, Noah! I'm coming!\"\n\n\"To hell you are,\" I growled. I pulled him up onto all fours and lined my cock up behind him.\n\nI paused.\n\nHe was panting hard, snorting out deep breaths through his nose, trying to bring himself back from the brink. He managed, staying just this side of the infinity by what must have been a steel-gloved act of will. \n\nI took a deep breath myself and pulled my hips out of the way. I licked my finger and carefully slid it into him.\n\n\"Oh, Noah...\"\n\nYeah. That's definitely the best sound in the universe.\n\nI leaned over and got the lube. I opened him up for me. I forced myself to go slowly, much, much, more slowly than the greedy, impatient, running blaze inside of me wanted to go.\n\nAnd then he was ready.\n\nAnd so was I.\n\nIt was hot in here. Way too hot in here.\n\n\"Lore,\" I said. I paused for a second; was I really going to ask this?\n\n\"Mmn?\" He sounded drunk.\n\n\"You ever get tested?\" He twisted around to look at me. He didn't ask me what I meant.\n\n\"Yeah. And I haven't been with anybody since.\"\n\n\"Do you want to...?\" I trailed one finger down his spine. I've never minded condoms. \"I'm just so torn up inside, now. I want to get as close to you as I can possibly get.\"\n\nHe nodded. \"Do it.\"\n\n\"You sure?\"\n\nLore smiled at me. All wolf. Trust. Radiance. \"Never been so sure of anything in my life.\"\n\nFuck.\n\nAs if my cock could get any harder.\n\nI lubed my cock up with one hand and grabbed a death grip\u2014like it would stop him from ever going away\u2014onto Lore's hip with the other.\n\nThere was no way I was letting him up, and he knew it. But I leaned over so I was closer to his ear. \"Yeah? What's your choice of music now, lover boy?\"\n\n\"Welcome to the Jungle,\" he said, and I pressed the tip of my cock into him.\n\nI pushed in as he pushed back. I wasn't gentle. I wanted to go slow that first slide in, and I did, knowing that it had been a while, but once I was in, that was it. \n\nI grabbed his shoulder and his hips and pounded into him with a fierce beating I didn't know I had in me.\n\nAt one point I had to drag him back a foot because his head was banging into the headboard.\n\nI stared at my cock going in and out of him. I was overwhelmed by my emotions for a minute: sadness at the loss barreling toward me, anger that Lore didn't live here, rage, that this should feel so good and I might never have it again, and expanding, powerful victory that I was dominating him, ramming myself inside him.\n\nBut I put that away, with a force of will, like it was an overflowing clothing drawer. I jammed everything back inside; I tucked all those emotions back. This was insane, full octane, arousal and sex at its best. I wasn't going to let anything that wasn't pure lust, wholesome love, and tender fucking get in the way of it.\n\nThe grunting noises Lore was making were incredible. \n\nI bent over him and said in the softest voice I could muster between gasping pants, \"Lorenzo.\"\n\nAnd he came.\n\nBut I didn't let that slow me down.\n\nIf anything, I started pumping into him harder.\n\nHis skin was shining; the beads of sweat popping out on his back and glistening in the moonlight reflected in through the window. \n\nThe sound of my hips slapping against his ass seemed incredibly loud. I bared my teeth, my lips pulled back as I clamped my jaw hard in an effort not to come.\n\nIf this was the last time, it was going to last all fucking night, damn it.\n\nMy blood heated to boiling as something else broke loose inside me. I must be leaving marks on him; my grip was so tight. A buzz started in my ears. That might be because my heartbeat pounded so hard it affected my hearing, maybe.\n\nI threw my head back and roared. One long, loud, unintelligible snarling howl. \n\nI hit some weird alternative universe; a place where only the edgy, sparkly, tingling of every cell of your soul on fire lets you know you exist.\n\nThen I was looking at my own death.\n\nAnd only flashes of my time with Lore flickered before me: \n\nLore holding me in the shower with laughter in his voice, \"Aw baby, too much?\" \n\nLore in front of me on Sea-Jack. \n\nLore against the tree in the magic circle. \n\nLore in the barn after I delivered the calf. \n\nLore holding my hand in church. \n\nLore staring down at me from the missionary position. \n\nLore singing Nora Jones in my ear; Lore in the diner signing his autograph; Lore looking at the cave paintings. \n\nAt the ballet. In the snow with no shirt on.\n\nLore, Lore, Lore, Lore, Lore.\n\nTears streamed down my face, my back arched, my toes curled up and disintegrated, the fire was so great.\n\nA galaxy exploded. A blood vessel popped, and I died.\n\nI collapsed on top of Lore, still breathing.\n\n\"What the hell was that?\" Lore asked.\n\nI was panting too hard to answer, but I think I knew what he meant. If aliens had landed, if a volcano shot up in the middle of nowhere overnight and erupted, if the sky was suddenly a different color, it wouldn't be more shocking or earth shattering than that.\n\nI blinked and blinked. But I recovered quickly. I gave Lore a light smack on the ass.\n\n\"That's, 'You've been served' Noah style.\"\n\n\"Daaaaammmmmnnnn,\" Lore said. \n\nI rolled my on my side and stared at him. He was glowing.\n\n\"That's a mighty fine going away present.\"\n\nI was probably glowing a little myself. I could feel my smile. It was huge.\n\n\"No problem. You're welcome.\"\n\n*\n\nWah-oo-pah-ii-en-er, Lah-la-ah-en-er ...\n\nThen it was Monday, and it was time for them to go. For a second it was like I was seeing it as if it were on a movie screen, and it wasn't really happening. Johnny was shaking Clay's hand.\n\nThen Johnny was on the driver's side of the rented Taurus, and Lore on the passenger side, and Clay and I on the porch. It was so reminiscent of the first time I saw them, a million, trillion eons ago.\n\nFor a second we all just stared at each other.\n\nJosh came flying out of the house. He launched himself off the porch, and into Johnny's arms. \n\nHis voice was a high, plaintive wail. \"Don't go! Please don't go. Stay.\"\n\nI watched Johnny crouch down to Josh's level. \"I can't, little dude. But don't worry. We'll be back.\"\n\nI slowly walked down off the porch. Lore opened his arms and I stepped into a hug. I was quiet, my mouth to his ear. I pitched my voice high, like Josh's. \"Don't go! Please don't go. Stay.\"\n\nHe chuckled softly, but it was the saddest sound I'd ever heard. \"Don't worry,\" he said. I noticed he didn't add the 'be back' part.\n\nClay pried Josh off Johnny. \n\nI pried myself off Lore.\n\nClay and I tipped our hats, and then they were gone.\n\n\"Uncle Noah, you look funny.\"\n\n\"Allergies. Come on, short stack. Cows have got to be milked,\" I said. Although there were no chores I could think of that needed to be done at that moment. Of course, I couldn't think much at all.\n\nTuesday was the first night I slept in my room in what seemed like forever. The first morning I woke up alone. A noisy gale woke me; its rush sounded like a pained howl. A mourning song.\n\nThey say there are more suicides at Christmas time than any other time of the year. I've never, ever understood that.\n\nOh.\n\nWell, maybe now I did.\n\nI never thought my heart would break like this again... not after my parents. Not after Kevin. Not after trying to protect myself and do it differently this time. What was the whole point of putting all those walls around my heart if I was just going to feel like I had jumped into a wood chipper and pressed start?\n\nAs the week wore on, it became harder and harder to drag myself around, to do even the most basic of necessities. It was as if my body was made of concrete, and it was hardening, cracking.\n\nFriday I missed dinner. I stared at the stove, looking at it like it was some strange new-fangled contraption I couldn't possibly figure out how to work.\n\nI was humming that song again, when suddenly my subconscious offered up one complete phrase of it. \"Or am I origami,\" I said.\n\n\"Well, that's telling,\" Clay said from behind me.\n\n\"What is?\" I asked, turning around to look at him.\n\n\"That song.\"\n\n\"You know the song? You recognize it?\"\n\n\"You don't? You're the one singing it.\"\n\n\"Nah. It's been stuck in my head for days and days. I can't remember ever hearing it before.\"\n\n\"It's 'Inside Out' by Eve 6. As in my heart is torn inside out. It was popular when we were little, and I played it a lot after our parents died.\"\n\nThat's probably why I couldn't place it. I sort of blocked it out.\n\nClay walked closer to me. \"So you get how telling it is, right?\"\n\nI shook my head. \"I really don't remember it. That origami line, those are the first words I've been able to remember. It's a cool line, but it doesn't make sense.\"\n\n\"It's about how you try and fold yourself inward,\" Clay said.\n\nHuh.\n\n\"You remember the chorus? The main line. The hook?\"\n\nI shook my head.\n\nHe came over to me and placed his forefinger to my chest. He said the words very slowly while pressing his finger on my heart, \"I want to put my tender\"\u2014he looked at me\u2014\"heart in a blender.\"\n\nOh. Ow. \n\nThen he said it in the rhythm of the song. \"I want to put my tender, heart in a blender.\"\n\nOw. Ow.\n\n\"Watch it spin around to a beautiful oblivion.\"\n\nOblivion. Not Vivian. Yeah. Oblivion would be nice.\n\n\"You remember the next line?\"\n\n\"No.\"\n\n\"Rendezvous, and I'm through with you.\"\n\nOuch.\n\n\"That the kind of guy you are Noah? Rendezvous, and I'm through with you?\"\n\nI looked away.\n\n\"Because if you are, hey, you're my brother, and that's fine. I'll love you however you are. But if you're the love 'em and leave 'em type, why are you dragging around the house like somebody died?\"\n\n\"You don't understand.\"\n\n\"Don't I?\"\n\nI shook my head.\n\n\"You love him. Go get him.\"\n\n\"What? What?\"\n\n\"You. Love. Him.\"\n\n\"I can't love him. I only knew him for a week and a half. You can't love somebody after just a week and a half.\"\n\nHe gave me the look he reserved for when I do something particularly, exceptionally stupid.\n\n\"Yeah,\" he said, the sarcasm heavier than our entire herd. \"Of course, you're right. Sure.\"\n\n\"You knew Sherry forever before you fell for her.\"\n\n\"No,\" he said slowly drawing the word out. \"I laid eyes on her one day and instantly fell in love with her. I was waiting until you were a grown up before I pursued dating her.\"\n\nI blinked. Okay. Whoa.\n\n\"He's a great guy,\" Clay said, bringing me back to the present. \"Where are you going to find someone else like that?\"\n\nI blinked again. Was my brother telling me to go after Lore?\n\nClay clasped the back of my neck and used it to bring our foreheads together. \"Noah,\" he said. \"After our parents died, and it was just us for so long...\" He paused there. \"Knowing you needed me was the main thing that kept me going. I was part father as well as brother. There's no way a brother could love another brother more than I love you. So I mean this with all love when I say this. It's time to leave the nest. And if you don't, I'm gonna kick your ass the fuck out.\"\n\nI laughed, one sharp bark.\n\n\"Seriously Noah, I hear Chicago is beautiful this time of year.\"\n\n\"I'll think about it.\"\n\n\"Yeah. Good. Pack a suitcase and book a flight while you think. I'll drive you to the airport in the morning.\"\n\nClay let go of my neck and gave me a fierce hug.\n\n\"Clay?\"\n\n\"Yeah.\"\n\n\"That song. Why'd you play it over and over again after our parents died?\"\n\n\"Because of the one line. I swallowed my doubt, won't let it turn me inside out.\"\n\nI looked at him. \"In all your life, you have never mentioned doubt.\"\n\n\"Are you kidding? I was raising a thirteen-year-old. I didn't know what the hell I was doing.\"\n\n\"You always talked about gratitude.\"\n\n\"What I should have talked about was faith.\"\n\n*\n\nI spent a lot of time that night mulling over what Clay said. He was right of course. I was the one who shut Lore out, not the other way around. If I was miserable, then it was my own fault. If I was miserable, then I could hardly be doing the right thing, could I? There's enough misery in this world without creating some when you could do something about it.\n\nI'd never spent more than a day or two off the ranch. I'd never been to a city bigger than Billings. I'd never lived without animals more than a hand's breadth away, creating all sorts of problems, and giving me all sorts of joy.\n\nI couldn't imagine it. It wasn't just like I lived in Montana. I was Montana.\n\nBut I pictured Lore's face. I pictured his back, and arms, and cock. I heard his voice. I'd lived without him for a week and that had been a real picnic. Did I really want to do that for the rest of my life? See him in tiny corners I could squeeze in between gathering eggs and teaching riding lessons?\n\nIn the end I waited another week. Not so much because I was undecided, but because I wanted to give him a chance to get back from Florida and have a moment to get settled.\n\nI packed a whole bunch of clothes into an army duffle bag and was ready to go. I took my cowboy hat and placed it on the kitchen table. I should leave it. I didn't need it where I was going.\n\nClay saw me fingering my old hat and instantly got what was going on.\n\n\"You kiddin' me?\" he asked.\n\nHe picked it up and slammed it on my head.\n\nJosh zoomed into the room. \"Does this mean Johnny is going to be my...uncle-in-law?\"\n\n\"Josh!\" Sherry said sharply from behind him.",
        "\"What? What?\"\n\nClay closed his eyes.\n\n\"We don't ask questions like that,\" Sherry said.\n\n\"Why not?\"\n\nClay shook his head. \n\n\"Chip off the old block,\" I said.\n\n\"He is not,\" Clay mumbled. \"I don't know where he gets it from.\"\n\nWe all piled into the car, and they drove me to the airport. We all went into the terminal and watched the planes taxi up to their runways.\n\n\"I've never been on a plane before,\" Josh said.\n\n\"Me either, short stack.\"\n\nJosh looked at me.\n\n\"Scared?\"\n\n\"Terrified.\" Just not of the plane.\n\n*\n\nI don't know what I expected Chicago to look like. It was taller. Greyer.\n\nI got in a taxi at the airport and went directly to Lore's work.\n\nThere was a young receptionist with long blonde hair. She looked me up and down, taking in everything from my hat, to my boots, to my duffle, to my expression, I'm sure.\n\n\"I've got some pain in my torso,\" I drawled. \"You all work on adults?\"\n\n\"No,\" she said. \"But I could get a recommendation for you. If you just hold on.\" She was leafing through a binder when Johnny walked out. He did a double take when he saw me, and his eyes bugged out.\n\nThe corner of my mouth turned up.\n\n\"I guess you're looking for my brother,\" he said.\n\n\"Well, you know,\" I said, and toed the carpet with my boot. \"I was in the neighborhood.\"\n\nJohnny laughed and gestured for me to follow him. \"Come on.\"\n\nHe put his hand on my lower back and guided me into their main gym/therapy treatment room, which was huge.\n\n\"Bro,\" Johnny called across the room. \"I got something for you.\"\n\nLore looked up, and his expression was comical. His mouth dropped wide open. His eyes got so round I could've use them for headlights. He blinked, and shook his head like he was dreaming and he had to wake himself. Then he got up. \n\n\"Excuse me,\" I heard him say to the girl he was working with. Then he ran across the expanse of floor and scooped me up in his arms in a huge hug.\n\n\"Put that down,\" he said, looking at my duffle, and I dropped it right there.\n\nLore grabbed my hand and dragged me so fast I almost had to jog to keep up. He pushed me into a utility closet, closed the door, yanked the overhead light chain, and slammed me up against a shelving unit.\n\nHe kissed me fiercely; shoving his tongue down my throat in a way that would have been would have been ridiculous and unsexy if it weren't for the passion behind it.\n\nLore lifted my leg, put it around his waist, and ground his cock into me.\n\nI started laughing. It was ridiculous really.\n\nHe put his hands on either side of my face. \"You're here? You're really here?\"\n\n\"I don't know; I could be a figment of your imagination. You better grind your cock into me a little more to find out.\"\n\nHe did. \"Yeah. You're here. How long can you stay for?\"\n\n\"Ah... forever?\"\n\n\"Yeah?\"\n\n\"Yeah,\" I said.\n\n\"No,\" he said.\n\n\"No?\"\n\n\"Yeah, no. What changed?\"\n\nOh shit. Here's where I should have prepared a speech.\n\nHe backed up and put his hands on his hips.\n\n\"Ah... I've been miserable without you.\"\n\n\"Yeah. Good. And me without you. So what?\"\n\nI smiled at him. He tried to keep a straight face against my smile, but it was a losing battle. I tipped my hat at him.\n\n\"City's still city; country's still country,\" he said.\n\n\"Like I care,\" I said.\n\n\"You did,\" he said.\n\nI shrugged. \"I've had losses. I probably can't sustain another one. So, you put my heart in a blender, tear it to little pieces, I collapse, and I die. Big deal. I'm half dead without you anyway. I'll take my chances.\"\n\nI took my hat off and held it in front of my chest. I batted my eyes at him outrageously. \"You're not going to make me get down on my knees and beg, are you? I hate that shit.\"\n\nHe smiled back at me. \"You like it just fine. At least the knees part.\"\n\nI smiled at him. I put my hat on a shelf and opened my arms.\n\nLore hugged me and kissed my neck.\n\n\"I missed the sound of you,\" I said. \"And the smell of you, and the feel of you.\"\n\nHe laughed.\n\nMy voice got low and husky. \"And the taste of you.\"\n\nHis body stiffened against mine.\n\n\"You ever get a blow job in a storage closet?\"\n\n\"No,\" I said.\n\n\"Well you ain't getting one here, either. I work here.\"\n\nI laughed.\n\n\"Lore?\" I asked.\n\n\"Hhmnn?\"\n\n\"Don't you have an office?\"\n\nHe laughed. \"Yeah, but the storage closet was closer.\"\n\nI relaxed a little bit. Lore caressed my jaw.\n\n\"Listen, baby, why don't I give you my spare keys? I've got appointments until six. Then I'll be home, and we can figure some of this out.\"\n\nI nodded.\n\n\"I checked, there are a lot of places around here that board horses.\"\n\nI raised my eyebrows.\n\n\"Rich city folk need a place to keep their purebreds. But that means there are also places that could have space for horse therapy work.\"\n\nI just stared at him.\n\n\"I missed you too, baby,\" he said.\n\nI sighed.\n\n\"Don't get all mushy on me,\" he said.\n\nI hugged him tightly.\n\n\"Come on, let me go. I have to calm down so I can come out of the closet.\"\n\nI laughed.\n\n*\n\nLore's apartment was sleek and modern, with large windows overlooking the city. I called Clay to let him know I arrived okay. He asked me how it was when I saw Lore.\n\n\"You know, Clay. I think it's going to be all right.\"\n\nEpilogue\n\nEpilogue\n\nI started helping out with kids in Lore's practice, right away. After a few months I went back to Montana and got Ari and Eagle-eye, and boarded them at a farm\u2014they're farms here, not ranches\u2014not too far away.\n\nLore and I took a huge risk and put all of our money into starting our own horse-riding therapy division where I had boarded the horses, and then later bought our own horse farm. Lore knew I loved working with the horses and kids together too much to want to give it up. It meant we worked like crazy that first year to get it all set up, but if I had any doubts about anything, Lore swept them away not only with his confidence, but with caring. \n\nEagle-eye died after Lore and I had been together almost two years. It was incredibly hard; that old girl had been with me since I was a teen. But I had Lore's support. I lived through it.\n\nMary made a complete recovery. She's been in remission for eight years. Now she works full time raising money for breast cancer awareness. \n\nI always thought I was strong, courageous. But there are different types of strength.\n\nMy friend Kevin taught me a lot when I was young. Lore taught me a hell of a lot more, now that I was a man in my thirties.\n\nMaybe one of the main things I learned is it is a lot easier to be courageous together.\n\nI went to college. I did some of it on-line, and Lore helped a lot. But I can't say that I'm any more fond of school than I was as a kid. I guess I'm not really a book learning person. But we just went big and opened three more facilities, and I think the extra boost in confidence knowing I had some education behind me helped.\n\nLore and I haven't gotten married. He already did that once, and I didn't need a piece of paper to tell me what was true. \n\nWe've been together for ten years now, and we're thinking about adopting. It's a big step. It's kind of weird for us, because we work with kids all the time, so having ones at the apartment when we come home would be an added stress to get used to.\n\nClay and Sherry have been married almost twenty years. They are planning a big anniversary party and recommitment ceremony in the spring. It sounds like all of Wounded Deer and half of Montana are invited. It feels weird whenever I go back, but I'm looking forward to it.\n\nJohnny has been incredible helping us with all the expansion. He runs the business end of everything and we've kept him really busy. He's dated a lot, but never stays with anybody for more than a month or two. Lately he seems really down. I've noticed that just since this Christmas he seems to hunch over, and his skin looks a little ashen and grey. I'm not sure what's up with that, but he knows that Lore and I are here for him. \n\nJosh is still the same 'say whatever jumps into his mind' kind of kid. He's shot up so he's bigger than me. He's a senior, and in just a few months, he'll graduate high school. He wants to move to Chicago and study physical therapy. So I guess that means he'll live with us for a while until he gets things sorted out. What's that going to be like?\n\nAs Josh would say, \"What? What?\"\n\n# # # \n\nThe End\n\nThis ebook is licensed for your personal enjoyment only. Copyright belongs to MJ Roberts 2014. Please do not reproduce without permission from the author. \n\nDear Reader,\n\nIf this story pleased you, then please be so kind as to honor me with a high five. It will mean a tremendous amount to me. It's only a mouse click away.\n\nIf you liked the story, drop me a note. Tell me what you liked and why, and how you feel. I love to hear from readers. (PG comments only please.) I read every note and welcome corrections, suggestions, and positive feedback. \n\nYou can leave a public comment or use the contact tab on my author page to get in touch with me. I really want to know what you think. It just takes a minute.\n\nI look forward to hearing from you.\n\nThanks, sincerely;\n\nMJ "
    ],
    "authorname": "MJRoberts",
    "tags": [
        "gay romance",
        "gay western",
        "gay anal",
        "gay drama",
        "blowjob",
        "anal sex",
        "cowboys",
        "montana",
        "gay anal"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/montana-winter-ch-02"
}