{
    "title": "God-Blooded: The Sword of Fate 00-02",
    "pages": [
        "Dedication:\n\nThis story (whether I finish it or not) is dedicated to , , , , , , FinalStand, , , and all the other Literotica authors that have inspired me to try to climb out of the bottle and become one of them.\n\nAuthor's Notes:\n\nLegend of The Five Rings is a copyrighted Intellectual Property owned by Fantasy Flight Games. This fan fic is not meant as a challenge to that copyright in any way. Am I doing this right? Please don't sue me.\n\nFor those looking for an enjoyable alternative to your Hearthstone or Magic: The Gathering card games, you might try Legend of The Five Rings. Fantasy Flight is doing amazing things with it. here's the basic link: \n\nFor those wondering: \"WTF is Legend of The Five Rings?\": here's .\n\nOur protagonist in the following story is all about his No-Dachi. For those wondering \"WTF is a No-Dachi?\" Metatron in his amazing Metatron way did a few videos on it. \n\nA few name pronunciations: Motoki (moe-toe-kee), Nene (nae-nae), Chiumi (chee-ue-mee), Tamiki (taw-mee-kee), Denbe (dane-bae), Shiori (shee-ohe-ree), Arisa (Aw-ree-saw), Oniji (ohe-nee-jee), Yoshiki (yoe-shee-kee), Kadiri (Kaw-dee-ree), Kin (Keen), Gemmei (Ghemm-mae)\n\nL5R Family Names: Bayushi (Baw-yue-shee), Akodo (Aw-koe-doe), Matsu (maw-tsue), Ikoma (ee-koe-maw), Kitsu (Kee-tsue), Shosuro (shoe-sue-roe, that's shoe as in 't.v. show', not something you wear on your foot), Shiba (shee-baw), Kitsune (Keets-nae, yeah this one is wacky too), Hida (hee-daw), Isawa (ee-saw-waw), Togashi (Toe-gaw-shee), Kakita (kaw-kee-taw)\n\n*\n\nGod-Blooded: The Sword of Fate\n\nPrologue: The Legendary Swordsman\n\nFor those of you reading this who aren't legendary swordsmen, I will say: it's not as much fun to be one as you might think. For one thing, everywhere you go everyone knows who you are. Every step you take is weighed down with the expectations of every set of eyes watching you. Those eyes see something more in you than you see in yourself. You walk through every village, taking in every peasant's stare, and silently swear over and over, I will not let you down.\n\nI had heard that the bandit problem in the southern provinces of the Scorpion Clan was so out of control that it had become something of a joke throughout the courts of the empire. Normally such rumors would've had me on the road there immediately. Instead I had dawdled for most of the past year in Ryoko Owari, drinking and dicing the months and the few koku I had away. There had been something building in my mind. A shadow cast over my thoughts that made me hesitate.\n\nI found myself wandering the city streets aimlessly for days. My mind in a tumult of blurring memories and emotions. I had no words to put to this state. There was something missing but I had no idea what it was. Then one day, in the burning midsummer heat, I came upon him on the cobblestone path right outside the Temple of Daikoku, the Fortune of Wealth.\n\nHe was a short man in his mid-30s with a strong handsome face dominated by a hawk-like nose and a well-maintained dark brown beard. He wore an orange haori vest over layers of light brown robes. Upon his breast he bore the mon of the Ikoma family, a sacred torii arch wrought with a lion design.\n\nAt his side he wore his daisho: his katana, representing his warrior's honor, and his shorter wakizashi, representing his noble soul. Shugenja, courtiers, and other non-samurai of the noble caste usually only carried the wakizashi. Its use in sacred seppuku, the ritual suicide of those who wish to be cleansed of the taint of dishonor, was universal to all the nobility. For samurai it was quite different. To even carry a katana was to proclaim that you knew how to use it. And that you would at a moment's notice if honor called you to do so. Whether by your own determination in the moment or your daimyo's command. I could see in this man's eyes and the way he moved that he had fought and seen death on many occasions. I could sense the strong honor within him.\n\nI immediately turned, trying to get away. But his voice rang out loud and proud, echoing amongst the old stonework of The Temple District.\n\n\"Upon the Great Crab Wall,\n\nA young ronin with a Lion's snarl\n\nStared down in to The Shadowlands Hell\n\nAnd had a vision of a samurai-ko in Crab armor\n\nHe saw the day that she fell....\"\n\nYes, that poem. Written by Ikoma Hana, cousin of the Ikoma Family Daimyo. I had heard it recited often enough. It always gave me overwhelming feelings of dread and embarrassment. To have the contents of one's own existence, especially the darkest moments, made into line after line of flowery poetry was awkward to say the least. I still had no idea how to feel about the fact that the poem was widely known to be The Emperor's favorite.\n\nThe Ikoma was 10 feet away from me. A crowd had gathered around us both. I stopped, frozen. My mind in utter chaos. I had missed a few lines but unfortunately not this part.\n\n\"...His duty to a Clan not his own\n\nThe armies of The Crab broken wide\n\nFor five days The Lion Upon The Wall held back the army of Hell alone\n\nAs Love slowly died..\"\n\nMemories of her took over. My fianc\u00e9, Hiruma Misa. Her brown eyes glowing in the radiance of the sunrise. Her hard-muscled body sweaty beneath me in the dim orange glow of the coal light. All the loving whispers between us in the night. The cynical half-joking shared fantasies of a life together. My beloved whom I would've married into the Crab Clan with. The greatest joy in my life had been fighting side-by-side with her upon The Wall. The circles that she drew with the massive axe head of her beloved ono. Her skill with it was very close to equal to my own with my no-dachi.\n\nThis was too much. Just too much.\n\nI leaned upon my no-dachi, Meiyo. In its specially designed sheathe I could use it as a massive ornate walking stick (and theoretically a staff. But why I would ever choose to go into battle with a staff when a no-dachi was available was pure madness to me). There was a crowd of perhaps 50 mixed monks and peasants pushing in all around me. Their out-stretched hands reaching to touch the living legend. It had all become a blur. I was panicking, overwhelmed.\n\nUnseen by me in my fugue, the Ikoma had approached me. I felt his hand gently patting my shoulder as he recited the final lines of that damned poem.\n\n\"...To this very day he wanders the Empire alone\n\nAnd beneath Akodo's banner we cry,\n\nWaiting for The Lion Upon The Wall to come home.\"\n\nThat last line. That was the one I had always taken the most effort not to think about. It cut through me like no sword in any of my many many duels ever had. It cut me to the marrow of my being.\n\nI wordlessly screamed, then pushed my way through the crowd and ran until the city was hours behind me.\n\n* * *\n\nIt was true. The southern Scorpion provinces had utterly been taken over by bandits. All along the southern border I found village after village under bandit control. The peasant men laughed at and beaten in the streets as the bandits openly raped any girl or woman unlucky enough to draw their attention.\n\nI will not let you down.\n\nMeiyo and I did our duty to the Empire. Day after day, village after village, we culled them all.\n\n110 years ago, the evil immortal sorcerer Iuchiban had returned to Rokugan a second time. He and his Bloodspeaker cult had decimated the Empire before being routed by The Great Clans. In the aftermath, Bloodspeaker cells would still arise periodically to wreak incredible devastation before being destroyed. Indeed, many across the Empire theorized that the vision from their founder that had led The Unicorn Clan to return to Rokugan 45 years ago had been to thwart a third oncoming attack by Iuchiban.\n\nHida Hokuto, the Crab Clan Champion, had once given me an ornate silver pendant inset with jade in the shape of a lion's head on an etched wall background. I kept a watch on it as I moved south. There was never a single reaction at all from it. There was no evil magic to blame here. I had hunted bloodspeakers across the Empire by this method. I found myself wondering over and over what the descendants of Bayushi were up to. Why had they let this insurrection into their lands occur?\n\nIt was on the south eastern edge of Scorpion territory that everything was to change for me forever. Before me I could see the Kitsune Mori, the massive forest that was home to the minor Fox Clan. The Fox Clan consisted of the Kitsune, a small family of earth shugenja with a deep affinity for nature. For weeks I had fought a one-man war against the ludicrously pervasive bandit infestation with nary a red and black clad Scorpion in sight. The Fox were the oldest and most respected of the tiny minor clans. If the Scorpion would not save their own peasants, perhaps I could find help here.\n\nI was on my way up a ridge maybe half a mile from the Fox border when I heard the shouts of many voices. I unsheathed Meiyo and dropped my pack as I ran hard. I checked my other weapons. My daisho, worn more to honor my fallen ronin sensei than for use, were secure at my right side. At my left was Kanshi, a unique sword forged by the best Kaiu weaponsmith to my specifications. It was a sort of emergency back-up to Meiyo. At the top of the ridge I stopped for a moment. Before me were two small armies. First was the bandit army in typical mismatched armor with various cheap peasant weapons. But there was a disciplined coordination between them that one usually only saw in the armies of the various Clans. From my perspective I could actually see orderly formations, including a row of archers moving into shooting position.\n\nThe second army standing before the ancient woodland consisted of the scarlet and silver clad Fox. As I watched they chanted their invocations to the earth spirits, raising stone shields and armor from the land as they drew their nagamakis, the equal part sword and polearm, that they were well-known to favor. I also saw at the lead of the Fox three samurai of the Great Clans. A Dragon in green and gold, a Crane in sky blue and white, and a Unicorn in white and purple. But there was no time to focus on the details of these three or much else. The Fox and their allies were outnumbered by at least four to one. I knew what I must do. I will not let you down.\n\nThe Ikoma that I had run from in Ryoko Owari three weeks before had touched something in me. For the first time in years I found myself thinking of my childhood home, the tiny mountainous Katei province that my family had ruled since the dawn of the Empire. There on the side of a mountain peak above my family's castle was carved a massive face. It was a depiction of my legendary ancestor Lady Matsu, the fiercest warrior Rokugan has ever known, looking down upon us all. I prayed, imagining myself standing as I had so often as a child gazing up at her. Great Lady, please lend me your strength against these scum. May I honor you and your blood in my veins with every single one that I send to Hell this day.\n\nI shouted my fury to the heavens as I ran into the rear bandit line. There was a very thin group of perhaps a dozen soldiers there guarding the vulnerable line of archers who were beginning to draw their bow strings. I brought Meiyo down hard from a high overhead hold at a curving angle towards my left, cutting head and left arm off the first bandit. My cleave continued horizontally into the fellow beside him severing the upper part of his body from the lower through the middle of his chest. I continued into a wide spin, cutting my way into the archers. This was the beginning of my unique technique, The Steel Wind.\n\nMost samurai preferred the katana for its versatility and reliability. Simply put, a katana was three feet of bladed death in most situations. A no-dachi on the other hand was six feet long and considered by most to be too massive and unwieldy to be of any great use outside very specific battlefield situations. But in my youngest days, like most children in the Lion Clan, I had been inspired by the tales of the first samurai. Among those tales in particular was that of Akodo One-Eye. He was one of the nine children of Mother Sun and her husband Lord Moon. It was Akodo who had established the Lion Clan along with his trusted general Lady Matsu and the wise warrior-bard Ikoma. But it was Akodo who had inspired me especially. For one of the many things he had been renowned for was his ultimate skill with the no-dachi.\n\nI had devoted myself completely to solving the mystery that the no-dachi presented: how to make the most unwieldy of weapons useful at all times on the battlefield? The answer had come in the form of The Steel Wind, a spinning dance of death that required years of practice and experimentation to master. In my 16 years as a ronin I had dueled samurai of every warrior school across the empire. I had fought to a draw four times but I had never lost.\n\nI danced with The Steel Wind, spinning with the momentum of my strikes. The air around me became a shimmering red fog as severed arms, heads, legs, and torsos flew from every bandit that Meiyo and I could reach. It was exhausting mentally to keep this going for any great length of time. I had to track every opponent on every side of me from within the spin. There was a precision required in each minor adjustment to the angle of Meiyo. I was striking and deflecting weapons with each spin. Physically, I relied on the Crab diet I had become accustomed to during my years on The Wall. It was an assortment of high energy foods eaten constantly to maximize sustainable fighting strength for long periods of time.\n\nFor how long the battle went on I cannot say. Where I saw my enemies, I killed. There was an ecstasy in losing myself inside that berserker hyper-focus. All that I was outside of battle disappeared. I felt weightless, with no duty nor history nor even a name to shackle me to the earth. I was one with Meiyo. I was death.\n\nIt was the commonality of colors that drew me back to conscious reasoning. Specifically, a massive line of silver and scarlet some 15 feet before me. Reluctantly, I slowed down and noticed that I stood upon a long pile of hundreds of bandit corpses.\n\nI felt a deep pang of regret. There was no one left to kill.\n\nIn a slight daze I looked down at my own body. I could already feel the blood smears from the spatter on my face. I caught a glimpse of my beard, it was red instead of its usual muddy blond and felt a little extra heavy. I was completely covered in red, dripping blood and gore. My straw cloak, hat, geta, and kimono were most likely ruined.\n\nIn my hands was Meiyo, also covered in blood. I flicked it forward, letting the unworthy bandit blood on it fall to the ground. I lowered it and looked to the Fox samurai before me. There was a look of stark terror about the dozens of faces as they stood their ground. Each was staring at me with nagamaki still raised.\n\nMy attention was drawn to the soft baritone of a male voice. \"Is it an Oni, do you think? It's certainly large enough to be one.\"\n\nI had heard this said about me before. Where most Rokugani, even those of the noble caste, were five and a half feet tall at most, I was six and a half feet tall. The intense training regimen and Crab diet that I stringently followed were also about building and sustaining maximum muscle mass. I was extremely thick with hard muscle and very little body fat.\n\nThe speaker was the single Crane amongst the Fox. He stood at average height, with long loose snow colored hair and striking blue eyes. His ornate sky blue and white armor had painted on it a crane with a wing wrapped around an unsheathed katana. It was the mon of the Kakita, the Crane Clan's family of artist-swordsmen. They were feared for their perfection of Iaijutsu, the art of drawing and striking in a single blindingly fast but precise movement. His hand was at his side, dangerously ready upon the hilt of his katana.\n\nI held Meiyo in my left hand, my right ready to reach for Kanshi. It was a unique katana/no-dachi hybrid. At four and a half feet long, it was the longest sword I could perform an Iaijutsu strike with. Years of dueling on the road had led to its creation. Even a legendary swordsman occasionally got disarmed or encountered an opponent too fast to keep from getting deadly close. It was my best counter to Iaijutsu.\n\nBeside him, I heard a woman laugh. It was the Dragon. She was shorter at maybe five feet tall. She wore no armor, only a hand-painted green kimono with a long sinewy golden dragon resting serenely atop a mountain. The kimono was bordered on all edges with golden thread. Beneath it was a lithe body with a generous bust that I tried to not think too much about. Her cute facial features were framed by a very short mop of black hair. Her olive skin was broken up at her slim neck by tattoos on each side, that continued down into her kimono. One a green serpentine hand with four claws, the other a mammalian orange paw with as many claws. Most striking were her eyes. They were an emerald green that seemed to hold golden flecks when the light of Mother Sun hit them. There was a jitte next to the wakizashi at her side and she held a three-section staff in her hands.\n\nThere was an excitement in her voice as she said, \"Do none of you realize who that is? That is him! That is The Lion Upon The Wall! The Scourge of The Empire!\"\n\nShe merrily broke from the assembled mass and ran towards me. I only had enough time to wonder when I had gained the title 'Scourge of The Empire' before the Dragon stood a few feet before me. I opened my mouth, trying to think of what I should say as I stared down at her. She bowed at the waist, showing deep respect and honor. I immediately tried to return the gesture but she waved it off.\n\n\"Matsu Motoki, I presume? I am Togashi Kin.\" She said in her oddly accented voice. A Togashi? They were the mysterious order of tattooed monks who dwelled in the furthest peaks of The Dragon Mountains to the far north. Their founder Togashi was to the Dragon what his brother Akodo was to the Lion.\n\nMy eyes took in her face, lingering on those extraordinary eyes, then awkwardly tried to avoid staring at her cleavage as her kimono had opened a little when she bowed. Nestled between the tops of her breasts was a small jade orb worn on a necklace. The orb identified her as an Emerald Magistrate, a member of the Emperor's inter-Clan police force who wandered the empire dispensing his justice. My eyes wandered back up to meet hers. Her warm smile had only grown. There was something here, between this exotic woman and myself. Some deeper connection I could vaguely sense.",
        "I chose to ignore this feeling.\n\nI had fought seven duels over the years with Emerald Magistrates trying to recruit me who wouldn't take 'no' for an answer. I had no interest in becoming entangled with Imperial politics on any level. I felt my face tighten, as anger rose within me. I gruffly said, \"It has been a long time since I bore that name, lady. I am the ronin Motoki and only that.\"\n\nI turned my back on the Emerald Magistrate and the army behind her, dismissively. I would have to retrace my steps in order to find where I had dropped my travelling pack and sheathe for Meiyo. Were there more villages to be freed? My stomach was growling. I would have to wash before I could eat. I got to my seventh step before I heard Togashi Kin call out to me.\n\n\"Motoki, wait! I have something for you!\"\n\nI turned back to her suddenly, my hands tightening around the hilt of my no-dachi, as fury began to burn through me once more. I growled, \"I don't know how many times I have to tell you Imperial fools that I'm not interested in joining your little-\"\n\n\"No, it's not that.\" There was a sad look to her face now. Her soft red lips quivered slightly in a tragic frown. The light had left her captivating eyes. In her hands she held a scroll. Behind her the Crane was approaching with a concerned look on his face. His hand was still dangerously upon his sword hilt.\n\n\"I was told to put this in your hands, no matter what.\" Kin said, holding out the scroll to me.\n\nI took it, offering her a quick bow from the neck. Then I backed away with Meiyo held defensively before me until running away felt safe.\n\n* * *\n\nMotoki\n\nHave any of these even reached you? Have any of the letters sent by Shiori-sama or any of the others? If not then you should know that our father left this mortal world 3 years ago. His only desire at the end was to see you one last time. He never stopped regretting your departure.\n\nIt's not for him that I write this. My daughter Makaira idolizes you. Her Gempukku will be on the second day of the month of The Dragon next year. I beg you to be there. Our family needs you.\n\n-Matsu Tamiki\n\nI closed the scroll and sat back, watching the setting sun reflect in my sake cup.\n\nMy sister Tamiki was only two years older than me. She had a daughter old enough to undergo gempukku and be recognized as an adult? Who had Tamiki married? What of our other siblings? What of Nene, our childhood servant who was my best friend? What of our stepmother, Gemmei?\n\nI had never received a single letter. I had not even heard of our father's death.\n\nIt was time to go home.\n\n1. The Tears of Home\n\nTo a lone ronin who knew his way, getting past the most isolated border crossing in the entirety of the Lion lands unnoticed only came down to a little foolhardy mountaineering. Katei Province was a small valley connected as an outgrowth into the Spine of The World Mountains from the much larger Manto Province to it's east. Manto was a desolate hilly stretch of land on the northwest border of the lands of the Matsu, three days ride north of Matsu Castle.\n\nThere was a certain small cave a few hours climbing and hiking into the mountains northwest of Manto that I had to go to anyway. In the cave I found the massive wooden box I had hidden here just after I left the Crab lands 10 years ago. It contained all that I had left of Misa. If I were going home to the Lion, it would have to go with me. Of the havoc it reeked to carry this monster through the mountains as I journeyed southeast: I will only say that it required a lot of patience and extra rope.\n\nMy intention had been to make it in to my family's estate just before winter. Someone would be there to catch me up on the past 16 years. I had until my niece's gempukku in spring to figure out my relationship to my family and the Lion Clan. I needed the privacy of only having to deal with my family before I met the rest of the clan.\n\nWas it cowardly or weak of me to sneak and skulk my way home like some craven Scorpion or Daidoji? Many Lion (especially Matsu) might think so. But my years of wandering had taught me that honor often did not have a single obvious path. The tenets of the seven virtues of Bushido didn't always perfectly align with eachother. More often than any samurai wanted to admit the righteous path was a matter of perspective.\n\nIt was when I was (I estimated) two or three days north of Katei that winter bared it fangs upon me. Suddenly I found myself lost in the blinding snowy winds amongst the mountains. The snow was everywhere and everything. For how long I was lost in it and the mountains and the endless white of winter I cannot say. My rations ran out and I found myself deliriously wandering with the heavy weight of the trunk dragging me down.\n\nThen the snow abated for a few hours and like a dream I saw it. A long trail of smoke on the horizon. I immediately went in that direction. My body picked up strength for a time. I found myself high up on the north side of the valley. Far below me was Cold Fish Lake, its mountain stream fed waters frozen for the winter. Just south of it, amidst the valley's long low stretch of farmable land, sat Katei Mura the province's single tiny village. To the southeast near the narrow opening of the valley was smoke from the mine that was the source of my family's wealth. To the far south west I could just make out the outer wall of my family's castle, atop a long shelf in the high hillside. I looked for the great carving of Lady Matsu above it. I thought that I could barely make out her strong stoic face in the side of the icy mountain peak.\n\nThere was an area of steep hills and ledges on the northeast side of the mountain that I scaled down with increasing exhaustion. My feet touched the valley floor. That was when my strength began to give out completely. I hadn't eaten in 6 days by this point. I had a few minutes left in me and then I was going down whether I liked it or not.\n\nI staggered as fast as I could, leaning heavily on Meiyo. I did not want the peasants to see me this weak. I went to the last place I had stopped before I left Katei province and the Lion 16 years ago. A hilly pine tree filled area a hundred feet or so below the outer wall of my family's castle. My eyes began to get hazy and I could barely keep them open as I stepped into the wooded space. There was a certain tree here that I had to find.\n\nIt felt like I wandered the small forest eternally in and out of consciousness. Then I dropped the trunk as I saw it. The orange haori vest, uniform and emblem of my status as a noble of the Matsu Family. The first and last thing I had worn as a Lion. It was faded, ragged, and grimy but still tied around the pine tree where I left it. I tripped and fell but made it, my hand grasping the edge of the fabric as I blacked out...\n\n***\n\nBlood dripped down my chin and my body felt like a battered practice dummy. But I held my rigid control, refusing to even stagger an inch. I had not made a single sound. I had not bowed to my pain at all as the bamboo poles rained down upon me.\n\nThis was it. I had just passed the final test of my gempukku. I was a man and a Lion samurai now.\n\nThere was a loud cheering all around me. Soft hands reached for me. I heard Gemmei chanting to the water spirits to make me whole. Relief flooded in as her magic healed my broken body.\n\nGemmei was a very young widow who had married my father at the age of 14 after having given birth to her daughter, Kadiri, at 12 by some old provincial Kitsu daimyo.\n\nI have not spoken of the Kitsu before now because they are a matter that no Lion speaks of lightly. They are the 4th family of the Lion: our shugenja family. We guard them in a sort of protective triangle. The Ikoma in the north, the Akodo in the east and south, and we Matsu in the west and south. The Kitsu reside in the heart of our lands, protected on all sides by all other Lion in our eternal atonement.\n\nAt the dawn of our history there was The First Great War. After the victory of Akodo and his 7 siblings and their followers over their corrupted brother Fu Leng and his shadowlands hordes, there was a time of settlement over the land we call Rokugan. Akodo's brother Hantei, the newly crowned Emperor, granted him the barely explored plains east of The Spine of The World Mountains. There Akodo and his people met a strange race of humanoid lion creatures. These Kitsu were immediately thought to be more shadowlands monsters and were treated as such. With brutal efficiency, Akodo and his armies slaughtered them.\n\nAnd then, when it was almost too late, the truth came out. The only crimes the very spiritual and noble Kitsu had committed were not being human and meeting humanity so soon after the war with the shadowlands. Akodo made what reparations he could. He gave all but one of his own children in marriage to the last few Kitsu, who had taken human form via magic. Thus, was born the Kitsu Family of the fledgling Lion Clan. To his dying day, Akodo wondered if it was enough. As many Lion still do.\n\nGemmei, who I had loved at first sight. Whose golden eyes, brilliant red hair, tan skin, and curvaceous body had ruled my mind since the urges of puberty first set in.\n\nFather had seen it. Had flaunted his sexual relationship with her whenever I was home from Matsu Dojo. He was a legend amongst our Clan in his own right. A duelist who had only ever been defeated once. He was also a master of 2 sided encouragements. Positive words made into the opposite. Things like 'Good job. We'll make a real man out of you yet.' I could never be as mighty as Father and he made certain that I knew it at every turn.\n\nUntil this day. Would I truly stay my course? Do as I had longed to do for so long this day?\n\nI smiled at Gemmei, forced the raw need I felt at her touch out of my mind, and stepped past her.\n\nIn the crowd I could see the rest of my family. My youngest half-sibling and only brother, 2 year old Oniji, who looked entirely Kitsu like Gemmei. My half-sisters, the 5 year old twins Arisa and Chiumi, with their strange mixing of Matsu and Kitsu features. They had been born a little over a year after Father and Gemmei wed. My stepsister, eight year old Kadiri, a child version of her mother with an incredible gift for the ancestor magic that was unique to the Kitsu. Next to her was Tamiki, 15 years old. Her blood was half Akodo and it showed in her sandy brown hair and piercing dark eyes. Mostly hidden behind her was Nene. Tamiki and I had always called her 'Our Little Shadow'. Our small quiet servant that followed us everywhere as children.\n\nAt the center of the festivities on a simple wooden dais sat my aunt Shiori, daimyo of the Matsu. There were many who looked upon her with awe and called her 'The Lady Returned'. If ever Matsu herself did return to Rokugan she would probably look like Shiori. At just shy of six and a half feet tall she actually stood above Father by a few inches. She had what many referred to as 'the Matsu build'. Her body was both extremely muscular and buxom at the same time. Like Father and myself, she had the slightly paler skin tone, muddy blond hair, and amber eyes that (along with our height) were the hallmarks of a descendant of Matsu. Though I had barely ever talked to her I had always felt a deep affinity for this woman.\n\nShiori stood up and the crowd around us went silent. \"On this day, the twentieth day of the month of The Hare in the 844th year after the Noble Sons and Daughters of Mother Sun and Lord Moon set foot upon the earth, We recognize you, Motoki, descendant of Our honored forebearer Lady Matsu, grandson of Matsu Sugimoto, as a man and a samurai of The Lion Clan. Come Matsu Motoki and take what you have earned.\"\n\nThere was a smile as bright as Mother Sun upon my aunt's face as she placed the daisho that was to be mine into my outstretched hands. Servants came forth and placed upon me an orange haori vest that bore the mon of the Matsu, a lion claw upraised holding a sword, over my heart. On the back was the mon of The Lion Clan. As it settled upon my shoulders and I tucked my daisho into my side the gathered crowd again cheered.\n\nMy aunt raised her hand for silence and motioned a servant forward. My eyes went wide as I saw what the servant held. Even at a very basic glance I could tell this no-dachi was special. There was a hint of red in its steel blade. Shiori's smile only grew wider as she locked gazes with me. \"My gift to you. It was forged by our greatest weaponsmith, Ikoma Akifumi. It is named Meiyo.\"\n\nMeiyo. Virtue.\n\nI took Meiyo into my hands, overwhelmed by the instant connection I felt to it. The weight and balance of it felt perfect. There was a prescience from beyond my senses that this was the sword I was meant to wield. That I would spill rivers of blood of many evil men with it... And the blood of evil that wasn't men... The world around me began to narrow down to myself and Meiyo. I felt a desperate need to find a dojo or open space to experience the ecstasy of moving through every form of sword art that I knew with this weapon.\n\nI lowered Meiyo, remembering the traditional customs that I must obey as a noble. I bowed to my aunt ready to begin the ritual of declining the gift over and over that her virtuous sincerity in giving it would be shown beyond any doubt. She shook her head dismissively with a laugh, \"No, not for this, Motoki. As your daimyo I would be a fool to not put such a weapon into your hands. It is a matter beyond Sincerity.\"\n\nIn this moment with my master's blessing upon me and the joy of my family around me I felt like I had reached the penultimate peak of triumph. The traditional age at which a noble had their gempukku was 16. At age 12 (a year ago) I had asked to have mine, having learned everything that the old senseis at Matsu Dojo could teach me. When I had been mocked as prideful and short-sighted by them, I had dueled them each and won.\n\nThere was only one thing left to do. An enemy I had yet to defeat. The purpose that had driven me for so long. A fire of hatred within my heart that could only be quenched with his blood. And yet.. I wanted to hesitate. Why ruin this day with an act that would bring so much chaos? He chose that moment to tip the scales on this decision.\n\nFather stepped up to beside his sister. I heard his all too familiar derisive snort. \"Hopefully that's not too much sword for him.\"\n\nShiori turned to Father, a wrathful glare suddenly upon her face that would've given The 5 Celestial Dragons pause. I could sense a hard rebuke about to erupt from her. This was the moment. I knew what I must do and forestalled her rage by calmly saying, \"Father, I challenge you to a duel.\"\n\nAny doubts I had were gone. Our fates were sealed. One of us would die this day.\n\nHe turned to me, his amber eyes narrowed cynically. \"Be careful there, boy. You may be a Lion now but you're still not much more than a mewling cub.\"\n\nBehind me I heard Gemmei's soothing voice plead, \"No. Not today you two. This is not the day for this-\"\n\n\"Mind your own business, woman! This is a warrior's matter! It's not for a priestess to be concerned with!\" Father barked.\n\nGemmei would not be stopped. It had always been the Kitsu way to try to bring peace to the 3 other battle hungry families of the Lion. \"Your son was just beaten nearly to death before your eyes and you goad him-\"\n\n\"I said be silent, woman!\" Father angrily roared at her.\n\nThe air around us now held a tension, as it does during the calm before a storm. There was silence from those gathered. All attention was on the 3 of us: Myself, Father, and our daimyo.\n\nMy aunt's face was a stoic mask. It betrayed no emotion but I sensed a nervous anticipation. Her eyes locked with mine. In a terse low voice I heard her say, \"Motoki are you certain? Must this be?\"\n\nWithout hesitation I smiled and said, \"Do I wish to be the second person to ever put this awful man in his place? Yes, I do.\"\n\nThe only person to ever defeat Father in a duel had been Shiori. It was why she was daimyo of the Matsu and he wasn't. It had always been the highest mountain peak that I could aspire to reach. To surpass Father and stand beside my aunt as an equal. The ultimate victory for my young life.\n\nI thought that I saw tears beginning to form at the corners of her eyes before she blinked and said emptily, \"So be it.\"\n\nI stepped out onto the field where I had demonstrated my skill with all the sword arts that I had learned at Matsu Dojo only an hour before. I was smiling maniacally. I could feel the hand of destiny upon me in this moment. I held Meiyo forward in a mid-shoulder responsive stance.\n\nFather stepped up to his place facing me from 10 feet away. He took an offensive stance, his katana held high. I noted his perfect body posture and foot work.\n\nShiori took her place half-way between and 20 feet off to the side.\n\nI heard Gemmei make her final effort to inject reason into our madness. \"Please, you fools! At least use practice weapons! The Lion need you both!\"\n\n\"Ssshh! It is too late for that.\" Shiori gently chided.\n\nAll around us the attendees of my gempukku stood in a circle. This was a day none would ever forget.\n\n\"This is your last chance, boy. You can back out now before I have to cut that stupid grin off your face!\" Father taunted.\n\nI ignored him, waiting for Shiori to commence the duel. I forced my body to stay relaxed and ready.\n\nIn a hollow resigned tone I heard her say, \"Begin.\"\n\nFather was on me in a heartbeat. He was so fast that he nearly broke through my guard. I brought my no-dachi up, thwarting his opening thrust and weaving it to parry his every slash. I knew his moves by rote. I had watched this man's swordsmanship from my earliest age. I knew every sword art form in his repertoire. I had defeated some of the senseis that he himself had studied under at Matsu Dojo. We locked tsubas at the base of our blades, close enough to stare into eachothers' eyes and smell eachothers' breath. My 'stupid grin' grew.\n\nI suddenly withdrew, putting all my strength into a hard left spin. For an instant I was completely open. I had all but given him the perfect opportunity to strike me down. This was the one moment that Father could defeat me. I had not even begun to attain the physical speed necessary to execute The Steel Wind perfectly yet. It was a stupid risk but one that I knew I must take. My only hope entering this duel was to face him with something he had no experience dealing with.\n\nFather hesitated for less than a second. That was all it took.\n\nI brought Meiyo around hitting hard into his mid-section. His katana came up in a slightly clumsy but effective parry. The steel of our swords sparked as they collided. For a moment Father was off-balance. He staggered, taking a half step back. I pushed forward and brought my left knee up hard into his stomach, knocking the wind out of him. He fell to his butt, vainly trying to bring his katana back up defensively. I spun with everything that I could muster to the right. My sword aimed perfect and true in a lowering horizontal slash towards his defenseless neck. This was it. The moment I had waited for, for so long. A lifetime of hatred went into this slash.\n\nAt the last possible instant a katana flashed between us. Shiori held it firm, her feet digging into the earth as the momentum of my strike forced her back. Her katana, once wielded by Lady Matsu herself, brought Meiyo to stop.\n\nI lowered my no-dachi and gasped for breath. Even carried by an endless river of hatred, I would not raise my sword against the person I revered the most. I could, however, let my displeasure at her interference be known. Which I did in a growling screech. \"Why do you take this from me!? I have waited for this my whole life!\"\n\nShiori answered in a melancholic resigned tone, \"It is over. You have proven your point. No one will ever say that you have not defeated him.\"",
        "\"That doesn't matter. He-\"\n\n\"Let it go, Motoki. Just let it go and be free of it.\"\n\nI opened my mouth, ready to unleash a sharp retort.\n\n\"As your daimyo I command you: Let. It. Go.\"\n\nI glared past Shiori at Father. He was still on the ground. His face was locked in shock. It seemed that it was only at that moment that Father had finally fully fathomed the depth of my hatred. Now he knew that as long as I lived I would seek to end his life.\n\n\"My daimyo.\" I said sadly. \"Will you interfere the next time I challenge him?\"\n\n\"Did you not understand Motoki? You will not duel him ever again.\" She said in a firm tone of finality.\n\nI sighed sadly and looked around. I made a point of memorizing every face that I saw. I sniffed the air, memorizing the smell of home. I took a deep breath, savoring the taste. I reached out my hand to feel the cold pure mountain air on my skin one last time.\n\nI called out to the one person who I trusted most in the world. \"Nene!\"\n\nShe appeared, jittery and sniffling with nerves. \"Motoki..\"\n\n\"Hold this.\" I said as I handed her Meiyo. I pulled my new daisho from my side and held it out before me. I stepped forward until I stood beside Shiori. Our shadows blended together over Father in the dying light of the setting sun between the mountains.\n\n\"As long as he is Lion, I am not!\" I proclaimed to her in my own tone of finality and heard those words echoing in the courtyard all around me. I handed her my daisho and spat on him. I turned my back on Father and Shiori and moved towards Nene, disrobing as I went. Yes, even my loin cloth. I would carry only one thing with me from the Lion.\n\nI took Meiyo from Nene's shaking hands. I smiled at her and then glanced momentarily over my shoulder at the daimyo that I had served for all of 10 minutes. \"I have earned this.\"\n\nThus, did I walk naked out of my own gempukku.\n\nMind you, I was not a total fool. I had feared it might come to this. I went to that tiny grove of pine trees that I had played in as a child with Tamiki and Nene. There I had left stowed away in the hollow of a tree a travelling pack with a few days worth of food and a spare kimono and sandals the night before.\n\nAs I finished dressing I heard a rustling behind me. I turned to find teary eyed Nene clutching my haori.\n\n\"Please don't do this Motoki. Please just put this on and come back. Shiori-sama will understand. Please.\"\n\nI shook my head. \"This is how it must be. I am sorry, Nene.\"\n\n\"Will you ever come back?\" She asked miserably.\n\nWould I? I closed my eyes and waited to see if anything came... It was undecided. But I owed Nene something more. I took the haori from her hands and tied it around the nearest tree. \"I will. And when I do, I will stop here first.\"\n\nI walked away, leaving her staring at the tree. Behind me I heard Nene tearfully say, \"I will wait for you! I know you will come back!\"\n\nAnd then I was gone.\n\n***\n\nI was awoken by shaking. I saw a single tear-filled amber eye in a sea of black. I coughed and tried to move and think. A small pale hand came up and parted the blackness so that I could see her soft features. I had always thought she was cute as a child. Why she always used her hair as a mask was beyond me. In 16 years her features had only filled out to a less soft more womanly version of that cuteness.\n\nStreams of tears were flowing from both amber eyes down her heart-shaped chin. She sniffled and got out, \"Motoki is it really you?\"\n\n\"I'm always making you cry, Nene...\" is all I managed to croak out before the darkness took me once again.\n\n***\n\nConsciousness came and went. Flickering sensations.\n\nSomething thick and sludgey being poured down my throat.\n\nA cold wet cloth running over my chest.\n\nLights then no lights. Sounds then no sounds.\n\nI noticed a constant. Something soft touching my hand. Another hand, I realized. So I touched it back. That seemed simple enough.\n\nSounds again. But now they were voices. There were 2 of them.\n\n\"... On their way. The snow will delay them by a few days.\" An energetic young female voice.\n\n\"How long?\" A more flat, weary-sounding female voice that rang somehow familiar in my mind.\n\n\"Lady Shiori should have the message in her hand within a month.\"\n\nShiori? ... My family!\n\nI fought my body. I had to get up! What was I even doing on my back? I mustered my rage, battering at my weak body from the inside.\n\n\"We still don't know how much he knows. Until Shiori gets here we have to be very careful you two.\" That had to be Tamiki. It had been so long but it did sound sort of like her. I heard 2 sets of footsteps move away from me. One continuing on, the other pausing.\n\nWhat I knew about what?\n\n\"Nene..\"\n\nAt this point I finally managed to crack open my eyes. As they started to focus I made out Nene knelt over me. She was between my bedridden body and Tamiki, who was a shadow in the doorway. Nene stared down into my eyes with a smile and lied, \"I'll let you know as soon as he wakes up, Tamiki.\"\n\n\"Thank you, Nene.\" Then Tamiki was gone.\n\nNene leaned in and whispered, \"Rest a little while, Motoki. I'll be back.\"\n\nShe got up and left the room for a time and I snuck a look around. It was my old room in my family's manor. There wasn't much here. My old clothes chest in the corner. A shelf filled with scrolls that I had already read. A long mural across the wall depicting Akodo and Matsu fighting side by side against the shadowlands armies. A writing table with a small statue of Bishamon, the Fortune of Strength on it. With relief I saw my weapons neatly piled atop the box of Misa items against the far wall near the door.\n\nNo matter Nene's request, it just felt wrong to be even 8 feet away from Meiyo. I struggled and with agonizing effort managed to sit up. Which is how I discovered I was naked, except for my warding pendant, beneath the sheets. I thought back to the last time I was home. It really didn't matter. Everyone had already seen it all anyway. I crawled to Meiyo. I pulled it to me and with maximum effort managed to silently pull myself up to a standing position. My travel clothes were gone so I had to ever so silently make my way to my old clothing chest.\n\nI had just managed to get an under robe on when Nene soundlessly re-entered. It was only when she was right beside me that I realized how tiny she still was. The top of her head barely came up to the middle of my chest. I couldn't make out much of her body shape beneath her over-sized plain brown servant's robe. I got the impression of extreme thinness. Then there was her face. Her long black hair covered all of it except one amber eye where her hair parted on the left side. Occasionally her tiny nose and small pink lips would become visible. Those and her thin black eyebrow were the only things of color atop her pale skin. We had given up on getting her to show her face at all by the time she was 4. It was still strange for me to think that she was only a few months younger than me.\n\nI caught a glimpse of tiny pink smile as she whispered, \"We need to talk but not here.\"\n\nI mumbled through a dry throat and mouth, \"I.. need food. Water. You lead.\"\n\n\"We must be silent.\"\n\nWhat proceeded was an interesting journey. Nene had always taken the servant's role of unobtrusive aid to the furthest extreme. I had developed a sixth sense over the years of our childhood of where she would be hiding (most of the time). It was a game that Nene and I were always playing. Now I slowly walked Nene's path weaving in and out of rooms, dodging other servants at every turn. I was delirious and still half dead. At some point without realizing it I shifted from leaning on Meiyo to silently holding it. I leaned on Nene instead.\n\nWe emerged into the frigid snow-covered night in the daimyo's private garden on the far north of the castle grounds. Lord Moon gave very little light in the misty winter sky. The darkness of his ever-consuming madness had left him as a thin sliver of crescent. Nene led us in a bizarre circuitous path that at first baffled me until I realized that we were stepping in spots where we would leave no tracks. Soon we arrived at our destination: the castle's northern watch tower.\n\nIt was, like most of the castle's defenses, entirely abandoned. Centuries ago my family's castle had held the province's garrison. At the time it had made sense. The castle was the most defensible position in the province. A single long steep road led up to the 20 foot high outer wall, with sheer 100 plus foot drops on all sides. When the mine was established near the single narrow pass leading into Katei, however, priorities shifted. The province's defenses were then built into the pass itself, where the garrison was moved to. Only a tiny contingent of guards were permanently stationed at the castle. The post has been laughingly referred to as 'being the daimyo's doormen' by the rest of the province's soldiers ever since. Despite all this, my family has always kept the castle's ancient defenses well maintained and every possible supply needed for a prolonged siege well-stocked. The logic being that one simply never knew what tomorrow might bring.\n\nInside the tower, I was led to a thick rug in front of the irori, the square stone-lined sunken firepit, where Nene quickly got a small fire going. I noted that the wood and ashes inside had the look of being freshly used. Nene whispered, \"As long as we keep the fire small, we will not be noticed. Not even when it is light outside.\"\n\n\"This is one of your hiding places?\" I asked.\n\n\"One of my favorite ones, yes. No one else ever comes here. I will get you food and then.. You'll see.\" She stood and walked back to the entrance.\n\nA few minutes later I sat feasting on fresh trout with rice and leeks. My chopsticks could not fill my mouth fast enough. Nene apparently kept the northern watch tower well-stocked with sake (which made me wonder what she actually did here alone, where no one could see). There were quite a few small kegs in here. The sight of her vigilantly watching it cook made me think of my ronin sensei, Ichibei, whose love of drink had exceeded his love for his (former) Phoenix Clan.\n\n\"The perfect woman, Motoki? The perfect woman is the woman who understands how sake must be heated. If she heats it too much then it loses all flavor and leaves your tongue burned and unable to taste. But if she does not heat it enough then it has none of its power and leaves you only longing for more. The perfect woman knows how to give you just what you need and only that.\"\n\nObviously, he had been drunk at the time. He was always drunk.\n\nI finished my food and a large jug of water, as Nene expertly pulled the decanter from its boiling kettle. She filled 2 cups and served me first, waiting for me to drink before she did.\n\n\"Kanpai,\" I said, raising my cup and touching it to hers.\n\n\"Kanpai,\" she repeated, making certain that the rim of her cup touched the middle of mine out of respect and deference.\n\nI took the clear vaporous drink into my mouth. I savored the warmth and myriad flavors of it as it crawled slowly across my tongue into my throat. By Ichibei's standard, Nene would have been the perfect woman. She had made the sake a bit on the warmer side, which made it more enjoyable on this icy cold night. With my beloved Misa, the only other woman I had ever drank alone with, I had always had to be the one to heat the sake. Lest my tongue get burned every single cup.\n\n\"How much do you trust me, Motoki?\" Asked Nene, breaking me out of my reverie, as she refilled the decanter.\n\nI stared into the small flame before us, then turned and caught its reflection in her eyes. She had her hair completely parted. Nene's mask was off. \"You're the only person besides my fianc\u00e9 that I have ever let hold Meiyo.\"\n\nShe glanced at it just behind where I sat. Then her eyes returned to mine. They seemed brighter. She was smiling. \"It took four soldiers to carry you up to the manor. Everyone tried to take it out of your hand. You wouldn't let it go until I told you that I would carry it for you.\"\n\n\"After ...What happened to me on The Wall... I was drunk for a few weeks. The Crab had a Kuni priest watch over me who was well versed in dealing with samurai who had experienced too much like me. He was the only other person I've ever told about my ...other sense. I never even told Misa. Come to think of it, I guess he was the one who blabbed about it to that Ikoma girl.\"\n\n\"...\" Nene's mouth hung open. Then her face took on an intense look that I couldn't read. She turned back to the sake and refilled our cups.\n\n\"That was the first thing I can remember sensing, you know. Kanpai,\" I took my sake in a quick swallow without touching cups. \"I knew that you would always be loyal to me no matter what.\"\n\n\"Kanpai,\" Nene whispered. Then, as if weary of my answer, mumbled, \"Do you still.. I mean..\"\n\nI locked eyes with her and felt it, that familiar sense. \"Yes. And it's exactly the same as it ever was. It's as if your loyalty sits outside of time, perfect and never changing. I think.. I think we feed each other. I've always known that you will never lie to me, so I've never lied to you.\"\n\nPerhaps I was saying too much. Perhaps it was just the sake. But ronin or not I was still Matsu at my core. Bluntness would always naturally be my way.\n\nNene closed her eyes and took a deep breath as if steeling herself for some impossible task. When they opened I saw apprehension in them. She looked away for a moment, took another deep breath, then met my gaze. \"We'll begin with this. What secrets do you know of this place and your family?\"\n\nI felt something overwhelming then. For a moment I glimpsed something like a living mist that writhed and covered everything around me, even Nene. I had sensed it before. As a child it had terrified me. But I had faced demons and twisted bloodspeakers who commanded armies of rotting corpses since then. Whatever this was I would face it as I had faced every other dark thing in my path: with honor.\n\n\"Don't you mean our family, Nene? I know that you are my half-sister. It was always obvious.\"\n\nShe nodded. \"What else?\"\n\n\"I know that there is a hidden cave entrance beyond the daimyo's quarters that is protected by magic.\"\n\n\"Anything else?\"\n\n\"Akodo Shoken was not my mother. No matter what lies are written in the official genealogy her only child that lived was Tamiki.\" I still remembered that awful day when the only woman I had ever thought of as my mother lay dying after giving birth. When it was clear that she would not live through the night she had called me to her side.\n\n\"Though none of my blood runs in your veins I have loved you in this world as I will in the next. You will always be my son.\"\n\nShe died near midnight. My newborn half-brother, Kazuaki, made it to 3 days before joining her. I was only a few months from my 6th birthday then.\n\nLooking back years later, I could clearly see that Father's cruelty began the night that Shoken died.\n\n\"Do you know who your mother is?\"\n\nI shook my head and looked away as I bitterly rasped, \"Father answered with his fist the 2 times I dared to ask. After that I just didn't care.\"\n\nThe old hatred threatened to come back. I was tired of carrying it. As I had been since the day of my gempukku. I moved to right beside Nene and refilled the decanter myself. It was a strange feeling, my weak body becoming stronger from the food even as I felt the sake begin to touch my senses.\n\n\"Is that all of it, Motoki? Are there..\"\n\n\"I know that no matter what anyone in our family says, we're the only Matsu who have naturally blond hair. Everyone else bleaches theirs'. No one at Matsu Dojo ever believed me when I told them. They thought it was some ridiculous joke I wouldn't let go. I'm certain that Shiori and I are the tallest living Matsu. Those two things always felt connected.\" The sake looked just right. I refilled our cups and drank, not bothering with the customary toast.\n\nMy heart raced. I felt the mist closing in on me. I looked within, searching out inconsistencies and oddities. There was only one other thing about myself and my family that had ever felt off to me. But it almost seemed stupid to mention it.\n\nNene nodded. \"You pieced so much of it together. You might have figured it out completely just being around Tamiki and Chiumi for a few days.\"\n\n\"There was one other thing but..\" Did I even want to say this?\n\n\"What is it?\"\n\n\"We... We're too smart. Or ...Just smart in a different way. We don't think like Matsu. Matsu only think with their weapons. We think like Akodo.\" I looked back up from my sake cup into her eyes. \"Does that make any sense Nene?\"\n\nShe smiled as if I had just said something brilliant. \"That would be because you're equal parts both. Your's is the blood of both. The forbidden blood born of dishonor. Your bloodline came from the one night that Akodo and Matsu forsook their honor and surrendered to their passion for eachother.\"\n\nThe very idea.. It was unimaginable blasphemy! That Akodo, a god fallen to the earth would dishonor himself by cheating on his mortal bride.. Akodo, who created Bushido and taught the world the arts of war. And Matsu who, under Akodo's instruction, had gone from a feared force of anarchy and chaos to a champion of virtue and justice. That she would forsake her honor for even a moment..\n\nAnd yet I felt the truth of it. And knew that there was far more.\n\n\"I can see it in your eyes. You know my words are true. Your other sense?\"\n\nI nodded weakly.\n\nNene took a turn at the sake. \"You're going to need more of this. Probably lots more. I think I will too. You should know before I continue that I swore an oath to our father on his deathbed that I would be the one to tell you. And that I would give you this.\"\n\nShe reached into her baggy robe and produced a small wax sealed scroll. \"His words that he made me repeat were: 'If my son is ever ready for my apology it will be waiting here. I only ask that he keeps this scroll intact even if he never opens it'. If you wish Motoki, I will hide it somewhere for you. In order for my oath to be fulfilled you only have to hold it once.\"\n\n\"Nene...\" I shut my eyes tight as the blade of this act of love from beyond the grave pierced my heart. I will not be this weak!\n\nI reached out with a shaking hand. \"Thank you but no. It is mine to carry.\"\n\nI set the scroll beside Meiyo and with a tremble took my freshly filled sake cup. Which I downed without tasting.\n\n\"Here, take mine as well.\" Nene offered and went to refill the decanter.\n\nI downed her cup too. Then something she had just said came back to me. \"Why did it have to be you to tell me?\"\n\n\"Father didn't think you would believe the next part of it all if it came from anyone else.\"\n\nWe drank the next 2 rounds in companionable silence. The crackling of the fire and the cruel howling winter wind outside were the only sounds. I felt the sake having it's intended effect on my broken nerves. Fatigue began to slither back in at the edge of my senses.\n\nFinally, I could take the waiting no more. \"Alright Nene, out with it.\"\n\n\"I'm not certain that you're drunk enough yet.\" She said with a smile.\n\n\"We are Lion. We are born to face far worse than words without fear.\" Where had that come from? I looked deep within. The answer was simple: On some level the very act of returning home was acceptance that I was Lion. No, more than that. I wanted to be a Lion.\n\nShe stared at me for a very long moment, then broke out into an uncharacteristically loud peel of laughter that echoed upwards into the tower.\n\n\"What Nene?\"\n\nShe calmed but struggled to hold an ongoing snickering fit in. \"I'm sorry.. Sorry Motoki.. It's just now I think that you might actually stay.\"\n\nShe was clenching at her sides, nearly falling over. \"I'm just so happy. And maybe drunk.\"\n\n\"Nene.\"\n\nShe breathed hard and locked gazes with me. \"It is worse than words. How about the knowledge that you hold the power of a god within your blood?\"",
        "I shook my head. \"All nobles do. We all have a trace of the Children of Mother Sun and Lord Moon..\"\n\n\"Not just a trace, Motoki. Yours is far greater than all other nobles.\"\n\n\"How?\"\n\n\"It's been preserved since the beginning of the empire by never being diluted with human blood.\"\n\n\"How is that possible?\"\n\n\"Through inbreeding.\" She was looking at me now as if I were a child that couldn't seem to grasp some basic lesson.\n\n\"But inbreeding like that would produce deformities-\"\n\n\"It would unless the blood of a god were involved.\" She whispered. Her face had gone soft with concern but her eyes still hadn't left mine. \"Think of what you've done since you left. Even the greatest heroes who have ever lived could not have stood alone against entire armies over and over as you did. A year has not passed here in some time that we have not received tales of you single-handedly killing bandit armies or bloodspeakers or rogue shugenja or demons who made it past The Wall.\"\n\n\"But that's insane. Inbreeding like that. Why would anyone ever do that?\" I gasped as my mind took in the staggering implications. The real problem was that I knew Nene would never lie to me.\n\n\"The Empire needs that power Motoki. It needs your power. What would have happened to the Crab if you had not been there?\"\n\nI stood up. Could not stay seated. Numbly walked a few paces. Then turned and walked a few more.\n\n\"When I first touched Meiyo I saw myself killing shadowlands with it. So I just went to The Wall! I mean I wandered with Ichibei until he got himself killed but I knew I was meant for The Wall. It made perfect sense. Where else would I go...?\" I ranted as my mind reeled, my heart raced, and my breath shortened.\n\n\"Motoki.\"\n\nWhy did Nene suddenly seem like she was so far away?\n\n\"Motoki...\"\n\nInbreeding. My blood should stay in my family where it belonged, obviously! Why waste it on someone who I wasn't related to like Misa?\n\n\"Motoki!\"\n\nI looked at Nene. For an instant our eyes met. She whispered, \"Who is your mother?\"\n\nI grabbed the sake keg and downed it straight, chugging until it was empty. More than a few cupfulls soaked into my beard. My blond beard. Because Lady Matsu herself was a blond. Just like Father. Just like..\n\n\"Shiori.\"\n\n***\n\n2. The Legacy We Share\n\nI awoke back in my old bed.\n\nI almost wanted to believe that the night before had been a bad dream. The taste of old sake in my mouth said otherwise. I sat up and felt something move inside my sleeping robe. I reached in and briefly touched it, feeling the paper. It was the scroll that represented my father's dying effort at reconciliation.\n\nToo little too late. I thought. But how much did I really know? For most of my life I had thought that I understood the man. That his nastiness was born of bitterness from first losing out on the daimyo-ship of the Matsu to his sister (my mother, I reminded myself) and then losing his one true love, Shoken (who he had cheated on with Nene's mother: whoever that was, and his sister: my mother I also reminded myself). Now I knew that his life had an unperceived dimension that I had never had any awareness of.\n\nAs I stood stretching, I found myself longing for the simplicity of the unrealized thing that had led me home: Father was dead. Now I could be a Lion again.\n\nThere was a small basin filled with water on the writing desk that I wiped the sleep from my eyes with.\n\nInside my old clothing chest I noted that someone (probably Nene) had replaced my childhood clothing with adult-sized robes. I dressed thinking of what I should do with the scroll. As I finished getting clothed I pulled it out of the sleeping robe and stared at it. I looked to my bed, the thick sleeping futon that seemed like such a luxury after ten years of sleeping with just a layer of straw cloak between my body and the cold hard earth. I looked to the big heavy box that held Misa's items. I hid the scroll between my white under robe and my plain tan cotton winter kimono. I would carry it until I felt ready to face it's words.\n\nToday I would meet at least 2 of my sisters. They would hide the bizarre truth of our family from me, and I would have to pretend that I didn't know that they were hiding it. It felt so wrong. We were Matsu after all. No, we are more and that is the crux of the matter.\n\nAmongst the 7 Great Clans of Rokugan the samurai of the Shiba Family of The Phoenix Clan are considered to be the most spiritually focused. It was on the road right outside the northern Matsu border that I had met my final sensei, Ichibei, who had drank his way out of their ranks. In our brief time together, I learned a great deal from him. Mundane things like how to survive on the open road and how to navigate The Empire. But his lessons also went much deeper. He taught a young, haughty, headstrong me how to look past my selfish emotions and see the greater meaning of what it meant to be a samurai.\n\nI could still see his body face down in the pouring rain. His blood diluted by the tears of heaven that puddled across the ground. I had told him that he was too drunk to duel. The ronin that had just killed him had told him that he was too drunk to duel. I held no bitterness towards that man. He had even seemed apologetic as he handed me Ichibei's daisho.\n\nI turned away from this memory, finding what I was looking for: what Ichibei would've advised to do in this moment. I sat down on my bed, assumed the lotus position and closed my eyes. Ichibei's words came back to me: \"We who are mortal are composed of the five elements: air, earth, fire, water, and void. It is that last element that we reach for in meditation. The void within us connects us to the infinite void that permeates and unites all things. In meditation we find clarity by finding our place in the whole.\"\n\nFor how long my meditation went on I cannot say. I came out of the timeless stillness feeling calm and empty. There was a knock at my door.\n\n\"Enter.\" I said.\n\nIt was Tamiki. In the 16 years of my absence she had grown to somewhat look like her mother. Her eyes hadn't changed, they were still that dark brown that seemed to see everything. Her shoulder length hair was a light brown with noticeable blond highlights. Her face held a mature beauty that actually made me think of our stepmother, Gemmei. Only the paleness of her skin and 6 foot height revealed the Matsu (and I now knew, more) blood in her. She wore a simple unadorned orange cotton winter kimono, tied at the waist with an elaborate obi. Beneath it was a lithe body gone rounder with age and childbirth.\n\nEven as I took her in I couldn't help but wonder if Father had touched that body. If so, how often? What were the rules about breeding in our family? How many children had she had with him? I felt the beginnings of something like jealousy. Where was that coming from?\n\nThis is going to be a long day. I thought, taking a deep breath as I stood.\n\nTamiki was the eldest of Father's children. It was my automatic assumption that she had become daimyo of Katei Province at his death. I gave her the deep bow from the waist that a ronin gives a daimyo. As I straightened I gave her a shy smile and said, \"Good morning, Tamiki.\"\n\nShe smiled, giving me a quick bow from the neck, and said, \"So the prodigal Lion returns to the pack. It is good to have you home, brother. I thought you might join us for breakfast.\"\n\n\"I believe I am still technically a wolf but I would be glad to eat at the Lion's table again.\" I said, as I reflexively grabbed Meiyo and stepped towards the door.\n\nShe looked at my weapon and then back at me. \"You can leave that here. There is no danger for you in our home.\"\n\nI hesitated. I had no desire to have any conflict with my sister this early in the process of reconnecting with my family. But none-the-less, to not have my beloved no-dachi within reach was unthinkable. \"If the daimyo of Katei commands it I will leave it here. Otherwise.. to be without it is akin to being without my own beating heart.\"\n\nWhat she would've said next I will never know.\n\n\"I will hold it for you, Motoki.\" Nene whispered meekly as she stepped out of hiding from behind Tamiki. She had gotten better over the years. I hadn't sensed her there at all. Above her usual baggy servant's robe her mask of black hair was back in place, and I found myself missing the open straightforward friend I had drank with the night before.\n\nA long long day. I thought as I trailed Tamiki and Nene trailed me to the dining room.\n\nMy family's castle actually had 2 dining rooms. The first was the common dining area which was used for large gatherings. Otherwise it was where the servants and guards ate. The other was the daimyo's private dining room, which was reserved for family and private visitors. It was the second that we headed to. The dining room was still pretty large. The long table in it sat 20 people. As we entered I noted two people waiting for us. Both stood as we approached the table.\n\nThe first person on the left side of the table was a young boy. He looked to be maybe 5 years old. His hair was an interesting mix, being somewhere between Matsu blond and Akodo brown. His face held the slightly wider Matsu features that I saw when I gazed at my own reflection in pools of water. He was tall for one so young. His skin was pale like mine but not sickly pale like Nene's. I noted a nervous tremor to his body as his amber eyes took me in. He wore a simple orange cotton kimono.\n\nAt the opposite seat on the right side of the table was my sister, Chiumi. I remembered because her bizarre mix of Matsu and Kitsu features were impossible to forget. Her neck length blond hair perfectly matched her otherworldly golden eyes and olive complexion. Her face had the exotic leonine features that I associated with Kitsu beauty. On her they were simply breath taking. She was on the short side for our family, being a mere 5 and a half feet tall. Short as she was, however, she still had the Matsu Body. There was very noticeable thick muscle all about her limbs, but she was very round in all the right places. I tried not to think too much of that body but couldn't help lingering on those curves. Her tan haori worn over her white winter kimono complimented the rest of her look.\n\nI saw Tamiki going left and followed. As we approached the boy and Chiumi gave a quick bow. Tamiki took her proper place at the head of the table and I took the spot next to the boy.\n\nBefore Tamiki sat she looked toward us with a smile and said, \"Motoki meet my son, Denbe. Denbe, this is your uncle Motoki.\"\n\nLittle Denbe looked up at me stoically and said with a hint of anxiety, \"It is an honor, sir.\"\n\nDenbe, named after Father. In his amber eyes I saw the truth and for a moment the blood went cold in my veins. This was my nephew but he was also my youngest brother. In that instant I saw more. I saw a tall, strong, samurai in light armor bearing the Matsu mon holding a nagamaki at the head of a massive Lion army. But why was the army in the barren Crab lands?\n\nThe very slight touch of a small hand into my right hand brought me back to reality. I shook my head, smiling with unfeigned pride at the boy. \"I'm sorry, my mind is just filled with so many questions. The honor is mutual, nephew.\"\n\nI saw little Denbe relax and even smile. Tamiki sat and then the rest of us sat. I couldn't help but notice Chiumi staring at me across the table, a curious look to her lovely features. Servants began bringing out the first of 3 courses of food. As the bowl of miso soup was set before me I turned to my right where Nene sat, mouthing a quick 'thank you' to her.\n\nIt actually amused me that everyone at the table seemed intent on focusing entirely on their food, lest we would have to lie to eachother. When Gemmei was lady of the house she would have never allowed the awkward silence that encompassed the first course to stand. Which actually made me talk. I looked around the table, making a point of catching everyone's attention. \"I know my return must be strange for you all. It's strange for me. You are my family, a large part of myself that I have lived without for too long... I don't even know where to begin.\"\n\n\"What do you want to know?\" Tamiki asked.\n\n\"Anything. Everything. Where is Gemmei? Arisa? Kadiri? Oniji? How many nephews and nieces do I have yet to meet?..\" My voice trailed off. I saw Tamiki and Chiumi exchange a look.\n\n\"After... you left.. father and Gemmei's marriage got worse and worse until she left and took Arisa and Oniji with her..\" Tamiki began. I didn't see specifically what she left out but there were gaps as wide as mountains.\n\n\"Kadiri had just married our cousin, Akodo Yoshiki, so mother, Arisa, and Oniji went to live with them.\" Chiumi picked up. Again, the massive gaps that a Great Clan army could march through.\n\n\"..Yoshiki is our mother's nephew. You should remember, Motoki, he and Aunt Eriko visited a few times when were children. His little sister Ochiyo really liked you.\" Tamiki ranted, obviously over-joyed in being honest.\n\n\"They're all wintering at Yoshiki's family estate right now.\" Chiumi picked up. There was something massive there that she had just run right past. Out of fear of giving myself away I turned towards Nene. She looked a little awkward. She was sitting at an uncomfortable angle very obviously meant to hide her from the others. I listened closely and could barely make out the quietest possible snorting of laughter from behind her hair.\n\n\"As for the children of our family, there is only Denbe here, my other son Iemasa, and my daughter Makaira.\" Tamiki concluded.\n\nThere was no talk of anyone being married. Which would've been entirely abnormal in any other noble family. The standard way of things was that a noble would be married within a year of their gempukku if not immediately after. Marriages were arranged and occurred to cement political ties. It was a noble couple's duty to produce as many children as possible to fill their Clan's armies. Apparently, my family were beyond such customs. It would've been odd in any other clan but in the extremely traditionalist Lion it was doubly so. I politely skipped over any such questions and gave my sister an opportunity to talk about what she most wanted to, \"Tell me about your children, Tamiki.\"\n\nShe smiled and said with pride, \"Iemasa is a genius. He was invited to The Akodo War College. That's where he's at now. As for Makaira, she's spending the winter studying and preparing for her gempukku..\"\n\nShe stopped and looked at me. \"That's why you're here, isn't it? You got my letter?\"\n\nI smiled, \"I did. It was handed to me over the corpses of 400 dead bandits right outside the Kitsune Mori.\"\n\nNormally I would not speak so pridefully. Here among my family, no matter all the lies and omissions between us, it felt right.\n\nAll color drained out of Tamiki's face. Next to me I heard little Denbe sputtering as he tried not to choke on his omelet. On my other side, Nene was giggling. Across the table Chiumi burst into laughter and excitedly said, \"Well, I guess the Scorpion don't have to worry about that bandit problem any more, do they?\"\n\nTamiki stared at me, her face filled with awe. \"It was the oddest thing. This tattooed Dragon just walked into Matsu Castle one day and said 'I have been sent by The Togashi himself to deliver your letter to your brother'. We heard that you had been sighted in Ryoko Owari and I was about to send my letter to one of our courtiers there.\"\n\nI nodded. \"Togashi Kin. She found me.\"\n\nIn all the uncomfortableness of our breakfast I had barely noticed the food as we ate it. Servants had begun to clear the table. Tamiki contentedly said, \"This was good but you didn't say much of your travels, brother. Perhaps you'll have a few interesting tales for us tonight at dinner?\"\n\n\"Gladly, sister.\"\n\n\"I have some things to discuss with Chiumi. Nene will lead you to the bath house if you wish..\" It was a daimyo's polite dismissal.\n\n\"Actually, I was hoping for some time in the dojo.\"\n\nTamiki looked at me for a long moment. Something massive seemed to shift in her in that moment. There was an unreadable look to her face. \"Actually, I think there's something I need to show you, then.\"\n\n***\n\nThough it is in fact one big structure, my family's castle can be broken up into 3 connected parts. The entire west side was built into the mountain behind it. On the north and west side was the daimyo's personal quarters. The south and west side were the quarters for our family. The south and east side are where retainers and visitors were quartered (near the front gate, which faced east). Originally, the estate was actually 3 distinctly separate structures, divided by various courtyards, gardens, and practice yards. Over the centuries the 3 ancient buildings were built into each other, forming one large labyrinthine structure. When I said I wanted to go to the dojo I had assumed I would be taken to the southeast where the family's dojo adjoined the mostly deserted barracks. Instead, I found us headed directly south.\n\nThis area of the castle was walled off, via a 10 foot high wall, from the rest except for the family quarters north of it. I looked to my right and saw a small stone building built into the wall of the mountain that was entirely separate from the castle. This was my family's ancestral shrine, where the ashes of our forebearers were kept in their honored places. At least once a year a Kitsu shugenja would be called in to make certain that all was right in the sacred place. I always got a feeling of unease walking past here. It was as if a hundred sets of eyes were watching from within.\n\nAs this was the only thing that I knew of in this part of my family's estate I found myself curious as we continued south. When we got to the southwestern corner of the outer wall I noted a set of steps that had been added since I was last here. At the top a wooden bridge had been added that connected to a tiny outcropping from the side of the mountain. Beyond that was another wooden bridge that led to a small shelf on the side of the mountain.\n\n\"Be careful with your step. I'll have to have a servant come out to sweep all this snow off.\" Tamiki said over her shoulder. As we approached the end of the second bridge she said, \"Give Motoki and I a few minutes, you three.\"\n\nA stone foot path had been placed into the shelf which led up hill to what appeared to be a massive house. My jaw dropped as I saw painted above the door a realistic depiction of The Crab Wall. On the side of it was the Lion Clan mon. I turned to Tamiki but before I could speak I found the words dead in my throat. Tears were rolling down her cheeks.\n\n\"In the end the only thing he wanted was to see you one last time so that he could make things right between you. When it became clear that that would never happen, he ordered this place built. 'A place in our home your brother can be without even a hint of my hated presence.' He never even set foot here. No one but the builders and Nene has ever been inside.\" Her voice held the grief that I still felt when I thought of Misa. Whatever the hidden truths of our family, I knew now that my sister had loved our father as a woman loves a man.\n\nOut of respect for her grief I looked away. I didn't know what to say but knew I had to say something. All I could find was a feeble, \"I'm sorry.\"\n\n\"Are you truly?\" She said bitterly as she turned away from me and walked back. Over her shoulder I heard her say, \"I'll have your stuff sent from your room.\"\n\nI stood there in the cold mountain air not knowing what to do.\n\n\"I was afraid she'd get like this.\" Chiumi said with concern. \"Of all of us, father's death got her the worst.\"\n\n\"I just wanted to go to the dojo.\" I muttered.\n\n\"That's what this place is! A private dojo for the legendary swordsman! C'mon, let's have a look inside!\" With that, Chiumi took off up the path. I noted strapped to her back was a Crescent Sang Kauw, an unusual weapon that I had only ever seen in the hands of a few sohei (warrior-monks). It was a double-sided spear with a crescent-shaped blade set into the center of the haft so that it's two corners faced outwards.",
        "As Nene handed me my weapons I leaned in and whispered, \"What is all this?\"\n\n\"Not now.\" I barely heard.\n\nInside was a massive main room with a high ceiling. On the far side was the irori, with a kitchen area along the wall. Beyond it were 2 private rooms. There were doors on the two long walls. The left one led out to a terrace which sat a few feet away from a jutting escarpment above a few hundred feet of sheer drop. The right led to an exit on one side and a small connected bath room on the other. Back in the main room I found Chiumi rooting through a closet, wherein there were practice weapons of every conceivable sort.\n\n\"Aww.. no Sang Kauw!\" She complained. Then she purred seductively, \"What do you think, big brother? Want to show me what that giant sword of yours can do?\"\n\nShe was turned towards me with her weapon raised and a devilish smile on her face. There was a twinkle in her golden eyes. I was suddenly frozen where I stood. I felt myself begin to harden below my obi.\n\nA loud crash brought my attention to my left, where Nene had just dropped an armload of firewood. I heard her awkwardly sputter, \"Umm.. Maybe I should leave you two.. I mean..\"\n\n\"Oh, come on Nene. You know it'll be more fun if you watch!\" Chiumi said in her laughing tone. She lowered her sang kuaw and walked over to poor Nene.\n\nAs the two finished regathering the wood, I noted Chiumi looking at me then whispering something to Nene. The smile never left her face.\n\nA servant poked his head in from the front door. \"My lord, we have your items here.\"\n\n\"Leave it all on the porch and thank you.\" I said as I finally turned away, trying to hide the very obvious bulge in my kimono embarrassedly.\n\n\"I should go check on eldest sister. Have fun you two!\" Chiumi said.\n\nAs Nene began to prepare the irori, I stepped towards her and said, \"I'll get it.\"\n\nThen in a much lower tone I quickly asked, \"Could you make certain that we're alone? I really do need to talk to you.\"\n\nI met her on the front porch, where she pulled back her hair and whispered, \"All clear.\"\n\nWe made quick work of getting my meager possessions inside and sat down on the mat beside the firepit. Nene grinned, her very posture entirely different now that we were alone. She said, \"I have a few kegs of sake hidden here. You look like you might need some.\"\n\nOf course she has sake hidden here, why wouldn't she? I thought. But instead I said, \"It's far too early for sake. So this is where I'm to live?\"\n\n\"We discussed it right before we went to get you earlier. Tamiki thought it would be best to keep you isolated here until Shiori arrives. She had thought to broach it at dinner but I guess when you mentioned wanting to go to the dojo..\"\n\nI thought this over and wasn't sure that I liked it. Something else about my older sister also bothered me.\n\n\"She hides it well but she really doesn't like me very much, does she?\"\n\n\"No, she doesn't. Keep in mind, if I tell Tamiki that I think you might run, she'll have the bridge destroyed. You'll notice that your climbing gear has been taken from your pack.\"\n\n\"So this is to be my prison?\"\n\nNene pulled back the front of the mat and knocked on the wooden floor. It sounded hollow. She looked at me and said, \"I have everything we would need to escape right here. In a day or 2 when things have settled I'll show you the two routes we can take down the mountain.\"\n\n\"If we ran what would they do, though?\"\n\n\"Most likely Shiori would send Chiumi and her elite guard after us. They're her secret weapons. Chiumi has only ever been defeated in a duel by Shiori herself and the Matsu elite guard are handpicked. If we made it out of the Matsu lands we'd have to worry about the other god-blooded families, which would be far far worse.\"\n\n\"God-blooded? So it's not just our family? Are they all ...incestuous?\"\n\nNene nodded. \"And extremely dangerous. The most powerful members of every clan. At least the ones that we know about. If we ran we would have to worry about you being captured. Your blood is extremely valuable. Our only real hope would be to make it to the Crab Lands.\"\n\n\"Why the Crab Lands? And if this is true, why was I allowed to wander the Empire freely all these years?\"\n\n\"When you left here Shiori put it out that you had been given Exile status, which meant that you were an outcast with no dangerous knowledge. If any god-blooded family had gone after you, they would've opened themselves for reprisal from the Lion. When you left the Crab, their god-blooded hidden daimyo let it be known that you had the same status with them. I assure you, whether you realized it or not you were being carefully monitored everywhere you went. Even the mad Bayushi hidden daimyo wouldn't risk it.\"\n\nI tried to piece it together in my mind. \"So my returning here only to flee again would be perceived as me learning the truth and rejecting it. That would make me fair game?\"\n\n\"Exactly. The god-blooded families are a hidden caste above the rest of the nobility. One that the rest of The Empire must never learn of. You would be too dangerous, knowing what you know.\"\n\nSomething Nene had just gone past caught me. \"Wait, if the Crab and Scorpion have 'hidden daimyos', who do we have?\"\n\nNene looked at me for a long time without speaking. Then she finally said, \"That would be your mother. Your return is going to change everything.\"\n\n\"How?\"\n\n\"There are three types of god-blooded. First the half-bloods, who have human blood in them, which are the common nobles but aware of the rest of us. Second are the cross-bloods, like me and Chiumi, who have the blood of different god-blooded families in us. Third are those like you who are the purebloods. The only purebloods left in the Lion who can have more purebloods are the Akodo line. If you and Shiori don't have children, then true rulership of the Lion will pass to them. Tamiki's cousin, Akodo Yoshiki, is not a kind man. He and his brothers will tear our family to shreds.\"\n\n\"This is a lot to wrap my mind around.\" I stood and reached for Meiyo. I really did need to practice. I slowly unsheathed it. It definitely needed a polish. I stepped around the irori, as I tried to figure out which kata I would start with. I have to make children with my mother whose also my aunt in order to save my family. This just gets better and better.\n\nI really needed a few hours with my no-dachi. An army of bandits swarming the castle walls would've hit the spot right then.\n\n\"Motoki.\"\n\nI looked back over my shoulder at Nene.\n\n\"You must never tell anyone that I'm a cross-blood. As far as anyone knows I'm just a mongrel half-blood. Please. It's really dangerous.\"\n\nThis was her ultimate secret. I lowered my sword and turned fully to Nene. I gave her the deep bow that you give an equal. \"I swear upon my honor and my soul that I will keep your secret until you tell me not to, Nene.\"\n\n***\n\nDinner that night was delicious. It consisted of squid served with a sweet daikon sauce, barbecued vegetables, and of course, rice. I did a lot of talking. Most of the talking. Most of my stories revolved around my six months wandering with Ichibei. His enlightened drunken madness seemed to strike just the right chord with my sisters and nephew. It was good to hear so much laughter around the table.\n\nWhen the hour grew late, Chiumi and Denbe made for their beds. I started to get up to go to my own but Tamiki said, \"No brother, stay. There's something I'd like to talk to you about.\"\n\nShe looked past me to Nene and commanded, \"Get one of the servants to help you haul some extra firewood to Motoki's Dojo. He'll be along soon enough.\"\n\nI felt a twinge of nervousness as my little shadow departed on an unnecessary errand that she couldn't refuse. Out of good faith I had come to the dinner table completely unarmed.\n\nTamiki sat staring at me for a time, her dark Akodo eyes unreadable. Then she smiled. But there was a falseness to it. \"I suppose we know now why you carry a Shiba daisho. You speak of this Ichibei man like he was the only sensei you ever had that actually taught you anything.\"\n\nThere was a cold accusation in her words that I found disheartening. I was now on the defensive. \"I meant no disrespect to the wise instructors at Matsu Dojo if that's the way that my stories made things sound. Obviously, I learned an incredible amount from them. I'll talk to Denbe tomorrow and make certain that he understands how great the Dojo is. I mean, that is if it's okay with you.\"\n\nShe looked away and her face shifted again. \"I'm really not being very welcoming to you am I? I wanted you to understand.. It's..\"\n\nShe went silent for a time. I took the opportunity to call to a waiting servant for sake. The cups and decanter were set before us but Tamiki didn't touch her's. I drank two cups while I waited for her to speak.\n\n\"I'll just say it: For years I've hated you, brother.\"\n\nThis caught me hard. I couldn't help but mutter an incredulous, \"Why?\"\n\n\"How could I not? You humiliated our family on the day that we were gathered to celebrate you! On top of that you went out of your way to make our father look weak! You threw our daimyo's favoritism towards you back in her face! Then you walked away like we all meant nothing to you and couldn't be bothered to even show the tiniest bit of concern for any of us for a decade and a half!\"\n\n\"Tamiki it wasn't like that at all...\" I mumbled meekly.\n\n\"All the sudden you're this big important hero that we're supposed to celebrate even though all you've ever done is rub our faces in the dung beneath your sandals! No, less than that! You didn't even care enough to show us your contempt!\"\n\n\"Listen, it wasn't like that Tamiki..\"\n\n\"Oh? How was it Brother? Poor little Motoki has a hard-on for his stepmother whose too busy getting plundered to heaven by his big bad father so he's got to mope off to the Crab where some slut-\"\n\nI slammed my fist on the table hard enough to break splinters and draw blood. I leaned in so that I was nose-to-nose with my sister. \"You will not speak of Misa like that! OR- Daimyo or not! Sister or not! I don't care! -I will see you on the dueling field! And I will cut you down like I've cut down the worst scum of The Empire! Good Night!\"\n\nI stormed out of the manor.\n\nOnce outside, I screamed my wordless rage to Lord Moon. It had all been an act! My sister had seemed like an arrogant daimyo opening her home to her long lost brother this morning. She had fooled me well. I wouldn't be fooled again. Father's malice had found its home in our generation. I was done with it! I reached into my kimono, pulled out his stupid scroll, and threw it into the night.\n\n***"
    ],
    "authorname": "Paul_Mall",
    "tags": [
        "breeding",
        "comedy",
        "drama",
        "harem",
        "incest",
        "legend of the five rings",
        "samurai",
        "legend of the five rings fanfic",
        "fanfic",
        "fanfiction"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/god-blooded-the-sword-of-fate-00-02"
}