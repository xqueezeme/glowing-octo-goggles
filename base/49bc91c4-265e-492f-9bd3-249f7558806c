{
    "title": "Mistletoe Kringle",
    "pages": [
        "My name is Mistletoe Kringle. I prefer Misty. I'm on Daddy's naughty list. I mean, I have been for some time, but now I'm sort of at the top of it. I don't really understand why. I mean, I'm just continuing the family tradition of giving.\n\nIs it really important that instead of a wooden top, I give head? Or instead of a bicycle for them to ride, I let them ride me? Or that instead of boys and girls, I gift men and no few women?\n\nI admit, giving is it's own reward. Well, usually. Though there was that bald accountant with the hairy chest in Fresno a few years ago.\n\nBut, come on now. He brings happiness. I bring happiness. He gives gifts out of love. I give out of love. He says that sharing is the spirit of Christmas. But he raves at me for doing some of that sharing. Double standard much Daddy?\n\nIt's really unfair. So what if I snuck out and visited a couple of people on the naughty list? I mean, they are still people. Don't they deserve some Christmas cheer too? And besides, gifting the people on the naughty list can be really, really nice. Really, nice.\n\nMmmmm.\n\nSorry, what was I saying again? Oh, yes. \n\nSo, my younger sister Holly and my older brother Yule are like these golden children. They help him make toys, and I don't mean the fun kind either. Nope, no vibrating cock rings or strap on dildoes. Just dull, lifeless bicycles and tops and dolls. Bo-oring.\n\nChristmas began as a celebration of life! A pagan fertility ritual. The way I choose to celebrate it makes so much more sense than scraps of colorful paper wrapped around some box with a surprise inside. Ignore those boxes beneath and step back for just a moment and look at what they are under. Ignore the lights and the decorations. Just look at that proud firm pole, standing straight and tall. Look at the way it's boughs flare away, then taper back to it's rigid loveliness.\n\nGod, I'm getting wet just thinking about it. I mean, have you ever seen anything more phallic in your life?\n\nBut, nooo. \"It's an evergreen, Misty.\" \"It's a symbol of life in the deep of winter, Misty.\" Blah blah blah. It's a dick, Daddy. A loud and proud symbol of a gorgeous penis right in the living rooms of every family and they can't see it because you are some sexually repressed, toy giving, peace on earth, beatnik past his prime. Just because you and Momma haven't had any fun in two-hundred and forty years, doesn't mean that the rest of us have given up on it too.\n\nIcecicles. Candy canes. Wreathes. Oh, my God! How can anyone not see it? Poles and holes everywhere you look!\n\nBut, here I am, alone on New Year's Eve while my perfect brother and sister are off at the company party on a beach in Australia. They are all off having fun and I'm grounded until July. And why?\n\nI snuck the letters out of the trash pile just like I have every year for just over a century. The ones with wishes they are not going to fulfill. I read through them, and most of them were enough to get landed on Daddy's naughty list just by themselves. No matter how \"nice\" they were the rest of the year. \n\nLittle Billy wanted a blow up doll with three holes. Suzy wanted a metal studded leather corset. Well, what's wrong with that? I made some calls and set things rolling for MY bag of presents.\n\nThen there were the more interesting ones. The ones asking, not for something material, but a woman's special touch. Those made me shiver to read, some of them. I was really, really looking forward to this year's \"special deliveries\".\n\nOnce Daddy's sleigh was away and everyone else had gone back inside to wait for his return, I slipped into the stable where Bruno was waiting.\n\n\"Is everything set?\" I asked as my hands unfastened that god awful, heavy red fur coat.\n\n\"Oh, yeah.\" Bruno was rubbing his crotch and eyeing me as I adjusted my green bikini with white fur trim. \"You're all set. Say. How about a little taste before you go?\"\n\n\"There's no time, Bruno.\" I smiled at him as I pulled the matching green felt, fur trimmed hat over my red curls. \"You know I have to hurry if I want to beat him back here. You'll get your present when I get back. Just like always.\"\n\n\"Come on, baby. Just a taste of things to come.\"\n\nHe opened the front of his pants and pulled his cock out. My nipples ached, just looking at it saluting me.\n\n\"Fine,\" I sank to my knees in the straw in front of him. \"Just a taste, and then I have to go.\"\n\nHis delicious cock slid over my lips, filling my mouth. I hummed to myself as my tongue caressed him. I nodded my head forwards and back, feeling that velvet clad iron caressing my lips as it slid past. He grunted and I felt a familiar twitch against my tongue. Salty-sweet fluid coated my tongue and slid down my throat.\n\n\"Oh, God.\" He sighed as I let him pull away.\n\n\"I guess you needed that,\" I smirked at him.\n\n\"I dream of this night all year.\" Bruno moaned. \"You in that little outfit... Can't we do it some other time too?\"\n\n\"But, then it wouldn't be Christmas, silly.\" I winked at him and rose to dust straw from the fur of my knee high, green boots.\n\n\"Bah humbug.\" Bruno groaned.\n\n\"Be nice.\" I said as I slid one leg over my waiting mount. \"You'll have all of the Christmas cheer you can take when we get back.\"\n\nWith a powerful bound, Ralph, Rudolph's less bright brother, bore me away from that frozen, icebound hell to visit MY list of waiting good little men and women. I could feel Ralph's powerful back moving beneath my hands and between my legs as his powerful hooves pounded away at the sky. The play of those powerful muscles between my thighs was intoxicating. As with every year, it filled me with need and I could not wait to get on with the giving.\n\nI gave Joan her first girl on girl experience on my first stop. Tim, on my second got a blowjob and to cum on my tits. A quick wipe with my special towel on the roof of his dorm was all it took to take care of the evidence and leave me as pristine as when I stepped from the hot pools and pulled on my special outfit. I double checked my list as Ralph took to the skies once more.\n\nThe third stop was the first snafu of the night. It happens sometimes. Granted, it's not normally the guy who freaks out because the woman in his life wishes for me so we can give him a special holiday treat. Normally, if anyone is going to back out of a menage, it's the girlfriend but whatever. It does always kind of throw me though when it's the guy who doesn't want to. It makes me even hornier.\n\nI almost broke Little William as a consequence. Scratch that \"Little\". I mean Big Billy. Poor guy just wanted a deep throat and some anal. But, as soon as I saw that monster, I went a little crazy. Hey, I took him in my throat and in my ass like he wanted. I just did a little more besides. Okay, a lot more. But when I left him laying sideways across his broken bed with his head hanging on the floor, he was smiling.\n\nRalph wasn't happy. He pawed the roof and snorted at me as I wiped myself down with my magic cloth before tying my bikini back on.\n\n\"I know, I know.\" I told him. \"I know we're behind schedule. Just fly faster and I'll hurry on the next two. We can make it up.\"\n\nThe next stop was an easy one anyway. All ten of the people at that party wanted to have an orgy. Just none of them were brave enough to get the ball rolling. \n\n\"Get the ball rolling\"? What an absurd turn of phrase. I'd rather get the balls bouncing. \n\nI grabbed Marcia and held some Mistletoe over her head and pulled her in for a deep kiss. I crooked my finger over her shoulder at Janet and when she stepped forward, after a quick peck for her, I gently pressed their heads together. As they moaned into each other's mouths, I stepped away and tugged Mike into the gathering circle. \n\nMighty Mike should have asked for a teensy more endowment in my opinion. But, hey, not every girl is built for the Big Billy's of the world. And I guess it doesn't hurt to have a needle dick if you have an ass like a sewing machine. Marcia didn't seem to mind anyway as he thrust away into her while her head was buried between Janet's legs. \n\nIt took very little more on my part to get the other seven horny people joined in and I was able to slip out into the night.\n\n\"See?\" I asked Ralph. \"I can be quick.\"\n\nHe snorted and shook his rack of antlers at me and tilted his head up to the sky.\n\n\"Don't be like that.\" I sighed as I pulled the special attachment for my suit from my pack and settled it in place. \n\nWearing a dick isn't really one of my favorites. Maybe I need to tweak the magic a little or something, but it just doesn't feel as good to shove it in and out of a honey pot as it does to take one in mine. \n\nI still cum, don't get me wrong. I made it that way on purpose, so that when I cum it sprays jets of white roapy cum all over them and vice versa. And I won't say it doesn't feel good, because it does. But, I've had a lot of time to think about it over the last one hundred and twenty years and I think maybe females just get better orgasms than guys. More intense. But, that's only fair since the guy gets one every single time and sometimes the girl is left hanging. Right?\n\nBut, whatever. It was a relief to unhook that magical cock once again three stops, two very satisfied women and one man later.\n\n\"He could have at least played with my tits.\" I sighed to Ralph as I packed it away for the next several stops after cleaning it. \"Oh, well, the next stop should be fun.\"\n\nThree roommates, two of them brothers, had all wished for a woman. If they would shut off their computers once in awhile and talk to a real girl, at least one of them might have gotten one by now. But, hey, if everyone did that, there would be no wishes for me to fill. And besides, I love nerds. They sit around and daydream about sex all of the time, and since they don't actually get it, they dream up the most delightfully outre things to try.\n\nAnd that was how I got caught. I got carried away.\n\nRoger made too much noise, yelling when I surprised him at his computer. Gabe snuck in, holding a lightsaber, as I was taking Roger into my mouth.\n\n\"Holy shit!\" Gabe said. \"Who's that?\"\n\n\"I d-don't know.\" Roger said. \"Who are you lady? And what do you want?\"\n\n\"I just want to make all of your Christmas wishes come true,\" I said, giving his cock a lick. \"Don't you want me to lick you, suck you, and fuck you?\"\n\n\"Ohmygodohmygodohmygod,\" Roger said and immediatly began to coat the inside of my mouth with his cum. I sucked and swallowed and sucked and swallowed until he softened.\n\nI let go of Roger and turned to look at Gabe. I had learned not to show my disappointment when they popped off like that over the years. Besides, the quicker they came, the quicker I could move on to my next stop. And I still had a lot of stops to make.\n\n\"What about you, Gabe?\" I asked as I crawled towards him. \"Would you like me to lick and suck and fuck you?\"\n\nGabe just nodded and the tip of his lightsaber touched the floor. It was going to be one of those then. I ran my hands up his thighs to the waistband of his pajama bottoms. His eyes were wide as he stared down at me. His cock was still becoming hard as it sprang free. Oh goody, I thought, at least it won't be three licks to the gooey center.\n\nI love the feel of a soft cock growing hard in my mouth. I don't get to experience it very often since most men are rock solid by the time I get their pants off them. I savored the spongy texture as it lengthened and swelled until it wasn't spongy any more. I let him pop from my mouth at full attention.\n\n\"You won't be needing this,\" I smiled as I took the lightsaber from his hand. \"I'm not a Sith. Why don't you sit down in this chair right here?\"\n\nI pressed him into the chair and rose to straddle him. I untied the bottom of my suit and let it fall to the side.\n\n\"Oh,\" I sighed as I took him inside me. \"Merry fucking Christmas, Gabriel. How do you like your present?\"\n\nHe nodded as I began to lift my hips and then press down onto him.\n\n\"Oh my God,\" Roger whispered from behind me. \"That is so hot.\"\n\nI glanced over my shoulder to see him taking matters into his own hand. He was growing erect once more. No man should have to stroke his own cock while I am around. Unless he is into that, of course. So, I crooked my finger at him.\n\nHe rose and stumbled towards me.\n\n\"She looks just like Faye Valentine.\" Roger whispered as my fingers curled around his once again stiff cock.\n\n\"No, she looks like my Blood Elf Hunter.\" Gabe moaned as his hands found my tits.\n\n\"You're both nuts.\" A third voice said. I turned my head from Roger to see Jamaal just outside the doorway stroking his dick with both hands. \"She looks like that chick from 'The Guild'.\"\n\nI waggled my fingers at Jamaal. His proud penis led him to my other hand. Soon, I was grinding away at Gabe with my hips and fisting the cocks of Roger and Jamaal as I turned my head this way and that, alternating between the two.\n\nI heard Gabe grunt and moan and felt that telltale spasm inside me as his hips lifted off the chair. One down, two to go.\n\n\"Which of you studs wants my pussy and which gets my ass?\" I asked as I lifted off of Gabe.\n\nIn three blinks of an eye, I was astride Roger on his bed with Jamaal behind me. I was really grooving on the feel of them inside me, with my eyes closed when I felt the bed move. I opened my eyes to see Gabe stepping over his brothers head and sitting on the headboard. His cock had stopped softening and was poking straight at me.\n\n\"Careful there, Red Rider.\" I laughed. \"You'll put an eye out.\"\n\nNo one laughed. I guess no one is in to the classics anymore. That or they were just too busy at the moment to get the reference.\n\nI took Gabe in my mouth as Roger filled my sodden pussy. Jamaal was sliding in and out of my ass as his hands cupped my tits for Roger to suck on the nipples.\n\nI think I can be forgiven for enjoying myself, for losing myself in the moment. I think it makes perfect sense that when I heard a stamp of hooves on the roof, I just assumed it was Ralph, letting me know we were falling behind again. I think I can be forgiven for reaching out in a lust-filled haze when I felt something soft tickle my arm.\n\nWhen I traced my fingers up to feel a wide leather belt and turned my head from Gabe's pulsating cock to undo it, I saw the bottom of a white fur trimmed red coat.\n\n\"Oh shit,\" I said as my eyes tracked up. \"Um, Merry Christmas, Daddy.\"\n\nYeah. You know the stories about twinkling eyes and rosy cheeks and a belly that shook like jelly when he laughs? Well, it wasn't the Santa from those stories glaring down at me.\n\n\"Mistletoe Kringle,\" His voice was like thunder, \"What in the name of all that is holly jolly are you doing?\"\n\nI realized that Jamaal, Roger, and Gabe weren't moving anymore. I glanced down at Roger and saw that, yes, he had done the old finger aside the nose thing. God, I wish he would show me how to do that. Can you imagine? Freeze them in place like statues and you can hump them all night long and they won't go soft until you are ready to let them cum.\n\n\"I was just helping you deliver presents, Daddy.\" I said. \"I'll be home before you, just like every year.\"\n\n\"Every year? Every year?!\" He rumbled. \"Just how long has this been going on? No, never mind. You will go home now, young lady.\"\n\nHe clapped his hands and I was back in my room at the North Pole. It really, really sucks have a Dad with magick. One moment, being the center of a really good gangbang and, poof, the next being all alone a thousand miles away.\n\n\"I'm two-hundred and eighty years old, Daddy!\" I screamed. \"You can't treat me like this!\"\n\nAs it turns out, though, when your father is Santa and your mother is Mother Nature, they can. God, I can't wait until my three hundredth birthday. Then, I'll be an adult and they can't treat me like this anymore.\n\nThen, all of the naughty boys and girls can write their letter to me, Mistletoe Kringle, and I'll make all of their fantasies of a White Christmas come true."
    ],
    "authorname": "Acktion",
    "tags": [
        "santa",
        "christmas"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/mistletoe-kringle"
}