{
    "title": "Teresa's Christmas Ordeal Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nDedicated to Frederick Forsyth.\n\nPart 6 - Day of the Jackal\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette from in front of the Civic Center at 7:00am, Wednesday, December 28th. \"Registration for Dr. P. Harvey Eckhart's 'Envision Your Life' seminar is well underway! People are already beginning to show up, even though the seminar does not begin until 9:00am. Over 1500 people are expected, and they may allow an overflow to come in!\"\n\n\"Where's Commander Troy?\" asked Captain Cindy Ross as she came into MCD, wearing civilian clothes.\n\n\"Uh...\" Detective Joanne Warner started, then said \"If he's not in his office, maybe he's at the Civic Center?\"\n\n\"He said he was going to stay out of the way of that.\" said Cindy. \"Captain Croyle and Sergeant Irwin have it handled very well.\"\n\n\"Ma'am,\" asked Joanne, \"is Sergeant Irwin going to be promoted to Lieutenant?\"\n\nCindy smiled, then looked around the room at the MCD Detectives. \"Keep this under your hats, people. Irwin is being considered for Lieutenant and would be the 1st Precinct Deputy Leader behind the Precinct Captain. We're also looking at candidates for the 2nd Precinct, and Sergeant Carswell has the lead on that. But nothing is final, so don't say anything.\"\n\nYeah, right. And that is how 'scuttlebutt' gets transmitted through a Police Force. And one Police Commander always strives to stay in tune with the feedback from that scuttlebutt...\n\n* * * * * * * * * * * * * * * *\n\nMy assistant Helena had not yet arrived, so Cindy knocked on the door and opened it. Seeing me sitting alone in my Command Chair, looking out the window, she said \"Can I come in?\"\n\n\"Oh!... Yes, come on in.\" I said, coming out of my thoughts.\n\n\"Wow, you look like you had a bad night.\" Cindy correctly observed. \"One of your kids get sick?\"\n\n\"Something like that.\" I said cryptically. \"So! What's going on?\"\n\nCindy immediately noticed that I was trying to steer the conversation into new channels, but she let it go and said \"I'll be leaving in a few minutes to go down and ride with my father right back here into Town.\"\n\n\"You look nice, today, but what are you doing for armor?\" I asked. Cindy was wearing civilian clothes, a dark blue jacket and skirt, light blue sweater, and sensible dark blue shoes. And I noticed that she was wearing her 'Fourth Rune' around her neck.\n\n\"This jacket has a very thin lining of kevlar, and I'll have a heavier jacket with a lining for the Civic Center hall, which they'll keep at like 58\u00ba Fahrenheit during the seminar. My father has two bodyguards who will have heavy armor on, so I'll let them step between us and any flying bullets.\"\n\n\"Good.\" I said.\n\nCindy got out her bug-killer and turned it on. \"So, you think this JACKAL is after my father?\" My eyes must've registered my shock, as Cindy failed to hide a grin. \"The FBI guys briefed me, too.\"\n\n\"Nice of them to tell me, so we could discuss it.\" I said sarcastically, and with considerable asperity. \"But yes, your father might be a target meriting the talents of an assassin like this guy.\"\n\nCindy asked \"What are you going to be doing for the seminar, if anything?\"\n\n\"I'll be minding the store here at Headquarters for most of the day.\" I said. \"I'll probably drop by the seminar this evening. Your father was kind enough to send me an 'All Access' badge.\"\n\n\"You already have one of those. It says 'Commander' on it.\" Cindy said, referring to my badge. I smiled at the joke.\n\n\"Well, I might show up in civilian clothes, have some armor on, and my armor-lined trenchcoat. I guess I better go home and get my own Fourth Rune before I show up, though.\" I said, making Cindy smile, perhaps remembering that life-changing night at 'The Vision' when we'd received those runes.\n\n\"Okay, you can head on out any time you like.\" I said. \"It's been really quiet the past couple of days... the duty logs are boring as hell.\"\n\n\"Just the way we like them.\" Cindy said. As she turned to go, she said \"By the way, it's leaking out about Sergeants Irwin and Carswell being up for Lieutenant.\"\n\n\"What's the response been like?\"\n\n\"Too early to tell.\" Cindy replied. With that, she left the office.\n\n* * * * * * * * * * * * * * * *\n\nLooking out from the window of Room 201 of the Sunrise Hotel, he examined the cloud cover and the slush of the black streets and now-dirty white snow. Overcast. Good. People will keep their heads down and not look at other people, including me, he thought to himself.\n\n\"Get up, Rusty.\" he said to the other man, who was still asleep. \"It's time. We've got work to do.\" The young man got out of bed and staggered towards the bathroom.\n\nHe checked his equipment. All was good. He took his cellphone out of its protective sleeve, powered it up, and checked his emails. Nothing of significance. Returning the powered-down cellphone to its shielded sleeve, he packed what few things he had into the small suitcase, which sat next to the black plastic box that looked like it was carrying a set of tools. And in a way... it was...\n\n* * * * * * * * * * * * * * * *\n\nAfter breakfast at the University Avenue Diner, he and 'Rusty' drove into Town. There was overflow parking at The Fairgrounds for all the vehicles that needed parking; he parked there and walked with 'Rusty' to the Civic Center. As he passed by the front of Police Headquarters, he peered at it... so that is the home of the Iron Crowbar, he thought to himself...\n\nThe lines at the Civic Center were very long, but he finally made it to the table and gave the false name under which he registered. A pretty young girl wearing a blue 'Vision' collared golf shirt and black pants, smiled brightly as she checked him in. All of the young people were handling the large numbers of people with cheerful smiles, which immediately lightened the mood of many of the visitors, who were at best wary of what this seminar was all about.\n\n* * * * * * * * * * * * * * * *\n\nBack behind the stage, Dr. P. Harvey Eckhart was sitting in his raised chair, which looked like a stool a movie star would sit in. He was talking to Adam, his main assistant at these seminars. Adam was short, with black hair, and in good shape; he'd served Dr. Eckhart loyally for nearly ten years now, since coming to The Vision as a teenager hopelessly addicted to drugs. Now he was clean, and had a bright, hope-filled future ahead of him.\n\n\"Everything is going very well, Father.\" Captain Cindy Ross said. She was standing next to her father, watching everything, her eyes everywhere, just absorbing every bit of this. Then Dennis Cole, his assistant trainer for this seminar, came in.\n\n\"Everything's going well, Harvey.\" said Dennis. \"It's going to be a big one.\"\n\n\"We can only hope.\" said Eckhart, somewhat cryptically. \"Cindy, if you'll excuse me, I have some things to discuss with young Dennis. I'll see you again shortly.\" \n\n\"I'll go check on security.\" Cindy said, then walked away from the area. She found Teresa nearby, peeking into the large main room from behind the velvet curtains that had been set up to frame the stage. On either side of the stage were huge video screens that would show the trainer on the stage, or show video clips when needed.\n\nWith Teresa were Tommy and Candy, the Vision acolytes that had been involved in the 'Murdered Football Player' case. They greeted Cindy enthusiastically, and she greeted them back.\n\nTeresa was wearing all black, Cindy noted, and Teresa had on what looked like a vest over her shirt, but was really an armored vest. Cindy also knew that Teresa had heavier armor around here somewhere, which she could put on quickly at the first sign of trouble.\n\n\"All those people...\" Teresa said. \"They don't look all that happy, do they?\"\n\nTommy smiled and said \"Just wait until the end of the seminar, ma'am. All of those people will be much happier, and crying that the seminar is over.\"\n\n\"It'll be fun to see the energy growing over the three days.\" said Cindy.\n\n\"Oh, that reminds me.\" said Teresa. She went to stand by Cindy and said quietly \"Dr. Fredricson wants me at the Hospital tomorrow morning for an MRI. Her husband has told me he expects me to make the appointment, and to be early for it.\"\n\n\"You should follow her husband's instructions, fer sure.\" Cindy said. \"Don't worry, we've got plenty of security here. You're well covered.\" Cindy did not say it out loud, but she was filled with a sense of foreboding. An MRI? For what?\n\nAnd then she remembered how Don looked earlier in the morning... \n\n* * * * * * * * * * * * * * * *\n\n\"Not a sign of him.\" said Jack Muscone as we met in the Federal Building's FBI offices. \"We've got teams of people in Washington poring over data, seeing if any murders in the last few weeks could've been done by JACKAL. There's just... nothing.\"\n\n\"And there likely won't be.\" I said. \"Until he strikes. Meanwhile, I understand the Japanese Government has the equivalent of an international APB out on him. He tried to kill our friend Takaki Misaki a few years ago, while Misaki was running the Japanese Secret Service. One of JACKAL's few failures, but he got away, to Takaki's great anger... and shame.\"\n\n\"Yes, that's true.\" said Muscone. \"But at least 20 countries want him, including all the big nations in Europe, as well as Russia. We got some word that Sergei Molotov tried to hire JACKAL to kill Mr. Putin, but JACKAL wisely turned that one down.\"\n\n\"And speaking of Sergei Molotov,\" Jack continued, \"the CIA has gotten word that he's been spotted in Eastern Europe. My boss said he's not sure what's going on, but the CIA is acting like a stirred-up hornet's nest over him. Stolen nuclear weapons, perhaps.\" He then observed my face. \"What?\"\n\n\"No, not stolen nukes.\" I said. \"All of that is kubbuke theatre. The CIA has been expecting those developments for some time. And I might add that there are no coincidences in the Universe... it's tied to JACKAL.\"\n\n\"Okay, so what do you know about it?\" asked Jack.\n\n\"Let me answer by asking you a question, Jack... how did you FBI guys learn about JACKAL?\"\n\nJack's eyes widened. \"I... I'm not all that sure. My boss gave me the info, and told me to brief you.\"\n\n\"And he's not here to brief me himself, because he knows damn well I'll ask him the same question I just asked you.\" I replied. \"But that doesn't matter, because... I know I am JACKAL's target, and I know why JACKAL is trying to kill me.\"\n\n\"So tell your buddy who buys you double cheeseburgers.\" quipped Muscone.\n\n\"Let me give you this clue.\" I said. \"Follow the money. As I asked before, who would pay ten million dollars or more to have me killed? Who has the means to spend that kind of money in the first place? And who would be the only entity able to mask that money being moved around?\"\n\nAs it hit him, Jack's face showed that he was beginning to understand...\n\n* * * * * * * * * * * * * * * *\n\nHe sat in the back of the audience, taking in the full scene. The sales tables were at the back of the room. Behind them were steps leading to the audio/visual room, which had a large pane of glass. And on the back wall, near the high ceiling at intervals, were openings where lights or cameras could be placed. One of those perches would be absolutely perfect, he though.\n\nThe seminar had begun with Dennis Cole getting the crowd warmed up. The killer had had to endure standing up and clapping rhythmically with everyone else to the tune of \"Brand New Day\", then a video clip with pulse-pounding music, that featured P. Harvey Eckhart. Then the man himself came onto the stage, spry, full of energy. He hugged Dennis, then began the seminar.\n\nNow he heard Eckhart say \"There are no coincidences in the Universe! You are here for a reason! And you could one day change lives just by having been here!\"\n\nNo doubt about that, he thought wickedly to himself. No doubt about that...\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, Rusty,\" he said during one of the fifteen-minute breaks, \"we need to find out how to enter the rooms up there where those lights are.\"\n\nRusty pulled out a few sheets of paper from inside his sportscoat. They were floor plan drawings of the Civic Center. \"We have to get to the third floor. There's not much up there, but several doors lead into those closet-like rooms.\"\n\n\"Let's see how we can get up there.\" He went up the stairs, then found some stairs to the third floor, but at the top of the stairs were a couple of TCPD Officers, Patrolmen Hicks and Johnson.\n\n\"I'm sorry, sir, but you cannot come up to this floor.\" said Patrolman Hicks.\n\n\"Ah, I was just looking for a less crowded restroom.\" he said.\n\n\"I don't think there are any restrooms up here, sir.\" said Johnson. The man nodded in acknowledgement and went back downstairs. As the seminar started up again, he and 'Rusty' pored over the schematics...\n\nPart 7- Puzzle Pieces\n\nIt was about 2:00pm and I was in my office at a quieter-than-usual Police Headquarters when Helena buzzed me and said the Mouseketeers wanted to talk to me. I told her to let them in, and Mary Mahoney Milton came in, her hair bright pink, followed by her husband Myron Milton. Detective David Krueger, 'The Guru', brought up the rear.\n\nAs they were seated, Mary said \"Oh, you have personal whiteboards.\" Indeed, on the wall on the right, to my desk's left, there was hanging what looked like two wooden panel doors. When unlocked and opened, they revealed the whiteboards inside. I was using them for the first time since attempting to solve Henry Wargrave and The Four.\n\nI closed the whiteboards and said \"Yes, despite rumors to the contrary, I actually use them from time to time. So, whaddya got?\"\n\nKrueger started. \"We've got a lot more information on this group 'Citizens For Police Accountability', as well as Jay Swenson and Ken Eidex. They're being funded and supported by George Schwartz.\"\n\n\"I think we knew that already, didn't we?\"\n\n\"Yes sir,\" said Krueger, \"but the new information is that Schwartz is funding a lot of so-called 'student groups' like these all over the country. And right now he is pouring money into CFPA and into the pockets of Swenson and Eidex, and they're distributing it to others, as well. Those are cash transactions, so we're having trouble with the money trail, but if we can get some more names for these groups, we can see if they suddenly have bigger bank accounts.\"\n\n\"Hmmm,\" I said, \"distributing money. They're paying people to recruit others, so that when the right time comes, a 'spontaneous' riot can break out. And of course they'll make sure Media cameras are well placed to cover the 'spontaneous' event before it starts.\"\n\nMary was giggling. \"You're right, sir. That is how they do.\"\n\n\"I'll go you one further.\" I said. \"Those who were here at the time should thank God that the PCGW did not have this kind of funding when they came up against Crown Chemicals. They'd have gotten a lot more people protesting, not knowing what they were protesting, and a lot more people would've died without knowing what they were dying for.\"\n\n\"Sir,\" asked David Krueger, \"if you'd been here then, what would you have done?\"\n\n\"I don't know.\" I said. \"I do know that I would've been totally on Crown Chemical's side, and would've said they did the right thing in the aftermath of it all.\"\n\n\"If that happened today, sir,\" asked David, \"do you think Crown would have gotten away with what they did?\"\n\n\"Again, I don't know.\" I said, noting the form of Krueger's question. \"The Media is even more rabid now than they were then. And who knows what the US DOJ would do today.\"\n\n\"We may find out, sir.\" said Myron. \"If Schwartz is funding these people to riot, and knowing you don't play around sir...\"\n\n\"If you're here to do anything about it.\" said Krueger. I peered at his very out-of-the-blue comment.\n\n\"Sir,\" Mary said in explanation, \"we know about JACKAL... and about Sergei Molotov.\"\n\nMy eyes widened in shock. I put my finger over my mouth in a 'hush' sign, then got out my bug-killer and activated it. \"How in the hell do you know about all that?\" I asked. My voice was not friendly in asking the question.\n\n\"Agent Muscone of the FBI asked us to help look into JACKAL.\" said Myron. \"David agreed to help. Of course I refused. As to Sergei Molotov... my father has kept an eye on him, and has asked me to do the same, since the day you beat him down with your crowbar and earned your nickname, sir.\"\n\n\"Did you give the FBI information on JACKAL?\" I asked.\n\n\"No sir.\" said Krueger. \"There's nothing to give them. We didn't come up with anything, at least not yet.\"\n\n\"What about Molotov?\" I asked. \"That is far more important to me than JACKAL.\"\n\nMyron nodded. \"Yes sir. This is from my father.\" He took a jump drive out of his pocket and handed it to me.\n\nPart 8 - The Attempt\n\nAfter the dinnertime break, the seminar reconvened for the final lessons and processes. The energy in the room was already considerably stronger than when the seminar began that morning.\n\nDuring the dinner break, a youngish-looking Uniformed Officer came in with one of the seminar attendees. Officer 'Rusty' was carrying what looked like a plastic black toolbox case. He and the attendee went around the far side of the building, towards what were conference rooms and offices. The Uniformed Officers on duty saw the pair, but seeing that one of them was a Police Officer, did not stop them.\n\nThey got to a service elevator in the back area of the building and rode up to the third floor. Getting off, they walked down the long hallway towards the stairs one of them had tried to ascend earlier. The Officers that had been guarding those stairs were now on the second floor at the base of the staircase; they were watching the second floor, as it was now being made off limits to the seminar attendees.\n\nMoving quickly, the man took the tool case from the Officer, who went back to the service elevator and would later appear to be manning a station with other Officers. A master key expertly applied to the door allowed the man entrance to the small closet of a room. A large light was sitting at the opening at the other end. The man looked out, and was happy to have an overwatch of the auditorium.\n\nHe took his tool case and opened it, and began assembling the high-powered rifle that was inside. Once it was put together, he put a small cartridge-looking device into the breach, which fired a laser beam through the barrel. He checked to make sure his scope was properly aligned with the barrel. In the movies, those assembled rifles really aren't worth shit because the alignment gets out, he thought to himself. In reality, we make sure not to make those stupid movie mistakes.\n\nHe was ready. He heard the music turn up and play loudly, which was the signal for calling everyone back in.\n\n* * * * * * * * * * * * * * * *\n\nI was wearing a black pullover sweater and black pants... 'ninja suit', Cindy would say. My badge was affixed to my belt, and my gun was in its shoulder harness, hidden by my trenchcoat. I had on the 'girdle', more light armor under my ninja shirt, and yet more sewn into the trenchcoat. My 'Fourth Rune' was around my neck and highlighted against the black of my shirt.\n\nI chose to enter by the service entrance near the back garage, where my Police SUV was parked. Corporal Ronnie Kirkpatrick and Sergeant Rudistan were guarding this back entrance, and I chatted with them for a moment as I went by. As Dennis Cole's voice boomed out, warming up the crowd for the final phase of Day 1 of the seminar, I made my way to a door in the hallway that said \"A/V\". It was the back entrance to the audio-visual room behind the back tables.",
        "There were two men inside. One was young, dressed in the red shirt and black pants of 'The Vision'. The other was a taller, older man, graying hair, and spectacles. He was wearing all black like me, but was wearing tennis shoes and a light jacket.\n\nI showed them my badge as I came in, though the Vision acolyte knew me. I whispered that I was just checking on things and would watch from here without disturbing them. They nodded.\n\nMy clear earpiece was plugged into my Police radio, and I heard occasional chatter. Everything seemed to be secure and moving along. Everything was going according to plan...\n\n* * * * * * * * * * * * * * * *\n\nThe last part of the evening was the \"one-hundred-dollar-bill exercise\". Every attendee had been told to bring in a $100 bill, and now they were being told they were going to burn them.\n\nAs they stood and formed a snake line amongst the rows of chairs, they chanted \"I rule money. Money does not rule me. I rule money. Money does not rule me.\" Vision acolytes were at the stage; left, right, and center. One acolyte held a lighted candle, while another stood by with a cigarette lighter in case the candle went out. In front of each couple was a trash can with water in it for the attendees to throw their $100 bills into after they were lit and consumed by fire.\n\nTommy and Candy were the acolytes at the right side of the room. Candy was holding her candle and Tommy standing next to her, both looking like the happy Vision acolytes that they were. Teresa was behind the curtain at a point where it parted, peering through the thin slit at the audience...\n\nCindy was nervous. Dr. Eckhart was going around, positioning the acolytes, and very unprotected at the moment. He'd been pretty unprotected all day on the stage, though Dennis Cole had led some of the training. She was watching everywhere, looking up at the ports near the ceiling where lights and cameras were. She didn't see anything...\n\n* * * * * * * * * * * * * * * *\n\nHe got ready. Making sure he did not appear in front of the large light, and therefore be visible to those on stage, he aimed his rifle. A laser sight on the scope would be turned on at the last second. He targeted his prey in the crosshairs of the scope.\n\n* * * * * * * * * * * * * * * *\n\nThe Vision acolyte had said he needed to go help with the hundred-dollar-bill exercise, leaving me with the older man.\n\n\"You're not with the Vision?\" I whispered quietly.\n\n\"Oh no.\" the man said. \"Our A/V company is contracted by The Vision. Our other guy is off for the night; I'm doing this last segment.\"\n\n\"How long have you been working with the company?\" I asked.\n\n\"A couple of months with this company.\" he said. I just nodded and looked out the pane of glass at what was going on in the room.\n\n* * * * * * * * * * * * * * * *\n\n\"I rule money. Money does not rule me. I rule money. Money does not rule me...\" \n\nAs the inexorable chant went on, Dr. Eckhart came over to Tommy and Candy. He looked up and adjusted the water-filled trash can, looking up at the ceiling as if to check on the sprinklers overhead.\n\nWatching from behind the curtain, Teresa Croyle saw the merest flash of movement in the porthole window to her upper left, actually the right side of the back wall. As Eckhart moved away from Tommy and Candy, Teresa saw the red dot of a laser. It all went through her mind before she even realized it, and she was already in motion.\n\n\"GUN!\" she screamed as she flew out from behind the curtain, rushing up towards Tommy and Candy.\n\n*POW!*\n\n* * * * * * * * * * * * * * * *\n\n\"Officer down! Officer down!\" came the call on the radio. \"All units, secure the building! Search the third floor! Medics to the stage! Medics to the stage!\" The voice was of Captain Cindy Ross.\n\nShe had barely heard the sound, but she saw Teresa flying and tackling Tommy and Candy. She also gasped in horror as she saw something else; flashes of red on Teresa's hip... first of a laser beam, then of blood!\n\nAcolytes and security had already tackled Eckhart to protect him. As people in the audience screamed upon recognizing what was happening, the group of people moved like a ball of ants, protecting Eckhart as they took him behind the curtains and backstage.\n\n\"I'm hit!\" gasped Teresa, who was lying on her belly on the floor. Seeing that her father was safe, Cindy ran to help her fellow Officer. Tommy and Candy were evacuated by Security and fellow acolytes.\n\nThe bullet had struck Teresa in her side, in her hip just forward of her ass. Officers rushed to her aid as Cindy got on the radio and made the call.\n\nA couple of Medics from the University's ambulance service had rushed up, as had Fire Marshal Zoe Singer. After the first triage examination, Teresa was quickly lifted onto a gurney and transported out of the room.\n\n* * * * * * * * * * * * * * * *\n\nPatrolmen Hicks and Johnson rushed up to the third floor upon the first alarm. Using their training, they carefully opened the door to the little closet.\n\n*BANG!*\n\nThey had not put themselves in the door, so the bullet passed harmlessly through the air. Then Johnson, using the wall as shielding, pointed his gun inside. \"Drop it!\" he shouted.\n\nNot having time to chamber another round, it was over for the shooter. He was swiftly captured, handcuffed, and made to move out of the room and down the hallway. Other Officers quickly surrounded him, and he would soon find himself in a TCPD Cruiser and on the way to Police Headquarters...\n\n* * * * * * * * * * * * * * * *\n\nMany people had chosen to flee in panic. I had told Teresa long before, and she had relayed it to the Officers, that if something like this happened... to just open the doors and let them run, and not to create a choke point where people could be trampled. The Officers also had to watch for someone in that crowd that might be suspicious. I don't ask much of my Officers...\n\nAs the Police were securing the doors after the first wave of people had passed, and beginning to control the crowds that remained, Corporal Kirkpatrick and Sr. Patrolman Morton approached a youngish Officer.\n\n\"Let me see your ID, Patrolman!\" said Kirkpatrick. The young man bolted, trying to run, but was quickly subdued before he could draw his gun. He was handcuffed, and provided transportation to Town & County Police Headquarters.\n\nPart 9 - A Shocking Revelation\n\n\"Fingerprints have no match in either the local or FBI databases.\" I was informed as I looked into Interrogation-1 from the crowded anteroom. \"No ID on him, either. We're running a facial recognition pattern.\" It was David Krueger telling me that.\n\n\"Good.\" I said. \"Let me know of any results. I've called the FBI, and they should be here soon.\"\n\nThe man did not look very good; it is possible that he endured a few punches to the face and body as he was taken to the Police cruiser, then through booking. The TCPD was not taking well to one of their Captains being wounded by him.\n\n\"How's Captain Croyle, sir?\" asked Sergeant Charles of the SWAT Team. The room got very quiet.\n\n\"I haven't had a chance to check.\" I said. \"Last I heard, her wounds were considered non-life-threatening, but she's been taken into surgery.\" The room remained very quiet.\n\n\"Okay, clear this frickin' room.\" I ordered. \"No one but any lawyer he asks for is to go in there. Do I make myself clear?\"\n\n\"YES SIR!\" came a chorus that extended into the hallway. I whispered to Sergeant Charles to make sure no one went in and tried to harm the man, who was handcuffed to the ring on the table. Then I went to the I-2 anteroom window.\n\nThe fake Officer was sitting in Interrogation-2, likewise handcuffed to the table. I peered inside.\n\n\"Fingerprints on him did come up.\" said Krueger. \"His name is Ronald Rand, goes by 'Ronnie'. American, originally from the Boston area. Last known address is Nashville, Tennessee. You remember Ben Ellman, from the 'Point Hollow' case with those kidnapped students?\"\n\n\"Yes.\" I said.\n\n\"We think Ellman may have stayed at Rand's home.\" said Krueger. \"That would make Rand a possible Superior Bloodlines member.\"\n\n\"See if you can get something legally defensible on that connection.\" I said. \"And that's good work, Krueger. Very good work.\"\n\n* * * * * * * * * * * * * * * *\n\nCindy practically flew into the office behind me as I stepped inside it. \"THERE you are!\" she all but shouted. \"Where were you? We called on the radio.\"\n\n\"I heard you.\" I replied. \"I had to take care of a couple of things, not the least of which was to call my wife and tell her to go to the Hospital. She might have to be part of the surgical team.\"\n\n\"Why?... oh, Teresa was shot in the area of her... reproductive system.\" Cindy said.\n\n\"That's some of it.\" I said. \"How's your father?\"\n\n\"He's fine. Completely unhurt, worried about Teresa. He wants to go to the Hospital, but his people are insisting he go home to The Vision.\"\n\n\"Contact them and tell them he can safely go to the Hospital.\" I said. \"Where are Tommy and Candy?\"\n\n\"They're also being protected.\" said Cindy. \"They were the true targets, weren't they?\"\n\n\"Yes, they sure were.\" I said. \"The shooter was aiming to kill them, not Dr. Eckhart.\"\n\n\"But...\" Cindy said, \"... ten million dollars to kill them?\"\n\n\"I'll explain it all after the FBI people get here, and I wish they'd hurry their asses up!\" I said, exasperation in my voice. \"I want to get to the Hospital, and I'm sure you do, too.\"\n\n\"Calm yourself, young man.\" said the Deputy Director of the FBI as he came into my office. \"I know you're worried about Captain Croyle, and I got here as fast as I could. And of course, I'm here to take JACKAL off your hands before too much information about him leaks out.\"\n\nJack Muscone had followed his boss into my office. I noticed none of his team had come; they must be getting kept out of the loop, I realized.\n\n\"I have news for you, sir.\" I said. \"That man is not JACKAL!\"\n\n\"What?!\" gasped the DepDirector. \"Who... then who the hell is he?\"\n\n\"Hired gun, but not JACKAL himself.\" I said. \"Here, have a seat, all of you.\" The FBI Agents sat down in the hot chairs, looking totally stunned. Cindy sat on the sofa behind them, looking totally inquisitive. I sat down in my comfortable Command Chair, looking totally worried about Captain Croyle.\n\n\"What happened, sir,\" I said, \"is that this man and his assistant Rand were hired as part of an overall plan. You may or may not remember the case of the Murdered Football Player, where Jefferson Davis Jackson was killed.\"\n\n\"I remember something about that.\" said the DepDirector. \"You basically showed those kids had been hypnotized, and made it impossible for a jury to convict them.\"\n\n\"Yes.\" I said. \"Well, Jackson's parents, Doug and Roberta Jackson, are from Springer, which I'm sure you remember is near Apple Grove and Providence Springs. They are also very much a part of white supremacy actions, and I believe we might can get Rand to admit to their involvement in order to save his own skin. The other man, who is known in the Underworld as 'Raoul', was hired to kill them.\"\n\n\"Don,\" said Jack Muscone, \"you told me that JACKAL was after you. So are you still in danger?\"\n\nI grinned. \"No.\" I said. \"Mr. JACKAL has met his match in Team Troy. I took him into custody tonight, and took the liberty of handing him over to some people that wanted to... talk to him. You might remember that JACKAL tried to assassinate Takaki Misaki, and while he failed, Misaki-sama missed capturing JACKAL. Misaki-sama felt great shame at that failure.\"\n\n\"Yes, but that wasn't a big deal, nobody could capture JACKAL.\" said the DepDirector.\n\n\"You're such a 'nobody', Commander.\" Cindy quipped. I smiled back at her.\n\n\"All I will say for the moment,\" I said, \"is that Misaki-sama's shame has ended tonight. And hopefully he will be able to obtain some very important information for me. If they leave him alive, I'll have them turn JACKAL over to the FBI, but I can't make any promises, and I will say nothing further about any of it.\"\n\nPart 10 - Day of the Iron Crowbar\n\nWhat had happened? When the shot was fired, one would expect Your Iron Crowbar to look out the pane of glass or go for the door to see what was happening. But Your Iron Crowbar knew the door was locked. And as the shot was fired and the screaming in the auditorium started, I saw the A/V man pull out a large knife, meant for my insides.\n\nYes, the A/V man was JACKAL. But I had anticipated him, and I beat him to the punch. I pressed my TASER into his chest, and 50,000 volts coursed through him, rendering him helpless. I quickly affixed handcuffs to him behind his back, put tape over his mouth, bagged the knife as evidence, then opened the back door of the A/V room. Corporal Kirkpatrick and Sergeant Rudistan were waiting. Yes, the 'Blood Order' was at work this night.\n\nThey helped me get JACKAL through the crowds and around the side to the back exit, whereupon JACKAL was thrown into the back of my Police SUV. Kirkpatrick went to arrest Rand, whom I'd spotted, and Rudistan and I drove to the Fairgrounds. There was some space at the far end on the north side, near Town Fitness Centers, for a helicopter to park. It revved up as we drove up.\n\nTakaki Misaki and I bowed to each other, and I formally offered him a gift: the man known as JACKAL. In return, he promised me information, and also help for when I would desperately need it in the future. And that desperate time was coming all too soon...\n\n* * * * * * * * * * * * * * * *\n\nBack to the present: I told my Officers to put the two prisoners in isolation cells, with three layers of security protecting them. That was code for an arrangement of Officers, requiring three checkpoints to get through. The prisoners would be arraigned in the morning. The FBI was not happy about that, but stopped protesting when I said I had to go to the Hospital and check on my wounded Captain of Operations.\n\nCindy was practically hopping up and down in impatience, so we got into my Police SUV, with Jack Muscone and the DepDirector in the backseat. We let the DepDirector off at the Federal Building, then headed to the Hospital.\n\nIn the waiting room was Sergeant Irwin, Sergeant Charles, Sergeant Hewitt, my mother Phyllis, Todd Burke... and Chief Griswold. Of course he was there.\n\n\"Cindy's mom is keeping the kids at the Cabin.\" my mother said quietly. \"Laura went into surgery with Dr. Morgan. I don't know why she was needed.\"\n\n\"I do.\" I said forlornly. Cindy picked up on it.\n\n\"Spill it, Crowbar 1.\" she said.\n\n\"Not just yet.\" I said. \"In due time.\" As I spoke, I happened to look down the hallway. There was a bench near the Nurse's Station, and upon that bench sat two men: P. Harvey Eckhart, and Dr. Leonard Cordell (Admiral, USN-Ret.) . I had Cindy come with me to greet them.\n\n\"Ah, young Donald.\" said Eckhart. He got up and gave me a warm hug. \"I understand those despicable men were captured, and that you were instrumental in capturing them.\"\n\n\"My Officers did excellent work. Teresa did more than that.\" I said. \"Hello, Admiral.\" I said to Dr. Cordell.\n\n\"Hello, Commander.\" said Cordell, shaking my hand. \"How is she?\"\n\n\"I don't know.\" I said. \"I'll go find out.\"\n\n\"I'll stay here with my friend Leonard.\" said Eckhart, who could make a friend out of anyone in five minutes... except my mother. It was easy to understand why he was not in the waiting room. Cindy stayed with her father as I went to get a status report on Teresa.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay,\" said Dr. Morgan, \"no further bleeding. The bullet slid off the hip bone and right into her uterus. Dr. Fredricson, how significant is the damage?\"\n\n\"Fairly bad.\" said Dr. Fredricson. \"But we're going to go ahead and remove her womb, and her ovaries as well. We'll need to do biopsies on the ovaries.\" She explained by telling of her earlier tests on Teresa.\n\nLaura went to work, with Dr. Morgan assisting closely. Laura had performed these surgeries often... but never on a patient who had been shot in the reproductive organs. That kind of trauma was Dr. Morgan's specialty. It would take both of them to make sure Teresa came out of this alive and well...\n\n* * * * * * * * * * * * * * * *\n\nThe one thing one does not want to see is a doctor coming out of surgery walking slowly, or not walking at all. So when the surgical team came out and Dr. Morgan was walking fairly briskly, I felt somewhat better. Then Laura came out... walking slowly.\n\n\"She's going to be fine, everyone.\" said Dr. Morgan in the waiting room. \"Fortunately none of her pelvic bones were broken, and we think we've got all the bleeding. We'll continue to monitor her, of course, and it will be some days before she can move about.\" There was great relief in the room, especially upon the face of Todd Burke.\n\nMeanwhile I went up to Laura, who was still down the hallway. She said \"I took out her womb and ovaries. Her womb was all but shredded by the bullet, and it's likely she never would've been able to have a child. And her ovaries...\" Laura paused, then rushed into it: \"They'll run tests, but I could tell on sight that we got them out just in time. The bullet's damage sent tissue all over the place, which doesn't help our cause, but------\" She stopped as Cindy came up behind me.\n\n\"Come on, guys, what the hell is going on?\" Cindy asked. I nodded to Laura and whispered \"I've got this.\"\n\nTurning, I said \"Walk with me, Cindy.\" I put my arm around Cindy's shoulders and led her down the hall. Finding an empty room, we went in.\n\n\"Before all this happened,\" I said, \"Teresa came in for her exam to see about becoming a mother. Yesterday the tests came back. Teresa had ovarian cancer...\"\n\n\"What?!\" Cindy said. Her hands went to her face as tears sprang into her eyes.\n\n\"That's why Laura was in the surgery tonight.\" I continued. \"Teresa probably would've lost her womb anyway, but Laura took out her ovaries, too. From what little I know about doctoring, Teresa will probably have to have at least one round of chemo to make sure the cancer doesn't spread...\"\n\nThat was all that needed to be said. Cindy collapsed into me, sobbing. I held her for as long as it took for her to let it all out. And that took some time...\n\nPart 11 - Purple and Playoffs\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redhead MILF from in front of the Civic Center at 7:00am, Thursday, December 29th. \"We are bringing you continuing coverage of the attempt to assassinate Dr. P. Harvey Eckhart during his seminar last night!\"\n\n\"Police Captain Teresa Croyle was wounded as she rushed to defend Dr. Eckhart.\" continued Bettina. \"She is out of surgery and doctors say she is doing well. Her fianc\u00e9 Todd Burke is with her now.\"\n\n\"The Police captured the gunman, and also another man who was acting as a lookout. Commander Donald Troy complimented his Officers, saying their quick actions led to the swift arrests before the perps could get away. He also said that Captain Croyle's bravery prevented anyone else from being wounded or worse.\"\n\n\"Dr. Eckhart also put out a statement expressing his appreciation for the TCPD's actions, and his wishes for Captain Croyle's speedy recovery.\" said Bettina. \"He also said that the seminar would be postponed, but he promised to schedule another one within the next couple of months.\"\n\n* * * * * * * * * * * * * * * *\n\nThe helicopter landed at 10:00am at the now-empty Fairgrounds, and Cindy and I climbed aboard. We did not want to leave Teresa, but Dr. Morgan said he was going to keep her sedated for the day to let her get some rest.\n\nWe were flown by chopper to the City, by the same route that we took the night we went after Henry R. Wargrave. In the front seats were the pilot and FBI Special Agent Martin Nash, who had us tell him how Teresa was doing.",
        "We flew straight north over the City towards City International Airport. The runways were east-west, so by coming north-south over the middle, we didn't cross any plane paths in the air. But we also didn't reach the runways; we landed to the west of the main terminal buildings, and got into a black car that had US Government tags. We were driven to a small building set apart from most of the other airport buildings. The building looked like a maintenance shed. It was ringed with heavily armed FBI Agents.\n\nGoing inside, we found that this small building had comfortable offices. We were led back along a hallway to the conference room, which took up a third of the building. Inside the room were the Deputy Director of the FBI... and Takaki Misaki.\n\nMisaki-sama and I exchanged bows and formal greetings, then I presented Cindy, who bowed to him and had her bow returned. The formalities done with no loss of honor, we sat down around the conference table. I need not mention that paperwork had to be done.\n\n\"First of all, Donald-san,\" said Misaki, \"I wish to present you with a gift in exchange for your help in restoring my honor in the capture of JACKAL.\" With that, his daughter Mariko, who was Todd's assistant at BOW Enterprises, bowed as she placed a small box in front of me. I opened it to find a simple white porcelain tea cup wrapped in sheaths of silk.\n\n\"This is the cup you used at our tea ceremony after your helicopter crash.\" said Misaki. \"It is a small gift, but I am sure you will treasure the memories of defeating the Consultant of Crime when you hold it and use it.\"\n\n\"I... I am greatly honored, Misaki-sama.\" I said. \"Arigato!\"\n\n\"We can't allow Mr. Takaki to remain here for too long.\" said the DepDirector. \"So please excuse my bad manners in coming to the point.\"\n\n\"I understand.\" said Misaki. \"Mr. JACKAL is still alive, and we will be returning him to the FBI's custody. Unfortunately, his lower spine was severely damaged, and he will not be walking to kill anyone ever again.\" Cindy winced at that news. My face remained passive. We then listened to Misaki's report.\n\n* * * * * * * * * * * * * * * *\n\n\"So,\" said Cindy when we got back home, \"JACKAL was after you, and these other two guys were hired by him to kill Tommy and Candy for the white supremacists. As a diversion?\"\n\nWe were in my office. Needless to say the bug-killer was full on, as I.A. was indeed trying to listen in.\n\n\"Well, more like killing two birds with one stone.\" I said. \"Doug and Roberta Jackson wanted vengeance for the death of their son, and Michael Burke wanted Eckhart and me dead, as well, after the 'Ivy' incident. This guy Rand was the go-between, and he brought in another assassin, who is not nearly as good as JACKAL, to take out Eckhart. But then Doug and Roberta insisted that Tommy and Candy be the ones killed, so they ended up being the targets.\"\n\n\"Did you know JACKAL was in the A/V room when you went in there?\"\n\n\"You bet I did.\" I said. \"And I had that TASER ready for him. What he did not know was that the prey had become the predator, that the hunted had become the hunter.\"\n\nI continued: \"For a long time, I could not understand why he'd come over here from France several months ago. Then I realized that he could never infiltrate The Vision directly: Dr. Eckhart knew who he was, and what with all the probes of the compound, your father was taking precautions anyway. So how to get in? The seminars. The Vision hired people to set up the lighting and audio-visual equipment.\"\n\n\"And that is where he made his mistake.\" I said. \"He had to have an ID to be hired, and he used a U.S. passport... not the one he used to get into the country, but one of the others. A routine check had been done by the A/V company, and it showed up when I searched for it. Much easier to find things when you know where to look. The FBI missed it because they were looking for the passport number solely as means of entry or exit into the country.\"\n\n\"Good grief.\" said Cindy. \"So... I guess the original question remains: why spend ten million dollars to hire a man to kill you. Heck, for that amount of money, they could've hired me...\"\n\nI chuckled and said \"Naah, you can't hit the side of a barn with a rifle.\" That got me a dark look and a green crowbar waved in my general direction, then I said \"But seriously, the only thing to do is to follow the money. Now who has ten million to burn, but wants to make absolutely sure the job gets done and Your Iron Crowbar gets waxed?\"\n\n\"Superior Bloodlines?\" asked Cindy.\n\n\"Ye-es...\" I said, \"but... who else?\"\n\n\"Oh... the Government.\" Cindy replied.\n\n\"Yes.\" I said. \"We just had an example of two separate entities at work with that frickin' drone package from the SPS trucks. And now we have someone trying to kill me. For what purpose?\"\n\n\"I have no idea.\" said Cindy.\n\n\"They're about to do something.\" I said. \"And they have to make sure, damn sure, that I am not around to stop them. Unfortunately for them... they failed. And I am going to make damn sure they fail again. We'll say no more of that right now. One thing I do need to tell you is that Laura and I did not get the chance to tell Teresa about her cancer, so don't blurt out anything when we go see her tomorrow.\"\n\n* * * * * * * * * * * * * * * *\n\nFriday, December 30th. Laura and I entered Teresa's hospital room to find several Officers already there. Cindy, Micah Rudistan, Joanne Warner and her husband Seth, Todd Burke, who was sitting in a chair on the other side of Teresa' bed, Patrolmen Hicks and Morton, and Sergeants Charles and Hewitt of the SWAT Team.\n\nThe room became quiet as I grabbed a small chair and sat it down in 'Michael Corleone' style at the side of the bed near Teresa's head. She was lying on her belly; they were turning her over from time to time, but she couldn't do it herself.\n\n\"Another Purple Order, Ms. Croyle.\" I said in the tense silence of the room. \"We're running out of them, you know.\"\n\n\"Sorry, sir.\" Teresa said. \"I guess it's back to Desk Duty forever.\" At that point I did my very best Jim Mora 'playoffs!' impression:\n\n\"Desk duty!\" I cried out. \"Desk duty? You want to talk about desk duty?! How can I put you behind a desk?! You can't even sit down! You just got your ass shot off, fer cryin' out loud!\"\n\nAt that, the room erupted into laughter, which became applause, the tension breaking into relief. I grinned and then began laughing, and even Teresa smiled.\n\n\"No, I've given up on desk duty for you, Captain.\" I said. \"You did a spectacular job. You saved Tommy and Candy's lives, maybe Dr. Eckhart's, too.\"\n\n\"Yes she did.\" chimed in Rudistan, and everyone in the room applauded again, this time more seriously.\n\n\"Okay, guys.\" I said. \"I'm sorry to break this party up, but Captain Croyle's doctors need to talk to her.\" People started leaving the room.\n\n\"Todd, Cindy,\" said Laura, \"you can stay.\" They did so. Then Laura took my chair next to Teresa.\n\n\"Teresa,\" Laura said, \"you are a brave woman, and I'm as proud as your fellow Officers are of you and what you did. And... there may have been a silver lining to all this. We would've had to operate on you anyway.\"\n\nWith that, Laura told Teresa that the biopsies had confirmed the beginnings of cancer in Teresa's ovaries. She told Teresa that while it didn't look like the cancer had spread, Teresa would need to undergo at least one round of chemo to make sure. Teresa nodded, absorbing the information in silence, with that inscrutable look on her face that I had not yet been able to truly understand.\n\nA long moment later, she surprised us all by saying \"Can I have a moment alone with the Commander?\" Everyone else left, with Cindy and Todd kissing Teresa on the cheek, then Cindy escorted a visibly shaken Todd out of the room. After they were gone, I resumed my station in the small chair.\n\n\"I'm sorry, Commander.\" she said, trying to hold back tears. \"I wanted to get the job done on the Precincts, and-------\"\n\n\"Hey, you've already got that done.\" I said. \"You know we'll handle it as the Team we are. And the same with you... we've got your back while you're kicking the ass of what's left of any cancer inside you.\"\n\nTeresa said \"I... I guess it wasn't meant to be... I never wanted to have a child after... after what my father said to me in that hospital... and then when I decided to have a baby... it doesn't matter now, I guess.\"\n\n\"Sometimes the Universe changes our suppositions.\" I said. \"And remember: because you went in and had the test, Laura caught the cancer very early. So maybe that was the Universe's intention for you. I'm sorry you have to bear the pain of it. We all get kicked like this from time to time.\"\n\n\"I know.\" Teresa said. Then she looked me in the eyes. \"Don... I've always known I could die out there, and I always knew I was free to face it, and to fight it... but how do I fight my own body trying to kill me?\"\n\n\"That's what the doctors are for.\" I said. Teresa nodded, then went into silent contemplation. I waited for her, watching...\n\n\"Don...\" Teresa finally said, looking at me, allowing her emotions to break through, \"... I'm scared.\" My heart went out to her. I reached over and put my hand on her back, to reassure her.\n\n\"It's all right.\" I said. \"It's all right to be scared. But you're not fighting this alone. You know that.\" She nodded, and tried to mask her fear. Nevertheless, I stayed with her for several long minutes. \n\nIt was my giri to be there for her as the enormity of the ordeal she would be enduring overwhelmed her. I could say it is what I agreed to when I accepted the assignment of Command over her and her fellow Police Officers. But it was more: it is what I agreed to when I accepted the assignment of being Teresa's friend, especially when the chips were down.\n\nFinis. "
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar",
        "christmas"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/teresas-christmas-ordeal-ch-02"
}