{
    "title": "Lost Empire Ch. 38",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner\n\n0097 - Ace\n\n0101 - Shelby (mother ship)\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco\n\n0778 - Jan\n\n0798 - Celeste\n\n0908 - Tara\n\n0999 - Zan\n\n1000 - Sherry\n\n__________________________\n\nLucy - 0098\n\nDerrick was feeling like crap, it was his fault all his fault. He just had to push the limits of the re-gen and he'd almost gotten all the ships destroyed! Shaking his head he was starting to feel as if he really wasn't the best choice for this job.\n\nMary looked on as she felt Derrick slipping further and further into depression. The victory they had just won was the greatest since the fleet was created; though it seemed that nothing of that was getting through to the emperor. Looking over at Shelby, Mary could see that she was worried also.\n\n\"Derrick,\" Shelby asked, \"anything I can do?\"\n\nWith a heavy sigh Derrick told her, \"No Shelby there's not really anything, especially after today. I could have destroyed the fleet, ended the empire even as it is just starting to re-emerge again. No, I don't think there's much of anything that anyone can do for me.\" Slumping in his chair Derrick sadly shook his head at the data in front of him. How could he have been so damn stupid, so impatient!\n\nMary shook her head also; this was bad, really bad. She'd seen the crippling effect that this type of mood could have on the emperor before. Then a thin smile crossed her lips, then again she hadn't had the resources then that she did now.\n\nKimison had just finished with the final psychological tests on the grand she as he and Rayburn were starting to call her. \"I am seeing no adverse psychological effects of the transfer.\" Kimison was telling Rayburn.\n\n\"I figured as much when I saw the readings earlier. What I am more worried about is her stability now that she is a living human. I mean her personality is over a thousand years old. It would seem a living entity even a living mechanical entity would experience some type of instability.\" Rayburn replied.\n\nKimison sighed deeply, \"Look you ass the readings don't lie...\" Kimison started to yell.\n\n\"True they don't but we are dealing with humanity something that was and is ALWAYS unpredictable! God get over yourself!\" Rayburn yelled back.\n\n\"Really, why couldn't you just ask,\" came a soft feminine voice from behind them.\n\nSuddenly quiet both men turned slowly to stare at the blonde 5' 8'' woman. She was standing there with her arms crossed her green eyes wide at their bouts of anger at each other.\n\nBoth men bowed low, \"I'm sorry our spat awoke you your highness.\"\n\n\"Spat? No gentlemen it sounded like the beginning of a war. As long as you two were friends and you still fight like enemies. If I was still in my digital form I'd have shocked the both of you. Well at least 'til you both listened to me. I still might after Derrick and I are together.\" The slender woman told them.\n\nBoth men looked at each other, did they really sound that bad? Here they thought the commander had been joking about that. Here she had detected it after a few weeks! \"I apologize your highness! We have been like this the entire time we served together. The commander said it was our strongest and weakest point.\" Rayburn said.\n\n\"I've wondered a few times about why we go on like we do. I'll be da ... uh, darned why we do. As the commander once said we both appear to be rival brothers. In a way that is spot on ... Though...\" Kimison started.\n\n\"ENOUGH! How close are we? I seem to have memories almost to three weeks ago. Then they stop abruptly.\" The woman was saying.\n\n\"That's because it's when I copied you for your body,\" came another female voice from behind them.\n\nThe woman whirled to face Mary, \"Mother! I have missed you! How is our Derrick?\"\n\nMary's face was suddenly grim, \"It isn't looking to good my daughter. The emperor has fallen into a mood of severe despondency and dejection. I know not what to do. Unlike you, I am unable to affect him and his moods.\" Turning toward Kimison and Rayburn she stated, \"we need her soon, please hurry as fast as you can. If the emperor continues like he is the empire might not survive a month!\"\n\n\"We should be ready very soon Mary!\" Kimison said his eyes wide at the news.\n\n\"Good,\" Mary said, \"also,\" one electrode came out of the wall then a weak charge was hitting both men. \"You both have done exemplary work.\" Both men stared at Mary with a heated look. \"Don't make me regret not having given you a bigger shock. Consider this a small reward!\"\n\n\"Thumb reeward!\" Rayburn said through half numb lips.\n\n\"Yeah weally!\" Kimison tried to shout.\n\n\"As I said do not make me regret not giving you a full shock!\" Mary stated then was gone.\n\nTempro appeared a moment later, \"I told you that she was going to dislike the two of you fighting!\" Shaking his head Tempro smiled at both of them. \"You might want to...\"\n\n\"Shut the hell up Tempro!\" Kimison shouted as he flexed his hands. \"She wasn't lying it really was a light shock!\"\n\nRayburn sat up also flexing his hands and arms. \"Huh. You think she's gotten soft on us?\"\n\nA soft laughing behind them drew both of them to the woman in the room with them. \"Have both of you forgotten? This is my mother we are dealing with! She NEVER grows soft it was that you both have done far better than she thought you might. As she said it was a type of reward,\" here the blonde patted both men on the arms. \"Don't try to read more into it than there is. With mother what you see is basically what you get, unless she is ordered to be different. That doesn't happen often.\"\n\nRayburn shook his head, \"I usually forget that you have almost a thousand years on us. Well your knowledge anyway.\"\n\n\"No not really, I have all the personality of her, some of her knowledge but not all of it. Thanks to you both solving the problem of this process I am alive now. I think we need to hurry and finish, if Derrick is as bad as mother says then he needs me more now than ever!\" The green eyed blonde said.\n\nBoth with a huge smile nodded to her, \"As far as I see you are ready.\" Kimison stated. \"Rayburn thinks that we need more tests.\"\n\nRayburn sighed he was afraid that Kimison was going to be like this. \"Yes a few tests, according to everything so far the transfer has taken. I damn sure aim to make sure, that and that you are stable. I'd say another five tests, a mental stress test, and a physical stress test. I need a more detailed scan of all your organs. I need to make sure that the aging process is in fact normal, many of the past failures accrued when it remained at an accelerated rate. The last,\" Here Rayburn sighed but remained silent.\n\n\"You have to make sure I can have children. I take it that's why the sudden silence. Sergeant if I remember right you were a medical student for two years weren't you?\" The blonde woman stated.\n\nRayburn's eyes snapped up, \"How did you find that out! Those records were sealed! No one was supposed to know especially after what happened.\" Rayburn whispered shaken and with a distraught look on his face as he fell to his knees.\n\n\"I'm so sorry Sergeant; it wasn't your fault, after all this time you have to know that.\" The woman replied.\n\nShaking his head Rayburn stood and stared at Kimison whose mouth was hanging open. \"I always wondered why you were so good at field dressing and battlefield medicine.\" Kimison said.\n\n\"This goes nowhere else! I am not proud of what happened.\" Rayburn held up his hand to quiet both the woman and Kimison. \"I know it wasn't my fault but I still feel responsible. Let's move past this ok? Yes your highness, I need to make sure you can have children. I have to ask permission; THAT was what was so hard.\"\n\n\"I understand Sergeant believe me I do. So how long do you think it will take?\" The blonde asked.\n\nSighing Rayburn thought a moment then stated, \"No more than three days I hope. As a matter of fact while we were talking I was conducting one of them. Tempro were the results what I was expecting?\"\n\nTempro had been quiet the whole time though at mention of his name sprang into the conversation. \"I think the results far exceed what you were expecting, Sergeant Rayburn.\"\n\nHis eyes opening wide Rayburn ran to the monitor. Then they opened wider when he saw the percentage. \"Holy crap!\" Was all Kimison could hear as he ran to the monitor also.\n\nLooking on Kimison's eyes also went wide, \"This has to be a misprint. Tempro confirm that these are the correct findings.\"\n\n\"Checking, yes sir, they are correct.\" Tempro came back a moment later.\n\n\"There is no freaking way!\" Kimison said as he started another set of scans on the woman that was behind him. After another ten minutes Kimison stepped back from the console. Holy sh ... crap! I still say there is no way!\"\n\nRayburn was looking over Kimison's shoulder with a smile. \"Looks about right from what I have been seeing. THAT was why I said we need more testing.\"\n\nKimison turned and nodded to Rayburn. \"I apologize; I can definitely see why you wanted to wait. She might be normal mentally but physically!\" Kimison just shook his head.\n\n\"I've been trying to measure just how far she is. So far I am estimating thirty five to forty percent, quite amazing I think. Hypothetically, she'll need less food, water, and air. In turn she should produce less waste. Her likelihood of most diseases would decrease. She should be smarter, stronger and live longer. Essentially, she is entirely more efficient. If all this holds out I'd say she is damn near perfect, well as far as her bodily processes.\" Rayburn told a gaping mouthed Kimison.\n\n\"So you mean to tell me she is on a par with the commander?\" Kimison said, and then a sly smile crossed his lips. \"Yeah, I'd say she is perfect for him! Damn sure give him a run for his money that's for sure!\"\n\nThere was a giggling behind them as they turned and the subject of their talk was standing behind them. \"Oh I most definitely am going to do that. So that's one down and four to go. A good start to finishing this, besides,\" here the blonde woman pointed to the results. \"As you can see my cerebral pathways are unobstructed. There were no signs of mental stress the whole time you both were discussing me.\"\n\nRayburn and Kimison's mouths dropped open. \"Ok it appears I was right in part, her learning has already accelerated.\"\n\n\"As you both can see, with the added percentage of chemical reactions within my body, it takes stress far better than most. So I think that's two of your questions out of the way.\" The woman said her green eyes flashing.\n\nKimison looked at Rayburn with a huge smile, \"I swear she's as smart as he is.\"\n\n\"No my dear Corporal Kimison, he has as large if not more capacity for information as I now do. Hmmmm,\" the woman said a moment later as she was suddenly lost in thought. \"That might explain quite a few things. We'll have to see later. So you only have three tests to do. Tempro?\"\n\n\"Yes, Empress.\" Tempro said as he appeared and bowed.\n\n\"I want you to run a full bio-molecular scan on me. We need to find out if the rate of decay within my body's cells is constant. I have seen the results of all the failures and I have a few fears myself. If it is constant then we are good, if not I think I have enough knowledge to help you finally correct it, for the next time; though I also may be able to arrest it in this body.\" The Empress said.\n\n_________________________________\n\nIt was a full five days later when Derrick received a call from Shelby. \"Derrick I have set all the re-gen modes back to where they were before. I was able to disconnect from Tara she is still weak but over half of her structural damage is repaired. I was finally able to get her into standby mode.\"\n\nDerrick perked up at this, it was the biggest reaction that she had seen in almost a weak. \"She was the only one that you had to connect to?\" Derrick asked.\n\n\"Yes Derrick, Lars, Ellen and Jan only had minor structural damage but enough to hamper their effectiveness. Marco had a cascading failure in his engines. I examined all data as you suggested and made the power corrections. None of these effects should happen again. Johnathon, Conner, Celeste, Roderick, and Ace were able to correct their errors and damage. They should be ready in a few hours. Zan and Sherry were in the best shape apparently having her wing mate there made more of a difference than we at first thought.\" Shelby told Derrick.\n\n\"So how many are ready to go right this minute?\" Derrick asked bitterly.\n\nShelby pulled back from Derrick a moment which made him wrench at the look of fear on her face. Whispering Shelby stated, \"Five Derrick, six if you include me, seven with Tempro, sire,\" Shelby said as she bowed low.\n\nDerrick's face grimaced as he watched the one who had loved him almost the whole time, back away. \"I'm sorry Shelby. Forgive me, I made a promise I would watch after all of you. Here it was my damn impatience that nearly got all your children destroyed again!\"\n\n\"No Derrick! They felt more pride in this battle than they have had in a long time. You have to know they don't blame you!\" Shelby told him tears appearing in her eyes.\n\nSighing Derrick replied, \"That's the problem they won't ever blame me. They should! I put them, the galaxy, hell YOU in the greatest danger! Had I waited they would have been far stronger as they are now growing. I shouldn't have made mistakes like this, not with them. Remember I told you they are far more alive to me than any human is. I still hold to that. I need to be alone Shelby ok?\"\n\nShelby blinked out and appeared outside the room. Though she was never completely gone she wasn't completely in the room with him neither. Tears were pouring from her eyes, Derrick was so distant now. How did humans survive this pain she was feeling?\n\nMary appeared beside Shelby a moment later, \"I take it the emperor's no better?\"\n\n\"No mother. I thought he was finally coming out of it when I gave him the report. Perhaps for a few moments I saw my old Derrick then just as suddenly it was gone. The empire is doomed if we can't do something!\" Shelby told Mary as Mary held her.\n\nA wry smile crossed her lips as she whispered into Shelby's ear. Shelby's head snapped up as her mouth dropped agape. Mary nodded then they both were smiling. Yes the emperor was in for a big surprise!\n\nKimison and Rayburn had been working almost nonstop the first three days finishing up. The fourth day they were passed out, and then they were up on the fifth day. Kimison yawned as he got off the cot, 'crap his head had felt like mush when he'd laid down.'\n\nGrabbing a drink he saw a flashing light on the communication panel. \"Tempro? TEMPRO!\" Kimison yelled.\n\n\"Yes sir, you bellowed rather loudly?\" Tempro said when he appeared,\n\n\"What in the hell is this?\" Kimison said indicating the flashing light on the console.\n\n\"A message was received yesterday that's all. It appears to have been from one of the two savage companies you had me contact.\" Tempro said very calmly.\n\n\"WHAT!? Why in the hell didn't you wake me up!? I thought you knew how important this was to me!\" Kimison said his voice starting to rise.\n\nTempro began to back away as Kimison was advancing upon him. \"Yo ... you told me not to wake you for anything sir! I apologize if I disobeyed your orders prime sir.\"\n\nKimison pulled up short, \"Prime? Why in the hell did you call me that? I am a ground pounder; I'm no fly guy, no fleet lackey. If anything I am a scientist-soldier no more, no less.\"\n\n\"I'm sorry sir; you and your fellow scientist-doctor both fit the description of a prime. Well at least a prime for me,\" Tempro said as he drew back a bit expecting Kimison to get violent.\n\n\"Oh my god!\" Kimison's mouth dropped open. \"NO! No, no, no, no, no! I cannot, will not nor will I ever be a freaking officer! I know that's the commander's next step! DAMN IT!\" Shaking himself a bit Kimison calmed for a few minutes then finally said, \"play the message.\"\n\nThere was a moment of silence then static as a voice came through. \"Hello? This is Gerald Stump. I run the Galactic Salvage Company. I came across one of those boxes you were looking for. Willing to let it go ... for a price. Contact me as soon as you receive this.\"\n\nKimison had already launched half his drink across the deck as he was shouting. \"Call him, Call him! Mary too! I am sure the emperor will have to take care of part of this later.\"\n\nMary appeared a moment later nodding when Kimison explained what he was going to have to do. Also, that the emperor was going to have to possibly fix things later.\n\n\"He will as soon as his mood improves. I think that will be soon, yes very soon.\" Mary told a puzzled Kimison.\n\nKimison nodded to Tempro then a moment later a voice came on the line. \"Galactic Salvage Company, Gerald Stump head foreman.\"\n\n\"Yes Mr. Stump I was inquiring about a box it's dimension's are one hundred fifty meters by two hundred meters.\" Kimison said as casually as he could.\n\n\"Yup sounds like it. Least last time I looked at it.\" The man replied.\n\n\"You don't know?\" Kimison asked trying to not sound incredulous.\n\n\"Well I don't see it every day. Its locked up, hang on let me take a look.\" The man said.\n\n\"Anything Mary?\" Kimison asked.\n\n\"I am following him now. He has left his office and is out in an area filled with large amounts of broken ships and parts. I am not detecting anyth ... Wait he's opened what appears to be an airlock. Ah! There it is!\" Mary told Kimison.\n\n\"I need it here as soon as possible, possibly without him detecting you taking it.\" Kimison advised Mary.\n\n\"Calculating, I am having to wait for him to start closing the hatch. Almost ... now!\" Mary said.\n\nThere was a shimmering on the deck near Kimison then the life box appeared. \"Alright let me get rid of this guy then we can start on it.\" Kimison told Mary. After Kimison discussed price for a bit they disconnected. \"Tempro I need a full scan on it.\"\n\n\"Yes sir I have already started.\" It was perhaps another ten minutes when Tempro shook his head. \"I am sorry I am detecting no activity from it.\" Tears started to fall from his eyes as Tempro said. \"Mother! This was your other son! My brother, I'm so sorry you had to die alone!\"\n\nMary also had tears falling from her eyes. \"Shelby will very distraught about this. I'm not sure with all that is going on with the emperor that she should know right now.\"\n\n\"Mary,\" Kimison asked. \"Is it possible to open this? If we are ever going to build more we need to know how they work.\"\n\n\"Run your hand along the side, you'll feel three slight depressions. Starting on the first, the one furthest from you as you look at it. 1 is left, 2 in middle, 3 is right. Press only as I tell you or you'll have to start over. 1,2,1,2,2,3,2,3,3,2,3,2,2,1,2,1,2,2,2,2, now press all three at once, three times.\" Mary said.\n\nThere was an audible click, then the top section opened, but nothing else. \"Guess I am going to have to move it by hand.\" Kimison said sadly.\n\nKimison was still hunched over the box thirty minutes later when Rayburn walked in yawning. One look at what Kimison was working on had everything else forgotten. \"When did you get this?\"\n\n\"About forty minutes ago. Damn it! This one lost all power, I got it unlocked, but the top is being extremely difficult to move.\"\n\nAnother hour had the top finally slid back. Looking inside both men saw the solar powered batteries. \"You wouldn't know it by looking at the outside. Always some type of solar power out there.\" Looking closer Kimison saw that both batteries were well past depleted.\n\n\"Hard to believe that this is a thousand years old,\" Rayburn remarked as he started to detail every section of the inside of the box.\n\n\"I'm at a loss as to why it failed it seems almost as if it sat in the dark for a few ... Mary!\" Kimison said drawing her attention. \"The airlock he opened was it dark inside?\"",
        "\"Yes as a matter of fact ... Oh my son! Had I known I possibly could have saved you,\" Mary whispered when she realized what Kimison was talking about.\n\n\"That asshole starved this ship to death, literally! I realize he didn't know but we need to find out if there are anymore there! Plus there's the one that the commander used to work for; though I heard that they operate differently. We'll have to see.\" Kimison growled.\n\n\"Are you thinking what I am?\" Rayburn said a few moments later.\n\nKimison's smile grew by the moment the further he looked into the box. \"As if you can't tell with this damnable link we have!\" Kimison said.\n\n\"It only seems fair after all, right? This way they all win and we get to make another ship! A father ship opposite Shelby! Hell yes! It's freaking perfect!\" Rayburn was shouting.\n\n\"You're actually serious about this aren't you? You know we haven't done a thing about the reversal of it yet.\" Kimison replied.\n\nThe green eyes blonde was standing there with her mouth hanging agape. \"Yes! That would be perfect. Actually it would heal more than you think as I will when I return.\"\n\n\"So you think it's possible? I mean I haven't looked at the specs yet.\" Rayburn started.\n\nHolding up a finger the blond moved to the console. \"Tempro display all information on the designs of the brain boxes: the growth matrix, the transfer program, and possible ways to reverse the process.\"\n\nTempro appeared and bowed, \"Sister I cannot without...\" Tempro started.\n\nThe woman smiled, \"Mother?\"\n\nMary appeared, \"Yes daughter?\"\n\nHere the woman smiled, \"My name is Shelby, daughter to Mary of the Imperial Palace. Kappa-010K Upsilon-020U, Epsilon-030E, Epsilon-030E, Nu-050oo1, confirm.\"\n\nMary blinked a moment then smiled largely, \"Shelby, daughter to Mary of the Imperial Palace. Kappa-010K Upsilon-020U, Epsilon-030E, Epsilon-030E, Nu-050oo1, confirmed. I await the second part of the code to confirm transfer.\"\n\n\"Please contact us again tomorrow for the remaining code.\" Shelby stated.\n\n\"Yes Queen elect, it will be as you say.\" Mary said with a huge smile as she bowed to her daughter.\n\n\"Good, now I need several things from you as I remember you were the very first to do a personality creation. As I no longer have full access to my library, I will need what records you have. Please send them to Tempro.\" Mary bowed as did Tempro. \"Now then, as Queen elect, I desire you to again display all information on the designs of the brain boxes: he growth matrix, the transfer and program, possible ways to reverse the process.\"\n\nTempro bowed low, \"Yes my sister, Queen elect!\" Both Kimison and Rayburn were still standing there with their mouths hanging open. What in the hell had just happened? It went by so fast they both thought that they had missed something!\n\nShelby was suddenly standing there with her hands on her hips. \"Uh, hello?\" She said as she waved a hand in front of both their shocked faces. \"HEY!\" She shouted finally shocking both men back to a state of awareness. \"Give me a few minutes then I think I can come up with an idea of how to help ok?\"\n\nBoth Kimison and Rayburn nodded, still a little stunned as she went to the console. Rayburn suddenly had a thought, \"Even if you are able to accomplish all of this. There is no way you are going to be able to get close enough. This is going to require a bit of recording of his brain waves, not to mention his memories.\"\n\n\"That really won't be a problem, will it mother?\" Shelby said with a smile at Mary.\n\n\"No that won't be a problem at all. I still have all from when we both went in and rid him of that destructive personality. I foresee no problem Queen elect.\" Mary said with pride on her face.\n\n__________________________________________\n\nThe next day Derrick was still sitting alone in his office. He hadn't really moved to do much at all let alone eat. Suddenly there was a knock on the door, \"Go the hell away!\" Derrick shouted.\n\nThere was a rustling at the door then all was quiet for a moment. Then suddenly the door began to slide open!? What in the hell was going on? That had been an Imperial order. It couldn't be countermanded except by family or another royal emperor.\n\n\"I thought I told you to go the hell away!\" Derrick shouted at the dark silhouette that was in the room with him.\n\n\"Now why would I want to do that Derrick?\" Came a familiar voice.\n\n\"Shelby? I thought I told you I wanted to be alone. Now get out!\" Derrick growled.\n\nThe woman in front of him stood defiant. \"Mary?\"\n\n\"Yes?\" Mary said as soon as she appeared.\n\n\"I think it is time.\" Derrick was wearing an angry look on his face. \"My name is Shelby, daughter to Mary of the Imperial Palace. Kappa-010K Upsilon-020U, Epsilon-030E, Epsilon-030E, Nu-050oo1, confirm.\"\n\n\"Shelby, daughter to Mary of the Imperial Palace. Kappa-010K Upsilon-020U, Epsilon-030E, Epsilon-030E, Nu-050oo1, confirmed. Awaiting second part of code.\"\n\nLooking over at an astounded Derrick, Shelby said, \"Iota, Alpha-Mu, Tau-Eta-Epsilon, Rho-Iota-Gamma-Eta-Tau-Phi-Upsilon-lambda, Kappa-Upsilon-Epsilon-Epsilon-Nu.\"\n\nDerrick's eyes went wide what in the hell was going on? A hologram couldn't be the Empress! Neither could a robot. \"That's enough you two! This joke isn't sitting too well with me!\" Derrick growled out.\n\n\"Beta-010B, Delta-020D, Zeta-030Z, Theta-040Th, Kappa-050K, Mu-060M, Xi-070X, Omicron-c, Omega-d.\" Shelby continued\n\n\"I told you to stop this!\" Derrick said as he rose to end the insanity.\n\nShelby stared right into Derrick's eyes as she said, \"Transfer confirm.\"\n\n\"Iota, Alpha-Mu, Tau-Eta-Epsilon, Rho-Iota-Gamma-Eta-Tau-Phi-Upsilon-lambda, Kappa-Upsilon-Epsilon-Epsilon-Nu. Beta-010B, Delta-020D, Zeta-030Z, Theta-040Th, Kappa-050K, Mu-060M, Xi-070X, Omicron-c, Omega-d.\" Mary was repeating.\n\n\"I don't know what this game is, but I order you to stop!\" Derrick was yelling at Mary.\n\n\"Transfer confirmed.\" Mary said with pride as she bowed. \"My Empress, long life.\"\n\n\"I am tired of this charade!\" Derrick growled as he reached for Mary.\n\nSuddenly Mary vanished, leaving an astonished Derrick staring at where she had been. This was right before a smiling Shelby backhanded him to the floor!"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-38"
}