{
    "title": "Rachel Doesn't Do 'Normal' Pt. 04",
    "pages": [
        "As always, every character in this story is over the age of 18. Rachel is 22, Aaron is 24 and Brendan is 18. Although I have placed this story in the first time category, there is also another scene featuring a much older man with Rachel. If you aren't a fan of the old/young genre then I suggest this might not be the story for you. There are also other themes such as voyeurism, rough sex and cheating. Just to forewarn you. Comments and feedback are always appreciated. Thanks. \n\n*** \n\nRachel woke up a few hours later feeling parched. It was still pitch black in the room, so she knew it wasn't morning yet. \n\nShe wanted a drink of water badly, but the bed was so warm and cosy that she was finding it hard to muster the energy to move. Getting up would also mean that she'd have to go through the lounge to get to the kitchen and she didn't want to wake up Brendan. \n\nShe was about to give up and go back to sleep when she heard a strange noise coming from the other room. \n\nCurious, she pushed herself up out of bed and crept over to the door. It was already open just a crack, so wondering where on earth that noise was coming from, she peered through the gap. \n\n\"Oh my god.\" She breathed, when she realised what she was looking at. \n\nBrendan was lying on the sofa bed with his shoulders propped up against his pillows. She could see him quite clearly, as the phone he was looking at was bathing both him and his immediate surroundings in a soft glow. \n\nRachel bit her lip to stifle a giggle as she watched the duvet around his crotch bouncing up and down rapidly. The dirty fucker. He was watching porn on his phone! \n\nThe sounds from the phone were very faint, but she could definitely make out some high pitched moaning. Occasionally Brendan would mutter something under his breath, seemingly to egg on the porn star he was watching. \n\nIt felt so wrong watching her boyfriend's younger brother having a frenzied wank under the sheets. But weirdly fascinated by it, Rachel couldn't peel her eyes away. \n\nShe knew he was 18, but because he looked so much younger than that, it felt wrong somehow. She stared in amazement at the look of pained lust, which scrunched up the features of his usually youthful looking face. It reminded her so much of the way old men... \n\n...Oh god what was she doing? She should stop watching right now and go back to bed. This wasn't right. \n\nSuddenly Brendan whipped back the sheets and Rachel's eyes flew wide open in utter shock. She had to clamp her hand over her mouth to keep from gasping audibly. \n\nWhat on earth? That can't be right! Brendan's cock looked huge. It might have even been the biggest cock she'd ever laid eyes on. Was it a trick of the light? Or was she still half asleep? A cock that big looked ridiculously out of place on such a scrawny underdeveloped body. \n\nShe was unaware that she'd instinctively grabbed her breast through her long t-shirt and had begun to fondle it gently. Her focus was completely locked on the meaty pole that Brendan was now furiously pumping. What was it? Nine or even ten inches? \n\nSuddenly his cock erupted like a volcano, plastering his chest in a fountain of creamy cum. She listened to him groaning happily as he milked the last few drops from his giant dick. \n\nRachel let go of her breast, realising with a flush of embarrassment what she was doing. \n\nBreathing a huge sigh of satisfied relief, Brendan set down the phone and the room was plunged into darkness. \n\nRachel mouthed the words \"holy fuck\" as she crept back into bed as quietly as she could. \n\n\"Go away...leave me alone.\" Rachel moaned as she felt Aaron shaking her gently. \n\n\"It's nearly mid-day babe. You need to get up.\" \n\nRachel opened her eyes groggily. \"What? Really? Ok...ok...just five more minutes.\" \n\n\"I'll leave your tea here on the side. Make sure you drink it before it gets cold.\" \n\n\"Mmmm...thank you.\" Feeling her thirst return. Rachel grabbed the mug and gulped down the refreshing goodness in a series on long chugs. \n\nThe boys had been up for hours already, playing on the PlayStation. Or rather it looked that way to Rachel, when she eventually crawled out of bed and made her way into the lounge at last. In fact they'd been sitting mostly in silence, while Aaron played FIFA. Brendan had asked if he could join in, but Aaron had just laughed and ignored his brother's request. \n\nAh here she comes at last. Afternoon sweetness. Do you want some toast? We've both had breakfast already, we didn't want to wake you.\" \n\n\"Thanks for that. I think I needed a lye in.\" Rachel trudged into the open plan kitchen and set about making herself a sandwich. \n\nBrendan couldn't believe how sexy she looked, even after just waking up. Her long blonde hair was twisted up into a loose bun, leaving a few strands of her fringe to frame her gorgeous face. \n\nShe was wearing a really baggy hoody and some loose fit sweat pants, but having seen her naked a few times now, Brendan knew what a fabulous figure she was hiding under her frumpy clothing. It was enough to make the horny teenagers cock twitch into life again. \n\nToday is the day. He repeated the words over and over in his mind, in an attempt to muster the courage to go through with his plan. \n\nSuddenly Rachel remembered what she'd seen last night. Or had that just been a crazy dream? That couldn't have been real surely? She looked over at Brendan, who seemed to be giving her a weird stare. Rachel smiled, hoping he'd return the gesture, but his face remained rigid as his eyes burnt into hers. Did he know she was watching him wanking? No, he couldn't have seen her. \n\n\"How did we get home last night? I can't remember a thing!\" Aaron chuckled. \n\n\"We got a taxi babe. Do you really not remember?\" Rachel was privately pleased that he didn't. \n\n\"Nah, I was properly smashed.\" \n\n\"I remember.\" Brendan said bluntly. His words combined with his cold stare sent a shiver down Rachel's spine. She could feel the blood draining from her cheeks. \n\n\"D...do you? What can you remember?\" She crossed her fingers and held her breath. \n\nBrendan let her stew in the awkward silence for a while, loving the look of panic Rachel was giving him. \"I remember you waking me up. Then you and the taxi man carried me and Aaron up to the flat.\" He saw Rachel exhale sharply, clearly feeling relieved that that was all he knew. \n\n\"What? The taxi driver carried me into bed? Oh god, how embarrassing.\" \n\n\"Yeah.\" Rachel giggled nervously, before taking a big bite of her sandwich. \n\n\"Right I need a shower.\" Aaron stood up and stretched. \"Then we need to plan what we want to do today. Brendan hasn't come all this way just to sit around our flat all day. Have you bro?\" \n\nBrendan was certain this nice guy brother act was all for Rachel's benefit now. He'd never called him bro before this weekend. That would imply he was actually acknowledging him as his brother, which he'd never done before in his life. He shook his head in reply. \n\nRachel wasn't sure she wanted to be left alone with Brendan, but she didn't have a choice. He was still giving her a nasty scowl and she feared she knew why. \n\nShe sat on the sofa and turned on the TV, trying to avoid looking at him. \n\nBrendan took a deep breath. Now was his chance. He had to say something, although his nerves very nearly got the better of him once again. \n\nAs soon as the shower was running, Brendan finally willed himself to speak. His words chilled Rachel to the bone. \n\n\"Had a good night did you?\" \n\n\"Um...yeah...it was ok.\" \n\n\"More than ok, I reckon.\" \n\nRachel looked at him sheepishly. Oh god what did he know? \"Yeah it was fun.\" She tried to laugh, but it sounded fake. \n\n\"Sure looked like you were having fun from where I was sitting.\" His words were barely a mumbled whisper, but they seemed to be having the desired effect anyway. \n\nRachel gulped nervously. \"I...I've just remembered, I need to...\" She went to stand up. \n\n\"...Don't get up, I think we need to talk.\" Rachel slumped back into the sofa. She could feel a tight knot twisting her stomach. \n\n\"Talk? What is there to talk about?\" Her mind raced with the possibilities of what he knew. There wasn't a chance he knew anything about Arthur. He couldn't have known about her shagging the taxi driver either. The most he could possibly know was that she gave the cabbie a blowjob. He could have woken up during that. But she could lie, she could tell him that she was bent over looking for some loose change she dropped...or...or... \n\nHer thoughts were abruptly interrupted. \"I saw what you did last night.\" This was Brendan's chance to lay all his cards on the table. He wanted her so badly it hurt. This was the only way it was ever going to happen. A girl like her would never contemplate being with a guy like him otherwise. \n\n\"Look, I don't know what you think you saw, but...\" \n\n\"...I'm not stupid!\" Brendan grunted crossly. Rachel was shocked by his tone of voice. The sweet innocent looking boy had suddenly turned into an angry petulant teenager. \n\nBrendan began to recant the long story about how he'd arrived early yesterday and had hidden under her bed when Arthur had arrived. \n\nRachel felt the world fall away beneath her. She felt like she was going to be sick. He went on and on, relaying all the sordid details to her with vivid descriptions. Every time Rachel tried to open her mouth, to plead with him, to attempt to explain, he just shook his head to silence her. \n\nRachel's head was spinning. He'd seen everything. He knew everything! He'd even snuck back down and watched her get fucked in the back of the taxi. \n\nThere was a long silence after Brendan finally finished recanting his tale. He hadn't told her about the video he'd taken. He could use that if she refused any of his later demands. \n\n\"You must think I'm a horrible person.\" Rachel could feel the tears burning in her eyes. She was a horrible person. Hearing back all of her recent antics made her loathe herself. How could she have been so heartless? \"But there's something you need to know...\" She was about to confess that she wanted to end her relationship with Aaron. She'd not been happy for a long time now, but Brendan interrupted her again. \n\n\"I know that you like shagging older men. I don't why. That bit I don't get. You're beautiful, you could have anyone. So you must just enjoy it. Are you even in love with my brother?\" \n\nThis took Rachel by surprise. \"T...That's a hard question to answer. There's many...\" She was so flustered she could hardly think. \n\n\"...That's a no then. So you don't really love him, but you carry on pretending you are. Why? Is it because you want people to think you're normal? Because I can understand that. People don't think I'm normal and it's not very nice.\" Brendan watched as Rachel's jaw lowered with each word he spoke. He'd hit the nail on the head, he reckoned. \n\nHow was this possible? Was this kid a mind reader or something? She sat there in stunned silence trying to absorb everything he'd said. \"I...I don't know what to say.\" This had to be the most embarrassing moment of her entire life. How could she explain things which she didn't even fully understand about herself? \n\n\"Don't worry. I'm not planning on telling Aaron any of it.\" \n\n\"Really?\" Rachel looked suddenly hopeful, but she could sense in the pit of her stomach that there was a \"but\" coming. \n\n\"I can keep a secret, but...\" Here it comes. He wasn't the only one who could read minds. \"...there are a few things I might ask you to do for me. Seeing as you don't seem to mind cheating on Aaron. Maybe you could...you know...maybe you could buy my silence?\" Brendan hoped to god this would work. He held his breath and waited. \n\nThe shock of Brendan's confession was starting to wear off. Rachel narrowed her eyes and stared at the visibly shaking young lad sitting across from her. He was acting like the big man, but she could tell he was finding it all rather uncomfortable. How was she going to play this? Truthfully it wouldn't be the worst thing in the world if Brendan did tell Aaron everything. She was going to break up with him anyway. But still, she'd prefer it if she could let him down gently, rather than have his heart broken by hearing about her antics from his younger brother. \n\nRachel moved closer to Brendan, smirking at how he flinched when she put her hand on his knee. \"Seeing as you seem to have me all figured out already. You must know that I don't like being told what to do.\" She put on her best seductress tone, as she dragged her sharp fingernails up along his skinny thigh. \n\n\"You might think you have me cornered here, but you haven't got a clue what you're doing. I doubt you even have what it takes to handle a girl like me.\" Images of his giant cock flashed in her mind as she breathed the words into his ear. She knew he had the right tool for the job, but whether or not he could use it effectively was another thing altogether. \n\nBrendan whimpered weakly. His bottom lip was trembling as he felt her nails inching closer to his swelling cock. \n\n\"You're playing with fire Brendan. Careful you don't get burnt.\" Rachel nibbled his ear gently. It was too much for the poor young lad. He sprang to his feet, fearing he might cum in his pants at any second. \n\nLuckily for him, the sound of the shower ending broke the tense atmosphere that had filled the small room. Aaron didn't even look up as he walked from the bathroom into his bedroom, rubbing his hair with a towel. If he had he would have seen his younger brother bent double in the middle of the room, trying to hide his throbbing erection, while his gorgeous girlfriend was sat on the sofa giggling at him. \n\nBrendan ran into the bathroom and slammed the door. \n\nThe little shit bag! I'll teach him for trying to blackmail me, Rachel thought. Buy his silence? What cheesy movie had he pulled that one from? \n\nShe sat for a good while mulling over what he'd said. It occurred to her that her sex sessions with Arthur and Kadir now had a new level of eroticism to them. The knowledge that she was being watched the whole time by a horny young virgin, who also just happened to have a massive cock, was oddly exciting her. \n\nThe more she thought about him beating his huge meaty dick over her, while she rode the shit out of the old geezers, the more her pussy dampened and her nipples hardened against her top. \n\nIn his hurry Brendan had left his phone on the side of the sofa. Puzzle pieces started falling into place in Rachel's mind. Remembering that he was watching something on his phone while wanking last night, she picked it up and looked in the video library. \"He couldn't have, could he?\" She whispered to herself. \n\nThere was only one video in there. She pressed play. \n\n\"The fucking bastard!\" She hissed. Rachel watched the video of her getting fucked in the back of Kadir's taxi for longer than she needed to, unable to pull her eyes away. She'd never seen herself having sex before. It was a weirdly exciting thrill. So it hadn't been porn he'd been watching last night at all. He'd been wanking over her again had he? Oh he was going to pay for this. She deleted the video and set his phone back down. \n\nAaron couldn't find out about what she'd done. It wasn't fair on him. So if Brendan wanted to play games with her then she was going to play along, but he was in for a big surprise if he hadn't planned on playing by her rules. The poor kid had no idea what he was in for. She was in charge, the sooner he accepted that, the smoother his ride would be. \n\nHer hand slipped down between her thighs and she started to rub her tingling sex. Oh god, what was she doing? He looked like a small boy! But that cock of his...that was no small boys cock, that was a man sized cock if ever she'd seen one. \n\n\"Are you going to get ready babe?\" Aaron walked into the lounge fully dressed and ready to go. \n\nRachel whipped her hand away from her throbbing mound. \"What? Err yeah...I'll be ten minutes. Is that ok?\" \n\nShe jumped in the shower once Brendan had vacated to bathroom. Her urge to masturbate was almost overwhelming, but she knew there wasn't time. \n\nShe picked out the bright pink set of lingerie that she was planning on wearing yesterday. Her panties had miraculously appeared back in her drawer. Rachel sniggered to herself, recalling Brendan's detailed story. \n\nIt was a warm sunny day, so she decided to wear her powder pink vest top with a pair of white cotton hot pants. Rachel wasn't sure how much they'd be walking, but guessed it would be sensible to wear her flats. She didn't want to tower over Brendan too much anyway, she was already a few inches taller than him as it was. So she pulled on a pair of white plimsolls which went nicely with her outfit. \n\nNone of them could decide on what to do, so Aaron suggested they jump on a bus to Trafalgar Square. Most of the museums and attractions were within walking distance from there anyway. \n\nFifteen minutes later and they were on the bus headed into the city centre. It was really crowded with no spare seats, so they all stood in the aisle. Aaron at the front, Rachel in the middle and Brendan behind her. \n\nBrendan couldn't believe how Rachel had reacted to his proposition. He thought she would either just flat out refuse him or retort with anger. But to say that he didn't have what it took to handle her. What did that even mean? Was she consenting to let him try? As unbelievable as that seemed, he could no longer resist the urge to test her responses. \n\nHe stared down in awe at the fabulous outward curve of her round juicy ass. About an inch of her smooth golden skin was on show above her shorts and below the line of her pale pink vest top. He could see two cute dimples in her lower back, either side of her spine. The temptation to finally touch her was overwhelming to say the least. \n\nWilling his shaking hand to move, he began to very lightly stroke one of the dimples, with tip of his trembling finger. \n\nRachel shuddered as she felt his gentle teasing touch. She arched her back and bit her lip to stifle a giggle as he tickled her some more. Let the games commence, she thought with a wicked grin. \n\nAmazed that she was allowing him to continue, Brendan got slightly bolder with his tickling. He danced his fingers up and down her lower spine, before slipping them around to her hip, where he gently caressed and stroked her slender waist. \n\nRachel was rather ticklish, so was finding it nearly impossible to remain still. She occasionally twitched and jerked when he found a really sensitive cluster of nerve endings, but she tried her best not to move. His delicate touch was something she hadn't been expecting. It was starting to really turn her on. Especially as it was all happening right behind her oblivious boyfriend's back. Literally this time. \n\nBrendan could see that Rachel's thighs were starting to rub together. Even with his lack of experience, he knew he must be doing something right. \n\nHe moved his hand down onto her tight cotton shorts. Rachel gasped as she felt him lightly start to trace small circles with his fingertip, onto her now tingling ass cheek. It wasn't as ticklish as before, so she could cope with it more, but it still felt really nice to be treated with such a fragile tenderness. \n\nShe could hear Brendan's breathing quicken, and knew it was exciting him just as much as it did her. The thought that she was the first girl to ever let him do this to them, was a strangely thrilling one. Most men would've wanted to just grab her ass and pinch it hard, so it came as a rather pleasant surprise to be teased like this in such a delicate thoughtful manner. \n\nBrendan had to adjust his cock so that it was tucked up into his belt. Luckily his long baggy t-shirt hid his prominent bulge from view. \n\nHe thought Rachel was about to stop his fun when she reached her own hand back. But he was stunned when instead, she entwined her fingers with his and started to slowly rub their fingers together sensually. It felt truly incredible. His cock strained against his belt in a bid to break free. ",
        "Feeling like a king amongst men, Brendan brought his free hand up and resumed tickling her. Moving up to her upper back this time. \n\nRachel nearly melted into the floor as he smoothed the flawless skin of her shoulder blade with the back of his hand ever so lightly. He then ran his fingers from the middle of her spine, up to her neck, then down across her slender shoulder. She audibly gasped again as a ripple of pleasure ran down her back. \n\nAll of a sudden the bus lurched to a stop and two broad men pushed their way passed them. That was it, the moment was broken. She coughed, feeling rather self-conscious and unclasped her fingers from his. \n\nShe could feel Brendan's eyes burning into the back of her head for the remainder of the journey, but he made no further moves to touch her. It was confusing to her, just how much she wanted him to. His lack of teasing now felt in a way even more of a tease. What was wrong with her? She was the one who was supposed to be in charge of this game, not him. \n\n\"Right, everybody off.\" Aaron piped up when they arrived at their stop. \n\nA decision was made, without much input from Brendan, about which museum to visit first. His sole focus was on Rachel now. The entire world beyond the voluptuous curves of this incredible blonde bombshell, had faded into non-existence as far as he was concerned. \n\nBrendan couldn't have told you how far they'd walked or what the museum was even called once they got there. He'd been plodding along behind Rachel in a trance, staring at the incredible sway of her hips as she gracefully walked, hand in hand with his brother, in front of him. \n\nOnce they'd arrived, Brendan spent about half an hour pretending to be interested in a load of old statues, but he was getting rather bored. At least he knew that Rachel was feeling the same way he was. Every time Aaron started yapping on about this old picture or that dusty old vase, like he knew something about everything, (which was typical Aaron, he like to show off about how clever he was) Rachel would roll her eyes at Brendan and pretend to yawn when Aaron wasn't looking. \n\nHe'd spent a lot of time on his own the last few years. Once he'd become a target for bullies at school, the people he used to consider his friends, had all started to distance themselves from him. He knew his social skills weren't that great, so he was really enjoying his and Rachel's silent bantering. Even so, the one thing he wished for more than anything else, was some alone time with her. \n\nThat was when the miracle happened. Aaron's phone rang. \n\n\"Hi Mr Steele.\" Rachel's stomach lurched hearing Aaron mention his boss's name. She'd been trying to avoid his increasingly persistent attempts to contact her for months. Every week she'd get messages from him inviting her on lavish weekend breaks away, but she wasn't at all interested. As fun as it'd been, once was enough as far as she was concerned. \n\n\"No...no I can't right now. I'm in a museum with my brother, he's visiting for the...no but...how important? Well how long will that take? Ok, I'll see what I can do.\" Aaron hung up the phone shaking his head. \n\n\"I'm really sorry about this but I've been called in for a meeting. We've landed some big new Japanese clients apparently.\" \n\n\"Its fine you go on. We'll be ok.\" Rachel pecked Aaron on the lips. \n\n\"I should only be an hour or so. Shall I meet you back here?\" \n\n\"Yeah meet us here. We'll probably be in the coffee shop.\" Rachel had already seen enough tiny dicked statues for one day. \n\n\"All right then. Look after her for me little bro.\" Aaron hated the thought of having to leave Rachel alone with his weird little brother. She was going to be so bored. He could tell she was uncomfortable with the amount he stared at her too. He wanted to smack him around the head whenever he looked at her, but he knew he had to pretend to be nice. All he had to do was get through two more days and Brendan could fuck off back home and never come back for all he cared. \n\nBrendan couldn't believe his wish had come true. As soon as Aaron was out of sight he offered Rachel his hand, which amazingly she took. It may have meant nothing to her, but the fact that a girl was happy to be seen out in public holding his hand, meant the world to Brendan. \n\nIt was Derek and Maureen's 50th wedding anniversary today. They were both now 71 and had never had children of their own. So Derek knew that it was up to him to give his wife a special day out. He knew how much she loved the British museum. It was her favourite building in the whole world. Later on he had another surprise treat for her, he'd booked tickets to a west end show. It was going to be such a magical day. \n\nHaving made a rather early start. They'd been on their feet for ages and Derek was starting to feel tired. \n\n\"You go on dear. I'm just going to sit and rest my aching joints for a bit if that's ok.\" He sighed with relief when he finally sat down in a nearby chair. \n\n\"Can't we do the Egyptian room first dear?\" Maureen pleaded. \n\n\"I can't love. I'm pooped. Let me rest here for a bit and I'll meet up with you later.\" \n\n\"Ok dear.\" Maureen tottered off into the large adjacent hall. \n\nDerek was only sitting down for a few minutes when he saw her. \"It can't be.\" He breathed excitedly. \"Surely I'm imagining things?\" \n\nNot trusting his own eyesight any more. Derek walked towards the girl to get a better look. \"It bloody is you know.\" He mumbled to himself. \"It's the girl from the park!\" \n\nWhat on earth was she doing here? And why was she holding that young lads hand? He looked far too young to be her boyfriend, but if he was her brother, then he was much too old to need his hand held. Derek couldn't work it out. \n\nHe idled over and stood just behind them, listening in to their conversation. \n\n\"And this painting is nearly two thousand years old don't you know. Apparently Jesus Christ painted it himself while he was sat on the toilet.\" Rachel was doing her best impression of Aaron's lofty voice, which Brendan was finding hysterical. \n\nAfter the laughter stopped, they turned and looked at each other for a while. Rachel figured she should be the one to make the first move. She'd found herself oddly warming to Brendan in the last few hours. Sure he'd tried to blackmail her earlier, but she realised now that that was just because he was an awkward virginal teenager, who clearly didn't know how to handle his lustful urges towards her. Something she, probably more than anyone, could sympathise with whole heartedly. \n\nMaybe she was going about this all wrong? She'd been planning on toying with him, letting him know who was boss. However after his delicate show of affection towards her on the bus, it didn't seem fair to mess with his head now. She thought back to her first sexual experiences, none of which were very nice. It had taken her a long time before she'd started to enjoy having sex. \n\nThe power was in her hands to make all of Brendan's wildest dreams come true if she wanted to. She could ensure that his journey into adulthood was a much more enjoyable experience than hers ever was. The more Rachel thought about being the one to take someone's virginity, the more she warmed to the idea. \n\nOf course it wasn't as though it was an entirely selfless act of kindness on her behalf either. Now that she knew what an impressive specimen he was packing, maybe her mind was about to be blown to smithereens, as well as his. \n\n\"So...shall we look for somewhere a bit quieter? I think there's a few things you and I need to...talk about.\" Brendan nodded enthusiastically and let her lead the way. \n\nDerek was most intrigued now, so he followed them into the next great hall. \n\nThe museum was quite busy, but certain rooms were almost empty. Derek didn't have a clue what this oddest of couples were looking for, but it felt like he'd been walking for miles. \n\nHe was quite far behind, when he spotted them up ahead checking the coast was clear before hopping over a guard rail. When he finally caught up, he stopped to read the sign on the rail, it said: closed for refurbishment. He looked into the large empty room and couldn't see anyone. It was only when he looked back around the corner that he saw them over by the far wall. Who were they hiding from? He wondered. \n\nBrendan's heart was beating a mile a minute, as Rachel pushed him up against the wall and stepped up closely to him. \n\nGod she was so just so unbelievably beautiful. When she flicked her long blonde hair back over her shoulder it was like his world started moving in slow motion. The sunlight was beaming in through a high window, shining through her hair and giving it an added golden shimmer. Her bright glacier blue eyes were sparkling at him playfully. Then a waft of her fragrant floral perfume washed over him and he thought he might start to hyper ventilate. \n\nBrendan looked down into the deep valley of her magnificent cleavage. Her huge breasts were encased so enticingly in her cropped powder pink vest top. He could just make out the lacy pattern of her bra, straining against the tight stretchy cotton material. His palms were beginning to sweat as he thought about what it would feel like to finally hold her mouth-watering tits in hands for the first time. \n\n\"So, what were you saying earlier?\" Rachel purred. \"Something about wanting me to do something for you. How did you phrase it again? Ah yes...to buy your silence?\" \n\n\"I...I might have done. B...But you said you don't like being told what to do. So...so...\" \n\nRachel felt like a cat who'd cornered a terrified little mouse. His earlier tough guy act was long forgotten now. \"I say a lot of things. We'll never know whether or not I might like it, unless you tell me what it is you want from me first?\" \n\nBrendan stuttered and stammered, trying to force his brain to think coherent thoughts, but up close her staggering beauty was overloading his racing mind. \n\n\"Don't be scared. What happened to the self-assured assertive Brendan? The one who was sat on the sofa earlier? Don't get me wrong. I never want you to lose your softer gentle nature, that's what makes you special. But every now and then you need to be a bit assertive. It's the only way to get what you want in life. So tell me Brendan...what is it you want?\" Rachel had moved even closer now. She felt Brendan tense up as she pushed her body lightly against his. Her full plump lips were inching closer to his now, as she breathed the words into his panting mouth. \n\n\"I...I want...I want...\" Brendan gulped deeply. \"I want to kiss you.\" \n\nRachel didn't reply. She moved her lips slowly towards his, until they faintly touched. Then she brushed his bottom lip with her own, encouraging him to make the first move. \"Have you ever kissed a girl before Brendan?\" She sighed breathily. \n\n\"N...no...\" He couldn't believe that he was actually about to. \n\n\"Just relax and follow my lead.\" With that Rachel closed her eyes, locked her lips over his and kissed him. \n\nBrendan's eyes were still wide open in shock. He didn't have a clue what he was doing, so he just let her kiss him for a while. Her lips were as soft as silk and they tasted like strawberries. \n\nAt first it felt like an out of body experience. This couldn't be happening? Not to him surely? After wrestling his floating mind back into his body, he puckered his lips and did his best to kiss her back. \n\nThey took it slow to begin with. The kisses were shallow and brief but felt heartfelt and tender at the same time. Rachel didn't want to rush him straight into using tongues. She was enjoying the sweet innocence of their embrace more than she'd expected to. \n\nAs far as she knew, she'd never been somebodies first kiss before. It was strangely exciting. Her own first kiss had been dreadful, it was all teeth and wagging tongues. She was determined that he was going to have a much better memory to look back on. \n\nBrendan had been feeling sick with nerves to start with, but gradually he started to relax and enjoy the wonderful experience for what it was. He was really kissing a girl! And not just any girl, a sexier girl than even his wildest fantasies could ever dream of conjuring. It felt better than mere words could describe. \n\nRachel had never had to stoop this much to kiss someone before either, but she didn't care how short or how young looking he was anymore. He was 18, there was nothing wrong with what she was doing. Well there were about a thousand things wrong it. He was her boyfriend's little brother being the main one, but those thoughts could be shut away for the time being. \n\nTheir lips were more tightly locked together now. Brendan felt the tip of Rachel's tongue start to brush against his and he returned the gesture. \n\nSoon they were starting to kiss more deeply. Rachel was stunned by how quickly he was picking things up. He was actually pretty damn good for a first timer. \n\nBefore long their tongues were dancing, swirling and entwining within each other's mouths, for what felt like an age. \n\nRachel instinctively pushed her body more tightly against his, as she felt his hands take a hold of her exposed waist, rubbing and gently smoothing her warm ticklish skin. \n\nShe moaned into his mouth with desire, as his hands slipped lower and gently cupped her pert peachy bum. Allowing herself to get lost in the moment, Rachel ran her fingers up through his hair as their coupling became more and more heated and feverish. \n\nRachel finally had to pull away, if only to catch her breath for a bit. She giggled at the dumbstruck look that now adorned Brendan's face. \"Hmmm...that wasn't bad.\" She fibbed, more because she didn't want to admit to herself how good it'd felt. \"I'm sure we can work on it though.\" She gave a now grinning Brendan a playful wink. \n\n\"You're telling me it can get better than that?\" Brendan asked with genuine interest. Surely nothing could top a kiss that passionate. \n\nDerek pretended to study the painting nearest the guard rail with interest whenever other people entered the room, but as soon as they left he'd sneak a peek back around the corner at the oddly matched lovebirds. \n\nThat day in the park a few months back, had been one of the greatest experiences of his entire life. He remembered every detail of it like it was yesterday, probably because that memory had been playing on a permanent loop in his brain ever since it'd happened. Why or how he'd got so lucky, he still couldn't fathom. \n\nHe could remember sitting on the park bench watching his wife throwing bread to the ducks. They'd been making the same trip every week for the last few years, it had sort of become their routine. But then out of the blue, she was there. His golden haired angel. She'd stopped to tie her shoe on the bench and he recalled his eyes being instantly drawn to her huge tits, swaying so tantalizingly in her tight Lycra top as she bent over beside him. He'd always loved big breasted women, but he'd never had any experiences with one before. \n\nShe'd caught him staring gormlessly at her chest, but rather than be cross with him for his lechery, she'd told him unbelievably, that he could touch them if he liked. Those words still rang in his ears to his day. \n\nHe'd never felt anything like them. They were so soft and pliant, yet retained a firmness which only came with youth. It had been the first time Derek had felt his cock come alive in nearly a decade. \n\nHe'd returned to the park at the same time every week since then, looking around hopefully for his beautiful blonde Aphrodite, but she'd never come back. Derek had begun to think he would never see her again, but yet here she was. His gorgeous angel had returned from the heavens. \n\nWhy on earth she was kissing such a young nerdy looking boy? Was another mystery Derek feared he'd never unpick. \n\n\"So Brendan, what else do I have to do to earn your silence?\" Rachel could tell by the way his eyes wandered down her body, exactly what he wanted to do next. \n\n\"I want to touch your breasts!\" He blurted the words out excitedly this time, already reaching up to grab them before Rachel pushed his hands away. \n\n\"Easy tiger. Not so fast.\" Rachel switched positions with him so that she now had her back to the wall. \"You really like my tits don't you?\" She cooed knowingly, running her own hands over them lightly, as she watched him begin to shake with nervous anticipation. \n\nBrendan's eyes widened with lust when he saw her small nipples stiffen through her tight top. \"They're amazing.\" He mumbled whilst gulping down the saliva which had begun to pool in his mouth. \n\n\"You've been staring at them constantly since you arrived yesterday. Tell me, how many times have you wanked yourself silly, thinking about what it would be like to squeeze my big tits?\" \n\n\"Oh god, so many times!\" He again reached for them, but Rachel patted his hands away for the second time. Brendan's cock was painfully hard, it twitched and jerked madly under the restraint of his belt. \n\n\"Tell me more. I want to know why you like them so much.\" Rachel purred, as she cupped her breasts lightly and jostled them teasingly in front of Brendan's huge bulging eyes. \n\n\"Do you want the truth? God this is embarrassing.\" Brendan took a deep breath. \"I've been fantasizing about them for ages if I'm honest. Well not just about them, but about you. Long before I ever met you.\" Rachel raised her eyebrows curiously at this new revelation. \"This is going to sound creepy as hell, so I'm sorry about that. But I've...I've been looking at your photos on your Facebook page for nearly six months now. I'm sorry I know that's weird. But you're just so beautiful...I...I couldn't help myself.\" \n\n\"My photos? Which ones?\" \n\n\"All of them! I like the ones from your holiday to the Canary Islands the best. I've cum hundreds of times, fantasizing about you in that skimpy red bikini.\" Why had he told her that? It sounded even worse hearing it out loud. \n\n\"Oh my god! You horny little bugger!\" Far from be repulsed, Rachel found his confession to be a massive turn on. Thinking about him pumping his huge cock over her photos, made her panties dampen instantly. \n\nWithout saying a word, Rachel lowered her arms to her sides and waited. Brendan met her stare and knew that she wouldn't push his hands away this time. \n\nHe couldn't stop from shaking as he reached up and gently laid his hands on a pair of breasts for the first time in his life. \"Huh...wow!\" He sighed as his fingers slowly sank into her soft flesh. \n\nRachel was relishing the pained look of lust that was etched into his every feature, as he squeezed her breasts together more firmly. Brendan stared in amazement as her incredible tits swelled up in her top and he got a teasing glimpse of the edge of her bright pink bra cup underneath. \n\nHe released them, letting gravity do its work, before scooping them up again and wobbling them more vigorously. This was the greatest day of his life. It more than made up for the years of bullying he'd had to endure. None of those bullies would ever get an experience like this as long as they lived. \n\nRachel let him explore every inch of her ample bosom. Cupping, wobbling, squeezing and pinching as he went. She loved having her sensitive breasts man handled anyway, but knowing that she was fulfilling one of his greatest fantasies made her insides melt that little bit more. She reached between her legs and started to slowly rub her throbbing pussy through her thin cotton shorts. \n\nRachel gasped and chewed her lip, when Brendan pinched her nipples through her top. \n\nWithout really realising what she was doing, acting purely on instinct, Rachel found herself unbuckling his belt and pulling open the poppers of his jeans. \n\nBrendan froze in shock when he felt her slender fingers wrap around his hard shaft and pull his dick free from his boxers. ",
        "Unfortunately for Brendan, he was so excited that after only a few short strokes, he knew that he'd already passed the point of no return. He suddenly panicked, letting go of her heaving breasts, he tried to pull her hand away but it was too late. \"UH! OH NO! OH NO! UUHHHH!\" Cum started erupting from his tip with such force that he nearly blacked out. What felt like gallons of the stuff splattered onto the marble floor by their feet, as his cock twitched and jerked in her grasp. \n\nRachel was just starting to enjoy stroking his meaty monster of a cock, when it'd gone off like a rocket. It wasn't too much a surprise, this had happened to her many times before, and besides he must have been permanently hard for hours already, she thought. \n\n\"I'm sorry...I...\" \n\n\"...Ssshhh.\" Rachel interrupted, kissing his lips tenderly. \"Don't worry about it. It's best to get the first one out the way. It'll make you last a lot longer next time.\" \n\nBrendan was thrilled that she'd said next time. It somewhat softened his embarrassment. \n\nSuddenly an almighty clanging noise echoed around the walls of the large empty room. Derek had been leaning too far forwards to get a better view and he'd lost his balance. He fell through the rope barrier bringing the two metal support poles with him. \n\nRachel's immediate reaction was to rush and help the old man to his feet, while Brendan turned in the opposite direction and hurriedly stuffed his wilting cock back into his trousers. \n\n\"Oh my god! Are you ok?\" Rachel offered her hand to the prone old man who lay flat on his face in front of her. \"Shall I call for help?\" She scanned the main room, but it was currently empty. \n\nDerek looked up at Rachel and his gaze was instantly drawn to her magnificent cleavage. Her tightly confined breasts swung gently before him as she bent double at the waist to help him up. \n\nFor a few seconds he couldn't find his voice, all he could do was stare gormlessly down her top. Then a twinge of pain shot down his spine and he winced. It was enough to break the spell and he regathered his senses. \n\n\"Oh ouch.\" Derek grimaced as he took Rachel's hand. \n\n\"Are you hurt? Do you think you can stand up? Or shall I go and find a medic?\" Rachel looked concerned for the old man. It hadn't yet dawned on her why he'd fallen over the rail. \n\n\"Ow. Oh don't worry dear, I'll be fine.\" He let Rachel pull him to his feet. Nothing felt broken, except for his pride maybe. \n\n\"You are kind. Thank you my dear. I really must watch were I'm walking. I'm a clumsy old fool, I really am.\" \n\n\"Don't be silly.\" Rachel smiled at him. \"The important thing is you aren't hurt.\" \n\n\"No I'm just a bit shaken that's all.\" Rachel slowly walked him back to where Brendan was standing. \n\n\"Are you here with anyone? Would you like me to go and find them for you?\" She enquired kindly. \n\n\"I think he was watching us.\" Brendan interjected bluntly. Rachel had been too distracted by his welfare to notice, but Brendan spotted the tent in the old man's trousers straight away. He pointed down at the old man's crotch and Rachel raised her eyebrows in surprise. \n\nDerek's hands quickly covered his obvious arousal, but it was much too late. \"Oh erm...anyway...I best be off. Thanks for...\" \n\nRachel's eyes had returned to the old man's face. There was something oddly familiar about him. Did she know him from somewhere? As Derek went to leave she stepped in front of him, blocking his path. \"Hang on a minute. Have we met before?\" \n\n\"Um...\" What should he do? Should he just tell her the truth? \"Yes...well sort of. I was in the park a few months ago...and you...\" Derek was feeling rather flustered and a bit embarrassed now, having been caught in the act of perving. He kept looking towards the exit, which was over Rachel's left shoulder. \n\n\"...AHA! That's it! That's where I know you from. You're the old man on the bench who I let play with my breasts. That was you wasn't it?\" Rachel poked Derek in the chest firmly with her index finger, backing him up a few steps against the wall. \n\n\"What?\" Brendan couldn't believe his ears. Were there any old men in this city she hadn't already seduced? \n\n\"Yes that was me.\" Derek looked down at his feet as a warm flush of embarrassment reddened his cheeks. \n\n\"Wow, what a weird coincidence. Hey...\" Rachel narrowed her eyes at him. \"...You haven't been stalking me have you? Because that's really fucking creepy.\" \n\nDerek shook his head profusely. \"Stalking? No no no! I'm not a stalker. Honestly I'm not. I just happened to see you back there in the museum. I won't lie, I've thought about you a lot since that day, so I followed you both. But that was the first and only time I've ever followed you. I swear it.\" \n\n\"So you were watching us just now then? That's still rather creepy you know.\" \n\n\"I know it is. I'm sorry. I'll leave and you'll never have to see me again I promise. I didn't mean to pry. Honestly I didn't. I was just curious and then things started happening...and...I'll go now and leave you two alone.\" \n\nRachel thought back to the pained look of lust the old boy had given her while he groped her big tits behind his oblivious wife's back in the park. This was a strange twist of fate if ever there was one. Here she was with two men at the complete opposite ends of the age spectrum, both of whom now had a history of spying on her. Derek looked a bit older than any of the men she'd been with up until now. Maybe that was because he was standing next to a spotty faced teenager though, she reasoned. \n\nIt quickly dawned on Rachel that even though she'd decided not to be mean and tease Brendan like she'd planned on doing. She'd now been suddenly gifted a perfect opportunity to do just that. Should she take it? \n\nIt didn't take long for her to make up her mind. \n\n\"You're a dirty old man. You know that don't you?\" Rachel teased. \n\n\"Well I...I wouldn't exactly...\" Derek spluttered. \n\n\"...You are a dirty old man.\" Rachel interrupted. \"But luckily for you Brendan here has been getting a kick out of watching me having some fun with dirty old men for the last few days. Isn't that right Brendan?\" Rachel turned to look at Brendan who now couldn't meet her playful stare. All he could do was nod shyly at his feet. \n\nDerek thought he was about to have a panic attack as Rachel pushed him up against the wall and stepped towards him. What did she mean by 'having some fun with dirty old men?' Was this really happening? \n\n\"How rude of me, I haven't even introduced myself. I'm Rachel by the way. And you are?\" \n\n\"I'm D...Derek.\" \n\n\"Nice to meet you D...Derek.\" Rachel mocked his nervous stutter, before sensuously planting her lips over his. The kiss was affectionate but brief. She wanted to tease Brendan, but she also wanted him to know that she didn't kiss everyone with the same level of passion she'd just shared with him. \n\n\"You like my tits, don't you old man?\" She brought Derek's hands up and placed them on her chest. Unlike Brendan he immediately began to roughly squeeze and maul her huge sensitive orbs. \"Oh my goodness yes. They are truly marvellous my dear.\" He happily croaked out the words, unable to process what was happening to him yet again. \n\n\"Well I think you deserve a better look at them this time.\" With that Rachel pushed Derek down into a squatting position. She then took a hold of the bottom of her vest top and pulled it up over the old man's head. Luckily the top's material was stretchy enough to fit Derek's head beneath it. \n\nBrendan looked up for the first time. He could see a few sprouts of the old man's grey hairs poking up though the neck line of Rachel's powder pink vest top, but apart from that the old boys head was completely submerged beneath it. As much as he'd been enjoying having Rachel's company all to himself. He knew deep down that she preferred older men. She was only being nice to him earlier and this was what she really craved. So he soon found his jealousy beginning to subside. He even cracked a smile when he saw Rachel begin to giggle happily as she stared down her top, watching the old boy as he started to rapidly motorboat her huge tits. \n\nHe listened to the excited man's moans of pleasure as he thrashed his head from side to side. It was enough to cause his own cock to throb back to life as he pictured the joy on the old man's face. \n\nDerek was in seventh heaven. He happily rubbed his face into the soft valley of Rachel's deep cleavage. Kissing and licking her smooth warm flesh as he went. \n\n\"Yeah suck on my tits you dirty old bastard!\" Rachel taunted as she felt Derek reaching up under her top and begin to wrestle down her bra cups. \n\nThere wasn't much room to manoeuvre under her top, but he eventually managed to pull her magnificent weighty orbs free from their confines. \n\nDerek instantly set about sucking and chewing on her hard little nipples, before burying his face in-between her tits again, slobbering like a hungry dog. \n\nRachel pulled his head hard against her chest, as she felt him inhale one of her sensitive nipples into his mouth once more. \"Ungh! Oh yeah! Oh you bad boy!\" She sighed. \n\nDerek looked rather disappointed when moments later Rachel put an abrupt stop to his fun. \n\nBrendan couldn't help but laugh when Derek pulled his head free from Rachel's top. All that rubbing had caused some static electricity to build up and his thinning grey hair now stood out on its ends. He looked like a mad professor. \n\n\"Would you like to watch me suck Derek's cock Brendan?\" She could tell that Brendan was getting hard again, he was now playing with the rapidly growing bulge in his jeans once more. Admittedly she would probably prefer to have his monster of a cock in her mouth more than Derek's, but the opportunity to tease him some more was one she couldn't pass up. Besides, it would make it that much sweeter when she finally did have his throbbing tool lodged in her throat later on. \n\n\"Oh yes! You would like that wouldn't you lad?\" Derek was already hurriedly unbuckling his belt and pulling down his trousers. \n\n\"I wasn't talking to you.\" Rachel chided Derek. \"I want to hear it from Brendan.\" \n\nBrendan looked into the old man's beseeching eyes then back into Rachel's, which sparkled with mischievous intent. \"Yeah I'd like that a lot.\" It was a bit of a fib, but he knew it was what she wanted to hear. \n\nWith that Rachel squatted to her knees and pulled Derek's twitching six inch cock up to her pouting lips. \n\nDerek's heart was racing a mile a minute and he thought for one maddening second that he was about to have a heart attack, as Rachel parted her beautiful lips and slipped his aching member into her soft warm mouth. \n\n\"Oh god!\" Derek let out a wispy groan as Rachel sank his entire cock into her tight throat. She instantly set about deep throating him again and again, plunging her lips down to his base and then sucking hard as she drew them back. \n\nRachel kept her eyes locked on Brendan's the entire time. She wanted him to know it was his cock she was really hungry for not Derek's. This was just a show for his benefit. \n\nDerek was muttering something incomprehensible, as he watched his busty blonde angel feasting worshipfully on his old throbbing tool. His arms were flapping at his side to begin with, but he soon took a hold of Rachel's head and held her tightly as she fucked him with her mouth. \n\nRachel swirled her tongue around his shaft, bathing it in her saliva, before resuming her feast. \"Do you like fucking my pretty face Derek?\" She goaded mercilessly, finally looking up at him for the first time. \n\n\"Oh yes. You're such an exquisite beauty my dear.\" \n\nRachel liked that compliment. For that he deserved a treat. She wanked his shaft vigorously while dipping her head lower to suck on his very wrinkly old balls. \n\n\"Oh my days. Oh my word. Oh that's wonderful!\" Derek panted. \"They didn't make girls like you in my day! OH MY GOD!!\" \n\n\"Today is your day.\" She teased with a wink. \n\nRachel pushed herself up a bit higher and slapped Derek's cock against the top of her bountiful cleavage. The she pushed his dick down into the deep valley between her breasts. \"Yeah fuck my tits old man. You know you want to!\" \n\nIndeed he did. Derek found it awkward at first having to squat down to push his cock deeper between her phenomenal breasts. But he soon found an acceptable rhythm. The sensations coursing through his body were too pleasurable to even cope with. \n\nDerek wasn't going to last much longer. Rachel could tell by the grimace on his face that he was nearly peaking. Giving it one last big effort, she inhaled his cock back into her mouth again and began sucking rapidly. \n\n\"Ahhhh! Oh you lovely young thing you. Oh wow. OH WOW! AAAAHHHH!\" Derek slumped forwards as his dick erupted into her welcoming throat. It was the first time he'd had an orgasm in years and his knee's nearly buckled under the force of it. \n\n\"Oh honey! Oh you gorgeous girl!\" Rachel was meticulously cleaning his shrinking tool as she gulped down his salty seed. When she was happy he was fully spent, she popped him back into his trousers and stood herself up. \n\n\"You have no idea what that meant to an old fella like me. Thank you so much. Thank you both so much\" \n\nBrendan wasn't sure what he'd done to deserve such praise. He was now as hard as a rock once more though. As much as he'd enjoyed watching another of Rachel's erotic displays, the knowledge that this time he would be getting a turn was causing him to visibly shake with anticipation. \n\n\"Is it my turn now?\" Brendan asked with a beaming grin. Unable to hide the eagerness in his voice, as he prepared to receive his first ever blowjob. \n\nHe was just about to undo his belt, when a voice beckoned to them from across the empty hall. \"Hey you can't be in here. This section is closed to the public.\" \n\nRachel looked down in a panic, relieved to see that they were all fully dressed. Although she had to turn away briefly to wrestle her breasts back into her bra cups, beneath her top. \n\nHer mind went blank trying to think up an excuse, but fortunately Derek came to their rescue. \n\n\"Sorry sir. That was my fault.\" He waddled over to the security guard, making it look like he was more decrepit than he actually was. \"I got a bit lost. It's been happening quite a lot of late unfortunately. But thankfully my grandchildren here managed to find me.\" \n\n\"Don't worry sir. I'm glad you're ok.\" He looked at the beautiful blonde with an hour glass figure, and then at the short spotty geek by her side, wondering how on earth they were related to each other. \n\nThe guard lifted the rope and ushered them through. He couldn't help but check out Rachel's phenomenal figure as she strode passed him. The low whistle he let out was noticed only by Rachel, who turned and wrinkled her nose at him flirtatiously. \n\nShortly afterwards, they said their fond fair wells to Derek. It took a while as he couldn't stop shaking each of their hands repeatedly and thanking them both over and over again. \n\n\"We should find another quite place don't you think?\" Brendan asked excitedly after Derek had wandered off to find his wife, with a noticeable skip in his step. \n\n\"Why?\" Replied Rachel teasingly. \n\n\"You know...so we can...\" \n\n\"Ha! I'm afraid you're just going to have to hold it in mate! No way can we risk being nearly caught out again. Aw don't worry...\" She could see Brendan's face turning south as a sad expression washed over it. \"...you'll get your turn. I promise.\" \n\nHis mood quickly lifted upon hearing that. Rachel took him by the hand again and led him towards the gift shop. \n\nThey decided to sit in the coffee shop for a while and wait for Aaron to return from his meeting. Brendan was pleased that Rachel was chatting away merrily like nothing between them had even happened. \n\nIt was then that something occurred, which made Brendan realise what truly polar opposite lives they both led. A skin headed youth, who looked about 20, swaggered up to their table and told Rachel that she should ditch the loser and come and have some fun with him. Rachel had responded by telling him to go fuck a thimble instead and he'd stormed off calling her a fucking dirty tramp and a slag. \n\nBrendan had never been in fight before. He'd been punched many times, but he'd never fought back. He stood up, wanting nothing more than to punch the guy's lights out, even though he was about twice his size. Rachel ushered him back to his seat, telling him to ignore it and that guys like that didn't bother her. \n\n\"Does that happen very often?\" Brendan couldn't hide the angry shake in his voice. \n\n\"No, not that much. I get stared at a lot, but people are generally quite respectful. People like him are just scum. The can crawl away and rot in their own filth for all I care.\" \n\nBrendan had lived his life being permanently overlooked by everyone around him. Sometimes he felt like he was completely invisible. But then by contrast Rachel had to cope with the reverse experience. Everyone in the room noticed her and evidently that wasn't always a good thing either. He sometimes wished he could be the centre of attention for a change, but now that he thought about it, he started to sympathise with things from Rachel's perspective. He'd been bullied all his life because of how he looked, but she'd also had to put up with a lot of grief, just because she was beautiful. \n\nThey sat and drank their coffees with no more rude interruptions until Aaron arrived. \n\nAaron had insisted on dragging Brendan around all of London's biggest attractions for the rest of the day. Clearly for Rachel's benefit not his. He obviously didn't realise that London's most attractive attraction was standing right there next to them the entire time. \n\nBrendan and Rachel enjoyed having little flirting sessions whenever Aaron's back was turned. He'd pinch her bum or she'd grab his crotch and then they'd act all innocent as though they were listening intently to what Aaron was saying. \n\nRachel was feeling really fired up. When Aaron nipped off to use the restroom for a few minutes, she pounced on Brendan and kissed him heatedly until both their lips were chapped. \n\nIt was pure torture for Brendan, but he suffered it with a smile. Aaron was sticking to them like glue, trying to make it up to Rachel, for leaving her alone with his awkward excuse for a brother for so long. \n\nThey ate dinner that evening in a nice Italian restaurant. As soon as they sat down, Rachel teasingly rubbed her foot into Brendan's groin under the table. Unfortunately it caused him to spill his full pint of Coca-Cola everywhere. \n\n\"Oh you stupid fucking idiot! Why do you always have to be such a clumsy little prick? You shouldn't go out in public if you can't behave like an adult!\" Aaron ranted, when some of the spilt drink dripped onto his lap. It was the first time that his happy brotherly bonding fa\u00e7ade had slipped in front of Rachel. \n\n\"It's only a drink Aaron. Take it easy. Now apologise to Brendan.\" Rachel was shocked by her boyfriend's angry outburst. It wasn't like him to lose his temper. She looked over at Brendan, who was looking at the ground, appearing to have disappeared back into his shell again. \"Sorry bro.\" Aaron huffed, dabbing at his wet trousers. \n\nBrendan looked withdrawn and sad for the remainder of the meal. She tried to gently play footsie with him again, which brought a brief smile to his face but it didn't last long. \n\nThey got back to the flat at about 8:00 that evening. Aaron had remained in a foul mood with Brendan since the meal. He wanted nothing more than for his weird little brother to go home already. He'd long since worn out his forced invitation. \n\nRachel hadn't liked her boyfriend's outburst and was liking his hostility towards Brendan now even less. Every time Brendan tried to speak to either him or to Rachel, Aaron would shut him down, pretending like he wanted to hear the TV. She noticed how quickly Brendan gave up trying and felt sorry for him as he rocked in his seat twiddling his toes awkwardly. ",
        "She tried striking up a few conversations with him, but Aaron shut those down too. \n\n\"Look your brothers only here for one more night. Do we have to watch the TV? Why don't we play a game?\" She suggested. Rachel saw how Brendan's eyes lit up to this suggestion. \n\n\"I'm tired babe. Let's just watch this film. I can't be bothered with any stupid games.\" \n\n\"What has gotten into you this evening? You're never like this?\" Rachel was getting more annoyed with him by the second. \n\nBrendan knew full well what was up with him. He'd got bored pretending he cared whether Brendan lived or breathed. This was the Aaron he knew all too well. \n\n\"I need a drink.\" Aaron got up and poured himself a large glass of wine. Offering one to Rachel, but noticeably not anything to Brendan. \n\n\"No thanks. Brendan do you want anything?\" Rachel kindly offered. He shook his head, smiling back at her. \n\nRachel was privately quite relieved that Aaron had started drinking. If she could convince him to drink enough then she might get to play a \"game\" with his little brother tonight after all. \n\nThey ended up watching some rubbish action movie for a few hours. Every time Aaron's glass looked a bit empty, Rachel would sneak some more wine into it. \n\nOne bottle turned into two and before they knew it Aaron got up to go to the loo, but then fell back onto the sofa. \"Blimey, how much have I had to drink?\" \n\nStill he insisted on staying up and watching more crap TV. Making everyone else uncomfortable by the forced silence. Eventually sometime after mid-night Aaron called it a day. \"Damn it, I'm too drunk...must sleep! You coming babe?\" \n\n\"Goodnight.\" Brendan called out, knowing Aaron wouldn't reply. \n\n\"I'll be right there!\" Replied Rachel. Then in a much lower whisper, she turned to Brendan. \"I don't know what his problem is, but don't fall asleep.\" With that she followed her boyfriend into the bedroom. \n\nBrendan was suddenly a ball of excitement again. He bounced up and down in his seat, wringing his hands in glee. After pulling out the sofa bed, he had a quick shower and brushed his teeth. \"Tonight is the night.\" He mouthed the words to himself in the bathroom mirror, before splashing some of his brother's aftershave onto his cheeks. \n\nAt first he stripped down to his boxers, but then he got worried that she might not like his skinny pigeon chest, so he put his t-shirt back on. He tried to lie on the sofa bed, attempting to look relaxed, but he tossed and turned non-stop, unable contain his excitement. \n\nThe minutes ticked by, each one feeling like an hour. \n\nAfter a while he stopped staring at her door, willing it to open. A watched pot never boils after all, he thought. \n\nTick, tock, tick, tock. Still nothing. \n\nBrendan started to question whether this was all part of some elaborate joke on his behalf. Was she just playing with him? Was this his punishment for perving on her? \n\nThe truth was Rachel was struggling to get Aaron to fall asleep. He'd decided he was horny for once in a blue moon and refused to leave her alone until she eventually relented and gave him a quick handjob. Then he wanted to talk and snuggle. It was nearly an hour before she eventually heard him begin to snore loudly beside her. \n\nBefore now she'd been dreading the thought of breaking up with him tomorrow. But after his rude behaviour this evening, it was now somehow less daunting. She didn't know what was wrong with her boyfriend but she definitely didn't like this new side of him. He might not have known it, but for her, their relationship had already been over for a while already. Only the trepidation she felt about her future had kept her here this long. \n\nNothing was going to spoil her fun this evening though. She'd promised herself that she was going to be the one to take Brendan's virginity and it was a promise she was looking forward to keeping. \n\nRachel had already planned on what she was going to wear. Something Brendan had mentioned earlier had given her the idea. She flicked on the lamp on her bedside table and rummaged around in her drawers looking for it. \n\nBrendan was about to give up and go to bed when Rachel's door eventually creaked open. \n\n\"Holy fuck! What?\" He whispered excitedly. The room was quite dark, bathed only in the warm orange glow from a dim lamp in the far corner. \n\nHis jaw slowly lowered when Rachel strode into view. She was wearing her skimpy red bikini. The one from her Facebook photos. \n\n\"Sorry I was so long.\" She purred in her sexiest sultry voice. \n\nBrendan's mind had all but turned to mush. He tried to speak but no words came out. His eyes were drawn to her incredible breasts. The bikini didn't support them like a bra would, so he could see their true size and shape. They jiggled about on her chest as she slowly walked towards him, moving like they would if she were naked. \n\nRachel didn't want to waste time with small talk. She knelt on the bottom of the sofa bed and crawled towards him on fours, again feeling like a cat who was stalking its prey. Brendan realised he was shrinking back into the back rest, unsure whether it was through fear, through nerves or just in sheer disbelief. \n\nHis cock was tenting so high in his boxers it looked almost silly. His meaty rod was pulling his waistband so far away from his chest that it almost sprang free by itself. \n\nThat was when Rachel pounced. The passion and the ferocity of her kiss took Brendan's breath away. He barely had time to inhale a lung full of air before she was savaging his mouth with her own once more. \n\nShe bit and chewed on his lip, then gnawed his chin before twisting his head to the side. Brendan's head started to swoon and he suddenly felt dizzy as Rachel dragged her tongue up his neck, then started to suck on his ear lobe. \n\n\"Do you like what I'm wearing?\" She breathed into his ear, before nibbling his ear lobe again. \n\n\"You know I do!\" Brendan turned his head back to face her and kissed her hard. Putting into practice his earlier lessons. \n\n\"Mmmm, you're getting rather good at that.\" Rachel mewed. \n\nShe lowered her body down on top of his and they kissed passionately, exploring one another's mouths with their tongues. Rachel could feel his giant cock throbbing beneath her. The thought of having it slamming inside of her was enough to make her head spin. She was excited, but even though she was the experienced one out of the two of them, even she couldn't help feel a little nervous as she straddled it. It felt unnaturally huge. \n\nBrendan started running his hands gently up and down her sides. She squirmed at the ticklish caress, grinding herself harder and harder against his python of a cock. \n\nRachel sat up and took hold of his hands, placing them onto her breasts. She beamed at the way Brendan's face lit up as he began to tenderly massage them. \n\nShe very slowly slid the cups of her bikini along the string to the sides. It was the first time Brendan had gotten a proper look at her naked breasts up close in the flesh. This time he was the one they were being offered to, not some old man. He gawped in open mouthed wonder at their spectacular size and shape. \"They're all yours.\" Rachel whispered. \n\nShe wasn't expecting what happened next. Most men wanted to just squeeze and maul her tits like they weren't even attached to her. Not that she minded them being treated roughly, in fact she loved it. But Brendan apparently wasn't most men. He ran the very tips of his fingers so lightly over them, that she instantly felt goosebumps flourish over her skin. Brendan continued to tease her with his gentleness, circling around her nipples but never once touching them. \n\nBrendan wasn't even teasing her intentionally. He was just so in awe of her. It was like being allowed to touch a priceless piece of art. Gently and delicately seemed like the most rational approach to him, when presented with a sculpture of such beauty and perfection. \n\nBefore long Rachel was writhing in pleasurable torment. Her stiff sensitive nipples were beginning to ache, longing to be touched. When at last he did lightly brush over them, her body spasmed and she moaned deeply. \n\nOnly then did Brendan begin to squeeze her soft pliant tits with slightly more force. Rachel had to stifle a scream, when he rolled her nipples between his fingers, pinching them gently. \n\nThe teasing was almost too much for her to handle. Wasn't she supposed to be the one to tease? Rachel lowered herself back down onto him, pushing her breasts up towards his face. \"I want you suck on my tit's Brendan. Please Brendan suck on my big juicy tits.\" Brendan loved it when she called him by name. He was unable to even process the pleasure he was in. It felt like a dream. The best dream he'd ever had. \n\nHe went to latch on to one of her incredible swaying breasts, but just as he was about to inhale her soft flesh into his mouth, Rachel pulled herself back an inch. He tried again, but with the same result. It was her turn to tease him for a change and she was relishing every second of the confused lust his face was displaying. \n\nAfter a failed fourth and fifth attempt. Brendan laid his head back on the pillow. \"Aw I'm sorry.\" Rachel purred. \"Here you go baby.\" Rachel pushed her left breast into his open mouth. He instantly clamped his lips around her already tingling nipple and grabbed her breasts firmly with both hands to keep her from backing away again. \n\n\"HUH! Oh yes! Mmmm that feels nice!\" Rachel breathed the words softly, trying to remain as quiet as possible so as not to disturb Aaron. \n\nShe watched intently as Brendan suckled on her nipple like a hungry baby, before moving onto her right breast and repeating the process. \n\nWhen he was finished, Rachel smothered his face between her tits until he was gasping for air. \n\nOnce she'd pulled her breasts away, she didn't let him breathe for long. Locking her lips over his she kissed him deeply for what felt like an age. \n\n\"Just lye back and relax, ok?\" She whispered to him, running her tongue down his neck, before nibbling on his collar bone. \"O...ok...\" Brendan replied in an exhilarated stutter. \n\nRachel pulled his t-shirt up over his head. Then moving very slowly, she started planting a series of long sensual kisses all the way down Brendan's skinny little chest. When she got to her prize, she pulled his boxer shorts down and threw them over her shoulder. \n\n\"Oh my god it's so fucking huge.\" She whispered, as she watched his mammoth member twitch and flex wildly in front of her still disbelieving eyes. \n\nBrendan being Brendan had always considered the size of his dick to be yet another unattractive aspect about him. He wasn't stupid, he knew it was big compared to most peoples, but he thought that that was a problem not a positive attribute. He'd stopped reading a blog about penis length, when the first few women were discussing how painful large cocks could be. \n\n\"You don't think it's too big then?\" He asked imploringly. \n\nRachel shook her head slowly, still trying to take in every detail of its impressive length and girth. \"How big is it?\" She asked a worried looking Brendan. \n\n\"I don't know, I haven't measured it in a while.\" He lied. \"I think it's about nine and a half inches. Is that ok though? That's not normal is it?\" \n\n\"Not normal is a good thing...trust me.\" With that Rachel kissed his large purple tip and Brendan fell deathly silent. \n\nHe could feel tears beginning to burn in his eyes as he watched the most beautiful girl he'd ever seen, lovingly kiss and lick his throbbing bell. He urged himself to get a grip. Why did he feel like crying? Get it together! He inwardly screamed. This was his time to be...a man! \n\nRachel wrapped her hand around the thick base of Brendan's cock. She could only just fit her fingers around it. Then she started to suck the first few inches of his meaty tool into her soft warm mouth. \n\nBrendan knew he couldn't watch for long or he would cum even quicker than before. He laid back and stared at the ceiling for a while, trying to stop his vision from blurring as his body was subjected to the most incredibly pleasurable sensations imaginable. \n\nRachel took her time with him. She sucked on the first 3 or 4 inches of his dick, while gently massaging his base. Whenever she felt him twitch in her mouth, she backed off, letting him calm down, before returning to her feast. \n\nShe could see his hands were clutching the bedsheets so tight that his knuckles were turning white. \"It's ok, just relax.\" She whispered, running her tongue up and down the length of his shaft before plunging her mouth down around his engorged beast once again. \n\nBrendan had made it to the Promised Land. This was heaven. This was his Nirvana. After a long time, or so it felt, he finally managed to master his breathing and calm himself down. Well as calm as he was ever going to get when a busty blonde goddess had the first 6 inches of his cock lodged in her tight gripping throat, he thought. \n\nHe propped himself up on his elbows, convinced now that he could withstand watching the greatest show on earth unfold. Brendan shook his head slowly in disbelief as his eyes took in every detail of the scene. Rachel's blonde flowing locks were brushed over to the side, so he could see her stunningly beautiful face, bouncing gracefully in his lap, as his dick disappeared past her soft plump lips. He could also see her magnificent breasts swaying gently under her slender hunched over body. \n\n\"Oh my god!\" He groaned rather too loudly, as Rachel started getting a bit carried away. She was worshipping his huge throbbing tool with everything she had. It was stretching her throat like no cock ever had, causing her to gag and occasionally splutter, but nothing could stop her from enjoying her task. She'd managed to fit almost 8 inches of it inside her, when she heard Brendan shout. \"Ssshhh!\" She pleaded, pulling her mouth free. \n\n\"Sorry.\" He whispered back. \n\nRachel moved down lower, nuzzling his taught scrotum. Brendan clamped his hand over his mouth, hissing out a scream of euphoria, when he felt her sucking his testicles into her mouth one at a time, before lapping at them with her tongue. \n\nShe'd been loving sucking on such a long hard cock, but she couldn't deny her jaw was beginning to ache slightly. She'd never had to stretch her mouth so wide for that long before. Knowing what Brendan might really like, Rachel had a plan in mind to give her mouth a rest for a bit. \n\nShe got off the sofa bed and knelt at the foot of it, whilst slipping of her bikini top and letting it fall to the floor. Rachel then ushered Brendan to slide down towards her. Once there, she bathed his cock in her saliva, before slapping it against her rippling breasts. \n\nHis face creased into an elated grin as she wrapped her large breasts around his thick shaft and began to slowly squeeze them together. \"Is this what you want Brendan? Is this what you were fantasizing about doing when you were beating off over my holiday snaps?\" She teased breathily. \n\nBrendan nodded vigorously, his voice having left him once again. He watched in amazement as his slick, saliva covered dick, glided easily between her two phenomenal mountains of flesh. \n\nWhen she started to bounce her tits more vigorously, he felt his cock start to twinge and he knew that he couldn't handle much more. The human body wasn't designed to cope with these levels of pleasure, he thought madly, while gripping the duvet cover tightly by his sides. \n\nRachel craned her neck and flicked the tip of his pre-cum leaking cock with her tongue, as it burst up through her tightly squashed tits. \n\nBrendan propped himself up on his elbows again, to get a better view. He started to thrust his hips upwards into her rippling breasts, with more and more urgency as he felt his balls begin to churn. \n\n\"Ooohhh yeah fuck my big tits Brendan. Fuck them like that. Oh yeah that feels good!\" Rachel cooed. \n\nShe could see his face contort into a snarl as he started to grunt and moan like crazy. \"Oh god! UNGH! UUUUHHHHHHHHHH!\" Rachel had no time to tell him to be quiet, as right then a blast of cum shot past her nose and flew high into the air. She didn't even see where it landed and wouldn't have been surprised if it was stuck to the ceiling. Then another powerful jet struck her chin, dribbling down into her cleavage where it was met by a series of further squirts, which covered her now glistening tits like glue. \n\nBrendan slumped back onto the bed, throwing his hands over his face, trying to wipe away his tears before Rachel saw them. He'd cum so hard he was now seeing stars. Apparently though there was more pleasure to endure if that was even possible. Rachel had sucked his exhausted cock back into her mouth and was hungrily sucking the life right out of him. \n\nHe lay there for a while catching his breath, while Rachel nipped into the bathroom to wash the cum off her neck and chest. She normally liked to gather it up with her fingers and swallow it, but there was just so much of the stuff. It was drying hard against her skin, faster than she could consume it. \n\nHer body was on fire now, she was so horny it was maddening. All of her pent up tensions from earlier that day and her anger with Aaron's earlier rudeness, were bubbling around in her belly, turning her insides into a cauldron of passion. Her pussy was so wet already, she thought she might orgasm if he even breathed on her throbbing sex. \n\nBrendan watched her walk back into the room. He could tell that her demeanour had changed instantly. It was like she'd become a different person. She pulled the string of her bikini bottoms loose, before bunching up the garment in her hand and throwing it forcefully to the floor. Her eyes never left his, they were burning into his soul with a fire that brought new life into his deflated cock. \n\nShe grabbed him and pulled him to his feet. Wrapping her leg around him, she kissed him with furious aggression. \"Grab my tits! That's it! Yeah! Pinch my nipples! UNGH! Harder! Ah fuck! Now slap them! Yeah that's it slap my big titties!\" She barked the orders at him through gritted teeth. My god she was like a woman possessed, he thought. \n\nRachel pushed Brendan down onto the bed and straddled his face. If she could have stopped to think about what she was doing, she might have felt sorry for him. He was an innocent virgin after all. But she couldn't think straight, not in that moment. Her mind was being overrun by her primal urges and she was powerless to stop them. \n\nShe ground her pussy down into his face, rocking her hips hard and fast. Brendan was stunned but far from overwhelmed. He didn't really know what to do, but he started licking and sucking on her dripping wet sex, trying to do his best to pleasure her as much as she had just done for him. \n\nWhatever he was doing, he was doing something right. Rachel was growling and moaning like she had been with Arthur and Kadir. \n\nBrendan grabbed a firm hold of her thrusting ass and spanked her cheeks repeatedly, remembering how much she'd liked it when Arthur was fucking her. \n\n\"AH! Yes! Eat my pussy! Oh you naughty boy!\" Rachel groaned, while pinching and pulling on her stiff aching nipples. \n\nRachel had obviously now noticed his rapidly swelling cock, as she threw herself down onto her chest and started to instantly devour it. Her hums of pleasure felt phenomenal as she choked herself on his cock with frenzied enthusiasm. \n\nHow long they went at it neither of them knew. All Brendan could do was urge himself not to cum, but she was sucking his cock so hard, so fast and so expertly, that he knew he couldn't hold out forever. He lapped at her grinding cunt the best he could, but knew he needed to do more. \n\nSuddenly he remembered another tip bit from old Arthur's locker. Maybe she would like it if he tried it too? ",
        "Brendan pushed his middle finger gently against her asshole, then slowly slid his slender digit inside her, right up to the knuckle. \n\nRachel shot bolt upright. \"UH! HUH! OH YES!\" All attempts to be quiet were long forgotten. \"UH! YOU DIRTY LITTLE FUCKER! MMMMM! YYEEESSSS!\" \n\nSensing that her orgasm was about to reach an explosive crescendo. Rachel reached down and began to frig her swollen clit manically. \n\nBrendan could tell that she was almost about to cum by the way she started yelping and gasping for breath. He plunged his finger in and out of her incredibly tight ass, as fast he could, while sticking his tongue as far as it would reach into her sweet tasting pussy. \n\nRachel clamped her free hand over her mouth, muffling her scream, as her body was racked by an orgasm so powerful she very nearly fainted. \n\nHer moaning got deeper and louder as her legs started to shake uncontrollably. Her toes were curling so hard it was almost painful. Then her pussy went into violent contractions, as she powerfully squirted over and over into Brendan's open mouth.  \n\nBrendan wasn't expecting to be suddenly drowning in her juices. Spluttering, he tried his best to drink it all down, but even more kept coming. Soon it was bubbling over his lips, soaking his face, along with his upper chest. \n\nRachel slid off him, or rather fell down next to him, still groaning and murmuring something incomprehensible. She curled up into a ball and Brendan watched in proud amazement as the muscles all over her body were twitching sporadically. \n\nHe ran his hand gently up and down her back and waited patiently for her to regain her composure. \n\nThe brain cells in Rachel's mind which hadn't just been blown to pieces, slowly started to ignite. After a long time, she felt recovered enough to sit herself up. It wasn't as easy as she'd thought. Brendan had to help prop her up as she swayed unsteadily. \n\n\"I'm sorry...I don't know what came over me.\" She felt guilty about being so rough with him after promising herself she was going to take things nice and slow, seeing as this was his first time. \n\n\"Are you kidding me? That was amazing! Can we do it again? Oh and for the record, you came over me, not the other way around. Look I've got the wet hair to prove it!\" They both laughed. Rachel looked over at the puddle on Brendan's pillow, unable to believe how much she'd just squirted. She'd have been embarrassed if it wasn't for the fact that Brendan was practically panting with eagerness to do it again. \n\nShe felt suddenly exhausted, but knew there was still one all important task she needed to complete. Brendan was leaving tomorrow and no way was she going to send him home still a virgin. \n\nBrendan brushed her golden hair away from her face, tucking it behind her ear. His lips met hers and they both sank back onto the bed, kissing tenderly. He ran his hand up along the warm smooth skin of her arm before cupping her breast and sinking his fingers into her soft supple flesh. \n\nRachel knew he was as hard as rock already. His thick cock was now rubbing against her thigh excitedly. She twisted onto her back and pulled Brendan over on top of her. If she hadn't been able to keep quiet whilst having her pussy eaten, she had no idea how she was going to cope once that fat cock of his was inside of her. He might have to gag her. \n\nThey kissed again, more deeply this time. Rachel squirmed with anticipation as his hot meaty cock slid against her lower belly, before Brendan positioned himself between her splayed apart knees. \n\nThis was it, he thought. This was moment when he stopped being a boy and became a man. \n\nUnfortunately for him, that moment was going to have to wait. They both heard the noise at the same time but Rachel reacted first. \n\nAs soon as she heard the bed springs creaking, she knew that it was Aaron getting up. With her heart in her mouth, she launched herself up off the sofa bed and bolted into the bathroom. Brendan had just enough time to dive under the covers, before the bedroom door opened. \n\nHe laid as still as he could, breathing heavily. \n\n\"Rach? Are you in there?\" Aaron whispered through the bathroom door. \n\n\"J...just a minute.\" Came her frantic hushed reply. What was she going to do? She was naked and her skin was flushed and damp with sweat! How the fuck was she going to explain this away? And her bikini was still on the lounge floor in plain sight, if Aaron bothered to look. \n\n\"Hurry it up, I'm bursting for a pee.\" He groaned back. \n\nShe needed a distraction and she needed one fast. Luckily Brendan wasn't too frozen with fear to grasp the seriousness of her predicament. He pretended to wake up. \"What's with all the noise?\" He pretended to sound groggy. \n\n\"Oh you're awake. No need to whisper now I guess. Come on Rach! Let me in!\" Aaron banged on the door loudly this time. He was bouncing on the balls of his feet. \n\n\"I'm thirsty. Can you get me some water please?\" Brendan croaked. \n\n\"Get it yourself! You're not a baby!\" Aaron shot back angrily. \n\n\"Please BRO!\" Brendan knew that by emphasising that word, Aaron might remember that he was supposed to pretend to be nice to him. At least while Rachel was listening. \n\n\"Ok fine!\" Aaron hobbled over to the kitchen sink. Brendan knew this wasn't going to work, the sink was parallel to the bathroom door, if he looked to his right when Rachel stepped out, she'd be done for. \"No not tap water, I've got a cold bottle in the fridge, can you get it for me?\" He needed an excuse for Aaron to turn his back on the bathroom door and in a small open planned flat, this was the only thing he could think of. \n\nRachel was listening intently with her ear to the door. Brendan was a genius! She opened the door a crack when she heard the fridge door open. But just as she was about to make a run for it, Brendan waved her back in. \"I can't see it BRO!\" Aaron sounded even angrier than before, still dancing on his toes to keep from wetting himself. \n\n\"It's in there, look further in the back.\" As soon as Aaron grumpily looked back into the fridge, Brendan hurriedly waved Rachel out. She darted into her bedroom in three long strides, before Aaron could even look up. \"It's not in here you fucking dipshit!\" He said crossly. \n\n\"Oh yeah, maybe I drank it.\" Brendan said with a smirk. \n\nAaron picked up an apple off the side and launched it at Brendan's head. It missed by an inch. \"Ah good, at least the bathrooms fucking free.\" Aaron raced inside and closed the door. \n\nRachel threw on her long t-shirt and a pair of cotton panties and jumped into bed. Her heart was beating a mile a minute and she still hadn't calmed her breathing when Aaron returned from the loo. \n\n\"That bloody brother of mine, he's a real pain in the arse.\" \n\n\"Why what's he done?\" Flashbacks of Brendan fingering her arse vigorously, danced though her mind as he spoke. \n\n\"It's nothing babe. Thanks for nearly making me pee myself back there by the way.\" \n\n\"It's not my fault. Don't get grumpy with me.\" Rachel snapped back \n\n\"I know I'm sorry. I'll just be happy when he goes home tomorrow. It stinks in that room now too. I think the little bastards been wanking in there.\" \n\nRachel purposefully ignored his last statement. \"Why do you want him to leave so badly? You two have been getting along well this weekend haven't you?\" She turned to look at him seriously. \n\n\"That's been mostly for show. I wanted you to think I had a nice functional family. But if we're going to be together, then there's no point pretending. I can't stand him. Now can we please go to sleep?\" Aaron turned to roll over but Rachel dragged him back. \n\n\"No you can't just drop a bombshell like that. I need to know more. Why can't you stand him?\" \n\n\"Really? It's 2 o'clock in the morning and you need to know more? Well fine!\" Aaron couldn't stop his temper from flaring. He was still a bit drunk and had woken up in a worse mood than before. \"You've seen him? Have you been able to get more than 2 words out of him in one go? No. That's because he's a stupid little freak!\" \n\nRachel felt a flush of anger rise in her cheeks. \"He's not a freak and he's not stupid either.\" \n\n\"Yes he is! He's always been like that. I used to hate living at home. He would follow me everywhere like a creepy little shadow. Always going in my room and borrowing my things! Trying to get me to play his stupid little dungeony dragony game thing. He's a bloody geek. He can't do any normal stuff like play football, or any sport actually. It used to be a nightmare whenever I had friends over, he'd hang around us all the time like a bad smell. They all thought he was a little freak too.\" \n\nRachel hoped that Brendan couldn't overhear any of this. She grit her teeth and spat the next few words. \"So you HATE him, because he wanted to hang around with YOU? To play with YOU? He wanted you to act like a big BROTHER? \" \n\n\"Don't get mad at me.\" Aaron turned on the defensive. Not his smartest move ever, but in his bid to convince his seething girlfriend that he was right. He unloaded all the ammunition he had on Brendan. \"You don't even know him. There's a reason why he doesn't have any friends. I've seen some of the nasty shit people write on his Facebook page. It's not just me you know. Nobody likes him. It's because he's a creepy, annoying little weirdo. He'd sit alone in his room all day with the curtains closed reading comics or drawing these stupid fucking pictures of elves and wizards. He never wanted to go outside. You'd think that by being a geek he'd be clever though right? Wrong. Mum has to spend a lot of money out on home tutoring because he's failing nearly every class except art. He really is border line retarded Rach. I'm not making it up.\" \n\n\"Ok...tell me more.\" Rachel kept her voice as calm as possible. Being an only child she knew how lonely life could be at times. She'd always wanted a sibling to play with. But she counted herself lucky she didn't have one as horrible as Aaron. Why had she ever even liked this guy? Had she been blind to his true personality this whole time? Had he been pretending to be nice around her all this time too? Like he'd been pretending with Brendan this weekend? \n\nConvinced he was getting through to her at last, Aaron continued. \"He came home from school one time with a black eye crying to me about some bully. He wanted me to go and punch the kid for him. I was like 18 and he wanted me to punch a 12 year old? I'd go to bloody prison. I told him he needs to stick up for himself and stop being such a pussy. He was always crying over this and that. He's like a whiny little baby.\" \n\n\"Anything else?\" Rachel felt like she was about to cry herself, in sympathy for him, but she remained as calm as possible. \n\n\"What more do you want? \n\n\"Well tell me some of the things you used to do to him? Did you bully him too?\" Rachel pretended to laugh, acting as though she got a weird kick out of his stories, but it was only because she wanted to learn more. \n\n\"Bully him? No. I tried my best to pretend he didn't exist. There was no point fighting with him, he'd just burst into tears and give up straight away. This one time when my friends were over and he wouldn't leave us alone, we all tied him to a tree in the garden and left him there all afternoon. I felt a bit bad about that one because he wet himself and my friends were all taking pictures of him. But you don't understand, he was always such a pain in the arse. He'd follow us around, never speaking, just staring at my mates with a stupid gormless face. He doesn't know what social skills are! He was an embarrassment to me growing up and he's still an embarrassment to me now. I didn't want him to even meet you cos I knew he'd do nothing but stare at you all weekend and I was right!\" \n\nRachel looked at Aaron for a long time, clenching her jaw. Biting back the filth she wanted to scream at him. \n\n\"You get where I'm coming from now don't you?\" Aaron tried to rub Rachel's arm but she flung his hand away. \"Get off me.\" She hissed, turning away from him. \n\n\"But babe...Look I'm sorry...I...I didn't mean most of that. I'm tired and I'm a bit drunk still. I'm just stressed because of work and I've not been able to relax all weekend with him around. That's all.\" \n\nAaron tried rubbing Rachel's back. She shoved his hand away again. \"I said don't touch me!\" \n\nAaron rolled over moodily, smacking the duvet with his fist. He and Rachel had never fought like this before. Why had he let his mum convince him to let Brendan stay this weekend? This much hassle wasn't worth the hundred quid she'd given him to show his idiot brother a nice time. It was his fault they were now fighting. Still, at least he was going home tomorrow, then things could get back to normal again. \n\nRachel wondered how he'd like it if she tied him to a tree and fucked his little brother's brains out in front of him. Maybe that was a bit extreme even for her. But hearing that blast of nastiness had helped her come to peace with ending this broken relationship once and for all. She knew that she was the one to blame for its demise. It had been her who at been unfaithful not him. But not wanting to break Aaron's heart had kept her invested in this lie for far too long. Now that she'd heard all that, it didn't seem like such a hard thing to do after all. \n\nIn that moment she felt such a heartfelt pang of sympathy for Brendan, that tears silently rolled down her cheeks, while she lay there in the darkness. Growing up was a hard enough time for anyone, but it sounded like he'd had it far rougher than most. The thought of him being bullied both at school and online, made her tears stream even faster. Did he really have no friends? None at all? He must be so lonely. If people stopped and took the time to get to know him, they'd see he was just shy, he wasn't stupid. Grades didn't matter. He was artistic by the sounds of things, not academic. His own brother of all people should have realised that. But rather than be a brother to him. To look out for him. To encourage his interests and above all to be kind to him. What had he ended up with? A brother who only added to his woes, not rescue him from any. \n\nShe tried to dry her eyes but the tears kept flowing. Sure he'd attempted to blackmail her into sex, he wasn't an angel by any means, but she knew more than most how hormones could make you do the most messed up of things. \n\nNow that she'd seen both Brendan and Aaron's true natures, she knew which one she'd pick in a heartbeat. Not that she wanted to be in a relationship with Brendan either. She wanted to stay as far away from relationships as she could for the foreseeable future. At least until she'd figured out what it was she wanted from life. \n\nHer mind was resolute about one thing now though. She wanted to give Brendan a memory so extraordinary, so magical and so incredible, that when he thought about it, no bully would ever be able to wipe away the smile that it would bring to his face. A smile creased her own lips thinking about what she had in store for him tomorrow. With her tears finally drying up, she closed her eyes and drifted off into a peaceful sleep. \n\nWhen Rachel awoke the following morning, Aaron was on his best behaviour once again. He was going out of his way trying to be as nice as possible to Brendan. Offering him food, asking if he wanted to play on the PlayStation with him? But Rachel could see through his lies now. \n\nEspecially when Brendan just looked at him with such confusion. It confirmed to her that he was only being nice to him for her benefit. \n\n\"Do you want me to cook you some breakfast babe?\" \n\n\"No.\" Came Rachel's blunt reply. \n\n\"Aw, you're not in a mood with me are you still? Come on, I told you that was just a mixture of stress, alcohol and tiredness talking. I didn't mean any of it.\" \n\nRachel shook her head slowly at him. \n\n\"Oh fine be like that. What time's your train bro?\" \n\n\"Uh...12:30 I think?\" \n\n\"Well you best be off soon then. Wouldn't want to miss it. I've got the lads coming over in a minute to watch the football. I'd suggest you should stay and watch it with us, but I know you don't like football much do you?\" \n\n\"No it's fine. I'll go in a bit.\" Brendan replied. He knew nothing more was going to happen between him and Rachel anymore. But he was eternally grateful for everything she'd done for him already. This had been the best weekend of his entire life. \n\n\"Sorry babe, I should have asked you first. You don't mind if the lads come over do you?\" \n\n\"Fine by me.\" Rachel tutted. \"I've got a whole heap of laundry to do anyway.\" Little did Aaron know that she was going to be packing her freshly washed clothes into a suitcase and getting on a train home herself later that evening. \n\nShe went back into the bedroom and closed the door. Her hunch that Aaron would start being mean to Brendan, once he thought she was out of earshot proved correct. She listened closely at the door, just able to make out his low bad tempered voice.  \n\n\"You can give this hundred quid back to mum you little prick.\" Aaron threw the money his mother had given him at Brendan. \"Rachel's in a mood with me now and it's all because of you. Why did you have to come here and ruin everything? And don't think that you're ever getting invited back. No bribe is going to be big enough for me to put up with this much hassle. Go on, you can fuck off now.\" \n\nBrendan picked up the money. So that was why he'd been invited was it? His mum had paid Aaron to babysit him had she? Well it kind of made sense now. He knew it couldn't have been Aaron's idea. Brendan wasn't in the least bit upset by this revelation though. He'd kissed a beautiful girl, felt her breasts, received a blowjob and a titwank, then he'd eaten her pussy and now he had a free \u00a3100? Of course he wasn't going to tell his mum he knew about the money. This was the best weekend EVER. \n\n\"See you then.\" Brendan picked up his bag ready to leave. He wanted to say goodbye to Rachel first though. Well he wanted to say a thousand different things to her actually, but he definitely couldn't leave without seeing her one last time. \n\nRachel bundled a huge load of laundry into the washing basket and opened the door. She was fuming with Aaron but managed to play it cool for Brendan's sake. \n\nBrendan looked her up and down and smiled wistfully. Wondering if he'd ever be lucky enough to see her again. She was only wearing a pair of grey leggings and a white t-shirt, but she somehow looked sexier than ever to him, now that he knew this might be the last time he ever saw her. \n\n\"Oh are you off Brendan? Well it's been really fun having you here. I'll walk you out if you want? I've got to go down to the basement anyway to do all this laundry.\" \n\n\"Um...ok.\" She was so nice, Brendan thought. Too nice for his asshole of a brother anyway. \n\n\"By then Aaron.\" Brendan called. \n\n\"Yeah bye.\" Came his brothers' blunt reply. \n\nRachel turned to Aaron now. \"I'm not going to sit around while you boys watch football. I'm taking my book down to the laundry room. You know where I am if you need me.\" She made it sound like a \"don't you dare interrupt me\" threat. \n\n\"That's fine babe. See you in a bit.\" Aaron was just going to have to wait until her foul mood passed. \n\nOnce they were in the lift together Brendan turned to Rachel. \"I just want you to know how happy I am to have met you. You've been so nice to me this weekend. I'm sorry that I tried to blackmail you into...well you know. But I'm not sorry about what we did. It's been the best few days of my life.\" \n\nRachel tried to hold back her tears again. How could people be so mean to him? \"You don't have to apologise for anything. I've enjoyed myself too. You know that right? I wasn't doing all that stuff because you knew about my secrets. I did it because I wanted to. You need to know that.\" ",
        "The lift opened and they stepped out. \n\nBrendan wasn't sure whether he should hug her or kiss her or what to do. He stood there awkwardly for a while. \"Well...goodbye Rachel. I hope I get to see you again someday.\" He turned to leave. A lump was forming in his throat and he didn't want to cry in front of her. \n\n\"Errr...Where do you think you're going?\" Rachel pulled him back towards her. \"Hold this and follow me.\" She plonked the washing basket in his arms and beckoned him to follow her. \n\nThe lift didn't go to the basement. It was down a further flight of stairs, with big heavy fire doors at the top and bottom. Brendan followed her down, confused but nervously excited about what might happen. \n\nThe laundry room was cold and dark. There were no windows, so the only light came from one exposed bulb in the centre of the ceiling. \n\nA brand new launderettes had opened over the road, which was so much brighter and cleaner, so no residents ever used the one in their own creepy basement. The landlord seemed to know this too, as most of the machines were never fixed once they'd broken. Of the dozen or so in there, Rachel knew of only two which still worked. She didn't mind it down there though. It was quiet and a good place to read and get away from life for a while. She'd never seen another soul down there the entire time she'd lived there. \n\nShe quickly dumped all of her clothes into one of the working machines, then filled it up with powder and turned it on. \n\n\"There's something you need to know Brendan. I'm breaking up with Aaron. Tonight. I don't want to be with him anymore.\" She turned to face him, feeling nervous herself for once. \n\n\"Do you want to be with me?\" He asked hopefully, then felt silly as soon as he'd said it. He knew she didn't want to be his girlfriend either. Or did she? \n\n\"Aw honey. I don't want to be with anyone. You've seen what I'm like. In a weird way you actually know me better than anyone. Nobody knows the things that you know about me. It's not fair on people to cheat on them like I've been doing. I need to be by myself for a while. Can you understand that?\" The last thing she wanted was to break Brendan's heart too. He'd endured enough of that already to last a lifetime. He had to know that this couldn't develop further, before she could think about doing anything else with him. \n\n\"No I get it. I don't know why I said that. You like much older men. I know that. I was just being silly. Anyway I'm going to miss my train if I don't leave now.\" In his naivety, he still hadn't yet grasped where all this was leading. \n\n\"You can get a later train Brendan. You've got that \u00a3100 now remember?\" Rachel smiled. She lifted the empty laundry basket out of his hands and laid it on the floor. \n\n\"Y...You heard all of that did you?\" He was embarrassed that she knew of the contempt that most people treated him with. He wanted her to see him as being normal. Not some nerd who could be pushed around without ever sticking up for themselves. \n\n\"I heard it. None of that is your fault by the way. You deserve a better brother than the one you were lumbered with.\" She went to pull him in for a kiss, but Brendan hesitated. \n\n\"You know that he'll only blame me now though if you break up with him. He thinks it's my fault you're in a mood with him.\" \n\nRachel hadn't thought of that. No way should he be punished for her mistakes. \"I'll make sure he knows it's not because of you. I'll tell him the truth. I'll tell him that I've been cheating on him if I have to. He can hate me all he wants. I don't care anymore.\" She wrapped her arms around Brendan's neck and they kissed. Softly at first and then with more and more enthusiasm, as each of them let their real world baggage slip away and got lost in the heated embrace. \n\nThe washing machine was thumping away loudly behind Rachel as she pulled her lips back, looking into Brendan's adoring eyes. \"Life can be really shit at times. I think you know that already don't you?\" Rachel purred. Brendan nodded in reply. \"But it can also be filled with goodness and kindness and incredible experiences.\" Rachel was panting with lustful anticipation of what she was about to do. \"I want to give you a special memory to hold on to. Would you like that?\" \n\nBrendan's cock was throbbing with a yearning lust, as he stared into Rachel's sparkling blue eyes. \"Y...yeah.\" He whispered, hardly even able to catch his breath. \n\nRachel slowly slid her grey leggings down and off her feet. Then she pulled her white t-shirt up over her head. Brendan stared in amazement at her, now wearing only a turquoise silk bra and matching panties. She hopped up onto the rumbling washing machine, and giggled as the vibrations caused little ripples of pleasure to shoot up her spine. Then she extended her leg teasingly, letting her foot caress the large bulge in Brendan's jeans. \n\nSomething just clicked and suddenly Brendan's uncomprehending mind was able to unfreeze itself. He practically jumped out of his clothes. In a flash he was completely naked. His large throbbing cock now twitching in a grinning Rachel's direction.  \n\nHe stepped towards her and Rachel wrapped her legs around him, pulling him in tight. Brendan kissed her with every ounce of passion he could muster. He ran his hands up through her soft golden hair and she mewed into his mouth longingly. \n\nRachel reached back and unfastened her bra, letting it slip from her shoulders and onto the floor. Brendan then lowered his mouth to one of her stiff nipples, swirling it around with his tongue before sucking it on it hungrily. Rachel leant back and watched as he cupped her breasts together, darting his mouth back and forth between her sensitive nipples. She pulled his head back up and kissed him hard with purposeful meaning. \"Take off my panties.\" She sighed, while she chewed on his lip. \n\nRachel lifted her ass up slightly off the rumbling machine and Brendan dragged her panties slowly down her legs. Once free of her feet, he tossed them over his shoulder. His eyes were now focused on her pink glistening sex. \n\nThis was it. This was the moment he was finally going to become a man. No one was around to interrupt them now. \n\n\"I...I've got a condom in my wallet.\" He hesitantly whispered. He'd stolen it from his dad's drawer years ago now. Not because he thought he'd get to use it. More because he thought it was a cool thing to carry around in his wallet. It was probably well past it's use by date by now. \n\nRachel thought that was rather sweet, but she wanted to feel the heat from his huge throbbing cock inside of her. She wanted to savour every sensation of it. \"Just come here. You don't need to use one.\" She spread her legs wide, beckoning him in. His nerves were rubbing off on her now. She stared, mesmerized by his huge rock hard veiny tool, which was moving slowly towards her already soaking wet snatch. \n\nThe vibrations from the thundering machine beneath her, were already causing her mind to go fuzzy. How was she going to cope when that monster of a cock was probing her furthest depths? \n\nBrendan stepped up closely, holding his fit to burst cock tightly in his hand. His heart was beating so hard he thought it might explode out of his chest. \n\nKnowing he might need some help, Rachel guided him to the opening of her yearning sex. They both held their breaths and looked down. Watching intently for the very moment Brendan's virginity would be lost. \n\nThen it happened. Rachel's labia parted around his bulbous purple tip, opening like the petals of an exotic flower and Brendan sank the first few inches of his thick meaty cock into her incredibly tight pussy. \n\nShe had to bite her lip to stifle the cry of pain that shot through her. His dick was stretching her wider than any she'd experienced before. But she refused to let him know that it hurt. She just hoped that the discomfort would dissipate quickly. \n\n\"I'm sorry did that hurt?\" He'd obviously read the expression on her face. \n\n\"No it's fine. Just go slow ok? I just need time to adjust.\" She gave him her biggest beaming smile, not wanting to let on any of the trepidation she now felt. \n\nBrendan had read about how big cocks could hurt. As much as his instincts were telling him to just drive his cock forward into her incredibly snug gripping pussy. The last thing he wanted to do was cause Rachel any pain. \"Are you sure?\" He stammered. \n\nRachel nodded her encouragement, wincing as he slid another three inches inside of her. She felt stuffed to brim. Surely there wasn't much still left to go? A wave of horror washed over her as she looked down and saw the remaining four or so inches still waiting to be buried inside her. Surely there was no way it would fit? \n\nHe eased himself into her, painfully slowly. Rachel made him stop only once at the seven inch mark, to refocus her strength. She could feel her insides were stretching to adjust to his incredible girth and length. The pain was only mild now and before long it had completely faded away. \n\nFinally with a cry of jubilation, Brendan was fully immersed into her stretched out sex. She whimpered as she felt his tip brush against her cervix. It had already ascended high up into her body, but his huge great cock had still found its entrance. \n\nBrendan hadn't moved a muscle for what felt like eternity. He was panting into Rachel's open mouth as was she back into his. Then he rubbed his lower lip against hers and they kissed, gripping one another's lips with force and meaning. \n\nRachel could feel every groove and every vein on his long hard stationary shaft, flexing against the walls of her velvety pussy. His tip was twitching up against her tingling, nerve covered cervix. Bringing new and unfelt sensations of pleasure, which were addling her already cloudy mind. \n\nWhen he slowly began to pull away, she felt an urgent longing to keep him buried deeply inside her. Rachel let out a low quavering wail, as Brendan pulled back a few inches before sliding himself fully into her once again. He began to repeat this action. Gently fucking her with short deep thrusts, until her eyes rolled back in her head and she moaned even louder and for much longer. \n\n\"Are you ok?\" He whispered. Worried by the way her eyes briefly rolled back, that she might have fainted for a second. \"Does it hurt still?\" \n\nRachel shook her head violently. More as a way to try and unscramble her brains than to reply to him. \"Oh god! You're so fucking big! It feels amazing Brendan. Keep going. Yeah just like that. UUMMMM!\" Her outstretched legs were beginning to shake uncontrollably in Brendan's hands, and it wasn't the vibrations from the washing machine that was causing it now. \n\nDelighted that he was no longer causing her pain. Brendan drew back more and more, until he was sliding almost his full length into her clutching pussy. His tempo was still slow though. If he went any faster, he knew he'd likely cum in an instant. His cock was being gripped so tightly, that the sensations, which were now coursing through his adolescent body, were already almost too pleasurable to cope with. \n\nHe stared in dumbfounded wonder as Rachel tipped her head back and screamed at the ceiling. How on earth had all this happened to him? Was he even deserving of these feelings of euphoric bliss? She could have any man in world if she wanted to. But here she was, letting him worship her with his achingly hard cock. She was a goddess who walked among mere mortals. He wasn't worthy of her. Nobody was worthy of an experience like this. \n\nIt was a miracle he hadn't cum already. Some untapped part of his brain was allowing him keep it at bay. He was determined to bring Rachel as much pleasure as he possibly could. She deserved it so much, after all of the kindness she'd shown him. \n\nBrendan watched Rachel's magnificent breasts bouncing gently on her chest, as she leant back away from him. Her stunning face was creasing with desire, as she moaned and screamed with wanton lust. \n\nAfter a short while he moved his hands up off her thighs and held her tightly by her silky smooth hips. He somehow managed to go a little faster, thrusting joyously into her hot sheathing sex. As soon as his hands moved up to caress the soft fleshy mounds of her jiggling breasts, Rachel opened her fluttering eyes, which bore into his own, piercing his very soul. \n\nRachel's mind had finally drifted back down into her body. Her thoughts were much clearer now and rather than just be overpowered by these new euphoric sensations. She was able to focus on them. Ride with them. Let them build inside of her until they peaked. Into what? She did not yet now. But she was fearfully excited to find out. When that dam burst, it would take her mind along with it. This didn't feel like one of her normal orgasms building. This felt like a thunderstorm was brewing inside of her. \n\nShe wrapped her quivering legs around Brendan's body and pulled herself up into a more upright sitting position. Rachel threw her arms around his head and locked her lips over his. Her hips were flexing against him now and instinctively, he was starting to thrust more powerfully into her. \n\n\"Oh god Brendan that feels so good. Yeah like that! Keep fucking me like that! OH YES!\" She panted the words urgently between his trembling lips. Then they were kissing again. Hard and fast. Assaulting each other's mouths with their tongues. \n\nBrendan was on the verge of cumming. He'd held it back so long now it almost hurt. His face was screwed up into a tight ball, as he rammed his cock home, right to the base. Holding it inside her while she ground against him. They were holding onto each other so tightly that Rachel's breasts were crushed flat against Brendan's chest. \n\nBoth were nearing their respective finish lines at the same time. \n\nThey pushed their foreheads together forcefully. Each of them straining their neck muscles as their eyes were locked in a tight embrace. \n\nRachel was yelping and screaming in earnest, but Brendan couldn't even manage to make a sound. He thought he was about to black out from the overwhelming pleasure of it all. \n\nThen he felt it. His cock flexed and then he could feel his hot load surging up through his shaft. \n\nRachel's furthest depths were being tickled by his tip again, while the top of his shaft was grazing her g-spot. It was causing her eyes to blur in and out of focus. She heard Brendan grunting, then felt his steaming seed splashing against her cervix. \n\nThe dam had burst. The cascading waters were now flooding the surrounding countryside. Rachel opened her mouth to scream, but only a hiss escaped her lips. She violently thrust her spasming body up against his, whimpering in sheer ecstasy. \n\nHe legs were clamped so tightly around him and she hugged him to her with such force, that Brendan could hardly breath. If he never took another breath, he knew it wouldn't matter. Life couldn't get any better than this. \n\nRachel started to scream so loudly that Brendan thought she might burst his ear drums. He could feel her juices gushing out as she humped herself manically against his stationary cock. \n\nIt took many minutes before Rachel's muscles began to relax. She brought her quivering lips up to meet his and they tentatively kissed, both still breathing heavily. \n\nBrendan hadn't pulled his cock free. He'd frozen stiff in a complete state of shock about what he'd just done. \n\nTo say her orgasm was incredible, didn't do the reality of it any justice. Neither of them could speak as they held each other in their arms. Both slowly descending down from their mountaintops of euphoria. \n\nRachel suddenly felt incredibly self-conscious. She'd only planned on having sex with Brendan so that he could lose his virginity. She wanted to give him a nice memory to cherish forever. \n\nBut they hadn't had sex. They hadn't even fucked. What they'd done felt more like love making. The intimacy of it unsettled her slightly. \n\nIt wasn't as though she was scared of intimacy, but Rachel felt much more comfortable with less passionate, rougher sex. For her, sex was like a stress reliever. She used it as a means to unwind as well as to have fun. When it was just two people using each other's bodies for satisfaction, she could relax and just enjoy the ride. But when it started to get too intimate, it troubled her for some reason. \n\nMaybe it was because it wasn't with the right person? Sure, she had a soft spot for Brendan. But in no way did she feel like she was falling in love with him. His cock maybe, but not him. Her feelings towards him were much more protective in nature. She felt deep sympathy for him as well as affection, but nothing more than that. \n\nRachel knew she'd never truly been in love with anyone before. Someday, when she met the right person, she'd know what it really felt like. But as sweet as Brendan was, he definitely wasn't the one for her. \n\n\"That was unbelievable...\" Brendan wheezed. \"...can we do it again?\" He'd never felt so happy and so satisfied in all his life. It was an experience he wished would never end. Apparently his cock felt the same way too, as it was still fully hard, sliding slowly in and out of Rachel's sporadically convulsing sex. He wondered if his erection would ever fade, when the sensations it was being treated to were this intense. \n\nThis realization that he was far from finished with her, snapped Rachel out of her self-conscious thinking. If they were going for round two, she was determined that this time it would be far less intimate. Maybe that way, she could purge her guilty feelings for sharing a bit too much of herself emotionally, than she'd been comfortable with. \n\n\"You want more do you?\" She gave him a wicked grin. \"As long as you don't hold back this time, then I'm game.\" \n\n\"Hold back? W...what do you mean?\" Brendan was worried he'd done something wrong. \n\n\"You're a man now Brendan...\" \n\n\"...Oh god I am aren't I!\" He interrupted excitedly. \n\n\"Yeah you are. So this time I want you fuck me with everything you've got. I want you to fuck me hard. Remember when I told you couldn't handle a girl like me? I want you to prove me wrong.\" She kissed him briefly before pushing him backwards. As soon as Brendan's huge cock slipped free from her hungry pussy, she felt a deep emptiness. So as quickly as she could, Rachel hopped down from the washer and turned around in front of him. \n\n\"I'll...I'll try my best!\" He stammered. \n\nRachel put her elbows on the top of the washing machine and looked back at Brendan over her shoulder, whilst wiggling her ass at him invitingly. \"You wanna fuck the shit out of your brother's girlfriend? Hmmm? Is that what you want? You want to show that asshole who the real man in the family is don't you?\" \n\n\"Yeah I do!\" With that Brendan grabbed hold of his massive throbbing cock and guided it back to the entrance of Rachel's welcoming sex. \n\nRachel gasped, then grunted loudly as he forcefully pushed his huge dick back inside her, all the way to the base in one quick thrust. \n\n\"UNGH! OH GOD! FUCK ME LIKE THAT! YYEEESSSS!\" Rachel was shunted forwards by the power of his driving cock. It caused her waist to collide with the edge of the clanging, rumbling machine. Thinking quickly she slightly adjusted her stance so that the corner of the washer was between her legs, which brought her clit into contact with the cold vibrating metal. \n\n\"AAAHHHH! FUCK!\" She started to giggle hysterically in between her moans of lust, as the combination of Brendan's massive cock pummelling her depths so completely, mixed with intense clitoral stimulation provided by the washing machine. \"God your cock is incredible! Keep fucking me like that! YES! YES! YES!\" \n\nBrendan stared in awe as his cock sawed into Rachel's snug gripping pussy. He still couldn't believe what he was doing. How he'd ever got this lucky, he would surely never be able to fathom. Somehow his bastard of a brother's gorgeous girlfriend was not only letting him thrust his big dick into her, but she was begging him to fuck her even harder. ",
        "He grabbed a firm hold of her rippling perfect peach of an ass and pounded away with as much strength as his puny adolescent body would allow him. \n\nHis rhythm was erratic to begin with. He was more or less hunched over her back, humping away as fast as he could, every bit like the inexperienced, over excited horny teenager that he was. \n\nFearing he might cum too quickly though, Brendan soon managed to muster whatever composure he had left in him and before long he was rhythmically pounding Rachel's tight dripping snatch, with the full length of his beastly cock. \n\n\"UNGH! YYEEESSSS! Fuck me Brendan! That's it! Show your brother that his girlfriend's pussy belongs to you now! YES! Fuck me! FUCK ME!\" \n\nBrendan had to shake his head to try and keep a grip on reality. Rachel's words were convincing him that this must all be some incredible dream. It just couldn't be real. The feeling of having his cock milked so wonderfully certainly felt real enough, but life surely couldn't be this good? It was impossible to comprehend. \n\nRachel's head was starting to spin. She was losing her grip on reality now too. Deep down inside she could feel an explosive orgasm beginning to brew and tried to focus her mind on that to keep it from drifting away from her body. \n\nShe couldn't stop a line of drool from dribbling down her chin as she squirmed against the vibrating metal, giggling and moaning at the same time. \n\nAn intense bolt of pleasure suddenly coursed down her spine and Rachel arched her back and screamed loudly. \"AAHHHHH! LIKE THAT! FUCK ME JUST LIKE THAT BABY! YES BABY! UUNNNGGGHHH!!\" \n\nBrendan was thrilled by how much pleasure his cock was seemingly bringing to her. But deep down he knew she liked it rougher than this. His experiences of watching her with Arthur and Kadir had told him that much already. \n\nNot wanting to hurt her though, he gave her thighs and her ass a few playful spanks. \"OH YEAH! Harder! HARDER!\" Rachel begged, as she looked back over her shoulder at the red faced teenager. \n\nBrendan could see a feral wildness in her expression as she grit her teeth and snarled at him. So he obeyed her command. \n\nWHACK! \n\nWHACK!! \n\nWHACK!! \n\n\"AH! AH! SHIT! AAHHHH!\" The soft smooth golden skin on Rachel's ass was soon bright pink and burning hot, as the intense stings from Brendan's spanks slowly subsided. It made her grind her pussy hard against the shuddering machine, in small but rapid circles. \n\n\"I'm gonna cum! I'm gonna cum so fucking hard! OH FUCK!\" Rachel was panting heavily, sucking in huge lungful's of air as she felt her orgasm rapidly approaching. \n\nBrendan's cock began to twitch, he was on the brink too. Remembering his trick from yesterday, he quickly shoved his thumb up Rachel's ass and with his other hand he grabbed a fist full of her golden locks and pulled her head back towards him sharply. \n\n\"UUHHH! YOU BASTARD! YES! PULL MY HAIR! YEAH FUCK ME WITH THAT BIG NERD COCK! AAHHHH!\" Rachel's whole body began to tremble as Brendan started to hammer into her pussy with every last drop of energy he had. \n\nBrendan didn't much like being called a nerd. He thrust both his hands under Rachel's body and mashed them hard into her huge rapidly swinging tits. Then he began to pinch, pull and twist her rock hard nipples. \n\n\"Oh God. Oh God! OH GOD! I'M CUMMING! I'M CUMMING!\" Rachel's pussy gripped Brendan's dick like a vice as her colossal orgasm crashed over her. \n\nA torrent of her juices cascaded out from deep within her, as she let out another ear shattering scream. Brendan could hear his cock squelching loudly now as he continued to fuck her through her incredible climax. \n\nRachel couldn't think straight, heck she couldn't even see straight, as her body was subjected to wave after wave of intense mind scrambling pleasure. Suddenly her vision began to fade and within a few seconds the lights went completely out. \n\n\"Here it comes! Ah! AH! AAAHHHHH!\" Brendan's cock exploded into Rachel's contracting cunt with such force that his knees began to buckle. \"Shit! UUUHHHHHH!!\" \n\nRachel had suddenly become a dead weight in Brendan's hands. He didn't have the strength left in his exhausted limbs to keep her upright. So as she slumped down onto the washing machine's lid, Brendan went with her, collapsing onto her back, as he humped the last few drops into her milking sex. \n\nHe had no idea she'd actually passed out as he couldn't see her face. His hands were now trapped underneath her, crushing her breasts flat against her body. \"That was amazing! You're amazing! Oh wow.\" He breathed into her unconscious ear. \"So was that better than with my brother then?\" He asked excitedly. \n\nRachel's eyes started to flutter open the moment Brendan began to kiss her shoulder affectionately. She had to blink a few dozen times before the world came back into view. \n\n\"Rachel? Did you hear me?\" \n\n\"W...what? Rachel murmured breathily. \n\n\"I asked if I was a better than Aaron?\" \n\n\"Better than your dickhead brother? Oh fuck yes. Don't settle for wanting to be better than that asshole though. You're dick is unbelievable. That was one of the best orgasm's I've ever had.\" It appeared Brendan didn't realise she'd passed out briefly. She didn't want to tell him he'd literally fucked her brains out though. That might give him too much of an ego, especially as it was only his first time. Besides it was rather embarrassing for her. Had she really just fainted because of a pleasure overload? \n\nHearing her words, Brendan pushed himself up and off of her. He watched in amazement as a huge glop of his cum surged out from her glistening pussy and dripped onto the floor, as he removed his finally deflated cock. \n\n\"Yeah! Woo! Hell yeah!\" Brendan started springing about the room, boxing with the air. \"I feel like the king of the world!\" \n\nRachel watched with a wry smile as he started to hum the Rocky tune, pretending to box with an invisible foe. Oh god he really is just a teenage boy isn't he? She thought with a twinge of shame. \n\nShe let him have his fun though. He deserved this moment of pure happiness. Her first time had been awkward, brief and wholly unsatisfying. At least he was never going to forget his. \n\nHappy didn't even cover how Brendan was feeling. He was over the moon. \n\nBefore long Rachel dragged herself upright, brushing her sweaty fringe away from her eyes. She had to tell Brendan a few things before he left. It would help if he stopped bouncing around like a mad man first though, she thought. \n\nEventually Brendan did settle down and came to stand by her. \n\n\"Go and get your phone for me.\" Brendan rushed over to his bundle of clothes and pulled his phone out of his trouser pocket, thinking that Rachel was about to give him her phone number. \n\n\"Thanks.\" She took the phone from him. \"Now as fun as this was, you know that this was just a one...well two time thing right?\" Rachel noticed his face drop, but he nodded in reply. \"Ok. Well I have a small confession to make. I deleted that video you took of me and Kadir.\" \n\n\"OH SHIT! The video! I'm sorry I shouldn't have even...\" \n\n\"It's fine.\" Rachel interrupted. \"I just didn't want that video getting out onto the internet or anything.\" \n\n\"I would never!\" \n\n\"No I know you wouldn't, but if your phone got stolen or someone else got a hold of it. I just didn't want to take the risk, so I deleted it.\" \n\n\"No I understand. I was going to delete it anyway...\" Brendan fibbed. \n\n\"Anyway, I was thinking you deserve to have something to remind you of this weekend.\" It wasn't as though Brendan was ever going to forget a single detail of the last few days, but he liked where this going. \n\nRachel turned the phone around and started taking selfies of the two of them. They posed cheek to cheek smiling, then Rachel took one of them kissing. Lastly she let him squeeze her breasts, while she playfully pouted and winked at the camera. \n\n\"I don't want these getting online either mind you. They are just for you, so don't go showing them off to your friends...\" Rachel caught herself saying it, but it was too late. She'd temporarily forgotten he had no friends to show them to anyway. \n\n\"No I won't, I promise. Thank you.\" Brendan beamed. \"I...I kind of have a present for you to. It's only a silly thing.\" Brendan picked up his trousers again and removed a folded piece of paper from the back pocket. \"I know it's not very good...\" \n\nRachel unfolded the paper. On it was a detailed pencil drawing of her face. The likeness was incredible. He'd managed to capture her perfectly. Nobody had ever drawn a picture for her before. She felt a sharp twinge within her chest as she looked back up at Brendan's worried looking face. \n\n\"If you don't like it...mmmm.\" Brendan's words were cut short, by Rachel's lips locking over his as she kissed him hard. \n\n\"Thank you. It's one of the nicest things anyone's ever given me.\" \n\n\"Oh it's not that good. If I had more time...\" Brendan wasn't someone who knew how to take compliments well. His cheeks went bright red as he looked at the floor. \n\n\"Listen to me. You've got a gift Brendan. You need to go to Art College or something. Trust me, you might think your life is shitty right now, but you only have a few months left of school, then you're free. When you're at college you can start again. Just try to be more confident and people will get to see the real you.\" \n\n\"Do you really think I could get into college?\" \n\n\"Easily! And believe me, once the word starts getting around about how big your cock is. You're going to have no problems attracting the ladies either!\" Brendan smiled at her, but Rachel could tell there was still a deep sadness lucking beneath the surface. She figured that after years and years of being put down all the time, it was probably hard for him to contemplate a happy future. \n\nThe truth was Brendan was feeling both elated and deeply upset simultaneously. He wanted to believe in the confidence Rachel had in him, but he didn't think that he'd ever be accepted for who he was, so ingrained was his self-loathing. After this weekend though he could at least see a glimmer of hope ahead of him, but right now the thought of never seeing Rachel again was darkening the skies above him. \n\nThey got dressed and made their way back upstairs to the lobby. \n\nThe awkward Brendan returned and he was suddenly at a loss for words. \"I guess this is goodbye then.\" He finally mumbled. \n\n\"Yeah I guess so.\" Rachel pulled him into a big hug. \"Thank you again for my picture. I'm going to treasure it.\" \n\n\"Thank you for...well for everything.\" He turned and opened the door. As hard as it was he knew he had to leave. \"You know if I do get into Art College...maybe...maybe you might want to visit me one day? I mean it would help a lot if you were the one who started spreading the rumours. Girls probably wouldn't believe me otherwise.\" \n\nRachel smiled at him. \"Maybe I will. But don't hold me to that. As I said this was a onetime deal. I don't want to commit to anything right now, even another one off fling. Anyway if you want to get in touch with me you know how to reach me. It seems you're already more than familiar with my Facebook page.\" She teased. \n\nUpon hearing there was even the slightest chance Brendan would see Rachel again, his spirits soared. He practically skipped away down the steps and onto the main road. \"Bye then...for now!\" He called back, waving as he went. \n\nRachel had to admit to herself that although she'd promised herself that things with Brendan would go no further than today. She enjoyed the thought that she might get to experience that amazing cock of his again someday. \n\nShe felt invigorated by what the future had in store for her now too. It was going to be tough for the next few days. She wasn't looking forward to breaking up with Aaron, even though it carried less of a burden for her now, seeing as she no longer cared about whether his heart got broken. \n\nRachel turned towards the lift, but remembered Aaron was up there watching football with his mates. She decided to wait for her laundry to finish before entering that testosterone filled flat, so she went back downstairs. Was this really going to be her last day in London? She should probably call her parents to let them know she was coming home. Would they be pleased she was back or disappointed? They both liked Aaron so much, but they didn't know the real Aaron, just like she hadn't until this weekend. \n\nOnce she was back home and free from her job, free from her shitty boss and free from her relationship. Then she could start thinking about what she really wanted from life. Could she do a bit of modelling maybe? It sure wouldn't hurt to test the waters. But even if that didn't work out, it didn't matter. She could do whatever she wanted to do and do whoever she wanted. The possibilities were endless. \n\n****** \n\nA special thank you to Bambigirl44 for reading my drafts and giving me feedback on the last two episodes. I found it very helpful. As this mini arc in Rachel's journey has reached an end I am planning on going to back to writing shorter, stand-alone stories in the future. Thanks everyone for reading and enjoying her naughty adventures, long may they continue."
    ],
    "authorname": "roganwriter",
    "tags": [
        "big tits",
        "cheating",
        "blonde",
        "blowjob",
        "old and young",
        "public sex",
        "virgin",
        "big cock",
        "nerd",
        "busty"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/rachel-doesnt-do-normal-pt-04"
}