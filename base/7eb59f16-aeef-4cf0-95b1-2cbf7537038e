{
    "title": "Just the Six of Us Ch. 23",
    "pages": [
        "Here it is my friends. I know you want to get to the good stuff, but have patience, my message is short. Remember to include a return address if you want me to message you back. Remember, I get ALOT of feedback, so don't be offended if I don't get back to you. Check my tumblr for updates, and post your own questions, and suggestions, the link is on my profile.\n\nThanks to Zero for the edits, and suggestions.\n\nChapter 23 \n\nBeth was down in the kitchen cooking breakfast when her brother and sisters began coming downstairs with bleary eyes and tired faces. Silverware and plates clanked as the siblings began to grab some food and sat down to eat. \n\nMike wouldn't look at anyone. He kept thinking about his awful dream last night. He ran a hand across his face and sighed, idly twirling a fork in his breakfast. \n\nSarah glanced over at Danni, who could only shrug as they both turned back to Mike. \n\n\"Everything okay, sweetie?\"\u0080 Sarah asked, after a few moments. \n\nMike glanced up and nodded, forcing a smile. \"\u0080Just... dreams,\" he said, hoping they'd assume he meant nightmares again. \n\nSarah rubbed his shoulders for a few seconds and then lowered her head down, kissing him on the cheek and squeezing him in a hug. \n\nAfter breakfast, Mike and his sisters quickly got dressed for class and headed out. Mike rode with Emma again, but there was a heavy tension in the air between them. \n\n\"Em?\" he said suddenly, \"Have we ever... talked about my dreams?\"\n\nEmma turned and glanced at him curiously. She was wearing a pair of shorts that she knew would show off her goddess-like legs, and a tight, low cut blue shirt. Unusually, her hair hung softly around her shoulders, rather than tied in its usual ponytail. \n\n\"Yeah, sometimes. You've not had any for a while though,\" she said. \"At least before the accident, as far as I know. Why do you ask?\"\n\nMike shrugged, wondering how to broach the subject. If he could tell anyone about his disturbing dream, it would be his twin. There wasn't a soul anywhere that he was be closer to. \n\n\"I had a different type of nightmare last night. I'm not even sure it can be classified as a bad dream. I just don't want you to think I'm a freak.\"\n\n\"Mike, I love you, no matter what you dream. I won't think you are a freak. We're twins remember, chances are that I've had the same type of dreams.\"\n\nThat made him feel a little better, at least. \"It was... dirty,\" he said, lowering his head. \n\nEmma glanced back over at him, her eyebrows raised. \"Nice,\" she said, grinning. \"Those are my favorite kind.\"\n\nMike tried to force a smile, but still felt like a freak. \"No,\" he said. \"It was... different.\"\n\nThey turned into a parking lot at the university and quickly found a space. Emma put her car in park and turned to face him. \n\n\"Okay, how was it different? Did the clown molest you this time?\"\n\nMike chuckled at her, but the action caused pains to shoot through his ribs and chest, and he winced. \n\n\"Ouch, no.\" \n\nHe checked his watch. They had to get to class. He reached for his bag and popped open the car door, gingerly lifting the bag to his shoulder. \"I'll tell you later.\"\n\nEmma shrugged, pretending that she wasn't dying to know what his 'dirty' dream had been about. A thought struck her then, and she tried not to panic, quickly grabbing her backpack and jogged after her slow moving brother. \n\n\"Hey Mike, lemme see your phone a second,\" she called. \n\n\"Huh? Why?\" he asked, reaching into his pocket and pulling out his black cell phone. \n\n\"Just lemme see it,\" she said, yanking it from his hands. She quickly thumbed through his contact list, to Dirty Fuck Slave and changed the name back to Emma before tossing it back to him. \"Thanks.\"\n\n\"What was that about?\" he asked, but stopped, distracted, when he spotted someone he knew. \"No way...\" he said, his jaw dropping. \"Look,\" he said, gesturing towards a petite blonde girl walking by herself. \n\nEmma turned, glad that the conversation had turned from his cellphone. She followed his gaze and saw Emily, his ex-girlfriend. \"Oh yeah, Emily came to see you in the hospital. I thought we told you that,\" she said. \n\nMike called out Emily's name and began to shuffle towards her. \"Emily!\"\n\nShe turned, seeing Mike and smiled immediately. \"Michael! Emma!\"\n\nShe jogged over quickly and gently hugged him, and then Emma. \"How are you feeling?\" she asked, stepping back and looking him over. \n\nA flood of emotions threatened to bowl him over. High School came back to him, how much time he'd spent with her. She looked a little older, but mostly she was the same old girl he'd known in high school. \n\n\"I'm okay, still sore like a motherf...\" he said, remembering suddenly how much she would get on to him for swearing in highschool. \n\nShe chuckled and smiled at him, \"Same old Michael.\"\n\n\"What happened to California?\" Mike asked, and was suddenly sorry that he'd done so. \n\nEmily's pretty face fell when the words left his lips. It was clear that she'd been through a lot in her semester out in California. \n\n\"Well, it was fine for the first couple of weeks, but a lot happened out there, and back here. I'll tell you all about it sometime. I'm here to stay, though. California didn't work out.\"\n\nEmma hugged her. \"It's good to see you again.\"\n\nMike smacked her in the arm. \"Why didn't you tell me she came to see me in the hospital?\"\n\nEmma began to punch him back but thought better of it. \"As soon as you're better, I'm gonna beat the piss outta you again. We kind of had a lot to deal with, Mom and Dad's anniversary, you almost dying.\"\n\n\"It's okay, Michael,\" Emily said. \"I didn't stay long.\"\n\nMike thought back then, to the dreams he had in the hospital. He'd smelled her perfume in his dream.\n\n\"Do you still wear Obsession Nights?\"\n\nEmily smiled and nodded. \"It always did weird things to you,\" she said, giggling. \n\n\"Yeah, it was hard to concentrate when you wore that stuff. It smells so damn good, I'd just go stupid and forget what was going on.\"\n\nEmma giggled and chided, \"When is that different from any other day.\"\u0080\u30fb\n\nMike scowled at her playfully. \n\n\"We've gotta get to class,\" she said. \n\n\"Give me your number so we can talk,\" he said, causing Emma's protective instincts to almost overwhelm her. She had to calm down. She was just a sister now, not a lover, and definitely not a girlfriend. \n\nEmily smiled and took the phone from his hand. Emily was still in the contact list, but the number needed to be updated. As she finished, she handed the phone back to him and straightened the backpack on her shoulders. \n\n\"Text me sometime,\" she said, turning and heading for her building. \n\n\"It was good to see you,\" he called as he watched her walk away. \n\nEmma fought to contain her jealousy. \"Try and keep your eyes in your head and your tongue in your mouth,\" she said, venomously. \n\nMike ignored her, turning and starting towards class, his steamed sister following behind. He could feel the energy of her stare penetrating his back. \"What's the matter?\" he asked, turning and looking at her. That snapped her out of her haze, and the scowl disappeared instantly. \n\n\"Nothing,\" she lied. \"I just don't wanna see you get hurt, that's all.\"\n\nMike turned and headed to his class. \n\nThe day passed uneventfully. After school Mike texted Emily to ask if she wanted to hang out sometime and catch up. \n\n\"Of course,\" came the reply. \"How about I come there?\"\n\n\"Sure,\" he said. \"We can swim if you want.\"\n\n\"Sounds fun,\" she texted back. \"See you in an hour?\"\n\n\"Okay, see you then.\"\n\n* * * * * \n\nBack at home, Emma called a girl meeting and quickly updated them on Emily. They'd been hoping that Mike wouldn't see her until his memory had returned. This had definitely complicated things. \n\nMike walked from his room downstairs through the kitchen and out through the patio door in the living room to clean up the backyard. \n\n\"Emily's coming over to visit,\" he said as he passed through the kitchen. \n\n\"Okay,\" Sarah said, masking the concern in her voice. \n\nDanni plopped her head down on the table with a thunk. \"We're never getting him back now,\" she said. \n\nBeth laid an arm across her. The room was quiet for a few minutes. \"Who would have thought...\" Beth said, cryptically, typical for her. \n\n\"Thought what?\" Sarah asked, after they had stared at her for a few seconds, waiting for a reaction. \n\nBeth smiled and glanced at Danni. \"Who would have pictured Danni a year ago being broken up over Mike not paying attention to her. The old Danni would have paid money to get him to quit bothering her.\"\n\nDanni raised her head and smiled weakly. \"Maybe I need to bring her back and kick the shit out of him again.\"\n\nThe sisters laughed lightly together for a few moments. As the laughter subsided, Sarah spoke up. \n\n\"So what are we gonna do about this one. She doesn't have any brothers that we can get to seduce her, and she's about as pure as girl can get.\" The girls were silent for awhile. \n\n\"Maybe we can just tell Mike what's going on,\" Emma said. \"He admitted that his dream last night was dirty. It was probably about someone he was sleeping next to,\" she said, leaning over and brushing Danni's hair away. \n\nShe smiled and raised her head, \"You really think so?\"\n\nEmma smiled and leaned down to kiss her on the forehead. \"He might be ready to hear what is going on,\" she said, but knew it to be false. The tone of her voice said as much. \n\n\"He was pretty broken up about whatever he dreamed about last night,\" Beth said. \n\nEmma nodded. \"Wishful thinking,\" she said. \n\n\"We can't just up and spill the beans,\" Danni said. \"If he's upset because he dreamed about one of us, how do you think he'll react to the knowledge that he's been fucking all four of us.\"\n\n\"Emily's been through a lot in the past few months,\" Emma said. \"I doubt she's going to want to be in any kind of serious relationship.\"\n\nThat seemed to reassure the other three sisters. \n\n\"We can always torture him,\" Beth said, smiling and winking at the other three. \"It sure is a hot day; if we were to go out in our skimpiest bikinis when Emily gets here, we would need to rub sunscreen on each other.\"\n\nSarah giggled. \"You're so bad, Bethy!\" she said. \n\nA little over forty-five minutes later, Emily rang the doorbell. Danni opened the door and smiled, offering the younger girl a big hug as she stepped inside. \"Hey, how are you?\" she said. \n\n\"I'm okay,\" Emily replied and moved to hug Sarah, who had just come around the corner. \n\n\"Hey Emily,\" Sarah said, smiling. \"Mike's out back, probably bench pressing the lawn mower trying to get all buff and sweaty for you.\"\n\nEmily rolled eyes. \"Same old Michael.\"\n\nImages of Mike's first date with Emily came back to Sarah then. She'd always thought it was curious how she always called him Michael, and not Mike, like everyone else. Mike had been 15 at the time and Sarah had dropped them off at the movie theatre. \n\nBeth came around the corner and Sarah did a double take, covering her mouth for a second. Her perfect breasts were barely covered, blue fabric triangles straining to cover as much of her breasts as possible. Barely a third was covered however, and Sarah was glad that she had put on shorts over the undoubtedly skimpy bikini bottoms. \n\nEmily did a slight double take and giggled, hugging Beth. \n\n\"Good lord, Bethy, you've really come out of your shell!\"\n\nBeth smiled and nodded. \"College will do that to a girl,\" she said. \"I've got another suit upstairs if you wanna try it on.\"\n\nEmily smiled and glanced down at her smaller breasts. \"I don't think I could pull it off, thank you though.\"\n\nBeth laughed and led her to the backyard. \n\n\"Mikey,\" Beth yelled. \"Emily is here!\"\n\nMike turned and gasped as he saw what Beth was wearing. His eyes tried to roll out of his head. \n\nBeth noticed and smiled, as the other sisters came out behind her. \n\nHe put the bag of trash the he'd been picking up in the backyard, windblown from outside their fence, over the fence to the trash cans and turned. His torso was still black and blue in spots but the work outside was loosening his muscles up a bit, and he actually began to feel better. He smiled and reached for his shirt, draped over a chair on the deck, and turned as he pulled it over his head towards Emily. \n\n\"Hey,\" he said simply and wrapped her in a hug. \n\nShe seemed to melt into him for a few seconds and he could feel the memories coming back to him. He'd known it wasn't love back then, when they dated in high school, but that didn't mean that he didn't really care about her. After a few long quiet moments, broken only by the sounds of his sisters getting settled on the deck and divesting themselves of what little remained of their clothing, Mike and Emily pulled apart and headed towards the deck. \n\nMike nearly tripped as he finally spotted his four sisters lounging in their respective chairs. Danni reached over to the small cabinet they kept on the deck to keep necessities, and pulled out a fresh tube of sunscreen. She fought to maintain her grin as Emma took the tube from her hand and moved towards Beth, who lowered the back portion of the chair and laid down on it. Popping the top, Emma squirted some into her hand and began to slowly rub Beth's leg, moving upwards as slowly as possible, deliberately taking her time. She massaged slowly up one leg and across Beth's lower back and down the other leg. \n\nMike fought to focus on Emily as they both sat down in chairs next to an umbrella table. He groaned as he noticed that the chair he'd chosen faced his four sisters. He briefly wondered if something in his head had nudged him towards that particular chair. He had a flash of a picture in his head, a miniature version of himself, locked in a room and banging his fists on a window. Emma distracted him at that point, however, and the image was gone in a split second. He watched as his twin took Beth's foot and began to rub it, moving from it to her ankle up to her calf, and finally her thigh, her fingers moving to the insides of Beth's leg. \n\nSarah had taken the sunscreen bottle from Emma and was gently rubbing Danni down, starting in much the same way Emma had. \n\n\"So how are you really doing?\" Emily asked him, her back to the other girls. \n\nMike cleared his throat and looked back at her. He was momentarily lost as memories came back to him then. High School, dances, parties. She'd always worn her silky blonde hair in two braids, and he loved it when she would let it down. It was up in her customary twin braids, again, however. Her crystal blue eyes were wide, and clear, her skin soft and creamy pale. \n\n\"I'm okay,\" he said, his eyes glancing back to his sisters as Emma's fingers moved. They seemed to be straying very close to Beth's very small bikini bottoms. \n\n\"Sore, of course, but not really much the worse for wear. How about you? What classes are you taking?\"\n\n\"Oh, just the normal entrance classes. College Algebra, English 1301, US History before1865 and a Psych class, along with an Astronomy course. I haven't decided what I'm going to do yet.\"\n\nEmma's fingers worked their way closer to Beth's intimate parts, and Mike breathed a sigh of relief when she moved her hand away. His relief was shortlived, however, she'd only paused to put more lotion on her hand. When she brought it back, she started directly on Beth's ass, which was barely covered by the t-back bikini bottoms she was wearing. \n\nMike tore his gaze away, looking at his other sisters in a bid to calm himself. To his dismay Sarah was gently rubbing the tops of Danni's legs. Mike's attention flicked back and forth between the two pairs of sisters. As if on cue, Emma's hand went back between Beth's thighs and Beth spread her legs just a bit to allow her hand to fit. \n\nMike cleared his throat uncomfortably, glad that his lap was obscured by the umbrella table. \n\n\"So why are you taking first year courses in your second year?\" he asked. \n\n\"California. I left school to come back home. It's a long story,\" she said. \"I'll tell you later.\"\n\nMike smiled and nodded. His attention was then forced back to his twin sister and he couldn't believe what he was seeing. Emma massaged her fingers back and forth on Beth's inner thigh, moving her hand slowly north until they reached the edge of the fabric covering Beth's pussy. She began to rub where she shouldn't have been rubbing and suddenly pulled Beth's bikini aside slightly so a finger slid quickly in and out. Beth seemed not to notice, laying prone as Emma fondled her. \n\nPulling her hand back, she poured more lotion into it as Beth turned over, and Emma started over, working from Beth's feet up. \n\nMike and Emily continued to chat about school, and high school. Emma worked her way up Beth's legs towards her torso, pausing to rub a few fingers deliberately across Beth's pussy, before turning and heading directly for the large globes that had flattened a bit as Beth laid down on her back. Emma's hands moved quickly across, pushing and rubbing at the pale flesh, the triangle actually popping off and exposing Beth's nipple before Emma pulled it back and moved to the other side. \n\nAs she finished, Beth sat up and took the bottle of oil, Danni following suit and both girls beginning to rub down their respective sisters. \n\nMike groaned inwardly again and nodded towards the pool as he looked back at Emily. She nodded, still not aware of the show the sisters were putting on. Mike pulled his shirt off again, kicked off his sandals and slid quickly into the pool. \n\nEmily pulled her tank top off, revealing a dark blue bikini, which seemed infinitely more modest than those that his sisters had chosen to wear. She jumped into the pool and swam towards him. \n\n\"So...\" Mike said. \n\nEmily pushed herself up and out of the pool. She sat on the edge, dangling her feet in the water. Mike came up and wrapped an arm around her ankles. \n\n\"Talk to me. You know you can tell me anything,\" he told her. \n\nShe nodded and lowered her eyes. \"This isn't going to be easy for me to say, or for you to hear.\"\n\nMike nodded, trying to prepare for what Emily might have to say. Whatever it was, she obviously needed to get it off her chest. \n\n\"It all started out in California. Well, sort of. Part of it started back here, but that's a separate part of it. After we split up after graduation, I was lonely, and when I went out to California I met a guy in one of my classes.\"\n\nMike nodded, fully expecting that she had moved on. He still felt the dull knife of jealousy stabbing him in his gut. \n\n\"His name was Shawn. He seemed like a really nice guy, and he was. At least at first. Anyways, we dated for a few months, and I really thought I liked him. He was my first.\"\n\nAs she finished the matter-of-fact statement, she looked up and directly into his eyes, gauging his reaction. \n\n\"Did he treat you well?\" Mike asked, concerned. \n\nEmily nodded and smiled. \"The first time at least. But he began to get weirder and weirder. He kept asking me to let his friends watch, or to bring other girls with me. He even asked if his friends could have sex with me. I thought he was kidding at first.\"\n\nMike didn't look pleased, but it was more pity instead of anger. \n\n\"I should have broken up with him, but he was the only person I'd met out there, and I didn't really feel like being alone in a strange state.\"\n\nMike nodded, his arm still around her legs, trying to comfort her. \n\n\"I began to... to give in to his requests, and every day we began to do different things. Some of it was nice, but some I didn't like. He'd bring girls with him from class, or from the gym, and we'd all have sex. Eventually I let him convince me to share me with his friends. She lowered her eyes again. I'm ashamed to say that I actually began to like it.\"\n\nShe lowered her head at this point and covered her face with her hands. \"I'm so ashamed,\" she said. ",
        "\"Hey,\" Mike said, raising her face up with a finger. \"You've got nothing to be ashamed of.\"\n\nShe nodded and slowly uncovered her face, nervously picking at a fingernail. \"Well, I began to get worried about when it would all slow down, but he just kept getting crazier and crazier. He convinced me to try... letting him put it... somewhere it normally doesn't go,\" she said. \"I began to get a reputation as a girl who'd do anything. I don't know why I kept agreeing to do these awful things. I stopped going to church, and all I wanted to do was have sex all the time. I stopped going to class and all we did was fool around.\"\n\nIt was a painful tale for Mike to hear. He'd known Emily as a pure, innocent girl. To hear that she'd been turned into something so slutty was awful. He felt so sorry for her. \n\n\"Eventually we went to a party and I got drunk, my first time. I woke up and there were so many guys around me. Shawn was off with some other girl, and his friends were just using me. I had a guy in every hole imaginable\" A tear trickled down her cheek. \"The worst thing is that I didn't mind. I woke up the next day, naked, bruised, and sore. I hadn't gone to class or church in at least a month. Someone had taken my clothes and Shawn was nowhere to be seen. I had to do a walk of shame halfway across campus in just my skin.\"\n\nMike sighed, shaking his head and squeezing her knee. \n\n\"Back at home, unknown to me at the time, mom and dad were having problems. Mom began to cheat on dad. She kept going out with a friend of hers and meeting different men. She didn't even try to hide what she was doing. Long story short, she met some guy and ran off with him. You know what a good man my father is,\" she said, looking up at him. It seemed this part of the story hurt more than her California experiences. \"After she left, he never said a word. He started working double, even triple shifts to try to make enough money for my college tuition. He's heartbroken. He loved her with everything he had, and she just stomped all over his heart.\" \n\n\"I haven't spoken to her since the day I left. She's in New Jersey, or New York somewhere, I think. I honestly don't really care though. She can rot, for all I care. Anyways, I came back home to be with him. He can't afford to send me back to California, and I failed all my classes that first semester. He never asked what happened, but I think he blames himself and mom. I don't know that I can tell him the truth.\"\n\nMike pulled her into the pool, wrapping his arms around her and holding her tightly in his arms as she desperately squeezed him back. \n\n\"I was so afraid that you'd yell at me, or tell me to get out, after all the awful things I've done.\"\n\n\"Come on Emily. You know me better than that.\"\n\nShe nodded and leaned against the side of the pool as he released her. \"You aren't disgusted by all the things I've done?\"\n\nMike shrugged. \"I wouldn't have asked you to do any of that, but I won't fault you for doing it. Do you regret doing it?\"\n\nEmily thought for a few minutes. \"I regret drinking too much at the party and everything after that. Everything before that was my own decision though. I hate to admit that most of it was pretty fun.\"\n\n\"There you go. Who am I to judge you.\"\n\n\"Michael, you're the only boyfriend I've ever had. I care more about you than any man in my life - except for my father of course. You are the one that I kept thinking would be so disappointed in how far I'd fallen.\"\n\n\"You know, I haven't been to church since you stopped making me go when you left. Maybe we can both start going again,\" Mike said. \n\n\"That sounds great,\" she said, smiling. \n\n\"Good. How about dinner tonight?\"\n\nEmily smiled. \"Sure. I was hoping we could go out.\"\n\nMike smiled back and turned, glancing back at his sisters. Four heads dropped back down and resumed looking at nothing. \n\nBeth stood suddenly and winked at Emma who glanced over as she stood. Beth stopped and made a show of ensuring her bathing suit covered all of the naughty spots that it needed to, knowing full well that both Mike and Emily were watching. \n\n\"Good lord, Bethy,\" Emily called. \"There isn't much to that thing. What does your boyfriend think of that thing?\"\n\nBeth giggled, causing her breasts to jiggle. A sudden breeze began to blow then, chilling the backyard. Beth's nipples hardened slightly then, and began to press gently against the thin fabric. \n\nMike was in turmoil. He kept wrenching his eyes from Beth, but Emily was positioned next to him, so that when he glanced over at her, his eyes were driven directly to her cleavage. Her breasts were small, apple sized, but extremely perky. They were hard to ignore, to say the least. He desperately wanted to play with them again. \n\n\"I'm not seeing anyone at the moment,\" Beth said and dove into the pool. \n\nUnseen by those on the surface, Beth deliberately pulled her top to the side before turning underneath the water to face Mike and Emily as she surfaced. She came up and wiped the water from her face, back over her head and squeezed her hair out, water running in rivulets down her body and across her breasts, her chilled nipples cutting through the air like small erasers atop her pale breasts. \n\nMike stared dumbfounded for exactly three seconds before shaking his head and turning. \"Jesus Beth,\" he said, unable to stop himself. \n\nBeth feigned and innocent look and then looked down. \"Ooooh,\" she said, and fixed her top quickly. \"Sorry.\"\n\nEmma, Sarah, and Danni laughed quietly to themselves. \n\nAs the afternoon wore on, the siblings and Emily swam, and laughed and had a fun time. Conversation drifted from serious topics like the recent anniversary of their parents death, to lighter topics like Mike playing football in high school. \n\nEmily excused herself later that afternoon to head home to change for her evening with Mike. \n\n* * * * * \n\nAs she entered her house, she dropped her bag and peered into her dad's study. He was concentrating on something at his computer, but lifted his head when she appeared in his doorway. \n\n\"Hey sugar,\" he said. He looked like he'd aged so much. He was only 38, but the stress lines around his face made him look like a beaten man. \"How were Mike and that house full of women that he has to put up with?\"\n\nEmily smiled, glad he still had some humour left. \"He's good, about the same. His sisters have really come out of their shells though, especially Beth. Mike's the same nice guy he always has been.\"\n\n\"You know, I always liked Mike. Its always a nightmare for a father to worry about what sort of intentions a young man has towards his baby girl. I never worried about him, though. I was amazed that he turned out to be such a good guy after what happened to his parents. Did you two talk about getting back together?\"\n\nEmily nodded. \"We're gonna go out tonight, dinner. I'd like to start seeing him again, I think. I'm just gonna take it slow though.\"\n\nHer father pushed his chair back from his desk and looked down at his hands, absentmindedly. \"You know sweetie, I never asked about California. I know something must have happened to you out there. I figured if you wanted or needed to tell me what happened, that you would.\"\n\nEmily nodded. \"Thanks, daddy.\" She moved around the desk and pulled him to her chest, kissing the top of his head and holding him against her chest. She felt so sad for him, she just wanted to hold and comfort him. \n\nHe finally let her go and pulled himself back to his computer, a complicated form sitting amid a pile of other papers. \"Well, let me know if you need to talk, pumpkin.\"\n\nShe nodded and headed off to her room for a shower and a nap. \n\n****** \n\nLater that evening, when Mike had left for his date with Emily, there was a definite sadness hanging about the house. Danni headed back outside and sat in a chair, the evening sun just beginning to sink below the Texas horizon, casting streaks of red, orange and purple across the clouds. \n\nShe reached down and pulled the locket from her neck. It was the gift that Mike had given her on their trip to the Cayman Islands. It was an important memory for her: the first night they'd made love. She closed her eyes and tears slowly began to flow. Popping the small heart shaped locket open, she smiled when she saw that he'd changed part of the picture. On one side of the locket was the picture that he'd taken of her in the Caymans, sunset behind her, wind in her hair. He'd said later that she'd been the most beautiful thing he'd ever seen. The other side of the locket was a photo she'd taken herself. Mike was looking at her with a genuine smile on his face, his hair nicely fixed and his piercing eyes staring straight at her. \n\nEmma came silently up behind her and sat down next to her. They sat quietly for a few minutes, before heading back inside. \n\n****** \n\nThe evening progressed as planned. Mike drove to Emily's house and picked her up. He shook her father's hand, saying how good it was to see him again. He didn't mention the obvious absence of Emily's mother. \n\nAs her father wished them a pleasant evening, Emily leaned over and gave him a kiss on the cheek. \"Love you, daddy.\"\n\nTheir conversation was light that evening until they'd finished their meals. \"So would you like to start dating again?\" Mike asked finally. Emily sighed and Mike had a sinking feeling that he'd moved too soon, that he'd pushed too hard. \n\n\"Mike, I just don't know that I'm worth dating anymore.\"\n\nMike looked at her like she'd just said she was an alien. \"I certainly didn't expect that answer.\"\n\n\"I mean it. I told you everything that I did out there. Don't you find me repulsive?\"\n\nMike sighed and shook his head. \"Emily, whatever you did out there, you said yourself it was your choice. I know you are a good and decent person and I can't fault you for having fun out there. Regardless, let me be the one to decide how I feel about you, and trust me. I'm not a bad guy. I won't ask you to do those things.\"\n\nEmily nodded. \"Mike, my only real regret is that I did all those things with that... bastard and not with you. You should have been my first,\" she said, reaching forwards and clasping his hand. \n\nMike smiled and nodded. \"Lets just take it slow. I'll start going to church with you again and we can see if there's any of that old spark left between us.\"\n\nThe waiter came back and left the check. Mike paid and they exited the restaurant. \n\n\"I had a lovely evening,\" she said, standing outside her door. \n\n\"Me too,\" he said, and leaned forwards, placing one hand behind her head and one on her cheek, cradling it and tilting it to the side, his lips gently pressing against hers. She whimpered slightly and fell into him, their lips parting as they embraced. \n\nEmily smiled as she finally broke the embrace. \"I'll text you tomorrow,\" she said, unlocking the door. \n\n\"You better,\" Mike said, leaning forward and kissing her on the cheek one last time. \"I'll see you soon.\"\n\nSmiling, she waved gently and closed the door as he turned towards Emma's car. \n\nShe heard it start up and drive away and headed for her room. Her dad was busy at his desk and didn't notice her come in. She didn't want to disturb him, so she quietly went upstairs and to her room. \n\nThat night, Emily awoke to a strange noise. She peered around her room but saw nothing. She heard her dad's voice. He sounded distressed. She jumped out of bed and hurried across the hall to her dad's room. Quietly peeking in, she saw her father, still asleep, but obviously in turmoil. He was crying in his sleep, softly. He kept muttering, \"Why,\" over and over again. Emily's heart sank. She leaned forwards and put a hand on his forehead and smiled as he calmed visibly. His breathing deepened and he started to snore softly. \n\nEmily looked at the clock and saw that it was barely 11:30. She sighed and sat on the bed next to him, trying to impart some comfort to him. She absolutely hated her mother for what she'd done. She thought that the woman that had made her go to church all that time was a goodly woman. What kind of person would tear a person apart like she had? Emily vowed to never forgive her for what she'd done. \n\nHer thoughts turned back to Mike. She really didn't know how she felt about him. The kiss they'd shared had been wonderful, but she still felt dirty, like he shouldn't sully himself with her. He was so incredibly good looking, though, almost more-so than he'd been in high school. She sighed deeply, vowing to treat him right. He was such a good person too. So many guys would have never talked to her again, much less shown any interest if she'd mentioned all the things she'd done. Not Michael, though. She knew in her heart that he'd never had treated her like Shawn did. Thoughts of Mike swimming in her head, her father's worried cries silenced and his deep breathing filling the room, Emily returned to her room and fell into a deep sleep. \n\n****** \n\nEarlier that evening, just after Mike had left for his date with Emily, Sarah was in the washroom, starting yet another pile of her laundry. She heard a noise behind her and turned, seeing her younger sister Beth. \n\n\"Hey,\" she said, turning back to her washer. \"What's up?\"\n\nBeth was quiet for a minute. She cleared her throat and tried to speak, but the words came out all jumbled. She sighed and rubbed a hand across her forehead in embarrassment. \"So, I was wondering something.\"\n\nSarah turned and glanced at her again. \"Huh? Whats wrong?\" she asked. Beth didn't reply. \"Bethy, just tell me whats wrong.\"\n\nBeth cleared her throat nervously. \"I'm experiencing...I'm...\"\n\n\"It's okay Beth, just tell me.\"\n\nBeth nodded. \"I'm horny,\" she blurted. \n\nSarah burst into loud laughter. \n\n\"Thanks for being sensitive about it,\" Beth said, slightly miffed. \n\nSarah raised her hand as Beth started to leave and grabbed her arm. She tried to catch her breath and stop laughing. \n\n\"I'm sorry, Bethy,\" she said between giggles. \"Please don't leave, I'm sorry.\"\n\nBeth stood with her hands on her hips. She didn't look amused. \n\n\"I'm so sorry, honey,\" Sarah said. \"I just... after the last time in here you were so deliberate, so direct about what you wanted. You were the last one I expected to be shy about being horny.\"\n\n\"This is all pretty new to me. I get so worked up, and it seems like something else just takes me over. When that happens I'm not shy, and I know exactly what to say and exactly what to do to turn Mike on. But it's different at other times. I still get horny but... I'm trying to deal with it by learning how to...\"she hesitated. \n\n\"How to what, sugar?\"\n\n\"Mtherate,\" Beth mumbled. \n\n\"What?\" Sarah asked, leaning closer. \n\n\"MASTURBATE,\" Beth said finally, way louder than she had intended. \n\nSarah began to laugh again, but not nearly as loudly or as long as the previous time. \"I'm sorry, baby. I just couldn't hear you.\"\n\nBeth was flushed. She turned around and began to leave. \n\n\"Honey, don't go,\" Sarah said. \"I'll be glad to show you how to get yourself off, but you don't need to do that, you have other options you know.\"\n\nBeth nodded. \"I know. I just figured with Mike not remembering what was going on, it might be best if we didn't get too frisky when he's around. I didn't want to, you know... impose, either. I figured you were busy.\"\n\n\"Aww, honey,\" Sarah said, pulling Beth close enough for a hug. \"I'm never THAT busy, and besides, even if I was, Emma is probably just as horny as you are. She IS Mike's twin, you know.\"\n\nBeth giggled at that, and the embarrassment in the atmosphere was broken. She raised her head and looked directly at Sarah, an intense look in her eyes. \n\n\"Whoa,\" Sarah said, seeing something different in Beth's eyes. \"You just got... taken over... didn't you.\"\n\nBeth grinned and grabbed both of Sarah's arms. \"It's like this incredibly persuasive little nymphomaniac in my head has taken over and I know exactly what to do. Maybe I have a split personality.\"\n\nAs she finished speaking, Beth turned her slightly shorter sister around forcefully and pushed her forewards, grinning as she banged into the washer. \n\n\"Whoa, Bethy,\" Sarah said, a shocked look in her eyes. A grin found its way to her lips as Beth came forwards, something else in her eyes. She tried to turn but Beth was right behind her. Sarah felt her sister's hands moving around to the front of the old t-shirt she was wearing and in one swift motion Beth pulled it off and threw it to the floor. \"Oh my... \" Sarah murmured. \n\nA low growl of lust came from Beth's throat as she grabbed the Sarah's bra and pulled it down off her shoulders to her waist, exposing her breasts. \n\n\"Oh dear,\" Sarah said as Beth spun her around and began to kiss up and down her neck. Sarah was wearing lounging pants, but they were quickly pulled down as her possessed younger sister ripped them downwards and to her ankles. Beth dropped to her knees quickly and peered upwards, kissing Sarah's thigh, and moving towards her neatly trimmed pussy. \"I thought... oh dear!... that you were the one that... oh!... needed release,\" Sarah gasped. \n\n\"I told you, something just takes over. I was planning on doing myself, and now, you've... \"offered\" yourself to me, my inner slut just took over my plans. Don't worry though, I'll make you get me off before we're done.\" Beth grabbed one of Sarah's legs and thew it over her shoulder, spreading the other girl's pussy open. \"Tell me if Slutty Beth is a good pussy eater,\" she said, and slowly pushed her tongue into her older sister. \n\n\"Oh my god,\" Sarah said, and glanced down, pulling her own brownish hair back as she did so, seeing Beth's blonde locks cascading around her head as it bobbed slightly, her younger sister's warm tongue exploring her depths. \"Oh, shit...\" she gasped. \n\n\"I'm guessing that's a good thing,\" Beth said quickly, before pushing her tongue back in. \n\n\"Fuck yes,\" Sarah said, gasping and trying to remain standing. Her breath was coming in ragged gasps. \"God, that's the best anyone has ever eaten my pussy,\" she said, almost too loudly. \"Holy shit, Bethy,\" Sarah groaned, one hand covering her face, the other latched onto a handful of Beth's hair, Beth's tongue pulsing against her clitoris and alternating back to her slit. \n\n\"Atta girl,\" Beth said, feeling Sarah's hand pushing her head deeper between her legs. \n\n\"OH MY GOD,\" Sarah shouted, an orgasm slamming into her, wave after wave of pleasure crashing down. \"I can't... I can't...\" she tried to say, and finally her unsupported knee gave out and she began to fall towards the floor. Beth caught her however and lifted her physically smaller sister up, and set her on the dryer, before placing her tongue back where it had been. \"Holy shit, Bethy,\" Sarah said, when she was finally able to breathe again. \"What the fuck got into you?\"\n\nBeth grinned and raised her head from between Sarah's legs. \"Nothing yet,\" she said, and pulled Sarah from her spot on the dryer. \"I'll let you decide what to put in me though,\" she said, a wicked grin on her face. Grabbing Sarah's arms, she spun them both around and kissed her deeply on her lips, Sarah still trying to catch her breath. \n\n\"Fuck, you are... possessed!\" Sarah said, breaking away for a second. \n\n\"I can try and turn it off,\" Beth said, both fingers hooked in the tops of her spaghetti strap top. \n\nSarah smirked at her and shook her head. \"You better not, you little temptress. I can be just as aggressive,\" she said with a grin. Grabbing Beth's top, Sarah yanked it down, revealing Beth's pert nipples and heavenly breasts. Grinning, Beth began to wiggle out of her shorts, and soon they had dropped to the ground, followed quickly by her panties. Grabbing a handful of Sarah's hair, she forced her to her knees and pushed her blonde haired pussy closer. \n\nSarah looked up and grinned as Beth forced her face deeply into her waiting cunt. \"Eat it,\" Beth growled crudely. Sarah looked up defiantly and shook her head. ",
        "Beth tightened her grip on Sarah's hair and yanked the older girl's head back. Wincing, Sarah giggled, but finally acquiesced. Diving forwards, she latched both hands around her younger sister and attacked the blonde girl's pussy. Soon Beth's hips were moving in time with Sarah's lapping tongue, Sarah licked in broad strokes before plunging her tongue into Beth's depths, then pulling it back sucking on the clitoris, both hands locked around her thighs, Beth made a soft grunting noise as she began to feel the orgasm build until it finally crashed over her. \n\n\"Fuck, fuck, fuck, fuck, fuck, fuck, FUCK!\" Beth sputtered, her legs growing weak as she came. Spent, she collapsed down atop her naked elder sister, and the two began to kiss, tongues dancing amid their own feminine juices. Several long minutes of kissing later, they both lay still on the clothes strewn floor, fingers entwined in hair, soft kisses being placed on cheeks and lips. \n\n\"I'm sorry,\" Beth said. \n\n\"Aw honey,\" Sarah said. \"Don't worry, I had a blast. Like I said before, I like it when Temptress Beth takes over.\"\n\n\"Still, I hope I didn't hurt you,\" Beth said. \n\nSarah twirled a lock of blonde hair in her fingers as Beth began to kiss her chest affectionately. \"You said something takes over?\"\n\nBeth sucked a nipple into her mouth and nodded. \"I guess you could describing it like being really angry and seeing red. Like when a rage takes over and you just want to beat the crap out of something. It's like that, except with sex, and multiply it by a hundred.\"\n\n\"Holy shit,\" Sarah said, digesting what Beth said. \"So the lesson is, don't get you turned on if we can't finish what we start.\"\n\nBeth giggled. \"Slutty Beth showed up so quickly this time. With Mike, it was days of tortured playing around it. Now that I know more about sex, I'll have to be careful.\"\n\n\"We'll go to my favorite little sex toy shop and get you a few toys,\" Sarah said. \"Just in case, Slutty Beth shows up again.\"\n\n\"I thought you were calling her Temptress Beth.\"\n\nSarah shrugged and smiled as Beth moved to her other breast. \"We'll let Mike decide what to call her.\"\n\n\"If he ever remembers,\" Beth said. \n\nSarah sighed deeply. \"Yeah. There is that.\" Sitting up, she kissed Beth one more time. \"Come on, lets go watch TV.\"\n\n****** \n\nMike pulled into the driveway in Emma's car. The front porch light wasn't on for him, but he could see the living room light on. He entered quietly and saw Sarah sitting on the couch watching TV, Beth snuggled up closely to her. He smiled as he came around the couch and sat down. \n\n\"Hey sweetie,\" Sarah whispered. Beth was snoring quietly, her head laying on Sarah's chest. \"How was your date?\"\n\n\"Well, she's definitely not the same old Emily that I remember.\"\n\n\"Oh yeah? How so?\"\n\n\"Well, a lot happened out in California, and her mom ran off with someone else, to New York, she said. Emily flunked out of school out there, and her dad couldn't afford to keep sending her, so she came back here.\"\n\n\"Poor Emily. Any idea why she failed out of school?\" Sarah asked, concerned. \n\nMike nodded. \"Boyfriend problems,\" he said, reluctant to say more. \"Guess I'll turn in.\" \n\n\"Before you go,\" Sarah said as he started to rise. \"I was thinking; we can go look for another vehicle tomorrow, if you'd like.\"\n\nMike smiled. \"I'm guessing there was no saving my old truck?\"\n\nSarah cast him a sympathetic wince. \"Sorry Mike,\" she said, shaking her head. \n\nHe shrugged, glad that his parents had left them so well taken care of. Sarah was great with their money and investments, ensuring that they'd have plenty of financial assets to take care of any problems, like needing a new truck. \n\n\"Tomorrow after class then?\" he asked. \n\nSarah nodded and smiled. \"It'll be Friday right?\"\n\nMike smiled and turned again, heading for the stairs. \"You need help with Beth?\" he asked, although he knew that he was still a little too fragile to be much help. \n\n\"Nah, thanks,\" Sarah smiled. \"It's nice holding one of my girls.\"\n\nMike nodded and turned. \"Night.\"\n\n\"Night, sweetie.\"\n\nThe quiet sounds of the TV faded as he headed up the stairs and to his room. His desk lamp was shining from beneath the door to his room, and he quietly pushed the door open. Danni looked up from her spot on the bed, smiling as she peered at him over the top of her book. \n\nMike raised a hand and waved quickly, heading towards his dresser, peeling his shirt off and reaching for a fresh pair of boxers to sleep in. As he finished dressing for bed, Danni was laying her book down and scooted over to her side of the bed. She was wearing an old shirt of his, her soft skin looking pale in the dim light of the room. Her hair was tied in a ribbon. Mike stopped and cocked his head curiously. \n\n\"What's wrong?\" she said, seeing his expression of confusion. \n\n\"I... I remember something.\"\n\nDanni couldn't contain the hopeful look on her face. \"What is it?\" she asked hurriedly. \"Are you okay?\"\n\nMike nodded and gestured towards her hair. \"The ribbon. I... can't place it...\"\n\nDanni smiled and nodded, remembering very well the night that she'd dressed up for him, a ribbon in her hair, the night of the camera. \n\nMike was scouring his mind, and once again he had a flash of an image of a tiny version of himself banging hands and head on the windows of a door-less room. It was gone in a flash and replaced with an image of Danni, hair curled up in the ribbon, her finger in her mouth biting it sexily. \n\nMike shook his head, the image disappearing. \"What the fuck is wrong with me,\" he said, not intending it to be out loud. \n\nDanni, her hopes dwindling, threw her covers back and patted the bed beside her, misunderstanding what he was saying. \"You'll remember soon enough,\" she said. She'd almost called him lover, but held it back just in time. \n\nMike, glad that she couldn't know what images had flashed through his mind, nodded and smiled, laying down in the bed beside her. He faced away from her this time, and Danni, wishing that he'd wrapped his arms around her, resigned herself to turning over and going to sleep. \n\nAfter a few minutes of silence, Danni turned back over and looked at Mike, his eyes were closed and he breathing grew deeper, his mouth open. She loved the way his face looked when he slept, and loved to watch it even more. The muscular yet soft contours of his jaw and neck, his brown hair, his scruffy face, desperately needing a shave. His breathing was slow and rhythmic. It was comforting for Danni, hearing it night after night. She doubted she could sleep without him next to her, hearing his breathing, smelling him, feeling his weight, his presence near her. It was almost too much to bear not being able to lean over and kiss him. A single tear dropped onto her pillow as she turned over. \n\nThe movement of Danni's settling roused Mike slightly. He reached out, and his free arm around Danni's waist, pulling her close. \n\nDanni put a hand to her mouth and covered a smile, the tears of sorrow turning to tears of happiness. Part of him still remembered, she knew. Sighing happily, she let sleep take her, before MIke turned over and released his hold on her. \n\n****** \n\nSun pierced the morning air, pushing through the curtains and dancing about the room. It was getting a little colder in the mornings, and there was a definite chill in the air as Mike slowly swam up out of his dream. Slowly opening his eyes, he saw locks of brown hair, close, incredibly close. \n\n'Danni,' he thought. He felt her warm softness pushed up against his chest, their legs bent together, her breathing synced with his, in... out. He had to admit, however awkward this felt, or how dirty his dreams got, this felt really nice waking up next to her, and her not heaving something heavy at him. He inhaled deeply and had a flash of soft lips on his own. Curious, he inhaled again, and then again, drawing in her scent, so feminine and sweet, mysterious and alluring. Though it made him feel like a complete pervert, he had to admit that it felt really nice to sleep next to his big sister. She was just so warm and soft, it made him not want to move, just so she'd stay next to him longer and he could experience this warmth and affection coming from her. Is that what it was? Affection? He could definitely feel how she was pushing up against him, almost as if she needed him next to her. It made him feel... manly, needed, necessary. It seemed familiar to him somehow, but he couldn't remember feeling it before. It must have been a memory from before the accident. \n\nDanni stirred next to him, and Mike froze. His dick was as hard as a rock, his body performing its night ritual of making sure all of his equipment still performed. As a guy he knew that there wasn't a hard-on that he'd have all day that was hard impressive as morning wood. It was the best time to masturbate, if you could manage it before you had to do your morning duties. He threw that idea out the window though, when he realized where his cock was wedged. It was sticking straight out from his body, wedged firmly between Danni's cheeks. She straightened her legs as she began to slowly surface from her slumber. \n\nThe soft brunette form next to him sighed in her sleep and pushed her hips back, the tip pushing forwards, poking out from between her legs, underneath the covers. Mentally face-palming, Mike groaned inwardly and silently raged at how to get out of this predicament. \n\nDanni groaned again and pushed back, still seemingly asleep. 'Shit,' he thought. 'She must think I'm an old boyfriend or something.' He had to get out of there, there were no two ways about it. \n\nMike pulled his cock from between her legs and stood quickly, opening the door and heading towards his bathroom, praying that no one would be in it. The door was cracked, but the light was off. Offering a silent prayer, Mike looked at the ceiling and mouthed a thank you, before disappearing behind the bathroom door to take a cold shower, a very, very cold shower. \n\nBack in his room, Danni was grinning in bed. She'd been awake for several minutes, enjoying the feeling of him, and had been aware of his erection. A naughty streak had struck her and she decided to push her luck. The tip of his cock had pushed tightly against her opening, popping against and then passing it, sliding forwards, rubbing against her clitoris for a brief second. \n\nThe old Danni would have teased him mercilessly about it. Then again, the old Danni wouldn't have been sleeping in the same room, let alone the same bed as her little brother. Little brother, could he really be called that anymore? He was physically larger than her, could pick her up and throw her if he wanted. He could make her squeal with pleasure if he wanted... if only he could remember that they'd been fucking. It was almost as if he were her big brother rather than her 'little'\u0080\u30fbbrother. All she had over him now was age. \n\nGiggling happily, she forced herself from her lover's bed and headed downstairs to push Sarah out of the shower, stopping to grab Mike's camera and its incriminating photos, intending to hide it somewhere in her room. \n\n****** \n\nAn hour later, Mike was dressed and sitting at the kitchen table, enjoying some breakfast when Emma came downstairs. She was wearing what looked like yoga pants and matching shirt, her athletic form clearly visibly in the tight material. Mike swallowed hard as she headed to the fridge, her ass bouncing slightly and flexing back and forth. Bending over with her legs straight, she reached into the fridge. \n\nAt the sink, Sarah covered her mouth and quietly shook her head, giggling silently to herself.\n\n\"Ass,\"\n\nMike whirled his head around and looked behind him. \"What the hell was that?\"\n\nFour feminine heads turned and looked at him. \n\n\"You didn't hear that?\" He asked. Their expressions answered his question for him. \"Never mind,\" he said, returning to his breakfast. 'I'm losing my shit,' he thought. He'd heard something, he was sure. It was quiet though, far off. Like someone yelling at him in a rainstorm or something. \n\n\"So, Sarah mentioned that you were going to look at trucks today?\" Emma asked. \n\nMike, pushed back into the conversation, swallowed his food and nodded. \"Yeah, that's the plan. After class, I think.\"\n\n\"Any idea what you are gonna get?\" Beth asked, sipping some of her fruit smoothie. \n\n\"Probably the same kind,\" Mike said with a shrug. \n\n\"What color?\" Sarah asked. \n\n\"I dunno,\" Mike shrugged, disinterested. \"Same color I guess.\"\n\n\"Aw, come on, dude,\" Emma said, punching him in the shoulder, drawing a groan and a wince of pain. \"Live a little, you can change colors.\"\n\nIrritated, Mike smacked her in the stomach with the back of his hand, drawing a wince and groan. \"Okay, you're right, I'll change colors.\"\n\nEmma still groaning at the hit, turned and smacked him in the back of his head as she sat in her chair.\n\n\"So what color?\"Beth asked. \n\n\"Fuck's sake,\" Mike said. \"Piss yellow, okay! I'm gonna get them to paint the ugliest yellow I can find.\"\n\nBeth cocked her head, very \"Beth-like\" and looked at him curiously. \"Why would you want an ugly truck?\"\n\nGroaning Mike stood as they all had a good laugh at his expense, and he headed towards his room to grab his backpack and its heavy weight of back pain and muscle aches, before heading down and sitting in Emma's car. \n\n\"Aw come on Mikey,\" Sarah called. \"We love you,\" all four sisters finished together, crooning sarcastically. \n\nGiggling, Emma finished her apple and grabbed her bag, heading out after her twin. \n\n\"So how did your date go?\" she asked. \n\nMike ignored her for a second, but decided to let it go. \"It was fine, but Emily is... different.\"\n\n\"Yeah, I kinda got that feeling from you, twin intuition I guess. It seems like you still like her, but something's changed hasn't it.\"\n\nMike nodded. \"California was hard on her. It was... life changing, here and there.\"\n\nEmma nodded. That had been the impression she'd gotten from her twin. \"I know you two weren't ever really in love,\" she said. \"What happened out there?\"\n\nMike shrugged, Emma was patient however. She knew he'd eventually tell her, there were no secrets among twins. Well, almost none, she thought. \n\n\"She met a guy out there,\" he said. \n\n\"Does that bother you?\" Emma asked, glancing over and trying to get a feeling for his reaction. \n\nMike shook his head. \"No, I expected it. Like you said, we were never really in love. I don't think I ever opened myself up to her enough.\"\n\nEmma nodded and turned back to the road. \n\n\"He was her first, but that doesn't bother me either. Actually, none of what she told me bothers me in the way you might expect. It's kinda weird. I mean, the stuff he convinced her to do... thinking about it makes me angry, but I care about her and I won't judge her harshly over stuff like that.\"\n\nEmma turned and looked at him, and Mike suddenly remembered that she had no idea what he'd been told. \n\n\"Shit,\" he said. \"Sorry. I forgot you didn't know the history. Emily said that this guy was weird. He was normal at first, she said. He was caring and tender their first time, but after that, he kept asking her to let him bring other girls to sleep with them. She figured, what the hell its college and tried it. Apparently she loved it, because she kept doing it. He started to bring his friends over and have threesomes and eventually she got a reputation as a girl who would try anything.\"\n\n\"EMILY?\" Emma said, shocked. \"She was such a pure, Christian girl! I mean, how many times did she try to get you to persuade me to come to church?\"\n\nMike nodded. \"I know. Eventually she went to a party and got drunk for the first time. She passed out and the next thing she remembered, she was surrounded by naked guys, most of them doing something to her. She said that was the only part she really regretted, other than her first time not being with me. She said that she'd flunked out and had only been interested in sex.\"\n\nEmma turned onto the road leading to the University.\n\n\"Meanwhile,\" Mike continued, \"She said her parents split up. Her mom started cheating on her dad and ran off to New York or something. Her dad couldn't keep up with California out of state tuition and she'd flunked out anyways. So she's home, for good.\"\n\n\"Well, good,\" Emma said. \"She belongs here in Texas. I'm glad she's back.\" As she spoke, Emma realised that she meant it. She didn't feel threatened by Emily, which was really odd, considering that Emily now seemed to occupy the attention that Emma and her sisters had lately enjoyed. \n\n\"Me too,\" Mike said. \"Even if we don't start dating, I'll be able to keep an eye on her here, and keep her safe.\"\n\nEmma smiled as the pulled into a parking spot. \"Just as long as you don't forget to keep an eye out for your sisters,\" she said. \n\nMike turned and smiled. \"Always. You girls are always my first priority.\"\n\nAs he finished, Emma turned and got out of her car, and Mike couldn't help but stare at her ass as she bent forwards slightly. \n\n'I'm fuckin' nuts,' he thought. \n\n* * * * * \n\nWhen Mike and Emma returned home from school that afternoon, they saw Sarah sitting at the kitchen table. \n\n\"You guys ready to go look at a new truck?\" she asked. \n\nA few hours later, Mike pulled back into the driveway with his brand new blue Ford. They had gotten a decent deal at the dealership, especially after Sarah had pulled an inspired ace and told the salesman about the recent wreck. \n\nMike was adamant about the color, and no matter how much Emma prodded him, he wouldn't change it. After all the paperwork had been signed, and the check had been written, Mike drove with Emma while Sarah followed behind. \n\nWhen they got home, Beth was in the kitchen making something with Danni. After a few minutes looking over his new truck, they all went back inside. The evening progressed like any normal family's routine: supper, a few hours of TV, followed by sleep. \n\nMike trudged upstairs after ensuring that everything was locked down tight, and knocked on his own door, not wanting to walk in on Danni changing. \n\n\"Come in,\" Danni called softly. \n\nMike entered and began to pull off his blue jeans, careful to keep his boxer briefs firmly in place. Danni was still in her own clothes however, and was poking around in his closet. After a few seconds, she finally turned. \"Do you have an old shirt I can wear?\" \n\nMike nodded, pulling his shirt over his head and tossing it towards the dirty clothes hamper. \"Sure, I've got the perfect one.\" He pulled open a drawer on his dresser and rummaged around, pulling out a shirt that had clearly seen better days. \"Wait, let me get something else,\" he said quickly. The shirt had several holes and would barely contain her curves, causing him no end of discomfort. \n\n\"No,\" she said, reaching forth and snatching the shirt from his hands. \"This will be fine,\" she said, a little too quickly. Mike, clad only in his underwear, quickly turned and headed to his side of his bed. He pulled the sheet over himself just as Danni turned and began to undress, as if he wasn't even in the room. Very slowly, very deliberately she undid the button on her shorts, turning to the side and slowly sliding them down over her smooth legs. Her panties, pink from what he could tell by the lamplight, thankfully stayed in place. She straightened them anyways, and lifted the edges of her shirt up, slowly pulling it up and over her head. Reaching behind her, she undid the pink bra and pulled it off, heading to the dresser where she'd left a brush. Gently brushing out the tangles, she was keenly aware of her brother's eyes on her. \n\nMike knew he should look away, but couldn't tear his eyes from her. She was gorgeous, almost breathtaking in the pale light of his bedside lamp. She looked so soft, so feminine, her sleek muscles tensing and flexing beneath her smooth skin as she brushed her dark locks. Mike felt his cock start to harden and swallowed hard as she turned back towards the bed, reaching over and grabbing the old A&M shirt and pulling it over her torso. There were several holes in the shirt, one noticeably beneath one of her breasts, the curve pushing out. ",
        "\"There we go,\" she said, smoothing the bottom of the shirt out. \n\n\"You sure you don't want something that fits better?\"\n\n\"This is soft, and its fine,\" she said, peering down. \n\n\"It's... got holes,\" he stammered. \n\nDanni giggled and nodded. \"Yeah, but it's just skin and breasts. Nothing you haven't seen before, silly.\"\n\nMike nodded. 'Yep, just breasts,' he thought. 'Wait, that wasn't right,' he thought. \"Yeah, I've seen breasts, but you're my sister.\"\n\nDanni shrugged and pulled the sheet back, intending to crawl in beside him. Mike moved to cover his hard on, and Danni couldn't suppress a giggle. \"It's okay Mike,\"she said. \"You're my brother and I love you.\"\n\nShe leaned over, placing one leg over him and leaning forwards, her breasts against his chest. \"It's natural Mike. I notice it every morning, you don't have to be embarrassed. I'm not going to start teasing you about it.\"\n\nShe leaned up and kissed him on the forehead, bringing her other leg up and laying it beside his body, effectively straddling him, his cock pushing against her tender parts, though she seemed to be ignoring that fact. \"I'm not the same old Danni that you remember, our relationship has... changed.\"\n\nMike nodded, \"I know.\"\n\n\"Are you okay?\" she asked, relishing the feeling over his erection pressing against her. \n\n\"Mmm hmm,\" he said, his eyes closed. Danni hugged him again and slid off, turning over and giggling to herself. It wasn't fair, she told herself. She so desperately wanted to slide her panties off and let him in, but she knew she couldn't. \n\nMike groaned to himself. It had indeed felt heavenly, but he knew it was wrong. Wasn't it? She was his sister, it had to be wrong. 'Why the hell does it feel so damn nice being near her, then, genius,' he thought. \n\nMike's dreams that night were of Danni. She was torturing him, though it wasn't painful torture. She would tear his clothes off and run her fingernails down his skin, almost to his cock before his clothes would appear. Then she would be lowering herself slowly towards his manhood, before raising up just out of reach again. \n\n****** \n\nEarly the next morning, Mike awoke with a face full of brown locks, inhaling her sweet smell. He felt her soft form tucked up next to him, her warmth seeping into him as she slept, and how soft her skin was from her waist to the feminine rise of her hips. \n\nMike rose quickly, lest he repeat yesterday's morning wood shenanigans and headed off to the shower. His body was healing quickly, he noticed, looking at his torso in the mirror and reached for his shaving cream and razor. \n\nThere was a quiet knock on the door, and a slight creak as a blonde head poked in as it swung open. Beth, also wearing an old shirt of Mike's, smiled and opened the door. Mike nearly cut himself shaving as she came in, glad only in a bra and panties. \n\n\"Goddamn, Beth,\" Mike stuttered, averting his eyes. \n\nBeth looked down at herself, feigning Beth-like ignorance. \"Something wrong? I just need a shower.\"\n\n\"Nn... no,\" Mike stuttered as she entered and reached into the shower, turning on the water. As she leaned over, her breasts wobbled slightly as her arm twisted the knob. She turned as the room began to fill up with steam, waiting for the water to be warm enough, and then turned away from Mike, reaching behind her to unclasp the bra caging her perfect breasts. \n\nMike, drooling like a fool, finally shook himself from his boob-filled reverie and tried to avert his eyes as Beth began to peel her panties off, quickly stepping into the shower and gasping as the hot water hit her skin. \n\nMike quickly finished shaving and headed back to his room to get dressed. After pulling clean clothes on, he reached for his cell and thought about texting Emily. Glancing at the clock, he decided that it wasn't too early and sent her a quick text, asking if she'd like to get together tonight. She responded quickly, saying that it would be fun if they went to dinner. \n\nMike sent a smiley face back, and told her he'd call her later before setting the phone down and heading downstairs. He spent the rest of the morning and afternoon outside, cleaning the pool, mowing, doing other outside work. His thoughts lingered on Danni, however, and he began to feel ashamed. His imagination kept drifting to images of Emma's ass, or Beth undressing to get into the shower. He felt like a pervert, and pushed himself harder, trying to work out the sexual frustration, though his bones and muscled still ached with every move, he needed the distraction of the pain. \n\nLate that afternoon, Mike put away the hedge trimmer and wound the extension cord back up, locked the tool shed up and headed inside to shower. As he entered, Emma was coming in the front door from a run, followed by Danni. Both girls looking sweaty, and tired. Mike stood transfixed as they kicked off shoes and pulled t-shirts off of sweaty bodies until they were in running shorts and sports bras. Finally prying his eyes away, he turned and headed upstairs to shower. \n\nDanni grinned and nodded after Mike's retreating form to Emma, who caught the wink and knew what Danni was implying. Time to torture the little brother a bit. Grinning, Danni turned and headed to the shower that she and Sarah shared. \n\nMike was pulling the bathroom door closed when Emma stuck her hand in, pushing it open as Mike scowled at her. \"Dibs,\" he said. \n\n\"Mm hmm,\" Emma said. \"You don't need help pulling that sweat soaked shirt off?\"\n\n\"No,\" Mike said, lamely. \n\nEmma looked at him blankly, and pushed her way inside, not to be deterred. \n\nSighing, Mike turned and moved back towards the shower. He'd just have to deal with it, he supposed. There was no way he could tell anyone about being turned on by his sisters. It was too weird. \n\nHe felt Emma move quietly up behind him and then felt the soft touch of her fingertips near the bottom of his sweaty shirt, gently pulling upwards and peeling the damp garment off of his torso. Groaning, he lifted his arms as she pulled it over his head and tossed it into the laundry basket. He turned, expecting her to be leaving the room at that point, but she pushed his shoulder turning him back away from her before hooking her fingers in the tops of his shorts and pulling down. \n\nMike grasped quickly at his pants as she started to pull. \"Em, what the fuck?\"\n\n\"I'm helping you, doofus. I've seen you naked hundreds of times, we're twins remember.\"\n\nMike eyed her suspiciously over his shoulder and sighed, releasing his hold on his shorts. \n\nGrinning to herself, Emma turned him around and pulled down, \"accidently\" pulling his boxers with the shorts and leaving Mike covering his manhood, clad only in socks. \n\n\"Wow, nice socks,\" Emma teased. \n\n\"Eat it,\" Mike said, heading to the shower. The steam from the hot water was filling the bathroom. \n\n\"Hurry up, I need one too,\" she said, as he clicked the door closed. Mike groaned from the shower as the water hit his back and shoulders. It felt incredible, but the ache from his muscles was too much and he started to exit. \n\nEmma had peeled her shorts off and was clad in her sports bra and panties, her sweat slicked body gleaming in the bathroom light. Mike groaned again, not from the aches this time, however. \n\nEmma turned and feigned a look of concern. \"Still sore, bro?\" she asked. \n\nMike nodded, reaching for a towel and starting to exit the shower. \n\n\"Wait, nasty ass! You didn't even shower yet!\" Emma yelled. \"Just stay there, I'll help you, Jesus.\"\n\nMike tried to say something to decline the offer, but all that came out was another groan as a pain shot through him. 'Maybe working outside all day wasn't such a great idea,' he thought. \n\nThe door opened wider, and Emma, still in her sports bra and underwear and holding a washcloth, stepped in. \n\n\"Turn towards the water,\" she said, reaching for the soap bottle. Mike nodded, still covering his dick and faced away from her. He was grateful that she'd kept her clothes on, at least. Mike felt the washcloth begin to rub down his body, and truthfully, it felt extremely nice. Emma seemed to be massaging him while she washed him down and cleaned his body. Her hands moved from his head and neck down to his shoulders, back and finally his buttocks. \n\n\"Here,\" she said, reaching for his hand and putting the washcloth in it. \"Wash your own ass,\" she said exiting the shower and grabbing another washcloth. \n\nShe stopped just outside the door as Mike tossed the washcloth into the basket, having finished washing what she'd said. \"Thanks for the help,\" he said, starting to pull the shower closed. \n\n\"I'm not done yet, genius,\" she said, hopping into the shower again. Mike groaned again. Emma bent down and washed Mike's legs, her fingers rubbing the soapy rag over his sore muscles, kneading and pushing as she cleaned the sweat away. \"Turn around,\" she said. \n\nMike obeyed, but kept his hands covering his groin. \n\n\"Here, hold this for a second,\" she said, holding out the rag. Mike grabbed it with one hand and swore softly to himself she began to reach up and peel off her own top. \n\n\"Em, what the hell...\" he said. \n\n\"What, I'm soaked and this thing is starting to constrict. You've seen me naked,\" she retorted. \n\nMike closed his eyes for a second, but opened them again quickly and found himself staring down at her small apple sized breasts, her nipples erect. She turned to the side and began to peel off her soaked panties, tossing both over the shower door. \n\n\"There, much better,\" she said. \"Turn towards me,\" she commanded, snatching the rag from his hand again and reaching for the soap. \n\nMike tried to close his eyes, or tear them from her body but he was transfixed. If she noticed him gawking at her, she didn't say anything. \n\nShe began to scrub him down again, starting at his shoulders, moving downwards from his neck to his chest and to his stomach, then to his sides and back up. \n\n\"Lift your arms,\" she commanded, intending to wash his armpits. Seeing his hesitation, she reiterated her command. \"Lift!\"\n\nSighing, Mike did as he was told, his semi-erect cock flopping out from his grasp and bobbed up and down. Emma smiled to herself and began to wash her brother, running the rag in his armpits and scooting as close as she could while she scrubbed, moving back over his chest as the warm water cascaded down around them. She squirted some more soap and lowered herself to her knees as she began to wash his legs, seemingly oblivious of the cock bouncing upwards as it hardened, barely two inches from her face. Mike lowered his arms and tried to cover his dick up again, but it wasn't having any of that nonsense and poked out from behind his fingers. \n\n\"Sorry,\" she said as she suddenly reaching up with the rag and grasped his cock, stroking the soapy cloth over it, and then down, underneath to wash his balls. She seemed to ignore the look of consternation on his face and continued to stroke, pretending to wash. \n\nMike was torn between pleasure and embarrassment, between was seemed wrong but felt so right. Emma continued to slowly stroke him as she stood up and moved close to him. \n\n\"My turn,\" she said, withdrawing her hand from his rock hard cock and handing him the rag. She turned around and stood, her ass brushing against his bobbing cock. When he didn't respond, she turned and nodded her head. \"Soap, rag, water, wash. I cleaned you, now you return the favor. We'll call it even.\"\n\nMike, desperate to try and think about something other than Emma's hand on his cock, or her face two inches from the tip, gladly squirted some soap onto the cloth and began to scrub her down, moving down her body and to her ass. As he continued to scrub, she noticed how long he was taking cleaning her buttocks and giggled. \n\n\"I think my ass is clean now,\" she said, and turned. \"Now the front.\"\n\nMike, not thinking clearly, moved forwards and reached for more soap. As he did so the tip of his cock pushed forwards and brushed against Emma's pussy, touching just briefly before coming to a stop in her pubic hair. \n\nMike, his brain overloaded, stood stupidly, his cock brushing gently against his twin, his arms holding soap and a rag. \n\n\"You gonna finish me?\" Emma asked. \n\nMike shook himself back to the present and nodded, bringing the rag down between them and beginning to wash her shoulders, to her arms, and then her armpits and to her stomach, moving away from her breasts. \n\nEmma was going to say something, but decided to let it go, having his cock so close was hard enough not to grab him and force him inside her. \n\nMike closed his eyes then as Emma took the rag from him. Placing it on a shelf in the shower, she wrapped her arms around her brother and pulled him close, his cock sliding forward between her legs as her pussy rubbed across the top of it. \n\n\"I love you, Mike,\" she said, leaning down as the water ran down both of them. \n\nOnce again, Mike had a single picture pop into his head for a split second before it was gone again. This time there the miniature version of himself in the tiny room with no door was standing still, his head in his palms, crying, or so it seemed. It too was gone in a flash. \n\nMike, his brain doing somersaults, managed to mumble, \"Me too,\" as Emma abruptly exited the shower, grabbing a towel and heading to her room. \n\nMike, his cock hard as a rock, stood for a few minutes in the shower trying to figure out what the hell had just happened. Finally deciding that he was tired and had probably misinterpreted the whole episode, he left the bathroom and got dressed for his date with Emily. \n\nChoosing a blue polo shirt to go with his favorite pair of blue jeans, Mike kept returning to the past few days events. His sisters were deliberately showing him more attention than normal, and not just regular old sisterly attention. He wasn't going insane, they were being overtly sexual with him. He didn't begin to understand why. \n\nMike sighed and headed downstairs towards his new truck. What the hell were they trying to accomplish? It felt good, that much was obvious, but were they actually trying to get him to do something with them, or were they just teasing him for fun? He couldn't focus, he realized, and shook the thoughts from his mind. \n\nSarah was in the washroom when he poked his head in and told her goodbye. \n\n\"Have fun on your date,\" she said, in the same old motherly tone that he'd grown accustomed to. \n\n\"Thanks, I should be home pretty early,\" he said turning and heading for the door. \n\nHe climbed up in his truck and smiled as it roared to life. He clicked on a classic rock station, and 'Kick Start My Heart' thundered through his new sound system. He smiled and pulled out of his driveway, heading towards Emily's house, but again thoughts of his sisters began to swirl around in his brain. He kept thinking of Beth getting naked in front of him, Danni's warmth soaking into him, or Emma, sweet, innocent, tomboyish Emma, being so damn sexy. \n\nSighing, Mike shook his head yet again and tried to focus on driving. He soon arrived outside Emily's small house. He got out of the truck and went up to the door, knocking and waiting patiently. Emily's Dad opened the door and greeted him with a warm smile. \n\n\"Hey Mike, how are you?\" he asked politely as he held the door open for him. \n\n\"Still a little sore, but otherwise I'm okay, sir,\" he replied politely. \n\n\"Emily told me what happened,\" he said. \"Let me know if there's anything I can do to help you guys.\"\n\n\"I appreciate that, but I'm just trying to piece things together from before the accident. I only lost about a year or so. You'd think it'd come back, but no luck yet,\"he said, following the older man inside. \n\n\"Well, give it time, I'm sure you'll remember,\" he said. \n\nMike wanted to offer condolences, or to tell him how sorry he felt for his troubles, but it was clear that the man before him wasn't the same one that he remembered from when he'd dated Emily before. He seemed a shell of his former self, almost as if he'd blow over if you touched him. \n\nEmily came down from her room then, looking gorgeous in a red top. \"I'll be home after dinner, daddy,\" she said, leaning over and kissing him on the cheek.\"\n\n\"Y'all have fun now,\" he called, as Emily and Mike headed towards the door to leave. \n\nClosing the door behind them, Mike led her to the truck and opened the door for her. Dinner was at a Mexican food restaurant this time, Emily's favorite, and the conversation was reminiscent of high school, of the dates they used to have, and what they were wanting to happen this time around. Both agreed that they'd like to start dating again. \n\nAfter dinner, Mike walked her to his side of the truck and was surprised when she leaned in for a kiss. Her lips were soft, and warm, inviting and tender, but there was something missing. Something didn't feel right when he kissed her. It didn't make sense. He'd kissed her hundreds of times, how could it not seem right. He pulled her close and ran a hand along her cheek and to the back of her head, as she whimpered softly in his arms. He knew she loved when he did that. \n\n\"I really wish that my first time had been with you,\" she said, breaking the kiss and staring up at him.\"\n\nMike smiled and nodded. \"I know. Me too.\"\n\n\"You know, I'm not the same innocent girl that you remember,\" she said, \"But I'm not a slut either. Do you mind if we take it slowly, Mike? I don't mean to tease, but to be honest I don't really know how I feel about myself... physically. I said I'm not a slut, but who knows... maybe I am. Sexually I'm not sure whether I'm just more than averagly experienced from when I was away, or whether I'm tarnished, dirty. I'm sorry, I'm probably not making a lot of sense.\"\n\n\"We can take it as slow as you want,\" Mike replied, \"and you're making a whole lot of sense. In fact, I'm reassured that you want to take the time to work out your feelings. To me that suggests that everything that happened hasn't erased the Emily I knew.\"\n\n\"Will you kiss me again?\" she asked quietly.\n\nSmiling, Mike nodded and leaned in, his lips pushing against hers.\n\nThe little image of the himself in the locked room flashed into his mind again. This time, however, the image didn't fade. Mike tried to focus on Emily, but couldn't. The picture in his head changed, and suddenly the image of himself was charging towards one of the windows. At the moment of impact a searing pain hit him, and he broke the kiss with Emily, breaking the kiss and grabbing the sides of his head. \"Ouch,\" he said, his eyes squeezed shut. \n\n\"You okay?\" Emily asked, concern in her voice. \n\nMike nodded and raised his head again. \"Yeah, just a pain in my head,\" he said. The image of himself picked itself off the ground and backed against the wall again. \n\nHe leaned down and kissed her again, then opened her door and helped her into the truck. He walked around and got in as she scooted close to him and laid her head against his shoulder. \n\nMike put an arm around her as they sat in the parking lot and they kissed again.\n\nIn his head, the image charged the window again and smashed into it, a small crack appearing. He grasped his head for a second, but the pain wasn't as intense that time and he dropped his hand back to where it was around her shoulders. \n\nThey kissed and cuddled for a few more moments then Mike started the truck. At that moment, the Voice finally broke free of his mental prison. The memories of the previous year flooded back. \n\n\"OH MY GOD IT SUCKED IN THERE!\" the voice yelled in his head. \n\nMike groaned in pain as his head spun. Memories flooded back. Danni, Sarah, Emma, Beth, he remembered all of it. \n\n\"Oh, my god,\" he muttered. Emily glanced up, concerned as she saw the look of pain on her face. \n\n\"Mike, what is it?\"\n\n\"I remember,\" he groaned through gritted teeth. ",
        "Emily rubbed his shoulder with her hands. \"That's good, isn't it? But you're in pain...\"\n\nHe remembered making love to Danni, night after night, and Emma, her need for him to be dominant. He remembered Sarah, and fucking her in the washroom, and in her room. He remembered Beth in the shower, and finally knew why his sisters were tormenting him. \n\n\"How the hell could I forget all that?\" he asked out loud. \n\n\"Can I help?\" Emily asked. \n\nMike shook his head and tried to breathe deeply. The pain finally subsided, just as quickly as it had come, and he looked up. \"Wow,\" he breathed. \n\nHe didn't begin to try and understand what the hell had just happened or how he'd remembered everything. 'The girls must be going through hell,' he thought. \n\n\"Emily, I'm really sorry, but I think I better get some rest,\" he said, pulling the truck into gear. \n\n\"Of course,\" she said. \"Whatever will make you feel better.\"\n\n\"It's been a great evening,\" he said. \"Tthings feel really good. I could have kissed you all night long, you know... but I just got a lot of stuff back and I need time to work it all out. These damn headaches... make it hard to function.\" \n\nEmily smiled and kissed him. \"No problem, hun,\" she said. \n\nMike knew that she cared about him, and he surely cared about her, but where would she fit into his life with his sisters? \n\nMike smiled and kissed her forehead, pulling out of the restaurant and headed towards Emily's house. He'd have a lot to think about in the next few days. \n\nAs he walked her up to the house, she turned and smiled, leaning in for another kiss. \"It's really good to be back here,\" she said, nuzzling close so Mike could hold her tight.\"\n\n\"It does feel good,\" he agreed. \"I missed you.\"\n\n\"I'm glad you got your memories back,\" she said squeezing him. \n\nMike smiled. \"Me too.\"\n\nPulling away from him, she turned and opened her door. \"Thank you for dinner. Text me soon,\" she said, turning and closing the door. \n\n\"I don't think I'll ever understand you. I mean, you haven't gotten any for weeks, since you've not been hearing what the fuck I've been saying. I've been locked away with all these damn memories and the first opportunity you get for some action you sit on your fucking hands.\"\n\n'She wasn't ready,\" Mike thought to the Voice. 'You know, I didn't remember that I was actually fucking my sisters...'\n\n\"Details man, now get back home and fuck one of them, hell all of them. It's time for some payback.\"\n\n'Payback?' Mike asked. \n\n\"Hell yeah bro, payback.\"\n\nMike pulled away from Emily's house and began the short trip home. \n\n'What do you need payback for?' \n\n\"We,\" the voice corrected. \"We need payback for the torture they've been putting us through, this time and last time. Don't you remember the shower this morning? That twin of yours definitely needs a fucking spanking. See, we can just pretend that we haven't recovered your memories and seriously fuck with their heads this time.\" \n\n'You know, normally you're a fucking idiot,' Mike said, after thinking about it for a few minutes. 'This time, however, syou have a point, I have to admit.' \n\n\"Hell yeah, bro, you can say that again.\"\n\n'So back to the situation we find ourselves in, what the hell happened to my memories, and to you for that matter?' \n\n\"You were in an accident man. Your brain got bruised or some shit. I'm not a scientist, I'm a horny inner voice. I'm guessing that while your brain repaired itself, access to some memories and some more colorful parts of your personality were disabled. This was rationalized in your own brain by the images you kept seeing of a miniature version of yourself, me, locked in a room with no doors.\"\n\nMike was silent for a few long moments. 'That makes sense,' he said at length as he pulled up to his house. \n\n\"Alright, champ, you haven't jerked off in weeks, and you are one horny son of a bitch. Danni is in that house somewhere, pussy wet and ready, waiting, no... begging to be fucked by you. She can't get enough of your dick, man, she's ready for you.\"\n\n'Hell yeah,' Mike said. \n\n\"Just don't let the other sisters know that you are back again!\"\n\n'You, sir, are on fire tonight,' Mike thought. \n\n\"Thanks bro, now go get fuckin'.\"\n\nMike hopped out of his truck and unlocked the door to the house. There wasn't anyone in the kitchen, or the living room, and it seemed that everyone had turned in early. He slowly and quietly headed upstairs and to his room. Danni was in bed, her small form curled up in one of his old t-shirts. Smiling, he kicked his shoes off quietly, and began to remove his clothes. \n\nDanni turned over in the darkness and froze for a second, before Mike's voice pierced the darkness. \"It's just me, lover,\" he said. \n\n\"Mmmm, good,\" she mumbled, sleepily. \"You scared me for a second.\" She was still for a second before she sat up in bed and looked directly at him, barely making out his form in the dim light of the moon leaking in from the window. \"What the hell did you call me?\"\n\nMike grinned and fell upon her, his lips finding hers and his hands literally tearing the flimsy shirt from her body. \n\n\"Oh, baby... you remember don't you!\" she whispered loudly. Mike chuckled and reached for the shirt that he'd just ripped from her body. \n\n\"The things I'm going to do to you tonight, are to be kept between us, and you'll need to be quiet,\" he said, rolling the shirt up and beginning to wrap it around her head. \n\n\"I duh fink I caln,\" she said around the tattered remnants of his shirt, a grin plastered to her face. \n\n\"Hence the reason for the gag,\" he grinned, leaning down and kissing her neck and slowly moving lower, his lips brushing against her skin from her ear, down lower to her neck and across her throat to her other ear. He kissed her clavicle and moved across to her other shoulder, his hands moving downwards to pull her panties off. \n\n\"You see,\" he said, \"I'm going to be getting some payback from the other three for torturing me these past few days, and for the last time they tortured me. They are seriously going to get it,\" he grinned, his lips dropping to a nipple and drawing it gently into his mouth. Danni gasped around her gag. \n\n\"Oh, fuck,\" she slurred. \n\n\"You must be so horny, baby,\" he said. \"Don't worry, I'll take care of you,\" he said, his lips moving across her breasts and down her stomach, not rushing, just moving methodically and deliberately, taking his time. He wanted her orgasm to be so powerful that she literally blacked out. \n\nMoving slowly downwards, he kissed the tops of her hips, the crease in her legs, and lower to her thighs. She groaned in anticipation, desperately trying to open her legs and push his head between them. \n\n\"Oh, god, please,\" she slurred around the gag. \n\nMike chuckled again, \"Don't worry love, I'll get there.\"\n\nHe moved lower, kissing every inch of her left leg, and then starting back up on the right. Danni was writhing under his touch, partly from being unbelievably turned on, and partly from the anticipation. \n\nMike pulled his boxers off then and moved his lips back to her stomach. She arched her back again, desperate to feel his tongue on her pussy, \n\n\"Please,\" she squeaked out quietly. \n\nMike smiled and finally relented, his tongue making a line from her belly button to her pussy, flattening and growing broad and wide as he ran it down her slit, pushing gently inwards before moving back up across her clitoris. \n\n\"Chwist in Heaveln,\" she groaned from around her gag. Mike grinned and wrapped his strong arms around her thighs, pulling her close as he gently tongued her pussy, his tongue pressing in and then flattening against her clitoris, and then alternating by sucking it in his mouth with just the right amount of pressure. \n\nGroaning, she reached down with one hand and pushed his head harder into her pussy, the other reaching for a pillow to stifle her sounds. \n\n\"MM CMMMNG,\" he heard from beneath the pillow and felt her start to twitch, her muscles flexing and convulsing as he sucked gently on her clit. \n\n\"OH MY GOD,\" she moaned. \n\nMike moved quickly while she was still writhing beneath him, moving up and placing his cock at the entrance to her pussy, wetting the tip and sliding it in quickly. \n\n\"Sweet Chwist,\" she slurred around the gag as she felt his length push into her. \"God I've beeln wanting to feel that agailn.\"\n\nMike groaned in pleasure as ecstasy crashed down on him. He slid deeply into her, wrapping her legs around him and lifting her gently off the bed, sliding her up as he slid off the bed, standing with her in his arms, lifting up as he slid out of her and then pulling her back down, deeply on to his rock-hard cock. \n\nDanni was emitting guttural sounds at this point, having lost the ability to speak in her absolute pleasure. She wrapped her arms around his neck and leaned her head forwards as orgasms continued to cause her pussy to convulse on him, and still he lifted her up again, gently pulling her down on his cock, more waves of pleasure crashing over her. \n\nMike slid her up again and pulled her gently downwards, his cock sending millions of points of pleasure careening through both of them as he pushed in as far as he could. \n\n\"Fuck, so deelp,\" she cried, biting at the gag. \n\nMike thrust a final time before his own orgasm thundered into him. \"Oh, shit,\" he cried, sliding her quickly up and down on him, her own orgasm strengthening into pulse pounding madness, everything going blurry as she felt his hot seed crash into her and she began to go black, pleasure replacing every sensation until she couldn't feel, couldn't move anymore, every action causing a new flood of pleasure. \n\nMike gently laid down on the bed, pulling her with him still inside. She clung to his body, their breathing coming in ragged gasps. Finally Mike reached up and gently pulled the gag from her mouth, his lips encasing hers in a tender kiss. \n\n\"God, I love you,\" he said. \n\nDanni tried to tell him the same, but all that came out was gibberish, which caused Mike to chuckle. \n\n\"Sleep, my love. We'll talk tomorrow.\"\n\nDanni nodded, more than happy to fall asleep atop her lover, still impaled by his throbbing cock. \n\nMike grinned and began to drift off to sleep. \n\n\"This is going to be one hell of a fun time,\" the voice said. \"Goddamn its good to be back!\" "
    ],
    "authorname": "Mentalcase",
    "tags": [
        "voice",
        "masturbation",
        "lesbian",
        "cunnilingus"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/just-the-six-of-us-ch-23"
}