{
    "title": "Sadie's Travels",
    "pages": [
        "Sadie's Travels\n\nOne of my oldest memories is of fire...the hot, acrid smell of smoke...a crowd gathered, yelling...my mother screaming...and two loud, heavy, life-altering pops. A shotgun I think. I was later told the fire I remembered was a huge cross burning on our lawn. It wasn't a large lawn, just a small patch really, but my father was pretty proud of how green he kept it. Someone told someone, who told someone else, that my father said something inappropriate to Mrs. Shawnee, the white woman my mother cleaned house for. Actually, considering I had been eavesdropping, my father had simply asked when they planned to pay the balance on my mother's wages. They had short-changed her again. And then I remember fire and smoke, and my mother shoving me into a tiny cupboard, where I stayed for almost 48 hours before anyone thought to come looking for me. That was in South Carolina, 1937.\n\nThe next part of my life was spent being shuttled from neighbor to neighbor. Back then blacks didn't rely on services funded by the state to take care of orphaned kids. Oh, did I mention both my parents were killed that night? I began my adventures with Mrs. Middleton, a woman who lived two doors down from us. But she and her husband already had four kids and she was pregnant. So when she gave birth, I spent two years with another neighbor, Mrs. Freeman, who only had a son and a daughter. Her husband had been killed, I'm not sure how. I liked living with Mrs. Freeman. She made sure I went to school, we had plenty to eat, their house was bigger than most and I had my own room. The only problem was her teenage son. He decided he would practice his \"stroke\" on me...and I don't mean golf. When Mrs. Freeman found out he was sneaking into my room at night, she decided I had to go.\n\nEventually I was shipped off to live with a neighbor who moved out of town. And then a neighbor who moved out of the state. Some of the homes were pretty nice and some of the families made me feel welcome. Others saw me as another mouth to feed, a live-in servant, or easy access to a female body. Finally I was shipped all the way up to New York City.\n\n<p align=\"center\">*</p>\n\nHarlem. When I first arrived, I was stunned. The grocery stores, barber shops, restaurants, clothing stores...all owned by blacks. Black men and women dressed in dark suits, beautiful, colorful dresses, pencil slim skirts and billowy blouses, high heels in different colors...and they wore those outfits every day, not only on Sunday! I was staying with Mrs. Johnson on 124<sup>th</sup> and Lenox. She was in her fifties and lived alone in a huge three bedroom apartment, her husband having died some years ago. I can't begin to explain how difficult it was for her to adjust to having a kid around, but she did it. We lived beside a black owned grocery store and a black owned tailor. I went to school with all black children and even the teachers were black. It was an amazing reality, blacks living well, happy, and safe. I liked this life and enjoyed the security and stability of it for years.\n\nBut when I was 25, Mrs. Johnson died of a heart attack. I had finished high school a little later than most, considering I'd missed a few years with all the moving around, and college, at that time, wasn't something most blacks considered. So, I was working at the tailor next door as a seamstress. It was a skill Mrs. Johnson had insisted I learn and I was grateful I would be able to continue working there, and living in the apartment, because I had a trade. Still, her death was a shock to me. I was numb for quite some time. But after about a year, it dawned on me that I was on my own. I didn't have anyone to look out for me, true, but I also didn't have to report to anyone. And so, with that realization, I started accepting dates from the men that visited the shop where I worked. First it was Donald. Everyone called him Donnie. He was tall, rail thin, dark skinned, and he worked in a factory. Factory workers made good money. I'm sure Mrs. Johnson would have approved the match if she had allowed me to date, which she hadn't. He took me to see Rear Window and it was fantastic. It was my first visit to a movie theater and I fell in love with movies right then and there. We also went to The Lenox Lounge, one of the more popular dance lounges in Harlem. I had never been to a dance lounge before either. I had my first taste of alcohol, danced for hours on end, and went home happy and a little tipsy. But when Donnie tried to kiss me goodnight after our fourth date...I panicked. I'm not sure why, he was perfectly nice. But...I just didn't want to. So I stopped seeing Donnie.\n\nThe same thing happened with Larry and Richard. We would go out a few times, to a movie theater or a club, but whenever they wanted to get a little closer, I would panic. So, I had planned to stop dating. Maybe the fast lane just wasn't for me? I was thinking this as I sat in a booth at The Savoy, dressed in a purple, satin, knee-length dress, sipping a fruity cocktail, watching the couples dance to the big band's cool music. I was with Charles, or Chuckie as everyone called him. I wasn't sure what he did, but he seemed to know a lot of people at the club and he seemed to be comfortable spending a lot of money. We had one of the best booths, a waiter catered to our every need, people stopped by to say hello to him all night long...he was clearly a big shot. The attention was nice, and Chuckie was handsome, tall, with broad shoulders and a slight bulge around his middle. He was dressed in a pinstriped suit that had cost a small fortune. Mr. Mitchell, my boss, had ordered the material from Italy and it had taken months to complete the order. I had been responsible for the intricate stitch around the seams and I was proud of the job. He was pretty nice for the most part, although he wasn't as attentive as my other dates had been.\n\nWe spent hours at the club. I was nodding off when he finally noticed how tired I was. He sent the waiter to retrieve my wrap, but on the way out he stopped to talk to some more people. He didn't bother to introduce me, so I moved to the side and looked around at the people who were just arriving. I couldn't believe anyone could stay awake this long. Thank goodness tomorrow was Sunday and I could sleep in. That's what I was thinking when I noticed another regular customer from the shop. Everyone called him Lin. Lin was smaller in build than most of the other male customers and his orders always took a little longer because of this, but he was sweet and a very good tipper. He was always very nice to me. When he caught my eye across the crowd, I smiled and waved. He separated from his party and walked over. I liked to watch him walk. He moved differently compared to other men. Dressed in a tailored black suit, with a black shirt and red tie, he had a bit of a swagger, but it wasn't as exaggerated as the other guys. There was a fluidity to the way he walked, the way he moved, it was graceful...almost poetic. He was also quite attractive, dark skinned with close cropped hair, rather bulky, especially his arms. He was a very much sought after man because of how he behaved, how much money he had...and who he dated. Tonight? She was curvaceous, honey colored and quite lovely. Younger than me, she was dressed in a form fitting red dress that matched Lin's tie. They made an attractive couple.\n\n\"Hey, what you doin' here?\" He asked when he finally made his way over to me, a smile dancing around his warm, chestnut brown eyes.\n\nI appreciated Lin's slightly protective nature. He'd become just a little more of a big brother after Mrs. Johnson died. And he hadn't been too happy when I told him I was dating some of the customers. That probably explained why I hadn't told him about Chuckie. Lin didn't like Chuckie. I wasn't sure why, but there was bad blood between them. However, there really wasn't a way around such a direct question, so I pointed in Chuckie's direction.\n\n\"Waiting to leave actually,\" I smiled shyly.\n\nHe looked in the direction I was pointing and I watched the warmth in his eyes disappear. When he turned back to me, I could see his eyes had darkened a bit.\n\n\"He takin' you home?\"\n\n\"I think,\" I answered, surprised by the harshness in his voice.\n\nHe nodded, reaching into his inside jacket pocket and removing a business card.\n\n\"You need anything, or if anything happens and you\u2014...you just call me, okay?\"\n\nIt wasn't really a request, so I just took the card and nodded. Odd, Lin had never asked me to call him before. He turned and left as Chuckie made his way over. I was a little confused by the entire exchange, quietly thinking about it as I followed Chuckie from the club. The valet hailed a checkered cab and I slid into the spacious back seat. I was surprised when Chuckie closed the door without getting in.\n\n\"You're okay from here, right? I'll get the cab.\"\n\nAnd that was it. He handed the driver a few bills and went back inside the club. I'd never been left on my own to get home before. I sat in silence, not sure what to do next. The cab driver finally asked for my address and I gave it to him. To be honest, I was only a short distance from my apartment, but it was still odd that he had not escorted me to my door. I was a little nervous as the cab pulled away from the curb. Suddenly, someone whistled shrilly and the cab came to an abrupt halt. The back door opened and Lin slid in. I sighed and smiled, relieved.\n\n\"You okay?\"\n\nI nodded, happy to allow Lin to instruct the driver. He was silent as the driver resumed his course.\n\n\"You didn't leave your lady friend, did you?\" I asked, hoping no one else was feeling the same way I'd felt a moment ago.\n\nHe shook his head, \"she's ok.\"\n\nI nodded, watching him closely. He didn't have any facial hair. Odd for a man who had to be in his thirties. The suit fit him nicely, gaping faultlessly in front, the arms not too snug, the pants complementing the size of his thighs. I looked away, my face warm. I was not in the habit of looking at someone's body so carefully unless they were being fitted in the shop. I swallowed, enjoying the cool breeze on my cheeks as it moved the hair back from my face. I wore my hair shoulder length now. It had been short when I was younger. Mrs. Johnson said it was less of a hassle that way. But now the dark locks framed my caramel colored face in a way that made my full cheeks seem just a little less innocent. I was blessed, and cursed, with a baby face. Wide, bright eyes, the color of warm amber, full cheeks that Mrs. Johnson used to refer to as chipmunk cheeks, thick brows that seemed to arch perfectly on their own, and a full, pouting mouth. I would forever look like a chubby-cheeked 13 year old. Except my body directly refuted that image. I was five feet, five inches and I had full, rounded breasts, shapely, womanly hips and a slim waist. Mrs. Johnson had often complained about my shapely, hour-glass figure, expressing a great deal of concern about men who might be inclined to take advantage of it. Little did she know I didn't have a virtue to protect, thanks to my childhood travels.\n\nWe sat in the back of the cab, not looking at one another, as the cab sped toward my apartment. Finally, Lin sighed impatiently and turned to me.\n\n\"Look Sadie, you gotta be careful who you cool it with, you know?\"\n\nIt was a presumptuous, testy comment, but I took it as if a big brother had delivered it. I knew Lin cared about me.\n\n\"I know, I just decided to stop dating.\"\n\nLin chuckled, a deep, raspy sound that scraped across my skin in the most peculiar way. I shook my head to clear it, surprised by my reaction.\n\n\"I'm not sayin' you should hole up like a scared little rabbit...\"\n\nI laughed too, \"I know, but it's too...I don't know...difficult. I'm not comfortable.\"\n\nThere was silence for a moment.\n\n\"What do you mean? Did someone do something to you?\"\n\nHis voice was soft, concerned...and a little angry. I sighed.\n\n\"No. Not any of them.\" I forced myself to stop talking. I didn't want to have this conversation with Lin. I didn't want to have the conversation with anyone.\n\nMore silence and then the cab stopped in front of my apartment building. Lin stepped from the car and held the door for me. He closed the door after I exited and leaned into the front window.\n\n\"Hey man, wait for me a sec, okay?\"\n\nThe cabbie nodded and Lin quickly climbed the short, squat steps that led up to the lobby. He held the door for me again, following me inside to the elevator. I didn't want to look at him, so instead I looked at his leather, black and white oxfords. A small foot for a man...\n\nLin followed me from the elevator to my apartment door on the third floor. I reached into my matching satin purple bag and removed the key, fumbling to unlock the door. Finally Lin took the key from my clumsy hand and slid it into the lock. Small hands for a man too...\n\n\"Good night, Sadie.\"\n\n\"'Night Lin. Thanks.\"\n\nLin winked and I smiled as I stepped inside, closing the door behind me. I sighed once the door was closed, refusing to move until I heard his footsteps retreating. Then I smiled to myself, switching on the light closest to the door. My cheeks were still warm, my heart was beating quickly and I was feeling a little out of breath. Odd feelings to have for your big brother, I thought to myself as I made my way to the bedroom.\n\n<p align=\"center\">*</p>\n\nI decided to honor my decision and avoid dating. I didn't see any of the men I had dated for the next few weeks and for that I was grateful. When they all finally returned to the shop for alterations, or to order something new, I was more than prepared to turn down their advances. Especially Chuckie, who had the nerve to ask me out on another date. Other men had also started asking me out on dates and I wondered if my willingness to date a few customers had suggested I was loose or easy. I sighed. I could hear Mrs. Johnson's warnings in my head and it seemed, as she suggested, I would not win this battle. So, as I had already decided, it was probably best for me to stay at home most evenings. It's not like I didn't have a lot to do. I'd started doing alterations after work for women in the building and some of their friends. It was a nice way to earn a little extra money. I'd also made a new friend, Betty, so that I could partake in my new pastime, going to the movie theater. It wasn't proper for me to go alone and I just couldn't stop going. I couldn't get enough of the huge screen, buttered popcorn, oversized sweet treats and soda pop. So, it was good I had a female friend to accompany me. Other than that, the radio and my books kept me company. I was pretty convinced that I wasn't missing anything important by staying home most nights.\n\n<p align=\"center\">***</p>\n\nThe next few months were pretty normal. Nothing surprising, except for the way I reacted the few times Lin visited the shop. Every time I saw him, I noticed new things...like how long his lashes were, how small his waist was, how full his lips were, how elegant his movements were... He continued to behave like a big brother, asking if I was seeing anyone, bringing me sweets, and making me laugh. I looked forward to his visits more and more.\n\nDuring one particular visit, I was giggling so much my boss, Mr. Mitchell, actually asked to speak to me in the back office. He reminded me that it wasn't a good idea to fraternize with the customers. I nodded, scolding myself for such inappropriate behavior. When I returned, and Lin noticed I was much more subdued, he waited until my boss went in the back again before coming up behind me as I labored over a very intricate stitch.\n\n\"So, he blasted you out, huh?\"\n\nI shook my head, \"no, just reminded me that I need to be professional.\"\n\nI looked over my shoulder and saw Lin smile. I turned away quickly, annoyed as my heart lurched and my hands began to shake. The needle slipped and I cursed myself for my clumsiness, sucking at the drop of blood that appeared.\n\n\"Oops, my fault. Let me.\"\n\nIn all of my life I would probably never forget the next few moments. He took my hand gently, winking as he slowly brought it to his lips. Then he parted his lips just a little and slipped my finger inside. The heat of his mouth, the softness of his tongue as it stroked my fingertip, the feel against my flesh as he sucked gently...my head swirled. It was over quickly, but I was frozen, my breath lodged in my chest, my stomach fluttering. He returned to the small platform as Mr. Mitchell rejoined us and finished fitting Lin's slacks. But I sat there...absolutely frozen. I was staring at my finger, trying to figure out the feelings rushing through me. I was warm...no, it was more. I was burning. My chest was tight, my body was trembling...I didn't understand what was happening.\n\nI'm not sure how long it took me to force myself back into the detailed stitching assignment. My head was into it, but my heart wasn't. Lin left eventually, refusing to say goodbye lest he cost me another tongue lashing. But he managed to catch my eye and wink before stepping through the front door. And once again, the feelings I had been trying to control surged to the surface, consuming me.\n\nThat evening, as I sat picking at my dinner, I tried to analyze the feelings once again. I'd never felt them before. That rush of heat, the tingling that spread through my entire body, the throb that seemed concentrated at my center...lower than my tummy...a place I typically ignored. I had been distracted for the remainder of the day...and those warm, chestnut eyes still lingered in my mind. How could someone do that to me? What did it mean? And how was I going to remain 'friends' with someone who could affect me like that?\n\nI was both relieved and disappointed when I didn't see Lin again for a few weeks. Relieved because it let me get some work done without having to undo everything and start over. Disappointed because...well...I wanted to know if the feelings were still there. Sure I felt \"funny\" whenever I thought of him, but that didn't mean those feelings were real...right? Ugh, I had no idea what I was thinking, much less feeling...I just wanted to see him again. I missed his dark chocolate skin and those deeply intense chestnut brown eyes...I missed the way he moved, the way he spoke, his smell, his smile (which was really more of a smirk most of the time)...I missed him, period.\n\nI had his business card at my bedside and I looked at it almost every night. Call if I needed him, that's what he'd said. Did I need him? I needed something...I just wasn't sure what it was.\n\n<p align=\"center\">*</p>\n\nMy friend Betty and I had planned to visit Harlem's largest movie theater to see Witness For The Prosecution. It had been released more than a year ago, but movies were slow to come to Harlem. I didn't care, it was new to me. And I was excited to be going back to the movies. Unfortunately, when I arrived home and stopped by Betty's, she was sick and had to cancel. I sighed, kicking my kitchen counter in frustration. I went into the bedroom, about to take off my white blouse and pencil slim navy blue skirt when I noticed the business card on the bedside table. I bit my bottom lip. There was no way I was allowed to actually call a man to invite him to the movies, but a friend? Someone who was like a brother to me? That was...questionable, but possible. I hurried to the living room and dialed the number before I could change my mind. The phone rang enough times that I probably should have hung up. But as soon as I was about to, someone picked up the other line.\n\n\"Yeah?\"\n\nIt was him. Out of breath and slightly annoyed, but it was him. I swallowed once...twice...trying to get up the nerve to say something.",
        "\"Hello?\"\n\nI swallowed a third time and then dove in, \"uh, Lin? It's uh...It's uh Sadie, you know, from the\u2014\"\n\nI'm not sure what changed, but his voice was suddenly different. A little huskier, a little softer...certainly not unhappy to hear it was me, which was a relief.\n\n\"Hey Sadie, I know who you are. Wassup? You okay?\"\n\n\"Uh huh, yeah, I'm okay.\" I paused, tried to swallow again, but nothing was coming out. I sighed, this hadn't been a good idea. \"Uh...I'm sorry. Forget it. I'm sorry. See you later.\"\n\nAnd I hung up. I shook my head. My hands were trembling. Why had I done that? It had been a stupid idea. I sighed, frustrated. I moped around for a bit, annoyed with myself as I prepared dinner, and then I picked at the food halfheartedly. I kept glancing at the clock in the living room, wondering how many people I knew would be at the movie theater, wondering what they would say if I showed up alone. When someone knocked on my front door, I jumped up excited, hoping Betty was feeling better. We still had 30 minutes to make it to the theater. But when I wrenched the door open, it wasn't Betty standing on the other side. He was wearing another dark suit, navy this time with a silky cream shirt, no tie. It wasn't one of the suits we'd made for him at the shop, but it fit him nicely just the same. I was standing in the doorway, too stunned to say anything, until finally he spoke.\n\n\"You called. You okay?\"\n\nHe'd been worried. Here I was only thinking about the movies and he was worried about me. I closed my eyes for a moment.\n\n\"I'm sorry Lin. My friend was supposed to go to the movies with me but she couldn't go. I mean she can, but she wasn't feeling well and told me she had to cancel. I happen to see your business card, so... I-I was going to ask you but...\"\n\nI trailed off, annoyed that I was rambling and not sure how to tell him I had chickened out. He seemed to get the picture, however, and a smile slowly spread across his dark features.\n\n\"So, you still wanna go?\" He asked.\n\nI was nervous, shaking in fact, but the idea of going to the movies was too good to pass up. I nodded, grabbing my wrap and purse and closing the door behind me. He waited while I locked it, struggling clumsily with the key, and then walked beside me to the elevator.\n\n\"So, what's playing?\"\n\n\"Oh! Right!\"\n\nI blathered on about the movie, filling him in on the plot and letting him know how good it was supposed to be, following him blindly out of the building. When he stopped beside a metallic green Cadillac El Dorado, I wasn't sure what was going on. Until, that is, he unlocked the passenger door and held it open for me.\n\n\"This is your car?\" I gasped, hesitating.\n\n\"Yup. Unless you wanted to walk...\"\n\nMrs. Johnson's stories of all the inappropriate things that could take place in a car ran through my head for a moment. I'd never had to worry about it before considering I didn't know anyone with a car. But now...but it was Lin. Was I really worried about Lin doing anything inappropriate with, or to, me? We were friends, right?\n\nLin realized I was conflicted and closed the door, locking it.\n\n\"It's only a few blocks, right? It's a nice night, let's walk.\"\n\nI sighed, relieved that I didn't have to decide. I fell into step beside him, looking over at him casually. He was looking ahead, but smiling.\n\n\"Sorry. I never had to think about getting in a car with anyone before,\" I apologized.\n\nHe shrugged, the movement as graceful as any other he made.\n\n\"Don't worry about it. Didn't I just warn you about being more careful?\" He teased.\n\nI laughed, \"actually, you did.\"\n\nWe walked in silence for a few moments. It was a comfortable silence and suddenly I was relieved that all those \"feelings\" I thought I'd had were in my head. He was just a nice guy, nothing more. And, like I said before, probably saw me as a little sister. At the corner, he took my elbow to guide me across the relatively busy street...and I had to take back everything I'd just thought to myself. His arm on my elbow was like a hot iron, burning me, branding me...I felt the flutters in my stomach again, the slow and steady throbbing a little lower than my stomach, the trembling throughout...and for a moment, I forgot how to breathe.\n\nWhen he released my elbow, I forced myself to take a breath. Okay, so maybe those feelings had not been in my head after all. At the next corner, I actually tried to avoid his touch, stepping into the street before him. But the blaring sound of a car horn startled me, forcing me back. Lin smiled, I wasn't sure why, but carefully took my elbow again as we crossed. I was catapulted back into the whirlpool of feelings.\n\nBy the time we arrived at the theater, I was so preoccupied by Lin that I barely remembered what we were going to see. I enjoyed the movie, and the goodies, but sitting beside Lin was much more distracting than I could have imagined. Every time he shifted and his muscular arm, or his thigh, brushed against mine, I totally forgot about the movie. Actually, I was surprised I was still conscious after the movie ended considering I'd forgotten how to breathe quite a few times as well.\n\nWhen we left the theater, Lin asked if I wanted to get a drink at The Cotton Club. I'd heard it was almost impossible to get into The Cotton Club, but he didn't seem to think it would be a problem. I agreed and we walked the few blocks to the club. There was a line outside, but Lin walked to the front and leaned in to whisper something to the huge man at the door. I thought I saw Lin hand him something, but I wasn't sure. A moment later, the large man was holding the door open for us. I smiled shyly as I passed the others waiting on line, feeling a little guilty.\n\nThere was a band, playing absolutely wonderful music, and dancers having a great time on the checkered dance floor. We squeezed in to sit at a tiny table against a wall, just watching the fun until a waitress appeared. Lin ordered drinks for us, I'm not sure what, but I didn't really care. Just sitting in the club, with him, was exciting enough for me.\n\nWe only spent an hour or so there, considering how late it was. I had to work the next morning and Mr. Mitchell liked me there at 8am sharp. Lin paid the bill and escorted me toward the front door, staying close as we made our way through the throng of people. Once outside, I took a deep breath, laughing as Lin seemed to do the same. It wasn't a date, but spending time with Lin was better than any of the dates I'd gone on. I wondered about that, but not for long. Instead, I chatted with Lin as we walked home, asking what he thought of the movie, what kind of music he liked and any other information I could pry from him. As we made our way further east, the streets were less occupied and grew quieter. I thought it a nice change, but Lin seemed to be less talkative, growing more and more tense. I was about to ask if there was something wrong when I heard someone calling out from behind us.\n\n\"Hey Teddy, look who it is. Little Mister Big Stuff.\"\n\nI quickly looked behind us. Three males were following a few feet behind, laughing at their own comments. Lin picked up his pace, his hand on my elbow as I hurried to keep up. We were at least eight or nine blocks from my apartment building.\n\n\"Why you always dressed like a man, baby cakes? You got a set of balls in there too?\"\n\nI didn't really understand what they were saying. I saw Lin reach into his breast pocket and remove something.\n\n\"Hey, you nasty bulldagger, we're talking to you! You think you such hot shit? Do you even know what to do with that fox on your arm? Betcha don't!\"\n\nThey had closed the distance between us and suddenly Lin pushed me aside.\n\n\"Go Sadie!\"\n\nI wasn't sure what he meant, but I couldn't move. They surrounded him, ignoring the knife he now held in his hand. My heart was racing. I didn't understand what was going on, why they were harassing us. What did their comments mean? What did they want?\n\n\"Sadie, run!\"\n\nIt was the last thing Lin said before one of the men plowed his fist into Lin's stomach. As he did it, he said, \"tell Big Lou John-boy says hello,\" but I was more focused on Lin. There was another powerful punch to the stomach and the grunt that followed was something I hoped to never hear again in my life. Lin swung the knife, slicing one of them across the face. That attacker backed off, grabbing at his face as the blood began to spurt from the wound, but the other two didn't. They grabbed Lin's arm, wrestling the knife from him. Then they were swearing and punching and kicking and...I heard screaming. High pitched screaming, over and over again. It took me a moment to realize it was me. Residents in a nearby building were suddenly at their windows, yelling down that they were calling the cops. The men stopped and ran off. Lin was on the ground, moaning. There was blood, so much blood. I knelt beside him, not sure what to do.\n\nI'm not sure if I thought no one had really called the cops, or if I knew it would take them forever to show up, but I decided to help Lin to his feet. I didn't want Lin to have to lie in the street waiting. And I didn't want those men to return. It took a while to get him up and even longer to get him to take a few steps. The rest of the walk to my apartment took forever, or so it seemed. I was relieved when we arrived, hurrying to open my apartment door. I helped Lin onto my large, floral patterned sofa. Then I dashed into the bathroom to gather everything I could think of. I also filled a basin with warm water and then returned to the living room. Lin was still sitting in the same position, his eyes closed, his breathing shallow. I wet a washcloth and began to dab at the blood trickling from his nose. I rinsed the cloth then started on the gash above his eye. By the time I was done, the water was red. I applied peroxide and bandaged what I could. I then hurried to the ice box, grabbing an ice tray and a clean dish towel on the way back to the sofa.\n\nWe didn't say a word as I tended to his wounds. There were tears wetting my cheeks, but I ignored them. When I was done, I returned to the kitchen and poured Lin a hefty dose of Mrs. Johnson's scotch. I never touched the stuff, so there was plenty. Lin drank, leaning back against the sofa with a heavy sigh. I knelt before him, desperate to ease his pain somehow.\n\n\"Should I call for a doctor?\" I finally asked, swallowing past my tears.\n\nLin shook his head, \"nah, I'm fine. Just\u2014\"\n\nI watched as he shifted onto his side, his eyes still closed.\n\n\"Just let me rest here for a minute.\"\n\nI nodded, although his eyes were already closed. By the time I thought to remove his shoes, and go fetch a blanket, Lin was snoring softly. I dropped into the matching armchair, staring at the man sleeping on my sofa. There were so many questions, I didn't know where to begin. But they would obviously have to wait. Before long, I also slept.\n\n<p align=\"center\">*</p>\n\nMy neck was stiff when I woke a few hours later. It was rare, but I actually decided to call out sick from work. There was no way, after all that excitement, I would be able to function normally. Having made that decision, I made my way to the bathroom. I washed my face and brushed my teeth, quickly pulling a comb through my hair. When I felt I was presentable, I headed straight for the kitchen. Lin would probably need something to eat when he woke up. I made scrambled eggs, bacon, and grits. I reheated some biscuits I'd made a few days earlier, setting the small table in the kitchen before turning to wake Lin.\n\nI didn't have to wake him, however. He was standing in the doorway, watching me. Startled, I took a step back, a hand over my heart.\n\n\"Hi,\" I smiled. \"I was just going to see if you wanted something to eat.\"\n\nLin didn't smile, a first. He just dropped heavily into one of the chairs and began to eat. I sat across from him, picking at my food, peeking over at him periodically. His face was a mess, bruised, swollen, purple and blue in various places. He was favoring his right side, his arm cradled against his ribs. His breathing was still ragged and he winced a few times when he parted his swollen lips to eat.\n\nWe sat there, eating, silent, pretending everything was normal. I refused to ask any questions yet, not sure what to ask, not sure I wanted the answers. Finally I stopped pretending to eat and sipped at my glass of orange juice. At 8am, I phoned the shop to let Mr. Mitchell know I wasn't feeling well. He wasn't happy, but since I rarely called out, there wasn't much he could say. When I returned to my seat at the small kitchen table, Lin was finished with his food and was staring out of the window. He hadn't said a single word to me yet. I collected his dishes, washed and dried them. When I was done, Lin struggled to stand.\n\n\"I need your help in the bathroom. Can you run a bath for me?\"\n\n\"Sure, of course.\"\n\nI led the way, finding a stopper and filling the tub with relatively hot water. I figured Lin would need to soak his aching body for a little while, so the hotter the better. I poured some Epsom salt in the water, knowing Mrs. Johnson had used it whenever she was achy. When I turned from the tub, Lin was struggling to remove his jacket. I helped him, hanging it up carefully on a hook behind the door. Next were his pants. I also hung those up, keeping my eyes averted from the obvious private parts. Next I helped with his shirt, which was made from a fine, nicely spun cotton. Beneath it, his arms were horribly bruised, as were his sides. But that's not exactly what caught my attention. I was staring at the ace bandage wrapped around Lin's chest. The bandage seemed to be flattening what looked like...\n\nI stopped the thought, focusing on the task at hand. My friend needed help undressing and I would help undress...him. Moments later, after helping Lin into the tub of steaming water, I left the bathroom without saying a word. But once I closed the door behind me, I felt my legs almost give out beneath me. Lin was not a he. Men didn't have breasts, no matter how small those breasts were. And men had parts that should be dangling...Lin didn't have any dangling parts beneath his...her...his?...boxers. I closed my eyes tight, trying to reconcile what my eyes had witnessed with the Lin I knew. The Lin who dressed in men's suits, walked with a swagger and held doors open for me. The Lin I thought of as my big brother. I shook my head. How could I not know? Was I really that foolish? Is that why those men had beaten her, because she was...? Why was she dressing in men's clothes? Did she think she was a man? I didn't understand it. I didn't understand it at all.\n\nI also didn't understand why I hadn't run screaming. Why was I looking for a clean towel and tracking down Mrs. Johnson's old bathrobe which should fit considering Mrs. Johnson had been taller than me? Why was I behaving like there was a normal person in my home instead of a freak? And why had my body still reacted to her the way I reacted to Lin? Shouldn't I have been horrified and disgusted? It wasn't normal for a woman to dress and act like a man...was it? Bulldagger? I guess that meant a woman who dressed up like a man? I shook my head, re-entering the bathroom to leave the towel and bathrobe for Lin. Lin was lying back in the tub, his...her...her eyes closed. I took a moment to examine his...her body. Broad shoulders, powerfully built biceps, small, almost imperceptible breasts, a flat, toned stomach which led to a dark, triangular patch and thick, muscular thighs. And yes, my breath still hitched and my stomach was still fluttering at the sight. The same reaction. My body didn't seem to care if Lin was male or female. My brain, on the other hand, was struggling to catch up.\n\nI left Lin soaking for about 45 minutes and then I returned to help hi\u2014...her from the tub. When I knocked and opened the bathroom door, however, Lin was already wrapped in the robe, the wet towel hanging over the side of the tub. I reached down to let the water out, grabbing cleanser to rinse out the tub when I heard a familiar deep, raspy voice brush enticingly across my skin.\n\n\"When you're done, I need to talk to you. I'll be in the living room.\"\n\nI heard the bathroom door close behind her when she left. I took my time cleaning out the tub, deciding to straighten up the bathroom as well. When I was done, I continued to hide, resting a hip against the sink. I was scared. What would Lin say? What did any of this mean? I wasted as much time as I could, but eventually I took a deep breath and made my way to the living room. Lin was dressed in his suit again, perfectly masculine and attractive as usual...other than the blood staining his clothes of course. I sat down in the armchair, glancing around nervously. I was afraid to meet those dark, chestnut eyes that sometimes made their way into my dreams. We sat in silence for a little while until Lin finally sighed.\n\n\"Look Sadie...\" He started...but that was it. The words weren't followed by anything else. Nothing to help me understand. No explanation to try to rationalize who he was...who she was. After a few minutes, Lin just sighed again.\n\n\"Sadie...\"\n\nThat husky, soft voice compelled me to look its way...so I did. It was Lin sitting across from me. It didn't matter what was beneath the clothing, it was still Lin sitting in my living room. The same attractive, dark chocolate skin, close cropped hair and slightly bulky frame...the same Lin. I sighed. I was confused. Very confused. As if she realized how I was feeling, Lin slowly, painfully got to her feet.\n\n\"You need some time to think.\"\n\nI wanted to stop him from leaving, but I didn't. I did need to think.\n\n<p align=\"center\">***</p>\n\nI went back to my life. When Betty recovered we went to see The King and I. I also went to a new club with a group of female friends, a much better way to enjoy one's self, I decided, compared to dating the male customers from work. And I was careful to emphasize that word in my head.\n\nI went back to work, still supplementing my income with after work alterations. In fact, a friend asked me to do her entire wedding dress. It would take quite some time, but I was able to charge a little more. After I finished the job, I would have enough saved up to buy my first pair of high heels. I had my eye on a pair of three inch black stilettos at Korvette's. They were somewhat expensive and I had no idea when or where I would wear them, but I still wanted them.\n\nCard games, dinner with friends, Tupperware parties, extra hours at work...I kept myself busy. But if I was honest, none of it stopped me from thinking about her. And I had reconciled that Lin was a 'her' now. I often thought about those dark, penetrating chestnut brown eyes. I worried about all that blood, all those bruises...I worried...and I wondered. It had been over a month and I still worried...and wondered.\n\nWhen another month passed and Lin had not made her way back to the shop, I decided to sneak a peek at the customer cards Mr. Mitchell kept in the back office. She didn't live that far from me actually. A few blocks uptown on the West side. I toyed with the idea of going to see her...and then decided against it. The next day I changed my mind. Then I changed it back.\n\nA few days later, after work, I started walking in a North-Western direction. I hadn't convinced myself I was going anywhere specific, I was just walking, enjoying the spring breeze, taking in the sights, smiling at my fellow Harlem residents. It sounded good, this tale I was telling myself. What did it matter that I had a particular street in mind? Or that I avoided telling Betty where I was going? Avoided telling anyone, actually. And what did it matter if I had dressed carefully today, wearing a cream smock dress with a cream, beaded cardigan that someone had left behind at the shop? I'd pulled my hair back into a bun, colored my lips with a light, neutral brown, wore a new pair of stockings...",
        "I kept telling myself I wasn't dressing to catch anyone's eye, I was just going to check on a friend. A friend who had been beaten. A friend who had shared a secret with me. It was important to let her know I didn't think she was from outer space or anything, right? A good neighbor would do that...a good friend would do that. And it was important to me that she knew we could still be friends. That I would not shun her. That was the only reason I was going to her home...if that's where I was going.\n\nShe lived in something I heard once referred to as a brownstone. It was a brick building with three stories and a steep set of stairs leading up to the front door. I was surprised how large it was, considering only one person lived there. If I was uncertain about the address, I could rest easy considering I recognized the metallic green Cadillac parked on the street out front. I stood beside it, looking around, wondering if anyone recognized me. Then I wondered why I cared. Still, I didn't move toward the steps. I continued to stand beside the car, wondering what I was doing, wondering what would happen next, wondering...\n\n\"You came this far, you might as well.\"\n\nHer deep, rough voice still had that same curious affect on me. This time my normal reaction was coupled with fright as I jumped just a little, startled. I turned to see her standing beside me, decked out in another dark suit, this one charcoal gray. She wore it with a crimson red shirt and a dark gray tie. The dark gray fedora, tilted to one side, added the perfect touch. The effect was very nice...she looked quite handsome. I also realized her bruises had healed for the most part. There was still a slight scar on her lip, and one above her brow, but it was hardly evident that she had been severely beaten just weeks ago. The final thing I noticed was that she didn't greet me with the smile she typically showered upon me. That concerned me just a little.\n\nShe started up the stairs leading to the front door, glancing behind her.\n\n\"You coming?\"\n\nI hesitated for another moment before following. I'm not sure what I expected when I stepped inside. We entered what looked like her living room. It was massive, that was my very first thought, and nicely decorated. Dark wood floors and leather furniture that was just as dark. The sofa and chair cushions were deep burgundy and gray. There was a marble mantle framing a huge fireplace and vast windows on almost every wall. It was warm, bright, yet uniquely masculine...like her. And it certainly suited her. I noticed a doorway in the far corner and a hint of white and yellow tile on the floor. I assumed that was the kitchen. Across from it, another doorway led elsewhere and a stairway led up to the second floor.\n\nWhen I finished looking around, I turned back to her. Lin was watching me closely and, for the second time, I realized there was no smile on her face. I turned from her dark, piercing gaze, looking around again nervously.\n\n\"I like your furniture,\" I offered awkwardly.\n\nShe scoffed before responding. \"Sit. I'll get you something to drink.\"\n\nI did as she ordered, sitting gingerly on one of the plush chairs. She returned a moment later and handed me a tumbler filled a third of the way with some type of gold liquid. I sipped it, wincing. I wasn't sure what it was, but it was strong. Usually I wouldn't touch such a strong drink, but my nerves were more than a little shaky, so I sipped again. It took me a moment to realize she wasn't sitting. Instead she was standing beside the fireplace, watching me, her long lashes shielding those intense eyes. She had removed her jacket, tie and hat, and I was able to enjoy the sight of her muscles, moving fluidly beneath the fine material of the crimson shirt as she drank a much heftier portion of the same beverage. Then I wondered why I was admiring the body of a 'friend' again. I sipped desperately at the liquid in my glass, confused.\n\n\"Why are you here Sadie?\"\n\nShe asked the question softly, but it was harsh. I hadn't expected such a direct question and it was then I realized I didn't have a coherent answer prepared.\n\n\" I uh, um...I-I just wanted to make sure\u2014\" I stood shakily, almost dropping the glass, sloshing the liquid over the side, before placing it on the coffee table. \"I uh, j-just... I w-wanted to make sure you were okay. But you're p-probably busy so\u2014\"\n\nSuddenly I was rushing toward the door, comfortable that I would be able to escape that painfully discerning gaze. It hadn't occurred to me that she would stop me from leaving. She'd never done anything like that before. Yet, there she was, blocking my path. I swallowed, watching as she finished her drink before settling those dark eyes on me again.\n\n\"Why are you here Sadie?\"\n\nSofter. Her voice was softer...and heavy...throaty...mesmerizing. I wasn't sure how to respond a second time, so I simply stood there, watching as she closed the remaining distance between us. My heart was racing, the blood pumping through my veins so quickly I felt the pounding in my ears. My stomach felt queasy all of the sudden. She stopped directly in front of me, leaning in just a little, her face inches from mine. I couldn't look into her eyes. I just couldn't. I focused on her lips instead. They were thick, full. She licked them once, wetting them in a way that sent a slight shiver through me.\n\n\"Why are you here Sadie?\"\n\nShe whispered the question this time, her breath warm against my cheek. I didn't move. I'm not sure why. I know she would not have stopped me. I know it. But I didn't move. I was waiting...wondering...how would they feel? How...how would they feel when she pressed them against mine?\n\nI didn't have to wait long. I shut my eyes tightly as she stepped in to me, lowering her head, slowly pressing her lips to mine...gently...her mouth slightly open, as if she was drinking from me. She paused, hesitating, giving me an opportunity...but still, I didn't move. I couldn't. When her lips touched mine again, the feel of hers fuller, warmer, more insistent, I felt my breath hitch. The tip of her tongue caressed the inside of my upper lip, her lips moving against mine sweetly...enticingly. I heard her inhale, her lips leaving for a moment once more before she pressed them to mine more firmly...hungrier. She didn't touch any other part of me...she didn't have to. I could feel my body leaning into her, desperate for the feel of her against me.\n\nThen her lips were gone. My eyes were still closed as I felt her warmth leave. She hadn't left me, she was still there. I could feel that she was. She'd just taken a half step back...waiting. I considered my options. I could leave, now, before anything else happened. I could rationalize that she had compelled me to kiss her against my wishes. I could convince myself that I had tried to flee and she'd left me no choice. But, once again, I didn't move. Not in the direction of the door anyway. Instead, I took that half step forward, inviting her to take more. I thought I heard her moan softly before she brought her lips to mine again. Her hand was at the back of my head, bringing me in closer as she really kissed me for the first time, her lips greedily devouring mine. I was no longer frozen, responding to her, answering her demands. Her tongue entered, searching for mine, dancing with it. I was feeling lightheaded, my body quivering from the barrage of feelings she was creating. These feelings, this confusion...it felt good...it felt so wonderfully good...and I knew I wanted more...more of those lips, more of that tongue...more.\n\nBut she stopped suddenly, abruptly. I'm not sure how long I stood there before I realized she was across the room, standing by the fireplace again. When I finally opened my eyes, her back was to me. I waited, wondering what was going on. I didn't want her to stop. I watched, waiting, as she took a deep, ragged breath before turning to face me.\n\n\"You need to go.\"\n\nI wasn't a hundred percent sure what I was expecting at that moment, what I needed...but it wasn't those words. They were like a bucket of ice water being thrown in my face. And at that moment I felt...shame. Embarrassment. Humiliation. I closed my eyes for a moment, gathering strength, before opening them and nodding. I headed to the door quickly, frantically trying to flee from her rejection.\n\n\"Hey.\"\n\nShe moved quickly, catching me at the door as I desperately tried to force the knob to work. My hands were shaking so badly I couldn't make it work. She took my hands in hers, turning me to face her. There were tears on my cheeks. She sighed, wiping them away gently.\n\n\"Damn, I'm sorry. I'm sorry.\"\n\nI was shaking my head, everything was shaking, all of me, everything. She pulled me to her for a moment.\n\n\"Just listen to me, okay? That didn't come out right. I'm sorry.\"\n\nI was trying to listen to her. I wanted her to say something to make it better. I needed her to say something to make it better. She took my hands in hers again and I could feel she was looking at me. I couldn't bring myself to look up at her though. Finally, she gently lifted my chin until our eyes met.\n\n\"I'm sorry Sadie. I don't want you to leave. God, I really don't want you to leave. But you need to go. You don't know what's going to happen if you stay...I do. You have to trust me...we need to go slow here, okay? We need to go real slow. Okay?\"\n\nIt was working, whatever she was saying. I wasn't trembling as violently. I took a deep, shaky breath, inhaling the scent of her as she brought me to her for another hug. When she pulled away, looking down at me, I was able to meet her eyes on my own.\n\n\"Okay?\" She whispered, her voice pleading with me to understand.\n\nI nodded. She set me away from her and I took that opportunity to leave as quickly as I could.\n\n<p align=\"center\">***</p>\n\nI'm not sure how I made it home that evening. And I certainly didn't sleep a wink. It showed the next day at work. Mr. Mitchell was forced to take me to task more than once. He was quite aggravated that I not only chose the wrong color thread for one assignment, but also accidentally tore an exquisitely made silk shirt from Europe. He told me that item would be taken out of my pay since we would have to reimburse the customer. I don't recall how I responded. I was pretty certain I didn't care.\n\nAll I could think about was that kiss. I couldn't stop thinking about it...about her...against me, around me, within me...the feel of her...the taste of her...the stroke of her tongue as it penetrated, colliding with mine, dominating...I'd had the most bizarre dreams. Dreams I was too embarrassed to recall, much less describe in words. And there was an ache, an ache located at my core that I'd never experienced before. I didn't understand it. It was like a hunger, but...not exactly. It was...heavy...warm...tingly...unsettling. I just didn't understand any of it. I thought maybe she had put something in my drink. There were horror stories about people slipping a mickey into a woman's drink...but nothing would convince me that Lin could do something like that to anyone, especially me. And so I was back to confusion. Absolute and utter confusion.\n\nI didn't see her for the rest of that week. I spent Saturday thoroughly cleaning my apartment, hoping to keep myself busy enough that I did not roam through Harlem in a North-Western direction once again. On Sunday, I let Betty talk me into attending church. I hadn't attended since Mrs. Johnson's death. I then had Sunday dinner with one of Betty's friends. By Monday I was feeling a little more like myself. Mr. Mitchell was clearly pleased with my return to normality. He teased and joked with me all day, promising a summer bonus if I kept up the good work. He'd promised me bonuses before, but usually he made some excuse not to give them to me. I didn't care. I was glad he was in a good mood and that I had something to do with it.\n\nThe rest of the next week went pretty much the same way. I'd stopped counting the days since I'd seen her by the following Friday. That afternoon, Betty stopped by the shop on her way home. She asked if I wanted to join her and the girls for a night out. They were headed to the same club I'd visited with Chuckie. She was excited about a new singer the club was spotlighting, some woman named Aretha Franklin. I told her I was tired, but she harassed me until I agreed to go.\n\nAfter work, I ate quickly and didn't spend too much time on my outfit, just grabbing a floral print dress I used to wear to church. I slipped into a pair of black flats and hurried to Betty's apartment. The girls were already there and we walked to the club, chatting excitedly. They all ordered fruity cocktails, but I decided not to indulge. The club was very crowded, but we were lucky to find an empty table. At 9pm, the announcer went on and on about upcoming events before introducing the new singer. Her voice was amazingly full, rich, and velvety. I was blown away by her. We all agreed she was the best singer we'd ever heard. I felt myself relaxing, even having some fun, and was finally going to order a drink when someone's profile caught my eye. I hadn't really been paying attention to the other people at the club until I saw a dark gray fedora, tilted to the side. The person was dark-skinned and not very tall but bulky, especially their arms. They moved with a gracefulness that seemed to appeal to me and wore an excellently tailored dark suit with a matching dark shirt and gold tie, a suit that I knew hailed from the shop where I worked.\n\nI was staring. I knew I was, but I couldn't seem to help myself. I couldn't take my eyes off the person...and their companion. The sexy, curvy, beautiful golden hued woman I'd seen before. She had practically painted on a hip hugging gold, lam\u00e9 dress and wore matching gold stilettos. Her hair was pulled back into a severe bun, her face made up expertly...she was gorgeous. And she sat close to the person who had caught my eye, her hand on their arm, something I couldn't help but notice. There were two other men at the table. All of them seemed intently focused on the beauty. Not in a way where they seemed to be flirting with her, but in a way where they all seemed to be watching over her, protecting her.\n\nI swallowed past the huge, dry lump in my throat, ignoring the sinking feeling in the pit of my stomach. Is that why she had not been by the shop? Is that why she had not called me in almost two weeks? Not that she was obligated, but was it because she was spending time with the gorgeous woman who clung to her so possessively? I felt hot tears spring to my eyes and worked hard to blink them away. I tried to re-engage myself in the chatter at the table, but my mind was now a million miles away. I couldn't understand the feelings churning through me. I was absolutely devastated to see her with another woman. I may not have consciously recognized what was going on between the two of us, but I knew I didn't want her making any other woman feel the way she made me feel. I stood abruptly, almost knocking over the glasses on the table. Betty glanced over at me.\n\n\"You alright?\" She asked.\n\n\"Ladies room,\" I croaked.\n\nShe stood and although I didn't want the company, I knew the golden rule. Girls did not allow girls to go to the bathroom alone in public. We walked toward the powder room and I couldn't help but look in Lin's direction again. I wish I hadn't. She'd seen me...was now watching me. There was a cigarette dangling from her lips in a way that made her all the more attractive for some reason. I turned away from her quickly, stumbling into someone and apologizing profusely before hurrying on to the ladies room. I stayed in the stall as long as I possibly could without making Betty worry. When I finished washing my hands, I followed Betty out, keeping my head down, careful to avoid looking in the direction that called to me. I was wondering when we could leave the club. Maybe I could tell Betty I wasn't feeling well? I had pretty much decided to do just that when I felt someone's hand on my arm. I already knew who it was, considering my heart leapt when the person touched me. I wanted to look up, wanted to ask what was going on. I wanted to know who that woman was and why she hadn't come by to see me. But instead I kept my head down, focused on my worn, flat black shoes. I felt her pulling me aside. When she stopped, I still refused to look up. I heard her sigh.\n\n\"Sadie.\"\n\nHer throaty voice caressed me and I felt my stomach twist painfully. She reached out to put a finger under my chin, lifting my head until I could see those mesmerizing chestnut brown eyes of hers, the cigarette still dangled from her lips. I didn't even know she smoked. She removed the cigarette and blew the smoke over my head.\n\n\"Hey.\"\n\nI tried to smile, but I couldn't manage it. I heard her sigh again.\n\n\"Look, it's not what you think.\"\n\nIt wasn't what I thought? Then what was it? I thought the question, but it didn't make it to my lips. In fact, I didn't really respond. I just watched her. She glanced in the direction of her table. When I followed her gaze, they were waving her over.\n\n\"I have to go. Can I come by your apartment later?\"\n\nThe question had barely registered and yet my head was nodding yes. She nodded.\n\n\"Okay. It'll be late.\"\n\nI watched her walk away, rejoining her party. When I finally remembered I was standing alone, staring after her, I made my way back over to the girls. I told Betty I wasn't feeling well and she and I left the club a few minutes later.\n\n<p align=\"center\">*</p>\n\nAt home, I undressed, slipped into a pair of cotton pajamas and pulled on a robe. It was a little past eleven and I was feeling tired, but I decided to try and wait for Lin. I sat on the sofa, reading a book I'd started some weeks ago, but I was sleeping before midnight.\n\nThe loud knock on the apartment door startled me. The clock on the kitchen wall read 2am. I yawned and wiped my face with my hands, forcing myself to wake. Another knock on the door had me rushing over to open it.\n\nShe looked as handsome as she had in the club. She still wore the suit. I could see it was deep, dark charcoal grey. I realized I'd sewn the buttons on that blazer. The gold of the buttons, and the tie, were the same color as that woman's dress. I felt another sinking feeling in my stomach at the thought. Still, I stepped aside to let her in.\n\nI closed the door behind her, sitting across from her in the armchair once she settled on the sofa. We sat in silence for a moment before she cleared her throat.\n\n\"She's not my girl.\"\n\nI raised my brows. I guess that is what I'd thought. I hadn't knowingly graduated to the thought that a woman could date other women. I was just feeling...something. Something that was foreign to me. A type of anger I guess. Anger that some other woman, who was sexier and more attractive than me, was spending time with Lin. Angry that she'd her hand on Lin's arm. Angry...but not really angry. It was like...it was more like...I was jealous. The word just popped into my head. I'd read about jealously, but I'd never really understood it. Until now, that is. I was jealous that Lin was spending time with another woman. I was so startled by the realization that I wasn't sure if Lin had said anything else. She was just watching me, silently. I shifted uncomfortably under her gaze.\n\n\"I didn't know you smoked.\" I said.\n\nShe was surprised for a moment and then chuckled, \"I don't. She doesn't like to smoke alone in public, so I smoke when I'm escorting her.\"\n\nI nodded, taking in the information...and focusing on the one word that didn't make any sense to me.\n\n\"Escorting her?\" I asked.\n\nShe nodded and I tried to make sense of the term but I couldn't. \"I don't understand what that means,\" I finally admitted.",
        "For the first time I realized she seemed a little uncomfortable. I watched her stand and start pacing around the room.\n\n\"Do you know the name Big Lou Caruso?\" She finally asked.\n\nI shook my head no.\n\nShe nodded, \"okay. Well, he's an important...businessman around here. I work for him.\"\n\nI nodded, watching as she continued to pace.\n\n\"Among other things, I'm a runner for him. Do you know what that means?\"\n\nI shook my head no again.\n\nShe sighed, sitting on the sofa across from me once more.\n\n\"Okay. Well, it means that for part of my job I...pick-up and deliver important packages for Mr. Caruso. And when he can't make it, but she still wants to go out, I escort his...'friend' out on the town.\"\n\nI was trying to follow her, hoping I was keeping up.\n\n\"So that woman is his...girlfriend?\"\n\n\"Well, more like his mistress, since he has a wife. But yeah.\"\n\nI nodded. To be honest, this was way beyond anything I understood. But it did bring back something I'd heard before.\n\n\"Those men that attacked you. Is that why they said something about 'Big Lou'?\"\n\nShe nodded, relieved I was making some of the connections on my own.\n\n\"Yeah. It was a message for him.\"\n\n\"A message?\"\n\nShe nodded, \"yeah. Uh...there are a lot of people really upset that an Italian does such great...business up here. And they'd like him to relocate, if you get my drift.\"\n\nI nodded, although I had to admit to myself that I really had no clue what she meant. Why would three men beat her up, calling her those horrible names, so that someone would move their business? And what did any of that have to do with Lin taking his 'mistress' on dates? And what kind of business did this man run that would require Lin to do such a thing anyway? And what kind of 'packages' did she deliver and pick-up? And why did she carry a knife?\n\nBut suddenly I realized I didn't care about any of that. I only had one question I really wanted to ask.\n\n\"Can I ask you a question?\" I asked her quietly.\n\nShe nodded.\n\n\"D-did you,\" I licked my lips, struggling, \"uh...did you ev-ever kiss her the way you k-kissed me?\"\n\nI couldn't look at her as I asked the question and I felt the heat rise into my cheeks. I was wondering if she could tell how uncomfortable I was. It seemed like forever before I forced myself to look over at her. She was watching me, a slight smile on her face.\n\n\"No Sadie. Never.\"\n\nThat feeling in my stomach, the tightness, eased up a little. I don't think I'd been able to admit how important her answer was to me. I smiled a little. Then I watched as she stood and approached, leaning over me. She touched her lips to mine, gently, sweetly, and my pulse jumped. I leaned back in the chair, granting her better access to my mouth. She deepened the kiss, her lips taking more, her tongue tasting me. I felt the moan in the back of my throat, but didn't realize I'd released it until she chuckled softly against my lips. She straightened up, lifting my chin so my eyes met hers.\n\n\"I won't be kissing anyone else for a while, Sadie Brown. That I can promise you.\"\n\nI smiled a little and she leaned down to kiss my forehead.\n\n\"Get some sleep, okay?\"\n\nAnd then she was gone.\n\n<p align=\"center\">***</p>\n\nMr. Mitchell kept me pretty busy. He had a rather large, last minute order for a wedding. There was a falling out with the original tailor and now we were responsible for the completion of 14 bridesmaids' dresses. I went to work early and stayed late every day and still we had a lot to do. I was hoping Mr. Mitchell would give me Friday off considering how hard we'd been working, but no such luck. So on Thursday night, when Betty asked if I wanted to go to a nearby club, I begged off for a long, hot bath instead. After, I ate a TV dinner as I listened to the radio, planning to turn in early. I sighed with annoyance when someone knocked on the door, thinking it was Betty again. I was hoping she was not intending to harass me about going out because I was really too tired.\n\nBut it wasn't Betty standing on the other side of the door. I didn't recognize the tall, white, muscular man with washed out green eyes. He was dressed in a dark brown suit that fit him rather poorly and I found myself wondering why he opted to buy off the rack instead of visiting a tailor. He probably wouldn't pay much more for a tailored suit. The irrational thought was probably an attempt to mask my surprise that a white man was knocking on my door at 9:30 at night.\n\n\"Miss Sadie Brown?\"\n\nI was even more surprised that he apparently had the right apartment door.\n\n\"Yes?\"\n\n\"I need you to come with me. It's about Lin.\"\n\n\"Lin?\"\n\nMy pulsed tripped a little at the mention of her name. I was suddenly worried about Lin and hoping everything was okay. I asked the strangely withdrawn man to hold on for a moment while I grabbed a sweater and my purse. I followed him to the elevator, both of us silent as it descended. I tried to swallow down my reservations as he held the rear door of a huge, shiny brown car open for me. I figured it must be important if Lin sent this man to pick me up, so I put my anxiety about riding in a strange man's car aside for the time being.\n\nHe didn't say another word to me. He was driving on Broadway and I noticed the street numbers decreasing. The neighborhood began to change and I saw larger buildings, fancier cars parked on the streets, and far fewer people walking around. The people out and about were mostly male...and all white. The car turned on 57<sup>th</sup> street and headed east. Eventually he came to a stop in front of a restaurant. He turned the car off and opened the door for me. I waited for him to take the lead. Instead of heading for the front door, he walked around the side of the building until we came to what was clearly the employee entrance. He held the door for me and once I entered I waited, again, for him to take the lead. We walked through a very busy kitchen where tons of people were still rushing around preparing food even at this late hour. Again, I noticed everyone was white. A few of the men actually stopped what they were doing to turn and watch me as I followed the tall man. When we entered the main dining area, he led me to a table where one man sat, drinking a clear liquid in a low, squat glass.\n\nI knew, although he was sitting, he was not very tall, probably the same height as Lin. He was, however, quite overweight. His suit jacket, although it was well made, was straining to stay in place on his massive frame. I wondered, for a moment, why he didn't simply unbutton it. His face was very red and ruddy. His hair was black, thick and quite luxurious. He appeared to be sweating a little although it wasn't very warm in the restaurant. He wasn't unattractive, just...unappealing and a little intimidating. I looked around at the other tables, trying to ignore the all white customers who appeared to be sneaking peaks at me. I didn't see Lin anywhere. I noticed my hands were trembling a little.\n\n\"Miss Brown?\"\n\nI nodded, clearing my throat before answering, \"yes, sir.\"\n\n\"Do you know who I am?\" He asked in a tone that assumed I knew. He seemed a little surprised when I shook my head no.\n\n\"My name is Lou Caruso. Lin works for me.\"\n\nI knew the name. Lin had just shared the information with me. I nodded.\n\n\"Please, sit.\"\n\nI didn't think it was a request, so I slid into the chair across from him. The tall, white man who had picked me up was standing directly behind me.\n\n\"I'll make this short. Do you know where Lin is?\"\n\nThe question was completely unexpected. He clearly thought Lin and I were a lot closer than we actually were, because I had absolutely no idea where Lin was.\n\n\"Lin lives\u2014\"\n\n\"I know where Lin lives and I promise you he's not at home. Do you know where he is?\"\n\nSomething told me that even if I knew, which I didn't, I probably wouldn't tell him. He demanded the answer as if he was entitled to know Lin's every move and something about the entire situation just didn't feel right to me. But I didn't have this problem since I really didn't know where Lin was.\n\n\"I haven't seen Lin all week. I don't know where he is.\" I was careful to use the same pronoun he used.\n\nHe stared at me intently for a moment, his cool blue eyes more than a little scary. But I held his gaze, not sure what else I was supposed to do in this situation. After a moment he nodded and drank from his glass.\n\n\"Lin is late with a package he was supposed to pick up. Lin is never late. So, I need to know if Lin contacts you.\"\n\nI nodded, glad this entire weird experience was almost over.\n\n\"So, you already met Harry. He's going to stay with you just in case Lin calls.\"\n\nI stared at him, blinking a few times, not sure I understood what he'd just said. I looked behind me at the tall, scary man with the faded green eyes and then returned my gaze to the man sitting across from me.\n\n\"St-stay with me?\" I asked softly. Surely he couldn't mean this man that I didn't know would stay in my apartment with me? That just...couldn't be.\n\nHe nodded and then made a gesture with his hand that seemed to indicate I was dismissed. The man I arrived with, Harry, took hold of my arm firmly and encouraged me to stand. Moments later I was following him through kitchen again, wondering what was going on. Once seated in the back of the brown car, I just stared ahead through the massive windshield as Harry drove us back uptown to Harlem. He found a parking spot and then proceeded to follow me into my building. At my apartment door, he waited patiently for me to unlock it. I did so, not sure what option I had, and then flicked on the lights once we were inside.\n\nI hung up my sweater, pretending things were normal, stalling, before turning to the big, silent white wall of man. I swallowed.\n\n\"Uh...do you want something to drink?\" I choked out.\n\nHe stared at me strangely for a moment and then shook his head no. Not sure what else I was supposed to do, I went to the linen closet and found sheets, a blanket and a pillow. I fixed up the sofa without a word and then turned to him again.\n\n\"I'll be in my room if you need anything. Help yourself to anything in the ice box.\"\n\nHe stared at me again for a moment, nodding slightly, and then I left. I was desperate to get away from him. My entire body was shaking. I wasn't sure what I was feeling, but I wasn't happy with the situation. But it's not like I'd had a choice. Mr. Caruso had made it clear that Harry was sticking with me until they found Lin. I wondered how long that would take. I wondered where Lin was. I hoped she was okay. I locked my bedroom door and undressed quickly, getting into bed, but knowing I would not sleep much. To my surprise, I fell asleep almost immediately.\n\n<p align=\"center\">*</p>\n\nIt was weird, showering and dressing with a silent, white stranger in my apartment. He didn't say a word to me, even when I set a plate of eggs and toast in front of him at the tiny table in my kitchen. He ate quietly, avoiding my gaze now instead of staring at me like I was a circus freak. Once I was done with the dishes, I headed toward the apartment door. I was tempted to ask him if he planned to follow me around at work too, but there was no need. He was right behind me as I left the apartment. I swallowed, hoping for my hands to stop shaking, not at all sure what I was going to tell Mr. Mitchell.\n\nMr. Mitchell, as usual, was already there when I arrived a little before 8am. When the front door closed behind me, I stashed my purse behind one of the counters like I did every morning and just waited. Mr. Mitchell was looking over one of the dresses we'd worked on last night and I knew he was going to tell me to re-do something. After a few minutes, he looked up. Having the silent, white giant beside me was almost worth seeing the shocked expression on my boss's face.\n\n\"M-Mr. Mitchell, this is, uh, Harry. He w-works for Mr. Caruso. He's going to, uh...uh, be around here for a little while.\"\n\nI knew of no other way to explain it. I waited for his reaction. After a short pause, he nodded and indicated a chair by my work station.\n\n\"Mr. uh....um....Harry. Just have a seat. I need to speak with Sadie in the back for a moment.\"\n\nHarry hesitated, but sat. I followed Mr. Mitchell into the back room. He didn't pause for even a second before he turned to me.\n\n\"Sadie, what's going on? Caruso sent that man for you?\"\n\nI nodded and tried to stop the tears welling up from falling. \"They're looking for Lin,\" I squeaked out.\n\nMy boss paused for a moment and then nodded. He swallowed nervously, pacing around the small space without speaking. Then he turned to me again.\n\n\"You messin' around with Lin?\"\n\nI was taken aback by the question. Mr. Mitchell, although I'm sure he cared for me, had never asked me a personal question. He hadn't even said anything when Mrs. Johnson died. So, needless to say, the question took us both by surprise.\n\n\"I-I...uh....I...no.\" I swallowed, thinking about Lin, her lips against mine, the feel of her warmth when she stood close to me...\"I mean y-yes...uh...\" I dropped down heavily into a nearby chair. \"I don't know, Mr. Mitchell.\"\n\nHe didn't say a word and when I looked up I could see he was struggling to decide whether or not he wanted to say anything else to me. I was pretty certain I knew what concerned him. Finally he knelt in front of me and took both my hands in his. If his verbal concern was a surprise, the physical contact was even more shocking.\n\n\"Look...um...I need to tell you something about Lin. Lin is cool, you know? But....uh...Lin is not...does not have...I mean Lin\u2014\"\n\nI decided to rescue him, \"it's okay Mr. Mitchell, I already know.\"\n\nIf I thought that would reassure him, I was wrong. He looked at me strangely for a long moment, making me feel like quite the specimen, before he just nodded.\n\n\"Well, let's not keep our guest waiting. Besides, I need you to re-do the hem on two of the dresses...\"\n\nAnd that was the end of our personal chat. I followed him back into the front and basically tried to ignore the white mountain as well as the odd looks my boss kept sending in my direction every now and again. It was a grueling day to say the least.\n\n<p align=\"center\">*</p>\n\nThat evening I prepared three TV dinners instead of one, setting two in front of Harry. We ate in silence and then I changed into my pajamas and robe and curled up on the sofa with a book. After a while, I saw Harry doze off, his head leaning all the way back and his mouth open as he snored lightly. I stared at him for a moment, wondering how someone got into this line of work and how he felt about invading someone's privacy on command. But before I could guess the answer the phone rang, startling us both. I stood to answer it, but he was faster, snatching up the receiver. He didn't say a word, just listened for a moment or two and then replaced the receiver. Then, to my surprise, he went to the front door and let himself out...and I was alone in my apartment once again. I stood without moving for a moment and then I sat on the sofa and let the tears have their way. My hands were trembling violently as I let my emotions take over. I had been scared...very scared. I wasn't sure what Lin did, but it was dangerous enough that my safety had been threatened. And she was only running late this time. What if something more serious happened? What if they used me to get to her? I wiped the tears from my cheeks, wondering for the first time what I was getting myself into with Lin. At the moment, I wasn't sure I wanted to get involved with her at all.\n\nI knew she would stop by later on...or at least a part of me was hoping she would. So when someone knocked on the door around 10:30pm, I didn't hesitate to open it. She was leaning against the doorjamb, her dark skin highlighted nicely by a brick red, silk men's shirt which hung very nicely on her slightly bulky frame. She stood up once I opened the door, looking at me with dark eyes that reflected concern.\n\n\"Hi. You okay?\"\n\nI nodded, but I didn't step back to let her in. There was a part of me that was angry with her...for putting me in such a position, for risking my safety, for mixing me up in her nonsense. But, there was also a part of me that had my pulse dancing happily at just the sight of her, pleased she was safe, relieved she had returned. For a moment I wasn't sure which part of me would win, but then I stepped back to let her in. She stepped past me and settled onto the sofa she'd slept on not too long ago. We sat across from one another for a short while without a saying a word. Finally, she cleared her throat.\n\n\"I'm sorry Sadie. I wasn't able to get to a phone. And I had no idea he knew about you.\"\n\nNot much of an explanation, but it did make me feel a little better. At least she did not feel exposing me to that part of her life was okay. I nodded, still not saying a word. She moved forward, to the edge of her seat, and reached over to take one of my hands in both of hers. My pulse actually leapt at her touch. Suddenly I was unable to focus on anything except the feel of her hands on mine, gently caressing my skin, creating goose pimples wherever she touched. She was saying something, but I didn't hear her. A moment later I realized she had stopped talking and I looked up at her, embarrassed. She smiled a little and then stood.\n\n\"It's late\u2014\"\n\n\"No.\"\n\nI didn't want her to leave. I was anxious and didn't want to sleep in the apartment alone. She paused, looking down at me.\n\n\"No?\"\n\n\"I\u2014\" I licked my lips nervously, standing to face her. \"I...I need you to st-stay.\" I could immediately see that she thought it was a bad idea, so I added very softly, a little desperately...\"please.\"\n\nIt seemed to do the trick, because she sighed, but she also sat back down. I knelt in front of her, careful not to touch her considering I knew her primary concern was 'what would happen next' between us. Still, I was relieved she was going to stay.\n\n\"Thanks.\"\n\nShe smiled a little, her hand gently stroking my cheek. I watched her struggle with herself for a moment before she leaned in and touched her lips to mine gently. The more time I spent with her, the more I realized I was not the only one feeling overwhelmed. I inhaled deeply, enjoying her scent as well as the feel of her soft, full lips as they caressed mine. She pressed her lips to mine over and over again and I felt it, those sensations that seemed to be missing unless it was this woman, this close, doing something this intimate. I closed my eyes and gave into the feelings as she used her tongue to tenderly paint delicate strokes along my lips, creating sensations that I couldn't seem to process quickly enough. I felt...warm...all over...my skin becoming overly sensitive...there was a tightness in my stomach that seemed connected to the shortness of breath and the liquid intensity I could feel beginning to pool between my thighs.\n\nHer teasing touches grew more forward and I could feel her lips against mine more completely. The more intense connection triggered a reaction that surprised even me as I raised up just a little, my arms curling around her neck, my body pressing against hers, desperate for more. She didn't move to initiate anymore contact, just continued to kiss me, thoroughly...soundly...totally. I could feel my body revving up, not sure what direction the feelings were taking me in, but knowing this was...was...this was incredible. I sighed, moving even closer, pressing my breasts against her, seeking more.\n\nShe hesitated and I knew without a doubt she was going to stop this from going any further. I didn't want her to. I didn't want to be cautious. I wanted to take these feelings to the next level. I wanted to explore what she was creating within me. I wanted....I wanted...",
        "When she tried to pull back a little, I reached out for her hand and brought it slowly, awkwardly, to my breast. She didn't move at first. Her hand simply rested, lightly, against my breast, quite still, as my nipple quickly grew hard beneath it. I responded to her kisses more enthusiastically, my arms tightening around her neck until eventually I felt her move her hand, turning it over, and brushing the backside against my tightening flesh. I moaned into her mouth, my breathing becoming ragged, as she left the sofa to kneel before me, pressing her body more boldly against mine, her fingers now toying lightly with my painfully hard nipple.\n\nThe rush that moved through me was unexplainable. My body was absolutely zinging, tingling in a way I'd never felt before from head to toe. When they'd touched me as a kid, when I kissed my first few dates, none of it felt this...amazing. I felt her hand leave my breast and settle at my waist as she shifted, moving her lips away from mine and leaning into my throat. I felt, rather than heard, her inhale deeply, her nose gently caressing my flesh before I felt her lips again. She planted gentle kisses along the length of my neck, causing shivers to run through me. I felt the warm, wet caress of her tongue as she tasted me...and then she sank her teeth into me. I tensed, but not with pain or fear. The feel of her teeth against my hyper-sensitive skin went right through me and settled sweetly below my waist. I moaned again, louder, desperate for her to continue. I felt her hands as they loosened the belt of my robe, and then the heavy terry cloth was removed from my shoulders and dropped. Her hands reached for the button at the top of my pajama shirt and I hesitated for just a moment. What if she was right, what if I wasn't ready...but as if she could read my thoughts, I felt her lips leave my throat and suddenly those dark, warm chestnut eyes were staring into mine.\n\n\"Stop me if anything doesn't feel right, okay?\" She instructed softly.\n\nI nodded, relaxing, glad she'd thought to give me an out. But I was no longer thinking of an out when her lips found my throat again. Not when her fingers finished with my buttons and then brushed my pajama top open. The cool air on my hard nipples startled me for a moment, and a shyness swept through me, but it was short lived. She met my eyes again, winked, and then bent her head to take a straining nipple into her mouth.\n\nI'd never felt anything like it. The heat of her mouth as she wrapped her lips around my stiff nipple. I felt my fingers curl into my palms and squeeze as heat coursed through my veins. She sucked on the nipple, then removed her lips and blew on it...then bit into it gently. I moaned. It was loud and I was shocked by the need to release the feelings welling up inside me in such a way. I thought I heard her chuckle as she helped me shift until I was lying flat, my bathrobe beneath me. She laid beside me, reclaiming her hard, anxiously waiting prize, her hands caressing other parts of me...my tummy...the underside of my breast...my other nipple. My eyes were shut tightly and I could do nothing more than force myself to remember to inhale and exhale. I was so tense...impatient...and I felt something building, something I didn't recognize...didn't understand. It was scary and wonderful all at the same time.\n\nI felt the heat of her lips as they moved across my rapidly rising and falling chest to capture my other nipple, one of her hands capturing the nipple she had just abandoned. My legs were moving restlessly and there was a tight, itchy, foreign feeling between my legs that needed to be addressed. It wanted...I...I needed more. My body demanded it.\n\n\"Lin...God...please.\"\n\nI couldn't believe that was my voice, throaty...wanton...desperate. I felt her other hand stop caressing my tummy and I whimpered, not wanting her to stop anything she was doing. It made its way to the waist of my pajama bottoms and then paused. I think she was waiting to see if I was going to protest, but I was way beyond that now. I raised my hips expectantly as her hand slid past the elastic to gently stroke my dark, triangle of hair. I was squirming beside her, my thighs parting of their own accord, aching. I felt her fingers gently part my wet, sticky nether lips...and then she touched me...and my hips bucked uncontrollably.\n\n\"Oh!\"\n\nMy brain could process no other words. She slid that wonderful finger along the length of me, teasingly dragging it through the slick folds. The feeling that something was building intensified. It felt like I had to go to the bathroom, but it was so much worse...and so much better. She continued, her fingers exploring, teasing, burrowing until she found what she sought, a hard nub that simply blinded me with pleasure when she touched it. She stroked it once, moving her hand away to caress my outer lips...then she stroked it again...my breathing was short, my hips thrusting up to meet her. When she stroked it again... ... ... ... flashes ... white... hot...absolute, utter, total sense of...pleasure. Supreme pleasure. It washed over me, stabbed through me. It was...beautiful. My fingernails curled painfully into my palms and I gasped in air, not sure if I had remembered to breathe for quite a few seconds. When my body finally relaxed, warmth spread through every limb. I thought I'd died and gone to heaven.\n\nBut she didn't stop. She moved up the length of me, pressing her lips to mine as her hand once again made contact with that dangerously brilliant nub. I moaned aloud again as she sucked my tongue into her mouth, the fingers on her other hand seizing and pinching my nipple. She didn't have to wait long for her reward this time. I stopped breathing as the feelings rushed through me for a second time...and then I started to cry. I couldn't comprehend what I was feeling, what she was doing to me...she chuckled softly again, kissing me sweetly as she removed her hand. I collapsed onto my bathrobe, my brain swirling with confusion and delight. She was moving, it took a moment for me to realize she was removing my pajama bottoms. I didn't care. I didn't care about anything. I could hardly move. My entire body was simply throbbing. Sweetly, wondrously, magically pulsating from my toes up to the top of my head. She finished positioning me as she liked and suddenly, amazingly, I felt the heat of her mouth on me. My hips jerked again, my back arching almost painfully as she dragged her tongue along the length of me, latching on, her mouth greedily nursing, devouring my core. I think a part of me was trying to get away. I was so sensitive, her touch almost hurt. But there was a much larger part of me that was insatiable, that wanted more and more and more...she sucked my hardness into her mouth, her tongue caressing it, teasing, manipulating it until she suddenly began lashing against it and I cried out as I exploded again...and then again.\n\n<p align=\"center\">*</p>\n\nI was lying in my own bed, my body still tingling, my breathing having returned to normal...and there was someone lying beside me. I opened my eyes slowly as the memories came to me and I smiled. I shifted a little and Lin's hand, which had been resting on my hip, curled around my waist and pulled me close. I wore my cotton pajama top, but nothing else and I could feel my checks warming at the thought that she was pressed against my naked backside. Of course the memory of her face between my thighs, her tongue, the way she tasted me...that had my cheeks completely burning. I shifted again to look at the bedside clock, shocked that it was already 2am. When I heard a change in her breathing, I realized I'd woken her. She took a moment to squeeze my middle before she rolled away, giving me a little space. I lay there for a moment, silent, wondering what I was supposed to say to her. I'd never spent the night lying beside anyone before, this was all new to me.\n\nBut when I rolled over and looked into those mesmerizing, chestnut brown eyes, I relaxed. She smiled at me and I returned it, remembering that this was Lin. The woman who had rushed over to my apartment the first time I called to make sure I was okay. The woman who had shared her secret with me when it wasn't safe for her to do so. The woman that had apologized for exposing me to any type of risk because of her job. This was Lin.\n\nSo, reassured, I began to take in the rest of the woman who lay beside me. She had left my pajama top on, but she wore nothing. I remembered her body to some extent from that bizarre night that felt like decades ago, but this time it was different. She was relaxed and there was less shock. Less shock, although I was still kinda shocked to be lying beside a naked woman. I could not resist reaching out to touch her dark, chocolate skin...her shoulder, the length of her arm, her flat, muscled stomach...she was smooth...soft...warm...addictive. I continued my journey, leaving the sheet intact at her waist and traveling upward instead. My fingers explored the bulging strength of her biceps, the hardness of her collar bone...the soft, swell of her small breasts. I smiled a little as I saw her nipple harden before I reached it. I touched it tentatively with my fingertip, enjoying the soft, rubbery feel of it. I glanced up at her face. She'd closed her eyes, allowing me an opportunity to explore without interruption. I returned to the job at hand, pinching the nipple between thumb and forefinger, enjoying her swift intake of breath. I inched forward and leaned in, flicking it with my tongue. She didn't move, didn't utter a sound, and I thought she, too, might have forgotten how to breathe for a moment. But when I sucked it into my mouth, she released a breath and moaned softly. I swirled around it with my tongue as she had done...tasting...teasing...savoring the experience.\n\nI grew bolder, licking a path from her breasts up to her collar bone, nipping at it as she shifted beneath me. The feel of my tongue against her flesh was arousing me as much as it seemed to be arousing her. I paused as I looked at her lips, smiling before I leaned in to kiss her. She returned the kiss with enthusiasm, moaning into my mouth as my hands caressed the sides of her breasts. I teasingly bit her bottom lip as I shifted my body. I had to admit that while I was interested in exploring her entire body, there was one particular area that I was desperately curious about. I wanted to know if it was like mine. What would that sticky heat taste like? And would it feel for her the way she made me feel?\n\nSo I set about kissing and licking my way back down her body, as she had done, taking time to delight in her biceps again, her stomach, the width of her slim hips...I moved the sheet from my path, caressing her nicely sculpted legs, tenderly, awkwardly, parting them. I settled myself between her thighs and took her in. Her dark curls were neatly trimmed, unlike mine, and shaped into a splendid V. I touched the area gently, enjoying the feel of her soft hairs, but enjoying the sight of her moving restlessly even more. I leaned forward and inhaled, registering the salty hint of her musk, realizing I liked it. I moved in closer, burying my nose into her soft triangle, nudging flesh aside with the tip of my nose. She smelled...spicy...sweet. I ignored her as she shifted a little impatiently, using my hands to part her lips. They were slick, covered with a wetness that smelled even more like her scent. I looked at the brown and pink flesh, memorizing the image of it before tentatively sticking out my tongue and tasting her. I'd never tasted anything like it before. Thick, flavorful, salty, yet sweet...I liked it. I swiped her flesh with my tongue again, digging a little deeper as I sought more of her heady nectar.\n\nI would admit later that my curiosity made it almost impossible to pay attention to her. So I didn't realize, at first, whether or not she was enjoying herself. I simply wanted more. I wanted to see more, feel more, taste more, experience more. So I did, parting her lips wider, using my tongue along the length of her much as she had done to me hours earlier. Further down I found more of that delectable elixir and drank from her greedily, burying my tongue deep within. It took me a few moments to realize she was rocking her hips as I feasted. I also noticed the flesh I was manipulating had tightened, the folds peeling back a little of their own accord. I remembered how she'd made me feel when she stroked that certain spot and with that in mind I went in search of it. I dragged my tongue upward and bumped directly into a hard nub, larger than mine, that made her hips buck when I touched it. I smiled, doing as she had, swirling my tongue around it, teasing her, sucking on it lightly, then lashing at it and eventually sucking it into my mouth completely and feeding from it as if starved.\n\nI held on as she humped against my face, enjoying the sound of her moans and the periodic \"shit\" or \"damn Sadie.\" It didn't take long before she sucked in an angry breath and then dug her hands into my curls, pulling my face to her almost brutally. I increased the intensity of my movements, just as she'd done, until she barked out my name, enjoying the feel of her copious juices as they spilled onto my face and chin. She rode my face for a few moments before releasing my head and allowing me to sit up. I was about to wipe away her juices when she leaned forward and kissed me, proceeding to then lick her own juices from my face in a way that had my insides turning to jelly. Then her dark chestnut eyes met my lighter, amber ones and she smiled.\n\n\"Not bad,\" she whispered huskily, teasingly.\n\nI smiled and snuggled up beside her. I was sleeping again before I even realized it.\n\n<p align=\"center\">*</p>\n\nI woke before her that morning, deciding to take a quick shower and then make some breakfast. As I showered, I wondered about the feelings she had conjured up in my body. My body had experienced things I'd never known were possible...and it had felt absolutely fantastic. The juncture between my thighs, that amazing area I had ignored for most of life, was still tingling, still throbbing. I laughed, wondering if I had turned into a sex fiend. But in addition to those feelings, still churning beneath the surface, I also felt relaxed, comfortable with my own body and what I had shared with Lin. I hadn't expected that. Lin had been so worried that I might be disgusted or repulsed...but I didn't feel that way at all. I had enjoyed the feel of her, the taste of her...the way she'd erased every thought from my head, the way she'd squirmed beneath me, the way she'd grabbed my head and released herself all over my face...I had never realized...could never have imagined...I shook my head, finishing my shower and quickly dressing in a casual, floral dress and flats.\n\nI was quite hungry. Starving, actually, considering I hadn't eaten much of the TV dinner the night before. So, I decided to make scrambled eggs, sausage and biscuits. When I peaked into the bedroom, right before the food was ready, I saw Lin was still sleeping. So, grabbing an oversized serving tray, I decided to serve her breakfast in bed. I managed to make it into the bedroom with the heavy tray without spilling anything, resting it on the dresser-top before climbing into bed beside Lin. I leaned into her, pressing my lips to hers as I compelled her to wake from her deep sleep. She responded rather quickly, pulling me to her and deepening the kiss until I was breathless. Her eyes were still closed, but I felt her hands traveling the length of me, searching for the hem of my dress in an attempt to touch my flesh. I giggled, a sound that seemed foreign to me, and wiggled away from her.\n\n\"Hey, get back over here,\" she ordered, her voice deep, raspy with sleep.\n\n\"I have breakfast. Sit up and eat woman.\"\n\nShe grinned as did I. She sat up, not bothering to cover up her small chest, and I wondered if I would be able to stay focused long enough to actually eat before the food grew cold. But I managed, placing the tray between us and watching as she ate heartily. I smiled at her, enjoying the image of her lying in my bed, completely relaxed, as I tried to put some weight on her. I could get used to this, I thought to myself.\n\nWe ate in silence for the most part, but I had so many questions I wanted to ask. So I decided, in between bites, to dive in.\n\n\"Were you born in New York?\"\n\nShe smiled again, as if acknowledging this was the 'getting to know you' part, and nodded. \"Been here all my life.\"\n\nI nodded, \"are your parents still alive?\"\n\nShe shook her head. \"My father was killed when I was a kid. My mother died some years after that. I was raised by my grandmother. She died about 10 years ago.\"\n\nIt dawned on me that she was as alone in this world, like I was. \"My parents were killed when I was young too.\"\n\nShe nodded, but didn't ask anything, allowing me to guide the conversation in whatever direction was comfortable for me. I didn't really want to talk about my family at the moment, so I decided to continue prying into her past.\n\n\"How old are you?\"\n\nShe smirked, \"old enough. Older than you.\"\n\nI raised a brow, \"how do you know how old I am?\"\n\n\"I asked Mitchell a long time ago. You're 27, right?\"\n\nI hadn't realized she'd researched anything about me...it made me smile. But I also wondered why Mr. Mitchell had been so surprised that I was involved with her if she'd been asking questions about me.\n\n\"He's not too happy about me hanging around you,\" I told her.\n\nThat wiped the smile from her face, but she managed to appear casual when she shrugged. \"He's just worried about you. My life...this life...it's not easy.\"\n\nI wasn't sure what she was talking about. Was she talking about being a...was bulldagger the right word? Or was she talking about her connection to Mr. Caruso? I couldn't think of anything to say for a moment...\n\n\"How did you start working for Mr. Caruso?\"\n\n\"My grandmother's boyfriend worked for his father and my grandmother cleaned their house...we grew up around each other.\"\n\nI wondered if that explained why Mr. Caruso didn't seem to care that Lin was pretending to be a man.\n\n\"So...he knows about...about you?\" I tried to ask delicately.\n\nShe shrugged, \"he knows. So does Mitchell. Actually, everyone knows. They just don't talk about it unless I piss them off.\"\n\nI was quiet for a minute. Then I remembered a question that had bothered me for some time. \"Your parents named you Lin? Seems like an odd name for a little girl.\"\n\nShe smiled, \"it's a nickname.\"\n\nMy mouth formed into an \"o\" and she laughed. It had never occurred to me that it wasn't her real name.\n\n\"So what's your real name?\" It seemed an odd question to ask considering what we'd shared a few hours earlier.\n\n\"Linda. Linda Wilson.\"\n\n\"Linda.\" I repeated the name in my head a few more times...but realized I liked Lin better. It suited her.\n\nShe'd finished eating and stood from the bed, allowing me to see her in all her glory. She was thinner than I thought and the same, delicious dark chocolate brown all over. I couldn't help that as I took her in, my body began to respond. She placed our tray on the dresser and made her way back to me, leaning down to kiss me with a passion that had clearly only been on simmer.\n\n\"You don't have anywhere to go today, do you?\" She asked me huskily.\n\nI shook my head no and she smiled.\n\n\"Good.\"\n\n<p align=\"center\">***</p>\n\nWe spent the entire weekend together, talking, cooking (she was surprisingly handy in the kitchen), eating...and being together in every other way imaginable. I think I was getting better at taking care of her considering my willingness to spend time between those wonderfully muscular thighs. I had learned to pay closer attention to the subtle shifts in her body when I was down there, and I'd learned to differentiate between the sounds of mild pleasure, exhaustion, and impending explosion. But I found that there was nothing quite as wonderful as exploring every inch of that neatly trimmed V, except maybe snuggling up against her while we listened to the radio. And the things she did to my body, the heights she took me to...I couldn't even think about them without blushing.",
        "But then, on Sunday evening, Lin told me she had to go on another trip for Mr. Caruso and would be gone for an entire week. I was disappointed, but knew I had no right to be. She had a life, as did I, and the fact that we'd been together in that way did not change who we were. Still, I was quite sad when she kissed me goodbye early Monday morning. And I made her promise she would stay safe and return to me as soon as possible.\n\nMr. Mitchell knew something was wrong on Monday when I was sullen, moody and went about my work listlessly. It wasn't until a huge bouquet of flowers arrived mid-day, and I read the card, that I perked up. I could see he was curious, but was also nervous about who they might be from. So, he decided not to ask and instead simply took advantage of my improved mood.\n\nThe days passed slowly, painfully so. I tried to keep myself busy, but it was impossible. Betty had a friend visiting her, so she was not available to keep me company. I wasn't as comfortable with the other women in the building, so I was forced to spend a lot of time alone. And that was not good. When I was alone, I spent entirely too much time thinking about Lin, remembering the feel of her body against mine, the sweet smell of her breath, the heavenly taste of her special place. By Wednesday evening I found myself closing my eyes while I lay in bed, thinking of her beside me, kissing me, nipping at my flesh...and I started to touch myself. At first my hands seemed to take on a life of their own and I wasn't really paying attention as they massaged my breasts, tugging at the nipples. I continued to enjoy the memory of Lin as my hands caressed the slight swell of my tummy and moved lower, eventually parting my thickened lips as I explored my own slickness for the first time. I could feel her, heavy and warm against my body, her tongue parting me as my fingers now did, licking, tasting, nibbling gently at my flesh. My fingers moved awkwardly at first, until I paid attention to the sensations, focusing on what felt good, although nothing I was doing felt as good as Lin. Before long I could feel a tension building, one that was familiar, although not nearly as intense. I kept going, desperate for some type of...release? And when that delicious heat rushed through me, finally, I bit the inside of my cheek to stop from moaning, pressing against my center tightly as I rode the wave.\n\nThen, surprisingly, I was filled with feelings of guilt. Everything I'd learned about 'playing with yourself' was negative, including suggestions that I would grow hair on my palms and burn in hell. I buried my face into a pillow and sighed, wondering what was going on with me. In the span of a few months, I'd sinned in ways that would probably guarantee me a place in the fiery pits. And I should feel horrible, should be terrified of being condemned, should be...I don't know, something. But the guilt I was currently feeling was the most guilt I'd felt so far. And it was fading pretty quickly. I sighed, standing and going to the bathroom to wash my hands and face. I didn't know what was going on with me, but I wasn't ready to feel bad about most of it. Especially about Lin. Nothing about her made me feel bad. If I was sinning, it didn't feel that way. Of course, that was probably a critical component of sinning, but I didn't feel like thinking about it anymore.\n\n<p align=\"center\">*</p>\n\nOn Thursday morning, two days before the wedding, the bride brought in a swatch of cloth she wanted added to the bridesmaids' dresses as a sash. Mr. Mitchell was livid when she left. First he had to find enough of the material she wanted and then we only had a day to add the flourish, considering the girls planned to pick up their dresses on Friday afternoon. It took him hours to find an exact match for the swatch of cloth. Then we set about making the alterations. He had to leave at 6pm, but asked if I could stay late to finish a few more dresses. I sighed, but realized I had nothing else to do. So, I went to my apartment to grab something to eat and then returned to the shop.\n\nIt was past 9pm the next time I glanced over at the clock on the wall. There was no way I was going to finish tonight, I realized. Besides, Mr. Mitchell had asked me to come in at 8am tomorrow as usual. So, I would just come in a little earlier. Still, I wanted to finish the sash I was currently working on. I was in the back looking for another spool of thread Mr. Mitchell had ordered especially for the dresses when I heard the front door open. I kicked myself mentally, wondering how I could have forgotten to lock the door. I also wondered who would stop by the shop so late, knowing we usually closed at 6pm.\n\n\"We're closed!\" I called from the back, finally finding the thread. I was preoccupied, thinking about how much longer I would stay and curious about who had stopped by as I made my way up front. If I had thought about it, even for a moment, I probably would have figured it out before I saw her. That would have given me time to pull myself together. As it was, when I saw her, standing there, so handsome, dressed in yet another tastefully made dark suit, this time with a burnt orange silk shirt beneath it, I dropped the thread, squealed, and ran to her. She was chuckling as I threw my arms around her neck and kissed her over and over again. Her arms slid around my waist and I melted against her sturdy frame, sighing as I felt her warm, soft lips pressed against mine. I'd missed her. Badly.\n\nIt didn't take long for our happy, reunion kisses to turn into something more. I moaned as she continued to do things to my mouth, her hands careful to remain at my waist even as the heat built quickly between us. Always the gentleman, I thought to myself. But that thought didn't last long. My mind was suddenly filled with images of her smooth, soft dark chocolate flesh, those small, perfectly shaped breasts, nipples hard with desire. I could feel her biceps flexing as I caressed her arms, quickly removing her jacket and tossing it onto a nearby table. My fingers were trembling as I started working on the buttons of her silk shirt, careful not to rip any from the shirt like I wanted to. She chuckled again.\n\n\"Sadie, we can't, not here.\"\n\nI knew she was talking, but I wasn't interested in what she was saying. Instead, I finished with her shirt and parted it. I was starting to realize she hardly ever wore a bra, not that she needed one. And ever since the night she'd been beaten, I noticed she'd stopped wrapped the ace bandage around her chest too. Her breasts, while perfectly wonderful, were small and certainly less than a handful. They didn't need any support, or need to be flattened, which was great for me. That meant I didn't have to wait another minute. She wasn't chuckling anymore as I bent my head and captured a hardening nipple, drawing it into my heat of my mouth and worshiping the turgid flesh as if it was the most delicious thing I'd ever had the pleasure of putting between my lips. Of course I knew that wasn't true. There was another area of this woman's body that was far more tasty, but I would leave that until a little later.\n\nShe moaned. I loved that sexy, throaty sound. It felt as if it was lured from somewhere deep inside her and she had little control over it. And it was heavy and raspy, just like her voice. I felt her hands curl into my hair, bringing me closer and I smiled a little before I gently bit into her sensitive flesh, forcing her to arch her back in response.\n\n\"Goddamnit Sadie,\" she offered huskily, grabbing a handful of my hair and forcing my head up. She brought my lips up to hers, kissing me brutally. My heart was thudding in my chest, my hands still shaking, my center throbbing sweetly. I felt her walking me backwards until my backside bumped against one of the tables. She reached around me, her lips still creating havoc against mine, and swiped everything off the table, onto the floor. Then she lifted me up just a bit until I was barely perched on the edge. Those dark eyes were watching me as she slowly lifted my dress, gauging my reaction as she gently stroked my outer thighs, tickling me, teasing me...moving to caress my inner thighs, parting them, her eyes never leaving mine. I was transfixed by her gaze as I felt the heat of her fingers through the cotton of my panties, then they were moving the thin material aside, tenderly stroking the rapidly swelling lips...the feelings she was creating overwhelmed me. I closed my eyes, throwing my head back as I felt her finger sink into me slowly. A moment later she had undone the top buttons of my dress, her teeth biting into one of my painfully hard nipples through the soft cotton of my bra. I moaned, or whined, or made some kind of noise that might suggest I was in pain...but I wasn't. God, I wasn't. That thick digit moved within me, her other hand moving up to sweetly torture my nipple as she raised her head, her tongue burning a path upward until she sank her teeth into my neck. I could feel those sensations building again, my insides quivering, my grip on reality becoming more and more tenuous as she took complete and utter control of my body. I wanted her so badly, I wanted it so badly...I dug my fingers into the muscle of her biceps as I felt the tidal wave crest...I bit my lip until it bled when it finally crashed over me.\n\nI knew she could feel the contractions between my thighs, because I surely felt my center gripping her finger, squeezing it ever so lovingly even as she slipped a second one into me. She moved them both within me, quicker now, deeper, her tongue caressing my ear lobe, her other hand continuing to manipulate my agonizingly erect nipple. It was magic, what she was doing to me, forcing me higher and higher, past the first threshold and up to a place from which I would drop faster...harder. But I was hungry for the ride, almost desperate for the feel of her and the pleasure she created. I clung to her, anxious, as I continued the climb to that higher peak, impatiently waiting until she allowed me to drop into that pool of devastatingly wicked pleasure.\n\nBut in the next instant I was not swimming in a pool of wondrous sensations. Instead, I heard a terrifyingly loud crash...glass shattering...the shop's window? I stopped, as did Lin, and froze for a moment, not sure what was going on. Then Lin was leaping over the table, grabbing me with her as she slammed us down onto the floor so hard my bones rattled. She quickly turned the table onto its side and positioned us behind it. Shocked, stunned, I wasn't sure how to react. I glanced over at Lin, there was blood on the sleeve of her shirt, a small circular stain. There were things slamming into the thick wooden table in front of us, pushing it backwards, forcing us backwards. Lin grabbed my wrist and, staying low, practically dragged me into the back room. She locked the door and then sat me against a wall. The walls in the back room were made of concrete and the door was made of a thick metal. Since Mr. Mitchell kept money in this room, he'd had it built almost like a bank safe. The only downside was there were no windows and no other way out.\n\nWe sat there, not moving, the breath rushing from me, pain starting to register. I shifted a little and winced, wondering if I had hurt something when Lin slammed me to the floor. When I looked over at her again, as she searched the room with her eyes, there was more blood. The spot on her sleeve was rapidly growing. It dawned on me that Lin had been...shot? Even the thought sounded absurd. We waited for only a few more seconds, although it felt like an eternity, and then we heard tires squeal as a car peeled off. Lin didn't move for a bit longer and then she was on her feet, grabbing a long piece of cloth and approaching me.\n\n\"Sadie,\" she ordered softly, handing me the cloth and indicating her arm. I realized she wanted me to tie the cloth around her arm. I tried to ignore the blood, my hands trembling severely as I tied the strip of material very, very tightly around her upper arm. It pinched as I tied a knot in it, but I don't think Lin cared. She forced me to my feet.\n\n\"Your purse?\" She demanded.\n\n\"Behind the counter,\" I responded weakly.\n\nShe opened the door a crack, very slowly peeking out before opening it entirely. Then she grabbed my wrist again, dragging me to the front of the store. The huge window was shattered. That was the loud crash I'd heard. And there were holes in the table where we'd hid for a few seconds, as well as holes in the counter and a lot of the other furniture in the shop. The scene registered slowly.\n\nI wasn't really paying attention to what Lin was doing, but I saw her out of the corner of my eye. Then, suddenly, her firm grip was on my arm again, pulling me from the store. She hurried me the few steps to my building, opening the door to the lobby and then turning left, heading to an apartment on the first floor. When we finally stopped, my brain registered that Betty lived on this side of the building on the first floor. I had just finished the thought when Betty opened the door in response to Lin's rhythmic pounding.\n\n\"What happened?\"\n\nLin pushed past her, sitting me down on Betty's comfy sofa before dragging Betty into the bedroom. They closed the door and I heard nothing. Then voices, low at first, then someone shouting, Betty I think. Finally, Lin came out of the room, walked past me without so much as a glance, and left, slamming the front door behind her. Betty hurried to lock the door. When she finally knelt in front of me, I could see she was upset.\n\n\"Are you okay, Sadie?\" She asked, clearly worried.\n\nI nodded...nodded...kept nodding. I'm pretty sure if I was trying to reassure her, I wasn't doing a great job.\n\nShe sighed, \"it's okay,\" she assured me, patting my knee gently. I forced myself to stop nodding. She sat beside me on the sofa.\n\n\"Did Lin say anything on the way over here?\"\n\nI shook my head. She was silent for a few moments, concentrating on something, maybe trying to figure out what she wanted to say, or how to say it. Then she got up and went to the kitchen. I was glad because it gave me time to think. Like...what the hell was going on? Why had Lin brought me here? How did Lin know Betty? How did Betty know Lin? And did I already ask what the hell was going on?\n\nBetty made her way back to my side and handed me a glass filled with amber liquid, the same amber liquid Lin had given me at her house, I realized as I sipped it. She put the bottle on the table.\n\nBetty sighed, \"let me start at the beginning. I'm Lin's sister. She asked me to start keeping an eye on you a few months ago.\"\n\nShe took a hefty swallow from her own glass. I was glad she'd thought to bring the bottle with her and held my glass out for more of the warming liquid.\n\n\"She also gave me this to give to you if there was an emergency.\"\n\nShe handed me a thick envelope after pouring me another hefty dose, continuing to talk as I tore it open.\n\n\"Before she left, she told me she should be back in 30 minutes. If she's not...well...she said you have to leave.\"\n\nI was only half listening to her. The envelope held money. Lots of it. And my birth certificate and social security card. I wasn't certain, but I could have sworn they were still upstairs in my bottom dresser drawer.\n\n\"That's a thousand dollars. She has 25 minutes left Sadie. Are you listening to me? If she's not back, you have to go.\"\n\nI closed my eyes, silent, desperately trying to understand what was going on. I didn't. I had no idea what she was talking about.\n\n\"Go where?\"\n\n\"Anywhere but here. Do you understand what I'm saying? Caruso's dead...and they're after her now. You have to leave Harlem.\"\n\nAgain, she was saying words that sounded like English, but they simply weren't registering.\n\n\"Betty...\" I hesitated. I needed answers. And I apparently only had a few minutes to get them. \"I don't understand what's going on here. Who is Caruso? Why would someone kill him? And what does this have to do with Lin? She's just a delivery person.\"\n\n\"What?\" Betty asked, incredulous. \"Is that what Lin told you?\"\n\n\"She said she was a runner...I just assumed.\"\n\nBetty stood, drinking another hefty dose from the glass she held tightly. \"Jesus, I thought you knew,\" she muttered mostly to herself. She sighed and then sat beside me again.\n\n\"Sadie, Caruso was a drug dealer, one of the biggest in Harlem. Lin is...was Caruso's right hand. She was also his runner. In other words, she ran drugs across state lines. Caruso was killed tonight and Lin is in trouble. And since they know about you, that means you're in trouble too.\"\n\nAnd in that moment everything clicked. The fancy clothes, the nice home, the frequent trips out of town, the short wait at The Cotton Club, the men who had threatened her, the mistress, Caruso's threatening manner when Lin was just a little late, my boss's concern...yes. It made sense. Would I have ever pieced it together myself? Probably not. I had the pieces to the puzzle, but had clearly decided not to put the puzzle together. But Betty's words lifted the veil and now I had no choice but to deal with it...and I felt a little foolish. I should have known, right? I mean, wasn't it obvious? I closed my eyes and swallowed. Then swallowed again.\n\n\"Where's Lin?\" I finally asked, opening my eyes.\n\n\"She'll be back...if she can,\" was all Betty would say.\n\n\"Are you telling me that if she's not back in,\" I glanced at the clock on her wall, \"twenty minutes, she's probably dead?\"\n\nBetty was going to lie, I could see it. She was about to shake her head and reassure me, but I think something about the way I was watching her changed her mind.\n\n\"To be honest, I don't know Sadie. I only know that she said you had to leave if she didn't come back.\"\n\nI gulped down the remaining liquid in the glass. I wanted another drink, to calm my nerves, but getting drunk wouldn't help. I was already feeling lightheaded.\n\n\"Am I allowed to go back to my apartment?\" I asked finally.\n\nBetty shook her head, although I already knew the answer was no.\n\nI was done. I had no more questions. I couldn't think of anything else to say, or what I would do next, if Lin didn't show up. So I decided to just sit back, take a deep breath, and watch the clock.\n\n<p align=\"center\">*</p>\n\nThere were only a few minutes left...and I was getting worried. I wasn't planning to leave without Lin. And I knew I was going to have to fight with Betty about it. But if I left, where would I go? I had nothing...no one. I hadn't been down South since I was a little girl, so there was no one down there I could turn to. And I didn't know anyone else. Lin was it. So, if I had to leave New York, I couldn't imagine doing it without her.\n\nThankfully someone knocked on the door as the clock was ticking down. I froze, worried at first, but it was the same rhythmic pattern Lin had used earlier. Clearly a code between the two of them. I didn't move as Betty rushed to open the door, quickly locking it behind Lin. I heard the two of them talking, softly enough so that I couldn't hear, so I just continued to sit on the sofa, keeping still. I didn't move at all, I just waited...just waited.\n\nEventually Betty disappeared into one of the other rooms. Lin paced for a moment...and then sat on the coffee table in front of the sofa where I was sitting. Our eyes met, her intense chestnut brown ones watching me closely at first, but then she lowered her gaze and sighed.\n\n\"I'm sorry, Sadie.\"\n\nHer voice was thick, heavy...filled with...guilt? I wasn't certain. I glanced at her arm, glad to see she'd changed clothes and had apparently stopped the bleeding. I wasn't sure what I wanted, what I needed from her at the moment. I started with the question that weighed most heavily on my mind."
    ],
    "authorname": "MercuryLove31",
    "tags": [
        "african american",
        "black",
        "drugs",
        "cross dressing",
        "butch",
        "harlem"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/sadies-travels"
}