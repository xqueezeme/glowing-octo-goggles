{
    "title": "Lady in Red Pt. 02 Ch. 19",
    "pages": [
        "Gwen's surprise at her friends' practical joke was total. As she stood looking at her family with her mouth open, Steve hugged her shoulders to him and whispered in her ear.\n\n\"This was Lisa's idea. She had the patches waiting for her on the helicopters and passed them out when you weren't looking. Are you going to be able to laugh this off?\"\n\n\"Are you kidding? They got me good! I love them even more for making the effort to set me up like this. We need friends and relatives that treat us this way. We keep being asked about all the power and influence we have, and it worries me,\" admitted Gwen. \"If it's true, we have to stay grounded and always try to do the right thing. These friends and relatives are doing their best to keep us from getting swelled heads and becoming prima donnas. I love them all dearly.\"\n\n\"Good, because Billy's family is sponsoring a welcome home party for us, right now. A lot of our friends and neighbors will be stopping in to see Congresswoman Anderson, the woman that saved Vlad Novokov's life, performed in three of the best attended concerts ever, built a hospital, broke ground for another and...\"\n\n\"Okay! I was there. You, Jordan, Charlie, and quite a few others had a great deal to do with those accomplishments. You always try to credit all of your successes to others. I remember everything very well, especially when you saved me from that knife wielding terrorist. Look how many people are here to welcome us! It was a great trip, but it's always so good to get back home.\"\n\n\"Let's get over to Billy's restaurant and shake some hands, and eat some steak,\" suggested Steve. \"It's also a party to congratulate Jordan and Charlie on their family addition. Let's start working our way over there.\"\n\nIt took a while for Gwen, Steve, Jordan, and Charlie to reach the cars waiting for them. They were surrounded by neighbors, friends, and well wishers. The entire group was warmly welcomed, and closely questioned about Russia and the attack. Steve and Gwen were at the center of the crowd's curiosity.\n\n\"Everyone!\" called Billy loudly. \"There's a reception at our restaurant for our famous friends. There's a huge buffet and it's free, so please let's get to our cars and we'll see you there. These guys can answer questions better when their stomachs aren't growling.\"\n\nWhen they reached Marsh's Landing, there was a large banner over the door congratulating Jordan and Charlie. Inside Gwen immediately noticed that Billy's father had already framed some new photographs from the trip and hung them up. The one taken of the Cheryl, Steve and Gwen as they left the scene of the attack covered a large portion of the wall. Gwen was able to see her blood shot eye, the bruising around her other eye, and the blood on her arms, hands, and torso, along with what Gwen had to admit was some pretty impressive cleavage.\n\nCheryl looked frightened, but seemed fairly calm, while Steve was something else again. He looked amazing with his shirt all but gone and bloody lines crossing his hard abs. His eyes were extremely intense as he seemed to stare at the camera. He also had blood running down one forearm and dripping off his hand, and bruising around one eye. His good arm was placed protectively over Gwen's shoulder.\n\nThere were also several pictures of the huge crowds that attended each of their concerts, along with several of the friends as they performed for the mass of humanity in attendance. Those pictures were bunched on the wall under the heading 'The World Capital Tour'. Finally, there was a photo of the new hospital in Kiev with the Lady in Red name and logo prominently displayed.\n\nThe entourage had managed some sleep on the flight back, so they were all able to remain sharp and respond to the many questions their friends and neighbors had for them. Cheryl brought her parents over to speak to Gwen and Steve. \n\n\"We were petrified when we heard about the attack, but your people called us almost immediately to let us know that Cheryl was okay. She can't stop talking about how brave you both were. It's all so hard to imagine, but Cheryl was there and saw it all, so we know it's true,\" added Mrs. Baxter. \"Thanks so much for taking her along, and for keeping her from harm's way. Now she's in a picture on Marsh's wall of fame! We're very proud of her, and of you, Jordan and Charlie for making Sparta a well known, thriving community.\"\n\nSteve was surprised when Senator Chatham suddenly appeared in front of Gwen and him. \"I'll be back in Washington and in your office Monday morning,\" promised Steve. \"You didn't have to fly out here to check on me.\"\n\n\"That's why I'm here,\" responded Senator Chatham. \"First let me congratulate you both on some excellent work under incredibly difficult circumstances. I saw the video of the attack and you both responded quickly and very effectively. President Hanson was quite proud of you both.\n\nNow for the bad news. Two days ago, North Korea captured five Americans that had been sailing well off their coast until a bad storm disabled their boat. It caused them to drift into North Korean waters where they were picked up by their navy. We've demanded their release, but you know how unpredictable Jong can be. He won't even discuss freeing them.\"\n\n\"I have a bad feeling about where this is going,\" interrupted Gwen hotly. \"Steve will not be traded for any person or group, for any reason! It's unethical and immoral to even ask him. He will not be used as chattel in some trade with the Koreans!\" \n\n\"I couldn't agree more,\" responded Senator Chatham. \"That will not be happening. I promise you that. However, Jong wants to discuss the release of Hampton Duval's family with Steve. He says that Steve is the only one he'll speak with on the matter. We're leaving Monday morning for North Korea.\"\n\n\"We're not talking about Captain Hampton Duval, are we,\" asked Steve with obvious concern. \n\n\"The same,\" replied Senator Chatham. \"He was an instructor at the Academy while you were there. You were in some of his classes. You obviously remember him.\"\n\n\"Yeah. I even met his wife and kids a couple of times. They always came to our football games and even some of the practices. His son, Hampton, Jr. must be around twenty now. He was headed for Princeton, if I remember correctly. The two girls would be a few years younger. He loved sailing and he was really good at it. I went out on the Potomac with him a couple of times. He knows his stuff.\"\n\n\"The Koreans are suggesting that he was spying on them since he's an officer in the Navy and was out of uniform, if you can imagine that. They were on a three month family vacation. They just had some bad luck. Regardless, your Navy friends want him and his family back pretty badly. You know how they look after their own. Anything less than their safe return will not be looked upon kindly by the U.S. government,\" worried Senator Chatham.\n\n\"What do they expect Steve to do? The last time he went on one of these trips, we wound up dragging his broken body out of a cave a few days after a nut job tried to cut off his head!\" interjected Gwen with passion. \"Never think he'll go through that again. He's promised me and he always keeps his word.\"\n\n\"Gwen, I repeat what I said earlier. Steve will not be used to barter with the Koreans. But if he's the only one they'll talk to, so we need to set up the meeting. We owe it to the Duval family,\" replied Senator Chatham calmly as she secretly admired the fire the younger woman displayed for her man.\n\n\"I'll be okay, Gwen. I gave you my promise and I'll keep it, along with my head, thank you. I'm curious about why Jong wants to see me, but if it'll help Captain Duval, I'll gladly do all I can.\"\n\n\"As I said, we're leaving early Monday morning for North Korea. You've had some time off, although it didn't appear to be relaxing or restful,\" chuckled Senator Chatham. \"There's something else I need to discuss with you.\n\n\"The Secretary of the Navy is concerned about morale on some of our aircraft carriers. It seems that they won't be coming home from the Mideast for a while. He's dreading the reaction when the crews are told it's going to be a few more months, at least.  \n\n\"He's uncertain about being able to order you to perform for the crew, so he wants me to ask if you'd consider doing it. He feels it would help offset the disappointment the crew's going to feel. Here's the kicker. He wants you to perform on the Teddy Roosevelt on July 3rd, and then fly to the Nimitz for another show on July 4th. He'd very much appreciate it. It would mean that you could get much of the summer off to do your film\" promised Chatham as she waited for Steve's reaction.\n\n\"Senator, I usually perform with my friends on Independence Day, but I sure can't refuse this request. The others will do fine without me. I just hold them back, anyway. I'll ask Charlie to line up a band I can take with me. I don't know how well the crew will enjoy my efforts, but I'll do my best. Have any ideas about who I should try to get to go with me Gwen? I don't want to take any of the guys that'll be playing for you, Jordan, and Charlie.\"\n\n\"I have a few ideas, but let me ask, Jordan and Charlie and see what they think,\" replied Gwen as she waved her two friends over.\n\n\"Steve has practically been ordered to perform for the crews of the Nimitz and the Teddy Roosevelt on July3rd and July 4th. He's wondering where he'll get a band to play with him,\" stated Gwen matter-of-factly.\n\n\"Wow! I've always wanted to get a ride on one of those big boats!\" bubbled Jordan. \"I just hope I don't get morning sea sickness. I bet that's pretty unpleasant.\"\n\n\"I'll tell the guys to plan on spending the holiday in the Mideast,\" grinned Charlie. \"We'll give those sailors the show of their lives!\"\n\n\"It looks like your problem is solved, or don't you want Jordan, Charlie, and me to go with you?\" teased Gwen.\n\n\"Are you kidding? I'd love it, but I hated to ask you to give up your holiday,\" responded a delighted Steve. \"I do worry about the reaction you and Jordan will create onboard those ships. Those guys will be way over the top when they see you two walking around the deck. Would the Secretary mind if Gwen, Jordan, and Charlie came along, and we brought the band?\"\n\n\"I think that was Secretary Gordon's hope all along,\" smiled Senator Chatham. \"He knew he could squeeze you a little since you're already in the Navy, but he was worried about asking your friends.\"\n\n\"Would you happen to have his contact information?\" asked Gwen. \"I'd like to speak with him.\"\n\n\"I can't give you his number, but I'm supposed to call him to report whether Steve would perform or not. I'll call him right now, and after I speak with him, I'll give you the phone,\" promised Chatham as she hit a number on her cell.\n\n\"Mr. Secretary, it's all set. He'll perform on the carriers. Yes, and they're all going to be there. I think this will raise everyone's morale. It's a stroke of genius. But there's one thing more. I have a young Congresswoman here that insists she speak to you. Right again! Here she is,\" finished Chatham as she handed her cell to Gwen.\n\n\"Where do you get off trying to force Steve into playing for the crews on these carriers?\" demanded Gwen. \"He's in the Navy, but I doubt that having to sing to a bunch of forlorn sailors is part of his contract. You should be sorry! From now on, you call me if you want us to help you out by doing a concert or two for the Navy!\n\n\"This is a favor to us!\" insisted Gwen. \"We love these men and women that sacrifice so much for us. If we can work it out, we'll go anyplace, anytime to help out any branch of the military! So now you want me to do some promotions for the Navy? Why didn't you ask me years ago? I'd love to, especially if I can make them with Steve! So we're on the same page? If you even need anything from us, you'll call me and we'll try to work it out, okay?\"\n\nGwen was all smiles as she returned Senator Chatham's phone. \"We'll be spending the July 4th holiday on a couple of carriers and I'll be making some of those Navy commercials with Steve while we're there. Jordan, I picked up the feeling that he'd like you and Charlie to make some, too. I wonder why he never asked before.\"\n\nThe foursome returned to mingling with their friends and neighbors. Sparta was extremely proud of its famous citizens and the locals were anxious to let them know exactly that. Gwen, Jordan, Steve, and Charlie were on a first name basis with most of the residents of the town and they greeted them warmly. It always made people proud when they were addressed personally by such successful, famous, and wealthy celebrities. \n\nSteve watched as a stranger approached Stephanie and engaged her in what appeared to be a private conversation. Steve was certain that he had never seen the man before. He wasn't surprised when Stephanie led him over to speak with the four friends.\n\n\"This is James Hawthorne. He flew in from Britain last night. He's with the World Health Organization and he'd like to speak with you guys. James, this is Gwen, Jordan, Charlie, and Steve. \n\n\"What can we do for you, Mr. Hawthorne?\" asked Gwen as she shook his hand.\n\n\"You're obviously familiar with our organization and how we work to eradicate certain communicable diseases around the world through free vaccinations. We rely a great deal on donations from countries, private enterprise, and the public to fund our efforts. We're trying to assure that every child is vaccinated against as many diseases as possible. \n\n\"To that end, we're trying to schedule an international telethon originating in London. I've been sent here to ask you to perform in London at the telethon. It's our belief that your appearance would greatly increase the donations.\"\n\n\"How many acts will be appearing and how long will you want us to perform?\" asked Charlie curiously.\n\n\"Honestly, we felt that we'd start at the top and work our way down. How long would you be willing to perform? We'd work any other bands, singers, and guests around your schedule. We'll broadcast for twelve hours. We'd want you to appear when the audience would potentially be the largest, which we believe would center around five o'clock London time. That would allow most of Europe the ability to watch before midnight, and all of the United States should be awake and able to tune in as well.\"\n\n\"When would this take place and what's the most amount of time you'd allow us?\" asked Jordan.\n\n\"You can have the entire twelve hours if you want it. We're setting it up for Saturday, June 28th. As I said, you'd be the stars that draw the audience, so we'll work to accommodate you any way we can.\"\n\n\"What do you say guys?\" asked Jordan as she looked at the other three. \"It's for a good cause. Should we do four hours? Now that I'm pregnant, I find myself a lot more concerned about the health and safety of all children.\"\n\n\"I think four hours would be fair. If we tried for any more, we'd be tired and our performance would suffer,\" agreed Gwen. \n\n\"I have to speak with Senator Chatham to be sure I can go. She owns my soul at the moment. But I expect she'll be fine with it. I think we'd like to be on from four to eight PM, London time,\" added Steve. \"What do you think, Charlie? You're the guy we rely on to get everything put together for our gigs.\"\n\n\"Let's do it,\" replied Charlie. \"Now that I'm going to be a father, I feel the same as Jordan does about kids. Let's help as many as we can.\"\n\n\"I can't tell you how pleased this will make everyone at WHO,\" stated Hawthorne. \"When I volunteered for this mission, I was rather nervous. I'd heard that you were all caring people that worked to help less the fortunate, but I feared it was all PR to help promote your many enterprises. Now I find you're very down to earth, caring people that happen to be extremely talented and wealthy.\"\n\n\"I've heard of a James Hawthorne that's an advisor to The Prime Minister,\" recalled Steve. \"Is there any connection?\"\n\n\"That would be my father,\" replied the young Brit. \"I come from a politically active family. I expect to run for the House of Commons next year. I should be Prime Minister within ten years, or so my family thinks.\"\n\n\"Well, thanks for the invitation. We'll do our very best to help raise some money for your organization,\" promised Gwen. \"I've always wanted to see England and now I will. I can hardly wait!\"\n\nSteve and Gwen spent two more hours shaking hands and recounting their experiences in response to the many questions their friends and neighbors constantly posed. They were a very tired couple when they finally made it to bed much later in the evening.\n\n\"You be careful in Korea,\" cautioned Gwen to Steve as she laid her head on his shoulder and quickly fell asleep. \n\nAfter a restful Sunday, Steve found himself on a jet headed to North Korea early Monday morning. Senator Mason and several other members of Congress made the trip. Naomi, as an aide to Senator Mason, also made the journey and sat next to Steve on the long flight.\n\n\"Look at all of those nosey people that keep looking at us,\" pointed out Naomi. \"They expect us to have sex any minute so they can tell everyone about it.\"\n\n\"Is sitting near me bad for your reputation?\" asked a concerned Steve. \"I never gave it a thought. I enjoy your company and we were having a good conversation. Would you like me to find a different seat?\"\n\n\"Are you kidding?\" laughed Naomi.\"I'd be sitting on your lap if I could get away with it. I'm used to people thinking, and even suggesting that I'm having an affair with you. Lots of classmates at the Academy thought we were lovers because we spent so much time together.\" \n\n\"I think most of them knew the truth, but they were jealous that I was best friends with the best looking girl there. Guys can be as catty and jealous as any woman.\"\n\n\"We are pretty good friends, aren't we?\" smiled Naomi as she gave Steve a kiss on his cheek. \"I have a great boyfriend and I love Gwen, but sometimes I wonder what things would have been like if I had been a little friendlier back when we were in Cuba,\" admitted Naomi.\n\n\"I know what you mean. You're gorgeous and have an amazing body. If I hadn't fallen in love with Gwen, I'd have chased you all over the place,\" replied Steve. \"But I am in love with Gwen and I'm totally committed to her, so we'll have to be happy with being best friends.\"\n\n\"That'll have to be enough. Besides, Jared is a very good man, and a wonderful lover. I'm not complaining at all. My life has turned out pretty well. Jared, Gwen, and you are the big reasons for that.\n\n\"Now, let's try to guess what'll happen when we get to Korea. Jong is known to be a bit off center in his thinking. Why does he insist on speaking with you?\" wondered Naomi.\n\nNaomi had the answer to her question the following afternoon when she sat with the American contingent meeting with the North Korean leader. After some brief small talk and introductions, Jong cut to the chase through an interpreter.\n\n\"You have travelled here to try to secure the release of the American spies we captured last week,\" began Jong. \"I will release them to you if Lieutenant Hammer can meet our conditions. Are you interested, Lieutenant Hammer?\"\n\n\"We expect to take the Duvall family back to the states with us, so name your conditions, Sir. If they are reasonable, we will do our best to meet them,\" responded Steve.\n\n\"It's quite simple. I propose a shooting competition between you and our nation's best marksmen,\" stated Jong. \"If you win, you may leave with the American spies.\"\n\n\"I tentatively agree,\" nodded Steve thoughtfully, \"as long as the competition is fair and safe. I'll need to know the details before I can commit, but if it's fair. I'm in.\"\n\n\"Then it is agreed,\" smiled Jong. \"We will meet at our new shooting range tomorrow at noon. For tonight, I want all of you to be my guests at a formal dinner. I am very curious about the movies you make. Perhaps you'd be interested in making a movie here in Pyongyang? We have some excellent locations for a movie. Of course, North Korea could not be portrayed as less than the enlightened nation that it is.\"",
        "\"We can discuss that at the dinner this evening,\" replied Steve. \"We would not insult your nation in any movie, nor would we allow you, or anyone else the right to control or censor anything we make. You'd have to agree to that up front or there would be nothing further to discuss,\" insisted Steve.\n\nJong briefly looked annoyed, but then gave a broad smile. \"You are reputed to be very frank, Lieutenant Hammer. I see that it is true. Everyone in this room worries about what I will think or do; everyone, that is, but you. We will dine in two hours.\"\n\n\"What are you doing?\" demanded Congressman Kasen from Alabama as soon as the American contingent was away from Jong. \"You can't arbitrarily negotiate with Jong. That's why members of Congress are here. We'll handle the discussions.\"\n\nSteve glanced at Senators Mason and Chatham before he answered. \"I didn't see you so much as nod when Jong brought up the subject. Feel free to negotiate with him at dinner tonight. Just don't commit me to anything. I was under the impression that I was here because Jong wanted me here. Was I mistaken? Does he really want to speak with you?\"\n\n\"You really need to discuss your responses with us before you say anything. We're elected officials and you're just an aide to a senator,\" replied Kasen. \"We're not here to make this into a three ring circus with Wild Bill Hickok and Annie Oakley doing trick shots for the audience.\"\n\n\"As you just pointed out, I'm merely an aide to a senator. I happen to be an aide to Senator Chatham, so I follow her directives,\" responded an obviously annoyed Steve. \"If you have a problem with my participation, take it up with her. I respect your office as well as your constituents, but don't speak to me like I'm one of your lackeys. I do not take orders from you.\"\n\n\"Senator Chatham, I demand that you have your aide disciplined for insubordination. He's been rude and uncooperative, to say the least,\" insisted Kasen. \"He has an inflated view of his role here.\"\n\n\"Congressman Kasen, I don't try to order your people around,\" snapped Chatham. \"I don't appreciate you harassing my aide. He's here to try to gain the release of an American family that strayed into North Korean waters. I really have no idea why you're here, but I suggest that you keep your mouth shut and try to learn something. If you do something stupid and ruin things for that family, I'll see that every TV station in your home district learns about it before you board the flight home. Do we understand each other?\"\n\n\"Well, yes, but I don't understand why we'd go along with some ridiculous shooting match to free the hostages. What happens if Hammer loses? This is not the way diplomacy works.\"\n\n\"Perhaps you didn't get the memo,\" responded Chatham coldly. \"Jong is bat-shit crazy. If he'll free the Duvals when Steve wins some sort of contest, we'll take a chance with the contest. If he wants to see who has the bigger dick, we'll still let Steve represent the US. I'm trying to spell it out for you. Steve gives us the best chance to gain their release regardless of what type of macho game Jong dreams up.\"\n\nRepresentative Kasen was stunned into silence by Chatham's crude remarks. Naomi took the opportunity to interject some humor. \"I have to back Senator Chatham on this one. Steve is the guy we want in any sort of competition, especially that kind!\"\n\n\"Lieutenant Wilson, comments like that are not appropriate for a naval officer,\" cautioned Senator Mason. \"And what makes you so certain, anyway?\"\n\nNaomi simply winked and then smiled at Senator Mason. By this time the entire American contingent, with the exception of Congressman Kasen, was laughing heartily.\n\n\"This is very serious business, but that doesn't mean we can't enjoy a few laughs,\" concluded Senator Mason. \"I think we've pretty much decided on a course of action, which is to give Steve Hammer the reins and see what he can do with Jong.\"\n\n\"Just don't shoot him by accident, or design,\" added Chatham. \"His number two guy, Kwang Pyong-So, is a psychopath that makes Jong look like Santa Clause. As strange as it seems, the US much prefers to deal with Jong. He's unstable and unpredictable. Kwang wants to go to war. We need to keep Jong around long enough for him to execute Kwang when he annoys Jong in some way.\"\n\n\"Do you actually think Jong would execute his second-in-command?\" asked a disbelieving Kasen.\n\n\"He purged his own uncle from the government, and he liked him,\" replied Chatham. \"Imagine what he'd do to someone trying to wrest power from him that isn't a relative.\"\n\nTwo hours later, the Americans were dining with Jong in the Royal Palace. Steve was placed to his left while a very surprised Naomi sat next to Jong on his right. Steve could see that Naomi was nervous, so he did his best to maintain a conversation with Jong. He had no doubt that Naomi's nerves would quickly settle and she'd be fine.\n\n\"Have you given any thought to my request that you film a movie here in North Korea?\" asked Jong through an interpreter.\n\n\"I think my partners will strongly consider it if they are convinced that we can move about freely, have our safety guaranteed, and you realize that you will have no influence over the final product we release,\" offered Steve. \"It would not be a political movie and it would not portray your nation in a bad light. I would promise you that. It would simply be a movie where the characters lived in North Korea, for whatever reason.\"\n\n\"Would you use Koreans in this movie or would all of the actors be American?\" asked Jong.\n\n\"We'd use Americans as the main characters, but there would be many Koreans filling in many of the roles as locals. You need to understand that this movie will need to make the lion's share of its revenue in the United States and we Lady in Red principals always appear in our own films. That keeps our costs down and increases our profits. It's simply how we operate.\"\n\n\"Would Ms. Wilson, that would be Lieutenant Wilson, appear in this movie?\" asked Jong as his gaze turned toward Naomi.\n\n\"Sir, this movie we're discussing is hypothetical at this point, so it obviously has not been cast. That being said, Naomi is an excellent actress and she's extremely popular. She's beautiful and sexy, so I'd say that we'd have her in the movie if her schedule permits it. Would you want her to be in it?\" asked Steve as he observed the look Jong had given Naomi.\n\n\"Very much so!\" replied Jong eagerly. \"Our nation would show you our Korean hospitality. You would change your opinion of our great country if you spent a few months here.\"\n\n\"Sir, please don't assume that we have less than a very high regard for your nation. It's our hope that our nations gradually become friendlier, allowing trade and travel between our two countries to become common place. I'll do my best to persuade our company to make a movie here next year. This is a beautiful capital city.\"\n\nJong beamed at Steve's comment and nodded vigorously as his words were translated. The rest of the evening went well as Jong spent most of his time speaking with Steve and Naomi, much to the dismay of Representative Kasen. Almost two hours after they sat down to dine; the Americans complimented Jong and his staff as they left the dinning area.\n\n\"You've got no business promising anything to Jong,\" insisted Kasen as soon as the Americans were gathered in a meeting room at their hotel. \"You do not represent the United States here. We are under no obligation to keep any of your promises!\"\n\n\"Then why are you so upset?\" asked Steve calmly. \"I have no authority, so any promise I make would be the same as coming from a cab driver in Chicago. Would you be upset if a mechanic from Dallas made a promise to Jong? You need to chill a little, and you'd be well served to think about what you're saying before you say it.\"\n\n\"I just don't want Jong to get the wrong impression!\" insisted Kasen. \"Was that last remark supposed to be a veiled threat or something?\"\n\n\"Actually, it was,\" snapped Steve. \"You'd better pull in your horns around me or we'll be mixing it up. Your constant babble is getting on my nerves.\"\n\n\"You don't scare me. I'm a Congressman, and as such, your superior. I can have you court-martialed if I choose.\"\n\nSteve rose from his chair and strode over to where Kasen was seated. As Steve approached him, Congressman Kasen began to whine to Senator Chatham.\n\n\"Senator Chatham! Keep your aide under control, please! If he touches me, he'll be spending the next ten years in a cell. I have witnesses!\"\n\n\"Kasen, why don't you just shut the hell up?\" asked the frank talking senator. \"No one here has seen or heard anything. If Steve decides to thump your ass a little, no one will admit seeing anything happen. We're here to free some prisoners, and if buttering up that crazy bastard helps us attain that goal, we'll do it and smile while we do! That family is far more important than your fragile ego. We have a big day tomorrow. Steve's going to try to win a family's freedom. I want you to try to keep from saying anything stupid. It should prove interesting.\n\n\"Steve, please take a seat. Congressman Kasen doesn't really understand the situation. For some reason, he hasn't figured out just how influential you are and that it's political suicide to show such disrespect. You need to keep your anger in check and concentrate on tomorrow's activities. Are you prepared, and is there anything we can do to help?\"\n\n\"I really can't think of anything,\" replied Steve as he stared at Kasen a few more seconds before facing Chatham. \"We're supposed to meet with the family tomorrow morning so we can judge for ourselves that they're in good health. We need to let them know that the U.S. is working for their release, but don't let them think that it's a done deal. I'm not guaranteeing anything, especially when I don't know what rules Jong will have in place. I'll do my best and hope that it's good enough.\n\n\"That's all we can ask for. I'm sure you'll do very well, but who knows how Jong will try to stack the deck. It's good that you sort of promised you'd make a movie here. That may prevent him from cheating somehow. He doesn't want to upset you if you're going to film a major movie in his capital city.\"\n\nThe following morning saw the American delegation finishing breakfast when the Duval family was led into the room. They wore prison garb and were barefooted. Their expressions brightened when they heard Americans speaking in English. \n\nWhile they were not allowed to move toward the Americans, the guards did not prevent the contingent from approaching them. Kasen was the first one to reach them. It was obvious that he was preening for the media that was allowed to attend and record the meeting. \n\n\"I'm Congressman Kasen and I promise you that we'll do everything in our power to gain your release. The North Koreans have no right to hold you and I've told them that. I expect to take you back to the States with us!\"\n\nHampton Duval politely listened to Kasen, but his eyes were glued to Steve, who was wearing his fatigues as he stood at attention and saluted. Obviously Duval was not in uniform, but the respect Steve showed him was not lost on the delegation, nor the reporters.\n\nDuval nodded slightly to Steve and then spoke quietly to his wife. She quickly diverted her attention from the verbose Kasen and focused on Steve. Her face immediately lit up. She immediately pointed Steve out to her son and two daughters. The girls were unable to contain their pleasure. They waved and smiled broadly as he approached their family.\n\nDuval quickly put his hand out and Steve shook it firmly. Then he stepped over to Mrs. Duval. She was a thin, dark haired woman approaching fifty. She quickly wrapped her arms around Steve and hugged him tightly. Next was Bonnie, the older daughter, who also hugged Steve and kissed his cheek. When it was sixteen year old Kirsten's turn, she wrapped her arms around his neck and kissed him soundly on the lips.\n\n\"I've always wanted to do that!\" was all she said as she released Steve so her brother could shake his hand. \n\nKasen was a bright red as his embarrassment and anger raged over the snub he felt he was receiving. With as much dignity as he could muster, he retreated back to stand with the rest of the American contingent. \n\n\"Naomi! Come on over. The girls want to see you,\" insisted Steve as he beckoned for Naomi to join him. Soon Naomi was receiving hugs from the family as Steve spoke to them in a low voice. \n\nAfter just a few minutes, the guards indicated that the Duvals had to leave the room. It was evident that they left feeling much better about their situation than when they had entered.\n\n\"I noticed Hammer did his best to hog the photo opportunity,\" complained Kasen as the Americans returned to their meeting room. 'Maybe it'll sell some more songs or gain some viewers for his next movie. He seems to have lost sight of our goal here. We need to negotiate some sort of settlement with Jong. Photo ops won't cut it.\"\n\n\"Kasen, this will be the last trip you ever go on with me,\" replied a testy Senator Mason. \"You're an unadulterated ass. Who did those people want to see? Was it some prattling idiot, or fellow naval officers that were friends with the family? When they saw that Steve and Naomi were here, it gave them hope. They were more polite to you than you deserved. If you hadn't tried so hard to steal the spotlight, you wouldn't have come off looking like such a pompous ass.\n\n\"The rest of us knew enough to allow the Duvals time to see that we were there and to let them decide with whom they wished to speak. If you persist in defaming Steve, you're going to have a very short political life. I would think that you would've learned that much from watching the ethics hearings a few weeks ago.\"\n\n\"I just happen to think that a Congressman is more important than a Navy lieutenant, especially one that's serving as an aide to a senator,\" responded Kasen as he tried to defend his actions.\n\n\"And that's exactly where you're making your mistake,\" retorted Senator Chatham. \"Did anyone hear Jong insist that Congressman Kasen personally make the trip to negotiate for the release of the Duvals? No! He wanted Steve and that's because he's known around the globe for his deeds. You're not. In almost any circumstance you can possibly imagine, Steve is far more important that you. Accept it.\" \n\nTwo hours later, the Americans joined numerous reporters that were allowed access to the competition. They entered a large structure and were led to the firing range. Jong stood behind a large window of very thick plate glass, where the American contingent and reporters joined him. Steve was escorted through a door to the front where three Koreans stood next to small tables with handguns on them. Steve saw a fourth table with a gun, so he assumed it was where he was supposed to stand.\n\nThe rules, although different than any Steve had ever encountered before, were quite simple. Each shooter would have an opportunity to shoot ten rounds from a CZ 82 handgun at an electronic target. The location of each round would be automatically recorded. A shot totally inside the center circle was worth ten points. As you moved out from the center, each concentric ring had a lower value by one point. If a bullet hit a border between two circles, the lower value ring would be credited. The time, in seconds, from the first shot to the last would be subtracted from the score. The time was recorded automatically as well. High score won. It would require just seconds to record each shooters score. \n\nThe first person to fire would be the man on the left. Once he finished, the next man would have one minute to begin firing his weapon. Steve was third in line, which meant that two men would shoot before him and one after. Steve knew that the first two would be slow and less than perfect so he would be lulled into a false feeling of confidence. The final shooter would be their best and he would have the advantage of seeing how fast and accurate Steve was before he fired his weapon. \n\nSteve knew the old CZ 82's were quite accurate handguns at the range he would be shooting, which was thirty meters. He had fired the model more than a few times over the years and was comfortable with it. He forced himself to focus on his objective and ignore everything around him. He felt as prepared as he would ever be, considering he hadn't been allowed to take any shots with the weapon to see where it was shooting. Luckily, at that range, Steve relied on his hand-to-eye coordination and seldom used the sights, such as they were. As he looked at the weapon before him, Steve realized the front sight had been filed down, which caused him to chuckle to himself as he thought about how Jong had tried to stack the deck.\n\nEach shooter was told to inspect his gun and to signal if he was satisfied with it. When Steve nodded that he was content with his handgun, he saw Jong's surprise. He had probably expected Steve to request a different weapon.\n\nOnce the four men indicated they were ready to begin, the actual shooting was over in less than two minutes. The first man fired his weapon rather slowly, but was quite accurate. He scored 88 but had taken six seconds, so his score was 82. The next man fired quite rapidly, but scored just an 87 with a deduction of 3.5 for a final score of 83.5.\n\nSteve watched as the second man to fire placed the gun on the table, but kept his hand on it. Steve had been on so many firing ranges that he counted the shoots without conscious effort, and he was certain the man had fired only nine times. \n\nKnowing that the man following him would be the one he had to beat, Steve calmly picked up his weapon and faced the target. He raised his weapon and pulled the trigger ten times. He had done it so rapidly that it had sounded like one continuous roar. His total read 97 less 2.5 seconds for a final score of 94.5! He carefully placed his weapon on the table and as he turned to watch the next shooter, stepped closer to the man that had gone before him.\n\nAs Steve suspected, Jong had saved his best for last. The man looked very steady as he hefted his handgun and faced the target. He raised the weapon and began shooting. He was very fast. His score of 97 matched Steve's, but his time was 3 seconds, thus giving Steve the win by just half a point!\n\nA guard opened the door and a stern looking Jong stepped onto the firing range. The man that had fired just before Steve suddenly swung his gun around and fired it! Steve had been concerned about the man when he realized that he had never fired his last round. He was not surprised when the man suddenly made an attempt to shoot Jong in the head. Steve simply slapped the shooter's hand upward and the bullet lodged into the wall over Jong's left shoulder.\n\nBedlam erupted as two of Jong's body guards pushed the shooter to the floor while several others rushed onto the range with guns drawn. Steve stood motionless with his hands held high above his head. One of the other shooters in the competition suddenly made the incorrect decision to flee. He managed two steps before he was cut down in a hail of bullets.\n\nSteve and the remaining Korean shooter stood very still with their hands still over their heads as the handguns they had used were gathered and removed from the room. Then they were thoroughly patted down to determine if they had any more weapons on their person. The man that had attempted to shoot Jong was led away by several heavily armed troops as Jong strained to regain his composure.\n\nEveryone waited to learn just how he'd react to the assassination attempt. Once he had mopped his brow, and then wiped it again, he summoned his interpreter over and spoke quietly to him. The man nodded and walked over to Steve and indicated he should walk away from everyone so Jong could speak to him privately.",
        "Once they were out of hearing, Jong asked Steve to tell him what had just taken place. Steve explained how he noticed that the second man had not fired all of his rounds, thus causing Steve to be concerned. He remained close to the man and it was a simple matter to deflect his arm so the shot was high and wide. As Steve finished his explanation, Jong was smiling as he shook his hand firmly and promised the Duval family would be allowed to return with the American contingent.\n\nBecause of the attempt on his life, Jong had the city locked down while his advisors tried to determine who was behind the plot to kill him. The Americans were instructed to terminate their visit and leave as soon as possible.\n\nJust before takeoff, the Duval family was driven out to the aircraft and allowed to climb onboard. It was a very jubilant group that took off for Washington. Steve was actually embarrassed at the way the two girls fawned over him on the flight home. Senator Mason had explained Steve's role in securing their release while the two girls stared at him with big moon eyes as they listened in awe.\n\nHampton Duval was very emotional as he shook Steve's hand and clapped him on the Back. Hampton Jr. was only slightly less demonstrative as he thanked Steve profusely. The mother and sisters cried as they hugged Steve and thanked him over and over. Steve realized how stressed the family was and graciously accepted their praise. \n\nThe reporters on the flight made certain that they recorded the touching reaction to the family as they expressed their gratitude. Representative Kasen made a feeble attempt to gain some time and interest from the reporters before he gave up in frustration. \n\nOnce things had settled down, Senator Chatham indicated she wanted Steve to sit in the seat next to her. \"You came through for that fine family today, Steve. You made us all look good. I want you to know that President Hanson is quite pleased with my report. I even think our relationship with North Korea might improve. You saved Jong's bacon and he knows it. Hopefully, he'll be a little easier to get along with, but that remains to be seen. \n\n\"I've noticed you've developed a much tougher, less patient attitude toward your critics since the trouble Gwen had with the Ethics Committee. I was worried that you were going to throttle that idiot, Kasen. Is this change permanent, or just an aftereffect of the unfair accusations against Gwen last month?\"\n\n\"Both,\" replied Steve as he formulated his thoughts. \"I've come to realize that I can't keep turning the other cheek when someone comes after me. It's seen as weakness by many. I'll always try to be fair and polite to those that show me the same courtesy, but if anyone thinks they can run roughshod over me, they'll quickly find out that it won't happen. If someone attacks Gwen, I'll make certain that they regret it. \n\n\"We're public figures and subject to rumors, lies, innuendos, and insults. I understand that and accept it. I will not accept disrespect and accusations that demean or belittle what we've accomplished, or hope to accomplish. Kasen went on this trip simply for the publicity. I don't think he really cared if the Duvals were freed or not as long as he had his picture in the paper. I have nothing but contempt for people like that, and I really don't care to conceal it any longer.\"\n\nGwen received an email from Steve that evening before she went to bed indicating all had gone well and the Duval family was returning to the states. It wasn't until she watched the news the next morning that she learned just how instrumental Steve had been in the success of the mission. She chuckled to herself when she read his email over again. He wasn't one to brag, that was for sure!\n\nGwen and Charlotte had to work very hard and spend a great deal of time preparing for their finals. The school had been lenient about allowing time off for the international efforts they were involved with, but expected them to pass the same tests as everyone else. They finished their third year of med school the day before the annual Memorial Day Weekend concert in Sparta.\n\nThe day of Gwen's return to Sparta for the summer marked the day that the first issue of the company's quarterly magazine hit the newsstands. Gwen had not had time to preview it because of her studies. She had spent several hours showing her friends and relatives around her brand new four thousand square foot home that afternoon.\n\n\"I know it's a lot like Jordan's, Lisa's, and Mom's, but I wanted everyone to see it,\" admitted Gwen as she tried to contain her joy. \"Having a new home with my favorite people living so close is a dream come true. I hope to have you all over hundreds of times in the next forty years. We have five bedrooms. I don't know if we'll manage to fill them all, but once we get married, we'll start working on it.\"\n\n\"At least you're going to marry a guy that changes diapers, although he may decide that he doesn't want too many kids after he changes enough of them,\" laughed Lisa. \"When do you think you'll get married, anyway?\"\n\n\"Steve knows that I expect a ring sometime after I get my M.D., and a wedding within a year of the engagement. I could be twenty seven years old by the time we're married! I hope I'm still able to have children.\"\n\n\"As an almost doctor, I can tell you about actual reports of women almost thirty years of age giving birth, if you can believe that,\" laughed Charlotte. \"In fact, I plan on being one of them. Billy and I expect to be married within a year of getting my degree, too. We're a little concerned about how much time residency requires, but we'll make it work. I just hope I can land a position with the local hospital.\"\n\n\"If you can't, we'll shake the place up,\" assured Paula. \"They always need good doctors, especially ones that worked so hard to raise money for the new wing. Pediatricians are always in demand and you'll be a good one. I'm sure of that.\"\n\n\"I can't wait to show Steve the house tomorrow. We'll be sleeping in our own bed in our own house,\" smiled Gwen.\n\n\"And we all know why you can't wait,\" laughed Jordan. \"I'll never forget the day in Russia when we walked in on you and Steve. If I hadn't seen it, I never would've believed it. Do you have orgasms like that all of the time?\"\n\n\"Not all of the time,\" replied Gwen thoughtfully. \"Usually they're much more intense, but we were pretty tired that day, so we didn't give it our best.\"\n\n\"I call bullshit!\" responded Lisa. \"If you had them any more intense, you'd be in a coma by now. Every last one of us was stunned when your eye rolled into your head and you practically howled in ecstasy. I bet it'll be interesting living around here on warm summer nights when all the bedroom windows are open and eerie moans and erotic howlings echo across the hillsides and across the lake.\"\n\n\"Okay, that was one of our better moments, but we've had a few that surpassed it\" revealed Gwen with a smile. \"I think it's because I love that guy so much, he's so strong, and has such a big ...\"\n\n\"Okay!\" interrupted Paula. \"The guy's a regular love machine. Let's change the subject. And I'd advise you to stop telling women what a great lover Steve is. All of the girls adore him already. You're just making the temptation worse for them with that sort of talk.\"\n\n\"Speak for yourself. Or are you?\" asked Stephanie. \"It isn't just us younger women that drool when Steve's around. We all know that Steve has a thing for you, and you're pretty crazy about him. Maybe you're having trouble with the temptation, too.\"\n\n\"Regardless, we need to change the subject. Have you seen the first issues of Lady in Red, Gwen?\" asked Paula. \"It's extra thick because it gives a history of the company and the owners. We held up printing so we could include that trip to Russia and the Ukraine. Then we had to add Steve's jaunt to North Korea and how he's now friends with another world leader. I think it'll be a collector's item!\"\n\n\"We're selling them below cost because we have all of the advertising in them and we want to circulate as many as we can,\" added Stephanie. \n\n\"We had a bunch printed in Russian and Ukrainian, as well,\" commented Lisa. \"I spoke to a major clothing line in Moscow while we were there and they agreed to carry our line. They'll sell our clothes all over Russia, which can be huge for us. I did the same in Kiev and hope to have a lot of sales in the Ukraine.\"\n\n\"I'll tell Steve about that. He's coming in tomorrow and we'll be spending our first night in our new home after the concert. I can hardly wait!\" admitted Gwen cheerfully. \"He's bringing company, but the house is big enough so any noises I make will go unheard, I hope.\"\n\n\"I didn't know that Steve was bringing someone with him,\" replied Jordan. \"Please tell me that it isn't Nadiya!\"\n\n\"No, it isn't, Miss Smarty-pants! Besides, she has a boyfriend now, so I can stop worrying about her, for the most part.\"\n\n\"Who's the mystery guest?\" asked Paula.\n\n\"Cynthia and Vince will be spending Friday and Saturday with us. We're going to show them around Sparta and have them as our guests at the concert,\" responded Gwen.\n\n\"Just so I'm clear,\" managed a surprised Charlotte. \"You're talking about the next president and his wife, possibly?\" \n\n\"I'd say it's a good chance, actually,\" answered Gwen. \"He's been doing well in the polls and winning primaries. He's pretty much a cinch to get his party's nomination. It'll be a tough general election, but Steve and I think he'll get in.\"\n\n\"You're having the next president sleeping here tomorrow? On your first night in your new house?\" marveled Lisa. \"I guess we should start getting used to world leaders and famous people spending time in Asgard. We'd better get Valhalla finished this year so we'll have enough room for everyone that wants to spend some time here with Jordan, Gwen, Charlie, and Steve.\"\n\nAfter everyone left, Gwen sat at her new kitchen table looking through the magazine. The ads were sexy, but very well done. The stories were fascinating, even to Gwen who had witnessed many of the situations live. It was obvious to Gwen that Stephanie had come up with a great idea!\n\nSparta was extremely crowded the next day. When the helicopter flew over town on its way to Asgard in the early afternoon, most locals assumed that it was delivering Steve home. \n\nLess than an hour later, Jordan and Charlie, along with Steve and Gwen, and Cynthia and Vincent Rosen were seen browsing the local stores and shops. Two years prior, Sparta had started the tradition of shutting down Main Street to vehicular traffic on the day of the concert. It gave the town's merchants opportunities to use the sidewalks, and even the streets to display their wares as thousands of people visited the downtown area. \n\nSteve had advised the Rosens to not campaign while they were in town. \"The idea is for people to see you as regular guests and not politicians trying to garner votes. If you're likable, you'll gain their support. If you use this crowd to try to campaign, many people will resent it. Just be a normal couple visiting friends and having a good time. Trust me on this. You'll be glad that you did.\"\n\nThe four famous friends spent a lot of time catching up with neighbors and introducing the Rosens to them. When asked about political issues, the Rosens would simply smile and tell everyone that they were taking the weekend off from politics to enjoy the holiday in Sparta. That response always seemed to please the people within hearing.\n\n\"Look how Gwen, Jordan, Steve, and Charlie, greet people by name and ask about their families,\" pointed out Cynthia Rosen to her husband. \"We need to learn from them. We keep trying to make people interested in us, when we should be interested in them!\"\n\nGwen and Jordan were surrounded by girls of all ages asking questions and just trying to interact with the two famous women. Soon both of them were holding a little girl in each arm and laughing with the others. It was an education for the Rosens and they were serious students. No candidate for the highest office in the land ever generated as much interest and good will as Gwen and Jordan. They were more than hometown heroes. They were role models for all of the girls. And they were loved.\n\nAs they traveled up and down Main Street, Charlie and Steve were often flirted with by women of all ages, but Vince Rosen was more impressed with how the men they encountered reacted to them. They were constantly slapped on the back as they shook hands with smiling men. Every so often, some burly guy would actually hug one or both of the local heroes. \n\nThere didn't seem to be anyone that the four didn't know by name. That fact amazed Cynthia Rosen. She marveled at how the friends spoke to everyone on a first name basis. Some of the people that greeted them were in dirty work clothes, or in some cases, had ragged clothing. Gwen and Jordan never flinched when they hugged and smiled at these people and chatted with them. \n\nWith some of the more distressed looking folks, one of the four would speak to them quietly, obviously asking some questions. Then they'd produce a slip of paper and hand it to the person, or family suffering through hard times. Both Rosens wondered about the slips of paper these people were carefully tucking in wallets and purses. \n\nSeveral reporters and cameramen followed the group. Some were from news departments while others were from entertainment stations. Cynthia Rosen knew that the reports would show Gwen, Jordan, Charlie, and Steve warmly interacting with the public and greeting many of them as personal friends. Vincent Rosen could only gain from being their friend!\n\nAt five o'clock, the group had worked their way near Marsh's Landing. They thanked everyone while explaining that they had to have dinner so they'd have the energy to give Sparta the quality entertainment they had come to expect.\n\nEven while dining in a private room with family and friends, quite a few people would stop in to simply say hello and pat someone on the back and to thank them. Vincent Rosen was pleased when more than a few people took the time to thank him for coming, and for not making any speeches! \n\nAs had become the custom, all revenue from the broadcast rights and any donations made at the concert were returned to the community by Lady in Red Productions. A large share was donated to the hospital, while money was also donated to buy equipment for the police and fire departments, as well as parks and recreation. Local scouts and youth leagues were also supported. A substantial sum was set aside for local families having trouble with rent or heating bills. \n\nThe Rosens had asked about the slips of paper Gwen, Jordan, Steve, and Charlie had given to obviously needy people. It was explained that they were vouchers for food and clothing from local businesses. The people were required to interview at Lady in Red headquarters in Sparta for possible employment as the only condition attached to them. \n\nWhen it came time for the concert, the entire downtown was lit brightly as thousands of people gathered to watch the show. Those not able to gain access to the performing arts building itself, were treated to numerous jumbotrons placed around the building, with several also placed on Main Street. It was a huge block party that Sparta looked forward to every year. Its financial importance to the area had come to rival the Christmas Season for merchants and business owners.\n\nWith the new intensity they had found since Gwen's performance after the ethics hearing, the concert was a huge success. Gwen, Jordan, Steve, and Charlie each did two numbers for encores as their hometown cheered and yelled approval on every number. Almost five hours after they began, the stage finally went dark. \n\n\"It's like the middle of the day here!\" marveled Jordan as they traveled to Marsh's for their traditional late meal. \"All of the stores are still open and people are shopping and partying. It looks like Sparta's become a town that never sleeps.\"\n\n\"Once the weekend is over, it'll be back to normal,\" predicted Kate. \"Gwen, did I see you cry tonight when Steve was singing?\"\n\n\"I started remembering how I felt last year when Steve was trapped in Colombia and I was afraid that he'd die. Then he somehow came back to Sparta and I knew that he was on that chopper,\" recalled Gwen. \"I was very emotional then, and I still lose it a little when I think about those terrible few days.\n\n\"Things are much better now, so let's enjoy our good fortune and be thankful,\" suggested Steve as he hugged Gwen. \"It all worked out and we're together now. That's all that matters.\"\n\nThe next afternoon saw all of Gwen's and Steve's family and friends at a pool party at their new home. The pool was Olympic size and heated to 85 degrees. The affair was catered and everyone had a great time.\n\nSteve was often seen holding Theresa. He even took her into the pool and played with her in the water. A little later he was seen showing Stephanie's little brother how to do various swim strokes. Billy was seven and able to swim, but Steve felt he should be more familiar with all aspects of swimming and not just be able to tread water and move slowly from one point to another. Next he had Richard Drake's daughter in the pool and was showing her how to float.\n\n\"Look at your boyfriend,\" pointed out Diane to Gwen. \"He's so good with kids. Billy idolizes him, while Theresa and Ingrid love him to death. He's going to make a wonderful father. I remember the first time I saw you two together in swim suits. I told Paula and Lisa that you'd have beautiful children.\"\n\n\"I really hope so,\" admitted Gwen. \"Now that Jordan's pregnant and Lisa has Theresa and you have Billy, I feel incomplete or something. I want a family and it's getting more difficult to wait. I know Steve will be the best father ever.\"\n\nVince and Cynthia Rosen had a great time at the party. Billy actually tossed Cynthia into the pool half way through the afternoon. Everyone watched to see how she would react. She surfaced, gasped a few times, and begged Billy to help her out of the pool as she held her hand out to him. To his surprise, and the delight of everyone else, she managed to pull him in when he took her hand. Billy then escorted her out of the pool and gave her a towel as a peace offering.\n\n\"Your wife just passed the test,\" revealed Steve to Vincent Rosen as they chuckled at the little by-play. \"She can take a joke, and dish them out. Our friends and family can make a difference in your campaign if they believe you're the right man. I think they've just become believers.\"\n\nThe Rosens spent Saturday night and left Sparta very early Sunday morning since Vincent was once again scheduled for a morning news program at eleven AM. The family and friends spent another afternoon by the pool at Gwen's. Paula mentioned to Steve how much she had enjoyed the Rosens.\n\n\"I liked them both. I worried that Vincent might be a bit of a problem after you and he had words years ago,\" confessed Paula. \"But he seems to have adjusted his attitude toward you and Gwen. I imagine that the things you told him at the time went a long way toward that adjustment. As wonderful as you are, being on your bad side is a huge mistake. I hope I never find myself there.\"\n\n\"There's no chance of that,\" assured Steve. \"You're going to be the best mother-in-law a guy could ever have.\"\n\n\"That's because she's the best looking one a guy could ever have,\" proclaimed Billy as he walked past them. \"Ted's a lucky guy.\"\n\n\"That I am, Billy,\" agreed Ted. \"She's given me three beautiful daughters, but she looks like she could be their sister rather than their mother.\"\n\n\"Dad, have you been taking lessons from Steve?\" asked Lisa. \"That was a really nice thing to say. No wonder she loves you so much.\"\n\n\"It's not what he says so much as the things he does,\" responded Paula. \"He saved your life at Gwen's graduation and went with Gwen to Iraq to find Steve. It's the way he accepts responsibilities and cares for me and the rest of his family that really makes me love him so much.\" ",
        "Steve managed to get Will alone for a few minutes. \"Will, we're considering making Diane's role bigger and actually having her do a love scene with me. I wanted to know how you felt about it before we go any further. It can be pretty bland, or it could show a fair amount of skin. Either way, I'd be kissing her, holding her, and maybe feeling her up. It's a dirty damn job, but I'm a professional. I never want to see you and Diane have any marital problems, especially that I help create, so what do you think?\"\n\n\"Honestly? Diane is a bit of an exhibitionist. I think all of the women in the family have some of that going on. I'll buy a dozen copies of the movie when it comes out. She may act reluctant, but I think she'd love to be like Gwen and show off her boobs. The idea of having a poster of her hanging in garages and workshops across the country turns us both on. Don't force her into anything, but take her as far as she dares go. She feels like life has passed her by at times; that she might have been able to be a model or a movie star, but she chose me and life in Sparta. She never complains and I know she loves me and the kids, but this would really help her with her bucket list.\"\n\n\"What are you discussing with my husband this time?\" demanded Diane as she sauntered up to Steve and Will.\n\n\"To be quite honest, we were talking about how much I'm going to enjoy our love scenes and fondling those big breasts of yours,\" replied Steve as he made a production of leering at the large amount of cleavage on display from the low top swim suit Diane had on. \"The world needs to know just how nice those babies are. I told Will that I'm going to have my way with them in our movie, so he'd better be mentally prepared.\"\n\nDiane blushed at Steve's words, but made no effort to cover her ample cleavage as he stared. \"Will, this young man seems to think that we'll allow him to fondle the twins. What should I do?\"\n\n\"Whatever Steve and the director want you to do,\" answered Will as he kissed Diane's cheek. \"The other guys in town will be so jealous of me when the movie comes out, they won't be able to stand it. I can't wait for my golf buddies to see how beautiful you are.\" \n\nProduction began that week. Steve had time off from his Washington duties before the London concert, and Gwen was home for the summer. Jordan and Charlie began filming their movie at the same time, but with a different director. Once again, Lady in Red Productions was filming both movies in Sparta, when possible. That was the advantage of making plot driven movies over those that required special effects and spectacular scenery. \n\nThe new script for Gwen and Steve's movie had been passed out at a preproduction meeting and everyone immediately noticed Diane's increased role, as well as Stephanie's. \"I was going to be a fill-in for the dance contest. Now I'm supposed to be one of Steve's conquests? And I find out he's been doing my mom? What kind of a guy is he supposed to be? That doesn't sound like a hero.\"\n\n\"Everyone felt the script lacked passion and conflict,\" replied Gwen. \"Diane's character has been drinking too much because her husband, your dad, ran off with a younger woman. She's an easy target for Steve's character's charm. He doesn't know that she's your mother when he seduces you. When he and I show up at your mom's for lessons and you're there, it all comes out. It'll make for some tense moments, especially between all of us women.\"\n\n\"So how intense is my seduction scene, and what will Mom be showing?\" asked Stephanie. \n\n\"Your mother is going to be topless with me,\" replied Steve with a grin. \"You can stay covered up if you like. We can just make out a little and fade out. The next scene would show one of us leaving in the morning.\"\n\n\"That isn't going to happen!\" proclaimed Stephanie. \"I want to show as much as Mom, or more. I may never get another love scene with you and I want something I can show my grandkids.\"\n\n\"Do you think they'll want to see Grandma and Great-Grandma half naked?\" asked Diane. \"You'll have plenty of opportunities to be in scenes with Steve, so don't rush into anything that you'll regret later.\"\n\n\"Mom, has Jordan, Gwen, Lisa, or Naomi ever regretted their nude scenes with Steve? Hardly! Naomi and Jordan have video clips on their phones that they pull up to show the other girls when we're out someplace.\"\n\n\"Hey! In my defense, I haven't done that since I married Charlie,\" stated Jordan defensively. \"I do keep them in a file, but I hardly ever show them to anyone. I show the ones of Charlie and me instead.\" \n\n\"Jared has hinted that he'd prefer I stop showing those clips all of the time,\" admitted Naomi with a guilty grin. \"But, I can't seem to stop Mom from showing them to everyone she sees.\"\n\n\"I see that Paula is going to play Gwen's mother,\" continued Stephanie. \"That's brilliant casting. I'm playing Mom's daughter and Gwen will be Paula's daughter. How much do we pay the guys that write these scripts?\"\n\n\"Actually, that would be Ashley and me,\" admitted Kate. \"We wrote this last year and have been refining it since. I know it isn't absolutely brilliant, but with the new plot twists and how well everyone can act and dance, it'll be a big hit, I'm sure.\n\n\"Besides, you should be thanking me for giving you a love scene with Steve. If you don't like the part, or don't want to act with Steve, or your mother, I'll just step in and do the role,\" added Kate.\n\n\"Don't worry about me,\" replied Stephanie immediately. \"Maybe my boobs aren't as big as some, but they're quality and the audience will love them. I'll be signing posters by this time next year!\"\n\n\"We're talking about acting, not about who has the biggest boobs, or who can show them the most,\" chided Paula. \"I personally don't think that Diane will be showing too much at her age and while Stephanie talks a good game, she'll be a lot more nervous when the time comes. What we need to is learn our lines and get this made as quickly and as well as we can.\"\n\n\"You have to keep you clothes on for the whole movie, don't you, Paula?\" asked Diane knowingly.\n\n\"Yes, damn it!\" responded Paula immediately as the others broke into laughter. \n\nThe morning of Steve's love scene with Diane was strange for him. Will insisted on attending, as did Gwen, Paula, and Stephanie.\n\n\"Are you going to be able to do these boobs justice?\" whispered Diane as she hefted her boobs inside her robe. \"Should I send Will away? Stephanie makes me nervous. I've never even done things like this with Will in front of her. I hope she doesn't lose respect for me.\"\n\n\"I'll be okay once we start,\" promised Steve. \"I usually block out everything but the person in the scene with me, so I'll concentrate on just you three.\"\n\n\"Three?\" repeated a confused Diane. \"Oh, you mean me and the twins? Be sure you give them plenty of attention. I may never get to do this again.\"\n\nOnce the actual filming began, Diane and Steve managed to slowly lose their concern about being watched by the others. Steve worked his seduction slowly and Diane responded by following his lead. Before the scene was over, she was topless in his arms and kissing him as passionately as she possibly could.\n\nSteve was amazed at how responsive and sexual Diane was. He rolled her nipples in his fingers and even suckled her for a short time before he moved on top of her. Their lower bodies were cover by a thin sheet, but it appeared that Steve had mounted Diane and was making passionate love to her. Steve was careful to not let his very hard cock even get close to Diane's panty covered pussy, but he could feel her heat. After they reached their climaxes, Steve slowly slid off Diane but managed to fill his hand with her left breast as they cuddled before the director ended the scene.\n\nA wardrobe girl brought robes for the two actors. Diane stood and quickly donned hers as she looked for Will. He was at her side seconds later.\n\n\"Are we okay?\" asked a worried Diane. \"That was so intense; I got a little carried away. Are you angry with me?\"\n\n\"Let's get back to the dressing room and discuss it,\" insisted Will as he calmly led Diane away.\n\n\"Steve, you had Mom going crazy. That was one of the sexiest things I've ever seen, and that was my mother! Dad was fidgeting and muttering under his breath, but he didn't seem angry. I can't wait for my scene!\"\n\nSteve and Stephanie filmed their love scene the following evening. Even with her parents, Paula, Kate, and Gwen watching, Stephanie surprised Steve with her willingness to get naked with him. She only had a few lines, but she managed to get them wrong so they had to reshoot the scene several times.\n\n\"Stephanie, I know you're doing that on purpose. You're costing us time and money. We'll give you more chance to get it right. If you don't, then I'll be naked with Steve and you'll be watching,\" threatened Kate.\n\nSomehow Stephanie managed to do her part perfectly in the next take. Kate nodded knowingly as Stephanie pulled a robe over her shoulders while Steve remained on the bed with the sheet over his lower body.\n\n\"Come on, Steve. Get up and put on the robe,\" urged Paula. \"You're not fooling anyone. We can see that big tent in the sheets. It looks like Stephanie wound you up as much as you did her.\"\n\n\"I need to get him back to the dressing room,\" suggested Gwen. \"If he's anything like he was after the scene with Diane, the rest of you may not see us at dinner. I have to wonder about having those two in any more movies with Steve. I may not be able to survive it!\"\n\nWhen they weren't filming, the Gwen, Jordan, Steve, and Charlie discussed their ideas about the music they would play at the London concert, as well as on the aircraft carriers. \n\n\"I thing we can do a lot of the harder rock and roll stuff in London, but I really believe those sailors will enjoy love songs and ballads about home, wives, and girlfriends, except for the female sailors, of course. They'll want the same about their families and lovers.\"\n\n\"I think you're right, Charlie,\" agreed Jordan. \"We've done a few shows with a heavy military presence in the audience and they always seem to like the love songs the best.\"\n\n\"I'll trust you guys on this one,\" responded Gwen. \"If that's what they like, let's be sure we give it to them in spades. They sure deserve it. What do you think, Steve?\"\n\n\"I have to agree with Charlie and Jordan. Whenever I was in some hell hole, far away from home, I couldn't think of much other than holding my girl in my arms again.\"\n\n\"That was the right answer!\" laughed Gwen before planting a long kiss on Steve's lips.\n\n\"The July 4th concerts may be the last I do before my swelling stomach becomes very obvious. It'll probably be a little round by then, but not too bad,\" allowed Jordan.\n\n\"On the plus side, your already considerable chest will be even larger and more eager to spill out of your top,\" predicted Steve. \"I hope those poor sailors can handle that sight.\"\n\n\"Oh, I think they'll do fine,\" laughed Jordan. \"They'd better because Gwen and I will be showing the girls off quite a bit. Those poor, depressed service men need something to pick up their spirits and not to brag, but Gwen and I have just what it takes.\" \n\n\"I've never heard of a riot on an aircraft carrier before, but I'm beginning to worry. You realize there'll probably be an admiral or two watching the show?\" asked Steve.\n\n\"And they'll probably be men, so what's your point?\" retorted Gwen.\n\n\"There are more than a few female admirals in our Navy,\" stated Steve. \"So don't rule that possibility out.\"\n\n\"And female admirals will know even better than male admirals that morale is extremely important. Gwen and I will be improving it to beat the band!\" promised Jordan. \n\nPlans were made for the concert in London as well as the two aboard the big Navy ships. Charlie was the one they turned to for selecting and arranging the music and he always came through. They felt that they were well prepared when they arrived in England on Thursday, June 26th. \n\nOnce again, friends and family traveled with them. They found the British to be very friendly and warm, with their wry sense of humor on display at the drop of a hat, or derby, in England. On Friday morning, the entire group was having breakfast in the hotel when Stephanie dropped a bombshell. \n\n\"James told me last night that the Prince and Princess want to meet you four this afternoon, if you're available. I told him that I'd have to check and see.\"\n\n\"Are you crazy?\" asked Kate. \"When the Royals want to see someone, that someone makes sure they're available!\"\n\n\"Kate's right,\" added Paula. \"You need to make sure that James doesn't tell them that Gwen, Jordan, Charlie, and Steve are less than eager to meet with them. This is a huge honor.\"\n\n\"So, you're saying that it's okay that I set it up for Kensington Palace at three PM today, local time?\" asked a smiling Stephanie. \"I knew you'd never pass this opportunity up. Be sure to get lots of pictures for our magazine.\" \n\nPaparazzi were a constant part of their lives, but the Americans were stunned when they saw the number of photographers and reporters at Kensington Palace. Once they were introduced to the Prince and Princess, all six of them posed for the photographers. Then the three ladies were asked to stand together while the photographers snapped away.\n\nCharlie and Steve had to laugh when the Prince made a comment under his breath about who the press really preferred, but then admitted that he didn't blame them. The three women smiled and turned left and right for the photographers. Steve was struck by the beauty and grace of the three women as they smiled at the cameras. Steve had been informed that the prince would be wearing his uniform, so Steve wore his dress uniform and looked really sharp. \n\nThe Royal Couple turned out to be very friendly and extremely interested in the charitable efforts of Lady in Red Productions. The three couples compared experiences and ideas for expanding their efforts. The royals spoke at length about vaccinations for children, especially in poor and developing nations. After being together for a few minutes, they were chatting like old friends.\n\nAt the end of the scheduled hour visit, they were asked if they could stay a bit longer. Gwen looked at Jordan and they quickly agreed. It was almost a full hour later when Jordan, Gwen, Steve, and Charlie were photographed leaving the palace.\n\n\"I think they liked us,\" risked Jordan as the foursome rode back to their hotel. \"They were both very down to earth. They acted perfectly normal, especially for very wealthy royalty living in a castle.\"\n\n\"I can't believe they wanted to exchange cell numbers,\" marveled Gwen. \"Now I can speed dial the future King of England if I want! It made me wonder about Steve's phone. Do you have President Hanson's number on your phone? President Novokov's? President Marchant's?\"\n\nSteve simply studied the scenery as their limo drove through the streets of London. Gwen waited for Steve to respond.\n\n\"It must take some time to get used to driving on the left,\" observed Steve. \"Driving here would make me nervous.\"\n\n\"Are you telling us that you have the phone numbers of those three presidents, as well as the future King of England on your phone?\" demanded Gwen.\n\n\"No, I'm not,\" replied Steve with an easy grin. \"I was just seeing how you'd react. I do have Nadiya's number if I ever need that.\"\n\n\"I have her number, too!\" insisted Gwen. \"She's a beautiful, intelligent woman that likes to lead people into thinking that she's a simple blonde yokel. You may as well delete her number now because I think she's quite serious about her German beau.\" \n\n\"Yeah, well, I think I'll wait to see how that turns out,\" replied Steve as he winked to Charlie and Jordan.\n\n\"I know what you're trying to do, and it won't work,\" laughed Gwen. \"I know you too well to start getting jealous again. Those days are gone, for the most part, anyway. I just spent two hours with the future King and Queen of England, so you're feeble attempts at teasing me won't work.\"\n\nThat evening, Gwen and Jordan entertained their friends and family at dinner by recounting their experiences with the Royal Couple. Beatrice Patterson was especially impressed, yet saddened at the same time. \n\n\"The irony of the situation is pretty stark for me. I forbade my daughter from seeing a young sailor because I didn't feel he was good enough for her. She married him against my wishes. That union produced a son that is far more accomplished, respected, and capable than any man I could have ever selected for my daughter. I wish I could apologize to her!\"\n\n\"Grandmother Patterson, please don't feel that anyone holds that against you. If your daughter was anything like her son, she's smiling down on you right now. She's with Steve's Dad and very pleased to see her son do so well,\" insisted Gwen. \"This is a happy time, so please try to enjoy it and just be proud of your grandson.\"\n\n\"Changing the subject,\" broke in Charlie, hoping to lighten the mood. \"I've hired Jodie Lane to play sax with the band. You guys placed me in charge of the music and the band years ago, so when I ran into her earlier this morning, I hired her. She said that she was here in the hopes of hooking up with one of the bands that will be performing tomorrow. \n\n\"I asked her if she'd consider playing with us and she jumped at the chance. She told me that we were her first choice,\" added Charlie. \"She couldn't say enough nice things about Gwen and Jordan. I don't know what she thinks about Steve.\"\n\n\"I think we can probably guess,\" laughed Jordan. \"Did she mention you at all, Charlie? You're a pretty hot commodity now. You're very wealthy, very talented, very good looking...\"\n\n\"Very married, and soon to be a father,\" interjected Charlie. \"There's no way I'm going to look at another woman when I have you.\"\n\n\"Darn, I was hoping we'd get in the hot tub later and have some wine and chat,\" allowed Gwen. \"But why bother if you won't even look?\"\n\n\"Let me rephrase that. I may look at other women, but there's no way I'd do anything to lose you, Jordan,\" amended Charlie. \"I will show my appreciation of the feminine charms of Gwen, Lisa, Kate, Naomi, Stephanie,...\"\n\n\"Okay!\" chuckled Jordan. \"I understand, but be prepared for my boobs to get bigger now that I'm with child. They may even catch Billy's eye.\"\n\n\"More likely, they'll poke out one of my eyes if they get any bigger,\" observed Billy without cracking a smile. \"But it's a risk I'm willing to take!\" \n\n\"Why does the conversation always come around to breasts with you men?\" asked Paula. \"It seems like you all have a one track mind.\"\n\n\"Where would all of you beautiful women be if we men weren't attracted to your bosoms?\" asked Billy. \"Do you think you'd be able to keep us men around to play Scrabble or something? Not likely. You ladies need to embrace the fact that we love breasts and you've all been blessed with the quality and quantity that we cleavage connoisseurs prefer.\"\n\n\"Did I just hear you say that?\" demanded Steve. \"Do you spend a lot of time thinking these things up? 'Cleavage connoisseurs'? Where did that come from?\" \n\n\"Blame that one on your future mother-in-law,\" replied Billy as he nodded toward Paula and her low cut sweater. \"I haven't been able to look at anything else all evening. It was pretty much all that I could think of that wouldn't get me slapped.\" \n\n\"That phrase was inspired by my mother's bosom?\" repeated Lisa. \"How cool is that? I just hope my breasts have sonnets written in their honor someday.\" \n\n\"There was a young lady from Sparta,\" began Billy. \"Whose bosom was so nice it could start a, but her husband used both mitts to cover her...\"\n\n\"Do NOT go any further with that limerick!\" warned Charlotte. \"Has being in England made you into some sort of wordsmith all of a sudden, or a poet, or a bard, so to speak?\" ",
        "\"I've been inspired by bountiful display of female pulchritude, although that word doesn't really flow very well in poetry,\" admitted Billy with a grin. \"There was a group that displayed bountiful pulchritude, that often received stares that were extremely lewd, with Gwen, Jordan, Lisa, Naomi, Ashley, Charlotte, Paula, Diane, and Kate, all the men that gazed upon them wanted to mate, so their studly husbands and boyfriends were forced to intrude!\"\n\n\"No more!\" insisted Charlotte once again. \"Our Spartan Shakespeare does seem to have a one track mind. Let's change the subject.\"\n\n\"I feel I should apologize for showing such tempting cleavage to these hormonal young men,\" offered Paula with a straight face as she made a show of adjusting her breasts. \"These girls have been the inspiration for many a sonnet, a few odes, and at least one epic poem.\"\n\n\"That isn't exactly changing the subject, Mom,\" observed Lisa. \"We need to talk about shopping, or climate change, or maybe quantum physics. That should lower the testosterone levels around here.\"\n\nAs they were finishing dinner, Steve noticed James Hawthorne seemed to suddenly appear next to Stephanie. Steve nudged Gwen and nodded in Stephanie's direction. \n\n\"He does seem to be quite attentive, doesn't he?\" observed Gwen. \"He appears to be a good guy to me, but what do you think? Should we be worried?\"\n\n\"I've asked around a little since we've been here. His family is highly respected and fairly well off financially, but I knew that. I wanted to know about his character. He's had some lady friends, but has never been engaged or anything. He did well in school and he's expected to win a seat in Parliament next year,\" concluded Steve.\n\n\"I should have known that you'd make sure that any man Stephanie likes is acceptable and safe. I know that you're very fond of her, as well as protective.\"\n\n\"You know I've never...\"\n\n\"Of course! I wasn't suggesting anything or complaining,\" assured Gwen. \"I love how you look out for my family and friends. I love you for doing it. You've become the go-to guy in the family. Dad is great and Chip and Jason are super guys, but you've become the center of our family. We revolve around you and it makes me so proud.\" \n\n\"I've arrived at the same conclusion, except that we all center on you,\" replied Steve thoughtfully. \"The other women look to you for leadership, even Diane and Paula. The men adore you, and I'm putty in your hands.\"\n\nBefore the discussion made it any further, Stephanie came stomping up to Steve and began ripping into him.\n\n\"You had James investigated? Who told you that you could meddle in my private life?\" demanded an obviously angry Stephanie. \"I'll be the one to decide who I spend time with!\"\n\nBoth Diane and Paula hurried toward Stephanie but stopped short when Gwen motioned to them. She was confident that Steve would be able to patch things up with Stephanie.\n\n\"I looked into his background and character, if that's what you mean,\" replied Steve evenly. \"Do you think I'd bother to do that if I didn't care for you? Do you think I'd call in favors, and spend time and money on just anyone? Do you think so little of me that you'd believe I'd ever do anything to hurt you? Do you want me out of your life? Is that it?\"\n\n\"Maybe I do if you're going to try to run my life!\" retorted Stephanie quickly. \"You think everything's about you. You decide who's in your group, who works for you, who's good enough for each of us girls, and who isn't. Everyone has to meet your approval or they're out on their ass.\"\n\n\"Maybe I am a bit overbearing, and I might be a little overprotective, but all of our friends and relatives mean a great deal to me, especially you. I'd rather have you hate me for the rest of my life than make another mistake like I made with Ashley and that guy that claimed to be Neary. She was almost killed! And it was my fault! I don't want to have to go through that again!\" \n\n\"You think that situation with Ashley was your fault? You saved her life, with Pete's help. She never blamed you. Just ask her. Is that why you're being such a jerk?\"\n\n\"I'm being a jerk because when I wasn't careful, I came close to getting Ashley killed,\" admitted Steve. \"If she had been, I don't know where I'd be right now. If something happened to you, Steph, I don't know what I'd do. I feel bad that you're upset, but I won't apologize for doing my best to make sure you're safe.\"\n\n\"Maybe I was a little hasty,\" sobbed Stephanie. \"I thought you were trying to find out something about James so that I wouldn't like him; that you wanted to turn me against him. I should have known better.\"\n\n\"Steph, I only want for you to be safe and happy. I didn't want to make the same mistake again. If it helps any, I had Richard Drake investigated even more thoroughly,\" revealed Steve. \"I let Ashley down once and I swore I'd never do that again, with any of those that I loved.\"\n\n\"Will you forgive me?\" asked Stephanie contritely. \"I was wrong to be upset with you. If there's one man in the world besides Dad that I can depend on, it's you. I know that. Did you say that you love me?\"\n\n\"I did,\" grinned Steve. \"Maybe it's the London fog getting to my head. Let's forget this ever happened. Bring James over and I'll apologize to him in front of you.\"\n\n\"No need for that!\" interjected the Brit as he stepped closer to Steve and Stephanie. \"I feel that I must confess that my family did a tad bit of snooping into Stephanie's background, as well. I thought our sources were very discreet, but you found out about it, didn't you?\" \n\n\"I was told that someone had been checking on Stephanie and when I heard they were British, I knew it was you, or your family. I knew why, and I felt justified in returning the favor. If it's any consolation, Steph, James has passed with flying colors. He's one of the good guys.\"\n\n\"You men make me so mad!\" snarled Stephanie as she wrapped her arms around Steve's neck and kissed him with passion. \"I'll never complain about anything you do again.\"\n\nWhen Stephanie turned to look at James, she became aware that everyone had witnessed her meltdown. Her mother stood next to Gwen with tears on her cheeks while Gwen wore a broad smile.\n\n\"Gwen! I didn't mean to accuse Steve, I mean he did it, but he was just, I'm not upset at him anymore. Are you angry with me?\"\n\n\"We're family. We watch out for our own and Steve happens to be the biggest believer of that maxim,\" replied Gwen as she hugged Stephanie. \"You forgot for a little bit, but you know the guy would do anything in his power to save you pain. We accept your apology and promise that we'll continue to love and support you any way that we can.\" \n\nWhile Gwen was speaking to Stephanie, Ashley moved up to Steve, threw her arms around his neck, and pulled him down for a kiss. \"Thank you,\" was all she said.\n\nOnce things calmed down, James explained that his organization, WHO, had managed to sell rights to broadcast the telethon to an American network. Rather than carry the full twelve hours, they paid handsomely for the broadcast rights to the four hours Gwen, Jordan, Steve, and Charlie would be playing. \n\nContributions had increased and the telethon itself was expected to be a great success. James stated that WHO was delighted with the response, as well as the anticipated interest and contributions, and had asked James to thank everyone for them.\n\nThe actual telethon took place in Wembley Stadium. Temporary seating had been added on the playing field. When the lights when up for their portion of the concert, Jordan, Gwen, Steve, and Charlie were met with a hundred thousand fans roaring their approval. They played just over four hours and it was later reported that over half the pledges that for the entire telethon were received while the Americans were on stage.\n\nThe group spent a few days sight-seeing through England and Ireland before the day came to fly to the Mideast to perform on the aircraft carriers. Before they departed Gwen, Jordan, Steve, and Charlie crossed Abbey Road while their friends snapped photos. They did it several times until Billy felt that they had recreated the famous Beatle Album cover as well as they could.\n\n\"I'll send this back to Dad and he'll have it on our wall before we get back home. This is going to be one of my favorites!\"\n\nGwen and the other women were surprised by one of the things Steve told them before they left England. \"When we're on the ships, we'll travel in different groups. We guys will be together and you ladies will be together, at least much of the time. What I want to avoid is for any of you to be hanging with your boyfriends or husbands, and that includes Diane and Paula.\"\n\n\"You don't want us to stay close to our men?\" asked a surprised Kate. \"We'll be surrounded by horny sailors. Will we be safe?\"\n\n\"You'll be on a US Naval vessel and you'll be very safe,\" promised Steve. \"We're trying to lift morale, and seeing beautiful women with husbands and boyfriends close to them won't help much. You ladies have to be outgoing and interested in whatever parts of the ship the men show you. Wear sexy outfits and flirt with the sailors. They'll never forget you, but they'll never hurt you. Just be yourselves and smile at everything. You represent what they're fighting for. They have wives, sisters, girlfriends, mothers, and daughters back home. For the short time you're on the ship, you'll represent their women, especially wives and girlfriends. They'll be over the moon if you smile and enjoy interacting with them.\"\n\n\"I can see what you mean, but what will you guys be doing?\" asked Lisa. \"Will you be bored or jealous?\"\n\n\"There'll be hundreds of female sailors and we'll try to raise their spirits. When we're with men, we'll make crude jokes and swear a lot. They'll love us, too, but in a different way and for different reasons,\" predicted Steve.\n\nEarly on July 3rd, several military transport helicopters landed on the USS Theodore Roosevelt. All of the crew members that were allowed gathered on deck to see the famous guests get off the helicopters. \n\nLady in Red Productions was filming as much of the action on both aircraft carriers as they could. A network had committed to buying a four hour special to be broadcast the evening of July 4th. One of the goals was to show as many of the crew members as possible. The reason was so that their families and friends would want to tune in to see them on TV as they met the famous visitors. \n\nWhen the doors to the first chopper opened and Jordan jumped out, quickly followed by Gwen, cheers rang across the deck. The fact that both women wore short skirts and low tops did not go unnoticed. As the rest of the passengers climbed out, it became apparent that the helicopter brought nothing but beautiful women! They all smiled and waved as cheers and whistles echoed around the giant ship.\n\nThe Captain greeted the ladies. When he offered to shake hands with Jordan and Gwen, they simple hugged him and smiled. The Rear Admiral was also there to greet them and a roar went up again when Jordan and Gwen gave him a warm hug as well. Right from the start, the crew knew that their guests were not going to be difficult or snobbish. Every man in attendance had the dream of meeting one or more of the women as they toured the ship.\n\nWhen Steve and Charlie dropped out of the second chopper, there was some polite clapping and yells of approval, but nothing like the ladies had received. When Chip hit the deck, he turned and spoke to Jason.\n\n\"It's good to know that these guys haven't been out to sea for so long they forgot the difference between men and women! I would have wondered if they had greeted us like they did our ladies. This is going to be fun!\" \n\nThe morning and early afternoon was a whirlwind of activity, especially for the ladies. They broke into smaller groups and were escorted on tours around the ship. Gwen and Jordan were extra complimentary and gracious as they were surrounded by sailors everywhere they went. All of the women drew crowds and were asked for photo opportunities and autographs. Cheryl was traveling with Gwen and Jordan. She constantly took videos and still of as much as she could.\n\n\"These guys may have been on this ship too long,\" commented Cheryl after touring the bridge. \"They're asking me for my email and phone number! That's pretty desperate.\" \n\n\"Look at those long legs and that cleavage,\" chuckled Jordan. \"These guys may have been on a ship for months, but they still know what they like, and you've got it all. Maybe you haven't realized how attractive you are, but these sailors are great judges of beauty and you're very popular. That means you're a darn good looking girl. Just enjoy it, but don't break any hearts.\"\n\nIt was while they were touring the jet aircraft on the deck that Gwen noticed a sailor looking at her quite intently. She studied the man's face for several seconds and suddenly her face lit up.\n\n\"Arnold? Arnold Gavin?\" queried Gwen as the man broke into a big grin. \"I haven't seen you since we graduated. Jordan, you remember Arnold Gavin, don't you?\"\n\n\"Of course,\" answered Jordan as she moved to the man and hugged him warmly. \"You helped me with American History. I don't think I would have passed that course if you hadn't been so kind!\"\n\nOnce Jordan released the man, Gwen moved in and hugged him even tighter. Arnold Gavin's face was red but he was grinning from ear to ear. His shipmates watched in awe as the two most beautiful women in the world hugged him! Arnold knew that his status on the ship was going to shoot way up. He chatted briefly with both women, who insisted on having several pictures taken with him. In one he had an arm around each of them as they kissed his cheek while his buddies groaned and whistled. \n\nLady in Red had flown two jumbotrons in earlier in the week and had them set up on the deck. A makeshift stage had been erected and Jordan and Gwen spent some time looking it over. The two of them conferred for a few minutes and then asked the Lieutenant with them if they could speak to the Captain about the show.\n\nAfter explaining what they had in mind, the Captain had a brief discussion with the Rear Admiral and then agreed to their request.\n\nDuring the day, Steve and Charlie found themselves very popular with the females on the ship. They answered all sorts of questions, except the very personal ones, and posed for hundreds of photos. They always managed to leave the women with big smiles on their faces.\n\n\"Would you dance with me tonight?\" asked one very outgoing woman. \"I know you don't mind dancing with back women. I saw videos of you with Naomi Wilson and you sure didn't mind holding her in your arms.\"\n\n\"I'll see what I can work out, if you'll promise me we won't be concerned about color,\" replied Steve. \"I resent that you felt that you had to suggest that I would be racist if I refused to dance with you. You're an attractive woman, and I don't mean that you're attractive for a black woman! I think you'll do much better in the Navy if you get over thinking that a person's race, religion, or ethnicity determines their success.\"\n\nThe woman was surprised at Steve's response, but refused to give up. \"Okay, maybe that was out of line and I apologize. But will you dance with this lonely sailor tonight?\"\n\n\"We hadn't actually planned on interacting with the audience, but now that you bring it up, it may be a great idea,\" replied Steve. \"Charlie, will our microphones work if we're very far from the stage?\"\n\n\"Let's go test them,\" responded Charlie. \"That would be a great idea to interact with some of the audience tonight. Let's run it by the girls.\"\n\nAs luck would have it, July 4th was going to have a full moon, but it was going to be almost full on the third, and it would be coming up shortly before the concert began. Charlie once again worked it into the production.\n\nWhen it came time for the concert, Gwen and Jordan made their way across the deck, rather than appearing on the stage. They stood surrounded by sailors, male and female, as they sang the National Anthem with obvious emotion. When they finished a huge roar rolled across the deck as the two women worked their way to the stage. They entered a small room set up near the stage for wardrobe changes.\n\nThe girls came out in robes and joined Steve and Charlie, who were sitting on the back of the stage in robes of their own. Five sailors walked up on stage carrying what appeared to be a folded banner. The sailors walked to the back of the stage and unfurled the banner which simply stated 'God Bless America!'.\n\nBright lights suddenly turned on and the girls began the same discussion they had at the beginning of the Oscar telecast. Many of the sailors had either watched the show live, and most others had pulled the opening up on Youtube after hearing about it. There was excited anticipation as the scene began.\n\nSoon Charlie and Steve were at the front of the stage performing 'Sharp Dressed Man' on their guitars while wearing just their boxers. Gwen and Jordan danced up to the front and sang the first stanza. The crowd was swaying to the beat as all eyes were glued to the stage or to the jumbtrons that had been set up. Gwen and Jordan danced to the back of the stage by the banner. They picked up underwear and slid them on under their robes. Then with their backs to the audience that could see them, they stood by the banner and dropped their robes. As they began to reach for their tops, the sailors holding the banner suddenly lowered it! \n\nGwen and Jordan managed to cover their breasts with their hands and arms while bending down in an attempt to maintain their modesty. The audience roared its approval as two of the most beautiful women in the world stood before them topless. Even though they were unable to see much of the breasts of the two women, the men in the audience clapped, whistled and yelled their appreciation. After about twenty seconds, the men charged with holding the banner raised it back up. Gwen and Jordan quickly slipped their tops on, although it was apparent that the five men holding the banner watched every move they made.\n\nGwen and Jordan turned and shimmied back to the front of the stage in the tiniest of underwear and bustier tops, which propped up their gravity defying breasts even more. Somehow, they were exactly in time for the next stanza which they delivered and then pranced back to the area by the banner. They quickly pulled on short skirts and low tops before jiggling back to the front of the stage to join Steve and Charlie.\n\nAt this time, Gwen's sisters and girlfriends appeared in short, sexy sailor outfits and carried clothes for Steve and Charlie. They danced behind the guys as they played the guitars. As soon as the song ended, the girls helped the guys climb into standard sailor garb.\n\n\"These are what we call sharp dressed men!\" announced Jordan as she and Gwen smiled and waved to the approving audience. \n\nThe lights dimmed, although it was just dusk and it was pretty easy for everyone to see what was going on. The other band members rushed onto stage to join Steve, Charlie, and the drummer and quickly took their places. Less than a minute later, the familiar drum work for 'We Will Rock You' began and the stage was once again bathed in bright lights. \n\nIt seemed like the entire ship trembled as every member of the audience stomped their feet to the drum beat. When Gwen pranced to the front of the stage and began singing and inviting the sailors to join in, the party began in earnest. Everyone joined in to sing the 'We Will Rock You' part so loudly that Steve wondered if they would be heard from shore.\n\nThey started the show with some of their rock hits but as the moon rose higher in the night sky, more ballads and love songs were performed. Jordan sang 'Stand By Me' before Gwen and Steve joined for 'Moon River'. Charlie and Jordan then did 'Moondance' and the audience loved them all. Gwen brought more than a few men and women to tears with her hit 'Woman in Love'. Jordan followed it with Willie Nelson's 'Crazy' and then she moved right into 'Always on My Mind', another Willie Nelson song. Charlie mesmerized the audience with his version of Kris Kristofferson's 'For the Good Times' and Rod Stewart's 'Have I Told You Lately That I Love You'. ",
        "Steve had stepped down from the stage and brought the female sailor that had asked for a dance back up and danced with her while the girls sang their songs. He changed partners for each song, and without exception, the ladies had tears running down their cheeks by the end of the dance. Each woman would give Steve a quick kiss and then wave to her friends and crew mates.\n\nThe audience loved it. It got even better when Steve and Charlie took over the singing and Gwen and Jordan began bringing sailors up to dance. The crowd yelled its approval when Gwen pulled Rear Admiral Hendricks to the stage for a dance while Jordan coaxed Captain Mercer to join her. They were great sports, as well as accomplished dancers. It made for a special moment that would long be remembered by the crew of the Teddy Roosevelt. When Gwen knew she would be doing her final dance with an audience member, she brought Arnold Gavin, her former classmate, up on stage. They had discussed his role before the show. As she danced close with him, his hand would slide down and rest on her firm ass. Gwen would pull her head away and look back at her ass and make a show of pulling Arnold's hand up to her back. She pulled his hand higher three times during the number and the audience loved it.\n\nJodie Lane, the sax player, was a tremendous hit. She was a pretty girl with flaming red hair and a slim figure, but she dressed in tight shorts and a top that displayed her toned midriff as she played. She was very good and looked extremely sexy. Her talent and appearance improved an already great show. It went so well that it ran half an hour over the four hours they had promised. For one of the encores, Steve and Gwen performed their dance number from 'Dirty Dancing' and the applause for it lasted several minutes.\n\nOnce they were finished the show and packed away the equipment, the ladies all went to the female quarters to sleep in some of the crew's bunks, while Steve and the other men joined the male crew in their bunks. Steve, Jason, Chip, Charlie, Pete, and Jared were accustomed to small bunks and fell asleep immediately. It took the others a little longer.\n\nThe next morning saw the gang saying their goodbyes after breakfast as they prepared to fly to the USS Nimitz for their July 4th show. A short time before they were scheduled to depart, Captain Mercer caught up with them. He surprised Gwen with an apology.\n\n\"Ms. Anderson, I want you to know that we're disciplining the young man that groped you during his dance with you last night. This ship prides itself on the conduct of its crew and Petty Officer Gavin failed miserably to adhere to our standards.\" \n\n\"Captain! That man was a classmate of mine in high school. I asked him to go along with it as a little joke I thought the other men would appreciate. I asked him because he's a friend and such a gentleman. I was confident that he'd know better than to take it too far. I should have told you. Now I have to apologize to him. Can I see him, please?\" asked Gwen with genuine concern.\n\n\"I just happen to have Gavin with me,\" grinned Captain Mercer. \"When I called him in this morning he insisted it was a set up and that you had asked him to help you pull it off. I wanted to believe him, but I really needed it verified before I could accept his story. \n\n\"Send Petty Officer Gavin over here,\" directed Captain Mercer to a man behind him. \n\nAs soon as Gwen saw Gavin, she rushed over to him and gave him a warm hug. \"I'm so sorry I got you into trouble, Arnold. I'm trying to convince Captain Mercer to let it go. I told him that I had asked you to let your hand slide down a few times. Forgive me?\"\n\nGavin was beaming from ear to ear as Gwen continued to hold him in her embrace. \n\n\"I think you've managed to set the record straight. Ms. Anderson. As long it was part of the show, there will be no repercussions, except for how his crew mates will treat him from now on. I suspect more than a few of them will be quite envious,\" predicted Captain Mercer.\n\n\"I want to thank you all on behalf of the United States Navy,\" added Rear Admiral Hendricks. \"Your show was absolutely perfect. It had the prerequisite beautiful women, great music, dancing, and even a bit of burlesque at the beginning. It was very well done. I have already spoken to the Secretaries of the Navy and Defense. They were both delighted with my report. I think the Navy will be asking you back in the future.\"\n\n\"Sir, this was the best trip we've ever had!\" declared Jordan. \"Your crew treated us like royalty and we're so darn proud of what you all do that we feel honored that you would have us. The Navy is always there when we need it, and we'll always be available when you need us!\"\n\nEarly afternoon found the three transport helicopters putting down on the USS Nimitz in the Red Sea. Once again there was a very enthusiastic reception for the ladies as they left their helicopter. They waved and smiled as they were greeted by Captain Lanceford and Admiral Emily Laughton.\n\nAdmiral Laughton seemed surprised, but pleased when Gwen and Jordan greeted her with a hug rather than a handshake. They were soon chatting like old friends as they waited for everyone to get off the other helicopters. Although they were not in uniform and Chip was officially retired from the Navy, Admiral Laughton smiled when both Steve and Chip stood at attention and saluted her. Then she noticed that Jared, Pete, Jason, and Charlie were all at attention. Her smile widened at the respect the men were showing her and her position. She motioned for them to relax and join the ladies as they were shown their sleeping quarters and introduced to their guides for the day.\n\nGwen and Jordan were asked if they would like to take a ride on one of the new F35' fighter jets. \"I'm battling morning sickness and it isn't always easy on these ships. Flying upside down faster than the speed of sound doesn't appeal to me at all\" replied Jordan as she begged off.\n\n\"I'd love to go up in one!\" declared Gwen with enthusiasm. \"I can be ready in a few minutes.\"\n\nHalf an hour later Gwen was introduced to the pilot that would be taking her up. Gwen was unable to conceal her surprise when she discovered it was very attractive woman with short blonde hair.\n\n\"I'm Sam Petrosky. I'll be the one flying you around this afternoon,\" announced the woman as she held out her hand. \"You look surprised. You're not worried about having a female pilot, are you?\"\n\n\"Not really. It's the fact that you're Polish causes me concern,\" wisecracked Gwen.\n\nThe blonde's mouth dropped open as she stared at Gwen for several seconds. Then she began to laugh. That was all it required for everyone else to break into laughter.\n\n\"I think we'll get along fine,\" chuckled the pilot. \"I knew you had a sense of humor, but I thought your sister, Kate, was the funny one. You're even more beautiful in real life than you are in the movies and on TV.\"\n\n\"Thanks. You aren't too hard to look at yourself,\" countered Gwen. \"I guess Kate is known as the funny sister, but I have my moments.\"\n\n\"I bet you do,\" agreed Sam. \"Especially when you're in Steve's arms. He's the whole package. Imagine looking like that and being able to dance the way he does. He's so masculine, but he isn't all caveman-like.\"\n\nGwen began to wonder about how much this girl knew about her and Steve. \"You haven't met Steve by any chance, have you?\"\n\n\"Seriously? He was a year behind me at the Academy, but I really got to know him when we won that swing dance contest in Georgetown my senior year,\" replied Sam as the two women walked toward her jet.\n\n\"That was you?\" asked a surprised Gwen. \"He sent pictures and videos, but I think he may have deliberately avoided sending me any clear close-ups of you. I had some issues when I started Stanford. I had to make a real effort to not be jealous of Steve and all the beautiful women that flocked to him.\"\n\n\"I can understand why you'd feel that way. To be honest, he could have 'flocked' me just about any time he wanted, but he was always a gentleman. He often talked about you and how he'd given his word to you. His word is very important to him. It made it so much easier to dance with him. I knew he wouldn't fall in love with me, or even try to seduce me. I may not be as beautiful as you, but it seems impossible to be friends with a man. Sooner or later, they want to get me into bed,\" stated the blonde pilot. \"Steve's probably the only man I've actually had as friend in my adult life.\n\n\"The ironic thing is that I kind of fell in love with him. I did exactly what I worry men will do. I guess maybe I'm not very good friend material. When I finally meet a guy that's willing to be just friends, I fall in love. Pathetic, isn't it?\"\n\n\"Hardly,\" responded Gwen. \"Every woman that's known him very long has fallen for him big time, and that includes my sisters, mother, and aunt. It's just a fact of life and I've come to accept it, along with the fact that he's totally mine, although I often wonder why.\"\n\n\"Yeah. I thought he had something going with Naomi Wilson because of the way they were always together and so friendly. I pretty much decided that she was the one standing between Steve and me, so I asked her about it,\" revealed Sam. \"She was very understanding. She told me that she was in the same boat. There's something about finding a good guy that's faithful to his girl that makes us want to make him unfaithful so we can have him. But then he wouldn't be the man he is and we wouldn't want him. It's a damn paradox!\" laughed Sam.\n\n\"How'd you like to dance with Steve tonight?\" asked Gwen with a big smile as an idea formed. \"We could do a swing number and Steve could dance with you in front of everyone on the ship. Would you be willing to do it?\"\n\n\"You wouldn't mind? I thought you might hate me after I told you how I felt about him. We might be a little rusty, but I'd love to do it!\" agreed Sam enthusiastically.\n\n\"I think it would be a real treat for the crew to see one of their own cut the rug like a professional with another one of their own, namely Steve. I'd like to keep it a secret right up to the time when we get ready to play the song. I want to surprise Steve,\" admitted Gwen to her new friend.\n\nThe concert that evening was a huge success. The men in the audience had heard about the opening scene with Gwen and Jordan being caught with their tops down and were eager for the show to begin. Many had watched it on Youtube. Gwen and Jordan had no trouble finding five sailors to volunteer to hold the banner, as well as lower it on their signal. The routine seemed to work even better when the audience knew what to expect. \n\nJodi played like a woman possessed. Jordan and Charlie seemed to be in a zone and were playing and singing great. Steve was performing in front of his fellow Navy people and was really outdoing himself. Gwen found herself raising her performance to stay with her friends. \n\nThe love songs and ballads went over extremely well. When Jordan sang 'Crazy', Steve danced with Admiral Laughton while Gwen danced with Captain Lanceford. The entire crew yelled its approval. \n\nSteve was taken by surprise when Gwen announced that they were going to try a song they had only practiced a few times, but never performed before an audience. \n\n\"As you must have noticed, we have a super sax player with us. It turns out she's accomplished on the trumpet as well. Not having someone to play trumpet kept us from performing this next song. Now we do, so we're going to do the song. The really cool thing is that Steve will be dancing with one of your ship mates as we do the number. They haven't been working on this at all. In fact they haven't even seen each other for years. Sam Petroski? Please come up!\"\n\nSeconds later Sam ran up on stage in a low top that looked like a sailor's shirt and a pleated white skirt. She headed straight for Steve, who was still dressed like a sailor from the opening number, and gave him a lingering kiss while the audience members called her name and whistled loudly. He appeared to still be in shock as Sam pulled Steve to the center of the stage.\n\n\"Let's do the routine we won the contest with,\" insisted the blonde woman. \"We knew it by heart back then and I bet we still do.\" \n\nSteve was quickly coming around and by the time the music started, he was as prepared as he could be on such short notice. Jodie stepped to the left front of the stage with her trumpet while Gwen and Jordan stood to the right.\n\nJodie began playing and soon Gwen and Jordan started singing 'Boggie Woogie Bugle Boy' while Steve and Sam moved to the music. What followed amazed everyone, including Gwen and Jordan. Steve and Sam never stopped moving. Their legs moved in all sorts of ways. Steve would roll her over his back and pull her under his legs, all so fluidly and quickly that the audience was shocked into silence. \n\nBy the time the number was over, Steve and Sam were gasping for breath as they waved to the cheering crowd. Sam again kissed Steve and hugged Gwen when she hurried over to join them. Jordan was right behind her.\n\n\"That was incredible!\" praised Jordan. \"I knew Steve could dance, but wow! Sam, you were great!\" The entire crew of the ship was on its feet cheering and applauding the dancing duo. Steve and Sam took several bows before Sam left the stage and Steve picked his guitar back up. Steve quietly told his friends that he wouldn't be able to sing for a few minutes as he fought to establish a normal breathing rate.\n\nWith the full moon overhead and the emotion and effort all of the musicians put forth, Charlie felt it may have been one of the best shows they had ever done. Jordan and Gwen were quick to agree as the friends discussed it afterward. Everything had fallen into place to make it a very memorable evening.\n\n\"I'm here to tell you that the crew absolutely loved the show!\" declared Ted during a lull in the conversation. \"You girls made a lot of them shed some tears with your love songs. Steve and Charlie had the females crying their eyes out. They loved the dirty dancing song, but that performance Steve and that blonde pilot put on was unbelievable.\"\n\n\"I heard some of the guys calling her 'the ice queen' before she started dancing. They couldn't believe the way she performed once she and Steve got going,\" added Jason. \"I don't know what you've scheduled for the movie you're shooting, but I'd suggest that Steve and Gwen try a number like that. I still can't get over how you guys danced to that boogie!\"\n\n\"I arrived at the same conclusion,\" agreed Diane. \"We need to work a swing number into the movie. We know Steve can do it, so it's all on Gwen to learn it.\"\n\n\"Me and my great ideas!\" lamented Gwen. \"I never knew they'd be that good. Now I have to try to learn to do that. I saw how out of breath Steve was and he's in great shape. This'll take a lot of work. I know that.\"\n\n\"But it'll help make the movie a success,\" predicted Paula. \"I wonder if Charlie and Jordan can write a good swing song for the movie?\"\n\n\"It's more apt to be my swan song,\" joked Steve. \"I'm still trying to recover.\"\n\nLady in Red Productions quickly edited the footage from the two shows and sold the finished product to a major network to be aired that evening in the U.S. at nine east coast time, which was still several hours away. \n\nThe next morning saw the group tour more of the ship after breakfast in the galley. They thanked the crew for serving their country and for making them feel so welcome before they piled onto the transport helicopters for the first leg of the long trip back to the United States. \n\nThe Red Lady touched down in Washington late in the evening of July 4th. The plan was to spend some time in D.C. while Steve and Gwen planned to catch up on their obligations in the city. \n\n\"As soon as everyone reached the hotel, Lisa spoke to her group. \"We have a problem. You all know that we're under contract to buy that manufacturing plant in Illinois. It seems that there is a lot of unrest in Blakely, and it centers very close to the plant. If it's damaged in some way, we'll never meet our schedule to produce those action figures for Christmas. \n\n\"If we back out of the deal, we'll never find another location in time. If we complete the purchase, how will we know if we'll be able to get people to work in such a volatile situation?\"\n\n\"I think we'd better tell the crew of the Red Lady to file a flight plan for Peoria for tomorrow morning,\" stated Steve. \"That's the nearest airport. The best way to handle this is head on. I'll take Jared, Jason, Charlie, and Chip and see what we can accomplish.\"\n\n\"I really don't think so,\" argued Kate. \"This concerns all of us and we'll all go. Look at Jordan, Lisa, and Gwen's faces. Do they look like they want to be left behind?\"\n\n\"This could get a bit nasty. It would be better if you girls stayed here,\" reasoned Jared.\n\n\"I'll call Dad and have him meet us there tomorrow. He's going to be the plant manager, so he needs to be in on everything,\" insisted Naomi. \"We'll all plan on leaving for the airport at eight AM, okay?\" \n\nSteve placed a hand on Chip's shoulder as he was about to argue. \"Choose your battles. I can see that we won't win this one. Let's get some sleep so we're ready to go in the morning.\"\n\n\"Naomi, you were so forceful! That was great,\" praised Jordan. \"You and Kate saved me trying to argue and plead with Charlie to go.\"\n\n\"Let's see if you thank me after we get there. I've been watching the news on the TV on the wall while we were talking. It looks like it's getting worse there every day. Let's hope it quiets down,\" worried Naomi."
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "uss nimitz",
        "uss thedore roosevelt",
        "wembley stadium",
        "sax",
        "swing",
        "concerts"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-19"
}