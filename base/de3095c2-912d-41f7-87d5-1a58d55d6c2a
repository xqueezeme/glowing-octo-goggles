{
    "title": "Snuggle Ch. 04",
    "pages": [
        "Chapter 4 \u2013 Intellectual Property\n\nRandy's Narration Continues\n\nThe sun had risen long ago, and as she was finishing up her dissertation, she had begun idly stroking my shaft, as if she couldn't think of anything better to do with her fingers. As the final words left her lips, they, too, seemed to be at a loss for something to do; so they parted one last time, in order to be put to better use than mere speech. Her cheeks hollowed as she sucked. I shuddered and moaned loudly, gritting my teeth, resolving to myself that I was going to enjoy this for awhile, and not blow up like jostled nitroglycerin. Strong, thin, delicate fingers were kneading my balls, and her head began rising and falling. What she seemed unable to get into her mouth, she now grasped with her free hand, stroking me while sucking like a vacuum. Perhaps ... just perhaps ... if we kept practicing this daily for few decades, I'd be able to hold out as long as I wanted. But not today. I erupted with such force that it came spurting out both corners of her mouth.\n\nShe coughed ... swallowed ... tried to snatch the next squirt out of mid-air with her mouth ... coughed again ... and finally, she wound up licking the sides of my cock ... trying to clean it, I guess. I reached over and grabbed a fistful of tissues from a box on the bedside table, next to the lamp. As I rubbed at all the mess, she looked up at me miserably. \"I'm sorry. I tried to swallow it all. But ... I didn't know there would be so much.\"\n\nI laughed gaily and pulled her up to me, wiped a few places on her face that still had my cum clinging to it, and I kissed her. I really liked what happened to her when I kissed her. Her whole body seemed to melt into mine. Finally, I pushed her back gently and looked into her eyes. \"That was wonderful,\" I told her earnestly. \"I feel great!\"\n\nShe searched my eyes to see if I was kidding. \"Really? You really liked it?\"\n\nI laughed again, then I hugged her for awhile, then I kissed her for awhile. And then, I got out of bed, making sure to keep a gentle hold on her hand. She scampered to join me, and I walked to the dresser by the door and picked up my cell phone, then led her back to the bed again. I had worked hard on various apps during the past couple years. Some of them had been very simple ... just to get the hang of app writing for various platforms. One of my first attempts at closed source app coding had been a simple blinking dot that I could change colors for and move to various parts of the screen. I wasn't sure the thing was still on my phone, but eventually, I found it. I explained all this to her as I searched for it, and she seemed enthralled, watching intently.\n\nFinally, I had a dot in the middle of the screen, I changed it to red, and I adjusted the frequency to one blink per second, then I slowly began to dial it up. I could tell when I'd hit the right rate, because she gave a little gasp and she looked dazed. \"Will this work?\" I asked her.\n\nShe blinked slowly, seemingly having trouble opening her eyes after closing them. \"Oh, yes. You're going to make me go to sleep.\"\n\nI nodded, but she wasn't looking, so I said: \"Yes. Can you tell me how to do that?\"\n\nShe smiled. \"Just tell me to relax. Then order me to sleep. I can't WAIT to surrender to you!\"\n\nI smiled at that. \"Okay. Relax, then. Just relax.\" I saw her shoulders slump noticeably. When she hadn't moved in awhile, and not knowing what else to do, I shrugged and said: \"Sleep.\" It was as if I had turned off a switch. We had been sitting together on the edge of the bed, looking at the phone, but now, she toppled over backwards, out cold, a picture of naked innocence. From what she had told me, she must have been doing this five or six times a day, so I assumed that she'd go under from force of habit. As she lay on her back, she suddenly shivered all over, and a dreamy little smile curved the corners of her mouth.\n\n\"Can you hear me, Kendra?\" I asked gently.\n\n\"Yes, Master.\"\n\nI had to smile at that ... just a little too clich\u00e9. \"Did you just cum?\" I asked her.\n\nThe smile broadened a little. \"Oh, yes. I'm a good girl.\"\n\nI shook my head in wonder. \"Sit up,\" I ordered, and she complied immediately. \"Open your eyes.\" Again, she did so right away. She stared straight ahead. I slowly stood. While seated, our thighs were touching; and now, as contact was lost, she seemed to have no adverse effects. Somehow, I didn't think there would be. I went and got a chair at the side of the room and returned, placing it in front of her, then I sat and faced her, inches from her, but not touching.\n\n\"Wait until I tell you to touch me,\" I ordered firmly. \"Don't reach out until I give you the command to do so, do you understand?\"\n\n\"Yes, Master.\"\n\n\"I'm not your master ... I'm you lover,\" I told her firmly, and she smiled broadly. \"I want you to repeat after me, understanding the words as you say them: When I see you, I am with you. Say it.\"\n\n\"When I see you, I am with you.\"\n\n\"And now, I want to say it over and over ... and as you say it, I want you to believe it. You should believe it because it is true. Say it now.\" She began repeating the phrase, searching my eyes as she did so. She seemed serious ... earnest. I let it go on for several minutes. Finally, I held up my hand, and she stopped. \"And now, I want you to repeat it again, over and over, but this time, I want you wake up, slowly, a little at a time, until you are awake. You can still see me. I am still with you. You can reach out and touch me ... but there is no need. Why is there no need, Kendra?\"\n\n\"Because,\" she answered \"when I see you, I am with you. When I see you, I am with you.\" She kept going, chanting her assigned line in this production. After a minute, her eyes achieved more focus, more of that sparkling interest that so captivated me the first time I saw her. She started smiling, and then slowly, she stopped talking and just looked at me. Still, we were not touching, though less than three inches separated our knees and our hands. \"Randy ... this is ... wonderful. Can we show Janie? Please? She'll be so excited!\"\n\n\"Sure, let's go,\" I answered, holding my hand out to her. She took it, and we stood. In the closet, we found a thick terrycloth robe, and though it was way too big for her, she put it on, rolling up the sleeves. I decided to get dressed ... but that proved difficult. Though we wound up laughing about it, she found that she could keep her hand on one part of me while I dressed another, and after discovering this formula, the thing went pretty quickly.\n\nIt was still too early, evidently, to encounter anyone in the halls. At our knock, Frank said to come in. Frank is not a pretty picture in the morning, but I guess any picture is improved if you wrap it in a nude blonde. At Kendra's insistence, we demonstrated the fact that she could now put a full three inches between herself and the nearest person (as long as she was staring me in the eyes and chanting a slogan). Janie immediately became very sober and very thoughtful. \"Can you do that to me?\" she asked me pointedly.\n\nI considered for a moment. \"No,\" I told her. \"But I can teach Frank how to do that to you.\" In response, she studied me with eyes that burned with curiosity and intelligence. Then she smiled. I got the feeling that Janie and I were going to be great friends.\n\nI told them that I wanted to talk to Frank alone for a few minutes, and, after a moment's hesitation, he nodded and got out of bed. This not only left Janie without physical contact, it left Kendra with an eyeful. Slight chaos ensued, but things got back to normal rather quickly. He apologized profusely as he pulled on a pair pants, but seemed very confused when Kendra told him to please turn around. Still, he complied, and one hand at a time, she pulled the bathrobe off while keeping an extended hand available to her friend. Then she stood for just a second, nude and magnificent, smiling brightly at me, and she slid under the sheet into the bed. Frank caught his breath when he turned around and looked, seeing them for the first time in each other's arms. I must confess, the sight was ... titillating.\n\nBack in my room, I filled him in on the basics, explaining that I didn't have time to give him the full version. As I expected, he was too emotional to catch the gist of my suspicions. He wanted to rush Toddworth ... one of those \"You knock him down and I'll beat him over the head with chair leg\" sort of plans. I patiently explained to him that attacking old men was not in the business plan of today's up-and-coming entrepreneurial enterprises. And anyway, we still weren't sure what it was he was after. We hadn't heard his latest offer, though I could well imagine what it would be. Let's just call the cops, Frank suggested. But again, that wouldn't work ... and Toddworth knew that we'd figure that out. He had primary control over the girls ... he HAD to. And, he had is lawyer with him. He held all the cards at this point. And anyway, the whole crazy story smacked of Buck Rogers and Killer Kane.\n\nI'd never seen Frank this intense. \"I ... I love this girl, Randy. And ... she loves me! No girl has ever told me that before. And she MEANS it, I swear to God!\"\n\nI lay a hand on his shoulder. \"She's been programmed to love you, Frank. Is that who we really want? Some girls who were FORCED to love us?\"\n\nHe studied me dejectedly. \"Shit. You're right,\" he mumbled. \"But I'm sure not going to leave them here.\"\n\n\"Remember why we came here, amigo,\" I told him.\n\n\"To hell with that, Dude. We're not going to negotiate the amount of a payment when the girls' fate is hanging in the air.\"\n\nI groaned. \"Frank, you idiot, the girls ARE the payment ... or at least part of it. Don't you see that?\"\n\nHe obviously hadn't, and was struck dumb by the concept. There was a knock on the door, and the girls came in, Janie in her dress from last night, Kendra in the white terry robe. But to my amazement, Kendra let go of her friend when they reached Frank, and she took the full two steps to me, flinging herself into my arms. She kissed me. \"Come into the bathroom and zip me up,\" she whispered in my ear. We stopped to pick up the green dress, which we now both suddenly wished we'd taken the time to hang up last night. She wanted a little more than my help with the zipper, of course, and from the sudden moan on the other side of the door, pretty much the same thing was happening out there. Somehow, fifteen minutes later, we finally all emerged from the bedroom, fully clothed, and we made our way down to breakfast.\n\nToddworth and Yarnell came in after about half an hour. The lawyer greeted us cordially, and he especially took time with the girls, chatting about this and that while Toddworth fidgeted. Finally, the old man seemed unable to take it anymore. \"Why don't we go into the conference room and discuss our business gentlemen. If you'll both follow me please ....\"\n\n\"The ladies will be joining us for this discussion, sir, if you don't mind,\" I replied.\n\nHe looked at me placatingly. \"No place for girls at a man's business meeting, son.\"\n\nI stifled an urge to call him \"Pops\" when I responded. \"If I cannot bring who I want to our negotiations ... sir ... then I'd feel at a distinct disadvantage before such a meeting could even convene.\" I got up, walked over to a side table and helped myself to another cup of coffee, trying to show nonchalance I did not feel. \"The girls ARE a part of this ... aren't they?\"\n\nYarnell's eyes narrowed, and he glanced quickly between Toddworth and me. \"What in the world are you two talking about?\" It was the first time I considered the possibility that the lawyer might not be a part of this plot.\n\nToddworth obviously didn't like to be contradicted, but he refrained from yelling at me. \"I don't know what he's talking about,\" he mumbled to his friend.\n\n\"Wonderful,\" I said happily. \"If that's the case, please call a cab for the ladies and send them on their way. Kendra, your parents live in the city, don't they?\" She turned big, questioning eyes toward me and nodded. \"Home to Mom and Dad, then,\" I responded gaily, and looked again at the two men. \"We'll start our meeting just as soon as they've left.\"\n\nToddworth's jaw was clenched. \"Very well,\" he told the room as a whole. \"A small demonstration, then. Ladies, if you will please give me your attention ....\" They were on the opposite side of the large breakfast table from the man, and Kendra naturally turned back toward him. I was still standing by the coffee pot. I couldn't see their faces, but I could see the blinking light in the man's hand. \"Relax,\" the old man ordered. \"Sleep.\" And then, as if they were a matched, choreographed pair, the girls pitched forward, one hand holding each other's and the other still in their laps. Frank was in time to catch Janie before she could fall all the way, but Kendra's forehead impacted hard on the mahogany surface of the table. From the look in his eyes, I think Toddworth was as stunned as anybody in the room at the suddenness of the thing.\n\nI was shocked by two things after that. The first was my own inability to move more swiftly than an old dude like Yarnell, who was around the table in a flash, attempting to assist the fallen girls. The other was what a take-charge type of guy he was, and I was sort of left out of the whole thing, while he dabbed Kendra's unconscious face with a wet towel and barked orders to the butler. Toddworth, meanwhile, was making ineffective entreaties to his friend to leave them alone. Finally, after Yarnell had pulled out his cell phone and dialed 911, I couldn't hold back any longer at Toddworth's dilemma, and I threw back my head and laughed out loud at him.\n\n\"Wake up!\" Toddworth ordered with a loud snap of his fingers. Immediately, both girls sat up, causing Yarnell to recoil in utter surprise. Slowly, ever slowly, realization of what might be going on came to him ... but first, he had to address all the actions he had set into motion. He turned away and spoke firmly to the emergency operator he had reached on his phone, then he tried to attend to Kendra again.\n\nShe smiled up at him, laying a hand on his arm. \"Thank you, sir. I think I just fell asleep for a minute.\" She narrowed her eyes and reached up to her forehead, touching it gently. \"Ow!\" She was genuinely confused.\n\nYarnell spun on his friend, obviously mad as hell. \"Relax?\" he thundered. \"Sleep? Wake up? What have you done to these young women? Some cheap sideshow hypnosis routine?\"\n\n\"Oh, you would not BELIEVE ....\" I said, coming up behind Kendra's chair and putting my hand on her shoulder. She took the hand and nuzzled the side of her face in my palm.\n\n\"Ephraim, you are here to protect MY interests in this matter,\" Toddworth hissed. \"The women are incidental. I need that process. I've taken steps that will help me acquire it. Now, you need to see that I'm protected, and that I get what I'm paying for!\"\n\nThey looked like two Banty roosters facing each other before a fight. Without looking away or backing down, Yarnell nodded. \"Alright, Rankin. Consider your interests protected.\"\n\nI gave them both a sour look. Lawyers! I should have known. \"My ultimatum still remains,\" I told them. \"You can either send the girls home in a cab, or you can let them attend our little meeting. I refuse to negotiate otherwise.\"\n\nToddworth actually sputtered. But, finally he nodded and turned toward the hall. \"Alright then! This way!\"\n\nI helped Kendra up, but instead of turning to follow them, she grabbed my hips and pulled us together, so that we were pressed together all along the front of us, and she lifted her face to mine. \"You do know how to make a girl's heart go pitty-pat,\" she told me, looking into my eyes. I took a breath and tried to calm myself. Before I could comment, however, she was talking again. \"Now, quickly, what kind of 'process' is this?\"\n\n\"I can't explain it in terms you'd understand,\" said earnestly.\n\nJanie spoke up for the first time. \"We're not dummies, Randy. Tell us what it is!\"\n\nSomehow, I kept from grimacing. Typical non-scientist's answer. I sighed. \"It's a variable, non-repeating algorithmic security code structure that attaches itself to graphical computer game content and masks overall arrangement and composition.\"\n\nKendra studied me with those sparkling eyes and nodded. \"Okay. Let's go.\"\n\nThe two men were waiting down the hall in front of an open door. \"You can't tell me that you understand what I just said,\" I accused.\n\n\"I think understand all I need,\" she told me. And we went in.\n\nThere were three copies of a contract on a large table, two on one side and one on the other, and Frank and I each sat down in front of one on our \"side.\" The girls sat in chairs next to ours and craned their necks to see. Toddworth sat in the largest chair in the room, opposite us, while Yarnell sat with the other copy in front of him. There was a gold-plated Cross pen on top of each document. I took a deep breath and opened my copy. Toddworth was to get exclusive rights to the process. Frank and I were to get, altogether, three million dollars plus \"agreed-upon, unspecified properties.\"\n\n\"Oh, my God,\" Janie muttered. \"Unspecified properties ....\"\n\n\"As you can see, gentlemen,\" Toddworth remarked loudly, \"I have greatly increased the amount from my previous offer. I'm sure you'll find it ... satisfactory. Now, if you'll both please sign, you can all go home ... happy.\"\n\nI closed the contract and sat back in my chair. But before I could comment, Kendra said \"Take it.\"\n\nI blinked at her. \"What?\"\n\n\"Take the deal, Randy,\" she said, and she looked up at me with those big brown eyes. She was trying to keep something from me ... some emotion ... but I couldn't figure it out. Finally, she laid a hand on my arm, leaned into me, so that only I could hear, and she whispered: \"Do you love me, just a little?\"\n\nAnd time seemed to stand still. I was trying desperately to put this all in perspective. Yesterday, from the very beginning when we met them, Toddworth had made it clear that the girls were here to influence the deal. Usually, things seem improbable for very good reasons. Did \"mind control\" actually exist? Were evil mad scientist brain surgeons real? Neither Frank nor I had ever even been with a two-bit hooker before. Imagine what we'd be like in the hands of two actresses who looked like THIS! They could have us believing anything they wanted. Anything at all. They could have faked the whole thing. They could have made us love them. And it all came down to this moment. It was all happening right now.\n\nWas it faith? Maybe it was just the NEED for faith ... faith in somebody I've only wished for all my life. I nodded to her, and she nodded back, secure in the knowledge that she'd known I wouldn't refuse her. I looked over at Frank, who was, of course, nodding in agreement. Faithful old Frank.\n\n\"Okay,\" I said. \"We'll do it.\"\n\n\"With a few minor corrections,\" Kendra said, sliding the contract to herself and picking up the pen.\n\n\"What?!\" Toddworth thundered. \"I told you, this deal is final!\"\n\nShe ignored him. \"First, amend the header to say \"Binding Letter of Agreement.\"\n\n\"Now see here!\" the old man fumed.\n\nYarnell wasn't fazed at all. He was already writing on his copy. \"Done,\" he said. \"Next?\"\n\n\"This was a final offer!\" Toddworth screamed, spittle spraying. \"I wanted this done now! Right here!\"\n\nThe lawyer regarded him under narrowed brows. \"What part of 'Binding' don't you understand?\" I couldn't read what was in the man's eyes, and evidently, all of a sudden, Toddworth realized that he couldn't, either. \"Rankin, we've done this dozens of times. You know how his works. Now, let me do my job.\"\n\nKendra picked up the conversation immediately. \"Under paragraph three, add the words \"within the guidelines of the Millennium Copyright Act.'\"",
        "Yarnell set his pen down and leaned back, crossing his arms and frowning. \"Kendra,\" he said gently, \"the contract is written within the guidelines of ALL laws. It isn't necessary to list each one individually.\"\n\nShe seemed suddenly unsure of herself. \"Can't we add it anyway,\" she asked him plaintively. \"It might not help anything, but it doesn't hurt, does it?\"\n\nHe canted his head slightly as a sort of shrug. \"Alright ... but call it the Digital Millennium Copyright Act of 1998.\" He paused. \"... or is it 99? Just leave off the date. We know what you're talking about. What's next?\"\n\n\"Wait a minute!\" Toddworth groused. \"What the hell is she talking about?\"\n\nHe looked around at all our blank faces. \"I THINK that she's trying to reiterate that whatever this is that's being sold here is an intellectual property. I don't know what it is myself, but I, too, assume that it will be treated like one. An intellectual property can have its rights sold away, but the property itself will always belong to the person who created it.\" We were still giving him dumb stares. \"Look,\" he continued. \"Let's say this thing you're selling is song. You sell Mr. Toddworth here the exclusive rights to that song. You are then prohibited from selling or giving it to anyone else. BUT ... the song is always yours. You can go on the road and sing it yourself, anytime you want. Make sense?\"\n\n\"We can use the process ourselves,\" I said, never having considered that.\n\n\"Exactly. You just can't sell or give it to one of Mr. Toddworth's competitors. Now, anything else?\"\n\n\"Pending approval of counsel,\" Kendra said. \"That's all.\" She closed the contract and sat back, grinning at the men across from her as if she'd just beaten them at their own game.\n\n\"Name of counsel?\" Yarnell asked, his pen poised.\n\nKendra was smiling, obviously feeling smug with herself. But when I didn't answer immediately, the smile quickly faded, and she looked questioningly up into my eyes. I gave her a helpless little shrug, and her mouth fell open. \"Randy! I can understand you trying to negotiate a contract yourself, but you don't have a lawyer?\" She faced forward and tried to come to grips with that. Then she nodded solemnly to herself, looked up at Yarnell and said: \"Bow, Barrow and Bow, Third Avenue, New York.\"\n\nIt was Yarnell's turn to hesitate. After a moment's thought, he said: \"Very well ... a couple small changes of our own. Please strike all of paragraphs seven and eight. That's all then. I'll show you where to sign.\"\n\n\"Damn it, Ephraim! What's the meaning of this?\" Toddworth boomed.\n\n\"They'd never let it get by, Rankin. A firm like BB&B would tie you up in so many knots over something like that, you'd NEVER get to use your ... process or whatever it is. We tried. It didn't work. Call it luck.\" He rose and came around to our side of the table. Kendra was still puzzling over the two paragraphs, but seemingly couldn't figure them out. He lined through them, initialed them, checked the other pages and pointed to where Frank and I were to sign. Then, he walked the things around to let Toddworth sign. The old man clearly wasn't happy.\n\n\"Now,\" he said. \"that concludes my business here. And it concludes my services to Rankin Toddworth. I resign forthwith.\"\n\nToddworth barked a laugh. \"Don't be absurd, Ephraim. We have a contract.\"\n\nThe lawyer only smiled. \"Rankin, I've been writing loopholes in your contracts for thirty years. You don't think I wrote a few into my own?\" His face was set in a mask of total disgust. \"What you've evidently done to theses women is inexcusable. I always knew you had a mean streak ... but this is the last straw. I don't want anything to do with you or your company!\" Then he turned toward us. \"I'm driving into the city. Can I give you a lift?\"\n\nHe had a Lincoln Town Car, and we all fit very nicely, with me up front and Janie holding hands with each of the other two in the back. Frank's and my suitcases and computer bags were in the trunk, but the girls had no qualms about leaving whatever they had brought. They just wanted all of us to get away from the mansion as soon as possible. Yarnell only had one bit of advice, he told us. \"Young lady,\" he said over his shoulder to Kendra, \"I know you meant well by mentioning the first law firm you could think of ... but Bow, Barrow and Bow is going to charge you a FORTUNE for reviewing that contract!\"\n\nShe smiled wanly. \"I was hoping they could do it pro bono,\" she said.\n\nHe laughed aloud. \"Let me tell you something, Ms. ... um .... I'm sorry, I never caught your last name.\"\n\n\"Barrow,\" she told him, quietly.\n\nHe laughed so hard I started worrying we might have an accident. When he finally had himself under control, he shook his head in wonder. \"I just have to say, this: I'm guessing that Rankin Toddworth spent a considerable amount to close this deal. Chances are that your process is worth FAR more than you think it is. But he also grossly underestimated one thing.\"\n\n\"What's that?\" I asked.\n\nBut it was Janie, in the back seat, who answered. \"He underestimated the value of the property,\" she said. And she squeezed Kendra's hand hard and shook it for emphasis. They both had tears in their eyes.\n\nI won't go into the old \"meeting the girlfriend's parents\" routine, except to say that I liked them both very much. The next day, we rented a car and drove to Ithaca, where we helped them pack and we sent off all their stuff in a moving van, headed west. Then we drove to Syracuse, where we caught a flight that connected through Chicago to Denver. The girls shared a bedroom in Ithaca, and so our apartment was the first time we'd had a chance for a little privacy since our stay in the mansion. I wasn't sure at all how Janie and Frank would do in the cohabitation department ... definitely a Type-A versus Type-B thing there ... but amazingly, he had no qualms at all about her \"tidying up\" the place. I can't tell you how often in the past he'd accused me of violating his \"space\" because I'd picked up a crushed soda can.\n\nI told Kendra I'd take her out for a romantic dinner, but we never made it. She said she was hungrier for me than for food. Our lovemaking was very slow, very tender and particularly gratifying. I marveled at just about every part of her; and most of all, I marveled at her patience. I mean, a girl has GOT to get tired of a guy playing with her breasts, but (at least for now) she not only tolerated it, she seemed to be enjoying it. When I entered her the first time that evening, I took her with long, slow, powerful strokes, and once again, she came twice before I reached my peak and spent inside her. I found it hard to envision such bliss in life. After the first time, we debated doing it again or going out for dinner, and we decided to order a pizza instead. She decided there was enough time for a blow job while we waited, but believe it or not, there wasn't; and when the doorbell rang, we had to scramble to throw on something, since she had to go to the door with me to get it. Finally, she had one of my long sleeved shirts on (with at least a couple buttons done), while I sported an old pair of jeans.\n\nI guess it was pretty obvious what we'd been doing when we answered the door, but we lived through the embarrassment, somehow. I paid the guy, even though it wasn't the amount they'd told me it would be. Then I peeked at the pizza ... and it wasn't the right order. Come to think of it ... it wasn't even the right pizza company. That's because it was Frank and Janie's. Ours arrived just as they finally emerged from THEIR love den, she sporting a lovely ensemble featuring a pair of Frank's gym shorts and a tee shirt, and he in his ratty old robe. There was nothing else to do except break out the beer and have a party.\n\nBut things tend to happen after three or four beers; and the girls decided to use this evening to \"take a stand\" in our relationships. I should have seen a big deal coming when Kendra started crying, just trying to verbalize the thing. The whole train of thought evidently went something like this: Their love for us had more or less been conditioned into them through hypnotic mind control. We were aware of this. We were nice guys ... but we were just guys, all the same. ERGO, at some point in our relationships, we were going to do something incredibly stupid, like trying to \"undo\" their love for us. Anyway, that was the gist of it. I swore to them that we would not. Kendra wailed that she couldn't be sure. I told her that we'd sign another contract, by golly! But when we tried to write on a piece of paper with a ballpoint pen, it kept skipping on spots that had pizza grease on it. So, I grabbed her, threw her over my knees, pulled up her shirt tail, and signed her bare ass while she squealed and laughed.\n\nI had a ton of things to do the next day. I talked to a local corporate lawyer, and began setting up the framework for a privately-held business; and I started arranging things that were best for the money, tax-wise, when it arrived. I also visited a private investigator ... a local guy, but one who was part of a national franchise. I won't go into detail, except to say that after a LONG time and a LOT of money, his firm was primarily responsible for the arrest of Dr. Gustaf Weinerberger, who was later indicted by the state of Connecticut for performing unlicensed medical procedures on young women. Maybe you've read about it. It was really big in the supermarket tabloids for awhile; forced, surgically-oriented mind control to make women more pliable and suggestible through \"controlled panic attacks.\" Right up the tabloid's alley. Weinerberger fled the country while on bail, but not before the state had frozen all his financial assets, which were listed in the millions. The investigator believes he now resides in Brazil. They're still working on it.\n\nAnd as for the REAL monster in this melodrama, the good \"Doctor Arnold\" is apparently going to escape any type of legal scrutiny whatsoever. We DO know that is not his real name ... but that's about all we know. Toddworth certainly isn't talking, for obvious reasons; and there is no paperwork trail leading back to him at all. What is really confounding is that the girls don't seem to care. Near the end of their captivity, the \"doctor\" evidently had them so bamboozled, that they (to this day) feel a great empathy for the man. I think, deep down, that each one credits him with finding the one true love in her life and making that love possible. Complete and total brainwashing was a small price to pay. That's what I THINK they think, anyway. As a man who made his living through \"mind control,\" he obviously knew his profession very, very well.\n\nWhen I got home that day, I found that Frank had bought five new sketch pads ... the precursor to a major project in the \"Frank Universe.\" The girls were working by themselves, with a stack of yellow legal pads and pencils, outlining some idea. And ... if you haven't guessed by now ... THAT was the beginning. The result would eventually become \"Blood on the Streets of Barcelona,\" last year's number-one grossing adventure video game, produced by F&R Software. Before that project was all over, we would have 22 full-time employees (and contract certain services from 19 others), rent a whole building in Aurora (which we're now in the process of buying) and we'd be featured in tech magazine articles around the world.\n\nWe settled on Aurora because that's where we found the house ... a huge duplex that we modified by tearing out some walls and building \"common rooms,\" both upstairs and down: a living room on the first floor and a massive office area on the second. That's where most of the preliminary work on the game was done.\n\nIf you haven't heard of it, it was a pretty neat idea. The girls wrote fifteen different mysteries, and the solution from one unlocks and leads the player to the beginning of the next. Those \"beginnings,\" however, are generated at random. As a result, it is virtually impossible for two players to work through the thing in the same order (actually the odds of an exact repeat are 1 in 1,307,674,368,000). The game was rated MA17+ (mature audiences only), mostly for sex. There are two main characters, pretty female detectives, one black and one white. They are very intelligent, but both have a habit of getting themselves into compromising sexual situations. Each has sex three times in the course of the game, always being seduced by a suspect (not counting one episode where they have sex with each other). They each wind up in a bondage situation twice. Frank did the nude sketches from modeling sessions with Janie and Kendra, along with literally thousands of digital photos used for creating animated graphics done by the art staff in the office.\n\nWhile we were still beta-testing, we chose the best console that would support it, then we hired a team of four to take it cross-platform from PC/MAC. When we presented it to their corporate president, it was already in his format. He couldn't turn it down. But after viewing it, he wanted a lot more than the game ... he wanted exclusive game console platform rights for all our future products. That little deal was worth twenty mil. That launched us. And sequels were also guaranteed because the original graphical code was secured by our process. The game sold for $49.99, and they literally couldn't keep them on the shelves ... ALL the major retailers sold out within weeks, and we've just ordered a seventh production run.\n\nThere are those of you that wouldn't like our lifestyle, and would openly condemn it. Most people want their space. The very concept of \"constant physical closeness\" would be abhorrent to them. There are tens of millions of people out there with physical, mental or emotional handicaps; but when imperfections are filtered through the eyes of a lover, they can be rendered inconsequential. She needs me, and so I am there. She needs my touch, and so I touch her. She needs my love, and oh, God, I love her! For the rest of my life, I know that when I sleep, I will snuggle. Trust me; I can think of a lot worse prospects in life.\n\nWe've worked hard with the hypnosis thing. We do it almost every day. Kendra, and Janie, too, have gotten to the point where they can be separated by up to a couple feet; but they have to KNOW that all they need to do is reach out to reclaim contact. We're still working on it. For now, we claim success in terms of one more inch. There are a few strange aspects about the hypnosis that are still with us. Every time they go under, they cum. And, the multiple orgasms during sex are still a very real part of their lives. If those are being generated \"mentally,\" they certainly can't differentiate. As far as they can tell, they are very, very real ... and very, very enjoyable. (Hypnosis was also the solution to the \"potty problem.\" We simply put them under and tell them that we were still \"with them\" until they have finished. And, of course, the reverse is also true. If I want to get up in middle of the night, I just wake Kendra up, immediately \"put her under,\" and suggest that I'm still with her in bed while I leave for her for awhile.)\n\nThe girls have always worked together in the big office at home, their desks 90-degrees from each other; so that all they have to do is reach out to touch. Kendra will do anything I ask ... anything ... with one exception. Every five or six days, she comes to me (or she calls me at the office) and asks if she can \"take a nap.\" That's a code phrase, of course; what she's really doing is requesting my permission for them to spend the afternoon in bed together, making love. Janie makes the same requests to Frank. We've both told them over and over that they should just do it and stop asking. But they continue to do so, and it's apparent that they will always beg us for approval and acceptance of their love. Now ... I've always assumed that a little spirited afternoon delight would probably dampen a person's sexual ardor for the remainder of the day ... but just the opposite is true. On those evenings, Kendra is an insatiable wildcat in bed with me. Frank reports the same is true with Janie. Go figure.\n\nDo bad guys win? Sure they do. All the time. And this time was no exception. Toddworth must have made a bundle off of us. I lie in bed some nights and dream of revenge ... think of ways to hurt him ... to make him suffer. It's especially tempting for someone who knows a little something about hacking and getting around computer security protocols. But, in the end, as I hold the woman I love, I can't help feeling sorry for the old fool. Not only did he lose his last remaining friend in the course of the deal, but it never even occurred to him that those two beautiful bodies on his operating table downstairs might be more than just a form of payment. They were, in fact, the \"intellectual properties\" with the greatest value.\n\nThe double-wedding last June was a relatively small affair, all things considered, with only a few friends, our immediate families and our employees in attendance. I thought it was a wonderful party, and I had a great time ... but then, half of the people there spoke my language.\n\nI even did the chicken dance.\n\nThe End"
    ],
    "authorname": "blacknight99",
    "tags": [
        "hypnosis",
        "horror",
        "d/s"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/snuggle-ch-04"
}