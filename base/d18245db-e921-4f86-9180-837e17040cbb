{
    "title": "Seven Days Ch. 10",
    "pages": [
        "Nic turned to look at Victoria.\n\n\"Nic...shit, I'm sorry. What an asshole,\" Victoria said, shaking her head in disbelief. That prick Marsh just lied to her. She felt like a fool. \"I got nervous and a little scared that he was going to try to cause problems at your office, so I let him stay here instead.\"\n\n\"Are you okay?\" Nic asked, rolling up his sleeves. He was so fucking sick of Marsh. There had been numerous times in the past when he had wanted to take that nosey fuck out, but he knew that would draw too much attention. Killing cops wasn't really his thing, but he would have loved to make an exception for Marsh.\n\n\"Yes, I'm fine,\" Victoria answered. She had thought about telling him about Marsh's comment to her, but she didn't want to make it worse. No matter how much of a jerk he was, he was still a cop. \"Nic, why is he bothering us all the way out here?\"\n\n\"Because he's an asshole and he can't let go of a ten year grudge against me. If he shows back up here, call me and call the police,\" Nic told her, as he kissed her again and then went upstairs to take a shower before dinner.\n\nVictoria leaned against the counter. She wasn't sure if he was upset with her or not, but she would make sure to be more careful from now on.\n\n****************\n\nClick...BANG! \n\n\"Fuck!!\" Nic shouted, as he raised up in bed. He quickly glanced around the dark room and noticed he had startled Victoria from her sleep.\n\n\"Nic!\" Victoria screamed, pushing the covers from her body and moving closer to her husband. \"Nic, what's wrong?\"\n\nNic couldn't say anything. He just sat there, sweating and trying to compose himself. Victoria was trying to grab onto him, but he was holding her at an arms length. He couldn't believe he shouted like that, all because of a nightmare. How pathetic.\n\n\"Are you okay?\" Victoria asked, worried.\n\nNic swung his legs off the side of the bed and rested his face in his hands. \"Yes, I'm fine. Go back to bed, baby.\"\n\nVictoria knew that this was his way of shutting her out. She watched as he stood up, pulled on some workout pants and walked to the door.\n\n\"Where are you going?\" she asked.\n\nHe didn't bother turning around. \"I need some fresh air.\"\n\nNic quickly jogged downstairs and out the front door. The cool night air felt good against his sweating skin. He closed his eyes and plopped down on the cold brick steps. He needed to get his shit together.\n\nA few seconds later, he heard the front door open. Victoria walked down the steps and turned so that she was facing him. He looked up at her as she sat down on his lap.\n\nShe caressed his face in her tiny hands. \"Nic, are you sure you're okay? You know you can tell me anything.\"\n\nNot this. He just couldn't. She didn't need to be stressed out anyway.\n\n\"I'm fine, baby. Let's go back to bed,\" he said as he stood, holding her in his arms. He smiled when she giggled and wrapped her arms around him, burying her face into his neck.\n\nBut then she pulled back so that she could see his face. \"I almost forgot...you never carried me over the threshold!\"\n\n\"I didn't? Well, I'll make up for that now,\" Nic said, kissing his wife's sweet plump lips and carrying her back into the house and upstairs to bed. He gently laid her down and removed what little bit of clothing they had been wearing.\n\nThe moment he entered her body, he immediately relaxed. Yes, this was what he wanted to think about when he fell back asleep. His wife and his child. That's all he needed and all he wanted to dream about.\n\nEven after their lengthy lovemaking session, he held her close in his arms until she fell back to sleep\u2014never wanting to let her go.\n\n***************\n\nIt was early Saturday morning, and Victoria was trying a new color for the baby room for the third time. Nothing seemed to fit...but not knowing the sex of the baby affected her choice as well.\n\n\"Shit,\" she whispered to herself when the light sea green color she applied to the wall dried darker than she had hoped. She was about to call Nic out of his study for his opinion, when she heard the doorbell ring.\n\nThe sound startled her for a second, because they definitely didn't have many visitors, and Nic preferred it that way. Actually, none if you didn't count the different maintenance men.\n\nVictoria trotted downstairs and looked through the oval glass of the wooden door. She saw a tall, nice looking older black man. She opened the door.\n\nThe man looked down at her and instantly smiled. \"Hi. I live a few houses down, and I just wanted to welcome you and your husband into the neighborhood. I saw a moving truck a few weeks ago, and my apologies for just now coming, but I wanted to wait until you got settled,\" he said, as he extended his hand to her.\n\nVictoria immediately smiled back, taking in his warm eyes and pleasant smile. She offered her hand as well. \"Thank you so much. I'm Victoria Andretti.\"\n\n\"Nice to meet you Victoria. I'm Jackson Branson.\"\n\n\"Would you like to come in?\" Victoria asked, making room for him to enter.\n\n\"Are you sure, I don't want to impose. You look like you're busy,\" he said, giving her a once-over with her paint splattered clothing. She realized how crazy she must look.\n\n\"Not at all. Plus, I need an excuse to take a break. Let me call my husband,\" Victoria replied. \"Nic, I--,\" she turned to yell, but quickly quieted when she saw her husband standing right behind her.\n\nNic had been standing at the top of the stairs when he heard his wife talking to someone. The guy's voice didn't sound familiar, but Nic still didn't trust many people. The moment Victoria invited the stranger in, Nic had quietly begun descending the stairs to make his presence known.\n\n\"Nic,\" he said, offering his hand to the stranger.\n\n\"Jackson. Nice to meet you.\" The two gave each other a firm handshake, never taking their eyes off one another. Victoria inwardly groaned. Men...always sizing each other up.\n\nBut then Jackson turned and glanced around. \"This is a really beautiful home. I always wanted to get a peek inside. Just the two of you?\"\n\nVictoria patted her tummy. \"Well, we're expecting, so soon to be three,\" she smiled.\n\n\"Congratulations...that's wonderful. My grandbaby was born not too long ago. 'My beautiful handful' is what I like to call her,\" Jackson chuckled.\n\n\"She sounds absolutely adorable,\" Victoria said, grabbing ahold of Nic's hand.\n\n\"She is...but I'm biased,\" Jackson stated, smiling back at her.\n\nVictoria glanced behind her and then turned back to Jackson. \"I'm sorry, we only have one sofa right now. I've fallen behind on getting that stuff,\" she admitted. \"But please, have a seat. Would you like something to drink?\"\n\nJackson walked over to the couch and sat down. \"Oh, sure. Coffee, please. If it's not too much trouble.\"\n\n\"Of course not. Nic?\" Victoria said, turning to her husband.\n\n\"I'm good, baby.\"\n\nWhen Victoria walked out, Nic decided to question this stranger a little further. He couldn't help it. His old lifestyle made him wary of people who came claiming nothing but good intentions.\n\n\"So...what line of work are you in?\" Nic asked, leaning against the wall.\n\n\"I'm a Commander with the U.S. Navy SEAL program. Used to be an active SEAL myself, before age started creeping up on me. How about you, Nic? What do you do for a living?\"\n\nBoth men stared at each other for a moment. Something about knowing Jackson's background made Nic uneasy.\n\n\"I'm an architect. I recently opened up my company downtown.\"\n\n\"What did I miss?\" Victoria interrupted, as she came bouncing back into the room, handing Jackson his cup. She walked over to Nic, and leaned against him.\n\nNic placed his arm around her shoulders. \"Our new neighbor is a Commander in the Navy SEALs,\" he said, with not much enthusiasm in his voice.\n\nVictoria's eyes widened. \"Oh, wow. Shouldn't we call you by title or something?\"\n\nJackson chuckled. \"No, you don't have to.\"\n\nVictoria looked up at Nic, to see if he had any more questions, but he just more or less stared at Jackson. Victoria started feeling uncomfortable. She decided to fill the awkward space with more questions.\n\n\"Your granddaughter, what's her name?\"\n\n\"Brienna. It's a mixture of her mom and dad's name.\"\n\n\"That's beautiful. Brienna. Do you get to see her often? Do your daughter and her husband live in the city?\"\n\nJackson took another sip of his drink. \"Actually, I see her quite often. They live about fifteen miles east of here. And my son-in-law, Brandon, I see him all the time. He's also a SEAL in my unit.\"\n\n\"Oh, well that worked out perfectly!\" Victoria said.\n\n\"Well, it took a long road to get to perfect. Very long,\" Jackson muttered, as he took another sip.\n\n\"Well, I'd love to meet them...that way I can get some baby tips from a new mom,\" Victoria said.\n\n\"Great, I'll let them know,\" Jackson said.\n\nAnother awkward silence filled the room.\n\n\"So, I guess I should be heading off now. I have some work to finish up,\" Jackson stated, while standing. \n\nVictoria felt awful, but she wasn't sure what else to say to convince him to stay longer. Nic sure wasn't helping.\n\n\"Would you like me to take this to the kitchen?\" Jackson asked, holding up his cup.\n\n\"No, I got it. Thank you so much for stopping by,\" Victoria said, taking the cup from his hand.\n\n\"My pleasure. And thanks for the coffee.\"\n\nVictoria and Nic walked with him to the door. \"It was nice meeting both of you,\" Jackson said, before he walked down the steps and hopped into his car.\n\n\"You too!\" Victoria yelled and waved goodbye.\n\nNic closed the door, barely letting her get her hand inside.\n\n\"Jesus, Nic. That was rude!\"\n\n\"So let me get this straight...you invite not one\u2014but two Navy SEALs to come visit us?\"\n\n\"It's not like they're cops, Nic.\" Victoria defended.\n\n\"But I'm sure they are really good at what they do. And I don't--,\" he started.\n\n\"Quit being so paranoid,\" she said, placing her hands on her hips.\n\nNic closed his mouth and slowly nodded. \"Paranoid, huh?\" he said, while scratching his chin. He turned and walked back upstairs without another word being exchanged.\n\nLater that night, after a quiet, uncomfortable meal on the living room floor, Victoria opted to cool off in their pool. They both had stayed too busy to actually enjoy it when they first moved in, so maybe tonight they could christen it with a little foreplay. Or so she hoped. He still had barely said a word to her since she called him paranoid.\n\nThey were near the deep end of the pool, so the water rested around the top portion of Nic's chest. Victoria held onto him by wrapping her legs around his waist and her arms around his neck. She wanted him to talk to her. In truth, he hadn't really been the same since he woke from that nightmare a few nights before. She was starting to get concerned about him.\n\nShe lifted her head from his shoulder and stared into her husband's solemn face. His stare out into the back yard suggested that he was deep in thought. She wanted him to let her into those hidden parts of his mind so badly.\n\n\"Nic?\"\n\n\"Yes,\" he answered, still staring out.\n\n\"Are you mad at me? For letting Jackson in and for calling you paranoid?\" Victoria asked. He turned his head to look at her. \"No.\"\n\nBut that was all he said. No smile, no other explanation...just 'no'. Victoria tried to shake her hurt feelings and kiss him. But when her lips connected with his, she felt no passion returned. She sighed and decided to try a new tactic.\n\n\"I can't wait to see Marianna tomorrow. I pick her up at the airport at noon. Want us to stop by your office for lunch?\"\n\nVictoria watched his face again. He didn't even bother to acknowledge her conversation this time. His gaze never shifted from the water. \n\nVictoria wasn't sure if he was mad at her or not, but she couldn't stand being ignored. If he would only tell her what was wrong. She realized that divulging his feelings wasn't something he was used to or liked, but she was his wife, and he needed to open up.\n\nAfter a few more moments of silence, Victoria pushed away from him and slowly paddled to the shallow section until her feet touched the bottom of the pool. She climbed out and grabbed her towel, wrapping it tightly around her.\n\n\"Where are you going?\" she heard Nic ask. Well, two can play that game. She ignored him and walked into the house.\n\nShe quickly showered and changed into one of his t-shirts. She grabbed a baby magazine that was lying on the nightstand and got into bed. Her back was to the door when she heard him enter their room. Glancing out of the corner of her eye, she watched him remove his swimming trunks, giving her an eyeful of his beautiful...well-endowed body. He stalked into the bathroom and shut the door.\n\nVictoria listened as the shower turned on, wishing she was in there with him. She knew she was being a little difficult, but she couldn't stand when he shut her out, with no explanation. Didn't he realize she was crazy about him, and couldn't stand to see him hurting?! She continued to mindlessly flip through the magazine when the door to the bathroom opened. She chanced another small glance, and noticed he still hadn't put anything on. Instead, he slid into the bed and turned the lamp on his side of the bed off.\n\nShe sighed and loudly turned another page.\n\n\"I'm sorry, baby,\" she heard from behind her, as his arms snaked around her waist. \"I didn't mean to upset you. It's nothing, really.\"\n\nVictoria turned to face him. \"But you were thinking about something. Just tell me.\"\n\nNic remained silent.\n\n\"Nic, whatever it is, I'd feel better if you--\"\n\n\"We don't have to talk about it anymore. I'm good,\" he quickly said, cutting her off and turning to lie on his back. Nope...she wasn't going to let this go so easily.\n\nVictoria sat up in the bed. \"Nic, you're doing it again. You're shutting me out. Don't do that!\" she warned.\n\n\"It's because I don't want you being worried with all of the shit I have going on in my head, Victoria. You don't need to deal with that.\"\n\n\"But I want to help you.\"\n\nNic was getting aggravated. \"I don't need any help, now just let it go, okay?\"\n\n\"Nic, I--\"\n\n\"End of discussion,\" he snapped.\n\nOh, he had to say that phrase. His 'shut up, don't say another word, none of your business' phrase that drove her crazy. She had always thought to herself that if he ever said that one more time, she would scream. In fact...\n\n\"Aaaahhhhhh!!!\" Victoria shrieked.\n\nNic quickly sat up, looking at her like she had lost her damn mind.\n\n\"What the fuck?\" he fumed.\n\nVictoria didn't bother answering him. Instead, she clicked off her night lamp and turned on her side, facing away from him. This was driving her crazy. Was something wrong? Were there still loose ends that hadn't been tied up before they moved? She wished he would trust her and just open up. But no, Nic went into detached, closed off mode when something bothered him. Would it always be this way?\n\n****************\n\n\"Aah!! How's my nuora?\" Marianna squealed when she spotted Victoria in the crowded airport. The two embraced tightly.\n\n\"I'm good, how are you?\" Victoria asked, returning her hug.\n\n\"I have another grandbaby on the way, so I'm just perfect,\" Marianna gushed, as she reached down to stroke Victoria's stomach. Although there was barely a bump, Victoria felt a little self-conscious about her weight.\n\nOnce they packed Marianna's bags into the car, the two headed to the new house. Marianna talked a mile a minute, switching into Italian every now and then as she talked about her children and what they were up to, and about her telling them the news of Nic being married and having a baby. His older brother, who was a school principal, and his baby sister, the hippie nomad, were ecstatic and very happy for Nic. The only grim reaper of the bunch was the oldest, divorced brother. He had told Marianna that he knew his younger brother, and Nic would fuck it up somehow. He already didn't get along with Nic, and this just gave Victoria even more ammo to not like him.\n\nVictoria barely got a word in before they pulled up to the house. Once inside, Marianna quickly looked around downstairs then headed straight upstairs. Victoria shook her head, because she knew exactly what Marianna was looking for. When Victoria finally made it upstairs, she snickered to herself when she saw Marianna open the door to the would-be baby's room.\n\n\"Bingo!\" she heard Marianna say. \"What color are you two thinking about? I hope not plain white.\"\n\n\"No, we'll change it when we know the sex of the baby. But...you see why I need your help, right? I've never decorated this much on my own.\"\n\n\"Not to worry, we'll get this all taken care of. So, is Nic still at work?\"\n\n\"Yes, he'll be home in a few hours. He would have come with me to pick you up too, but he had several back to back meetings. Want to unpack and settle in?\"\n\n\"Sure, just show me to my room.\"\n\nWhen Marianna's clothes were put away, she joined Victoria in preparing dinner. Even though Victoria kept telling her to sit down and relax with Marianna there was no such thing. But at least they now had a table to sit down at. That's the one thing Victoria insisted upon having before Nic's mother showed up. They at least needed some minimal furniture, and she would do the rest of the shopping with Marianna while she had her help.\n\nVictoria knew it was very traditional...maybe a little too easy, but she decided to fix spaghetti. It was the only Italian dish she could for sure make and not embarrass herself. Marianna showed her a few tricks to make it even more spectacular. Less sauce, more flavor\u2014don't drown it like most Americans do, Marianna told her.\n\nNic knew his mom was inside. He should have called her when she landed, but he still couldn't shake this funk he was in. He hated that Marsh knew where he lived. He knew that it was only a matter of time before his location was no longer a secret. But he just had to make sure that from this point on, all of his investments were legit. He couldn't make any mistakes--not that he ever could.\n\nHe pulled the key from the ignition and got out of the car.\n\nAs soon as he opened the door to the house, the scrumptious smell of Italian food filled the air. He placed his keys on the table near the door and walked toward the kitchen.\n\nBoth Victoria and Marianna had their backs turned to him, so Nic was able to sneak up behind his mother and wrap his arms around her. She jumped, completely startled, but then relaxed.\n\n\"Ciao!\" greeted Marianna.\n\n\"Mi sei mancato,\" Nic whispered into his mother's ear, letting her know that he had missed her.\n\n\"Anch'io,\" she replied, turning around to hug her son.\n\nWhen Nic released his mother, he turned to look at Victoria. She still had her back to them, while she chopped vegetables for a salad.\n\n\"Hey, Victoria,\" Nic said.\n\n\"Hey, Nic,\" she answered, not bothering to turn around.\n\nImmediately Marianna knew something was wrong. The air was thick with tension. Nic didn't rush over to hug Victoria and she had barely acknowledged his presence. She looked back and forth between her son and his wife, until she settled her glare on him.\n\n\"'Cos'hai combinato?\" Marianna asked, placing her hands on her hips.\n\n\"I didn't do anything, Ma,\" Nic said, answering his mother. \"I'm going upstairs to change clothes.\"\n\nAt dinner, you could hear a pin drop. The only noises that trickled through were those of their silverware clanking against the dishes. After quietly filling their plates, the three of them ate in silence. Nic sipped his wine and looked over at his mother.\n\n\"How was your flight?\" he asked, trying to relieve the tension.\n\n\"It was nice. Could somebody tell me what's wrong?\" Marianna asked, addressing the pink elephant in the room.\n\nVictoria turned to Marianna. \"Honestly, I don't know,\" she said, then turned to her husband, giving a noticeable fake smile. \"Nic, wanna answer that?\"",
        "\"Nothing,\" he said, taking another sip of his drink.\n\n\"And that's the answer I get as well,\" Victoria said, picking over her food.\n\nNic glared at Victoria. \"You going to do this in front of my mother?\" he said, with his cold stare.\n\nVictoria knew that Nic was a private person, and she was wrong for trying to drag Marianna into their disagreement. But she just wanted validation that she wasn't crazy in being upset with him for being so closed off.\n\n\"Well, if that's the only way I can get you to talk about what's been bugging you, then I have to play every card I can,\" Victoria said, sliding her plate out of the way.\n\n\"I'm not discussing it further,\" Nic stated in a clipped tone.\n\n\"Nic, I--,\" Victoria started.\n\n\"Dinner was delicious. Goodnight, mom,\" Nic interrupted, pushing loudly back from the table. He picked up his plate, dropped it in the kitchen sink and walked out.\n\nVictoria sat there shocked. She hated pushing him that far, but she was desperate to get this out in the open, hoping that his mother's presence would help. Not the right way to go about it, but the only way she knew at this point.\n\n\"Marianna, I'm sorry. I should probably\u2014\"\n\n\"Yes, go. I'll clean up down here. Don't worry about a thing,\" Marianna said, rising up from the table.\n\n\"Thank you,\" Victoria whispered, as she stood up and walked out. She went upstairs and found Nic sitting on the bed, changing into a pair of running shoes. He looked up at her when she entered.\n\n\"I'm going for a jog,\" he stated, standing up.\n\n\"This is so unfair, Nic,\" Victoria said softly.\n\n\"I can't believe you did that in front of my mother,\" Nic said, heatedly. \"This was our business and--\"\n\n\"No! Not ours...yours, because you won't let me in,\" Victoria huffed.\n\n\"Fine, then it's my business and I don't appreciate you dragging other people into it.\"\n\n\"Don't you realize you're treating me like you did when I didn't mean anything to you?! When I was just your living blow-up doll!\"\n\nNic's mouth dropped open. He quickly glanced toward their open door, knowing his mother could probably hear everything. It's not like she didn't know how they met, but still, hearing Victoria speak that way about it, shamed him and pissed him off at the same time.\n\n\"Why don't you keep your fucking voice down,\" he quietly said, while staring angrily at her.\n\nMarianna stood at the bottom of the steps, drying off a plate. She hated eavesdropping on them, but she didn't like that they were fighting. And, in her book, pregnant women get a free pass for their erratic behavior. Their hormones are all over the place and their feelings can be hurt more easily. She didn't want her son yelling at Victoria. If it lasted for a few more minutes, she would just have to go up there and break it up.\n\n\"Are you going to throw that in my face every time we get in a disagreement?\" Nic asked.\n\n\"No, and I didn't mean to say it to hurt your feelings. But I'm your wife, not your girlfriend or even what I was before. This is different and it hurts me to see you bothered or stressed out about something. Maybe I could help, but you'll never know because you won't talk to me.\"\n\n\"Drop it,\" Nic warned.\n\n\"No!\"\n\nNic grabbed a sweatshirt and walked out of the bedroom. He noticed his mom at the bottom of the steps. He knew she was going to try to stop him, but he needed to leave before he said something he would regret. Usually in life, when he wanted someone to leave him alone, he'd say something awful to them, and they quickly learned to quit fucking with him. He had even done that to Victoria a few times in the past, when they were under different circumstances. But he knew he needed to leave before he did it again.\n\nWhen he reached the bottom step, his mom grabbed his arm. \"Nic, she just wants to help you and she's in a fragile state right now, son,\" Marianna quietly said.\n\n\"I'll be back in half an hour,\" Nic said, as he quickly kissed his mother's forehead and walked out the door. He had to get the hell out of there and burn off some of his stress.\n\nMarianna walked upstairs to check on Victoria. She was sitting on the bed, staring at the wall. Marianna went to sit down beside her.\n\n\"Is this how he treated Amber?\" Victoria asked, still looking at the wall, as her mind raced.\n\n\"Oh, cara mia, he didn't love her. He never showed her the affection he shows you. He loves you.\"\n\n\"I feel so close to him sometimes...then other times I feel like there's a stranger sleeping beside me. I felt that we had made a giant leap forward when he opened up about Bobby, but since we've been here, he's been closed off and stressed. I don't know if something is wrong or if something happened to cause this. He's woken up twice in the middle of the night due to a nightmare, but he won't tell me.\"\n\nMarianna sat and listened.\n\n\"This isn't how I imagined our marriage. I guess I should have known it was too good to be true. I really thought living here would make a difference. I never know when Nic the husband or Nic the mob boss will come walking through the front door,\" Victoria expressed, as she wiped a tear away.\n\nMarianna grabbed her hand. \"Only thing I can tell you is to concentrate on the baby. Nic will come around, eventually.\"\n\n\"I know you say that Marianna, and no offense, but did your husband come around? Nic said his father was closed off too.\"\n\nMarianna nodded her head. \"Actually, God rest his soul, he never did. That man died with secrets I probably didn't know about.\"\n\n\"That's what I thought,\" Victoria mumbled, as she hopped up from the bed and walked into the closet. \n\nMarianna slowly ran her hand over the bed covers, smoothing out the lumps, when she suddenly heard Victoria's strained breath. She stood up and was about to go into the closet, when Victoria came barreling out of it with a suitcase in her hands. \n\n\"No! Victoria Andretti, put that down right now!\" Marianna ordered, rushing over to her.\n\nVictoria ignored Marianna and placed the suitcase on the bed. She wasn't permanently moving out, but she wasn't sure what else to do. She was tired of this back and forth with Nic. He had done it with her when she was just his \"arrangement\", he had done it when she was his girlfriend, constantly saying, \"the less she knew the better,\" and now, even with her being his wife and the mother of his child...he was doing it again. Well, fuck that, Victoria thought. She loved him more than anything, but she could move back home if she wanted to be ignored. She wasn't even sure where she would go\u2014and she was sure she wouldn't stay any longer than a few hours, but she could at least check into a hotel until she could clear her head.\n\n\"Victoria, listen to me! He'll be back in a few minutes, and talk to him then. You don't know what you're doing because you're very emotional right now. I know what I'm talking about,\" Marianna pleaded, as Victoria walked around her, throwing several articles of clothing into the suitcase. She then walked into the bathroom and quickly grabbed her toiletries.\n\nWhen she realized nothing was registering to Victoria, Marianna quickly stepped out of the room and called Nic.\n\nNic glanced down at his phone, which was vibrating. It was his mother. He stopped jogging and answered. But before he could even say anything, Marianna started firing off in Italian what was going on. Victoria was packing? What?! He told his mom to calm down and he was on his way. He clicked off his phone and started sprinting back to their house.\n\nVictoria was in the process of dragging her bag downstairs when the front door flew open. Nic was standing there breathing hard and looking up at her.\n\nEven though his stare caused her entire body to burn, she ignored him and continued to drag her suitcase further down the steps. But she couldn't help it--the tears started to form and they eventually fell. She knew what she was doing made no sense, but she felt that she had to make a move. Nic was the one who taught her that life is like a chess game. You can't just sit there after your opponent makes a move. You have to move as well. And this was really the only move she ever really had with him. She looked back at him as he quickly ascended the stairs.\n\nWhen he reached her, he ripped the bag from her hands as he wrapped his free arm around her waist and hoisted her up. Instead of pushing him away, she held onto him tightly as he reached the last step. He pushed their door open and dropped her bag on the floor, as he held her tightly. Her face was pressed into his neck, and he could feel her warm tears against his skin.\n\nNeither one said anything for a few moments. Nic gently lowered her so that her feet were touching the ground. He pushed her hair away from her face and tilted it so that she was looking at him. Her big doe eyes were unsure and hurt from how he had treated her. He leaned down to her mouth and whispered into her lips, \"Don't ever do that again. Don't leave me,\" he said, then kissed her deeply, his tongue invading and wrapping around hers.\n\nVictoria moaned into his mouth. She hated when he cast his spell on her, as she quickly lost all senses. For a brief moment, she had forgotten what she had done, until he said 'don't leave me'.\n\nWhen their lips finally parted, both were breathing heavily, as Victoria spoke. \"Nic, this is really the only card I have left to play with you. I can't cancel your credit cards, or physically fight you...I don't have anything to stop you, except leaving. It's--it's all I have,\" she admitted, looking down at her hands, ashamed to admit that she felt so powerless with him. After a few seconds of him not saying anything, she spoke again. \"When you hurt, I hurt, Nic. Don't you understand that?\" she whispered to him. She wrapped her arms around his waist and breathed in his masculine scent. \n\n\"I know, baby. I know,\" he quietly admitted, while kissing the top of her head. \"I'm going against my better judgment here, but I'll tell you. I just didn't want you upset because of my problems. But I guess it defeats the point if you are upset anyway, and you don't know them.\"\n\nVictoria nodded and grabbed his hand to lead him over to the bed.\n\nNic exhaled. He didn't really know where to start, but he had to open up.\n\n\"Remember when we were in Bali, and I kept having that feeling that something bad was going to happen?\"\n\nVictoria nodded again.\n\n\"Well, that feeling came back. And I can't shake it. And now...fuck, this is really hard to say to you, but I keep having this recurring dream...\" Nic really didn't want to finish that sentence. He didn't want to let Victoria into that dark place.\n\n\"Baby, it's okay. You can tell me anything,\" Victoria encouraged, as she lightly squeezed his hand.\n\n\"In the dream, someone, um...someone is holding a gun to our baby's head and they pull the trigger.\"\n\nVictoria immediately gasped and covered her mouth with both hands.\n\n\"Yeah, I know, and that's not the image I wanted to place in your head.\"\n\nVictoria pulled her hands down. He told her, so she needed to pull herself together and not make him feel worse.\n\n\"It's okay baby. It's just shocking, but it's also just a nightmare. That's all.\"\n\n\"Victoria, I've just done so much bad shit over the years, I can't get off this easy. I can't get the perfect wife, the perfect life...it just doesn't work that way,\" Nic sighed, lying back onto the bed.\n\n\"First off, I'm nowhere near perfect, Nic,\" Victoria smiled, trying to lighten his mood. \"Actually, some could say being with me is your punishment, you know.\"\n\nNic didn't crack a smile. She leaned back on the bed beside him.\n\nHe began to speak again. \"I feel like here I'm unprepared to deal with certain things. At least back home, I had Jimmy and Raymond. I had my gated-in house...I felt like I was on my A game at all times. I felt like I could protect you. Here I feel like my guard is down.\"\n\n\"Nic, you're in a different occupation here. No one knows the old you. This is a chance for us to start over.\"\n\nNic wasn't so sure. It couldn't be this easy. So far, nothing in his life ever was. But he didn't want to worry Victoria anymore, so for better or worse, he would try to be completely honest with her. Because although he would never admit this to her...talking to her did make him feel better. \n\n\"I love you, you know that?\" Nic asked her.\n\n\"So I've been told. I love you too,\" she whispered back to him.\n\n\"I'll do better about my 'feelings',\" Nic said, rolling his eyes. \"But don't expect any Barbara Walters tears or anything. That's not gonna happen.\"\n\n\"Well, I've already seen your tear up, so there,\" Victoria replied, sticking her tongue out at him.\n\n\"Yeah, well you're the only one, so don't go sharing that with everyone. Not my mom or your new friend, Jackson. Copy that?\"\n\nVictoria swatted at his arm. \"Don't be jealous. But Jackson didn't introduce a wife, so maybe he's still single,\" Victoria contemplated, tapping her finger against her chin as if in deep thought. \"He seems like a man in touch with his emotions.\"\n\nNic rolled her on top of him and slapped her ass. \"If you don't want him hurt, I suggest you stop all thoughts in that direction.\"\n\n\"Please, he's a SEAL. Aren't they supposed to be from the school of 'the baddest of the bad', or something?\"\n\n\"Yeah, well I'm from the school of, 'you fuck with me, you go missing', so your friend should keep that in mind,\" Nic stated, as he dodged another playful swat from Victoria.\n\n\"Silly man,\" she said, hugging him.\n\n*****************\n\nNic, staying very true to his word, was more open with Victoria. When he was having a down day, he would tell her, and much to his surprise, she usually could brighten his outlook. He had forgotten how sarcastic and funny she could be.\n\nAnd their house started to feel more like a home when Victoria and his mom started decorating. He gave them free reign. He knew that Victoria wouldn't go crazy with his credit card, but his mom...that was a different story. \n\nBut there was one room that he did want to help Victoria with and that was the baby's room. This was all new territory for both of them, and two minds were definitely better than one.\n\nVictoria noticed a significant change in Nic. He was more calm and relaxed now. And he hadn't woken up from a bad dream since the night that had started their argument.\n\nBut, at the moment she was inwardly groaning. She hated these awkward business parties Nic had to attend. And plus she felt a little heavier than normal, for obvious reasons, so she had absolutely nothing to wear. It was just a tiny little paunch she had, but to her, it was still a different body. But Nic loved it. He said it made her look even sexier if that was possible. Of course, he could have just been trying to make her feel good about her changing body, but either way, she needed the boost of confidence. This whole pregnancy thing was all so foreign to her. She never dreamt of being a mom, let alone Nic Andretti being the father. \n\nShe remembered the first time she saw him, when he had walked into her father's restaurant years ago. He looked so young, yet intimidating. She had been cleaning off a table when she looked up at the group of men entering. She couldn't take her eyes off him. He glanced over at her and then turned his attention towards the kitchen.\n\nYes, they had definitely come a long way since that day. But she brought her attention back to the task at hand. She needed to figure out what dress to wear.\n\nNic had called her earlier that day, and asked her to be ready. Well, since she was forced to go to these lame, stuffy parties she would try something a little different. She grabbed the dress of her choice, and slid it on. Tight...much tighter than she last remembered. But whatever, it would have to do.\n\nOnce she was dressed she sat on the couch until she saw his car lights in the driveway. Showtime.\n\nNic was about to get out, when Victoria opened the front door. Goddamn, she...just Goddamn. She looked so fucking good, he wanted to march her ass right back upstairs and put their new bed sheets to good use. She was wearing a short, off the shoulder red dress with thin strapped high heels. The dress was extremely tight, due to her current condition, that turned him on. He could see the slight bulge in the lower section of her stomach. He never thought he'd be one of those men that got turned on even more by their pregnant wife...but he was learning a few new things about himself since Victoria had come into his life. She had her curly thick ringlets swooped into a messy updo and minimal makeup, which is exactly how he loved to see her face.\n\nEven though his windows were extremely tinted, Victoria knew that he was staring at her. She smirked at him and walked toward his newest toy, which was a Ferrari. This man spent way too much money.\n\nWhen she got closer, Nic finally got out and gave his wife a noticeable once-over. He walked over to the passenger side door and opened it for her.\n\n\"You're going to make this very distracting for me, Victoria,\" Nic growled, as he squeezed his wife's ass as she got in.\n\nVictoria smiled. She knew she had chosen a more risqu\u00e9 dress, but chalk it up to hormones, because she was feeling frisky tonight. She was definitely going to try to make this party interesting for herself. She turned to look at him when he got in.\n\n\"Okay, let's make a bet then,\" Victoria said. \"If I can distract you at least three times tonight, then we get to leave early, okay?\"\n\nNic thought about it. \"Alright. And how will you know if I'm distracted?\"\n\n\"Smile at me.\"\n\n\"Game,\" Nic said, squeezing his wife's smooth toned thigh, and then rubbing his hand further up.\n\nVictoria pushed it back down. \"Nope, you have to wait until we get to the party.\"\n\nWhen they finally arrived, Victoria realized this party was just like the previous parties they had attended. She even saw a few familiar faces from the past get-togethers. None who she actually knew their names, though. She held tightly to Nic's hand as he walked through groups of people, shaking hands and introducing her. They finally approached a larger group of men. She recognized one of the men, Sam. He worked for Nic and was his Vice President of Designs. He was a pretty nice guy, but Victoria couldn't stand his wife. From the moment the two were introduced at an office party, his wife Rhonda seemed to look down on her. Victoria wasn't sure if it was because she was much younger...or black, but after their initial greeting, Victoria didn't have two words to say to that snooty bitch.\n\n\"Hello, gentleman, this is my wife, Victoria Andretti,\" Nic said, as Victoria said hello to the large group of men.\n\nA thin balding man grabbed Victoria's hand and shook it. \"No wonder Nic never seems to be stressed,\" he joked. \"Nice to meet you Victoria.\"\n\nVictoria smiled back and surveyed the group. They were all staring at her. It was times like these that she wished she paid more attention to what her husband did. So she'd at least have some talking points. Well, she did have a mission tonight, and she needed to get started, so she could get the hell out of there.\n\nAs Nic stood there speaking with the men, Victoria slowly slid her hand from his waist to his ass and pinched. She heard Nic pause just briefly before she looked up and saw a slight grin from the corner of his mouth. One down, two more to go. \n\nAfter a few more minutes, Victoria finally excused herself from the group and went to look at some interesting paintings on the wall. Anything to take her mind off this dull party, until she could think of another distracting trick. But as she was looking over the artwork, she was really drawn in by a painting of a mother holding her child. She was so mesmerized, that she didn't notice her own little audience staring at her. \n\n\"So, who are you here with?\" she heard a raspy voice ask. Victoria glanced to the side and noticed a tiny older woman. She was in very good shape with a few thick pieces of perfectly placed white strands through her short dark brown hair.",
        "\"Hi. My husband's Nic Andretti. The tall one with his hands in his pockets,\" Victoria pointed out. The woman followed her finger until she spotted him.\n\n\"Oh, he's very handsome. I think my husband introduced me to him at the last party. My name is Hilary McCray. Nice to meet you,\" she said, extending her hand to Victoria.\n\n\"I'm Victoria. Nice to meet you as well.\"\n\nHilary gave her a once-over and then turned back to Nic. \"You and your husband make a very handsome couple. You should come to one of our parties. We throw a big bash every month. Spectacular key parties, and I'm sure our regular guests would be thrilled to meet you two.\"\n\n\"Key party? Is that like a costume party, or something?\" Victoria innocently asked.\n\nHilary smiled. \"Sort of.\"\n\n\"Oh, well that sounds nice. We'd love to come. Thank you,\" Victoria smiled, as she looked over at her husband. \n\n\"Hope you do join,\" Hilary said, handing Victoria her card.\n\nWell, at least she had met one nice person. But Victoria still had some distracting to do. She walked over to the bar and asked the bartender for three olives. He handed her a large toothpick with the olives impaled on it. She turned to look at Nic.\n\nOnce she had his attention, she slowly and seductively licked the top olive. He narrowed his eyes at her and tried to rejoin his conversation. But she could tell that curiosity got the better of him, and he glanced in her direction again. She took that opportunity to quickly place the entire toothpick with all three olives in her mouth and slowly pulled them off. She closed her eyes and moaned.\n\nBut then something didn't feel right. Her eyes flew open as she coughed and patted her chest, trying to dislodge the olive that had gotten stuck in her throat. In an instant, she felt Nic standing beside her, patting her back.\n\n\"Are you alright?\" he asked, his voice laced with concern.\n\nIt finally went down and Victoria turned her watery red eyes up to her husband. \"Oh my God, that was embarrassing,\" she said, as she took a sip of the water he handed her.\n\nNic had to laugh. Hard. Now that he knew she was okay, that was one of the funniest things he had ever seen in his life. It was so Victoria to do something like that.\n\n\"Well, at least that's smile number two,\" she said.\n\n\"Hey, no fair,\" Nic said, trying to calm his chuckle.\n\n\"Yep, it is. The deal was just distracting you. Even if I'm choking.\"\n\n\"Oh, you have learned some tricks from me,\" Nic said, placing his hand on his wife's ass. \"But you still have one more smile to get from me before we can leave. And this one has to be sexy. No falling down or choking, okay?\"\n\n\"Fair enough.\"\n\nVictoria tried again to get Nic's attention throughout the night, but nothing seemed to work. And she didn't feel daring enough to flash him any skin, considering people could be watching.\n\nBut then, she came up with the perfect plan. The most daring thing she had done in front of this many people, but she had to try. She called the bartender over.\n\nNic was bored to tears, but he'd learned the art of looking like he was listening intently, even though his mind was far, far away. Truthfully, he was thinking about Victoria. He glanced up at her again, and she was just looking at him. She hadn't tried anything else. Maybe her shyness won out and they would be staying longer. He had kinda hoped that she would have won, so they could get the fuck out of there.\n\nHe was about to make a comment on something one of the men had said, when he noticed the bartender started walking toward their group with the largest grin on his face. He was carrying a tray with a champagne glass. But upon further inspection...this wasn't an ordinary champagne glass. Well, the glass was, but its contents were definitely not. Along with the sparkling champagne, was something else. \n\nWhen the bartender finally reached their group, he whispered into Nic's ear that the glass and the note were from his wife.\n\nNic stared down into the glass and smiled. He couldn't help himself. Damn that little minx! She had stuck her tiny black thong into the drink. He couldn't even look at her just yet, knowing she had won. He could see the men in his group through his peripheral vision, and they were staring at the glass. Someone coughed, but their mindless chatter ceased.\n\nNic turned the note over and read it. 'When do you plan on fucking me? Love, your wet and willing wife.'\n\nNic's dick turned hard within a millisecond. That was it.\n\nHe grabbed the drink and the note and excused himself from the group. He heard over his shoulder one of the guys whisper to the group, \"Well, fuck, can I marry her?\" Not a chance in hell, Nic thought as he approached Victoria. She was all his, from head to toe.\n\nVictoria waiting in anticipation as Nic closed in on her, like a hawk zoning in on a defenseless, small mouse. When he reached her, he stared down at her and slowly sipped the champagne, pulling her delicate article of clothing out with his teeth. He grabbed her hand and leaned down to her ear. \"You win, baby. Now let's get the fuck out of here before I give this entire room a show.\"\n\nOnce the valet retrieved his car, Nic could barely pry his hands from his wife's body. When they did finally get in, Nic pulled the car out and hit the gas, propelling the car onto the street. Victoria reached into his pants and massaged his dick. He leaned his head back against the headrest and moaned.\n\n\"Fuck, Victoria,\" Nic whispered as he slowed the car down. He pressed the button to remove the top of the car as he pulled over by the side of a building. There were no cars in sight, which was good for what he had planned for her. \n\nVictoria looked over at Nic, becoming antsy from whatever it was he had in his mind at the moment. He quickly pushed his seat back and leaned over her to unbuckle her seatbelt. \n\n\"Are you still wet and willing?\" he asked.\n\nBefore she could say a word, he was half lifting and pulling her over to his side, until she straddled his lap in the tight space.\n\nHe slid his pants to his thighs and pulled her down onto his lap, while his hard thick member entered her sweet, wet pussy in one effortless glide. Both of them gasped in unison.\n\n\"Oh, Nic,\" Victoria whispered, with her eyes closed. Once she was fully adjusted, she began to roll her hips back and forth, in a smooth, rhythmic motion, causing both of them unbelievable pleasure.\n\nNic pulled the top of her dress down, exposing her tits. He massaged them, rolling each nipple around his fingers before he licked and lightly bit them.\n\n\"Shit,\" Victoria moaned, as he continued to fuck her.\n\nNic felt like he couldn't get as deep as he wanted in such a small space, but he damn sure was going to try. Sexually, this woman drove him to the brink of madness, and she had since the first time he'd made love to her.\n\n\"Nic, wait, oh...I'm coming, oh!\" Victoria shouted, as her head rolled back and her body jerked with the intensity of her orgasm.\n\nBut Nic needed more. He opened his car door and stepped out, with Victoria still wrapped around his cock. He leaned her up against the side of the car and started to drive in and out of her with tremendous sex-crazed force. This was the penetration he needed. His lips found hers as he passionately kissed them, until he was sure he had lovingly bruised the tender flesh.\n\nThen he could feel his own orgasm take over his body, causing him to ram into her one last time, as he stilled and emptied his essence deep within her. Nic wasn't sure how long he held her against him, completely spent, but he knew he wasn't done with her. Not by a long shot.\n\nLater that night, Victoria knew the true meaning of exhaustion. Nic wouldn't let her fall asleep until he had staked claim in every hole in her body at least twice. She felt sore, but she knew the aching that coursed through her body was due to how much her husband wanted and loved her. She fell asleep in his arms with a contented look upon her face.\n\n*****************\n\nMarianna racked up her share of frequent flyer miles over the next few months, flying back and forth, so she could dote over her daughter in-law. And the more Victoria started to show, the happier Marianna was. Nic warned his mother not to be so overbearing, but she rolled her eyes at him, and proceeded to pick out maternity clothes for Victoria, and food she should be eating, and books she should read. Marianna obviously didn't understand the meaning of overbearing.\n\nVictoria was still trying to deal with the changes in her body, mentally and physically. She would never admit this to Nic or Marianna, but it felt as though some tiny little creature was inside her, and at any moment, it would pull an Alien, and she'd be Sigourney Weaver, trying to fight it off. She wondered how much weight she would gain. At first, when she stepped on the scale, it was fine. The next few times after that, she cringed. The last time she stepped on the scale, she burst into tears.\n\nAnd although Nic continued to assure her that she was the most beautiful woman in the world, she still felt so awkward. And when Victoria got to the point where she could no longer touch her toes or even tie her shoes, she felt completely useless.\n\nBut there were perks of being pregnant, which she later figured out, much to Nic's displeasure.\n\nNic walked into the twenty-four hour grocery store that was all the way across town. His eyes were half closed as he mindlessly walked up and down the aisles. Pickles...where the fuck were they? he thought. Once he saw a jar, he made a bee line to the aisle that housed peanut butter. The thought made his stomach queasy.\n\nWhen he finally made it to the cashier, he slowly reached into his wallet for cash, and just then the cashier started laughing. Nic looked up, barely able to focus. It was a young black kid, chuckling while placing his items in a bag.\n\n\"What's so funny?\" Nic mumbled, placing ten dollars down.\n\n\"Oh, nothing. Sorry man, I was just tripping because it's two in the morning, and you're buying a jar of pickles and peanut butter. Your girl pregnant?\"\n\n\"Yes.\"\n\n\"Mine too. She has me bringing home the craziest shit. So, I feel your pain,\" the young guy said, as he handed Nic his change.\n\nNic smiled. \"Well, congratulations...and thanks for the support,\" he said, grabbing his bag to leave.\n\n\"Thanks man, you too,\" the kid smiled back.\n\nWhen Nic pulled into their driveway, Victoria was standing by the door, waiting on him. Jesus, she was staring at the bag like it was a million dollars.\n\n\"I'll make it for you, just go back upstairs, okay,\" Nic whispered when he reached her. She nodded and he patted her rear when she turned around.\n\n\"Okay. But, um, just make sure to put extra pickles on it okay. I want a lot, you know,\" she said over her shoulder.\n\nNic walked into the kitchen and quickly fixed what he figured was probably the two nastiest foods that could go together. Victoria had awakened him, really wanting a peanut butter and pickle sandwich. He almost gagged at the thought. Once he made it, he poured her a glass of water and marched upstairs.\n\nShe was sitting up in the bed, waiting for him.\n\n\"Oh, thank you so much, baby,\" she said, damn near snatching the plate from his hand. He grinned and sat the drink down on her nightstand.\n\nNic crawled into bed and looked over at his wife. She was so cute. Her little feet were wiggling back and forth under the cover and she had the plate resting on her swollen belly. \n\nHe turned around and closed his eyes.\n\nCrunch, crunch, crunch.\n\nNic opened his eyes and slowly rolled over and looked up at her. Crunch, crunch, crunch, he heard again, as his wife bit into the sandwich. He looked over at the clock. It was already three in the morning, and he had a meeting with his company at nine.\n\nHe rolled back over and placed a pillow over his head. Crunch, crunch, crunch. Damn those fucking pickles! The sacrifices we make for the ones we love. Nic squeezed the pillow tighter over his head.\n\n*****************\n\nVictoria had tried to catch an afternoon nap, when her cell phone started ringing. At first she hadn't planned on answering it, but she noticed on the caller ID it was her mother. She was sure she was calling to bug her about the status of the baby.\n\nShe and Nic had wanted to wait until the baby was born to know the sex, but the anticipation had been killing them. They had to know, and were pleasantly surprised when it was a boy. It honestly didn't matter to Victoria, but she could tell that Nic was secretly thrilled about that. Then came the hard part of deciding a name.\n\nVictoria had wanted Nicolas Sebastian Andretti V, but Nic was dead set against it. He didn't want to go that high with the numbers and he felt like that name was cursed. He said their kid needed a fresh start. \n\nBut Victoria still wanted the kid to have a part of Nic's name, so they went with Sebastian Andretti. The real argument came with the middle name. Victoria wanted his middle name to be Paul, explaining that her son would be named after the two best men she knew. Nic eventually conceded, since Paul was a simple name, but he did insist that he was to be called Sebastian, and not Paul. Victoria agreed. So Sebastian Paul Andretti it was. \n\n\"Hey Mama,\" Victoria said, raising up from the couch to answer her phone. \n\nSilence.\n\n\"Mama?\" she asked again.\n\n\"Vicky, I um...damn,\" her mother whispered.\n\n\"What's wrong, mama.\"\n\nHer mother paused again, before she spoke.\n\n\"Vicky, James...died this morning,\" her mother said through sniffles. \n\nVictoria couldn't breathe. She wasn't ready to hear this. She wasn't ready. \n\n\"No, mama,\" Victoria whispered, holding her hand over her mouth. She knew that this was a possibility, but she honestly thought that her father would fight through it. He couldn't possibly die. \n\n\"I'm going to take care of everything. And I'm fine, so don't try to rush back here. I'll let you know when the funeral will be, okay?\" Olivia said, her voice no longer cracking.\n\nVictoria nodded her head, knowing full well her mother couldn't see it, but she was still too shocked to speak.\n\nFinally when she found her voice, she whispered, \"Okay,\" and hung up. Victoria wasn't sure how long she sat there, but she couldn't move. She couldn't think. Her father was dead...and the last thing she ever said to him was throwing in his face that he had no one.\n\nWhen Nic arrived back home, he knew immediately that something was amiss with Victoria. At first he thought the house was empty, because several lights were off. He called her name and walked upstairs to find her sitting on the floor in the baby's room trying to put together the expensive convertible baby crib his mom had bought weeks ago.\n\n\"Hey baby,\" Nic said, eyeing his wife suspiciously. \"I told you I was going to do that.\"\n\nShe didn't look up. \"I know, but I thought I could get a start on it.\" Victoria really didn't know what the hell she was doing. And for some reason the directions didn't make any sense to her. But she needed something, anything to keep her mind occupied.\n\n\"Are you alright?\" Nic asked, kneeling down beside her.\n\n\"Yes,\" she answered, as she picked up a metal bar. \"Well actually, I guess I should tell you that my father died this morning.\"\n\nNic was taken aback. \"What?\"\n\n\"He's dead,\" she said, smashing one end of the metal bar into the wooden crib. It wouldn't fit, so she kept on banging it against the tan wood, trying to make it fit.\n\n\"Hey, hey,\" Nic said, grabbing the bar from her. \"Stop, okay. Just stop. Talk to me.\"\n\nVictoria snatched the piece back. \"I'm fine. I wasn't even close to him.\" She started pushing the metal bar into the wood again. \"Shit, why won't this fit?!\"\n\n\"Because it's the wrong piece. Now put the fucking bar down and look at me,\" Nic commanded. He knew she was hurting. His wife was extremely sensitive, especially in her condition. \n\nVictoria threw the bar down and stared at her husband. She knew it was coming. Those tears that were bubbling underneath the surface. Her bottom lip started to shake and she erupted into tears.\n\nNic immediately reached out to grab his wife. \"It's okay, baby,\" Nic whispered, wrapping her in his arms. He could feel her tears soaking the collar of his shirt.\n\n\"I\u2014I was so me\u2014mean to him the last time I sa\u2014saw him,\" Victoria whimpered. She couldn't feel lower if she tried. In the back of her mind, she had expected her father to recover. Not to die alone in a cold hospital room.\n\n\"You didn't have the best relationship with him, and that's not your fault. He pushed away many opportunities to know the most beautiful, interesting and kind woman in the world. You reached out to him that last time, and you didn't have to. He rejected your plan to mend your relationship and there wasn't anything else you could do, baby. Trust me, you did more than most people would have done.\"\n\nVictoria tried to calm her breaths, which were suddenly infused with hiccups. She closed her eyes and Nic slowly pushed her onto her back. He laid on his side, rubbing his hand over her full tummy.\n\n\"I probably shouldn't go to the funeral. But then again, if I don't show up, I'm not sure who else would, other than my mom. He didn't really have any friends, and didn't really want any.\"\n\nNic leaned over and kissed her. \"It's entirely up to you. I'll be by your side either way.\"\n\nVictoria smiled for the first time since her mother had delivered the devastating news. \"Didn't I use to not like you at one point?\"\n\nNic laughed. \"Oh, I heard 'I hate you, you bastard' a few times.\"\n\nOlivia called back the next day to give Victoria some details regarding the funeral. It would be in two days and they were just having a small private service at her mom's old church. A church Victoria hadn't been to since she was five and they had an Easter egg hunt. Her father didn't like church people. He always used to argue with her mother that those women were always in their business.\n\n\"They don't do anything except gossip. Too busy gossiping to pay attention to what's going on in their own homes,\" he argued. Her mom would just shake her head, and every now and then go to church without him.\n\nBut before they could fly back, Nic and Victoria visited her physician and got a second opinion on her flying so late in the pregnancy. Both were fine with it, but she had to get up and walk around every few hours, and it would be better if they broke up the flights into two separate connections.\n\nWhen Nic had their first class tickets, he called his mom and Jimmy to let them know he'd be coming into town for a few days because of Victoria's dad. Of course, Marianna was happy, but it was bittersweet, due to Victoria having to go through such a hard time.\n\nAfter the longest travel day in Nic's life, they finally made it back to the city. It only took two connection flights, plus a four hour nap for Victoria at a hotel, before they boarded their third plane, and finally near the end of a sleepless day for Nic. \n\nOnce they arrived in town, they stayed at Victoria's mom's apartment. Nic had wanted to just stay at a hotel, but her mother insisted they stay with her. But before Nic argued, he figured Olivia didn't want to be alone during this difficult time, so he relented.\n\nVictoria embraced her mom and the two cried for a bit, before Victoria said she was tired and headed to her mom's room to sleep. After Nic had tucked her in and kissed her, he went back out and sat down at the kitchen table. Olivia was sitting with a warm cup of tea in her hand. This was the first time they had ever been alone together. She turned to look at him.\n\n\"You know, I was scared when my husband got involved with your father,\" she said, finally taking a sip. \"I thought it was dangerous getting involved with the mob.\"\n\nNic slowly nodded but didn't say anything. He took in her appearance. She could definitely be a beautiful lady, but she looked as though she had lived a hard life. There was no fire behind her eyes, no energy in her words.",
        "\"And then years later, my daughter getting involved with the mo\u2014well, with you, frightened me even more. I was so scared that night she didn't come back from visiting your restaurant. And she refused to tell me what was going on...but a few weeks later, we started hearing some stuff. And it wasn't too nice,\" Olivia said, setting her cup aside.\n\nNic leaned back in his chair. \"I realize that how we met isn't the ideal story. But aside from not being as gentle and kind as I could have been, I don't regret doing what I did. It brought Victoria and me together, and I am forever changed because of that. And I love her more than anything in this world.\"\n\nOlivia stared at her handsome son in-law. \"Well, with that I have to agree. I'm getting a grandson, so that should say something.\" And after a second pause, she spoke again. \"I\u2014I never told James about the baby. I regret that. I mean, who knows...that could have been the changing factor in how he saw Victoria. I mean, who can hate a baby, you know?\"\n\nNic nodded again. \"That might make Victoria sad, so I think we should keep that to ourselves,\" he suggested.\n\n\"I agree,\" Olivia said, as she sipped the rest of her drink.\n\n****************\n\nThe next day, Victoria and her mom got dressed, while Nic made a few business calls. His company was expanding, but he hadn't expected it to expand so fast. Not that he was complaining...but fuck, they had several projects that he needed to review and construction sites he needed to visit. To try to keep up he had his team emailing him different files, with pictures that he would approve or disapprove. \n\n\"Are you sure this dress isn't too tight on me? It's a little more snug than I had hoped,\" Victoria asked, wobbling out of the back room and into the kitchen.\n\n\"You look beautiful, as always,\" Nic said, placing his phone on the table.\n\n\"You always say that.\"\n\n\"Because it's always true.\"\n\nVictoria stood there looking at him. \"Nic, I don't know if I can do this. I don't know if I want to remember him like that. I mean, not that I really have any better memories, but I...I don't know if I can go in there,\" she whispered.\n\nNic walked over to her and hugged her. \"Yes you can, and I'll be by your side every step of the way.\"\n\nVictoria nodded into his chest and the two walked out together.\n\nOlivia had gone to the church earlier that day, to make sure everything was set up. Nic held onto his wife's hand, as he drove them from the apartment to their destination. When they finally arrived, Nic parked the rental car on the busy street in front of the church. \n\n\"I doubt anyone even showed up,\" Victoria sighed. \n\n\"Well, you and your mom did, and wouldn't that be all that mattered to him?\" Nic asked, as he turned to his wife, about to give her a kiss. But he stopped when something caught his eye in the passenger side mirror.\n\nNic immediately straightened up and glanced in the rearview mirror. No, he wasn't seeing things. He noticed a gardener who had been lightly digging in the same spot, while he pressed a finger to his ear. And from his passenger window, he noticed a man in an ill fitted suit sitting on a bench reading a newspaper. The guy on the bench glanced at the gardener and then went back to his paper. A paper that he hadn't bothered to turn the page. \n\nFuck, it was finally happening. And of all the days. In the back of Nic's mind, he knew he shouldn't have returned to the city. He knew it was the wrong choice, but he wanted to be there for Victoria. He saw a car slowly pull past him and park in an empty spot about two cars in front of him.\n\nHe turned to Victoria.\n\n\"Baby, I need you to listen to me closely. In about thirty seconds, I'm going to be arrested. Call Jimmy and tell him to call my attorney, Reuben, okay?\"\n\nVictoria's heart started racing. \"What?!\" she said, as she quickly glanced around. She didn't see anyone. \"What are you talking about?!\"\n\n\"Listen, in my office at our house, there's an old dark blue design book from my college days. You'll see it. There's an address taped to the back of the book. It's to a specific bank, where I have a security deposit box. The combination is the day we buried my brother. Ask my mom. If for some reason you need to make a quick getaway, everything you'll ever need to disappear is in that box. New identities, contacts, money...everything, and I--\"\n\n\"What?! Nic, you're scaring me. I--,\" Victoria said, shaking.\n\n\"Victoria, listen! I only have a few seconds. Did you remember what I said?\"\n\nVictoria was trembling as tears started pouring over the brim of her eyes. \"Ye\u2014yes.\"\n\n\"Repeat it. Quickly,\" Nic said, looking around again. They were closing in on him.\n\n\"Call Ji\u2014Jimmy, tell him to call Reuben. Look at the back of the dark blue book, the combination is Bobby's funeral day,\" Victoria repeated, still shaking. She started to notice different people approaching them. She cried even harder.\n\n\"I love you,\" Nic said softly, turning her head toward him and staring into her tear streaked face.\n\n\"I love you, too,\" Victoria whispered, before a loud thunderous voice caused her to jump.\n\n\"Nicolas Andretti, put your hands up where we can see them and step out of the vehicle now!!\" \n\nNic knew that voice. Marsh. He hated Victoria was being dragged into this messy situation.\n\n\"Put your hands up, baby,\" Nic told Victoria, as he did the same. A young guy dressed in a cop uniform quickly opened his door. Nic noticed Marsh approaching. He slowly got out when several men rushed him.\n\nMarsh grabbed him, turned him around and pushed him toward the hood of the car.\n\n\"Try telling me I don't have jurisdiction now, motherfucker,\" Marsh whispered to him, while practically cutting off Nic's circulation with handcuffs, and pressing his face into the cold metal of the car. \n\n\"Don't you hurt him!\" Nic heard Victoria scream as she got out of the car. She tried to rush over to him, but a large cop grabbed her arm, almost causing her to lose her balance. Victoria tried to push the cop away until he pulled out handcuffs. As the cop roughly jerked his nine month pregnant wife back toward him...Nic saw red.\n\n\"Get your fucking hands off her!\" Nic yelled, pushing back from the car, as the back of his head accidentally went flying into Marsh's face, smashing his nose. Marsh immediately released him to grab his face, which was now bleeding. Three more cops instantly jumped on Nic, causing all of them to hit the pavement. The other officers approached the struggle, drawing their weapons on him.\n\nMarsh tilted his head back to stop the bleeding, while his men struggled with Nic. \"Just keep racking them up asshole. Assaulting a police officer and resisting arrest,\" Marsh said, as he walked over and knelt down beside Nic. \"Nicolas Andretti, you're under arrest for the murder of Donald Jenkins. You have the right to remain silent. Anything you say, can and will be used against you in the court of law.\"\n\nNic looked over at Victoria. She was shaking and crying, as a female police officer was now talking to her, obviously due to her delicate condition. Several people had stopped on the streets to stare at the spectacle. \n\n\"You have the right to an attorney during questioning. If you cannot afford an attorney, one will be appointed for you\u2014but we all know you can, you fucking prick. Do you understand these rights?\"\n\nVictoria couldn't speak, she couldn't move and she could barely think. Everything had happened so fast. One minute she was preparing herself to see her father for the last time, the next, guns were being drawn on her husband and he was being arrested for murder.\n\nAs soon as they finished reading Nic his rights, she watched as they roughly pulled him up from the ground and placed him the back of a police cruiser. Victoria watched the car carrying her husband all the way until it made a turn out of her sight.\n\nShe quickly pulled out her cell phone and dialed Jimmy. In a rush of tears and jumbled words, she tried to explain to Jimmy what happened and for him to call Reuben. Jimmy said he'd call Reuben and he was coming to pick her up.\n\n\"Okay,\" Victoria whispered, as she shakily shut her phone and waited, scared out of her mind.\n\n***************\n\nMarsh stepped into the interrogation room holding a cloth to his nose. He threw a few files down onto the table and stared at Nic.\n\n\"Nicolas Andretti...I finally got you, you fucker. And don't worry, I fucking own this precinct. There are no cameras rolling behind those mirrors. Just you and me. Together at last.\"\n\nNic's wrists were raw from the tight handcuffs, but he refused to complain about it. First, it wouldn't do any good, and second, he wouldn't give that asshole the satisfaction. He stared back at Marsh with a bored expression.\n\n\"So Nic, this is how we're going to do this. Believe it or not, I have an amazing proposition for you. How about you walk out of here today--no questions asked. You leave, go see your wife and fly back to California. How does that sound?\"\n\nNic didn't blink.\n\n\"Well, the powers that be don't think you're important anymore. After all, you've gone legit, so there's really no reason to harass you. Although I personally think it's fun. I've made it no secret that I despise you and everything you stand for.\"\n\nMarsh dabbed his nose again, to make sure there was no more blood leaking out.\n\n\"But, the way this works is...you are free to go. After all you're only one man, and the amount of money and manpower we've put behind you...well, some don't think is justified. BUT...if we could bring in a few more people, well, then we will be doing pretty damn well.\"\n\nNic continued to stare blankly at Marsh.\n\n\"So, I'll let you walk out of here today...if you roll over on a few people.\"\n\n\"Who?\" Nic asked, finally speaking.\n\n\"Glad you asked. Paul and Sonny Marcone, Jimmy, Raymond and Antonio. Eddie was on that list, but we can't seem to find him,\" Marsh said, narrowing his eyes at Nic. \"But those five, and you are free to go. Clean slate.\"\n\nNic leaned back in his chair. \"Sorry about your nose,\" he said, then smiled.\n\nMarsh shook his head incredulously. \"You fucking asshole, don't you realize what I'm offering? The moment that prick lawyer of yours shows up, this offer is off the table, you understand.\"\n\nNic sat in silence again.\n\n\"This isn't noble Nic, this is stupid. What the hell do you owe those other men, huh? You'll be easily convicted and go to prison, my friend. Where they rape and eat men like you for breakfast. Fuck, half of them are probably your friends, now that I think about it. Maybe you would be better off in there with that scum.\"\n\nNic yawned.\n\nMarsh slammed his fist down on the table. \"Are you really going to take a chance on going to prison and giving another man the ability to raise your child and fuck your wife? All because you didn't want to snitch on your friends? Because, trust me...a hot little number like Victoria, she's not going to stay single forever.\"\n\nNic didn't budge. \n\nMarsh hated this bastard. More than any other criminal he had ever tracked. Nic seemed to get the goods in life, while men like Marsh were left with a bitchy ex-wife, two mortgages, ungrateful kids and an ulcer. Yes, he definitely hated Nic. So right now, he was going to fuck with him.\n\nMarsh smiled at Nic. \"Too bad I didn't get a chance to put that sexy wife of yours in handcuffs. I would have enjoyed it. And who knows, I might even move in on Victoria. Make her promises that I'm doing all I can to get you out. When they are vulnerable like that, you never know what they might do. I can definitely think of a few things I would do with her.\"\n\nNic knew what Marsh was trying to do. Anything to get a rise out of him...to make him crack. But he had forgotten just how much of a calculating man Nic could be. He'd let Marsh have his fun for now...but he would definitely get that motherfucker back.\n\n\"You know, you shocked our whole department when you married her. I mean, come on man...not many men marry their charity case whore...who does that?\" Marsh laughed out loud. He pretended to wipe a tear away. \"Fuck her? Absolutely! Marry her? Absolutely not! Didn't your old man teach you any better?\"\n\nNic's face never changed, but inside he was boiling. He squeezed his hands together, trying to concentrate on the pain of the handcuffs. Anything to distract himself.\n\n\"Oh, that's right...your old man passed away years ago. And your loser brother. What was his name, Bobby?\"\n\nNic kept digging the handcuffs further and further into his skin. He knew they were probably bleeding by now.\n\n\"Yeah, I saw the pictures of what they did to him. Fuck, they made a mess, didn't they? But, you know what I say...serves the fucker right. He was nothing but a drug addict anyway, so who gives a shit if you only had half of his body to bury,\" Marsh laughed.\n\nNic continued to stare, but gave nothing away.\n\nMarsh sighed. \"I'm trying to help you, Nic. Trust me, I don't like giving you this offer, but it can save your sorry ass. Just take it. Give me some info on those five and we'll call it a day, okay?\"\n\nSuddenly the door flew open and Reuben rushed through. \"My client doesn't have to say a word to you, and anything you've said, either show me the tapes, and if they weren't rolling, then that will be brought up if this goes to trial.\" He walked over to Nic, and sat his briefcase on the table.\n\nMarsh stood up. \"He's all yours, counselor,\" he said before he walked out and slammed the door.\n\n***************\n\nVictoria was lying on Jimmy and Isabelle's bed. Marianna had been pacing back and forth in front of the bedroom door, asking her every few minutes if she was okay. \n\nWhen Victoria and Jimmy had first arrived at his house, she had screamed at him for not taking her to the police station. She wanted to see Nic, and see if he was okay. Isabelle and Jimmy had to physically hold her, to keep her from walking to the nearest bus station. Finally, Jimmy saying that Nic would be pissed at her for putting their child in jeopardy, worked. Victoria eased up and finally agreed to go into their house. \n\n\"Look Vicky, he's my best friend. Do you think I would let anything happen to him? Fuck no. I'll handle this, I swear,\" Jimmy had told her before he left.\n\nIsabelle tried to get her to eat, but Victoria didn't want any food. She only wanted Nic. She asked Isabelle if she would call her mother and explain what happened. Victoria would have done it, but she quickly became exhausted and eventually cried herself to sleep on their bed. \n\nA few hours later, she awoke to the touch of Marianna feeling her forehead. But then she closed her eyes again. She later heard her mother's voice as she and Marianna talking in the hallway. She tried to eavesdrop to see if they had any new information on Nic. \n\nAs she was trying to listen, the bedroom door opened wider and in walked Paige, Jimmy and Isabelle's youngest daughter. She was four years old and had wavy dark hair like her mother, but a round face like her father. She crawled onto the bed beside Victoria.\n\n\"You hurt?\" she asked in a tiny voice, as she looked at Victoria's stomach.\n\nVictoria was too tired to answer, but she nodded as a tear slid down the side of her face and into her hair.\n\n\"Where you hurt?\"\n\n\"My heart,\" Victoria croaked out. But when Paige's little brow furrowed as if she didn't understand, Victoria quickly said, \"And my head hurts.\"\n\n\"My mommy always kiss my boo boo's to make it better,\" Paige said, as she snuggled closer to Victoria. She leaned over and kissed her head. \"Now you feel better?\"\n\nVictoria smiled. \"Yes. Thank you.\"\n\nPaige smiled back at her, hopped off the bed and quickly sprinted out of the room. Victoria felt empty again. She rubbed her stomach and drifted back to sleep.\n\nIt was dark before Jimmy showed back up, and he brought with him Raymond and Antonio. Victoria didn't know why, but just seeing the three of them made her feel ten times better. At one point, she had been so frightened of them...well, not Antonio, but the other two...and now the sight of them was the only thing making her happy. She hugged Raymond and Antonio so tightly, she felt as though she couldn't let go.\n\nJimmy walked her to a back room and closed the door. \"Vicky, it doesn't look good.\" Victoria immediately felt nauseated. Jimmy hugged her and sat her down on the bed.\n\n\"Listen, Reuben is doing all that he can. Basically, inside sources told me that someone snitched on Nic, and will testify in court that they saw Nic murder a guy name Donald Jenkins three years ago. Which is pure bullshit, because the Russians killed him. But the cops have video footage placing Nic and Donald at the same place, almost at the same time, a few hours before Donald was killed.\"\n\n\"But you said Nic didn't do it?\" Victoria questioned, looking up at Jimmy.\n\n\"He didn't. But they have a witness who says that they saw him murder this guy. And that's all they need. That...and a jury to be convinced, which depending on the credibility of this witness and Nic's old occupation...it might not be good.\"\n\nVictoria just kept squeezing her hands together as she continued to listen to Jimmy.\n\n\"That asshole Marsh was trying everything he can to get Nic to crack. He even offered him a deal to let him go if he snitched.\"\n\nVictoria's ears perked up. Finally, something good could come out of this. \"On who?\"\n\n\"Me, Raymond and Antonio. Paul and Sonny's names were thrown in the deal also.\"\n\nVictoria knew the thought crossing her mind was selfish, especially since Jimmy had three little adorable girls, but she couldn't help but think about it. Her mind raced wondering what Nic would do, until Jimmy broke her out of her train of thought.\n\n\"Vicky...he's not going to turn me in. He would never do that, just like I would never do that to him. That's not even an option, you know?\" Jimmy quietly said.\n\nVictoria's heart sank, but she tried to ignore the bile rising in her throat. \"So, he's going to prison,\" Victoria whispered, still unable to believe it.\n\n\"Well, tomorrow will be his bail hearing...but Reuben said it's more than likely the judge will deny him bail, because he has lots of money and is a flight risk. And being accused of having ties with the mafia, they don't take that lightly.\"\n\n\"When can I see him?\"\n\n\"I'm not sure. I'll ask Reuben tomorrow, okay? But you need rest. You look tired. Have you eaten today?\"\n\n\"I've had plenty of rest, and I'm not hungry.\"\n\nJimmy grabbed her hand and led her out of the room.\n\nWhen they walked back into the main room, all eyes were on her and they all looked concerned. She plopped down on the sofa. Antonio came to sit beside her. He wrapped his arm around her shoulder and she leaned into him.\n\n\"It will be okay, Vicky,\" he whispered to her.\n\n*****************\n\nThe next morning, Victoria was awakened by Marianna bringing her in a large plate of food.\n\n\"Good morning, cara mia. You are eating today. Every bite,\" she demanded, as she sat at the edge of the bed, watching Victoria like a hawk.\n\nVictoria didn't feel like eating, but she started stuffing the food in her mouth just to please Marianna.\n\n\"How are you able to stay so calm?\" Victoria asked, pausing in between bites.\n\nMarianna thought about it for a moment. \"Because I can't help my son right now. All I can do is pray for him, but there's nothing I can help Reuben or Jimmy with. What I can do for him is watch over you and his baby growing inside you. Those are the things I can do, and I'm going to do them, because I love him, I love you and my grandson. Now eat.\"\n\nVictoria ate in silence as she took in Marianna's words. Her mother couldn't stay, because she had work, and had already taken two days off for the funeral. But she said she would stop by afterward.\n\nWhen Victoria was done eating, she walked to the bathroom to relieve herself, but before she sat down on the toilet, she felt a major cramp. She grabbed the underside of her belly and rubbed. But then she felt it again. What the hell?",
        "She grabbed ahold of the sink before she felt a gush of liquid pour out from underneath her dress. Holy shit!\n\nShe stared down frantically at the water running down her legs. \"Oh, God...no, no, no, no, please,\" she whispered, as she slowly opened the bathroom door. But no matter how much she prayed, she knew her water had broken.\n\n\"Marianna,\" Victoria weakly shouted. \"I need to go to the hospital.\"\n\nMarianna came around the corner, \"Hey, what did you\u2014oh my God!\" She rushed over to her and called for Isabelle. Antonio had been asleep on the couch as the women rushed Victoria to the door. He immediately jumped up and grabbed his keys. The three of them helped her into the back seat. Marianna got in the back with Victoria and Antonio and Isabelle sat up front.\n\nThey reached the hospital within a few minutes and Victoria was escorted to a room. The nurses came in to examine and prep her. \n\nVictoria was freaking out. Her life was about to be changed forever, and Nic was nowhere around. She kept pleading to Marianna that the baby couldn't come right now. This wasn't even her physician she had been seeing over the past nine months. This was all so wrong.\n\n\"Whether you want him to or not, Victoria...he's coming. You have to focus on that.\"\n\nVictoria tried her hardest to listen to the nurses and the doctor, but she started crying. It wasn't supposed to be like this. But then the crying was no longer about Nic...it quickly became about the intense contractions she was having. They started coming faster and harder.\n\nShe vaguely remembered her doctor talking about her being almost fully dilated. She felt Marianna grab her hand. She looked up into the warm blue eyes. Blue eyes similar to Nic's, and in a way, that calmed her down.\n\nAfter a few more moments, she was told to start pushing. She did, but every push started burning. \"Aaah!!\" Victoria screamed, as she leaned back against the bed. She felt like she was being ripped in two. Nic would have made this all better. He always knew what to do to make everything okay. Her heart felt like it was breaking...among other things. The pain brought her mind back to the task at hand.\n\n\"Victoria, we need you to breathe and push, okay?\" the doctor said.\n\n\"I can't, I can't,\" she yelled back. \"It hurts too much, fuck!\"\n\n\"Squeeze my hand,\" Marianna suggested.\n\n\"Yes, you can. The more you push, the sooner the pain will be over,\" the doctor calmly responded.\n\nVictoria closed her eyes and raised up, pushing harder, despite the intense pain she was feeling. She felt as though the veins in her forehead were popping.\n\nOn the final push, she heard the doctor say, \"That's it, we have him,\" and Victoria fell back. She opened her eyes and saw to the side, two nurses standing over the baby. Their baby. Sebastian. She could see his little pale arms flailing as he cried. And in that moment, everything seemed to stop for Victoria.\n\nIt's as if everyone in the room had frozen, except for her son. Any pain that she was feeling subsided as four swinging appendages held her attention. At that moment, nothing else mattered.\n\nOnce the nurses were done, they brought him over to her. Victoria held her breath in anticipation as he was gently placed in her arms. Oh. My. God.\n\nHer son had beautiful, shiny black curls that were sparse, but enough to lightly cover his head in perfect little waves. And the cutest, tiniest round nose and pink lips she had ever seen. He opened his eyes for a second to look at her, then closed them back and went to sleep.\n\nVictoria was stunned. She couldn't take her eyes off him. He was absolutely perfect. In every way, shape and form. Perfect. There were no other words to describe him or this moment.\n\n\"Oh, I love you,\" she whispered to him, kissing him for the first time.\n\nVictoria looked up at Marianna. She had tears in her eyes, and she also seemed to be stupefied by the presence of this tiny little being. A product of her and Nic. Nic...\n\n****************\n\nNic sat in his cell, staring at the wall. He wanted to know how Victoria was doing. He had thought about her during his bail hearing earlier that morning. He wasn't paying close attention, because Reuben had already said he would be denied...which he was.\n\nHe hated that his wife was having to go through this. She was pregnant and already dealing with her father's funeral, now this. He wanted so badly to talk to her.\n\nNic was deep in thought when Marsh walked up to his cell. He decided he would ignore the fucker.\n\n\"Well, well, I should bring you a cigar. Congratulations. One of my officers who was watching your wife, confirmed that she just gave birth to a healthy baby boy.\"\n\nNic's head snapped toward Marsh as he narrowed his eyes at him. Was he fucking kidding?\n\n\"Don't believe me? Here are some pics he took of them going in the hospital,\" Marsh said, sliding photographs underneath the bars. \"Too bad you weren't there to witness it,\" Marsh smiled in a smug voice, as he turned to walk away.\n\nNic's heart started beating rapidly. That asshole had to be lying. He slowly got up and walked over to pick up the photos. He flipped through them. His hands started to shake when he saw a picture of her being put in the backseat of Antonio's car and pictures of them arriving at the hospital and his mom escorting Victoria inside. Nic suddenly couldn't breathe. He dropped the photos to the ground as if they electrocuted him. \n\nNic staggered backwards until his calves touched his cot, and then he slowly sat down. He had missed his son being born. He hadn't been away from him more than a few hours since he was conceived...and on the most important day, because of his past lifestyle and FUCKING MARSH, he had missed it.\n\nNic considered himself a sane and rational man. And under any other circumstances, he would have found a cool place in his mind...some place he could go to make the rational next step. It was that process that usually allowed him to win. It was one of the reasons he was so successful. But at this moment...no such place existed. All he felt was an intense firestorm coursing through his skin, his blood...his entire body. \n\nHe fucking lost it. \n\n\"GODDAMN IT!!! Motherfucker!!!\" Nic yelled, as he slammed his cot into anything that could break over and over again. Everything was a blur, but he refused to stop until the flames inside him quelled.\n\nHe never heard anyone behind him and he never heard his cell opening up. All he heard was Marsh's words running over and over in his head, torturing him since there wasn't a fucking thing he could do inside here. \n\n\"I'm gonna fucking KILL you!! You're a fucking dead man!\" he shouted, as several guards tackled him to the ground. He struggled, pushing two of them off of him but they eventually pinned him down. By the time they had the cuffs on him, he was completely spent. Physically, mentally, but most of all emotionally--wondering when this hell would end.\n\n*************\n\nLater that night, Victoria woke up in the hospital bed. She glanced over to the side, and saw Isabelle reading a magazine. She glanced up at Victoria when she heard her stir.\n\n\"Hey there,\" Isabelle said.\n\n\"Hey,\" Victoria croaked out. She glanced around the room. \"Where's Sebastian?\" She sat up quickly...a little too quickly, and she felt a slight pain.\n\n\"He's in the nursery. Don't worry, your mom and Marianna haven't let him out of their sight.\"\n\nVictoria sighed. \"I wish Nic were here,\" she admitted. \"He doesn't even know.\"\n\nIsabelle placed the magazine on the table and went to sit down on the hospital bed. \"Actually, Vicky, he does.\"\n\n\"What? Did Jimmy tell him?\"\n\nIsabelle exhaled. \"Unfortunately, no. That detective guy told him. It wasn't pretty from what Jimmy told me.\"\n\n\"What?!\"\n\n\"Well, Jimmy was on his way to the jail to tell Nic, but when he got there, they said that he couldn't have any visitors, and they had him in another holding cell. Jimmy waited for hours until Reuben got there, met with Nic and came back out to explain what happened. Reuben said that Nic was, well...he was devastated.\"\n\nVictoria leaned back in the bed. She barely had a second to cover her face before a wave of tears gushed out. She hated feeling so helpless. When her husband needed her the most, there wasn't a damn thing she could do about it. When Mr. Parker had harassed her and threatened to kick her family out, Nic had come to save the day. When she was abducted and held for ransom, Nic had risked his life to save her. And now when he was the helpless one...all she could do was fucking cry. How pathetic.\n\n\"Oh, honey, I didn't say that to make you cry. I just thought you'd want to know what happened today,\" Isabelle said, hugging a distraught Victoria. \"It will be okay.\"\n\nVictoria wished like hell she could believe that. But there was a very real chance that her husband could be going to prison for a long time.\n\nIsabelle pulled away and handed her a box of tissue. Victoria wiped her tears and her nose, while she gasped for air.\n\n\"Hey, I know what will make you feel better,\" Isabelle smiled, as she walked out of the door.\n\nVictoria stared up at the ceiling. This was officially the happiest and saddest day of her life. But before she could ponder on that any longer, her door opened back up and in walked her mother, carrying Sebastian, with Marianna and Isabelle following closely behind. They were all smiling at her.\n\n\"Guess who is hungry? Mio nipote,\" Marianna said, with a huge grin across her face.\n\nVictoria had completely forgotten about this part of motherhood. She felt a little uncomfortable with so many eyes staring at her, but she tried to grin and bear it. Her mother handed her the baby. He was awake and staring, as his cute little soft arms moved in unsteady patterns. His little feet were kicking underneath the thin blanket. She slid the left side of her shirt down, and held her son to her breast. She looked up at the three women watching over her.\n\n\"Am I doing it right?\" Victoria asked.\n\n\"Si,\" Marianna said, as the other two women nodded in agreement.\n\nHere goes, little one, Victoria thought, as she pressed him further to her bosom. And just like that...he latched on. That was easy. At least something on this day had been easy.\n\nAlthough Victoria had researched a million things from the moment she found out she was pregnant, she learned more in the few hours after her first feeding from her mom, Marianna and Isabelle than her entire nine months worth of research combined. Go figure.\n\nAnd poor Antonio. All of the women had pretty much forgotten that he had been waiting in the maternity waiting room since they had first arrived at the hospital. When he finally came into the room, they passed the baby to him, and it was the funniest thing. He looked so uncomfortable and unnatural, that it gave Victoria a good laugh. The first laugh she'd had in what seemed like a long time.\n\n**************\n\nAntonio had met Jimmy at the police station, while he waited on new information regarding Nic's case. But Antonio had to get out of there. Cops made him paranoid. He wasn't sure if it's because he smoked pot, or not, but they made him nervous.\n\nHe quickly stepped out and walked around to the back of the station. He pulled out his pack of cigarettes and lit one. He closed his eyes and inhaled the sweet smoke which seemed to calm his nerves. He was about to take another drag, when he heard a woman's voice. He glanced to the side and saw a tall blonde stalking out. But this wasn't just any tall blonde. This was Nic's tall blonde. Nic's ex-wife, Amber. And she was talking to that snake, Marsh. What the fuck?!\n\nAntonio almost choked, as he coughed and sputtered. The two turned their attention toward him, but not before he made it back around the corner just in time. Oh, this was all so fucked up! So she was the snitch?!\n\nAntonio ran back inside. \"Jimmy, I need to speak with you now,\" he said.\n\nJimmy glanced at him. Antonio looked as though he had seen a ghost. \"What?\"\n\n\"In your car,\" Antonio said, as he turned and walked out of the station.\n\nJimmy glared at him, as if to say this better be important, and followed him out.\n\nOnce they were both inside the car, Antonio turned to Jimmy. \"I know who they have as a witness.\"\n\n\"Who?\"\n\n\"Amber.\"\n\nJimmy sat there staring at Antonio. \"How do you know?\"\n\n\"I saw her a few minutes ago, leaving through the back way and talking to that detective,\" Antonio excitedly reported.\n\nJimmy nodded. That was all he needed. \"Thanks, kid,\" he said, as he got out and walked back into the police station.\n\n*************\n\n\"Well Nic, looks like you really fucked up yesterday. Threatening to kill a detective just doing his duty? Why, what did I ever do to deserve that,\" Marsh taunted, leaning against his cell. And as always, Reuben was there with Nic.\n\n\"I don't know what you're talking about,\" Nic answered.\n\n\"Sure. Several guards heard you yell that you wanted to kill me.\"\n\n\"No they didn't.\"\n\nMarsh stared at Nic skeptically. \"I never took you for a lying man. Cold-hearted killer, but not a liar. They heard you, asshole.\"\n\n\"Yeah, they heard me threaten to kill someone, and it was my attorney. He's been falling down on the job, haven't you noticed,\" Nic dead-panned.\n\n\"Yep, and Nic already apologized to me for that and...I'm not pressing charges, just so you know. So, no harm done,\" Reuben smiled.\n\nMarsh quickly glanced back and forth between the two men. Damn it, they were good! Fuck, he was hoping that threat would be the final nail in the coffin. Marsh exhaled and walked away from Nic's cell.\n\nLater that night, Amber was leaving one of her favorite little hot spots. She was drunk off her ass, but refused to catch a cab home. So, she drove, crossing a few lines here and there, but she managed to make it back to her apartment just fine, stumbling out of the car.\n\nWhen she entered her swanky apartment, she didn't bother turning on the lights, as she started removing her boots and walking very unsteadily toward her bedroom. Fuck, it was already three in the morning, and that annoying twit, Detective Marsh wanted her to come back down to the station again in the morning. Although this was the perfect revenge, it was taking a lot out of her. She was depending on Marsh to keep her identity hidden, until the day she had to testify. Then she would turn on the tears and recite her script to the jury and judge. \"Your honor, when we were married, I was scared all of the time that he would turn back into a monster. He hurt people. Good innocent people, and all I could do was stand back and watch, too afraid that if I told, he would hurt me too. But I'm tired of living a lie!\"\n\nHer mind drifted to Nic. She would never admit it out loud, but she missed him. And not in a romantic way, although the sex...she really did miss, but she missed walking into a room knowing he was usually the most dangerous man in there. That had really turned her on the first night she met him. She had been dancing her ass off at his club. She had heard of him and his reputation, but she had never had the chance to meet him. And that night her friend pointed him out as he talked to the DJ. He had two guys beside him, who looked more like bodyguards. It took her off guard how handsome he was. \n\nSo, she and her friend devised a plan. They snuck up to the VIP section, and she bribed the guard into letting her in. Once she was up there, she saw him sitting in a dark corner, talking to a few people. She knew her short dress and long legs would catch his attention. She hiked up her skirt even more and walked right past him, pretending to ignore the group. But out of the corner of her eye, she saw them all looking...including him. And from that night, her plan fell into place. She had to cut several women down to size, who were his regular...well, 'other women', but Amber put them in their place. She knew he still messed around on her, but as long as they all knew she was the top, and they were just for his quick amusement, then she didn't mind. The houses, cars, clothes, jewelry and vacations were more than enough to squelch any feelings of jealousy.\n\nEven after they had separated, she still knew that she was the main woman in his life. His wife! Until that girl. She didn't know how, or why she was in Nic's life. At first, she thought she was like the others who would do anything for him, just to have him acknowledge them. But this girl seemed different. She actually seemed like she didn't like him, and that is the part that Amber didn't understand. \n\nBut Amber had trashed her bedroom when she had found out he had gotten married and had moved out of town. With a baby on the way?! Nic Andretti?? Married with a kid? What the hell did that girl do to him? It just wasn't right. What did she have that Amber didn't? It would never work. Nic wasn't the domestic type. \n\nAmber knew of the detective who had been giving Nic a hard time for years. She had also thought he was annoying, but when he called to tell her that Nic's new wife...oh, those words burned in her mind. New wife... Anyway, his new wife's father died, so Nic would more than likely be coming into town, and if she snitched on Nic, and agreed to testify in an open court, then Marsh could for sure put Nic away for a long time. Revenge is definitely sweet. And his wife would be without a husband and have to raise the baby by herself. Stupid whore, Amber thought, right as she tripped over something, and fell to the floor. She laughed at herself, until she noticed what she had tripped over was a black leather shoe. A man's shoe...that was still connected to a man's leg...and body. She followed the path up until she saw the stranger sitting on her couch in the dark. Only, it wasn't a stranger.\n\n\"Hiya, Amber,\" his familiar voice said, right before a black bag went over her head.\n\n***************\n\n\"No fucking way!!\" Marsh screamed. This was not fucking happening. How could the bad triumph over good? Was there no justice in the world?! Was he the only sane person alive that knew Nic Andretti was nothing but bad news?!\n\n\"Yep. Apparently Mrs. Andretti...I mean, well, the ex-wife...she will no longer testify and she says she was mistaken. She said her ex-husband isn't involved in any type of underground crime. She was just a jealous ex-wife,\" the Police Chief told him.\n\n\"But sir, can't you see someone got to her? Jesus, we're just going to let him walk? Just like that?!\"\n\n\"Yeah we are, because the DA said there's no case and he's dropped the charges. Nic doesn't even live here anymore and from what you've told me, he's legit, so quit wasting valuable man hours on a dead-end case. You copy that?\"\n\n\"But--\"\n\n\"Jesus fucking Christ, Inspector Javert! Give it a rest unless you plan on drowning yourself too.\"\n\nMarsh ignored the reference to Les Miserables. He could hardly think straight and wanted to throw up. He stared down at the ground. How had that bastard managed to pull this? How did he know it was Amber? How...? That was all Marsh could repeat over and over in his head.\n\nThen he perked up for his last attempt at fucking Nic Andretti over. \"Could I still hold him on charges of resisting arrest and assaulting a police officer?\"\n\nThe Police Chief turned to look at him. \"Are you kidding? Get the fuck out of my office and start working on people who are actually STILL in the underground crime circuit...you know, the bad guys.\" And with that, the Chief glanced back down at his desk, and shuffled through some papers.\n\nMarsh shook his head and walked out of his superior's office. He slowly walked over to his desk and stared down at years and years of files, paperwork and pictures of Nicolas Andretti IV. That prick had finally won. Marsh slung everything on top of his desk to the floor in a fit of rage. Damn that son of a bitch!!\n\n*************\n\nNic slid on his watch, and grabbed his wallet before he walked out of the jail. A place he never wanted to see the inside of again. Although he knew Reuben was the best at what he did, his freedom was because of Jimmy. ",
        "Jimmy had always come through for Nic, ever since they were little kids, and now was no different. Nic saw his best friend and Raymond waiting in the SUV. He walked over and hopped in the front passenger seat.\n\n\"Good to have you back,\" Jimmy stated, as he pulled onto the street.\n\nNic turned to him. \"Do I even want to know?\"\n\nJimmy kept his eyes on the road. \"Well, Amber had a change of heart. I guess being sedated and waking up in a cold morgue drawer can do that to you. I think she thought because you're out of the business, that you've changed your ways\u2014gone a little soft, and she wouldn't be in trouble for being disloyal. Well, I told her...as I opened up the drawer every now and then, that just because you were out of the biz, didn't mean I was. So, I said that this time I would be friendly and let her out if she promised to play nice. Next time...I told her I might be forgetful.\"\n\nNic faced the windshield. He tried to feel sorry for Amber...but he couldn't. Not one ounce of remorse. She was a vindictive bitch, and she was lucky that it had been Jimmy who 'persuaded' her to play nice. The old Nic...maybe even the new Nic, would have dangled her ass upside down from a building until she got the message...and still, the thought of letting her drop eased his mind. \n\n\"And by the way,\" Jimmy said, in afterthought, \"Detective Marsh's car was blown up, and he was beat up and mugged. Crazy world we live in.\"\n\n\"When did this happen?\" Nic asked.\n\n\"Oh, it hasn't happened yet. I'm psychic, didn't you know?\" he smiled over at Nic.\n\nNic nodded. Karma was certainly a bitch.\n\nNic's palms started sweating the closer and closer they got to Jimmy's house. He had asked everyone not to tell Victoria that he had been released. He wanted to surprise her. \n\nBut at the moment, he could hardly swallow or keep a single coherent thought in his head. He would be seeing his son, Sebastian, for the first time. And he had to laugh at the fact that he didn't want to disappoint him. Although Sebastian was less than three days old, the thought of not being the father he wanted to be, frightened the shit out of Nic. He had already missed one important event, and he swore to himself that he wouldn't miss another.\n\nWhen they pulled up to Jimmy and Isabelle's house, Nic exhaled, and wiped his palms over his pants.\n\nJimmy patted him on the back. \"You'll be fine. I'm telling you, you have a handsome kid, man.\" Nic nodded and got out of the car.\n\nWhen Nic walked in, several people quietly greeted him, including his mom, who couldn't stop hugging him. Everyone was trying really hard to keep quiet, so they wouldn't alarm Victoria who was in the back room with Sebastian. Nic removed his coat and followed his mom towards the back, his heart beating a hundred miles a minute.\n\nNic exhaled again and gently pushed the door to the master bedroom open and walked inside. He saw Victoria sitting on a small sofa, nursing their baby. She quickly glanced in his direction, and then back down at the baby. But obviously something registered in her head that this wasn't the regular perons checking in on her. She immediately did a double-take, her eyes growing wider, as she tried to stand. \"Nic!\" she squealed, but then quieted when he put his finger to his mouth. He could see that Sebastian was bundled up and at peace, and he didn't want to disturb him.\n\nVictoria quieted, but was smiling from ear to ear. Her glassy eyes housed tears that were at the brink of spilling over and down her face at any moment. Nic walked over to the sofa and kneeled down in front of her. He finally broke eye contact with her to stare down at their son. Sebastian's eyes were closed, but his little jaws flexed in and out drinking as much milk as he could. \n\nIf someone offered to pay Nic a billion dollars to explain how he felt at that moment, he would have lost out, because he honestly had no words. Nothing came to his mind, as he sat watching in awe at this beautiful moment. He looked back up at Victoria. She was staring at him, and then quickly wiped a tear away with her free hand.\n\n\"Hey baby,\" he whispered, as he leaned over his son and kissed his wife. \n\n\"Hey,\" she whispered back, returning the kiss, and feeling empty again when he had to pull away. She could have continued kissing him for the rest of the afternoon.\n\nAfter a few more tugs, Victoria felt Sebastian let go, and his little mouth opened. They both could see his tiny little pink gums as he fell back to sleep.\n\n\"Wanna hold him?\" Victoria asked.\n\nNic looked up at her. \"Um, sure. But I've never done this before, you know,\" Nic nervously said.\n\n\"I know, but you have to learn, right?\" Nic sat down beside her on the sofa, and Victoria smoothly passed a sleeping Sebastian to his father for the first time. \n\n\"Is this good?\" Nic whispered to her, his arms feeling like steel bands, although his son felt surprisingly light.\n\nVictoria giggled. She wasn't used to seeing Nic so unsure of himself. For the most part, he had been the most cocky, arrogant guy she had ever met. Now to see him looking to her for help, amused her. He was so cute when his guard was down.\n\n\"Yes, but just relax. You aren't going to hurt him,\" she said, sliding closer to the two men in her life.\n\nNic finally took a breath and relaxed. He gently pulled Sebastian away from his chest, so he could get a good look at him. His eyes roamed over every inch of his son's tiny fragile body. From his dark hair, to his cute nose, tiny feet and even his fingernails. Everything about his son was perfect. \n\nFunny, he had just met Sebastian less than ten minutes ago, and already Nic knew in an instant without thought that he would give up everything he had, including his life, for his son. That was the truest statement he'd thought in a long time.\n\nNic gently rubbed Sebastian's forehead and his soft, full cheeks. He lightly tapped his nose and then he bent down to kiss him. \"First time I ever kissed a boy,\" Nic joked. Victoria laughed and leaned over to kiss Sebastian as well. \n\nSebastian surprised both of his parents by suddenly waking, staring up at Nic. He gave a small yawn and continued to stare.\n\nNic's eyes widened. \"He has blue eyes,\" he whispered in surprise.\n\nVictoria looked down at Sebastian. \"Yeah, for now. There's no guarantee that they will stay that color, but who knows.\"\n\nAnd for a moment, it looked as though he smiled at them, before he closed his eyes, yawned again and went back to sleep. Both Nic and Victoria looked up, when they heard the door close. Nic chuckled. No doubt his ever-watchful mother looking in on them. But he was happy for her. This was something she had wanted for a long time.\n\n\"I hope Marianna hasn't driven you crazy,\" Nic said.\n\nVictoria smiled, \"No. She definitely smothers, but you know what...I haven't had that for a long time, so I welcomed it.\"\n\nNic continued to look at the little bundle in his arms. \"God, he's just so amazing. I can't believe we created this. We definitely have to do this again.\"\n\nVictoria scoffed. \"Slow down there, buddy. I'm still healing up down there, and you're talking about more? Um, nope...you don't get to mention more until a few years from now.\"\n\nWell, that would be up for debate, but for now, Nic would let her think she won. \n\n\"Whoa, whoa,\" Nic said, getting tense again. His son's face was contorting and turning red, as his legs started moving all around. He sucked in a few breaths of air before he belted out a strong cry. \"Oh, shi\u2014crap, what did I do wrong?\" Nic didn't know what to do, so he just handed Sebastian back to Victoria.\n\nShe stood up from the couch and walked him around. \n\nNic leaned back observing his wife. He watched her cute full hips sway back and forth, as she lightly bounced Sebastian. He couldn't think of a more beautiful sight. \n\nHow the hell did life bring him here? A little less than two years ago, he looked at people differently. In one glance at Victoria, he thought he knew exactly who she was. Someone who would never matter to him, and who was weak. Someone he could prey on. But Victoria sliced and diced that version of Nic Andretti to shreds, and amazingly she didn't do it by force. She didn't do it by being more cunning, or by any other sneaky methods. She accomplished a feat no other had, and she did it with love. Selfless, generous, unwavering love. \n\nHe remembered thinking that he had planned to teach her a lesson the first night they met, for trying to throw a temper tantrum in his restaurant. But boy, did he find out he was the one being schooled.\n\nHe had been such an asshole back then. Nic got up and walked over to Victoria. \"I'm so sorry I wasn't there for you, Victoria. I'll never forgive myself for that.\"\n\n\"There's nothing to forgive. I don't blame you for that, Nic,\" Victoria whispered back to him. \"All that matters to me is in this room right now.\"\n\nNic smiled down at his wife, before he captured her sweet lips. \"Ti amo, bella.\"\n\n\"I love you, too,\" Victoria whispered back.\n\n****************\n\nLife back in California had really changed. From the moment Sebastian was born, Victoria had been constantly surrounded by people, but now...the scariness of being a new mom started setting in. Luckily, Marianna had practically moved in with them, so she was a tremendous help. Especially on those days when Victoria cried herself to sleep from lack of sleep. \n\nAnd Nic was amazing. Even though he had to get up early in the morning for work, he took turns with her when Sebastian would wake up in the middle of the night. One night, she had woken up, and Nic was gone. She walked to her son's room, and Nic was leaning over his crib, just watching him.\n\nBut tonight was a different story. Both of them had been worn out, when Sebastian flexed his little lungs and belted out a cry.\n\n\"It's your turn, baby,\" Victoria mumbled, digging her head further into the warm comfort of her pillow.\n\n\"No, he's calling for you,\" Nic mumbled back.\n\n\"What?\"\n\n\"You can't tell the difference in his cries? This cry is for you, not me.\"\n\nVictoria raised up and stared down at her husband with one eye still shut. \"You are so full of shit.\"\n\n\"I have to get up in four hours...that trumps your card,\" Nic retorted, and turned over facing away from her.\n\nVictoria slid closer to Nic, and pushed him right out of the bed. She had to hold in a giggle, when she heard him hit the floor with a thud. \"Fuck,\" she heard him whisper.\n\n\"First off, you didn't carry an entire other person inside your body for nine months, and you damn sure didn't squeeze a watermelon through a hole the size of a lemon like I had to do...so that does, and will ALWAYS trump any card you throw my way. Now...I think your son is calling you,\" Victoria spat out, folding her arms across her chest.\n\nShe didn't hear anything for a few moments. Shit, maybe she pissed him off. She was just joking.\n\n\"Nic?\"\n\n\"It's actually comfortable down here. Can you hand me my pillow?\" he asked, yawning.\n\nBastard. Victoria grabbed his pillow and leaned over the bed to hit him with it, when he quickly grabbed her wrists and jerked her down on top of him. She shrieked as she slammed into his hard chest.\n\nNic hugged his wife tightly. \"See, I told you it was nice down here.\"\n\nVictoria couldn't quit laughing. She slowly rose up and straddled him, placing her hands on his chest.\n\n\"You could have hurt me,\" she said, looking down at him.\n\n\"Never,\" Nic whispered, as he raised up to kiss her tender lips. He placed his hand behind her neck, forcing himself deeper into her mouth. She moaned while his other hand slowly inched further up her thigh.\n\nThen her eyes widened as she pushed him away. \"Oh my God, we're awful parents,\" she said, as she hopped up from Nic, realizing that Sebastian was still crying his little head off.\n\n\"I'll get him,\" Nic said, grabbing ahold of her.\n\n\"No, I'm up now. I'll go. He's crying for me anyway, remember,\" Victoria spouted sarcastically as she pushed past Nic.\n\nNic beat her to the door, and quickly entered into his son's room, with Victoria laughing and cursing behind him. He walked over to his crib, and found his son staring up at him. His cries had turned into hiccups and little tears were drying on the side of his face.\n\nNic quickly picked him up and held him close. \"It's okay, daddy's here. Mean mommy tried to keep me away, but I'm here now,\" Nic said, looking over at Victoria as he kissed his son's cheek.\n\nShe rolled her eyes, but couldn't hide her smile. \"He's probably hungry, so mean mommy needs to feed him.\" Nic sat down beside her, and gently rubbed his son's tiny feet, watching in wonderment as Victoria fed him. \n\n***************\n\nIt was a lazy Saturday afternoon when Nic and Victoria received some disturbing news. Victoria had just finished up an online test from a local community college. It was much harder than she thought it would be. She had to be extremely disciplined to do online courses. She had thought they would be a breeze, but with the lack of attendance in class, they made up for in homework assignments, quizzes and tests that were almost every other day\u2014including weekends. \n\nBut Sebastian was such a good baby, which was a plus during this time. He either slept or just amused himself by staring at different things, while she did her work. He rarely cried anymore, which Victoria tried to attribute to the fact that she could anticipate his needs before he felt the need to cry. But she needed to give him a bath before she started on her next assignment.\n\n\"Nic?\" Victoria called out, as she walked into the living room. \"Nic,\" she said again, before she quieted. Nic was lying on the couch on his back, while Sebastian rested gently on his chest. The two of them looked so much alike, that she snickered, remembering a joke her mother had told her. Olivia had said that it's a good thing James was gone now to rest in peace, because he would have had a fit with that boy's complexion. But over time, Sebastian was getting a little bit darker in tone. Victoria didn't care what color he was, she just loved him more than anything. And what she was staring at now, was quite possibly the most beautiful thing she had ever seen.\n\nVictoria wasn't sure how long she lovingly admired her two boys, but she couldn't take her eyes away from them. Nic's eyes were closed and his chest was slowly rising up and down. And Sebastian's little face was turned to the side resting on his father's chest. His tiny little pink lips made an 'o' shape as he yawned, never once opening his eyes.\n\nAfter what seemed like forever, Victoria quietly backed out of the living room and went back into Nic's study to open up her last timed quiz. She glanced at the photo by his computer. It was a picture Isabelle had taken of her that first day in the hospital, with Sebastian in her hands. She personally hated the picture because she had just woken up, and with all the pushing, sweating and lack of makeup ...she swore she looked hideous. But Nic wouldn't let her change it. He said it was his favorite picture.\n\nBefore the test, she decided to browse really quickly online, when suddenly she gasped and then screamed, \"Oh my God! Oh no! No!\" She quickly read over the story, and it appeared to be true. Her first thought was of Paul. Her heart went out to him.\n\nNic jumped when he heard Victoria's scream. He quickly stood up, holding Sebastian close to his body as he walked into his study.\n\n\"Baby, what's wrong?\"\n\n\"Sonny...he's dead,\" she cried, still half in shock.\n\nNic sighed and kissed the baby's head. \"I know,\" he said as he walked over and sat down on the chair opposite of her. \n\n\"You knew?\" Victoria questioned, wiping her nose. \"How did you know? Why didn't you tell me?\"\n\n\"Jimmy informed me a few hours ago. I didn't want to upset you before you took your test,\" Nic explained, wiping his wife's tears away with his fingers.\n\n\"That article said that there weren't any suspects yet. Do you know who did it?\" Victoria asked.\n\n\"No. But I'm sure it will come out eventually.\"\n\nVictoria covered her face and groaned. But then she realized she needed to call Paul. She quickly stood and grabbed Nic's office phone.\n\n\"I have to call Paul. I know this is just...just killing him,\" Victoria sobbed, dialing Paul's house. She and Sonny had never really gotten along, but she knew how much Sonny meant to him. It was the only family Paul had left.\n\n\"Hello?\" a voice answered.\n\n\"Hi. May I speak to Mr. Marcone?\"\n\n\"May I ask who's calling?\"\n\n\"Victoria Andretti.\"\n\n\"One moment.\"\n\nVictoria stared over at Nic, who was looking back at her.\n\n\"Hello Victoria,\" Paul said, as his voice came through the receiver in his usual soft manner. Although she could tell immediately that he sounded tired.\n\nShe quickly sniffed, and then answered. \"Hi, Paul. Oh, I'm so sorry. I just heard.\"\n\n\"Thank you. It's not really been a good day for me. I still can't really believe it, but...\" he started, but never really finished.\n\n\"If there's anything I can do for you, please let me know,\" Victoria stated. Nic motioned for her to hand him the phone. \"Paul, hold on one second, Nic wants to speak with you.\"\n\nNic handed Victoria the baby, as he grabbed the phone in return. \n\n\"Paul?\" Nic asked, as he started walking towards the kitchen and then out into the backyard.\n\n\"I'm here. How are you, Nic?\" \n\n\"I'm okay. I just wanted to let you know that Sonny and I didn't always see eye to eye, as you know, but I'm truly sorry for your loss. And if there's anything I can do...people I can put you in contact with regarding who's responsible for this, just let me know.\"\n\n\"Thanks Nic. That means a lot...and I might have to call you on that favor. They...he was, um...bad things were done to his body. Not much to really identify. I stood there staring at this slab of burnt flesh...not believing in a million years that this was my son.\"\n\nNic immediately felt his pain. That was one of the worst things he had ever had to go through in his life. And even though Sonny had been a pain in the ass most of his life, Paul didn't deserve this. He was a well respected, old school type of man in their game, and whoever did this, would pay.\n\n\"I'm really sorry. I'll ask around and see what I can find out.\"\n\n\"Thank you. I appreciated it, Nic. If you find out anything, give me another call. Tell Victoria I said thanks, and I'll talk to both of you later.\" Paul then hung up. He sat behind his wide desk, staring over at Renny.\n\n\"Sir, we're not sure yet, but some of our sources are saying that it was the Russians. That Sonny had gotten mixed up with them, and Anzor put a hit out on him,\" Renny said.\n\nPaul sat there thinking about this new information. He had felt deep down that it had been the Russians. That Sonny had been in trouble, and Paul wanted to kick himself for not saying something to his son when he had the chance. He knew it wasn't like Sonny to up and fly to Amsterdam without letting him know. He knew something wasn't right with that story\u2014but he said nothing, other than fuss at him for being irresponsible. And now his son was dead, and he could have prevented it.\n\nPaul swiveled his chair around so that he was facing his window. He thought about Sonny as a young boy. He had been a funny kid. Always smiling and telling jokes. He kept his mother laughing, even on her deathbed. He remembered the day his wife took her last breath. Paul had thought he was dying right along with her. He wanted nothing more than to curl up on the bed, and close his eyes too. But it was his son hugging him from behind that brought his mind back, and he realized he still had family. His son, and he had sworn to his wife that he would protect him...and he failed. But one thing he would not fail at, was avenging his son's murder.\n\n\"Renny,\" Paul said, still staring out of the window, \"let all of our guys know that we are on the hunt for the Russians, and to bring in Anzor, preferably alive...so I can deal with him myself.\"",
        "Renny nodded and walked out.\n\n****************\n\nHis hands were shaking, and he needed to slow down his breathing. Even though he knew it wasn't there, he still felt there was blood on his hands. He quickly wiped his palms across his jeans-covered thighs. Fuck, this was spinning way out of control.\n\nHe could bullshit and charm his way out of almost every situation. It was a gift he had. One that his father never fully appreciated. His old man wanted him to be more like him, old school. Or like that fucker, Nic. But that wasn't Sonny.\n\nAnd until tonight, he had never taken another human being's life. Until tonight, he thought over in his head again. Fuck!\n\nSonny knew he shouldn't have gotten involved with the Russians. He had never played at that level before. That was more Nic's territory, because where Sonny liked to bullshit, charm and make an idle threat every now and then, Nic would just kill you. And that's exactly the same philosophy that the Russians had adopted. And Anzor...that Russian prick, believed that Sonny had stolen from him. But he hadn't! Anzor had sent some of his men after him, but they tagged the wrong guy. Some poor local criminal who was in the wrong place at the wrong time. When the body was found, or what was left of the unlucky bastard, Sonny heard on the street about it, and speculation that it might be his body. That gave him an idea. He left an anonymous tip with the police that it was his body, then he hurriedly left town.\n\nSonny knew further investigation would eventually reveal to everyone that the body wasn't his, but he thought he would have at least a few days to get his shit together before he was a target again. He was wrong.\n\nSonny had already been traveling down south to escape this whole fiasco, when he felt like he was being followed. On the second day of his trip, the person made a move on him and Sonny panicked and stabbed the bastard. Only that bastard turned out to be Anzor's son, Viktor. Of all the fucking luck! Apparently Viktor hadn't believed the police reports, and decided to go after Sonny alone so he could prove something to his old man. Dumb fuck.\n\nViktor had moved in on him late that night, and tried shooting him. Sonny had managed to get the gun away from him, but then that asshole pulled out a knife. And this wasn't just any knife...that fucker had to be at least close to a foot long. Viktor was certainly larger than Sonny, but he wasn't as quick. Sonny managed to struggle with him, and quickly take him off guard by clipping him in his thick neck, a trick his father had shown him, and stealing the knife away. But it only stalled Viktor for a second. He grabbed Sonny by the neck, and started strangling him, before Sonny stuck the knife in his stomach. He had to stab him four times before that bastard stopped trying to choke him, and turned him loose. \n\nSonny stared down at the body in disbelief. Viktor's cold blue eyes still looking up at him, but with no life behind them. Sonny couldn't think straight. He tried to drag the body over to a swamp near the library where the scene had unfolded, but halfway from the back of the building to the murky waters, SHE walked out.\n\nImmediately the young black woman froze. She stared at him, then stared at the body. Her eyes widened. Before Sonny could get 'wait' out of his mouth, she screamed and turned to run back in the building.\n\nSonny picked up the gun and immediately sprinted after her. She tried to lock the door, but he got there just in time, forcing it back open. \n\n****************\n\nA few weeks had passed, and life was finally getting back to normal for Nic and Victoria. Not that their relationship had ever been normal, but Sebastian brought that balance to their lives. Victoria couldn't stand to be away from him, even for a few hours. But they had agreed to go to Jackson's house for a family and friends get-together. Jackson seemed to be the center of a very large, unique group of people, and they all seemed to have so much respect for him. \n\nVictoria wasn't so sure that Nic would get along with Jackson's son in-law, Brandon. Upon first impression he seemed extremely blunt, and dropped the f-word...a lot. But much to Victoria's surprise, he and Nic had already made plans to attend a Lakers game. And somehow, Brandon was able to make Nic laugh, which was not an easy feat. Nic rarely ever cracked a smile in front of strangers. And Jackson's daughter, Sienna, was really beautiful...and really young...but she seemed to have an amazing head on her shoulders. Very bright mature woman, who amused Victoria with the story of how she and her husband met. Victoria wasn't quite so ready to reciprocate with that kind of information...since she and Nic definitely didn't share the average fairytale meeting. But maybe one day, she would let Sienna in on that, since their story was no walk in the park either.\n\nNic and Victoria didn't want to bombard them all with a new baby, so they left Sebastian at home with Marianna, who was more than happy to take over. She had been visiting them, and was almost a permanent fixture in their home. So much so, that she basically spent every other month with them. She no longer had to pack for flights, since Nic had bought her a new wardrobe for her room at their house. And as overbearing as Marianna could be, Victoria loved having her there.\n\nAfter they finally made it home from Jackson's house, Victoria was so sleepy, that Nic had to carry her upstairs to their room, kissing her ever so often along the way. But she wanted to check in on the baby first, so they walked into Sebastian's room and glanced in his crib.\n\nNeither one of them could still believe that he existed. Nic stared down at him. Even though their son tended to look a little more like him, he prayed that Sebastian would have Victoria's big heart. Her optimism and outlook on the world. Nic had thought of what he would say the day his son was a man and came to him asking about how his and Victoria's relationship started. Nic thought about what he would say. And he decided that the truth was the best. To admit that he wasn't always a good person, but Victoria changed that. She decided to ignore the monster and look deeper to find the other person who had been hidden for years. And he hoped that answer would be enough. Only time would tell.\n\n\"Could he be any cuter?\" Victoria asked, breaking his train of thought.\n\n\"I think he needs a brother,\" Nic whispered to her, pulling her away from the crib. \"Let's get started on that.\"\n\nVictoria laughed, as the two of them entered their bedroom. Nic went to take a shower, but Victoria didn't feel like budging. She was so tired, and instead opted to plop down face first on the bed, and stayed like that until she heard the shower cut off.\n\nShe finally crawled underneath the covers, when she remembered something. \"Oh, hey Nic,\" Victoria yelled from the bed.\n\n\"What?\" she heard him say.\n\n\"Some woman from that party we went to months ago invited us to her party. I forgot to tell you. It's a garden party, or key party...something like that. But she seemed nice, so I wanted to let you know.\"\n\nVictoria watched as Nic slowly peeked around the corner from the bathroom with a quizzical look on his face, his hair still wet from his shower. He paused mid-stroke of brushing his teeth. \"What did you say?\" he asked.\n\n\"She wanted us to attend her party,\" Victoria yawned.\n\n\"Well, what kind of party is it? Garden party or key party?\"\n\n\"Hmm, I think she said key. But what's the difference?\" Victoria asked.\n\nNic laughed. \"Well, a garden party is a bunch of stuffy rich people eating outdoors and dressed in formal attire. A key party is when married guys place their car keys in a sack and their wives pull them out, and sleep with whichever husband's key they pull out. Again, usually stuffy rich people. But different parties, baby.\"\n\nVictoria almost choked, \"What?! She couldn't possibly think that I would\u2014oh my God, I can't...what is wrong with people?!\"\n\nNic laughed, \"My beautiful wife...making friends.\" He rinsed out his mouth and then stared over at her.\n\n\"Eww,\" Victoria said to herself. \"I could never share you. Ever!\"\n\n\"I almost followed a guy one night who slapped your ass while you were working at Calamity's. Definitely not the sharing type.\"\n\nNic watched as his wife stared over at him with a big smile. She was absolutely stunning...and even more so now than when he first met her, if that were possible. \n\n\"So you were stalking me,\" Victoria smiled.\n\n\"Of course.\"\n\nShe laughed and shook her head. \"I knew it.\"\n\n\"Hey, how much do you love me?\" Nic whispered over to her.\n\nVictoria pretended to think about it and then stretched her arms out. \"This much.\"\n\nNic shot an eyebrow up. \"Only that much, huh?\" he said, scratching his bare, toned stomach.\n\nVictoria widened her reach even more. \"This much!\" she said, trying to pull her arms completely in the opposite directions.\n\nNic sighed. \"Hmm, only that much,\" he repeated, before he walked back into the bathroom.\n\nVictoria sat there staring incredulously at the door. Her fucking arms hurt from that little demonstration of love. Okay, she knew what to do. She didn't know where these ideas came to her from, but they did. \"Nic!\"\n\nNic opened the door again and leaned out. Victoria was lying on her back, completely naked with her legs in the air. \n\n\"I love you this much,\" she said, as she slowly started opening her legs until she reached a full, very spread V shape. Holy shit...instant blood rush.\n\nNic dropped his boxers and walked over to her. He slowly slid his fingers from her ankles down the inside of her legs and then bent down to the apex of the V and kissed her glistening love nest. \n\nVictoria whimpered, as he started to French kiss her pussy. She felt little jolts of electricity to her brain. He was working some kind of magic with his tongue. She ran her hands through his wet, smooth hair. \"Ooh, Nic...ooh, don't stop,\" she moaned breathlessly. He continued to lovingly assault her clit, by licking and lightly nipping it, as her legs turned into jello. And then he hit her spot. Victoria's eyes rolled back as a powerful orgasm rolled throughout her body in intense waves.\n\nNic crawled up her body and positioned himself on top of her. She had yet to open her eyes. He leaned down and kissed her, wishing he could take a picture of her at this exact moment.\n\nVictoria gradually pried her heavy eyelids open, and stared up at her handsome partner. She smiled at him. \"What did you spell with your tongue? I know it was something, you always do.\"\n\nNic kissed her again. \"I spelled 'mine'. And don't ever forget it.\"\n\n\"Never,\" she whispered back to him.\n\n\"And when did my innocent girl turn into such a sex kitten?\" Nic asked, resting his body on top of hers. Her little display of affection was beyond hot.\n\n\"It's all your fault. You corrupted me,\" she said back, raising up to kiss him.\n\n\"Damn right,\" Nic muttered, crushing her lips to his, as his hard length entered her body at a torturously slow pace. He could feel every inch of himself being invited in by her tight pussy. When he finally bottomed out, they both lightly moaned. \n\nBut he didn't start driving in and out of her, and she didn't start rolling her hips, driving him crazy like only she could do. He didn't bite her or place his hands around her neck, and she didn't beg him to do so. They just stared at each other, neither one able to move due to some invisible bond that they were sharing at that moment. \n\nFinally, Victoria spoke. \"I love you, Nic Andretti,\" she said, looking into his bright, blue eyes. Eyes that used to be as cold as a block of ice. But that ice had melted away some time ago, replaced by happiness, hope and...love. Love for her, and love for their son.\n\n\"I love you more, Victoria Andretti,\" Nic whispered. \"Always.\"\n\nVictoria wrapped her arms around him, feeling the wetness of her tears seeping onto her cheeks. She remembered when she thought that in just seven quick days... she could make a new start for herself. She couldn't have known then how true that statement would become.\n\n*\n\nThank you all so much for sticking with me on this story and supporting me with all your emails, comments and votes. Many of you I know your names and email addresses by heart and although I sound like a broken record, the support I've received really does mean so much to me. I also wanted to let you know that I plan on publishing soon, so please check my Literotica bio page for all of that information, including information on a new story, a follow-up story to Damn Dress, and Sonny and his mystery woman... And I just want to thank a few people, J for the wonderful editing, TangledinYou for being an amazing friend and sister, and August_Bouvier, for a wonderful suggestion;-)\n\nLove, \n\nSoular "
    ],
    "authorname": "soular",
    "tags": [
        "interracial novella",
        "interracial drama",
        "interracial romance",
        "interracial erotica"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/seven-days-ch-10"
}