{
    "title": "Mind Games Ch. 01",
    "pages": [
        "The world fell forward and, with a gasp, I tumbled into cold and hate. My body curled up on the ground and I shuddered convulsively, my mind buzzing and sparking and flashing. My eyes couldn't \u2013 didn't \u2013 work, and I breathed in shallow, fast gasps. Slowly, the sensations of dislocation faded and I became aware that I was laying on a grille, with enough space between the lines of metal to fit a finger. My eye opened and I saw that the corridor I was in was lit by a pale, unearthly blue luminescence. A soft voice spoke in a language I knew. \n\n\"Station time is error.\" \n\nI closed my eyes. My hand pushed to the floor and I shoved myself to my feet. My body unfolded with a series of creaks and pops and I gasped as I finally stood straight. My head spun and I grabbed onto the wall to keep myself from toppling right back to my knees. My skin prickled and I realized I was naked and I knew that there was something deeply shameful in that fact. My eyes closed and I felt images \u2013 disassociated and pulsing with red light \u2013 pushing against the back of my mind. They refused to form into coherence. I saw a triangle of metal, grasped in a bleeding hand. I saw an orb of metal, looking down at me. \n\nI heard the words. \n\nShe'll do. \n\nI shook my head. \n\nI had no name. I had no memory. So, I decided to get at least some knowledge of myself. When I opened my eyes, I saw that the corridor was not quite a corridor. Rather, it was a pair of rows of machines. Each one was large and squat and looked like it was designed to contain something, with silvery doors and hatches, bolts and latches. A fine mist coiled around my feet and the chill in the air felt like it had been made for a reason. The machine I had stumbled from remained open \u2013 the hatch swung wide. Inside, there was a drain and I could see the last droplets of a pale blue fluid sweeping away. \n\nI shuddered and didn't know why. \n\nEach machine was labeled. My brow furrowed as I saw mine was labeled with a number. \n\n0451. \n\nI shook my head. \n\nThe interior of the machine had a reflective, metallic sheen. I stepped closer and in the distorted reflection, I saw myself. Strawberry blond hair, spilling around a wide, heart shaped face. A small button nose and a pair of cat-green eyes. Freckles and a trim, athletic body. My breasts were large, and tipped with a pair of rosy red nipples. Looking down, I saw that they jutted from my chest. They looked firm and perky and I wondered what it would be like to squeeze them. I shook my head slightly. Focus. A pair of pert pussy lips sat between my thighs, utterly hairless. I had no hair on my body, in fact, beyond my eyebrows and my head. \n\nThat felt faintly unnatural. But...pleasant... \n\nI stepped over to the next chamber \u2013 0452 \u2013 and looked inside the porthole sat on the top of the closed hatch. \n\nA death's head leered back at me. Desiccated flesh and sunken eyes, teeth clenched in a rictus grin. My heart hammered and I put my fingers on the machine, trying to feel what had gone wrong. I was alive. This person was dead. Why? I stepped to the next tube. 0453 was also a shriveled corpse. I started to run now, my whole body jiggling as I ran past row after row of corpses. Dead. Dead. All dead. Who had put so many people into...into...these things? Were we supposed to be dead? My heart sprang into my throat and my toe caught on the grille of the floor. I tripped and skidded forward. \n\nI rolled onto my side, gasping, my hand going to my knee. \n\n\"Fuck,\" I croaked, my voice feeling strange in my throat. I closed my eyes. Had I always sounded like that? \n\nOnce the pain was under control, I forced myself to my feet and this time, I walked. \n\nIt took me a slow eternity to reach a doorway. The door itself actually provided one answer: Where I was. Scrawled on the middle of the door, right underneath the window that looked out into the adjoining corridor, was a symbol and a pair of words. The symbol was a gear surrounding a small flame in a golden cup. The words were in the same language I spoke and thought in. English? That was the name, wasn't it? \n\nThe words. \n\nVirgil Station. \n\nThe door had a black plate of plastic next to it. A glowing interface of numeral keys sprang up when I brought my hand near it. I somehow knew that was going to happen. The numerals went. \n\n7, 8, 9 \n\n4, 5, 6 \n\n1, 2, 3 \n\nA zero was tucked into the corner, with a backspace and enter key to the other side. I shook my head. What a weird way of arranging numbers. But it was clear the door wanted numbers. I hesitated. Then slowly, I tapped in my machine's numbers. The keypad flashed red and didn't open. I scowled. My fingernail dug into the edge of the plastic and I yanked it hard. My fingernails ached, but the plastic gave first, revealing the internal guts of the machine. I let my hands work \u2013 not questioning it. But I managed to connect that optical core to that wire and the door hissed. Pneumatic pressure faded and the door dropped into the floor. \n\nI looked at my hands. Flexed my fingers. Ow. \n\nHow had I done that? \n\nThen my vision focused and I saw that there was something more than a mystery hacking ability to worry about. Laying on the floor, tucked up against the corner of the adjoining corridor, was another woman. She was dead. And I could see why. Her mouth was filled with a frothing white liquid, her throat bulging grotesquely. The rest of her body was achingly beautiful, even in death. She had been wearing some kind of nice suit that had been shredded, her body marked with dozens of cuts that no longer bled. Claws had torn her suit apart, careful to leave the skin underneath untouched. Her legs were cocked wide, and her sex lips dripped with the same thick white fluid that filled her throat. But the thing that made my breath catch was her eyes. \n\nEven dead, those were the eyes of someone in the throws of intense pleasure. \n\nMy mouth went dry. \n\nMy eyes dipped from the obscene scene and I saw, laying on the ground about five feet from where she had finally died, was a wrench. It was a sturdy Krugmaster 98, made for loosening the kinds of bolts normally only seen on a fusion reactor. I knelt down and grabbed it up without a second thought. It was a comforting, heavy presence at the end of my arm. I tossed it into the air and caught it again with a meaty thunk. \n\n\"Thanks,\" I said, her voice still raspy. \n\nThe dead woman didn't respond. \n\n### \n\nThe next hour was a long, furtive, quiet time. I moved from room to room in the corridors of this section of the station and found the same story, writ large again and again. Where there were people, those people were dead \u2013 and those places were rare. I only counted five other corpses, all men who had been ripped to pieces. This whole part of the station seemed devoted to the clunking, groaning, grinding pieces of machinery that kept everything running. Some rooms were filled with quiet machines whose purposes were entirely beyond me. Others, though, were more obvious: Store rooms filled with materials and components for fixing the other, quiet machines. \n\nBut I was able to at least get a rough idea of how the station was formed down here. There was an outer 'ring' of support rooms, all with pipes leading into the ceilings towards the central chambers. On the inner side of the ring there were four chambers, each one identical to the one I had been born in \u2013 long corridors of those coffins, numbered. I was able to find the highest number on the third room from mine and knew that there were six thousand, six hundred and sixty six coffins. I wasn't brave enough to check each coffin to see if any of them held living people like me. \n\nI had planned too. \n\nBut I ended up standing at the end of the chamber, looking at the vast vaulted room, at the tubes leading down into the coffins, at the empty face plates. I imagined walking past them and a cold, creeping dread started to fill me. My knees locked and I realized I couldn't move \u2013 the thought of looking away was impossible. Instead, my mind could see the image of a coffin opening up and something like me coming out. But rather than warm, living flesh, that thing would be cold and clammy and moist and rotting. Their flesh would creak and groan as they stood, eyes glowing with a pale light. \n\nAnd so I stood there for who knows how long, listening only to the faint groaning of the station and the thundering of my heart. If I turned away, the door would open behind me. \n\nYou're being ridiculous, I thought. \n\nBut, in the end, it took an explosion to shake me out of my paralysis. The entire station shuddered and I felt the floor shifting underneath my feet. I staggered, grabbing onto the frame of the door, then looked up and down the curving corridor that made up the outer ring. The dim lights that came from the ceiling flickered on and off \u2013 and then a voice came from the ceiling. \n\n\"Bloody hell, is this working?\" \n\nI blinked. \"H-Hello?\" I asked, my voice feeling faintly raspy. \n\n\"Ah! I heard that!\" The voice said. It was male, deep and slightly lilting. I cocked my head slightly and wondered if he could see me too. I blushed and didn't know why I was embarrassed...but I was. I crossed one arm over my breasts. \"Hell, you're in CryoSup. Okay, um, shit. Listen, whoever you are, my name is Lucas. I'm in tech support, and I think I might be one of the only people left alive on this bloody station. If you want to survive, we're going to need to work together. Okay?\" \n\nI gulped. My hand rubbed my throat as I looked around for some speakers. They had to be amazingly well hidden. \n\n\"Okay,\" I said. \n\n\"What's your name?\" he asked. \"Are you, uh, one of the cryonics?\" \n\n\"Those coffin things?\" I asked, biting my lip. \n\n\"Yeah,\" he said. \n\n\"T-Then yeah,\" I said, nodding slowly as I dropped my hand from my throat. \"What was that sound?\" \n\n\"Well, ah, that was the sound of the habitation deck's station keeping engines...exploding.\" \n\n\"What!?\" I blinked, my mouth opening, then closing. \"That's bad. That sounds bad. What the fuck is a station keeping engine?\" I rubbed my face with my palm. \"S-Sorry, I...I don't even remember my name. I just woke up in a cof...er...cryonics. Um, it was labeled 0451.\" \n\n\"Okay, I'll start trying to crack the networks for the cryonics. We had a lot of bigwigs in there, we'll see who you are.\" He chuckled. \"You're probably five or six steps above me on the social strata. So I'm going to enjoy bossing you around until your memory comes back.\" \n\nI made a face somewhere between a scowl and a smile. \"Enjoy it. So, station-keeping?\" \n\n\"Right. Virgil Station's in the L3 point \u2013 basically, a place where Earth and the Moon balance each other out gravitationally speaking. It normally doesn't need much station-keeping, but the experiments the boffins were running makes everything screwy. So, without our station-keeping engine, the ship's going to start slewing out of orbit. If we get too far out, then a week or two from now, we're going to smash the whole thing into the Earth.\" \n\nI gulped. \"And that's bad, right?\" \n\n\"Well, for them,\" Lucas said. \"If we can't get off this station in two weeks, we'll be dead either way. Though, I mean...wait...wait, wait, wait, if you're free to move around, we could just head for the escape pods and-\" \n\nI closed my eyes, pinching the bridge of my nose, holding up my hand. Lucas cut himself off. \n\n\"I should get upstairs to habitation, shouldn't I?\" I sighed, quietly. The idea of just getting out of this place was tempting, but...no. I couldn't just let this station \u2013 which had to be huge if this was just part of it \u2013 drop onto the Earth. \"How long do we have to fix the engines?\" \n\nLucas coughed. \"Two hours before the degradation becomes irreversible.\" \n\n\"Fucking wonderful,\" I muttered. \n\n### \n\nThe first thing Lucas helped me get was some clothes. Turned out one of the storage rooms had lockers that I hadn't been able to access by touching their open buttons. Lucas told me the pass-key for his locker and I punched it in. Rather than finding clothes, I found a sleek collar and a small tube of gray looking liquid. I picked up the tube, my brow furrowing ever so slightly. \n\n\"What is-\" \n\n\"Right, you're missing out on important facts,\" Lucas' voice cut me off. \"That's a container of nanites. The collar's a clothing fabricator. In engineering, we had to have clothes tailored to specific situations \u2013 best choice was a sheet of nanites.\" \n\n\"Huh,\" I said. I undid the collar, frowning as I looked at the interior. It seemed to be smooth silver, though it was etched with an odd set of curving symbols. The name that sprang unbidden to mind was runes. But I had no idea what a rune was, or why the symbols made me think of them. I traced one with a finger and felt a strange, uncomfortable nervousness slide through my spine. \"Lucas, are you sure these are safe?\" \n\n\"Sure are,\" he said. \"I mean, safe as anything else on this bloody station.\" \n\nI gulped. \"I could just-\" \n\n\"What? Wander around bare arsed?\" he asked, sounding amused. \n\nEmbarrassment filled me. I felt my whole body turn bright red. \n\n\"Y-You can't see me, can you?\" I asked. \n\n\"...well...\" \n\nHe was watching me. His eyes were on my bare ass, on my pale skin. He could see the swell of my breasts, the hard nubs of my nipples. Everything. I closed my eyes and clenched my jaw, the embarrassment becoming shame. And arousal. Intense, confusing arousal \u2013 arousal that made my pussy glisten. I snapped the collar onto my neck without a second thought. Nothing happened. \n\n\"You need to put the nanites into the socket \u2013 near the front, lassie,\" Lucas said. \n\nI found the socket with my thumb. Attaching the tube of nanites to it was a matter of moments. The collar buzzed and a thin line of grey goop started to spread from the bottom half. It flowed along my skin, like cold water mixed with mud. My nipples grew stiffer stiff as the goop dripped down my breasts...but rather than falling to the ground, the droplets swung around and cleaved to my breasts like a second layer of skin. The cool, tight grip of the material around my nipples felt as snug and as comfortable as a lover's grasp. Then it tightened slightly and I whimpered as my breasts became perkier and thrust out \u2013 supported by a lattice of nanites. The flowing liquid came to my bare pussy, slithering over my sex with the same disquieting sensation. \n\nI squirmed and bit my lip hard to keep from moaning as the coolness slurped up between my thighs, looping around to find the cleft of my ass. It spread outwards and upwards, meeting with the nanites that came from the back of my shoulders. I looked down and found a whimper escaping my clenched teeth as the thin line of nanites that pressed to my sex drew taut. I was essentially wearing a completely skintight layer of paint that formed the rough shape of a one piece bathing suit as designed by a fetishistic Japanese anime studio. \n\n...the fuck was an anime? \n\n\"W-Why don't I have pants Lucas?\" I snarled, arousal and embaressment transmuting, through the magic of a human soul, into anger. \n\n\"You're a tall lassie,\" Lucas said, his voice so studiously neutral that I was sure he was popping a hard on as tough as my wrench. \"Well, you'll have ta live with it, until we can find more nanites. We're not getting those other lockers open unless-\" \n\nI grabbed my wrench and brought it smashing down into one of the lockers. The door bent inwards and the electronic lock crunched with an ear popping squeal. Red lights flashed on the lock and I smashed again \u2013 causing the door to cave inwards. It was made of really cheap metal, light weight rather than sturdy. I used the wrench and the opening I had made to lever the door open, and grabbed another tube of nanites. Soon, they were flowing along my thighs and knees. \n\n\"Blood hell!\" Lucas said. \"Ask me before ya do something like that!\" \n\n\"It worked, didn't it?\" I asked, eyeing the other lockers. \n\n\"Aye, it worked. It set off every security alarm on Cyronics!\" He groaned. \"Shite! Shite! Shite!\" \n\n\"I thought the only thing I had to worry about was those...\" I paused. \"What the fuck is going on on this station?\" \n\n\"That's just it,\" he said, through clenched teeth. \"We got monsters running around, the security system's gone ahoo, and you just called down two fucking TCS drones to check out what the noise is. And, lassie, they don't ask nice in Cryonics.\" \n\nI blinked. \"Oh.\" \n\nLucas sighed. \"You better run, lassie. And don't stop.\" \n\nI started for the door, but the sound of the drones approaching stopped me dead. There was something horrible in the sound they made. It was a rattling sound, but so fast that it became an almost tearing sound. Worse was their voices \u2013 computerized and deep. \n\n\"Stop, lawbreaker.\" \n\nI hefted my wrench. From the sound of their approach, I knew I couldn't outrun them. But they sounded big and rattling \u2013 so I stepped back and away from the door. Then the first drone came to the door itself and I was struck almost dumb by their design. At first, I thought that a massive hula-hoop had come to kill me. But it was too wide, too thick. The outer edge of the ring was studded with metal that looked designed to cling to walls and grated floors with thick, curved teeth that glinted in the pale light of the room. Between the teeth were circular eye-cameras, each one glowing with a malignant red flare, as if the whole thing had been set on fire. Looped within the ring was a second ring, providing a pair of wheels that could rotate and spin the drone around in any direction. More, I saw that the ring was compressible, squeezing through the door and shifting the two rings so they overlapped to make it as thin as possible. \n\nI figured that a security drone should try and stop to capture a 'lawbreaker', but whatever had gone wrong in the station had turned 'capture' to try and run me the fuck over. The drone shot forward and I only escaped it by the skin of my teeth, diving out of the way. The ring smashed into the wall of lockers behind me, causing several dozen to spring open at once. Their locks started to flash and whir with red lights \u2013 and I groaned inwardly at the idea of even more security alarms going off. \n\nBut I had no more time for thinking. The second drone had arrived, and was also pushing its way into the room. I stepped forward and brought my wrench smashing down into one of the camera eyes. It shattered and the drone stopped as if it was assessing damage. The wrench felt light \u2013 adrenaline surging through my body as I brought the wrench down again. Another camera. I stepped back and managed to get in one last smack. The other drone, though, started to rev up and back away from the wall. It aimed at me. I shifted quickly \u2013 moving into the drone in the door's blind spot. \n\nBoth shot forward. \n\nI sprang aside. \n\nBoth smashed home. Metal claws and spikes smashed and locked together. Ring surfaces deformed beyond their limits. And then I sprang in and started bashing both with the wrench, aiming at any weak spot I could. Metal flew and I felt something tug at my sleeve. But then I stepped back and the two drones lay on the ground, their ring-surfaces snapped in half like busted tires. Their cameras had covered the ground with shattered glass, something that made me stand perfectly still until I had surveyed the situation. \n\nI looked down and saw that my left arm had a thin slit of red along it, and the red was growing. I hissed, my hand going to my bloody cut. That made it hurt more. I closed my eyes. ",
        "\"You're alive?\" Lucas asked. \n\nI laughed quietly, adrenaline buzzing through my body. I was horny. Should people be horny after a fight? I shook my head from side to side and stepped gingerly around the glass to check the other lockers \u2013 speaking as I did so. \n\n\"I seem to be.\" I found that most of the lockers were empty, save for a few more of those nanovials. Then I saw something tucked away in the one at the far end. My brow furrowed. \"Lucas, who was T. Dubois?\" I asked. \n\n\"He was the security officer for Cryonics,\" Lucas said. \"He's...different now.\" \n\nI hefted the pistol that had been tucked away in the locker. I checked the magazine with a cool efficiency that I hadn't known I had \u2013 and noticed that the nanites I wore had reacted to the blood soaking them. They focused, clumped, then filled into the wound. I felt a tiny pricking sensation run through my skin \u2013 then the nanites faded away and revealed that the wound had become a thin scar. Regenerating clothes. Nice. I also noticed that the rip in my clothes remained. I frowned and then touched one of the nanite tubes to my collar. \n\nThe clothes healed. \n\nSo, my clothes could heal me, but that used up the nanites. \n\nI got to work there \u2013 kicking chunks of glass out of the way. I found a backpack in one of the lockers and stuffed it full of the nanite tubes. I tucked my wrench into it and then slung the backpack over my shoulders. I adjusted the straps, reaching backwards \u2013 I could grab onto the wrench as it thrust from the back of the backpack. I grinned and let my hand drop. I had a backup weapon. As I held up the pistol, I saw a tiny, glowing holographic haze flare to life around the handle and the barrel. A number popped up \u2013 it agreed with my count. \n\nI had seven bullets out of fourteen. \n\nI frowned. What had Dubois been shooting at? \n\nI was afraid I was going to find out. \n\n### \n\n\"They're called the Tesc,\" Lucas said as I grabbed onto the next rung of the maintenance shaft that he had determined was the safest, fastest way to get from Cryonics to Engineering. A timer ticked away in the back of my mind \u2013 we has an hour and ten minutes before Virgil Station slewed out of the L3 point and started on a steady course back towards Earth. Apparently, there was jack and shit the Earth governments could do to stop it. Not because they lacked heavy lifters or shuttles or even really big guns. \n\nNo, it was worse. Lucas had explained that the whole station was stealthed. \n\nBecause of course. \n\n\"The test?\" I asked, my brow furrowing as I pushed myself up. My left leg was starting to cramp. Climbing a mile of station was nothing to take lightly. I hooked my arms, shifted, and leaned back against the inside of the shaft. That let me relax. The ache in my leg faded slowly and stubbornly as Lucas sighed loudly. \n\n\"The Tesc. It's short for Tesseract.\" He sighed again. \"The boffins who made this place were doing some weird shite with gravity. That's why this bloody place doesn't need to spin, and why it needs station-keeping thrusters despite being gravitationally locked with the bloody moon.\" He grumbled. \"It's an arse for a technician like myself, but...what can you do?\" \n\n\"Quit?\" I suggested. \n\n\"And get sent into TempleSoft's mental rewiring chambers? Fat chance,\" Lucas said. \n\nI frowned. TempleSoft was apparently the corporation that owned this place. I filed that unsettling detail away for later. Lucas continued. \n\n\"The Tesc came through when some boffin switched on some bloody device. They're aliens or something,\" he said. \"They take people. Kill em. Change em. Do...things to em.\" \n\nMy mind flashed back to the dead woman in Cryonics. The look of ecstasy on her face, frozen there forever by her snapped neck. I shuddered convulsively, then forced myself to start moving again. Another rung. Another rung. I bit back the urge to ask Lucas if he could tell me how much time we had left before the destabilization happened. If I needed to hurry, I was pretty sure he'd tell me. I closed my eyes and went through the plan again. Going straight to Habitation was a fools game. We'd need the parts to fix the engine, and the suit to let me go outside in the first place. \n\nSo, we head straight for engineering. \n\nI snorted, loudly. \n\n\"What's so funny?\" Lucas asked. \n\n\"Just I thought that we were going, but it's just me,\" I said, frowning. \n\n\"Oi, I didn't ask to be kept in a bloody broom closet for the whole bloody week,\" Lucas said, sounding annoyed. \"If there wasn't a food dispenser in here, I'd already be gnawing off me own arm. Now, listen. The Tesc don't always kill. They do if you try and kill them right back \u2013 but if you're cornered, and you don't have any choice, well...\" \n\nMy frown grew more focused. \"Well, what?\" I asked. \n\n\"You know...\" he coughed, awkwardly. \n\n\"No, I don't. I have amnesia,\" I said. But I was coldly certain that I knew exactly what Lucas was suggesting. And part of me tingled all over at the idea. But I was so keyed up, so eager for something to happen after the fight with the drones, that I think I'd have gotten off at the idea of kissing a pig. Another part of me just remembered the poor girl with her neck snapped and her cunt dripping with Tesc seed. Fortunately, life contrived to get me distracted from that mental image by bringing my face nose to nose with the hatch leading into engineering. I closed my eyes and muttered a very soft 'thank god.' \n\nThe suit I wore squirmed. \n\nMaybe it was nervous too. \n\nGetting the hatch open required punching in Lucas' pass key. I tapped the buttons a few times \u2013 and the alarm light came on. I scowled. \"Lucas, your key-\" \n\n\"The bloody computers are trying to lock me out,\" he said. \"Try again!\" \n\nI tapped in the combination again, frowning. The door hissed open, revealing a narrow, industrial corridor. I dragged myself in, my legs buzzing with the exertion that I had put them through. I rubbed my thighs with my hands \u2013 my ears perked up. The Engineering section of the station already sounded far more active. I could hear hissing and burbling, crackling and humming. The walls were grated and had machines behind the grates. But the ceiling had four lines of tubes \u2013 and each one was painted a bright red, with clear warning signs laid out. \n\nDanger. \n\nSteam. \n\nI started forward, pistol held in a lowered grip. I didn't want to just blow away some other survivor by accident. But as I came to the first corner, I heard the sounds of footsteps and a quiet sing-song voice. \n\n\"Sold, sold, sold, sold...\" it was a female voice \u2013 but underneath it, I could hear a rasp rasp rasp sound. It was like metal grinding against metal \u2013 but it came high, then low, then middle, then high. The sound was growing fainter. I peeked around the corner, wishing I could remove an eye and use it to peek, so I wouldn't need to risk my soft, squishy head. But I had no options. The corridor beyond was as dimly lit as the one I stood in \u2013 red lights shone through grates and diffused through thin clouds of steam that emerged from machines whose purpose was entirely beyond me. That red light partially illuminated a humanoid \u2013 feminine \u2013 figure. \n\nThey were naked, and I could see the faint drip of their sex between their legs. It pattered on the floor in a silent fall, the juice clear. Some part of my brain said arousal, not anything else. That fact was tucked away in the back of my brain \u2013 adding to the exquisite horror of the rest of her body. She had the breasts and ass of a Vegas show model, both firm and perky. But her skin had turned a dull gray and had been colored a demonic red by the lighting surrounding her. Her shoulders had been augmented and expanded by a pair of almost machine-like growths that smoothly fused with her skin. Each one fanned outwards, creating a kind of skeletal pair of inverted wings, which were folded up behind her back. Other pieces of biomechanical fusion dotted the rest of her body, from the sleek tubes that she wore as dreadlocks to the digitigrade mech-walker legs that had become shapely and oddly sensual despite still having bare metal and flesh rubbing against one another. \n\nThe final detail was her tail, emerging right above that perfect, heart shaped ass. It was long and segmented and tipped with a sleek metal barb that reminded me of the catching claws on the security drones. That was what produced the rasp noise \u2013 scraping along the wall and grinding against the floor as the woman walked. \n\n\"Oh they all sold, didn't they?\" she whispered. \"Daddy, do you think I'm pretty now that I've sold out too?\" \n\nShe moaned, sounding almost ecstatic. \n\n\"Yess, writhe Daddy...\" she purred. Her tail slashed at the air, as if she was impaling some invisible being before her. \n\nSome instinct surged through me. I stepped around the corner and put four bullets in her back. The bright flashes revealed more grotesque detail of how metal and woman met and became one. They drew attention to the rubbery, eraser-like hardness of her nipples, and to the fact that her face was achingly beautiful, even when framed by mechanical dreadlocks and bearing a pair of camera-like irises. \n\nShe stood there, blood dripping from the holes in her back, more blood flowing from around her eyes like tears. \n\nThen she beamed \u2013 her teeth razor sharp. \n\n\"A new toy!\" she cooed. She sprang at me with alarming speed. I staggered backwards, fear locking my legs. I tripped \u2013 which saved my life. The woman stopped a foot away from me and let her tail thrust between her hips, the segmented sections grinding against her sex like a perverse combination of deadly lance and sex toy. The barbed tip plunged through air, where my chest had been moments before. I leveled my shaking hands at her and shot her in the chest again. The bullet thudded home and I saw her flesh mold back around the hole. She giggled, then coughed. She moaned, then opened her mouth, her long tongue lolling out. \n\nLike a slut showing her partner that she had all his cum in her mouth, she showed me the five bullets I had fired into her. Then she let them dribble out of her mouth, bouncing off her breasts, rattling onto the floor. \n\n\"Sorry, I don't swallow,\" she purred. \n\nShe grabbed my pistol, then tossed it aside. Then her digitigrade legs whirred as they bent almost in half. She was leaning over me. Her clawed hand cupped my breast. Her touch lit me on fire. My skin burned and my nipple ached as I moaned quietly. She leaned forward and her cold lips pressed to mine. I could taste a kind of spicy, peppery flavor and a metallic tang on her tongue as it plunged into my mouth. I moaned as I realized I was tasting my gunpowder on her lips. Her tongue grew longer. Longer. Longer. My eyes went hooded and my toes curled against my nanites as my throat bulged. The fullness of her tongue made my head spin as I realized that her tongue was starting to thrust in and out of my throat, as if she was throat fucking me with a cock. \n\nI grabbed at her shoulders. \n\nI weakly pushed. \n\nShe drew back, her tongue still deep in my mouth. Her eyes glowed and whirred as they focused home. \n\nStop...I thought. I tried to breathe and realized I couldn't. \n\nI was dying. \n\nI was dying and I didn't even care. Her tongue had blocked up my throat and my nose flared, trying to breathe in, but all I felt was pleasure as I serviced her. My back arched and I realized I was cumming \u2013 the sensation was shocking, fast and eager. It burned through me and I quivered as I spurted my juices along my thighs. My nanite clothes whisked it away, leaving me feeling faintly unsatisfied with being dry as a bone. My vision was growing dimmer and darker around the edges \u2013 infernal red light making the woman into a demon from hell as she spread those biomechanical wings wide. \n\n\"Yessss,\" she purred. \"I'll make you part of me. How do you feel about being a tit?\" \n\nHow was she speaking? \n\nI realized...her tongue had broken free. It was in me now \u2013 a thick mass of biomechanical tentacle, disconnected from her. Sudden revulsion burned through me \u2013 and the pleasurable haze of her hypnotic eyes and sensual body faded. I scrambled at my throat with one hand. \n\n\"Oh, yes, struggle, I love it when they struggle,\" the Tesc woman purred. \n\nMachines. \n\nFlesh. \n\nSteam. \n\nWater. \n\nI lifted my arm. I aimed the pistol at her. She laughed, then opened her mouth, like a woman accepting a cock. \n\nI angled my pistol up. \n\nThe last two bullets went off and smashed into the steam pipe overhead. Gouts of hissing, screaming water shot from the pipes, slamming down into those spread biomechanical wings. The woman screeched and sprang backwards, but that only got her further into the cloud. She started to spasem and jerk and twitch, her arms jerking and moving in jagged motions. I felt the detatched tentacle in my throat deflate slightly and rolled onto my belly. \n\nI vomited up what felt like a mile of machinery. I coughed, hacked, and spat blood from where it had cut my throat and mouth. I closed my eyes and gasped in air, breathing desperately as the screeching stopped \u2013 leaving only the crackle and spark of electricity. I looked back and saw that the steam had condensed into a puddle and the pipe had shut off the flow \u2013 detecting the sudden loss of pressure. The Tesc woman still sparked a few times, her body twitching. I panted, then pulled my wrench. After checking to make sure that I was using the rubber handle to insulate myself, I hooked the woman, dragged her out of the puddle, and checked her neck. \n\n\"You okay, lassie?\" Lucas' voice made me almost leap out of my skin. \n\n\"Yes!\" I rasped. \"I need to find a medical...facility...\" It hurt too much to continue talking. \n\n\"There's one near the engineering bay you're heading for...what are you doing?\" \n\nI might have no memories about myself, but there were strange fragments that bounced around my head. One of them was recognizing machinery \u2013 understanding how they worked. And I recognized one of the limbs of her wings, now that I was no longer being strangled by her. The woman whimpered as I stepped behind her, grabbed the wing, then ripped. She whined loudly, her back arching, and I blinked as I saw her pussy spurt juices onto the floor before she relaxed back onto the ground \u2013 eyes still closed. \n\nI hefted the shotgun that she had fused to her body. It was slicked with a kind of slime, and when I cocked the chamber open, I saw only a red glow from the interior. It shimmered and rippled with a kind of unearthly light. I snapped it shut, then turned and fired a blast down the corridor. My ears rang and I swore loudly \u2013 the reverberations made being strangled seem pleasant. When the sounds faded, I checked the shotgun. It still had a glowing red light inside. \n\n\"Infinite ammo, huh?\" \n\n\"Well, uh, I hear the Tesc co-op our tech,\" Lucas said \u2013 his voice sounding distant and tinny thanks to the ringing in my ears. \"Makes sense they'd do it our bloody guns. Gonna finish her off?\" \n\nI looked down at the unconscious Tesc woman. I hefted the shotgun up, frowning as I did so. I wasn't sure if this would even work. But if she wasn't awake, maybe her ability to absorb damage would be dimmed? Then my brow furrowed. \n\n\"Why do they look...humanish?\" I asked, lowering the shotgun. \n\n\"She's...well, there aren't many pure Tesc left,\" Lucas admitted. \"That was Maria Festios. She was one of the engineers before...well, one of the Hellhounds got her.\" He sounded bitter. \n\n\"Can she be helped?\" \n\n\"Not by us, lassie,\" Lucas said. \n\nI frowned. Then I shook my head. \"But not by no one.\" I slotted my shotgun into my backpack, testing to make sure I could yank it free in a hurry. I turned and started for the engineering bay I needed to get too. \n\n\"Lassie, you can't just-\" \n\n\"Watch me,\" I said, my voice firm. \n\nThis station may have gone to hell. \n\nBut I sure as fuck wasn't. \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "giger",
        "transformation",
        "body horror",
        "tentacles",
        "lesbian",
        "choking"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mind-games-ch-01"
}