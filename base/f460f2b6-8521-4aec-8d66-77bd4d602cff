{
    "title": "Agent in Distress Ch. 14",
    "pages": [
        "Thank you all for your patience, I got sick and couldn't find the energy to write for a month, but I'm getting better now and back to writing. This chapter was one of my favorites so I took some extra time with it, and it's on the long-side, for I didn't want to break up the resolution of a storyline. I hope you enjoy it, and this chapter marks a turning point in the story, things will change in chapter 15. Thank you again for your lovely feedback, I just love reading your comments, ideas and even criticism, which does help me become a better writer. \n\nxoxo\n\nTanuki\n\nCh 14\n\n\"Warrick told us back at the castle that you're a virgin,\" said Kor, as if making conversation. \"You've been in the camp for a few days now, that still true?\"\n\nLana blushed despite having heard the question more than a few times. She couldn't very well tell them that Warrick had taken her virginity. She had been a virgin until very recently. So, she simply nodded. \"They seemed to be saving me for Nikol\u2014I mean Nikos.\"\n\nKor nodded. \"Good, yes, that's usually the case, the slavers keep virgins intact so they can be given to important people, or to preserve their auction value.\"\n\nThe man to her left, whom she thought was Tamar, reached up a hand to trail a finger along her upper arm while he spoke. \"Pretty girl like you - why are you still a virgin? Are you saving yourself for someone?\"\n\nLana leaned away from his ticklish finger while she shook her head. \"No, I--I just haven't found the right person yet,\" she replied, wondering why she felt the need to explain herself.\n\n\"What's wrong with us?\" said Kurk, to her right.\n\n\"N-nothing!\" she blurted, looking from one to the other. Naked, and so close to her, she marveled at their flawless skin, rippling muscles and toned flesh. Before coming to this planet, she'd never even seen men who looked like this, and she couldn't deny she found herself helplessly attracted to them. Their massive muscular bodies made her feel small, feminine and strangely vulnerable.\n\n\"Are we not handsome? Are the men where you come from more impressive?\" said Kor, his expression curious.\n\n\"Yes! No!\" stammered Lana. \"I mean . . yes to the . . . first question and . . . no to the second?\" She'd felt more confident facing the three warriors back on the training mat at Lord Khan's castle. She'd had a wooden sword in her hand, and her telepathic abilities then.\n\n\"Feel my chest,\" said Tamar, reaching up to take Lana's wrist. She tried to pull her hand back, but his iron grip moved her hand to press it against his broad chest. It felt warm, and smooth, and incredibly hard against her palm and fingers, and Lana's mouth opened slightly as she looked in awe at the stunningly attractive man. \"Here, move your hand around,\" said Tamar. <br ><br >\"Oh no, that's ok!\" blurted Lana, as the warrior's grip on her wrist moved her hand around his broad chest, which had more ridges and contours than she'd have imagined. She couldn't decide if it was arousing, or embarrassing, with other two men watching. \"Umm, could I have my hand back?\" she said, finally.\n\n<br >\"Of course,\" said Tamar, letting go of her wrist. \"Now it's my turn,\" he added, raising his hands in front of her chest.\n\nLana squealed, clutching her arms about herself, pressing her white dress to her breasts. Tamar put his hands down and erupted in laughter and was joined by the other two men. \"Your face!\" he chuckled, pointing at Lana.\n\n\"Oh, very funny,\" said Lana, scowling at the warrior, \"I get it.\"\n\n\"Where you come from, Miss Lana,\" said Kurk on the other side of her. \"What do you do, when alone with three handsome men?\"\n\nLana turned to look at him. \"Well, I've never been with three men who looked anything like you,\" she answered, then immediately regretted how that sounded. \"I-I mean . . . not that I've been with three men . . . of any kind! You understand?\"\n\n\"Yes, I do,\" said Kurk. Then he raised a finger, inserting it in the opening of her dress under her arm pit to gently touch her side. Lana jumped and straightened upright on the bench.\n\n<br >\"What are you doing?\" she asked, keeping her tone friendly, for she didn't want to offend them. She was starting to feel like a tiny frog on an examination table.\n\n\"Well,\" said Kurk. \"I was just wondering if there's something wrong with you, to explain why such a beauty is still a virgin. Perhaps you are one of those women who are unresponsive . . . numb?\"\n\n\"Are you even ticklish?\" said Tamar on the opposite side. He too began touching her again, sliding a single finger up and down her arm, and tracing the outside of her shoulder to trail down the side of her back. Lana couldn't help squirming a bit in her seat as they continued touching her, but she wasn't sure if this was Dellune custom, for men to casually touch a woman as these two were doing. Perhaps it was as normal to these men as casual conversation with a woman? And perhaps she'd not have minded so much, if her body wasn't so hyper-sensitive. Kurk's finger was trailing up and down her side, making her shiver, while Tamar's fingers were now caressing the curves of her hip in an incredibly distracting way.\n\n\"I'm not unresponsive, and I am ticklish, so please stop!\" blurted Lana, struggling to hold still. \"I simply haven't found the right man yet, can't you understand that?\"\n\n\"Well, you'll have plenty of time to find the right man now, you'll be stuck in here with us for several hours,\" said Kor, kneeling in front of Lana. Thankfully he made no move to touch her, but she kept her knees tightly together nonetheless.\n\n\"You mean perhaps all three of you are the right man, is that it?\" said Lana, giving him a look of annoyance.\n\n\"Certainly, you may choose all three of us, if you wish,\" said Kor.\n\n\"Oh no, that . . . was a joke!\" exclaimed Lana, looking mortified.\n\nKor looked at the other two men. \"We are like brothers, we've been fighting on the battlefield together since we were youths.\" Then he looked at Lana. \"We've taken more than a few maidens together, as brothers.\"\n\nLana gaped at him. \"You mean . . . you slept with a woman . . . three on one . . . the three of you?\"\n\n\"Many women, sometimes two or three at a time, sometimes one,\" replied Kor. \"We are a lot to handle for just one.\" Lana turned to see the other two nodding as well, as if it was a perfectly natural thing for brothers, or brothers in arms, to do. Then she noticed the way they were looking at her.\n\n\"Oh no,\" said Lana, suddenly using her hands to push away the hands of the two men who sat beside her. \"I-I'm not that kind of girl, I'm sorry. I'm a . . . one man . . . at a time . . . kind of woman.\"\n\nKor smiled up at her. \"I spoke with the magistrate, you know? We are posing as Nikos' personal guard, so he didn't mind telling us a bit about you. He said you were coming along very nicely, despite your obvious lack of experience. Perhaps you're more . . . that kind of girl . . . than you think? We know you have the stamina, from all your combat training.\"\n\nLana laughed nervously, glancing over to the door to the cage, but it was still securely shut. She was trapped in there with three Dellune males who seemed to have wandering hands, for she was still having to gently push away the hands of Tamar and Kurk as they tried to touch her. \"Of course the magistrate would say that, I played along to avoid his cruel taste in punishments,\" said Lana. \"But that's all it was, I assure you. Play acting.\" Lana looked at Kor, and noted his very skeptical expression. His hands came to her knees suddenly, widening them a bit so he could begin to caress the insides of her thighs, just above her knees.\n\n\"Play acting, was it?\" said Kor softly, sliding his fingers deeper up her inner thighs. His finger tips barely touched her flesh as they moved up, spreading her legs a little more as they slid up under her dress.\n\n\"Y-yes!\" gasped Lana, his hands sending tremors through her belly. She reached down to push Kor's hands further down toward her knees. Then she stiffened, for Kurk slid his hand deeper inside her dress to gently caress the swell of her breast, which she realized was terribly sensitive. \"S-stop that, please!\" she said to Kurk, her voice sounding high pitched and tight.\n\n\"Are you play acting now?\" said Kurk, innocently. \"There's no reason to be nervous. We're all friends here.\"\n\nLana realized she was twitching and squirming under their touches, and that must have looked strange to them. She wasn't going to get off the hook without giving them some kind of explanation, so she sighed. \"Well, I mean . . . I was . . . am . . . under the influence of the Somarian fruit, and . . did the magistrate tell you about the slave salve? Well, I used a lot of that also. I was--am not myself, so . . please don't take advantage of my state.\"\n\nKor nodded, sympathetically. \"You poor girl, those can be quite challenging for a virgin like yourself, so inexperienced with sex and your own body's arousal.\"\n\nLana stiffened in resentment. \"I am not . . . inexperienced! Why does everyone assume that?\"\n\n\"Is that not so?\" said Kor, raising an eyebrow. Tamar's other hand moved to her neck then, and she cringed as his fingers touched a sensitive spot. Then to her surprise, the big warrior leaned in and brushed his warm lips against her ear. Lana shivered, squirming away, only to encounter Kurk's other hand, which came to her neck and shoulder on the opposite side. When Kurk leaned in to gently kiss her neck, she trembled visibly.\n\n\"What are you doing? Lana breathed, slightly out of breath. The men ignored her, continuing to explore her soft skin, looking for sensitive places to tease and caress with their fingers. She tried to ward off their hands, but they had six, and she only two, so it was a losing battle. To Lana's dismay, every part of her body seemed overly sensitive, and she found herself twitching and jerking as the men found and explored her nooks and crannies. Once in a while one of the men would lean in to kiss her ear, or her neck, and that would draw a soft gasp from Lana. She wondered how the poor young girls of this planet ever kept themselves pure, with men such as this around. Then she tried to close her thighs, as Kor in front of her reached deeply under her dress to grasp her hips with his hands. In response, the warrior placed his elbows inside her knees, keeping her spread apart while his hands explored her quivering hips and taut belly with the lightest of finger-tip touches.\n\n\"You seem agitated, girl,\" said Kor, looking at her. \"Did you fail to earn relief from your pent-up need? It must be considerable.\"\n\n\"N-need?\" squeaked Lana, \"No need, none . . . not at all!\" she stammered, gently grabbing his forearms and pushing them away, only to have to give up and move to fight off the hands touching her neck and sides again. It was a losing battle, her two hands against six of theirs, and two sets of lips, and Lana realized she needed to distract them from their focus on her . . . needs. \"Umm, when are they coming to hook up the caravan?\" she said, looking about the large barn-like interior.\n\n\"Soon,\" said Kor, looking about the room as well. Then his eyes returned to her. \"So, all that slave training . . . you had no trouble resisting it? You didn't start to . . . accept your slavery?\"\n\nNot that again, thought Lana. She couldn't seem to escape the indoctrination. She shook her head dismissively. \"I'm a highly trained Arbiter,\" said Lana. \"We are taught to maintain focus and discipline at all times.\" Lana couldn't help feeling a bit dishonest, but she wanted to shut down this line of questioning as soon as possible.\n\n\"Your skin is so soft, where do you hide the muscles you used to defeat us in mock combat?\" said Tamar, his hand leaving her neck to squeeze her bicep, feeling for her muscles. The other two men suddenly changed, and began massaging her arms, her thighs and her shoulders. Lana squirmed at the slight discomfort and deep embarrassment of three men feeling up her muscles.\n\n\"I feel small but nicely formed muscles under that lovely tanned skin,\" said Tamar, nodding his approval. <br ><br >\"I agree,\" said Kurk. \"She hides it well behind her ample curves.\"\n\n\"Would you stop!\" protested Lana, using her arms to clutch her torso and escape their intrusive touches.\n\nKor did not seem convinced. \"A body as sensual as yours, would seem well suited to being a pleasure slave. Yet you chose the warrior path?\"\n\nLana frowned. \"Why can I not be both? A warrior and a . . . well, not a pleasure slave! I mean a woman. Why can't I be a warrior and be feminine as well? I'm a dancer, you know?\"\n\n\"Indeed? I would love to see you dance,\" said Kor. Then he suddenly frowned, his hand going to his chin. \"Miss Lana,\" he said, finally, after a long pause. \"I forgot an important point. All slaves are naked when being transported. Your dress, it has to go, I'm afraid.\"\n\n\"W-what?\" croaked Lana, her hand moving to clutch the dress to her chest. \"Don't joke!\"\n\nKor nodded. \"I'm sorry, but if they see you dressed in what's not typical slave wear, they might start asking questions. If you are naked, they will pay you little attention.\"\n\nLana paled. The slavers might pay her little attention, but she was more worried about the three naked warriors with whom she'd be sharing a journey. And who knew if they'd prepared clothing for her for after the escape?\n\n\"Quickly, my dear,\" said Kor. \"Remove it now and I'll hide it in the compartment with our weapons, so we can give it to you later. Or would you prefer to make the ride back home to Lord Khan naked?\"\n\nHe was right, she realized, if the slavers took her dress, she'd be riding home in the nude, probably sitting behind one of the warriors, who might also be naked. Before she could change her mind, she quickly untied the strings below her breasts and pulled the dress over her head, handing it to Kor. Three sets of male eyes seemed to light up, and she moved her hands to cover herself. Kor grinned as he took the dress. Instead of going to the door as she'd expected, he lay down flat and reached an arm out through the bars, unlocked the secret compartment below. He stuffed her dress inside, closing the compartment again and replacing the key in his bandage. Then he got to his feet and returned to his kneeling position in front of her. \"There, thank you my dear, I'm glad we thought of that before anyone showed up.\"\n\n\"Yes . . . I'll bet you are,\" said Lana, her brow furrowed with a mixture of annoyance and embarrassment. She had sat down again on the bench, her legs tightly closed, one arm across her chest and the other covering her pubic area. Kor's eyes followed her arm down, and then his eyes widened. Suddenly he reached out and grasped her slender wrist, pulling her arm away from her crotch.\n\n\"Hey, let go!\" cried Lana, pulling on her wrist. Her other arm left her breasts to cover her exposed pussy, but Tamar sitting to her left immediately grabbed that arm and pulled it away. Lana suddenly found both her wrists held in the vise-like grips of the warriors, and her struggles didn't budge their grip in the slightest.\n\n\"You're shaved, did they do that already as part of your training?\" said Kor, looking at her. He reached out his free hand to touch her, and Lana crossed her legs with indignation. Suddenly, two hands, one from each warrior, came to her knees and spread her legs apart, making her yelp in surprise.\n\n\"W-what are you doing? Let me go!\" cried Lana, trying to keep her voice down but struggling in alarm. She found herself blushing as she was completely exposed to Kor's intense stare. Her legs were strong from years of training, yet she seemed unable to budge them against the powerful hands that kept her spread wide. Kor's free hand touched her then, and she gasped, squirming as his finger traced the smooth flesh around her pussy, which was spread slightly apart by the position of her thighs. \"S-stop that!\" she warned him, keeping her voice low but stern.\n\n\"It's remarkably smooth,\" said Kor, clearly enjoying the feel of her naturally hairless skin. \"See for yourself,\" he added to the other two men. Tamar used his legs to trap her thigh, freeing his hand to reach down between her legs.\n\n\"No, don't, not you too! Oh, please . . . d-don't . . . \" begged Lana as first one then the other warrior explored her quivering flesh. Their touches felt so good that she trembled.\n\n\"How did the trainers get you so smooth?\" asked Kor, returning his hand. Kurk removed his own hand to give his leader better access.\n\n\"They didn't . . . shave me!\" squeaked Lana, unable to sit still under his continued examination. \"I . . . was born . . . this . . . way . . .\"\n\n\"You're joking?\" said Kor. Lana shook her head. \"Well, we must visit your homeland . . . Calambria is it?\" Lana nodded again, wondering why he felt the need to continue examining her hairless condition.\n\n\"Calambrian for sure. You can tell by her dark hair and large breasts,\" said Kurk helpfully. Lana blushed, and pulled on her captive wrists again, but it was as if the men didn't even notice. Then she jumped, for Tamar's hand was on her breast, feeling its weight and squeezing it.\n\n\"Please, let me go!\" said Lana, keeping her voice low but forceful. \"They could be coming any second, and . . . if they see three male slaves . . . doing this . . . you'll get in trouble!\"\n\nKor shook his head, smiling up at her. \"They'd expect nothing else from male slaves, left alone in a cage with a beautiful and naked female slave. In fact, if they came in and saw us sitting quietly, showing no interest in you, then they'd be suspicious!\"\n\nLana opened her mouth to dispute his point, but there was a certain logic to it. Suddenly she gasped, for Tamar was tugging and squeezing her nipple. \"Stop that!\" she exclaimed, trying to squirm away, but of course there was nowhere to go, she was trapped on the bench between the two men.\n\n\"I was just curious if it were true, the stories about the sensitivity of Calambrian females,\" said Tamar, rolling a finger around her swelling nipple. \"It appears it is,\" he added with a grin.\n\n\"Let me try,\" said Kurk to her left, reaching up his hand to take possession of Lana's other breast. Lana gasped, for with two hands now teasing her, she had the powerful urge to close her thighs, but each of her knees was now entrapped between the powerful legs of the two warriors. Thankfully, while Kor was still doodling circles on her naked flesh above her pussy, he'd made no move to go further south, where Lana was starting to feel the familiar and embarrassing heat reforming.\n\n\"Oh my god!\" said Lana suddenly. She'd seen movement in the corner of her eye, and she glanced over to see Tamar's cock now sticking up at nearly a straight angle, twitching and growing larger. Lana had purposefully avoided looking at the men's' naked crotches, but this was impossible to ignore. \"W-what are you doing?\" said Lana, unable to tear her eyes from the sight of his enormous member twitching in the proverbial wind.\n\nTamar shrugged, smiling at her wide-open eyes and pink cheeks. \"It does that when I'm touching a beautiful woman,\" he said in explanation.\n\n\"Well then stop touching me!\" cried Lana, finally able to look away. Without thinking, she looked the other way, and saw that Kurk to her right also seemed to be growing in arousal. \"Oh god, not you too!\" she wailed, recoiling slightly, though that only moved her in the direction of Tamar. She realized then that these Dellune men were unlikely to be dissuaded by her pleas, she had to do something else. If the slave caravan crew didn't return soon, things might escalate in dangerous ways.\n\n\"I . . . I understand you are strong men, with your own needs,\" began Lana. \"Perhaps . . . after the rescue is completed . . . I could . . .\" Lana couldn't finish the sentence, and she was shocked the idea of personally easing their needs had even entered her mind. She really needed to get away from this place, it was affecting her mind.",
        "\"How selfish of you,\" said Kor, frowning. \"These men risk their lives for you, they could very well die before the mission is completed. How will you make good on your promise then?\"\n\nLana looked at him in shock. \"No! I--I'm sorry, I didn't mean . . . I mean I'm terribly grateful!\" she stammered, unsure what to say.\n\n\"Show us, little warrior,\" said Tamar. \"Show us how grateful you are.\" His hand holding her wrist out away from her body moved then, guiding her hand downward toward his quivering, stiff cock.\n\n\"Oh no, don't do tha---oh!\" gasped Lana as he placed her hand on his cock, gently forcing her fingers to encircle the warm shaft. \"You're so hard . . .\" she said without thinking, then blushed and tried to pull her hand away. But his iron grip kept her hand right where he wanted it, and then he began to slowly work her hand up and down on his rigid member. \"W-what are you doing?\" squeaked Lana, though the answer was rather obvious.\n\n\"I'm receiving my gratitude up front,\" said Tamar, smiling at the pleasure he was obviously feeling. Lana was at first grateful there was one fewer hands touching her, but she quickly found out that having her hand on the throbbing male member of the handsome warrior was . . . distracting, to say the least. Her mind seemed to wander to undesired places of its own accord, and it took great concentration not to think about what was in her hand. Less than a minute had passed, when suddenly she felt a hand entangle in her hair. It was Kurk on her other side, and his strong hand turned her head to face him.\n\n\"What are you doing?\" she stammered. Lana's eyes went wide in surprise and she gasped into the approaching lips of the second warrior. With his hand in her hair controlling her head, she had no choice but to let him press his lips into her, but damned if she was going to open her mouth and return the favor. Kurk broke off the kiss, looking at her with annoyance.\n\n\"It seems the least you could do to give my brave warrior a kiss,\" said Kor disapprovingly from his kneeling position in front of her.\n\n\"He didn't even ask!\" retorted Lana, looking down at the kneeling Kor.\n\n\"Why would he ask?\" said Kor in confusion. \"When you are obviously asking it of him?\" <br ><br >\"What?\" said Lana, looking at him in the befuddled way she often looked at Dellune men.\n\nKor sighed as if dealing with a child. \"Look at yourself, your naked, flushed skin and enlarged nipples all but begging for his kiss. If I were to touch you, I'm sure we would find an eager wetness as further proof of your inviting state.\"<br ><br >\"No, no, not that, please!\" blurted Lana quickly. \"N-no need to check anything. Perhaps . . . you are correct about my state, but it is not my choice, to be naked, to be touched - look how you hold my arms captive?\"\n\n\"Is it our choice to be here with you, caged, with our weapons dangerously out of reach?\" replied Kor, patiently. \"It is simply a matter of circumstance; we are here with you, and we find you impossible to resist, while you find us equally impossible to resist.\" Lana was about to protest about their irresistibility, when he continued speaking. \"Kurk, my friend, go ahead and kiss the ungrateful maiden, I will make sure she is receptive.\"\n\n\"Make sure I'm recep--mmph!\" said Lana, as her head was turned again, and Kurk's lips came to hers. Again, she kept her lips tightly closed, the last form of defiance she had left. Then she felt Kor's hand moving between her legs.\n\n\"Ohh! Mmmph!\" cried Lana, her mouth falling open to moan, the sound quickly muffled by Kurk's demanding lips. Kor's fingers had moved from her hairless skin, directly to her feminine folds, which were even wetter than he'd predicted. Lana quickly tried to break off the kiss, to tell Kor she would comply, but Kurk kept pressing in, his tongue entering through her parted lips and igniting the already rising flames between her thighs. Lana moaned helplessly, unable to refuse his kiss, or fight the explosion of pleasure Kor's fingers were creating inside her. She whimpered when Kurk's free hand came to her breast to squeeze her heaving lobe with relish. The kiss continued, fanning the flames inside her, as he took everything her lips had to offer and more. When he finally broke the kiss, he left Lana panting and flushed red with heat.\n\nKor's fingers left her wet folds then, but a moment later, her head was turned the opposite direction by Tamar, who brought her gasping lips to his own. Tamar continued to use her hand to stroke his cock, and Lana marveled at the man's endurance, for he showed no signs of losing control of himself, though his cock was thick and stiff, filling her hand completely. Lana could scarcely believe her new predicament, so close to escape, but her excitement at her rescue conflicted with her resentment of the behavior of her rescuers. Unfortunately, her body was quickly unfolding like a welcoming flower at the hands and lips of three handsome and powerful Dellune warriors, and she tried to close her thighs to hide the embarrassing effect of their actions, but her knees were still stuck in human vises, too strong to even budge.\n\nFinally, Tamar broke off the kiss, leaving Lana gasping for air and flushed in the face. Her eyes dropped away demurely from his knowing gaze, for she did not wish to acknowledge the effect his kiss had had on her. Suddenly she felt Kurk's hand on her wrist.\n\n\"N-no, please,\" said Lana suddenly, as Kurk began guiding her captive wrist down toward his crotch. \"Not you too!\" she wailed, shaking her head pleadingly. But the warrior only grinned as he placed her hand onto his shaft, and Lana blushed for she now held two Dellune warriors in her small hands.\n\n\"Who's bigger in your hands, girl?\" said Tamar to her left, never ceasing the up and down stroking of her hand on his cock.\n\nLana blushed, shaking her head. She wanted to purge all thoughts from her mind of cocks, and size, and other improper thoughts. Both of their organs felt so large she didn't think they could possibly fit inside her. Then again, she felt terribly wet . . . perhaps they could fit. Lana moaned despite herself, quickly biting her lip when she saw the look of desire in Tamar's brown eyes. Then it occurred to her that the two men might not be content forever with just using her hands, and her eyes went wide, her mind racing.\n\n\"Y-you'd not want to . . . take my use,\" she said, her voice hoarse and dry. \"I'm a highly valued virgin to them, if they were to walk in on you, ruining my value . . .\"\n\nKor smiled, shaking his head. \"Of course, we wouldn't do such a thing, why would you think we were so rude? The men are simply finding a harmless way of amusing themselves.\"\n\nLana giggled, feeling relieved and foolish. \"I'm so sorry, I just thought . . . I didn't mean to insult you.\"\n\n\"It's no matter,\" said Kor, nodding. Then he looked pointedly at her, watching as her hands moved up and down on the two men to her sides. \"However, I'm feeling a bit left out here. Perhaps you could give me the same gratitude? I'm risking my life as well.\"\n\nLana blushed, laughing nervously. \"Oh, um, of course. I'd be . . . happy to, just as soon as um, one of them finishes . . .\" she added, feeling terribly embarrassed about the subject matter.\n\nLana couldn't help noticing that like the other two, Kor had an erection, and he was nearly as large as the behemoth of the group which was Tamar. Kor laughed when he saw her looking down at his cock, which was erect enough that it was sticking straight out toward her chest. \"That could take a long time, I suspect these men are not like the underdeveloped men you are used to.\" Then he stood suddenly, and Lana looked up at him in alarm. \"No need to wait, the hand is a poor substitute in any case. I much prefer the warm environs of a maiden's inviting mouth. Help the girl to her knees, men.\"\n\nHe'd said mouth! The realization of his intentions hit Lana like a slap in the face. \"W-what? No! I . . . I'll use my hand, please, just wait! It won't take long!\" The men were already guiding her off the bench seat and to her knees before the standing Kor, but Lana was frantically jerking her hands up and down the two men's cocks, desperately trying to speed up the process.\n\n\"Calm yourself, girl, you'll emasculate us!\" scolded Tamar, using his hand on her wrist to slow her down to a more comfortable level. When Kurk did the same with her other hand, Lana shook her head, begging.\n\n\"Please, I can do it, I just need more time! I--\" she stopped suddenly as Kor's hand came to her hair, entangling itself in her silky strands. She was now on her knees, and Tamar and Kurk had also moved to the straw floor of the caravan, so that she didn't have to bend her arms backwards to service them. Kor's cock was now right at the level of her mouth, and she looked up at him, her head shaking anxiously and her eyes pleading. Kor simply smiled down at her, and then he firmly guided her mouth onto his cock. Lana mewled a protest as his wide girth spread her lips, but her words became a muffled cry as he pushed himself deep into her warm, wet orifice with a grunt of pleasure. Lana's eyes were wide in shock - she couldn't believe what had just transpired, and she moaned in humiliation as Kor gently guided her in and out on his shaft. She knew she didn't dare bite down on the man who held her rescue in his hands, so after a long moment of hesitation, she decided she should do her best to pleasure him, to make the process as short as possible.\n\n\"You're not unskilled, are you girl?\" said Kor approvingly. Lana groaned in shame, but kept at it, spurred on by Kor's grunts of pleasure. The faster she could get him to finish the better, for somehow, she dreaded a crowd of people entering the caravan storage area and seeing her on her knees, servicing three soldiers, one with her mouth. What could be more shameful? Yet Lana realized with dismay that her own heat was rising rapidly. That was confusing, for they weren't touching her, yet as she suckled Kor's impressive cock, and massaged the other two male organs, Lana felt her breasts growing ever tighter, and her insides growing hotter. All her time in the slave training camp had confused her, she realized, and her gratitude for her rescue grew even greater. She strove harder to please her rescuers, fondling the heavy, full balls of the two men, while using her tongue skillfully on the third. Lana was a bit grateful that the two men to her side were doing the work for her, guiding her hands, and letting her focus on the man using her mouth. But her gratitude was short lived, for after a minute, she suddenly felt a hand on her inner thigh, followed by a finger at the top of her now puffy crevice. Lana moaned onto the thick member that kept her mouth spread wide open as Kurk teasingly circled his finger around her wet opening, making her want to rise off her knees to escape. Then Tamar's hand was in front of her, his finger seeking out her swollen little clit and flicking it gently. Lana moaned as her hips jerked in response, and when she saw Kor looking down at her with an amused expression, she closed her eyes in shame.\n\n\"Do not lose your direction, pretty little slut,\" said Kor, his hand moving her head when she stopped, distracted by the fingers that teased her lower half. Lana blushed in shame at being called a slut, and she protested with pitiful sounds in her throat, but clearly anyone who walked in on them would assume that she was just that. Realizing that discovery was her worst fear, she began to ram herself onto Kor's cock, trying to get him deep into her throat, which was where he seemed to find the most pleasure. If she could just get him over the edge, she could finish her task, yet the other two men continued to tease her with their fingers, and she felt her own orgasm rising and threatening to overwhelm her.\n\n\"Do not cum before we do, little bird,\" admonished Kor. \"That would be rude and unseemly.\"\n\nLana mewled an answer, and her bobbing grew more frantic, her muffled cries more desperate as she tried to control her burning arousal. It only served to amuse the three men, and they continued teasing her and stoking her flames. Whenever she tried to speed up the stroking of her hands, the men would slow her down. She tried whatever she could think of, using her fingers to further excite them, stroking their balls and squeezing their cock heads, and that seemed to work, for she was rewarded with grunts of pleasure from Tamar and Kurk. Lana kept looking about the room, fearful they might be discovered, and then suddenly her eyes widened and she mewled onto Kor's cock, trying to warn them.\n\nBehind Kor, she could see the doorway to the room, and though her vision was obscured by Kor's naked hip, and her own disheveled hair, she could see the door was opening, and someone had entered. Lana had to tilt her head to see them better, and then she moaned with fear, for she saw the legs of a man heading toward them. The colorful clothing looked like the magistrate, but different -- some sort of official it seemed. The man must have certainly seen them by now, and he moved to the side, so that he could no doubt see Lana's face as she moved back and forth inexorably on Kor's cock. Lana was mewling about now, trying to warn the three warriors, but they seemed not to have noticed they had an audience. She tried to pull her head back far enough to get Kor's thick organ out of her mouth, but his hand kept her impaled and unable to speak. Lana strained in Kor's powerful grip on her hair and head, now trying to tilt her head to see the face of the visitor. Finally, she managed to turn her head, and she could see the man's face.\n\nLamare! Lana felt faint. It was the administrator, the one she suspected had sold her and Warrick out to the assassins that ambushed them. His presence here, in the slave camp meant . . . what? Was he her rescuer? She'd assumed they were working with Warrick, but she'd never actually asked Kor.\n\nKor must have realized as well that they had a visitor, for his hand suddenly stopped, leaving his swollen shaft buried deep in Lana's mouth. He ignored her struggles and garbled protests, keeping her mouth and throat completely filled as he looked at the visitor.\n\n\"Oh, don't stop on my account,\" said Lamare, his familiar, caustic voice bringing back unpleasant memories to Lana. \"I'm enjoying the view. I can see that our little warrior has learned a few things, and learned them quite well. I'm sure she would say hello, but I can see her mouth is full at the moment. And her hands as well,\" he added, nodding to Tamar and Kurk.\n\n\"Oh, yes, sir,\" said Kor, approvingly. \"She's quite talented, and thoughtful.\" Lana's face burned with shame, and she was still trying to understand if Lamare was her rescuer, or betrayer. Either way, she was sure she hated him, as she felt completely humiliated on her knees, with a cock in her mouth and two in her hands. Lamare was the last man on Dellune she wanted to see her like this. Then Kor began moving her head again, and Lana's shame somehow grew even stronger. Kor was moving her slowly and suggestively along his cock, never letting her completely off, and he even turned his body to give Lamare a better view of her face.\n\n\"Thoughtful?\" said Lamare, looking at Lana with his usual disdain mixed with desire. <br ><br >\"Yes, sir,\" replied Kor, still slowly working Lana's squirming head in and out. \"She offered to pleasure us in gratitude for her rescue.\" Lana mewled a protest onto Kor's thick shaft, trying to shake her head in denial, but Kor's powerful hand made that impossible.\n\n\"That is indeed very thoughtful of her,\" nodded Lamare. \"Perhaps she'll offer me the same?\" He ignored the loud muffled sounds escaping from Lana's widespread lips at that suggestion. Then Lana froze. Lamare made it sound like the rescue was still on. Either he was teasing her, or there was still a betrayer out there, somewhere. She realized then that she wanted it to be Lamare. She wanted a reason to hate him. To really hate him.\n\n\"She wanted to serve us properly,\" said Kurk, his voice sounding a little strained. Perhaps Lana's hand was getting to him. \"But we thought it best to preserve her virginity, so we had to make due.\"\n\n\"It looks like she is doing her best to accommodate the three of you,\" nodded Lamare, smiling his cruel smile at Lana, who thought she might die of shame. As the conversation had gone on, she'd noticed Kor's demeanor was slowly changing, and no longer seemed able to maintain the slow pace. Then suddenly the warrior placed a second hand on Lana's head, now pushing her more forcefully and deeper onto himself. Lana gagged and choked as he plunged himself deep into her throat, and she continued her pitiful protests to no avail. From the corner of her eye, she could see Lamare's satisfied look, for he clearly was enjoying watching her defilement. Lana closed her eyes in shame when she saw the Lamare grinning at her. He was going to watch Kor cum in her mouth. She thought she might die. Finally, Kor grunted, exploding into her mouth, holding her head still as he spilled his seed.\n\n\"Make sure you swallow his precious seed, Miss Torina,\" said Lamare, clapping his hands. \"Did I not tell you that you'd make a lovely pleasure slave? I can see I was right!\" Lana mewled about, shaking her head, not in refusal but in shame, that she had been forced to humiliate herself before her nemesis of sorts. Thinking she was refusing, Kor kept her impaled on his cock until she dutifully swallowed everything, and then he let himself slip out, stopping along the way until Lana used her tongue to clean him. Finally he was all the way out, and Lana's head drooped, as she was unable to meet the gaze of the men. What would Lamare and the warriors think of her now, she wondered. Was she still a warrior to them, or just another cock-loving pleasure slave? What would the magistrate think if he saw her now? She looked up, and saw Lamare looking at her, his expression one of great satisfaction. She looked at Kor, but he was simply looking at her with a satisfied grin. Lana found dismay in the realization that the more she acted like a good little slave, the more pleased the men seemed to be. Lamare spoke, finally, but not to her.\n\n\"A strange choice, to have a slave girl pleasure you with her hands,\" he said, looking at Tamar and Kurk.\n\nKurk shrugged, his voice a little strained. He was clearly enjoying Lana's handiwork. \"She's a virgin, and she has only one mouth.\"\n\nLamare grinned. \"She's a virgin . . . who's been using the slave salve on herself for some time now. She believed its purpose was to relieve her need.\"<br ><br >Lana and the two men looked at him with equal confusion.\n\nLamare's grin widened. \"One of the beneficial side effects of the slave salve is that it protects the female's flesh. She can be used fully, and still pass inspection as a virgin. This is perhaps the main reason the salve is so expensive.\"\n\nLana looked at him with an expression of disbelief. But Kurk and Tamar were looking at her suddenly.\n\n<br >\"Now that you describe it, I've heard of this,\" said Tamar. \"I heard it takes several applications of the salve to work though. How many times have you used it on yourself, girl?\"\n\nLana looked at him like he was crazy. Yet the salve, and the fruit, had done stranger things to her body already. Was it possible?\n\n\"He's lying,\" said Lana, though she was unsure. Her mind was working overtime. \"The . . . the magistrate would have known this, yet h-he made sure I was not . . . used . . . fully!\"\n\n\"Of course he did,\" chuckled Lamare. \"The training of a pleasure slave is done in steps. She is gradually broken down and taught to submit by various means. A slave in training has to earn her full use. In time, he'd have used you fully.\"\n\n\"No, you lie! He was very pleased with me, yet he withheld my use!\" whined Lana, not wanting to believe it. Yet there seemed to be no reason for Lamare to lie about this either. And if it were true the magistrate could have let her be taken fully without harming her value, it could mean he was protecting her . . . simply because he was so fond of her. Lana latched onto that idea, it was the more probable. She knew he was fond of her, almost protective.",
        "\"Well, this is wonderful news, little bird. Now you can give us a proper apology,\" said Kurk, looking thrilled. His strong arms grabbed Lana by the upper arms, and he pulled the struggling girl into his lap. Lana gasped, feeling his hard, erect manhood against her inner thigh.\n\n\"No! He . . . he lies, don't listen to him!\" she blurted, gasping at the nearness of Kurk's heated rod to her own wet, inviting opening.\n\n\"I've no reason to lie, but I'm afraid there's no time for that,\" said Lamare. \"The slave keeper will be here any minute to get the caravan going.\"\n\n<br >\"It's enough time,\" said Kurk, struggling with Lana who was squirming in his lap. She didn't want to hurt him, but she certainly didn't want to be impaled by that throbbing rod between her thighs. Or did she? No, she did not! she told herself, shaking her head.\n\n\"It is not enough time,\" corrected Lamare. \"Male slaves are strapped into the bench. The girl can help you get strapped down, but you don't have much time.\"\n\n\"Damnit, he's right, how stupid of me,\" said Kor, quickly moving to the bench. He moved to the far side of the bench, then gestured to Lana. \"Come here girl, help me get these leather straps on.\"\n\nKurk reluctantly let Lana off his lap, and she gave him a dirty look before hustling around the bench, trying not to look at the naked warrior who was waiting impatiently. He put his wrists up against the leather straps, one to each side of his head. Lana pulled the strap around his wrist and ran it through the buckle, tightening it down before moving to his other side. Reaching across him, her breasts dangled in front of his face as she focused on her task.\n\n\"A most enticing view,\" said Kor, smiling at the girl. Lana looked down at herself and then blushed when she realized the show she'd been giving him. The two men to Kor's left were also sitting, watching her with great interest.\n\n\"There, you're strapped in,\" she said, stepping back, her arm moving to cover her dangling lobes.\n\n\"Quickly, do me!\" said Kurk. Lana rushed to put the straps on the other man. This time however she couldn't help noticing the impressive warrior was still fully erect. After pausing mid-stare for too long a moment, she looked away with a blush and finished her task, before moving on to Tamar. The 3<sup>rd</sup> warrior's erection was even harder, and longer, and she stared at him in shock.\n\n\"What is wrong with you men!\" gasped Lana, incredulous.\n\n\"I'm sorry, it will stay like that for some time,\" said the warrior, shrugging. Lana sighed and strapped him in, feeling his warm breath on her chest as she leaned in towards him. She gasped when he blew air on her exposed nipples, then glared at the chuckling warrior. Finished, she turned to Lamare suddenly.\n\n\"Are you sending me back to Lord Khan's castle?\" she asked. She had to know if he was continuing the mission.\n\n\"Yes, of course,\" said Lamare, looking at her oddly. \"With Warrick dead, the mission is aborted.\"\n\nLana opened her mouth to speak, but something made her keep silent. So Lamare did not know Warrick was alive either? Then why didn't she tell him? Did Warrick know Lamare was busting her out of the camp? Perhaps her brave warrior had simply not seen Lamare, or perhaps he didn't trust him. Until she could find out, Lana decided to keep silent, and see how things played out. Even if Lamare took her all the way back to the castle, she could meet up with Warrick and continue the mission. \"Of course,\" said Lana, feigning dejection.\n\n\"Do not feel regret, Miss Torina,\" said Lamare. \"All is not a loss -- you have learned so much about what it is to be a pleasure slave, and a proper female. Perhaps you can return to your people and teach the other na\u00efve young ladies what you have learned?\"\n\nLana glared at his smirking face, wishing she could use her foot to wipe off his grin. With great effort, she kept silent, not wanting to play the administrator's game.\n\nLamare smiled at her silence, then his face turned serious. \"I must go, I cannot be seen here. I will meet you outside the city gates at the designated spot.\" Then he hustled out the door he came in.\n\n\"You two,\" said Kor, \"take care of those things before they see you. If they see you two with . . .\" he made a gesture with his head toward Tamar's cock. \"They could get suspicious!\"\n\n\"I can't make it go away,\" said Tamar, shrugging as if it were of no consequence.\n\n<br >\"What difference does it make?\" said Lana, looking about and wondering where she should sit.\n\n\"If their hands are tied,\" said Kor impatiently. \"How did they get hard like that? They will draw the conclusion that you made them that way.\" When Lana gave him a blank stare in return, he sighed. \"A high-value pleasure slave wouldn't go around pleasuring male slaves! They consider male slaves beneath them, and if they did such a thing without being commanded, they'd be severely punished.\"\n\nLana put her hands on her hips and glared down at the seated Kor. \"Well then you better tell them to put those things away, I'm not going to be punished for this!\"\n\n\"It's worse than that,\" said Kor. \"They'll take you back to the camp for punishment, and that'll be the end of our escape plan.\"\n\nLana gasped. \"What?\" The thought of her rescue falling apart was too much. \"I . . well . . . then . . . y-you must do something! I can't go back there! I just can't!\"\n\n\"There's nothing I can do,\" said Kor. \"The only one who's free to do anything is you. And you'd better hurry up, you've got seconds to take care of two Dell warriors.\"\n\nLana paled. \"W-wait, me?\" she squeaked, holding up her hands in front of her.\n\n\"Yes, girl, it's your fault we're like this, so hurry up and finish what you started!\" barked Kurk to her left. <br ><br >\"And me too,\" said Tamar, who was seated not far from Kurk. Lana looked at them, each one with a towering erection that showed no signs of subsiding. It was indeed a strange sight, and was sure to garner a question or two from the slavers.\n\n\"It . . . they'll go down soon . . . right?\" stammered Lana, looking at the two thick rods, her arms crossing in front of her chest.\n\n\"Make them cum, girl, and hurry. It's the only way we're getting out of here!\" Kor was clearly getting worried.\n\n\"Umm, all right . . .\" said Lana, tentatively. She sat down between the two men, and reached out with her hands, and began stroking them. Both men felt so hard and warm in her hands that she blushed despite herself. She knew she had to do these things to assure their escape, but she hoped she could live with herself afterwards!\n\n\"That's not going to work in time!\" hissed Kurk.\n\n\"Yeah, use your mouth, girl!\" said Tamar, sternly. Lana gasped, shaking her head. The man seemed genuinely concerned, though it didn't seem to affect his erection. She thought men would go soft when under stress, but perhaps these Dellune warriors were . . . immune to such stress? Their solution to the predicament seemed awfully self serving.\n\n\"Hurry, we don't have much time!\" hissed Tamar.\n\n\"Oh god, all right!\" whispered Lana. She'd done it once, what was one or two more? Despite her reluctance, she knelt in front of Tamar, eyeing his enormous cock nervously and biting her lip. It made her feel strange in her belly, an odd mix of revulsion and an odd thrill as she contemplated what she needed to do.\n\n\"That's not going to work!\" hissed Kurk. \"You won't have time to do both of us!\"\n\nLana looked at him in consternation. \"Well, what then?\" she hissed back, annoyed.\n\n\"Come here,\" said Kurk. His tone of voice somehow compelled her to move quickly and stand in front of him. \"Turn around, and stand between my legs.\"\n\nLana didn't know how this was helping, but she did so, then she realized with a gasp what he might be contemplating. It was too late, for at that moment, Kurk lifted his hips off the bench, and thrust his cock upwards. With skillful aim, he found Lana's wet opening and pushed himself deeply into it. Lana cried out, rising on her heels to escape the shock of his thick shaft buried deep in the moist furnace of her pussy.\n\n\"Oh god, oh god!\" murmured Lana, transfixed by the sensation of being filled. The feel of his cock inside her turned all other thought into mush.\n\nKurk raised his hips higher so she wouldn't escape. \"No girl, sit back down, and turn your body so you can use your mouth on Tamar!\"\n\nLana's mind was filled with conflict. It felt so good, part of her wanted to ride the warrior for all she was worth. Yet what remained of her dignity resented what he'd done, and wanted nothing more than to escape the powerful sensations of being filled by Kurk. But most powerful of all was her fear of discovery, which meant a return to the slave camp, and to punishments far worse than pleasuring her lustful rescuers. And she couldn't deny the burning desire to lower herself, to take him in deeply and revel in the pleasure of it. With a whimper, Lana reluctantly let herself sink back down, her mouth falling open with a moan as Kurk filled her deeply, before he sat back down on the bench. She followed him, her breathing rapid and her hips trembling from the intense pleasure that grew the further in his cock penetrated. When she lowered herself completely onto his hard member, she moaned, for he was so deep she could barely think. What was she supposed to do? Lana couldn't even remember, all thought was on the hard shaft deep inside her quivering pussy.\n\n\"Oh yeah, that feels good, girl, so tight and wet!\" groaned Kurk. He began thrusting upward, slowly, drawing a soft cry of pleasure from Lana, her hands flailing about to find something to hold onto. Her hands came to his hips, as he began bouncing her in his lap, each bounce drawing a helpless moan from Lana. Her hand came to her mouth, to bite down on her knuckle, so intense was the pleasure. Making love to Warrick had felt so good, but she was shocked to find this was equally pleasurable, though different. Perhaps because he was entering her from behind? Lana felt a pang of shame, she wanted to find Warrick the most pleasurable, and she told herself this wasn't as satisfying as what she'd felt with Warrick, it couldn't be.\n\nTamar to her left was moving his hips on the bench closer to her, as far as he could go with his arms tied next to his head. \"Hello? Remember me?\" he said with annoyance. \"Hurry and lean over, use your mouth on me, girl!\" he hissed, gesturing at his enormous cock.\n\n<br >\"Oh god,\" moaned Lana, bouncing up and down in Kurk's lap, both hands holding onto his hips for dear life. She'd barely heard the other warrior.<br ><br >\"Now, Lana!\" whispered Kor, loudly, his voice filled with annoyance.\n\n\"Oh . . . what? Oh, I'll . . . try . . .\" gasped Lana, remembering the rest of her task. She was barely able to form a sentence as she bounced wildly on Kurk. Then she yelped in surprise as Kurk turned his hips toward Tamar, and she half fell into his lap, using her hands to stop herself, the warrior's rigid cock pushing against her cheek. Lana lifted herself a bit, gasping at the size of the man's organ so close to her face. Then she whimpered in shame, dutifully lowering her head, and with just a moment's hesitation, she covered his cock with her lips, taking him in. He was so big he spread her lips almost painfully, and she gagged when his shaft quickly reached the back of her throat. At the same time, Kurk began thrusting sideways with his hips, his thick cock now hitting a different place inside the wet furnace of her pussy. Lana moaned onto Tamar's cock, trying to shake her head, willing Kurk to slow down. Ignoring her muffled protests, Kurk began pumping rapidly, his deep sideways thrusts immediately overwhelmed the girl, and Lana could do nothing but mewl softly onto Tamar's cock, which itself was now thrusting upward into her mouth and throat.\n\n\"What kind of clumsy service is that, girl?\" barked Kor. \"Did they teach you nothing in the camp?\"\n\nLana mewled an apology, trying to concentrate on her task despite the gush of wetness and heat emanating from her plundered pussy. It was too much to expect of her, to perform a task with which she had so little experience, all while being plundered by a cock that felt so large and long inside her. With great difficulty, she tried to ignore what was being done to her, and focus on using her lips and tongue, and throat, to pleasure the thrusting warrior.\n\n\"It's . . . good enough . . . it'll work!\" said Tamar, thrusting deeply into Lana's throat, ignoring her gagging sounds and cries of distress.\n\nLana barely heard him, for despite her attempts to ignore it, Kurk's large cock was driving her mad with pleasure, and her moans and muffled cries were growing frantic as she felt an orgasm building. She held onto Tamar's hips, her hands clutching almost painfully as she kept her head in the best place to handle his up thrusts. Kurk's own thrusts became harder and deeper then, and Lana's moans became higher pitched and more frantic. Lana felt her insides clenching, and she mewled onto Tamar's cock, anticipating the explosive orgasm that was nearly upon her.\n\n\"Get off me girl, quickly!\" said Kurk from beneath her. \"It's gonna be a lot, and I can't cum inside you, or they might see it when it comes back out!\"\n\nLana mewled a protest; he couldn't pull out now, not when she was so close! Just a few more thrusts and she'd cum, she knew it! Lana pushed her hips hard back against Kurk's hips, driving him deeper and moaning eagerly. Then she felt Kurk tensing up, his hips freezing in place, and he cried out. \"Get off me, now, I can't hold it in!\"\n\nLana mewled onto Tamar's cock, trying to shake her head as she worked herself up and down on Kurk, feeling the orgasm about to explode. Then she heard a grunt of frustration, and suddenly her hips were thrust upward by Kurk, who used his hips to throw her off his lap. His hard cock slide out of her, leaving Lana moaning as the sudden emptiness crushed her near orgasm. She turned her head and saw with dismay that Kurk's cock was pumping white semen in a short arc onto the straw floor of the caravan. With a moan of disappointment, Lana turned back to focus on Tamar. Suddenly she felt an explosion of warmth in her mouth and throat, and she gagged as Tamar's copious fluids filled her mouth.\n\n\"Drink it down, girl,\" said Kor from nearby. \"We can't have leave any evidence for the guards to see!\"\n\nGroaning with shame, Lana reluctantly did as he asked. She was grateful that her hair and the location of her head kept the men from seeing the humiliation on her face. She carefully cleaned the warrior's still rigid shaft with her lips and tongue, swallowing his shockingly large amount of slightly bitter seed, then licked her lips clean. Then finally she sat back, frowning until she saw his erection slowly begin to subside. She looked up to see happy, contented expressions on the faces of the two warriors, and she groaned, for she was anything but satisfied. She'd been so close, that the loss of Kurk from inside her left an intense longing, a burning need unquenched. Lana knelt on her knees before Tamar, panting as she regained her breath.\n\n\"We have a problem, girl,\" said Kor, suddenly. Lana looked at him with annoyance, and then her eyes went wide and her hand went to her mouth. The 3rd warrior, who'd already cum in her mouth earlier, was sitting there, fully erect. He looked ridiculous, like a tree with no branches and only a single limb.\n\n\"What?\" said Lana, getting to her feet to glare at him, incredulous. \"I . . . I took care of you already!\"\n\n\"I'm sorry!\" said Kor, looking genuinely embarrassed. \"You're so beautiful . . . watching you . . . taking care of Kurk and Tamar . . . it was . . . very arousing!\"\n\n\"Well, un-arouse yourself!\" hissed Lana, glancing nervously at the door. \"They must be almost here!\"\n\n\"I should say the same for you, little bird,\" said Kor, looking intently at Lana. \"Look at you, your thighs tightly clenched, skin flushed, your breasts looking ready to burst . . . anyone can tell you are in dire need of release from your built-up desires. You'd best not look like that when the guards come.\"\n\nLana's arms flew to cover her nakedness, and she was nearly hopping up in down in exasperation. She pointed at Kurk in exasperation. \"I was almost finished, and-and . . . he . . . he came too soon!\"\n\n\"Girl,\" said Kurk, looking embarrassed. \"You are so tight, and wet, and eager . . . I'm only a man!\"\n\nLana gaped at him. \"I thought you'd been with SO many maidens!\" she said, her voice taking on a mock masculine tone.\n\nKurk just shrugged. \"Yes, but none held a candle to you. You are a capable warrior . . . an innocent . . . and an otherworldly beauty . . . it is simply an irresistible combination I'm afraid!\"\n\n\"Enough of this!\" barked Kor, gesturing downward with his head. \"Come here, girl, or our rescue will be undone!\"\n\nStill blushing from Kurk's unexpected compliments, Lana quickly rushed to stand in front of Kor. She was wringing her hands, unsure what to do. She thought he might want her to use her mouth again, but she . . . somehow she was hoping she could . . .\n\n\"Place your knees to either side of my hips,\" said Kor. Realizing what that meant, Lana felt her heart leap in her chest, and the fire in her womanhood was suddenly stoked back to an intense heat.\n\n\"Yes, master,\" she choked, her voice dry as she placed on knee on the bench, then the other. Her hands went to his shoulders to steady herself. \"I mean . . .\" she said suddenly, realizing she'd called him Master. What was wrong with her? She saw him smiling up at her. Was he smiling because she'd called him 'master'? She wished she could take the words back!\n\n\"You're doing great, Lana. Now lower yourself onto me,\" said Kor, softly. \"Quickly now, we haven't much time!\"\n\nHis words forced her into action, and looking down, she lowered herself, trying to aim for his cock, which looked thick and almost reddish below her hips. Lana gasped when she felt his warm shaft touch her inner thigh, and she moved, trying to find her center. She didn't realize how difficult it was, the men seemed to have no trouble finding her. Lana bit her lip as she felt the head of his cock moving around the outer lips of her wet crevice, but when she tried to lower herself, it would seem to slip and miss her opening.\n\n\"You do not have much practice with this, I see,\" said Kor, quietly, amusement in his voice.\n\n\"No, I do not!\" wailed Lana, now moving her hips around frantically. The more his cockhead moved around her opening, the hotter she became, and now she needed him inside her for more reason than one. \"Can't you do it?\" she asked, exasperated.\n\n\"You need to learn this skill, little bird,\" said Kor, smiling up at her and enjoying the feel and sight of her antics.\n\n\"Now?? When we're about to be discovered??\" wailed Lana. His cock was now so slick with her juices that it was simply slathering around her inner thighs, slipping and rubbing and driving her mad.\n\n\"Try using your hand to guide it, little slave,\" said Tamar, watching from her left.\n\nLana groaned, for she hadn't even thought of that. Reaching down with her right hand, she grasped his cock, gasping at how slick it was. Using her hand, she was quickly able to steady it and find her opening, and then she slowly and carefully lowered herself onto the head. \"Ohh!\" cried Lana, her success rewarding her with a gush of pleasure. Suddenly, Kor thrust upward, impaling himself completely in her inviting folds. Lana arched her back, throwing her head back to scream. She thought for a moment she might have cum, but her powerful need was still there driving her to push herself onto his thick shaft. With a grunt of pleasure, Kor lowered his hips back to the bench, and Lana followed him, throwing both arms around his neck as she began to ride him up and down, not wanting to go to high for fear of him slipping out. The feeling was so intense and wonderful that Lana was immediately caught in its rapture, moaning with abandon as she thrust her hips up and down, pounding herself on Kor's magnificent manhood.",
        "\"Oh god, it feels so good,\" wailed Lana, feeling her orgasm rising again. Kor himself was thrusting upward to meet her down thrusts, grunting with pleasure. He moved his head, finding Lana's lips with his own. Without even thinking, Lana kissed the warrior deeply, moaning as his warm lips and searching tongue drove her fire even hotter. She couldn't believe she hadn't cum by now, and was reminded of the salve, which made her orgasm so elusive. \"Please, don't cum yet!\" she murmured, breaking off the kiss and gasping for air to speak. \"The s-salve . . . it makes . . . it hard . . . to cum!\"\n\n\"Don't worry, little bird,\" said Kor. \"I'll take care of you.\" Then he leaned in to suckle her ear and kiss her neck, and Lana shuddered with pleasure, marveling at his dexterity to do such things while she was bouncing in his lap. \"Lean back for me, my dear,\" said Kor suddenly. <br ><br >Unsure of his intent but eager to do whatever he said, Lana leaned back. Then she moaned as his lips came to her breast, and his teeth began to gently bite her engorged nipple. Lana felt her insides clench hard on Kor's cock, drawing a sound of pleasure from the warrior, who continued suckling her breasts and nipping at her nipples. He moved his hips, changing the angle of his attack, and Lana arched her back and cried out at the new, delicious change in sensations. Suddenly her orgasm began to crest, and she felt herself clenching and bucking on Kor's thrusting shaft. Perhaps sensing a scream coming, the warrior leaned forward and took her mouth in his, muffling the screams as Lana felt the orgasm crash over her in waves. Just then, she felt a warm explosion inside her pussy, as Kor came inside her, and she screamed into his kiss again as the pleasure overpowered her senses.\n\nIt seemed an eternity until the wave passed, and Lana leaned against the warrior, panting and gasping for breath, her breasts heaving against his broad muscular chest. She realized she had one armed wrapped around his neck, the other hand clutching a tuft of the warrior's hair behind his head. Blushing, Lana gently relaxed her death grip, leaning back to see the warrior smiling warmly at her. Just then, all eyes turned to the door, for they heard it opening.\n\n\"Quickly, on your knees in slave position!\" whispered Kor to Lana. Lana climbed off Kor, forgetting that he was still deep inside her. The sensation of his still hard member pulling out was so intense that she cried out and fell off the bench to land on the floor. Lana quickly scrambled to her knees and moved away, careful to avoid the splotchy white stain of Kurk's fountain of cum. She got into her slave position, then looked down, just as several men entered the room. Lana snuck a glance to the side, and was relieved to see all three soldiers' cocks were already settled down to an innocuous level. They'd just made it, she thought, the tension easing from her shoulders as she sighed with relief.\n\nThere were five men, three guards, a driver and the slave keeper, who was carrying a ledger. \"Three males, one female, looks like that's it for this trip. Let's get going.\" Lana lifted her head up to discretely look, and found the slave keeper standing in front of her, looking through the bars with a smile.\n\n\"So, it's the slave kennels of Gorum for you,\" he said with a cruel smile. \"You look too high-grade for that, I'd have expected Lord Nikos' harem for you. But I don't write them, I just read them,\" he added, holding up his ledger. Then he turned, grinning at Lana's anxious expression as he went back to his business. After that, the slave keeper and the driver seemed to pay little attention to what was inside the cage. They were slaves after all, nothing but livestock. The guards on the other hand had little to do but stand around, waiting for the other two to prepare the one-car caravan for departure, and their eyes mostly fell on Lana. She kept her eyes down, not meeting their gazes, and thankfully they kept silent. Lana was trembling slightly, fearful and anxious about their escape. What if the magistrate found the caravan? Or they discovered something out of place. But they'd been careful, and she realized how strange it might have looked if one of the 'slaves' had been sitting with an erection, or Lana herself looked in a near orgasmic state. After a few worrisome minutes, the caravan was ready to go. The driver had hitched up four horses to the front, and the slave keeper held up the ledger for him to sign, then waved them out of the main double door, which the guards opened for him. Just then, Lana gasped, for she felt a trickle of fluid coming out of her pussy. Kor's seed! She'd forgotten about it. Lana squeezed her muscles, trying to keep it inside, but that was barely effective. She bit her lip as two of the guards walked past her, but luckily they didn't look her way, instead taking up positions to the side where they began walking with the caravan as it moved.\n\nIt wasn't until they had left the barn-like structure, had moved down several empty streets, and were approaching the main gate that Lana's heart rate began to slow. They were going to make it! She looked down at herself with a grimace, seeing a small pool of white cum on the caravan's floor between her widespread thighs. She had nothing to clean herself with, so she just kept her legs wide and let it drip, trying to suppress the feelings of shame that came with it. Then she paused, for the guards at the gate were asking for paperwork. They looked it over, glanced with disinterest into the cage, then waived them through. Lana's heart leapt, and her relief grew with each revolution of the wheels as they began to put some distance between themselves and the slave camp. The guards were jogging alongside the caravan, and Lana marveled at their stamina. She hoped her rescue team wouldn't have to kill them, but that seemed to be the way of this world. Just as Kor had predicted, the guards weren't paying any attention to the inside of the caravan, and Lana lifted her head to look at Kor.\n\n\"It'll be about 20 minutes,\" he said softly. \"When the caravan stops, I want you to quickly remove my wrist straps first, then I'll get the weapons while you take care of Tamar and Kurk.\"\n\n<br >Lana looked alarmed. \"You're not going to kill them, are you?\" she whispered. \"Please don't!\"\n\nKor didn't answer, he only winked at her. Lana hoped that meant no. She felt her heart thumping wildly. Twenty minutes seemed an eternity, during which Lana began to worry. What if something went wrong, and the caravan wasn't ambushed? She thought about the caravan's destination -- he'd said the slave kennels - and she swallowed heavily. If the caravan didn't stop . . . well, they still had the key, they could try to escape. As the time wore on, Lana's thoughts went back to the three warriors, and all the shameful, yet incredibly pleasurable things she'd done. Lana realized then that she'd gone way too far in accepting her slave training. Had she not escaped today, how much farther would she fall? She shivered thinking about it. But the further they went from the camp, the less she felt that fear. She told herself that from this day on, she would purge all that slave training from her body and mind, and never let herself be in such a position of bondage again. She'd done those things for a dangerous, complex mission, a necessary evil that would not be repeated. Lana immediately felt better about herself, and not long after, she heard a shout, and the caravan came to a halt. She heard voices up ahead, and the guards to the side of the caravan quickly moved up forward and out of sight.\n\n\"Now!\" hissed Kor quietly, but Lana was already on her feet and moving to him, shaking the blood back into her leg muscles. She quickly undid the straps that held his wrists, and when freed, he immediately flattened himself on the floor of the car next to the bars, reaching through them to the hidden compartment. Lana turned her attention to the other two men, and she quickly undid their bindings. One at a time, Kor pulled three swords from the hidden compartment, and he tossed two of them to his men, before moving to the back gate of the caravan. He skillfully reached through the bars and undid the lock with the key, before slowly and quietly swinging the creaky door open. Lana watched in amazement as the three soldiers moved as quietly as wraiths, down the ramp, their bodies smooth machines of sinew and muscle. Then the soldiers turned and moved forward passed Lana in the cage and toward the voices. In moments they were gone, and Lana moved down the ramp to follow them. Moments later, she heard shouting, and the clash of steel on steel. It lasted only a few moments, and then there was silence. Lana dashed forward to find a clearing. Lamare was there, standing next to a horse, and the three guards and the driver lay on the ground. Her three soldiers appeared uninjured, thankfully, and Lana ran forward to check on the four downed men.\n\n\"They'll be fine, little bird,\" said Kor with a smile. \"We knew you'd be happier if we didn't kill them. They'll have one hell of a headache when they wake up.\"\n\nLana could see no blood, and all four did indeed seem to be just unconscious. She turned to smile at Kor. \"Thank you,\" she said. \"I'd feel terrible if anyone had to die just for me to escape.\"\n\n\"Yes, we thought as much, big-hearted little warrior,\" said the big Tamar, smiling down at her. Lana blushed, remembering what had transpired between them just minutes before. Her eyes flicked to his nakedness before going back to his big eyes, and she smiled warmly.\n\n\"Thank you, all of you, for rescuing me,\" she said, getting to her feet. \"I don't think I could have survived another day in that place.\"\n\n\"And you won't have to,' said Kor, patting Lana on the shoulder. \"But let's not dally here, we must make haste to get home. I'll fetch our clothes.\" Then he turned to run back toward the caravan.\n\nLana and the others nodded, and they quickly hustled over to where Lamare was getting on his horse. He looked sternly at Lana, and watched Kor returning with their clothing and armor. <br ><br >\"I'll take the girl with me, I trust you can find your way back home.\" He threw a leather pack on the ground. \"I brought some provisions for you.\"\n\n\"Some horses would have been preferable,\" grumbled Kor with a frown. \"I see you brought one for yourself.\"\n\n\"Don't take that tone with me, soldier,\" barked Lamare. \"Lana, get on the horse, now! There are roving patrols in this territory, we could encounter one here any minute!\"\n\nKor handed out their clothes, giving Lana her white dress and the other two their armor and leathers. Then Kor handed her a small square cloth. \"You can use this to clean yourself,\" he said quietly, so no one would hear. He gave her an embarrassed look, and Lana leaned in and gave him a soft kiss of gratitude.\n\nLana discretely used the cloth to clean away Kor's cum and her own juices. Then she quickly shimmied into her dress, and when the soldiers were dressed, she gave them each in turn a warm hug. Tamar enveloped her in his arms, pulling her in tight for a warm kiss. Lana moaned softly into his lips -- she felt so small in his arms, and his kiss reminded her of how great was her need, only partially quenched by lovemaking.\n\n\"Always the romantic,\" said Kor, shaking his head.\n\n\"You had more than that,\" said Kurk, throwing Kor a glance. Finally Tamar broke off the kiss, leaving her panting and breathless, blushing as she waved goodbye as the three men turned and began to jog away.\n\n\"Get over here, girl!\" hissed Lamare. Lana reluctantly ran over to the horse, and was about the climb up behind him. \"No, you ride in front of me,\" he commanded. Lana grimaced in annoyance, and let Lamare help her up into the saddle, her back to him. She turned to see the soldiers, but they had vanished into the woods like ghosts. With a frown of disappointment, she turned to look up the trail. Lamare guided the horse at a gallop in the direction the soldiers had disappeared. As they passed through the forest at high speed, Lana looked right and left, trying to catch a glimpse of her soldiers, but she guessed they wouldn't be easy to spot. They settled into a fast walk, and after about thirty minutes, Lamare slowed the horse to a halt, just before a fork in the narrow trail.\n\n\"Why are we stopping?\" said Lana, turning to look at the man behind her. <br ><br >\"We are still in Nikos' territory,\" said Lamare. \"You must be in chains, in case we are stopped.\"\n\nLana sighed. She should have known. \"I understand,\" she said. \"This is your last chance to treat me like a slave.\"\n\nLamare barked at her. \"This is how you treat me? The man who arranged your escape?\"\n\nLana paused. That confirmed it, it wasn't Warrick who'd sent the soldiers, it was Lamare. She didn't trust the man, and she half suspected he got her out for his own nefarious purposes. But she realized as much as she hated the man, she probably shouldn't act so ungrateful; he wasn't going to kill her, and being out in the woods, even in chains, was far preferable to serving seven strangers in the slave camp. She decided she'd play along for now.\n\n\"I'm sorry,\" she said, finally. \"Thank you for rescuing me. You can put your chains on me until we cross the border.\n\n\"That's more like it,\" said Lamare. Then he slid off the horse and reached into his side pack, pulling out a length of brass chains, the same type he'd used on her before. He circled the chain around her waist, then put the two rings on her wrists. He then pulled on the chain, bringing her wrists tight to the sides of her body, and then wound the excess chain around the hook at the center of the belt chain. Then he returned to his side pack and removed a set of leather manacles, joined by another, thicker length of chain. He reached down and attached one manacle to her ankle, then ran the chain under the horse's chest, and attached the second manacle to her other ankle. There wasn't much slack in the chain, and it kept Lana's legs tight against the horse.\n\n\"That's a little excessive, don't you think?\" she complained, squirming a bit in her bonds, as Lamare climbed up and seated himself behind her.\n\n<br >\"I seem to remember you leaping off the horse like a flying squirrel last time we rode together. This is necessary, for my purposes,\" answered Lamare. Then he got the horse moving, and immediately made a sharp right at the fork in the trail.\n\n\"What purposes? And isn't it the other way?\" said Lana. It seemed like this fork in the trail was heading south, away from the direction of Lord Khan's kingdom.\n\n\"It's the right way for where we're going,\" said Lamare, cryptically.\n\n\"And where is that?\" asked Lana, a pit developing in her stomach. She was right not to trust Lamare, and now she wished she'd refused to let him chain her up.\n\n\"To make a deal,\" said Lamare.\n\n\"What deal!\" shouted Lana, growing more and more angry.\n\nLamare suddenly held something up in his hand. It was a ball gag, one meant to silence her. \"Keep your voice down, or you'll wear this until we reach our destination.\"\n\n\"What deal did you make, Lamare?\" said Lana, her voice quiet but terse.\n\n\"Well, I haven't made the deal yet, but I'm sure when he sees you, I'll get what I want.\"\n\nLana's insides turned to ice. When she spoke, her voice was a whisper. \"You're taking me to Nikos, that's it, isn't it?\"\n\nLamare chuckled. \"He's sure to love receiving a beautiful female assassin, hand delivered in chains. As well as my intimate knowledge of Khan's defenses.\"\n\n\"Lamare!\" hissed Lana, unable to believe her ears. \"I knew it was you that betrayed us, you traitor! I'll kill you!\" She twisted about in her bonds, uselessly. Without thinking, she tried to use her mind to throw him off the horse, and then she winced at the head-splitting pain her still damaged mind produced.\n\n\"Now, now, don't hurt yourself,\" said Lamare, \"I can explain everything.\"\n\n\"Save your breath, traitor,\" said Lana, panting after the pain subsided.\n\n\"Oh, but this is the truth. My liege, Lord Khan, is out for blood, and he will start a war no doubt. I however, am only interested in peace. I informed my contacts here about an assassin, sent to hide among the peaceful kingdom of Wight. They gracefully arranged to meet you and my late friend Warrick.\"\n\nLana paused, thinking how she respond. \"He's dead?\" she exclaimed.\n\n\"I'm afraid so,\" said Lamare. \"He bled enough to fill a river, according to the soldiers who found you.\"\n\nShe bowed her head, feigning grief, but she was deep in thought. So, that confirmed he didn't know, thought Lana. Lamare would probably soil his pants if he knew Warrick was alive, and he'd soon be looking for her if he wasn't already. But she needed to hide this information from Lamare. Lana tried to imagine Warrick being dead, imagined never seeing him again. In moments, she felt her eyes welling up. Lana let the emotion ride over her.\n\n\"I hate you,\" she murmured, choking on very real tears.\n\n\"Don't cry, little slave,\" said Lamare. \"You will soon have a new Master. Our friends unknowingly did me a favor in preparing you. You'll make a fine pleasure slave for Lord Nikos.\"\n\nLana turned her tear-streaked face to see him. \"You bastard.\"\n\n\"Don't be that way. I need you to get an audience with Lord Nikos. If I just turned myself in and said I'm Lord Khan's administrator, I might just be executed on the spot as a spy. I figure he'll reward me handsomely for delivering an assassin, doubly so for one that so perfectly fits his taste in females.\"\n\nLana fumed. \"Money? That's what you . . . you betrayed your country for?\"\n\n\"No!\" he said. \"It is Lord Khan who is betraying his country, declaring all slaves to be free. It is anarchy, an affront to manhood! The greatest reward will be the look on your face as I deliver you to Lord Nikos. The proud female who preached freedom for women . . . handed over to the slave lord in chains. I may ask him to let me train you, in lieu of money as a reward.\"\n\nShe shivered at the thought of Nikolai receiving her in chains. If Lamare told him she was an assassin, he'd most likely recognize her, since the GWA would be a likely source of assassins. It was the worst-case scenario they had envisioned. Then her eyes went wide. \"What of Kor, and Kurk and Tamar?\" murmured Lana, her heart catching in her throat. She was suddenly terrified that he might have betrayed them as well.\n\n<br >\"Oh, your charming rescuers will be fine, they're blissfully unaware of my true plans, and are on their way home as we speak.\"\n\nLana sighed with relief. Lamare smiled at her. \"I am not the evil man you think I am. Have I harmed you in any way?\"\n\nLana glared at him. \"Your men . . . killed Warrick, and tried to kill me!\"\n\nLamare looked annoyed. \"I gave them strict instructions not to harm you! Fools. Besides, did they not offer him a deal, to give you up? It's not my fault the fool decided to play the hero.\" Then his eyes narrowed. \"How did they kill him, and not come home with you? They found all their bodies save one, and that man hasn't been seen.\"\n\nSo, the man she'd let go had just made a run for it. Good, then they didn't know what she did. Lana smiled grimly at Lamare. \"Warrick killed them, before he succumbed to his wounds.\"\n\n\"He was a formidable man,\" said Lamare, nodding. \"For all the good it did him. You cannot get in the way of tradition.\" Then he smiled, looking down at Lana's figure.\n\n\"Now then,\" said Lamare, his voice mocking and acidic. \"It's a long ride to Gorum. Let's talk about what you learned in the slave camp.\"\n\nLana groaned. \"If you're so curious, why don't you volunteer to be a pleasure slave,\" she retorted.\n\n\"Now, now,\" said Lamare. \"There's no need to be evasive. I saw how you responded to the punishment in the training room. It seems you're adopting well to our traditions. I'd guess you're well on your way to being a good pleasure slave.\"",
        "Lana bristled but said nothing. There was no point in arguing with the man.<br ><br >\"There is no need to be ashamed,\" said Lamare in a comforting tone. \"It is simply your nature, which I saw in you from the beginning. You are embracing your inner need to serve. Are you not feeling better about yourself? Don't you feel the oppressive veil of your strict upbringing being lifted?\"\n\n\"What? No!\" retorted Lana. \"Untie me and see if I offer to serve you!\"\n\nLamare smiled. \"Oh, you will serve me in time! But first things first, I would not want to deny you the pleasure of bondage, for you find it arousing, do you not?\"<br ><br >\"Find what arousing . . . bondage?\" stammered Lana, feigning confusion. She knew exactly what he was talking about, for the magistrate had accused her of the same.\n\n\"Yes. Like many new slaves, you take comfort in being bound, for it lets you maintain the facade that you are unwilling.\"\n\nLana paused. \"You are mad,\" she said, finally. \"Whatever I did in that place, I did to survive. It is of no relevance now that I have . . . escaped.\" The word died on her tongue, for she realized she was now in even more danger than in the camp.\n\n\"Am I wrong, are you not feeling the passions growing inside you?\" said Lamare, reaching his hands up so his fingers could gently slide up her bare rib cage. Lana's body was oversensitive after the day's experiences, so she couldn't help jerking at his touch. His hands moved up, sliding across the round curves of her breasts, to gently and firmly slide beneath the white dress to squeeze her nipples. Lana sucked in a sharp breath at the riveting sensation, yet his fingers were followed by his palms, scooping up her breasts and squeezing her lobes such that her nipples stuck out pressing into her dress. \"Tell me you do not find this arousing?\"\n\n\"I-I don't!\" gasped Lana. \"Take your hands off me!\" she hissed. Lamare ignored her, instead continuing his light exploratory touches. His fingers were like fire, re-igniting all the dormant need that a full day of sexual torments had created inside her. His hand moved to her other breast, and by that point Lana was squirming and straining against the chains that kept her hands tight to her sides.\n\n\"Chained, and without your abilities to free yourself, you are as helpless beneath my touch as any Dellune slave girl, are you not?\"\n\n\"Lamare . . .\" she protested, her voice a bit high pitched. \"If I were you, I'd be careful. You need me alive, but to me, you are expendable,\" she said. She tried to sound menacing, but her voice had a tremor of fear. That helpless feeling was returning, after disappearing as she thought she'd escaped. She was now bound again, helpless to stop this cruel man from anything he wished to do to her. Lamare's hands never ceased, moving up and down her sides again with feather-light touches. Lana's body felt overwhelmingly sensual. She felt every breeze on her skin, while the gentle movements of the horse beneath her, combined with Lamare's hands on her skin, was still making her feel like swooning. After two days of slave training, she had no defense against his sensual touches.\n\n\"My na\u00efve little spy, you should be more worried about what Lord Nikos will do to you,\" replied Lamare. Then he slipped his hands in the sides of Lana's dress, to cup her breasts again, drawing a gasp from Lana. \"When I tell him who you are, a student Arbiter, sent to kill him . . . oh, that will be interesting!\" chuckled Lamare. His hands were jiggling, squeezing and fondling Lana's breasts in a crude manner, that nonetheless was making her bite her lip in a vain attempt to ignore the intimate sensations. Even worse, it was beginning to dawn on Lana that she was in serious trouble. Her three soldier rescuers were on their way home, and Warrick couldn't possibly find them in the middle of the forest by himself.\n\n\"How does it feel to be helpless?\" asked Lamare in her ear, as if reading her mind. \"The whole time in the training camp, you felt helpless, didn't you? Powerless, vulnerable. Female. Well, your days in the slave camp will be a vacation compared to what Nikos will do to you. I definitely plan to ask him if I can assist in your training. Oh, the things I will do to your innocent, young body.\"\n\nLana didn't answer him, but her heart was pounding in her chest. She thought of snapping her head back -- she could probably break Lamare's nose, but she was still chained to the horse. If she got away, she'd be lost in the forest of a land where they enslaved women on sight. Suddenly she felt Lamare's hand leave her breast to press against her chest, above her heart. \"Yes,\" he purred, \"your heart is pounding in fear at your helplessness. Think about what he will do to you. Imagine it. Visualize it.\"\n\n\"All I can think of is what I plan to do to you,\" hissed Lana, trying to keep the tremor from her voice. She didn't want to give him the satisfaction of knowing she was scared.\n\nLamare's hand left her chest, and he reached up to turn her head so she could see his face. \"Now, I know what you're thinking, girl. You could escape. And perhaps you could. But who would find you? What if it was one of the roving slave caravans? They keep their pleasure slaves chained and aroused at all times. You'd be used by so many men, I doubt you'd have the strength to fight, even if your powers returned.\"\n\nLana looked at him in alarm, but then her shoulders slouched in defeat. She knew he was right, this kingdom that Nikolai had created was cruel and merciless. She knew now that such a fate was real, it could happen to her, Arbiter or not. The terrible image he'd painted turned her insides to mush. But she wasn't going to show her fear in front of this beast. Lana steeled herself and fought back the tears.\n\n\"You might be right . . .\" she said, finally, her words bringing back her courage. \"But I am an Arbiter, I will find a way out of whatever predicament I am placed in.\"\n\n\"I like your spirit,\" nodded Lamare. \"But that reminds me. I have something for you.\"\n\nLana turned her head to look at him, and saw him holding up a small glass jar. Her eyes widened in recognition. Lamare was already pouring some of the oil onto his hands, and then he reached inside Lana's dress. She gasped as his hands began to rub the slave salve into her breasts, taking special care to thoroughly lubricate her nipples. It felt so good, so intense that Lana's back straightened and she sucked in air through her teeth.\n\n\"Ah, yes, I missed helping you with your slave salve applications,\" said Lamare with a cruel chuckle. \"It seems to have worn off a bit -- I watched you cum twice at the hands of the auction guests.\"\n\nLana jerked her head around to look at him. \"You . . . you saw that?\"\n\nLamare chuckled. \"Oh yes, all four of us watched. Kor and his men wanted to intervene to help you, but I made him wait until the last moment. He was quite insubordinate, but I reminded him of his family back home. That quieted him down.\"\n\n\"You know I'm against killing, but I'd make an exception for you,\" whispered Lana, incredulous.\n\n\"It would have been an even more suitable punishment if I'd let the seven men ravish you. But we were short on time, unfortunately.\"\n\nLana shivered, thinking how close she'd been to the unthinkable.\"You truly are a bastard,\" she croaked, her throat dry and her breathing coming in short gasps. She couldn't help struggling to escape the hands rubbing the salve into her breasts and nipples. Lana felt a growing wetness where the pommel touched her widespread thighs.\n\n\"You are quite the ungrateful little slut,\" remarked Lamare. \"I let you enjoy reaching a climax twice, and saved you from the slave camp.\" Then Lana's eyes widened in apprehension. He was dipping his finger into the jar of salve and reaching under her dress.\n\n\"No, don't you dare-oohhh!\" cried Lana, struggling as Lamare began spreading the salve around and inside her pussy.\n\n\"Naughty girl,\" remarked Lamare, delving deeply with his finger to spread around the salve. \"You're such a mess down there, I'm afraid I'll have to use some more.\" Then he was dipping his finger again, reaching for her.\n\n\"No, no, ah! Gah!\" moaned Lana, her thighs jerking and her head rolling back. Lamare's left hand returned to her breasts, while the fingers of his right hand continued to torment her puffy wet pussy lips and damp crevice. \"Lamare---why . . . are you . . . doing this?\"\n\nWithout ceasing his torments, Lamare explained. \"The harder it is for you to cum, the greater your need will be, and the more eager you will be to please your new master. I am simply putting on a fine polish to my gift for Lord Nikos.\"\n\nLana barely heard his explanation, for she was shuddering and gasping from the pleasure his hands were forcing on her defenseless body. Then mercifully he stopped, and Lana leaned back against him, gasping for breath.\n\n\"I have something else for you, slave,\" said Lamare. Lana turned and saw a leather flask. Her eyes widened in recognition. \"Yes, a full flask of your Somarian fruit juice. I'd like you to drink it all, like a good girl.\"\n\nLana stiffened in fear. If she drank that, it would set back her powers for days . . . or more! She'd be completely helpless when he delivered her to Nikolai. \"No!\" whispered Lana, her stomach dropping.\n\n\"Yes,\" corrected Lamare. \"We can't have your abilities returning when I deliver you. This will ensure you spend the first few days in Lord Nikos' hands, powerless. That should be enough time for him . . . or me . . . to break you I think.\"\n\n\"I'm not drinking that, you can go to hell!\" spat Lana. Lamare seemed to have expected this, for he put the flask back, and retrieved something from his bag. It was a gag of some sort, and he immediately reached up toward Lana's face holding it in both hands. \"No!\" cried Lana, twisting her head about, to avoid being gagged. Lamare persisted, and with her arms and legs restrained, Lana had nowhere to go. In a few moments, he had the gag against her mouth, and trying to push some sort of metal cone between her lips. Lana fought him, her teeth tightly clenched, as he tried to force the cone between her tightly clenched jaws. Lamare reached up and pinched hard on her nipple, forcing a cry from her throat, allowing the cone to penetrate into her mouth.\n\n\"Excuse me, am I interrupting something?\" Lana heard the voice from ahead of them on the trail, a familiar voice. Lamare heard it as well, for he stopped what he was going, and they both turned to look. The magistrate! Lana couldn't believe her eyes. There blocking their path on the trail, was the magistrate, on horseback, framed by a dozen soldiers, armed with swords and crossbows. The crossbowmen had their weapons ready, though they were pointing toward the ground rather than at Lana and Lamare.\n\n\"Yes, you are interrupting!\" responded Lamare, regaining his wits. \"I am on official business for Lord Nikos himself. Stand aside and do not disturb us again.\"\n\nLana shook her head, dislodging the cone from her mouth. She looked at Lamare, saw his unwavering confidence, though tinged with annoyance at her defiance. She realized he must not recognize the magistrate, and thought this was just some random patrol.\n\n\"That is interesting,\" said the magistrate, raising an eyebrow. \"Because a friend of mine, a Captain in Lord Nikos' personal guard, informed me that your business is . . . in fact . . . not official at all.\"\n\nLana felt Lamare stiffen in the saddle behind her. Just then, two more soldiers appeared out of the trees, behind and to the side of their horse. One of them took the reins of the horse.\n\n\"I don't know you, or your Captain friend,\" retorted Lamare, maintaining a fa\u00e7ade of confidence. \"I am taking this slave to Lord Nikos to gain an audience, and I have every right to do so. Please stand aside.\"\n\n\"That slave is not yours to give,\" replied the magistrate. \"And as Lord Khan's personal administrator, and therefore a spy, you have no rights in this land. Men . . .\"\n\nLamare gasped behind her. \"No! I . . .that's a lie!\" he sputtered. Then two sets of strong hands reached up to pull him out of the saddle. Lana watched with fascination as the soldiers forced the struggling, protesting administrator to his knees, brought his arms behind him, and quickly began winding rope around his wrists. When they were done, they brought him to stand before the magistrate, who had dismounted from his horse and was walking forward.\n\n\"T-this is a mistake!\" cried Lamare, his voice losing its confidence and taking on a tremor of fear. \"I'm not a spy!\"\n\nThe magistrate looked at him, his expression emotionless and hard. \"You have one chance to make things easier on yourself. Stop lying and tell us the truth, otherwise, well . . . we don't have much use for captured male spies. Except as entertainment for the executioner.\"\n\nLamare's knees buckled suddenly, and he had to be helped back up by the two soldiers at his side. Lana felt a twinge of sympathy for the man, and she quickly forced it down. Whatever the magistrate was going to do to him, he had it coming.\n\n\"Alright!\" said Lamare, \"I . . . it's true, I am Lord Khan's administrator. But I am not a spy! I was bringing this slave to your Lord to seek an audience to discuss peace terms. That's the truth!\"\n\nThe magistrate paused. \"This slave is yours?\"\n\n<br >\"Yes!\" said Lamare. \"She is . . . one of a kind . . . I need such a beauty to gain an audience with Lord Nikos.\"\n\nThe magistrate nodded, glancing at Lana with a smile. \"Yes, she is indeed very special. It is agreed then. Men . . .\"\n\nLana watched in shock as the soldiers next to Lamare produced a leather ball gag, and then they forced Lamare to his knees.\n\n<br >\"W-what are you doing?\" he protested, sounding terrified to the core. Lana realized Lamare was such a man who was only strong when he held the power over helpless women. The soldiers were holding up the gag, and Lamare shook his head wildly. \"No, please, don----ggghh!\" In seconds, the soldiers had gagged him, and his voice was reduced to pitiful mewling sounds. The magistrate spoke down to him.\n\n\"You are a spy, and a liar. You murdered the lawful companion of this female, and then conspired to steal her from our training camp. You will never get your audience with Lord Nikos. Instead, you will spend the rest of your days laboring in the iron mine of Galamar. A soft, privileged man like you might last a week if you're lucky. Then again, the male slaves who work the mine are big and strong. They might keep you alive for their sexual pleasure. Take him away, men.\"\n\nThe sounds coming from Lamare were pitiful, and Lana watched in awe as the soldiers got the trembling administrator to his feet, and half carried him away, for the man seemed to have lost the strength in his legs. Lana could still hear his muffled cries of distress after the soldiers disappeared around the bend in the trees, and she marveled at the turn of events. <br ><br >\"Are you harmed, my dear?\" said the magistrate. He was at her side, looking up at her with concern in his eyes.\n\n\"No, I am fine . . . thanks to you,\" said Lana, smiling down at him. He'd spared her a terrible fate, and the gratitude welled up inside her. \"But how?\"\n\n\"Your friend the Captain came to me,\" said the magistrate, as he found the key and removed the manacles from her ankles. \"He told me everything about that man, how he and his men killed your companion . . . I'm very sorry about that, my dear,\" he said suddenly, placing a hand on her arm. \"I know our laws state that you are our property now, after the death of your companion, but I regret how that came to pass.\" He paused, looking into her eyes, then continued. \"As I was saying, the captain told me how that administrator and his three men had stolen you from the camp, and planned to trade you for money to our Lord.\"\n\nLana suddenly looked worried. \"His men . . . did you . . . find them?\"\n\n\"Regrettably no,\" said the magistrate. \"Our men tracked them but they were obviously fast and skilled, we suspect they have already escaped over the border.\"\n\nLana tried not to show the relief that flowed through her chest. \"Oh . . . that is ok . . . he was the real bastard, I'm glad you got him!\" Then she paused. \"Will I . . . get to see the Captain again?\" she asked, shyly.\n\nThe magistrate grinned broadly. \"Ah, you'd like to thank him personally, no doubt?\" He laughed at the deep blush that appeared on Lana's face. Then he nodded. \"I think I can arrange that. Now come, let's get you back before night falls. This forest is no place for a lady.\"\n\nThe magistrate then took the reins of her horse and guided her back to his horse. She noticed he hadn't undone the chains that held her wrists, but then she reminded herself she was still a slave, and an escaped one at that.\n\nLana turned to look up at him. <br ><br >\"Master, umm, am I to be punished tomorrow?\" she asked, concern in her eyes.\n\nWith a look back to make sure she was seated properly, the magistrate mounted his horse, and got both horses moving in the direction of the slave camp, before he finally answered her.\n\n\"My dear, slaves who attempt escape are of course severely punished,\" he explained, looking at her with a most serious look. Lana was having trouble breathing, and the magistrate saw the terror in her eyes. \"At the same time, it was not your idea, or your plan, and one cannot fault you for going along with the escape.\" He smiled suddenly. \"Naturally, as magistrate, it is within my power to offer you a trade.\"\n\nLana swallowed heavily. She glanced to the side. They were surrounded by a half dozen soldiers. Lana noted their professionalism, for paid no attention to their conversation, and they snatched only discrete looks at her as they rode through the forest. <br ><br >\"What sort of trade, Master?\" she asked, finally, her voice dry. She had the sinking feeling she was about to trade yet more of her dignity to avoid punishment. <br ><br >The magistrate looked at her intently, in a way that made her feel naked and exposed. \"In lieu of punishment, you will simply tell me what transpired during your escape. I will need every detail, for our deal to be valid.\"\n\nLana looked at him in confusion. \"But . . . Master, you know what happened, don't you?\"\n\nThe magistrate shrugged. \"I know you were taken by the three men to the caravan, and I know you met up with the administrator in the forest, and ambushed the caravan. The four men told us about the ambush. None of the men were injured.\" He looked at her with interest. \"Was that your doing?\"\n\nLana's eyes went wide, and she blushed. \"I . . . asked them not to harm your men . . .\"\n\nThe magistrate nodded. \"You are truly a unique creature, my dear. Despite all that has befallen you, you find it in your heart to worry about lowly guards of a slave caravan. I find that aspect . . . beguiling.\"\n\nLana blushed at his compliment, which gave her a strange urge to . . . please the magistrate, to show her gratitude however she could. She pondered that for a moment, and wondered if perhaps, because the man had total control of her, and was not bound to appease her in any way, his compliments were truly genuine and heartfelt. Men back in her homeland complimented her for many reasons, often self serving. This man, who held her as a slave, had no need for such placating words, so anything he said, was for her benefit only.\n\n\"So tell me, my dear,\" continued the magistrate. \"You spent an hour or more, locked in a cage, naked, with three powerful Dellune warriors. Also naked. Is that correct?\"\n\nLana blushed, thinking back on that very scene. \"Uhmm . . . yes . . .\" she said, looking away from his intense stare.\n\n\"I see,\" said the magistrate, reaching out a hand to gently lift her chin so he could look into her eyes. \"From your reaction to my question, I can see the journey was an interesting one for you.\"",
        "Lana stiffened. The way he said the word 'interesting' was highly suggestive. Did he know something, had he been spying on them? The last thing she wanted to tell him was how she'd willingly serviced the three warriors with her body. It would be tantamount to embracing her slavery!\n\n\"I . . . don't know what you mean, Master. Interesting?\" she said, after a bit too long a pause. She gave him her most innocent look.\n\n\"You are a shy one, as always,\" said the magistrate, grinning back at her as he guided his horse skillfully with one hand on the reins. \"But I can see from the satisfied look on your face that you've been indulging in my absence.\" He held up his hand as Lana nervously began to protest. \"It's quite alright, my dear. Why don't you just tell me everything, and leave out no detail. If I think you've held anything back from me . . . well . . . I'm afraid I won't be able to save you from the dire punishment given to escaped slaves.\"\n\nLana's heart was thumping in her chest. She would tell him the story, but she had to know the price of failure. \"M-master? What is the punishment for escaped slaves?\"\n\nThe magistrate looked serious. \"A slave who has attempted escape is often deemed of lesser value. In that case, she will be sent to the Pits, to serve a few nights, typically a dozen to twenty men a night. Now, now, don't look upset, my dear - in your case, your value is still too high for such a fate. In your case, I think a week of denial training would suffice.\"\n\n\"Denial training?\" said Lana, anxiously. She found the more innocuous sounding training techniques were often the worst.\n\n\"Yes, it's quite effective. We put you in the stocks, and . . . we have special helpers trained just for this . . . they will bring you to the brink of climaxing, over and over during the day. At the end of the day, when you are nearly mindless with desire, we let you serve a male slave with your mouth, while we give you your long-denied orgasm. We time it so just as the male slave cums in your mouth, you will cum as well. We repeat this for seven days, or more as needed.\"\n\n\"As needed for what?\" said Lana, her throat dry.\n\n\"Well, given enough time and repetition, the slave girl begins to find the act of serving a man with her mouth to become nearly orgasmic itself. After a week of this training, some girls are able to cum just from using their mouth on a man. It's quite wonderful!\"\n\n\"But . . . that's . . . you can't . . .\" Lana was speechless. Was it even possible, that kind of brainwashing? She didn't want to find out, that was certain.\n\n\"It's quite a fine trait for a slave girl,\" explained the magistrate. \"You can find your own satisfaction while serving your Master, that is not always possible or convenient.\" Then he shrugged. \"Unfortunately it is quite time consuming training. So we reserve it for only our most highly prized pleasure slaves. Yes, like you,\" he added, seeing Lana's questioning look.\n\nLana felt her face burning at his double edged compliment. She did not want to be their most prized slave, and she certainly didn't want the added attention that went along with it.\n\n\"So would you like to go ahead with the week's denial training? I think it would suit you well,\" said the magistrate, with no hint of mocking. He seemed genuinely excited to give this training to Lana.\n\n\"I'll tell you everything, Master!\" blurted Lana quickly. \"It's . . . quite humiliating . . . but I'll leave out no details! Just please . . . don't give me that training?\"\n\nThe magistrate looked at her, and finally shrugged. \"Very well, a deal is a deal, and I will stick to it, despite my opinion that the denial training would be good for you. You may begin.\"\n\nLana took a deep breath, and began to describe her time with the three warriors. She left out nothing, for she feared the magistrate would see right through her, like he always seemed to do. It took some ten minutes to tell the story, during which the forest grew darker as night fell. When she was done, the magistrate looked extremely pleased.\n\n\"My dear, that was lovely to hear. You have made excellent progress under my training, and that is most gratifying to hear!\"\n\nLana grimaced, for that was exactly what she knew he'd say. She'd never intended him, or anyone, to find out what she'd done for the purpose of escaping. \"Master, I . . . I did those things because I wanted to escape! Not because I wanted to!\"\n\n\"My dear,\" scolded the magistrate. \"It is not the things you did that pleases me, it is the enjoyment you took in doing them. You served three, strong Dellune warriors, you satisfied them, and took great pleasure in doing it! What more could I ask of a pleasure slave?\"\n\nLana made a squeaking sound from her throat. \"But . . . I . . .\" she stammered. She couldn't very well say it wasn't pleasurable, that would be a lie, but that didn't mean she wanted to! With a sigh, she gave up trying to argue with the man.\n\n\"You do not yet understand, that is alright, my little one,\" said the magistrate softly. \"I thank you for your honesty, and as promised, I will waive the punishment for your escape.\"\n\nLana's eyes flew to his face. \"Oh, thank you, master!\" she blurted, relief flowing through her. \"And . . . I'm sorry, for trying to escape.\"\n\nThe magistrate chuckled. \"I'm not sure you mean that, but apology accepted. Oh look, we're approaching the camp!\"\n\nNo more was said between them, and some minutes later, they were back inside the gates of the camp, and Lana felt an odd mixture of feelings in her belly. She felt enormous relief that she'd escaped Lamare's nefarious plan, and any punishment for her escape attempt, and the mission seemed back on track. She wasn't sure how Warrick planned to get her out of the camp and into Nikolai's castle, but she suspected he had a plan, one as clever as the way he'd dispatched Lamare. At the same time, as they rode further into the camp, that sinking sensation of helplessness and unbidden arousal was returning. She wasn't sure how many days she had left in this place, nor was she sure she could handle more slave training.\n\nThe soldier escort departed, and the magistrate stopped them at a water trough for the horses. He dismounted and then came to Lana's horse, to unwind her chain and help her off the horse. It was dark already, and he guided her into the facility, eventually reaching the familiar door of the sleeping quarters she'd spent the night before. He finally removed the chains from her wrists, placing them in his coat pocket.\n\n<br >\"The girls should be asleep,\" said the magistrate, quietly. \"You may bathe yourself, but try not to wake them. I'll pick you up in the morning.\" Then he quietly unlocked the heavy door and swung it open, allowing Lana inside.\n\nWhen she turned to look at him, he patted her gently on the cheek. \"Sleep well, Miss Torina. Tomorrow will be an enjoyable day, we'll go easy on you since you made so much progress today. Do me a favor,\" he added. \"Take a long leisurely bath, and when you are done, lock your hands into the chains at the head of your bed. They will lock as soon as you close the them. That way I don't have to wait for you to finish bathing. Will you do that for me?\"\n\n\"Of course, Master,\" said Lana. She thought it was nice of him to trust her and she nodded in assurance. The magistrate smile, then he suddenly leaned in to kiss her on the lips, drawing a soft sigh from Lana's throat, and then he was gone, closing the door behind him. She realized at that moment that she had missed the magistrate. She simply couldn't deny the way he made her feel cherished, or the heretofore unimaginable pleasures she'd experienced. She didn't want to be his slave, or anyone's, so she found her feelings confusing, to say the least. She stood there as he closed the door, confused and embarrassed by her conflicted emotions. She wondered if perhaps the Institute's training program should have spent some time teaching her how to deal with men?\n\nLana heard the metal rasp of the lock, and the footfalls of the departing magistrate. She finally turned around to survey the dark room. Sure enough, the girls were sound asleep, and she tip-toed over to the bathing area. Lana proceeded to quietly bathe herself. The water was cold, so she didn't go into the bath, only used a towel to clean herself. Lamare had put copious amounts of salve on her, and she tried to clean that off, but realized it seemed to have already been absorbed. In fact the salve's calming effect was beginning to wear off, and she knew what would follow, so Lana quickly finished bathing herself. When she was done, she felt wonderfully refreshed. Tip-toeing back into the room, she found a slave shift and wiggled into it, pulling it down over her chest, and arranged it around her hips. Then she found her empty cot from the night before, and lay down, pulling the sheet and blanket up to her chest. Then she reached up to place her right wrist into the leather-wrapped metal ring that was tied to the head of the bed by a short rope. She felt it click as she closed the claps, then she did the same with her other wrist. Lana felt a slight surge of warmth in her belly and that familiar feeling of vulnerability that she got when her wrists were bound. With both wrists above her head, she turned, trying to find a comfortable position. Her mind was awash with thoughts of Kor, Kurk and Tamar, and the magistrate, the things they had done with her, and to her. The salve seemed to have completely worn off and was now heating up her flesh, made worse by her thoughts of the three warriors. To try to distract herself, Lana thought of Lamare. She spent a moment imagining him among the slaves in the mine, but decided it was too cruel to ponder such things. Finally, she drifted off to a much needed sleep."
    ],
    "authorname": "Tanuki",
    "tags": [
        "bondage",
        "non-con",
        "slave training",
        "oral",
        "fantasy",
        "threesome",
        "gangbang"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/agent-in-distress-ch-14"
}