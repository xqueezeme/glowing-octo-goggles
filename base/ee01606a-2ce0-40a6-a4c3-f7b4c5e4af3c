{
    "title": "Efrain and Cory Ch. 22",
    "pages": [
        "Chapter 22 \u2013 Bring Home Bae \n\nIt took all of five minutes from the time Cory and I got there to realize that we were home alone. It took less than one to get Cory under me on the couch, and even less than that to get him hard and panting. \n\nMy hips rolled into him, grinding my cock against his. His arms and legs pulled me closer, bearing my weight into the couch beneath him. I roughly shoved my tongue as far into his mouth as it would go, a pretty decent imitation of what my dick was going to do to his ass as soon as I could get his clothes off. \n\nAlthough, roughly shoving my dick in his mouth didn't sound like a bad idea, either. \n\nOr, shoving my tongue and fingers in his ass. \n\nOr, shoving my dick in his mouth while shoving my tongue and fingers in his ass. \n\nMouth, hands, dick stuck wherever. \n\nI was going to stuff Kitten until he meowed. \n\nHis muscular thighs gripped my hips as I pressed his back into the cushions. I growled low in my throat, mentally listing all the things I could shove, where I was going to shove them, and in what order the shoving would happen. With such a full list, I figured it would take a day or two before Cory would be able to walk and talk without some discomfort. \n\nBut, he seemed damn eager for the damage, reaching between us to unbutton my fly before shoving his hands down the back of my jeans to grab my ass. I thrust against him harder, kissed him harder, bit his neck harder and he moaned his approval. \n\nAnd then he reminded me of a promise that I'd made. \n\nSomewhere in the thrusting and mental listing, I missed his hands moving underneath my boxer briefs until he started massaging my ass without the fabric barrier. I'd been so intent on his hole that I failed to notice his fingers inching closer to mine. \n\nSince I'd told him I wouldn't mind bottoming, he'd been teasing my ass \u2013 a glancing touch here, a slight bit of pressure there, a couple times when the tip of his finger slipped in just as I came. Don't ask me why, but the teasing seemed worse than him just taking my ass, and a few times I wanted to demand that he fuck me already because the tension was killing my sanity. \n\nHis fingers clenched and unclenched on me, his rhythms timed to the motion of my hips. As he unclenched, his fingertips would brush over my hole and my breath would catch. It was out of self-preservation that I started telling him all about my list. \n\n\"...and when I'm done making you swallow my dick, I'm going to flip you over...\" I growled into his ear. Cory panted heavier and faster, but if anything, his touch seemed bolder. When I started telling him about how I was going to finger-blast his ass, he rested his own fingers on me. \"You like that, huh?\" \n\nWhen he didn't answer, I bit his earlobe and gave a little tug. I felt myself twitch under the increased pressure of his fingers. \n\n\"Do it, Cory,\" I growled. \n\nMy fingers dug into the couch cushions as his fingers dug into my hip, but before he could obey, the front door opened. Indie swept in pulling, surprisingly enough, a certain pretty boy behind him. \n\n\"...the living room is over here.\" Indie waved his hand toward the couch, where I just happened to be lying with my boyfriend's finger almost up my ass. Preston pulled him close with a giggle. It seemed that neither had noticed us, yet. \n\n\"If you're that intent on giving me the grand tour, let's start with your room.\" \n\n\"That can be\u2013\" \n\nPreston climbed up his body and smashed his mouth into Indie's face, effectively cutting off his response. In any case, Indie walked him backwards through the living room, separating after a bit to walk with their arms around each other. Just before they disappeared around the corner, Preston winked at us over his shoulder. \n\nOkay, so we hadn't gone completely unnoticed. \n\nI turned back to Cory, intent on getting back to my list, when his finger suddenly pressed forward and\u2013Ooooooh fuck. \n\nCory chuckled into the little licks and kisses he trailed over my neck. \"Damn vato, your eyes crossed that time. You sure you aren't a bottom?\" His finger wiggled and I moaned in spite of myself. \"Oh yeah, you really like that.\" \n\nI narrowed my eyes at him. How long could he keep up that sweet and innocent look with my dick shoved down his throat? \n\n\"Is this what they mean by turning a top?\" \n\nA grin stretched across my face. \n\n\"You know I have a whole list of ways that I'm going to make you pay for that,\" I told him. If he was going to try turning me, I was going to turn him out. \n\nHe grinned back, his next words almost a purr. \n\n\"I was counting on it.\" \n\n~*~*~*~ \n\nI only had two theories as to why Indie didn't notice el Gran Lobo Malo and my best friend going at it on his couch \u2013 he was either completely blind, or totally fixated on getting me in his bed. \n\nSadly, and it pained me to say it, I think poor Indie needed to wear his glasses more. \n\nI mean, I had been totally fixated on getting in his bed all night, and had just barely managed to behave myself over dinner, but I still noticed Cory's not-so-little kitten paws mauling the hell out of Efrain's ass (an act which he obviously seemed to enjoy). \n\nYet, as hot as it was to finally see my bestie getting off with his boyfriend, Indie's hand at the small of my back guiding me down the hall and up a flight of stairs reminded me of my purposes for the evening \u2013 getting my own ass mauled. \n\nThe door at the top was unlocked, so I walked in ahead of him. The surprising neatness of the house and yard surprisingly didn't end on the other side of Indie's bedroom door. \n\nHis suite of rooms, done up in tonal greys with midnight accents, stretched the length of the attic, with doors on the far side of the room (leading, I assumed, to his walk-in closet and en suite bathroom). A row of three dormer windows ran along the side of the roof facing the street, mirrored by a row of large skylights on the side facing the back yard. I imagined that the amount of light they let in would be spectacular once the blinds and curtains were drawn. \n\nThe overly large room had been spared the awkwardness of being too big through some careful arranging of sleek modern furniture and inky black area rugs that created several spaces within it. His computer desk had been placed along the wall closest to the door, flanked by built-in shelf space, to create an office. A pair of pale yellow armchairs (the lone pop of color in the whole room) and a small table made a little sitting area nearby. His bed, an immense California king with a dark grey striped damask duvet and more pillows than necessary, sat under the skylights. \n\nThe overall effect was far more mature and masculine than the hodgepodge of childhood bedroom holdovers, particle board contraptions, and dumpster-dive finds that comprised the apartments and bedrooms of most other men our age. \n\nMy study came to a close when Indie's hand caressed my lower back as he walked by and I allowed myself to be pulled close. His mouth came down hard on mine, seeming to pick up the kiss where it left off, as if the walk from front door to bedroom door hadn't interrupted it. I teased his tongue into my mouth where I gave it a full working over. Indie's fingertips skimmed over me, from neck to hip, tracing over bone and muscle through layers of clothing. \n\nFor once, he wasn't pulling up my shirt yet and, for once, I became obsessed with getting him to do it sooner. Standing up on my toes wasn't getting me what I wanted any more than grinding my hips into him was. Although, I was definitely getting a reaction out of him and most certainly considered him backing me toward the bed a decent alternative. I made the appropriate noises to indicate my satisfaction. \n\nOf course, it would be the moaning that got me closer to my goal. \n\n~*~*~*~ \n\n\"So, tell me again why I can't drive my own truck,\" Cory complained. \n\n\"The forecast predicted snow.\" \n\n\"It's only a little snow.\" \n\n\"Acho,\" I said, \"you can barely handle driving in the rain.\" \n\n\"I can handle driving in the rain!\" \n\n\"And don't even get me started on your inability to merge.\" \n\n\"I know how to merge!\" \n\n\"I mean, does in anyone in Texas know how to fucking drive?\" \n\n\"Chingow.\" He rolled his eyes. \"We aren't that bad.\" \n\n\"God, if you're not the worst Texas driver...\" \n\n\"If you won't let me drive, at least let me pick something to listen to.\" \n\n\"What's wrong with Blackmill?\" \n\n\"Nothing, if falling asleep at the wheel is your thing,\" he said. \"I'd at least like to meet your parents before we die in a five-car pile-up.\" \n\nI snuck a quick look to find him grinning at me from the passenger seat and gave in. \n\n\"Fine,\" I said. \"But, no Sam Hunt.\" \n\nHe laughed and rolled his eyes again. Cory plugged the aux cable into his phone and flipped through a couple screens. I listened to what he had picked out as he slipped off his shoes and tucked his feet up in the seat. His music tastes were eccentric to say the least, but what played over the speakers surprised me. \n\n\"Since when have you listened to Seven Lions?\" \n\n\"Since you played Worlds Apart for me,\" he said. \"Still have a hard time not thinking about fucking when I hear EDM, though.\" \n\n\"Oh really?\" \n\n\"Yup, and it's all your fault.\" \n\nI chuckled and put his truck in gear. We could have taken my car, but his truck had all-wheel drive and legroom, which made it an ideal road trip vehicle. I hoped that the next five hours went as well as the first few minutes, mainly because I really didn't want to think about what was going to happen once we got to Maryland. \n\nI still wasn't too sure on how it happened, but somehow I got roped into bringing my boyfriend home for Thanksgiving dinner. Indie's little boy toy had cornered me in the kitchen late Thursday night and demanded to know why I hadn't invited Cory over. I tried to explain that I wasn't out at home, but homeboy wasn't having it. \n\n\"You can tell the 'rents that he's just a friend,\" Preston had told me. \"Besides, are you really going to leave him alone for the holiday?\" \n\n\"Why didn't you invite him home?\" \n\n\"I didn't,\" he said and folded his arms over his chest, \"because I was going to give you a chance to do the right thing.\" \n\n\"That was a low blow,\" I said. \n\n\"I'm sure you're an expert,\" he replied offhandedly. \"Now, go ask him.\" \n\nI had figured I'd mention it to Cory, just to see what he thought. But, then he got so excited that I couldn't calm him down, even when I warned him that I wouldn't be able to introduce him as my boyfriend. Then he started doing cute shit again, like when I agreed to meet his friends, and I realized that there was no way I was getting out of it now. \n\nI was pretty sure I was going to get some epic fucking out of it later, but I just hoped that my parents didn't embarrass the ever living fuck out of me before I could collect. \n\n~*~*~*~ \n\nSo, somewhere in all the time I'd spent with Efrain, he'd forgotten to inform me that he was a military brat. \n\nAnd, that his middle name really didn't mean wolf. \n\nWe were sitting in the middle of a diner getting a quick snack before we got back on the road and somehow the \"Wolfie! CHOMP!\" incident came up. I had been right that Teague would start calling him Wolfie, but was completely floored that the entire team, and even Coach Vuis, had been using the nickname (and, while not as widespread, \"Kitten\" was sadly catching on in the locker room, too). \n\nI told Efrain that it probably wouldn't have been as bad had it not been linked to his own name. I mean, a name like \"Lope\" was just asking for it. And then, he dropped a bomb on me. \n\n\"What do you mean it's not Lope?\" \n\n\"Exactly that, it's not Lope,\" Efrain said and pulled his wallet out of his back pocket. He slipped out his driver's license and handed it to me. \n\n\"D?\" I said. \"What's the D for?\" \n\n\"You really need me to show you what the D is for?\" he said suggestively. \n\n\"Not that, vato,\" I said and pointed to his license. \"It only has your middle initial.\" \n\n\"Ah, try this then.\" He fished out another card, this time a military dependent card that had to be a good four or five years old, maybe from when he was in middle school or early high school. I was momentarily distracted by how cute as fucking hell he looked back then, what with the baby fat still on his cheeks and the designs shaved into his much shorter hair, that I almost forgot about his name. \n\nAlmost. \n\n\"David?\" \n\n\"No, not DAY-vid,\" he said, \"dah-VEED. My mother was adamant that I have a name that no one can say right.\" \n\n\"So, dah-VEED, military ID?\" \n\n\"Yeah, Dad retired a while back. Everyone still calls him Chief.\" \n\n\"Will I have to call him Chief?\" \n\n\"Yep, he'll insist.\" \n\n\"I take it you're not out to the Chief?\" \n\nHe shook his head. \"I follow a strict 'Don't Ask, Don't Tell' policy.\" \n\n\"I see,\" I said. \"That will probably make it harder to cop a feel under the dinner table.\" \n\n\"Yeah, family time will impede certain activities.\" \n\nI knew we would have to set some boundaries before we got to his parents' house. I thought that perhaps we wouldn't have to be as closeted as we were around our teammates (we didn't even sleep in the same hotel room for away games), but it would be better to establish the ground rules before I did something inappropriate. \n\n\"I'll be sure to behave myself then,\" I said. \n\n\"I'll be sure to find an opportunity for you to misbehave then,\" he said, nudging my foot under the table. \n\n~*~*~*~ \n\nEfrain's family lived in a large gated community near Naval Air Station Patuxent River. By the time Chief Garza had retired from the Navy, they'd moved around so much that they decided to stay this time around, rather than move back near family. Staying in Maryland, according to Efrain, had also settled the argument of which family they'd move back near \u2013 the Garzas in Puerto Rico or the Santoses in South Florida \u2013 by avoiding the issue entirely. \n\nThe closer we got to his home, the more I finally learned about his family. By the time he punched in the gate code, I'd heard enough about his many uncles, aunts and cousins that I'd be able to identify them on the spot. His parents sounded like awesome people, but his baby sister really couldn't be as annoying as he made her out to be. Nor could his older brother be that overbearing. \n\n\"Thank fucking God,\" Efrain said as he pulled up to a two-story house that looked like it had been designed to look more historic and old-fashioned than it actually was. A porch swing swayed on the far side of the wrap-around porch, and if not for the ugly weather and lack of green on the trees, I could totally see someone coming out with a tray of sweet tea and finger sandwiches. It sat in a large enough yard to accommodate a semi-circle driveway in which a little red car was parked. \"Juaquin isn't here yet.\" \n\n\"Is your brother really that bad?\" \n\n\"Imagine all three of yours combined into one.\" \n\nI rolled my eyes while he parked my truck behind the car I assumed belonged to his little sister, Zoe. Since we'd be there all of two days, we packed light, just a backpack each. I'd even limited myself to one pair of Chucks. \n\nIf you didn't count the ones I had in the back seat. \n\nI followed him to the door, which had been left unlocked for the eventual guests coming in for dinner. The house was significantly warmer, so we both shrugged off our coats and he hung them up in the hall closet. The Garzas were one of those families that took their shoes off at the door, which was fucking awesome. I padded behind him toward the family room, where a bored teenage girl in sweats lounged on the couch with a cellphone to her ear and a remote pointed at the TV. The resemblance between the pretty girl with the messy bun and Efrain was so unmistakable that she had to be Zoe. \n\nEfrain seemed intent on ignoring his sister, but she noticed us about the same time an older version of Zoe came from around the corner. In Spanish that was far more fluent that her brother's, Zoe hurriedly said her goodbyes to the friend she had been talking to because her brother had just walked in with a mega-hottie and she looked like a hot mess. \n\nI knew she'd be embarrassed if she knew the \"mega-hottie\" could understand her, so I resisted inquiring the location of said mega-hottie, or assuring her that she looked pretty just as she was. \n\nEfrain just rolled his eyes as he hugged his mother and kissed her cheek. \n\n\"You must be Cory,\" his mother said and pulled me into a hug. She insisted that I call her Analena, or better yet, Lena, as Mrs. Garza made her sound like an old lady. \n\n\"Tienes hambre, mijo?\" she said to Efrain, who shook his head. \"Tiene hambre?\" \n\n\"Estoy bien,\" I replied, automatically answering in Spanish despite my decision to spare Zoe. \n\nEfrain, of course, had no reservations about shaming his sister. He fist-bumped my shoulder, then started telling Lena, who hadn't heard Zoe's comments, about how I'd been tutoring him and how we got invited to a junior-level seminar on Spanish poetry (naturally leaving out how extensively we had \"studied\" it). This meant that little to none of the ensuing conversation contained English, a fact that poor Zoe missed as she'd slunk out of the room not long after I'd shot her a sympathetic look. \n\nA whirring sound came from the side of the house as an SUV pulled up to the house and into the garage. Moments later, a man, who looked like I imagined Efrain would in twenty or so years, walked in with an armful of reusable grocery bags, presumably loaded with groceries. \n\n\"Hey, Lena,\" he shouted, \"since when do we know people who drive bigass trucks?\" \n\nThen he noticed the three of us standing in the family room. \n\n\"Oh, for fuck's sake, Lena. Let them at least put their shit down,\" he laughed. She tilted her head so that he could give her a quick kiss on the lips. He waved off his son with a smile that seemed to be a permanent fixture on his face. \"Go get settled in, and let me set this crap down. We'll square away greetings then.\" \n\nWhile he moved toward the kitchen, I followed Efrain upstairs to his bedroom. We threw down our bags, stole a quick kiss behind the door, then headed back downstairs. \n\nChief Bonifacio Garza, U.S. Navy (Retired), formally introduced himself with copious handshaking and, in keeping with his wife's example, asked me to call him Bon. With that settled, he turned to Efrain and pulled his son into the kind of mauling hug that only fathers could get away with. By Efrain's reaction, this level of fatherly affection was normal and frequent, which was a sharp contrast to my own dad, who tended to restrict himself to restrained pats on the back on rare occasions. \n\nBon pulled us both in the kitchen to chat while Lena worked on that night's dinner. Thanksgiving was tomorrow, but some of their extended family was staying in hotels for the night and she would hear nothing of them going out to eat when she had a perfectly good kitchen. She'd already prepped most of what would be cooked and served tomorrow, so what was another meal? \n\nSoon enough she had enlisted Bon and Efrain's help as her personal sous chefs. In my house, my mother did all of the cooking and cleaning, with my brothers and I pitching in on certain chores. Dad, as the breadwinner, only did a few things around the house \u2013 mostly repairs and upkeep. It seemed that everything was split more evenly in the Garza family, and everyone seemed just fine with that. \n\nThe three of them worked efficiently together, which made sense considering that his dad was retired military and his mother was a caterer. I'd seen Efrain do this with Indie, and I kinda wondered where the choreographed efficiency came from. ",
        "Eventually, Lena noticed that I was not busy. \n\n\"You,\" she said. \n\n\"Me?\" I answered. \n\n\"Yes, you. How long have you been in my house?\" \n\nI looked at my watch. \"Uhm, half an hour maybe?\" \n\n\"Great! You're as good as family now,\" she said with a grin, then heaped some vegetables on a cutting board. \"You can help with the salad.\" \n\nI obediently set about washing and peeling the cucumbers and carrots. Zoe had reappeared, wearing jeans and a blouse in place of the sweats and baggy t-shirt she'd had on when we arrived (and possibly some makeup), and had immediately been tasked with helping the mega-hottie with preparing salad vegetables. \n\n\"Mom? Dad? What's up with truck?\" a male voice called out from the foyer. \n\n\"Kitchen, Juaquin!\" Lena called back. \n\nIf Efrain and Zoe were carbon copies of Bon and Lena, the oldest Garza child was a composite \u2013 Bon's eyes and face, with Lena's mouth and fairer skin. Juaquin's slightly smaller build and shorter height, I was told, came from the Santos side, while his chin-length tight curls were a Garza trait. Behind him stood a delicate beauty with jet black hair who I knew, from Efrain's crash course introduction to his family, was Jennifer, his brother's girlfriend since college. Bon treated his oldest son to the same mauling after Juaquin kissed his mother's cheek. After various exchanged greetings, and my quick introduction as the owner of the bigass truck/Efrain's friend from school, Jennifer took over for me on the salad preparations, so that Efrain, Juaquin and I could add the inserts into the dining room table and set it. \n\nDinner was almost ready when we heard the door open and even more voices coming from the foyer. Bon's niece and her husband (who just happened to be a junior sailor formerly under his command) came in with their two-year-old daughter. Alysa and Eric Ross were closer to Jennifer and Juaquin's age, and the guys had been good friends for years. The Rosses were just ahead of Lena's brother and his wife, as well as their pre-teen son and daughter, who were somehow impressed that Efrain and I played football and stuck to us most of the night. \n\nEfrain had warned me that he had a massive family, and that I'd be getting a taste of it the night before Thanksgiving. I reasoned that meeting some now would make tomorrow less overwhelming. \n\n~*~*~*~ \n\nI tore open a roll and slathered it with butter just as Efrain passed me a platter. The pork roast on it was so tender that no one bothered to slice it. I picked up the tongs and pulled off a sizable amount to add to my plate. I'd already helped myself to a nice salad, and enough of the other side dishes to feed two people. \n\nCasual observations of the other plates at the table showed that I wasn't the only one guilty of gluttony. Efrain and I sat sandwiched between his cousins. The boy, Jamie, had to be half my size, yet had dished out nearly as much food. His sister, Harlie, had only slightly less heaped on her plate. Efrain had plated even more food than I had, so I wasn't really worried about looking like a pig when I finally tucked in. \n\nMind you, this was my second helping. \n\n\"You're really a football player like 'Rain?\" Jamie asked me around a mouthful of fried sweet plantain. \n\nI'd just taken a bite of roasted yucca with garlic sauce and was forced to nod until I could chew enough to allow swallowing. I took a quick sip of my iced tea. \"Yeah, linebacker.\" \n\n\"'Rain plays wide receiver,\" he told me matter-of-factly. \n\n\"Duh, retard,\" his sister called from her seat next to Efrain, who was in the middle of spooning an obscene amount of chimichurri over his pork. \"He plays with 'Rain, like, all the time.\" \n\nI heard a small cough from across the table where Eric and Juaquin sat with their respective ladies flanking them. \n\n\"So, Cory,\" Eric said. \"I understand you're a freshman. Decide on a major yet?\" \n\n\"Not really,\" I answered. \"But, I've been taking some interesting Spanish lit classes.\" \n\n\"Mom said Efrain was getting some,\" Juaquin paused to drink from his beer, then continued, \"help with his Spanish from a teammate.\" \n\n\"I'm enjoying myself,\" I said, \"so I thought I'd at least go for a minor in Latin Studies.\" I wasn't sure why, but everyone seemed to take an interest in their drinks. \n\n\"Just a minor?\" Eric confirmed, and I nodded. \"Nothing major, huh?\" \n\n\"Yeah, I don't think I could handle a major,\" I said. \"Too hard, not enough rewards.\" \n\nFor some reason, Eric grinned around a mouthful of food and both men received surreptitious elbow nudges from Alysa and Jennifer. I was confused as to why they were in trouble, but I decided to change the subject to help them out. \n\n\"This is really delicious, Lena,\" I said, indicating the pork. \n\n\"I'm glad,\" she said. \"I forgot to ask 'Rain what kind of food you'd eat.\" \n\n\"I'll try anything once,\" I said. Eric and Juaquin sniggered about something they were discussing on their side of the table. \"But, I've already had a lot of this at 'Rain's.\" \n\n\"Oh?\" \n\n\"He cooks a lot. I think the pork is the only thing I haven't tried before,\" I said. I gestured down at my third helping of yellow rice with chorizo and pigeon peas. \"The Spanish chorizo is a bit different from the Mexican chorizo I got back home. Dryer, less sloppy. I think I prefer it.\" \n\nJuan, Efrain's uncle, suddenly set down his drink and started coughing. \n\n\"Honey?\" his wife patted his back. \n\n\"Sorry,\" he wheezed around his coughing fit. \"Went down the wrong hole.\" \n\nEric and Juaquin quickly excused themselves from the table and went into the next room where they promptly fell into raucous laughter at poor Tio Juan's expense. \n\n~*~*~*~ \n\nAfter dessert (a tasty flan of which I had three servings), while everyone else was having family time, Efrain and I snuck up to his room to have some non-family time. \n\n\"Keeping my hands off you is going to be harder than I thought.\" He smiled a little, leaning in toward me. \n\n\"Yeah,\" I agreed. \"Guess we'll have to get handsy when there's no one around.\" \n\n\"There's no one around now.\" \n\n\"Is that so?\" \n\nHe backed me up against the dresser in a sexy stalk that made my knees resemble the caramel sauce on his mother's flan. His hand cupped the back of my head and we melted into another one of those sweet and slow kisses that I still hadn't grown tired of. A series of teasing nibbles, slight parting of the lips, tongue tentatively slipping between. Our tongues sought each other, met half-way, mingled, and then retreated. We repeated this, prolonging the kiss each time. \n\nThis wasn't necessarily an attempt at arousing each other, just time spent enjoying the company, but I nevertheless felt myself getting hotter the longer he pressed me into the dresser. I seriously entertained the idea of convincing him to fuck my ass over various pieces of his childhood bedroom furniture later tonight when everyone else was asleep. \n\nI grabbed him by his belt loops and shifted my hips against him, and he growled low in his throat. Oh yeah, it wouldn't take much to sway him at all. If not here, then he'd definitely bend me over the dresser once we got back to Blacksburg. \n\nI was so wrapped up in his kiss, and his bedroom furniture, that I didn't notice the door opening. \n\n\"Hey, 'Rain. Mom wanted to know\u2013\" the rest of that was halted by a surprised squawk. I lifted my head to find his little sister standing in the doorway, her cell phone held away from her head. Slowly, her shocked expression morphed into a wolfish grin that was apparently a family trait. \"Ohmigod, I'll call you back,\" she said quickly into the phone. \"Shit just got real!\" \n\nAnd then she ran off. \n\n\"Fuck!\" Efrain chased after her. \"Zoe!\" \n\nI had no idea what to do; I was too stunned to move. I didn't even know what good I would do. She had seen us and there was no way to pretend that her brother and I weren't trying to fuck each other through our clothes. There wasn't even a decent excuse I could offer. \n\nI heard Zoe's giggling and shouting over two sets of feet pounding down the stairwell. \n\n\"'Rain brought home bae!\" \n\nFrom elsewhere, I heard a mix of male and female voices shouting. Oddly, it sounded more like they were watching a football game than learning that the middle Garza child brought his same-sex lover home for the holiday. \n\n\"Shit, are you for real?\" \n\n\"Aw, man. Fucking knew it.\" \n\n\"I told you, honey.\" \n\n\"Pay up, bitches!\" Zoe trumpeted. \n\nHuh? \n\nI rushed out and made it halfway down the stairs. Bon and Juaquin, as well as other family members, were pulling cash out of their wallets. \n\n\"Really, mijita, you shouldn't call family 'bitches', even if they did lose a bet,\" Lena chastised. \n\n\"What the fuck?\" Efrain drove his hand through his hair. \n\nZoe turned to him. \"Your little make out sesh just earned me $60,\" she said and started doing the \"make it rain\" gesture with her hands. \n\nEfrain stared at her dumbfounded. As if to explain, she looked down at her phone and started ticking through a list of wagers \u2013 when he'd come out, how he'd come out, when he'd bring a boyfriend home, whether or not it was me. \n\nThat last one had been going on for over a month. \n\n\"Zoe has been playing bookie since you left for college,\" Bon said. \n\nHe was smiling; well, everyone was (even those who'd lost bets). Efrain had been worried about being outed and his family ditching him, and here they were open and accepting. They already knew and were fine with it, even if the mechanics of showing said acceptance were infuriating. The warm reception I got earlier, the fact that they already knew so much about me, suddenly made sense. \n\nI was still hella shocked, but made my way closer to Efrain nonetheless. I could tell something was up. This was the second time we were surprised by someone close to us, but I didn't think he was taking it as well as he had the last time. A muscle ticked in Efrain's jaw; his hands clenched at his sides. He opened his mouth as if he was about to say something, but decided against it. \n\nInstead, he stormed out of the house, slamming the front door hard enough that it rattled the pictures on the wall. Zoe flinched. Through the lace curtains, I saw him walk over to my truck and punch the side panel hard enough that I heard it. He pulled back his hand in pain and roared \"motherfucker\" so loud that I was sure the whole subdivision heard it. \n\nThey all looked at each other awkwardly. \n\n\"The fuck's his problem?\" Juaquin asked. \n\n\"Yeah,\" I deadpanned. \"If you really wanted to be assholes, you would have disowned him.\" I honestly wanted his family to like me, especially since they knew who I really was to Efrain, but the words fell out before I could stop them. Zoe looked closer to tears the more I spoke. \"Although, he probably wouldn't be as pissed off then.\" \n\nWithout much else productive to add, I gave them a mocking salute and walked out of the room. I put on my shoes and coat, and grabbed his since he had walked out without them. \n\nEfrain was leaning against the driver's side door when I got out there. He took his coat and shoes, and put them on without looking at me, or even speaking to me. I knew he was still pretty angry, but also knew he wouldn't talk about it until he felt like it. \n\n\"Come on, 'Rain,\" I said. \"Show me around town a little.\" \n\nEfrain walked \u2013 middle finger thrown up at the bay window where his family was probably still watching \u2013 around the front of my truck and got in on the passenger side. I got in, put the truck in gear, and drove off with no real direction in mind. He was still silent, so I took his hand and laced my fingers with his. \n\n\"Well, that was a shitshow,\" he finally said once we got out of the neighborhood. \n\n\"Yeah, that could have gone better,\" I responded with a half laugh. \"Your hand okay?\" \n\n\"Fucking hurts.\" \n\n\"Think you'll be alright for the game on Saturday?\" \n\n\"Don't know,\" he said then leaned his head back against the headrest. \"I knew this was a bad idea.\" \n\n\"What? Me coming here?\" \n\n\"Yeah,\" he answered quietly. \n\nI tried not to let it get to me, but I felt myself sinking anyways. \n\n~*~*~*~ \n\nI directed Cory to the nearest drug store. \n\nHe'd been silent for most of the drive, but I knew it wasn't him giving me time to cool off. He was upset, and I knew why, but I still couldn't find the words to fix it by the time he'd pulled into the parking lot. \n\nHe put the car in park, but left the key in the ignition. \n\n\"I'll be back,\" he said flatly, the first words he'd spoken since he'd started giving me the silent treatment, but it definitely wasn't reassuring. He shut the door a little too hard. \n\n\"Fuck,\" I muttered. My cellphone had been going off since we drove off, but the one person I wanted to talk to was inside and pissed off at me. I picked a random family member and texted that I'd come home when I fucking felt like it, then put my phone on silent. \n\nAfter several minutes, Cory returned with a plastic bag and the same stony expression. He still wasn't talking, but he took care of me all the same, pulling out a bottle of pain meds and shaking a few into my hand, even opening the bottle of water so I wouldn't have to. Once I'd been drugged up, he pulled my hand into his lap and started looking it over. Other than swollen knuckles, my hand seemed alright, so he wrapped me up. \n\n\"Thanks,\" I said, but he didn't respond. \n\nCory had set his hands on the steering wheel and gear shift, but just sat there for a few minutes without putting the truck in gear. After sitting in awkward silence for too long, I pulled out my phone, ignoring the dozens of calls and texts still flooding in, and pulled up Google maps. I punched in the location of one of the landing sites along the Chesapeake Bay. \n\n\"Go here,\" I said and handed him my phone. \n\nI didn't expect a lot of people to be at the watersedge, given that the weather was miserable and it was a holiday to boot, but the small dock by the landing site was completely deserted. I grabbed the blanket I knew he always kept in the back and motioned for him to follow. He trailed behind me as I walked to the end of the dock and sat down. When I patted the wood planks in front of me, he sat and allowed me to wrap myself and the blanket around him. \n\nWe looked out over the bay. Visibility on the Chesapeake wasn't that great this late, but I still liked listening to the water lapping at the dock. I used to come here all the time when I needed to get away from things and just cool the fuck down. \n\n\"I was looking forward to bringing you here,\" I said. \"It's one of my favorite chill spots.\" \n\n\"It's nice,\" he said evenly. Cory relaxed into me \u2013 as I'd hoped, the bay seemed to help him be less pissed off at me. \n\n\"Listen,\" I started, but he cut me off. \n\n\"It's okay,\" he said. \"This is a really cool spot. Let's just chill for now. We'll have plenty of time to talk later.\" \n\n\"I can work with that.\" \n\n\"Is it always this deserted?\" he asked after half an hour or so had passed. \n\n\"Sometimes,\" I said, kissing the back of his shoulder, even though I doubted he could feel it through his coat. \n\n\"Ever bring someone out here?\" \n\n\"Nope, just you.\" \n\n\"Just me?\" he asked. \"So this wasn't a makeout spot?\" \n\n\"Nope.\" \n\n\"Lame.\" \n\n\"What?\" \n\nCory looked over his shoulder at me, flashing me a smirking grin before his hand crept up to pull me into a kiss. \n\n\"It is now.\" \n\n~*~*~*~ \n\nCory drove me around, got me coffee, let me talk when I felt like it. It was one of those times that I wasn't aggravated with my boyfriend's almost instinctual ability to manage me and my moods. \n\nIt was almost midnight when we got home, but Mom and Dad were still up. \n\n\"Want me to stay with you?\" Cory asked quietly. I shook my head, and he told me that he would be upstairs. \n\nOur talk was what you would expect \u2013 weepy hugs, apologies, blah, blah, blah. My family knew me better than I thought \u2013 it was just universally understood that I was gay and they'd all been waiting for me to feel comfortable enough to admit it. As for the betting pool and forced outing, Cory had either implied or said outright that they'd been assholes and everyone felt appropriately ashamed of their behavior. I agreed to talk to Zoe, who had been bawling since I stomped out. \n\nAs I was walking out of the room, Dad said, \"You really like him, don't you?\" \n\n\"I think so.\" \n\n\"I like him,\" Mom said. \"He seems like a great catch, mijo.\" \n\n\"Yeah.\" I smiled. \"He does, doesn't he?\" \n\nI felt a lot better as I made my way upstairs to settle things with my sister and then cuddle with the bae. \n\n~*~*~*~"
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "holiday",
        "interacial couple",
        "comedy",
        "bdsm"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-22"
}