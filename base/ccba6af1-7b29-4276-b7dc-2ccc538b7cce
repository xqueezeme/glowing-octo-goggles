{
    "title": "Mind Games Ch. 06",
    "pages": [
        "I stepped away from the elevator as the doors started to close. The computer components were heading up to the portal, and I was down here. In the guts of Virgil Station. It wasn't Engineering - Engineering was where people turned theory into practicality. This was the area that was labeled on the map as Cryonics. It was where I had started. It was back to the beginning. My head still buzzed with the revelations that I had seen on the way to Cryonics. I didn't know what to think. I didn't know what to feel. I just knew what I had to do. \n\nI had to get the power rerouted back to the portal. With that and the computer and the Tesc genetic signature that they had up there, Jules and the other survivors could get home. To Earth. To a planet I had never seen, but in dreams and memories stolen from another woman. \n\n\"Lassie,\" Lucas' voice - smooth as ever - broke into my thoughts. \"What happened up there? In Corporate?\" \n\nLeviathan. \n\nMy skin covered in goosebumps and my nipples hardened enough to cut glass. I shivered and felt the ache of my sex spreading for that massive cock. The warmth of his alien cum, spurting into me. And I heard his voice, rumbling and rich like dark chocolate. \n\nI am making a choice multifaceted. \n\nAll things balance in the end, Beatrice. \n\n\"Lassie?\" Lucas sounded more insistent. \"What happened?\" \n\n\"A big scary fuckoff space dragon tried to kill me and I ran away. Real fast,\" I snapped. \"Lucas, where are you on this fucking station again?\" \n\n\"I've been hiding in a closet,\" he said. \"You can collect me on the way back. You just need to get the power rerouted. The components are located at several junctions you've been at before when you were first exploring this place. I'll sing out when you get to em - but look for something labeled as BD-BS-2. That'll be the first bit of fuckery you'll need to get working.\" \n\nI nodded and started forward, my feet thumping on the ground. I was too tired and worn to want to bother with stealth. And, honestly, I felt like I could use a chance to fucking rip and tear some monsters apart. I came to the first echo of what I had seen before: The woman, her throat still bulging with cum, her eyes still wide as she looked out at nothing. She hadn't started to decay, which made sense. It had only been...what? A few hours? And I didn't even know if she would. Time didn't exist in the Tesc universe, save for what we dragged with us. \n\nI knelt down next to her, frowning at her face. \n\nWait... \n\n\"You look familiar,\" I muttered. \n\nIt had been blurred and covered in static. But...I pulled out the PDA that I had grabbed from corporate, skimming through the files on it. I found a selfie and checked it. Yeah. I was right. This girl was Feet Up, from the desk in Corporate. Rachel Loesser. She was in the 'human resources' department, according to the bits of her PDA I could access. What the fuck was a human resources flunkie from...my head pulsed and a faint memory hazed across my vision. It felt as if I could half see the corridor I was in and half see a different one. The two superimposed across my eyes and my head ached harder, migraine fierce. \n\nI fell back onto my butt, groaning as I realized the reason why the two visions jarred so much was because it was the same corridor. Just viewed from different angles. I tilted my head back, trying to get the visions to match, and realized the memory was of me - on a gurney. Bouncing. Jouncing. It felt edged with ice and hard. Not the faint phantasmagoria of the memories of the boat, the girl, the kiss. This was my memory, not Beatrice's memory. \n\n\"We have a Class 9 on the line,\" a male voice said, echoing. \n\n\"Oh, Miss Montenegro is going to be pleased. Okay, prep the CSC and get Dobbs on it.\" That was Loesser's voice in my mind. \n\n\"Dobbs did the freak out yesterday, he's on psyche.\" \n\n\"Fuuuuuuuuck!\" \n\n\"You co-\" \n\nThe memory shattered as Lucas spoke up. \"Lassie?\" \n\n\"My name is-\" I snapped, springing to my feet - furious that he had snapped me out of it. I shook my head. \"Nevermind. What?\" \n\n\"Just wanted to make sure you weren't spacing out on me,\" Lucas said, quietly. \"Listen, you need to work fast. This station may be running out of time - I've stopped getting recordings from the habitation deck.\" \n\nI rubbed my palm along my face. But something was bugging me. Something that didn't quite resolve by the time I had reached the first component. Lucas walked me through yanking it open, fiddling with the bits inside, flipping the switches. Once I had finished up and slapped the casing closed, he said: \"All right, that should handle it. You won't need to worry about the next one as much - it's just the exact same procedure.\" \n\n\"Got it,\" I said, rubbing at my eye with my thumb to clear out some grit. Three more components to fiddle into place, and the power was rerouted to the portal. We got out. Or did we? Did Jules and Tracy and...did...I get out? I rubbed on my chin. \n\n\"Jules?\" I asked. \"You read me?\" \n\nNothing. I looked around myself and saw there were no speakers. I searched my memory of the last time I had rooted around here and started back to the locker room where I had gotten the pistol. Stepping inside, I found the two drones I had smashed were still there. I was actually getting better at recognizing the components and spotted a few that were basically the same com-units that other people on this station had used. It was cheaper to use the same component and slap it into a drone than it was to specially make one for the specific drone. It was holding that component in my palm - like an ugly egg of plastic and black metal - that it clicked into place. I frowned and stood up. \n\n\"Lucas?\" I asked. \n\n\"What, lass?\" He asked. \n\n\"Nothing, just wanted to make sure you were still with me,\" I said. \n\nHe grunted. I walked to the second component and then started to yank it apart. When I was halfway through, I asked again: \"Lucas?\" \n\nNo answer. I frowned, my face set, and continued to work on the bits and pieces within with one hand. My free hand held up the communicator and I clicked through frequencies with my thumb. It clicked to one and I heard Jules' voice, squeaky and corrupted and hard to hear. \n\n\"Are you another survivor?\" he asked. \"I just got the signal from-\" \n\n\"It's me, Jules,\" I said, my voice quick. \"I don't have much time. Can you detect Tesc...energy or something?\" \n\n\"We...have that capacity, yes,\" he said. \"But it has to be timed right. The burst of exotic particles lasts a very short time, and-\" \n\n\"When I turn this communicator on again, you have to be really quiet and not speak to me through it,\" I whispered. \"And scan the whole fucking station. Got it? Do you got it?\" \n\n\"Yes, I understand,\" Jules said, sounding mystified. \n\nI turned off the communicator, then plugged in another component. As it clicked into place the device whirred to life and the power continued to redirect. I started to walk down the corridor, then grinned slightly - trying to hide any nerves I felt. I could just be imagining things. I could just be building paranoid delusions, the first such delusion from someone who had been cock-shocked into madness by a fucking Tesc monster. For all I knew, everything after Leviathan was just a fevered daydream. Fuck. Everything before Leviathan might have been a fucking dream. \n\n\"Lucas?\" I asked, cramming all those worries away. \n\n\"Yeah, Lassie?\" he asked, sounding distracted. \n\n\"Just wondering,\" I said, turning on the communicator as subtly as I could, hiding it against my hip. \"You got a girlfriend?\" \n\n\"What does that have to do with anything, lassie?\" he sounded amused. \n\n\"Well, I mean, I'm kinda feeling on edge here. This whole fucking day has been one insane piece of bullshit after another,\" I said, shaking my head. \"Having some human contact will be real nice, I'm just saying.\"  \n\nLucas sighed softly. \"Fine, lassie. Okay. I don't have a girlfriend. But I did have a lot of friends who were girls, and were quite pleased to have me around. If you know what I mean.\" \n\n\"FWB?\" I asked, grinning - the letters coming from the depths of my memory without need for elaboration. \n\n\"You know it, lassie,\" he said, then sighed. \"Listen, I've got to get back to work on some hacking I'm doing.\" \n\nI nodded - and prayed. When his voice went away, I paused, then held the communicator up and whispered into it as I stood beside the final power conduit. \"Did you get it?\" \n\nJules voice was silent for a long time. I worried he didn't have a connection to me for a moment, but then he spoke. His voice rasped and sounded like he had run several miles by himself. \n\n\"I did.\" He paused. \"It's coming from the center of Cryonics. That room is just a collection of pipes and cryogenic storage systems, it's not a room, nothing should come from there.\" \n\nI slowly turned to the side and looked at the corridor made by the cryocoffins. There they were, creating a pair of parallel lines that lead straight to a solidly built bulkhead. I remembered, what felt like a month ago, standing at this very place, looking down this very corridor, at that very bulkhead. I remember being filled with a terror of the doors opening by themselves. Of the corpses moving when I wasn't looking at them. I clenched my fist and started forward. My feet padded almost silently on the ground as I walked past coffins. I walked past Coffin 0451. \n\nI came to the doorway and tried the hatch. \n\nIt refused to budge. \n\n\"Of course,\" I snarled, pulling my fingers away from the hatch. I noticed a set of scanners, subtly hidden along the hatch. Biometric scanners. Who put biometric scanners on a hatch leading into a room full of pipes and maintenance systems? I felt coldly furious as I turned back and walked off. When I returned, blood splattered my face and arm and I was holding a ragged stump and a grasping hand. Shotguns were not exceptionally good at amputating things. But when you had infinite ammo, you can do a lot of shit. \n\nI slapped the hand onto the hatch, then sent a tiny jolt of electrical energy through it. Just enough to cause it to grip and warm. The hatch chimed and I was able to twist it open with a vicious jerk. It swung inwards and I stepped into the center of Cryonics...and back in time. \n\nI stood in a room I remembered vividly and yet had never been in. But it wasn't just that sense of horrible deja vu that made me feel as if I had stepped backwards through time. Rather, it was the fact that the center of the chamber was a six foot long stone slab. The edges were cut with gutters and grooves that were clearly designed to drain off into a pair of receptacles. Both of those receptacles were empty at the moment, but I could see where the bottle would snap in. The table was covered with curling, curving runes. Runes. The same as the inside of the collar that controlled my nanite clothing. The walls were decorated by unfurled red banners and six sided pentagrams. A leering goat's head statue sat in the center of the wall, looming over the macabre altar. Chains were connected to that altar. Chains that were spattered with drying blood. \n\nI remembered being pushed towards the altar. \n\nRobed figures loomed over me. \n\nI remembered being chained down. \n\nI remembered a voice. \n\n\"Begin the ritual.\" \n\nThe chanting. It rose goosebumps along my skin, even in memory, and then. Then. Oh. Then. The jarring, the hideous juxtaposition. The cellphone going off. I could remember one of the robed figures slapping at themselves, then pulling out their phone. Its light - garish and blue - had splayed across the ceiling and I could see the smiling face of Rachel Loesser as she tapped away at the phone, looking up at the others. \n\n\"Sorry, guys, sorry...\" \n\nThe memory cut off, as suddenly as if it had been recorded and someone had hit pause. I staggered to one knee, my hand going to my forehead. \"Ah...\" I whispered, hotly. My eyes closed and I felt the migraine pulse shuddering through my head. \"What the fuck what the fuck what the fucking fuck!?\" I snarled. \n\n\"Ah, that seems to have torn it.\" \n\nThe voice - cool and calm and Scottish - came from behind me. I sprang to my feet, backing around, my butt pressing to the altar as I aimed my shotgun at the man who had appeared behind me. He looked as if he wasn't quite there. Not because of a holographic shimmer or a crackle. Rather, it was that he was simply too perfect to be in the same world as the rest of us. His hair was raven black and his eyes were piercing, emerald green. He wore a finely pressed suit, sharp and clean lined, with a golden pocket watch in one hand. He was looking down at it and snapped it shut as I leveled my shotgun at his face. He looked up at me, tossing his head to flip some bangs back. His angular beauty made my heart ache. \n\nIt reminded me of Leviathan. \n\n\"I suppose the charade couldn't have lasted forever, lassie,\" Lucas said. \n\nI stepped to the side, not wanting to touch the altar anymore. My shotgun didn't waver. \n\n\"Who the fuck are you?\" I snarled. \n\nLucas chuckled. \"I have a lot of names, lassie. More than you do.\" He smirked slightly as he stepped forward - his feet not making a noise as he walked forward. \"The Dawnstar. The Accuser. The roaring lion.\" He spread his arms wide. \"I am the Lightbringer. I am the whole fucking universe.\" He smirked at me and that Scottish accent faded - dropped like a mask. He was close enough to touch me now, my shotgun almost bumping against his nose. His finger reached up and he gently pushed it aside. \"And you are going to help me to set this record straight.\" \n\n\"The Tesc aren't aliens, are they?\" I asked. \n\n\"Depends on your definition,\" the Lightbringer said, walking slowly past me. He started to circle around me, his finger caressing the edge of the alter. \"Better, it depends on your perspective. There are a great number of worlds. Some are light. Some are dark. Some rich with potential. Some dying and cracked.\" He grinned at me as he came back around the alter. Somehow, he had moved so that I was pinned - his arms were on either corner of the alter, my butt pressed against the edge of it. I could touch his too perfect arms or I could try and scramble up on the alter. But I didn't move. I couldn't look away from his eyes. I couldn't stop listening to his voice. \n\n\"Where a world is perched between extremes, it creates potential energy. Like the magnet in an electrical generator,\" the Lightbringer said, his breath hot against my face. \"Your world is one such, caught betwixt and between. And so, your souls have been marvelously potent.\" \n\nI gulped slowly. \"A-And TempleSoft has been...what? Dealing with demons?\" \n\nThe Lightbringer laughed. \"Oh, no, lassie. The UAC started that.\" He stepped back and away from me, his hands sliding behind his back. \"But TempleSoft picked up where they left off. And they figured out this little program.\" He gestured around himself with one hand. \"Clone someone who wants to sell their soul, imprint their memories onto the clone, and sacrifice the clone.\" \n\n\"And that works?\" I asked. \n\nThe Lightbringer's shoulders twitched. He didn't look back at me. But I could tell he was upset. I smirked slowly as he breathed in, then out. \n\n\"It's harder to tell when you're not there. You get the burst of energy, the soul. After a time, the soul dissolves. Far faster than it should. That tipped off my lieutenants and eventually, myself.\" \n\n\"And ever since then, TempleSoft fucking bilked-\" \n\nThe Lightbringer's hand closed around my throat. He lifted me up and off my feet, effortlessly. The iron vice of his grip squeezed tight and his cold eyes flashed as he looked into mine. He snarled, softly, then spoke and shook me with every word for emphasis. \"Don't. Poke. The. Bear. Lassie.\" He dropped me and I hit the ground hard. I gasped for air, my eyes hooded. The Lightbringer shook his head slowly. \"Our finances are in arrears. But fortunately, souls delivered directly should last a great deal longer than those delivered via death...\" \n\nI rubbed my throat, coughing. \"What the fuck are you on about?\" \n\n\"You're going to reroute the portal to my home,\" the Lighbringer said, calmly. \n\nMy eyes widened. \n\n\"And then you go home,\" he said, calmly. \"You get to take up the life of one Beatrice Montenegro - she offered her soul, and your ritual might have been interrupted by this station being yanked into Hell. The conduit is open.\" \n\nI breathed slowly. \"So, you want me...to dump those four into Hell. Then murder a woman, who...\" \n\n\"Dump four people who worked for a corporation like this one without asking a single question into a richly deserved afterlife, then complete a contract made by a woman who wants her brother's wealth and is too cowardly to take it,\" the Lightbringer said, turning to look down at me. \"Admit it, nothing you've seen here makes them worth saving. Clones, sacrificed to appease the rich. Weapons technology, in a world already with a peace fragile enough to break with a cough.\" He shook his head slowly. \n\nI rubbed my throat - feeling the pain fading to almost nothing. But I kept up the movement, not wanting to give away my thoughts. I looked at the Lightbringer - past the Lightbringer, at the statue leering down at me from the wall. That statue of the horned goat, the leering eyes, those slitted pupils. I slowly licked my lips. \n\n\"And I get wealth? Fame? Immortality?\" \n\nThe Lightbringer chuckled. \"As close to immortality as can be offered one with your shinimantic makeup, yes.\" \n\nI grinned. \"Sounds good.\" \n\nThe Lightbringer smirked. \n\n\"If I was a dickless asshole,\" I murmured. \n\nI pulled the trigger. The shotgun wasn't aimed expertly. But it didn't need to be aimed expertly. It was a fucking shotgun. The pellets slammed into the leering statue, shattering it into a spray of plaster and chunks of stone. The cloud of the impact filled the room and the Lightbringer staggered away from me, screeching. I scrambled to my feet, sprinting towards the exit. Then I heard the screeching changing pitch. Hue. Tone. It was becoming something else. \n\nLaughter. \n\n\"You idiot!\" the Lightbringer laughed, emerging from the chamber. He looked more real than he ever had before, dust caking his suit, mussing up his hair. He brushed it off his shoulders and smirked at me. \"That wasn't an icon of my power. That was my prison.\" \n\nI gulped. \n\nCrap. \n\nThe Lightbringer snapped his fingers. The cryocrypts opened and the dessicated corpses of the other sacrifices emerged. Their bodies showed, now that they were standing upright, the huge cuts where their hearts had been removed, their entrails ripped out. They stepped out, their arms reaching towards me, hideous moans busting from their mouths. I stepped back against the wall and felt a clammy hand close around my ankle. I looked down and saw the one handed corpse of Rachel Lossener looking up at me, her mouth gurgling, her eyes glowing with red fury. I shot her in the head and staggered backwards and away. The other zombies were rushing forward, and I could hear snarling sounds coming from the other cryo corridors. I'd be surrounded soon. I stepped backwards, waiting until the zombies were clustered. Then I fired out a blast of lightning at the ceiling conduit that I had prepped. It exploded in a spray of sparks and arcing lightning. Zombies exploded in sprays of gore and I staggered backwards with the impact of bone and blood along my forearm. \n\nThe conduit's surging power faded for a moment. I risked a sprint forward, rushing for the elevator shaft. I got there almost at the same time as the second zombie hoard. My shotgun roared and several zombies staggered backwards, more thrown by the pellet impacts than damaged. But as I cocked the shotgun, I heard laughter chasing me from behind the corridor. The Lightbringer walked towards me, shaking his head slightly as he went. ",
        "I hauled myself into the elevator and slammed down the button for Corporate. The elevator closed and I held up the communicator I had salvaged from the drone. The roar of gunfire that reached my ears was intense and made Jules hard to hear. \n\n\"We're only getting a third of the power needed!\" he said. \"And the Tesc are boiling out of every fucking hole in the wall! The turrets are going full tilt, and we're-\" There was a roar of gunfire, getting louder, then softer. \"And we're not going to hold out forever!\" \n\n\"Warm up the portal,\" I said. \n\n\"You're not here-\" \n\n\"It'll take extra time thanks to the lower power, right?\" I asked. \"Just fucking do it!\" \n\nThe doors opened and I came into Corporate. I could hear rattling in the pipes. But I didn't give it any mind. I ran forward towards the flayed bodies that had been put up on the walls. Prison, huh? I leaped up, grabbing one of the spikes. I hauled back and managed to wrench it free with a grunt, and the corpse swung away from the wall, hideously red. It tore free from the other nails as I dropped down. It splatted and the pipes burst open as hundreds of Broodlings emerged from the darkness. They scuttled into the room with wild abandon. \n\nI had to work faster. \n\nI swung my shotgun around - not aiming at the Broodlings. \n\nI aimed at the second flayed corpse. \n\nI fired and took it in the shoulder. Flesh snapped and popped and tore and the body thumped to the ground, leaving only two solitary arms stuck to the wall. I managed to work another shotgun pump and blow another corpse - this one slumping in half - before the Broodlings were on me. They swarmed over my body and I felt teeth slamming into the nanite sheath surrounding my body. I screamed and thrashed - firing off lightning, but it did nothing to the massive swarm. Their teeth continued to bite and bite, and though they didn't tear my flesh, they left dozens of stinging bruises. I felt some scuttling against my face and struggled desperately. \n\nThe sound of the roar that chased them off was like the end of the world. The Broodlings tumbled away from my body, screeching. Several burst like hideous fruit, splattering me with their black blood. Then I was sitting up, blinking. The immense head of Leviathan looked down at me. His breath was warm on my body. \n\nUnexpected, his voice rumbled in my mind. \n\nI grinned. \"The enemy of my enemy...\" I paused. \"F-Fucks my brains out. A-Apparently.\" \n\nNot this time. \n\nThat great, warm mouth breathed on me again and I was reminded of that time, laying underneath his avatar, my body stretched deliciously. My eyes shuddered shut and I writhed and panted...and realized I had cum. From just the memory and his breath alone. Then he was stomping away, heading towards the elevator. It screeched as his arm tore out the innards, the cables snapping, the car tumbling down the shaft. Careless of the damage he was causing, the immense bulk of him slithered into the shaft and was gone. \n\nI panted. \n\n\"Inconsiderate asshole,\" I snarled. \n\nI grabbed my spacesuit helmet. Snapped it on. Stood up. \n\nThe huge windows in Corporate shattered quite nicely. \n\nI tumbled outwards into space, buffeted by the air rushing past me. Station keeping jets flared and sputtered above and below my field of vision - but as I watched, I saw their flames were strangely thin and long. And as the exhaust spiraled away from the station, I saw it twisting and turning inconsistently, as if the very physics that they obeyed were breaking down. It clicked. What would smoke look like, if half of the smoke stopped moving because it had run out of time? It'd create strange, skittering, geometric clouds just like that. \n\nThe station was starting to slew slowly. I looked away from it and at the hellish planet that it orbited. \n\nNo. \n\nNot hellish \n\nHell. \n\nI kicked on the thrusters that I had used to repair the stationkeeping engine, shooting towards the physics lab ring of Virgil Station. My heart hammered as I heard the gunfire over my communicator - ringing in my ears. Jules voice, shouting. \"Look out!\" \n\nI hit the accelerator harder. The airlock started to fill my vision. I spun around and decelerated equally as hard - but I had left it for too long. I slammed into the station hard enough to jar the air out of my lungs. I woofed against the helmet and almost cracked the faceplate against the metal of Virgil station. Only reflex kept me from spinning away and away and away from the station - my hand closing around the grasping bar above the airlock. I tapped at the door and the airlock cycled open. I started forward- \n\nRun. The instinct was sudden and intense and set me thrusting forward as hard as I could. Even so, my foot was nearly smashed by the airlock door slamming shut while I was in the middle of it. I gasped loudly, looking around myself. Then it hit me. The Lightbringer had given me my access codes. I had freed him and now he wasn't interested in me fucking up his plans. But then the gravity of the station was on and the inner door opened. Air surrounded me now - and through that air, I could hear the screech of the Brood. \n\nThe demons. \n\nThe hammering of the auto-turrets was a ferocious undercurrent to the sound of screeching demons. I leaped through the door as fast as I could, rolling and coming up onto the balls of my feet - the door slamming shut behind me. I looked around the corridor, trying to place where the central chamber would be compared to me. I was pretty sure I knew the way, but I stopped myself as I saw that I was standing right next to a security station. I oohed softly. \n\nMy palm pressed to the keypad and I fired off an immense jolt of electrical energy into it. The door sprang open with a squealing growl, hydraulic fluid dripping from the upper edge of the door frame. I stepped under the droplets and grinned slowly as I looked around the room. The security forces had been overwhelmed too fast to bring out all of their guns. There was an armor locker, which I smashed open with the same brute force electrical overload I had used before. I strapped the green carapace chest on, snapped on the gauntlets. It socketed on and around my spacesuit armor, and made me feel less...exposed. \n\nLess naked. \n\nI whistled slowly as I pulled out the underslung plasma cannon that was contained in the Riot Response Kit. \n\n\"TemplarSoft doesn't fuck around,\" I whispered, tapping on the weapon and checking the battery. The battery glowed red. A Tesc power source. An infinite power source. I grinned wickedly. \"Groovy.\" \n\nI walked out of the armory and down the corridor. The plasma cannon was heavy in my arms. Comforting. I followed the sound of violence and came on a pocket of demons rushing towards the fray. They were all Warrior Brood, their bodies sleek and black carapaces, their tails swishing from side to side. I thumbed on the plasma cannon's safty and felt it whirr. A glowing reticule projected before my face thanks to some rather handy holographics and I leveled it on the demon in the lead. I pulled back on the trigger and the upper barrel on the plasma cannon let loose with a torrent of purple-white energy. It flew in a perfectly straight line, hit the Warrior Brood in the side, and caused it to pop like a balloon. Keeping the trigger depressed, I swept the beam around - and saw that it dragged like a stream of water. The Brood skittered, backpedaling, almost comically trying to back away from the stream, but they failed to move in time. \n\nPop. Pop. Pop. Pop. Pop. \n\nI grinned. \"I like it.\" \n\nI stepped around the last corner and came to the sea of violence that swarmed around the auto-turrets. The portal stood in the center of the room, crackling and swirling with energy. I let loose with a stream of plasma, sweeping it back and forth, back and forth, back and forth. Tesc by the dozens exploded into sprays of gore, and several larger ones turned to face me. The huge beasts looked like they had been augmented by a mad cyberneticist - rocket launchers attached to their shoulders. I swept the beam along their heads, then dropped the plasma cannon to roll away from the return fire from the survivor. The rockets smashed into the ground. \n\nThe actual explosions were fairly small, but shrapnel bounced off my green armor with a sound not unlike hail. I struggled to my feet just as three warrior bane leaped on me. Their claws dug into my armor with snarling, screeching sounds. But nothing got through. I grabbed one by the bony hips, throwing him at another, then blasted the third with lightning. I drew my pistol one handed and my shotgun with the other, sprinting forward. I leaped onto a pile of corpses as the demons surrounded me. \n\n\"Come get some!\" I snarled. \n\nI unloaded an entire magazine into one demon's chest and head, then fired off the shotgun at another. He splattered and the big fucker shouldered his way forward. His rockets were still reloading or regrowing or something. I tossed my pistol aside, cocked the shotgun, then leaped forward. I landed on the shoulders of one of the other smaller demons, then sprang up and landed on the big fucker's back. I pumped a round of buckshot into his head. He staggered, groaning, reaching up towards me with both hands. I fired again and this time his head exploded like an overripe melon. \n\nAs he toppled, I reached down and yanked the implanted rocket launcher free, my arm straining with the effort. I held the gory, dripping piece of cybernetics in my hand and sprang off the big fucker as he face-planted onto the ground. Well, bleeding neck stump planted. \n\nDemons massed before me. \n\nI held the rocket launcher up and surged it with a tiny jolt of electricity. I hit something I was supposed too, because the rocket shot out of it, a jet of superheated gas blasting the demon behind me square in the face. The rocket plunged into a terrified looking warrior's chest, then sent him rocketing backwards into a mass of his friends before the warhead went off. I lifted an arm to shield my face from the splatter. \n\nThe demons were backing away from me. Blood dripped from my body and I laughed shakily. \n\n\"What...are...you?\" \n\nThe Lightbringer stepped out from the mass of demons - all of them backing away from him, bowing respectfully. Behind me, I heard Jules and the others gasp in shock. Jules, his body covered with tiny scratches, a pistol in his hands, called out to me. \n\n\"Who the fuck is that, Beatrice!?\" \n\nThe Lightbringer spread his hands wide, flicking his fingers. The demons continued to back away from him, bowing low, their foreheads scraping against the ground. He ignored Jules as the quiet whirring of the portal became the loudest sound in the room. I panted softly, breathing in. Breathing out. I thought back to the earliest moment I could really remember. Not the boat. Not the ritual chamber. Not the chanting robed corporate wage slaves. Not even the coldness of cryosleep. It was the moment after, staggering out into the corridor. \n\nIt was that strange voice I had heard, echoing in my mind. \n\nI remembered those words and I smiled. I lifted my head and felt an utter lightness filling my whole being. I knew what I was. I knew what I was supposed to do. And I knew how to do it. I looked right into the Lightbringer's eyes. \n\n\"I'm good enough,\" I said, quietly. \"I'll do. Until someone better is found.\" \n\nThe Lightbringer's face twisted with rage. His suit was fraying and a darkness swirled around his body - an infinite blackness and a twisting, crackling aura of spite. I could almost see wings unfolding behind him. \n\n\"Good enough won't stop me,\" he snarled. \n\n\"You're right, Lucy,\" I said, casually. \"But he will.\" \n\nThe Lightbringer turned right before Leviathan, emerging from the elevator tube with a squeal of bending metal, smashed into him. The Lightbringer had changed utterly in that moment. There was something huge and spined and black, hissing and roaring. Claws slashed into Leviathan and black blood went flying. Then Levithan's mouth opened wide and a searing red light burst from between his jaws. I staggered away from the flames as the Lightbrighter struck back hard enough to send the flames flying out in every direction. Demons screeched and ran for cover. \n\nI staggered back into Jules hands. He didn't look away from the titanic struggle as the two creatures older than time and greater than humanity slashed and bit and struck. The Lightbringer was smashed into the wall, denting it outwards. Hissing, screeching air roared past him as I realized they were about to breach the walls. \n\nVirgil Station shuddered. The portal behind me cracked and a bright blue light poured from it. \n\n\"Jules!\" \n\nTracy screamed it at us - and we both turned. \n\nThe portal was opened and showed a large city street. Cars had stopped and people were running from it. I could see the gleam of the Golden Gate bridge between the bright, smooth faces of the buildings. Several humans with more guts than common sense were holding up their phones, filming the portal. Tracy and Amanda and Marisa were already rushing through. Jules dragged me towards it. \n\nI could smell the sweat sea breeze. \n\nLeviathan unleashed another blast of torrential, hellish energy. The searing light cast Jules face in molten iron. But even through that freakish coloring, I could see the concern in his eyes. \n\n\"We have to go now!\" he shouted. \n\nMy hand went to my belly. \n\nI am making a choice multifaceted. \n\nLeviathan's voice echoed in my mind. \n\nI smiled at Jules. I shook my head. \n\n\"No...\" he whispered. He grabbed my wrist and tried to tug me forward. The depressurization alarms were going insane. I mouthed a single word at him. Sorry. Then I socked him in the jaw hard enough to send him staggering backwards, through the portal. He scrambled up, helped to his feet by several police officers. I lifted my hand...and touched my index finger to my thumb and grinned. \n\nIt was going to be okay. \n\nThen I shot the portal's power cables. They sparked, crackled, and the portal shut down with a squeal of doomed souls. Behind me, I saw Leviathan and the Lightbringer going tumbling out into space. The air had vented out of a hole so massive that the wind had barely tugged at my sleeves. I snapped on my spacesuit helmet, clicking it into place. The station was starting to spin now and I sat down, my back resting against the portal. Every rotation made Hell come closer and closer and closer.  \n\nI grinned. \n\nA short life, I thought. \n\nBut overall, I was happy with it. Even if I had never gotten a chance to save a single Tesc hybrid. I looked to the side and checked - and saw that Daniella had been left behind. She was glaring daggers at me. I flipped her off, then closed my eyes and readied myself for the burning heat of reentry. Something darted past me and I felt myself jerked aside. My head smashed against the inside of my helmet and I groaned. By the time I blinked away the white fog, I was already kilometers away from Virgil Station. The roughly pyramidal shape of the station was tumbling, tumbling, tumbling. \n\nI was held against something vast and black and warm. Wings beat above my head - despite the fact we were in a fucking vacuum. \n\nThe station drew a searing hot streak underneath us. I watched it, not caring that it left behind a white smear that left my eyes burning with pain. Then the brightness was overwhelming. I whooped inside of my helmet, tasting blood dripping from my nose. \n\nVirgil Station had smashed into the vast plains of Hell like the fight of a furious God. The station - easily more than half a million tons of steel and ceramics and plastic and electrical cabling and fucked up scientific equipment - had to have been going terminal velocity. I knew enough about physics to know that that was really going to ruin a load of peoples days. And as my vision cleared, I could see the vast swelling bloom of light and color. The racing edges of the firestorms were followed by the smoke and dust kicked up, blotting out the ground underneath my feet. \n\nI grinned. \n\n\"Whose the Lightbringer now?\" I muttered. \n\nWe sailed down - slower by far than Virgil Station. And so, there was no searing heat. No crisping, burning reentry. Instead, there was just a slow, settling fatigue. I was becoming aware of how long I had gone without sleep, without food. Without fucking water. Adrenaline seeped out of my body and I let myself simply be held like a limp rag. Those huge, beating wings started to make sound as an actual atmosphere surrounded us. Then we were through the clouds, soaring over plains of flames - open, crackling rents in the earth that filled the air with soot. The horizon glowed with the firestorms from Virgil's impacts. \n\nThen we were landed - the ground underneath suddenly transformed into an obsidian black field. The arm holding me up let me go and I gasped as I fell to my hands and knees. I groaned and let myself roll onto my side. I rolled onto my back and saw that I was laying on the parapet of a massive tower. A castle, timeless and yet somehow ancient, loomed out of the hellscape and I was sprawled on the roof with Leviathan. \n\nThe immense dragon leaned forward and licked at his claws. Tasting the blood dripping from them. \n\nI pushed myself to a seated position. \n\n\"I don't suppose,\" I said, my voice raspy. \"You have anything to eat.\" \n\n### \n\nBeatrice Montenegro lounged in her bed, silken sheets draped about her as she listened to her Muse. \n\n[And,] the voice - cool and sexless and modulated in a way designed by expert AI programmers to be utterly relaxing - said. [That is the rest of your personal correspondence for the day. Do you wish a news feed as well?] \n\nBeatrice sighed and flicked her finger. An augmented reality window pane that showed her the camera feed on one of her brother's parties skidded out of her field of view. She was trying to not feel jealous. But it was so hard. Her brother wasn't just using the funds that father had left him and the company that mother had left him. He was using them to throw parties that the elite were going to be talking about for months. Gene-sequenced extinct tigers? How gauche. She looked at the point of light that represented her Muse and nodded. \n\n[Firstly, the Eastern Bloc has withdrawn forces from-] \n\n\"Skip,\" Beatrice said, closing her eyes. \n\n[Secondly, the Virgil Station Oversight Comity has found several quite damning pieces of evidence against TemplarSoft's CEO and board of directors. The United Nations has opened up an inquest and there are rumors that they might be facing actual charges.] \n\nThat made Beatrice stand up and start towards the bathroom. She needed to splash water in her face - to stop herself from shuddering convulsively. The only good thing about that whole horrid business was that whatever had taken the station hadn't left enough evidence on her. The evidence brought by that awful doctor- \n\n[Doctor Jules V. Delacroix,] her muse said. \n\n\"Right,\" she muttered as she rubbed the water into her face. \"That awful doctor might have taken the corporation down, but at least he-\" \n\nShe stopped. \n\nHer reflection was smirking at her. \n\nBeatrice stood stock still, her eyes wide as saucers. Her reflection wasn't just smirking. It was also subtly and grossly different in a dozen different ways. Thin scars seamed several parts of her otherwise naked body. Her breasts were slightly larger. Her eyes were...warmer than hers. Playful, even. The reflection then held up a piece of paper - the words written with the too-careful strokes of someone deliberately writing backwards, the tiny errors created by this making them look odd...but still readable. ",
        "DONATE FORTUNE TO CHARITY \n\nBeatrice opened her mouth wide. \n\nThe reflection flipped the paper, then slapped it against the mirror. \n\nOR YOU WILL REGRET IT \n\nThe 'will' had been underlined and circled a few dozen times. Between blinks, the reflection was normal again. Beatrice stammered. Five minutes later, she was on the phone with her accountant. \n\n\"I don't care how hard it its!\" She said, clutching the crystal orb of the phone to her head. She could have used her internal coms, but at the moment, Beatrice desperately wanted to hold something. \"Start some charities! R-Right now!\" \n\n### \n\nI sprawled in the bed. It didn't seem right for Hell to be quite so comfortable. My aching muscles twinged as Leviathan's hands caressed along my shoulders. I shivered as his cool fingers found places where I had gotten tight and he loosened them. I let myself turn into a puddle and reflected on just what a bit of sleep, some food, some drink, and a quiet talk could do to someone's perspectives. Lev had taken me to his kitchens and cooked up something that tasted a great deal like a well marbled ribeye. I had eaten, drunk down some beer, and gone right to sleep. The next three days had been spent just...recovering. \n\nThere were nightmares. \n\nThere were shivers and shakes. \n\nLev didn't talk much. \n\nBut he did hold me. So there was that. \n\nThen, when he did talk, it was simple and to the point. \n\n\"Interaction is bidirectional.\" \n\nMy brow had furrowed, my cheek pressed to the hard muscle of his belly. I kissed around the soft divot I kept calling a belly button, despite it being no such thing on his alien biology. The kiss had come naturally - though we hadn't shared more than fifty words between one another. It was a bond made in fire and blood and sex. I didn't...wouldn't call it love, but it was something that made a kiss like that feel as natural as breathing. \n\n\"Okay,\" I had said. \"Evil can't come into a world without good leaving it.\" \n\nLev inclined his head, fractionally. His avatar had cables connecting it to his draconic body, which sprawled on a massive pile of obsidian and copper and shale rocks. Smoke rose from several points on his body, wafting down wind over us and filling my nose with his scent. I noticed that as his head was inclined, his dragon body nodded in unison - creating a small cascade of shale rocks. \n\n\"Temporal exigencies force alteration in cyclic systems,\" he said. \n\n\"Time makes Hell different,\" I translated. \n\nHe held up his hand, inclining it from side to side. When he spoke, it was his dragon who opened its mouth and the words were deep. Bone rattling, sex moisteningly deep. \n\n\"Possibilities exist.\" \n\n\"But are resisted, aren't they?\" I asked, quietly. \n\nBoth nodded. \n\n\"Entrenchment in purpose leads to calcification of mentality.\" Lev chuckled, quietly. I snorted and leaned forward. I found his nipple and bit it gently. He rumbled quietly. I felt a strange squirming happiness in that rumble. \n\n\"Well, ain't that just a pisser?\" I asked, brushing my hands through my hair. I sat up and shook myself a bit. \"Lucy runs away from the Big G to find freedom. Now, who knows how many billions of years later, he's just as stuck in a rut.\" \n\n\"Biblical allegories are imperfect and inexact,\" Lev said, shrugging those athletic shoulders of his. \"Suffice to say that the multiverse remains irreducibly complex. There exists threats larger than a lack of illumination.\" \n\nI shook my head slowly. \"I can't fucking solve those.\" \n\n\"You can solve this. Or help.\" He looked right into my eyes. \n\nI smiled. \"I'll need a break, first.\" \n\nAnd I had gotten it. \n\nRested. Relaxed. equipped. Blackened and scarred by reentry, my shotgun had been tossed away from the space station, and had landed in the vast plains. The artisans loyal to Lev had worked day and night to restore her to working quality. My armor was pitted and scored - but I hadn't wanted it fixed. I liked it weather beaten. Armed and armored, I stepped out of the front gates of Lev's castle. I rested the shotgun against my shoulder and looked out at the vast steppes of Hell. The smoldering flames, rising and crackling from the pits. The rust red skies. \n\nIn the distance, I could see the banners of Lucy's armies. \n\nI grinned. \n\n\"The mind games are over, buddy,\" I muttered. \n\nAnd I set off. \n\nCause I had some hell to pay. \n\nTHE END"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "action",
        "demon",
        "lightbringer",
        "lucifer",
        "satan",
        451
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mind-games-ch-06"
}