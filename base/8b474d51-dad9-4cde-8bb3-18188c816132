{
    "title": "It's a Dead Man's World Ch. 04",
    "pages": [
        "This story is a bit wordy and fairly long, so if you are looking for immediate gratification, you might want to look elsewhere.\n\n------------- -----------------------\n\nThe following story is a work of fiction. Any resemblance between actual persons, living or dead (or just confused) is entirely coincidental. Please do not copy/redistribute the story, in part or in total, without the author's permission.\n\nThis story takes place in the fictional city of Springfield, California several hundred years in the future, so don't go looking for it on a map. And in my little fictional world, there are no unwanted pregnancies or STD's, except as plot driving devices. The author encourages the practice of safe-sex.\n\nThis story also consists entirely of f/f sexual intercourse.\n\n--------------- ----------------------------\n\nVeronica sat on a ledge on the mountain that she and Eliza often climbed together, but at the moment she was alone. Things had gotten scary for her . . . scarier than they had ever been. And she had been in some bad situations, the most recent of which was being captured and tortured to within an inch of her life, only to be saved at the last moment by her half-dead lover and a Living Jewel. Kelik had used The Alchemist's Dream to mystically combine the two women, allowing them to share each other's strengths and minimizing their weaknesses until both women \"evolved\" into new life-forms entirely. They called themselves Hybrids, and they were faster, stronger and more efficient than either humans or vampires. Veronica had been human once. Eliza had been a vampire. Now, both women had only one other person like them in the world, and that had been enough.\n\nBut while her body had changed, she found that her loyalties had remained stubbornly consistent. A month earlier, they had recovered The Dragon's Breath, a Living Gem that was supposed to allow them to open a dimensional bridge back to Terra and reunite the two worlds that had been separated by the radical pro-human group known as the Purity. But the Purity had launched a fevered and almost desperate attack on the U. S. military base known as Fort Crass to steal some of the Living Gems, particularly The Dead Man's World, which was supposed to be able to be used in the casting of doomsday magic. And in the process, they had killed the venerated and respected Ambassador Kelik. The same vampire who had saved the lives of Veronica and Eliza . . . Veronica's friend and Eliza's mentor. Eliza and her normal nemesis Valar had sent out messages to all the Terrans remaining on Earth, letting them know what happened and calling them to arms.\n\nEliza was bound and determined to declare a Radotanida, or a Blood War, on the Purity. It was a feud that required the total annihilation of your enemies . . . until every last drop of blood they had was spilled on the ground. Veronica knew her lover had almost completely snapped. She had been attacked, her lover tortured with Eliza sharing the pain, her friend and comrade Wyrm had been disfigured and was missing an arm, and one of her truest friends had been killed by the Purity just because he was Terran. Her heart was coated in hatred, and Veronica could feel the vileness beating within the chest of the woman she loved. \n\nBut the World Council and United States government, once they learned of what Eliza was planning, refused to condone it and were in the process of making sure it didn't happen. They refused to help contact or move Terrans who wished to participate in the war. They warned Eliza against taking any type of independent military action. They refused to allow Eliza or Valar back into Fort Crass until they called everything off. They warned and screamed and threatened until their faces turned blue. Eliza didn't care. But Veronica did. She felt her lover's anger and even understood it, but she had lived her life by a set of rules. What Eliza was proposing was effectively genocide, even if the Purity tried to surrender. And Veronica couldn't condone that, however justified Eliza felt. She had tried to reason with her lover, but Eliza would have none of it. And as a direct result of her conflict with the government, she had refused to yield possession of The Dragon's Breath.\n\nDue to government interference, the number of people who had made their way to Eliza's compound numbered only about a hundred, but they were a scary hundred or so. Everyone who had arrived had military training or combat experience. There were sixty vampires, twelve lycanthropes (In earth legend, these were known as werewolves, werebears, etc.), fifteen gargoyles, ten succubae, and six trolls, not including Thug. It was this last group that scared even their own allies. \n\nVeronica had gotten to know Thug reasonably well in the last year, and had grown to respect his power and his mind. She had seen that particular troll beat up a state-of-the-art attack helicopter by himself. But trolls were normally solitary, and the only time you saw more than one at a time was when they met to mate (trolls had the capacity to be both male and female, so it was not uncommon for both creatures to be pregnant after such an encounter). Neither the information contained in the Arcanum or the history in Valar's brain had ANY recollection of this many trolls coming together to make war. Actually, there was no precedent for trolls going to war at all, and Veronica was somewhat terrified of what the seven-to-ten-foot, half-ton-plus regenerating trolls would be able to do as a single fighting unit.\n\nShe smelled the air and could tell that someone familiar was approached. \n\n\"Hello Allyson,\" she said, trying to take comfort in the warmth of the setting sun.\n\n\"I thought I'd find you here,\" the human woman said. Allyson and Dennis Murgo were members of Eliza's security team. They had all worked together for years before the recent unpleasantness, and they also felt their loyalties being tugged in opposite directions. They had liked Kelik, and they were boiling under the skin at the thought of what had been done to their friend Wyrm, who was still breathing through a tube while being outfitted with a state-of-the-art prosthetic arm. They wanted revenge, but they weren't sure if they were ready for the total annihilation of a group, particularly if it involved violating as many international treaties and conventions as Eliza intended.\n\n\"So, is this as awkward for you as it is for me?\"\n\nAllyson sat down next the former-human and wrapped her arms around her knees, looking thoughtfully towards the sunset. \"I'm sorry Veronica. I'm sorry you have to go through this. But Dennis and I made our decision. We're staying with Eliza.\"\n\n\"I couldn't imagine you not at her side,\" Veronica said.\n\n\"I could say the same for you. Maybe she'll come to her senses . . .\"\n\nVeronica let out a nervous laugh. \"Sense has got nothing to do with this anymore. An army barely more than a hundred strong may very well be the scariest force I've ever seen. They're certainly strong enough to take the Purity in a straight fight, but they'll polarize the planet if they commit the type of violence that they're threatening, and they don't stand a chance against the World Council. Eliza may be able to create the social divide that the Purity have been hoping for, but she's so . . . God, and I want to fight with her!\" Veronica said exasperatedly. \"I feel her rage every second I'm awake! I understand exactly why she feels the way she does, but somehow I'm supposed to stop her!\"\n\n\"Right now, the only thing that's stopping her from moving is that over half the group down there doesn't feel they should follow a lesbian half-breed. No offense. Valar is actually trying to get them to unite behind Eliza, but the rest of the vampires want to follow him instead. The lycanthropes don't care as long as they get to bite someone, the succubae are torn between Valar and Eliza, and the trolls . . . well, no one is sure. I think they prefer Eliza. That's her big trump card . . . those fuckin' trolls.\"\n\n\"But regardless of who they follow, they're planning on a massacre of biblical proportions,\" Veronica stated. \"And the World Council won't allow that! She has every reason to hate them! You all do! So how do I justify telling her not to go through with this?\"\n\n\"I know it's wrong. But Eliza and Wyrm . . . they're our teammates. They're our friends and they're the closest things to family that Dennis or I have. One is barely hanging on and the other has been hurt by these fuckers so many times . . .\" Allyson stopped. The woman she was talking to knew all to well what kind of damage the enemy was capable of inflicting. \"I'm sorry . . . I didn't mean . . .\"\n\n\"Don't worry,\" Veronica said. \"I survived it. Now I have to survive this. Sometimes, surviving sucks.\" Veronica raised her head, almost as if she was listening to the wind. \"She's coming,\" Veronica said, her voice subdued. \"She wants to talk to me.\" \n\nMost of the time, Allyson thought the telepathic connection the two women shared was cool. But sometimes, it was just creepy. \"Should I leave?\"\n\n\"That's probably a good idea. Thanks for the talk though,\" Veronica said. She watched Allyson disappear back down the mountain. As soon as the woman was out of sight, Veronica sensed someone standing just behind her and could feel hot breath on her neck. \"How much did you hear?\" she asked.\n\n\"All of it. You aren't talking to me, so I find eavesdropping to somewhat effective.\" Eliza sat down in the spot Allyson had recently vacated.\n\n\"And you stayed downwind so I couldn't smell you. You're still better at this than I am.\" Veronica sighed. \"It's not too late to stop this, you know.\"\n\n\"Yes it is,\" Eliza responded stiffly. \"Veronica, we didn't start this war. But we've been isolated from our world, attacked without cause and murdered in the streets. We've abided by human rules, and we're losing our lives. It's us that the Purity is after. Not the United States and not the World Council . . . just us. And we can't even open the portal to go home because if we do, the Purity will have enough power to use The Dead Man's World. You think THEY will stop short of genocide if they have the option?\"\n\n\"No . . . no I don't. But that's what's supposed to make us different. We WON'T do the things that they do. It's why we get to wear the white hats.\" She reached over and took Eliza's hand. \"If you get The Dead Man's World back, you would be able to open the portal safely and the Terrans would be able to help track the rest of the Purity down. They HAVE to be short on resources now, otherwise they would have gone after us while we were in the mountains as well rather than just assaulting Fort Crass. And you heard Captain Corbin . . . they were desperate. Capturing The Dead Man's World was a desperate act. We don't NEED this! We can win without a massacre, either yours or theirs!\"\n\nEliza sighed. \"I wish that were true,\" she said. \"But the World Council is so concerned with not violating anyone's boundaries without concrete evidence of Purity activity that no one can actually FIND that evidence. And you know better than anyone how bogged down the U.S. is with their own bureaucracy. By the time anyone gets around to making an executive decision, there may not be enough of us left to fight. Veronica, I want you at my side for this. You're in just as much danger from them now as any of us; maybe even more so. You and I show a possible connection between the human and vampire races that the Purity will do ANYTHING to destroy! Give me a reason . . . show me another way, and I'll bring it to Valar, but right now we are fighting for our lives!\"\n\n\"Love, you're on Earth now, not Terra. The rules are different. You HAVE to play by the local rules, otherwise you've got total chaos and anarchy!\" She stopped and stared at the now dark horizon. \"You think I've forgotten what those fucks did to me? What they did to you? Do you think my soul doesn't go cold when I go to visit Wyrm or when I put flowers on Kelik's stasis cube? I want to see those sons-of-bitches all dragged through the streets to be spit on by the people the claimed they were trying to save!\"\n\n\"That's my girl,\" Eliza said, actually breaking into a small grin. \n\nVeronica returned the half-hearted smile. \"Do you know what happens next week?\" When Eliza looked puzzled, Veronica smiled. \"I guess that means you're the guy of the couple. Next week will be one year that we've been together. One year since that night in the tower . . .\"\n\n\"Since you 'went on the attack,' if I recall correctly,\" Eliza said. It felt like she had known Veronica much longer than a year. \"A year since the sweetest drink that's ever pass my lips.\" Eliza stopped and blushed. Her mouth had run away with her for a moment.\n\nVeronica turned and placed a hand on the side of her lover's face. {{ I love you, }} she thought, opening up her mind to Eliza once more. {{ I just don't know if I can follow you where you're going. }}\n\n{{ I wouldn't force you to, even if I could. But the blood has been called for and the blood must be spilled. I can't stop that now. }}\n\nVeronica felt genuine remorse and confusion, still tinged with anger, emanating from her lover's mind. But she also sensed resolve. She stood up and pulled her lover up by the hand. {{ Then you know this might be our last night together. }}\n\nEliza looked at her feet. {{ I know. It kills me, but I know. }} She felt Veronica leading her by the hand to a smooth boulder they often lay on, soaking in the residual heat of the California sun. \n\n{{ Then we should make this night special, }} Veronica thought quietly. She stood behind Eliza and wrapped her arms around that lithe, powerful body. She began kissing her lover's neck, eliciting instinctive gasps as she stimulated one of the former-vampire's most sensitive areas. Then her hands ran up under Eliza's shirt, thanking the Lord that her girlfriend's tits were firm enough that she didn't need a bra. She had the cutest, most sensitive nipples Veronica had ever played with, so she cupped those breasts in her hands and pinched those nipples between her fingers. \n\nEliza thrust her hips back into Veronica's crotch as the blonde-haired former human fondled her sensitive bits. She felt her lover's tongue drag slowly up her neck on its way to Eliza's ear, causing the white-haired Hybrid to shudder. Eliza unzipped her pants and grabbed one of Veronica's hands, pushing it down into the front of her jeans. She was rewarded be a series of slow, circular rubs over her moistening mound. She reached back and gripped the front pockets of Veronica's pants, holding her lover close. \n\nVeronica slid two fingers into Eliza's box and curled them, pumping her miniature dick into the woman's body as she nibbled on Eliza's ear. She couldn't help but realize how close the veins in Eliza's neck were and how good it would be to taste that blood, but she held off. She concentrated on fingering her girlfriend and playing with her tits.\n\nEliza pulled away for a moment and turned around. Her hands found the edge of Veronica's shirt and lifted it over her head, then unfastened the woman's bra. Those glorious, round breasts came into view, and Eliza couldn't help but pressing her lips against one nipple as Veronica cradled her head. She began to fumble with Veronica's shorts, pushing them down to find that the woman had forsaken underwear for the day. With her lips still tantalizing Veronica's breast, Eliza traced the woman's wet slot with a finger, running just over the surface but not penetrating at first. She did that several times to help smooth the way, then pressed her palm against the clitoral area while sinking two fingers inside, curling them much as Veronica had done.\n\nVeronica pulled Eliza's head away from the blonde-woman's chest so that they were staring eye to eye. It was still strange to see her girlfriend's eyes; yellow with blue veins running through them. They were identical to Veronica's eyes. She just wished they could still see things the same way. She slid fingers into Eliza's box, and the two women stood there and fingered each other heatedly. They pressed their bodies together, trapping their hands in each other's body respectively. Eliza lifted one leg and wrapped it around Veronica's body, clinging to her with an almost desperate sense of urgency. She felt the pressure growing, and a thought from Veronica indicated that the other woman was feeling it too.\n\nThat was when Veronica kissed her lover. She had been wondering if that were appropriate considering they possibility that this might be their last hurrah, but she could resist. Even if she and Eliza separated, she would love her fellow Hybrid until the end of days. She felt her pussy tightening, and Eliza's did as well. Both women's fingers were trapped in the other's body as they came onto each other's hands and down their own legs. Eliza gasped, Veronica groaned, and they held each other for a moment more.\n\nEliza broke the embrace, but only so she could pick Veronica up and lay her on the still-warm boulder. She got on top of her girlfriend, kissing her while on all fours. Then she crawled back a step and spent a few minutes licking the swell of Veronica's breasts. She loved breasts, and Veronica's were a delightful canvas for her artistic tongue. She always thought that these particular tits gave off more heat than those of other women, but she hadn't had much of a chance to do a comparison. \n\nShe crawled back a few more feet and sucked her girlfriend's clit into her mouth. But she only teased it for a moment before pushing her thumbs into Veronica's vaginal opening and pulling those inner labia apart, making all sorts of places more accessible for Eliza's tongue. It was a pussy that Eliza knew like the back of her hand, and she used that knowledge (as well as her powerful tongue) to make Veronica's naked torso squirm on the rock. Veronica began teasing her own clit with her fingers while Eliza licked everything south of that point. She inserted her tongue and pushed the fatty outer labia together around it. Finally, she was rewarded by a long groan and a bodily shudder as Eliza's perfect form was wracked by her second climax. Eliza cupped her tongue and let her lover's cum flow into it, and she relished the taste.\n\nEliza started to crawl back up Veronica's recovering body, kissing random bits of flesh as she went. When her wits were recovered, the blonde-haired Hybrid placed one hand over her own crotch, bunching her fingers together and pointing the skyward. She placed her other hand on Eliza's shoulder and pushed until the white-haired woman sat back and allowed the makeshift cock to slide into her sex. Eliza placed her hands on Veronica's breasts and massaged them as she began to hump her hips against the other woman's fingers, riding them as if she they were a man's organ. But Veronica's fingers were much more nimble, and they prodded at Eliza's innermost recesses as the former vampire rode them.\n\nAs Eliza humped her lover's hand, thoughts of war and vengeance seemed distant. As those fingers curled and poked at her front vaginal wall as they tried to feel out the g-spot, she wanted to tell Veronica how much she loved her. But there was a time for words and a time for action, so the words would have to wait. She leaned in again to lash her tongue upon her lover's breasts, but never stopped riding Veronica's fingers. She felt Veronica's free hand stroking her hair lovingly. Then Eliza raised her torso up and started bouncing harder on Veronica's hand. She loved having Veronica inside her, wondering if she could ever summon the courage to take her lover's whole hand like Veronica had taken Eliza's. She hoped they would have the opportunity, but that would come another day. She stopped, Veronica's digits trapped in Eliza's dripping pussy, and began to cum. She let out a short, high-pitched gasp and arched her back while sucking her tight abdominal muscles inward and let loose her sexual spendings onto Victoria's lap. Then she collapsed onto Victoria's chest, resting her head on her lover's shoulder. And once again, the former-human stroked Eliza's hair as if to comfort her.",
        "But comforting wasn't the order of the evening. Eliza started kissing Veronica on the shoulder, working her way up to Veronica's neck. She smiled when her girlfriend's breathing became deeper. When Veronica had become a Hybrid and adopted certain vampire strengths, she also adopted certain characteristics. These included, but were not limited to, a taste for blood and a certain sensitivity around the neck, and it was the latter that was driving Veronica bonkers. She had a death grip on Eliza's head, keeping it in place while the former vampire ravaged her neck with sweet soft lips. Her gasps got stronger when Eliza's tongue starting tracing figure eights on that sensitive skin. \n\nThen Eliza pressed her thigh between Veronica's legs and against her mound, pushing it gently against the entrance to the former human's sex. And almost against her will, Veronica humped her hips against that leg, willing to do anything to achieve the release that the tantalization of her neck was demanding. She grasped her lover's firm ass with a powerful grip, just to give her hands something to do. Finally, she pulled Eliza's head away and flipped the white-haired woman onto her back. Veronica spun around with incredible speed until she had her lover in her favored sixty-nine, and she buried her mouth in Eliza's warm, beautiful pussy and began to lick it for all she was worth. \n\nEliza returned the favor, sending her tongue deep into Veronica's box. She wrapped her arms around the woman's waist, using one hand to pull one of Veronica's butt cheeks aside so she could insert two fingers into the blonde woman's little pink asshole. Then she let go of Veronica's cheek and sunk two fingers from the other hand into that suddenly crowded sphincter, stretching it every which way but loose.\n\nVeronica's eyes had lit up like a pinball game as Eliza stimulated both her lower openings. She started flicking her lover's clitoris lightly with her tongue while scrunching up four fingers from one hand and shoving them as a single bulky unit into Eliza's vaginal opening. She was pumping away, sinking all the way up to her knuckles at lightning speed.\n\nThat was when something occurred to her: it was a fantasy that she and Eliza had shared when they started having their sexual dreams. Eliza had always wanted to make love on sun-warmed rock in the mountains or in the desert. It was such a simple dream that Veronica was surprised they hadn't gotten around to it earlier. There were so many fantasies she wanted to experience with this woman. She just hoped she would have the opportunity.\n\nEliza struck gold first, feeling a slight contraction of muscle around her tongue and a death grip around her fingers as those orifices closed down on their respective invaders. She only had a minute to lap up her victory, because Veronica's forceful fingering pushed Eliza over the edge. The two women kissed and nuzzled one another's pussies until their muscles relaxed enough to move again.\n\nVeronica turned around and was lying half on Eliza's body and half on the rock as her lips sought out those of her lover. Their own juices mixed in an intoxicating cocktail as tongues drifted between lips into each other's mouth.\n\n\"ELIZA! VERONICA!\" came a shout from below. It sounded like Dennis. \"You might want to get down here! There's a message by the Purity that's about to be broadcast on all the data streams!\"\n\n\"Those sons of . . .\" Eliza and Veronica hurriedly got dressed and sped down the mountain at an almost reckless pace. All the while, Veronica was cursing those infernal bastards who seemed to screw up her life every time things were going well.\n\n------------ ----------------------\n\nInside the compound . . .\n\n------------ ----------------------\n\nEveryone was gathered around the holo-projector when Eliza and Veronica arrived. The news anchor was droning on about the conflict thus far between the World Council and the Purity. After talking about some of the altercations between forces and going over the conflict at Fort Crass, they were switched to a recorded video-feed. \n\nThere were five figures, robed and hooded in black, standing behind a series of white-marble podiums. The first began to speak as he was spotlighted.\n\n\"Greetings to the pure-blooded humans of Earth. We stand here tonight to appeal to your sense of righteousness and decency, asking you to stand with us against the remaining monsters of Terra! We have been fighting the good fight and we are winning! We struck a blow for decency in the very heart of the Terran terrorists and their sympathizers at Fort Crass in the United States. But now, these vile beings are trying to gather an army. They seek not just to attack us in the Purity, but to declare war on the human way of life!\"\n\nThe next speaker was illuminated. \"Right now, their forces are pitiful compared to ours, but if allowed to grow they could pose a danger to decent human beings everywhere. Their leader, a monstrous and depraved half-breed, has already made it clear that she will be satisfied with nothing except for the bloody annihilation of our species!\"\n\nA number of people in the audience were grumbling obscenities at the projection and the speakers obvious misinterpretation of what a Blood War was. Eliza gripped the back of her couch so hard that part of it broke off in her hands.\n\nThe third speaker was illuminated. \"How much clearer can we make it that these things are threats to us?!? They have already shown that they can corrupt us, turning human beings into creatures more like them! Our very identities as humans are at risk in front of their scourge!\"\n\nIt was the fourth speakers turn. \"We encourage all our pure human brethren to fight back against this army of evil! Call your lawmakers and demand that these animals be caged! They must not be allowed to corrupt as any further! Soon, we can have an Earth free of their tainted ways that is safe for your children to grow up in. Thank you for your time, and long live the Purity; pure in heart and pure in soul!\"\n\nThen the transmission ended. Eliza looked over at her team and across the faces of the assembled group. She noticed that Valar was looking confused.\n\n[[ Something troubling you? ]] she asked, slipping into her native tongue.\n\n[[ Possibly, ]] he replied. \"Mr. Murgo, could we replay that? Would it be possible to get a better look at the fifth person? The one who DIDN'T speak?\"\n\nDennis started fumbling with the recorder controls. He was okay with electronic things, but Wyrm was infinitely better. He found himself wishing once again that his friend were there with them. \"Wait, I think I got it!\"\n\nEveryone went silent as the video-stream replayed and Dennis zoomed in on the fifth robed figure. \n\n\"Can you capture his face?\" Valar said, his voice growing dim. Now he even had Eliza worried. A close-up picture of the person's hood appeared. \"Stop!\" he said. \n\n\"That's weird,\" Veronica muttered. \"His eyes are different colors. And is that a scar?\" she asked, peering through the hole in the hood.\n\n\"It can't be . . .\" Valar muttered.\n\n\"What?\" asked one of the succubae with a slight hiss.\n\n\"Kertosis Ithslerorvana!\"\n\nSuddenly, most of the Terrans were shouting everything from outrage to disbelief. Allyson, Dennis and Veronica just looked confused.\n\n\"What the hell is a 'Kertosis Ithslerorvana'?\" Allyson asked.\n\n\"It's not a 'what',\" Eliza growled.\n\n\"It's a 'who',\" continued Valar. \"A sociopathic, egomaniacal and highly dangerous 'who'.\" He almost growled. None of the humans had seen him look so angry, not even when the Blood War had been proposed. \"I was one of those who helped bring him down. In your world, he would be called a . . . 'serial killer' . . . I believe that's the correct phrase. He was . . . is . . . an incredibly powerful sorcerer and was a member of one of the most ancient families of my district. But he was corrupted by power and felt that all other Terrans were weak . . . that their blood had become diluted over the centuries. He murdered members the 'less animalistic' races such as vampires, succubae and gargoyles. He thought the lycanthropes had always been vermin and were beneath his notice. He was arrogant beyond mortal comprehension of the term. He got careless and we finally discerned his identity, but it took a large security contingent and several powerful sorcerers to bring him down.\" Valar looked very focused all of a sudden. \"I was one of them. But he expended so much magic that the veins in one of his eyes actually burst under the strain. The scar he's had since birth. He was supposed to be in prison right now awaiting mind-wipe.\" A mind wipe was a Terran punishment for the most heinous of crimes. The perpetrator's mind was erased and his body provided useful physical labor for the community he or she had wronged.\n\n\"Then why is he here?\" Veronica asked.\n\n\"The Purity probably broke him out. It makes sense. His guards probably were prepared for any typical Terran escape methods, but humans have technology we never even dreamed of, including certain types of explosives. Then they would have access to someone who hated the Terrans as much as they did, had intimate knowledge of magic and the capabilities of its users. He may have even had some insight into the Living Jewels. There seems to be some connection between those things and insanity. And Kertosis gets to escape with his mind to a place where he was truly the 'purist' of his breed.\"\n\n\"And if he has access to the Dead Man's World and we open the portal, I have no doubt he has the power and ability to wipe out entire continents,\" Valar said. \"The Purity would have had to lose a number of people to release him. We had two troll guards with him at all times. He was scared to death of trolls.\"\n\n\"Who isn't?\" Eliza said, patting Thug on the shoulder. Eliza had a thought rolling through her head. \"They're getting desperate,\" she said.\n\n\"Calling for volunteers . . . trying to have us arrested . . . they might be running low on resources,\" Veronica said. \n\nVeronica suddenly looked up and her eyes met Eliza's. She fought very hard for several minutes not to smile. \"But don't you all get it?\" she said loudly and the room quieted. \"If they're desperate, there's no need for this Blood War! We can wait them out!\"\n\n\"You've got to be kidding!\" Eliza growled. \"All they need to do is actually get people believing that we're a threat. Now, they can point at you and me as proof that humans can be 'corrupted.' You know what will happen if the paranoia is allowed to build and you know what a mob mentality can be like.\"\n\nOne of the lycanthropes stood up. \"Eliza is right! We've got to take the fight to them before they can spread any more of their lies!\"\n\n\"Can't you see that you're doing exactly what they want?\" Veronica screamed. \"If you continue to act like a threat, then people will start to believe that you are. You'll swing public opinion against you!\"\n\n\"So we should just sit around and wait for them to rebuild?\" asked the leader of the succubae. \"We should just wait for our chance to be assassinated because of 'public opinion'?\"\n\n\"You all are being so fucking obstinate!\" Veronica said. \"You don't NEED to spill their blood! You just WANT to!\"\n\n\"You'll never understand our ways,\" Eliza said, staring at the blonde Hybrid. \"Maybe you weren't meant to.\"\n\n\"I guess not,\" Veronica replied, tears in her eyes. She turned and stormed out of the building. The remaining guests turned and talked amongst themselves. It became apparent that Eliza's stock had just gone up and that it was likely that she would be the leader of the Blood War.\n\n[[ I'm sorry that had to happen, ]] Valar said sincerely, watching as Dennis and Allyson went out to try and catch Veronica and hopefully calm her down.\n\n[[ I'm not, ]] Eliza replied. [[ We can't wait any longer. Let's get Thug over here. It's time to come up with a plan . . . ]]\n\n-------- --------------------\n\nTwo days later . . .\n\n-------- --------------------\n\nEliza was impatiently wandering the grounds of her compound. With some of the considerable wealth she had accrued in her early work for the government, she had placed an order for several military-style transports. She had been ASSURED that they would arrive that day, and she had ASSURED her people that they would be moving out. But her plans were about to change.\n\n[[ Eliza! ]] screamed one of the succubae. This particular woman's name was Terillia. Terillia was young for her race (which lived only about seventy years), but she was smart and had been training to be a police officer in her home province (or aerie) before vacationing on Earth and getting trapped. The succubae were light-boned and not particular heavily muscled, using their wings and dexterity rather than trying to match their Terran counterparts for strength or magical aptitude. Like vampires, they were incredibly human-like, separated from the other humanoid races by their wings, eternally svelte figures and large, almond-shaped eyes. And they tended to be annoyingly attractive, though Eliza had never had the opportunity to pursue one. Terillia was particularly appealing for her species. Had they been in another place and time . . .\n\n[[ Yes? ]] the Hybrid replied, breaking through her reverie.\n\n[[ We have a problem! Unwanted guests at the gate! ]] Terillia flitted down to the gate.\n\n'Nice ass,' Eliza thought absently as she sprinted after the young woman. As she approached the front gate, a crowd had gathered on both sides of the fence. On the inside were her people and they looked angry. The six new trolls were flanking Thug, and they were physically holding the gate closed. On the other side was Captain Corbin and several hundred soldiers as well as tanks, helicopters and the entire Springfield Police Department. Eliza instantly scanned the crowd, hoping her old friend Pamela wasn't mixed up in this. It was a bad place for a pregnant woman to be. And standing next to Captain Corbin was Ms. Veronica Adams. \n\n\"You fucking bitch!\" she snarled through the bars. \"You'd better fucking explain . . .\"\n\nThe Captain stood between Eliza's outstretched hand and Veronica. He looked horribly solemn. \"I'm sorry Ms. Eliza. The President of the United States and the President of the World Council will not allow a rogue militia to commit the kind of war you are proposing, or any kind of war for that matter. As long as you were just talking about it, we were fine. But we have recently obtained information that you are planning the wholesale slaughter of members of the Purity regardless of their actual involvement in criminal activity.\"\n\nEliza shot Veronica a venom-filled glance. She knew whom provided that \"recently obtained information.\" She looked the woman up and down. \"Didn't take long did it? How does if feel with their perch up your ass again, you fucking pigeon.\"\n\nVeronica blanched. \"I thought vampires being blood-thirsty monsters was just a Hollywood legend. I'm sorry you think so little of me, but I couldn't allow you to go through with it.\"\n\nCaptain Corbin interrupted. \"And apparently, you illegally purchased military transports and weapons through the black market in the last few days. I'm sorry Eliza, but I don't have a choice anymore. I have to place you and your people under arrest. You will all be relocated to a safe house in Nevada. All your people will simply be detained there until the World Council has dealt with the Purity. You will be put up on charges of weapons trafficking and conspiracy to wage illegal military action, a violation of World Council charter. Unfortunately, Valar's diplomatic status grants him immunity for his part. We know you still have The Dragon's Breath in your possession. You will surrender it to me for safekeeping.\"\n\n\"Like you kept The Dead Man's World safe?\" Eliza snarled. \"Like you kept The Alchemist's Dream safe? Like you kept Wyrm and Kelik safe?\"\n\nThe crowd behind her started mumbling angrily.\n\n\"I would strongly advise that you get your people under control and come quietly,\" the Captain said. \"We have you surrounded and outnumbered, and we've been authorized to use whatever force is necessary to prevent you from starting this Blood War of yours.\" He leaned close to the gate. \"We're not that far from discovering the location of their remaining bases. Give us a chance . . .\"\n\n\"You're out of chances,\" Eliza said. \"It's our turn now.\"\n\n\"I'm sorry, but you don't get a turn,\" the Captain said, then straightened his posture. \"If you resist arrest, keep in mind that we have flame-throwers capable of taking out your trolls, and more than enough bullets for everyone else.\"\n\nValar walked forward, his natural diplomatic skills taking over. \"Eliza, this is neither the time nor the place for this kind of fight. I want vengeance too, but . . .\"\n\nValar's speech was cut short as Eliza vaulted over the wall with the obvious intent of landing on Veronica's head, but she was peppered with tranquilizer darts by waiting snipers. She landed somewhat ungracefully in a heap outside the gate, and Veronica instinctively went to check on the woman.\n\n\"She's alive, though she's going to be out for a while.\"\n\nCaptain Corbin ordered some men to haul her into a waiting transport. \"It'll be easier that way. I don't want her doing any rabble rousing on the way.\" He turned and looked at Valar. \"So, how many tranquilizers do YOU want?\"\n\nValar sneered. \"We'll come quietly,\" he said. \"For now. Thug, stand down.\"\n\nThe trolls looked at the approaching flame units, then over at Valar who just nodded his head. The seven of them backed away from the gate, and transports and armed men entered the compound, forcing its residents onto vehicles.\n\n---------------- --------\n\nThat evening . . .\n\n---------------- --------\n\nJonathan Coachman, a Knight of the First Order of the Purity, was as excited as he had ever been. He was in command of the Purity's remaining fleet of attack choppers, all of which were poised behind a ridgeline and were waiting for the Terran prisoner convoy to come through. They had the intercom at the front gate of the vampire's . . . or was it \"Hybrid's\"? . . . compound, so they had heard everything, and their sources in the United State military confirmed everything. The Terran scum had been taken to Fort Crass and loaded onto two prisoner transports. All except those disgusting trolls, which had been loaded into a heavily reinforced, old-fashioned semi-trailer. But all of the armor in the world wouldn't stop his helicopters' Hellfire missiles from reducing all of them to ash. And the rest would be sitting ducks. True, a number of innocent guards just doing their jobs would die, but it would be a small price to pay for ridding Earth of these parasites. He and his people would wipe out the trolls before turning on the prison transports. A fleet of armored personnel transports would ambush the caravan's guard transports and gun down anyone who escaped the initial onslaught. It had cost the Purity a pretty penny to get all this equipment into the United States, as their contacts in the Border Patrol and Customs had driven hard bargains, but they had managed it. And just to be sure, their vampire \"associate\" was there with that infernal dark Living Gem called The Dead Man's World. He seemed certain that simply using the power of the jewel, he could help Valar meet a very grisly end. There was apparently some history there, but Jonathan Coachman couldn't worry about it. He had his own job to do.\n\n------------ ---------------------\n\nDown in the caravan . . .\n\n------------ ---------------------\n\nAllyson had been talking in a hushed voice with Terillia and her husband, all of whom were in the same compartment. They were on a series of long benches in the back of an armored prison bus, their wrists tied with a particularly tough chain, which was also attached to a steel bar running the length of the bus. Eliza was leaning up against a corner of the bus, her eyes shut.",
        "\"Whatever they hit her with hit her hard,\" Dennis said. I can't believe Veronica would do that!\" he said for the twentieth time that day. \"She knew exactly what Eliza would do . . .\"\n\nThe door between the driver's compartment and the prisoner's compartment opened, and a familiar looking blonde woman stepped through, and the almost fifty people crammed into the prison transport expressed their outrage.\n\n\"Of course I knew exactly what she would do,\" Veronica said smugly.\n\n\"Veronica?!?\" Allyson said. \"What the fuck are you . . .\"\n\nIf Allyson had been confused by the blonde Hybrid's presence, she was even more confused by what Veronica did next. She lifted Eliza's head up, and Allyson saw that her friend and team leader was quite awake. Not only was Eliza awake, she was smiling from ear to ear. Then Veronica kissed her, and the entire captive crew was stunned into silence. \n\n\"What kept you?\" Eliza asked when Veronica reluctantly pulled her lips away from Eliza's. \n\n\"Had to wait for the sun to go down. Gives your guys the advantage.\" Veronica hit a button on the driver's side of the door, and the bar running down the middle of the bus released all the prisoners chains. Veronica handed a set of keys to a still-stunned Allyson. \"This is for the cuffs on your wrists. Take yours off and pass 'em down.\" Then she looked down the length of the bus. \"All right everyone, once your hands are free, check under your seats. All the way back and under the seats, you'll find some . . . gifts.\"\n\nAllyson finally got it. She looked at Eliza, her eyes growing wide. \"You bitch! You set ANOTHER trap! Why didn't you . . .\"\n\n\". . . Tell you?\" Eliza finished as Veronica uncuffed her lover and kissed her again. \"The fewer people that knew, the less chance someone could blow it. As soon as Veronica said how desperate they must be, I realized that she was right. And what better bait than a chance to wipe out all their enemies while they are unarmed, chained up and in the middle of nowhere, particularly if they are running out of options.\"\n\nTerillia had reached under her seat and pulled off a couple of rail-gun pistols and a bandoleer containing a number of strange looking grenades. \"But we're not unarmed . . .\" she started, smiling a very pretty smile.\n\nOne of the vampires further back had pulled out a kinetic riot shield and a high-powered rail-gun rifle. \"And we're not chained up . . .\"\n\n\"And that,\" said Dennis, \"is why it's called a trap. Who else . . .\"\n\n\"Valar knows,\" Eliza interrupted. \"I needed someone on the other bus to help organize things. And I'm hoping that Kertosis hates Valar enough to put in an appearance to make sure he's dead. But Valar has a few nasty surprises up his sleeve, just in case. And Thug and the trolls all know. The Purity won't make the same mistake they did back on the island. They'll go for the trolls first, but they'll be in for ANOTHER surprise.\"\n\n\"Wait,\" Allyson said. \"How did you arrange all this? And what did they shoot you with?\" she added, looking at Eliza.\n\n\"Telepathy, sweetie,\" Veronica said. \"At least in answer to the first part. We've been in contact since the Purity's message. We had to have the argument to give me an excuse to leave and set things up with Captain Corbin. As for the second part of your question, the only thing in those darts was a harmless saline solution.\"\n\n\"Harmless, my ass! Those little things hit like a mother!\" Eliza was rubbing one of the spots where she had been tagged.\n\n\"So the Captain's in on this too?\" Dennis said. \"Good. I've always liked him.\"\n\n\"And we needed the trolls in on it to keep our people in check.\"\n\n\"Goodness!\" Terillia said. \"The trolls weren't there to keep the . . . Captain . . . from getting in. They were to keep us from going out!\"\n\n\"Precisely. I REALLY didn't want a fight to break out and ruin the war,\" Eliza said. \"And we made sure that the Border Patrol and Customs let them into the country . . . for a price of course. Didn't want things to look too easy.\" She grasped Veronica's hand. \"Now, we all get what we want . . .\"\n\n---------------- ------------------\n\nOutside the caravan . . .\n\n---------------- ------------------\n\nJonathan Coachmen had just received the signal to launch his attack. He gave a thumbs-up signal to his pilots. \"This will be a memorable day!\" he shouted before firing up his bird. The fifteen heavily armed helicopters rose steadily into the night sky with a thunderous roar. \"From darkness they came,\" he said, \"so to darkness they return.\"\n\nThrough his night vision goggles, he saw his comrades on the ground barreling out of dusty side roads and up from the ravines in their all-terrain armored transports. Kertosis was in the most heavily armored of the vehicles. He had proved himself a useful ally, and the Inner Circle wanted to keep him safe. They would hit the convoy all at once, leaving nothing behind but the echoes of the screams of the wicked. \n\nThen he thought he saw something resembling a large bird flitting up in front of the lead gun-ship. But it didn't look like any bird he had ever seen before. \"It looks almost . . .\" It was then that Jonathan Coachman, Knight of the First Order of the Purity, experienced a moment of clarity. That wasn't a bird, it was a succubus. Actually, there were several succubae flying up towards the choppers with incredible speed and agility. They had come from the bus. He saw one of them juggled a round object in its hand a couple of times. Then the creature threw the object.\n\n\"Oh, sh. . .\"\n\n-------------- ---------------\n\nOut in the sky . . .\n\n-------------- ---------------\n\nTerillia knew she was taking a risk by getting in front of the chopper. She was prepared to make evasive maneuvers, but she wanted this scum to know . . . she wanted him to see who had beaten him. She tossed her EMP grenade up once in the air, activated it and threw it into the helicopter's propeller. There was a blinding flash of light, then the target helicopter's power systems simply turned off. And a helicopter without power didn't fly very well, unless you counted bouncing. Terillia didn't thinking that bouncing should count. Then the remaining choppers let loose with a barrage of automatic weapon fire, but Terillia was long gone, diving towards the planet's surface like a deep-rolling pigeon. Her fellow succubae swooped in from the side and let loose with a number of EMP grenades, and helicopters were dropping like flies. A few of the winged Terrans were hit by stray gunfire and one was sucked into a helicopter's updraft and was shredded to pieces. The war was on.\n\n--------------- ---------------\n\nOn the ground . . .\n\n--------------- ---------------\n\n\"I think we have a problem,\" said Jerry Snow, Knight of the Second Order of the Purity and leader of one of the three squads of land vehicles involved in the assault. His second in command looked into the sky and saw explosions and gunfire that wasn't directed at the caravan in any way. But he didn't have much time to analyze things as his vehicle approached one of the guard transports. \"Prepare to strafe the sides,\" he ordered of his gunman.\n\nBut at that moment, the canvas-covered rear of the vehicle was eject from the back. And there weren't any soldiers in the back . . . just a single, hulking mass. \n\n\"That's a troll!\" the second in command screamed. \"Aren't those supposed to be in the semi in the back?!?\"\n\nJerry Snow's eyes were wide as the creature raised what appeared to be a hand-held cannon and pointed it directly at his vehicle. Just before his transport erupted in flames and exploded, the Knight of the Second Order screamed into his communicator, \"It's a trap! It's a . . .\"\n\n------------ -----------------------------------\n\nOn the other end of the cannon . . .\n\n------------ -----------------------------------\n\nLorazok was actually a fairly mellow creature most of the time, even for a troll. He had been working with rescue teams on Earth, helping moved debris from people who had become trapped in explosions or cave ins when more traditional machinery was too bulky or too slow to get to the scene. He had been given the nickname of \"Tiny\" by the company he had worked for, and the sarcasm hadn't been lost on him. Tiny stood nine-and-a-half feet tall and weighed close to fifteen hundred pounds. Like most trolls, Tiny had held great reverence for the Vampire known as Kelik due to the respect that particular man had always shown to the troll race. So when Thug had informed the troll of their plan and had handed one of these H&K Displacer Cannons that Thug enjoyed so much, Tiny had been imagining a moment just like this one. Tiny was smiling as the front of one of the vehicles moved directly into the troll's sights, and was outright grinning as one shot from the cannon reduced the target to smoldering wreckage.\n\nTiny strapped the cannon to his back and jumped from the speeding vehicle directly into the front of another enemy transport, which reacting as most vehicles would when it collided with something the size of Tiny. It sent the troll flying, but the transport looked like it had hit a tree and most of the passengers were dead or dying. \n\nThe caravan's tires began to squeal as the \"prison\" transports ground to a halt. Soon, heavily armed vampires came pouring out the sides of the buses and took positions behind the rocks and boulders lining the road. The lumbering gargoyles took to the sky to aid the succubae in the air war. They were much slower than their Terran comrades but were tough as stone. The other trolls, all of whom had been hiding on the guard transports, had all blown their covers and were firing their cannons into the largest conglomerations of the enemy vehicles. Soon, the Purity was abandoning their vehicles to do battle in the broken terrain. They still had the numbers advantage, but they were in a state of panic.\n\n------------- ----------------\n\nA little while later . . .\n\n------------- ----------------\n\nKertosis Ithslerorvana may have been insane, but he was no fool. As soon as the Purity vehicles stopped and the firefight was engaged on the ground, he grabbed the Dead Man's World and made a run for it. He thought his \"allies\" to be fools for continuing the fight even though they realized they had been duped. As badly as he wanted to see Valar die for aiding in his imprisonment, Kertosis wasn't about to challenge the Hybrid known as Eliza. She was an unknown commodity and while deserving of destruction simply due to her heavily diluted bloodline, he would choose his own time and place to finish her.\n\nHe noticed a slow moving gargoyle swinging over head, and he was sure he had been spotted. He raised the Dead Man's World over his head and concentrated. He had been allowed to practice controlling the Living Jewel on several Terran or Terran-sympathizer prisoners, and he had learned to impose his will upon the stone. A stream of darkness enveloped the creature and for a moment, even the wielder of the World couldn't see it. Then, the darkness evaporated, but not before it had extinguished the light burning in the gargoyle's soul and sent the thing dropping to the earth . . . dead. He took a moment to sneer at the corpse before moving on. \n\nUnfortunately for Kertosis, he didn't get much further before hearing a dreadful howl behind him. It sounded like a lycanthrope, and it sounded close.\n\n[[ Damn dogs! ]] he muttered. [[ I may have been too quick to spare them back on Terra. I won't make the same mistake again! ]]\n\nAfter another several minutes had passed, he heard the swooshing of wings nearby. He assumed it was another gargoyle that had come to discern the cause of death for its fallen comrade. But even with his advanced night vision, he couldn't see it. This one was flying lower to the ground. [[ No matter, ]] he told himself. [[ Should it cross me, it will . . . ]]\n\nKertosis had just come into a clearing when he felt rage boil up inside him. On one boulder sat a gargoyle, and on another sat a lycanthrope . . . probably the one he had heard howling. But standing in the trail opposite him was an old, old enemy.\n\n[[ Valar! ]] he snarled.\n\n[[ I'm glad you remember me, ]] the other vampire said. He was holding both hands behind his back, waiting for Kertosis to make his move. [[ I'm not particularly surprised to see you running away, ]] he added, utilizing his innate power to piss people off. [[ You were always good at that part. ]]\n\n[[ You were always so much braver when you had backup, ]] Kertosis replied.\n\nValar looked first at the gargoyle and then the lycanthrope, making a motion with his head. [[ Leave us, ]] he ordered, then the two other Terrans vanished.\n\nKertosis was nervous. Valar was FAR too confident. [[ You think you can take me! ]] he screamed. He needed to make his play before the others came back. [[ This time, I'll destroy you! ]] He pulled the Dead Man's World from his robes and wielded it, concentrating hard.\n\n[[ For a brilliant psychopath, you're quite predictable, ]] Valar returned. From behind his back, he produced two Living Gems. In one hand, he held The Dragon's Breath and in the other, he held The Ocean's Heart. After a moment's concentration, he accessed the power of The Dragon's Breath and created a tiny, tiny bridge to Terra. It was just enough to give him a super charge of mystical energy from his home planet. His eyes glowed red and he concentrated on the air between him and Kertosis, making it thicker. Then he used a telekinetic punch using that air to knock The Dead Man's World from Kertosis's grasp and sent it flying down into a ditch. Then Valar closed his small bridge before his enemy could use it to access his own magical power.\n\nKertosis found himself unarmed and facing off with a crafty opponent. Without magic, he decided to rush Valar, hoping to take control of that cursed ruby. He only got a few steps before a stream of water erupted from The Ocean's Heart, encasing him completely in a shimmering blue liquid and stopping him in his tracks.\n\nValar almost looked solemn all of a sudden. [[ Kertosis Ithslerorvana, you were found guilty on Terra of multiple counts of murder. Now, you have committed treason against your people and your world. I determine it to be my duty to enact your punishment now . . . in this place. Kertosis, the power of The Ocean's Heart is one of cleansing. By my will, I hereby cleanse your body of YOUR will and your magical abilities. I assert my will upon the stone, and my will shall be done. ]]\n\nKertosis screamed at first, but he felt himself . . . relaxing. His anger . . . his fears . . . his worries . . . they all slowly slid from his thoughts like so much water down an open drain. For a moment, he understood what peace was. Then, he understood nothing.\n\nValar withdrew his will from the Living Jewel. It wasn't quite the same as a mind-wipe, but it was close enough. Kertosis would never harm another creature. [[ You can come back now! ]] he shouted to the gargoyle and lycanthrope, both of whom had been waiting nearby. Once they arrived, the gargoyle landed near the now zombie-like form of Kertosis. \n\n[[ And so justice is done, ]] it said in it's raspy voice.\n\n[[ Justice is done, ]] agreed the lycanthrope.\n\nValar just stared at his former adversary. He realized that he owed Eliza an apology. There were things in both worlds much more deserving of contempt than someone who preferred the sexual company of their own gender. But at least now, there was one fewer. He directed the gargoyle to retrieve The Dead Man's World from ditch. He understood now why Eliza hated the thing so much. He had seen, for just a moment, the dark heart of The Dead Man's World, and he hadn't liked the look of it at all.\n\n-------------- ------------------\n\nBack at the battle . . .\n\n-------------- ------------------\n\nBy the time Valar returned, the fight was almost over. The vampires had swarmed out of the buses and, with their vastly superior night-fighting ability, they had run roughshod over their opponents in the broken terrain. The gargoyles had taken to dropping large rocks on the Purity soldiers from the heights, and the remaining succubae led by Terillia were essentially toying with the one remaining attack chopper. The machine had run out of ammo and its navigation systems were fried. Eliza was screaming at them to \"stop playing with your food\" and finish it. A few well-thrown EMP grenades and the last of the Purity's air power was sent crashing to the ground.\n\nSome of the enemy had tried returning to their vehicles in hopes of making an escape, but the trolls had taken to rolling over anything that moved. Several soldiers surrendered while hanging upside down by their safety belts. One soldier had been trying to sneak up on Eliza, but Veronica had spotted him. She had grabbed him by leg and beat him against a boulder until he stopped twitching. She may not have been looking for a massacre, but no one fucked with her girlfriend.\n\nEliza was suffering from a gunshot wound to the leg, but she knew she would live. Being an enemy commander, she had drawn a lot of fire. It might have been worse except Thug and Tiny had both shown up to block incoming fire. Tiny was still grumbling as he forced the bullets out of his body. Thug was casually discussing when he had taken on the chopper that one time, just to put things in perspective. Tiny told Thug to shut up.\n\nWhen the smoke finally settled, the Terrans had captured close to one hundred and fifty people. They estimated that several hundred more lay amongst the rocks. But they had suffered their own losses. About ten vampires, three lycanthropes, three gargoyles and five succubae had lost their lives. These winged Terrans had born the brunt of the attack helicopters' fury, and Eliza realized the debt that was owed them. To no one's surprise, all the trolls had survived, though one of them would probably spend a few weeks or so regenerating an arm and a leg after a disabled helicopter landed on him. Luckily, he had been pulled clear before it exploded.\n\nEliza saw that Valar had returned with Kertosis draped over the lycanthrope's shoulder.\n\n\"Is it done?\" she asked.\n\nHe nodded. \"It's done.\"\n\nShe looked around. \"Round up the prisoners!\" she shouted. She turned to Veronica. How long until the Captain arrives?\"\n\n\"Captain Corbin is only about an hour away. He had to keep his distance so no one would suspect anything. Besides, he wanted to let us handle this. The question is, what happens now?\" Veronica was staring pointedly at her lover.\n\nEliza looked at her assembling troops. \"Friends and Terrans, victory is ours.\" She had to wait for the cheers to subside. \"But we have a choice to make. When I asked you to come to California, I said it would be for a Blood War. The question is, will we continue the spilling of blood? These men are helpless now. We have taken their power away. As a wise person recently told me,\" she started, glancing at Veronica, \"our ways are NOT the ways of Earth. If humans went to Terran and tried to tell us how to fight our wars, what would we do?\"\n\n[[ Laugh at them and tell them to go home! ]] one of the vampires shouted, getting a low chuckle from the crowd.\n\n\"You're absolutely right. So do we have the right to wage a Terran-style war on Earth, though it is violation of their ways and their laws!\"\n\nValar stepped forward. [[ I realize as much as any of you how easy it would be spill their life-force on the soil, ]] he said, pushing the empty husk of Kertosis forward. [[ But that would be too easy. I also agreed to a Radotanida, but these creatures are not worth it. ]]\n\nIt was Veronica's turn. \"I know that none of you owe me anything, but I would like to speak anyway. The way I understand it, a Blood War is done to wipe your enemies out for good. Is this correct?\" There was a murmur of agreement. \"Well slaughtering these men will not destroy our enemies. Rather, it will ensure their survival. You will be seen as the monsters the Purity believes you to be, and the ranks and resources will be replenished. People will become afraid of you, and that fear will draw them to the enemy. The Purity is crippled and dying. Let them die as befitting them . . . whining and crying in their holes in the ground, with no one left to listen to them.\"",
        "{{ Beautifully said, }} Eliza thought. {{ I'm sorry it came to this. }}\n\nVeronica looked over. {{ I knew you would think of something. You always have, and you always will. It's part of the attraction, }} she added.\n\n[[ We are not monsters, ]] Terillia said, stepping forward. She realized what was at stake, and her own sense of law and order coincided more with that of humans than Terrans. [[ We are not evil. Let us parade these animals through the streets of their own cities, showing them for what they are . . . failures. ]]\n\nThe Terran force slowly found themselves agreeing en masse. They had done enough killing already. And humiliation was just what their adversaries deserved.\n\nAs the trolls and vampires loaded their prisoners onto the buses that the Terrans had recently occupied, Eliza approached Terillia. \"Thank you, \" she said. \"For helping calm everyone down. \"You and yours fought well. I'm sorry for your losses.\"\n\n[[ Our elders will sing their praises when we are once again united with our home world. We owe that to you, ]] Terillia said, capturing Eliza in a frighteningly ferocious hug. The hug continued for much longer than Eliza had expected, but Terillia had another surprise. She looked at Eliza dead in the eyes, then kissed her. \n\nEliza realized two things in that moment. One, succubae had VERY long tongues. She had heard that they could extend them up to six inches out of their mouths, but she had never really tested that theory before. The second thing she realized was that no matter how hard she tried, she couldn't predict everything.\n\n{{ AHEM! }} came a thought from beside her. Eliza pushed Terillia away, and the young succubus suddenly looked very embarrassed.\n\n\"I . . . I'm so sorry! I don't know what came over me! I . . . It will never happen again!\" she added before flying away.\n\nEliza was so stunned she forgot the pain in her leg. She saw Veronica grinning at her. {{ What?!? I didn't do anything! }}\n\n{{ You're just so damn sexy! }} Veronica replied, though she still felt a small twinge of jealousy. She'd have to have words with Terillia later about territorial violations. {{ Now why don't we see about getting that bullet out of your leg! }}\n\n----------- ------------------\n\nThe next morning . . .\n\n----------- ------------------\n\nEliza had never felt so sore in her life. When she had been hospitalized after rescuing Veronica, she had slept through most of the healing process. Captain Corbin had arrived the previous evening and his medical team had pulled the bullet out of her leg and bandaged her up. That bullet was now sitting in a jar next to the bed. IN her bed was a beautiful blonde woman who had a number of large and interesting bruises from their fight. They had been taken back to their compound while their fellow Terrans were housed at Fort Crass. The Dead Man's World was back in American hands, and The Dragon's Breath would be sent back east to reopen the portal between world within a few weeks. Captain Corbin assured Eliza that the Living Jewel would be receiving EXTRA special attention on this trip.\n\nVeronica's arm was lying across Eliza's chest as the blonde beauty snored contentedly. Eliza slipped out from under it and hobbled to the bathroom to take a look at her injury and to start up a bath. The last few days had taken their toll on her and she needed to relax.\n\nShe cleaned the area around her leg and wrapped it again, somewhat snugly. As she leaned over the bath to pour some organic salts in, she felt arms encircling her waist.\n\n\"Morning,\" Veronica whispered. \"Or is it afternoon? Do you realize that's probably been the first time we've slept more than three hours in a long time? I didn't even think we were capable of it anymore.\"\n\n\"It's afternoon,\" Eliza said. \"About three-ish.\"\n\n\"You should have woken me up,\" Veronica said, chastising her lover. \"A bath seems like SUCH a good idea.\"\n\n\"You looked so peaceful. I couldn't bring myself to wake you,\" Eliza responded, sitting on the edge of the tub and kissing her girlfriend. \"I'm still trying to run some stuff through my head.\" She touched Veronica's cheek. \"I love you. I'm glad you didn't let me go through with . . .\"\n\n\"Shh,\" Veronica hushed, kissing Eliza on the corner of her mouth. \"I never blamed you for how you felt. And quite frankly, I doubt I would've been able to make good on my threat to leave you. But you're a good . . . Hybrid, and you did the right thing. And as badly as you want to go check the video-stream and find out what the fallout is from our little war yesterday, I invoke my girlfriend privilege and forbid it! Not until we've had a little bath and a little fun,\" she added kissing Eliza on the neck.\n\n{{ Oh sweet . . . }} Eliza started to think, but her brain ran away for a moment. {{ That feels SO good! }}\n\n{{ Finish getting the bath ready, }} Veronica sent. {{ I'll be right back. }} Veronica hurried out to the bedroom and gathered up several toys, then hurried back to the bathroom. Eliza had already sunk into the warm soothing water. Veronica dropped the toys on the mat and slid into the tub with her lover.\n\n{{ We need to get a bigger tub for this place, }} Veronica thought, pressing her body against Eliza's and kissing her deeply. \n\n{{ 'We?' }} Eliza thought as she kissed Veronica back. Her lover's tongue wasn't as long as Terillia's had been, but it was quite skilled as it danced in Eliza's mouth.\n\n{{ Sorry, }} Veronica thought back. {{ I forgot . . . It's still your place and . . .}}\n\n{{ I was teasing, }} Eliza replied. {{ I just . . . }} She was momentarily distracted as Veronica's fingers slid down her body and into Eliza's warm sex. {{ I know we need to talk about what we're going to do after this . . . professionally . . . but I would really like . . . for you to keep doing that . . . and for you to consider moving in with me. }}\n\n{{ Done and done, }} Veronica said. She sensed that her girlfriend was surprised. {{ What? It's not like I have a job anymore, and besides . . . you're hot and rich. And this means I get to make some changes around here that . . . oh God! }}\n\nEliza had cut the blonde woman off by returning the fingering action, with one hand stimulating Veronica's pussy while fingers from the other hand were penetrating her lover's asshole. \n\nVeronica pressed her body harder against Eliza and her fingers further into her lover's box. There was something cathartic about making love while surrounded by water, floating comfortably while clinging to each other. And Eliza's opening was so slick that Veronica felt she could move her fingers faster and faster, feeling her velvet tunnel try and grip those digits as the stirred up a whirlpool of pleasure.\n\nEven with both of Veronica's lower orifices being tantalized, she knew that the blonde woman was winning their little contest. She was intimately aware of every nook and cranny on Eliza's body, and she knew exactly what buttons to push. While keeping her fingers moving, her lips latched onto the portion of Eliza's neck right before it reached the shoulder. Eliza's pleasure centers flipped and she stopped fingering Veronica's ass so she could just grip one of those round butt cheeks and hold on for dear life. She felt like Veronica's fingers were so far up inside her that she might as well be . . . \n\n{{ Love, }} she thought.\n\n{{ Yes? }} Veronica mentally murmured. \n\n{{ You know that . . . thing . . . you've been wanting to try? }}\n\nVeronica's eyes opened wide. {{ Are you sure? Are you ready? }}\n\n{{ As ready as I'll ever be, }} Eliza replied. She put her feet up on the sides of the tub and spread her knees as wide as they would go.\n\nVeronica pushed all her fingers together on her right hand, scrunching them into as small a space as possible and slowly pushing them into Eliza's entrance. The former vampire gasped as her opening began to stretch around Veronica's hand. {{ Let me know if it gets to be too much, }} she sent. She watched as Eliza grabbed the bath's spout as she prepared herself for her ultimate penetration. Veronica pushed until her second row of knuckles met Eliza's inner labia. She held for a moment, withdrew, then pushed in again. She did that several more times, moving a few centimeters further each time. Then she withdrew again and just stretched her fingers. The warm water was helping Eliza relax, but Veronica could tell her lover was nervous. {{ Are you sure? }} she asked again. All the response she got was an almost overwhelming feeling of love. She stopped long enough to lean forward and captured another sweet drink at Eliza's lips. \n\nVeronica quickly returned to work. She did take a few moments to gently rub her lover's clitoral hood and get her further into the mood. Then she pressed her finger in again, sinking all the way to the knuckles and continuing to push . . . in . . . in . . . in . . .\n\n\"Oh shit . . . Oh God . . . oh . . . oh . . .\" Eliza was squirming like a snake on a hot tin roof. She could barely wrap her mind around the experience, but her cunt was certainly wrapped around Veronica's hand. And without much more warning, her labia were wrapped around Veronica's wrist. At that point, Eliza stopped speaking. The lights were on, but nobody was home. Veronica actually thought her girlfriend's vaginal walls were going to start crushing her hand, they were so tight.\n\n{{ Eliza? }} Veronica thought. {{ Honey? Anyone there? }} She sensed a bit of pain, a lot of discomfort, but also a slowly increasing amount of pleasure. She pumped her fist, and the \"pleasure\" part spiked. \n\n\"Very . . . (gasp) . . . very full,\" Eliza mumbled before slipping under the water.\n\n\"Shit!\" Veronica said, reached her free hand to release the drain, then grabbed her girlfriend's head to keep her from drowning.\n\n{{ I can hold my breath for two minutes and . . . oh God, and you know it! }} thought Eliza. \n\nVeronica pumped her hand again. {{ And you also tend to lose track of time, }} she replied. She watched as Eliza's muscles rippled as the pleasure spread outward. 'God she had nice abs!' Veronica thought to herself. She didn't have much range of motion, so she just kept pumping her hand while teasing the girl's clit with the thumb from her other hand. She had Eliza cumming in a matter of moments, and it was a beauty! Her mouth was opening in gasps, but no sound was coming out. Her eyes were open, but they were glazed over at the same time. Eliza's hands were roaming all over her own body, seemingly incapable of finding a single comfortable place to stop. Even when the initial sexual earthquake stilled, the aftershocks began and rumbled through for what seemed like an eternity. Her pussy had Veronica's hand and wasn't about to let it go, making the blonde woman think she would probably sprain her wrist if she tried to withdraw it.\n\nWhen Eliza's body was through, she just lay in the bottom of the tub, water from the faucet cascading over her forehead and Veronica was finally able to retrieve her hand. Both women felt strangely disappointed that the experience was over. \n\n\"Still alive?\" Veronica asked.\n\n\"Very, very much so,\" was the reply. \"I . . . I'll be ready to return the . . . pleasure . . . in a second,\" she added blissfully. She'd be sore after a while, but she was in a warm, comfortable place for the time being.\"\n\n\"Why wait?\" Veronica reached over the side of the tub and grabbed a strap-on harness and a nice, seven-inch dildo. She maneuvered the straps and snapped them into place around Eliza's hips, then slid the dildo into position.\n\n\"Turn on the shower,\" Eliza groaned. \"I want to see it rain on you,\" she added.\n\nVeronica smiled, and raised herself up, pushing the button that switched from bath to shower. When she lowered herself back, she sank onto the dildo, feeling good as if filled her up.\n\nEliza was looking up as the water came pouring down. There was a light near the top of the shower that caused the droplets of water to sparkle and shine. As they impacted Veronica's head and wetted down her hair, Eliza thought that her lover looked like an angel. Then she saw the woman blush furiously.\n\n{{ Let that one slip, didn't I? }} she thought. She grabbed her lover's hips and began to thrust upward to meet Veronica as she came down. Then those hands found their way up to those breasts Eliza liked so much, and she raised her torso up so her mouth could taste those succulent melons. She fumbled with one arm, reaching blindly for the pile of goodies that Veronica had brought in with her. She came up with a dildo that had a short handle, a long, smooth thin shaft and a bulbous ball on the end. 'Perfect,' she congratulated herself. She let the water run over, then placed the ball end at the entrance to Veronica's backdoor.\n\n{{ You always know what I like, }} Veronica said as the round part pushed passed her sphincter into that dark tunnel.\n\nEliza was able to pump the new toy rapidly, filling both her girlfriend's holes. Veronica was biting her bottom lip and her eyes were closed. Her breasts jiggled gently except when locked in place by Eliza's greedy lips. Veronica was riding and bucking on Eliza's lap, holding her head as her lover stimulated her ass with that dildo. She bounced on the strap-on toy and was beginning to wish she'd picked a bigger one. She loved the pressure having something in both orifices, and she knew from experience that Eliza could keep them filled all day and all night if she chose.\n\nBut Eliza had other ideas. She could tell that Veronica was in a daze, so she started kissing her way up from Veronica's breasts to her shoulder and then to her neck. Veronica groaned loud enough that it almost shook the bathroom tiles loose. But if she thought that her lover's lips on her neck was heavenly, she almost lost her mind when Eliza's fangs sank into the flesh.\n\nIt had been a long time since one of them had bitten the other. Eliza had once hypothesized that this particular type of union provided them both with what they needed most. Apparently, Veronica needed to have the orgasm of a lifetime, and Eliza needed to provide her one. Veronica felt that she was moving in slow motion, but the rest of the world was moving at ten times its normal speed. Both sex toys, which had simply been moving quickly before, suddenly felt like bullet trains speeding through her body. She half expected the friction to actual cause smoke to rise. Her moans seemed to be drawn through a low, deep filter until they almost sounded like whale songs. The droplets of rain had become a monsoon against her scalp and were causing thunder in her ears. After what could have been moments or hours, she felt a pressure like water backing up after the hose has been turned on. And in one perfect moment, the dam burst and Veronica would have sworn that enough juice was flowing out of her to fill the tub. Her knees pressed together against her lover's legs and she clung to Eliza's head out of fear of being carried away by the undertow of pleasure. \n\nAll Eliza experienced besides the heat of her girlfriend's body and the water dripping down on to her was a few moments of perfects silence and a blast of joy that filled her up from her toes to the top of her head. It was like lying in the warm sunshine after swimming in the ocean for hours. But like all moments, however perfect, that one had to end, and she slowly withdrew her fangs.\n\nVeronica's world returned to a pleasant normalcy, as her body and her environment seemed to be on the same page. Her eyes were finally able to open and they shone brightly. Her mouth was open and gasping, but she still managed a smile. She let her body and Eliza's come to rest on the floor of the tub. She wondered if she should tell her girlfriend how much she loved her, but a smile and a kiss from Eliza assured the blonde woman that Eliza already knew.\n\n--------- -------------------\n\nThat evening . . .\n\n--------- -------------------\n\nThe whole security crew was sitting out in the living room, watching the now-constant news coverage of the \"government organized\" trap (with Terran assistance, of course). Eliza had been expecting this of course. She and her fellow Terrans had agreed to forgo the credit to restore the civility between them and the general population. Then from the door . . .\n\n\"Hey honeys! I'm home!\"\n\n\"WYRM!\" they screamed (except for Thug, who looked up, waved, and then changed the channel to Animal Planet). \n\n\"What the hell . . .\"\n\n\"You weren't supposed to be back until . . .\"\n\n\"Fancy arm! Is that metal or plastic?\"\n\n\"Calm down!\" he shouted. \"If I'd known it'd make me this popular, I would have lost the arm a long time ago.\"\n\nSuddenly, Eliza didn't feel quite so energetic. She had visited Wyrm in the hospital a number of times, but no matter how many times he told her not to, she couldn't help but blame herself. The doctors had done a great job on his face, so he only had some minor but permanent scars on that handsome palate. His knee was still a little swollen, but he was able to get around on crutches. It was the arm that she found herself staring at. He had been hiding behind a column, but his arm had been sticking out just enough to catch a huge quantity of shrapnel, and he had a fancy new prosthetic limb starting about six inches below the shoulder. It actually sensed the electronic impulses sent to the arm from the brain and was able to perform most basic movements. He wouldn't be using that arm to practice his knife throwing, but he wasn't exactly an invalid. Eliza took a step back while her friends swarmed around their returning hero. \n\n'How can he not hate me?' Eliza thought. 'If I hadn't asked him to stay behind . . .'\n\nWyrm broke through the crowd and wrapped his arms around Eliza and picked his boss off the ground. \"No pouting,\" he whispered. \"If you had asked me to stay behind on another mission, I could have just as easily have been hit by a truck hauling cucumbers while I was on my way to the convenience store to by Twinkies and V8. No one could have predicted what happened.\"\n\n\"It's my job to predict . . .\" Eliza started.\n\n\"It's your job to put the odds in our favor. But a ninety-nine percent chance of success still means a one-percent chance of failure. Sometimes, fate rolls the dice and it comes up snake-eyes. You've pulled so many peoples asses out of the fire in the last year that it boggles the mind.\"\n\nEliza was actually tearing up. \"But you . . . and Kelik . . .\" She realized that she had been so busy planning her vengeance and celebrating its completion that she really had never stopped to take in what had happened.\n\n\"Kelik was smart enough to know what he was getting into. And again, no one thought they would go after Fort Crass, much less in a suicide attack. Kelik . . . he fought well for someone whose age was measured in dynasties. And to give credit where its do, Valar whooped some ass with The Spear of God. I'd hate to see what he could do on his own world. You're one . . . incredible woman, Eliza, but even you can't save everyone all the time.\"\n\n{{ Listen to him love, }} Veronica thought. The rest of the crew was giving the two friends some physical space while they talked.\n\nWyrm noticed that the two women were staring at each other. \"Okay, stop the friggin' telepathy! God, that's creepy!\" His voice mellowed. \"This last battle . . . the fight at Last Mile Prison . . . rescuing Veronica . . . You keep pulling off shit most people wouldn't even try.\"\n\nEliza wrapped her arms around Wyrm's neck and kissed him on the cheek. Then she felt something odd and she smiled.\n\n\"Wyrm?\"\n\n\"Yes boss?\"\n\n\"Real or not, get that hand off my ass or I'll take it off and beat you with it.\"\n\n------------- --------------\n\nA week later . . .\n\n------------- --------------\n\nEliza and her crew were standing in a hangar in the facility known as Terra Point Terminal, just outside of Raleigh, North Carolina where the crack had first formed. It had been built around the area of the dimensional crack before the Purity had sealed it. There was an almost identical facility (barring some \"creative license\") on the Terran side. They had been brought in to oversee civil security while Valar made the final preparations to reopen the dimensional portal. He was the logical choice, having already shown an ability to assert his will upon The Dragon's Breath. Eliza felt her own role was strictly ceremonial. The remaining Purity forces had been on the run since their disastrous defeat in what was being almost jokingly referred to as the \"Terran Horse War,\" apparently making reference to some ancient Earth legend. Also, there was a healthy representation of every branch of the United States military present to guard the building. There wasn't going to be a repeat of what happened with The Heaven's Eye. But the World Council had FINALLY gotten it through their heads that things went better for them when Eliza was around and had brought her in. ",
        "The Dragon's Breath was mounted on a pedestal at the top of the ramp where the portal was going to be opened. The World Council and American government had decided to keep the initial reopening somewhat guarded until the stability of the new portal could be properly assessed. The general public had been informed that the bridge would likely be reestablished \"soon,\" but only official personnel would be allowed through on the first couple of days. \n\nValar had been meditating for almost an hour, trying to get a clear picture in his mind of what he was going to try and do and how he could convince The Dragon's Breath to do it. So Eliza and her troops wandered the floor, trying not to look too bored.\n\nFinally, Valar seemed to be satisfied with his mental state.\n\n[[ Eliza, could you come here for a moment? ]]\n\nEliza rolled her eyes, then turned around and wandered up the ramp. Valar was back in a position of power, and Eliza could only expect him to rub her face in it.\n\n[[ I think I'm ready. I would appreciate it if you would stand by in case the influx of magical energies becomes overwhelming for me. ]]\n\nEliza was a bit confused. There were a number of other Terrans he could have called on to help manage the power flow if necessary. [[ Why me? ]]\n\nValar shook his head. [[ Because you are more familiar with the magic of the Living Jewels than anyone else, though you yourself have never wielded one. ]] Surprisingly, his voice softened. [[ Though I acknowledge that you have felt their power in a less . . . controlled fashion. ]] He looked down the ramp and saw assorted diplomats and officials gathering, waiting for the \"grand opening.\" [[ Eliza, I believe I owe you an apology. ]]\n\nEliza was more than a bit distrustful of that statement. Valar had never sincerely apologized for anything in his life, at least not as far as she knew. [[ For what? Have a sudden change in heart about lesbians? ]]\n\n[[ Not at all, ]] he replied, averting his gaze for a moment. [[ I don't agree with your lifestyle or your adaptation of human customs. I didn't like your decision to 'mingle' with a human partner back when you were pure vampire. I certainly don't approve of your physical attraction to members of your own gender. ]] Eliza started to speak, but he silenced her with a wave of his hand. [[ But you don't need my approval, ]] he said, looking like he actually meant it. [[ I didn't get that until our recent conflict. The vampire race, as a general rule, believes in its traditions and cultures. You believe in breaking rules. You don't think like any vampire I know, and you don't so much walk your own path as you do blaze your own highway. And our two worlds are about to be recombined because of it. You don't need me to like you or accept you. You don't need that from anyone. You do what needs to be done in whatever way you can, generally in ways no one else would think of. And even if that doesn't earn you friendship, it most certainly warrants you respect. I have never shown you respect, Ms. Eliza Msabdteelfinclor, and for that I apologize. ]] Valar returned to concentrating on the Living Jewel before him, leaving Eliza to be . . . stunned. So stunned in fact that she was almost caught flatfooted when Valar grabbed The Dragon's Breath and uttered the words, [[ Let my will be done. ]]\n\nIt started as The Dragon's Breath projecting a bright red pinpoint of light at a particular point on the wall. Then the point expanded until it was about the size of the manhole cover, and then kept growing until it was about ten feet in diameter. Valar was beginning to sweat. This was considerably more difficult than simply accessing his home dimension as he had done in his fight with Kertosis Ithslerorvana. It might best be equated to the difference between trying to push a needle through cloth versus trying to slowly push a coffee can through while creating a smooth hole. Then, Eliza could almost see the \"bridge\" being built, almost as if it were vanishing into a television screen. Its structure was clear in her mind's eye, but she could tell the three-dimensionality of it was purely illusionary. She saw the other end of the bridge approaching what she assumed was the \"wall\" for the world of Terra . . . a wall lined with . . . splotches.\n\n[[ Valar, wait! ]] Eliza exclaimed.\n\n[[ This . . . is not . . . a . . . good time! ]] he returned tiredly. \n\n[[ Look at the walls! Aren't those t-port mines? ]]\n\n[[ Impossible, what would . . . wait, you're right!?! What are those doing there? ]] he asked, ceasing his push.\n\n[[ Someone . . . trying to prevent the portal from being reopened, maybe? But it couldn't have been someone from this side of the breach. Kertosis would have been the only one with enough knowledge of teleportation, and he wasn't there when the Purity used The Heaven's Eye. They would have had to had been put there right before it was closed, or someone would have noticed them. But why? ]]\n\nValar was struggling to think while he maintained the tunnel he had already constructed. [[ We may have overlooked a very annoying possibility. We've been assuming that the 'Purity' movement only existed on the Earth side. ]]\n\n[[ So maybe there's a similar group on Terra that, as much as it pained them, conspired with a bunch of humans to separate the worlds and keep them separated? It makes some sense. They set up the traps at the appointed time to keep Terrans from using magic to find a way back to Earth, but they didn't worry about hiding them from viewers on this side . . . ]]\n\nValar caught where she was going. [[ Because they didn't know about the Living Jewels. They assumed there would be no way of anyone on THIS side being able to find a way of crossing the barriers. ]] Valar actually felt quite proud of himself. [[ Do you think you can disarm them? ]] he asked.\n\nEliza looked them over. [[ There's too many. And if one goes, they might all go. I don't know how the caster or casters set it up. But we might be able to use that to our advantage. I know this has been a bitch, but do you think you could open the portal again? ]]\n\n[[ After a lot of rest, yes? Why? ]]\n\nShe smiled, laying one hand on The Dragon's Breath and feeling it's power and feeling the ambient magic from her homeworld of Terra. [[ Because I'm going to toss a stick into a room full of mouse straps and see what goes off. ]]\n\n[[ Why must everything with you end in explosions? ]] he asked. Actually, he was impressed with the idea. He felt her drawing power through the Living Jewel much like he had done the week before, then she sent of a series of telekinetic pulses into the breach. The use of magic near the t-port mines caused many of them to explode at once.\n\n[[ Close the breach! ]] she screamed, and Valar let go of his hold with an almost audible \"snap.\" The breach closed just as the explosion was trying to escape out the portal.\n\n\"What the hell was that?\" Veronica yelled as she ran up the ramp.\n\n\"T-port mines,\" Eliza replied. \"Nasty little spells that some succubae sorceresses devised during a Blood War with a vampire nation a number of centuries back. Vampires had been teleporting behind enemy lines for millennia, so these succubae came up with a way of setting up pockets of unstable magic within dimensional fabric. Whenever a vampire tried to teleport through an area with t-port mines, the magic would quickly and explosively try and flow into the 'dimensional bubble' created when someone tries to teleport.\" She went on to explain to Veronica and a number of other bystanders about the conspiracy theory that she and Valar had proposed. The two of them were fairly confident that they could still safely open the portal, but they needed to clear a path first.\n\n\"Crap!\" said Veronica at last. \"I thought the fighting was over!\"\n\nEliza hung her head a bit. \"It is, at least for us. We have no authority on the Terran side, so we'll have to let them deal with it.\" She turned to Valar. [[ You really should rest before trying again. If we didn't get them all, you're likely to trigger them again or . . . ]]\n\n[[ Or possible mess up the very fabric of space, ]] he added drolly. [[ I agree. We've waited a year. Our people can wait one day more. ]]\n\nValar and a number of officials began clammering and chattering as they set up a time to try again the next day. Eliza and Veronica made their way down the ramp. \n\n\"So,\" Veronica began, \"up for a little dinner? We haven't had much besides blood recently, and I'd kind of like some real food. And . . .\"\n\nAs they got to the bottom of the ramp, they found a couple of familiar faces. It was the succubus Terillia and the troll Tiny. \n\n\"What's up?\" Eliza asked. \"I didn't think they were going to let you guys cross for a couple days at least?\"\n\nTerillia was gently biting her bottom lip, making the attractive young creature look even cuter. Veronica involuntarily took a step forward, positioning herself between Terillia and Eliza. \"No kissing,\" she flat out stated. \n\nTerillia blushed blue. \"I apologize again for my behavior. I was simply so . . . swept away in the moment . . . I didn't mean . . .\"\n\n\"It's okay,\" Eliza said, enjoying her girlfriend's jealousy. \n\n\"It's just . . . while this fine troll and I are both going to go home for a while and visiting, we were talking about it and . . . well, we'd both like to return to Earth and work . . . here . . . for you.\"\n\n\"Excuse me?\" Eliza said.\n\n\"We weren't sure if you were even interested in expanding your organization, but it would not help us NOT to ask. We both admire you and your group . . .\"\n\n{{ I'll bet she does, }} Veronica mentally grumbled, causing her lover to chuckle.\n\n\"Terillia, the group hasn't even decided if we are going to continue working after this. We don't really need the money anymore, but a number of my people acknowledged that they couldn't imagine actually RETIRING. It would be so . . . dull.\"\n\n\"I understand,\" the dejected young succubus replied. \n\nEliza felt bad. She hadn't meant to crush the young woman's spirits. \"Listen, why don't you get in touch with me once you've had a chance to visit. I'll probably have a team meeting in the next couple of weeks anyway, just to discuss what we're going to do next. I'll bring up your request then, okay?\"\n\n\"That would be a most joyous opportunity,\" Terillia squealed, then made as if to hug the Hybrid warrior. But Veronica stood firmly in her way.\n\n\"No hugging or kissing,\" she warned. \n\n\"My apologies,\" she said, blushing and smiling. Then she turned away. Tiny had already wandered off to talk to Thug, and it was amusing to watch the twenty-foot circle that cleared out around the two trolls when they were conversing. Trolls made people nervous.\n\nEliza looked after the retreated job candidate. {{ She IS kind of cute, }} she thought, trying to raise Veronica's ire.\n\n{{ I don't care how cute she is, }} the blonde woman replied, {{ as long as she keeps her tongue out of your mouth. }}\n\nEliza actually managed a full-throated laugh. \"Weren't you saying something about dinner?\" she asked grabbing Veronica's hand.\n\n------------- ---------------------\n\nSeveral hours later . . .\n\n------------- ---------------------\n\nEliza had talked to their employers and arranged for her team to get some rest. Most of the group had gone back to the hotel while Eliza and Veronica had a belated anniversary dinner. After dinner, they had gone to a pool hall and Veronica had tried to explain the intricacies of nine-ball to her girlfriend. After several drinks, a lot of lost games and enduring having both her and Veronica get hit on almost endlessly, Eliza decided it was time to head back to the hotel.\n\nEven as they got out of the cab, Veronica started to get clingy. The driver got an eyeful as Veronica waited for her lover to pay for the ride, then kissed her deep and grabbed a double handful of muscular ass and gripped it tightly. \n\n{{ What's got into you? }} Eliza mentally moaned as Veronica drew her inside the building, kissing her on the lips, cheek and neck.\n\n{{ Do I really NEED a reason to want to make out with you? }} Veronica responded, pulling her girlfriend into the elevator.\n\n{{ Not that I'm aware of, }} came the response, {{ but isn't this a bit public? }}\n\nVeronica held her girlfriend's head and kissed her again. {{ No one can see us, }} she said, {{ and even if they could, I don't care. I've got a hot woman who keeps saving the day no matter what the problem is. }} Veronica turned around and hit the \"Stop\" button on the elevator. {{ And I love a woman who can improvise. }} At that point Veronica pounced on Eliza, pushing her to the mirrored-side of the elevator and latching her lips onto Eliza's neck.\n\nIt was still a bit odd for Eliza, being so open in a relationship. True, they had made love in some fairly open places, but never somewhere like this where Eliza almost expected to get caught. For almost a century, she had hidden her sexuality, and now she found herself with a woman that made her want to put it on display. She pushed her hands under Veronica's stretch pants and pulled on her ass cheeks, then slid one hand down between the woman's legs so she could stroke her lover's cleft through her silky g-string.\n\nVeronica responded by intensifying her kisses and pulling up on Eliza's shirt so her own hands could reach those small but firm breasts. Eliza had actually word a black-lace bra, which she only wore when she was hoping to get lucky. The former vampire knew that Veronica liked to unwrap her presents before she played with them.\n\nAs badly as she wanted Eliza to keep doing what she was doing, Veronica wanted to get her girlfriend naked. She stepped back, causing Eliza to break her attentions, then grabbed the white-haired goddess's hands and pinned them above Eliza's head against the wall of the elevator. {{ Keep those hands right there, }} she ordered. Then she got on her knees and pulled down Eliza's pants, revealing a tight pair of short-style panties. Once Eliza had stepped out of her pants, Veronica pushed the girl's legs apart and kissed her right on the crotch, nuzzling her mound through the fabric. Then she licked a long swathe right up Eliza's slot, pushing the material of her panties into her crotch with that skilled tongue.\n\nEliza was still holding her arms over her head, but was pushing her crotch against Veronica's lips. She wanted that powerful little muscle inside her, and the waiting was killing her. And apparently, Veronica was getting just as impatient. She pulled Eliza's panties down to the floor. She just stayed on her knees for a while, licking her lover's pussy with increasing speed. Eliza was so wet that she was already beginning to drip down her thighs. Veronica slowly rose to her feet, kissing her way up Veronica's abdomen while her fingers went to work in that moist cunt. She licked and nipped Eliza's nipples through the lace of the bra as she worked the clasp with her free hands. She had it off in a matter of seconds, marveling at the reports of teenage boys' ineptitude at completing such a simple task. That left Veronica with free access to tantalize those warm tits with her tongue. But she never stopped moving her fingers, pumping them in her girlfriend's box with a vengeance. 'Has her pussy actually gotten tighter?' she wondered. She wished she could push her fist up there again, but this wasn't the place for something like that. This was just about satisfying lust as quickly as possible.\n\nEliza started to whimper as she felt her innermost recesses tighten up and prepare for a sexual earthquake. Veronica sensed the imminent approach of a climax and aided it along by teasing the clitoral hood with her thumb. Just as Eliza's pussy began to spasm, Veronica turned her lover around and pushed her hard against the mirrored wall of the elevator. Eliza was confused but it was too late to stop (even if she wanted to). As the dam broke and her cum erupted from her body, it began to flow down the formerly pristine reflective surface.\n\n{{ Just marking our territory, }} Veronica thought wickedly, holding a shaking Eliza until that woman's head cleared and she was a little more capable of remaining upright on her own. Then Veronica stepped back and pulled her own shirt off as Eliza watched hungrily. Then she turned around and placed her hands on the far wall. Eliza took her cue and approached, pulling Veronica's pants down to her ankles and exposing that well-rounded, g-string clad ass. Before Veronica could step out of her pants, Eliza gave one cheek a swift spank, then kissed the pink spot that appeared. She repeated this with the other cheek, then ripped the fragile underwear off her lover's body. \n\n{{ Just marking my territory, }} Eliza said, gripping the now sensitive skin of Veronica's butt. She cut off her lover's objections by burying her tongue between the lover's butt cheeks and rimming her asshole. She buried her hand between Veronica's legs and started thrusting with two fingers, using them like a miniature dildo. She pushed the tip of her tongue into Veronica's back door, then withdrew, causing Veronica to groan loudly.\n\nEliza lay back on the floor of the elevator. {{ Why don't you have a seat? }} she thought, half-closing her eyes. Veronica grinned in response, kicked her pants away and slowly knelt with her knees on either side of Eliza's head while facing down Eliza's body. Eliza's tongue was already busy at work, spreading those inner labia out as far as they would go and delving into Veronica's depths.\n\nVeronica just grabbed Eliza's nipples and tugged, holding on for dear life as her lover's oral attack went into overdrive. She felt her inner labia being sucked into Eliza's mouth and pressed between her gums. Then she felt fingers prodding at her asshole as Eliza stuck two fingers from each hand at the entrance to Veronica's sphincter and proceeded to shove them inward. Once in, Eliza began pumping those fingers, periodically stopped to stretch that opening a bit. And her tongue seemed to be in Veronica as far as it could go, \n\n{{ Faster, }} Veronica thought, her mind in a state of pure bliss. {{ Please hurry! }}\n\nWhile Eliza DID want to get her girlfriend off, she didn't want to make it go too fast. For a few minutes, she toyed with her food, bringing Veronica close to the edge without allowing her the sweet release of going over. But as was the case when both her pussy and ass were being stimulated at the same time, Veronica finally achieved orgasm. Her body shook violently as she came on Eliza's face, holding her opening fast against her lover's head until every last drop had fallen. \n\n{{ Since I'm here anyway, }} she thought, then collapsed forward into the sixty-nine position and began to eat. Eliza was still recovering from the mouthful of girl-cum she had just ingested, so she fell behind in their new little race. Veronica just sank her tongue in until her lips were resting on Eliza's mound, then began licking like child with an ice cream cone. But Eliza quickly re-entered the competition, sucking on Veronica's clit while stimulating the woman's asshole with one hand and pussy with the other. \n\nThe race only lasted for a few more minutes, as both women were feeling a sense of urgency. The sound of slurping and licking filled the small area as they tried feverishly to get one another off. \n\n{{ I'm so close, }} Veronica sent, feeling a familiar sensation building up inside. {{ After this, I'm going to take you to our room and drink of you until your brain explodes! }}\n\n{{ Then I guess I'd better finish you off, }} Eliza replied eagerly. She'd been hoping for a good bite on the neck for a week. She was wiggling her tongue inside Veronica's opening with reckless abandon, and she managed to bring her girlfriend to climax just as she herself was feeling its familiar stirrings. Simultaneous orgasms were relatively common for the two women, due probably to their strikingly powerful mental and magical connection. When the both started to come, they actually rolled over several times, letting each woman drip their fluids onto the other's face while being on top. Finally they stopped, panting and sweating like racehorses after crossing the finish line. Then unexpectedly, the elevator began to move again.",
        "{{ SHIT! }} they both thought, scrambling to get dressed. Pants and shirts were being put on haphazardly. The two of them had just managed to get most of their clothes on and in some semblance of order when the elevator door opened.\n\nStanding on the other side of the door was an elderly couple that looked lost. They saw the two women in the elevator and it didn't take a genius to figure out what had probably been going on. But getting caught wasn't the worst of it. Eliza noticed that the couple didn't turn away, but rather started first at Veronica, then at Eliza, then back at Veronica. And Veronica was beat red! Eliza had never seen her girlfriend blush that badly before! Veronica began to stutter, then to speak.\n\n\"Mom?!? Dad?!?\"\n\n'Oh my . . .' Eliza thought to herself.\n\n------------- -------------------\n\nFour days later . . .\n\n------------- -------------------\n\nIt had been an . . . awkward . . . few days for Eliza. She had finally met her girlfriend's parents, and she probably couldn't have made a worse first impression. When Abraham and Gloria Adams had heard the portal might be reopening soon, they decided to make the trip up, surprise Veronica (which apparently they did) and wait for their other daughter to come home. Veronica had been running damage control on Eliza's behalf, reminding her parents that Veronica was an adult and tended to do adult things.  \n\nEliza was actually impressed that they were taking things as well as they did. Veronica had told them of her transformation shortly after returning from being kidnapped. She had minimized the part about being tortured of course. That was one of those things that parents probably didn't need to hear. Her parents had taken the news that their daughter was no longer human pretty hard, but she had eventually convinced them that she was the exact same person in a new-and-improved body. And within the last few days, Veronica had reminded her parents that Eliza had not only saved Veronica's life, but she had been instrumental in bringing about the end of the Purity and setting things up for their other daughter, Victoria, to come home. While Veronica's father reluctantly acknowledged that the woman who had been having sex with his daughter WASN'T completely evil, Gloria Adams decided that Eliza was a saint. So while Abraham stood around, smoking his pipe and acting grumpy, Gloria had spent the last several days doting over her daughter and the new woman in her life. Eventually, Eliza had even warranted an invitation to attend Christmas festivities that year. \n\n{{ You should be impressed, }} Veronica had thought. {{ I've never had a girlfriend invited home for the holidays. }}\n\nEliza had been skeptical. {{ Then why does your father still look like he thinks that I'm going to start eating people? }}\n\n{{ Actually, that's his 'cheerful' face. }}\n\n{{ You're kidding? What does his 'angry' face look like? }}\n\n{{ Pretty much the same, but with more yelling. }}\n\nFor the first twenty-four hours after Valar managed to get the portal reopened, only a few select World Council officials were allowed to go through, making sure the new portal was safe and establishing contact with the other side. Valar and Eliza had been correct in their assumption that the Purity hadn't been working alone. A purist group known as the Swords of Cleansing had been operating on the Terran side to keep the portal sealed and had probably been responsible for casting the t-port mine spells. Several Terran sorcerers had lost their lives to those mines because they couldn't be detected from the Terran side until it was too late. \n\nOnce the gateway was deemed safe, security was quickly established on BOTH sides of the gate that would deter even the most fanatic of separatists, which also meant that Eliza and her team could stand down. Within a day, huge crowds had arrived on both sides of the terminal, waiting for their chances to go home or to greet a returning loved one. Valar was the first Terran allowed to return home. He would inform the world leaders of Terra what had happened and had promised to return Ambassador Kelik's body to his home province. Eliza had become teary eyed when Kelik's stasis chamber was loaded onto a transport for his last ride home. Valar promised to send word to her when services would be held. The Ambassador had been a well-liked individual, and Eliza wasn't the only one crying a bit when his body crossed the threshold of the dimensional gate.\n\nIt took another day until both sides were ready to manage the flow of those who wanted to return home. Commercial and other private traffic would have to wait another week or so. But Veronica and her parents were waiting anxiously as group after group of humans came down the ramp to the enthusiastic greetings of family and friends.\n\nEliza found herself almost confused by these peoples' responses. She knew that if she were to walk across, there would be no one waiting for her. It was the nature of intelligent life to gossip, and she knew that her \"dirty little secret\" was probably already known back on Terra, leaked by the first group of Terrans trying to explain everything that had happened as quickly as possible. Being the daughter of a high-ranking official probably made things spread even faster. She found herself trembling, but from sadness or anger she couldn't quite tell. She had spent a great deal of time and energy at great personal expense to find a way back to a place she would never be welcome again. It just wasn't fair.\n\nVeronica was torn between euphoria at her sister's upcoming return and sadness for her lover's mental state. Eliza had tried explaining her relationship with her father, but Veronica just couldn't believe that everything Eliza had done would be discounted out of hand simply because she was gay. Surely her father wasn't THAT heartless. She was getting ready to go talk to Eliza when she heard a voice from the ramp.\n\n\"Mom! Dad! Veronica!\"\n\nVeronica and her parents zoomed to the base of the ramp and surrounded their returning family member. Eliza couldn't even see the girl through the mass of hugs that was going on, and was beginning to feel even more out of place. \n\n\"Oxygen . . . in short supply . . . Please . . .\" came a voice from the middle of the group. One by one, Veronica's family peeled themselves off the newcomer, and Eliza's jaw hit her chest. Standing right next to Veronica was . . . Veronica, or at least someone who looked just like her. She may have been wearing more Terran garb, which was a bit more risqu\u00e9 than anything Eliza ever would have tried to wear, but she was a dead ringer for Veronica.\n\n'Twins?' Eliza thought. 'She never mentioned they were twins!'\n\n\"Eliza,\" Veronica said, obviously still giddy, \"come over here and meet my little sister!\"\n\nVictoria Adams rolled her eyes. \"Ten minutes! You're ten minutes older than I am, so cut the 'little sister' crap, okay?!?\" Despite her protestations, she was obviously pleased to see her sister again.\n\n\"Language,\" her father scolded, earning him a half-hearted apology and a bat of those beautiful eyes. As gruff as he tried to be, his daughters had always had him wrapped around their little fingers.\n\nAs Eliza slowly wandered up, Veronica decided introductions were in order. \"Vicky, this is my girlfriend Eliza. Eliza, this little brat is my sister Vicky.\" Vicky promptly punched her sister in the arm.\n\n\"Nice to meet you,\" Vicky said, offering her hand to Eliza. \"Nice grip,\" she said, giving Eliza a lingering glance. \"Nice find Veronica,\" she said. \"Very nice,\" she added, perhaps a little too demurely.\n\n\"Okay, hands off,\" Veronica said. \"Remember what I told you about hitting on my girlfriends?\"\n\n\"The exact wording escapes me, but I tend to remember the threat of violence being involved. Still, I'm impressed. I never took you for dating outside the species, but she IS cute!\" Yep, she and her sister were identical all right, and that included sexual preference.\n\nEliza actually blushed a bit, and she couldn't help but imagine what being with twins would be like. Veronica picked up on THAT particular thought process and shook her head, smiling all the while. {{ Not in a million years, }} she thought. \n\n\"You have really pretty eyes,\" Vicky said to Eliza. \"I've never seen eyes like that before.\"\n\nVeronica sighed and removed her sunglasses, causing Vicky to gasp with surprise. \"Now you've seen two pairs. Vicky, Eliza isn't . . . actually a vampire anymore. To tell the truth, she isn't 'outside the species' for me either.\" Vicky was looking incredibly confused, glancing between her sister and Eliza. \"We might want to head back to the hotel now,\" she said. \"This explanation . . . well, it might take a while.\"\n\n------------ -------------------\n\n'A while' later . . .\n\n------------ -------------------\n\nVicky and Veronica's parents had long since gone to bed while the two sisters and Eliza were still sitting at the hotel bar. Vicky was trying to wrap her mind around the fact that her identical twin wasn't quite so \"identical\" anymore, and that her beloved sister had literally gone through hell in the last year.\n\n\"God . . . I mean . . . Shit, Veronica . . .\"\n\nVeronica gave her sister a whimsical grin. \"It's okay,\" she said. \"It's been hard for me to process sometimes too.\"\n\n\"I mean, I'd heard that there were a couple of chicks who dug chicks raising all sorts of hell on this side of the great divide, but . . . damn!\" Vicky turned to Eliza. \"You know, if you're the 'Eliza' I was hearing about while waiting for my turn to cross, then you're something of a fairytale legend or monster, depending on who you ask. I mean, people have been talking about the battle and Living Jewels and this psycho woman at the center of it all. I mean, there are some kids already who are saying you're ten feet tall and breathe fire.\"\n\nEliza looked flustered. \"Great. This world is trying to pretend I didn't do anything, and my old world is already making me into a monster. I think I'm going to just retire and go live in a cabin somewhere.\"\n\n\"I didn't mean . . .\" Vicky started.\n\nVeronica just grasped her lover's hand. \"Have you heard anything from . . . you know?\"\n\n\"No. I wasn't much expecting to,\" Eliza answered. \"He's . . . he's probably already been told. I'll bet he's doing 'damage control' as we speak.\"\n\nVicky looked confused again. \"Who?\"\n\n\"My father,\" Eliza said, getting up and heading outside, suddenly needing to clear her head.\n\n\"Sensitive subject,\" Veronica said, pulling out her purse so she could pay for their drinks. \"Apparently her dad is a hotshot in the government for the entire Devlian continent. They had a big argument right before the portal closed and it's been weighing on her head ever since. But he doesn't know she's gay, or at least he didn't the last time she talked to him. And from the sounds of things, the guy is really big on tradition and honoring vampire culture.\"\n\nVicky nodded. She had been working as a cultural liaison on Terra for years before the gap closed, and getting any sexual action had been difficult do to the strong social stigma against same-sex coupling. The two sisters got up and followed Eliza outside, finding her sitting on the steps leading up to the hotel with her head in her hands. The two women sat down next to the white-haired Hybrid.\n\n\"So where on Devlia are you from? I spent a long time down there touring down there, doing music and art exchange shows,\" Vicky said.\n\n\"Gralta Province,\" Eliza said. \"It's down south . . .\"\n\n\"I've been there,\" Vicky replied. \"About a year and a half ago. It's got some WONDERFUL hiking trails,\" she said excitedly. \"I especially like the one that follows the Devlian River to the waterfalls.\"\n\nThat thought made Eliza smile. \"My parents used to have a vacation cottage down near the river,\" she murmured. \"I used to play down there all the time. I could sit and stare at the falls for hours. But my parents sold the place when my father became Security Director for the continent. They decided they just wouldn't have time to use it anymore.\"\n\nVicky's eyes had shot open (again). \"Wait. Did you say 'Security Director'? Your father is Evlidone Msabdteelfinclor?\"\n\n\"Is that how you pronounce your surname?\" Veronica asked.\n\n\"Yes. It usually gives humans a headache to even TRY to say it.\" Eliza turned to Vicky. \"Why do you ask?\"\n\n\"I've MET your father,\" the woman said hurriedly. \"We did a show with the court . . . I guess you could call it orchestra . . . for the Prime Minister's birthday. Very intense man.\" Vicky bit her bottom lip. \"And I was kind of wondering why one of the most important political figures took on security of the Terran side of Point Terminal personally, and why he's been standing around on the other side of the gate for almost a week now. One of the guards said he hasn't eaten or slept in days and . . .\"\n\nEliza was stunned. \"That couldn't be him. There's no way they'd let him out of the Capital if there was even a CHANCE of there being revolutionaries about.\"\n\n\"It was him all right. Even if I hadn't met him before, everyone in the crowd was wondering what he was doing there.\"\n\nEliza wasn't sure what she was feeling anymore, but whatever it was seemed pretty intense. The streetlight overhead shattered and sparked under the pressure of Eliza's will and several nearby cars began to shudder. \n\nVeronica held Eliza until she calmed down. \"Sweetheart, this has gone on long enough. Go talk to him. Waiting and wondering isn't going to make things any easier. No one will stop you if you want to go through, so just go. Right now, before you have a chance to . . .\"\n\nEliza wasn't even waiting for her lover to finish. Veronica had been right about one thing. The waiting was too much. The confrontation she had been dreading was just down the road, and she couldn't avoid it any longer. She took off at a brisk walk.\n\n\"I'll see you tomorrow,\" Veronica said to her sister. \"I should be there for her,\" she added, taking off down the street.\n\nWhen they got to the Point Terminal, there were still streams of people going each way. Eliza got in line, but Veronica had to keep her from chickening out on more than one occasion. Then they reached the portal. It was a shimmering circle of vibrant red that actually seemed to be humming when you stood close enough.\n\n\"Ready?\" Veronica asked. \n\n\"No,\" Eliza said, staring straight ahead.\n\n\"Tough.\" Veronica grabbed her lover's hand and together they walked forward. The energy seeped around them like oil, but it didn't stick to their skin. It was much less noisy than the old portal had been. The Dragon's Breath apparently wielded a very powerful, stable type of magic.\n\nThey emerged on the other side within seconds. While the Earth side of the terminal was very angular and modern, the Terran side was a conglomeration of whimsy and curves. It looked like the wonderful city of Oz, but not quite as green. The Terran guards were standing on either side of the portal stared at Eliza for a moment, then some form of recognition dawned on them. There was a long ramp leading down to the center of a circular room. As the two Hybrids started down the ramp, the crowd at the bottom started to dissipate, all of them staring at the unique creatures that were approaching. They may not have looked much different than vampires but in that world of magic, people could sense something was amiss with these two.\n\n{{ It's not too late to run screaming, }} Eliza sent. \n\n{{ I'm not sure if that would make more of a scene than we are already making or less. }}\n\nBy the time they reached the foot of the ramp, there was about twenty feet of space between them and the nearest bystander. The murmur was almost deafening. The crowd directly across from them shifted like a living thing before slowly parting. There were only two beings left standing in that space. One of them was an elegant lady, standing six feet tall and carrying herself with a natural grace. The man standing next to her was actually an inch shorter, but authority and power crackled around him as if it too were alive. The woman looked like she was about to cry. The man looked like he was torn.\n\nDespite the feelings about same-sex couples, Eliza kept her hand in Veronica's as they took the final step onto the polished stone floor. For a moment, there were only four people in that room that mattered. Then Veronica slowed until she was a step behind her lover, and the woman on the other side stood just behind her male counterpart. The man and Eliza had eyes locked onto each other.\n\n\"Hello father.\"\n\n----------- ------------------\n\nTo be continued . . ."
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "sci-fi",
        "lesbian"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/its-a-dead-mans-world-ch-04"
}