{
    "title": "Breaking Up and Making Up",
    "pages": [
        "\"Well, Nobody's Perfect!\" Joe E. Brown 'Some Like It Hot' Nikkie Silk \n\nChapter One\n\nDanny stood at the bar and looked around the pub. It wasn't his usual, but this one had looked bright and warm from the outside on a gray, rainy day. The after work rush wouldn't start for a couple of hours or so yet, so there were only a few old boys who looked like regulars, nursing their pints and looking miserable, cursing the smoking ban. A couple at a table in the corner seemed to be in the middle of an argument. The girl looked upset, and the man seemed to be trying to apologise to her for something.\n\nHe had enough problems of his own to keep him busy for months, so he didn't have any time to spare for other people's troubles. Danny ordered a pint, and as he waited for the barman to pour it, he looked round just at the moment the girl in the corner slammed her hand down on the table, angrily got up, grabbed her coat and ran out of the pub. The man with her had his head down and appeared to be crying. Poor sod, he thought, it looks like he's been dumped. Danny knew how that felt.\n\nTurning back as the barman put his pint on the bar, Danny paid and took a long pull of the beer. It was a decent pint, malty and dark, which matched Danny's mood right now. He had just come from a meeting with his Director, who had told him that the company was going to have to let him go. Let me go? Danny snorted, that was the kind of language a gutless little weasel like him would use. As if it had been my choice to leave, not theirs. The company had been taken over by an American media company and everyone knew that there would be lay offs. Danny had hoped he wouldn't be one of them. A redundancy package which would keep him going for a while, and he thought it wouldn't be too difficult to get himself a new job. Danny thought could use his network of contacts to get himself something quickly. \n\nIn the middle of this internal monologue, he sensed the guy from the table standing next to him at the bar, trying to pay his tab. Danny turned to look at him out of curiosity. They were about the same age, but the man was taller and more well built than Danny. It reminded Danny that his enforced free time would allow him to get to the pool more often, he could do with losing a pound or two himself. The guy was trying to attract the barman's attention, who was busy serving another customer. He had been weeping, as his eyes were red rimmed, and Danny suddenly felt sorry for him.\n\n'Bad day, huh?' Said Danny.\n\nHe turned to Danny and said, 'What? What did you say?'\n\n'I said, it looks as if you've had a bad day.'\n\nHe looked at Danny with an angry look on his face. \n\n'Really, you think so?' The sarcasm aimed to sting, but Danny let it go.\n\n'Me too,' said Danny, 'I've had a bloody awful one too.'\n\n'Look mate,' said the guy, 'what do you know about me that lets you say something like that? You know nothing about me.'\n\nDanny shrugged and was going to turn away, when the man said, 'I'm sorry, that wasn't called for. I'm just upset right now.'\n\n'That's OK,' said Danny, stuck his hand out and said, 'Danny, Danny Albright. Alright Albright, they call me.'\n\nThe guy looked down at Danny's outstretched hand, considering whether to shake it or ignore the man. He decided and shook the outstretched hand, saying, 'Carl, Carl Jones.'\n\n'OK, Carl, I hate drinking alone, especially today, how about I buy you a pint?'\n\n'No, honestly, thanks but no,' said Carl. He tried to get the barman's attention, but he was now changing one of the barrels in the cellar. \n\n'Come on, Carl, it won't hurt, I have had a shitty day too. Have a drink with me.'\n\nCarl looked at him, as if hearing Danny for the first time, 'What's happened to you?'\n\n'Only been fired this morning,' Danny looked at his watch, 'been unemployed precisely two hours now. I've been walking around since trying to get my head straight.'\n\n'Yea, that's shitty alright,' Carl said, then realising what he had said, 'Oh, sorry, that wasn't deliberate, shitty alright, I mean, that's your name, right?'\n\nDanny laughed, 'Well, the way my luck's been running recently, that's not too far off the mark.'\n\n'Maybe I should buy you a drink then.' said Carl, still flustered at what he had said.\n\n'Nah, I asked you first, what'll you have?'\n\nCarl asked for a pint of lager and Danny finally got the barman's attention and ordered the lager. \n\n'You had some bad luck recently, then?' Carl said, thinking he would probably regret asking.\n\n'You mean other than being fired, my wife leaving me, crashing the car, losing my winning lottery ticket and the goldfish dying?'\n\nCarl looked at him to see if he was joking.\n\nDanny laughed at the expression on Carl's face. 'Well the last two haven't happened yet, but the first three certainly have, all in the past nine months.'\n\nCarl smiled for the first time since they began talking, 'Thank God the goldfish is still alive then.'\n\nDanny said, 'Yeah, it would be if I had one.' Which made them both laugh. \n\n'I'm sorry Danny, for what I said earlier I mean, about what do you know about me and all that. It was pretty nasty of me. I was well out of order, you've had a rough time.'\n\n'Yea, it's been a bit rocky, I admit, but you looked pretty cut up over there.'\n\nCarl debated about what and how much to say, before looking down at his drink and saying, 'She was my girlfriend, or more exactly my ex-girlfriend. We had been together a couple of years and she decided she wanted something different. I was trying to patch things up, and as you can see it didn't go well.'\n\n'It always hurts when it happens, Carl, I know it's trite but time does make a difference. It's been 9 months since my break up.'\n\n'Does it feel any better?'\n\nDanny thought for a minute, 'It still feels bad, but not as often, if that makes sense.'\n\nThey had finished their drinks, and Carl bought the same again, as he felt he owed Danny one. As he waited to be served, Carl wondered why Danny had spoken to him. He stole a glance at Danny as he chatted to an old timer who was also waiting to be served. He thought Danny looked a bit scruffy, with his faded jeans, t-shirt, blond hair in a ponytail, but he seemed friendly enough and Carl felt it might be good to take his mind off Simone for a while. Carl guessed Danny also needed somebody to talk to after what had happened to him. The drinks arrived and Carl suggested they move to a table instead of standing at the bar.\n\nOver the second pint, they found they had a lot in common; a love of Arsenal football club, Indian food, old movies and Elmore Leonard novels. They agreed about the best Arsenal team - the unbeaten invincibles - but argued about politics. Danny was Labour and Carl Conservative, but with a small c. They both loved 'Some Like it Hot' and 'North by Northwest', but Carl loved Grace Kelly, and Danny thought Eva Marie Saint sexier.\n\nThe second pint turned into a third, and when they finished their fourth, Carl said he hadn't eaten all day and suggested going for something to eat. Danny knew a great Indian place round the corner, and so they headed off there, both of them a little drunk by this time. They ordered their food, and a silence descended. Carl broke it first, 'It annoyed when you spoke to me in the pub, Danny. I'm glad you did, I needed this, I would have gone home and stewed about things.'\n\n'Me too, Carl, It's been good for me too, thanks,' They clinked their glasses in the way that men do and said, 'Cheers.'\n\nDanny said, 'Oh Lordy, I almost forgot, are you doing anything tomorrow afternoon?'\n\n'No, why?' \n\nDanny hunted around in his pockets and produced a ticket. 'The company has a box at the Emirates and they have given me two tickets for the game tomorrow against Chelsea as a sweetener. They're like gold dust, do you want to come along? Free food and booze and everything.'\n\nCarl felt a bit woozy by this time, but he thought why not? He could never get a ticket for that game and it would keep his mind off other things. \n\n'Yes, I would love to, if you're sure.'\n\n'No problems, I didn't have a clue who to invite for the other ticket, so as a fellow gooner, you're more than welcome.'\n\nThey swapped phone numbers and after arranging to meet at Arsenal tube station the next afternoon, they made their way to their homes, each carrying a burden that had been only partly lifted by their evening together. Both slept badly, waking in the small hours as the reality of what had happened the previous day sank in. \n\nCarl reached across to where his girlfriend would have slept, and his heart dropped when he realised she was not there. \n\nDanny lay on his back with his hands behind his head as he worried about finding a new job, deciding he would have to start calling people on Monday. \n\nThey met as planned before the game and dropped into a pub for a drink before heading to the stadium. When two London teams play each other, it always becomes a tribal affair; north London against south, Arsenal red against Chelsea blue, grit against swagger, yet another full blooded encounter in a long running and bitter rivalry. It ended up close, as they often are, with Arsenal edging the result in the last minute. Danny and Carl were ecstatic, high-fiving and hugging each other at the final whistle, each of them relishing the opportunity to forget their problems for a while, and finding solace in the shared joy of being a fan.\n\n'Danny, that was brilliant, thanks for the invitation, I would have had to watch it on TV. Let me pay you back somehow. How about dinner tonight? My treat.'\n\nDanny looked at Carl, still giddy with excitement and smiled, 'Sure, why not? where do you fancy?' \n\n'Why not Brick Lane? It's Bangladeshi, great cooking.' Carl's enthusiasm was evident and Danny willingly agreed as it had been a some time since he had been there. They managed to squeeze onto a crowded train which gave Danny a chance to think about Carl. Danny didn't have many male friends as his girlfriend had pulled him away from the few he had before their marriage. It seemed to him that she had seen him as a project, a man to be shaped and remodelled. \n\nDanny couldn't believe his luck when Jessica came on to him. Jess was pretty, vivacious and dominant. She called the shots most of the time, and Danny followed her lead. She decided when they did things, where they went, even to when and how they had sex. She liked to play games in the bedroom, usually with him being the submissive partner. Once or twice she had him wear her panties during sex, which he had secretly enjoyed, but had drawn the line when she wanted to use a dildo on him. He had gone along with most of it; Jess was beautiful, the sex was great, and he loved her. Unknown to him, however, she had other admirers, and one of those eventually took her away from him. \n\nHe had struggled after the break up; compared to Jess, other girls seemed dull and uninteresting, and after a few disastrous dates, he gave up. Online porn became his release, and he spent many evenings in front of his computer, lost in the fantasy world on screen. He had never realised there were so many varieties of sexual fantasy available at the click of a mouse. He loved the story sites as much as the video ones and spent many hours reading the stories he found there.\n\nDanny had tried to pick up with his old friends, but it seems that they had moved on, some had families now and didn't want to reconnect. Danny hadn't set out to make friends with Carl, he had only spoken to him in the pub because he felt sorry for him, but they seemed to click. Carl was easy to talk to, liked many of the same things that Danny did and seemed happy to have found a friend. It had been good to see Carl so happy at the football. He thought It had been a good idea to invite him.\n\nCarl gave up his seat on the train to a woman wearing a 'Baby On Board' badge, and that made him feel good. He felt manners counted; it didn't take much effort to be kind. He took the opportunity to study Danny as he sat on the train, seemingly lost in his thoughts. Danny didn't look as scruffy as Carl had at first thought. His ponytail was well cared for, unlike the greasy, unkempt ones you often see. He stood a few inches shorter than Carl, slim, and striking blue eyes which flashed when he smiled. He thought it had been generous of Danny to reach out to him in the pub, and Carl flushed at the thought of how he had initially reacted to Danny's gesture. Everything had gone better after that and it had been good to be with someone after Simone had left him in the pub. He felt a sting as he thought of her and blinked away a tear. Danny had been funny, despite his own problems, and Carl had been touched when he offered him the ticket. That had been a true act of kindness, thought Carl. He hoped that he and Danny would stay friends, he thought he would enjoy Danny's company.\n\nThey tumbled out of the train at Shoreditch and made their way to Brick Lane where Carl had a favourite restaurant among the many that lined the Lane. Home to waves of immigrants for hundreds of years, the latest incomers had been from Bangladesh, and their cooking had created what had become Bangla Town. It's a bright, vibrant and crowded place, but they found a table in Carl's favourite restaurant and quickly ordered some beers and food.\n\nAs well as talking about the match and how well Arsenal would do this year, they discovered more about each other as the meal went on; Carl cycled, Danny swam to keep fit, Carl liked dogs, Danny cats, and both hated golf. Danny talked about his job as a graphic designer and Carl confessed to being a management consultant. Without being fully aware of it, each one felt drawn to the other, both needing a friend who could help each other through a bad time.\n\nAs the remnants of the meal were cleared away, Danny offered to pay his share, but Carl insisted on paying the whole bill in return for the football. They had a final beer together in the Pride of Spitalfields before setting off home, when to their surprise, they discovered that they lived only a mile apart from each other in Putney and agreed to share a taxi home. As the cab stopped to let Carl out, Danny promised to give him a call during the week for a drink.\n\nAs promised, Danny rang Carl, and they met for a drink in a local pub. Then one of them, they couldn't remember who, suggested they go together to watch a movie they both wanted to see. Quickly, they became close friends, meeting regularly for drinks or dinner or a film. They had come to value each others company and began to share more and more about themselves. Two strangers, brought together by chance, had discovered a friendship neither had intended, but which both now began to look forward to.\n\nChapter Two\n\nOne evening, Carl called Danny to invite him over to his flat for dinner the following Saturday. For some reason, Danny hesitated, going to someone else's place seemed a big step, and would take their friendship to a new level. He shrugged and said, 'Thanks, I would love to. Will there be anyone else?'\n\nCarl said, 'I've invited my upstairs neighbours as well. I have to tell you, though, they're gay. Well, lesbian to be exact, but they're lovely girls.' \n\nDanny laughed, 'So you want me as cover? Do you want me to be your latest boyfriend?' \n\nCarl snorted, 'You're not my type, honey.'\n\n'OK, what time? I'll bring a bottle, right?'\n\n'Is 7 OK? You don't have to bring a bottle, but I'm guessing you will, anyway. It's my homemade chilli, so a bottle of red?'\n\nDanny arrived at the address Carl had given him a little after 7. He had walked from his flat and had bought a bottle of good red wine on the way. He whistled as he saw the building, a detached Edwardian villa that had been converted into apartments which looked expensive. Danny knew Carl had the garden flat, so he rang the bottom bell and heard it ringing somewhere inside. The door opened and a strikingly beautiful woman stood there. \n\nDanny said, 'Oh, I'm sorry, have I rung the wrong bell?'\n\n'Not If your name is Danny, Hi, I'm Julia from upstairs, Carl asked me to let you in.'\n\n'Hi, Julia, nice to meet you.' They shook hands and Julia led him through into the apartment. Danny didn't know whether to look at Julia's backside wiggling away in front of him or the apartment, both looked equally stunning. Julia looked back as he sneaked a peek at her bum, she grinned and said, 'Come on through to the kitchen and meet my far better half.'\n\nDanny thought Julia beautiful; long straight blonde hair, short tight black skirt barely hiding legs that went up for ever and a smile to die for. Danny felt his cock stirring and thought, 'Stop it, she's off limits.' They entered a huge room that must have run across the whole width of the house. At least two rooms had been knocked into one large, open-plan kitchen and dining area, with sliding doors that opened out into the garden. The doors were closed as it was still too cold to go outside, but Danny could see a well tended garden and patio area outside. Carl stood by the range cooker stirring what Danny assumed from the smell to be the chilli. \n\n'Hi Danny, you've met Julia, I see.' Julia waggled her fingers at him over a large glass of white wine. 'Let me introduce Siobhan, Julia's partner. No, sorry, I mean wife.'\n\nA tall red haired woman stepped forward and offered her hand to Danny, 'That's right, Julia made an honest woman out of me a few weeks ago. Pleased to meet you Danny.'\n\nDanny shook her hand and said, 'Well, congratulations to both of you. That's wonderful.'\n\nIf Danny had thought Julia beautiful, then Siobhan almost took his breath away. A little taller than him, she had green eyes, and hair for which a pre-raphaelite painter would have sold his soul to get onto canvas. She had the hint of an Irish lilt to her voice, which probably explained the red hair.\n\nCarl put a glass of red wine into his hand and said, 'Here's to Julia and Siobhan, two of the sweetest and best neighbours that anyone could wish to have. Congratulations on your marriage.'\n\nThey all raised their glasses and drank to the toast.\n\n'Is this a celebration dinner then?' Danny asked.\n\n'Sort of,' said Carl, 'I missed the wedding. Simone and I were in the middle of breaking up and it had been a bad day.'\n\n'Sorry about that,' said Julia.\n\n'Not your fault, Jools.' said Carl.\n\n'Well, at least she won't cramp your style any more.' said Siobhan.\n\nDanny caught Julia shooting Siobhan a look and wondered what that meant. Danny also noticed Carl had reddened a little and guessed that Carl had been playing away from home and had got caught. He and Carl had never talked about why he and Simone had broken up, Danny didn't want to open fresh wounds with his new friend. If Carl wanted to talk about it, he would sometime.\n\n'So, Danny, what brought you into Carl's life?' said Siobhan. She fixed him with her eyes and he felt slightly intimidated by this beautiful woman. \n\n'We bumped into each other in a pub, we got talking and it kind of took off from there.' said Danny.\n\nCarl yelled over from the cooker, 'It was the day Simone finally broke up with me. Danny may well have saved my life that day.'\n\n'Hardly, I was grateful to talk to someone as well, remember?'\n\n'Oh, why?' Julia had moved to stand the other side of Danny. Danny realised he was being book ended by two of the most glamourous women he had ever met. Julia was a classic Nordic blonde, tall and slender, easy to laugh and with a naughty look in her eyes. Siobhan was smaller than Julia, but with her shock of red hair and green eyes, she had an air of mysticism that made Danny think of misty autumn mornings in the countryside.\n\n'I had been fired at lunchtime. Sorry, not fired, Let go was what they called it.' \n\n'Arseholes,' Julia said.\n\n'Jools, you have such a potty mouth.' said Siobhan.",
        "Julia grinned broadly, 'That's not what you say in bed.'\n\n'Careful, or you'll embarrass Carl's new friend.' Siobhan mock scolded Julia.\n\n'Oh, I don't think he'll be embarrassed by that. By this, maybe.' Julia moved around Danny and put her arms around Siobhan and pulled her into a kiss.\n\n'Oi, you two, stop teasing Danny,' yelled Carl from the cooker. The two women giggled and Siobhan said, 'Sorry, Danny, no offence meant.'\n\n'None taken,' laughed Danny. Glad they had stopped if only because he had started to feel his cock swelling as he watched them kissing. Carl came across and refilled glasses.\n\n'Right, food's ready. I'll dump the bowls of chilli and rice on the table, and there's some garlic bread as well so you can help yourselves.'\n\nThey sat down at the table, Danny next to Julia and across from Siobhan. For a moment Danny imagined he was being presented to the two girls as if for approval. He shook it off as his imagination and offered Siobhan first go at the chilli. Their plates were soon full of food and Danny said, 'God, this is fantastic, Carl. There's a real kick to it.'\n\nCarl smiled, 'Thanks, I like making it, makes me feel warm and safe in a funny way.'\n\n'So, Danny,' Siobhan fixed him with those eyes again, he again felt her sizing him up, 'have you found a new job yet?'\n\n'Nope, not yet, it's harder than I thought for out there, cutbacks all round in my business.'\n\n'What do you do, Danny?' Julia joined in. \n\n'I'm a graphic designer, mainly books and media stuff.'\n\n'Isn't that all freelance?' Siobhan asked. \n\n'A lot is, but that takes time to build up. I spent my time in agencies, didn't think I would need to go freelance.'\n\n'But you are now?' Julia spoke this time.\n\n'Yes, I've had to. I've picked up some work, but it will take longer than I thought to get it going.'\n\nCarl said, 'OK ladies, you can stop the interrogation, Danny's here to enjoy himself.'\n\nCarl had wondered if it would be alright to invite Danny to dinner with Siobhan and Julia. They could be mischievous if the mood took them and it seemed that was happening tonight. Carl didn't think Danny would have any problem with the girls being gay; nothing Danny had said led Carl to believe he would. Danny seemed to be laid back about everything. Carl felt he should celebrate the girls' marriage, as he had missed the wedding day, and with Simone no longer around, he wanted someone to be there with him. Danny seemed to be a good choice, and so far he appeared to be OK with it.\n\nDanny still felt Siobhan's eyes on him again and tried to change tack, 'Carl, this is a fabulous apartment.'\n\nCarl looked pleased at the compliment, 'Thanks, I inherited some money from an aunt. It gave me the opportunity to buy this place and to renovate it. I had an architect friend draw up the plans, including the extension for the kitchen and dining area.'\n\nSiobhan looked at Danny and said, 'You know, Danny, for a guy, you have a lovely bone structure, and your eyes are so pretty.'\n\n'Thank you Siobhan, but nobody has ever told me that before, I can assure you.'\n\n'Do you keep your hair that long all the time?'\n\n'Yes, I've always preferred longer hair, I keep it in the ponytail most of the time to keep it out of the way.'\n\n'Mmm, let me see what it looks like if you let it out of the ponytail.'\n\n'Siobhan, stop teasing Danny.' said Carl.\n\n'Pretty please, Danny?' said Siobhan.\n\nDanny laughed, 'No it's OK, Carl, really.'\n\nHe reached back and took out the scrunchie holding the ponytail and bent his head forwards so his hair fell down around his face.\n\nHe looked at Siobhan, smiled and said, 'Happy?'\n\n'You have lovely hair. Let me try something?'\n\nWithout waiting for an answer, she stood up and moved behind him. Danny felt her gather his hair together and remake the ponytail, this time with it riding higher on the back of his head, level with his eye line. 'There, that's looks better.' she said, moving back to look at him.\n\n'That's how girls wear their ponytail,' said Julia.\n\nDanny felt himself go pink, and he quickly released his hair so that it fell back over his shoulders. Siobhan tilted her head to one side and said, 'You know, with the right makeover you could look stunning.'\n\n'Siobhan, why are teasing Danny?' said Carl, 'let's go to the other room and have a drink.'\n\nShe looked a little put out, 'What? Why isn't it nice to say someone could look pretty?'\n\n'You don't describe guys as pretty.'\n\n'OK, he could look cute, is that better?' Siobhan fluttered her eyelashes at Carl who blushed a little.\n\nPretty? thought Danny. What the hell was she on about? He didn't quite know what to make of Siobhan and Julia. They were both extremely beautiful and by their words and actions, uninhibited. He didn't have any problem with gay people, he had worked with plenty in the design business, and he liked their company. They obviously knew Carl well, and he seemed comfortable with them. Danny realised he had been invited to make up a four, but he didn't mind that. It was good to see where Carl lived and to meet some new people, especially two as exotic as Siobhan and Julia. The apartment was much more luxurious than his rented flat, and that reminded him that if he didn't find some more work soon, he might have to move to somewhere cheaper.\n\nThey had all moved into a luxuriously decorated living space, Danny thought calling it a room wouldn't do it justice. It had enough room for two large sofas, each facing the other in front of an open fireplace, with a low table in between. Julia and Siobhan sat on one of the sofas as Carl motioned Danny to sit on the other one.\n\n'OK, what does everyone want to drink?'\n\n'Brandy, please Carly,' chorused both girls and Carl smiled weakly at the name. He turned towards Danny, 'They thought it was funny to call me Carly, as in Carly Simon, Carly and Simone? Only it's not so funny now is it girls, without Simone I mean.'\n\n'Sorry, Carly, old habits are hard to break.' said Julia and giggled.\n\nDanny thought she was a little drunk already.\n\n'I'll have a brandy too, please Carl.' he said.\n\n'OK, brandies all round, that's easy.' He went to fetch the drinks and Danny took the opportunity to ask Julia and Siobhan what they did for a living.\n\nSiobhan laughed, 'See, Julia, not everybody knows who you are.'\n\nJulia pouted, held her hair up behind her head and turned her head sideways and gave Danny a sultry look. \n\nCarl returned with the brandies and said, 'Danny, Julia's a model. She gets cranky if you don't recognise her.'\n\n'I do not,' pouted Julia.\n\n'You so do,' said Siobhan. \n\nJulia picked up a cushion and hit Siobhan with it. 'You're supposed to be on my side, wifey.'\n\nCarl took a sip of his brandy and nodded his head at the two girls, 'Julia's a fashion model and Siobhan is a makeup artist. That's how they met, on some photo shoot.'\n\nSiobhan lay back on the sofa, 'So, Danny, which way do you roll?'\n\nDanny must have looked confused, because Julia jumped in, 'She means are you straight or gay or bi or something else?'\n\nCarl started to object, but Danny held his hand up, 'Don't worry Carl, I don't mind. I'm straight, I like girls.'\n\nJulia giggled, 'I like girls too, but it doesn't make me straight.'\n\nDanny laughed, 'OK, let me change my answer, so far in my life I have always dated girls and got married to one.'\n\n'Hey, me too,' said Julia. They all laughed at that.\n\nDanny paused and then said, 'Let me put it this way, I have no idea what the future will hold, but I don't have any plans to change.'\n\n'That's what I said before I met Julia,' said Siobhan. She put her arm round Julia's shoulder and pulled her close, 'It's a good answer, Danny. You seem to be someone who doesn't have a binary outlook.'\n\n'I have no idea what that means, Siobhan.'\n\nCarl rose to freshen everybody's drinks and Danny felt a little drunk now. \n\nSiobhan took a sip of her drink before replying to Danny. 'All I mean, Danny, is that most people think that gender is male and female, that's binary. I think it's more complicated than that. Instead of having only two colours, black and white for instance, there's a whole palette of colours to choose from. You don't have to be restricted to two types of gender. It's almost infinite and very flexible.'\n\nDanny sipped his brandy, and could see everyone watching him as he thought about what to say.\n\n'So, I could decide to be gay tomorrow?' He aimed for sarcasm, but somehow it came out as a simple question.\n\n'Gender isn't about sexual orientation, and anyway, I don't think being attracted to someone is a conscious decision. I didn't wake up one morning and say to myself, I think I'll be a lesbian today, I'll go pick up a girl. I met Julia and fell in love with her, I didn't set out to do it, but when it happened, I didn't fight it.'\n\n'You couldn't possibly have fought me off, baby.' Julia tucked her legs beneath her on the sofa, 'Have you ever fancied a guy, Danny? You're a swimmer, right? All those sleek wet bodies in teeny tiny Speedos, did you ever get a stiffy when you were in the changing rooms?'\n\n'Not fair,' Carl piped up, 'nearly every adolescent boy gets a crush on another boy.'\n\nThree pairs of eyes swivelled towards Carl, who went pink, 'Well, yes, I did.'\n\n'Come on Carly, you can't leave it there, give us the juicy bits.' said Julia.\n\nFeeling the effects of the wine at dinner and the brandies, Carl opened up more than normal.\n\n'Well, I spent a school summer holiday with one of my friends one year, when my parents were away in Africa, and it wasn't safe for me to go out there with them. He and I got close, and we, well, experimented a bit, I guess you would say. We used to go swimming in a lake near their house, and one day he suggested we go skinny dipping. There was nobody about so we dropped our shorts and ran into the water. It was fun but then he swam through my legs, came up in front of me, and suddenly we were kissing. We used to go there whenever we could and we kissed a few more times, but I think we both got a bit scared, and it kind of ended then.'\n\n'Very hot Carly, How about you, Danny?' Julia asked.\n\nDanny hesitated, but he had drunk enough for his inhibitions to have slipped away, and for some reason he had found Carl's story liberating. 'Yes, there was a boy back in school, but it was just a phase.'\n\nJulia raised one eyebrow and drawled, 'Really? Just a phase?'\n\nDanny felt himself getting pink this time. 'It was the school play, Romeo and Juliet. We were an all boys school, so they needed one of us to play Juliet, and well, I was pushed into playing the part. I had to spend a lot of the time dressed to get used to wearing the costume. The boy was playing Romeo, we clicked, and one thing led to another. I think he got turned on by me in the costume. He only wanted to do anything when I was dressed as Juliet. It was all adolescent stuff, we would kiss, and I masturbated him once, that's all. I think he wanted to go further, but that was enough for me.'\n\n'Yowsa!' yelled Julia, 'Danny for the win.'\n\nDanny laughed and then thought that he had never told that story to anyone. Why tonight? He didn't know, maybe it had been the brandy and the presence of Julia and Siobhan. \n\n'So, both of you had gay encounters back then?' Siobhan sat back with a smug look on her face. 'I think I made my point.'\n\n'Didn't you get crushes on a teacher? Isn't that what schoolgirls do?' Danny thought he should fight back.\n\nJulia grinned like a cheshire cat, 'I did, but it was a lot more than a crush, as Sister Annunciata would be able to tell you. Then again, I knew I was gay from an early age, and precocious with it. I was expelled from one school for seducing the French Assistante. She taught me some French that wasn't in any phrase book. Although, I don't think we needed any translation for what we were doing together.'\n\nSiobhan shook her head at Julia's story, then said 'Sorry, not me, I was so shy I didn't date anyone until I left school.'\n\nCarl said, 'I can't believe that.' \n\n'Nope, it's true, I would break out in spots if a boy came anywhere near me, and being a redhead, well, that put everybody off back then. I went to college to do my beauty course and there I had to overcome my shyness. By then my hair had become an attraction for a certain type of guy, the artistic types would love to come and tell me how beautiful my hair looked. I slept with a few, but it never amounted to anything. Then I met this creature here, who seduced me one afternoon as I was doing her makeup. She kept putting her hand up my skirt and asking me if she could see if I was a real redhead.' She grinned at Julia, 'Classy stuff, but I fell for it.'\n\nShe bent down and kissed Julia on the lips and they smiled at each other.\n\nThey turned back to face Carl and Danny. 'So, you two don't fancy each other, then?' said Julia.\n\n'God, no.' both men spoke at once. \n\nSiobhan and Julia laughed and Siobhan went on, 'We're only teasing you, but Carly does talk about you a lot, Danny.'\n\n'I do not,' said Carl, a little too strongly thought Danny.\n\n'Anyway you boys,' Siobhan stood up, 'We have to love you and leave you. Julia has a show tomorrow evening, and trust me, she needs her beauty sleep.'\n\n'Cow,' said Julia, who got to her feet a little more unsteadily.\n\n'Say goodnight to Danny and Carly, Julia.' laughed Siobhan.\n\n'Nighty night, boys and girls.'\n\n'Come on, babe, off we go.' \n\nBefore leaving, Julia gave Carl a hug and then Danny, 'I enjoyed meeting you, Danny. You're lovely.'\n\n'Likewise, Julia, it's been a pleasure.'\n\nAs Siobhan hugged Danny, she whispered in his ear, 'If you ever want to be Juliet again, I can help.'\n\nDanny felt an involuntary shiver run through him as he realised what Siobhan had said. He blinked and said, 'Thanks, Siobhan, but I don't think I will.'\n\nSiobhan let go of the hug, locked eyes with Danny and smiled, 'You would look lovely, I promise.'\n\nSiobhan promptly dragged Julia out of the door and it fell quiet in the room. Danny sat back down on the sofa and said, 'Wow, Carl, they are some pair.'\n\nCarl smiled and said, 'Yes, they're wonderful girls. I hope they weren't too much for you, they can be a bit overpowering at times.'\n\n'No, I enjoyed it, thank you for the invitation, but I guess I should be going too. Can you call me a cab, I don't fancy walking to be honest.' 'Why don't you stay here?' Carl said, 'I mean I have a spare bedroom, so it wouldn't be a problem. We could have another drink and then call it a night.'\n\nDanny felt so comfortable on the sofa, and he didn't fancy getting up and going home, so he said, 'If you're sure, Carl?'\n\n'Positive Danny, the bed is made up and everything.'\n\nDanny thanked Carl again and lay back on the sofa. Carl refilled their glasses and sat on the other sofa opposite Danny.\n\n'You look tired, Danny.'\n\n'Yep, I guess I haven't slept that well recently, been worried about work. It's not coming together as I thought it would. But tonight has been a blast, and I haven't had so much to drink for a long time.'\n\n'It turned out well, don't you think? Siobhan took a shine to you, didn't she?' said Carl. \n\n'I guess so, but saying I could be pretty? I think not.'\n\n'She can be very persuasive.' muttered Carl.\n\nDanny's eyes were getting heavy, and he felt that if he didn't lay down soon he would fall asleep on the sofa.\n\n'Carl, I'm sorry but I think I'm going to have to go to bed if you don't mind, I'm about to drop off here.'\n\n'OK, let me show you the bedroom.'\n\nCarl took Danny through to the back of the apartment and opened a door into a bedroom. \n\n'There's a small en-suite bathroom over there, and there are clean towels there as well. Sleep well my friend, I'll see you in the morning.'\n\n'Goodnight, Carl, and thank you again.' With that, Danny leaned forward and hugged Carl, startling him, but after hesitating for a moment, he hugged Danny back.\n\n'Goodnight Danny,' said Carl, who looked at Danny curiously for a moment, and then softly closed the door on his way out.\n\nCarl had been caught by surprise when Danny hugged him, but he had to admit it did feel good to have someone hold him again. Carl sat on the side of his bed and wondered if it meant anything more than simply a gesture of thanks from a friend. He shook his head, trying to clear out the effects of the evening's drinking, and decided that Danny had drunk a little too much. He turned out his light and fell asleep in seconds.\n\nChapter Three\n\nDanny couldn't remember the last time he had felt this tired. The worries of the past few weeks and the amount he had drunk this evening had caught up on him. He had surprised himself when he hugged Carl, but it had felt the natural thing to do. Carl had been so generous to invite him to his place and then the offer of the bed for the night touched Danny, and he had reacted instinctively. It had felt nice to hold someone close. Hoping that he had not upset Carl, he undressed to his briefs, climbed beneath the duvet and fell fast asleep.\n\nCarl was back at his school friend's house and they were down at the lake. He was standing in the water up to his waist and laughing as his friend dived beneath the water and swam between his legs. Carl giggled as he felt his friend's slippery body brush his inner thigh making his cock stir a little. He was still laughing as his friend surfaced in front of him making Carl close his eyes as water splashed up at him. A pair of strong arms reached around him, pulled him close and he felt soft lips brushing against his. He responded to the kiss, his own lips opening to allow a tongue to slide into his mouth. Carl's head spun as he felt himself melting into the embrace, and he opened his eyes to look into Danny's sparkling blue eyes. \n\nHe woke with a start, his eyes snapped open as he recalled his dream, and his heart began to race as he realised it had been Danny in his dream. God, had he actually been dreaming about kissing Danny? It must have been all the brandy together with the confessions he and Danny had made and the hug Danny had given him. Brandy had always given him weird dreams. He rolled over and tried to sleep again, but all he could think of were those blue eyes. \n\nDanny woke up with his head throbbing and his mouth dry as sandpaper. He blinked once or twice as he tried to remember where he was. Everything came back to him in a rush; the dinner, meeting Siobhan and Julia, the confession, hugging Carl, and then staying over. Danny lay there and swore to himself. Why the fuck had he told everybody that story about the school play. His face began to burn as he remembered telling it in front of Carl and the girls. He thought he had buried that memory years ago, so why had it suddenly popped up in his mind and why, oh, why did he decide to tell it? Then Siobhan, whispering in his ear if he ever wanted to be Juliet again, she could help. He remembered the tingle he had felt as she said it. Danny rolled onto his back and put his hands over his eyes as all the memories came flooding back. \n\nIt had been the last year of school when they chose Romeo and Juliet as the big drama club production of the year. Danny had been chosen to play Mercutio, in his opinion, the best role in the play. He loved the Queen Mab speech, with its allusions to magic and fairies and fulfilling your dreams. OK, Mercutio gets stabbed early on, but Danny still thought it a better role than the namby-pamby Romeo. Danny could still recall the day when the boy cast to play Juliet broke his leg falling off the wall bars in the gym. He could never play Juliet with a plaster cast on his leg. The following day the drama teacher approached him at lunch break and asked if he would be willing to swap roles and play Juliet.\n\nThe teacher said that the costume for Juliet wouldn't fit anyone else, and they didn't have the time or the budget to get it altered. Danny had been unwilling to give up the role of Mercutio, but the teacher virtually blackmailed him into it, saying that if he didn't do it, they would probably have to postpone or even cancel the production. Danny protested that he could never learn the lines in time, but the drama teacher countered that he had arranged special study time for Danny, so that he could learn the part. In addition, a member of the local amateur dramatic society had offered to give Danny voice and movement coaching for the role. Danny felt it was unfair, but he knew they had boxed him in; if he refused, everybody would blame him for cancelling the show. Reluctantly he agreed, but he was heartbroken about losing the role of Mercutio",
        "Starting to learn Juliet's lines, Danny discovered to his horror that she had double the lines he had already learnt for Mercutio. As well as learning the lines, he had to try on the costume for Juliet. He hated the idea of wearing a dress, so unlike the Mercutio costume, which he thought way cooler. So, he turned up for the first fitting for the dress in a foul mood, determined to hate the whole thing. He felt disconcerted to find out a woman from the local amateur dramatic society was going to do the fitting. She had volunteered to do it so she could begin his coaching for the role. It surprised even more to find out she was pretty and only about five or six years older than himself.\n\nShe introduced herself as Shirley and asked if he had ever played a girl's role before. When he said he hadn't, she cheerfully said that it wouldn't be a problem, with his figure she thought he would do fine. Shirley suggested he should try on the dress first as it would be easier for him to get used to the role in costume. She had him strip to his underpants, and his face burned to be like that in front of her, but she didn't seem to notice. He remembered the totally unexpected thrill which flooded through him as she dropped the dress over his head and laced him tightly into it. Shirley made him wear some white tights under the dress and he shivered as he felt his nylon clad legs rubbing against each other. \n\nShe sat him down and applied his stage makeup before styling his hair which he already wore long. She helped him into the shoes that came with the costume. They only had a small heel, but as he stood up, he felt how different it made him feel. His calves felt tighter, and his bottom stuck out a bit more, so he had to adjust his posture to compensate for the extra height. Shirley had him practise walking and moving in the dress which he found quite heavy and he had been exhausted by the time she called a halt. \n\n'Danny,' she said, 'I'm surprised and really pleased. You seem to have taken to this much quicker than I imagined and you look so natural in that dress.' He remembered blushing at her words and the way they made him feel. He met with her a few more times to practise and she seemed happy with the progress he made. He found to his great surprise that he began looking forward to their sessions and he began to think that playing Juliet might not be such a bad deal after all. At the end of their last session, as he prepared to take off the dress, Shirley hugged him, wished him good luck and to his astonishment, she kissed him on the lips. He felt himself kissing her back for a few seconds before she broke the kiss.\n\n'Oh my God, I'm so sorry, Danny I shouldn't have done that. You look so sweet and pretty. Please don't tell anyone, please?'\n\nHe shook his head, unable to say anything, but he knew he wouldn't tell anyone about the kiss. All he could think of the excitement he had felt to be kissed by her. They never met again, but he did spot her smiling up at him from the audience for one of the performances. \n\nHe recalled the way his body responded to the touch of the boy playing Romeo. The boy had done a double take when he first saw Danny in costume and thereafter took every opportunity to be alone with him as they rehearsed their scenes. He touched Danny more often than necessary, but Danny didn't mind, in fact he went out of his way to stand close to Romeo and when Romeo kissed him for the first time behind some of the scenery, he could remember the thrill that had flooded through his adolescent body. Danny knew that he felt attracted to Romeo only when he wore the dress, but wearing the costume and makeup for Juliet, he seemed to immerse himself so deeply into the role, it changed his whole personality. \n\nPlaying the role had brought to the surface emotions that he never imagined; he felt softer, gentler and yes, feminine. When they were in costume for the play, he could barely keep his hands off Romeo, even to the point of masturbating him once in a quiet moment during a dress rehearsal. Once the play had finished, and he had taken the dress off, he had felt no attraction for the boy playing Romeo. From that day until last night he had not told a single soul what had happened. Danny shuddered at what the others must have thought about his story. Well, he thought, Julia and Siobhan didn't matter, but he worried about how he could face Carl. Although Carl did share his own story, so if they both ignored each other's indiscretions, it might be OK.\n\nHe could hear Carl moving around outside the bedroom, so he decided he should also get up. Having freshened up in the bathroom, he got dressed and ventured out and into the kitchen. Carl had beaten him to it, already brewing the coffee and putting out some croissants on the table. 'Morning Danny, how you feeling?'\n\n'Horrible, my head is throbbing and my tongue's stuck to the roof of my mouth. How about you?'\n\n'About the same, there's some painkillers on the counter and water or some juice in the fridge if you want.'\n\nDanny took a couple of tablets and swallowed them with water.\n\n'Thanks Carl. Did I make a fool of myself last night?' \n\nCarl looked up and smiled, 'No, no more than I did.'\n\n'Thank God for that. Thanks again for letting me stay over, I really appreciate it.'\n\n'You're welcome, mate.'\n\nCarl's headache eased off with the painkillers, but as he sat there drinking his coffee, he couldn't stop himself stealing looks at Danny. Every time Danny looked up, Carl could see those same clear blue eyes that had appeared in his dream. Carl uttered a little moan as he tried to force himself not to look.\n\n'Carl, you OK? not feeling so good?' Danny asked. He kept catching Carl stealing little glances at him. Was he thinking of that stupid story Danny had told everyone last night? Was Carl going to tell him that he didn't want to see him again because of it? \n\n'No, I'm good thanks, Danny. Anything you fancy doing today?' \n\n'No, I guess I should be heading off home soon. What about you?'\n\nDanny felt relieved. If Carl wanted to do something together, then he might not be so upset with him. \n\nThe front door bell rang, making them both jump. 'Oh, fuck, who's that?'\n\nsaid Carl. He walked out of the kitchen and Danny heard him open the front door and then he walked back into the kitchen followed by Siobhan.\n\n'Hello boys, how are you this morning? Feeling grand are we?' Her Irish lilt a little more prominent this morning. \n\n'Apart from a banging hangover, fine, thank you,' said Danny, marvelling at how fresh Siobhan looked. 'How are you?'\n\n'Top of the morning, thanks, Danny.'\n\n'How can you be so cheerful? You had as much to drink as we did.'\n\n'It's a Celtic secret, Danny. You benighted English wouldn't understand. Anyway, do you fancy coming to the show tonight? It's a charity thing so there's plenty of space for you to come along if you want to. It'll be fun, and there will be a free bar we can get you into.'\n\nCarl looked across to Danny and said, 'I'm up for it. Danny, what about you?'\n\nDanny said, 'Great, I'm good too. Sounds like it should be fun.'\n\n'That's grand, it starts at eight o'clock, over in Docklands. We have to be up there early, but you can share our ride back afterwards if you wait a little for us. I'll put your names on the door and here are the passes for the bar.' She gave each of them a plastic card and said, 'I should be able to come out and find you when you arrive. Text me when you get there.'\n\nShe looked at Danny and said, 'Mother of God, your eyes are striking, Danny. I wish you would let me get to work on you, your own mother wouldn't recognise you.'\n\nDanny wished she wouldn't keep saying things like that, because every time she did, a ripple of excitement ran through him; he hated it, yet loved it at the same time. \n\nDanny blushed and Siobhan laughed. 'See you tonight boys.' Carl let her out of the front door and returned to the kitchen.\n\nCarl said, 'She normally gets her way, you know.'\n\n'What do you mean?'\n\nCarl smiled, 'You'll find out, I'm sure.'\n\nDanny shrugged, he wasn't up for playing games, his head still throbbed too badly.\n\nCarl picked up his coffee and stood by the window looking out into the garden. He thought for a few minutes about whether he should ask Danny about the idea which had been churning away in his mind. He turned to look at Danny, checking emails on his phone and decided to go ahead. 'Danny, can I ask you a question?'\n\n'Sure, fire away.'\n\n'You said last night the work search isn't going too well, is that right?'\n\nDanny put his phone down, 'Yes, it's taking longer to build up the freelance work than I imagined and full times jobs don't come up often.'\n\n'You told me a couple of weeks ago, the lease is up on your flat soon, right?'\n\nDanny was puzzled; where was Carl going with this?\n\n'Yes, and the landlord is making noises about a rent increase, which would be a problem for me right now.'\n\nCarl paused, 'I don't know if this would help, or even if you would want to, but I have the spare room here, and if it helped out, you could move in here.'\n\nDanny had been so surprised he wasn't sure he had heard Carl properly.\n\n'Sorry, did you just say I could move in here?'\n\n'Yes, if it would help you out, that is. The room is here and there's plenty of space here for us not to be on top of each other.'\n\n'But, Carl, if I can't afford my current place, I couldn't afford to live here.'\n\nCarl laughed, 'No you idiot, I wouldn't want rent, I own the place outright. A share of the running costs would be enough, food and bills and stuff like that.'\n\nDanny thought quickly. On one hand it would solve a lot of his problems until the work built up, but on the other hand it would put him under a big obligation to Carl. He liked Carl, so he didn't think there would be a big personality clash. There was enough space here for sure, all he needed would be somewhere to set up his computer, but apart from that, he didn't need much. As if reading his mind, Carl said, 'There's a space off the kitchen that's a storeroom at the moment, we could clear that out for you to work in.'\n\n'Carl, are you serious? That's a big step for you to have someone else sharing your place.'\n\n'Danny, I am totally serious. I have shared before, and we get on well, so why not? I would enjoy the company to be honest.'\n\n'Carl, that's the most generous thing anyone's done for me. If you're OK with it, I would love to take you up on it.'\n\nCarl beamed, 'That's great Danny, I'm so pleased. When do you think you would need to move?'\n\n'I know the landlord is keen to get more for the place so I don't think there would be any problem. I need to talk to him, but would next weekend be too soon.'\n\n'No, that's perfect, I'll get the storeroom sorted, do you need anything special for your work?'\n\n'Not much, I do everything on the mac, so fast broadband is all I need.'\n\n'No problem then, Danny, I've got the fastest package I could get already installed.'\n\nDanny's head started to whirl, he hadn't expected anything like this and he needed to sort his thoughts out. \n\n'Carl, in that case, I'll shoot off home and get started on organising stuff. I don't have much as the flat came furnished. I can put some of it into storage, so I'll only bring across what I need.'\n\nThey agreed to meet later that afternoon before heading off together to Julia's show. Danny walked back to his flat to help clear his head, and it gave him time to think about what had happened this morning. He hoped he was doing the right thing; he and Carl were good friends, but sharing the apartment would be different. Still, it would be a lifesaver for him at the moment. His business had been growing, but more slowly than he could afford. Danny reassured himself that it wouldn't be for long as he would be able to move out again when business picked up. \n\nCarl felt pleased that Danny had accepted his offer to share. He missed having someone around now that Simone had moved out; he had never enjoyed his own company much, so having Danny around would be nice. It would mean a few changes, but that wouldn't be a problem. He had made a promise, and he intended to keep it.\n\nChapter Four\n\nLater in the afternoon, Danny walked across to Carl's and they headed out to Docklands from there. The show was in the ExCel centre in Docklands, and Danny suggested they catch the cable car across the river. Carl agreed straight away as he had been keen to use it for some time. It had been built for the London Olympics, but had turned into an expensive white elephant afterwards. It only took ten minutes to make the crossing, and it delighted Danny to see his friend so excited by the trip. \n\nThey arrived at the ExCel in good spirits and set about looking for the show. There seemed to be a lot of flamboyantly dressed people milling around as was to be expected, they assumed, at a fashion show. Carl started to text Siobhan to let her know they were here when Danny nudged him and pointed to a huge banner hung above their heads. \n\n'Did you know about this,' Danny hissed at Carl. \n\n'No, I had no idea, she never said anything to me.' \n\nAt that moment, Siobhan arrived, looking like she had stepped out of a Rossetti painting. Her hair flowed around her shoulders and heads turned as she moved through the crowd and greeted both of them with a cheek kiss. \n\n'Hello you two, I'm glad you could make it. What do you think?' Her eyes were twinkling as she spoke.\n\nDanny looked up at the banner over their heads and said, 'Er, TransDress 2016?' \n\nSiobhan tilted her head, smiled and said, 'I told you, didn't I?'\n\n'No, actually, you didn't,' said Carl. \n\n'Ach well, it's for a charity that helps provide dressing advice and support for transgender teenagers. It's terribly difficult for them to get help when they need it. It's a great cause.'\n\n'I thought you said Julia would be in the show,' said Carl. \n\n'Well no, I'm sure I didn't say that. She is the producer and coach to the models tonight. They're all transgender girls and she volunteered to produce the show and I'm supervising the makeup and wardrobe.'\n\nDanny looked around a little more closely at the people in the crowd and he suddenly realised most of them were dressed either in an androgynous way or cross-dressed completely. His eyes widened as a beautifully made up boy walked past wearing heels, a mini skirt and a transparent silk blouse, and who turned his head to smile at Danny and gave him a slow wink. \n\nSiobhan giggled as she saw Danny's face and said, 'Come on boys, let's get you a drink, I think you need one.' They followed her through the crowd, their eyes flicking from one side to the other as they took in the sights around them. The music and colour and atmosphere reminded Carl of the time he had been to carnival in Rio. all around them were young people dressed in every style you could imagine; boys wearing skirts and see-through blouses, and girls wearing tuxedos, and a million styles in between. It was loud and brash, and to Carl exhilaratingly naughty. His eyes kept focusing on some of the boys dressed as girls. He felt his heart run a little faster as he watched a boy who had the face of an angel, stop Carl in his tracks as he turned and smile at him, He felt his face flush and he hurried to catch up with Siobhan and Danny. Siobhan ushered them into a private VIP room saying, 'Have a few drinks and enjoy yourselves. I've got to supervise the makeup, but I'll come back for you later on.' She blew them a kiss and disappeared. They looked at each other, both unsure of what to do next. \n\n'Hi, I'm Trixie, what can I get you two girls to drink?' \n\nThey turned to find a boy made up as a Goth looking expectantly at them. Danny's eyes widened as he took in the black leather hot pants, fishnets and the cropped mesh t-shirt, together with a belly ring which looked like a snake glittering from a bare midriff. \n\n'Well, girls? I haven't got all day.' Trixie laid a hand with black painted nails on Carl's arm and said, 'I've got white wine, red wine and pink wine. Well it's ros\u00e9 really, but it's so much nicer to call it pink don't you think? It's a bit mixed up, like me. So what'll it be, butch red, femme white or bi pink?'\n\nDanny started to giggle and Trixie pouted. 'So, that's white for you, you naughty girl, and I think pink for your lovely friend here. Don't go anywhere, I'll be right back.' Rubbing Carl's arm Trixie smiled at Carl, then turned and headed for the bar. Carl giggled nervously, 'My God, what have we let ourselves in for?'\n\n'I don't know but I need that drink.' replied Danny, watching Trixie's bum wiggle provocatively across to the bar. Trixie looked back and smiled at Carl before winking at him. Carl blushed a deep red and Danny giggled at his friend's embarrassment. \n\n'Hi, I'm Peta, who are you?' A woman wearing a badge with the Charity logo and carrying an iPad and a walkie talkie approached them, smiling broadly.\n\n'Uh, we're with Siobhan.' said Carl. \n\nShe looked down at the iPad. 'Ah, you're Danny and Carl, right? Siobhan put your names down on the list. Welcome to TransDress, it's great to have you here. Like I said, I'm Peta and I do the PR for the charity. Are you friends of Siobhan?'\n\n'Yes, we live downstairs from Siobhan and Julia.' said Carl.\n\n'That's wonderful, Siobhan and Julia have been fantastic supporters of the charity, we couldn't have put this on without their help. Any friends of theirs are friends of ours, for sure. Do you know anything about the charity? Do you have an interest in the TG community?'\n\nAt that moment Trixie returned and Peta paused as Trixie gave Danny and Carl their drinks.\n\n'That's a femmy white for you, and a lovely bi pink for you, sweetie.' Trixie winked at Carl once again as he took his drink. \n\n'Is Trixie looking after you?' said Peta, smiling.\n\nTrixie giggled, 'I'd like to look after this one if he'd let me.' Trixie's tongue slipped out between black lips and Carl blushed pink again.\n\n'Now, now, Trixie, I'm sure there are others who need a drink.' \n\nTrixie pouted and turned away. 'I'll be back, don't worry,' \n\nPeta grinned broadly, 'Don't worry about Trixie, ze is harmless. Ze likes to flirt.' \n\n'I'm sorry, did you say, ze?' said Danny, looking puzzled.\n\nPeta smiled. 'Ze? It's a gender neutral pronoun.'\n\nDanny still looked puzzled.\n\n'A lot of non binary people feel alienated if people use he, or she, if it doesn't fit their gender identity. Ze is a neutral pronoun. It doesn't reflect any specific gender identity. There's a section on our website which explains it all. Look, I'm sorry I have to do the rounds, it's great to have you here. Enjoy the show. I'll try to catch you later with Siobhan, if I can.' She flashed a smile and moved off to talk to someone else.\n\nCarl whistled softly, 'Wow, it's a completely different world.' \n\nDanny grinned, 'Well, you've made a conquest, Carl. Ze is hot for you.'\n\nCarl spluttered as he had taken a sip of his wine, then laughed at his own embarrassment. Before long, they were chatting to others in the VIP room. Some were journalists, some supporters of the charity and some friends and relatives of those in the show. Trixie kept them topped up with drinks and quite soon Danny felt a little buzzed. He hadn't eaten anything except for some crisps and his glass had been topped up whenever it got even half way empty. Trixie seemed to be staying close to Carl, who, to Danny's eyes at least, didn't seem to mind the attention too much. \n\nPeta stood up on a chair and made a short speech, thanking everyone for coming to support the charity. She said that the show would be starting in a few minutes and she hoped everyone would enjoy themselves. People began to file through the door and Danny and Carl moved with them.\n\n'Danny, Danny.' He heard Peta's voice, and he looked around as she pushed her way through to him. ",
        "'I just had a message from Siobhan. Can you wait here for her, she'll be a minute. Carl, you can go ahead into the show.'\n\nDanny shrugged to Carl, 'See you later.' Carl said, and turned to follow the others, as Trixie appeared at his side and put an arm through Carl's.\n\nDanny grinned and hung back as Siobhan had asked, but he wondered what she wanted him for. The others had disappeared when Siobhan pushed open another door and waved him over.\n\n'Come on,' she said, 'we haven't got a lot of time before it all starts.'\n\nAs he got to the door, Siobhan grabbed his hand and pulled him through into a corridor. \n\n'Where are we going?' he said.\n\n'Ssh,' she put her finger to her mouth, 'we're right behind the audience for the show.'\n\nShe led him down the corridor and pushed open a door at the end, They walked into a scene of what looked to Danny like chaos. People were everywhere in a small space behind what he guessed would be the runway. Models sat in chairs being made up, and there were racks of clothes all with photos of the models who were to wear them. People with clipboards and headsets were running around and trying to bring some order to the chaos. \n\nDanny spotted Julia who seemed to be in her element, barking orders to assistants and talking through her headset. She waved at Danny as Siobhan led him to a chair and gave him a headset to listen on. Over the headset he heard Julia say 'Showtime minus 15, people. Good luck and make this a great show tonight.'\n\nHe could feel the tension rising in the room, and it reminded him of the last few minutes before his performance of Juliet all those years ago. Siobhan went to help one of the makeup artists and Danny tried to melt into the background. Models were climbing into the outfits and Danny realised with a start that what he had assumed were female were either transgender or androgynous looking boys. Julia's voice came over the headset, 'Five minutes to showtime. Places everyone.'\n\nHairdressers and makeup artists were doing last minute touch ups and the tension in the room notched up even further. He heard the music begin in the runway room and Siobhan pointed to a monitor feeding pictures from the other room. The camera swept around the room and Danny caught a glimpse of Carl sitting next to Trixie, who seemed to have a hand on his leg. Danny felt a small pang as he saw Trixie move even closer to Carl. Was that jealousy he felt? Surely not. He switched his attention back to the room, and the models were now lining up ready to go out onto the runway. \n\n'Showtime, let's make it a great one.' Julia's voice cut through and models began to move out of the room. Siobhan came and sat next to him as the room began to empty. She brought her lips to his ear, 'Exciting isn't it? Don't they all look so beautiful? Do you like that?'\n\nHe nodded. He didn't know if whether he was buzzed from the drinks or being involved in the charged atmosphere backstage but he almost quivered with excitement. His head spun as everywhere he looked there were models who looked like beautiful girls but had been born male. He felt his cock stir as he thought about what it would be like to be one of these models lining up in the most beautiful dresses or skirts and blouses. He wondered what it would be like to stride along the runway with everyone knowing he was a male beneath the female clothes. In the design world Danny had heard about the success of models like Andrej Pejic and Stav Strashko, but he had never believed it could be possible for a man to look this good as a woman.\n\nSiobhan saw the look in his eyes and guessed that Danny felt overwhelmed by the excitement of everything going on around him. She hesitated for a moment, then grabbed his hand and pulled him up. She led him over to a makeup desk they hadn't needed and pulled a screen round it. Nobody could see them from the room. She pushed him down onto the chair and he looked up at her as he realised what she intended to do. \n\nDanny made to speak, but Siobhan put her finger to his lips and said, 'Danny, please let me do this for you, just this once. Nobody will ever know. I think you want me to, don't you?'\n\nHe looked at her and he knew he should have said no and walked away. But, something deep inside made him hesitate, and in that moment he was lost. He sat there like a rabbit caught in headlights, and Siobhan sensed his resistance weakening. She sat beside him and pulled the make up kit towards her. She knew she didn't have much time, but she had done this so many times, it wouldn't matter. She quickly decided that a natural look would be the way to go, making the most of his best features but nothing too dramatic. At least for this time she thought. Danny had shaved before he came out and luckily his beard didn't seem to be too heavy, so a medium cover foundation and a little concealer would be enough. He seemed almost in a trance as she worked, carefully but quickly, shading and contouring his face with blusher, helping to emphasise his lovely cheekbones.\n\nHe had those lovely blue eyes, and she wanted to make them pop. She used a bronze colour eyeshadow across the lid with a darker colour blending into the crease. She used the same colours beneath the eye to make the eyes look as big as possible, with a little highlight in the inner corner of each eye. She didn't have time to finesse too much as she didn't know how much more Danny would take. He seemed compliant, almost trancelike, at the moment, but she didn't want to push it too far. She finished off his eyes with a little eyeliner and then some mascara. There wasn't much she could do with his eyebrows other than to brush them as smooth as possible and hold them in place with brow gel. \n\nShe finally started on his lips, drawing around them with a pencil to make them look larger, and then used a brush with a soft pink lipstick to colour in his lips. The pink would look so sweet and complement his colouring without taking attention away from his eyes. As a makeup artist she loved this moment when she had almost finished and she could see what a difference her skill and experience had made.\n\nDanny had no idea what Siobhan was doing to him, but every few seconds he would think I have to stop this now, but every time he tried to say something he couldn't bring himself to do it. He felt dazed the brushes slid across his skin and her fingers worked on his face. There was something soothing and calming about the way Siobhan went about her work, and his mind drifted back to the time when he had been Juliet. In the end he gave in completely and sat there quietly and still as she worked on him.\n\nShe could hear the show going on around them and she prayed that nobody would come looking for her right now. She sat back and made a few minor adjustments, but she felt happy with what she had done. \n\n'Danny, close your eyes, I'm going to let your hair down so don't move.' She released his blond hair from its ponytail allowing it to tumble down to his shoulders. Grabbing a hairbrush she quickly brushed it out and arranged it around his face. She did a little touch up here and there, but then decided she could do no more..\n\nShe turned a mirror round so Danny would be looking straight into it. She took a deep breath and said, 'OK, Danny, you can open your eyes now.'\n\nDanny hesitated, what would he look like? A bloke wearing makeup that's what. Why had he agreed to this crazy idea, he would look stupid? He finally snapped his eyes open, and it took a second or two to adjust to the light, but he blinked once or twice and then everything came into sharp focus. His first foolish thought was that Siobhan had played a trick on him, putting a girl opposite him to make him think it was his face in the mirror. A split second later he realised it was his face, but then again it wasn't. He moved his head, and the head in the mirror moved, so it must be his face; but it wasn't one he recognised. His eyes looked enormous and his lips were, well, sexy was the first word that came into his mind. His blond hair framed his face, making it look narrower and feminine. It was surely a woman's face that started back at him from the mirror. He couldn't believe it was him. He touched his nose with his finger to see if it was his face and he was shocked to feel his finger on his skin. It was him.\n\n'Well,' said Siobhan softly, 'What do you think?'\n\nHer voice broke the spell the face in the mirror had put on him and he jumped. He looked up at her, his eyes shining, and he found it difficult to speak. He shook his head instead, and Siobhan's heart sank, he didn't like it, he was angry. He finally found his voice, 'I can't believe it, it's beautiful.'\n\nShe heaved a sigh of relief and grinned, 'I didn't do a bad job did I?' He shook his head again, 'I still don't believe what you've done. I look so feminine.' He smiled and looked back in the mirror, tilting his head one way than the other, not quite taking in how she had made him look. At that precise moment Carl, Julia and Trixie walked round the edge of the screen.\n\n'This is where you've got to, We've been looking for you both...' Julia's voice trailed off as she took in the scene in front of them. Trixie broke the silence first.\n\n'I knew femmy white was the right drink for her.'\n\nChapter Five\n\nThe show had finished and Trixie had grabbed his hand, 'Come on, let's go find your friend.' It felt strange, but he didn't mind Trixie holding his hand. Trixie had slipped an arm through his when they walked into the show, and Carl had initially been embarrassed, thinking that everyone would be looking at him and laughing. When he realised that at this show nobody would bat an eyelid, not even a heavily mascaraed eyelid at him being with Trixie, he began to relax. Trixie was great company; wickedly funny and charming in equal measure. Carl began to enjoy the show and didn't mind when Trixie put a hand on his leg. He knew he had drunk a bit, but he was aware of what was going on. He didn't encourage anything, but he didn't go out of his way to discourage the attention he was receiving either.\n\nTrixie lent close to him and whispered in his ear, 'Are you enjoying the show?' \n\nCarl nodded, fascinated by the models as they strutted up and down the catwalk. Some were androgynous, some he felt had to be women he thought, despite what he had been told. They were so convincing. \n\nTrixie lent close again, 'Which one do you like best?' \n\nCarl felt so confused, he knew the models were male, but they looked so good. He gulped as one of the models wearing a silk blouse slashed open to the waist with a pair of harem pants, struck a pose at the end of the catwalk, flicked his hair and looked Carl straight in the eye. God, thought Carl, he looked so sexy. \n\nTrixie slid a hand back onto Carl's leg and felt him twitch at the touch. Carl was now almost hypnotised by the show and he began to feel a little hot. The music died away and as the show came to an end, they all stood to applaud as the models dragged Julia out onto the runway to share in the applause. Julia spotted Carl and motioned for him to join her backstage. Trixie came with him and they found Julia basking in the glow of the success of the show. She gave Carl a hug and introduced her to Trixie. Julia raised an eyebrow to Carl when Trixie looked away, but Carl choose not to react. \n\n'Have you seen Siobhan?' Julia asked.\n\n'I saw her disappear over there.' One of the assistants offered, waving his arm towards a small screened off area. Julia led them all over and she walked round the screen and they all followed. Carl assumed Siobhan was making up one of the models, and it was only when the model looked up at them he stared into Danny's sparkling blue eyes. \n\nCarl heard Trixie say something, but all Carl could think about was how beautiful his friend looked. Siobhan spoke first, 'Don't you think he looks great?'o fainting and covered his face with his hands. Julia said, 'Danny, you look wonderful, but I think we should all be getting ready to go home now.' She gestured to Carl that they should leave and with Trixie they moved away. Still stunned by what he had seen, Carl didn't know what to think. How on earth had Danny let Siobhan do that? He knew she could be mischievous. He knew how persuasive she could be, and he guessed that Danny would have been like putty in her hands. Carl knew Siobhan liked to play games with people and he knew she had set her sights on Danny\n\nDanny appeared after a few minutes with the makeup removed and his hair back in the familiar ponytail. He looked embarrassed and sat quietly in the car on the way back. When they arrived back at the apartment Danny scurried away to his room as Carl said goodnight to the girls. Carl made himself a drink and considered knocking on Danny's door to see if he wanted one, but he thought Danny might want to be on his own. \n\nDanny closed his door and threw himself on the bed. Why had he allowed Siobhan to do that to him? He had been so embarrassed when the others had come round the corner of the curtain. Carl would think he was such an idiot. He had to hope that he could laugh it off with Carl as a joke that went a bit too far. His mind drifted back to when Siobhan had let him see what she had done. He had expected to see a grotesque caricature in the mirror, lipstick on a gorilla he thought. Instead, he had almost fainted when Siobhan revealed the mirror. He could hardly believe how he looked, somehow his face had looked slimmer, his features smaller and, well, feminine. His eyes had sparkled, and he realised that Siobhan had been right - he could look pretty. He shuddered and thought, well that's not going to happen again.\n\nDanny finally fell asleep and dreamt of the school play once again. Dressed in his Juliet costume, he watched as Romeo slowly approached him, took him in his arms and kissed him, his tongue invading Danny's mouth. He felt powerless to resist as Romeo's hands pressed down on his shoulders and he fell to his knees as a huge cock emerged from Romeo's cod piece. Danny took it in his mouth and as he began to suck, the cock grew bigger and bigger until Danny could no longer keep it in his mouth. He let it slip out and looked up to see Carl staring wide eyed back down at him. Danny woke up choking and sweating. For the rest of the night he tossed and turned still disturbed by the dream.\n\nHe was relieved that Carl had already left for work before he emerged from his room. He left Carl a note asking if it would still alright for him move in. He prayed that Carl wouldn't hold the evening against him. Carl rang that evening and reassured Danny that he was welcome, and that he would help him out with the move next weekend. Danny let out a long sigh of relief, things seemed to be back on the straight and level.\n\nChapter Six\n\nThe following week Danny sorted out his belongings, using the opportunity to clear out a lot of what he no longer needed down to the charity shop. On Saturday, he and Carl loaded his remaining possessions into a small hire van and moved it all into Carl's place. As promised Carl had cleared out the storeroom and Danny set up his work desk and computer. He logged onto the wifi network and found to his relief everything seemed to work perfectly. \n\nThey ordered a takeaway that night and celebrated the move with a couple of bottles of red wine. Carl felt good about inviting Danny to share; the apartment had felt empty since Simone had left and it would be good to have someone around who made him laugh as much as Danny. He caught himself a couple of times looking into Danny's bright blue eyes and thinking how sweet Danny looked when he smiled. He shook off the feeling and deciding he had drunk enough, he said goodnight to Danny and took himself to bed.\n\nDanny stayed at the table for a while longer, thinking how lucky he had been to meet Carl and how well they were getting on. He liked Carl a lot; he had never had such a close male friend before and he thought they made a good pair. He thought himself more passive than Carl, who, although kind and gentle, seemed more assertive than Danny. Carl also seemed to be looking out for Danny which made him feel good.\n\nDanny had said that working from the flat, he would take responsibility for cleaning and would do the cooking in lieu of not paying rent. Danny enjoyed cooking, so it wouldn't be a big problem for him. Carl told him that wasn't necessary, but Danny could see that Carl was pleased about his offer.\n\nOn Sunday Danny spent putting the rest of his clothes away then invited Carl to the pub for a late lunch. They walked down to the river and sat watching the river for a while as they ate. Carl took a pull at his pint and quietly asked, 'Danny, were you OK with what Siobhan did at the show?'\n\n'Yes, I guess so. It was a bit of a laugh, she's persuasive, isn't she?' Carl laughed, 'Oh yes, she could charm water out of a rock I think. You know, she did one hell of a job on you. I couldn't believe what a change she made.'\n\n'I know, when she let me see myself in the mirror, I nearly passed out. For a second, I thought it was a trick somehow.' Danny giggled, 'Trixie had the hots for you, I remember.'\n\nCarl laughed, 'If I'd had a couple more drinks God knows what might have happened.'\n\nThey both laughed and finished their pints before heading back to the flat. Carl said he would be heading off on a business trip for a few days, so they both headed off to their rooms. \n\nEarly the next morning Danny heard Carl moving about, so he pulled on his dressing gown and headed to the kitchen. \n\n'Morning Carl, fancy a coffee and toast?' Shouted Danny to Carl through his bedroom door.\n\n'Great thanks,' shouted Carl back.\n\nCarl emerged from his room with a small suitcase just as the toast popped up and the coffee machine gurgled. Carl had on a beautifully cut, dark blue business suit with a white shirt and matching silk tie. Danny had never seen Carl in a business suit before, and he realised with a slight start that how good Carl looked in the suit.\n\n'I haven't seen that suit before, is it new? It looks great on you.'\n\nCarl looked pleased at the compliment, 'Yes, it's new, Armani.'\n\nDanny whistled, 'Very nice. Where are you off to?'\n\n'Bristol. It's not a bad place but the client's a cheapskate, I'll probably be in a cheap hotel and they will try to squeeze every penny out of the budget. Still, I'll be back Friday.'\n\nCarl's phone pinged, 'That's my uber outside, see you Thursday evening when I get back.'\n\nDanny watched as Carl wheeled his case down the hall, 'Have a good trip.' For some reason he couldn't fathom, Danny felt a pang as Carl closed the door behind him. Danny planned to work on a commission which he had to deliver later that day and he managed to finish it mid afternoon. He sat back in his chair, happy with what he had done, and as he sent it off to the client, the doorbell rang. He opened the door to find Siobhan standing there. \n\n'Hi Danny, how are you?'\n\nDanny hadn't seen her since the night of the show and he blushed, remembering what had happened then. 'Hi, Siobhan, I'm good thanks, come on in.'\n\nDanny made them both tea, and they sat at the kitchen table watching the rain which had started earlier pounding down outside. \n\n'About that night at the show,' started Danny, aiming to tell her that it had been a mistake, and that it had been a one-off, never to be repeated event. But, before he could say anything else, Siobhan interrupted him.\n\n'You're welcome Danny, next time we'll spend more time on it, but I wanted to talk to you about your design skills. Peta, the charity PR girl called me this morning. She heard you were a designer and wanted me to ask you if you might be interested in doing some work for them. Their designer quit recently and they're looking for someone else. They don't have much money but she said they could pay for any work.'",
        "Siobhan had wrong footed Danny; he completely forgot what he had been about to say.\n\n'Well, yes, of course I'd be interested. Business is getting better but anything would help.' \n\n'OK, I thought you might say that so I took the chance to set up a meeting with her on Thursday, if that's OK with you?'\n\nDanny nodded, 'That's fine. Thanks Siobhan, that's great.'\n\nSiobhan frowned, 'There's only one small thing, Danny. Peta is adamant that anyone who does work for the charity is involved in the TG community.'\n\n'Siobhan, that means I can't do it. Why on earth would she give me any work?'\n\nSiobhan smiled, 'That's OK because I told her you are about to come out as TG, and she said fine, but she had to see you dressed to make sure. I said that wouldn't be a problem.'\n\nDanny thought he would faint, 'You said what? Are you mad? I can't do that.'\n\nSiobhan looked calmly back at him. 'Sure you can, Danny. Didn't the other night prove that? You looked so good. You seemed to enjoy it.'\n\n'But, that was a one off, I couldn't possibly carry it off.'\n\n'Danny, think about it, you would get the chance to work with a high profile charity, that has got to be worth it to get you some publicity, surely?'\n\nDanny thought Siobhan had gone mad. How could he possibly do this? There was no way he would do it. Although she had a point, the publicity would be worth its weight in gold. \n\nSiobhan could see him wavering, and she knew she had to keep nudging him towards accepting the notion.\n\n'Danny, let me make you an offer. Let me help you to see what could be done, let me get you dressed and made up and if you still don't think it would work, I'll call it off with Peta. If you think you look OK, we can spend the next two days getting you prepared for the meeting. How does that sound? Surely it's worth a little time to see?'\n\nDanny dropped his head into his hands. It sounded madness, but what if she were right? Would it be worth trying?\n\nSiobhan pressed on, 'What's the worst that could happen if you did this? If Peta doesn't like your work, you've lost nothing, everything goes back to normal. If she does, then you'll have some work and the chance to get yourself some wonderful visibility. By the way, where's Carl?'\n\n'He's on a business trip, won't be back until Friday.' \n\n'OK, then, Julia's on a shoot all this week, I'm only booked for a couple of jobs this week, so it's just us two. That's karma surely, let's have dinner tonight upstairs in my flat and see if it would work.'\n\nDanny was still shaking his head when he heard a voice that sounded like his, say, 'OK.'\n\nChapter Seven\n\nHe must have decided about half a dozen times to call Siobhan to say he wouldn't go through it, only to pull back. He was still dithering at seven o'clock, the time they had agreed to meet. He grabbed a bottle of wine from the rack and walked up the stairs to the girls' flat. Why on earth was he doing this? He needed the work for sure, but deep down he knew something else was driving him on. Ever since he had confessed the Juliet story, he had been thinking more and more about how that made him feel. Somehow by sharing a memory that he had kept buried for years, a desire which had been quietly smouldering in his subconscious had turned into a small flickering flame. The night at the show had fanned the flame into a fire so that that when Siobhan had made her suggestion, his head wanted to say no, but his heart had said yes. Even as he knocked on the door he panicked, and his knees began to wobble.She answered the door and smiled broadly when she saw him. \n\n'Danny, don't look so scared, I'm not going to bite you, come on in.' He thought she looked beautiful in a long skirt and simple peasant blouse with her hair tumbling down over her shoulders. He sighed and forced himself to walk into the flat. \n\n'I've brought this,' he said, waving the bottle around. She kissed him on the cheek and took the bottle. \n\n'Thanks babe, let's go into the kitchen and open it up, you look as if you could do with a drink while I finish the cooking.'\n\nHe followed her into the kitchen, a stunning ultra minimalist affair, everything seems to be concealed behind cupboard doors and nothing on the worktops except around the cooker where Siobhan was cooking. Danny looked around, noticing the exquisite little touches that the designer had used. \n\n'It's fabulous,' he said as Siobhan poured him a glass of wine. \n\n'It cost a bloody fortune, but one of Julia's exes is a designer and she did it wholesale.'\n\nThey clinked glasses and Danny watched as Siobhan finished cooking what looked like spaghetti vongole. \n\n'Christ, you don't have a shellfish allergy do you? I always forget to ask.' \n\nDanny shook his head, 'No, I love shellfish.'\n\nThey ate in the kitchen. Siobhan, sending his nervousness, kept up a stream of chatter and saw that Danny began to relax a little. They finished the food and Siobhan packed everything away into the dishwasher and came to sit opposite Danny. \n\n'OK,' she smiled, 'one last chance for you to run away. No? Good, let's see what we have to work with.'\n\nDanny's heart now started to beat faster and he let out a big breath to try to calm himself down.\n\n'No need to get worried, babe. Nothing bad is going to happen, I promise. I think you're going to enjoy this. Now what I want you to do is to have a shower, shave yourself as closely as possible and wash your hair with the bottle of shampoo I've left in the shower. How much hair do you have on your body?'\n\n'Not much, I think, but does that matter?'\n\n'It might, depends on how much skin we end up showing. There's a pair of panties on the shelf in the shower room. Put those on when you've finished, there's a robe there as well. Come back out and we'll get started.'\n\nDanny was trembling by this time. Siobhan grabbed his hand and led him through the flat to the bathroom and gently pushed him through the door. He leant up against the door and managed to control his breathing enough to look around him. In one corner there was a big glass shower enclosure and a marble counter with two washbasins below a huge mirror all lit by concealed lighting. On the counter lay a razor and shaving cream right next to a pair of white lace panties. Danny let his hand run over the lace and he shivered as he felt the silk beneath his fingertips. \n\nHe pulled himself together and took off his shirt, trousers and underpants. He looked at himself in the mirror and turned sideways. He thought, not too bad, I guess. Flat stomach, no love handles at least. He took out the scrunchie holding his hair in its usual ponytail and stepped under the shower. He stood under the shower, the hot water helping him to relax as he washed his hair. He wrapped a small towel around his hair before shaving as closely as he could and using some moisturiser that Siobhan had left. \n\nDanny picked up the pair of panties from the counter, hesitated for a second before putting his feet into them and pulling them up his legs. Think of them as a pair of Speedos, he told himself. As they settled around his cock and balls, he closed his eyes and made a small noise in his throat, so sensual did they make him feel. No way, he thought, did these feel like a pair of Speedos. A robe hung from a hook also of silk and he loved the feeling as it slid over his skin. When he pulled the little belt tight, it fell to the top of his thighs and as he looked at himself in the mirror one last time, he wondered what he had let himself in for. \n\nWith his face red and feeling vulnerable, he walked out of the shower room to find Siobhan waiting with a glass of wine in her hand.\n\nShe thought he looked sweet in the robe which barely covered anything, his embarrassment obvious. She offered him the glass, 'Here, have this, I think it will help.'\n\nDanny took the glass and had a good sip. 'Thanks, I'm so nervous about this.'\n\n'No need, babe,' she said as she took his hand and led him through to the bedroom. A large dressing table stood along the wall with lighting either side of a large mirror which had been covered with a towel. The table was covered with neatly arranged boxes of cosmetics, brushes, pads, tissues, and makeup. Siobhan stopped me in the middle of the room. 'OK, Danny, time to take off the robe.'\n\nHis fingers were shaking as he undid the belt and let the robe slip off his shoulders. Siobhan looked him up and down and smiled, 'Very nice, Danny. I think we have something to work with. You've got lovely legs and you have a nicely toned upper body, your hips are quite wide and your shoulders aren't too big, You'll do, I think.'\n\n'Swimming,' he mumbled, 'that's what does it.'\n\nShe laughed, 'I bet you look as good in Speedos as you do in those panties.'\n\nDanny blushed crimson, he had forgotten about the panties. \n\n'Bless you, Danny, there's no need to be shy with me.' Easy for her to say, he thought. 'Well, the good news is that I don't think you have enough hair to worry about tonight, but I would like you to shave your legs before we meet with Peta. It will make you feel more feminine. Let's sort your hair out first.' \n\nShe pushed him down onto a chair and pulled off the towel wrapped around his wet hair. She ran her fingers through the hair a few times before saying, 'Hair isn't my speciality so for tonight I'll keep it simple, but for the meeting we'll try something a bit more stylish.'\n\nDanny felt Siobhan too presumptuous in assuming that he would go through with everything, but he felt too nervous to protest. He had already begun to feel a thrill about being in this position and he could feel his cock beginning to stir in its little lace prison. No, he thought, please don't let me down now, but he felt himself getting harder and he tried everything the could think of to calm down, but nothing seemed to work. He could only hope Siobhan wouldn't notice. \n\nDrying Danny's hair, Siobhan knew it wouldn't be perfect, but she thought she could make something decent out of it. Luckily, Danny had kept his hair conditioned, and in good shape for a man. She noticed him squirming in the chair and guessed that he was getting excited. Men, she thought, are merely slaves to their cocks. Wasn't it Socrates who had said that having a penis was like being chained to a madman. The only cock she had any interest in these days was the big black one that Julia strapped on to fuck her with. That cock didn't worry about how big or small it was, didn't start asking if it was better than all the other cocks she'd ever had and stayed hard forever. She had long concluded that men could never free themselves from their egos long enough to love anyone fully. \n\nShe loved it when Julia finally penetrated her after a long and erotic session of foreplay; a culmination of their mutual love in place of the act of domination and control it seemed to be for most men. After they both climaxed they would lay and kiss and cuddle, the cock sometimes still inside her, in a way that men could never emulate. She had reciprocated at times, fucking Julia with it, but she didn't get the same enjoyment as Julia seemed to experience. They were happy that way; Julia had always been the dominant personality, seducing Siobhan in the first place and taking the lead in their love making. \n\nDanny's struggle with his particular madman confirmed for her that she had been right about him all along. From the first night when he had confessed about Juliet, she had seen something in his eyes that told her he had buried something deep that was yearning to come out. The show had been pure coincidence, but Siobhan had wondered how far she could push Danny. Now, she thought she might be able to take him all the way, to help him experience what he clearly felt inside. She had also wondered about Carl and Danny, there seemed to be something between them, even if they didn't realise it themselves. \n\nShe finished drying and styling his hair. Not a bad job, she thought as she fussed a bit with it. She would love to see it styled properly and thought she could call in a favour or two from one of the hairdressers she knew on the circuit. \n\n'OK, Danny, let's get you made up. I'm going to do something for daytime, as if you are going to meet Peta for your business meeting. I think we want to take attention away from your chin and nose. You have a nice shape to your face, not at all masculine.'\n\nDanny pulled a face. \n\n'Don't pout, it doesn't suit you. I'm going to use concealer for the beard areas, although you don't seem to show too much there, it will help. Some foundation, blusher and maybe highlighter to accentuate your cheekbones, which are lovely by the way. Then, I'm going to bring out those gorgeous eyes of yours with some delicate eyeshadow, nothing too fierce, and then some mascara to highlight your eyes. Then we'll finish off with some lipstick. With your colouring and eye colour, I think you could be more adventurous, but for now let's keep it simple. You liked what I did at the show, didn't you?'\n\nHe nodded, his mouth so dry he couldn't answer her.\n\n'OK, we're going to do something similar, but I want you to watch and remember what I'm doing. You'll be doing this yourself soon, so pay attention.' \n\nDanny heard Siobhan saying something, but it didn't make any sense. He had fallen almost in a trance, and her words hit his ears as a jumble of sounds. But he knew he needed to ask her something before they went on. 'Siobhan, why are you doing this?' \n\nShe stopped talking and looked down at him. He looked to her like a scared child, his eyes wide, wanting to ask a question but not wanting to hear the answer.\n\n'Danny,' she said gently, 'if you don't want to go through with this, all you have to do is tell me. It would be our secret. Nobody else will ever know.'\n\n'No, I understand that, but why are you doing this?'\n\nShe sighed, 'I like you Danny. I think you are one of the nicest people I have met in a long time, and I think I can help you. Not only with your work, but with something I believe you want, or need, to do deep down inside. I want to give you your chance to see what that feels like.' She paused, but as he didn't say anything, she went on. 'Honestly, babe, if you want me to stop, tell me and we'll go no further.'\n\nThis is it, thought Danny, all I have to do is stand up, and it's over. But, if I don't, then God knows what will happen. \n\nHe paused for a second, a voice in his head screaming at him to leave, before shaking his head, 'No, no, let's go on.'\n\nSiobhan smiled, 'OK, babe, onwards and upwards.' She pulled a plastic smock around him and fastened it the neck. The cold plastic made him shiver as it slid across his skin. She pulled his hair back carefully with a makeup band and sat down opposite him. \n\nShe worked carefully, this was makeup 101 for her, but she talked to Danny though the whole process, telling him exactly what she was doing and why. Siobhan reasoned that if he knew what was happening, then he would calm down a little, and she did want him to be able to do this by himself. Nothing she would do tonight would be irreversible, so she wouldn't pluck his eyebrows for now, but if he did go for it, there were some changes she would love to make that he couldn't hide so easily. \n\nShe took her time, making sure that Danny understood each step. She could sense him relax at last, his breathing had slowed down, his eyes followed her every move, and he began to ask questions, which had to be a good sign. She smiled to herself as she thought that she had been right all along, there was something inside Danny that she would help to release. \n\nDanny became entranced by what Siobhan was doing to him. She explained everything patiently and carefully and although she said he could do this himself he thought he could never imagine him doing this. He began to ask her questions as she worked and he began to like this feeling of being pampered. Siobhan eventually announced herself happy with the makeup and it was time to move on. She unclipped the cape and asked him to stand up. Siobhan had covered the mirrors in the room so he couldn't see what she had done yet, but his tongue slipped along his lips and he could taste and feel the lip gloss she had used. It felt odd, but not unpleasant. He wondered what it would be like to kiss someone wearing lipstick. God, he thought, where did that come from? He wasn't going to be doing that for sure.\n\nSiobhan had laid out three dresses earlier that she thought might suit him; a two piece suit in coral pink, a dark blue dress with a contrasting loose jacket, and a dark skirt and white blouse combo. As a professional clothes horse, Julia always had clothes from modelling assignments and there were dozens of outfits that she could have chosen. She thought that these would also be closest to fitting Danny. All of them were a little demure, but she thought that would be safer for him to start with. \n\n'OK, Danny, firstly, let's get you into some stockings. I guess you know how to put these on from your Juliet days.' she said.\n\nHe nodded, struck dumb by the thought of what was to come. Siobhan handed him a packet saying, 'These are holdups, I hate tights personally, these are much more exciting, don't you think?'\n\nDanny swallowed, recalling how much he loved to see Jess in stockings, but she used to wear a suspender belt as well. He sat on the edge of the chair and took each stocking as Siobhan handed the to him. He remembered he had to roll them into a doughnut shape and then pull them up his leg. The feeling of the nylon sliding up his leg nearly undid him, but he managed to get both on without disgracing himself. Siobhan watched him, smiling as she realised how he felt. The more it excited him, she thought, the more he would go on. She had him stand up and the stockings, as they always did, enhanced his legs and made them look longer. \n\n'Now for your bra,' she announced, having concealed it behind her back for a moment.\n\n'Oh,' he stuttered, 'Do we have to, I mean, can't we do without?'\n\nSiobhan fixed him with her eyes. She had known he was quite submissive, he would hardly have gone this far if he wasn't. 'Yes, Danny, I want you to wear it. It will help you to feel like a woman, and if you feel feminine, then it will be easier to act like it.'\n\nDanny took the offered wispy piece of material, which matched the panties. By the way he looked at it he obviously didn't know how to put it on.\n\n'Put in back to front and then swivel it round and put you arms through the straps.' Siobhan told him.\n\nWith trembling fingers, Danny managed to put it on and get it the right way round. He felt the bra tighten across his chest and the straps across his shoulders. He shivered, but he thought it felt so erotic. \n\n'But I have nothing to put in it.' he whimpered.\n\n'Look use these for now, I'll sort something else out for when we see Peta.' She handed him some tissues, and they managed to fill the bra out, although it looked odd. A surge of emotions flooded through Danny as he stood there in the lingerie and stockings. It felt so exciting to be dressed like this and he felt his movements change somehow, more fluid, softer, gentler, less masculine, more feminine. His eyes sparkled as he turned to Siobhan. \n\n'I feel so different, it's incredible.'\n\nShe smiled, 'Welcome to femininity, Danny. Be careful it's addictive.'\n\nShe picked up the three outfits and held them up against Danny. She finally chose the dress, it would suit his colour best she thought. She unzipped the back and bunched it up in her hands and slipped it over Danny's head. It slid down over his shoulders and he wiggled as it fell done to his knees. She quickly zipped it up and although it hung a little loose and tad too long, she could get it tailored for him the next day. She knew this would be the one for him to wear to the interview. ",
        "She had him turn round and made a few adjustments to the dress and his hair before standing back and looking him up and down.\n\n'I do declare that my new girlfriend is ready to see herself.'\n\nDanny felt himself blush at the words, but he felt a delicious tingle at the same time. He surprised himself to be so excited and impatient to see what he looked like. Siobhan led him across to the full-length mirror and paused before she took away the sheet hanging over it.\n\n'OK, Danny my girl, remember our agreement, if this looks good, you will go to the interview, right?'\n\nDanny couldn't quite remember making that firm an agreement, but he had become too excited and nervous he would agree to anything.\n\n'Sure, I mean, yes.' he blurted out.\n\n'Shoes,' shouted Siobhan making Danny jump. 'I forgot shoes.' She opened a cupboard door to reveal racks of shoes floor to ceiling. She grabbed a pair and asked Danny to sit down. 'I'm guessing you're not too different from Julia, she has large feet, but don't tell her I said so.' She had picked out a pair of black ankle boots with a solid heel which should be easier for him to begin with. She took his foot and slid it into the boot. It seemed to fit, so she slipped the other one on as well. \n\n'Let's see if you can stand up, be careful it might feel awkward to start with.' She held his hand as he stood up, and then almost fell over as she let go of his hand. \n\n'God, it's like learning to ride a bike all over again.'\n\n'But these will make you feel much nicer than a bike, believe me.'\n\nStill wobbling she led him to the mirror and this time she asked him to close his eyes. A few seconds later she said, 'You can open them now.'\n\nHe hesitated, fearful of what he might see. He opened one eye a fraction and then both snapped open as he saw his reflection. He stood there unable to speak at first, his eyes darting from one point to another. It had to be him as the figure moved when he did, but he looked like someone else entirely. Reflected in the mirror appeared to be a woman in a dress and makeup, her hair in an unmistakably feminine style, her legs encased in shimmering nylon and a pair of dainty boots on her feet. His hand darted to his face as he saw how his eyes stood out in a way he could never have imagined. \n\n'Oh my God, Siobhan, how did you do this, I can't believe it.'\n\n'I only enhanced what's there, Danny, this is you, absolutely all you.' He turned to look at her, his eyes glistening, almost on the brink of tears.\n\n'Do you like it?' she said.\n\n'Oh yes, I do, but it's still hard to believe.'\n\nHe turned from side to side, entranced by what he saw. Siobhan smiled as she watched, she pictured a butterfly emerging from its chrysalis, unfolding it's multi coloured wings and turning into a beautiful new creature.\n\n'So, Danny. Will you be going to the interview?'\n\nDanny looked at her with wide eyes, still in shock from what he had seen. 'Do you honestly think I can?'\n\nSiobhan came and stood beside Danny, put her arms around him and said, 'On my life, Danny, sure you can.'\n\nDanny's mind reeled, never in his wildest dreams would he have thought he would look, or feel like this. That flame which had been lit inside him had become a bonfire, overwhelming him with the emotions it was creating. \n\nHe turned to Siobhan, his eyes shining, 'Yes, I will, if you'll help me.'\n\n'Of course, I will, Danny. Let's call that enough for today, shall we? The last thing we need to do is teach you how to clean off your make up. It's fun to put it on and wear it, but it's even more important to take it off properly and to moisturise your skin.'\n\nSiobhan patiently took Danny through how to cleanse his make up fully and to apply moisturiser. She packed him off to his apartment with instructions to have a proper bath and shave closely, not just his face this time but his legs and chest as well, ready for the next morning.\n\nDanny was still in a daze as he went back to his apartment and fell into his bed. He lay awake for while, thinking of what he had felt as Siobhan had dressed him and his fingers inevitably fund their way to his cock which stiffened as soon as he touched it. A few seconds later his climax burst from him in a way that he had not experienced for a very long time.\n\nChapter Eight\n\nThe next morning Danny walked up to Siobhan's apartment, his heart pounding not with trepidation this time, but with anticipation. Siobhan opened the door and ushered him inside. She stroked his face with her fingers. 'Mmm, feels smooth, did you do the rest as well?'\n\nHe nodded, 'Yes, but here wasn't much there to be honest.'\n\n'Trust me Danny, you'll feel the difference shortly. I want you to put on what i've laid out for you and I'll see you back out here when you're done.'\n\nHe went into the dressing room and found a new set of underwear, fresh stockings and a new dress this time on canary yellow. His fingers began to tremble as he pulled the panties up over his legs and he closed his eyes when they reached the top and cradled his cock and balls. He pulled the stockings from their packet, this time they were white and he quickly rolled one and began to slide it up his leg. The sensation as it slid across his newly shaved skin was almost more than he could bear. He moaned out loud as he pulled the second one on and had to steady himself as his legs turned to jelly. \n\nHe gathered himself together and managed to fit the bra, and after adjusting it he also managed to slip the dress over his head with only a little difficulty. He realised he didn't have any tissues to stuff the bra and was about to come out of the dressing room when he heard the bell ring. \n\n'Shit,' he thought, 'Don't tell me she's got visitors. They can't see me like this.'\n\nHe heard the door close and then Siobhan called out, 'Are you ready yet?'\n\nHe squeezed open the door and whispered, 'Is there anyone there?'\n\n'No, you fool, it was a delivery.'\n\n'Oh, OK, I'm coming out.'\n\nYou sure are, thought Siobhan.\n\nHe emerged from the room, looking shy, but Siobhan thought he looked sweet in the brightly coloured dress. \n\n'I have a surprise for you, Danny. Close your eyes and hold out your hands.'\n\nHe did as she asked and he felt something heavy and wobbly drop into his hands.\n\n'Open your eyes now.'\n\nHe looked down to see he was holding see flesh coloured objects. He looked quizzically at Siobhan.\n\n'Look, you couldn't be wearing a bra stuffed with tissues all the time could you? They're breast forms, good ones too. I had them overnight delivery.'\n\nHe suddenly felt a little afraid, this sounded a lot more serious. 'Don't look so scared, Danny. They are fixed with some adhesive which holds them in place but they come off quite easily. You'll love them.'\n\nHe wasn't convinced, but he had trusted Siobhan this far, so he said, 'OK. But can I try them without the glue first?'\n\nShe grinned, 'OK, scaredy cat.'\n\nHe took the dress off, and Siobhan slipped them into the bra cups and he immediately felt the extra weight tug on the straps and he had to lean slightly backwards to compensate. \n\n'Wow, they're heavy.' he said.\n\n'Not everything about being a woman is grand, Danny.'\n\nShe helped him put the dress back on and smoothed down everything. He looked down to see two mounds protruding from his chest. He couldn't help but put his hands up to them and jiggle them around. Siobhan snorted, 'It's better when someone else does that, you know.'\n\nDanny went bright pink and thought, well no-one is ever going to touch these. Siobhan guessed what he was thinking and smiled to herself.\n\nSiobhan said, 'I have a job today. It won't take long, it's a film star, she always asks for me when she's in town for interviews. It's good money, but she fancies me, so I have to flirt with her. I think she would run miles if I went any further, but I get a better tip if I let her stroke my leg a bit. I'm going to do your make up, and I'll video as I do it. Whilst I'm gone I want you to clean it off, watch the video and try it. Don't worry if it goes wrong, clean it off and do it again. I've put a pair of shoes out with a higher heel, I want you to practise in those as well. I think you'll cope after how well you did yesterday.'\n\nSiobhan set up a small camera so that she could film the makeup for Danny as well and record what she was saying. Danny was now enjoying the whole makeup ritual and especially how it made him look and feel when it was finished. He didn't think he would get tired of seeing the transformation into his new persona. The feeling of lipstick on his lips, the sight of his eyes coloured and with mascara on his eyelids, it all entranced him. He wasn't exactly sure why Siobhan insisted he learnt to do it himself, but he was so in love with what he did, he went along with it. She finished, showed Danny how to view the film and gave him his new shoes before she left, promising to be back in a couple of hours. Danny decided to try the shoes first before redoing his makeup. The shoes fitted well enough, but they were higher than the ones he had worn yesterday, so he had to hold onto the wall to steady himself as he tried to stand up. Shit, he thought, I'm going to break my ankles on these. How the hell do women walk in these. They obviously did, he reasoned, so if they can, he could.\n\nHe found with the extra height on the heels and the weight of his new breasts, he had to adjust his posture. The breasts pulled him forwards a little, and the heels made him stand up straighter and forced him to walk on his toes more. Gradually he gained confidence, and by taking shorter steps and putting one foot in front of another he was able to walk a few steps without feeling like Bambi on ice. About an hour later he thought that's enough, I'll try that again later. What he had loved was the feeling of his stockinged legs rubbing against each other as he walked. He thought he would set up the camera and have a go at his makeup.\n\nHe managed one go at it and it was a disaster, nothing was straight and everything looked as if it had been put on with a trowel. Patiently, he cleaned it off and tried again. Better this time, not great but a big improvement. He sighed and did it all over again, pausing the film at different spots to catch up on what Siobhan was saying. By the end of the third go, he was tired but much happier with the result. He glanced at the clock and was surprised to see it was nearly three hours since Siobhan had left. He thought he would practice in the heels once more and this time, he was walking a lot more confidently. He tried a few turns which went well enough, so he was feeling pretty pleased with himself. \n\nThe bell went and Danny thought, that's strange, Siobhan must have forgotten her key. He thought he would surprise her with his skill in the heels so he walked over to the door and opened it to find a young man standing there. \n\n'Hello, Miss, I've come to service your boiler.' he waved an ID card under Danny's nose.\n\nNot for the first time in the last few days, Danny thought he would faint.\n\n'Er, OK.'\n\n'Don't worry Miss, I know where it is. I've done this one before. Make us a cup of tea will you love? I'm parched. Haven't had a cup for hours.'\n\nHe moved past her into the flat and all Danny could do was close the door and totter off after him.\n\n'Where's the redhead girl lives here? Irish name, can't remember it myself. You a friend?'\n\nDanny nodded and started opening cupboards at random to find a kettle and mugs. \n\n\"I'm Sam, by the way, pleased to meet you. You're...'\n\n'Oh, Danny,' Danny tried to soften his voice as much as he could, but he thought it sounded odd. \n\n'Kettles over there in that cupboard, Danny, told you i've been here before. Have you got a cold? You sound a bit throaty.'\n\nHe must think my voice sounds like I'm ill, thought Danny.\n\n'Er, yeah, bad cold, just getting over it.' Danny faked a cough. \n\n'Two sugars please Danny, and milk.'\n\nDann had finally found the mugs and the sugar and plugged the kettle in. He needed a stronger drink than tea but that would have to do for now. Sam was laying out sheets to protect the work tops and wouldn't stop talking, but most importantly, he didn't seem to notice anything strange about Danny.\n\n'What do you do Danny?' Sam now had the boiler panel off and was digging around inside. \n\n'Graphic designer, books and magazines.' Danny was getting a bit more confident now as Sam had not yet screamed that he was a bloke dressed in women's' clothes. \n\n'Nice, anything I might have seen?' Sam took the tea from Danny and stirred the sugar into it. \n\n'Woman's stuff mostly, so probably not.'\n\n'My girl reads all that stuff, Vogue is it?'\n\n'Yes that's right.'\n\nSuddenly Sam seemed to be looking at him more closely than when he first came in and Danny's heart sank, thinking he had been made.\n\n'Look Miss, I hope you don't mind me saying something personal. ' Oh God here it comes, thought Danny. Please, please don't make too much of a fuss. \n\nSam went on without waiting for an answer. 'You have the most beautiful eyes I have seen in a long time. You should be a model, I say, just like that other girl here, Jools, I think it is.'\n\n'Well said, I agree.' Siobhan's voice made them both jump. 'You left the door on the latch, happens sometimes if you don't close it properly. Sorry for being late, I had to do some extras for the client.' She saw the look on Danny's face, 'No, not like that you dirty minded minx.' She turned to Sam who appeared to be finishing and packing his gear up.\n\n'Has Danny been looking after you alright?'\n\n'Yeah no problem Miss, but she should take care of that cold she's got.'\n\nSiobhan looked puzzled and glanced at Danny who coughed theatrically. She laughed realising what had happened. 'Oh yes, I'll make sure she rubs something on her chest.'\n\nDanny glared at her but Sam laughed. 'Good one, Miss.' He was still laughing as he went out the door. \n\nDanny collapsed onto a chair and Siobhan was trying and failing to stop laughing. 'I'm so sorry, Danny, didn't you get my texts?'\n\nDanny slapped his forehead. 'Damn, I must have left my phone downstairs this morning.'\n\n'That's your first official blonde moment.'\n\nDanny laughed, 'Honestly, I thought I would wet myself when I opened the door thinking it was you, and laughing boy stood there. God, I need a drink, and not more tea.'\n\nSiobhan opened a bottle of wine and poured them a glass each. 'Well I have to say, you did pretty well for your first unscheduled public performance. Sam seemed very struck with you.'\n\n'Probably left his glasses in the van,' giggled Danny.\n\nThey touched glasses and Siobhan looked at Danny closely, 'I thought I asked you to redo your makeup?'\n\n'I did, this is the third attempt.'\n\nSiobhan raised an eyebrow, 'You're not telling your Aunty Siobhan any little white lies are you?'\n\n'No, honestly, you can check the waste bin for the cleaning pads, I must have used a year's supply.'\n\n'I'm impressed my padawan. You have learnt well.'\n\nDanny giggled, 'All thanks to my Jedi Master.'\n\n'And don't you forget it. Now how about the walking?'\n\nDanny stood up and walked up and down a few times. 'Good, good, Danny, we'll tackle stairs tomorrow.'\n\n'Why were you late back?'\n\nSiobhan sighed, 'Sorry about that. First of all she was late. Something, or someone had put the moody cow in a foul temper. She was shouting at everyone, me included. I don't mind, comes with the territory. She tried it on with me as usual. \"Come closer, what lovely legs you have, can i just touch them? Oh your hair is so nice, it would look lovely on my pillow.\" And on, and on. She grabbed my bum this time as well, which I wasn't keen on. She then said she didn't like what I had done and made me redo it. She made me wait around until she had finished the interviews and then stormed back in because someone had asked her if roles were getting more difficult to get at her age. She knew she'd pissed me off, so she gave me an extra big tip, or at least made her poor bloody P.A. give it to me. She insisted on giving me a goodbye kiss on the lips as I left. Still, it pays the rent.'\n\nDanny was laughing hard by the time she finished. \n\n'OK, OK, it is kind of funny. But now I get my own back, I'm going to do your eyebrows.'\n\nDanny stopped laughing. 'Do you have to? It sounds painful.'\n\n'Danny, Cara Delevigne can get away with it, but you can't. I will thin them out a little and maybe give them some shape. It won't be radical. I promise.'\n\nDanny was right, it was painful, but only for a few seconds each time. When Siobhan let him see, he liked what she had done. They were thinner than before, and a gentle shape to them made all the difference. \n\n'See, you should trust me. Now for something nice, I'm going to do your nails. This is one thing that will make you feel so much better. Nails are important, if they're done well, they tell everyone a lot about you, and the colour you choose gives its own signals as well. I'm going to complement the colour of the lipstick I want you to wear, there's a MAC lip colour which will be perfect for you. So, I think we'll stick with MAC, how about this? Impassioned.'\n\nSiobhan showed Danny the colour and he nodded, he would have done anything she suggested right now, he was so completely under her spell. He was entranced as she cleaned up his nails, they weren't long but just tidying them up made them look better. It was when Siobhan started to brush on the colour that Danny began to feel a tingle of pleasure in what she was doing. To see his nails transformed by the colour was almost magical to him. \n\nHe didn't comprehend what was happening to him, but he felt so different now. He was being swept away by emotions and feelings that were now bursting to the surface from where they had lain sleeping until Siobhan had woken them. He stared at his nails, the most visible element of his transition that he could see, and he knew he wanted this to go on and on. He wondered how he would feel about having to go back to being Danny again after this was over, but that was for another day. Tonight, he reveled in what was happening to him.\n\nAs his nails dried, Siobhan suggested they order a takeaway for tonight. Danny readily agreed, he hadn't eaten since breakfast and that was just toast. The agreed on Chinese, so Siobhan rang the order and she opened another bottle of wine. She made Danny open the door when the delivery arrived, and to his great surprise he got a lovely smile from the delivery boy. \n\n'I'll have to keep an eye on you, my girl, the boys like you.'\n\nDanny laughed, but he felt a tremor run through him at Siobhan's words. They had a lovely girly evening as Siobhan called it, and danny felt himself slipping further and further into this new persona. It was becoming harder and harder for him to think about being Danny. Whoever this new person was, he knew he liked it more with every passing second. The evening had to come to an end and as Danny cleaned off his makeup, he knew he couldn't wait for the next day to come.\n\nChapter Nine\n\nWednesday passed in a blur for Danny. Siobhan made him put on his makeup without the film to help him. He did it once and then she made him do it again before she accepted he could do the basics without making a mess of it. Secretly he had impressed her, he wanted to get it right, and she thought his design sense gave him an interest in getting it right.\n\nThe rest of the day involved more and more practise; walking, sitting, and how women behave and act differently from men. Siobhan had never thought too hard about what she did naturally, so it came as a challenge when she had to teach Danny. He learnt quickly, but it would take more than a couple of days to train out his male habits. At the end of the day, he could at least walk in the heels, sit properly, and move and behave more like a woman. She thought he might be able to carry it off if he didn't panic too much, and she would be with him. Wednesday evening arrived and as they shared a glass of wine, Siobhan said, 'Right, it's graduation time for you. We're going out tonight for dinner.'"
    ],
    "authorname": "nikkiesilk",
    "tags": [
        "crossdressing",
        "sweet",
        "sentimental",
        "lingerie",
        "trans"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/breaking-up-and-making-up"
}