{
    "title": "Venturer Ch. 02",
    "pages": [
        "Authors Note: This is the second part of a story and as such may be difficult to follow the story line if you have not read the first part. To those people who liked the first part thank you so much for your encouragement to continue the story. This story has been resubmitted, due some overwhelming feeding, with some thorough copy-editing by LaRascasse, thank you for your help and your friendship. ~ellie. \n\n........................\n\nTwice during the short night, she had woken in terror and struggled in his arms. Each time he had held her tightly comforting her, his calm voice reassuring her that no one would harm her again. Nuzzling and petting her until she slept once more, it took more will power than he knew he possessed not to take her each time she woke and his hands travelled over her lithe, supple body soothing her fears. \n\nPale light filtered into the room through the small windows as the sun rose and Honey murmured sleepily when Kade reluctantly pulled his arms from her body. \"Oh the things I want to do to you, my Honey.\" He thought as he leaned over and kissed her neck before rolling carefully from the bed not wanting to wake her fully. He gazed down on her small form as she slept and wondered at the dreams that terrorised her sleep. He penned a quick note at the desk in the sitting room, left it on the pillow beside her and bent to kiss her a last time. He smiled, so pleased to have her here where he could watch over her but there was much to accomplish so they could be wed as soon as possible. The season of frost was fast approaching making travel arduous.\n\nGreeting the guard, Leneer, as he left the room, Kade told him of his plans for the day in case he was needed and hurried down to the small study he had taken for his office. Spending time penning several missives, he then went down to the dining room and finding three men he trusted sent them to deliver the dispatches with all speed before sitting next to the bleary eyed Jarrau. \"I didn't expect to see you this fine morning, my friend. The bar wenches in this town not to your liking?\"\n\nJarrau gave him a withering look, \"Didn't want to miss the fireworks here.\" He shrugged. \n\nKade helped himself to the food that was piled on platters on the table and ate heartily. \"Well you're alive,\" Jarrau murmured holding his head, \"Should I go check on the lady?\"\n\nKade gave his friend an uncharacteristically wide smile, \"She is quite well and unharmed I assure you.\"\n\nTaking a large gulp of watered wine, Jarrau looked at him dubiously and sat up straighter, \"Well, well, did you gag her so your men, meaning me, wouldn't hear the screams and come to rescue the damsel?\"\n\n\"How else could I get her to listen to me?\" Kade smirked at his friend. \"Plans today?\"\n\n\"Well since you children behaved last night, I need to go and let Alec know Lady Honiara is well and let him know he can come and visit.\" He could see his friend's shoulders become rigid as he said the last. \"You're not really intending to take her only friends from her are you?\"\n\n\"She will make new ones,\" Kade grumbled.\n\n\"She will hate you for it and it is because I am your friend I say this: You are an arrogant selfish prick at times.\" Jarrau took a breath and tried reason, \"You will break that girl's spirit locking her away from the world like her father did. If you care about her at all, you will let them in when I bring them this evening.\"\n\nKade sat stony faced, the comparison to her father rocking him to his core, \"She is finally here with me. I want her to smile at me the way she smiles at them.\" He was sullen. \"How do you expect me to share her,\" he paused before adding, \"with anyone that could take her and those smiles from me?\"\n\n\"Yes she is here, but willingly? You have made her a prisoner. She thought you were going to throw her in a dungeon, you ass.\" Jarrau shook his head, \"Show her you care that she is happy here let her see her friends. Maybe she will be more accepting.\" He had known Kade since he was a child. In battle there was no one better, cool clearheaded, ice cold but he also knew that this girl stirred deep passions in Kade that made him irrational, hot headed and far more dangerous.\n\nKade could not bear the thought of Honey running again and those friends would help her if she asked. He knew the odds of her staying with him were not in his favour yet but the words of his oldest friend had stung him. \"Fine\" He growled reluctantly, \"But if she runs, I will hold you responsible and you can look forward to another season of frost travelling cold roads to find her.\"\n\n\"Good, 'cause I told her that if she gave me a night of peace I would bring them. Now I don't have to look like as bigger prick as you by not honouring my words.\" He grinned at his friend, a glint in his eyes as he leaned over and teased, \"She likes me, you know? Not that we can blame her. No woman can resist my charm and wit and I think this news might just get me one of those smiles your envious of. Want to come and watch?\"\n\n\"Don't trip over your ego on the stairs my OLD friend.\" Kade said drolly. \"You will ride after her if she runs with or without a broken leg.\"\n\nJarrau got up from the table feeling better as the watered wine settled his stomach and cleared his head. He chuckled, \"I guess you're not coming then.\" And laughing loudly he strolled off making the other knights look in their direction.\n\nKade smirked, his friend was incorrigible, but he always made him see things from a different view always. He was one of the few people who not afraid to call him an arrogant prick. He loved him as a brother and trusted his opinion. Grudgingly, he admitted to himself that seeing Alec and people of the troupe would make her happy. He wanted her to be happy. His thoughts went dark, 'It was just that I want to be the one to make her happy.' He shook his head sadly knowing it would take time and patience but he had a plan and he needed to start putting things in place. With that thought he left the house and walked out into the town. \n\n......................................\n\nHoney stayed in the bed long after she had woken alone, unwilling to get up and explore her prison. Rolling to her back she noticed the silk scarf still tied to the bed post and tilted her head. It felt like a dream now when she closed her eyes and remembered the feeling of his tongue on her sex. She rubbed her thighs together as she felt her arousal stir thinking of the delicious feelings he gave her. Lifting her hands above her head as she relived the moment, she found the note from Kade.\n\n\"Good Morning Mine,\n\nRegrettably I have business that must be attended to this morning and have had to leave before you woke. Your day will be busy so eat well and replenish your strength, please. Should you need anything at all please ask Delenn or Leneer who is stationed at your door and they will see it is delivered. I will return to you this evening. \n\nKade\"\n\nHoney could hear Delenn quietly moving around the sitting room. Eventually, the smell of food drove her from the bed. She padded out to the sitting room and flopped into a chair at the table holding breakfast. She dwelt on the note, his calling her 'mine' made her feel as trapped as the knowledge that one of his men stood guard at her door.\n\nShe nibbled at the food, the fresh fruit and cheese waking her tastebuds but she found her stomach rebelling after barely eating since Kade and his men had joined their journey to the town. There was a knock at the door and she looked down with dismay realising she had not brought her pack with her and had no clothes to change into. \"Delenn, did Sir Kade leave any clothes for me to change into?\"\n\n\"No Mil...\" she looked around before continuing \"...Honey. Just the night gown and a house cloak.\" \n\n\"Of course not,\" She thought sullenly, \"It's not like prisoners can leave their dungeons.\" Feeling antagonistic she asked for the cloak. Putting it on she walked to the door to her rooms and reefed it open suddenly startling the young guard outside who was talking with Jarrau.\n\n\"Good morning, Lady Honiara.\" They said almost in unison.\n\nShe realised her clothes were making the young guard blush as he looked anywhere but at her. Taking pity on him, she returned to the room, murmuring a soft reply, \"Good morning Sirs.\" \n\nJarrau followed her into the room as she sat and began eating again. His eyes scanned the room for signs of trouble from the night before as he sat with her at her request. \"Dungeon food is pretty good,\" she smiled \"Help yourself, Sir Jarrau.\"\n\nHe laughed easily at her words, \"Seems you were a good girl last night. I don't see any signs of a fight and my big brooding friend was actually smiling when I saw him earlier.\"\n\nHoney looked up in surprise but recovered quickly as she eagerly asked, \"You will bring my friends to see me?\" A big smile crept over her face as he nodded popping a berry into his mouth. \n\n\"No wonder Kade was envious of those smiles. They light up her whole face.\" Jarrau thought.\n\nDelenn cleared her throat and Honey turned the girl, \"You have a visitor, Milady.\" \n\n\"I shall leave you and go find your friends to let them know you are safe and well and that they can come and see for themselves.\" Jarrau winked and stood as an older man in the green robes of a physician entered the apartment. Raising an eyebrow at the man, Jarrau turned back to Honey, \"You are well, aren't you?\"\n\n\"Yes, I am fine.\" She replied her confusion at the appearance of a physician evident on her face.\n\n\"Don't get up, don't get up.\" The old physician shuffled toward the table, \"A good breakfast is important. Keep eating young lady.\" She looked at the man in astonishment as he sat in the chair recently vacated by Jarrau and then back up at the disappearing back of Jarrau. The physician continued \"Eat. Eat, while I look over my notes. Lord Venturin asked me to come see you for... Ah yes you were mistreated by a hostile duke. I am so sorry my dear,\" he said patting her hand, \"These are perilous times we live in.\"\n\nShe was stunned, she couldn't speak or eat. She sat there mute and uncomprehending, vivid images of the hostile duke, her father, swimming in her head. She pushed her plate away horrified that Kade, \"Lord Venturin\", would tell this man of her shame and she hung her head as the physician continued prattling on distractedly as he checked his notes. Retreating into herself and moving where he guided her, she was taken to the bedroom where she endured a thorough examination while her mind played over how she received each and every scar.\n\nTears rolled unnoticed down her face as she remembered the day her mother died. They had been out riding and the horse her mother rode had thrown her, breaking her neck. Her father had blamed Honey's love of riding for her mother's death and ignored her existence for many moons turning to drink in his despair. Late one night Honey had left the library encountering her father in a dark corridor. He had gasped and called her by her mother's name, Anouria. \n\nWhen she had protested he had raged at her \"You will deny me no longer! It has been too long. A man needs his wife.\" Pushing her to an alcove he forced her to her knees and pulling forth his fat cock he had slurred at her, \"If I feel teeth, I will knock them from your head.\" Frightened beyond belief, she cried out as he gripped her hair and forced the fat sausage between her lips. She cried, gurgled and choked noisily as he sawed in and out of her mouth, groaning and breathing heavily making her scream in terror as he shot hot salty cum into her mouth.\n\nHis eyes seemed to clear as he pulled away from her, his voice lowered as he took in her tear streaked messy face, \"Honey! You bewitched me, demon child. You made me do that just as you killed your mother!\" Her father seemed almost to run from her leaving her kneeling and sobbing in the dark alcove to eventually make her way back to own her bed. She was woken again before dawn, dragged by hooded men to the castle's dungeon and tied to large wooden beams in the shape of an 'X'. Her father stood to one side as she begged and cried to be set free and a priest approached her. He sprinkled rank oils on her intoning, \"You will be free, child, once we purge the demons from your flesh.\" The first lash of the whip bit into her back then, by the third she had passed out.\n\nShe was attended to by acolytes of the temple who were vowed to silence, their salves healing her quickly but leaving raw puckered scars on her body. Try as she might she could not avoid her father who seemed to have lapsed into a state of constant inebriation and visions of her mother. She knew as he called her Anouria that he would push this fat cock into her mouth again then send her to the priests to be rid of the demons that possessed her, bewitching him into thinking she was her mother. It did not always happen this way. Sometimes he knew who she was and more often than not. On these occasions, he stripped her clothes, lamenting the fact she was worth more to him as a virgin for he would sell her to the highest bidder when the time was right. \n\nLiving in a nightmare, terrified of being sold to someone worse than him and wanting to avoid the sadistic whip wielding priest, she learned to suck his cock well and block out the cruel words he rained on her. Reliving many occasions of the use and abuse and cringing at the torment of being held responsible for her mother's death, she had not spoken or listened to the physician during the examination, tears falling silently from her eyes. She raised her head as he finally covered her with a blanket and looked at her kindly. \"I am truly sorry, Lady. No one should have suffered so.\" \n\nHer voice was barely a whisper, \"Did Kade tell you how ...?\" her voice trailed off.\n\n\"Oh no, I am only here to make sure you are well and that you do not suffer any further.\" He sat on the bed beside her his kind eyes holding hers. \"Physically you are in no danger. You have been lucky not to have been raped but I am sure you do not feel that way.\" He patted her hand again, \"I fear, though, you suffer in ways I cannot see nor mend. Would you like to tell me what happened to you? Lord Venturin did not give me many details and talking can sometimes heal the deepest scars.\" \n\nTears threatened again as she shook her head and whispered, \"No thank you.\"\n\nDelenn knocked softly and the physician went to the door, coming back to her side he smiled \"You have more visitors it seems. Are you up to it or shall I send them away saying you need bed rest?\" \n\n\"I will get up. Thank you for your concern and for your care.\" Honey gave him a weak smile before gathering her night dress and house cloak and slipping them on.\n\nWalking from the bedroom with the physician she took in a flamboyantly dressed group of ladies who curtsied awkwardly. The physician bid her farewell and Delenn introduced the women as seamstresses sent by Kade to make her some new clothes. Knowing she would need clothes for the visit from her friends, Honey let herself be poked and prodded and pinched into rich fabrics, too tight corsets and underwear for the rest of the day. \n\nThe women had either been told or were too polite to mention the scars traversing her torso. By mid-afternoon, she stood in a beautiful dress of emerald green velvet the bodice scooped low hinting at the scars that wrapped her body and the strait skirt flaring slightly from her hips to pool at her feet. Honey looked at her reflection in the large looking glass seeing the girl she had been at her father's castle, the demon child, and gasped.\n\nThe painful memories stirred again and her eyes clouded as the women fussed believing she did not like the dress. She smiled assuring them she was just overwhelmed by their skill. Her brain screamed at her to run far away where no one could know her shame. She sat quietly in a chair as they promised to return the next day with more garments for her, now that they knew her measurements. Leaving boots and stockings and a pretty hair band to keep her hair from her face they left, silence surrounding Honey for the first time in what seemed like days instead of hours. Delenn came to stand behind her and began to brush out her hair. \"You look so pretty in green, Honey. Sir Kade will be happy to see you dressed as a lady should be.\"\n\nHoney gazed around the room. During the day visitors had arrived with beautiful flowers, books about the lands to the north where the sun always shone brightly, and baskets full of ribbons, threads, muslins and artists tools.\n\n.........................................\n\nKade had ridden out to locate the mayor of the town and the leader of the merchant's guild. He inquired after all his needs including tailors, cobblers and jewellers as well as the local baron. Armed with information, he dispatched the men on his behalf to organise certain items and people he would need to make Honey's stay more comfortable. He made a stop at one merchant personally to design several items and spent longer than he wished explaining his exacting requirements. Only when he was satisfied the man could produce what he wanted did he remount and ride toward the town gates. \n\nJarrau was lounging against a wall at the town gates talking with the guard as Kade reigned in and cocked his head. \"You coming or holding up that wall with your dead weight?\"\n\n\"Oh I thought I might come for a ride even if only to describe to you the smile I received over breakfast with Lady Honiara this morning. It was like a second sun rising.\" Jarrau smirked and gathered the reigns to his horse. Kade scowled and kicked his horse into motion galloping out in the country side at speed.\n\nWithin an hour, they rode into the courtyard of the local baron's castle and dismounted. Using his full name and title, Kade was ushered inside and announced with a flourish, obviously interrupting the morning's business, as all eyes turned in his and Jarrau's direction. The Baron declared an end to Petition Day to much grumbling of the petitioners and bade the knights follow him as the moved to a smaller room with an open fire and comfortable sitting chairs. The Baron Whitford was known as a pompous man with an over-blown ego, so Kade began with flattery complimenting his lands and castle before dropping the information that he had sent word to his mother that he had decided on these beautiful lands to be wed. \n\n\"Of course your mother must stay here in the castle.\" The baron insisted but as Kade went on about people she might tell and who may arrive with her. The Baron paled and his brain calculated the logistics. \n\nKade brought forth a small chest of gold and said, \"For your troubles, Baron. It would not be right of me to impose otherwise.\" The obsequious man's eyes lit up with greed even as he acted affronted that Kade would offer gold to a wealthy baron such as himself. Kade played the game insisting on the stipend and promising to let him know details of the guest's arrival as soon as he knew of them.\n\nAs soon as they left the room Kade and Jarrau could hear yelling and shouting of orders that continued to ring through the building even as they made their way back down to the stables. Jarrau chuckled, \"I don't know what impressed him more, your title or the chest of gold. I thought his head was going to explode when you started listing off royal names. You haven't really invited all those people have you?\"\n\n\"Of course not,\" Kade said, \"But you know my mother, unpredictable would be understating it.\" He stepped into his saddle smiling as he pictured his mother and rode out of the gate with Jarrau following a minute later. Reining in to a slow walk as they crested the hill above the town, Kade's face turned sombre, considering how much he needed to tell Jarrau about Honey's past.\n\nRealising something was amiss Jarrau took the lead with his usual bluntness, \"Okay, out with it. You have what you want. What is there to brood over now?\"",
        "\"She wasn't running from me, you know.\" Kade took in the startled expression on his friends face and sighed deciding to tell his friend as much as he knew which wasn't very much. Jarrau muttered oaths under his breath as he described the scars and Honeys reluctance to discuss them. \"I am worried about what damage he did to her mind as well as body.\"\n\n\"Well that explains the physician's arrival this morning.\"\n\n\"I sent word to the Duke that she has been found and the wedding would go ahead, but in my letter to him asked that he did not attend. If Honey sees him again I am not sure what she will do. You cannot tell her he knows she is here. She will try and run again and from me this time for telling him and possibly bringing him here.\" Kade's voice held anxiety.\n\n\"All those seasons of watching her and you never knew?\" Jarrau mumbled under his breath, \"No. Of course you wouldn't have left her there if you knew she was being whipped within an inch of her life.\"\n\n\"She saw us as friends to her father I think. She does not trust us. Not yet anyway.\"\n\n\"Time is a great healer, my friend, but we will be more vigilant. Your own men need to know the danger or the father may unwittingly slip through our ranks.\"\n\n\"She cannot be told any of this, Jarrau. It is imperative.\" \n\nJarrau grunted nodding thoughtfully and spurred his horse forward and they rode back to the town in silence.\n\nOnce through the gates, Kade turned his horse to the mayor's residence again to check that his wishes were carried out and meet with the physician. Jarrau went to the camp of the acrobats to escort them to the house to check on Honey. He would tell Kade's men only that she was in danger from within and even her father was not to be allowed to see her without Kade present, impressing upon them the need to be vigilant during their watch without alarming her.\n\n.....................................\n\nThere was a knock at the door. Finishing Honey's hair with the headband, Delenn went to answer it. The jovial voice of Jarrau roused Honey from her dark thoughts as he walked in and whistled, \"If you were not already betrothed to my brother knight, I would send a wagon of gold to your father and ask for your hand myself, Lady Honiara.\"\n\nHe watched the expression on her face change from wide eyed terror to the soft countenance of a lady, \"You have a golden tongue, Sir Knight,\" she replied with a small smile that did not reach her eyes. \"Are they here yet?\"\n\nHe kicked himself for mentioning her father and kept the lightness in his voice, \"Yes they are down stairs. I will take you whenever you are ready.\"\n\nShe squeaked in delight jumping up quickly, \"I am ready. I am ready!\"\n\nGrinning, he offered her his arm and they walked back through the maze of a house, to the dining hall. She smiled as she saw them sitting uncomfortably in the room full of knights and squires. They did not seem to recognise her at first, taking a second look before relief washed over their faces. She ran the last few steps to hug Alec, feeling the familiar arms wrap around her and lift her from the floor in a giant bear hug as he stood to greet her. Putting her back down Alec let Honey hug Maurice before pulling her down to the bench seat beside him. Jarrau smiled and said he would go and organise them some food, as he knew that Lady Honiara had not eaten much that day and must be famished. Alec frown at her \"You must eat. Keep your strength up.\" \n\nShe sat between them on one side of the table enjoying the familiar feel and sound of her friends as the men quizzed her on her safety and comfort, looking at her dubiously as she assured them that Kade had brought a physician to her as Alec had wanted and pointed out the new dress to them. \"I am being treated well enough.\"\n\nMaids brought steaming platters of meat soaked in gravy, fresh bread and roasted vegetables and Honey laughed as Alec frowned and added more to her plate than she had given herself. \"Stop that or I will never fit into my fine new dress again.\" Honey noticed Jarrau had taken a seat at a table adjacent to theirs giving them some sense of privacy within the crowded hall, she smiled at him gratefully.\n\nLeaning over and pointing at her plate with his fork, Maurice pretended to tell her to eat more as his low voice instead asked urgently, \"Does what you ran from still plague you? Do you need escape? We could help. It would be dangerous but we...\"\n\nHope flared briefly before she shook her head stopping him. She would not endanger her friends again. \"No, you must not do anything to endanger yourselves. I will not permit it.\"\n\nAlec chuckled \"Look who is giving orders all of a sudden.\" He put another buttered slice of bread on her plate as he whispered, \"If you need us we will be here. We have a plan of sorts.\"\n\nShe replied glibly, \"There are worse places I could be.\"\n\nMaurice looked at her considering her words, \"I never believed you to be a fugitive from justice so I do not think you have to worry about dungeons I just wish I knew why he chased you.\"\n\nShe took a deep breath. These men had been kind and good to her in their own ways and she owed them this explanation. \"Because I am betrothed to him,\" Her voice was a whisper as she dropped her eyes not wanting to look at them.\n\nMaurice nodded, \"Yes a knight marrying the Duke's only daughter would enhance his fortunes considerably.\" He mused and asked \"It was him you ran from?\"\n\n\"No, well not really,\" She whispered though he was partly the reason she ran from her father and her nightmares. \"I barely knew him and had only met him twice before I left my home.\"\n\nJarrau had noticed her head drop and anxiety stiffen her shoulders. Moving lightly to their table, his easy voice cut into the quiet murmuring. He asked if they wanted more wine, brandishing a jug. She held up her cup, relief washing over her features as she looked up and caught his wink. He took a seat opposite them and proceeded to regale them with impersonations of the local baron he had met that day while the men ate and Honey pushed her food around her plate.\n\nJarrau waved Kade over as he entered the dining room, his eyes searching for them and pulled out a chair for him to sit as he stood stiffly by the table. \"Tell them I am not exaggerating about the baron's head almost exploding when you mentioned royalty might be visiting.\"\n\nKade blanched cursing inwardly at his friend's loose tongue, but nodded, encouraged by Honey's amused expression while she watched Jarrau's impersonation again, and murmured, \"Apoplexy would be a closer description.\"\n\n\"Is royalty really coming to this hole in the ground?\" Maurice asked intrigued.\n\n\"Probably just the Queen of the North and one of her sons I should expect.\" Kade answered as if considering the question deeply.\n\n\"As if Queen Dragora would let her youngest baby boy get married without fussing over him,\" Jarrau teased laughingly as Kade stiffened watching honeys face for a reaction.\n\nShe gaped at him, \"You? You're a prince?\" \n\n\"Barely,\" he laughed, \"I have five older brothers. Succession doesn't factor in my future I am afraid, I am more comfortable as the knight you see before you.\"\n\nMaurice whistled, \"Lady Honiara and Prince Kadegan travelling with our troupe of acrobats. I would put it on the marquee if I thought anyone would believe us, or do you prefer your other title as a Knight of this kingdom, Lord Venturin.\"\n\n\"Sir Kade is just fine, thank you.\" Kade grumbled. Honey was still gaping at him and Alec reached under the table to take her hand gently and squeeze it reassuringly. Kade smiled though his body was tense, \"You are well versed in the affairs of royalty and Knights, Master Maurice. May I ask if you spent time with one of my men during our journey here, Andreus? He also is very current with the affairs royalty and such.\"\n\nHoney had looked up at Alec and smiled, Kade who had been watching her carefully stiffened further and Jarrau interrupted the moment saying, \"The hour grows late. Would you gentlemen like an escort back to your camp?\"\n\nAlec looked amused, \"No, I don't think that will be necessary.\" \n\n\"Come, Lady Honiara. Let us walk our guests to the door\" Jarrau held out his arm to her, she took it and they all walked slowly to the door.\n\nAlec bent to pick her up in a bear hug whispering in her ear, \"I will visit as often as I can. If you need me, send a message and I will come, whether the Prince likes it or not.\"\n\n\"Thank you.\" She whispered back hugging him fiercely. \"I do not deserve a friend such as you.\"\n\n\"I think I will walk a little way with our friends,\" Kade said from behind her and stepped to the doorway. \"I won't be away too long. Jarrau send Andreus after me when you see him. These are not good streets to travel alone at night even for the likes of these strong men.\" He smiled at Honey who looked at him curiously, \"You look tired, little Lady. Try to get some rest.\" He reached out to stroke her cheek gently, and for once, she didn't instantly flinch away. It was a small boon but a smile tugged at the corners of his mouth.\n\nHoney quickly hugged Maurice goodbye thanking him for coming. She watched them all disappear into the night and turned to Jarrau, \"I don't know how to find my room and apparently I am looking tired.\" She smiled cheekily.\n\n\"Let me escort you Lady. It's the beauty of our wickedly contrived house. No one can get in let alone get out. We once found an old knight who had been lost in here for days, wandering the corridors like a lonely ghost.\" He smirked at her and she laughed at him as they threaded their way back through the maze of corridors and stairs.\n\nReaching her room, Jarrau bowed with a flourish and looked around as Leneer appeared a minute behind them. \"I will leave you now and go in search of entertainment and perhaps a comely wench.\" He winked and smiled before wandering back down the hall. \n\nHoney went to step into her room, halted momentarily by the sight Leneer who had leaned back against the wall beside her door. \"Relax, Leneer. You don't have to babysit me tonight I am too tired to go anywhere.\"\n\n\"Oh, Lady. You can go where you like within reason and I would be more than happy to escort you. I am here to keep intruders out. Your safety is important to Sir Kade and thus to all of his men.\" Leneer looked at her earnestly as he said the last and she was taken aback. \n\n\"You would escort me if I wanted to go exploring?\" She asked.\n\n\"Within reason, Lady. You are not a prisoner. We only wish to maintain your safety now that your identity is known.\"\n\nShe frowned at his words, and went to ask more but bit her lip. She wasn't sure she would like the answer. \"Goodnight, Leneer.\"\n\nShe entered the rooms shaking her head. She really didn't understand Kade at all. She barely knew him except that she knew she could make him angry without even trying. He was right though she was tired it had been a long day of being poked and prodded. With Delenn's help, she took off the dress and restricting corset pulling her silk nightgown over her head and climbing into bed. She wondered if that protection from intruders would extend to Dukes and priests. \n\nShe tossed and turned as she tried to put those dark thoughts from her mind. Kade had seen her scarred body and was not repulsed. Neither he nor the physician had held her responsible for the punishment that had caused them. Her mind turned what she did know of Kade over again and she decided she should try to know him better if she was to marry him and she didn't see an escape from that, yet. Truthfully she didn't know if she needed one. He had promised she would never be hurt like she had been again, but could she trust him? The thought nagged at her.\n\n..............................................\n\nKade walked quietly with the acrobats, three big men looking ominous as they strolled through the streets of Erato. With the camp almost in sight Kade spoke, \"She has told me very little of what she runs from but I promise you both I mean her no harm. I want only to keep her in safety.\" They remained silent so he continued, \"I know you care for her but I ask you to trust she is safest where she is. It was not me she ran from.\"\n\nAlec was the first to speak, \"I will trust you for now because it seems to be what Honey wants but if anything happens to her I will come for you.\"\n\nKade looked Alec in the eye trying to convey his sincerity, \"That is as it should be. I would expect no less from a loyal friend.\" His voice was low and neither dropped his gaze until they were interrupted. Andreus who was jogging to catch up to them, smiled and greeted them all with a friendly, \"Ho there, Gentlemen,\" and the blonde knight fell into step. \n\n\"Thank you for coming. It's been a long day. Any news from the network?\" Kade eyed Maurice as he said this and Andreus took his cue.\n\n\"No news yet, but you can bet news of any royal move in the season of frost will see the sky filled with pigeons and hawks.\" Andreus grinned loving the intrigue of politics. Being from the southern kingdom, he had grown up as part of the country's biggest spy network and he was Kade's best information source finding a contact or spy in every town they visited. \n\n\"I thought you and Maurice might like to talk as we walk. It seems he is almost as update with current affairs as you are my friend and I would hate to have to replace you.\" Kade laughed at the stunned expressions on the two men's faces, \"It isn't often I am one step ahead of you, Andreus.\" Laughing more he walked on with Alec as the two other men murmured quietly behind them.\n\nArriving at the camp of the acrobats, Kade farewelled them saying, \"Visit as you wish. Honey is not a prisoner, but until I am sure she is safe from what haunts her, she will be safest where she is. It will make her happy to have friends to distract her over the coming weeks, I am sure.\"\n\nLeaving them with that cryptic farewell and content for the moment that all was well, he returned to the house with Andreus confirming the notion that Maurice was indeed originally from the south and worked within that kingdoms spy network but also that Alec had connections beyond what he seemed to have.\n\nEntering the House of Venturer and taking the stairs two at a time, Kade made his way to Honey's room. Nodding to the young knight, Leneer, telling him to go find a bed and be back in the morning before he entered quietly. In the dim light, he saw Delenn dozing on the couch and rousing her gently, escorted her to the door of her small bedroom beside Honey's suite, and sent her to bed. Kade turned back into the room after closing the door quietly and looked up just as Honey entered the sitting room. \"You should be in bed little lady.\" He chastised her.\n\n\"I couldn't sleep, too much to think about.\" She moved to sit at one end of the couch, looking up at him again. \"Thank you for all of this.\" Her hand waved around the room. \"I just don't understand why you would do it all or want to marry a girl who was gambled away so cheaply by her father.\" She looked into his eyes sighing heavily, \"Are you certain you wish to marry a girl such as me? You are a Prince, you should marry much better.\"\n\n\"I have answered this question already, twice!\" He growled, \"You would be surprised what I want.\"\n\n\"That's just it. I don't know you at all! I don't know what you like or want. How could I not be surprised, I didn't even know who you were until tonight? How could I know the type of man you might be or why you would want a scarred and abused girl as a bride?\"\n\nHer words stung him, he could hear the truth in them and was unsure what to say in response, quietly and looking at her softly he picked up her hand as he said, \"I would never hurt you as others have. That is not to say I would not give you a spanking should you need or deserve it or because I want to,\" he smirked, \"but I would never scar your mind and body in such a way.\" Lifting her chin to draw her eyes to his he continued, \"If I had known what was happening to you, I would not have left you in the Duke's castle even if I had to resort to kidnap.\"\n\nPulling her eyes away she pulled her knees up to her chest and wrapped her arms around them putting a barrier between her scars and his looming presence. Her mind wanted to scream \"Why?\" She had been told over and over she not lovable, that she was a demon. \"Why would this man want to rescue her from her nightmares?\" She wasn't sure she wanted to hear the answer but she knew she needed to know. Just as he needed to know the answers of the questions he constantly asked her.\n\nTaking a deep breath she spoke with a confidence she did not feel. She tried to ignore the scowl that had appeared on his face as she had withdrawn her hands and curled into a ball, \"You have asked me questions I have not wanted to answer and in turn you have avoided answering mine directly.\" She took another deep breath, \"I will let you ask three questions which I will answer with absolute honesty, if you will do the same for me.\"\n\nHe was startled, \"I could ask anything at all?\" She nodded biting her lip and balling her fists, he could see the tension in her but he needed to know how the scars occurred if he was to keep her safe. \"Alright.\" he said guardedly, \"it is your game you may begin.\"\n\n\"You seem to know me so well yet I barely know you, how?\"\n\nHe told her of their first meeting at the Great King of the central kingdom's palace when she was young and precocious, when her mother still lived and again later when she was older and blooming and simply the most beautiful well-bred lady he had met. He continued on through his volunteering as emissary to the east and watching over her, talking to the castle maids, finding out as much as he could about her as he tried to flatter and cajole her father into giving him her hand before finally contriving the plan to win her which had worked until she disappeared.\n\nShe listened her eyes wide as he spoke, bewildered that someone would go to so much trouble to win her hand. He had stopped speaking and was watching her concerned. She looked up at him and knew she must tell him what he wanted to know, \"I know your first question. You want to know about my scars, how I got them and why?\"\n\nHis hand reached out to take hers but she shook him free. \"No please,\" she whispered, \"Do not touch me. I cannot bear it right now. I will tell you what you want to know and you will see, like me, that you deserve a much better wife.\" He started to protest but she held up a shaky hand silencing him. \n\nTears leaked from her eyes and she shook as she relived her nightmare. His arms reached for her several times and she shied away from him finally moving onto the floor out of his reach where she sat facing him but her eyes on the floor. When she finally fell silent, he sat on the floor beside her and pulled her resisting body into his arms saying nothing just making soothing \"Shh\" noises as she shook silently and tears fell from her eyes.\n\nAs she calmed slightly she asked between sobbing breaths, \"Now that you know my nightmares, I ask again because I need an answer, the real answer. Why would you want to marry such a girl who is possessed by demons?\"\n\nCurses still ran through his head. He was angrier than he had ever been in his life and her question ripped at his heart. \"The evil men that did this to you are the possessed ones not you,\" he hissed before letting out a string of curses that would have made sailors blush. She could hear the anger in his voice and stiffened, afraid and ready to run from him. His arms tightened around her as if he could sense her fear and he took a deep breath.\n\n\"Do not run from me, please. I am not angry at you, Honey, none of it was your fault. Not your mother's death, and not your father's drunken ramblings and abuse and certainly not the punishment you received.\" He turned her in his lap and tilted her chin up to him and kissed her deeply. \"I have wanted you since our first meeting, your unspoilt nature and breeding, your obedience, your acknowledgement of every small kindness shown to you by lord or servant alike. These are the very things that allowed those evil men to brutalise you but I am not evil, Honey, and while I may not always be gentle or forgiving, I will never betray your trust as they did.\" ",
        "He kissed her again, \"I was angry when I first found you with the troupe. I shouldn't have treated you as I did then, I see that now. I acted from hurt and rejection, my ego was dealt a cruel blow because I believed that you chose the life of a mistress, a whore, over a life with me.\" He shook his head sadly, still holding her face up to his he whispered, \"Promise to obey me, honour me and try to trust and love me. Marry me, Honey. Be mine and I will protect from those evil men.\"\n\nStunned by the emotions in his voice and face, anger, passion and need showing in his words, she had no reply as he kissed her again. Breaking the silence he asked quietly, \"Why did you run the night I won your freedom from your father, when you hadn't run before? You finally had your freedom, was it me you ran from?\"\n\n\"Partly,\" she admitted sadly, \"I didn't know you.\" She hurried on. \"As far as I knew you were just like him and his priest.\" She looked up at his frown sensing his sadness, his body stiffening. She felt bad for putting the sadness there and she pushed at his chest moving away from him slightly, swallowing noisily before continuing, \"The answers must be honest so I will tell you why I was so afraid that I ran from the only home I knew.\" \n\nHe looked at her saying nothing, his tense body rigid as if awaiting a further blow to his ego, \"He hadn't sold me to the highest bidder you won me in a game of dice like a cheap possession. Any value I had to him was gone. His threat to sell me was gone my virginity was no longer a commodity.\" She couldn't look at him as she kept talking, \"I wasn't sure I could survive his raping me. I wasn't sure he wouldn't kill me.\" She took a breath and gulped loudly against the tears in throat before whispering, \"It was as if you had signed my execution papers, rather than giving me the freedom that you thought you were.\"\n\nHe finally snapped and his rage poured out. His curses rung out loudly as he raged at himself and the Duke at all the seasons spent searching for her to avenge his wounded ego. She crawled away and into a chair pulling a cushion in front of her as if to shield her from his anger. He raged around the room stalking to the fireplace and hurling a large marble figure across the room to crash against the wall. He drew deep shuddering breaths as the curses continued and objects flew above her head to crash into walls. Suddenly, the door of her rooms flew open and a wild eyed Jarrau stood there sword in hand taking in the scene.\n\nKade continued to seethe with rage but stopped his stalking destruction as he regarded his friend warily \"Her father was going to kill her rather than let her marry me.\" He stated by way of explanation. \n\nShe looked between the two knights wide eyed, though that was not quite what she had said she could understand how he felt that was its essence. Jarrau looked at the man standing in the doorway behind him and motioned him to stay as he entered and closed the door. \"You're terrifying the Lady, Kade. Can't you see that it's not just about you anymore, you arrogant prick?\"\n\n\"She is stronger than you think stronger than I could have believed possible.\" He looked at her and grimaced, \"I am sorry, my Honey. The last thing I wanted was to scare you.\" He moved to her and took the pillow from her hands and smiled sadly at her, \"Truly.\" Kade turned back to Jarrau, \"She told me the whole story tonight, she may not have run from me exactly but she ran from a situation I made infinitely worse with my actions.\"\n\n\"As you said to me earlier today, how could you have known?\" Glad his friend was growing calmer now he looked at Honey, \"I am glad you have shared what haunts you and I will not pry but try to understand, we had no idea you were in peril or we would have helped you. I swear it.\"\n\n\"I will stand just outside the door while I send someone for some mulled wine, you only need to call Lady and I shall return in an instant.\" He turned to Kade, \"One more temper tantrum like that and I will lock you up for the night and don't think I won't. I will bring you both some mulled wine in a few minutes, now behave children.\" With that Jarrau stepped out of the room.\n\nHoney ended the silence, \"He is right you know. You have nothing to feel guilt over. I didn't know who you were, if I could trust you or that you would help me and you didn't know I needed help.\" \n\nHe gave an exaggerated sigh and bent to pick her up, sitting back in the chair with her on his lap gently wrapping his arms around her waist, before pulling her against his chest and murmuring, \"Don't leave me again. You are safe here with me.\" \n\n\"I need to ask my last question.\" She whispered.\n\nTightening his grip on her so she couldn't move away from him again he nodded, \"Alright, if you must.\"\n\n\"Does my father know you have found me? That I am here with you?\" She felt him stiffen and trying to sit up to look at him she reminded, \"You must be as honest as I have been.\"\n\nHe let her sit up but still held her in place as he nodded sadly. She called \"Jarrau!\" before he could explain. She beat on his chest trying to wriggle from his arms looking at the door as it opened. \"Tell him to let me go. I have to go. I can't be here! He knows I am here!\" She was shaking her eyes wide with panic.\n\nKade's voice cut through her hysteria, \"Yes I wrote and told him I found you, and that we would be wed, I also told him not to come. I knew those scars were his work just not the details. I told him not to come, Honey. Listen to me please.\"\n\n\"Let her go, Kade. There are four armed men on the other side of that door. She is not going anywhere.\" Jarrau took her hand and pulled her from Kade's lap. \"Honey, breathe just breathe and listen to my voice.\" She was panting her eyes wild, \"Take deep breaths for me, Lady, breathe deep, and again breathe.\" His low voice became a hypnotic monotone as he held her hand. \"Good girl, keep breathing nice and deep. You saw how quickly I appeared when you called?\" She nodded. \"All of Kade's men would come as fast. You are safest here. You are safe now. Do you understand?\"\n\n\"I can't see him. I can't see him again,\" her whole being shook. \n\n\"Then you don't have to. It is as simple as that. No one will force you to see him. Kade had to tell him the wedding was going ahead, you realise? It was the right thing to do and he did not know your story at the time.\" He led her to the table and asked her to sit, \"He may not have always treated you well but his heart is true. Let Kade explain what he did, listen to him and I will get that wine it is at the door.\"\n\nKade crouched beside her, \"Honey.\" he asked tentatively and she turned to him her face blank in her shock. \"You will not see him if he comes. I will make sure of it.\" She nodded dumbly. He held both her hands \"Come back to me, Honey.\" He looked into her wide green eyes and whispered, \"You haven't answered my third question. I need my answer now.\"\n\nShe continued drawing big shaky breaths, their words of safety and not being forced to see him sinking through her panic. \"You haven't asked it.\" Her whisper was barely audible.\n\nJarrau came back pressing the wine cup into her hands. \"Thank you Sir Jarrau.\" She could not look at Kade so she sipped the wine. They let her sit for some minutes while she drank and colour began to come back to her pale face. \"Where is that comely wench you are always in search, of Sir Jarrau?\" She gave him a lopsided smile, and took another sip of the wine.\n\n\"I can't find one that will put up with the company I keep.\" He rolled his eyes at her and nodded his head towards Kade. \n\nShe felt herself settle with the wine and Jarrau's infectious smile. \"He does have a temper to go with that huge ego,\" she smiled shaking her head commiserating with Jarrau.\n\nKade raised an eyebrow and nodded speaking softly, \"No more fireworks tonight, no more temper. She has told me the worst. You have haven't you? I know it all now?\" Honey finally turned to look at him with her tear streaked face and nodded. \"As for my ego, it has taken quite a battering lately. Jarrau keeps telling me I am arrogant. He is right this time, this is not about me. We will keep you safe Honey. You can trust us.\"\n\nJarrau laughed, \"Better take that quick, Honey. He never apologises and that's about as close to an apology as I have heard him give. You won't hear that again.\" \n\nKade scowled at his friend, \"You aren't helping me here, you realise?\"\n\n\"Of course not. She didn't call me to her aid because you were being delightful. You, my friend, are an ass and as such deserve everything you're getting right now.\"\n\nHoney grinned at Jarrau, who took her hand. \"I will stay close. I have taken a room on this corridor as will Kade's other men. You are very safe here Lady, even from him.\" He smirked and looked at Kade who was still scowling. \"Now that we know how you feel we will not let your father near you without your consent. Trust us and though he is ass at times,\" he winked at her, \"Kade is loyal and true. I trust him with my life and you can too.\" Dropping his voice to a whisper he murmured, \"Don't tell him I told you but you could ask him for the moon right now and he would try to get it for you.\"\n\nShe laughed merrily at Jarrau's smirk and the look of sullen petulance on Kade's face. \"Whatever would I do with the moon, mount it on a ring?\" She shook her head, \"You have been so very gallant tonight, Sir Jarrau. Could I ask that you stay a little longer, while we finish our talk? I owe him one more honest answer and the last two of my answers have caused his temper to rage.\"\n\n\"Of course, my Lady, but enough with the Sir's, we are friends now, are we not?\" Honey nodded and smiled. \"I will be just outside the door telling the men to put their swords away and move their belongings up here.\"\n\nAs Jarrau left, Honey he turned to Kade who was still crouched beside her and let him take her hand. Kade looked up at her concern on his face, \"I did ask a question when I answered your first question, but let me ask again as it was not my turn to ask at that time.\" He moved to one knee, \"Promise to obey me and honour me, try to trust and love me, marry me Honey? If you promise to be mine I will protect you and keep you safe forever more.\"\n\nShe could see the sincerity in his eyes. The big, brooding, harsh man, who had terrified her when he had found her in the camp of the acrobats, was kneeling before her now showing his need and desire. He wanted her even knowing her nightmares. Would he keep her safe? She had been so alone for so long, had not trusted anyone with her secrets, not even Alec who she felt a bond with. She had felt unloved and abandoned since her mother's death. Could she rely on this man? Could she trust him? So many questions filled her head that she knew she could not promise all he asked.\n\nShe looked into his eyes and whispered. \"I cannot promise I will not try to run if he comes here, but I do believe you mean to keep me safe from him. I will try to trust you, the rest will come in time.\"\n\n\"It is enough,\" he said, \"For now, at least. I do not wish to have Jarrau in here again as I make you promise not to run or agree to the wedding tonight, but I will ask again tomorrow and every day after that until you say yes.\" \n\nShe smiled slightly and they talked a little longer. She felt strangely lighter with him now. He knew her fears. She knew why he pursued her and why he had been so cruel when he found her as a mistress not knowing of the relationship's true nature. \"Knowing everything about me, he still wants me.\" The thought was slowly taking root in her mind and she found herself finally relaxing her guard with him slightly.\n\nWrapping her house cloak around her she stood and walked calmly to the door without saying a word to him. She opened it with Kade barely a step behind her, worry clouding his features. Four men turned to meet her eyes, \"I wanted to apologise to you all for my hysterics tonight and thank you all for your concern. You can all relax now as I am barely able to stay awake a moment longer. Good night, gentlemen.\"\n\nJarrau bowed with a flourish and they all followed suit making her smile and step back into the room. He picked her up as she closed the door and carried her to the bedroom, taking her cloak from her and laying her down he asked, \"Why did you do that?\"\n\nShe looked up as he removed his boots, belt and scabbard, \"Because they wouldn't have believed you, if you had said it.\" She grinned.\n\nHe climbed into bed with her wrapping his arms around her. \"You are right.\" He chuckled lightly. \"Sleep, my Honey. It's been a long day.\"\n\nShe was tired and warm but his closeness, the feel of his body against hers stirred her to restlessness again. She heard his breathing deepen as he relaxed into sleep and little by little she squirmed to loosen his hold on her rolling to her back. Turning her head, she could see the silk scarf from the night before hanging from the bed post and she closed her eyes remembering the feel of his tongue on her sex. She let out a soft purr as her thighs rubbed together.\n\n\"Such a nice sound,\" he murmured sleepily and his hand lazily stroked over her breast, teasing at the nipple. \"What makes this little kitten purr so sweetly?\"\n\n\"The scarf still hangs from the bed post. No one has ever kissed me in the places you did last night. It felt umm good,\" she whispered her face blushing deeply in the dying firelight. The word 'good' felt inadequate. \"Does it feel that good for men? Better? I know little about men apart from sucking their cock, and that from the opening in their pants. I have never even seen a man fully naked or how his body reacts aside of that one part.\"\n\n\"I would guess even better, but then I am a man.\" His voice was deep and hungry. Sitting up he pulled his clothes off and lay back on the bed, \"Be my guest and drink your fill. We are to be wed so you will have no other to compare it to but I have all the parts that make a man.\"\n\nShe knelt up on the bed beside him looking down on him. Reaching out with a hand she traced his jawline trailing her fingers lightly over the rough stubble there before running them down his neck, eliciting a half moan from him. Whispering she asked shyly, \"May I have a lamp? The fire has died too low.\"\n\nRising, he slipped from the bed, walked to the dwindling fireplace and took a lamp from the mantle, lighting it and holding it before his body walked back to the bed. She watched him, his muscles moving beneath his skin reminding her of a sleek horse. Placing the lamp on the bed table he stretched back out beside her, \"Better?\"\n\n\"Thank you.\" She nodded and reached out tentatively again her fingertips trailing over his neck to his chest. His flesh was hard all muscle and sinew even relaxed there was not much give in it as her fingers trailed up and down his ribs and over his belly. Leaning closer to his ribs she whispered surprised, \"You have a scar. How did you get it?\"\n\n\"I have several, sword fights mostly. Though one I fell out of a tree as a boy trying to keep up with my brothers when they tried to leave me behind.\" He smirked, at her \"I was a headstrong boy with a temper. I guess not much has changed.\"\n\nShe smiled trying to imagine him as a small boy, over confident and trailing behind his brothers raging at them to wait for him. Her fingers continued their teasingly light trail over his skin seeking out more imperfections. She marvelled at the way his broad shoulders tapered to an almost narrow waist as her fingers brushed lower over his hips to his thighs. She softly caressed down his legs, \"I do not see any more,\" she whispered and he rolled to his side exposing his back to her. Her hands glided over his back finding small fading scars as she explored more of him.\n\n\"Which is the one from when you were a boy?\" She asked curiously. He rolled onto his back again, lifting the hair from the left side of his face and ear. She leaned in and noticed for the first time the faint trace of a line that ran from his cheekbone up and over his ear into his hair line.\n\nHe touched her cheek, bringing her face closer as he leaned up to kiss her gently, \"You missed an important part of my body with those soft hands of yours,\" he murmured into the kiss and she blushed.\n\n\"I already explored that part last night, though not with my hands.\" \n\nHe grinned at her, \"My point exactly. No need to act shy now. I have kissed you and you me in the most private of places.\" He chuckled.\n\nShe had never been in a position to refuse before. Even last night, he had been angry with her and forced her to her knees. She knelt back up gazing down at him, he was not commanding or forcing, he was suggesting, asking in his own way. \"What would he do if she refused? Become angry and force her again?\" She wasn't sure but she knew she was no longer frightened of him and that thought surprised her.\n\nHer hand moved down his body trailing through the hair nestled above his rapidly growing cock. She curled her hand around his shaft and squeezed slightly, her eyes watching as it grew within her grasp and she started to stroke him. Her other hand moved to explore the heavy sac hanging below the rapidly expanding flesh, the pebbly skin soft under her fingers as she stroked over it and under it eliciting groans from him as she explored without fear.\n\nShe half expected to feel his hands on her bending her head to him as had happened each time she had been faced with a cock before but he had put his hands behind his head leaving her free to do as she pleased. Her hand squeezed up the shaft to the head, its mushroom cap turning purple and swollen as a small drop of cum appeared before her eyes. She leaned down to lick at it feeling him shudder. He groaned \"So good, sweet Honey.\"\n\nFeeling powerful for the first time in her life and knowing it was her that was making him groan with pleasure, she fluttered her tongue around the head of his cock stroking and squeezing the small drops from him almost as if she was milking him. His sac seemed to shrink in her hand as his increasing moans of pleasure urged her on to tease him more. Wrapping her lips around the mushroomed head and sucking hard she pumped him into her mouth as she heard him hiss \"Oh yes, yes My Honey.\" His cock pulsed in her hand as he came gasping and shuddering. It was different to how she had ever felt doing this. She did not feel bad about it or ashamed. In a way she felt proud she had brought him this pleasure on her own. She continued to suck and stroke until he pulled her to him wrapping his arms around her as he breathed heavily. \n\n\"I adore you, my Honey. Now my turn.\" With that he sat up and helped her take off the gown before lying her face down on the bed. \"You are beautiful to me. When I look at you, I do not see these,\" his fingers trailed over the lines scarring her back. \"I see only the girl I fell in love with when I was a boy. No other girl has captured my attention as you did so long ago.\" She was silent her hands balled into fists as he moved his hands over her scarred back once more moving down to gently caress her ass.\n\nHe smacked it lightly as he continued to speak softly, \"My temper was boiling when I found you with Maurice. My ego was crushed thinking you had run from me to that fop.\" She squeaked her eyes flaring wide, \"I understand now it was a convenience for you both but you can concede my belief that you were his whore.\" He smacked her ass lightly again and rolled her over to look at him straddling her body to lean down and kiss her, \"Oh the things I want to do to you, my lady whore.\" He smirked as her eyes widened.\n\nHis hands travelled over her shoulders to her breasts kneading them gently, the nipples hard against his palms. She put her hands over his as if to lift his hands but he only pushed them harder into her flesh. \"Don't look so shocked. Whores know how to not only receive pleasure but give it. They do not lay back and endure their husband's attentions as ladies are taught to. They enjoy it and participate in it.\" His mouth descended on her nipple flicking at it with his tongue. ",
        "Lifting his head and blowing over the hard pink flesh he continued huskily, \"You enjoyed these pleasures last night, little lady whore, and it pleases me greatly. When we wed you will delight in these pleasures and much, much more.\" His head lowered to tease the nipple with is mouth again grazing his teeth lightly over the turgid flesh.\n\nShe gasped as little thrills rolled into her breast his magical mouth that had brought her such pleasure the night before was on her again and she panted in heat as she squirmed below him. He smiled up at her as he moved his body to her side letting a hand trail down over to belly to her sex, \"Let's see how much my lady enjoys being intimately acquainted with her betrothed.\" \n\nHe suckled at her breast as his fingers delved into her sex parting the wet lips and teasing at her swelling clitoris making her whimper and roll her hips and arch her back slightly. His hand working through her increasingly wet folds he moved up to her ear murmuring, \"You will never be a lady that merely endures her husband's attentions. You will be my whore in the bedroom and I will give you such joy as your rewards.\"\n\nHis tongue trailed down her body licking around the flesh of her breasts as he travelled agonisingly slowly lowerm her hips rolling against the fingers teasing her. He lapped over her belly as he moved between her legs his body making her widen them. His head moved down to tease her thighs with small bites making her squirm and whimper more, \"Please,\" she gasped, \"please let me feel it like last night.\"\n\nHis mouth moved to her then licking out with a lazy tongue to lap at the wet folds tasting her. His thumb pressed on her clit as he lapped and licked into her tight hole revelling in the taste of her. His thumbs moved down as her hips bucked and rolled and her panting whimpers grew in intensity to replace his mouth dipping into her slightly as his tongue moved to tease her clit before sucking it into his mouth.\n\nHoney felt his teeth graze her small swollen clit and cried out in pleasure her back arching as her hips bucked and legs shook. He continued to suck and tease her. She squirted cumming hard against his hand. The waves of pleasure continued to roll into her as he teased her mercilessly and she tried to squirm away the pleasure unbearable. \n\nFinally, he crawled up her body and kissed her deeply, murmuring, \"You are mine.\" She kissed him back, her head still clouded by sex and let him hold her against him tightly, \"Sleep, my love\" he murmured, \"We will be man and wife soon enough and I am only a man. Sleep please.\" He moved to make them more comfortable and wrapped his arms possessively around her. He kissed her neck and ear before whispering, \"Oh the pleasures I will show you my lady whore, once you are my wife.\" "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "lady",
        "knight",
        "ravishment",
        "drama"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/venturer-ch-02"
}