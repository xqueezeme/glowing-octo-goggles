{
    "title": "Broken Hands",
    "pages": [
        "[This is one of my longest stories. I wrote it for the buildup and the foreplay and the ridiculous fantasy. If you're looking for a quick fix, this might not be it. But if you have time for some edging and exposition, enjoy.]\n\nDalton was thrilled. He had the entire summer to himself. \n\nHe was 18 and had just graduated high school and was planning on taking a year off before deciding on which college to give way too much money to. \n\nHis parents were taking their long-awaited cruise around the world, which they'd been talking about doing for years. This meant he had the whole place to himself to sleep in and do whatever the hell he wanted. \n\nNot a bad gig for a a very popular 18-year-old with zero responsibilities. \n\nThey knew he was probably gonna throw a party or two. They just asked him to be smart, not do any hard drugs, and avoid being arrested. It was great to have cool parents. They were partiers in their day too after all. They weren't naive. \n\nHe was three days into this marvelous freedom when he'd received a text from his buddy Shane that a group of his friends were going to be meeting at the park across the street from his house that stoned and eat Chipotle and hang out. It was 11 AM and Dalton was still in bed. \n\nHe opened his laptop and had a quick jack-off session like he did every morning, and then went to jump in the shower. \n\nAround 12 he was strolling out the front door wearing shorts, a baseball t-shirt, and flip-flops. The sunshine and the possibilities felt glorious on his quickly developing summer tan. \n\nOn his way out the door he spotted his next-door neighbor Mrs. Holloway walking with her one-year-old daughter, London. Her first name was Adrienne, if he remembered correctly. And he probably should remember, he'd gawked at Mrs. Holloway's obvious hotness from the moment they'd moved into the house some three years prior. \n\nShe was a young widow, after her husband had died a few years back from a rare genetic disease. It was a shock to everyone that knew them. They'd been such a lovely, powerhouse couple. She was only 27, and well off from the money he'd left her. She didn't really need to work, but she ran a weekend bakery in town, just to be around people and find something to distract herself with. She dated occasionally but was mostly bored with the options she encountered in town. They'd left the big city because they were ready for the comfortable, family portion of their life. And now she was on her own again. Just her and London, hanging in there, trying to find purpose in a mid-size suburb\u2014feeling at times, a little lost. \n\nDalton had jacked off plenty of times thinking about this young MILF of a neighbor. Particularly on those days where he saw her tanning in their backyard from his upstairs window. She had these tiny bathing suits and on occasion would go sans top, not knowing that he was often in his room, spanking his monkey to the surprise display of supple nudity. His bedroom was the only one in the house with a good view of the neighbor's pool due to the height of their cherrywood fence, and he thanked his lucky stars for such an arrangement. \n\nShe had brownish-blond hair with natural curls. It was always messy and attractive. It was always as it needed to be. Sexy. Fun. Funky. She basically looked hot in every thematic situation. \n\nToday she was wearing a very short jumper and tank-top with slip-on sandals and a hemp leg bracelet. Her hair was thrown up in a simple pony and she was wearing a large pair of rose gold sunglasses. She just looked effortlessly cute. \n\nHer daughter London was now walking everywhere, in that brave waddle of first worldly explorations, and she was constantly chasing the giggly little girl around the street and nearby cul-de-sac. \n\n\"Hey, Dalton!\" She waved kindly as she always did. She truly was a stellar neighbor. Everyone in the community loved her, besides the wives who had to scold their husbands when her juicy ass walked by and they invariably drooled, but even most of the wives wouldn't have minded getting a taste of her booty. She was that kind of hot. She actually looked a lot like Giada de Laurentiis, Dalton thought, after seeing the gorgeous celebrity chef on one of her Mom's favorite cooking shows. She had a similar sort of sexy pep to her. She was also only 5'2, which is why she often wore heels, which only further accentuated that lovely ass that she worked to keep so fit. She ran and did hundreds of resistance band squats and all sorts of Yoga.\n\n\"Hey Mrs. Holloway,\" he responded back. Always feeling slightly nervous around the attractive woman. \n\n\"How are the parents?\" She asked, as she corralled London to her exposed thigh to hold the child close. \n\n\"Oh, they're amazing! They're on their cruise right now,\" he told her, trying not to stare at her breasts poking out from the top of her loose tank top. \n\n\"Oh that's right, your Mom mentioned that. So...you get to have the whole house to yourself, eh? That sounds like a pretty sweet setup for...what are you, 17 now?\" She asked, mostly distracted by her daughter running through her legs over and over again as she played. \n\n\"No, I turned 18 at the beginning of the year,\" he said proudly, trying his best to keep his eyes off her legs and ass and breasts and lips and everything else she had going on. \n\n\"Ah, that's right,\" she said, but it was clear her daughter was becoming impatient to continue on to the park. The sun was out and fun was waiting. \"Well, it was nice talking to you...we have a date with a playground to get to...talk to ya later!\" She said, and they were off. \n\n\"Bye Mrs. Holloway!\" He said, and she looked back over her shoulder and smiled, even as her goegeous booty sashayed away. \n\n\"You can call me Adrienne. 'Mrs. Holloway' makes me feel old,\" she gave him a friendly wave and he repeated the gesture. \n\nDalton cut across the street which emptied directly into a sprawling, tree-lined park that was at the very center of the upper-middle income neighborhood he'd grown up in. It really was a great place to grow up. Little League baseball and soccer took place right across the street. There were four baseball diamonds, daytime and nighttime tennis courts, tons of fields and some area of rolling grass hills where playgrounds, a dog park, and bocce ball courts all collided together in a spiderweb of outdoor activity. The park even had a lovely lake at its center where people fed ducks bread even though the signs said not to. \n\nDalton headed over to the large area of sloping grass hills which dotted the top of the park. When he got there he saw five of his friends spread out on a hodgepodge of blankets and towels, with various drinks in hand. There was a portable speaker and some opened bags of cookies and potato chips. \n\n\"Sup, losers!\" He said, to the two girls and three guys hanging in a loose circle, enjoying the midday sunshine. \n\nIt was a lazy Tuesday on the first week of summer. Some kids would be starting college in the fall, some would be traveling, and others would simply be taking the year off, like Dalton was, to do some wandering. Such was the inherent privilege some were born into. Dalton tried to keep this in mind when it came to the way he carried himself. He was a good kid. So were his friends. \n\nBut they were also 18-year-olds, so. . .\n\n\"We're doing all the weed and drinking all the alcohols!\" A girl named Keona said in a humorous voice. He'd taken her to Prom the year before. They were long-time, platonic friends. \n\n\"Ah yes, the devil's lettuce and whatever shitty beer you guys were able to steal from Brooster's brother's garage,\" Dalton joked as as they laughed in agreement. They clearly had already gotten a head start. \n\n\"What...you think Keystone Light is shitty beer??\" Brooster said in mock indignation. He opened a bottle and handed it to Dalton. His name was Bruce, but he hated it because he said it made him sound like a 48-year-old life insurance salesman. And he wasn't wrong. \n\nKelsey and Bennet and Shane rounded out the group. Dalton said 'whassup' to everyone with various fist bumps and quirks, and an afternoon of drinking and smoking and not worrying about anything at all, soon commenced. What a time to be alive.\n\nIt was some hours later and Dalton was a little sun-burnt and a little cross-faded. He decided to head home and order himself a pizza. \n\nHe polished off his beer and tossed it into a nearby can with that effortless confidence of youth. \n\n\"Kobe doin' work!\" Brooster hyped, as Dalton strolled away chuckling, after saying goodbye to his friends. The late afternoon air felt relaxing on his skin. He was only wearing shorts and a t-shirt. \n\nAs he headed back to the house on the main path he came across the smaller of the parks three playgrounds. \n\nHe noticed the familiar frame and sexy hair of Mrs. Holloway, perched at a nearby playground speaking with what was clearly a very interested Dad. London was, as usual, the most energetic bumblebee in the hive; climbing this way and that on the nearby equipment. She was already incredibly adept at the various slides and ladders for not even being two.\n\nThis was probably their second visit to the park that day. Mrs. Holloway usually made numerous trips when London was feeling particularly bored. \n\nDalton noticed that she was doing her best to be polite and shed his advances, but he'd probably been BBQ day-drinking, as so many of the fathers in the neighborhood were known to do if they were home during the day. \n\nSuburbia was a nightly fucking rerun, that was for sure, Dalton thought to himself. \n\nAnd then, as he got closer to Mrs. Holloway, he caught her eye for a moment and she almost seemed to smile, as if this might give her an out. \n\n\"Oh, hey Dalton! How are the parents?\" She asked, making up a reason for a conversation. The Dad already looked irritated as he turned around to see the popular neighborhood teen approaching. \n\nDalton was about to save her and respond when his eyes scanned over to the big kid swingset where a darting London was waddling directly across the path of the incoming swingers.\n\nThe kid in the first seat was a high-schooler messing around with his friends. They were doing cherry bombs and flips and other varieties of never-grow-up revelry. The kid was big and stocky. \n\nAdrienne followed his worried expression to see what he had seen. She gasped. \n\nDalton felt a burst of adrenaline and did the only thing he could. He sprinted past Mrs. Holloway and the divorcee and dove down to his knees on the playground wood chips, pushing London forward and out of the way, just in the nanosecond of time. \n\nShe flew an extra foot and fell on her face, just between the diving bombs of childhood kinetic energy swooping from on high. \n\nThe next thing that happened was the most painful thing that had ever happened in Dalton's fairly charmed life up until that point. \n\nHe was smashed into where London had just been standing. \n\nThe kid on the swing had been wearing a pair of hard-nosed shoes, and he hadn't seen them coming because he'd been hanging his head back and enjoying the rush of the late-afternoon breeze in his hair. School was out, after all. \n\nThere couldn't have been a more unlucky connection of his feet against Dalton's wrists and arms. \n\nHis inside arm was hit first, and was broken. His outside hand got a direct force of toe, which broke his wrist. \n\nDalton collapsed over in a wheeze of shocking pain, as he felt his breath catch in his chest. \n\n\"Owwwwfffuuuuuggggggg!\" He moaned, as his whole body tensed and the proper alarms were raised. \n\nAdrienne screamed and ran over to the scene, checking on them both. \n\n\"Dalton?!\" She yelled for him, even as she swooped up London and held her tightly to her. The little girl was crying. Her face had a small scratch. Numerous adults had come over to check on them, including the mortified group of teens. The boy who had smashed into him seemed shaken, but otherwise unscathed.\n\nDalton was in much worse shape. \n\nIt was very clear to everyone who had seen it happen. He'd very possibly saved that toddler from what could've been a very bad injury. \n\nMrs. Holloway helped Dalton to slowly sit up, even as he gritted and wanted to cry, unable to put any weight on his arms.\n\n\"Hey honey, talk to me...tell me what hurts,\" Mrs. Holloway was so concerned for this young man that had heroically dived in to save her daughter. She urgently attended to him using what she knew. \n\n\"Fuck...I'm sorry...fuck...my wrist, oh mmmffffgghh...and my arm,\" he was trying to hold them up, as they both had shooting pains that racked his body with an intense throb of pain. \n\n\"Okay,\" she said, lightly holding his arms and feeling for his reactions to her touch. \"I think you might have some broken bones. I've got some nursing experience. Do you want me to call you an ambulance? Or would you rather I just drive you to a hospital?\" She asked him, speaking calmly and holding his attention. She knew he needed him to focus on her and not the trauma of the breaks. \n\nThe man she'd been talking to was holding his phone up with 911 pulled up, waiting for the decision. \n\nDalton tried to tough it out for a second. Maybe they were just sprained? Maybe this was just an overreaction? \n\nHe stretched his arm and wrist again and was unable to move them like he usually would. The pain was unbearable. But he also didn't want to call an ambulance. He wondered what that might cost his parents, and the last thing he needed was for them to know he was suddenly in trouble at the start of his amazing staycation; with the house all to himself. \n\n\"Ummm,\" he pondered it a moment longer, trying to stem the pain so he could think. It was no use. He would need to go. \"Can you drive me?\" He asked her, somewhat embarrassed at the request. \n\n\"Of course, come on...let's go,\" they helped him up and London was already done crying. She was a tough kid. She actually seemed more fascinated at her mother's quick-moving actions. \n\nThey headed home from the park and Dalton followed Mrs. Holloway into her large garage, which she opened from a code panel on the outside. \n\nShe fastened London into her carseat and grabbed her a fruit snack hidden in a side handle, and then she helped Dalton gingerly climb into the taller, SUV passenger seat. \n\nHe was not in good shape, but even with his broken bones, he couldn't help loving the feel of Mrs. Holloway's hand on his side and hips as she helped him in and then buckled his seatbelt. She was just way too much of a crush for him to ignore the closeness. Dalton wondered if he might be in shock. Or maybe his brain was just overloaded. \n\nShe drove as safely fast as she could, though perhaps cheated a few yellow lights, and soon they had arrived at the hospital a mile down the road. It was a medium-sized emergency room which Dalton had been in before for his Dad's Christmas nail gun incident. \n\n\"I didn't even ask...do you have insurance?\" She asked him hopefully. She was so guilt-ridden from what had happened. That much was very clear. Dalton felt bad, but he adored her attention. \n\n\"Yeah...this is our hospital. My card is in my wallet,\" he groaned as the car was jolted into park at one of the closest spots to the brightly lit entrance. The parking lot was fairly empty. \n\nShe got London out and put her in a stroller and then helped Dalton out of the car, and now he was really starting to feel the pain. He hardly noticed Mrs. Holloway's tight body pressed against his as she helped him hop out of the car. Hardly at all. \n\nThey walked delicately inside, and when they got to the counter an older woman with half-moon spectacles asked how she could help. Mrs. Holloway did all the talking and succinctly explained what had transpired at the park. \n\nThe desk nurse looked concerned as Dalton was very clearly in pain. She asked for his info if they had it, and Mrs. Holloway looked to him insistently. \n\n\"I'm gonna grab your wallet for you, okay?\" Immediately realizing he wouldn't be able to reach back and snag it like this. \n\n\"Yeah, that's fine,\" he said a little breathlessly. She reached into his pocket and took it out, fishing around for the card and holding back a smirk when she noticed a Trojan condom lodged in a deeper pocket. Even during a pressure-packed moment, Adrienne had a sense of humor. He was an 18-year-old boy, of course he'd be walking around with a condom in his wallet. Although maybe she should've dated better guys in high school because they always seemed to be lacking for some odd reason. \n\nAfter finding it behind his emergency credit card, she handed it over and quickly helped him fill out his paperwork. \n\nThe nurse said they could figure out the rest in the room and within five minutes they were ushering them back into the quiet examination area hallways. \n\nThey got him into an empty room and had him sit on the wax-papered exam table. \n\n\"How are you doing?\" Adrienne checked in on him, and Dalton winced a little and braved a grin her way. He wanted ever so badly to be stoic. \n\n\"I mean...I guess it could be worse,\" he joked. \n\nAdrienne laughed a little. They had to laugh. It was one of those moments in life. \n\nWhat a fucking day. London was getting a little fussy in her stroller and Adrienne quelled that with a well-placed tablet featuring touch-play games. \n\nThe nurse and doctor both arrived in short order and the suspicions that Adrienne had at the park were quickly seconded. \n\nThere would be some ordered X-rays to follow that would confirm the diagnosis.\n\nTwo solid breaks. Neither requiring surgery. But both would need partial casts. Six-to-seven weeks for both, as far as the healing timeline was concerned. \n\nDalton was expectedly devastated. He could feel the freedom of his summer getting that gut-punch. Mrs. Holloway felt guilty as hell. He'd been injured saving HER little girl. She was embarrassed about the impending phone called with his parents that she knew she was going to have to make. \n\nWhen they were back at the car an hour later, it was seven in the evening. She helped him back in and buckled him up, then repeated the move for London and the stroller. They pulled out of the lot and onto the twilight-lit road. \n\nDalton had his two casts on his hand and arm, and London was fussy and ready for bed. \n\n\"Dalton, I don't know how to thank you for what you did,\" she said to him from the driver's seat, as she clicked on a blinker at a red light. \n\n\"It's okay,\" he assured her. The hospital had given him a starter dosage of Vicodin and a prescription for much more. Nothing really hurt now. He was just achy and exhausted from the physical and emotional toll of it all. \n\n\"We need to call your parents,\" Mrs. Holloway said responsibly, as they pulled out of the driveway. A small panic came over Dalton. \n\nHe didn't wan't to involve his parents. Especially when it might mean the end of his care-free summer. \n\n\"Oh. Please. Don't.\" Dalton begged, as his sexy milf of a neighbor scrolled through her phone, looking for their contact info. \n\n\"No?\" She said, almost surprised, but also still feeling so grateful to this brave young man for what he had done. \n\n\"Look...\" he started, trying to think of the best way to make his case, \"this is their first vacation in forever and it's my first chance to just be on my own. If you call them it'll ruin everything, and they'll come home early and I'll feel terrible,\" he fervently explained his stance. He was terrified she was going to call anyway. She was an adult after all. \n\nShe stared at her 18-year-old neighbor. Her daughter's hero. Every logical bone in her body told her she needed to make the call and let his parents know about what had happened. \n\nBut she couldn't do it. He had sacrificed himself for her little girl. She would've felt like an asshole after hearing what he so desperately wanted. ",
        "\"Okay,\" she agreed, sheathing her phone in her cupholder. \"But Dalton...what are you gonna do? You are going to need help.\" They were driving into the neighborhood now. \n\nMrs. Holloway looked over at him, true concern in her voice. And definitely some guilt to boot. \n\n\"I'll be fine. Really. I'll figure it out.\" He said. He was hungry and tired, and a little sad as he pondered the lost opportunities of his summer. Adrienne could tell how down he was. She felt terrible. \n\n\"Well, look...Dalton. You should at least let me help,\" she reasoned with him. She was determined to make sure she paid him back now. She had to. \"I can come over and help you with dinner and any other things you might need,\" she said. \n\nDalton was a little embarrassed to even consider what that might entail. He didn't want to feel babied. But he also had to admit it was kind of exciting to think that this insanely hot woman would come over to his empty house and help him out. Maybe there was a silver lining to all of this? \n\n\"Okay, yeah...I guess you can help out if you want. I don't want to inconvenience you, ya know? I could probably get one of my friends to help,\" he said, trying to be humble in this scenario. It was awkward, to say the least. \n\n\"Well, if you're more comfortable with that, that's always fine too. But I'm just next door. So, here...can you get to your phone?\" She asked. \n\n\"Yeah,\" Dalton grunted as he was able to shimmy his phone out of his left pocket with his broken wrist hand (it was his right side that had the full broken arm, and this one felt much worse off). \n\n\"I want you to put my number in your phone and just text me whenever you need anything, okay?\" She said to him, still sounding responsibly concerned for his needs. He was so warmed at her intense helpfulness. She was really cool for being so understanding. \n\nShe rattled off her digits and Dalton typed them in with his off-hand, and saved her name simply as MILF (he was the only one that would ever see it). This might've been the Vicodin making him a little loopy, but whatever. He needed something to smile about. \n\n\"Okay...thank you so much, it means a lot,\" he said, as he looked over at her and his eyes ran down her gorgeous body. The car pulled into her driveway.\n\nShe helped him get over to his house and inside and then asked if there was anything she could do. He thanked her and said he'd be good for the night. \n\nMrs. Holloway gave him a final appreciative look, then left to get her daughter down for bed. All of a sudden Dalton was alone in his fucked up situation. \n\nHe spent the night feeling progressively angrier at the situation. It was one of those bad luck life moments that everyone has to experience. But the timing was horrendously stupid, that was for sure. \n\nThis was supposed to be his fuck around, do drugs, have sex, don't worry about when to wake up, when to go to sleep, or when to be home, summer. \n\nNow it was quickly apparent that it was going to be the take twenty minutes to get dressed, take twenty minutes to go to the bathroom, only wear clothing that doesn't require zipping/buttoning/tying, type of summer. Dalton probably wasn't going to be invited to many parties considering he couldn't drive or hold a beer all that comfortably. Flip cup? Nope. Beer Pong? Probably not. Wild sex with other girls about to head off to college? He'd probably snag a pity fuck or two based on his reputation alone...but he wasn't going to blow anyone's mind like this. All the energy of being 18, sucked up by a universally stupid accident. \n\nFucking toddlers, he thought to himself. Fucking hero complexes, and he laughed again. The drugs had not worn off. \n\nHe ate a very simple Hot Pocket, got a little stoned, watched TV, and then took an irritatingly long time figuring out his bathroom routine. \n\nFUCK. Dalton thought, as he finally began to understand the challenges he was going to face in the bathroom. \n\nThe doctor had explained that he would need to keep both casts dry whenever he showered or took a bath. That meant taping bags around his arms or buying some of the fancier shower covers that they made now. He'd have to get on that in the morning. \n\nTonight he awkwardly showered with his body in the spray and his casts held outside the glass door, moving parts of himself out slowly to apply what little soap he could with his left arm. He didn't want to get the casts wet and get an infection, but he needed some semblance of feeling clean. \n\nAfter a frustrating, half-successful thirty minutes with three soap drops, and even more grunts from all the uncomfortable contortions he had to hold, Dalton finally gave up. \n\nHe got out and dried off and wondered how in the hell he was going to handle washing his hair for the next two months. \n\nAfter he was dry enough he snagged a large t-shirt and gym shorts, and slowly wiggled his way into both. Anytime his casts caught on something it hurt. Now the drugs were starting to wear off. \n\nHe drank a ton of water and peed and then decided to turn in early. It was only nine but his body needed the rest. \n\nWhat a fucking situation to be in, he thought. \n\nHe drifted off to sleep, not wanting to dwell on how bummed he was, or the dull thud of swelling in his limbs. \n\nAcross the street in her master bedroom, Adrienne Holloway had already purchased four, rush-delivery, waterproof shower cast covers. \n\nAnd then, after feeding her daughter, reading some books, and putting her down for bed; she smoked a pre-rolled joint out on her back patio, and snagged her laptop to up the proverbial ante. \n\n\"Fuck,\" she thought to herself. She was strangely impressed as she thought back to what Dalton had done. She smiled and laughed a little. \"What a fuckin' champ,\" she remarked out loud. \"I'm gonna spoil this kid.\" \n\nShe navigated back to Amazon and within ten minutes of searching had a Nintendo Switch and the five best games ordered and on the way. There was a fulfillment center right on the edge of town so packages usually made it to the house that next day if they were on rush. She nodded her head decidedly. This felt good. He deserved it. \n\nShe enjoyed a glass of wine in the bathtub and after putting enough of her anxious guilt away, she tumbled into her large bed and fell asleep. She had an early morning ahead of her. \n\nThat next day, Dalton opened his eyes to the distant sound of the doorbell. \n\n\"Huh?\" He wondered. He looked at his phone and saw that it was already 11:00. Wow, he really had conked out. Who would be ringing the door on a random weekday with his parents out of town? Probably some package delivery he figured. \"Fuckkk,\" he moaned, as he crawled out of bed and immediately felt the wonky state of his damaged bones. \n\nHe headed down the stairs with a huge yawn. When he got to the door he saw the silhouette of a person through the glass window. It looked like a woman. \n\nHe checked the peephole and saw the warped version of Mrs. Holloway. She was holding a large bag in one hand and London in the other. She was dressed simply in jean shorts and a t-shirt with her hair down. \n\nEven casual, she always looked delightfully cute. \n\nHe opened the door to his sexy neighbor. \n\n\"Hi, Dalton! How are you feeling?\" She asked. \n\n\"Ugh, you know. Groggy. I just woke up,\" he said, suddenly embarrassed at not having brushed his teeth yet. \n\n\"Yeah, that makes sense. I didn't mean to bother you, I just wanted to drop off a couple of odds and ends,\" she explained. \n\n\"Oh, yeah, uhh, come on in,\" Dalton said, as he began to collect himself. His arms were making their presence known. His fresh breaks hurt. \n\nThey walked into the adjacent dining room which flooded out into the large kitchen and living room. The whole house was very open concept. It looked like it had been taken charge of by the cast of Fixer Upper or Property Brothers. \n\nDalton had always appreciated that his Mom and Dad weren't lame in that way. He definitely had cool parents. \n\n\"Well, uh, welcome to my house,\" he was trying not to wince. His arms hurt. He definitely had an air of wanting to look tough in front of his insanely hot neighbor. \n\n\"Yeah! I was here for your parents Christmas party last year,\" she said, looking around the place. \"It's so great!\" She complimented. \n\n\"Oh, yeah, that's right,\" Dalton remembered the party now. He'd missed most of it due to an unfortunately scheduled HS tournament that played at the very beginning of the break. \n\n\"Well, I'm sorry to wake you up...but I wanted to bring over some stuff for you,\" she handed slid the bag over the dining room table, which they stood beside. \n\nDalton looked through it, surprised at the gesture. \n\n\"Oh shit!\" Dalton said, with a cheeky grin. He'd spotted the Nintendo Switch and the various games. He had an Xbox...but probably wouldn't be doing that type of gaming with his arms barely working. But a Switch? He might be able to fuck with that, he thought. What a cool ass lady she absolutely was. \n\n\"Damn...is that...?\" He asked, already knowing. \n\n\"Yeah, I know. But look...\" she started, as she touched his shoulder softly, leaning towards him. \"I cannot thank you enough, Dalton. What you did was fucking incredible and I wanted to show my sincerest gratitude, okay?\" She said in the sweetest, most genuine way. She really did want him to have this. \n\nDalton couldn't stand what a crush he had on this hot, slightly older woman. She was so damned beautiful in every single way. He found it difficult to keep his cool around her incredible presence. \n\n\"Sorry...I probably shouldn't be cursing around you 'cuz you're only 18, but whatever, you're an adult now. I'm sure you aren't that innocent,\" she joked. He laughed at that. He'd literally been cross-faded in the park that previous day with his friends. He had used a curse word or two. \n\n\"Yeah, you're good Mrs. Holloway, and seriously, thank you. That's amazing,\" he looked through the rest of the gifts and found the shower bags. \n\n\"Of course. And remember. Call me Adrienne, seriously. I'm not old. I'm not a 'Mrs.' Just Adrienne,\" she insisted. \n\n\"Okay, well, thank you, Adrienne,\" he said. He finished with a little grunt from the growing ache. \n\n\"You in pain?\" She asked, noticing. \n\n\"Yeah...I think the Vicodin has fully worn off. I need to head over to the pharmacy to get the prescription filled,\" he said, simply working through what he'd need next. He hadn't even meant to imply anything. \n\n\"Okay, great...well, why don't you text me when you're ready, and I'll drive you over and we'll get it done before your arms hurt too much, yeah?\" She suggested, and he couldn't find a reason that didn't make sense. She clearly wanted to help. \n\nHe agreed to that plan and she was off again, completely breezy in everything she did. \n\nDalton shut the door and began the arduous process of getting ready. Everything was difficult. Brushing teeth. Rinsing his face off off. Eating breakfast. Everything took way longer and caused extra pain along the way. This was going to be a real shit-show, he thought, as he went through each step and discovered his severe limitations. \n\nHe settled on sweatpants and a t-shirt and some slip-on sandals that he usually used for post-soccer bus rides. He was glad for the summer heat. If he'd had to put on winter clothes he'd have been screwed. Everything hurt. \n\nHe texted Adrienne to let her know he was ready. \n\nShe was over five minutes later. London was already packed up in the car, singing nonsensically to herself and playing with toys. She stood at his door, wearing some navy yoga pants and a white tank-top with her hair in a simple braid. \n\n\"Ready?\" She said, already turning to head back towards her car. \n\nDalton gulped as he saw her round ass accentuated in the yoga pants. \n\n\"Good Lord,\" he said under his breath. Her ass was...very much that. It was an ASS. \n\nHe followed her down his steps after locking his door gingerly, and then she was helping him back into her front seat, which they'd already gotten better at. \n\nThey drove to the pharmacy and grabbed his prescriptions, and then made a quick stop at a grocery where Mrs. Holloway went in to to purchase some Pop-Tarts, breakfast sandwiches, Lunchables, and other various easy-to-eat, ready-made meals. \n\n\"Ya know...you can't only eat this stuff all summer,\" she said, as they pulled out of the grocery store parking lot. \n\n\"I can't?\" He asked, laughing. He'd popped a pill the second they left the pharmacy and he was already feeling better. \n\n\"No, you can't. Tell ya what, how about you let me come over and make dinner for you tonight?\" She asked him kindly. He wasn't going to say no. He was entirely taken with her. She was intensely hot. \n\n\"Yeah, uh, that would be okay,\" he said, trying to be as nonchalant as possible. He'd already gotten hard earlier after seeing her butt in those workout pants. \n\nAn 18-year-old cock was the subject of many and frequent boners, and she certainly hadn't been helping that. \n\nShe told him that London went to sleep at 7:30. When he was ready she'd simply walk the baby monitor over and set it up at his house. She knew from past attempts that it had great range out by the pool. \n\nDalton took another nap that afternoon and ate when he woke up. \n\nThen he did his best to get ready and make the house look semi-presentable. \n\nHe heard the doorbell promptly at 7:30. When he went to answer it, Mrs. Holloway was standing there in a loose pink sweatshirt and gray sweatpants that clung to her body quite unfairly. Then there was a pair of barely tied tennis shoes and her white ankle socks socks. She was carrying a canvas bag with a bottle of wine, some groceries, and her baby monitor. \n\n\"Hey there!\" She said with that signature charm, \"How's the neighborhood's newest Avenger feeling?\" She asked, jokingly.\n\n\"Ughhh...like I'm in the first half of the movie,\" he replied cheekily. He was getting more comfortable around this stunner because she was so darned nice to him.\n\n\"Well that's understandable, you hungry?\" She pushed past him into his house. Dalton thought he could smell a little weed on her. That made sense, he reasoned. She seemed like she knew how to have fun. \n\n\"Yeah...starving. I've only had junk today,\" he admitted, closing the door and following her in. \n\n\"Toldja!\" She laughed. \"Okay, I'm gonna whip up some mini-sandwiches and homemade soup,\" she promptly explained, as she walked into the kitchen area and he took a seat on the island bar stools. She kicked her shoes off and placed them by the door, and then got down to work. \n\nShe plugged in the baby monitor and set the antenna up and sure enough, the picture came through perfectly clear. If anything happened or if London woke up, they'd know. With that worry out of the way, Adrienne began to unpack the bag. She had all she'd need to make her ham and Swiss with quince jam, that she'd grown up on; with some tomato basil soup on the side for good measure. The truly genius move had been that she'd brought over two, large Boba straws, so that she could serve the soups in tall cups. This was so that Dalton wouldn't have to lift his hand as often to take a tasty sip. \n\nShe made their dinner and and asked if he had a corkscrew as she grabbed a wine glass from a nearby hanging rack his parents kept on a side bar. He told her which drawer it was in and she began to open the wine. \n\n\"You don't mind, do you?\" She asked. And of course he didn't mind. \n\n\"Not at all...\" he said, as he stared a little jealously at the bottle. He had planned to do a lot of imbibing that summer. \n\n\"Umm,\" she countered, as she caught him eyeing her expensive pinot. \"Do you drink?\" She asked, curiously. She'd been 18 once. She wasn't naive. He looked like the type of kid that probably had some drinking experience. \n\n\"I definitely drink,\" he said, flashing a toothy grin. \n\n\"Yes, but...\" she wheeled around on him as she pulled the cork out of the bottle with a satisfying pop. \"Do your parents know you drink?\" She had this follow up ready to go as she elongated the word 'parents.' She wanted to help him out but she wasn't going to corrupt him. \n\n\"They definitely do. They're very cool parents.\" He said, and that was the truth. He might not tell them every time he drank or smoked, but they had the appropriate responsibility conversations with him and were generally hip to what he was up to in his social circles. She inspected him as if determining his merit, but decided that she trusted him. \n\n\"Okay, well, since you technically saved my daughter from being crushed by the rock from the Lord of the Flies...would you like a glass?\" She was already reaching for another. She knew the answer. \n\nDalton stared at her ripe ass when she reached up for his wide-bowled crystal. It looked so good in her tight, sweatpants. He wondered if she was wearing underwear. He couldn't see any panty lines. \n\nShe turned back around as Dalton quickly averted his eyes, and she poured them each a large glass, and then got to work on their dinner. \n\nThey talked a lot while she made the tiny, gourmet sandwiches and charred the bread to a perfect crispiness. Then she sliced and diced and seasoned as she prepared the soup. \n\nDalton had originally thought he would put some TV on, but had opted instead for some chill, lo-fi jams. She seemed into it. It was amazing how well the two of them got along, considering the nine year difference in their age. She seemed so adult to him, but he didn't seem all that younger to her. Adrienne had always felt like she'd never truly grown up. She was a fairly carefree adult that had no interest in considering the meaning of her approaching 30's or what that might entail, especially after the sudden death of her husband. She had fallen into a different groove since then. She was learning to flow with what life had decided to give her. In many ways it was her renaissance. \n\nDalton got to learn all about her life. How it had been after her husband had died and the grieving process the followed. He took careful sips of his wine and she allowed herself to relax around him. \n\nThey ate dinner on the kitchen bar stools and Dalton was amazed how much they seemed to vibe with each other. On numerous occasions she would reach out to touch his knee or arm when she was laughing or shocked by something he'd said. There wasn't anything behind it. It was just how she was. A lifetime flirt that always came off that way. He didn't mind one bit. Neither did his cock. \n\nThey ate slowly, and Dalton especially took his time. It hurt to use his arm too much so she set up his left elbow on the counter under a dish towel so he could mostly push his head forward to grab bites. This had basically been the method he'd been using on the couch all throughout the day. It truly was going to be a challenging two months of physical navigation. \n\nIt was around 10:00 PM and they'd polished off the bottle and dinner. Adrienne cleaned up the dishes and glasses and Dalton excused himself to go pee, which he achieved fairly quickly thanks to the loose sweats he was wearing. \n\nAfter finishing in the bathroom Adrienne took her turn. \n\nWhen she came back out she noticed Dalton had moved over to the couch where she walked over and slumped down a couple seats away. \n\n\"Thank you so much for making dinner, seriously...that was awesome. I've felt so hopeless at certain tasks so far,\" he admitted, a little embarrassed. \n\n\"Oh, Dalton, seriously, whatever you need me to do. I'm gonna be here for you, okay? That's our deal, okay?\" She assured him, feeling a little wine-tipsy and entirely appreciative. \n\n\"Well, you're fucking amazing,\" he said, showing off the fact that he did indeed cuss. \n\n\"I know I am,\" she stuck her tongue out at him. \"Is there anything else you need?\"\n\n\"Actually...\" he started. He looked over towards the TV where the Nintendo Switch box had been abandoned mid-setup. ",
        "\"Ooohhh, damn, I didn't even think about that. Can I help you set it all up?\" She asked, feeling a little silly for not having thought of this sooner. It wasn't always easy to set up a brand new gaming system on a complicated TV with all the HDMI cables and plug locating. \n\n\"Yeah, I'd appreciate it...I wasn't able to get to everything,\" he said. \n\n\"Yeah, no, totally. That makes sense,\" she hopped up from the couch and walked over to the large, flat screen TV that was set in the middle of a long bookcase that ran the length of the family room wall. It was an impressive, single piece that had been specially made for the home. The plugs were behind the TV and wedged down below some shelving where the power strip was located. \n\nShe snagged the necessary cords and bent herself over to figure out the appropriate hookups. The entire time she was leaning over working, Dalton was gifted with a mind-the-gap rump that was completely demolishing his teenage sex drive brain. She would rock from one leg to the next as she finished the instillation, and he was immediately reticent of the fact that his sweats were starting to tent.\n\nFuck. He thought. He looked away and tried to think of un-sexual things, even as he awkwardly did his best to hide his cock below his waist band. He just needed to think of something else. . .\n\n. . .Like Mrs. Holloway's perfectly rounded ass. FUCK. This was hopeless, he knew. She was a piece of gorgeous art. \n\nShe finally, mercifully finished and he turned on the TV, hoping the input and video game would distract from his somewhat obvious boner. \n\nAdrienne didn't notice though. He was wearing dark sweats that hid it well. \n\nAfter the Switch had beamed to life, he asked her if she wanted to play some Mario Kart. She looked at her phone to check the time and then checked the baby monitor. London was lost in dreamland. She didn't see any harm in it. \n\nAs she sat down she handed him a controller and they began to play. \n\nIt took about five minutes for them to both realize that it wasn't going to work. Dalton's right arm was too fucked up. He couldn't use any of the most important buttons. \n\nThey cracked up as he continuously went crashing into walls or flying off of sparkly bridges. \n\nYoshi looked drunk, or, at the very least, like he was driving one-handed. \n\nAnother red turtle shell had collided into Dalton's reality and it sort of put a damper on the rest of the evening. \n\nAdrienne felt even more terrible. \n\n\"Well...you'll be able to play it when your casts come off!\" She tried to comfort him. \n\n\"Yeah...\" he said, and you could see the sadness setting in. \n\n\"I'm so sorry, Dalton,\" she said, sounding like she was also experiencing his pain. She had always been an empath. \n\n\"It's okay...I think I'm just gonna turn in,\" he said, and she totally understood. \n\n\"Of course...well, hang in there. And text me whenever you need anything, okay?\" She said, reaching out to touch his knee lightly again. It felt electric every time. She was so fucking hot. \n\n\"Yeah,\" he promised. \"Thanks for everything tonight. You're awesome, for real,\" he said, making sure to show her how much he appreciated everything, even through his mood had clearly taken a turn. \n\n\"Of course. I'm gonna be here for you all summer, Dalton. I owe you that,\" she said decisively. \n\n\"Thanks Adrienne,\" he said to her, a little glumly. \n\nShe packed up her stuff and was out the door before 11:00. \n\n\"Welp...fuck everything I guess,\" he said to the empty room, as he clicked the internet on the TV over to one of his favorite porn sites to have a jerk. \n\nHe put on one of his favorites. An amateur blond actress that didn't look that far off in age from Adrienne was riding reverse cowgirl on her boyfriend, who was filming it all POV style. Dalton always loved this kind of amateur porn, but he especially liked it as his dick and brain were currently placing Mrs. Holloway in every single deviant scene he could find. \n\nHe was very hard as he watched. \n\nBut here is where things truly went south. \n\nDalton's jack-off hand was out of commission and his left hand could barely grasp a Pop-Tart or Nintendo controller. There wasn't much hope for his seven inch cock, which was frustratingly hard. \n\nHe tried his best to rub his bulging dick with his movable fingers and half of his palm, but the best he'd probably be able to do is edge himself all night. There was no way he was going to cum like this. \n\nDalton started laughing out loud at the comedy of errors he now seemed to find himself in. It felt like an early Tom Hanks' film. Some truly Murphy's Law-esque bullshit. \n\nThis was now terrible for a much more pressing reason. \n\nHe hadn't jacked himself off in two days now, which, in an overly horny 18-year-old's world, is basically equivalent to a dormant volcano watching volcano porn with a corked top. It was blue balls without the blue balls, especially thanks to all the mini quakes his cock had been having around Mrs. Holloway's very bouncy body. \n\nHe decided he was done dealing with this shitty day, and after slowly brushing his teeth and getting ready, he went to bed beneath the sadness of his tented bedsheet. \n\nAcross the property line in her own upstairs room, Adrienne smoked a joint, crawled into bed on her stomach, took out her vibrator and brought herself to a couple of much-needed orgasms. She was hornier than usual, but she figured it was probably just from the exhaustion of her day and her own lack of recent fun. But she had to admit, she felt very sexy with all the staring she caught her red-blooded, 18-year-old neighbor giving her when he thought she wasn't looking. \n\nHe was more obvious than he meant to be, and it felt nice to be reminded of her allure. \n\nShe was determined to turn this summer around for him. \n\nThat next day Dalton woke up with morning wood that would've impressed even the most accomplished lumberjacks. \n\nHe grabbed his phone and began to think about how he was going to solve this. Maybe there was a girl from his friend group that had he could convince to come over for some fun?\n\nAs he scrolled through his contacts he realized his options were slim. Dalton was very popular but he was also a nice guy. He didn't keep a lot of fuck buddies on standby. He'd been off-limits his last two years due to his recently terminated relationship, and the few ladies who probably would've considered having some summertime fun with him probably weren't going to be interested in the super one-sided sex he'd currently be able to offer. Dalton was handsome and well built thanks to his varsity sports, but arms and hands and flexibility are fairly underrated qualities when looking for some no-strings-attached boning. And he had more than just strings. He had bulky casts and a body that he was having trouble getting thoroughly cleaned due to his failed shower gymnastics. \n\nWho didn't want a funky smelling 'Teenager-de-Milo' for their July fling? He laughed at himself. \n\nDalton sent off a few hopeless texts anyway as he got up to start his day, but all of those hopes had fizzled out by the time he'd made it to the kitchen counter to chow down on a microwavable breakfast burrito. \n\nHe also checked his emails where he had a daily thread going with his parents about their trip. They were having a great time and he wasn't going to smudge that for them. He messaged them back to let them now that he was just fine, that he missed them, and that they had nothing to worry about. \n\nHe could explain everything when they got back. Whatever. \n\n\"Fuck this,\" he mumbled as he felt that familiar achy pain coming back. \n\nHe gobbled down the frozen egg, sausage, and pepper, and cheese, and yawned with a big stretch of his legs. \n\nAfter a mostly boring, slow-moving morning, Dalton picked up his phone and scrolled thru to Adrienne's number. He paused for a second and then decided he had no other options. He texted her. \n\n\"Could you help with a late dinner again tonight?\" He asked, realizing that she seemed to the one bright spot in all of this. \n\n\"Of course, D!\" She texted back with a smiling emoji. \"I'll be over as soon as London goes down again!\"\n\nFrom there, Dalton mostly stuck to the couch, resigned to his fate.\n\nThe day passed by lazily, and before long, it was evening. Dalton had taken another irritatingly messy shower and thrown on his last pair of sweats and t-shirt. He was going to have to figure out his laundry situation soon. That was another task he wasn't looking forward to solving. \n\nWhen Adrienne arrived later that night, it was about 7:40. Dalton answered the door and his hot neighbor was standing there in another tight pair of burgundy Victoria's Secret sweats and t-shirt, with a loose sweatshirt unzipped. She wasn't wearing a bra, Dalton noticed. Her hair was up in a lazy half-tie and she had her bag of necessities slung over one arm. \n\n\"Hey, kiddo!\" She said, in her ever-engaging manner. \"How you doin'?\" \n\n\"Hey there,\" he said, as she walked past him and into the house. \"I'm hanging in there.\" \n\nThey headed into the kitchen and she began to make another tasty meal for two, as she talked about her day. Dalton appreciated that she didn't talk down to him or treat him like a kid. She was like a cool babysitter. Try as he might, Adrienne could tell that there was something off with the usually good-spirited Dalton. She poked and prodded throughout dinner. She opened up another killer bottle of red wine and they got slightly tipsy as the night went along. \n\n\"Hey...are you sure everything is okay?\" She said finally after one awkward moment of silence between them. \n\n\"Ehh, honestly...I'm having a really tough time,\" Dalton finally admitted, feeling like he could cry from the sheer exertion of it all. \n\n\"Oh honey...tell me why. I'm sure I can help in some way,\" she assured him. \n\nShe walked over to the sink with their empty plates and came back to the counter where they were both polishing off the last of the Syrah. \n\n\"Well...\" Dalton sighed. \"Where do I begin?\" \n\nHe took the new few minutes to talk about how much everything hurt. He talked about the fact that he was having an impossible time in the shower trying to wash everything, especially his hair. He talked about the various chores, including laundry, that he was having trouble doing. Especially considering he could really only manage to throw on sweats and t-shirts. Anything else was just too difficult. \n\n\"Well fuck,\" Adrienne said, as he finished, with a defeated crescendo.\n\n\"Yeah, fuckin' fuck,\" he agreed, flashing a miserable grin. He hadn't mentioned the other truly terrible thing, which was of course his almost permanent aching boner from each new day of not being able to masturbate. \n\n\"Okay...look, we can figure this out. Wanna open another bottle and go sit on the couch where we can set your arms up?\" She asked, as she scooted closer to him, looking so distressed for him. \n\nDalton got nervous whenever she got this close. He could smell the vanilla lotion she wore and a hint of her body wash. She was insanely gorgeous and her soft skin was impossible not to admire. \n\n\"Umm, yeah, that sounds good,\" he agreed. \n\nMrs. Holloway went to snag another bottle of high-alcohol red and when she had grabbed their empty glasses, she led them over to the big, L-shaped family room couch. Dalton clicked on the Dodgers/Padres game for some background noise. \n\n\"Mmm, good choice,\" she beamed at the TV with a nostalgic gaze. \n\n\"Oh, are you a fan?\" Dalton asked. \n\n\"Yeah...I grew up on Scully's voice. My Dad would take me to games on school nights when I finished my homework early,\" she said warmly, with a twinkle in her eye . \n\n\"Ah, that's awesome. Yeah we had season tickets before the pandemic. My parents plan on buying some for next season again...so I'll try to go to every game I can. I've missed it,\" he said. \n\nShe propped him in the middle seat and placed some of the throw pillows under his arms so he could get comfortable. \n\nThen she sat right next to him and poured their two glasses anew. \n\n\"Here, I'll rest your glass on my knee so you can just tell me when you need it and don't have to lean forward,\" she said thoughtfully, as they settled in. \n\n\"Thanks Adrienne,\" he said kindly. It felt good to be so close to her. \n\n\"You got it, kiddo,\" she beamed back at him. \"Okay...so, clearly your life is a steaming pile of shit...let's make it better, yeah?\" \n\nDalton laughed, \"Ha...okay. That's a little harsh to hear buuuuut, you're not wrong! So...whatcha got in mind?\" He was wondering what she was going to do to cheer him up, knowing they couldn't play the Switch she'd already bought him. \n\n\"Okay, first, I think you deserve a little chill,\" she took a weed vape from her sweatshirt pocket and wiggled it in the air. Dalton's expression brightened. \n\n\"Dalton...are you a well-traveled 18-year-old?\" She queried, with a little deviousness in her voice. She felt kind of young again herself, offering weed to a guy late at night on his couch. It was a fleeting but curious thought that zipped around her brain. \n\nHe immediately recognized the pen. He even recognized the brand. Brooster would literally take his to school when they had standardized testing days, and offer some fuzzy respite to his friends during lunch period. Thank god those days were gone, he thought. \n\n\"Yes, that is something I know QUITE well,\" he admitted, laughing again. She really was the coolest fucking lady. \n\n\"Wanna get stoned?\" She said, in a newly conspiratorial voice. \n\n\"Yes. Fucking yes I do.\"\n\nShe laughed and allowed him to lead off, and they were quickly on their way to Maryjane Lane. \n\nAdrienne grabbed the remote after the score of the game had ballooned. She pulled up the Hulu app and got an episode of Rick and Morty going. \n\n\"You're a Rick and Morty fan!?\" Dalton said giddily, buzzing off the Sativa and enjoying the feel of Adrienne's knees pressed into his leg. She was sitting almost sideways to him, doing her best to give him her happy energy and pull him out of his funk. \n\n\"Yeah dude...I'm not THAT fucking old!\" She joked. \n\nThey began to talk about all sorts of topics, occasionally laughing their asses off at the adult cartoon riffing on screen. \n\n\"Okay, but back to the topic at hand,\" Adrienne said, suddenly straightening her posture and turning completely sideways to Dalton. She was resting her hands on the pillow next to his cast. \"You haven't been able to take a full shower in like...four days??\" She asked insistently. She felt sorry for this predicament. \n\n\"Almost, yeah,\" Dalton admitted. They were both very stoned and loopy, but Mrs. Holloway was determined to navigate this tricky suggestion she was about to make. \n\n\"Okay, so look...I was a nurse once upon a time. I've basically got experience helping people in exactly your situation...\" she was looking intently at Dalton's curious expression. \n\nDalton's heartbeat had quickened. It was the weed and the higher-alcohol red and the way her breasts pressed out of her sweatshirt. \n\n\"Sooo, hear me out. I know this might sound weird, but if you wanted I could help you take a shower,\" she said, even as she took another hit off her pen. Dalton's eyebrows went up and he felt his cock pulse in his sweats. \n\nShe offered him the pen between her fingers and he took another hit. \n\n\"Uhh, I mean...it is a little weird...but I think I'm just embarrassed that I have to ask for this kind of help, ya know?\" Dalton was stoned and stumbling a little over his words while trying to keep his cool around Adrienne. \n\n\"Well I totally get that, but it's not weird for me at all, so if you want help, I can totally help.\" She said again, refilling their wine glasses. \n\n\"Ummm, yeah...okay.\" Dalton agreed. Of course he wanted her to do this, but he was nervous about hiding his excitement from the whole thing. How would he not get hard with her washing his body? \n\n\"Well...let's get it done then!\" She said, as she hopped up from the couch. \n\n\"Oh...right now?\" Dalton was surprised. He just figured she had meant some other time. \n\n\"Dude, don't you feel gross? Of course now.\" She said it so simply. So friendly. She was helpful and hot, and Dalton was nervous. \n\n\"Okay, yeah,\" he got up and led her upstairs to his parent's master bathroom shower, which was bigger. He'd been showering in here for the bench seat and extra space. \n\n\"Oh, yeah, this is great,\" she said, as she took her sweatshirt off so she was only wearing her tank-top. \n\nShe looked over at Dalton as she pulled her hair into a tighter pony. \n\n\"Dalton...the awkward part is that you have get naked now,\" she said, with a teasing smile towards him. \n\nHe was standing there, breathing heavier as he watched her peel her sweats off so she was only wearing her booty short underwear. They were yellow and showed off her sexy ass and brilliant pussy outline. Dalton was already starting to feel a stir in his cock. \n\n\"Right,\" he melted. He started the arduous process of trying to disrobe his shirt first. \n\n\"Here, just let me help you. Enough of the tough guy act,\" she reasoned, as she adjusted the shower nobs to achieve the appropriate heat. \n\nShe walked over to him and helped him gingerly pull the large shirt off his body. Her breath caught a little as she noticed that he was more muscular than she expected. Abs and pecs and swagger, oh my. She shouldn't have been looking, but she was. \n\n\"Shorts too,\" she instructed him dutifully, and she helped him pull his soccer shorts off which freed his half-hard, seven inch cock, as it bounced out proudly. \n\nShe stood up as he stepped out of his shorts but even Dalton had noticed her eyes dipping to drink in the gorgeous man pipe that had just been revealed. \n\nHoly shit, she thought in amusement. He was, QUITE big. \n\n\"Where are the arm bags?\" She asked, remaining appropriately professional. She didn't need to be caught ogling his cock. \n\nDalton nodded over towards the vanity drawers and she quickly hopped over to get his protectors. \n\nShe unwrapped each and quickly helped him get each of his arms cinched into the plastic. He couldn't stop staring at her sexy body, on display in front of him, wearing only the tank and the underwear. She didn't have a bra on so her cleavage was set on marvelous display. \n\nShe stepped into the shower first and beckoned him in after her. Dalton stepped naked into the shower, standing eight inches taller than his bombshell neighbor. Then she closed the swinging glass door behind them and Dalton was suddenly soothed by the hot spray that coated them both. There was a thick fog of steam filling up the bathroom. Dalton realized he hadn't turned on the exhaust fan. The bathroom had only one light working over the sink. The main light hadn't been flicked on. The hot, gushing water felt incredible. \n\n\"Look,\" she said smiling at him, \"I know this is awkward...so how about instead of saying anything, you just let me wash you and take care of you, okay?\" She said to him, wanting only to pay him back. She didn't want him to feel weird about this. She had done this many times before in a work environment. This wouldn't be any different, she figured. \n\n\"Okay,\" he agreed kindly. Why the fuck not? He thought. He was stoned. And feeling way too good to care. \n\nShe pulled him into the water so they were both completely coated in it's hot spray. She smiled at him as they both were clearly feeling the effects of the weed and the water. \n\n\"Ughh...that feels really good right now,\" she said, unexpectedly excited. \n\n\"Yeah...fuck. It does,\" Dalton agreed. He still had his eyes closed. He couldn't believe he was in his parents darkened shower, with his hot neighbor wearing nothing but a loose tank and her panties. \n\nShe grabbed the nearby shampoo which he'd clearly been using and squirted a huge glob out onto her hands. She turned him towards the water so it was splashing against his chest, and slowly had him soak his hair, and when it was fully wet, she stepped close behind him, and rubbed her shampoo covered hands into his greasy locks. ",
        "Dalton practically purred towards her as her strong fingers rubbed the shampoo through his messy hair and made him feel like he could faint at how good everything felt. She massaged his scalp with shampoo for a good five minutes before she pushed him towards the spray of the water to wash it all out. She rubbed her fingers fully through the soap and water as he allowed her to completely take over. Everything felt briefly wonderful. \n\nWhen Dalton finally opened his eyes he saw Mrs. Holloway reaching over to grab a bar of soap from the nearby shelf. \n\n\"Oh...I usually just use that body wash,\" he said, nodding over towards some pine-scented squeeze bottle that he'd been struggling to use that week. \n\n\"Oh...that's okay. Let me just do this for you,\" she said...and Dalton was surprised when she leaned in close to his face and gave him a silly grin. \n\nAdrienne was stoned. Fuck. Had she just flirted with him? She wondered to herself. She had. That was not good. She was more stoned than she meant to be. \n\nBut that didn't change what she had decided to do for this boy. \n\nShe stepped in close to him in the shower spray, and Dalton held his breath as Mrs. Holloway began to rub the bar of soap over his chest. \n\nShe smiled at him as she bit her lip. She was having trouble hiding the fact that she was enjoying this task. But she had to try. \n\nDalton watched as she slowly worked the bar of soap down his body, over his back and arms and armpits. She scrubbed soap into him with her soft hands and she got closer to him as she worked. Dalton was breathing very shallow as she washed him. \n\nAdrienne was getting lost in his muscles, and then without even thinking. She sunk down to her knees. She began to soap up his legs, starting with his feet. \n\nDalton was feeling lightheaded in the hot water. His half-hard cock had risen fully to attention. He wondered what she must think of the fact that he had a full boner in front of her face as she soaped his legs up. \n\nAdrienne couldn't take her eyes off of his big cock. God...it had been a while since she'd gotten to enjoy a cock this nice. She was doing her best to stick to the job at hand. She knew it would be wrong. She did. She definitely should not abandon her task. She definitely should not stop washing him and begin to suck on his cock. She knew this. \n\nShe did. \n\nBut god, he was so big and so hard. \n\nShe smiled up at him as he looked down at her face, splashed in the spray of the water as she worked, as if to make light of the situation. \n\n\"I'm sorry...I'm not trying to, ya know...I just...\" Dalton was attempting to apologize for his unavoidable boner. She was kneeling in front of him, her tank-top mostly soaked through now. He could see her breasts poking through the wet fabric. It was thin and her nipples were hard. \n\n\"Dalton, it's okay...guys get hard all the time. I don't care,\" she said it so nonchalantly. She subconsciously bit her lip a little as she scrubbed the soap into every crevice on his lower half. \n\nShe passed the bar around his thighs and even allowed her hands to reach up under his legs to his butt cheeks. \n\nDalton couldn't believe when he felt her fingers slide into his ass crack and begin to wash him there. She didn't even ask. She just did it for him. Wow. She was so fucking sexy. Dalton was fucking broken for this woman. \n\nShe brought her hands around and rubbed his butt cheeks in both of her hands with the soap, and he couldn't help but stare down at her ass in the shower spray, as her panties and tank-top were both thoroughly soaked through now. \n\n\"Dalton...\" she started, as she stood back up and faced him in the spray of the water. He was standing with his covered casts pressed against two upper shelves that ran along the wider edge of the shower space. The water fell over his back and shoulders and onto her front. She placed her hands on his shoulders to steady herself. \"Do you want me to wash your penis and balls? I understand if that's too personal...and I especially understand if you'd be uncomfortable with that because you're...ya know...\" she glanced down to his very hard cock only inches away from her wet midsection. What a cock he'd been packing, she marveled again. \n\n\"Umm...\" he said, suddenly feeling his horny words catching in his throat. Was she really offering to wash his cock for him? She had offered so simply. Like it was nothing at all. Like it was no big deal. She only wanted to help. \n\n\"I'm sure you've had trouble washing down there with those casts. Just let me do it real quick and we'll be done,\" she reasoned with him. \"You know you'll feel much better after.\" \n\n\"Okay, yeah, go ahead,\" he said, gulping. The water was hot and his head was swimming with wild nerves. \n\n\"Good,\" she said. And her hands were suddenly on his hips. She put the bar of soap down and squeezed a glob of body wash out of the other container. Dalton watched as she brought her soft hands down to clutch his scrotum and shaft. \n\nHe almost moaned out loud as her hands quickly worked the soap over his cock and sack. Adrienne felt her own breath catch as her fingers caressed the impressive size of his shaft three full times to make sure soap got everywhere. Also, because she felt like this was all she could get away with without being obvious about the fact that she really wanted to stroke this big cock. Fuck, she was starting to get horny from all of this. \n\nShe caressed his balls with more of the wash and brought her hands back down to his ass crack to clean him there again, even as Dalton practically cried into her shoulder where he had bent forward to lean while she cleaned him. She knew how badly Dalton wanted her to keep touching him. She truly loved that kind of power. But she was also responsible. She needed to do the right thing and simply offer to help this boy. Even if that meant thoroughly washing his dick because she liked the size and weight of it in her hand. Who said you couldn't mix business and pleasure? \n\nA couple of minutes later and she was turning his body into the direct spray and using her hands to wash off the soap, taking one last lovely flick of her thumb over his helmeted head and slit. \n\nDalton shuddered from the last of her cleaning techniques and then the water was being turned off. \n\n\"Ughhh, Adrienne...that was so great. Thank you so much,\" he said, still crazy hard. \n\n\"Of course, babe. And look...if you need me to help you wash from now on...I can do that for you. Probably not every day...but this was pretty easy, so just let me know when you need it and I'll help you out, okay?\" She promised with the sweetest face. He did need it. He needed it so bad. \n\nHe nodded thankfully to her as she hopped out of the shower to snag them both towels from the nearby rack.\n\n\"Do you have a shirt I could change into, Dalton?\" She asked him, even as she began drying his whole body down for him. \n\nOnce again she was on her knees in front of his still hard cock. \n\n\"Yeah, uh...let me snag you something,\" he was once again almost convinced she was about to start sucking on his cock. But she just kept drying him. Was she teasing him? Or was he just the horniest person in the world? Maybe both. \n\nWhen they were done, he led her down to his bedroom and showed her where his dresser was. She was able to find one of his old t-shirts. She said thank you and asked him to turn around for a second. \n\nShe took off her wet tank and for a moment, considered her hard nipples in his bedroom mirror, and the goosebumps on her clean skin. She wondered what he would do if she just got naked and told him to turn back around. She laughed to herself. She knew this was a silly notion. \n\nShe threw the old baseball shirt on, which hung low enough that she could simply wear it as a skirt, so she shimmied out of her wet panties and rolled them up with her tank.\n\n\"Okay, you can look,\" she said, and Dalton almost fainted again when he saw what he considered to be an older, shorter t-shirt, suddenly working as a skirt on Mrs. Holloway's small frame. She looked like a slutty college girl. Fuck he was so obsessed with her. He wanted her. \n\n\"That shirt looks way better on you as a skirt...I insist that you keep it,\" he said, gallantly joking with her. \n\n\"Thanks!\" She said warmly to him. She loved how her body was probably very much being shown off to this dumbly horny young guy. She was living for his nervous energy. \"Now what do YOU want to wear?\" She asked, as she quickly sorted through a couple drawers to find his gym trunks and and shirts. \n\nHe only had one ripped t-shirt and a pair of Christmas boxers. She grabbed them and held them up. \"You did say you needed some help doing laundry, yeah?\" She laughed, even as she knelt down and had him step into the boxers. She pulled them up carefully, allowing for his cock to find a direction to arch upward as she affixed them to his body. Then she helped him into the old shirt and they were mercifully done. \n\nShe patted his chest softly, and there was something so nourishing in the gesture, Dalton couldn't help but croon a little over her gentleness with him. \n\n\"You are seriously amazing,\" he said. \n\n\"Well...what you did was amazing,\" she replied, and she felt a little teary eyed suddenly. \n\nShe pulled him in and they shared an intimate hug, even as she could feel his erection still tenting the front of his fresh boxers. It pressed against her body and she liked the way it felt against her. Dalton loved their connection. \n\nShe said she had to get going, as it was getting late. They said their goodbyes and Adrienne told him she probably wouldn't be available the next day due to the fact that she had a date. \n\nDalton told her it was no problem but he was naturally a little crestfallen. She promised she'd be fully available for him on Sunday and that was that. He closed the door behind her and headed upstairs. \n\nDalton slid into bed and slept on his back so that he wasn't crushing his aching cock, which apparently was just going to be torturously hard for the next 6-8 weeks. \n\nIt was like that movie '40 Days and 40 Nights,' with a couple of weeks tacked on for good measure, and no Shannyn Sossamon waiting to blow his mind. \n\nThis was the worst. \n\nHe fell asleep dreaming of Mrs Holloway, only in his dreams they were back in the shower and she WAS sucking on his aching cock. \n\nAdrienne got home and slipped into her own bed after a quick toothbrush and check on the baby. She pulled up her myriad of dating apps and looked for any of the many fuckboys who had made their intentions known to her upon matching. She hadn't technically had a date planned, but after having to hold and wash her next door neighbor's bulbous cock in the hot water of that shower, she knew that she needed to get some or she was going to go crazy. \n\nAdrienne Holloway had a high sex drive and she quickly found a good looking dude who had been messaging her with naughty intention. \n\nShe messaged back the time and place. She told him this would be his only chance to fuck her, and then she sent a couple messages to some babysitters she frequently used. In the morning she'd wake up to his excited response, and everything would be set. \n\nFor now, she fell asleep in Dalton's t-shirt, and dreamed of what it would feel like to squat over his cock and allow him to slide completely bare into her waxed pussy. \n\nDifferent, yet similar dreams collided in that sandman airspace that hovered above the two side-by-side homes. \n\nWhen morning rolled around, Dalton was determined to take his mind off of his almost week-long build-up of cum, and instead texted a bunch of his friends to come over and hang out. Mostly he was trying to take his mind off of the mental memory of Adrienne's sloping neck and face, looking up at him as she washed his body in the hot shower. He remembered the way the drops of water would slide down her neck and chest. He remembered every torturous moment. \n\nHe ignored his morning wood and and got up to get his day started. There was a group that would be coming over for a chill session later that afternoon. Dalton needed his friend's company more than ever. He needed anything to take his mind off his unquenchable need to cum. The build-up was honestly becoming painful. \n\nAs afternoon rolled around his friends began to arrive. They'd brought beers and bathing suits over for some backyard drinking. \n\nThey all lounged around the patio furniture they'd spent so many nights around during their school years. It was the same group as the park, with a few more pop-ins as the afternoon went along. \n\nIt was a lazy, stoned, day-drinking kind of day. No one was partying. The point here was to relax.\n\nDalton's friend's were incredibly empathetic to his situation. \n\n\"Dude, I can't believe you kept this from us all week!\" Brooster said, as the guys had taken their shirts off to get some sunshine. The girls were wearing bathing suit tops and overalls which they both had undone for further sunshine. Dalton's backyard was infamously popular within their friend group as a stellar hang-out spot. \n\n\"Yeah, well...honestly...there wasn't much to say. My summer is basically gonna suck,\" Dalton put it simply, though he was tipsy and stoned and wasn't all that sad at that very moment, actually. He was with his friends and they were there to joke around with him and comfort him. It was a much needed respite. \n\nAs the afternoon faded into evening there were about fifteen or so people who had shown up. Dalton figured out that by using a nearby back-porch shelf, he could prop his arm up enough to flick ping-pong balls over the table in a game of Beer Pong. \n\nHe wasn't anywhere near as accurate, but it felt good to shit-talk with his friends as he got progressively drunker. \n\nIt was around 7:30, and across the fence next door, Mrs. Holloway was giving a couple final directives to the last-second babysitter that had been happy to snag the gig, especially knowing what a good tipper the young widow was. She had a great reputation around the neighborhood for this. \n\nAdrienne was the type of parent that would use you for three to five hours, come home fairly tipsy or high from some date, and then tip fifty extra dollars just because she was in a good mood. \n\nShe said goodbye to the neighbor girl as she blew a final kiss into the baby monitor where London had already gone down, and was quickly out the door. \n\nShe was dressed in a tiny, powder blue cotton skirt and low-cut t-shirt, with open-toed, lace-thin stiletto heels that gave her at least six inches. And who didn't love a good pick-me-up from a solid six inches? She thought to herself, as she waved to the babysitter at the door and strode out to her waiting Uber. Her hair was straightened and her lipstick had a particularly playful vibe to it. She would've called this look her 'I want to get fucked' style. \n\nShe was headed towards a sexy, cocktail bar further into downtown. She was meeting her date there: Mr. Tall, Dark, and Dick Pic. It was an obvious choice for a date. It was the kind of place where people who were not being overly picky regarding the witty banter of a person, could meet up and get down to some eventual bedroom business. \n\nWhen she was dropped off at the curb, she stepped out to an already forming line outside the bar. As the night moved along, tables became harder to come by. Especially because eventually people would start to dance and and fill up the space, when the DJ came out to start spinning underground hits. \n\nBut her date had already snagged them a table just inside the large, open windowed bar. She recognized him immediately in his black pants and button-up shirt. He was drinking a whiskey because of course he was drinking a whiskey. \n\nThe night went like a lot of these tended to go. He had such-and-such position in sales and he had a killer loft and a company car and he worked out six days a week and he TOTALLY loved books but had trouble naming any of the ones he'd read recently. \n\nAdrienne wasn't there to meet a soulmate. She was there to snag a healthy cock that she could bring home to pound her until she came. If the right dude magically came along, swell, but she was fairly involved in the navigations of being a young mom and recent widow. She didn't need another saga at the moment. She needed orgasms and stress relief. \n\nAfter a couple of drinks and a shot for good measure they did a little dancing on the crowded dance floor. Adrienne could tell when she rubbed her ass back against him that he was hard and he seemed plenty big enough. \n\n\"Want to get out of here?\" She asked him with a very willing grin. \n\n\"Fuck yes,\" he replied, downing the rest of his cocktail and leading them out to his car. \n\nAs they drove the twenty minutes home, Adrienne leaned over to his driver's seat and began to unfasten his pants. He looked over at her with a stupid grin. \n\n\"Focus on the road, please,\" she said, and then lowered her mouth over his cock and began sucking. \n\n \n\n ***\n\nIt was around 10:30 PM and the last of Dalton's friends were heading home. What was supposed to be an impromptu afternoon chill session had turned into a low-key vibe party where everyone had a stellar time. \n\nDalton had a definite mood boost from seeing all of his friends and having something to distract himself with for a while. \n\nUnfortunately, it wasn't long after they were gone that the loneliness crept back in a little. And it wasn't so much the loneliness. It was his aching cock that he couldn't bring relief to. \n\nHe was so hard all the time now. He wanted to jack off ALL. THE. TIME. Even having some of the sexier girls he was friends with over that day had been teasingly hard. All the summer flesh in skirts and tiny shorts and bathing suit tops. So much leg and booty and breast. So many reasons for him to be constantly having to hide his tented shorts. \n\nIt had gotten to the point where even peeing was hard. He'd get his shorts down and then would end up missing half the bowl cuz his cock was pointing this way and that. He was an 18-year-old Steve Carrell from the 40 Year Old Virgin. \n\nHe felt pretty gross from all the sun and sweat and layers of bodily detritus formed from being outside most of the day drinking. He wished he could've texted Mrs. Holloway to ask for her help with taking another hot shower, but he knew she was on her date and he would have to wait until that next day. \n\nHe decided to get stoned and watch a sci-fi movie with some sort of escapist story line. \n\n\"Aeon Flux?\" He said out loud to himself. He read through the description. Sure. Whatever. He packed a large bowl of body-buzzing Indica and sunk into the comforting depths of the couch. \n\n \n\n ***\n\nOver at Adrienne's place, Mr.-Talks-A-Big-Game had cum VERY fast after Adrienne had begun to squeeze her pussy muscles on the cock sliding into her from behind. \n\nHe'd barely lasted five minutes. This cock that she'd tease-sucked with expert road head...had barely gotten her to the first hints of that much-needed feminine explosion. \n\nAnd he'd cum way too much. There wasn't going to be a repeat performance, no matter how much Adrienne jacked him off and put his condom-flavored cock into her mouth, trying her hardest to get his boner back into game shape for her to slide back onto and finish. \n\nEventually she gave up the struggle. \n\n\"I'm sorry,\" he said, as he stepped sheepishly out her front door. She told him it was fine. It wasn't of course, but she didn't have the energy to explain how bad he was at holding up his end of the sexual bargain. She didn't care how hot she was or how good her pussy was, there was simply no excuse for being that advanced into male adulthood and being that bad at handling your penile duties. \n\nShe plopped down on her couch wearing only a t-shirt and booty shorts. Her body was irritatingly uncomfortable. She was antsy. She needed to play with a cock. More specifically, she needed to play with a cock that would stay hard with her for hours and cum multiple times if needed. ",
        "She considered heading to her bedroom to take out her box of toys. But that just didn't have the same appeal at the moment. She needed that soft skin and vibrating muscle and leaking head. She needed that naughty flavor of cum. She moaned in irritation. She needed to scratch this fucking itch. \n\nThen she smiled a little and picked up her phone. It was 10:45. Not that late at all. They'd left the bar early so they could fuck, and now she was restless. She began to type, even though she knew she probably shouldn't due to her current overly-horny state, but maybe she could distract herself by helping out Dalton. \n\n\"Hey! My date ended up crashing and burning...are you still up? Do you need anything?\" She followed that up with a heart emoji and sent it off. Her heartbeat had quickened. She definitely shouldn't have sent the heart but whatever, she was tipsy and it was innocent enough. It could be seen two ways. She was always overly friendly and had been known as a total flirt her whole life. \n\nDalton saw his phone buzz up beside him as he laughed out loud at the very silly film he'd dedicated himself to finishing. He figured it was one of his friends. But then he saw the name: 'MILF.' \n\n\"Oh, I'm sorry about your date!\" Dalton quickly fired off his first reply. He was immediately excited by the offer but was trying not to come off as desperate, knowing she was probably just trying to be nice. \"Umm, you don't have to if you're tired...but I could definitely use help with another shower, or we could always wait 'til tomorrow if you're too out of it. Don't go out of your way.\" he proffered considerately, but he so hoped that she was serious.\n\n\"Of course! I don't mind at all. Let me just grab my stuff and I'll be over!\" Came her quick reply. Adrienne went to check on London and then packed up a bag per usual. She also grabbed a bathing suit this time. A very skimpy bikini that showed off lots of skin. She secretly loved getting to see how hard he got around her. \n\nWhen she got over to Dalton's, he had the biggest smile when he opened the door. She greeted him unexpectedly by coming in to give him a hug. Dalton kind of loved that. They had clearly grown friendlier over that week. \n\nThey walked over to the couch as she set the remote baby monitor up on the coffee table. \n\nDalton noticed that she was wearing very cute booty shorts probably used for lazy days around the house and a t-shirt that showed off her tight stomach and peach fuzz hair. \n\nShe noticed his bong on the table. \"Do you mind?\" She asked, and of course he didn't. She took a huge hit, and then followed it up with another. \n\n\"Do you want a beer or anything?\" Dalton asked, and she absolutely did. \n\n\"Don't worry, I'll grab them,\" she quickly returned and opened the two lagers and they dig a gentle cheers as they quickly got to talking about their days. \n\n\"Well I'm glad you got to see your friends and have at least a little fun,\" she said warmly. \n\n\"Yeah...it was nice. I definitely needed a pick-me-up. But how'd your date go? It feels kind of early, I figured you were gonna be gone much later.\" Dalton asked, genuinely curious. \n\n\"Well...he was hot and all, but...it kinda fizzled at the end,\" she said, wondering how much detail was appropriate to talk about. Then again, they'd basically already smoked and drank together...and they were smoking again now. \n\n\"Fizzled?\" Dalton asked, definitely wanting to know more. He felt his body stirring around her luscious presence. \n\n\"Yeah, well, maybe flopped is a better word...or deflates...to put it simply, he didn't last very long,\" she confessed, and he laughed out loud at that. \n\n\"Ohhhh, I see, well that sucks, I'm very sorry,\" Dalton giggled again. He couldn't believe how candid she was with him. But he could also understand not lasting very long with someone as hot as Adrienne Holloway. He wondered how long he might last with her. He felt his cock twitch at the thought. \n\n\"Oh trust me...there was some sucking, that he definitely did not deserve!\" She joked and Dalton almost spit out his beer at how open she was being. \n\n\"Sorry, I'm pretty fucking buzzed still from my date...I probably shouldn't be talking to you about my sex life,\" she cutely admitted, as she took a big drink from the cold bottle. \n\n\"Are you kidddddding me?!\" Dalton immediately jumped in. \"Please do! Let me live vicariously through you!\" He begged.\n\nShe cracked up at his immediate reply, even as she loaded more flower into the bong. Her body looked so good in her pink Victoria's Secret booty shorts and her very small t-shirt, which was the type of worn cotton that slowly starts to disintegrate into the shape of the person that wears it over the years. Her breasts were easy to get lost in anytime she bent over and showed off her magical cleavage. \n\n\"Wow, Dalton. 'Vicariously?' I didn't realize you were in the middle of your college essay submissions...is that what you do now during the day?\" She was razzing him and he loved it. They were on even ground now.\n\n\"Excuse me, no. I can't even do that cuz I'm a fucking hero, or don't you remember?\" He countered with sass, and she immediately made a puppy dog face and lovingly considered him, placing a hand on his chest as she leaned over.\n\n\"Oh, Dalton. Yes. You beast of a man,\" she used a mock-Harlequin voice as she pretended to swoon over him. He loved that too. \n\n\"Okay, but seriously, I'd rather talk about your juicy sex life than my boring ass day,\" he added. \n\n\"Okay well that's fair. I guess having your arms in casts has probably fucked up some of your summer dating plans, eh? You don't have a girlfriend do you? I feel like I don't see that periwinkle Volkswagen Bug parked outside on the curb like I used to all the time. What was her name? The cute redhead you were dating?\" She finished, as she flicked the Bic lighter to life and lit up the large bowl in Dalton's blown-glass bong. \n\n\"Ah, yes. That was Autumn. My ex. We had a god run but...\" Dalton started.\n\n\"But you're a good looking guy taking a year off before school and you wanted to fuck around?\" She cut him off, after blowing a big cloud of smoke between them.\n\n\"Yeah. Exactly. I wanted to fuck around,\" he admitted, as she held the bong up for him and lit the flower. \n\nHe coughed a little because she made him take a much bigger hit this time. \n\n\"Oh, fuck!\" She said, suddenly putting the bong down and turning to stare at Dalton very intently. \n\n\"What?\" He queried curiously, still trying to regain his voice. He was silly stoned now. With his hot neighbor sitting cross-legged on the cushion next to him, like longtime best friends. \n\n\"So like, okay I'm really fucking high so if this is too personal just tell me...\" she prefaced, slapping his leg. He adored every single contact. \n\n\"Okay, what's up?\" He leaned in. \n\n\"Like...how are you...\" she motioned towards his crotch, trying to figure out the best way to word it, \"ya know...playing with yourself?\" Adrienne knew how horny an 18-year-old boy was. Once upon a time, she had been a horny 18-year-old girl (thought that hadn't really changed). She knew all about that level of constant sexual need. \n\n\"Oh, yeah...I'm...\" Dalton paused as he considered the best way to approach this, \"I'm not.\" \n\n\"You're...not??\"\n\n\"Well, it's more that I can't. It's not that I don't want to.\" He smiled kind of sadly to her, though in good humor.\n\n\"Ohhhh, babe,\" she said, sounding seriously empathetic. Adrienne played with her pussy daily. She couldn't even imagine how bad it must've been for him. \n\n\"I know, it's okay though, \" he assured her, even though it had clearly been driving him crazy. But he could tell how badly she felt about it. \n\n\"I can never repay you enough,\" she said again, so seriously, making the immediate connection to his diving save of her daughter. \n\n\"I know, you don't have to keep saying that.\" Dalton smiled at the bombshell looking at him like a wounded lamb. \"You CAN repay me by telling me more about your shitty date.\" \n\nShe beamed at him. This she could definitely do. She launched into the whole story and explained how sexy she had done her makeup and how she'd taken an Uber and gotten all dolled up, and as she told the story Dalton could feel his cock getting harder. He could visualize Mrs. Holloway on a sexy date, showing off her body in heels. He could imagine himself fucking her in heels. He watched her tongue and lips as she spoke. She was so damned sexy. He particularly liked when she got into the finer details of grinding on the dance floor and her horny, impromptu road head, as he drove them home to fool around. \n\n\"This dude sounds like such a bad stereotype,\" Dalton said, soaking up her night as she narrated. \n\n\"Yeah, he really was. And I think I knew that even when I matched with him. But I just wanted some good dick, ya know?\" She said as she laughed, and he smiled again at her candidness. They were having fun. They were stoned and she was drunk and he was on Vicodin (though he wasn't going to mention that to her). \"Ugh...and he had the ugliest fucking yellow Range Rover. Like...who drives a yellow range rover?\" She said. \n\nAll of a sudden Dalton laughed. Wait...my buddy from school has an older brother with a yellow Range Rover. I wonder if...could you send me a picture of the dude? I gotta send it to him and see if it's him,\" Dalton was tickled at this idea. \n\n\"Oh my God, please do,\" she said, saving the screenshot from her Tinder and quickly texting Dalton. \n\n\"I'm gonna go to the bathroom real quick,\" he said, as she worked on doing that. \n\nHe was already out of the room when his phone buzzed on the couch where he'd left it. \n\nAdrienne looked over at the screen from the noise, and her gaze caught when she saw the name that popped up. \n\nMILF. \n\nShe smiled an had to laugh a little. Of course he wanted to fuck her. She found it both hilarious, and flattering. She WAS a MILF. She kind of liked getting to be that fantasy for him. It turned her on a little. She turned his phone over so that it would look as if she hadn't seen it, and he was soon back on the couch. \n\nDalton was none the wiser as he checked the photo. \n\n\"Oh...no...that's not him, weird,\" he said. \n\n\"It's almost more disappointing that there are two dudes driving around in yellow Range Rovers,\" she joked and they laughed more. \n\nThe buzzed connection of their situation was unique, and naming the feeling was simply unnecessary. It was symbiotic flirtation and that was all. \n\nIt was soon midnight, and the antique clock in the hallway chimed throughout the house. \n\n\"I'm gonna be honest...that is an ugly fucking clock,\" she said to him, after the 12 comically elongated chimes had finally finished. \n\n\"I know...my Mom loves it. My Dad wants to burn it to the ground,\" Dalton explained.\n\n\"It's very 'What in the Antique's Roadshow?'\" She joked and they both cracked up at that. \n\n\"Yeah. You're not wrong,\" he agreed.\n\nAfter an awkward pause, where Adrienne found herself strangely scanning her eyes down Dalton's fit body, she had an unexpectedly sudden idea. \n\n\"Hey, do you want me to help with a shower?\" She asked. \n\n\"Oh! Yeah, if you don't mind?\" He said, trying not to sound to eager.\n\n\"No! Not at all, I'm sure you probably feel dirty from being out in the sun with your friends.\" She had concluded. \n\n\"Wanna smoke one last time?\" He said. He was nervous now. He wouldn't be able to hide his hard-on in the shower.\n\n\"The answer is ALWAYS yes, Dalton.\" \n\nThey each took one last hit, and then Adrienne helped Dalton up from his corner of the couch and they stumbled upstairs to his parent's large, bathroom shower. They were playfully stoned.\n\nShe reached in to get the shower going to a proper level of hot. She was also feeling fairly sweaty and in need of a good soak-down. The weed certainly leant her to feeling some of this. \n\nShe remembered that she'd brought her bathing suit for the express reason of this, but an idea had jumped up and nibbled her in the butt. \n\n\"Hey, I brought a bathing suit, but if you don't mind I'll just shower naked with you? I wouldn't mind rinsing off too.\" She suggested, as she narrowed her eyes at Dalton, knowing what her offer would probably do to his aching manhood. \n\n\"Umm, yeah. That's totally okay.\" Dalton had no chance of keeping his cool. He was nervous and horny and the most confident-crazy-sexy-cool woman he'd ever been alone with was offering to step into a shower butt naked with him, just to wash his body down. \n\nMrs. Holloway grabbed the plastic bags from the towel rack where she'd last left them and gently placed them over both of his casts. The hot water from the shower was already steaming up the room with anticipatory ambience. \n\nAfter she was done, she grabbed her cell and threw on her Spotify playlist for some music. Bruno Mars streamed out of her iPhone. She then went to the light switch panel and switched the lights off other than the singular shower bulb, which could be dimmed. She turned up the music fully on her phone. She was silhouetted in the light pouring through the glass. \n\nThey were both strangely excited for different reasons. \n\nAs Dalton stood beside the shower looking down at this stunning woman, she helped him pull his shirt and shorts off. His hardening cock flopped out and Adrienne could already tell how wet she was going to be just from looking at it. His cock was so perfect, she thought, seeing it again stoned and horny. And he was BIG. There were fewer inhibitions making the proper arguments inside her brain. \n\nThen she realized it was her turn. What a show he was about to get. She pulled her t-shirt seductively over her head and her perky breasts popped out. Then she shimmied out of her booty shorts and Dalton could see the small tattoo that ran along her navel. They were black-and-gray birds melting into geometric patterns. Her pussy was cleanly shaved and her ass was round and creamy and so fucking amazing that Dalton felt his knees go a little weak. Her skin was soft and well tanned. She was a sun-kissed goddess. \n\n\"Get in the shower,\" she said, as she looked up into his eyes, telling him what to do. He broke from his trance over her nude perfection and stepped into the liquid relaxation. \n\nShe followed him in and closed the glass door. Now they were standing naked, side-by-side, in the hot water washing over their skin. The steam filled the room and there was a tension that neither of them wanted to admit was there. You could cut it with a butter knife. There was a palpable energy thrumming like a current in the air around them.\n\nDalton was so hard in front of her, but Adrienne didn't seem to care at all. She just squeezed body wash onto her soft hands and began to rub it into him, starting with his shoulders and chest. This time she was far more taken with his beautiful muscles and skin and hair. She seemed to linger on parts she wouldn't mind dragging her mouth over. She knew he had been a varsity athlete, and she wondered how many girls had gotten to ride this young stallion. \n\nDalton was too stoned to care about how hard his cock was in front of her. And then she leaned in closer to wash his back and ribs and hips. As she did this his hard cock pressed against her belly. She just pressed him closer because she was honestly obsessed with the feeling of his hard member against her.\n\nDalton gulped and practically shuddered as he felt his cock poking her. Oh, he was so wildly turned on. \n\nAfter she'd washed every inch of his body, she squirted more soap into her hands and ran them down his chest, and stomach, as they lingered in the soft wisps of his pubic hair. And then she drifted further down still to clutch his hard cock. Dalton squeaked an involuntary moan and she didn't ask him permission this time. She just massaged his very hard cock in her hands, savoring every moment of getting to clean him. She was staring down at his cock in her hands. She could feel her mouth watering a little. She could feel her pussy throbbing. \n\nDalton looked down at her perfect breasts, which were even further pushed up as her arms came together to wash his cock. Water splashed down her body from the shower head. He was literally shuddering as he felt her delicate fingers rubbing over his helmet and slit. She massaged soap down into his balls and ass, but this time she came back and grabbed his hard cock again. He could see her looking at his cock with a sort of hazy lust in her eyes. He wondered if she was thinking the same thing he was thinking. \n\nAdrienne couldn't stop admiring its length and girth. She was horny while she touched him. She kept rubbing him. She loved how full her hands felt, both wrapped around his pulsing shaft. \n\nDalton was grunting a little each time her fingers slid up over his helmet, and especially when her thumb glided over his pre-cum-covered slit. \n\n\"Mmmmm,\" he whimpered softly between them. It had almost broken her out of her cock trance, as she watched the suds squeezing out of the grip of her fingers, as she brought both of her hands to a two-handed grip now, like a baseball bat. She couldn't imagine how badly he probably needed to cum. \n\n\"Yeah?\" She asked him, looking up at his glazed over expression. And she realized now what she was doing. There was sexual intention in her voice. But she didn't care anymore. \n\nFuck the rules, she thought. \n\nShe was naked in the shower with this well-built younger stud. And his throbbing cock hadn't cum in six days. \n\nDalton couldn't believe what was happening. She had started to slowly jack his cock between her hands. Her wet body was pressed against his and she began to give him the most sensual hand-job of his entire life. \n\n\"Unnmm,\" he bellowed. \n\n\"You like that?\" She asked in a curious voice, leaning into him. Their faces were very close in the spray of the shower, which fell between them like two sides of a waterfall that they were both daring themselves to cross. \n\nThis was clearly wrong, Adrienne thought to herself. \n\nAnd that turned her on even more. \n\n\"Yesss,\" Dalton moaned, as she continued to jack off his cock in her hands. \n\n\"Good,\" she said, stroking his hard cock, \"I'm gonna help you cum, Dalton.\" \n\n\"Fuckkk,\" Dalton moaned. \n\n\"I want you cum for me, Dalton, let me help you,\" she said to him, as her soapy hands slid up and down his cock and flicked his helmet and played softly with his very fully balls. \n\nShe ran a finger along his scrotum and she kept her gentle pace going. Never speeding up or slowing down. \n\n\"Mrssss. Holllloway, fuckkkkk,\" he felt like a he'd been turned into a whimpering mess for her. He had never been so turned on in his entire life. Dalton had done just fine in high school when it came to his sexual encounters. \n\nBut now this confident, sexy older woman, was stroking his backlogged pipe and every single thing she did felt like advanced sexual physics. \n\n\"Yeah, babe...just enjoy the way that feels. Enjoy my hands on your big cock,\" she said this in the sexiest way. Dalton literally felt stripped down and opened up. He loved when she called him 'babe.' \n\nThe music was pumping a soft, lo-fi beat into the room, and steaming water that rose up around them made their bodies sweat with the glistening ecstasy of their lusty vibe. \n\nHe wasn't going to last much longer. \n\n\"Cum for me, Dalton,\" she told him. And she jacked his cock perfectly with the lather of soap, bringing his skin up over the ridge of his helmet. \n\n\"Unngggg, fuuuuugggggg,\" he moaned. \n\n\"Cum for me, Dalton...I want your cum, baby. I want your cum so bad!\" She was moaning as she spoke to him, which made it even hotter. She sounded like a naughty girl. \n\n\"Fuckkk, don't stopp, don't stop!! I'm so close!!\" Dalton was going to unleash a buffet-sized load of cum. He was literally about to the confectioner of the month at the Little Debbie factory. ",
        "\"Cum for me, Dalton, right now,\" and then Adrienne Holloway did something even more unexpected. \n\nShe dropped down to her knees, as she jacked his big dick, and opened her perfect, pink lips. \n\nDalton watched her place his throbbing cock between her lips, and she sucked him in. She jacked him and she sucked him. And she kept her eyes locked on his, as he watched his penis disappear into sexy mouth. She never closed her eyes, even as the water cascaded down over her. \n\nAnd Dalton was done for. \n\n\"I'MMMMCUMMMMMMMINNNNNGGGGGGGGGG!\" He moaned loudly throughout the whole bathroom. \n\nAdrienne pumped him and sucked him and she was crazy horny to swallow his cum. She wanted to make this heroic little stud cum harder than he ever had in his whole life. \n\nHer pussy was dripping as the first creamy globs of his spunk blasted onto her tongue and gushed quickly down her throat. \n\nShe moaned over his dick and the vibrations made Dalton even more sensitive as he came and came and came. \n\nShe drank as much of his sperm as she could but it really was a weeklong buildup from a healthy, young cock that wasn't going to stop anytime soon. \n\nShe swallowed the first four squirts of his semen and then she took him out and let him finish on her face. \n\nDalton couldn't believe what he was watching. Mrs. Holloway was letting his cum splash out onto her cute face and she was moaning as it did. She looked like a wanton cum whore from a porn Dalton might stream off the hub. He wondered if she was doing it for him. For show. \n\nOr if...maybe she really was this kind of slutty? \n\nBoth of these things were true of course. Adrienne wanted to make him cum hard. \n\nBut she loved cum. She loved sex. She loved being slutty for it. \n\nShe loved getting to be a naughty girl for a big cock. \n\nWhen Dalton was finally done creaming, she still jacked his cock, gently licking and kissing the tip of his penis as the water sprayed over them. \n\nShe looked up at him with her messy face, and licked along his shaft like it was a popsicle. \n\nDalton couldn't believe how hot she was. He couldn't believe how hard he had just cum in her mouth. Or that she had even sucked on him to begin with. Or that she was STILL sucking on him. \n\nFive minutes went by of her sucking and she finally stood up. \n\n\"Hi,\" she said, leaning into him in the spray. \n\nDalton watched her close the distance and she kissed him. \n\nFuck. \n\nThe kiss was a spark. It was sexy. It was perfect. He kissed back hard. \n\nShe finished washing them off and helped them get out of the shower. Dalton watched her slowly towel off his body, stopping occasionally to play with his still very-hard cock. \n\nWhen they were both dry she grabbed his cock and led him out of the bathroom like she was walking him. \n\nDalton gulped as she made the correct assumption and headed straight for his bedroom door, which was slightly ajar. \n\nWhen they got inside she turned on the light and pushed Dalton up onto the bed. \n\nDalton's heartbeat was speeding by him like a greyhound chasing a track rabbit.\n\nShe pushed him onto the center of his unmade bed and she threw the covers off to the end, leaving him on his queen sized cotton sheet. \n\nDalton lay back on his pillows and she climbed up over his crotch. \n\n\"Dalton, I'm on birth control...I'm clean. I have a condom if you want...but I'd love to feel your bare cock in me.\" \n\nHe nodded like a boy at a carnival being asked if he wanted free cotton candy. She smiled with a naughty expression. \n\nThen he watched as she grabbed his hard cock and began to rub it against the slippery-soft folds of her tight pussy. \n\n\"Fuckkkk, Dalton, you have SUCH a good cock,\" she said to him. Because he really did. Then she groaned as as she slowly pushed him into her. He watched as she sunk down slowly, enjoying every inch of his penis opening her pussy up. She loved the way he filled her. \n\n\"Oafffff,\" Dalton bellowed. \n\nShe began to ride him. Big, gyrating hip circles. She was a cowgirl in control and he was insanely turned on by every single new thing she did. \n\nThis was the hottest thing that had ever happened in his young life, and he didn't want to miss a single moment of it. \n\n\"You are so fucking sexy,\" he said to her, and she beamed at his compliment. She knew how hot she was, but she never got tired of hearing her lover's compliment her. \n\n\"Mmmm,\" she was moaning these adorable noises each time he impaled her on the way down.\n\nThey fucked slowly and fully. She took her time. \n\nThis was her second cock of the night, and she wasn't going to waste the clear upgrade potential. \n\nDalton was kind of glad he'd cum so hard earlier. He was already throbbing inside her tight canal, but he knew he could last longer this time. He definitely did a lot of lazy afternoon porn edging which probably helped. \n\nAdrienne was really starting to feel the warmth flush over her body as her pussy adored the way he filled her up. She was getting close to orgasm. \n\n\"Dalton, I'm gonna cum soon, baby, don't stop,\" she said. He'd begun thrusting up into her when she lowered herself. The arousal was triplicating and she couldn't remember the last time she was this wet with a guy. \n\nHe fucked up into her and watched overjoyed as she began to ride him harder, like she was bucking on a saddle. \n\n\"Fuck. Yes. Dalton. Fuck. Me. Baby. I'm. Gonna. Cummmmm!\" Her moans were like candy and her perfect body riding on his body made him feel like he was a newly-minted god. \n\nShe came. \n\nHard. \n\nDalton didn't stop fucking up into her as her moans made it clear she was orgasming on his dick. He was making Mrs. Holloway cum on his dick. HE WAS MAKING ADRIENNE HOLLOWAY HAVE AN ORGASM ON HIS DICK. \n\nHOLY FUCKING FUCK! \n\nShe road him until she couldn't ride anymore and she crashed down onto his chest and rested her lips on his neck. \n\nShe was whimpering and her body was shuddering with his cock still impaling her, as she traced her mouth all over him. \n\n\"Oooohhh fuckkkk, yessss, that was really good, MMMMmmmmm,\" she achingly crooned. This really was a great cock. Dalton was both horny and proud of his ability to keep up. \n\nBut now that she had cum, she wanted more. She wanted to finish him again. She wanted more of his cum.\n\nShe leaned over and they made out hard for a few minutes, as she sucked on his tongue and bit his lips and moaned into his mouth, she squeezed her pussy muscles around his still-throbbing member. \n\nThen she was sitting back up and allowing his cock to slide slowly out of her. She smiled at how long it took due to his size. Dalton once again watched her stand up, only this time she turned around and straddled him reverse cowgirl. She looked over her shoulder at him like the sexiest minx in the whole damn brothel. \n\n\"I'm gonna ride you until you fill my pussy up with your cum, Dalton,\" she told him. And she once again lowered her sexy ass until he was pushing up into her wet opening. \n\nFrom this angle, Dalton got the full treat of her creamy butt, which was rounder than any girl he'd ever fucked. She had the perk and muscle of a high school girl but the moves of someone with far more experience. She had Minka Kelly ass, and Dalton was having his own Friday Night Lights post-football win fuck-fest. \n\nShe leaned forward and her body began to ride him fast, bouncing up and down to squeeze her muscles over his pole and milk the cum from him. She knew what she was doing. She knew how good her ass looked in this position. She didn't do all those squats for nothing. \n\nDalton was going crazy from how good his cock felt inside her. He wouldn't last long. \n\nShe rode him and they moaned together and Adrienne couldn't believe it but she felt another orgasm coming on. \n\n\"I'MGONNNCUMM PLEASE DON'T STOP PLEASE DON'T STOP,\" he begged. \n\n\"Mmmm, good boy. YES, DALTON. Cum for me! Fill me up with your cum. I want your cum so bad, baby. I WANT YOUR HOT CUM IN MY PUSSY!\" she really fucking did. She wanted more of his cum. She wanted LOTS of his cum. They were horny as hell. They fucked hard and fast, with all the potential energy of orgasmic buildup. \n\n\"I'M CUMMMING!\" Dalton finally groaned.\n\n\"FUCK BABY I'M CUMMMMING TOOOO!!\" She yelled right after him, as she clutched her breasts hard and squeezed her nipples while riding.\n\nDalton's dick exploded inside of her clenching pussy and her own walls contracted and released. The stimulation was too much. Adrienne's orgasm made her rumble all over, like the shiver of stepping into snow, barefoot. And then she was back in the warmth of her body's magical skin-tingling majesty. \n\nThey fucked heatedly through their finale. They fucked until they couldn't anymore, and then, like the Soviet Union in the early 90's...\n\n...they collapsed. His softening cock slowly slipped out of her soaking pussy, cum pooling onto his pubic hair and balls. \n\n\"Ohhh. My. God.\" Dalton said, as he breathed hard from their combined conclusions and the sheer physical exercise of his hip thrusts. He missed having arms to hold his concubine still while he was pounding. This was a lower body workout that was worth every minute of exertion. \n\n\"Fuckkkkkkk,\" she moaned, curling up against his body and draping her leg over his as she lay down next to him. They were both electrically charged. \n\n\"That was so fucking hot,\" he said, still barely catching his breath. \n\n\"Yeah, fuck...I can't believe we just did that,\" she said smiling naughtily, and he could tell how much of her pussy juice he had on him. She was clearly very turned on. He loved that he could have that effect on her. \n\n\"I did not expect that tonight,\" he laughed. \n\n\"Yeah, me either,\" she said with a relaxed moan, turning to him, \"but I'm very glad it happened.\" \n\nThey kissed again. \n\nSoftly. \n\nFor a long time. \n\nThey just made out. \n\nThey didn't over-analyze it. \n\nThey just kissed in the afterglow, which burned like hazy fires on a horizon somewhere out of reach. There was something there neither of them understood yet. \n\nShe brought her hand up to his face, which she was impressed he'd managed to keep fairly fresh-shaven with his hand situation (though she wondered if that was just his age). She ran her fingers down his strong jawline as she kissed him. \n\nTheir tongues danced and they held each other close. \n\nThey moaned for each other. \n\nAnd then there was the distant echo of a two-year-old crying on a distant baby monitor. \n\nThe noise was sudden and jarring.\n\n\"FUCKKKK!\" Adrienne moaned, as she separated from her young stud. She secretly wanted to keep going. She wanted to ride Dalton's dick for the rest of the night. \"I'm sorry,\" she said, as she kissed him urgently.\n\n\"It's okay! Don't be sorry. That was amazing,\" he said, still rolling off of what had just happened.\n\n\"Yeah, that was fucking hot,\" she was blown away by him. She hopped up from his bed and her body was messy and naked and beautiful. \n\nShe looked freshly fucked and it was absolutely enchanting to Dalton. He was already getting hard again. \n\nShe gathered up her things and came over to give Dalton a final kiss. \n\nHe walked her downstairs to the front door where they kissed again, even as she reached out and grabbed Dalton's half-hard dick, savoring it one last time in her grip. Dalton wanted so much more. But she had to go. She kissed him and her fingers sadly drifted away as she bid him goodnight. \n\nDalton went to brush his teeth. Adrienne swooped home and tended to London's comfort, putting her back to sleep after a diaper change. When she finally went to the bathroom, she moaned a little as Dalton's cum gushed out of her pussy from where he'd filled her. Then she was brushing her teeth and washing her face off, though her thoughts were clearly still in a lusty daze. \n\nBack home, Dalton was scrubbing his own face with soap, and his cock was hard again as he thought about Mrs. Holloway's mouth on him in the shower. He rubbed an acne wash into his skin. He felt relaxed and excited. \n\nAdrienne allowed her electric toothbrush to do most of the work and she couldn't stop thinking about what she had just done. She'd sucked on Dalton's very hard cock in the shower. She'd ridden her 18-year-old neighbor in his own bed. She'd ground her perfect booty down onto his large dick and she loved every second of it. She'd even let him fill her with his cum. \n\nShe spit her toothpaste out and rinsed. It was her first spit of the night. She had truly let herself go with him. \n\nDalton finished drying his face and then crawled into bed wearing only his boxers. He brought his left casted-hand down to softly touch his cock as he replayed every moment. He thought of her pulling her clothes off in the bathroom. The way her naked body was just suddenly on display for him. He thought of her hand, washing him, and how she didn't stop like she had last time. He closed his eyes and thought of how she started to slowly jack him off. It felt like some impossible fantasy come to life. \n\nAdrienne crawled into her bed wearing a big t-shirt and nothing else. \n\nShe was still wet as she brought her fingers down to her pussy and touched herself softly. \n\nHer mind was on his cock.\n\nHis mind was on her pussy. \n\nShe picked up her phone and pulled up his number. She texted him. \n\n\"Come over to my place tomorrow, yeah?\" \n\nDalton gulped as he read the text. \n\n\"Yes. Absolutely.\" \n\n\"I was thinking I could clean you in my big bathtub,\" she said, laughing at how openly she wanted to start flirting with him now. The gloves had clearly come off. \n\n\"Wow, yes please. That sounds incredible,\" Dalton was going to have trouble falling asleep with the wood he now sported.\n\nAdrienne made herself cum again thinking of his cock and eventually her body relented and she fell asleep as relaxed as she had felt in months. \n\nDalton eventually followed, as his own dreams drifted off to all the ways he wanted to fuck her. \n\nThe summer of crazy fun was officially back on. \n\nTo Be Continued. . ."
    ],
    "authorname": "SluttyBisexualGuy",
    "tags": [
        "milf",
        "seduction",
        "shower",
        "cougar",
        "older younger",
        "cast",
        "blowjob",
        "shower sex",
        "neighbor",
        "18 year old"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/broken-hands"
}