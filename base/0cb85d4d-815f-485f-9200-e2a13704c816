{
    "title": "Dina Might with a Laser Beam",
    "pages": [
        "Author's Note:This is an entry in the 2021 Halloween contest. There's a lot of watching, a lot of group sex, a bit of playful spanking, and some ass-play. Please read, enjoy, and leave a comment for this and for all the other Halloween contest entries you read.\n\n*\n\n\"Remember, we buy and sell things to SELL, not fix,\" Dina said, embellishing 'sell' and 'not fix' for dramatic effect. She was humorously chastising me in advance for my tendency to buy odd things when I attended 'going-out-of-business' auctions for our side business. We primarily bought and sold used commercial grade exercise equipment, but occasionally other things if the price was right. Or if we needed something. \n\n\"And, for this auction, you are there to try and buy exercise equipment, and the generators they are selling. Nothing else. Do. You. Understand?\" I nodded. She was helping her friend Laura arrange an outdoor Halloween party for her company, which called for a generator. By coincidence, one of the upcoming auctions I was attending had two for sale. We could help her friend out, then also sell them after the party for a nice profit. \n\nOur used equipment venture began two years ago, quite by accident. I saw a classified ad for a used elliptical machine, a nice one, that led me to attending my first auction. At the time, I just wanted one for my garage, but I found getting it for such a good price exhilarating. I went back later that same day and bought a second one, which I sold on Craigslist two days later, for a $500 profit. That was even more exhilarating, and I was hooked. \n\nDina wasn't just partners with me in a side business. She was my ex-sister-in-law, former wife of my brother and his career as a waiter, deadbeat, and leather-jacket-wearing drummer in a local rock band. I remember the shock of meeting her for the first time, because although he's my brother, and although supposedly he ain't heavy, Dina was a bright and focused graduate student, and my brother was, to put it mildly, my brother. I was about eight years older than the two of them, best man at the wedding, and best friend when the marriage fell apart just six months later. \n\nI was in an odd position, because my brother was completely to blame for everything. From stealing her money to bringing strippers home with him, I was put in the difficult situation of being supportive of my brother while also knowing that he was in the wrong in almost every way. \n\nWhen the divorce proceedings started to get ugly over the iguana they bought together, I ended up mediating between them, and convincing my brother to relinquish the iguana, pay her back the stolen money (which by the way I secretly funded), and convincing her not to have him thrown in jail, since he hadn't only stolen her money, he was a part time drug dealer, his drum set was stolen, and he was committing insurance fraud for a fake injury from the one job he had ever held. \n\nBeing an intelligent sort of person, when the time came to give Dina the money, I did it myself rather than trusting my brother to do it. I made up what I thought was a good sounding excuse, that I had invested the inheritance money from our aunt on his behalf, and that was how he was able to pay her back. She acted as if she believed me, although she was a smart person, she probably knew better. Nonetheless, she appreciated me doing the right thing, and the seeds of a friendship were planted. \n\nWe remained in casual contact with one another for many years, because we were both part-time Tae-Kwon-Do instructors. And although we were at different schools, the Tae-Kwon-Do community is relatively small, so particularly in a mid-sized town like ours, most black-belts at least knew one another at least by sight, due to the tournaments, exhibitions, and testing events that happened several timers per year. \n\nThen, almost fifteen years after being married to my brother, Dina and I found ourselves in an odd business partnership. It began because I knew that she worked at an exercise equipment supplier, and I would occasionally ask for her opinion on a piece of equipment. One day, a unique opportunity fell into my lap that required more up-front cash than I had on my own, and suddenly, we were partners. Her job also gave her occasional access to damaged or broken equipment that couldn't be sold, so we once in a while things for free. And to top it all off, she had a way of batting her eyelashes at the movers and getting us hefty discounts on their prices. Dina turned heads wherever she went. \n\nWe kept our friendship and our business relationship relatively quiet, as far as our families were concerned. Her family didn't like my family, and my mother had very much taken my idiot brother's side and thought Dina was the devil. \n\nIn the meantime, I had a flexible job, so I could attend at least one or two auctions per week. I even became a truck owner, having found a retired rental, for, of course, a good price. And on the weekends, I rented it out to a moving company. I wasn't quite getting rich, but the extra money was nice. \n\nThe auction in question was for a spa that had gone out of business, but they happened to have two generators for sale too. Unfortunately, everything was overpriced, so the trip was almost a waste of time. With one possible exception. There was a commercial-grade laser hair removal machine, labeled as damaged, for only $100, including a box with cords and miscellaneous parts, as well as a box of latex gloves. A quick internet lookup on my phone said it could easily be worth $1,500 on the used market, but only if it worked. As an amateur mister fix-it, I decided to take the risk and buy it. It was risky because quite often, an advanced device like this needs an extremely expensive part, which coming full circle, is why it's for sale in the first place. And even more scary, the risk of Dina's lectures about buying frivolous things, especially frivolous things that need repair. Regardless of all those practical considerations, I bought it. I felt lucky. \n\n:::::::: \n\nBefore I even started driving, I looked carefully at it in the back of the truck. I could see where someone had damaged the socket where the power cord went in. With a little luck, it would be an easy fix. Although we had a 24-hour storage unit for most of our inventory, I always took 'to-be-fixed' items to my house. I got the laser device home and put it in the back bedroom where I kept the things I was going to fix. I put it next to the broken TV that I was going to fix, and in front of the printer I was going to fix. Which was to the left of the shelf where I kept the two identical laptops, the tablet computer, and the high-end studio monitor speakers that I was going to fix. I also had to move the two bicycles that I was going to fix. As I looked at the shelves, I remembered the broken bracket on the top shelf that I was going to fix. \"I can't believe Dina thinks I have a problem,\" I laughed to myself. I'd fix her someday too; I knew I would. \n\nI was indeed lucky with the laser. All that seemed to be wrong was the power harness, and pulling it back into place with a pair of needle-nosed pliers got it to where it could be turned on again. This was promising, but I still had to test it. I drew a circle just above my ankle and zapped the hairs within. Nothing happened, though, so my heart sank. After a frantic internet search, I learned, that the hairs don't fall out for a few days, so I wouldn't know if it was working or not quite yet. \n\nSince I had gotten out my tools anyway, I took the back off the TV, followed the instructions I had saved on my phone, and saw without a doubt that it was suffering from the two swollen capacitors that tended to always go bad on this model TV. I couldn't fix it right away, but it gave me a rush. In all likelihood, the TV would work once I replaced them. I went online, ordered a five-pack of the capacitors, which cost only $10.95. If I had just bought two of them, they would have been $4.95 each, or $9.90 for the two of them, so for only a dollar more, I got three more capacitors. I laughed at myself again. But it was a good evening. The speaker with the broken tweeter, it turned out, had just been a poorly soldered wire, so it was also an easy repair. And replacing the tablet's battery with the one I had bought for it also went smoothly, after only six months in \"going to fix it\" status. Then, although I was exhausted, I took the good screen from the inoperable laptop and moved it to the working laptop with the cracked screen, leaving me with one fully functional one, and one that was even more inoperable than before. \n\nIt was days like this, where I felt the thrill of victory. I would soon have a working 70-inch TV, which I would move to the TV room. Someday. And the fully functional laptop would sell online for about $300, and the broken one maybe for $100, for parts. And the laser machine, if it was working correctly, would yield just a few dollars, but I had gotten it free. I went to bed, watched some lesbian porn on the tablet I had just fixed, masturbated, and went to sleep happy. \n\n:::::::: \n\nBy day three, it was clear that the laser machine was working. The spot that I had zapped was hairless. I started mentally counting my profit money in advance. \n\nThen later that same day, Dina and I went to an auction together. This was a good one, and we ended up with five top-of-the-line spin-bikes for a very good price. Some days, as was the case here, it was just the two of us, no hired help involved, so we got our goodies, and took them to the storage unit. I must admit, moving days could be interesting, since Dina always wore yoga pants and a T-Shirt over her sports bra, and on good days, she'd take off the T-shirt as she got hot. On really good days, it wasn't a sports bra, but a white ribbed-cotton tank top, cut short to serve as an undershirt, and today was one of those days. Although I had never violated the sense of trust by being creepy and staring, I had to admit, looking at a pretty sweaty girl with a nice body in tight yoga pants with nipple outlines poking through a tank top was a wonderful way to spend an evening. \n\nOn extremely good days, which this seemed to be turning into, she would stretch her toned arms far over her head, letting me indulge my mild-to-moderate underarm fetish. We had to rearrange several things to make room for the new purchases, so it took a while. \n\nEventually, we finished and could stop for a break. I sat on the floor resting my back against one wall, then she laid down and stretched out on the floor across from me, legs parted not necessarily in a sexual way, more of an 'I'm too tired to move' way, except her crotch was most definitely facing me. And when she shifted, I would see up her tank top a bit, to the undersides of her breasts. And with that day involving heavy lifting and lots of sweating, there was damp cloth sticking to her body, in the crotch area of her yoga pants, as well as the front of her tank top. Meaning that for me to try to look her in the eyes as she spoke, I not only had to look past her parted legs and up her blouse, I had to look past the full outline of her vulva, the partially transparent-when-wet fabric of her yoga pants, and her nipples clinging to the damp fabric of her tank top. This, I joked to myself, wasn't just an extremely good day. It was the best day of my life. \n\nOn further review, I realized two of the spin-bikes needed some repairs, so we needed to move them to the house. After our break, me at first having to hold things in front of my pants to hide my erection, we loaded the two items into the truck and took them over. As we carried them into the back bedroom, Dina noticed the laser hair removal machine. \"What's that?\" she raised an eyebrow, and pointed to it, although I could tell she knew what it was. \n\n\"Oh, that,\" I paused. I had forgotten it was there, and I knew it looked and sounded creepy, for a single male to own a laser hair removal machine. I felt the need to be defensive. \"It's an, um, a Laser hair remover. I got it for a really low price. We're going to make almost $1,500 profit on it!\" \n\n\"You bought a laser hair remover?\" She was rolling her eyes, as if to say, 'stop buying crazy things.' Then she followed up, saying, \"Stop buying crazy things!\" \n\n\"It was a really good price. A reeeeeeally good price.\" \n\n\"Does it work?\" Dina knew that my crazier purchases often didn't work. I was a little embarrassed, but I pulled my pant leg up and rolled down my sock to show her the bald circle just above my ankle. \"Oh God,\" she said, and laughed out loud. \n\n:::::::: \n\nWe had a nice relationship. There was always an undertone of being just friends, and that was fine with me. We ended up getting protein shakes and sandwiches on the drive back to her car, and we decided to park and eat in the truck before heading home. \n\n\"Hey,\" she said softly. I did enjoy the moments where we had heart-to-heart conversations. And there was a certain tone of voice and a certain way she would begin a thought with 'Hey' where I knew it was going to be one of those moments. \"I know it was your money, when you gave me back the money Joe stole. Did you know that I knew?\" \n\n\"I had my suspicions,\" I shrugged as I answered. \n\n\"It would have worked if you hadn't said Joe knew you invested the money,\" she laughed. \"If you had said you secretly took part of his inheritance and didn't tell him, maybe I'd have believed that.\" \n\n\"Well, the job he's at now, he's been there three weeks. He's growing up!\" I embellished, as if three weeks was a record. Dina laughed. We very rarely talked about our families. It wasn't so much that it was a sore subject, but that we both had resigned ourselves to it being hopeless. \n\n\"Then that day,\" her voice trailed off and she turned her head away so I wouldn't see her face. Just two weeks after she and my brother divorced, I happened to be stopped in traffic at a busy intersection, my car waiting in line next to that mysterious brick building with no signs on it anywhere. And there was Dina walking out of the side door, crying and being helped into a car by her mother. And just as the light changed and I had to start driving, Dina had happened to look up, and we made eye contact. \"I know you can keep a secret.\" \n\n\"Well, same here,\" I said softly. I remembered how she had overheard grandmaster Frank telling me in his unkind manner that I was terrible and I should just stop testing for promotions (not all grandmasters are nice people.) But when I left, there were still three cars in the parking lot, including Dina's, and I saw here surreptitiously walking out the back door. She had heard everything, but I knew that she had never told a soul. \n\nBut we had an unspoken bond of silence. We had never before discussed the secrets we knew and had kept, neither the worst day of Dina's life, or my \"top-ten\" worst days of my life. It hadn't dawned on me before how deep our friendship had become. Obviously, I still looked at her ass whenever I could get away with it, but at least I felt guilty about it. \n\n\"So.\" In addition to the way she would say 'Hey' sometimes, there was a very particular way she would begin sentences with 'So' when she was about to bring up an even deeper topic. I looked at her, and I suppose there was a certain way I would look that let her know I was listening intently. \n\n\"I know it'll be a little weird, but do you mind lasering me? My advanced swimming lessons for the triathlon start in two weeks. I don't want to show up all hairy,\" she said, looking past her lap to her thighs and knees. \n\nI tried to act as if that sort of thing happened to me every day, and looked at her ankles as I replied. \"Sure. I'm not necessarily an expert, but I'm patient. I read a few articles.\" Although she probably knew everything I was telling her, I echoed back what I had learned, that a typical session took about an hour, but it takes several repeat visits to get the hairs that you missed each previous time plus the new ones that keep appearing for a while. And how the hairs don't fall out right away either. \"They look pretty smooth, though,\" I said, as I tilted my head to look more closely at her ankles. Her delightfully slender ankles. \n\nShe gave me an odd look, but continued, \"Ok. Mind if we start later this evening? It'll be cutting it close, needing to be done in just two weeks.\" \n\n\"Sure. Follow me back to the house,\" I said, and she hopped out of the truck, into her car, and we went back to the house. \n\n:::::::: \n\n\"Let me shower first,\" she said. This was starting to get real! But being a single male, I knew the guest bathroom didn't have any towels in it. Or soap, bath or hand. I had to get supplies from the master bathroom and a towel from the laundry room. Wait, she's worth it. Two towels! That was unheard of for me. It must be nerves, I chuckled at the voices in my head. \n\nI decided to hurriedly go to my room, and put on a second pair of underwear over my boxers. If I got hard, I didn't want to be caught. And knowing the way pre-cum steadily flows out of me, I needed some extra layers of cloth to absorb things. \n\nThen, I made a makeshift grooming station. By makeshift, I mean I rolled the laser machine into the living room next to the couch, positioned the ottoman in front of the couch, and got the little step stool from the garage. She would sit, her legs stretched outward, and I would sit on the step stool, do one leg, then move the stool to her other side for the other leg. \n\nShe came out, having put her top back on after the shower, but was clutching a towel wrapped around her hips by the front. I gulped, wondering how awkward this would be, but thrilled at the prospect of spending time with her legs. \n\n\"Well, that won't exactly work.\" I wondered what she meant, and what she was doing. First, she turned her back to me and re-tied the towel so it would stay up on its own. She pulled out a pair of latex gloves from the box that was in the storage tray on top of the machine. Then she took two sofa cushions off the couch, took them to the breakfast table, and placed them end to end on top of the table. And as she leaned forward, her blouse hung down a bit. From behind her hips and seeing up past her abdomen, I caught a momentary glance of her left nipple. She had put her top back on, but no bra. Then she moved one chair out of the way, and another to where it was positioned in front of the two cushions. \"OK, I think this will work better.\" \n\nI was puzzled. My way on the couch would have made it easier to do her legs. She jumped into a sitting position on the table, the cushions for added padding. Still wondering what she was doing, I rolled the laser machine next to the table, plugged it in, sat down in front of her, and reached for her ankle. \n\n\"Oh, you're so sweet,\" she said in a mildly admonishing tone, as if what she wanted to say was, 'Are you really this stupid?' Then, in a moment I will never forget as long as I live, she leaned back a bit, threw the towel open, and parted her legs to reveal herself, naked from the waist down, her glorious pussy completely exposed in all its glory. \"I thought you understood what I meant. I'm sorry. I hope it's not too weird?\" She said it like it was a question, but I suspect she knew I would have no objections. And I didn't. \n\nI looked down, under the circumstances feeling it was all right to look at her pussy. Her parted legs. Her pubic hair, nicely groomed, quite short. And her labia. Dina's gorgeous completely opened labia. \"I, uhh. Umm. No, no, not at all,\" I babbled. \n\nShe handed me the gloves and said, \"We shan't speak of this.\" Then she leaned back, propping her upper body up with her elbows, and resting heels on the edge of the table to support her wide-open legs. \n\nSo, doing my best to act nonchalant, I leaned forward, my face about a foot from Dina's wide-open pussy, and began her laser treatment. I was nervous as hell, praying to myself that I wouldn't start sweating. I was overly tentative at first, but gradually, I got better at it, and we reached the point where I had gotten all the hairs I could get, without pulling her labia apart to get the innermost hairs. Somebody was going to have to do it. \"Umm, how do we. I mean, do you want to,\" I looked up, babbling, not sure how to say it. ",
        "\"It's ok, just do what you have to. You're doing a good job.\" So, although it was through a gloved hand, there I was, gently pulling her outer labia open so I could zap the innermost hairs. I lasered away at the already short hairs, secretly fascinated at the extreme close-up view I was getting of her vagina. Then, when the time came to do her left side, I switched hands, pulled her left labia open with my right hand, and lasered her pubic hairs holding the wand in my left hand. \n\nThis close, there was no avoiding smelling her. Her pussy. Her crotch. Her ass. My face was less than a foot from her. She smelled delightful. Her groomed pussy looked amazing. I couldn't believe what was happening. But I was continuing to get better and more confident at this. Then another milestone. \n\n\"Ok, open up wider and lean back, there are some hairs back there too,\" I said, nodding down below her vagina to her ass. She complied without batting an eye, wiggling downward a bit and pulling her knees up to her shoulders. She even raised her bottom up into the air for me, leaving me wide-eyed and just inches from both her pussy and her tiny, round, and most delightfully beautiful anus. I zapped around, and again, had to also pull and hold each ass cheek open to get to all the visible hairs. It was spectacular, even through the gloves. I couldn't quite feel the warmth of her flesh the way I would without them. But still amazing. \n\n\"Ok, let's rearrange now,\" she said, and leaned forward, to get off the table. I had to stand up to give her room, which was going to be a bit awkward. My erection would most clearly be visible, but in a split second, she climbed back onto the table, this time crouching her knees and elbows. Again though, gravity caused her blouse to sag down. Another quick view of her nipples, this peek a little longer than the first. I started targeting the hairs that weren't readily accessible while she was on her back. \"After this you'll probably have gotten what you can for one night, right?\" \n\nI didn't want it to end, but I had to be agreeable. \"Yep.\" As I finished up, I realized to my horror, that having spent almost an hour lasering Dina's pussy, seeing it, smelling it, that even through the two pairs of underwear, there was also a big wet spot of my pre-cum in plain sight, with added prominence since it was at the apex of the also erection bulging through my pants. \n\nShe stood up, and sadly for me, wrapped the towel back around her. \"How's it looking?\" \n\n\"Good!\" I said, perhaps too enthusiastically. I got the impression she meant, 'how is it looking, regarding the task of lasering my pubic hairs?' In my head, it was, 'how is my amazing pussy and ass looking?' \n\nIt turned out we were both right, because, yet another shock, she followed up with, \"I bleached it, with one of those home anal bleaching kits. I can't see to tell if it's making a difference. What do you think?\" \n\n\"I was wondering about that. I mean, I didn't get to... I mean I didn't see it before, but It looks amazing!\" Again, I worried that I was being too enthusiastic. And that 'get to' part probably sounded a bit too wishful. She didn't seem to notice or to be offended, though. \n\n\"It also takes several treatments. Keep an eye on it for me, it's hard turning and looking in the mirror to see it.\" I was happy to comply. I couldn't believe what was happening to me, but I have to say, if a beautiful woman asks me to keep an eye on her ass for her, I'm going to be quite happy to comply. \n\nNot much else happened. I was about done for this treatment. I knew she probably knew more about it, but we talked a little more about the process, about how the hairs would start falling off over the next few days, and how it would take several more treatments to achieve absolute baldness. \n\nShe went back to the bathroom to get dressed. And in her absence, I managed to mostly lose the erection, but the wet spot was still there. I decided to sit on the couch and cross my legs, in a way that the fold of the cloth might hide it. She came back out, but also had her purse out and her keys in her hand. Sadly, she was leaving. \n\n\"Ok. Thanks. Do you mind if I come back tomorrow? I know we have to wait a bit for my pubic hair to fall out, but I want to do my upper legs and inner thigh, maybe my underarms am too.\" \n\nOh, thank the dear lord, I thought to myself, but trying to not act too excited, I just said, \"Sure!\" I couldn't believe I was here talking to Dina about her pussy, ass, legs, and underarms. I was having a good day. \n\n\"I hope you don't mind. I hope it wasn't too strange.\" \n\n\"Not at all,\" I said. \n\n\"Like I said, we shan't speak of it,\" she said, a twinge of humor in her voice. \n\nI nodded, and the motion made me realize I needed to crane my neck and hopefully give the joints in my spine a much-needed crack. It made an audible sound. \n\n\"Oh gosh, I'm sorry,\" she said, realizing she had caused my neck to be a little sore. \n\n\"No, no, no, don't worry at all. I enjoyed it,\" I said, trying to make it sound like an off-hand joke, and that grooming my ex sister-in-law's pubic hairs was no big deal. \n\n\"Yes, it seemed like you did,\" she said casually. Wait. What did she mean by that? Was she implying that she had noticed the erection? \"See you tomorrow, about seven?\" And she was gone. \n\nI needed to masturbate. I still was having trouble processing all that had happened. But having spent the past hour with a raging erection, I took the towel she had been sitting on, pressed the part where her bottom had been to my nose, went to my room, and masturbated. Twice. To thoughts of Dina's spectacular vagina. \n\n:::::::: \n\nThe next day she came over again. This time, casually as ever, she took her bottoms off in the breakfast nook, not even going to the bathroom to change. And she hopped back up onto the table, this time me focusing on her thighs. I could already see, that even though it was barely noticeable, some of her pubic hairs were starting to thin out. \n\n\"I can already see the hair thinning out a bit,\" I said. I still was thrilled to be talking pussies with Dina. Who would have thought that all these years later as adults, I was spending time with her pussy? \n\n\"Do from this angle too?\" and she rolled over, again onto her elbows and knees, this time I was doing the back of her thighs. She still smelled amazing. And I wasn't sure if it was my imagination, but her cute little asshole was again a little pinker and lighter than before. \n\n\"Did you treat your behind again? It's lighter than yesterday, I think.\" She nodded. She smelled even better than the day before. \n\nBeing behind her, I also had the opportunity to really stare and look closely, without being caught. And I noticed something, something that I had dismissed as possibly my imagination the day before. But there was no doubt this time, there was a little glistening wetness visible, between her inner labia. And they were bigger than yesterday too, subtly engorged. I could see it. Smell it. And blended with the pheromones from her ass cheeks right there, it made me so hard my penis hurt. I had worn three pairs of underwear today, but something told me I would still create a wet spot in the front of my pants. \n\nMaybe it was wrong, but the context made me feel brazen. Plus, I had the latex gloves on. I was purely just checking. I reached up, and with fingers of each hand outstretched, I spread each cheek open to fully stare at her ass and asshole. \"Wow, that looks fabulous,\" I said excitedly, not caring if I sounded too eager in the heat of that moment. \n\n\"Hey, take a picture? Show me.\" \n\nAs fast as I could, in order to beat her to saying \"my phone is in my purse,\" I quickly stood and got my own phone out, fumbled a bit to press the right buttons, but thankfully got it ready to go reasonably quickly. I started snapping, taking exactly eight pictures in rapid succession, my phone making fake shutter sounds with each shot. Normally I'm not this nimble with the buttons on the phone, but I surreptitiously set the phone to video mode and took a short video of her ass and pussy. I felt bad. But was already planning my masturbation for the evening. \n\n\"It looks spectacular. A porn star would be proud!\" I texted her all eight pictures, but not the video. That was my sordid secret. \n\n\"Delete,\" she said flatly. \n\nI made a spectacle out of deleting the pictures, holding the screen of the phone where she could see, by the time she turned around. In my head, I counted, and deleted all eight pictures, with her seeing that I had deleted them. \n\n\"How's your neck, by the way? If you're OK, can we do my underarms too?\" \n\nThis was turning into the new 'best day of my life'. Yesterday's grooming session had been the previous 'best day of my life', but today was even better. Before I had even finished saying \"Sure, no problem,\" she had already pulled her t-shirt up and off, standing there in just a bra, no bottoms. I was hoping she would take off her bra too, but no luck. Not that looking at her lacy bra wasn't nice to see. \n\n\"Ok, I guess stand, and I'll do it that way?\" I was trying to avoid my erection being seen, by remaining in my chair. She smelled amazing up there too. I loved everything about the way she smelled. \n\nAgain, the evening came to an anticlimactic end. She said thanks, we talked about maybe tomorrow, but it wasn't firmed up. As soon as she left, I sat back on the couch and started watching the video. And pumping my cock. This business of staying hard for hours at a time is hard work! I abruptly stopped and pulled up my pants when I heard a noise outside, but by the time I pulled my pants up while remaining seated and walked to the door, nothing was out there. \n\n:::::::: \n\nThe next day, I was eager to have her come over. Her legs maybe? Upper thighs? But sadly, she had other plans. Then the day after that, she had to work late. Finally, after three painful days of waiting, she texted. \"Mind if I swing by?\" \n\n\"Yup!\" I wrote back, adding a smiley. \n\nWhen she arrived, she seemed excited. She kicked her clogs off and again pulled her pants off, but this time her top as well. Standing in front of me, totally naked, she excitedly said, \"Look!\" She wanted me to look at her pussy. At first glance, her pussy seemed bald and perfect and fantastic, but on closer, much closer inspection, there were still a few random hairs left plus some new growth. So thankfully for me, more work to do, lasering away Dina's remaining pubic hairs. \n\n\"How are your underarms?\" I asked, secretly relishing that I would not only see them, but be close enough to smell her too. She raised both elbows above her head and cradled her head in her palms. I was closer to her underarms than I ever had been in my life. And loving every minute of it. As expected, there were still some hairs with new growth to be tended to. That's why it takes several treatments. \n\n\"Let me go shower,\" she said, although she was already naked. \n\n\"Nah, not necessary,\" I said, trying to be nonchalant, but really, wanting to smell her more. \"Let's get started.\" The box of plastic gloves was nearby, and I started reaching for it. \n\n\"You don't have to use them if you don't want to. It's up to you,\" she said, nodding toward the gloves. I never thought it was possible to feel sorry for something like a day, but clearly, my previous 'best day of my life' had been demoted. This was most definitely the new 'best day of my life'. Three in one week! \n\n\"Ok,\" I said. \"That helps, it's hard to hold the laser as accurately as I want to with the gloves.\" That was a lie. In my mind, I couldn't believe that I would soon be touching her naked body with my bare fingers. \n\nAgain, the nature of the job required close quarters. I was close enough again to relish in the way she smelled and looked. She stood in front of me, and leaning in and down a bit, I had to balance and steady myself by holding onto her upper arm. And with no gloves, it was my first time ever to truly touch her in any way other than those incidental hugs at family gatherings. And with today's session focusing mostly on much smaller hairs that were newly growing, I had to lean in even closer. \n\n\"I should have showered. I hope I don't smell.\" \n\nIn the comfort and the dialogue we had been having, I answered right away, without necessarily thinking. \"I like how you smell.\" Oops, I didn't quite mean to say it that way. \n\nThankfully, she didn't seem to take that statement as weird. \"I should have showered, I'm sorry. I'll shower next time.\" \n\n\"You shower next time, I keel ya!\" I joked. I was a bit emboldened, and for the first time, I leaned my head within inches of her underarm and blatantly breathed her in. \"In fact, you are forbidden from showering from now on.\" \n\n\"You're weird,\" she laughed. Part of me was glad she laughed. Except I was thrilled. And she smelled so good. \n\nI finished her underarms, at least for this visit. It triggered a sense of pending sadness in my head, as I realized in just a few more visits, these visits would no longer be necessary. \"Ok, let me get the rogue hairs down there,\" I nodded down to her crotch, so casually it was almost funny. \"Turn around, palms on the floor.\" \n\n\"I'm showering, no two ways about it,\" she said, and took a step toward the guest room. But I reached out, and with a firm enough hold to impair her walking away, pulled her back toward me by the hipbones, instantly triggering a visceral reaction in me that I had touched her like this. I pulled her back toward me, and with my nose just a few inches from her ass, I again made a spectacle out of inhaling and smelling her. \n\n\"No shower,\" I said. \n\n\"Jack. It's seven o'clock at night. I've been at work all day...\" \n\n\"Exactly,\" I said. \"I was about to say the same thing. It's seven o'clock at night. You've been at work all day.\" \n\nShe seemed to agree to it. Except as soon as I let go of her hips, she darted away to the shower, laughing. \"You've gotta be faster than that, old man!\" she said triumphantly. \n\nAll I could do was laugh and shake my head. I stayed in the chair, waiting for her to come back. She did, and this time, as I had hinted at earlier, she stood in front of the chair, and with her dancer's body and from all those years of gymnastics, leaned her upper body all the way forward, and placed her palms flat on the floor. She was wide open, and her delightful ass was there, cheeks open, for me to zap the hairs. And again, leaving absolutely no room for doubt, her pussy lips were glistening. For basic health and hygiene reasons, it wasn't the safest thing to touch her ass first, pussy second, so I made a point not to mace actual contact at all, as I targeted the visible hairs I had missed last time as well as the new growth. \n\n\"Bleached a little more?\" I asked. She nodded. \n\n\"Hey, sorry about the shower. I'm flattered that you like how I smell. It's just been a long day. Just, you know...\" She trailed off. I got her hint, that sometimes, a girl just wants to shower. Even if her pervert ex-brother-in-law wants to smell her. \n\n\"Ok, sit up, let's do that pussy!\" No matter how many times I said it, it was thrilling to talk about her pussy with her. She hopped up onto the table, into pussy zapping position, but before she did that, I grabbed her right foot, lifted it to within an inch of my nose, and blatantly sniffed her toes. They were just as delightful as I expected. \"Remember, I like how you smell,\" I added. \n\n\"Jesus, you're weird,\" she laughed. I grabbed her other foot, did the same thing. Since her foot was in my hand anyway, I changed course and started lasering her from the feet up. That would leave her pussy as the grand finale. I liked my adaptation to the plan. \n\nHer legs took a while, so after about half an hour, it was time for a break. \"Hey, I'm so relaxed. Get me some water?\" she asked. My heart sank, as I realized I had made quite a mistake in my planning. I wasn't wearing jeans; I was wearing shorts made from a much thinner fabric. Without the snugness of a pair of jeans to contain things. I knew that getting up would reveal my erection in a way that couldn't be hidden. I awkwardly stood, and tried to turn my back so that I wouldn't be caught so red-handed. Or should I say, purple-penised? She gracefully didn't say anything, although I knew she probably noticed. I handed her the water, and she drank. \n\n\"Ok, let's finish up. I've gotta go soon.\" Yet again I found myself with a new 'best day of my life', because the next thing she said was, \"Did you know I can do this?\" Then she proceeded to lay back, and while looking directly into my eyes, grabbed her right heel with her left hand, lifted it over her head, then repeated with the other foot. She ended up with her back on the table, with both ankles behind her head, and her pussy and ass so beautifully accentuated from my vantage point. \n\nI again tried acting as if this were just another day. Then I remembered how observant she had always been. I tried to use meditation to make my pupils less dilated, but obviously, that was about as likely as making my erection go away. \n\n\"Impressive!\" It was more than impressive, because opening herself up like this, I was for the first time, officially looking at her inner pussy lips as I got back to work. She was most definitely wet, and when that magical moment of using my bare fingertips to pull her outer labia open happened, I found myself touching her pussy and staring at her engorged and wet lips head-on. And needless to say, my appreciation for the way she smelled made it even more intoxicating. But I was on duty. I finished up what I could for this day's treatment, even though I wished it would go on forever. \n\n\"OK, I better get going. I'm meeting Laura for dinner and drinks.\" I had heard a lot about her friend Laura over the years, but had never met her. I got the impression that Laura and she were quite different, but that they were friends nonetheless. \n\n\"OK. Drive safe though. And call me if you need a ride, don't drive if it's not safe.\" \n\n:::::::: \n\nShe got dressed and took off. I was so wound up, I pulled my pants down and masturbated on the couch, reflecting on everything that was happening. Eventually, I dozed off with the TV on. \n\nIt was 2:11 A.M. when my phone woke me. It was ringing, but I also saw notifications that I had missed two text messages too. It was Dina, talking unusually loudly, the way you would expect someone in a nightclub or who had been drinking too much would. \"Hey, Laura is going to drop me off at your place. I don't want her driving all the way out to my house, I couldn't do that to her. You on the other hand...\" \n\n\"No problem. What about your car?\" I said, but she had already hung up. I put on a new pair of shorts and a T-Shirt and went downstairs to watch the driveway. About ten minutes later, I saw headlights approaching, and went out to greet them. \n\nI had heard so much about Laura, it was nice to finally meet her. She sounded like a true friend. But as they pulled up and I saw her through the window, I realized, amazingly, that I knew Laura. At least, I knew who she was. She was the stunning tall woman with the short black hair from the fourth floor at work. The one who I had spoken to only once, awkwardly. We were in the cafeteria in line on caf\u00e9 con leche day, and I had let her go ahead of me in line at the cashier counter when we both arrived at the same time. I had been kicking myself ever since that day, having missed my big chance to talk to her. She would smile at me though, although we always seemed to be walking in opposite directions without any chance to talk. \n\n\"You're Laura?\" I said incredulously, and couldn't stop myself from a little smile. \n\n'You're the ex-brother-in-law?\" Laura said her part even more incredulously. \"That's so funny. Well, nice to finally actually speak,\" she smiled. I smiled. Then I struggled to think of something witty to say, and instead, let an awkward silence interrupt our first real conversation. ",
        "Dina, more than just a little tipsy, ended that seemingly endless awkward moment by bounding out of the car, running up to me in a very familiar manner, and giving a huge tight hug, wrapping her arms around her neck, and kissing me on the side of my head. \"Hii,\" she said, affectionately. \"I didn't want Laura to drive all the way out to my house. I told her you'd be glad to.\" I noticed Laura had a puzzled look at the way Dina was interacting with me. I decided to try the 'harmless old man' approach, to deflect her suspicions. \n\n\"What about your car?\" \n\n\"What car?\" Dina said, and burst out laughing. I tried to look old and responsible, to make Laura less suspicious. \n\nI came up with an idea. I looked at Laura. \"Hey, Laura, O'Malley's is so close, do you mind taking us back, so I can get her car?\" Then a stroke of genius to look even more like a harmless old man. \"Then also, we'll follow you to your house, make sure you get home OK.\" I half knew that Laura didn't live too far away. \n\nLaura was a good friend and human being. She agreed happily, and we all got back in her car and back to O'Malley's. \"Isn't my brother-in-law.. Excuse me, my ex-brother-in-law the best?\" Dina kept asking, to which Laura patiently nodded and agreed with her tipsy best friend. I had heard stories that Laura had a wild side to her too, but she took her role as designated driver seriously. \n\nI got Dina's car, and followed Laura from O'Malley's to her house. Dina had decided to stay in the car with Laura for that leg of the trip. \"OK, let me walk up with you. Then flash your porch light three times to tell me everything's good?\" \n\n\"You're a good man, Jack, but let me walk up alone, you probably shouldn't leave HER unattended,\" she smiled, and beckoned toward Dina, who was dancing inside the car. \n\n\"Hm. Good point,\" and just as I said that, Dina honked the horn. Twice. At about 2:30 a.m. \n\nWe both chuckled, but knew I needed to avoid a third honk. \"Ok. Thanks so much for everything Laura, I wouldn't have been able to sleep knowing her car would be parked there overnight.\" \n\n\"Well, I'm not sure you're going to get much sleep anyway,\" she said, sounding a bit as if she suspected something. I realized even more deflection was necessary. \n\n\"Yeah, it'll be a 45-minute drive to get her home and 45 minutes back. I'm fine though, I had gone to bed early.\" I was almost annoyed. I was defending myself against an implication that wasn't entirely accurate. Sure, I was spending hours at a time getting rid of my ex-sister-in-law's pubic hair. Looking at her naked. Smelling her. Feeling her up. But no sex. \n\nIt seemed to work. Laura said, \"Ok, be safe.\" She walked up to her front porch, I saw a light go on inside, then three flashes of her porch light. All was well. \n\n:::::::: \n\n\"I don't know why I never thought of this before. I'm totally fixing you two up! While we were in the car, she kept talking about you, and couldn't believe you were such a hottie. She thinks you're a hottie,\" Dina told me. \n\n\"Well, funny story. She works on the 4th floor. I see her in the elevator lobby occasionally, I've noticed her for sure. It was a surprise, to realize that she's the Laura you talk about.\" I knew to act interested, but not TOO interested. I did get to see Dina naked and spread open wide all the time. I certainly didn't want to jeopardize that. \n\n\"That's IT. You're calling her tomorrow. Let me send you her number.\" She tapped a few keys, and I felt my phone buzz. So now I had hot Laura from the 4th floor's number! \n\nI turned toward the highway, when Dina shouted, \"Wait, wait, wait. Where are you going?\" \n\n\"Oh, I thought I was driving you home.\" \n\n\"Hell no. I want more laser hair removal. No, wait. I DEMAND more laser hair removal. Time is running out, you know.\" \n\nI wasn't about to disagree with that. More of Dina, naked and spread open. Plus, a little drunk. Her ass, pussy, legs, and underarms all needing a thorough inspection and follow-up laser treatment. I turned around, and in just a few minutes we were in my driveway. It was just a short walk to the front door. \n\n\"Let's doo thisss\" Dina said playfully, trotting sexily to the front door, but unbuttoning her blouse as she went. Still in the front yard. Then she started running and prancing, showing off a little of the ballerina in her past toward the door. She got there before me, and by the time I caught up, she had her blouse off and was undoing the button of her jeans. I was torn, part of me wanted to stop her because we were still out in the open, but part of me thought to myself that my neighbors never spoke to me anyway, and wouldn't know any of it was scandalous. Nonetheless, I got my keys out quickly to open the front door, just as Dina finished stepping out of her jeans, tossing them aside. Then her yellow thong, which went even further as the threw it. Then she unhooked her bra and dropped it in place, making her completely naked as she strode into the house. I picked up her blouse, jeans, and bra, but the thong had gone behind my beloved Ficus plant, and I realized needed to keep an eye on her. My devious side also thought if I 'forgot it', and she forgot it whenever it became time to go home, I'd have her thong to play with. \n\n\"Ohh kayyy,\" she said with a flourish, and ran to the sofa. \"Beam my pubes out, Scotty!\" She joked. I was glad that even having grown up as a wild child, she still had a wee bit of a nerdy streak in her. A hot naked woman who knew Star Trek terms. \"But I need an inspection first. You don't mind, do you, inspecting me?\" Clearly, I didn't. \n\nTrying to look like a good boy, I stopped at the breakfast table and got out two gloves. But when I reached the sofa, she sat up, reached forward, took the gloves out of my hand. Then she pulled hard on the fingertips of each glove, also using her nails to poke starter holes in them. Then she dramatically ripped them to pieces and threw them off to the side. \"No gloves. I never want to see gloves again! If I can't shower because you want to smell my ass, then you can't wear gloves. That way at least I can feel a man's hands on me. It's only fair,\" she said, sounding stern. Then she lay back, her legs wide open, giving me a full view of her pussy. Then, she reached even further down with her hands, and pulled her ass cheeks apart, and made as if she were speaking with her ass cheeks. \"No. More. Hairs!\" She exclaimed. We both burst out laughing. \n\nI had to get back up and roll the laser machine over to the couch. As I started to reach over the side, to plug it in, Dina started talking. \"Do you like getting to see me naked?\" She asked. I nodded. \n\n\"I guess I'm a bit of an exhibitionist. I like being naked. I like showing off and being looked at. Especially by you. And especially showing my entire wide-open pussy to you. Did you know that?\" \n\n\"I'm glad,\" I said. Except instead of saying it in a voice, I realized that my mouth was full of saliva in the back of my throat. It came out like my voice was being electronically scrambled. I had to swallow before continuing. \"I didn't know.\" \n\n\"Yeah. I love how it feels knowing you're looking at me. Looking at my pussy.\" \n\n\"Oh, really?\" I was conflicted. I was hard already. She was stunningly beautiful. But drunk. I wasn't sure what was going on, but she was drunk enough, I sadly knew that even if she told me to pull out my dick and fuck her then and there, that I shouldn't. \n\n\"Yes! Jesus Christ!\" After a pause, she seemed as if she knew she had snapped at me. Her tone changed to a kidding around one. \"How fuckin' stupid are you?\" Then she paused again, this time in a softer voice. \"But I appreciate it. I like knowing someone likes looking at me.\" \n\n\"God yes,\" I said. \n\n\"There's something else,\" she said playfully. \"Did you know I can do THIS?\" And she did an absolute 180-degree split, her legs going straight out to her left and to her right. \"What do you think of that?\" \n\n\"Hmm,\" I said, pretending I wasn't impressed. \"Can you do one ankle behind your head, and the other leg straight out? Now that,\" with a pause for dramatic effect, \"would be impressive.\" \n\n\"Oh come on, give me something hard to do,\" she said, not intentionally being dirty, but laughing once she realized the double entendre. \"That's so easy.\" She did have to use her hand to pull her ankle behind her neck. But she did it. \n\n\"So, it's not just seeing me naked. It's me opening my pussy for you to stare at it. Do you like looking?\" \n\n\"Not like. Love!\" And for the first time, at least face to face, I felt like I had implicit permission to stare without pretending not to stare.\" \n\n\"What do you like more, my pussy or my ass?\" She asked. \"Sometimes, I think you like my ass more. I see you staring at it, I bet you didn't know I knew that.\" \n\n\"Well, it's definitely your pussy. But that doesn't mean I don't love looking at your ass too. And the bleaching, I can't believe how tiny and perfect and pink it is. And that I get to look at it!\" \n\n\"Guess what else?\" she asked playfully. \n\n\"What?\" I was afraid to ask. \n\n\"I know your dick gets hard when you laser me. Did you know that I knew that?\" \n\n\"Umm...\" I wasn't sure what to say, \n\n\"So.\" That pause again. \"So, I've been wondering. Why does your dick get hard? \n\n\"Well, I guess I can't deny. I mean, you're naked. You're beautiful. Your pussy and ass are wide open for me to see. And smell. I'm only human, y'know?\" \n\n\"Oh yeah, mister smell my pussy, ass, underarms, and toes... you're a freak!\" She joked. Then again, instantly softening the mood. \"It's OK, I like knowing I've still got it,\" she laughed again. \n\nThere was a pause. I didn't quite have a good answer. \"Well, I'm sure you've noticed, but my pussy gets wet when I know you're looking at me?\" \n\nI gulped. \"I did notice, yes.\" \n\n\"What did you think? \n\n\"I loved it. I love everything about this. I love seeing you naked. And you know me and smelling you. I love what we're doing. I'm dreading when the hairs are permanently gone and you won't need more laser treatment!\" \n\n\"I'll come over for inspections. How about that?\" she said. \"And maybe I'll tell Joanie to come over for laser hair removal too. Lord knows she needs it!\" I couldn't believe my ears. Her sister Joanie was gorgeous too, but a socially awkward nerdy type. \"I'm sure you'd be thrilled to do laser hair removal on her too, you perv!\" \n\n\"Deal!\" I said with a smile. \"I think the inspections need to be at least twice a week?\" \n\n\"Deal. Twice a week!\" she agreed. \"So let me ask you something. \n\n\"Uh oh!\" I kidded, knowing it was going to be a doozy. \n\nAgain, preceded with a 'So'. \"So, when you get hard... I mean, I know you're hard from a naked woman and seeing pussy and ass and all that. But does it turn you on? I mean, does it turn you on, that way?\" \n\nI gulped. At the same time, although she was tipsy, she wasn't as drunk as I thought at first. Her lips were loosened up a bit, but she was speaking clearly, looking me in the eye, and speaking very rationally. \n\n\"Well,\" I paused, not sure what to say. \n\n\"I mean, are you turned on in an 'I want to fuck my ex- sister-in-law' sort of way? Or just from seeing a naked chick? Because I peeked through the front door portholes and saw you beating off two times. And the second time, I saw you looking at your phone. You kept those pictures of my ass, didn't you?\" \n\nI nodded, embarrassed and caught-red handed. \n\nDina continued. \"I should have been mad, but instead it turned me on. I almost came back to tell you to fuck me, but you were beating off. I saw! Do you do that every time?\" \n\nI started to nod and confess, that yes, I had, but the words hadn't even come out of my mouth before Dina did something absolutely amazing. She slid her middle finger right into her pussy, and said, \"'cause I do this when I get home. Sometimes even on the drive home. I stick my middle finger right into my pussy, like this!\" she said. \n\nShe had asked two questions, without me answering the first. I decided intentionally to answer in a way with double meanings. \"I definitely do.\" Which question was I answering? \n\n\"And did you know I taste incredible?\" She teasingly popped her wet middle finger into her mouth, and pulled it out slowly and seductively. I was having yet another best day of my life. \"But did you ever answer me about the whole wanting to fuck me question? You didn't, did you?\" \n\nI was in the same shorts I had put on earlier. But it was time. I stood up, undid the belt, the top button, and the pants were loose enough to slide down, along with my boxer briefs with a hook of the thumb. With my pants around my ankles, I grabbed my extremely hard cock and pumped it. \"Yes. I do think of you that way. And God, yes, I want to fuck you. Over and over. And yes, I pump my cock every time, and imagine cumming right into your mouth and pussy and ass.\" \n\nShe was fingering so rapidly and eagerly, I could hear it. I was slightly above her after standing. She looked straight at my cock, then up into my eyes. \"I want that in me.\" \n\n\"We've had so much to drink. I wonder if,\" I started to say, trying to soften my statement by saying 'we', but also feeling like it would be wrong to have sex when she was impaired. I was interrupted by her leaning forward, and with her hand reaching out as if to shake my hand, she grabbed me by the penis and pulled me to her. \n\n\"Fuck me. Cum inside me. Just this time, it'll be a quickie, but I want to go to sleep with a smile on my face and cum in my pussy.\" She was pulling me hard enough that I had to yield, and within seconds, I was inside her. She cooed softly as I entered her. \"Just like that.\" \n\nI was on my knees in front of the couch. I reached down and pulled her by the hips a little closer to me, and basked in the warmth of her tight and almost perfectly bald pussy. \n\n\"You realize I've wanted this for years, right?\" She was speaking earnestly. \n\n\"Me too,\" I whispered. I looked down, and watched as my cock, glistening with her wetness, glided in and out of her. \n\n\"Faster,\" she whispered. \"Fast and hard.\" \n\nI sped up. I felt a little uncomfortable, knowing I would cum so quickly, having spent so many hours lately being hard, thinking about her naked body. \n\n\"Finish in me. Deep in me. Then I want you to pick me up and carry me to bed and tuck me in,\" she gazed into my eyes as she said it. \n\nIt felt so good. And when she started bucking and raising her ass to meet me, it wasn't going to be possible to maintain my control. \"Fill me up. Now,\" she said. \n\nAnd I did. I gushed deep inside her, and held my body against hers, as my cock jumped and pulsated inside her, a second blast, a third. I loved the sensation, first of her, then the new warmth of my own cum, and the way my cock suddenly slid in and out of her even more easily. \n\n\"Ohh, I like that. Did you know I like cum? Now watch this,\" she continued. She took hold of my hips with her fingertips and pushed me away with her thumb. She reached down, and dipped her middle and third finger right into her pussy, and hooked her fingers to pull out some of my cum. Then up to her mouth. \"In fact, I don't just like cum. I love it. God, I've wanted your cum in me. Did you know that?\" \n\n\"Mmm,\" was all I could manage. She reached down again and collected more cum. She smeared it between her breasts. Then down again, got more, and wiped some across her upper lip, right under her nostrils. \n\n\"Now, pick me up, carry me to bed. If I stand, more of it will drip out of me. I want to go to sleep with it in me. Take me to your bed and tuck me in.\" \n\nI sat next to her on the sofa, sideways, and made like a forklift with my two arms and picked her up. She was so light. It took me a little concentration to make sure I kept my balance once I stood up, but I prevailed. I started carrying her to my room, which was no more than about twenty paces away, but she was so relaxed and tipsy enough that she was starting to fall asleep. I carried her into my bedroom, and managed to prop her against me just long enough to pull the sheet and comforter down, and I eased her down into the bed. She opened her eyes, but sleepily, and said \"Thank you,\" and closed them again. I waited for a minute or two, then quietly slipped out the room and to the kitchen to get a glass of water and some headache medicine to leave by the bedside table. When I went back in, she was asleep, but had apparently decided the comforter was too hot, because it had been kicked down, leaving her naked body fully exposed from the shins up. I couldn't resist lowering my head and giving a soft kiss on the mons, then I decided to let her rest. \n\n:::::::: \n\nI went back to the living room to stop and reflect for a moment. My watch showed that it was exactly 50 minutes since I had gotten her car and said goodbye to Laura. \n\nAnd like clockwork, Dina's phone, sitting on the coffee table, went off. The preview display said 'Laura', and a picture of her playing sand volleyball showed up, along with the text, \"Hey, just making sure you got home ok.\" \n\nI decided to try to respond, hoping the phone wouldn't be locked, but of course, it was. Dina was so smart. But then I remembered I had Laura's number from Dina texting it to me earlier. I sent her a text from my phone, \"Hi Laura, this is Jack typing. She's fine! Thanks for checking on her.\" \n\n\"Oh, good. Asleep?\" Laura replied via text. \n\nI responded, \"Out like a light!\" \n\n\"Well, that makes sense. Are you ok? Maybe you should sleep on her couch rather than driving all the way home.\" \n\nGears started spinning in my head. I typed back, \"Oh, we ended up coming back to my house. She wasn't up for the long drive.\" \n\n\"Ohh, that's probably even better. I wish I had known that though, I'd either have come over or gone to bed 45 minutes ago.\" \n\n\"Oh gosh, I'm sorry. It wasn't planned.\" \n\n\"It's OK. I'm wide awake.\" \n\n\"Me too,\" \n\nThere was a long, awkward pause, then in an unusual moment of clarity, I wrote, \"I'll be there in five minutes to pick you up.\" \n\n\"You will, will you?\" she replied, with a smiley next to the text. \n\n\"I will! You said you would have come over, that you're wide awake. And I have gourmet frozen waffles and caf\u00e9 con leche, and I'm not afraid to use them!\" \n\n\"Hm\" was her reply, after a brief pause. \n\n\"Well, you hesitated, so I'm already in my car.\" I was fibbing, but it sounded good. \n\nShe responded, again after a pause. \"How about fifteen minutes, I need to get dressed again.\" Well, that made my heart skip a beat, having her reveal that she was naked. Was that what she meant? Laura, as I suspected, was as intelligent and observant as she was beautiful. She probably realized what I, a simple male, was thinking, and added, \"I don't think you want to see me in fuzzy slippers, sweats, and a tank top.\" \n\nWhat she didn't know, but I wasn't allowed to say out loud, was that I did want to see her like that, especially the tank top. What if it was a white ribbed-cotton tank top, with no bra? \"Well, that would be just fine with me. If you insist though, I do like sundresses. Yellow sundresses. With cute strappy sandals. I'm just sayin',\" I typed, trying to pass it off as a joke, but I remembered the company picnic two years ago like it was yesterday. She had worn a yellow sundress and cute strappy sandals that day. And she looked spectacular in it. \n\n\"Ok. Tell you what, I'll drive myself over, but it is late, so drive over, then follow me back. Do you remember where I live?\" \n\n\"I do. I'll be there, waiting out by the street. I'll be in a Green SUV.\" \n\n\"K.\" \n\nI took the world's fastest shower, then I practically raced over and parked on the street outside her house. I half expected a long wait, but fifteen minutes from my invitation, I saw her front door open, and she walked to her car in the driveway. In her yellow sundress. And cute strappy sandals. My heart skipped a beat. And in my head, I couldn't stop my inner male pig from wondering if she was wearing underwear. I hadn't said anything about what to wear under. ",
        "Five more minutes later, we were back at my house. I looked at her sundress and said, \"Wowww.\" I stopped before I said anything stupid. \n\nOnce inside, Laura wanted to check on Dina. I walked with her to the door to my room. \"She's in there,\" I whispered. \n\n\"I bet there's no need to whisper,\" Laura smiled as she whispered back and went into the room to check on Dina. I went and popped the waffles in the toaster and started the caf\u00e9 con leche. I realized Dina would be naked in there. Suddenly, I panicked, although there was nothing I could do. Would the room smell like cum? Would there be visible dried cum around Dina's thighs? I peeked over the kitchen counter, where I could see the door to the master bedroom. I could tell Laura didn't turn the light on, so hopefully, she didn't see anything. And almost right away, Laura came back out. \n\n\"Well, she looks fine. The real reason I came over was just making sure you weren't an ax murderer,\" she joked. \n\nI laughed. \"Of course I'm not. Well, not women with long brown hair, anyway. My ax and I, we have a type, and our type is tall women with short black hair.\" Then I made a spectacle out of looking at her short black hair. \"Sayyy!, you're about Five-Eleven, aren't you?\" I joked with raised eyebrows. Thankfully, she laughed too. \n\nThe waffles were ready before the coffee, but we were already getting along very nicely. There was a chemistry between us. The conversation just flowed, and we both found one another funny. \"You're good to her. I know she kids around a lot, but I know she appreciates it,\" she said. \n\n\"You're a great friend. Driving her home, driving back for her car, checking on her, coming over to see if she'd been dismembered. You're great too!\" I said with a smile. Again, she laughed. There was definitely a spark taking place here. \n\n\"I've heard so much about you from her. But I thought you were much older, which always made me think it was strange how she talked about you. Now it all makes sense.\" \n\nYeah, I'm amaaazing,\" I joked. \n\n\"That's what I hear,\" she said. I know the girls in Accounts Receivable talk about you. \n\n\"Really? Even leopard-print-pants-girl?\" I jokingly acted super excited. Leopard-print-pants-girl really did wear leopard-print pants. To work. In an office. Leopard-print leggings, to be more precise, along with slutty high heels, visible cleavage, and big hair. \n\n\"Oh, especially leopard-print-pants-girl. After a pause to add perfect comedic timing, she added, \"But we call her 'Hoover'.\" I laughed a long hearty laugh. Not only was Laura beautiful, with a macabre sense of humor to boot, she knew the joke that every boy wished for a girl nicknamed 'Hoover', for her perceived sucking abilities. \n\nI laughed out loud. And I was becoming increasingly smitten with this woman. \"I was wondering if you recognized me. It's always caf\u00e9-con-leche day in the cafeteria when I see you.\" Then I continued, \"That was why I stopped at the mall and bought this espresso machine on the way over to get you!\" \n\nWe moved to the TV room, and as she was sitting, she noticed the laser machine off to the side of the couch. With a puzzled look, she asked, \"Is that a laser machine?\" \n\n\"Yeah. Dina and I have a side business, we buy and sell used spa and restaurant equipment. I bought that at an auction, for only $100. We'll make a nice profit on that one!\" \n\n\"Ah. It makes sense now too; Dina was telling me about getting laser treatment.\" She stopped before making it sound like she suspected something. But she wasn't just beautiful, she was extremely intelligent too. I could almost tell gears were turning in her head. \"I thought it was odd, how she never talked about what spa she went to.\" \n\n\"It's so interesting, how we became close as adults. It was the side business where we really started hanging out together. Making a little extra money.\" I realized I was babbling. I had to stop. \n\nWe talked for almost an hour, and in my head, I was thinking to myself, that this was the best first date I'd ever been on in my life. We could talk about serious things. Occasionally something risqu\u00e9. I got to tell her more about how much I loved her sundress. We made macabre jokes about the pros and cons of being an ax murderer vs. a chainsaw murderer. This woman was perfect. \n\nAnd then it happened. I barely heard it, but I knew that sound. The click-click my plumbing made when water was running. It meant Dina was awake. \n\nThe master bedroom was behind an archway and off on the other side of the Kitchen. Off in the distance, I heard Dina calling, \"Jack?\" \n\n\"In here!\" I shouted back. It sounded like the bedroom door was open, but Dina hadn't come out yet. \n\n\"Hey, you called Laura!! That's fantastic!! Wow, you don't waste any time, do ya?\" \n\n\"I have exquisite taste!\" I joked back, pretending to be talking about Laura as if she weren't there. \n\nAnd just as I inhaled to begin telling her that Laura was with me in the living room, Dina appeared through the hallway, completely naked, but looking down at her abdomen as she walked, not seeing Laura because of that. She crouched down to her knees, and in an almost perfect impression of Robert Duvall from 'Apocalypse Now' said, \"I love the smell of dried cum in the morning,\" then burst out laughing. She stood back up, to see Laura staring at her in wide-eyed shock. \n\nDina switched from a moment of frozen panic into waving playfully at Laura, as if to say, 'well, there's no rational explanation for this, is there?' \"Hi Laura!\" Then she looked at me, and said, \"So you couldn't have told me Laura was here?\" \n\n\"I KNEW IT!!!\" Laura jumped up, grinning and pointing alternately at each of us with each \"I knew it, I knew it, I knew it, I knew it I knew it! The way you hugged him. I knew it right then and there. Then you on coming here instead me driving you home. You being fucking naked on the bed. The room smelling like sperm. The laser machine. And oh, I forgot. The thong hanging off of the Ficus plant on the front porch? C'mon!\" \n\nThen she turned to me, and continued, \"And you, mister,\" then a pause to begin talking in a mock man's voice, \"'Duhhh, 'We became close as adults.' Do you know what made you close as adults? Sticking your dick in her vagina. Having Sex! Cumming inside her pussy! That's what made you close as adults!\" Thankfully, she didn't seem creeped out. She was laughing, but more so, celebrating her vindication that she had been right all along. \n\n\"Well...\" I tried to explain. \"It was mostly true. Tonight was our first time to...\" then I trailed off. \n\n\"To fuck? Your first time to fuck? That's your story?\" she was still laughing. But Dina and I shared a glance. This wasn't the sort of thing we ever expected anyone to know about. Dina sat across from us in the recliner, but even in this nervous moment, Dina was still Dina. She propped herself on the cushion, leaning forward in a listening posture, but her legs were parted in a way that both Laura and I could see her vagina. \n\n\"Well. I know you can keep a secret. So, the cat's out of the bag. Jack wasn't lying though; this was our first night to fuck.\" \n\n\"But he lasered your pussy. Six visits, you told me. I was wondering why you never talked about where you were getting it done.\" \n\nThen, a pause, and I could tell Laura was thinking. \"So why try and fix ME up with this perv?\" \n\n\"Heyy!\" I protested. \n\n\"Well, it's a valid question. Fact is, Jack and I know this is all for fun. Well, for fun sex. We know we can't go fall in love and run off together. Plus, look at this loser. He needs all the help he can get,\" she joked. Then after a pause, she added, \"Plus, I'm your best friend. If things work out with you two, I know you won't mind sending him over to, um, to defrag my hard drive now and then, right?\" she said, with lots of innuendo. \n\n\"You two are nuts. I'm trying to process all this,\" Laura said. \n\nI mostly remained quiet. I certainly had started thinking that Laura and I had potential. At the same time, I didn't want to lose out on being fuck buddies with Dina. \n\n\"Ok. Start at the beginning. You two tell me how this all started.\" \n\nSo, we proceeded to explain, Dina mostly, with me chiming in occasionally. I did learn some things, that Dina had always had a girlish crush on me, and that she had put a lot of thought into plopping herself on the couch and opening her pussy to me to do laser hair removal. That her sister Joanie had a crush on me too and had expected sex the night Dina and my brother got married. And that this evening was the first time she had ever thought about setting me up with Laura.\" \n\n\"So, here we are! Any questions?\" Dina asked. \n\n\"Well, you covered a lot. But you dodged talking about the sex. Who made the first move?\" Laura asked. \n\nI pointed at Dina. Dina pointed at me. We laughed. \"She made the first pass this evening,\" I insisted. \n\n\"He got massive erections every time he lasered my pussy. And ass. And underarms. And legs.\" Dina said. \n\n\"She sat in that chair right there, without pants on, hiked her legs wide open, and made me look at her pussy!\" I jokingly fought back. \n\n\"He made big giant cum-stains in his pants. He's like a pre-cum factory!\" Dina retorted. \n\n\"Well, she got wet!\" \n\n\"He jerked off whenever I left. I saw him when I looked through the window on the front door.\" \n\n\"She watched me jerk off through the front door!\" I retorted, in an 'I'm tellin'\" sort of tone. \n\n\"He secretly kept pictures of my ass on his phone. That's what he jerked off to!\" \n\n\"She bent over and spread her ass cheeks apart and MADE me take pictures. It was her.\" \n\n\"OK, OK, enough. It's a tie.\" She made a thoughtful eyebrow raised face. \"Did you laser him?\" \n\n\"Eww, no. No plucked chicken on my watch. But he is nicely manscaped. Not my work though,\" Dina frowned, lamenting the missed opportunity. \n\n\"Where'd you fuck?\" Laura asked. \n\nDina and I both looked at the right side of the sofa. At the exact spot where Laura was sitting. \"Right there,\" Dina laughed. \n\n\"Eww, gross!\" Laura jumped up, laughing. \"Is it safe to sit here?\" She pointed at the love-seat on the other side of the room. \n\n\"Well, umm,\" Dina said, jokingly implying that we had fucked there also. \n\nLaura pointed to every chair in the room, to which we kept joking that we had fucked in all of them. \"You guys were busy!\" she said, although she knew we were joking. \n\nThe dynamic was unusual. Laura showed no qualms about things, having heard the full story. And it was fascinating, to sit here talking about fucking Dina with Laura, beautiful Laura. \n\n\"I guess it won't kill me,\" Laura sighed, returning to her original location. She made a big gesture out of raising her forearm off the armrest and tucking both elbows close to her sides. \"But maybe, I'll just keep my arm over here,\" she joked. \n\nThen she made a determined \"Hmm.\" \n\n\"What?\" Dina asked. \n\n\"Oh no you don't, I'm the one asking questions. I'm just thinking though.\" She leaned forward, rested her elbow on her leg, and propped her chin on her fist. A perfect replica of the posture of \"The Thinker.\" \n\n\"Here's how it's going to be...\" She trailed off and said nothing for about ten seconds. \n\n\"OK.\" another pause. \n\n\"Spit it out already!\" Dina joked. \n\n\"Well, there's NOT going to be any spitting out. But here's the deal. You're hot, and your ex-step-brother-in-law-once-removed-whatever-the-hell-you-call-him is hot too. You two fuck. I'm going to watch,\" she said, first looking straight into my eyes, then into Dina's. \n\nDina and I glanced at each other for a moment. I inhaled as if to say something, but I couldn't think of what to say. \n\n\"Now!\" she said. \"I want a live sex show. Fucking. Sucking. Licking. Orgasms. And you, mister, you are going to pace yourself, because the grand finale, is you cumming right into her mouth, and her swallowing it all. Understood?\" \n\nDina and I weren't quite sure if she was kidding or not. There was a momentary pause, waiting to see if Laura started laughing. \"Do you think I'm joking or something? Jack. Take your clothes off. Dina, come suck his cock.\" \n\nLaura wasn't exactly being dominant. But she wanted to watch us fuck, and she wasn't taking no for an answer. I stood up, and stepped out of my shorts, then pulled my shirt off over my head. I was extremely hard, and had been for a while. My usual flow of pre-cum was in plain sight. In my dreams, I wished Laura would just lean over a bit and suck. \n\nLaura slid across to the middle of the couch next to where I was standing. She pointed at the floor in front of her, and said to me, \"Turn this way\" to me, then she looked at Dina, pointed at the floor in front of me, and said \"Come suck his dick right here,\" then back to me, \"Remember. No cumming. Well, no cumming yet. I'll tell you when you can cum.\" \n\n\"OK. But I'm having trouble getting hard,\" I joked, glancing down, with a little pride about how hard I was. \"Can I see your boobs? It might help me get hard.\" \n\n\"Nice try, and dream on. Right now, what the hell's taking you so long Dina? Come suck this dick.\" \n\nDina got up, and smiling shyly, walked over and kneeled in front of me. She leaned forward, made an O out of her lips, leaned forward, and pulled my dick into her mouth. Laura leaned in also, so she was watching my cock going into Dina's mouth from less than a foot away. \n\n\"Harder. Deeper. Suck him harder,\" Laura said. Dina sucked harder. She wasn't quite able to deep throat, but my cock was still far inside her mouth. It felt so good. \n\n\"Fondle his balls while you suck. And jack the base of his cock off with your other hand.\" \n\nDina gently reached up, and her long soft fingers caressed my balls, giving me goosebumps all over. And with her left hand, the other side of my cock from Laura, she grabbed the base of my cock and pumped. \n\n\"Yes, just like that. And Jack. Remember, if you cum now, you will be neutered!\" Laura joked. \n\nDina sucked me deeply, making a spectacle out of going far down, then sliding her lips all the way back exposing all but the tip of my cock, to give Laura a good show. My cock glistened from the moisture of her mouth. \n\n\"How does he taste?\" It was a rhetorical question; it didn't seem like she was asking for a taste. I wished she had been asking. \n\nDina pulled away for a second to answer. \"At first, like my pussy from fucking earlier. Now, he just tastes like man. Hot man.\" \n\n\"Suck a little longer.\" Dina sucked for another minute or two, Laura cradling her chin in her palms from just a few inches away now. \"Now. Fuck her,\" she said to me. \n\nDina gave my cock a few last good sucks, then stood up. Then with a mischievous giggle, instead of turning around right away, she caught Laura off guard, and with one hand pulled Laura by the neck to her, and the other hand she held the side of her Laura's head, tilted it, and deeply kissed Laura. And I heard the soft sounds of spittle. \"THAT, is what he tastes like.\" then she laughed some more, and turned around, sticking her ass out to me to be fucked. \n\n\"Bitch!\" Laura said, but then she closed her lips together, and I could see her swallowing the bit of pre-cum that Dina had passed into her mouth. \"Fuck the hell out of her. She deserves a good fucking. Remember though, you're still not to cum. That cum goes down HER throat! And when the time comes, you're to fuck her mouth. Then fill it with cum. And you...\" she looked at Dina, \"...will swallow. Got that?\" \n\nDina's ass was still sticking out. I held her by the hips, and slid my cock right into her. \n\n\"Good, good, just like that,\" Dina said, and leaned forward, sitting on the edge of the couch. Fuck that pussy.\" I thrusted myself in and out for a delightfully long time, and the sounds of my body colliding with Dina's, the wet sounds of my cock in and out of her pussy, and even the smell, was perfect. And Laura was close enough, I knew she could smell our sex too. \n\n\"Ok, lick her pussy and make her orgasm,\" Laura said to me. \"And yes, your pre-cum is in her pussy, and you're licking it anyway. Roll her over.\" \n\nDina moved to the couch, laid back a bit, and spread her legs wide. I crouched in front of her and softly tugged her clit in between my lips. One thing I learned over the years, focus on the clit. And if after a minute or two you don't detect any legs trembling or increased breathing, stay on the clit, but try a different approach to licking or sucking, but never fully disengage to interrupt the flow. I transitioned to licking from the base to the tip of her clit. She liked it, but it didn't seem to be leading to an orgasm. Then, I started bobbing my head up and down, sucking on her clit as if it were a dick and cupping my palms under her ass. Jackpot! I could tell by the subtle shift in her body, this was the spot. \n\nAnd it was a jackpot for me too, because I certainly was also enjoying this experience. And, it wasn't instantaneous, so I got to enjoy it for a wonderfully extended time. Five minutes. Ten. Fifteen. At times like this, there are moments when your neck cramps, an itch on your neck begins, or a bead of sweat burns your eyeballs. This is where it takes concentration not to lose focus. Even as Dina's body started slipping due to my sweat, I managed to keep myself in place. \n\nBut patience pays off, and at about the twenty-minute point, I felt the trembling hips begin. I peeked up to see her chest and neck getting flushed. I felt some squirms. All I had to do, was keep this up until she had her orgasm. I never wanted this to end, but at the same time, I wanted to feel that thrill of knowing a girl had an orgasm, and I was at least partly responsible for it. And as it reached a crescendo, Dina pushed my forehead away with her fingertips, and doing it the way only she knew how, she very rapidly rubbed her middle finger up and down, and barely in and out of her pussy for about twenty seconds. Then, she tensed up, curled her toes, and squirmed and writhed as her sparkling orgasm took her over. \n\nI had been crouched, licking Dina's clit. Then transfixed, witnessing the orgasm. As Dina's orgasm subsided, I looked over at Laura for the first time since the licking began. And to my delight, her wrist was curled, bundling up the yellow sundress of my dreams, and although I couldn't see it, I saw the motions of her wrist. Laura was masturbating. \n\nShe waited, patiently, as Dina finally opened her eyes and looked at Laura and smiled. Laura smiled back. \"You had one.\" Dina's smile turned into a massive grin, and she nodded. \"That was amazing. Beautiful. Nice job, Jackie boy. Now fuck her hard again, until you have to cum, then you know what I want, I want to see you cum down her throat.\" \n\nI straightened myself up, but still on my knees, and entered Dina. I was so aroused, so amazed to be in such a position, I wasn't going to be able to stop myself. Dina reached up and put her arms around my neck, and raised up for ironically, our first kiss. I was here, fucking her for the second time, and it was just now that we kissed. Her tongue entered my mouth, and it was a hungry, passionate kiss. Then she kissed my cheek, and my ear, and whispered in my ear, \"Play it cool with Laura for now, I'll take care of you.\" I nodded, not quite sure what she meant. My imagination was going wild at everything that was happening tonight. Something was there between Laura and I. \n\n\"Just like that. Fuck her nice and deep,\" I heard from over my shoulder. Laura rested her palm on my shoulder to lean over me and watch my cock gliding in and out of Dina. \n\nThat turned me on even more. The tempo increased. And when the point of no return hit, I had to struggle not to cum as I stood up. Dina sat up toward the front of the couch ready for my cum. I took her head in my outstretched fingers, grasping by the crown of her head, and guiding her forward and putting my incredibly hard cock into her mouth. She made a muffled exhale as my cock went in, but in a second, she was welcoming my cock and expertly sucking it. ",
        "\"Cum in her mouth,\" Laura said. She was a split second too late though, because I had already lost all control as my cock throbbed and came right into Dina's mouth. Then again. And again. I felt Dina's mouth and jaw adjusting, her tongue repositioning itself, to properly collect my cum in her mouth. \n\nDina pulled on my cock a couple more times, then eased her lips off of my cock and pulled her head back. She opened her mouth with my cum in it and faced Laura, showing her. \n\n\"Mmm, nice. Now swallow that cum. And clean up the little bit spilling out of your mouth and swallow that too.\" \n\nDina made a delectable spectacle out of swallowing my cum. And instead of just one swipe of her finger to collect the bit of cum that had overflowed out of the side of her mouth, she made about five back and forths, swiping her fingertip to collect the cum, then popping the fingertip into her mouth. \n\n\"Mmm, that's so hot,\" Laura said. I stood there awestruck, watching Dina and Laura gaze into one another's eyes, standing just inches away from Dina, still as hard as a rock. \n\nI got even harder, as Dina smiled mischievously at Laura, and said, \"Want some?\" My every male fantasy coming true, I was thinking to myself. Except for damn reality, as Laura declined. \n\n\"I want my pussy licked. By you,\" Laura said back to Dina. \"I'm tired of the couch though, let's go to bed. You can watch,\" she continued, talking to me as if I were now just a distraction. She took Dina by the hand and made a beeline for my bedroom. I followed, as Laura went in, pulled the sheets down, laid in the same spot Dina had been in, and parted her legs. She was as smooth as Dina was, and in a moment, Dina was licking Laura's pussy softly and intimately, in ways I never could have imagined. \n\nIt was beautiful. Laura had left the lights off, so I wasn't getting the porno-movie version of beautiful women having sex, but I could tell I was getting to witness the real version of beautiful women having sex. After about ten minutes, Laura clutched Dina's head in her palms and froze. Dina kept still, and Laura had an intense orgasm. \n\n\"Come hold me,\" Laura whispered to Dina. \"Good night, Jack.\" \n\nI couldn't complain, having just seen such a beautiful sight. My daydreams of Laura, I wasn't sure where they were leading. She said 'good night' in such a non-negotiable way, I knew I needed to comply. \"Good night. Let me know if you need anything.\" \n\nI left, still naked, and of course still hard. I had been hoping for time with Laura, but I also had to admit it had been a long night, and I was tired too. I decided to sleep on the couch instead of the guest room. I got a blanket, and between the late hour and the physical exertion I had been through, I fell asleep with a smile on my face. And the smell of Dina on my face. And in spite of not getting to be with Laura, I had a good feeling about where things were headed. I had never felt such electricity with anyone. \n\n:::::::: \n\n\"Jack,\" I heard a whisper. It was still dark, and it was Dina shaking my shoulder to wake me. \"Wake up. Listen carefully.\" \n\nThe light in the kitchen was on off in the distance, so I could tell Dina was crouched in front of the couch, and still naked. I woke instantly. When a beautiful naked woman says 'wake up', I can assure you, I will wake up. \n\n\"It's about 5:30. Laura's still sleeping. Here's what you're going to do. Wait about five minutes after I go back into bed, then come into the room quietly, pull the covers down, and start licking my pussy. Make me cum again like you did earlier. Even if we're quiet, I know Laura will wake up and listen.\" \n\nI nodded, and Dina continued. \"After I have my orgasm, keep going. But pay attention. If I pat you once on the head, it means crawl over and pull Laura's legs apart and start licking her pussy too. If I pat you twice on the head, it means crawl on top of her and start making love to her. But if I tug on your ear, it means it's not working, so you'll have to go.\" I nodded again. \n\n\"She likes some things rough, but when it comes to her pussy, you have to lick very gently, ok? Like this,\" Dina said, and in yet another unforgettable moment, she leaned closer, held my head, and started licking the tip of my nose as if it were a clitoris. \"Lick softly, just barely in an up and down motion like this. Keep your tongue soft and don't flick. Like this, understand?\" The tip of Dina's tongue for this lesson was very gently sliding against my nose. \"Eventually, you'll start to feel her thighs trembling a little. Wait for that to happen. When it does, slide your tongue down to the bottom of her clit. Lick from the base all the way to the tip, but also clamp your lips around her clit and suck too. Bob your head up and down, like this,\" and Dina again showed me by example exactly what to do. \n\n\"That will make her have her orgasm. That's what you saw me doing earlier. Make sure she orgasms, then you climb up, and you fuck her. You can fuck her hard and deep, she likes fucking hard. It's only when you lick her pussy you have to be super gentle, got that?\" \n\nI nodded again. \n\n\"Oh, one more thing. She might be on her side masturbating and watching us instead of being on her back when I tap you on the head one time. If that happens, you get behind her and lick her ass instead. I'm sure you won't mind?\" she chuckled. If that happens, she'll have the orgasm on her own. Wait for the orgasm, then push her onto her stomach and enter her from behind. Her pussy I mean, just do it from behind. If that happens, reach around and pinch her nipples while you fuck.\" \n\n\"Got it,\" I said. I was so hard. \n\n\"OK. Five minutes. Don't shower though, she'll like how you still smell like sex from fucking me earlier.\" And a pause. \"Oh, for practice, lick me the way I told you to lick Laura. If I stroke your hair from the top of your head backward, it means go softer. If I stroke from the back of your head forward, it means go a little harder. And if I grab your head and move it, remember that position when you start licking her.\" \n\n\"Yes, ma'am,\" I said. \n\n:::::::: \n\nI followed my instructions. I waited five minutes, then very quietly opened the bedroom door and left it barely ajar, which let just enough light from the kitchen off in the distance that I could more or less see. I walked to Dina's side of the bed, and quietly tugged the covers down. I climbed into the bed between Dina's legs, and yet again got to lick her pussy. She had to take the middle finger of her left hand out of her pussy as I got to her, and she was delectably wet right from the get-go. I followed my lessons carefully, and I seemed to be doing a good job. Well, after getting too eager a couple of times and Dina correcting me with a stroke of my hair, I was doing a good job. It wasn't long before Dina was starting to show signs of an impending orgasm, and I noticed a rustling sound off to my right, which meant Laura was awake and either listening, or watching, or both. \n\nI was so proud of myself, as Dina's orgasm began. I had followed all her instructions, and I relished the time between her legs and knowing I had made a beautiful woman cum. I continued licking, returning to the beginning or more practice, hoping and praying for a tap on the head. I obviously wanted to have sex with Laura, which would have been two taps on the head, but one tap would mean I'd get to lick Laura to orgasm first, then have sex afterwards as well. I wanted just one tap. \n\nI heard more rustling of sheets off to my side, and just as that happened, I felt the tap on my head. It was more like a whack, but I suppose Dina wanted to make sure I felt it. I raised my head and looked over. Until then, I hadn't really thought about what I wanted more, Laura's ass or her pussy, but she was on her side. That meant ass, and I was absolutely thrilled as I had to clamber over Dina's leg then over Laura's two legs to get behind her. With my left hand, I gently pulled her left ass cheek open, momentarily sensed her erotic scents, and planted my first soft kiss right between Laura's cheeks. She wiggled a little into me, and I pulled her cheek further out, and the tip of my tongue made its first contact with Laura's back door. I could make out that her arm was reaching in front of her, and I could feel the little motions that told me she had her lower hand thrusting its middle finger into her pussy, and her other hand was circling her clit. I had this sensation of belonging, that this was Laura, and it was the natural order of things that my nose would be between her firm ass cheeks and the tip of my tongue would be softly licking her asshole. \n\nWith Laura being in charge of her own clit, it didn't take long for her orgasm to build. Although I wasn't in front of her, everything Dina had told me to expect was happening. I felt Laura's thighs beginning to tremble. Then Laura raised her left thigh up, and the fingering took on a new intensity. Her ass cheeks pressed together as she parted her legs, but she pushed her ass back into me, telling me it was OK, that I just needed to push my tongue back in. And I could feel that she was fingering herself with a new vigor, and within just moments, Laura was having her orgasm. \n\nI was in a daze, watching in awe at the sight before me, wishing the lights were on. But thankfully, I had assistance, as I felt two firm taps on my head. My heart warmed at the amazing situation I was in, and swelled with its own version of love for Dina, sweet Dina, helping me satisfy Laura. \n\nLaura's orgasm was barely over, but when Dina tapped me on the head twice for the second time, I knew to listen. I pushed Laura onto her stomach and inched over to being on top of her from behind. I had to shift and wiggle a bit, and Laura gracefully also repositioned, parted her thighs a bit, and stuck her ass up in the air, making it possible for me to glide my cock into her pussy for the first time. \n\nI felt a nervous anticipation that I had never felt before as I entered her. There was the obvious pleasure of sex, the gratitude for being so lucky, but it felt like we just fit together so perfectly. Our bodies moved together. We were always in tune with one another. And yet again, there was that sense of belonging. I had never felt that way in my life. Don't get me wrong, all pussies feel good, but as I entered Laura, I knew instantly that this changed everything. This wasn't just my dick in a pretty girl's pussy. This was something more, much more, happening. At least from my perspective. I hoped Laura felt the same way. \n\nSoon, it made sense for us to reposition a bit. Laura raised up to be on her hands and knees, with me on my own knees, fucking her from behind. She then lowered her head and shoulders down to the pillow, and I could tell she was reaching back with her fingers to rub her clit. As the sensations and sights and sounds and smells built, I could tell I wouldn't be able to contain myself much longer. \"I'm going to cum,\" I said, offering my standard warning, where I was giving whoever I was fucking the chance to pull away, to tell me to cum on her back, or hopefully, to say exactly what Laura said, which was to cum in her. I couldn't stop myself, as I gushed deep inside Laura for the first time. I kept fucking though, this time through the slippery heat of all that cum in her pussy, my cock now sliding so easily and differently in and out of her. \n\n\"Don't stop,\" Laura whispered. I didn't stop, and I couldn't imagine this moment being any more perfect. Until I felt a gentle fingertip from behind me. Dina's fingertip. She reached between my legs and Laura and collected some of the cum flowing out of Laura, and took her cum-lubricated finger and gently slipped it into my ass, as I continued sliding my cock in and out of Laura. It was magnificent. \n\nLaura was the one to break the magical moment, as she pulled forward and off my cock and twirled onto her back. \"Lick me clean,\" she said to Dina. And Dina squirmed past me, between Laura's legs, and licked her clean. \n\n:::::::: \n\nAs we cooled off, I found myself in the middle of the bed, one arm around Laura, and one around Dina. Dina turned the lamp on. Her glass of water was still full from earlier, and the three of us each took a nice sip. \n\n\"Ok, I have to ask. How come you didn't pressure us to make out at first? I was a little surprised. You are a boy, after all,\" Laura asked. \n\n\"Well, funny you should ask. I am a boy of course, so that's what I dream of the most. But I figured you two have been friends for years, and if you wanted that, you wouldn't be going out at night, talking about men, that sort of thing. Plus, I know how to be patient. I thought that maybe if I was patient, maybe something would happen anyway. And it did!\" I said excitedly and happily. \n\nThings evolved into a glorious moment of pillow talk, chatting, cooling off, and chatting some more with two beautiful naked women, both of whom I had had sex with. We talked about everything. Laura was the oldest of three sisters. She was divorced. She and Dina sometimes masturbated together when they were in the car together. Dina and she had had a few threesomes with Laura's ex, but he (like I had daydreamed of) tended to focus on having them make out. \n\n\"OK. New game. Each of us share a weird fantasy,\" Laura said. They both looked at me, as if it was obvious that I would go first. \n\n\"Well, I hinted at it earlier. I'm in touch with my animalistic urges. So, I'll just warn you, it won't be just your asses, it's just a matter of time before you catch me sniffing your underarms and smelling your feet and sucking your toes too.\" \n\n\"And by the way, I do know the rules. There will never be a time where I go from the back first, to the front. I don't just know where babies come from. I know where yeast infections come from too.\" They again were intrigued and impressed, impressed that I knew something that so few men seemed to know. \n\n\"You're going to have to tell us how you know that, Jackie boy.\" Apparently, Laura had assigned me a nickname. \n\n\"I had a weekend long fling with an older woman, back when I was 22. Plus, it seems like men are in their thirties before life's lessons enlighten them. I'm 'experienced'\", I joked, making air-quotes as I said 'experienced'. \n\n\"OK, I have a weird one,\" Laura said. \n\n\"Please elucidate,\" I said, using big words. \n\n\"OK. There's this intern in the marketing department. I think you've seen her, the petite girl with the oversized glasses with the red frames?\" I nodded. I had met her one day during a massive rainstorm after work, where she was standing inside, staring at the downpour, wondering how she would get to her car. I said hello, and had her take my umbrella, get to her car, then drive up near the door and toss it back to me. She seemed sincerely grateful, even surprised, that someone was being nice to her. I was surprised to hear she was such a difficult person. \n\n\"She's about 20, goes to Southern, rich as hell, drives a nicer car than me, and is all snooty and sits by herself and never talks to anybody. And she literally says 'no' when I ask her to send the sales data! No! It annoys the SHIT out of me.\" I hadn't heard Laura curse in a non-sexual context before. I liked it. \n\n\"Anyway... I've never really had this feeling before... but I have this fantasy about spanking her. Hard. Bare-bottomed. But it's not one of those sexy erotic spanks. It's a real spanking. Hard. I want to spank the fuck out of her, and make her cry, and make her beg me to stop and make her apologize for everything she's done. Or not done. And spank her so hard, she'll remember it forever.\" Laura laughed a little nervously, a bit embarrassed at her so specific fantasy. \n\n\"Then last week, she came to work all sunburned. And all I could think of was whether she had a tan line so that her bottom would be paler than the rest of her. It made me think how it would be even hotter to spank her if she had a distinct tan line and her ass was paler than the rest of her. And funny you're such an ass-man, Jack, because when the spanking is over, then I sit on her face and make her lick my pussy, her nose right in my ass. Then I ride her face until I have an orgasm, then I move my ass to her mouth, and I make her lick me there too.\" Another pause, as Laura looked at us sheepishly at the nature of her revelation. I silently gave her a thumbs-up gesture to put her at ease. \"And look at me, wet just from talking about it. Look!\" And in another magnificent moment that I would remember forever, Laura parted her legs and showed us her pussy, and slid her finger in, then pulled it right out, to show her finger glistening in the lamplight. \"My pussy gets wet from wanting to spank that little bitch,\" Laura said. \"It's weird, isn't it? I'm so nice normally,\" she chuckled. \"Oh, and this is for you, Jackie boy,\" she said, and popped that same finger into her mouth and sucked it. Yet again, Laura was demonstrating that she was indeed the perfect girl. \n\nI was thrilled with the sexy finger suck, as I laughed with Laura at her story. But Dina's response was a little hard to figure out. She was looking away, avoiding eye contact, and not saying anything. \n\n\"What are you thinking, Dina? I know, too mean, right?\" Laura asked. \n\n\"No, no. I'm trying to compete here, trying to think of something as good.\" Then after a pause, \"Oh, I have one. I've wanted to fuck my hot ex-brother-in-law for years! I think about him when I finger myself. So, one day, I just showed him my naked pussy and had him laser off my pubes.\" \n\nLaura looked at me, with a sideways smile and a wrinkled brow. \"No recycles. Tell us a new one.\" \n\n\"Bitch!\" Dina joked. \"But Jack's was a bit of a recycle too. Make him do another one first.\" \n\n\"I guess you're right. OK, Jack, tell us another one,\" Laura said. \n\nI pretended to be unhappy with the new rules. But still, I had known Dina her entire life. I knew something was in the back of her mind. I tried to give her some time to collect her thoughts. \n\n\"OK. I have one, but no judging me! And no telling me it's weird and thinking less of me.\" \n\n\"Spit it out, dammit!\" Laura scolded, with her amazing smile and humor. \n\nI sighed with a sigh of conceding defeat. \"Ok. No spitting here either, but here goes.\" Then I didn't say anything. As I thought about it more, I was having second thoughts about sharing. What I was thinking, I knew, was a little weird. \n\n\"And yet, you haven't said anything,\" Laura pointed out after my delay tactic failed. I tried to think up something new and tamer to share. But nothing sounded right. \n\nThen I thought of the hot secrets the girls had shared. About the two of them telling me about their adventures. About being naked in bed with these two beauties. \"Here it is. I like sucking my cum out of pussies that I just fucked, then kissing the girl and passing my cum into her mouth in a hot slippery kiss. Then we pass it back and forth, what they call snowballing. But eventually, I want my cum in her stomach.\" \n\n\"O-kayyy,\" Laura said with dramatic flair, but I knew she was joking. \"I've taken the evidence under advisement, and I have my judgment ready. That's pretty weird. And I now think less of you,\" she said, clearly joking. \"But that's fucking hot.\" I was relieved. And even more turned on as she cursed more. \n\n\"What if instead of swallowing it, she kissed ME, passed it into my mouth, and I swallowed?\" Dina asked. \n\n\"That's even hotter. Ok, that's on our 'fuckit' list,\" Laura said. \n\nThere was a pause. \"Dina?\" Laura was running the show. \n\n\"Fine. First, look at MY pussy,\" she said, parting her legs just as Laura had. She slid her middle finger in, then pulled it out and held it up in the light to show us her wetness. \n\n\"This is one I've never told anyone in my life. Not even you,\" she said, looking at Laura. \"And I've never done it either. But when you talked about spanking your intern hard, I got wet right away. I want a hard spanking. From a woman. From an authority figure woman. And I want it to be a real spanking. Not playing around. I want to be spanked. Hard.\" ",
        "Laura and I looked at one another and nodded in appreciation. \"That was a good one. Thank you for sharing,\" Laura said. \n\n\"Yes. And unlike SOME people,\" I said, glaring at Laura, \"I'm not judging, I don't think it's weird at all, and I think MORE of you for sharing.\" They both laughed at my joke. \n\n\"And another thing!\" Dina started talking in a fake high-pitched voice. \"I'm an auditing intern, not a Billing intern. I don't like Accounts Receivable, and it's like, so NOT in my job description.\" She was embellishing her pretend voice by also trying to sound young. \"Also, the air in the office keeps me from getting my work done. I filed a complaint with OSHA, and a company is coming Monday to sanitize all the ductwork in the whole building. I know it will disrupt everybody and cost the company tens of thousands of dollars. And I... Don't. Care!\" \n\nThe funny thing, although I knew to keep my mouth shut, was that Dina, during her earlier rebellious phase had been a difficult person herself, not much different to Laura's arch-enemy intern. It was amazing how she had transformed herself into such a capable adult. Maybe she had secretly wanted a little more direction when she was younger. \n\nDina continued. \"And finally, I need to leave work early next Friday. And I'll be late coming in on Monday too. My mom and I are going to New York City for a shopping trip. The stores down here suck. You think I'm going to wear a suit from one of the crappy stores here? I mean, it's fine for you and what you wear, but there's no way I'm wearing any of that crap.\" \n\nLaura got up, also role-playing, and stared at Dina. \"Joanna, I'm so sick and tired of your attitude.\" Clearly, the intern's name was Joanna. \"It's time you learned some manners. Stand up. \n\n\"I am NOT standing up,\" Dina continued her part of the role play. \n\n\"Yes you are, missy,\" Laura said, and held Dina by the forearm and pulled her to her feet, then leaned Dina over the side of the bed. Laura stood partly behind Dina and off to one side, and coiled her arm back for leverage. \n\nSLAP!!! \n\nThe noise of Laura's palm spanking Dina's ass made me jump. It was hard. Real. Harder than I ever would have spanked someone in a million years. It caused Dina to grunt and press her torso against the bed in response. \n\nThen another very loud and very hard spank. But Laura wasn't done. Not even close. \n\n\"You.\" And Laura spanked her just as hard again. \n\n\"Are.\" Another spank, this one aimed at the left cheek of Dina's ass. The spankings had to be stinging Laura's hand too. I still couldn't believe how hard Laura was spanking Dina \n\n\"NEVER!\" Whap, whap, whap, whap, whap, Five extremely hard spanks in a row. To be fair, only the first one was as hard as the earlier two, because spanking as fast as the five spanks occurred, Laura couldn't pull her arm back as far. Dina gave out a loud \"Ahhh\" in shock. \n\n\"To.\" This spank was as hard as the first two. Even harder. It was loud. It was hard. Laura's face was flushed, and the physical exertion was leading her to glisten with a layer of sweat. Beautiful, sexy sweat. \n\n\"Speak.\" Another hard spank. I saw Dina tensing up, trying to firm up her glutes to see if it eased the pain. \n\n\"To.\" Spank. \n\n\"Me.\" Spank. \n\n\"Like.\" Spank. \n\n\"That.\" Spank \n\n\"AGAIN!!\" Laura shouted. One. Two. Three. Four. Five. Six. Seven. Eight. Nine. Ten. Ten incredibly hard spanks. Tears were in Dina's eyes, but her nipples were hard. \n\n\"Do,\" spank. \"You,\" spank. \"UNDERSTAND?\" three spanks, with the last one as incredibly hard as the first. \n\nDina nodded. Laura crouched down a bit, and with her other hand, reached up and slid two fingers right into Dina's pussy. \n\n\"Now get down on your knees. Suck Jack's cock. Take his cock all the way to the back of your throat. NOW.\" Laura ordered. I realized I was very hard. I stood up. \"Crawl to him, and suck him. Deep.\" \n\nDina walked to me on her knees and took my cock in her mouth. She did take it deep in. It felt good., to say the least. \n\n\"I. Said. Deep!\" Laura yelled. And from behind Dina, she pushed Dina's further onto my cock. It took Dina off guard, and it took me a moment to make sure my cock hadn't been accidentally bitten. Dina was gagging a bit, but sure enough, the tip of my cock was in the back of her throat. \n\n\"Now, lie down on the ground,\" Laura said to Dina. I wanted to be sucked longer, but I had a feeling I knew what was coming, which made me even harder. \n\nDina lay on her back on the floor. \"Now stick your tongue right into in my ass, you little bitch,\" and in two seconds flat, Laura had squatted, her asshole right on top of Dina's face. \"And if you don't do it right, you're getting spanked even harder. Understand?\" \n\nDina nodded. Her hard nipples made it clear she was enjoying all this. And her middle finger in her pussy. \n\nLaura closed her eyes, and suddenly her whole demeanor changed. I could see from my position, that she was rocking as she sat on Dina's face. And that Dina had her tongue in Laura's ass. \"Good girl, just like that.\" Laura rocked a bit, then propped herself up with just one hand, so she could pinch Dina's left nipple with her other. other. \"That's right, you tongue fuck my ass, redeem yourself with that same tongue that said 'no' to the sales spreadsheet.\" Laura rocked up and down, Dina's tongue in her ass. \n\n\"And you are going to come to my office every day, and you are going to lick my pussy then my ass then my feet. Do you understand? You will come in, not say one word, lie on the floor, and you will lick whatever part of my body I put near your mouth. Understand?\" \n\nDina couldn't speak. In fact, as sexy as this scene was, I was worried she couldn't breathe. Laura sensed that too and raised herself up to let Dina speak. \n\n\"Did you answer me? I didn't hear you answer me!\" Laura said sternly. \n\n\"I couldn't talk. My tongue was in your ass,\" Dina said, and started laughing at how funny that sounded. I had to admit, that was a sentence I never thought I would hear in my life. Especially coming from one beautiful woman to another. \n\nLaura was laughing too, but quickly returned to the role play. \"You mean yes, is that correct? Say 'Yes'. Say 'Yes miss Laura'.\" \n\n\"Yes, miss Laura.\" \n\n\"And, whenever we are alone, you are to call me Miss Laura. And I'm not done with you. Jack is now going to fuck you from behind and cum inside your pussy. Bend over.\" \n\nDina did as she was told. She leaned forward and rested her elbows on the sofa cushion. I was behind her, and as I slid my cock into Dina, Laura gathered Dina's hair in her hands and pulled. \n\n\"If you behave, maybe I won't spank you as hard next time. Or for as long. But you will be licking my ass every day. And getting fucked by Mister Jack here. Do you understand?\" \n\n\"Yes, Miss Laura.\" \n\n\"Now Jack is going to cum in your pussy. Is that right Jack? \n\nI was. This was such an amazing and sexy moment, that even though I had already cum twice, if I counted fucking Dina earlier that evening. I nodded and upped the tempo. In this set of circumstances, my job was to cum, not to worry about lasting long. As the sensation took over, I let everything go and released blasts of hot cum, right into Dina's pussy. \n\nLaura was fingering her pussy while all this was going on. And about to have an orgasm. \n\nIn a stem mock voice, I said. \"Dina. I'm extremely disappointed with your behavior. I hope these lessons have had an impact.\" \n\nDina nodded. \n\nExcept even as I spoke, I dropped to my knees behind Dina, my nose right up to her sexy little back door that I had so lustfully been daydreaming about. But what I was really doing, was sucking my cum out of her pussy. Dina, bless her sexy heart and ass, flexed some muscle inside her that she knew how to flex, and pushed more cum out of herself, and with my mouth right there, I got it all. \n\nI took Dina by her forearm and turned her to me. I had to lower myself a bit due to the height difference, but I moved my head to hers and kissed her deeply, and as our opened mouths met, I expelled all the cum that was in my mouth into hers. \n\n\"Swallow half of it,\" I said. I saw her throat move as she swallowed. \n\n\"Now, kiss Miss Laura. Pass my cum into her mouth.\" \n\nLaura by now had eagerly moved to Dina, and the two of them kissed passionately, but a bit carefully, since there was half a mouthful of cum to be transferred. \n\n\"And now, Miss Laura is going to swallow my cum too.\" Laura swallowed. \n\n\"We feel bad, having to discipline you like this. But you did deserve it. I'm glad we had this little chat,\" I said. \n\n\"Yes, you did,\" Laura continued. \n\nDina nodded. Then smiled. Then Laura smiled. And suddenly, we were all laughing. \n\n\"Oh my god, Dina, I'm so sorry. I didn't mean to spank that hard. Are you OK? \n\n\"I loved it. It hurts like hell. But I loved it. \n\n\"Jack, kiss her ass better.\" Laura was back in charge again. But I was happy to drop to my knees again, and bury my nose between Dina's cheeks, this time, finally, getting to lick the little ass that I had spent so much time admiring. \n\nFrom the humming and soft wet noises, I could tell Dina and Laura were kissing. \"Suck my toes,\" I heard Laura softly whisper. Laura laid back on the bed, and I wished I could see. I shifted to be able to see, without being disruptive, or losing my position behind Dina either. I thought to myself how those toes needed to be in my mouth someday. \n\n:::::::: \n\nThe moment continued until mid-afternoon. It was an epic night and day unlike anything I had ever experienced. Sex. Naps. More sex. Food. Showers. More naps. More sex. With two beautiful women.\n\nOver the ensuing weeks, things were amazing. Laura and I were getting along fabulously. And although there were no more spanking episodes, the three of us had sex almost every day. I got to suck Laura's toes. And Dina's. And to smell their underarms. In the strangest twist of fate, I found myself in the most amazing problem a boy could ever have, wanting fewer threesomes so that I could have alone time with Laura. \n\nEPILOGUE \n\nIt was just a couple more weeks later at the Halloween party, the one that Laura had been arranging for her division. I was invited, although I had to keep a low profile. Laura and I had decided to keep our budding romance a secret for the time being. \n\nThe event was out in a cornfield, which was why we had been looking for the generator earlier. I begrudgingly acknowledged the rental generator that was running off to the side of the tent. To be fair, it was nicer and more powerful and a lot quieter than the one I wanted to buy, so the party was probably better off with this one. \n\nSeveral of the interns were at the party, including Joanna. She looked good as always, a little overdressed for a Halloween party in a cornfield, wearing an expensive looking skirt and blouse, and shoes that showed off her petite toes. As expected, though, as a pretty girl, she was surrounded by male admirers. Two of the male interns, a couple of younger employees, and of course, Jim from the IT reporting team. Jim with his white hair, his shiny bald head, and his stupid beard, who followed pretty girls around wherever they went. He was harmless enough, other than being such an embarrassment. \n\nInterestingly though, Joanna ended up talking to me more than I expected. It began with me asking her innocuously how the internship had been going for her, which resulted in a massive outburst of emotion. Her immediate supervisor was 'Slippery Sam', an infamously difficult person to work with, particularly known for withholding and hiding data. And unfortunately for Joanna, she had done a good job following instructions, leading to guilt-by-association from working with Sam. \n\n\"God, everyone hated me, starting on my very first day. You loaning me your umbrella that day was probably the nicest thing anyone did for me all summer!\" \n\n\"Oh gosh, I'm so sorry. It was mean of him to put you in that position.\" \n\n\"I know. My nerves were so frazzled every day. I was turned into an outcast. But even Sam treated me like crap. I became the most hated person for following his directives, and he didn't even recommend me for a permanent job.\" Joanna to her credit, didn't cry, but her lip was quivering and her voice was cracking. \n\nIt made perfect sense now. Laura and Slippery Sam hated one another, so on top of Sam's regular information hoarding, he may have gone to extra measures to keep the sales data from Laura too, putting Joanna the struggling intern in the middle of it all. \n\nLaura and I would intentionally time our drink refills at the same time in order to share a discreet hello. I told her about Joanna, and she seemed happy to hear it. \"Keep her talking, I want more dirt on Sam,\" she instructed. \n\nWith Laura's blessing, I returned to talking to Joanna, bringing her a drink and a slice of cheesecake. The conversation got a little cheerier after that. In fact, cheery, with a dash of surprise, because she was talking to me very intently, laughing at all my jokes, even occasionally resting her hand on my forearm as she laughed at my jokes. A couple times when she had to shout in my ear over the background noise, her lips made contact with my ear. \n\nJoanna went off to the bathroom, and I had a moment to text Laura. When she replied, the text said, \"Oh my god! It makes more sense now. Remember when I told you how the girls in accounting would check you out? It didn't dawn on me until now, but Joanna was always part of those conversations. Let's see what happens!\" The text included a winking smiley. Moments later, another text. \"I'm going over to your place to clean up a bit. If it works out, text me on the drive. I'll be hiding in the closet.\" I couldn't believe my eyes. \n\nJoanna came back somewhat excitedly, pulling me away and telling me to follow her. \"Let's go for a hayride. The schedule says they end in five minutes, we'll get the last ride.\" The walk from the folding chairs took me right past Laura, behind the stage, still running things. She winked at me, and I saw her reach for her phone. Not ten seconds later, my phone buzzed in my pocket. I had just a second to glance at it as we walked toward the hayride. \"Remember. Me. Closet. I'm leaving now.\" \n\nJoanna and I were the only two people in the back of the carriage. Once we were out of sight of everyone, she leaned over close to me and whispered in my ear. \"You're hot.\" \n\n\"You're beautiful,\" I said back. This was weird. Although she was very pretty, I wasn't after her. I had Dina. I had Laura. I had Dina and Laura. We had threesomes multiple times a week. I was more curious than interested in Joanna. But she was most definitely cute. And sunburned too. \n\n\"I took off my panties in the bathroom earlier. Wanna see?\" she said mischievously, looking at her purse. \n\n\"Sure,\" I said, nervously chuckling. \n\nI expected her to open her purse and show me her panties. Instead, she leaned away from me, parted her legs a little, and pulled up her skirt, showing me her pussy. Bald, of course, and she had a delectable tan line that Laura would just love. \n\nI nodded in appreciation, my mind spinning. She smiled. \"I'm bad, I know it. But did I mention that you're hot? Everybody knows it's OK to be bad if there's a hot older guy you want to show your pussy to.\" \n\n\"You are bad. But I like the way you think!\" \n\n\"I'm so so bad. You should spank me. Spank me and fuck me. I'm so bad,\" Joanna said. \"How about we get out of here and fuck?\" \n\n\"I like the way you think,\" I smiled back. \"You OK to drive?\" \n\n\"Not really. Tell you what, I'll wait out here, you go in and say your goodbyes. Tell everyone I left.\" \n\nOnce in my car, she leaned over and whispered in my ear, \"I need my pussy licked. I'm a bad bad girl.\" \n\nThe new dynamic, where Laura wanted this to happen, made it even more fun. \"Such language! I'm definitely going to have to spank you.\" \n\n\"Fuck. Damn. Shit!\" she joked. \"Now lend me your phone.\" I gave it to her. \"How do I get to the camera? I have a different phone.\" I reached over and tapped the icon for the camera. \"A Halloween present for you,\" she grinned, and started taking pictures of herself, including pulling her blouse open, parting her legs, and even managing to twirl around in the seat for pictures of her ass. \n\nWe got to my house. I realized I had forgotten to let Laura know we were coming, so I intentionally dropped the keys and took my time opening the door. I hoped Laura heard. Then I also delayed by kissing her passionately in the foyer, also to give Laura time to hide. \"Take off your clothes while I pour us some water. Jewelry too, I want you absolutely naked for your spanking.\" Right there in the kitchen, Joanna took everything off. I realized I liked how she looked in her glasses, so I had her put them back on. \"In there,\" I pointed to my room. I glanced at the jar with cooking utensils in it. I grabbed a wooden spoon. \n\nI looked at the cracked door of the closet. I couldn't be sure, but it seemed like Laura was in there. \n\n\"Lean over the bed. I'm going to need you to tell me all the bad things you do, as I decide what to do with you,\" I said. \n\n\"I like sucking hot men's dicks who are older than me.\" \n\n\"Is that so?\" \n\n\"Yes.\" \n\n\"What else?\" \n\n\"I own four different butt plugs. I even wear them to work sometimes.\" \n\n\"That's extremely naughty. You're going to need quite a spanking! Keep going, tell me everything,\" I said, but I had dropped to my knees behind her, and using my palms, I spread her ass cheeks apart. Her asshole was also very tiny. \n\n\"I had one in me when you and I were talking earlier. I took it out earlier, when I took off my panties for you,\" Joanna explained. \"It's in my purse in a little plastic case.\" \n\n\"Very bad. Very bad,\" I said, and gave her a light swat on her ass. \n\n\"Mmmmm,\" she responded, and stuck her ass out for more. \"I post pictures of my pussy online.\" \n\nAnother swat. \n\n\"I sometimes post videos too,\" she continued. \n\n\"Where?\" She told me. \"So very bad,\" I said, and swatted her with the wooden spoon. I knew I was probably a disappointment in the spanking arena. \n\n\"I wish you were married. The only thing better than sucking off hot older guys is sucking of hot older Married guys,\" she said. \n\n\"Oh, that's so bad,\" I said. \n\n\"I have daddy issues,\" she joked, changing the mood slightly. Then back to on-topic, \"Do you have a wedding ring somewhere? I like putting men's wedding rings in my pussy while I suck their married dicks. How's that for weird and bad?\" \n\n\"You are extremely bad,\" I said. I swatted her backside a few more times, harder, but still, it was plain to see that I just wasn't good at spanking role plays. If there's a beautiful ass like Joanna's in front of me, I'd much rather lick it than spank it. \n\n\"I eat pussy too,\" Joanna said. \"At least, I dream of eating pussy. I've never done it.\" \n\n\"Do you? That's very naughty,\" I said, spanking her again. \n\n\"So, so bad. I wish you had a girlfriend. Maybe you do, I guess I never asked. If you had a girlfriend, I know she'd be hot. She'd catch me sucking your dick, but decide to watch instead. She'd watch you fuck me; I'd watch you fuck her. You'd watch me fuck her,\" Joanna said as she stuck her ass out more, non-verbally pleading for more of a spanking. \n\n\"Is that so?\" I hoped Laura was in that closet. \n\n\"Women check you out. That lady who was running the party, Laura, kept looking at you. Or maybe she was glaring at me, but that would still mean she likes you. Do you know her?\" Joanna wasn't exactly suspicious, but I had realized early on, Joanna was extremely intelligent and observant. \n\n\"She was pretty. You two were the prettiest girls there,\" I said, not letting on that I knew Laura. That Laura might even be in the closet, three feet away. \n\n\"I think she hates me though. She was one of the people I wasn't allowed to give data to. She's hot though, I'd lick her clit while you fuck her pussy from behind. And maybe when she found out your wedding ring is in my pussy, she'd get mad and give me a real spanking.\" ",
        "\"Oh, so so bad,\" I said, giving her another half-hearted spank. \"Listen, I need a little help with this spanking. Stay right there,\" I said, standing up. I knew there was a bandana somewhere in the top drawer of my dresser. It took a second, but I found it. I folded it over a few times diagonally to make a blindfold, took Joanna's glasses off, and tied the bandana around Joanna's head to cover her eyes. \"Stay right there,\" I said, and I stealthily walked over to the bedroom closet. \n\nI made a \"shhh\" motion to Laura as I quietly opened the closet door wide enough for her to come out. I went to the nightstand. \"Let me get my old wedding ring,\" I said, addressing Joanna. I never thought my old wedding ring would come in handy again, especially for putting inside a girl's pussy. By now, Laura was standing behind Joanna. And she had been naked the whole time. She had dropped to a squatting position and was staring at Joanna's ass. \n\n\"Look what I found,\" I said to Joanna as I put the wedding ring in her hand. \n\n\"Oooh,\" she cooed. I was a little disappointed that I didn't get to do it, but watching her instantly reach down between her legs and slip my ring into her pussy was hot too. \"Spank my ass. Hard this time,\" she said. \n\nLaura stood and motioned me to come stand next to her. \"You do deserve a good spanking,\" I said, standing behind Laura so my voice would come from the right location. But it was Laura who smacked the hell out of Joanna's ass. Not as hard as the role-play earlier though. Laura must have softened after hearing the full story of why Joanna had been difficult. \n\n\"Oh god, yes, nice and hard. You must like my ring in your pussy, it's only now you're spanking my ass the right way.\" Joanna asked. \n\nWhappp! Joanna yelped, as Laura spanked her bottom again, a little harder. \"I do like my ring in your pussy,\" I said. I could see from the little movements of her elbow, that Joanna was fingering her pussy. \n\n\"Thank you sir, may I have another!\" Joanna exclaimed. I couldn't believe my ears, but I was impressed that Joanna even knew that reference from Animal House, a movie more than twice her age. \n\nWhappp! An even harder spank by Laura. The spanks were progressively harder, this was almost back to the 'I can't believe you're spanking so hard' level. \n\n\"Thank you sir, may I have another!\" Joanna started fingering even more noticeably. \n\nLaura was grinning ear to ear too. Whappp! I started to worry that it was too much for even Joanna. \n\n\"Thank you sir, may I have another!\" Joanna yelled it this time, but her ass was turning so red, I knew it had to hurt. \n\nWhappp! Another hard spank by Laura. I spoke again from behind Laura as if it were me spanking. \"I like your tan line. It makes me aim right for your little bikini bottom area.\" Whappp, Whappp, Whappp, Whappp, Whappp! Laura obviously liked that thought too, giving Joanna five hard spanks, each on alternating ass cheeks, left, right, left, right, left. \n\n\"Oh! Oh god,\" Joanna said, and I saw her ass muscles flex as she shifted onto her tiptoes and writhed around as her orgasm overcame her. Laura smiled, dipped her finger into her own pussy, and put it in my mouth. She did a \"shh\" gesture this time, then slinked back toward the closet quietly. \n\n\"Don't move,\" I said to Joanna again. I had a box of condoms in the second drawer of my bedside table. They were at least a year old. It had been an exceedingly long dry spell, until very recently. \n\n\"Now I'm going to fuck you. With my wedding ring up your pussy,\" I said. Part of me realized that wasn't the best idea, so instead, I slid my cock only a little way into her pussy. That seemed like a sensible compromise. \n\n\"Ohhh, god,\" Joanna said. I looked over my shoulder. Laura was standing, fingering herself, feeling safe to not close the door all the way while Joanna still had the bandana covering her eyes. \n\n\"Take it out and put it in your mouth, so I can fuck you harder,\" I said. \n\n\"Mm, good idea,\" Joanna said. I pulled out momentarily, as she reached in and took the ring out of her pussy, and onto her ring finger. \"I like sucking pussy juice off my fingers too. I'm so bad,\" she said, putting three of her fingers, including the one with the wedding ring on it, into her mouth. \n\nMy cock was back in her, and I held her by the hips and started fucking her. \"Rub your clit while I fuck you,\" I said. \n\nShe reached down, and I could feel her rubbing her clit, rapidly, as I fucked. \n\n\"When you cum, pull out your cock and turn me around. Cum on my face and smear it everywhere. I like that too. And I like cleaning up,\" Joanna said. I looked behind, and Joanna was grinning ear to ear, and gave me a thumbs up. \n\nI fucked Joanna deeper and harder, and could tell she was close to bringing herself to an orgasm too. I decided to hold out, to try to keep going until she orgasmed. Thankfully, it wasn't long, and I could feel her pussy pulsating and squeezing my cock with each spasm. I stopped thrusting for that, keeping perfectly still and relishing the moment. I also needed to stop to prevent myself from cumming right inside her tight pussy too. As soon as Joanna regained her senses, I pulled out, and with one hand took her by the shoulder to turn her around, and the other I pulled the condom off my cock. It slid off easily, but I was practically already starting to cum. I quickly grabbed my cock and pointed it to Joanna's cute face. \n\nJoanna yanked the bandana off her head, and looked up at me with both eyes wide open. \"All over my face. All over,\" she said in a raspy voice, looking at my cock then up to me. \n\n\"Close your eyes,\" I managed to gasp before letting go. I came and came, hot streams of cum. One blast fired right into her left eye socket; I was glad she had closed her eyes. The next hit her forehead. It's harder to aim spurts of cum than people realize. By the third one, I had reached down and pushed her chin down to open her mouth, and got almost all of that to gush right into her mouth, some also streaking across her cheek. Then I pulled out, and using my erect penis and my balls, I spread the cum on her cheek and forehead all over her face, even under her chin. That lasted several delightfully slippery seconds, before she said, \"Let me lick you clean.\" \n\nShe methodically licked my balls, my inner thighs, my cock, my pubic hairs, and cleaned me up thoroughly. \"Thank you,\" she whispered. \"I definitely want another,\" she smiled up at me, still kneeling in front of me. I smiled back. \n\nSomething puzzling dawned on me though. The last time I saw Laura, she hadn't gone all the way back into the closet. And Joanna had yanked the bandana from around her eyes for me to cum on her face. Wouldn't she have seen Laura? Even without her glasses, she seemed OK at seeing intermediate distances. \n\nI got my answer, as a huge smile took over Joanna's face. \"That was you spanking me, wasn't it, Laura? Can you please teach him how to spank?\" I turned to see Laura nodding and smiling. \"And thank you ma'am, may I please lick your pussy?\" \n\n\"Of course, you can, Joanna,\" I heard Laura say. \"And come on out, Dina. Joanna, this is Dina. You'll be licking her pussy too, while he fucks you again. And while I spank your hot little ass some more and give him some lessons. He may not spank very well, but I love watching him fuck pretty girls,\" Laura motioned to me as she spoke. \n\n\"Nice to meet you, Joanna. Now close your eyes while I lick his cum off of your face,\" Dina said with a grin, yet again having to laugh at having to say such an odd-sounding sentence. \"And can I try your butt plug?\" \n\n\"That's so hot,\" Joanna answered excitedly. She darted out of the bedroom and came back holding the butt plug by its base in one hand, and a small tube of K-Y Jelly in the other. \"You'll love it,\" she smiled. \n\nOne thing I knew for sure. This, was most definitely the best day of my life. \n\nfrom the author:Thanks again for reading. Please vote and leave comments for this, and all the stories in this contest."
    ],
    "authorname": "jsmiam",
    "tags": [
        "watching",
        "bi females",
        "group sex",
        "threesome",
        "analingus",
        "ass licking",
        "snowballing",
        "romance",
        "taboo",
        "spanking"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/dina-might-with-a-laser-beam"
}