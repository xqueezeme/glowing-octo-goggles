{
    "title": "A Thankful Blizzard Pt. 04",
    "pages": [
        "Author's Notes: \n\nUp to this point, every scientific detail has been thoroughly researched and included as fact. There are a few spots in this chapter where I use, how shall I say, \"author's prerogative\" to advance the plot in the way it happened in my mind. \n\nThis was a fun chapter to write. I hope you enjoy reading it as much as I enjoyed creating it. \n\nOnce again, a huge thanks to GaiusPetronius. He helped me catch a couple glaring plot holes. He also helped, once again, to polish any rough edges I may have left behind. I made some changes after his edit, so I claim responsibility for any errors remaining. \n\n***** \n\nChapter 8 \n\n\"C'mon pal, get your ass up!\" one of the FBI agents yelled at me, roughly tugging on the cuffs. To say I was shocked was a gross understatement. No, I was confused beyond thinking straight. The only things I could actually think about were the ticking I was hearing from my Explorer's engine and Kat. Where was she? Was she safe? At least she'd be kept out of the clutches of the McMahons. I couldn't hear her anymore, so they must have either taken her inside or gotten her into another vehicle. \n\n\"Where is she?\" I finally croaked out. \n\n\"Like fuck we'd tell you!\" another agent piped up. \"Can you believe this guy? Kidnaps the lady and delivers her right back.\" \n\n\"Yeah, what a fucktard.\" The agents were conversing as if I wasn't even there, acting as if I was like the same kind of \"perps\" seen on TV shows. But what could I say? \n\n\"I didn't kidnap her!\" I tried protesting. \"I picked her up off the...\" \n\n\"Shut up, asshole! Don't forget anything you say can and WILL be used against you.\" The supposed gardener, the one wearing the tropical shirt, came around to the front, facing me. \"Do as we say, cooperate with us, and things will go smoothly. You don't want to see what happens if you resist...\" The iciness in his voice sent chills down my spine, worse than the coat-less journey out to Helen's car while I was with Kat. Kat... did that really happen just 4 days ago? And now this? What the hell was going on? \n\n\"Let's go, boys!\" The group followed suit, piling into a van that hadn't been there just moments ago. I tried looking around to spot Kat, but I couldn't see or even hear her. I just hoped she was ok. She had sounded so pained and hurt. In my mind's ear I could still hear her voice calling out my name. \n\nAs I was roughly shoved into the van, another agent clipped my handcuffs to an anchor in the floor, another agent using a plastic tie to secure my feet together. Where were we going from here? I imagined they'd take me to some unmarked building and interrogate me, or throw me into some cell for a while. At least that's what they did on TV and in the movies. But then a black bag suddenly went over my head. I hadn't expected that. It was thick too, my breath immediately heating up the interior. I found it more difficult to breathe. And the van was fucking hot. It didn't help I still had on my snow pants and boots, but at least I had taken the upper layers off, leaving just a t-shirt. \n\n\"Gecko, where are we goin' again?\" I heard a voice from the front area of the van. \n\n\"Fuck, Dingo, pay attention next time!\" One of the guys to my right practically screamed. That same icy voice, now filled with rage, made me shiver. \"Drop point R-Four-Two-Two! Ask again and I'll shoot you myself.\" Drop point? What did that mean? And was he joking, or being serious? I didn't have any idea how FBI agents actually conversed but this sounded, I don't know, somehow \"off.\" I felt the van lurch forward, rapidly gaining speed. Each turn and bump was painfully tugging on my cuffed hands. At one point, a turn was taken so abruptly, my head was thrown into an agent's knee. He then, in turn, kicked me away. Was this how criminals were treated behind the scenes? And how about the fact I was innocent? Maybe Kat would explain it to the other guys and this whole misunderstanding would go away, and we could be back together. I couldn't believe how much I missed her already. I tried to imagine how much time had elapsed since I pulled into her parents' driveway and agents piled on us from every direction. I think it was about 4 or 5 pm, with the sun just setting. I couldn't even guess what time it was now, or even gauge how long I'd been in the back of this van. \n\nIt was quiet, save for the road noise. No one had said anything. There had been a couple of light coughs, but no words had been exchanged since Gecko had threatened the driver, Dingo. What odd names. I understood Gecko, but Dingo? Wasn't that an Australian dog? Unless the agent was from Australia... but his voice sounded much like the people I grew up around - very plain. The time seemed to crawl and I was getting more and more anxious the longer the van traveled. It was going straight at a high speed now, suggesting we were on a highway or interstate. Where were they taking me? I began counting the bumps I felt in the road. They seemed to be coming every second or so, like a crack or segment in the road at regular intervals. I wasn't sure what that meant, but I kept counting. It was the only thing I could really focus on anyway. \n\nI'd been counting for a while, having reached over 500 when I felt the van change course just slightly, with me leaning forward now. It felt like an offramp. That seemed correct as the van slowed nearly to a stop before making a hard turn. So I was right, we had been on some kind of limited-access highway. The van continued at a slightly slower pace than before. There were no bumps or cracks to count this time, so I let my mind drift back to Kat and our time together. I remembered her telling me her story of how she was abducted - first sketchily at the diner, then in more detail at the cabin. And suddenly it was as if a bell chimed inside my head. I realized I was speaking before I could stop myself. \n\n\"The reports said multiple men abducted her.\" Shit, I spoke. Was I not supposed to? But that was a pressing detail I felt could absolve me, even partially. \n\nI was on my side before I even knew what hit me. Pain had erupted on both sides of my head - one side from hitting the floor of the van, the other from God knows what smashed into me. \n\n\"Are you retarded or something?\" The same voice spoke up, the one the driver had called Gecko. \"What part of 'Shut up!' do you not understand?\" \n\n\"Gecko, chill, he said alive and unharmed.\" A voice said somewhere above my head. This voice was low, relaxed, but sounded authoritative. My head was throbbing, but at least I could still hear and understand what was being said. He? The voice said 'he.' Who was he talking about? A supervisor or superior or something? \n\nI heard a scoffing sound from where I thought Gecko was. \"You are one lucky sonofabitch, let me tell you that, buddy,\" followed by a chuckling sound. \"Anyone else and you'd be dead already.\" \n\nWhat? Dead? Did the FBI do that to people? Before I could think on that further, the van pulled to a stop. I felt my arms being unhooked from the floor. Hands gripped me around my shoulders and feet, lifting me up off the floor of the van and out into open air. The first thing I noticed was the air temperature. I had expected it to be milder, but it felt chilly. I also noticed a lack of any sound except for a few crickets. I was carried for several seconds before being roughly dumped onto the ground. Since my arms were bound behind my back and the bag still hung around my head, I couldn't identify the terrain, whether dirt, grass, concrete or something else. \n\n\"Here's the deal, buddy: You got lucky. You just got yourself in the wrong place at the wrong time. Listen to this after we pull away. Do what it says, and you'll never see or hear from us again,\" Low-And-In-Control said to me. I felt something hard and heavy drop onto my back, just above my cuffed hands. \"But make any sudden moves before you hear us leave and we'll shoot you. Goodbye, Mr. Goodman.\" The cuffs were unlocked and removed from my sore wrists. I did as they said and remained as motionless as I could. The sounds of feet walking away from me, doors closing, and the van peeling away were the only things I could hear. \n\nI lay there and waited for what seemed an eternity, until I could not hear the van any longer. Slowly, I brought my aching arms up to push myself off the ground, feeling that hard, heavy object slide off my back. I pulled the bag off my head, but I might as well have left it in place. It was dark, nearly pitch black. Virtually nothing was visible in front of me. Off in the distance, on the horizon, I saw the glow from some city. I hoped it was Phoenix. But, seeing as I didn't know how long they'd driven me, it could've been Tucson. I doubted it was Flagstaff, since I hadn't felt any significant altitude changes, although I really wasn't sure anymore, especially since the air felt so cold. I remember as a child, some of the surrounding deserts would get bone-chillingly cold at night and during the winter months. \n\nRemembering the thing that had landed on my back, I searched around me for where it was. Finding it, I fiddled with it, trying to figure out what it could be. The guy had said to listen to it. It felt roughly square in shape, perhaps 8 or 9\" on one side. I felt some kind of seam or split along the sides. As I fingered it some more, it dawned on me: I was holding a portable DVD player, much like the one Kat and I had purchased to play movies. I found the latch release and popped it open, pressing the button I assumed was the power switch. \n\nWhen the screen flicked on, a little white triangle appeared in the corner, and the screen faded in from black to the image of an elderly man sitting at a desk, books behind him. Looking into his eyes, I felt terror. He began speaking, in a tone that was equally frightening and commanding. \n\n\"Greetings, Mr. Goodman. My name is Edmond McMahon. I imagine, since you've been around Miss White for a while, you may have heard a few things about my family - mostly, I presume, about my grandchildren, Jasmine and Jasper. My son, Stanley, you probably didn't hear much about, since he wanted to make amends with the White family. He didn't have any spine. Those White bastards have always been getting their way, yet looking like noble, lawful people the whole while.\" Edmond slammed his fist on the table. \"They don't know a fucking thing about running a business! Sure, Doug has built up a pretty large company. But he had everything given to him along the way. Those businesses were already up and running when he got them. He didn't have to scrape and penny-pinch. He didn't have to struggle to make ends meet. No...\" He started chuckling. \"My business, my empire - this is how you run things; neat, efficient, cost-effective, and productive. \n\n\"Mr. Goodman... Paul, you are lucky, son. Normally, if someone had come poking their nose where it didn't belong, they wouldn't be breathing right now. Neat, efficient, cost-effective, and productive. But you, you've written those damned papers - climate-control papers that have started appearing in scientific journals. I've been around. I know how this stuff goes. Some cub reporter on a slow news day gets hold of those journals, reads your articles, figures out enough from the abstracts to see something newsworthy. Pretty soon, stories start appearing in the popular press, the so-called Main Stream Media. You get your almighty doctor's degree, find yourself on the lecture circuit, and all the Chicken Littles get stirred up again. And that is bad for my kind of business. I'd like to have you killed, each part of your body left somewhere buried in snow - that'd be ironic, wouldn't it, Paul?\" His stare, even through the screen, made my blood run cold. The man looked to be in his 70s or 80s, but had such an icy stare to him that I started shaking. I didn't think it was the cold making me shiver, either. The video continued, showing Edmond with a smirk. \n\n\"I'd just love to have you buried piece by piece in snow. But, being that you've written what you have, any unfortunate end to your life would likely raise the wrong sorts of suspicions and send authorities sniffing around here, especially since you've had contact with Miss White. That would be most undesirable. So... you get to live.\" He leaned forward. \"But I promise you this: if you so much as show up around my business in any way - poking your nose into the White family affairs, meddling around with that little bitch, or fucking around with anything I am even remotely associated with, you can consider your miserable little life at an end, along with your family, friends, associates... Well, I'm sure you can get the picture.\" He chuckled, or rather cackled, a hideous, evil sound. \"But if you don't... let me demonstrate to you just how much I know.\" \n\nThe screen turned to black with white words scrolling past. First were my parents' names, their address and phone numbers, what looked like their social security numbers... How did this guy get this kind of information? Next came my aunts and uncles, my cousins and their kids, followed by my roommate, his girlfriend, my professors... My stomach was turning sour. The list kept going on and on, names I realized I hadn't been in contact with for very long, but there they were, nonetheless. When I thought I couldn't take any more, the screen faded back in to Edmond, with his creepy, smirky grin. \n\n\"So Paul,.. do I make myself clear? I'll say it clearer for you. STAY...THE FUCK... OUT OF... MY... BUSINESS!\" His fist hammered the table with each word. His face was red, a vein popping just above his eye. I briefly wondered if he could get a heart attack or something, acting like that. But his point was clear. And he scared me, he scared me shitless and pissless. He continued, after taking a deep breath and wiping his brow with a handkerchief. \n\n\"The only name I left out of my list is Miss Katherine White. I saved her for last. If you continue to poke around in my business, she gets the special treatment. I'm talking about torture, Paul - the kind of torture that makes people beg for death. I won't elaborate, as I'm sure you might be able to imagine.\" He cleared his throat. \"The best part is that I can make it look like you did it.\" He pulled out a small device, and pushed a button on it. I heard Kat's voice. ~Dad... I'm... not ok... really... harmed... saw me on the side of the road... riding... had... me... trapped for so long... tell... Mom... bye...~ He clicked the device off. How the heck had he done that? That was some intense voice-manipulation. That would probably explain why he knew, or suspected, at least, that she was coming back. He must have had her father's phone tapped. \n\n\"Now, you're in the desert, Paul. And if you want to survive, I suggest you listen carefully. Stand up. Now.\" I did just that, standing up, still holding the player. \"Walk towards the glowing horizon.\" Again, I followed his orders. I doubted a trick now, as I was pretty sure if he intended me dead or harmed, I wouldn't be holding this video. \"Walk straight for 50 meters. You'll find your vehicle waiting for you, everything you had still inside. Remember, Paul, I know how to find you and all your loved ones. You contact the police about this, or the FBI...\" He pulled his finger across his throat. \"And don't even think about showing this video. In fact, I'd recommend you throw this player as far behind you as you can and sprint toward the glow. Unless you like pieces of plastic embedded in your skin. You have 10 seconds.\" The player turned black, a giant green 10 on the screen. It turned to 9 and I assumed this guy wasn't kidding. I turned around, closed the lid, and chucked the player like it was a discus, hoping it went far enough. I turned back to the glow and started running as fast as I could, trying to count in my head. When I thought the time had run out, two things happened at once; behind me, I heard and felt a blast more powerful than I thought possible from that tiny DVD player, and I found my Explorer, running into it full tilt. \n\nI knew I was dazed. Lying on the ground, staring up at the starry sky, I wondered which had caused the dizziness. I tilted my head back slowly, trying to see any indication of the explosion. I think I may have expected a fiery blaze, a residual flaming crater, anything except the blackness I saw. I slowly got to my feet, leaning on my Explorer for support. Damn, that hurt. As my mind came back into focus, my experience in chemistry told me that any kind of explosive, given the size of that DVD player, wouldn't have caused the chaos I had been imagining. I chalked it up to my frayed nerves. \n\nSo I hadn't been arrested, hadn't been charged with kidnapping. That would have been a more desirable outcome, as I thought about it. Kat would have testified and cleared my name and we... \n\nKat! Fuck, that bastard must have her! But what could I do about it? If I went to the authorities, even the FBI, he clearly said he'd retaliate. I didn't want that for anyone, and most of all not for Kat. But I couldn't just leave her in the clutches of such a loathsome, twisted man. One thing I knew for sure: I had to figure out where the hell I was right now. \n\nI climbed into my Explorer, immediately searching for my phone. I usually tucked it into a side pocket while I was driving anywhere. I sighed in relief, seeing it was still there. Remembering Kat's words that she had put her contact information into my phone already, I searched through my contact list. Finding her name, I opened it just to make sure. In the number line, instead of her digits, the words 'NICE TRY BUDDY' were listed. Well, that just sucked. Not that they'd likely let her have her phone. Or that she even had it to begin with, since I hadn't driven her to her car where she said she had left her belongings. \n\nThat's it! I could look there, try and find where she had parked, see if it was still there. I racked my memory, trying desperately to remember if she had told me any details about the abduction, any information about her car, the location, the restaurant name... I sighed. It wouldn't matter anyway. The police would have tried combing the area over for details, likely seizing the car as evidence. And even then, there was no guarantee how much of a hair-trigger rage Edmond McMahon had. Would he act on his threat if I so much as went to look for her information? Probably - he sounded like he had control, information, and an ability to get others to do the dirty work for him. \n\nI pounded my fist into the steering wheel. I know it didn't help anything, but I was at my limit of frustration. I figured I'd call my parents and let them know I was ok. They were expecting me, once again. I pulled up their contact picture and hit dial. \n\n\"Hello?\" Dad's voice answered after the first ring. Sheesh, did Dad just wait by the phone all the time these days? \n\n\"Hey Dad, it's me again.\" \n\n\"Paul, are you ok? We've been worried about you. You're late.\" At least it was Dad, and not Mom yelling like she tended to do. \n\n\"Yeah... I, uh... well I ran into some trouble again, and we'll probably have to stay at a motel tonight.\" I was surprised how easily the lie came to my lips. I felt bad, but I didn't want to get my parents involved in whatever crap I had just stumbled upon. \n\n\"Thanksgiving is only a couple days away. Will you make it?\" \n\n\"I'll give it my best, Dad.\" I wasn't sure if I was going to make it, or how that was going to work out. \n\n\"Ok, Son. We love you. Take care and keep us updated if anything happens.\" \n\n\"Alright, love you too, Dad. Tell Mom I love her too.\" I wondered, if I did get involved, would I even be able to see my parents again? Or anyone? I shook off the thought. ",
        "\"Bye, be safe.\" And the line clicked off. I stared at my still-glowing phone, wondering what I was going to do at all. \n\nA sudden thought struck me. How had Edmond McMahon known about me? How had he had enough time to get all that info? Oh, it had to be a phone tapping. Kat had called her parents' house again, while we were driving home, letting them know my name. These days, from what I understood, a name was all you needed to get plenty of information - provided you had the right connections. \n\nAt least my phone had reception out here. And a data connection. It was limited, but it still worked. I quickly checked the maps and saw I was outside Phoenix, some 70 miles or so. I was actually close to a small town called Gila Bend. I figured I could search for a hotel or other lodging there. I wondered if Edmond had my phone tapped. Well, the quickest way to solve that was to shut it off and remove the sim card. \n\nI started down the road in silence, thinking about what I was going to do. I felt trapped, much like I had in the cabin. Only this time, I wasn't with Kat, I was in a place where I couldn't reach her, couldn't save her, couldn't do anything for her. \n\nAlthough, I could just forget the whole thing, stay away from anything related to Edmond McMahon, and return to the Mountain State campus of Caltech. I wanted to slap myself for even having that thought. Katherine White had changed my life. Her wit, her wisdom, her talent, her compassion, companionship, passion, beauty, sexiness... all these things about her were so ingrained in my mind, I could never abandon her. But what was I going to do? I didn't even know where she was, or who had her. She could be in another state by now. Or even another country. I doubted that one, but it was still plausible. I needed time to think, probably to do some research. And a way to know that I wasn't being tracked or followed, monitored, or spied upon. My phone was a likely and almost guaranteed source of tracking. They could have put something in my Explorer too. If they had access to social security numbers, they probably could track my spending by credit card. I stopped at the next gas station I saw, and used their ATM to withdraw as much cash as I could from my account. It was only $500, but it was better than giving away a trail of what I was doing or where I was going. Neither of which I was entirely certain. At least at this gas station, it was on the road I would have had to take to get back into Phoenix anyway. As a last minute impulse thought, I grabbed a pay-as-you-go phone and a refill card. Ok, communication was ok. But I still had to figure out what to do about my Explorer. \n\nPulling into Gila Bend, I found a hotel that offered business connections and accepted that I paid by cash. I signed in under a false name, one I thought up just before coming inside. Tonight I was Wayne Ford. I had no idea that would play into my favor within the next 24 hours. I had simply chosen it as a composite of the best movie Kat and I had watched together, starring John Wayne, and Ford from the manufacturer of my Explorer. Luckily, the town was small, there was a clear need for business, and there was a teenager working the front desk. I walked back outside to drive around to my room, since it was situated on the other side of the building, when my solution for a car presented itself. There was a decent looking car with its window open. It looked old enough to not have any fancy GPS devices on it, yet new enough to be reliable, and more importantly, valuable. Looking around and seeing no one present, I checked inside the car. The keys were dangling from the visor. I hatched a quick plan, something that would delay anyone finding out I had swapped cars. I realized I was about to commit a crime, something I had never done before, but thinking about how I had to save Kat, whatever it took, I shrugged it off, trusting that the owner had insurance. \n\nSnatching the keys from the visor and pocketing them, I unlocked my room and hauled several things inside. I unturned the covers of the bed, climbing under them for good measure, before moving about the room, making it look as if I had been there. I found a guide for local sightseeing, and laid it upon the table, the courtesy pencil stuck in a page about an attraction within walking distance of the hotel. I checked my own phone one last time, before setting it on the table. With everything looking as I wanted it to, I left the room. \n\nStarting someone else's car, with their keys, and without their knowledge, was exhilarating yet troubling at the same time. I chose not to dwell on the latter feeling. I carefully pulled away from the hotel and went down the road a ways until I spotted a weed-choked used car lot a little off the beaten path. \n\nThe lone salesman was just the man I was looking for, an overweight stump of a man, with a scruffy 3-day growth, protruding belly, bald head, and patches everywhere on his suit coat. After a short haggle, I had traded in the car for a different one, a small 2-door Honda. Considering the difference in value between the trade-in and the Honda, Mr. Stump was willing to dispense with details like registration plates, insurance certificates, and other pesky legal niceties. The car ran, it had AC and a radio, and it left a confusing trail for anyone searching for me - mostly thanks to the complete lack of integrity I had just witnessed. I really hoped that the original owner of the first car wouldn't check out too soon. \n\nWith the new confidence that nothing could track me at the present moment (I searched my person, including body cavities, and checked my clothes - no bugs), I set out to get closer to Phoenix - and to finding out what I was going to do to find Kat. \n\n******* \n\nA short while later, I found myself in an internet caf\u00e9, just outside Phoenix, that promised to be open all night, browsing any information I could find on Edmond McMahon. I cross referenced the other names as well - Jasmine, Jasper, Edmond's son Stanley - and searched through the information I could find. Edmond proved to be the most fruitful, giving me several businesses that had his name involved in some manner. I was looking for anything - a lead, a clue, a thought of where he might be keeping Kat. Or even where he did his business. \n\nI almost gave up when something rang a bell. I came across an article in a business magazine about a patent one of Edmond's companies had purchased some five years ago for some ridiculous amount of money. The patent itself - a small bag that worked much like instant ice-packs - was unimpressive and not really unique. But the application was being used to serve snowcones anywhere. The user simply squeezed the top bag, releasing the chemicals to cause an immediate and drastic endothermic reaction, freezing the syrupy-water in the lower bag just enough to make it slush-like. Once an indicator turned color, the user then twisted the whole thing off the cone, running the ice through an imbedded grinder, creating a snowcone on demand. The magazine article found it incredulous that this technology was somehow economically profitable. \n\nThe company that owns and operates the snowcone factories is named, ironically, Blanco's Sno Cones. Even I, untutored as I am in the Spanish language, know that blanco means white. Indirectly, Edmond named his product White's Sno Cones! He was thumbing his nose at his rival and there was nothing Doug White or the White Family Corporation could do about it. The lawyers shrugged and said there was no trademark violation: after all, the actual tradename is Blanco and, besides, white is just the color of snow or, in this case, shaved ice. \n\nEdmond McMahon had shown himself as delighting in irony. In the video message he left for me, he had made a reference to irony, the irony of chopping me up and burying me in snow. \n\nI stepped outside, surprised to find a working payphone in this modern cell-phone-dominated world. It just played in my favor. \n\nI dialed the number I had received for the factory. I waded patiently through the voice-response menu, offering a maddeningly vast array of numbers to press for various connections, until finally hitting the hours of operation. I was in luck: they stayed open late, and I still had time. Hanging up, I nearly pumped my fist in excitement at the lead I had. Well, I hoped it was a lead. I was basing this completely off the idea that Edmond liked irony. If I wasn't right, I could be discovered at the factory and - well, I may just end up being some bear's snowcone. \n\nClimbing into the Honda, I started driving toward the address of the factory. I was taking a big risk, bigger than I had ever taken before. I wished I had the kind of aptitude I'd encountered in video games I used to play- steady hands, incredible athleticism, perfect aiming capabilities, plus the ability to acquire weapons and vehicles at will. I at least had my own intelligence. Ah, yes. That was how I was going to make this work. I detoured slightly to get the supplies I'd need, before attempting something I never imagined I'd ever be doing. \n\n****** \n\nChapter 9 \n\nIt took only a few minutes and some minor tweaking and rigging, but I had a successful smoke grenade - five of them, actually. And with my knowledge, I knew how to create the ones that created thick, billowing smoke that lasted for several minutes, all with self-starting 'pins' similar to a grenade. I also had purchased some goggles and a few handkerchiefs, to get through the smoke unscathed. I recalled once more, the schematic layout of the factory that I was able to access online. If my hunch was right, and Kat was being kept in the facility, she'd be on the second floor in one of the offices. If I timed it right, the smoke from my grenades would make workers assume a fire had broken out. Then I'd be able to either get to Kat, or see where she was taken. My first step, though, was to survey the building's perimeter, check for cameras, security, things of that nature. \n\nI drove calmly through the neighborhood, checking out each entrance. The front was an obvious no-go, what with a security check-in booth, gated entrance and all. Each side was accessible, but left me exposed to the bright outside lights far too long for me to be comfortable. I could set off a smoke grenade or two, but I wanted to save them for when I got inside. As I drove around the back side of the factory, where I saw deliveries were handled, I spotted my perfect vantage point. A three-storey parking garage sat overlooking the entire back of the factory. \n\nI pulled into the garage, and parked in a spot on the second floor. I took up a spot between a large truck and a support pillar, mostly blocked from sight of any cars coming or leaving. I pulled out the cheap binoculars I had picked up and began scanning the back entrance. I saw a minor check-in spot, but with the activity going on, all focus was on the gate, not the back corner of the fence, which also happened to be conveniently darker than the rest of the grounds. I checked as close as I could with the low magnification level of the cheap binoculars, noticing a lack of security cameras back here. There looked to be only the one security person in the booth, who was largely focused on the trucks. \n\nI did notice something peculiar. Each truck seemed to be checking something with the gate guard before entering, then getting it back from him after leaving. I had no idea what that was about, but thought I would note it for future reference. \n\nWhen the time seemed right, I hitched the small backpack on my back, loaded with my grenades and a few other supplies, then headed down toward the darkened back corner of the factory grounds. I tried to appear as calm and in control as possible, hoping that if anyone saw me, they would assume me harmless. I made it to the corner of the fence, looking around once before grasping it and swinging myself up and over. Nerd though I was, I had learned how to climb a chain-link fence at a tender age, when I would cross from our house into the adjacent park to play. This fence posed no problem as I landed softly on my feet, inside the fence. \n\nNow that I was closer, I saw an even better point of entry - a side door, which was unmonitored. I assumed it was there solely for the smokers, a guess that was quickly confirmed as I saw a man dressed in factory-worker coveralls, hard-hat, and goggles come out, stretch, and light up a cigarette. I quickly moved to the building while he was turned and stepping away from the door, which he had propped open with a stopper, so I quietly moved behind him and into the building. He didn't notice me. As soon as I entered, the noise of the machinery was louder than I had anticipated. I tried to recall the schematics. Where had the side door been? I looked left and right, catching sight of an 'EMPLOYEES ONLY' sign at the far right. I moved cautiously over toward the door, peering through the glass. No one inside. Easing myself in, I looked around at what appeared to be a break room. Nothing looked very remarkable, until the hallways leading off to lockers caught my eye. That was interesting. \n\nTaking a closer look, I discovered several lockers were open, or unlocked, and quickly picked out a worker outfit that fit me. At least now I'd be much harder to detect as an intruder. \n\nThe door to the break room suddenly opened, startling me. I moved behind the last row of lockers, hoping that this was just a break and not someone's shift change. I heard change plunk into the vending machines. Someone began talking. The acoustics of the room made it as easy to hear everything as if they were in the locker room with me. \n\n\"Yeah, can you believe he did that to me?\" one voice whined, in a very nasal voice. \n\n\"Girl, you gotta get rid of him,\" the other retorted. \n\n\"Yeah, but this job pays so well. It's because of him that I'm working here.\" \n\n\"I bet you can get better pay elsewhere - you smart girl, not like me.\" \n\nThey dropped their voices a little, and it became harder to hear them. \n\n\"Do you know what actually happens here?\" The nasal-voiced woman was nearly whispering. \n\n\"No, what?\" \n\n\"Adam says that over half the cones get shipped to a special warehouse, where they're packed with various drugs, then delivered to store fronts, as snowcones. We're paid more overnight cause these are the 'special' cones.\" \n\n\"No shit?\" \n\n\"Shhh... yeah. Adam has hinted he is involved in that process, too.\" \n\n\"He get more money for it?\" \n\n\"Well, if he does, he doesn't tell me.\" \n\n\"Then why you stayin' around, girl? Leave his scrawny ass!\" \n\n\"I'm just worried he'll do...\" The rest of the conversation died out as the women left the break room. That was very interesting. That must have been what the check-in gate and drivers were handing back and forth, something to do with this. I had figured the McMahons were in to drugs somehow. It actually sounded like a brilliant idea. Who thinks of snowcones as a drug-carrier? Individually wrapped, too. How convenient. How'd Edmond put it? Neat, efficient, cost-effective and productive? Yeah, that guy had to be stopped. I added that to my list of reasons to hate Edmond McMahon and his whole bunch. \n\nI emerged from the locker room and walked out of the break room, heading toward the sound of the machinery. Now where would he keep Kat? The most logical place was the second floor, where the offices were. I doubted workers would be up there, at that late hour. Holding my backpack full of goodies in one hand, I tried once again to look unsuspecting, unsuspicious, and normal. At least my bag was very plain, nondescript looking. My heart was hammering though. I was worried someone was going to stop me at any moment, not with words, but some kind of weapon. The sound of someone dropping something nearby made me jump. Calm down, Paul, calm down. \n\nI took a deep breath, and continued walking toward the stairs. I reached the steps with no one accosting or challenging me. Walking up the stairs, I saw, there at the end of the row of doors, a guy dressed in black sitting on a metal folding chair by a door and looking as suspicious as the thug from central casting. A thrill coursed through my body. I was sure that I had outsmarted Edmond McMahon, the cocky bastard. Now, how to get past that guy? Now was the time to use my smoke grenades. I pressed against a support beam, hiding from everyone's sight. I reached into my bag, and grabbed three of the grenades. I pulled the pin on one, dropping it over the edge of the railing, directly below me. Within a few seconds, the container the grenade had fallen into was producing a large amount of smoke. A few people below screamed and started shouting 'fire!' at the top of their lungs. Peering over at Black-suit, I saw him stand up, trying to see what was happening. He hurried over to the opposite set of stairs and started going down. I pulled the pin out of the second and third grenades, and chucked them over the support beams and lights of the main open space. I hoped no one saw the light smoking trail. \n\nI picked my bag back up and rushed toward the end of the rows of offices, and stopped at the one behind the folding chair. The locks were on the outside of this door. This wasn't the first time someone was being held in this room. The door was solid and had no window. I had no way to know if someone was inside or not until opening it. As I cracked the door open, peering into the gloom, lit by one single small light bulb, my heart leapt into my throat. \n\nThere was Kat, wearing the same thing as when we were separated, her hands tied behind her back. She looked exhausted, defeated. She was slumped in her chair, but I could still see her face was red, probably from crying. How could this asshole do this to her!? Not my Kat! I stepped into the room and Kat lifted her head to see who had entered. I'm sure she was wondering why a worker had snuck into the room with her, for her first look was one of confusion. \n\n\"What are you doing in here? Get out, now, before you get in trouble!\" She practically hissed. Her tone was harsh but to me it was the voice of an angel. She hadn't recognized me yet, because I had put on the goggles. I pulled them up and over my head, and saw recognition start to cross her face. \n\n\"I'm not leaving without my girlfriend.\" \n\n\"Pa... Paul? Is that really you??\" \n\n\"It's me, Kat. I came for you.\" \n\n\"But, how did you find me? He'll find out! You'll be killed!\" \n\nI tried to smile, to reassure her. \"He left clues. I think he has this subconscious desire to be caught - something about adding to the danger. I saw it on a Discovery Channel show about criminal profiling. And no, I intend for him to not find out until we're safely away from here.\" \n\n\"Oh Paul... you've saved me twice now!\" \n\n\"Let's get out of here first, before you say I've saved you.\" I moved forward, looking at her bindings. They were plastic, so I pulled out the pocket knife I had picked up, one of those folding toolkits with pliers and screwdrivers and the works. I quickly had her free of the chair and the bindings. She immediately threw her hands around me, nearly knocking me over. \n\n\"Oh Paul, Paul, I love you, thank you for coming back for me, for getting me!\" She planted a kiss on my lips, as I registered the words she had just said. She loved me. She said it. Well, she may have been stressed, but it still meant she was thinking it, right? \n\nThe sound of an alarm behind me shook me from my thoughts. \"Time to go, Kat.\" I felt as though I had said that before, or something like it. \n\n\"That's what you said before the blizzard hit hard. Is that going to become your catch-phrase, just before you step into action and look like some kind of hero?\" \n\n\"I hope not. This is freaking me the fuck out, but it's for you.\" I saw her smile at my words. This woman had brought out so many firsts in me, so many things I didn't know I was capable of - much like my sudden resort to swearing. I reached into my bag, handing her the extra coveralls I had stashed from the locker room. She quickly pulled them on, making her look like another factory worker instead of a hostage. ",
        "\"Thank you, again.\" \n\n\"Thank me when we're out and safely away,\" I muttered, hoping I wasn't jinxing our luck. I stepped to the door, peered out, and saw that my grenades had been more effective than I thought. The entire factory had a smoky haze to it, but I think someone had turned on some fans, as the smoke was quickly dissipating. \n\n\"Hey! You can't be in there!\" Black-suit had spotted me, and was pointing and shouting. I grabbed Kat's hand and started running down the raised path. \"HEY!!\" Shit, shit, shit. He wasn't supposed to spot us. \n\n\"Kat, run!\" She didn't need to be told twice; she ran with me down the length of the second floor path. \"Head over to the far wall, there's a side door we can get out!\" I called over my shoulder. I reached into my bag and pulled out another grenade, yanking on the pin and dropping it behind me. I hoped Black-suit was following and would be disoriented by the smoke. We raced down the stairs, trying to weave through the machinery to the wall. \n\n\"THEY'RE GETTING AWAY!!\" I heard Black-suit's voice bellow over the machinery. Another guy was somewhere in here trying to get us? I thought quickly and made a snap decision. \n\n\"Not that way! This way, Kat!\" I felt her lurch to a stop, my hand tugging on her to pull her away from where we'd been heading. \n\n\"Back into him!?\" \n\n\"No, just trust me!\" \n\n\"Ok!\" We ducked and ran along the row of machinery, into where I thought I remembered a doorway. Rounding the corner of the last machine, there it was - the side entrance to the loading docks. I yanked it open, pulling Kat in behind me. I turned around, seeing it had a latch. It'd buy us a few seconds as one of them fumbled with keys to open it up. \"God, Paul, you are amazing right now!\" \n\nI blushed. \"Thanks! This way!\" I led her into the loading docks, seeing the panic hadn't quite spread into this room. There were several people moving rapidly, but not in a panic. Then I noticed at one end, a group of men were loading gray packages into the back of a truck. I quickly turned us around, hoping they hadn't seen us. When I heard no shouts, I guessed we were in the clear. But I had a sudden realization that made me stop. \n\n\"What? What's wrong, Paul?\" Kat had turned around and saw my wide-eyed expression. \n\n\"Fuck... I forgot the fact that everyone would be following a set fire-escape plan, and move to a safe spot... the way I got in, well, it looked like the safe spot.\" \n\n\"Can we get out another way?\" \n\n\"Probably not. There's too many people around. Someone will recognize you, or realize we're not workers.\" \n\n\"What about the trucks?\" She looked at me with hope. I supposed it could work... It would just be another law we'd be breaking. \n\n\"I like it, it's our best shot.\" We walked along the rows of trucks, checking to make sure no one would see us, but also checking for unlocked doors, keys in the trucks. We'd searched four trucks and I was about to give up when Kat found it. \n\n\"Paul! Here!\" She was wiggling a set of keys. \"You drive, or want me?\" \n\n\"I'm not sure I know how to drive these kinds of trucks...\" \n\n\"I do, c'mon. Hop in.\" Right, Kat was raised with farm and ranch experience. It made sense she'd probably helped out at some point, unwilling though she was to take over the business. \n\n\"Ok.\" I raced around the other side, jumping in to the passenger seat. Kat had already buckled in and started the engine. \"When we leave, you'll see a parking garage. Go around to the entrance, we can hop out and get in my car - a bit less conspicuous than this truck.\" \n\n\"Alright, here we go.\" Kat shifted into gear and the truck lumbered and lurched into action. She angled the truck to the door, when someone saw us. They pointed, and it looked like some people were trying to close the door. \"Uh oh, what should I do?\" \n\n\"Speed up, ram it.\" I suggested. Kat did just that, and the truck barreled down on the closing door. We punched through the metal as if it was tissue paper held up before the football team barreled out onto the field. Up ahead, the guard was yelling into a radio, but had no choice other than be squished or get out of the way. \n\n\"Left or right?\" Kat asked. \n\n\"Right, get out past the buildings. Don't pull up in front of the parking garage, stay far enough away, but close enough we can run before they catch up to us.\" \n\nKat nodded and put my words into action. She handled the truck as if it were a fancy sports car, weaving the corner as if we were going to take out the building, but speeding right past it. \n\n\"Do you drive all your cars like this?\" \n\n\"Only when I'm running for my life.\" \n\n\"Ok.\" Kat did as I had suggested, getting just around the block before lurching to a stop, about a hundred feet from the garage. We took off sprinting along the sidewalk. Apparently Kat was a runner too, for she stayed pretty much in pace with me. We reached the garage entrance in seconds, with only a few people looking at us like we were crazed lunatics. A few more seconds and I stopped in front of the car that I currently called my own. \n\n\"Wait, where's your Explorer?\" Kat asked, looking around. \n\n\"Uh... waiting for me to get back from my daring rescue attempt?\" I pointed to the car in front of us, and Kat just grinned and shrugged at me. \n\n\"Ok, works for me.\" She climbed in, and buckled up immediately. I really liked this girl. And I liked what she brought out in me. The new confidence I was feeling, the desire to protect her and keep her safe - new feelings that were intoxicating. \"Where are we headed?\" \n\n\"Well, I thought about rushing straight to the FBI office, but something tells me they might be waiting, anticipating that. So I think we go find a place to lie low and think it out.\" \n\n\"I like that idea...\" Kat had turned to me and was tracing her hand along my thigh. I didn't feel it so much, due to the coveralls, but the intention was clear, and I liked it. Apparently all the mad action-hero work I had just done must have sucked out the new confidence I was feeling, as I just nodded in agreement. Kat giggled. I loved hearing that sound. But her giggles quickly spun into sobs, as she started crying, a near guttural moan. \n\n\"Kat?\" \n\n\"Oh God, Paul... I thought I lost you!\" She gasped out between sobs. She took several deep breaths, trying to calm herself. \"I thought...they were gonna'... k...k...kill youuuuu!\" She started crying again. I reached one hand over to her, offering a hand to hold. She grasped it firmly with both hands. \"Then... he... he threatened... Oh God...\" She started crying some more. \n\n\"It's ok, Kat, I'm here, I'm here,\" I offered, hoping I could give her some small measure of consolation. \n\nShe sniffed a few times. \"I'm sorry. This has just been an intense day.\" She was right, a little over twelve hours ago we were making love like wild animals behind a rest-stop building, with snow all around us. \"He... Edmond McMahon... that's the twins' grandpa... he said he'd... he'd cut me... cut pieces of me off...\" She was shaking now, her voice wobbling with every word. \"... and send them to... my father...\" Holy shit, this man was demented, toxic, and far more powerful than I could tolerate. \n\n***** \n\nChapter 10 \n\n\"I think we'll be ok now.\" I had just pulled up to a hotel on the outskirts of Phoenix. I checked both Kat and me in as Mr. and Mrs. Henry Bruce - another little gimmick in my head, with Henry Ford for the first name, and Bruce because of Bruce Wayne - but Kat was giddy at the thought of us being Mr. and Mrs. for tonight. She leaned over to whisper in my ear as we were waiting for the elevator. \n\n\"Well, this way we can be fucking each other silly and no one will think twice... my husband.\" Wow... was she being serious, speaking her feelings for me, or just playing along with the husband-wife subterfuge? I didn't doubt the fucking each other silly part - I was certain of that. \n\n\"Ok, my wife, want to wait for this silly elevator to get us to the second floor, or shall we use the stairs?\" I had barely finished the question when she was running full-tilt toward the stairs. I struggled to keep up with her. Both of us were giggling like little kids. We still had on the coveralls and hard-hats from the factory, which explained the laughter I heard from the front desk. They must assume we were workers out for a late-night dalliance or something. I was thinking that would indeed be a funny sight to see, both of us behaving like newlyweds. I also realized we'd have to be careful, as Kat's picture was probably on every news channel. But the sight of Kat racing up the stairs, her ass wiggling in the coveralls as she took each step, made me push that thought aside and race after her. \n\nAs we reached the door, I was struggling to put the key in the card slot, since Kat was already kissing my neck, my ear, my lips, anything she could get her lips on. Finally, the damned card slipped in and the door unlatched. We rushed in, and kicked the door shut behind us. Kat was immediately all over me - pawing at the coveralls to rip them off me, sliding her hands in over my shirt. I helped her by shrugging out of them and stepping clear of the fabric. She pushed me onto the bed as she started peeling hers off as well. That was such an erotic sight - to see clothing come off, with more clothing on underneath. It was like when someone tricked you with a massive box wrapped up for Christmas, so that you had to unwrap and un-box each layer, with each one promising to get you one step closer to your longed for present. \n\n\"God, just getting undressed for you is making me hot, Paul...\" Kat's cheeks were rosy. Her coveralls finally came off, piling on the floor next to mine. She had on the same snow pants from earlier in the day, the same tight t-shirt that said 'Precious' across the front (I was surprised Monty's store carried that) and then I realized she must have had the same panties on - ones that had probably already absorbed her desire from earlier in the day, not to mention any of my fluids that may have leaked out of her. \n\nShe pushed the snow pants down to her ankles, wiggling her way out of them. \n\n\"Kat... are those the same panties from earlier? The ones that are probably stained with my cum?\" Damn, I felt so wicked and naughty saying things like that. It really did feel good to be able to say something confident like that. \n\nKat's eyes fluttered momentarily, and she let out a slight gasp. \"Oh... fuck, they are... that's so hot... I almost forgot about that.\" She slipped her fingers into the elastic band, started pulling them slowly down her hips. Inch by inch, her short pubic hair was exposed, getting to the point where I could tell they were sticking to her. \"Hmm... can you see? They're sticking to me, part from your cum, part from my arousal for you, Paul.\" Her dirty talk had a huge effect on me, but I think my desire was already more than evident to her, gauging by the way she kept eying my tented pants. She gave one final tug, the panty freeing itself from her pussy, and I was once more in awe of her stunning beauty. She still had the t-shirt on, but this was enough to make me wild for her, seeing her bare hips and legs, the covering of her hair leading down to the glistening lips, yet her shirt still clinging to her top half. I couldn't resist myself. I turned around on the bed then hung my head off the edge nearest her, tugging on her hips. These cheap beds were low enough that it was almost perfect - my head could ease mostly between her thighs, so I could lick her like this. She gasped, moaning and whimpering my name. \n\n\"Yum... I have missed this,\" I moaned into her moist lips. I continued moving my tongue around her - just as I had come to know how she liked it. My hands held onto her bare ass, holding her steady and bracing myself so that I could keep lavishing attention to her. \n\n\"Oh... fuck Paul, you are amazing... oh! Keep doing that!\" She quickly let out a pant that increased in tempo as I used my nose to wiggle around her vaginal opening, and my tongue to twirl around and across her clitoris. After a few minutes, she let out a whimper and I felt her thighs tighten slightly around my head. \"Hmm... hmmm... hmmm...\" I paused to let her ride out the orgasm. She stepped back to look at me with a grin. \"That was... amazing.\" She panted out. \"Now scoot back a little, so your head is on the bed.\" \n\nI did, and said \"Why?\" But my question was quickly answered as she climbed onto the bed, lowering her pussy toward my face. Holy shit, that was absolutely amazing. I felt her tug at my pants, pulling them down so my cock could spring free. \n\n\"There you are,\" she moaned, then I felt her warm lips and wet mouth slide down my length. Ohhhh... this was, by far, the best oral experience I thought we had shared together. Each thing we had done in the past was amazing and beautiful, but this one just seemed to top it all. Her glistening lips lay poised above me, almost beckoning me. So I leaned my head forward and licked her. Her voice hummed her pleasure around my head, another amazing feeling, before her head continued an up and down motion, sliding with her mouth. \n\n\"Ohh fuck, Kat... this is so good...\" I pressed into her again, with my tongue, dragging it all around her lips and around her clitoris. \n\n\"Mmmhmmm,\" her moan came, still held around the head of my penis. I wondered if I could hum something into her? I didn't think so, not at this angle. I'd definitely have to try that some other time. \n\nThe effect of having my face buried in her pussy, the smell and taste and erotic feeling of it had me almost as aroused as our first time together. That thought stuck, and I realized this woman had given me a lot of firsts, not to mention all the firsts we shared together - first-time lovemaking, first oral, giving and receiving, at least for me (I hadn't asked if she'd done it or had it done to her before me), first girlfriend, first time sleeping overnight with a woman in my arms, first time taking a shower with a woman, first - my thoughts were quickly interrupted by something she was doing to me that was by far the most intense feeling I'd gotten from her mouth. I couldn't help but pant directly into her lips. I lost track of what I had been doing to her. I was caught up in an incredible flood of sensations - the powerful scent of her pussy, what with juices actually inside my nostrils, the feel of her bare skin under my fingertips, the contrast of her clothed upper body pressed against what little areas I had exposed around my hips and lower stomach, and of course, the indescribably wonderful pleasure she was causing to my entire cock. My pants increased rapidly right up to the point where I wasn't even breathing anymore, as the tension of the impending orgasm felt like a dam about to burst. The pressure was building deep within my abdomen and spreading throughout my groin. I had sucked in one last breath and held it deep as the final slurp, the last little lick or suck or flick or twirl or whatever the gloriously amazing thing she was doing to my cock took me crashing over the edge. \n\n\"Kat... cumming, cumming, cumming!\" I exploded my pent up breath and began chanting into her lips, as each contraction and spasm rippled through my entire core, feeling like a pleasurable impact with each one. I felt her moan around my shaft, and her cheeks hollowed and her lips and tongue began sucking, milking the cum right out of me. My entire body was rigid, except as each spurt caused my body to twitch and buck. I couldn't concentrate on anything at all, realizing my face was buried between her lips, slippery with her excitement. She soon was doing something similar to a few times back at the cabin - something that seemed to heighten and extend the sensation of the orgasm. As it finally dwindled down to comfortable pleasure - an almost over-sensitive state - she continued to gently lick and kiss my cock as it softened slightly. I was breathing hard, hardly able to move. Kat peeked over her shoulder and giggled at the sight of me. \n\n\"Wow... you look so sexy... and your entire face is covered with my juices.\" I loved that giggle. It was so playful, exciting, and alluring. I realized I still had hold of her hips and she was still poised over my face. I felt some of my energy return, and I felt immensely grateful, so I leaned up and attacked her clit. I think it surprised her. \n\n\"AhhhhheeeeeeeeeEEEE! Oh! Oh! Oh! Paul, fuck! Oh fuck, oh fuck, oh fuck!\" She must have been right on the verge of orgasm when she triggered mine, because it didn't take more than a few licks and sucking her clit into my mouth. I helped her the best I could, trying to heighten her pleasure during her orgasm. She gripped my cock now, holding it in her hands and moaning continually, her legs pressing against my shoulders, her hips and crotch bucking and pressing into my face. I felt her press my cock against her face, like she was nuzzling it, or hugging it. Soon, though, she started pulling away from me. \n\n\"Oh oh, no more, no more... too much!\" She called down to me, her body collapsing on top of me and rolling off to one side. I gently eased her legs off of me and crawled up to join her. Holy shit, she was asleep! Or passed out. I couldn't tell. I eased my body up against hers, cuddling into her. I heard her moan and sigh, pulling my arm across her chest so that we were spooning, my arm hugging her to me. She must have just been so contented at that moment - and probably incredibly tired. I still had no idea what, if anything, the other thugs had done to her. \n\nAnd there was still the pressing issue of Edmond McMahon. Would he follow through on his promise? Did I just endanger everyone I knew with my reckless rescue? What if he did start killing and making them all disappear? It would be my fault. I could have thought up some other kind of rescue, something that didn't potentially put my entire known world in harm's way. \n\n\"Paul? Are you ok?\" Kat was holding her hands against mine. \"You're trembling.\" \n\n\"Oh...\" I took a deep breath, trying to steady my nerves. \"I thought you were asleep... It's just everything is catching up to me.\" \n\n\"God, Paul, you were amazing! You looked like an action hero from a movie. How did you make those smoke bomb thingies?\" Kat spun around so she was facing me. We both crawled under the covers at almost the same time, entwining our hands, fingers, feet - anything to get closer to each other. \n\n\"Well, I am a chemist after all.\" I had to chuckle. She sounded like a young kid, with her excitement. I wondered if that was covering the terror she must have been feeling at some point. \n\n\"Was it hard?\" \n\n\"Well, it was pretty easy, actually, since I knew what to make, how much to use, exact temperatures... that kind of stuff.\" \n\n\"How the hell did you find me in a snowcone factory?\" \n\n\"Well, I had a lead, that I didn't think he intended to leave as that.\" \n\n\"Who did?\" \n\n\"Edmond McMahon.\" \n\n\"What kind of lead? How did you figure it all out? Tell me, I want to know how you were so incredible!\" Kat squeezed my hands, her eyes pleading. Wow, I was learning the looks of her eyes already? That felt good - it felt right too. \"Please? I wanted to know what you had to go through.\" I nodded, squeezing back. \n\n\"Ok, but you tell me what they did to you, too.\" She nodded, so I began telling her about the guys in the van, my head being covered by some black bag and all the details leading up to the DVD player the thugs left on my back. \n\n\"...then he said, 'Listen to this, but try anything and we'll shoot you' or something like that, before one of them unlocked the handcuffs. After I gathered myself, I listened to it. Edmond had prepared an entire speech for me, basically bragging about his exploits and threatening me if I got involved - especially looking for you. Well, he had left a big clue which I hadn't realized until later, when he told me about how he would like to kill me and bury me in snow.\" I felt Kat shudder and pull tighter against me. \"He mentioned how ironic it would be, and judging by his face, he seemed to enjoy the idea of death by irony. So after his message, he rigged the device with an explosive, so I couldn't turn it in to authorities. I found my Explorer - one of his henchmen had driven it out there for me.\" ",
        "\"Wait wait wait... wait...\" Kat interrupted me. She looked confused. \"Why didn't he just kill you then, like the rumor goes, that he does with anyone who crosses him? Why go to all that effort to scare you and keep you alive? And he had someone drive your Explorer out there??\" \n\n\"I have two theories. First, it's possible he has always wanted to be caught all along. I remember some profiling episode on some channel, where they mentioned that sometimes, a criminal will purposely leave a trail, to spice it up or make it more entertaining for themselves.\" Kat frowned at this idea. \"What? I heard it on TV. The Discovery Channel, I think. It might not even be that true. I'm a scientist, not a psychologist or anything.\" \n\n\"Ok, so what's theory number two?\" \n\n\"This theory seems more likely to me, but I wonder if the first one has some truth to it. Well, my second theory is largely based upon what he actually said. He told me he would like to kill me, but the papers I wrote a few years ago were holding him back. He thought that if he hurt me, specifically now, after I'd been around you, somehow the authorities would come poking around, asking him questions, putting two and two together - bad for his business, so he says.\" \n\n\"Paul, what are the papers actually about?\" \n\n\"I mentioned earlier they were about climate change, right?\" Kat nodded, so I continued. \"Specifically, I discovered a connection between snowflake formation and the expelling of exhaust fumes from factories and industries. The gist of one of the papers is that pollution has to lessen soon, otherwise there is a strong likelihood that we will start seeing serious ramifications in our snowfalls, snowmasses, and snowfall patterns. In another paper, I demonstrated how I was able to synthesize a structure based on an organic substance that grows similarly to ice crystals, which catches pollutants that would normally escape into the atmosphere. The resultant compound is a biodegradable solid that looks like salt crystals. I hadn't expected the paper to be published in a journal right away, nor had I anticipated the responses. I had attack letters from big businesses and manufacturers, letters praising my work from environmentalist groups, conservationists, and other scientific communities heralding my discovery.\" \n\n\"Paul... that's like, a global impact. You're gonna be famous real soon, huh?\" \n\n\"Well, I doubt it. I'm just a chemist, and a young one at that. Several groups doubt my discoveries. Even though another lab was able to reproduce my results, I just don't have the respect from the scientific community to really make waves.\" \n\n\"I bet it'll have a bigger impact than you think, Paul. I mean, it really sounds like it'll change business and...\" She paused, her eyes turning serious. \"Wait, you said Edmond was concerned now that you've been around me? Why's that?\" \n\n\"Oh, well... it turns out the process of compounding this synthetic substance uses several components of a very common and natural ingredient - something I didn't realize your family made almost half of in the entire US...\" \n\n\"Lettuce!?\" Kat jerked back to rest on her elbows. \"You've got to be shitting me... Global warming can be combated with lettuce???\" \n\nI chuckled. This was the reaction I had gotten from most people who couldn't follow the intricate mathematical and chemical details of the process. I suspected Kat would, if I sat down with paper and pencil, going over every step - but that seemed tedious and pushing my luck with how much she was actually interested in my work. \n\n\"Not exactly, Kat. Lettuce has some molecular chains in it that are key components necessary for the stability of the synthetic substance - otherwise it deteriorates way too fast.\" \n\n\"Well, I can tell why Edmond's pissed and scared - it's direct competition to his businesses and direct benefit to his most hated rival, not to mention that if this becomes an industry standard or some EPA mandate, it's extra expenses he'd be incurring that he would think wouldn't be necessary.\" Kat said everything so matter-of-fact, with no hesitation. She was so observant, so astute, and so very quick. \n\n\"Wow... I've been thinking about this the entire evening, just reaching that conclusion not too long ago, but you got it in seconds? That, Kat, is one of the things that I find so attractive about you.\" As I watched her, I saw a blush creep up her face. It seemed like such a turnaround from when I'd first met her, when I was the one blushing, and she was the one complimenting me. \n\n\"Thanks, Paul. I have to admit - you're the first guy I've met who can challenge me intellectually and not be intimidated by my intelligence,\" she said with a huge grin. \n\n\"Guys can get intimidated by a smart woman?\" I actually laughed. \"What, do most guys expect women to be dumb and obedient or something?\" \n\n\"Yeah, the past boyfriends I've had all wouldn't see me after the first few dates. One of them I cornered, asking him why. He said, 'You're too smart, I feel so dumb and useless next to you.'\" \n\nI scoffed at that, ready to call the guy all sorts of lame names, but Kat continued. \n\n\"But anyway, that makes sense now, why he didn't just kill you, or leave you for dead in the desert or something. He was just concerned that you'd get linked back to me, with the result of your research - stuff that supports my family - being stuff that would negatively affect him. Plus, it's not like it's a secret that his family largely detests WFC. Any detective worth his salt would find reason to find him suspect.\" \n\n\"Yeah...\" I couldn't help but stare at Kat with a profound sense of respect. This woman had endured a family pressuring her to do something she didn't want to do, a kidnapping, well, two kidnappings now, and God knows what else - which she still had to tell me about - yet she was razor sharp and caught on very quickly - not to mention how observant she was, a quality clearly borne out in her artistic talents. \n\nAs if my thoughts were being broadcast, Kat suddenly got up, searching through the hotel room. I enjoyed watching the contrast between her nude lower half and clothed top half. She found what she must have been after - a pencil and a notepad. She plopped onto the other bed with her findings. \n\n\"It's small,\" she gestured to the paper. \"But I had to make a quick sketch. Can you continue telling me how you made the connection or whatever you did to find me?\" \n\n\"Sure...\" I wasn't as surprised as I had been the first time this happened, but I still found it fascinating to see her use a cheap pencil and start sketching. I was curious what she was suddenly inspired to create, but I did as she asked and continued telling her how I figured it out. \n\n\"So, like I said, that video suggested he was really into irony, right? I didn't know it at the time, or register it, until I was at an internet caf\u00e9 trying to search anything I could about Edmond McMahon. And there it was. Blanco's Sno-Cones. It was like a giant 'X marks the spot' moment. It had irony written all over it - mainly the white and snow aspects. If he'd made a point to tell me how he wanted to see me ironically chopped up in the very stuff I studied, then I figured he'd be stashing you there.\" \n\nKat looked up from her sketching for a moment. \"That was a pretty clever deduction. So then what, you bought smoke grenades?\" \n\nI chuckled. \"The stuff for making them - sugar and saltpeter, then a portable stovetop burner, a pan, containers, and matches for the 'pins' you saw me using.\" \n\n\"Paul, that is so... fucking cool. I can't think how else to describe it.\" Kat clasped her hands together. \"I'm so glad my hero is also a genius.\" I blushed a bit at that remark. I caught sight of an edge of her drawing and I was instantly curious exactly what it was. \n\n\"Is your sketch finished yet?\" \n\n\"Almost. How'd you get in the facility?\" \n\n\"Oh, I just climbed the fence in a dark corner and spotted a side door and snuck in behind a smoker.\" I paused, recalling the conversation I'd overheard in the locker room. \"Oh, I think that factory is a front for drug-smuggling or somehow involved in drugs.\" \n\nKat laughed. \"Figures it'd be the cones.\" She jumped up, reminding me that she was still naked from the waist down. \"Here, it's finished.\" She handed me the sketch. \n\n\"Holy... fuck.\" I wondered if I was ever going to have an intelligent response the first time I saw her artwork. This one was no exception to the awe-inspiring pieces I'd already seen her create. On the back of a hotel notepad piece of paper, Kat had drawn me with wings once again, in full flight and carrying her out of a window of a building. That same light she'd had on me from before was illuminating me, while she had made smoke, looking incredibly realistic, pouring out from the building, swirls of it in our wake. I still didn't understand how she was able to create such brilliant sketches in such a short time with sub-quality tools. I thought about chemistry, my specialty, how if I started with sub-par equipment, none of the results would be reliable. \n\n\"Well... besides being dumbfounded, what do you think?\" She was leaning close to me, having sat on the bed next to me. \n\n\"I, uh... am completely without adequate words to describe the profoundly mesmerizing effect of your artistry.\" \n\nKat laughed, leaning in and hugging my arm. \"You're sweet, Paul.\" She planted a soft kiss on my cheek. \"And you're a dork. Something I really love about you.\" That made me recall, earlier she had said 'I love you' to me. I wondered if it was spurred on by the heat of the moment, the adrenalin and stress we must have been feeling prompting those words, perhaps? I thought I'd find out by being bold - something that, until meeting Katherine White, had seemed impossible to me. \n\n\"There are lots of things I love about you, Kat.\" \n\n\"Awww!\" The smile on Kat's face told me these were the perfect words. She grabbed my head in her hands and kissed me. She threw her arms around me, embracing me tightly. \"Paul?\" she whispered. \n\n\"Yes?\" \n\n\"Is it too soon to love you?\" Her soft words were so charming, endearing, and heartwarming. The only women I'd ever known who'd said 'I love you' to me were my mom and aunts, and my grandma. Of course, I already knew I was falling in love with this woman. Otherwise, I wouldn't have gone to such lengths to save her. In fact, thinking about what I did at the snowcone factory just made me that much more convinced I loved her - God that was rash, dangerous, and incredibly daring. Those words had never been applied to me before now, particularly not in my own mind. Before I thought too much more, it seemed prudent to answer her question, lest she worry about having said it. \n\n\"Was a few days ago too soon for me to love you?\" I chose to counter her words. She smiled widely and pressed against me hard, forcing me onto my back. As she crawled on top of me, I realized since our oral ministrations on each other, I hadn't pulled my pants back up. My rapidly hardening cock immediately made contact with her moist pussy lips. \"Ohhh... Kat.\" \n\n\"Yesss...\" Kat reached between us, guiding me to her opening. \"Then let's make love, Paul.\" She sank down onto my cock, arching her back and moaning as she reached bottom, our hips fully contacting each other. She wiggled her hips a few times, but kept me fully inside her as she leaned forward to kiss me. We kissed for several minutes, lazily moving our hips together. This was a coupling of love, that much I was sure. There was no need for fervent motions, for animalistic grinding and humping. I reveled in the taste of Kat's mouth on mine, the way her tongue would trace along my lip, teasing me to bring my tongue out so she could suck gently on it before resuming our full kisses. I could have spent hours just kissing this woman and be content, but having my cock buried fully inside of her was infinitely more delightful. My hands roamed her back, realizing she still had her shirt and bra covering the creamy soft skin I desired to see right now. I reached down to tug the shirt up over her head, but Kat just leaned back and did that special woman-magic-trick of sliding the shirt up and over her head in one fluid, sensuous motion. I immediately leaned forward, kissing the tops of her breasts, gently rolling my hips forward, enjoying the ever so slight and ever so sexy feeling of being so deep in her and sliding slowly around. \n\n\"Hmm... gotta see 'em.\" I whispered into her cleavage, as I used my fingers to unsnap her bra, much more gracefully than I had the first time. She shrugged her shoulders forward, letting the straps slide off her and in turn allowing the cups of the bra to fall free from her breasts. I never grew tired of seeing her fully nude breasts, with their perfect roundness accentuated by hard nipples and crinkly areolas. Sucking one nipple into my mouth, I caressed the other breast, tracing around the nipple but not touching it. I felt her torso twisting, and realized she wanted me to treat her other nipple the same way. I happily obliged, tasting and teasing the other with my mouth. As we'd been sitting up, Kat pulled on my shoulders and fell back on to the bed, dragging me with her. I had to unlatch from her nipples, but it put me in the perfect position to kiss her neck, a place on her body I had grown especially fond of. \n\n\"Ahhh... Paul... love me... keep loving me...\" Kat was whispering now, soft moans and hisses of pleasure as I began to slowly press in and out of her. I felt Kat's legs wrap around my back, then her feet hooked into the pants I still had on, tugging them off my body. I wiggled my legs the best I could and was able to kick them off the side of the bed, returning once more to kissing her neck, trailing up to her ear, where I chose to whisper more words to her. \n\n\"Kat... When we were coming down from that mountain pass and stopped at that rest area, things just felt so perfect and right with you. I felt like you were a part of my life and not just some poor girl I was returning to her home.\" I pulled slowly out of her and then pushed in a little bit quicker. \"You are even better than my ideal dream of a girl. You are incredibly talented,\" I caressed the side of her breast as I whispered, \"You are so passionate about what you want, you are so caring and kind-hearted,\" I placed my hand above her breast, \"A heart that, I think, wants to pour out the love it feels inside.\" I grabbed her hand and placed it on my chest, realizing I was still wearing my shirt, but made my point anyway. \"And this heart is beating for you, right now. In this heart, I have a deep desire to be with you, to watch you reach for your art dreams, to support that and assist any way I can. This heart wants to wake up next to you every day, talk to you about your day, my day, anything and everything. This heart,\" I kissed her fully, trying to put every ounce of compassion and love I could summon up into it, \"wants to love you, Katherine White.\" \n\n\"Aww, Paul...\" She was gripping me tightly, cradling my head with her hands. She kissed me back, as firm as I had. \"I... I love you.\" \n\n\"I love you too, Kat.\" Wow! That felt so good to say. It also felt right, as though I'd grown up saying it. \n\nKat started tugging at my shirt now. \"Then get this thing off and keep making love to me!\" She teased, giggling at my struggle to tear the shirt off of me as fast I could. When I finally discarded the offending garment, she pulled me on top of her, our nude skin pressing together. We moaned in unison. Her nipples were extremely hard and I could feel them pressing into my chest. Her legs wrapped back around me and started encouraging me. My movements picked up pace, small and slow thrusts stretching into faster, fuller and longer thrusts. Kat began moaning, her hands tracing all along my arms and back, my chest and face. \"Oh Paul, that feels so good! God, I love you, Paul, I love you, ugh, ah, ah, yes...\" Her chants were like little jolts of pleasure to my whole body. Hearing her say 'I love you' made me feel like the luckiest man on the planet. \n\n\"Kat, oh, Kat, I love you, I love you, I love you,\" became my new mantra, spoken with each long full stroke I was using. Everything was culminating into what was going be another intense orgasm. Her moans were turning into sharp gasps of pleasure and then I felt it - the tightening of her vaginal walls around me, the pulsing sensation of her contractions. \n\n\"Uh, hmm, hmm, hmm... aaaahhhh! Oh God, cum with me, Paul... fucking cum in your lover, fill me up, my love!\" Kat nearly squeaked. Those words did it, pushing me over the edge. I grunted and pushed as far into her as I could. I felt my toes curling, my insides quivering with each blast of my cum. \n\nWe held each other long after our orgasms subsided, whispering words of love and admiration to each other. Whatever our future had in store for us, I was beginning to picture Kat with me, right by my side, and myself with Kat, right by her side. That's how I wanted it to be, forever. I had fallen in love with her. \n\n\"Goodnight, my love,\" I heard Kat whisper. We had just adjusted and moved to get back under the covers, me spooning into her back. My arm was hooked around her, resting just under her breasts. She had her arm resting on mine - it felt as if she wanted to be sure I wasn't going anywhere. She just seemed to fit perfectly against my body. I'd never been this comfortable before in my entire life. \n\n\"Goodnight, Love.\" I whispered back, kissing the nape of her neck. My head rested next to her luscious red curls. Being as comfortable and content as we were, I slowly slipped into an incredibly peaceful sleep. \n\n***** \n\nThe chirping of a weird sound woke me up from my sleep. What was that sound? I looked around the room, seeing Kat looking around confused, too, before I found the prepaid phone next to us on the end table. I frowned, wondering who could possibly know the number for this phone and call at 5 in the morning. I cautiously picked it up. \n\n\"Hello?\" \n\n\"Oh, thank goodness I reached you, Sir. I wanted to let you know that there were two very large and scary looking men asking about your room, Mr. Ford. They kept calling you Mr. Goodman, though. I thought they had the wrong guy, until they described your vehicle. They looked angry, so I wanted to warn you. They're waiting for you just outside right now.\" That had to be the teenage girl who was at the desk of the first hotel I had stopped at, before everything got crazy. It made me speechless, really, to hear how much this teenager cared, how concerned she was for my welfare. \n\n\"Oh, uh, thank you. Can you let them know you saw me head out toward Yuma?\" \n\n\"Of course, Sir. Um, when will you be back? I worked a double shift last night, and I saw this morning that you had swapped cars with me.\" Oh shit, that car belonged to her? Fuck, I hadn't considered that possibility. \n\n\"Um... if they leave, go into my room, and you'll see my keys there. You can take my Explorer. And, if anyone follows you or asks, just let them know I let you borrow it.\" \n\n\"Ok, thank you, Sir, and good luck!\" The call ended with that, leaving me with a feeling of unease and guilt. I really hoped nothing would happen to that poor girl. \n\n\"Kat...\" I began. \n\n\"Yeah, who was that?\" \n\n\"Uh, a long story... but it means that they're looking for us. And it probably won't be too long before they find where we are hiding. We need to get moving, and find a way to get to the FBI office.\" \n\n\"But won't it be covered by their guys?\" \n\n\"Yeah... you're right.\" What were we going to do? Something had to be done to stop Edmond McMahon and his influence. \n\nBAM! BAM! BAM! The three sudden pounds at our door made both Kat and me jump. \n\n\"Housekeeping!\" A voice that was a little bit too gruff sounding called out. ",
        "\"Get dressed, quickly!\" I whispered to Kat. I highly doubted this hotel employed a man with that kind of manner and voice as a maid, least of all one pounding on doors before the sun was even up. Kat scrambled to pull on her clothing as I yanked mine on and gathered up what few belongings we had with us. \n\n\"The window?\" Kat whispered to me, pointing at the sliding door. We were on the second floor, so we could theoretically jump and land unharmed... \n\n\"Open up! Housekeeping!\" The voice growled from behind the door. I rushed over, setting the deadbolt and latch as quietly as I could. I grabbed one of the chairs in the room and propped it up underneath the door handle. I hoped that would slow whoever it was down just a little bit. \n\nKat and I rushed over to the sliding door that opened to a tiny balcony. I peered over the edge, and saw that the drop was a bit too long - on solid concrete nonetheless. As I looked left and right, a thought appeared that we could climb across the small gap to the adjoining room's balcony. If we could get over to the lawn area on our left - or even better, the giant green box housing some kind of electronic equipment - we could probably get down. \n\nA loud sound echoed out of the room, followed by what sounded like a gunshot. \n\nShit, they weren't messing around this time. That meant going to the FBI offices or police was practically suicidal. But if we couldn't get to the FBI... \n\nAnother thud and cracking sound came from the room. We both heard the sound of the latch catching and the voice swearing. I helped Kat onto the balcony and into the next room, closing both balcony doors behind us. It wouldn't take long for the man - or men, we had no way to know how many were here - to get into our room, see that we had already left and assume we went out through the balcony. Our options were running out rapidly, as I heard the door crash open in the room we had been sleeping in just minutes ago. We listened carefully and heard the man opening the balcony door. We moved to the front door, peering out. The fisheye effect of the peep-hole showed me the hallway was clear. The stairs were just in front of the door, but so was an emergency exit. I gauged that the emergency exit would probably be the quickest and safest exit, rather than traipsing through the hotel lobby. \n\n\"Ok, Kat? We're going to rush through the emergency exit just outside this door, to the right.\" She was nodding to everything, somehow maintaining composure. I held three fingers up, then tucked each one down. \n\nWe pulled the door open, then as Kat turned to shut it, I barreled into the side exit door. It felt as if the door hit something, which was quickly confirmed by the grunt and sound of someone tumbling down the metal stairs. I peered around the edge of the door to see another man crumpled on the ground at the foot of the stairs, a gun by his side. Holy shit, that was lucky and close - had we gone the other way, he'd have spotted us leaving the lobby and been able to stop us. Racing down the stairs, I reached down, scooping the gun off the ground and tucked it into the pocket of my pants. I didn't really know too much about firearms, but the weight and presence of it made me feel better than being bare-handed. \n\nPeering around the corner into the parking lot, we determined that the two guys we had seen were acting alone, or the other guys with them were hiding and would surprise us anyway, whether we considered them or not. \n\n\"Wow, Kat, look. I don't think they knew what vehicle we were driving.\" I was pointing over to where I had parked the car last night. There wasn't a single car or pedestrian or gardener or anything that looked to be surreptitiously watching the car. \"How do you suppose they found us, but don't know what car we drove?\" \n\nKat looked at me and shrugged. \"Your guess is as good as mine.\" \n\n\"Think the car is still safe?\" \n\n\"Well, do we have any other options?\" she asked. I looked around. There were no other cars in the parking lot. I didn't feel comfortable walking, so I decided we'd just risk it in the car. We had to act fast, anyway, whether they knew which car we were driving or not \n\n\"Nope, let's just get to the car and leave, find a safe place to collect ourselves and think. Ready?\" \n\n\"Ready, Paul. I love you,\" Kat added, squeezing my hand. \n\n\"Love you too, Kat. Let's go!\" Holding Kat's hand, we briskly walked toward the car - a trade-in for a technically stolen car - getting inside without any problems. I checked the controls and everything I could before wondering if I would even notice something awry. \n\nThe car started without a hitch, and we were heading down the road. We were silent for about 10 minutes, and after having taken several turns, I let out my breath and let myself relax just a little bit. \n\n\"I think we're safe, ok for the moment.\" I told her. \n\n\"That was intense. Paul... you're such a quick thinker. You keep proving over and over that you've got these amazing heroic qualities.\" Kat had her hand on my knee, was gently rubbing my thigh muscles.\"And you're my hero - all mine. I didn't even have to find you, you found me.\" \n\nI felt flattered, that Kat viewed me so highly. And then something clicked. \n\n\"Kat... you're a genius! That's how we'll get them!\" \n\nShe looked at me, completely puzzled. \"Huh?\" \n\n\"You didn't have to find me, I found you.\" I repeated. \n\n\"Yes, and? I don't get... oh! The FBI!\" \n\n\"Exactly. If we can't get to the FBI... well, we'll just have to find a way to make them come to us.\" \n\n***** \n\nAuthor's Ending Words: \n\nOnce again, sorry for the delay. I caught a nasty cold that has intense pressure through my head. Next chapter is already in the works. I hope this sickness clears up fast so I can get back to writing quicker. Thanks for reading!"
    ],
    "authorname": "rexspaulding",
    "tags": [
        "fbi",
        "arrested",
        "planned",
        "love",
        "romance"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-thankful-blizzard-pt-04"
}