{
    "title": "Agent in Distress Ch. 10",
    "pages": [
        "I just wanted to say to my readers I'm sorry the recent chapters are taking so long. Life competes with Lit for my time, and I'm now writing the new chapters from scratch, so it takes longer. \n\nI also wanted to thank the readers for your lovely comments, which have been so encouraging and also helpful in crafting the plot. I have actually integrated or adjust things based on comments so they really do help! \n\nThank you also to the writers of Lit who've inspired me: Charles Petersunn, Joe_Doe_Stories, dr_mabeuse and others. \n\nA special thanks to my flirty and sweet friend, who's been helping me throughout with ideas and handholding. This chapter is for you. :) \n\nChapter 10\n\nThe magistrate and the two guards were about to guide Lana out the door when she realized she was naked below the waist.\n\n\"Wait!\" said Lana. \"Could you . . . please give me my skirt back? Master?\" she added, thinking that might improve the chance he'd listen to her request. The magistrate paused, looking at her.\n\n\"I can do better,\" he said, with a grin, turning her around to face away from him. Then she felt hands at her back, and suddenly the silk that covered her breasts slid off, leaving her completely naked. He spun her back around, and Lana saw the helpers and the magistrate both openly staring at her, and she blushed from head to toe. \"There, now I've saved you the embarrassment of a mis-matched outfit,\" said the magistrate, grinning at her embarrassment. \"Don't worry, my little slave,\" he added. \"We'll give you something suitable to wear.\"\n\nLana groaned, feeling like a fool for bringing up the subject. She had to learn to lay low and keep her mouth shut. Just then, the younger slave girl, Paya spoke up. \"Master, is Miss Torina a slave now?\"\n\nThe magistrate turned to look at her and smiled. \"Yes, she is now property of the Kingdom of Wight. I will draw up the paperwork later today. Why do you ask, girl?\"\n\nThe slave girl said sweetly. \"As a new slave, you should dress her properly, shouldn't you, Master?\"\n\nThe magistrate grinned and turned to look at Lana. \"Why yes, you are right of course, little Paya.\"\n\nLana's head was spinning and she gaped at the slave girl. To her surprise, the girl showed no sign of ill will or mischief. She seemed genuinely excited. Lana didn't have time to ponder that, for the magistrate had gone to the cabinet and returned with a bronze collar, with long slender metal chain attached. \"You're not putting that on me!\" said Lana. It was more statement than question.\n\n\"Of course I am,\" said the magistrate, reaching up for Lana's neck. She struggled as the cool metallic ring was placed about her neck, but the guards held her still and the job was easily done. \"As a new slave, you must earn each privilege.\" He took the chain attached to her neck and gave it a sharp tug, making Lana gasp and nearly stumble. \"Slaves find the leash to be humiliating, and only the newly acquired are forced to wear one. But I'm sure you will do your best to earn the right to go without.\"\n\nLana couldn't believe they'd put a collar on her. It made her feel like an animal, which was both humiliating and frightening. Almost immediately she began to think of how she might earn the right to remove it, and then she stopped that train of thought in its tracks. \"You can keep your privileges,\" she spat. \"I won't play that game.\"\n\n\"Oh but you will, when you're ready,\" said the magistrate. \"I'm sure you're eager to see what we have in store for you next, mmm?\"\n\nLana shook her head in misery, but he only chuckled. \"You did so well, I think we should reward you.\" He stopped as if in thought. \"I think I know just the thing, come.\"\n\nLana looked at him but said nothing. The magistrate dismissed the three slaves, and the two helpers, and guided Lana by himself out of the room. The door led to a dark hallway with several doors leading off. He stopped her in front of one of them, and she noticed the sign on the door, labeled, \"Training Class A.\"\n\n\"Let's stop in to have a look here. I'd like you to see some of the ways we might train you,\" said the magistrate.\n\nNothing could have prepared Lana for what she saw next. The long rectangular room was just as the sign said. A half dozen young women were kneeling in a line on a large soft mat that stretched the length of the room. In front stood a muscular man dressed in a red uniform, and he was lecturing the group, gesturing with a black piece of leather that Lana guessed was a whip. She gasped as she noticed that some of the slaves had red marks on their backs. Their arms were bound behind them, and their thighs spread wide, heads bowed. The magistrate paused to let Lana watch.\n\n\"Are you all ready to embrace your new lives, as glorious slaves of the Kingdom? Answer me!\" commanded the man, pacing up and down the line of kneeling females.\n\n\"Yes, Master,\" murmured some or all of the girls, their voices defeated and meek. Lana's heart went out to the poor girls, willing them to resist.\n\n\"You there,\" the trainer shouted, pointing toward a petite blonde with full breasts barely covered by her slave shift. \"Tell me your name!\"\n\nThe girl trembled visibly, looking up at the trainer. \"I\u2014I have no name, Master, for you have not given me one yet.\"\n\n\"Good, that's right, your past life, and your name, have no meaning here,\" said the trainer, his voice a soft caress. Then he turned, noticing the magistrate and Lana for the first time. \"Ah, what have we here?\" he said, moving toward them. Lana's eyes burned into the man as he moved closer, stopping at arm's length. Anger at what he was doing to the slave girls welled up inside her to a torrid peak. The man reached up suddenly to grasp the metal chain lead coming from her collar. He smiled, looking down at her naked breasts, and then his eyes traveled down to her naked hips. He reached forward with the black handle of the whip, moving it gently against the wet crevice of Lana's womanhood.\n\n\"Hey!\" exclaimed Lana, unable to help herself. \"Get that thing away from me!\"\n\nThe trainer looked surprised at her outburst, but he quickly recovered, raising the whip and bringing it down hard across the girl's upper thigh. Lana yelped in pain, and without thinking, she brought up her other leg and rammed her foot into the trainer's crotch. There was a satisfying crunch, and then the powerful man was doubling over in pain, dropping the whip and moving both hands to his damaged goods.\n\nBefore Lana could regret her hasty reaction, she felt the magistrate's strong arm on her neck pushing her down. With her arms bound behind her, Lana fell to her knees, his arm pushing her down until her head touched the floor. The man was surprisingly strong, and he'd caught her off guard.\n\n\"That was foolish, girl,\" said the magistrate, anger in his voice. \"Perhaps I should leave you here for a while, so Augorus here can whip you until you beg for mercy.\"\n\nLana kept silent. She had lost control, and knew she would have to be more careful. She'd be in no condition to escape if she were whipped into unconsciousness. \"Forgive me, Master,\" she said finally, trying to sound sincere.\n\n\"Get up,\" said the magistrate with a sigh. When she stood, she found the trainer named Augorus standing before her, the whip up in the air as if to strike her. But the magistrate held up his hand. \"I'll deal with her. She's new, you're too used to trained slaves, Augorus.\"\n\n\"And you are too easy on the girls, Luthor,\" said the trainer, \"I'd whip her breasts and pussy until she begged permission to lick my boots.\"\n\nLana resisted the urge to kick him in the same spot, instead she just glared at him defiantly.\n\n\"I'm afraid you'll have to take out your frustrations on your own trainees. It would be a pity to mark such perfect breasts,\" said the magistrate. The trainer grunted and then turned to walk back to his trainees.\n\n\"Come,\" said the magistrate softly. \"I like your fire, but another outburst like that, and you will regret you ever existed. Do you understand?\"\n\n\"Yes, master,\" said Lana, genuinely unnerved by the hard look in his eyes.\n\n\"Good,\" he said, satisfied. He guided her out, and they continued down the hall. After several closed doors, they passed another open door.\n\nLana saw through the door of the room, a pretty dark haired girl, naked from the waist down. The girl's wrists were bound high over her head, attached to a chain that hung from the ceiling, and she was gagged. The girl was up on her toes, struggling to raise herself as high as possible. Lana immediately saw the source of the slave's torment: a thick strand of rope ran tightly from a ring high on the wall, down between the girl's thighs, and then extending up in front of her where it was tied off to the ceiling. The rope was digging into the poor girl's naked womanhood, spreading her moist nether lips and making her thighs quiver. The girl looked pleadingly at the magistrate, who only smiled back at her.\n\n\"A most effective training technique, wouldn't you agree?\" The magistrate was looking at her, and he chuckled at her horrified expression. \"I trust it won't be necessary to use this one on you?\"\n\nLana shook her head vigorously. The men of this world seemed to no limits to their imagination, when it came to tormenting women. She looked at the struggling slave girl, wondering what she must have been going through. It looked terribly uncomfortable, and yet, she couldn't help noticing that the girl seemed flushed, her cheeks red, her breasts full and nipples distended. Could she possibly be finding her predicament arousing?\n\n\"What did she do?\" said Lana quietly, giving the girl a sympathetic look. Her own voice sounded a bit husky, and she cleared her throat.\n\nThe magistrate shrugged. \"I don't know. Probably nothing. Each trainer has his favorite techniques. She'll probably be eager to please after enduring this for a few hours, don't you think?\"\n\nA tremor went up Lana's spine and she looked sharply at the magistrate. He was looking at Lana, rather than the slave girl, and she cringed slightly. The magistrate suddenly raised an eyebrow. \"You find this arousing, don't you.\" It was more statement than question, but Lana quickly shook her head.\n\n\"No!\" She glanced over at the girl, saw how she was squirming, her breathing ragged and her thighs clenched on the rope. Lana imagined they must have aroused the slave before placing her here - she couldn't be aroused by that rope. She looked back at the magistrate. \"It looks terribly painful!\" she added in explanation. \"And I don't see the point of it . . .\"\n\nThe magistrate smiled at her. \"Oh it is not uncomfortable, as long as she holds still.\" He reached over to gently tug on the rope below where it was tied off. The slave girl moaned, rising even higher on her toes. Then he went to the wall, where several impliments were hanging from hooks. He selected one that was a simple wooden rod, on the end of which was what looked like a black piece of leather. \"Turn around,\" commanded the magistrate, looking at Lana rather than the slave girl.\n\n\"What?\" said Lana, confused.\n\nThe magistrate frowned. \"Shall I have you trade places with her,\" he said, gesturing to the gagged slave girl with the leather crop. \"I would bet she'd obey my orders much quicker than you do.\"\n\n\"I-I'm sorry,\" blurted Lana, quickly turning around, craning her neck warily so she could still see the magistrate. With a quick motion of his wrist, he smacked the leather piece on Lana's bare ass cheek, making her jump and yelp in surprise. It was not very painful but it stung, and had made her blush in shame.\n\n\"Not so bad right? Let's try it on her,\" said the magistrate. He turned and whipped the strung-up slave on the ass in the same manner. The girl jerked and cried out into her gag, and the rope twitched as her movement created friction along her nether lips. The magistrate hit her again, and the girl jerked again, whimpering as the rope dug into her pussy. She quickly stilled her ass, to try to minimize the sensations, but every time she did, the magistrate simply whipped her again, striking her bare ass with skill, leaving little red marks all over her squirming bottom. After a dozen strikes, the slave girl was quivering and mewling pitifully into her gag, and Lana gasped to see a copious amount of fluid in the region where the rope disappeared between her legs.\n\n\"In time, she will realize the only way to ease her torment would be to use the rope. But I would hate to spoil it for you. I'll let you find out on your own when it's your turn.\" He winked at Lana's look of horror, then hung up the crop back on the wall. \"Come, we have a rendezvous with the registration table.\" The magistrate guided her out and down the hall, and Lana felt relief to put some distance between herself and the poor girl with the rope. She really hoped he was just teasing her about her turn.\n\nThey rounded a corner and Lana was surprised to see the same two helpers standing in a small dining area. \"Ah, there you are, sorry to keep you waiting,\" said the magistrate to his two helpers. He stopped in front of them, reaching into his tunic. Then he turned to face Lana, and her eyes widened, for he was holding up something, a leather strap with a silver metal bar. \"What is that?\" she squeaked in fear. He was reaching for her head, and Lana realized it was a gag. \"A gag? Why? What did I do?\" she protested, her belly tightening in fear.\n\nThe magistrate looked at her. \"You're a new slave, so you must look the part when we go out here. Don't worry, my dear, you will find the gag is a wonderful tool for helping you learn humility. It teaches you that your words are of no consequence, only your voice has value. Men love to hear the sounds of pleasure and pain from their slaves. The gag does not restrict that. I find the blindfold an effective tool as well, but I have some more things I'd very much like you to see.\"\n\nHe gestured to his helpers. \"No, you can't!\" she cried, cringing. Despite herself, Lana struggled desperately as two men took her by the arms, and she cried out in pain when one of them grabbing a fistful of her silky dark hair. The magistrate used her cry as an opportunity to force the metal bar between her teeth, and then he tied the leather straps behind her head. Her words of protest turned into pitiful muffled sounds of distress. Losing her ability to speak was somehow terrifying, and the magistrate smiled at the fear in her wide eyes.\n\n\"Good,\" he purred, reaching up a hand to caress her cheek. He stepped back and looked at her. Lana wanted to glare at him, but found it difficult to muster the courage. \"Now you have learned another fact of life. That your voice may be taken from you as readily as your freedom. Do you understand?\"\n\nLana could only respond with a pitiful garbled sound of denial.\n\nThe magistrate chuckled, \"I'm sorry, wench, I can't understand you. I would take out the gag, but since your words are of no importance, why bother? It is time for you to learn some obedience. When you think you are prepared to be obedient, then we shall remove the gag.\"\n\nLana's heart was pounding. There was something terrifying about being gagged as well as bound. She'd always counted on her ability to talk her way out of situations. Now she was truly at the mercy and whim of this barbaric man, this slaver. She couldn't help a shiver that passed through her body.\n\n\"Mmm,\" said the magistrate, noticing her fear. \"Fear is good. Your master is less likely to punish you if he sees fear in your eyes.\" His hand moved up to touch her neck, moving her long silky hair aside to caress the skin of her shoulder. \"That is better. Perhaps you are getting a taste of your place as a helpless female? But there is so much more for you to learn.\"\n\nThe muffled sounds from the Lana's throat increased in intensity, as his hands moved down toward her breasts. This time he slid his hands along her skin, her breasts swollen and sensitive from the day's trials. Lana stepped back to try to escape the slow sliding hands, but the helpers stopped her, and she gasped into her gag as he took possession of her breasts, his hands cupping her gently.\n\nA shock rippled through her, his touch so much more intense than before, as he gently caressed and squeezed her, feeling out the hills and valleys of her heaving chest. Lana shook her head, pitiful mewling sounds coming from her gagged lips, but the magistrate ignored her protests, enjoying the feel of her flesh at his leisure. Lana looked about, somehow fearful that others would see her naked and aroused, but there were only the two helpers. It didn't make the magistrate's teasing hands any easier to ignore however. She found herself trembling from the delicate trails of his fingertips just avoiding her tender dark peaks.\n\n\"Your skin is exquisitely soft, girl,\" he said softly. \"So delicate that I fear to damage it with my rough hands.\"\n\nThat concern didn't stop him from continuing to explore her body, and she found it hard to concentrate on what he was saying. Even standing still became difficult as his hands moved down to explore her bare belly, then up her trembling sides to slip around to her back. He seemed to be enjoying the feel of her skin, yet wherever he touched sent shivers rippling through her. Finally he stopped with a sigh, his hands leaving her. \"Duty calls I'm afraid, let's get you processed, shall we?\"\n\nLana nodded, grateful that he'd decided to stop. Slavery was far more terrifying than she could have imagined, for they could do anything they wished to her, and she was helpless to stop them. Lana told herself she'd probably get her abilities back after a good night's rest . . . but morning was a long way away. But what if her abilities didn't return? What if she'd permanently damaged them? She'd be trapped in this world, a helpless pleasure slave. Lana quickly pushed the thought away, before the paralyzing panic could set in. As the magistrate gestured for the guards to take her from the room, she tried to recover her composure. She just had to endure their petty humiliations for a day, and in the morning, with her abilities returned, she'd escape this terrible place. And she'd leave the men bruised and battered on her way out.\n\nThe magistrate exited the dining area, holding the leash in his hand. Lana quickly followed to keep the leash from drawing tight and making her stumble. The two guards followed, commenting on Lana's ass in a way that made her want to run and hide. With her arms bound horizontally behind her back, her naked curves were on full display.\n\n\"You think you could make her cum, after all that salve she applied to herself?\" said one.\n\n\"Oh sure,\" said the other. \"Did you see the way she reacted when he touched her ass awhile ago? I'd take her from behind, she'd cum for me that way.\"\n\n\"And I'll take her from the front at the same time. With both our cocks stirring her up, she'd cum for sure.\"\n\n\"You're disgusting,\" said the first helper. \"I don't want your dick anywhere near mine!\"\n\nBoth men laughed then when they heard a muffled cry from the girl in front of them. Lana was trembling, her knees threatening to give out as she hustled to keep up with the fast-walking magistrate. The men of this world could be so intimidating, she realized with a tremor. She reminded herself they couldn't do such things to her if they wanted her to remain a virgin. But they could do so many other things . . .\n\nAfter traveling down two non-descript corridors, the magistrate opened a heavy wooden door, and the bright light of daytime flooded into the hallway. Lana squinted, then gasped as the leash pulled on her collar, making her stumble out into the light. It was a vast outdoor courtyard, busy with all sort of activity. Lana gawked in shock as she saw the nature of that activity. There appeared to be a number of stations, some unoccupied, others containing one or more mostly naked females. Some of the women were alone, others were attended to by one or more men, dressed in identical uniforms. All of the women were bound or chained in one manner or another.",
        "\"This is our training center,\" announced the magistrate, stopping to make a broad gesture as he turned to face Lana. \"It is nowhere near as impressive as what you'd find in Lord Nikos' castle, but we have the reputation as being the best slave training camp in the region,\" he continued, proudly. \"If you want to learn to be a skilled, obedient slave, you've come to the right place.\" He smiled at Lana, gesturing for her to follow him. \"Come, I'll give you a little tour.\" Lana shook her head - she didn't want a tour, but the magistrate and the guards guided her into the courtyard. As she was paraded naked and bound, she saw men and slaves both turn to look at her. Activity stopped as the slavers and presumably customers gawked and smiled, speaking to each other as they looked at her. Lana realized that to them, she looked like a captured Calambrian female, and that made her body blush from top to bottom. She kept her eyes downward, not wanting to see how much attention she garnered. Finally they arrived at a table, behind which sat an older man who looked bored.\n\n\"First stop is of course where we register new slaves,\" announced the magistrate, moving her right up in front of the table. \"Good morning, Rugor,\" he said to the seated man. The man grunted an acknowledgement, then he looked up at Lana, and he suddenly seemed more interested.\n\n\"Former name and origin?\" said the man, picking up a pen and opening a ledger.\n\n\"Lana Torina, from Calambria,\" said the magistrate pleasantly. \"Let's keep her name.\"\n\n\"Very well,\" said the man, scribbling in his ledger. \"Is she a virgin?\"\n\nThe magistrate turned to look at Lana. \"Well, after our time together I'm going to say 'yes.' Is that true, girl?\"\n\nLana remembered that Warrick had said they might extract the truth from her, so she quickly nodded yes. The magistrate looked into her eyes, as if trying to read her, and then he nodded. \"I think she speaks the truth, put her down as a virgin,\" he added, to the seated man.\n\n\"What's your preliminary evaluation?\" asked the man, looking between Lana and the magistrate. The latter smiled, looking at Lana as he spoke.\n\n\"Definitely a pleasure slave. She'll make an exquisite one. Strong willed, she won't be easy to break, but her body is exquisitely sensitive, and since she's already been subjected to extensive use of the Dragon's flower before we acquired her, she'll be easy to train.\"\n\nShe wasn't sensitive, it was the fruit! Lana issued a wide-eyed protest, the vocal part of which was muffled by her gag, and both men chuckled at her unintelligible sounds of distress. \"Silly of me to ask, I can tell she's a pleasure slave just by looking at her. Good, get her started then,\" said the man. He reached into a box and held up a tiny white strip of cloth. The magistrate took it and gave it to the two helpers at her sides. Lana made another muffled sound, looking at the white cloth with a string attached.\n\n\"Oh this?\" said the magistrate. \"It's what the virgin slaves wear, to help identify their status. It's all the clothing you'll need for now.\" Lana gaped at him, for the white thing hardly looked like clothing. Lana looked down to see one of the helpers reaching about her waist with the white cloth. It was a skirt of sorts, she realized, as they put it around her hips. It was made up of small half circles, like a scalloped hem skirt, except its height was only about the width of her thumb. In the middle below her navel was a white string, which the helper ran down between her legs. He carefully placed it along the moist slit of her pussy, before pulling up on the end that snaked between her ass cheeks. Lana choked out a muffled cry and went up on her toes as he pulled hard enough that the string partially disappeared between the folds of her opening, and then he tied it off on the skirt behind her back. Once he was done, the mild pressure on her pussy was distracting and a bit uncomfortable, and she looked at the magistrate with confusion.\n\n\"It serves two purposes,\" explained the man with a cruel smile. \"If we find your attention wavering . . .\" he said, reaching around behind her. Then Lana jumped, mewling into her gag as he gripped the string and pulled upwards. Lana rose up desperately as high as she could to escape the string, but he simply pulled harder, until she was straining to stand on her toes. \"I think I have your attention, now,\" chuckled the magistrate, letting her back down. \"The other purpose I'll show you later,\" he added, smacking her on her bare ass. Lana groaned in shame, struggling to adjust to the situation. It was all happening so fast that she could do little but react. In contrast to her mind, which found the circumstances terrifying, her body was responding with an eager wetness. She felt like her mind was running about trying to put out the flames of arousal, but never able to keep up. She couldn't let them find out that little fact, so she told herself she would fight it with every fiber of her being. Lana tried to keep quiet and still, the less she reacted the better, for the men seemed to enjoy her responses.\n\n\"Come, let's go look around,\" said the magistrate, taking her by the arm. Lana had resisted looking around, for the imagery was too alarming, but the first post they came to was too alarming not to look at. There were no men at this station, only three wooden contraptions, and two of them contained female slaves. The first girl was a voluptuous blonde with long, flowing hair. The wooden contraption was simple, it contained a large hoop around the girl's slender waist, which forced her torso to be horizontal and her ass to stick out behind her. She seemed tall, yet the hoop was so high that she was on her toes, which seemed to accentuate her long pretty legs and force her ass even higher. A second set of hoops jutted out from the first, and kept her wrists together and near the ground, so that her arms and legs were both parallel, pointing toward the ground. Her large breasts dangled enticingly, and her mouth was pried open by a metal gag. The second woman was a stunningly beautiful brunette, on her knees, with her neck and two wrists chained to a short post sticking up from a wooden cross. Her legs were spread wide by her ankles, chained to the same wooden cross in a position that forced her to her hands and knees. Her naked shapely ass was forced up and faced the same direction as the blond girl. The third station was empty, and consisted of wooden stocks with a large hole framed by two smaller holes, dangling about waist high by chains from a frame above. Directly below the hanging empty stocks were a pair of slender chains anchored to the wooden platform, and at the end of each chain was a tiny clamp of some sort.\n\n\"Yes, there's an empty station if you'd like to try your luck?\" said the magistrate, grinning at Lana as she stared in horror at the scene.\n\n\"Luck?\" croaked Lana, as she turned to look at the magistrate, though the word was garbled by her gag, and her voice was hoarse.\n\n\"Yes,\" he explained, gesturing to the two girls. \"This is where our hard-working guards or handlers, and even the male slaves if they've earned it, can go to relieve their pent-up stresses. It can be quite painful, you must realize, if a man is forced to keep his desires pent up inside.\"\n\nLana swallowed, looking with pity at the two slaves, their naked bodies bent over, awaiting the use of a guard or slave.\n\n\"Oh, I know what you're thinking,\" said the magistrate, placing his hand on Lana's shoulder. \"How thoughtless of us, that the men are not able to satisfy their needs in the comfort and privacy of a room. I'll admit it's not an ideal situation.\" Then he patted her ass, making her jump. \"But don't feel too bad for them, at least this setup allows them to use the slaves in a variety of ways. The girls have two vessels in the back and one in the front, all easily accessible by the guard in a hurry.\"\n\nLana's throat was so constricted that only a squeak came out. That hadn't been her concern at all.\n\n\"You know what?\" said the magistrate, raising a finger as if something had just occurred to him. He looked around, and spotted a pair of helpers at a nearby station. \"You two there,\" he shouted, getting their attention. \"You look like you need a break. Would you be so kind as to demonstrate to our new guest here how you use the break area?\"\n\n\"We'd be happy to, sir,\" said one of the helpers with a cruel grin, as he looked at Lana, who was shaking her head vigorously. But it was too late, the helpers were approaching, and each of them sidled up behind one of the imprisoned slave girls. Lana looked at the faces of the slave girls, expecting to see terror, so she was shocked something else on their faces. Resignation? Even anticipation? Then Lana's eyes widened as the guards both loosened their belts, letting their pants drop. They were both already hard, she realized, as they took their cocks in their hands and stepped up to the clearly agitated girls in front of them. The slave girls both strained in their bonds as the helpers did something that Lana couldn't see, and their agitation increased considerably, accompanied by gasps and sharp intakes of breath.\n\n\"It would be rude to just . . . stick it right in,\" said the magistrate softly, leaning his head down to Lana's ear. \"So they tease the slaves a little. Get them nice and wet. It makes the process more enjoyable, both for the men and for the slave girls.\"\n\nThat must have been what they were doing, for the two girls were squirming about. The helpers seemed to be using their stiff cocks to tease around the entrance - to their pussies - Lana hoped with a shudder.\n\n\"Please, Master,\" said the brunette suddenly, her voice soft and sweet, \"do not tease me, please put it in!\" The gagged blond next to her suddenly was nodding and mewling into her gag. She wanted the same.\n\n\"Where do you want it, slut,\" said the guard behind the brunette. \"In this hole?\" He moved his cock and the girl suddenly arched her back. \n\n\"No, Master! Please, not there!\" cried the brunette, craning her head to look behind her as she pleaded with the guard.\n\n\"Then tell me where I should stick it in,\" commanded the guard, still using his stiff member to tease the quivering slave before him.\n\n\"My pussy, Master! Please stick it in my pussy!\" wept the brunette, the humiliation clear on her face.\n\n\"Like this?\" said the guard, pushing his cock part of the way into the slave. Her bottom wiggled and she moaned, then the guard stopped, grinning. The girl tried to push her ass backwards, but the guard moved with her, keeping himself only part of the way into his eager subject.\n\n\"Please, Master!\" wailed the slave, \"please s-stick it all the way in, I'm begging you!\"\n\nThe guard chuckled, teasing her some more before finally pushing himself all the way in. The red-headed slave cried out, and began slamming her ass backwards as guard let her do the work, a satisfied grin on his face. Lana could feel her own heart pounding in her chest, and she felt almost feverish as she tore her eyes away, and looked at the blond girl. She was also straining and struggling, but her gag kept her from being able to beg. Her guard seemed to be teasing her in the same manner, making her wiggle her ass and try to follow his cock, but the ring that held her waist kept her from pushing backwards.\n\nLana wondered what had been done to these beautiful women that they would beg to be impaled by the cocks of strange men. Were the women forced to behave this way to avoid punishment? Or did they truly desire their own humiliating use?\n\n\"Mine's an eager little bitch, isn't she?\" said the helper behind the brunette.\n\n\"Mine too,\" said the man behind the blonde. Suddenly, the second man lunged forward, impaling the blond slave girl with a wet sound, followed by her moans of pleasure. Lana marveled at the look of intense pleasure on the faces of the both slaves, as the men pumped themselves into their victims, their hips jerking and spasming, held in place by their wooden bonds. Lana was unable to look away as the girls cried out with pleasure and squirmed at each deep stroke. The helper spanked the blond slave on the ass, and then his cohort did the same to the brunette, but their spankings seemed to only make the slave girl's moans louder and more frantic.\n\n\"There is a third station available, Miss Torina,\" whispered the magistrate suddenly in her ear. \"I can see that you envy your sisters and would like to take their place.\"\n\nLana stiffened, turning to look at him in shock. At that moment, she realized how heavy her breasts felt, and how tightly she was squeezing her thighs together, as if to keep her wet desires from flowing out. She shook her head in denial, groaning a muffled protest, but the magistrate simply gave her a knowing smile, and Lana knew he saw right through her. Then he was reaching up, to undo and remove her gag. When it was removed, he used a piece of cloth to wipe the spittle from her chin and lips, his touch surprisingly gentle. \"Shall I put you in the third station? Is that what you'd like?\"\n\n\"No!\" whispered Lana, \"please, no!\" Somehow she wanted their conversation to remain discrete. Their voices were no doubt drowned out by the loud moans and cries coming from the two slaves, who seemed to be reaching an orgasm even as the helpers using them seemed nowhere close to finishing.\n\n\"It's quite alright to want to be taken as those two,\" whispered the magistrate in his seductive voice. \"It is natural for a slave to envy her sisters, given the gift of their master's use while she is denied such pleasure.\"\n\n\"I'm not a slave!\" whispered Lana, unable to tear her eyes from the torrid scene. \"And . . . I . . . d-don't want any such gift!\" The scene had drawn the attention of another guard, who was walking over to stand next to the magistrate.\n\n\"A Calambrian? This is my lucky day,\" said the guard, eyeing Lana up and down in a way that sent tingles up her spine. Her body seemed to respond to the man's desire with a welcoming heat, and Lana didn't want to ponder why that could be.\n\n\"What do you say, girl? You look in need, this might be just the thing,\" said the magistrate. He gestured to the third empty station. \"I'll admit it's not the most comfortable of stations. The wooden stocks will chafe your pretty tan skin, and the nipple clamps . . . well, they can be a shock to a new girl like yourself.\"\n\n\"Nipple clamps?\" squeaked Lana, looking in alarm at the two thin metal chains on the floor. Without meaning to, she started to picture herself in the station. If her neck and wrists were placed in the stocks, and the clamps on her nipples, she'd be bent over in the same humiliating position as the other two slaves. She thought of being in that position, bent at the waist, her nipples clamped in steel, while the third guard made his way behind her. Lana suddenly felt light headed, and she had trouble standing.\n\n\"Do not worry, my little slave,\" said the magistrate, reaching up to cup one of Lana's substantial breasts. \"The clamps will leave no lasting mark on your lovely pink buds.\" He used a thumb to caress her enlarged nipple, making her eyelids flutter. \"Normally it can be difficult to attach the clamps, but your little stems are nice and plump right now, so it would be a trivial matter.\"\n\nLana felt faint, and she needed to sit down. The thought of her sensitive flesh being subjected to such a torture was too much for her. One of her legs buckled slightly, and the magistrate caught her by the arm and steadied her.\n\n\"Oh, are you feeling alright, my dear?\" said the magistrate. \"Why don't you take a rest over here.\" He moved to the stocks, lifting them open. \"Just place your neck and wrists in here, you'll find it quite relaxing, it takes the weight off your back.\"\n\nLana paled, before suddenly regaining her strength, and she shook her head. \"N-no . . . thank you . . . I--I'm quite alright now!\" Her eyes flicked over to the right of the magistrate to see the two helpers grunting and pumping into the prone slave girls, who were all but screaming now as the four of them came together. Lana's body flamed high, wanting to be pleasured like the two slave girls, and she bit her lip, trying to stifle her body's responses. Her body's arousal was far beyond the point of being pleasurable, and now she was aching, burning with need.\n\n\"Are you sure?\" said the magistrate. \"How about just a quick rest here in the stocks, we'll limit your use to just this guard. And maybe a few of his friends. What do you say?\" The guard standing behind Lana suddenly grasped her bare ass, making her jump and squeal in surprise. Lana squirmed away from his hand, careful as she moved away from the guard, not to move toward the inviting stocks.\n\n\"I'm sure!\" she croaked, her voice strained. \"Thank you . . . though,\" she added, feeling foolish as soon as she said it.\n\nThe magistrate looked at her thoughtfully, then shrugged. \"Very well, if you feel another spell coming on, just let me know and I'll take care of you.\"\n\n\"Oh, I-I will, thank you!\" said Lana, wincing despite herself. She wanted to tell the smug official to go to hell, but somehow the defiant words died in her throat, replaced by weakness. She watched the magistrate close the stocks finally, walking back toward her. Lana breathed out a long sigh, feeling like she'd just had a brush with extreme danger.\n\n\"Don't forget to call me Master, my dear,\" whispered the magistrate once he'd come close to her.\n\n\"Y-yes, Master, I'm sorry!\" she blurted, eager to say anything if it would get her away from the hanging stocks and the nipple clamps.\n\n\"Good,\" purred the magistrate, patting her affectionately on the bottom. \"You know, I think this tour is helping you. I like how amenable you've become, it's very charming. No more mocking, disrespectful comments from you. If I didn't know better, I'd say you're getting more comfortable in your new status.\"\n\nLana blanched, shaking her head. \"T-that's not true! I just . . . don't want to draw attention to myself . . .\"\n\nThe magistrate grinned at her. \"My dear, you are much too desirable and exotic for that to ever be the case. Come, let's continue looking around, shall we? There's so much to see!\" He leaned in and gave her a conspiratorial look. \"I want to see which kind of discipline appeals to you the most. Maybe we can find one that you're willing to partake in?\"\n\nLana smiled nervously at him. \"Oh, I-I'm happy with just watching . . .\" she said. \"There's really no need to . . .\"\n\n\"Nonsense,\" scolded the magistrate, taking her by the arm and guiding her away from the grunting, moaning bodies. \"Watching can be terribly frustrating. Don't you worry, we'll find something to your liking. Let's see, what do we have here . . .\" The man stopped her in front of a group of three men, and a sound of alarm came from her throat. There was a wooden platform just off the ground, and two pretty girls were tied to a beam and crossbar that went over their heads. Their arms and legs spread wide, and they were back to back, and gagged like Lana had been. Unlike her, they were completely naked, and they both squirmed as the three men touched and squeezed their helpless bodies. Their faces were red and flushed, and Lana could see their feminine juices glistening on their naked pussies. \"Ah, here we go,\" said the magistrate, gesturing to the two girls. \"These two are good friends, both captured together. As slaves, they won't be allowed to have favorites, they must treat all their fellow slaves equally. So they will be punished.\"\n\n\"Punished? For being friends?\" said Lana softly, not wanting the three men to hear her.\n\n\"Forgive me,\" said the magistrate, nodding. \"It's not a punishment, it's more like an education. Thank you for correcting me.\"\n\nLana groaned. It didn't look like education. The three men stopped touching the girls at the magistrate's words and stepped back. Lana could see the girls better now. The one facing her looked terrified, she was trembling slightly, her short but very curvaceous body drawn tight by her bonds, and her blond hair billowing about in the slight breeze. She had a young, innocent look to her, and Lana's heart went out to the girl. Behind the blond, the other one was craning her neck to try to see the magistrate. Lana could see that she was slender, with shapely hips, her breasts smaller but a lovely firm shape. Her straight brown hair had a pretty tinge of red, and when she turned, Lana could see her green eyes burning with anger and resentment. She heard the second girl murmur some sounds of encouragement to the frightened blond, as best she could through her gag. Lana admired the second girl's bravery. She must have been terrified, but she seemed more concerned about her friend's well being than what these cruel men would do to her.",
        "Then she saw two of the men at the station lifting a wooden pole, about six feet long and maybe an inch in diameter. The wooden pole wasn't straight, it was actually curved, and along the middle of the pole, she could see small rounded bumps sticking up about the length and girth of her thumb. It was all an intricate carving, she realized. Then she gasped softly when she saw the two men put one end of the pole down between the widespread legs of the two girls, maneuvering it through so the other man could grab the other end. With the curve of the wood, each end held by one of the men was higher, and the pole was lower in the middle where it was now below the crotches of the two women. The blond was now trembling in anxiety as she realized what was going on, and the pretty brunette was struggling, angry sounds coming from her gag. The men then raised the pole until it touched the two girls, raising it further as the girls went up as high as they could on their toes in a futile attempt to escape. Then they slowly began to move the pole back and forth in long slow strokes.\n\nLana watched breathlessly as the wooden thumbs each slowly pushed their way into the wet folds of each girl's pussy before slipping out and passing beneath them. Each time the thumb would pass under the girl facing Lana, the slave would jump as the thumb moved briefly against her anus.\n\n\"The men prepared them well before starting, so the wood will be quickly slickened with the juices. To avoid causing them excessive pain, you see,\" he added. \"We are not unkind to our slaves.\"\n\nLana shivered, for she didn't think that was quite the definition of kindness. Then again, she realized the girls seemed to be shuddering with pleasure, their fear replaced with a kind of dazed arousal. The girl facing Lana already seemed to be on her way to an orgasm, for her mouth was open and her breathing ragged through the gag.\n\n\"Now slaves,\" warned the magistrate. \"Do not be so eager to find satisfaction, for whoever cums first will be soundly punished by 10 lashes of the whip.\" Suddenly the demeanor of the two girls changed drastically. Pleasure was again replaced by fear, and the girl facing Lana shook her head pleading into her gag. Shorter than her friend, she was straining to get higher to escape the wooden thumbs that continued their slow passage between her thighs. Each passing thumb continued to make the girl shudder and moan into her gag, yet her lustful expression was now tinged with anxiety. Lana herself was feeling lightheaded, and she turned to the magistrate to voice her protest.\n\n\"You must stop this! This is . . . you can't . . .\" her voice trailed off as the absurdity of her statement struck her. They were slaves, like she was, and anything could be done to them.\n\n\"Does this distress you, my new slave?\" said the magistrate, looking at Lana. \"It is good that you feel compassion for your sisters in bondage. That is important for a slave.\"\n\nLana blushed at his backward compliment, but she shook her head, \"It's so cruel! The poor things . . .\"\n\nHe raised an eyebrow. \"Oh, yes, the pretty blond there, Aniya, she's a sweetheart isn't she? Would you like to take her place, is that it?\" The blonde's eyes perked up, and she had the most pitiful look of hope in her eyes. Lana however was mortified, as she imagined herself subjected to the endless processing of wooden thumbs. Her thighs clenched of their own accord, with a slight sound of wetness that she hoped the magistrate hadn't heard. \"Ah, you are filled with indecision,\" said the magistrate with a nod. \"Your body yearns to be tormented as these slaves are, but you fear the whip, should you be unable to hold out.\" He leaned in to whisper in her ear. \"Do not be fearful, my slave. The salve will give you an unfair advantage. You will avoid the whip, I am sure of it. Go on, indulge yourself. I can tell you want to just by looking at you,\" he added, his voice a soft, seductive whisper in her ear.\n\nLana groaned, shaking her head. \"Y-you're mad! There is no indecision! W-what . . . possible purpose could this be serving?\"\n\nThe magistrate looked at her as if she'd asked a foolish question. \"Well,\" he explained, \"the wooden arc lets us train or discipline two slaves at once, and it gives our overworked helpers a rest. It can be tiring you know, training female slaves for 8 or 10 hours a day, and, to be honest, a bit monotonous. These games keep the men interested. It's also fun to see which girl will hold out the longest. My money is on the brunette, of course.\"\n\nLana shuddered, thinking about how many captive women must pass through their training camp. She wondered what stage these two girls were in, how many days of training would Lana endure before her trainers became bored and subjected her to similar games. A soft sound escaped her throat, drawing the attention of the magistrate.\n\n\"I'm sorry, my dear,\" he said, reaching up a hand to caress her bare back below her bound wrists. He smiled at the way his touch made Lana shiver. \"Watching this must be driving you mad with desire.\"\n\nLana shook her head, and she swallowed heavily, for her throat felt terribly dry. She couldn't let him think she wanted this! Then she heard the blond girl crying out into her gag, she looked close to cumming, and her eyes were wide with fear. The other girl was craning her head again, and Lana saw a look of determination in the other girl's pretty green eyes. Suddenly the brunette was moving her own hips, grinding herself into the wooden pole.\n\n\"What is she doing?\" said Lana, looking back and forth between the magistrate and the brunette's frenzied humping of the slowly passing pole. The man only smiled at her and kept watching.\n\nThe blond girl seemed to realize what her friend was doing, and she shook her head, mewling into her gag, but her friend ignored her, moving her hips to hump the wooden thumbs with an aggressive but skilled motion. Lana gasped as she saw the girl's body start to stiffen, her movements getting even more frenzied, and then suddenly, she arched her back, a long garbled moan coming from her lips before she went slack, hanging by her arms, spent. The blond was shaking her head, looking at the magistrate, her eyes pleading for mercy for her friend.\n\n\"Ah, we have a winner, and a loser,\" announced the magistrate, clapping his hands. \"The loyal Jenifer sacrifices herself for her friend Aniya, how touching,\" he mocked, as several of the men chuckled. The two men holding the pole lowered it and removed it from between the girls' legs, then one of them used a towel to wipe their juices off the wood with surprising thoroughness. They were likely going to use it again, Lana realized with a shiver.\n\n\"10 lashes for our lovely Jenifer. And Aniya, for shame, letting your friend suffer such a cruel fate. Take her to the slave pit.\"\n\nThe blonde's eyes went wide, and she was shaking her head, tears beginning to stream down her face as she mewled pitifully into her gag. The men had to lift her then, for she collapsed, her legs buckling under her. \n\n\"What is the slave pit?\" whispered Lana, fearful of the answer but her curiosity overcame her fear.\n\n\"Do not worry about that,\" said the magistrate, placing a hand on Lana's shoulder. \"You are destined for far greater things.\"\n\n\"But what is it?\" demanded Lana, not wanting to push, but she had to know.\n\n\"Such curiosity!\" said the magistrate, patting her on the cheek affectionately. \"It will serve you well in here.\" When her inquisitive look didn't fade, he sighed. \"The pit is where the male slaves mingle when not working. Little Aniya will be dropped off there, to serve as recreation for whatever male slaves happened to be there. It's typically five or six, but at certain times of the day, it could be a dozen men. All of them quite backed up with seed of course - our male slaves don't get many chances to relieve themselves, you see.\"\n\nLana was gaping at him open mouthed. She tried to speak but nothing came out. It was unimaginable, and she searched his eyes, to see if he was telling the truth. Lana wished she had her powers back, but she had to rely on her ability to read men the old fashioned way. She decided he was probably telling the truth, and that made her feel faint, her legs buckling slightly.\n\nThe magistrate saw her condition and he reached over to squeeze Lana's ass, then gently tugged on the white string that went between her cheeks. Lana gasped as the string dug into her aching pussy. \"Do not worry, my lovely,\" purred the magistrate, squeezing her firm butt cheek again. \"We would never send you to the pit. But we have other punishments for the high-end girls like you, and they can be much worse.\"\n\n\"W-what could be worse than being used by a dozen men??\" croaked Lana, looking at him. Then her eyes widened. \"No! I don't want to know! Don't show me, please!\"\n\nThe magistrate chuckled. \"Well, I see that was educational for you. I think you are beginning to comprehend the futility of fighting your fate. That is good. Let's go see what else we can show you.\" The helpers took her by the arms again, walking Lana further into the courtyard. Her legs felt wobbly and her face flushed, and Lana couldn't stop thinking of what she'd just seen, and heard. How soon would they start doing such things to her, she wondered, and then she gasped as the little gush of liquid she felt between her legs. She tried to force the imagery from her head, but with each step, she felt the wetness rubbing between her thighs. She hoped they didn't really punish the girl for protecting her friend, that was just too cruel. As for poor Aniya . . . Lana tried to tell herself it was untrue, that they wouldn't really give her to a dozen male slaves.\n\n\"Ah, here we are,\" said the magistrate, approaching a large tent. At the entrance to the tent was a small table, and another man sat there next to some coins and a small scale. \"We charge for people to watch our special events,\" explained the magistrate. \"But of course, you will get in free of charge. But I'm afraid I must put your gag back in. We don't want to break the rules.\" Lana was too weary to fight, and she let the helpers put the gag back in her mouth, and tie it behind her head. Despite the feeling of helplessness in her gut, the gag seemed to make it even worse. Wearing the gag meant she would be unable to voice her thoughts, until they deigned to remove it at a later time. Until then she was truly helpless.\n\nThen the magistrate guided her inside, the seated man nodding as they passed through the doorway. There was a raised wooden platform, on which several small stations were placed, like the courtyard itself, only condensed to fit inside the tent. The stations were some of the same contraptions she'd seen outside in the courtyard. She saw a pommel horse, a pillory, and other stations that were beyond her comprehension, as well as several racks of implements like the previous room had contained. It was a room for sexual torture, she realized with a shudder. There were wooden benches on three sides of the platform, for spectators, she assumed. However, there were only a few seated there, all of them well-dress men, several accompanied by women in fancy dress. Lana suddenly felt her belly tighten in fear, but the magistrate did not bring her onto the platform, he instead brought her to the side of it, where she saw a row of women, kneeling on soft mats and facing the platform. All of them were nearly naked, and each had their wrists bound behind their backs like Lana.\n\n\"You are very lucky, Miss Torina,\" began the magistrate, turning to face her. \"Today we have two special guests visiting us from the capital. These men are Lord Nikos' personal guards, two of his trusted inner circle. They have come to our humble facility to interrogate a captured foreign spy deemed too dangerous to bring before Lord Nikos, at least until we break her.\"\n\nLana felt her stomach drop, and she instinctively tried to back away, but the strong arms of the helpers kept her in place. She stared at the magistrate, her eyes now wide in fear. She searched his eyes for double meaning . . . could he be talking about her? Did they know what she was? She glanced back at the torture stations, and it all took on a new terrible significance. Were they going to torture her here, in front of spectators? Lana suddenly felt lightheaded, and she began to collapse, caught by the arm of the magistrate, who was looking at her strangely. Just then, an opening at the back of the tent fluttered, and two men strode in.\n\n\"Ah, here they come now,\" said the magistrate, looking at the two men. Lana's eyes narrowed, for both men looked strangely familiar. Then she made a muffled sound of panic. Lana shook her head, no! It wasn't possible! She watched in horror as the two men walked to the center of the stage and began to address the growing audience.\n\n\"Welcome, guests,\" said the handsome blond man dressed in battle leathers which looked distinctly modern in manufacture, too compact and thin to be hand-made by primitive tools. \"My name is Henri, and this is my associate Varga,\" he added, pointing to the large, black-haired young man standing next to him. Varga's eyes were scanning the audience with disinterest until his eyes reached the kneeling slave girls. His eyes took in each one until finally he's eyes lifted to Lana, and then they stopped, causing Lana to nearly faint. Henri continued talking, but Lana didn't hear the words, she simply stood there, unable to breathe, her eyes on Varga. She wanted to look away, in hopes he might not recognize her, but she was unable to -- she had to know. Varga's eyes weren't on hers however, they were traveling up and down her naked, slightly trembling figure, and then finally he smiled and continued scanning the audience. Henri also caught notice of her naked form, but his eyes lingered only a short while as he continued speaking.\n\nLana finally took in a deep breath, shuddering as her fear subsided slightly. They hadn't recognized her. No doubt she looked quite different, for the last time they'd seen her she'd worn a white martial arts uniform and a ponytail. Now she wore nothing but a gag and that absurd string bikini bottom. It seemed unlikely then that she was the captured spy the magistrate had spoken of, but if she was their target, would they recognize her after spending more time with her? Lana panted, fear driving her lungs to make short, gasping breaths. How in the universe could these two be here, on Dellune, and so close to her? Of course, she thought. When the two boys were expelled from the Institute, Nikolai must have recruited them and brought them here to Dellune. They'd have been serving him ever since.\n\n\"Are you alright, girl?\" said the magistrate softly in her ear. \"You look like you've seen a ghost.\" Lana turned to him, shaking her head and making soft sounds into her gag. \"Oh,\" he said, suddenly. \"You are worried the torturers are here for you?\" He chuckled, reaching up a hand to caress her trembling cheek. \"You're not a spy, are you, pretty little one?\" Lana shook her head, her eyes pleading for his understanding. The magistrate just chuckled and then guided her to kneel to the right of the row of slave girls, and he sat down next to her, taking the last empty mat. Lana sat nervously, hoping that now she would blend in, as just another slave girl. She looked to her left, and marveled at the beauty of the kneeling slaves. Some were younger and a few older than she, but all were pretty and nicely curved. She was the only dark-haired slave, she realized. I'm not a slave! she reminded herself, suddenly. She cursed herself for falling into that thinking.\n\nHenri's voice drew her attention back. \"Now, let's introduce you to our special guest, a lovely but extremely dangerous young lady who was captured two days ago by our own skilled soldiers.\" Lana's stomach dropped, and she made a noise of panic in her throat. She looked up at Henri, but he wasn't looking at her, instead he was facing the rear opening that he and Varga had pass through moments ago, gesturing with his hands. Lana sighed, relief flowing through her like a warm flood of water. It wasn't her, just a strange coincidence. Perhaps Nikolai was so paranoid, he was capturing 'spies' on a regular basis.\n\nThe opening rustled then as two very large soldiers entered, their thick arms holding a slender naked young woman between them. She seemed to be unconscious, and the soldiers carried her light frame with two hands under her arms. Lana gasped in her gag, for even unconscious the girl was stunningly beautiful, with dark auburn hair in a thoroughly modern bob haircut that nearly touched her shoulders. Lana took in the captured woman's physique, marveling at her toned muscles and athletic body, even more impressive than her own. She was clearly some sort of fighter, her body harder and more muscular than Lana's, but her alabaster skin was almost inhumanly pure and white, and smooth. Not pale like a girl unused to sun, but almost possessing an internal light. Lana had never seen anyone who looked quite like her, and she felt a twinge of jealousy, mixed with awe.\n\nThe woman's ankles were encased in iron manacles kept together by a very short chain, and her wrists were bound before her in the same manner. The manacles were of the beefy sort meant to hold a male warrior, not a slender female. A short chain went from her wrists to a chain that tightly encircled her narrow waist. Her collar was thick iron instead of thin ornamental bronze like the one on Lana's neck, and a thick chain ran from the collar to the manacles that held her wrists imprisoned at her waist. A wooden ball gag was in her mouth, its leather straps tied off behind her head. They led her to the center of the stage, where two chains dangled a rectangular section of wood, containing two holes. The guard carefully took the wooden stock and opened it, pulling on the chains until it was able to reach the woman's waist. He then fastened the wooden stock around her wrists, and locked it, before carefully removing her manacles one at a time, clearly unsure she was really unconscious. A third guard then hoisted the chain, lifting the stock up above the girl's head until she was stretched tight. The two guards then spread her legs, locking each ankle into a heavy wooden block on the floor. When they were done, the girl was spread wide, the arms stretched tight above her head, and her legs far apart and taut. The position lifted up the prisoner's modest but perfectly shaped breasts, showing off her tiny pink nipples. Lana finally tore her eyes from the woman's beautiful curves to notice that Henri and Varga were standing there, eyeing the captured woman with great interest.\n\n\"Magnificent specimen, isn't she?\" said Henri to the audience. \"She may look harmless now, but we have lost more than a few men in the last two days, learning just how dangerous she is. Fortunately, we've also learned how to bring out some docility in this hostile and lethal beauty.\"\n\nThe audience was murmuring disbelief, and a few were chuckling, as if the two men were joking about the prisoner. Clearly they did not believe the story, for the girl looked harmless, strung up like a slave and stripped naked. Lana however was not so sure. She'd never seen a woman built quite like this one, and something about the prisoner set off her alarm bells. Henri noted their skepticism as is he expected it, and he gestured to Varga. Lana watched curious as Varga went and fetched a wooden bucket, filled with water, and placed it behind the sleeping prisoner. He filled two more buckets of water and placed them next to the first. Then Henri reached up and removed the sleeping female's gag.\n\nHenri gestured to one of the guards lounging around the courtyard. \"You there, come here.\" The guard looked around, making sure Henri was referring to him, and then he cautiously came over and stood at attention before Henri. \"What is your name?\" said Henri, to the man who looked older than he.",
        "\"Meegus,\" said the man, gruffly. His eyes were roving over the naked curves of the strung-up prisoner.\n\nHenri patted him on the back. \"Ah, Meegus, good. Would you do us a favor, and wake up the prisoner? Just . . . slap her on the face or something until she wakes up.\" The guard didn't answer, but his cruel grin said he welcomed the task. Lana watched as the man turned and walked up to the hanging prisoner, and promptly slapped her hard across the face. The woman stirred slightly but didn't wake, so the man slapped her hard again, this time against her breasts, then another one across her face. The prisoner groaned softly but her eyes remained closed. Lana made a muffled sound of protest on the woman's behalf, but of course she was ignored. The guard wound up with his right hand again, and then just stood there, his arm shaking slightly. The prisoner's eyes were open now. She had a piercing set of lovely green eyes, which instead of fear as might be expected of a female chained and naked, were flashing anger, focused on the man standing in front of her.\n\nThe woman looked past the guard and directly at Lana suddenly, and she felt transfixed, as if caught in the gaze of a predator. She blushed suddenly at the strange feeling of warmth that emanated from her belly. She'd never been attracted to a woman before, so the feeling was unfamiliar and a bit jarring, and she quickly suppressed it. Thankfully, the woman's intense gaze was quickly diverted toward the immediate threat, the guard who'd struck her.\n\nLana watched with fascination as the guard continued to stand in place, shaking slightly as the now-awakened prisoner stared at him. He started to make strange, low noises, as if he were being slowly strangled, but his arm continued to be frozen in place, ready to strike the prisoner. The guard's body began to shake more violently, and then the prisoner looked to the right. Lana followed her eyes, and saw a bored guard standing there suddenly draw his sword. The prisoner's head snapped to another guard to her left, and he too drew his sword and started advancing toward the cluster of people around the prisoner. Then Lana saw Henri move behind the prisoner, to pick up the wooden bucket. The two sword-wielding guards were raising their swords, and Varga appeared to be the target. Suddenly there was a splash of water as Henri doused the prisoner with his bucket. Lana saw her beautiful green eyes go wide with shock as she was inundated with freezing cold water, some of which splashed the guard and even Lana's bare legs, making her shiver. The two sword-wielding guards stopped suddenly, swords in the air, confused looks on their faces. The guard who'd slapped the prisoner went to his knees, suddenly, turning enough that Lana could see his face. She gasped, for his face was pale and he looked terrified, and he was coughing and sputtering, sucking in precious air to his starving lungs. Lana looked at the prisoner, and was surprised to see the girl shivering and shaking slightly, her eyes looking dazed. Powerful as she was, the water seemed to incapacitate her.\n\nHenri was moving around in front of the girl, gesturing for the two guards to return to their posts. Then he shoved the kneeling guard aside, ignoring the stricken man as he fell to the ground in a heap, clutching his chest and throat, gasping for air. \"Oh, don't worry about him, he'll be alright,\" said Henri to the crowd. \"Unlike some of the guards she attacked yesterday, without even touching them.\" The audience gasped, and Lana's eyes widened. Was she a telepath of some sort? She had seemed to control the two swordsmen mentally, and she had definitely frozen the third guard's arm, just like Lana had done. But she'd also somehow choked him, or hurt him somehow, without touching him, and that was beyond Lana's telepathic skill set. Then again, different telepaths developed different skills, and hadn't she learned to heal Warrick's heart with her mind? Perhaps this woman had learned to do the same thing in reverse? It went against the teachings of the Institute to use one's skill to inflict pain, but this woman was clearly not a graduate.\n\n\"Dangerous though she is,\" continued Henri, \"a nice bucket of near freezing well water turns her nice and pliable, isn't that right, sweetheart?\" Henri moved to the spread-eagled prisoner and reached up to touch her cheek. \"Your guards figured that out by pure chance, didn't they?\" Lana saw a mix of anger and perhaps a trace of respect in the woman's eyes. Varga was moving to come close to the prisoner as well, standing to her left, opposite Henri. \"You can't use your powers now, can you, girl?\" said Varga, reaching up his hand to caress her sides. Both men were now touching the prisoner, and the woman twitched slightly in response. Henri turned to the audience. \"You see, doused with ice-cold water, she's lost her abilities, temporarily, and she's quite docile. They'll return in half an hour, sometimes sooner, a fact we learned the hard way.\" Varga's hand then moved to the woman's bare breast, cupping and squeezing her, while Henri dropped his hand to her waist.\n\nHenri continued, \"In the last two days, we've discovered this powerful, but lovely assassin is also . . . a little wanton slut.\" Henri's fingers moved to the woman's crotch. He turned his body so the audience could see him softly fingering the prisoner's tight, hairless pussy, tracing the outer lips of her womanhood gently with his fingertips. Varga moved around behind her and brought both his hands to her breasts, squeezing and teasing her firm mounds and softly flicking her nipples. The woman glared at him, but Lana thought she could see a subtle change in the prisoner's demeanor. \"Do you like this, little slut?\" said Henri, his fingers continuing their teasing explorations.\n\n\"I do,\" said the prisoner suddenly, smiling sweetly at Henri. \"Perhaps I will enjoy myself for a while before I kill you.\" Hearing the woman's voice for the first time was a revelation for Lana. She spoke with a strange lilt, a tone that seemed to vibrate inside her, like listening to pleasant acoustical music.\n\n\"Oh, I know you do,\" said Henri, his fingers changing subtly to gently tease the prisoner's clit within its delicate folds. The woman made a soft hiss, like a sucking in of her breath, but otherwise showed no expression. \"You are so sure of yourself that even naked and in chains, you don't fear us, isn't that right?\"\n\nThe woman smiled, her beautiful face not quite able to appear evil, but it was a close thing. \"What is there to fear?\" she said. \"I am enjoying your feeble attempts to intimidate me.\" Meanwhile Varga was rather vigorously mauling the prisoner's breasts, in contrast to Henri's gentler, more skillful touches, and the woman sucked in a sharp breath as his thick fingers pinched her now thickening pink nipples. She turned to address Varga behind her. \"You on the other hand, I will drain your life like a bird drains the sweet nectar from a flower.\" Varga stopped suddenly, looking uncertain, until a glare from Henri made him resume his crude manipulations of the woman's pert breasts and swelling nipples. At the same time, Henri suddenly delved two fingers into the woman's tight, moistening crevice, and her gaze shot back to Henri.\n\n\"I've got your attention, haven't I?\" said Henri softly, his fingers slowly pushing deep until his knuckles prevented him going any deeper, then slowly withdrawing. His thumb moved to gently and skillfully massage her clit, while his fingers continued their slow pistoning motion. The girl jerked suddenly in her bindings, an unbidden movement that started in her hips, and seemed to surprise even her. \"It's hard to resist, isn't it?\" said Henri, his voice a caress. Suddenly he entangled his hand in the prisoner's auburn silky hair, and pressed his lips to hers, engaging her in a kiss, while his fingers continued their deep explorations. The prisoner made a soft noise in her throat, fighting against the kiss for a moment before to Lana's surprise, she seemed to respond, returning the kiss. It went on for some time before Henri retreated, or tried to. He jerked suddenly, not able to pull away, and then his head snapped back and he was free. He reached up to his bloody lip, and Lana saw the prisoner smiling, blood on her lip. She must have bitten him, for Henri cursed, his hand moving to his mouth.\n\n\"Too rough for you, little man?\" said the prisoner with a wicked grin. Henri glared at her.\n\n\"You want to play it rough? Alright, that's how we'll play it. Varga, douse her again, just to be sure.\" The prisoner's smile disappeared, replaced by anger, and then shock when her back was hit with another bucket of icy water. Lana jerked as the spray hit her bare thighs, and she glared at Varga as well. What she would do when she got her powers back! She noticed that the prisoner seemed dazed again by the cold water. Lana thought it strange that the cold would seemingly incapacitate the woman, but everything about the mystery prisoner seemed a little strange. \n\nThen Henri gestured to the guards, the ones who'd previously raised their swords under the control of the prisoner. \"Let's lock her into a more supplicating position, shall we?\" Lana watched in fascination as the two guards moved to the prisoner, who was still dripping wet and shivering. They took a wooden pole that was placed off to the side, and placed it in two cutouts of the posts to right and left of the prisoner, such that the pole ran in front of her belly, just touching her. Then they reached up to undo the rope that held the prisoner's wrist stocks over her head. One of them then went to a wheel attached to a winch, and began turning it. The winch began retracting the rope that held the prisoner's wrist stocks. Within seconds, the rope tightened up, and began to pull the girl's wrists out front away from her body. Realizing what was happening, the prisoner, dazed by the freezing water, started resisting, pulling with her wrists. The guard continued turning the winch, and the prisoner, despite her struggles, found her upper torso pulled forward, bent at the waist by the wooden pole. Lana blushed, imagining the poor woman's shame as she was stretched forward helplessly by the power of the winch, until she was completely bent at the waist, her arms straight out ahead and her face and damp hair pointed toward the wooden floor of the platform. The guard tied off the winch, and then moved to the post at the side of the prisoner. He turned a winch located there, and his partner did the same on the other side of the prisoner. The stocks holding her ankles were pulled in opposite directions, spreading her legs wide, despite her struggles evidenced by her taut thigh muscles and straining abdomen. The two guards retreated to their original positions.\n\n\"Thank you gentlemen,\" said Henri, moving around to stand next to the prisoner to pat her on the ass. He turned to the audience. \"As you can see, my distinguished guests. The prisoner is now in a much more respectful posture.\" He kneeled down next to the prisoner's head, and she turned to glare at him, her green eyes looking ready to burn holes in his flesh. Henri reached up to cup and fondle her dangling breasts. He looked up at Varga, and Lana saw the larger man move around behind the prisoner. \"Are you ready to receive your gift?\" Henri continued, clearly enjoying himself. \"My friend Varga is quite well endowed, you will find.\" Then there was a rustling sound, and Lana and several of the slave girls gasped as they saw Varga undoing his trousers and pulling out an already semi-erect cock. It was indeed impressive, and Lana's eyes widened at the sight, and she felt a twinge of heat between her thighs. She hadn't seen many male organs before, but this one had to be on the large side, such that she wondered if it would even fit in her own . . . quickly Lana shook her head, pushing all such thoughts from her mind. She was thinking like a pleasure slave, and it had to stop!\n\nThe prisoner looked behind herself to see Varga holding his manhood, and then she turned to Henri.\n\n\"I'll take you, not that idiot back there,\" she said, her tone commanding.\n\n\"You'll take whoever we decide to give you,\" corrected Henri, jovially. Suddenly the prisoner started, her eyes going wide as Varga began stroking the bulbous head of his thick organ along the already moist outer lips of her womanhood. Henri smiled. \"You like that, I see.\"\n\nThe prisoner sort of shrugged, as much as was possible in her awkward bent-over position. \"He's not as gifted as the men I'm used to, but I suppose I can't be too picky.\"\n\nLana wondered if she was showing bluster, for she'd seen the woman's own opening, and it seemed no larger than her own. How could she be used to men even larger than Varga? She marveled at the woman's calm. She was about to be taken against her will, and she acted as if this were all her idea! Was it all an act? Act or not, Lana could see that the prisoner was aroused, for as Henri continued to play with her dangling breasts, her nipples appeared to be stiff and sensitive, from the way she would react when Henri pinched them. Behind the woman, Varga continued to play with her pussy, which was exposed by her widespread legs and bent over posture. With one hand on his now stiff and still growing cock, he pushed his head up and down the woman's slit, sometimes running the considerable length of his cock under her, rubbing its length on her wet crevice, while his free hand squeezed her perfect peach-shaped ass.\n\n\"Get on with it!\" hissed the prisoner suddenly, her hips now moving in tune with Varga's teasing cock. \"Put that thing inside me, let's see what you're made of!\" Lana gaped at her commanding tone, completely out of character from a bound, naked prisoner.\n\n\"Yes, stick it in her!\" piped a female voice to her left. Lana looked to see one of the kneeling slave girls suddenly looking frightened, realizing she'd spoken without thinking, but the men only chuckled, and the slave girl appeared relieved. Lana noted that all the kneeling girls seemed slightly agitated, their faces flushed and the bodies moving slightly as if they were fidgeting. She herself felt overheated, her face felt warm and the juncture between her thighs felt warm and slightly uncomfortable. Lana cursed herself for finding arousal at the sick machinations of her hated former classmates, and willed her body to be inert.\n\n\"Oh! Yes!\" cried out the prisoner, suddenly, her mouth falling open as Varga slowly plunged his cock into her tight furnace. \"Not bad at all!\" added the woman, as Varga impaled her to the hilt with his manhood. As the large man began slowly driving himself into the prisoner, the woman moaned, pushing her hips back to get the most of him. \"Yes, do it!\" she shouted encouragement. Lana looked about the audience and saw looks of confusion that matched her own. Clearly the audience did not expect such a reaction from a captured prisoner being defiled in public. In a short while, Varga's movements became faster and more aggressive, and Henri continued to tease the prisoner's breasts from his kneeling position. Lana looked at Henri, and she frowned. Outwardly he was smiling, as if he was casually doodling with the woman's breasts, but she noted beads of sweat on his brow, and she realized he was heavily concentrating, not paying attention to what his hand was doing. She looked over to Varga, and realized the same - his body was ravaging the prisoner, but his mind seemed to be elsewhere, focused intensely on something. Suddenly her eyes widened - they were using telepathy, projecting perhaps?\n\nVarga seemed to be reaching a climax, pounding himself hard against the prisoner's toned ass, which for her part was slamming back at him as she herself seemed to be well on her way to orgasm. Lana watched breathlessly as both prisoner and Varga reached a thundering climax, Varga grunting and the prisoner crying out with pleasure. Henri was no longer even touching her breasts, for he seemed in a trance, his mind focused on something. Finally, as Lana watched him warily, he smiled, his face relaxing and his attention returning to the present. Henri stood, patting the panting woman on her bare back as she gasped for breath, her orgasm winding down. Henri turned to the crowd, his satisfaction obvious.\n\n\"You see, folks, the assassin loves to be used by strong men, she is truly a wonton slut. But what she may not realize is that when she becomes highly aroused, her mind begins to slowly open up to us, like a budding flower. Her mind, normally impregnable to a . . . modest telepath like myself, becomes an open book when she is in the throes of passion. The last few minutes were certainly educational, thank you, my dear,\" he added, patting the prisoner on the head.\n\nAs he'd been speaking, the woman's eyes had narrowed, and it occurred to Lana that perhaps the prisoner didn't realize this vulnerability, or didn't believe it. Lana knew it first hand, for Warrick had shown her how his intimate touches had greatly impeded her telepathic ability. This woman must have been the same, if Henri was to be believed. Then it dawned on her. The prisoner, a telepath herself, didn't seem to know Henri and Varga were telepaths. She probably thought she was the only one, and had nothing to fear.\n\nHenri turned to the woman. \"You are fearless, and a powerful warrior no doubt. However, we were able to learn something that does frighten you,\" said Henri. \"What do you think about that?\" Then he went silent, and Lana watched with trepidation as the woman looked from one man to the other.\n\n\"You two are telepaths? Your minds are so weak I didn't even notice. You fools couldn't break into the mind of a rodent,\" she spat with disdain. \"Tell me, what am I afraid of?\" she added, dismissively.\n\nHenri paused for effect. \"Water, as we know already. But more than that, electricity. You're terrified of it. But you know it's not a danger on this planet,\" said Henri, smiling at the prisoner's look of surprise and shock.\n\nThen he moved around beside her to pat the prisoner on the ass. \"It's true, these people have no understanding of electricity.\" He turned to the audience. \"Electricity? Anyone know what that is?\" He got blank stares in return and he chuckled, turning back to the prisoner. \"But you're in luck, my dear,\" he said, his voice tinged with a sickening sweetness. \"Varga and I come from another place. A place that does know electricity. And we brought some toys with us. I have just the thing for you, that should make you a bit more malleable.\"\n\nThe prisoner's eyes widened, her expressions of anger and supreme confidence now replaced by an unfamiliar emotion. Concern. Henri smiled as he walked to the table and opened a black case. He made a show of rummaging around before selecting something and returning to stand in front of the prisoner. He held it up to show her. It was about the length and girth of Lana's middle finger, and it was made of a shiny metal that could only have come from modern manufacturing. In Henri's other hand was a small device, like a comm device from home. The prisoner was watching Henri carefully as he moved the shiny finger against her bare breast. He then pressed a button on the display of his comm device, and there was a sharp snap, and the prisoner jumped visibly, her voice registering the painful shock.\n\nHenri had also jumped, and he laughed. \"Oww, stupid me, I shocked myself! Let's put this somewhere safe so I don't hurt anyone. Well, except you, my dear,\" he added with a chuckle. He turned to his partner. \"Varga, fetch some of the Dragon's Flower, I'll use that to lube this up a little.\" Varga went to the cabinet and returned with a small vial similar to Lana's. He opened the top, and Henri used his finger to take a little and smear it all over the metal finger.",
        "\"There now--she is---ack\" His mouth was hanging open but no more words were coming out. Lana watched fascinated as Henri moved a hand to his throat, as if choking on a piece of bone. The prisoner, she realized. She must have got her powers back. Henri was turning red, and he made a wild gesture to Varga, who was watching with alarm. \"Wat--er!\" he choked.\n\n\"You thirsty?\" said Varga, looking at his partner, no doubt thinking it was a strange time to get thirsty. \n\nHenri pointed frantically at the prisoner. \"N-not me! Pri-son-er!\"\n\nVarga's slowly began to comprehend, and then his movements were quick. He dashed to the pair of water buckets, picking one up. He moved to toss it on the bent-over prisoner, and suddenly his arms wouldn't move, the bucket frozen in mid-air. He looked at the bucket with confusion. There was a grunt of desperation from Henri, and then still clutching his throat, he moved to the prisoner, and roughly jammed the metal finger into her bottom, drawing a grunt from the woman. With his face turning a sickening reddish color, his free hand fumbled with the comm device, finally pressing a button. The prisoner's head shot up suddenly, her voice crying out and her eyes wide in shock. Her body shook slightly as the electricity rippled through her. Henri gasped for air, his throat no longer constricted, and Varga, his hands suddenly free, doused the prisoner and Henri with his bucket of water, leading to a scream from the prisoner, and a shriek and string of curses from Henri.\n\nLana ignored Henri's angry words, and instead was focused on the prisoner. The girl was shaking and shivering, and Lana thought she could hear the hum of the metallic finger which Henri had inserted in the struggling woman's ass. The prisoner was straining in her bonds, and it wasn't hard to guess where was the source of her obvious debilitating agony.\n\n\"Oh, sorry, dear,\" said Henri suddenly, pressing a button on his comm device. Suddenly the prisoner stopped shaking, and instead hung limply in her bonds, her head dangling low between her outstretched arms as she gasped for breath. Henri moved to caress her back, and the woman jerked as if shocked. \"You poor thing,\" said Henri with mock sympathy. \"All that cold water and the electric shocks make you sensitive, don't they? Well don't worry, I'll set the device in your dainty bottom to go off once every 10 seconds. That'll be enough to keep you in line, won't it?\" The woman turned her head and glared at him, but he ignored her, typing on his device and stopping when he heard a beep from it. \"There we go,\" said Henri, with an exaggerated button press. The prisoner jerked, her eyes going wide for a second before the humming stopped and she relaxed a bit. Henri counted out loud to 10, and the woman jerked again as the anal plug sent a quick jolt into her. She shot Henri a look of hatred.\n\n\"I'll kill you,\" she said, her voice strained and breathless.\n\n\"Perhaps you should have when you had the chance,\" chuckled Henri. \"Because now, we're going to teach you a little humility, and wipe that smug confidence from your pretty face.\"\n\nLana looked to the prisoner, and indeed, her look of supreme confidence was wavering. The hum coming from her invaded bottom came again, and the prone girl gasped and stiffened, her expression slowly changing to doubt. Lana shivered, for she knew firsthand how ruthless Henri and Varga could be, and they seemed to have found the weaknesses in this mysterious woman, who was even more powerful than Lana. Somehow that realization made her own captivity seem even more frightening, and Lana suddenly wanted to will the prisoner to fight, to resist, for both their sakes. If this strong, confident telepath couldn't hold up to Henri and Varga, what chance did Lana have? If they realized who she was, they'd do even more terrible things to her.\n\nLana shuddered as she watched the prisoner jerk and strain again to the electric shock from the anal plug. She wondered how these two men, former students of the Institute, could have such depravity inside them. Henri seemed to read her mind.\n\n\"Oh, I'm terribly sorry, my dear, I know it must be uncomfortable,\" said the young telepath. He was moving around behind the panting prisoner, and then his hand went between her widespread legs. Lana couldn't see exactly what his hand was doing, but the prisoner gasped, her arousal quickly returning as Henri teased her with his fingers.\n\n\"How dare you!\" hissed the woman, her breathing growing ragged, clearly not able to resist Henri's skilled fingers. And every time the anal plug zapped her, she jerked, gasping for breath. Lana could see in her eyes the worry, that perhaps the situation was getting away from her.\n\nHenri smiled. \"Oh, not so cocky now, are we? I thought you were enjoying this?\" The woman only glared at him, and then she gasped as he slipped two fingers inside her. \"Now be a good girl and open your mind to us. I want to know why you're so frightened of electricity.\"\n\n\"Go to hell!\" gasped the prisoner, biting her lip when the electric shock rippled through her again. The helplessly bound woman seemed to now be tensing up before the 10 second count, as if anticipating the shock, but each one seemed to shake her a little deeper, and erode her confidence. Lana saw her testing her bonds, pulling on the stocks on her wrists, and trying to lift her legs, but she was held fast. Her eyes seemed to be getting a little wider, darting about helplessly, all the while Henri's delving, teasing fingers rekindled and stoked her inner fire.\n\n\"Make her cum,\" said Varga, his voice husky with desire as he stroked his cock, slick with his juices and that of the prisoner. \"When she cums, her mind opens up completely.\"\n\n\"No!\" hissed the prisoner, \"I'll decide when I cum, not you fools.\" But her voice lacked the conviction from before, and Lana could see that the poor woman's arousal was growing beyond her control. She was no longer a willing participant in her own defilement. Now she was moving her hips a bit frantically, trying to escape Henri's fingers. Varga knelt down next to her, reaching up to squeeze and pull on her dangling breasts, smiling as she moaned in response.\n\n\"You're much too sensual to resist us,\" said Henri. \"Just give in to the pleasure and enjoy it like you did before.\"\n\n\"No!\" gasped the prisoner, shuddering as the plug shocked her yet again. She seemed to have trouble controlling her breathing, which was now coming in short gasps, punctuated by sharp intakes of air when the buzzer went off.\n\nSuddenly the magistrate's hand appeared on Lana's thigh, and he leaned in to whisper in her ear. \"You too must learn to give in to the pleasure, my dear. Spread your legs, your posture is getting sloppy.\" Lana quickly widened her legs and straightened her back, not wanting to draw any attention to herself by displeasing the magistrate. \"Good,\" he whispered in her ear. \"Are you enjoying the show?\" \n\nLana shook her head, without thinking. Her answer unfortunately was what the magistrate had expected, and he gently slid his hand up her inner thigh to touch her intimately. Lana gasped, getting up on her heels as she tried to escape his touch.\n\n\"Oh dear,\" said the magistrate with a chuckle. \"You are soaking wet, little slave. Has all this been too much for you to handle?\"\n\n\"P-please, don't!\" whispered Lana, squirming as his finger traced a wet, sticky circle about her opening.\n\n\"You are so wet down there I can barely tell what I'm touching,\" said the magistrate with amusement. \"I'm terribly sorry for neglecting you. We must see to your needs as soon as possible.\"\n\n\"No, no!\" whispered Lana, trembling with need, but terribly fearful of whatever he might do to 'see to her needs'.\"\n\nTheir attention was brought back to the prisoner by Henri. \"Let's see if you can resist this,\" he said to the prisoner, suddenly pulling out his own stiff member from his pants. Lana gasped, watching as without a pause, he pushed himself into the woman's quivering folders, which accepted him eagerly with a wet and humiliating sound. The prisoner arched her back, crying out with pleasure before she started shaking her head, seemingly trying not to give in to what Lana knew must have been deliciously seductive sensations. \"Cum for me, little slut,\" said Henri, working himself deeply into the warm, slick confines of his prisoner. Lana's own insides clenched, and she prayed the magistrate couldn't feel her response. Then his fingers stroked up and down her wet folds and she moaned, biting her lip to stifle the sound. The last thing Lana wanted was to draw attention to herself, and lose the safety of anonymity.\n\nPerhaps the magistrate thought the same, for he leaned in close and whispered, \"You must be silent, my dear, it would be rude to disturb the Masters work.\" Yet despite his words, he continued to stroke and explore her aching flesh, making Lana whimper through her tightly closed lips as she tried to keep silent. As Henri worked his victim in front of her, and the magistrate worked Lana mercilessly, she quickly gave up trying to fight the overwhelming pleasure and instead try to will herself to cum, to give herself some measure of relief. Soft sounds escaped from her throat as she squirmed, leaning toward the magistrate as if to encourage him to touch her more deeply. Yet somehow she could get no closer to cumming, and she whined in helpless frustration.\n\nThe magistrate whispered in her ear. \"The salve makes your orgasm elusive, my dear. But I love the little noises you are making, and I applaud your efforts; you're turning into such a good little slut.\" Lana gasped in horror at his words, and she suddenly felt a burning humiliation. She'd debased herself for nothing, he had no intention of letting her cum! Then the magistrate removed his fingers, the intense pleasure of his touch replaced by an aching sense of need and loss. Lana felt a gushing sense of disappointment, which she tried unsuccessfully to suppress. She did not want to give in to her base needs, or all would be lost! But he made it so difficult . . .\n\nHenri meanwhile was eager to make his subject reach a climax, working her deeply and from different angles, even using a hand to tease her clit while he stroked himself in and out. The prisoner was getting more agitated. \"No!\" she choked, wiggling her hips in a futile attempt to escape Henri's plunging cock and teasing fingers. She was straining against the wooden bar that kept her hips in place, and pulling uselessly on the stocks that held her wrists out straight. Her breathing was getting out of her control, sharp and ragged gasps of air punctuated by her moans of pleasure. Lana decided she must have been strong, for she herself would have likely cum long before. Yet even the prisoner seemed about to succumb.\n\n\"Cum!\" commanded Henri, ramming her hard and mercilessly, while Varga pulled and pinched her sensitive nipples.\n\n\"No, I will not!\" moaned the prisoner, but it was clear even to her that she would soon fail. The woman fought, straining and biting her lip, but the sensations were too good, Lana realized, knowingly. Henri continued calmly plundering the woman, who became increasingly frantic, no longer able to control her moans, her face red with unbidden desire and a loss of control. Suddenly Henri grunted, pumping hard as he came inside the prisoner, who came herself, crying out, her back arching as Henri pumped his seed into her shuddering body. Lana doubted he could control his own telepathy at that moment, but she saw Varga concentrating heavily while the other two completed their powerful climaxes. Finally after a long pause, Henri pulled out, tucking his cock inside his pants and moving around the prisoner while he patted her affectionately on the ass.\n\n\"What did you see?\" he asked of Varga, who was standing himself and smiling. \n\n\"You're going to love this,\" he said, grinning as he looked down at the panting prisoner, hanging limp in her bonds. \"Just like I said, when she cums, she leaves her mind wide open. I could tell she was trying to close her mind this time, now that she knows we're telepaths, but the shock treatment seems to scramble her powers for a short time, so I could get in easily.\"\n\n\"And . . . what did you see?\" asked Henri, half facing the audience as if he were a showman.\n\n\"When she's turned on, she slowly loses her powers. She's waiting for us to let her rest, let her arousal dissipate, so she can use her powers to escape,\" said Varga. \"And she thinks she can't escape as long as that thing is buzzing her ass.\"\n\n\"I'll kill you!\" hissed the prisoner at Varga. Yet her expression did not match her words. Lana could see fear in the woman's eyes. She'd underestimated Henri and Varga, and they'd found a great vulnerability hidden in her mind.\n\n\"Yes, I see, I can read her too . . .\" said Henri, concentrating and reading her still open mind. \"She fears if she's kept in an overheated state too long, it could take days to recover any of her powers, even longer. That means,\" continued Henri, pausing and facing the audience. \"If we keep her in a constant state of need, she'll be powerless to escape, and we can train her like any other pleasure slave.\"\n\n\"You bastards!\" gasped the prisoner, struggling meakly in her bonds, clearly exhausted. Lana saw Henri holding up a gag he pulled from his pocket.\n\n\" I think we've had enough of your disrespectful tone, my dear,\" he added, moving to the prisoner.\n\n\"No, don't you dare-mmmph!\" the prisoner struggled helplessly as Henri gagged her, cutting off her words. He stepped back, smiling down at the frantically thrashing prisoner. Lana gasped, for the gag was actually a large ring, that held her mouth open. After a moment she realized the purpose, for with that ring in her mouth, she'd be unable to close her jaws, should a man decide to use that orifice for his own pleasure. The ring was just the right size for a well-endowed cock to fit. Lana shuddered at the cruelty of such a thing.\n\nHenri spoke to Varga, his voice loud so everyone could hear. \"Leave the plug in her ass overnight, and give her one for her pussy as well, just a vibe, not an electric one. And make sure it's set low enough she can't cum. Then tell the guards to visit her and keep her company whenever their shifts allow. Make sure they understand they can cum, but she can't. They can use her mouth, but if they want to fuck her, make sure they put the vibe back in afterwards. Set it up, and we'll see how amenable she is after a night of our hospitality.\" Then he gestured at the guards, and Lana watched, feeling lightheaded, as the guards took away the prisoner, who was now struggling and mewling into her gag, fear in her eyes. It was a far different sight than the confident, cocky woman they'd brought in an hour before.\n\nWhen the prisoner was out of sight, Henri turned to the audience, then looked down at the kneeling slave girls. Lana kept her eyes down as his gaze moved up the line. \"Did you see that, girls? That prisoner thought she was too strong for us. She was wrong. None of you stand a chance, we will break you each in turn, and mold you into the best pleasure slaves you can be. When you feel the urge to rebel, think of this prisoner. If we can break her in an hour, what do you think we'll do to you?\"\n\nLana was trembling, terrified that Henri or Varga would suddenly recognize her, and focus their cruel imaginations on her. When Henri asked the kneeling slaves for their agreement, she eagerly nodded her head. And she silently begged Warrick to get better and come rescue her. The slave camp was too much, too cruel and too depraved for her to handle. She needed to escape, or she feared her will might crumble when their attentions finally turned to her."
    ],
    "authorname": "Tanuki",
    "tags": [
        "bdsm",
        "non-con",
        "slave girl",
        "orgasm denial",
        "gag",
        "female submissive",
        "fantasy",
        "slave training",
        "telepathy",
        "sci-fi"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/agent-in-distress-ch-10"
}