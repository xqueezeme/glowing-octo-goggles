{
    "title": "The Twelve Zenati Pt. 22",
    "pages": [
        "Authors note: Hello everyone. I hope those of you who have enjoyed this series continue to do so. ~ellie. \n\nPart 22\n\nMarcella woke slowly, from a hot dream featuring Noah. He'd done everything right since blackmailing her into letting him stay with her, especially his day. This glorious day where he seemed determined to cross off every adventurous desire on her bucket list. It was difficult not to succumb to his evident desire for her. He had not only shown her how much he wanted her, but his words had told her in no uncertain terms just what he wanted at the end of this baseball bet she had made with him. If she was honest with herself, she was more than a little horny herself from all his attentiveness and that dream... if he was even half as good, she would be well and truly satisfied.\n\nGiving in to him sounded like a fabulous idea as long as he knew it was a one time only deal. Just today, just because she wanted to scratch her itch not because anything was happening between them because she had a job to do and she didn't want him getting in her way because he felt some proprietary affection for her. No, their relationship needed to stay out of the bedroom except for maybe this one day. This perfect day. He'd gone to a lot of trouble to do put this day together for her. It would be rude not to give him something he so obviously wanted in return. \n\nA slow, languorous smile spread over her lips as she stretched out her body, feeling like she has just run a marathon. Riding a jet ski after an indulgent lunch had finally exhausted the last of her reserves of energy. When they had come back on board, she had sat on the couch with another glass of the fantastic homemade lemonade and Noah had rubbed her aching shoulders and neck pressing light kisses along her skin. She had been so relaxed she must have fallen asleep on him. Literally on him! \n\nShe groaned and blinked her eyes open, taking in her surroundings she acknowledged that she must have been deeply asleep in his arms and he must have carried her here because she couldn't remember making her way into this room. Her eyes opened wide with her intake of breath at the implications, and she ran her fingers down her body, letting out a sigh as she realised that she was still dressed as she had been when she fell asleep. \n\n\"Sleep well?\" Noah asked, humour lacing his voice as he watched her go through a range of emotions upon waking. He was curious what had made her smile, but he knew what the last gasp and sigh were about and it both amused and angered him in equal measure that she thought he would take advantage of her unconscious state to molest her. Not that the thought hadn't crossed his mind at least once before he called himself a monster and took a cold shower.\n\n\"How long was I out?\" Marcella croaked; her voice still thick with sleep. She rolled toward his voice and found him stretched out on his side beside her, his head propped on one of his hands.\n\n\"A couple of hours, but I did wake you very early this morning, so I don't mind having to change some of the plans I made for us,\" he smiled softly. \"I probably packed more than was necessary into this day. Have you had fun so far?\"\n\n\"Yes,\" Marcella admitted. She pushed her hands into the soft mattress and scooted up the bed a bit, leaning back against the headboard, so that she wasn't in such a vulnerable position with him. \"It's been an amazing day,\" she sighed and looked down into his face, happy with their change of positions.\n\n\"Why the sigh, then?\" he asked, genuinely concerned.\n\n\"Last vestiges of sleep,\" she said, as she waved away his concern. The truth was that today was too much, he was too much. He was giving her everything she had said she wanted: adventure, adrenalin, no real-world pressures... and, at least for today, he had managed that, and at least for today, she was going to let him continue doing that and making bases as he put it. Then a horrible thought occurred to her. \"I left my phone with our gear at the skydiving place. Can we go pick it up? I need to send a message to Olivia, and I would hate to miss a call from Bea.\"\n\n\"No.\" Noah shook his head, but his lips curled up in a smile as Marcella began to protest. He held up his hand to stall her. \"No, we don't need to go and pick up our phones. They have been in the storage bin from the quads the whole time,\" he chuckled. \"I knew you would ask for it eventually. I'm surprised that you lasted this long without it,\" he teased.\n\n\"May I have it, please?\" Marcella asked, rolling her eyes at his teasing.\n\n\"Will that get me to third base?\" He waggled his eyebrows at her. He was enjoying the range of emotions, which she usually kept hidden from the world, showing so plainly on her face. She was disarming like this, with her muddled thoughts and sleep-tussled hair. He wanted nothing more than to kiss her again, and more, so much more.\n\n\"What does third base entail, exactly?\" she questioned, her eyes narrowing as if pretending to weigh up whether getting her phone back was worth the price that he wanted to exact from her. She wondered how long she should hold out after having made the decision to go with the delicious feelings for just this one amazing day.\n\n\"Well...\" he said, measuring his words. He moved closer and reached out to stroke his fingers softly along Marcella's jawline to the side of her neck, his fingers curling around her neck into her hair. \"It would include first base, naturally,\" he crooned in a low voice and lowered his lips to hers.\n\nMarcella knew that she should push him away. The sensible and sane part of her brain that hadn't been overridden by hormones and desire screamed at her to stop this before it went any further. Yet the strange pull that she had felt towards him, from the first day he had shown up in her room at StarCity, stilled her protesting sensible side. No matter how hard the logical side of her brain screamed at her that letting down her guard with Noah was dangerous, she wanted this kiss, his hands caressing her and making her feel... feel what? Things she hadn't felt for a long time. Sex, she knew and used as a weapon in her arsenal, to be wielded to get what she wanted, as it had been with Vincent Vega. This, however, felt different, this felt as dangerous as any of the activities they had enjoyed that day so far.\n\nIt wasn't that she didn't enjoy sex, she did. She liked it when she was in control of her own pleasure. With Noah, however, she knew that there would be a struggle for dominance, one she could very well lose, and she had spent the last decade of her life refusing to submit to anyone. Even with Apollo, whom she had trusted more than any other at the time, she had held back, and he had found the full submission he required in others. All thoughts of Apollo and anything else, aside of the man who now took her mouth in a deep soulful kiss, fled her mind as she closed her eyes and just let herself feel the gentle dominance of the man beside her. It was like he was sharing with her rather than taking from her or giving her power over him.\n\n\"As well as second base,\" Noah murmured, in the small break in their kiss, before running his large hand down over her shoulder to her breast. He had felt the moment of her surrender and pushed further at her walls that usually held him at a distance. He pressed his body close to her side, letting her feel how aroused he was through their thin clothes as his hand ran over her body, making her breathing quicken with the long, slow, worshipping strokes of his hands, echoing the strokes of his tongue against hers. \n\n\"And third base includes?\" she whispered breathlessly, allowing him to give her this pleasure. In her mind she balanced her needs by telling herself that he asked for permission, she was allowing him to do this, he wasn't taking his pleasure by force, and she could just as easily stop him at any time. She was not submitting to his wants and desires; she was allowing him to give her what she wanted, what she desired.\n\n\"Skin on skin,\" he murmured huskily and pulled at the tie on her sarong.\n\n\"The bikini stays on,\" Marcella commanded, the strength in her voice surprising both of them. She would allow him to unwrap her body from the sarong, but that was as far as she was willing to go at this point. He wasn't batting a home run after all. At least not yet. She needed to make him work for that a bit harder.\n\n\"Fine by me,\" he murmured, retaking her lips as he moved his hand, in a soft caressing motion, under the small triangle that covered her tight pebbled nipple and moaned softly, feeling the hard nub beneath his fingers. Unable to ignore the temptation, he pressed the nipple, albeit briefly, between his thumb and forefinger, and revelled in the small whimper that escaped into the kiss. \"Fuck, you're going to kill me making sounds like that,\" Noah groaned, breaking the kiss and tweaking her nipple once more, to hear the unmuffled sound of her whimper of pleasure. \"Yep, you're killing me...\"\n\nNoah's words stilled Marcella's thoughts for a moment. She'd done nothing but return his kisses and allow him access, or, at least, his hands' access to her body. She hadn't touched him, hadn't reciprocated the pleasure-filled touch that fanned the flames of her own desire, yet she was the one killing him? The thought made her smile with amusement. She realised that she didn't have to be the dominant partner, as she usually was when it came to sex, to be in control. This wasn't a scene with carefully laid-out ground rules. She had no safe-word with Noah because she didn't need one. She could stop what was happening between them with a single word. \n\nMarcella's mind turned over the thoughts between brief moments of erotic pain when he pinched her nipple, and the feel of his lips kissing down her neck, collarbone and, eventually, to her breast. His teeth grazed over the nipple as he sucked it into his mouth and played his tongue over the surface. His hand moved slowly down over her stomach as if waiting for her to stop its pathway. She was wet, she knew she was, and her face flamed as she found herself caught between humiliation, that she had been so easily aroused, and need, to see how far he would push this baseball analogy.\n\n\"So sweet,\" Noah groaned, as he moved his head to the neglected breast and his hand finally cupped her pussy, feeling the dampness of the material between his hand and her hot flesh. He heard her gasp as his finger rubbed her through the material and waited again, for her to tell him to stop. If she didn't stop him soon, he wasn't sure that he would have the will power to stop himself from fucking her, skipping straight from third base to home plate. \n\nThe tentative touch of Marcella's hands, running through his hair to smooth over his shoulders, seemed to pour gasoline on Noah's hot desire. He shifted again for better access, his fingers running along the edge of her bikini bottoms before finding their way beneath, and still, she didn't stop him. Beyond caring now about going too fast, he dipped a finger between her wet lips and found the sensitive bundle of nerves, pressing against it to elicit a reaction from her.\n\n\"Is this third base, then?\" Marcella asked, with a ragged, whimpering breath, as Noah applied pressure to her clit. Her mind raged at her to stop him, but her body pressed against him wantonly, enjoying all the attention that he gave to worshipping her body. It had been too long. She needed this release, and what he was doing to her, for her, felt so good at that moment. Damn the consequences, she deserved this release. \n\n\"Not quite,\" he growled huskily, kissing a path down her body to where his hand played in her folds, expecting at any moment that she would protest, push him away, and make him wait longer or indefinitely, to see and taste her pussy. Aware that her only command thus far was that the bikini stayed on, he moved down and pulled the material aside, breathing in the scent of her. Just the scent fed his hunger for her, and before she could protest, he pressed forward, and licked a long slow line between her folds, before hovering over her clit and rolling his tongue in circles.\n\n\"Oh, yes,\" she moaned huskily, the words drawn out with a long breath. It had been far too long since she had just let herself be pleasured for pleasure's sake. With Vinnie, she had a plan. She couldn't remember a time when she didn't have a specific agenda when it came to sex. She lowered her hands to play in his hair, encouraging him as she felt all the tell-tale tingles flow from her core into her extremities. \"Yes,\" she hissed again, feeling a big climax brewing as he added fingers to her pussy, fucking her with them, as he sucked and nibbled on her clit. \n\n\"Fuck,\" Noah groaned into her pussy. She was perfect. The sounds she made, the sweet, sweet taste of her, as her pussy held tight to his fingers, making him wonder if he would hurt her when he fucked this tight little pussy later tonight. He felt the tell-tale trembling in her thighs and knew she was close. He added another finger to her tight hole and heard her cry out as he rammed them in and out, fucking her hard and fast with his fingers, biting harder at her clit, thus giving her the pain, she so obviously needed to go over the edge. He wrapped his free hand around her thigh and pressed it flat on her pelvis, holding her in place as she thrashed and shook with her orgasm.\n\nThe cry that came out of Marcella's mouth, as his teeth sank into her, was almost guttural in her animalistic need for release. Her body shook and spasmed with the pure pleasure of it as he held her in place, not easing up on his torturous attack on her pussy until he was sure that he had wrung every last drop from her and lapped it up. She lay back on the pillows, spent and breathing hard, as he cleaned her, replaced the bikini as it had been, and kissed his way back up her body, stopping to caress and kiss her breasts briefly. He tenderly kissed her neck and the sensitive spot behind her ear, before kissing her gently. Marcella was still floating on the endorphins of her release when his next words startled her, and she turned her head to look at him, confused.\n\n\"Thank you. Third base never felt or tasted so good,\" Noah said quietly and lay beside her, pulling her body against his, his arms wrapping around her delectable body.\n\n\"What?\" Marcella asked in confusion.\n\n\"Thank you. Seeing you like that, well, you look so fucking hot when you come like that, and you taste even more amazing than I believed possible,\" Noah crooned in a soft voice while pulling her head to his chest and stroking her back. \"Rest for a few more minutes. Then we have plans for the rest of the afternoon and evening.\"\n\nMarcella had never had anyone thank her for her own pleasure before. The thought of it was ludicrous, but he made it seem so natural, so genuine. She considered him as she lay her head in the hollow between his shoulder and his chest. She had done nothing for him and had only taken pleasure, not given it, yet he was thanking her. As if reading her mind Noah spoke again.\n\n\"You let me enjoy your body, even if you aren't ready to admit that the chemistry between us is pretty incredible,\" Noah explained. \"We could be amazing together; we make a great team. Once we find what Olivia needs to free herself from suspicion in the Suebi case, we could travel and have adventures together,\" Noah explained, pushing just that little bit more, to show that he wanted more than just a fling with her. That they could be more to each other.\n\nMarcela remained quiet, thinking about his words and stroking her hand over his chest. She had half- expected that he would demand oral sex from her, because of what he had given her, but he seemed content to just give her a mind-blowing orgasm, without anything in return, and that bothered her more than she had thought it should. Nobody just gave without an agenda; everyone wanted something. She just couldn't work out Noah's deal but she would. She wasn't going to regret letting him go so far. It was an epic orgasm for her. Something she hadn't managed in a long, long time. Not without some sort of forced submission, yet he hadn't forced her in any way. She had been the one in control, and she hadn't stopped him. She had allowed it, given permission for him to touch and taste, and still, he had rocked her world without any expectations of her returning the gesture. Well, if he wanted blue balls, that was his business, she was satiated and felt the renewal of her energy.\n\n*****\n\nFor Genesis, there was something heart-warming and special about holding Olivia in his arms as she slept. Since finding her in the hospital, they had both changed in their expectations of what the future might hold for them. Olivia seemed even more beautiful now than when he first saw her, looking small and frightened in her hospital bed. Even with her injuries, the first sight of her had stopped his heart and made him want to hold her and protect her from everything that she feared. It had been heart-rending to know that she feared everyone around her, including himself, because of her conditioning.\n\nTaking a deep breath and banishing those early days from his thoughts, he gazed down on her again. Her face was softer, more feminine, and more open and giving than it had been. The hard lines around her mouth and eyes were gone, along with the terrors that she had lived through, and she looked almost doll-like in her serenity as she slept. It was as if the worries of the world had disappeared, and her body had relaxed in trusting contentment as he held her in sleep.\n\nHe lovingly stroked her hair and kissed her neck where it met her shoulder, knowing that they would need to wake soon. Olivia responded by sighing his name and snuggling tighter in his arms. Their bodies fit perfectly together, and his arms tightened, pulling her closer. At times, when he watched her sleep, she would twitch in her sleep and moan his name, and afterwards snuggle tighter into his arms, and he wondered about her dreams. Genesis was pleased that, even as she slept, he dominated her dreams. He wanted to reassure her and responded by tightening his arms, confirming that she was safe and loved with him. \n\n\"You're mine to love and protect,\" Genesis murmured, as he absently stroked her hair. He felt an intense ache in his chest when he heard her moaning and whimpering his name as she slept. He knew that she had captured him completely and, looking at her, he felt very possessive and wished that he could make the whole ordeal she was going through with the AFP, and the Suebi, go away.\n\nShe was the perfect woman, at least perfect for him. It was hard for him even to remember the broken and damaged girl who had refused everything, including food when he had found her in the hospital. She was so much more than that brainwashed little slave now, and she belonged to him. His smile tightened because, with ownership, came great responsibility.\n\nShe was a frightened little girl at heart, and she had protected that heart by hiding it behind the castle walls that her sisters' stories had helped her build. Now he had breached her castle walls and captured her heart, so it was his responsibility to keep it safe. There had been a pure, beautiful, innocent woman hidden inside her, and he had forced her to reveal it. It was his duty now to make sure that she has never hurt again and if he could reunite her with the sister who had protected her the only way she knew how, when they were younger, he would.\n\nSomewhere during the time that she had been recovering the real Olivia was revealed to him. In those moments, with her heart open, raw, and vulnerable to him, he fell deeply, madly and incurably in love with the girl who had been hidden beneath the hard, outer shell of protection that was the perfect slave, Serena Seabrook. He didn't want it, he hadn't believed in the curse of his family, but he couldn't stop himself from falling in love with the innocent girl he saw inside Olivia. The curse, though, once triggered, was brutal in making itself known, and he had been bound to this girl from the first moment that his eyes met hers.",
        "Genesis's musings were cut short as he heard the soft knock at the door. He looked down at Olivia's serene face and bent down to kiss her lips. He let his tongue trace her lips until her mouth opened in a plea for more. He knew she was awake now, so he rolled from the bed and stood straightening his clothes as she rolled towards him, blinking her eyes.\n\nOlivia's eyes opened, and she smiled as she stretched her marked limbs like a sated cat, a look of love for him shining in her eyes. She kept expecting this to be one incredible dream and that he would be gone when she woke up. He was still here, looking down at her and his eyes telling her that he loved her as much as she loved him. She pouted that he had left her alone in the bed.\n\n\"No pouting. We have a visitor. Take your time to dress and then come out to the living room,\" Genesis said softly, as he leaned down and wove his fingers into her hair, pulling her face up to his so that he could kiss her. When he finally broke the kiss, she was looking at him intensely, and he could see her craving for more. \"More later, first our guest,\" he admonished, wanting nothing more than to sink into her and make her cry out in pleasure again, himself.\n\n\"Yes. Please, more and so much more.\" Olivia's whole face lit up in a mischievous grin.\n\n\"I think you are becoming spoiled, little one,\" Genesis chuckled. He loved her playful manner, and he knew how long it had taken her to get to the point where she could be comfortable enough to play with him, rather than blindly obey. \"There's a time and place for everything and, as much as I want to play with my girl right now, I am going to protect her reputation with the help of our guest.\"\n\n\"Yes, Genesis.\" Olivia's playful look faded and was replaced by one of complete and total obedience. Her eyes lowered as if he had given her a rebuke and she crawled from the bed, intent on padding into the bathroom, but he caught her hand and pulled her back into his arms. \n\nTheir lips merged in a deep, loving and soulful kiss that affirmed everything both of them were feeling. The kiss could've gone on forever, except that the soft knocking on the door sounded again. Genesis broke the kiss and patted her ass, sending her to the bathroom, and he went to answer the door.\n\n\"Izzy, come in,\" Genesis said, with a broad smile. The man entered and embraced Genesis as only old friends could, with much back-slapping and hearty chuckles.\n\n\"It's been too long, my friend,\" Isidore greeted his old friend. \"So, where is Olivia?\" he asked, looking around.\n\n\"Cleaning up. She'll be out soon,\" Genesis said, not hiding the happiness in his voice as he spoke of Olivia.\n\n\"I thought that you'd be the last of us to give up bachelorhood,\" Isidore teased.\n\n\"When you know she's the one, you know,\" Genesis shrugged, not making excuses for the fact that he had handed over his confirmed bachelor card.\n\n\"Does Xavier know you're here yet?\" Genesis asked.\n\n\"Yeah, Oscar is meeting him and Dominic. I'll meet up with them for dinner later. I told them that I wanted to come and catch up with you and my little cousin first,\" Isidore chuckled again. \"Seriously, you're sure about this? Kissing goodbye to the globetrotting investigative reporting to toe the family line and have a family of your own?\"\n\n\"Stranger things have happened. Besides, I had to give all you second-stringers a turn in the spotlight,\" he teased in return. \"So, tell me what's happening? Did Nathanael find anything other than what we already know?\" Genesis prodded.\n\n\"Nathanael is still recovering, whether he likes to admit it or not. So, I've been the one doing some digging, while he spoke to his fathers and Oscar,\" Isidore admitted. \n\n\"And...\" Genesis prompted. \n\n\"It's a shit show, that's for sure.\" Isidore let out a long breath and sat back onto a couch. \"Got a beer handy?\" he smirked, not wanting to be the one who was here talking to his old friend about what a fuck-up his family had made of protecting the three sisters from not only an ogre of a father but his evil brother as well. \n\n\"Sure,\" Genesis went to the small, hidden bar and grabbed two beers, not wanting his friend to drink alone.\n\n\"Okay, so the girl's paternal grandmother left a will decreeing that all her assets be sold, and the money be divided equally amongst her three granddaughters as a dowry, to make them good matches and ensure they would be looked after. The old woman was shrewd. She and her late husband had invested cleverly, and she left quite a fortune, that her two sons assumed would go to them upon her death,\" Isidore began his story.\n\n\"So, this is about money?\" Genesis asked, in confusion.\n\n\"The root of all evil, my friend,\" Isidore confirmed. \"The eldest, Jessa, had been groomed to fill her mother's shoes when her father went too far with his discipline of his wife. They hadn't expected her to find love within a Table family, and her father had no choice but to give her and her part of the inheritance to the Farnese family, although we are still confirming that the dowry went with Jessa. The brothers hadn't planned on her ever being married, so we assume that they divided up her dowry years before, as a way to finance their annual fees to the clubs they enjoyed and pay for their mistresses.\"\n\n\"And Marcella? Why did they make her suffer so much?\" Genesis asked. \n\n\"There's a clause in the will about wayward behaviour. Sending her to the Battaglia was key to that. You can imagine the rest. You have seen the records from the Battaglia yourself.\" He shook his head in disgust. \"Unfortunately for Olivia, Jessa's marriage meant a huge financial loss to her father and Uncle, and we believe, with the damage done to Marcella's reputation, that Olivia was next to be sabotaged. Only Marcella somehow got Olivia to leave before any real harm could befall her. We understand that she was spending a lot of time out on the bay, sailing with her father and that he had gifted her a small boat and encouraged her to go out sailing alone or with one of the young guys from the boatyard her father worked in. A Kevin Brady...\" A gasp from behind him stopped his words, and he turned to see the petite young woman that he assumed must be Olivia Gambaro.\n\n\"Come and sit, little one.\" Genesis rose and strode toward her, pulling her into his arms. \"You know this story. You told me yourself that Marcella helped you to leave. She said she wanted you to sail to Jessa in Adelaide. This is my friend and your cousin, a few times removed, Isidore,\" he introduced Olivia to his friend.\n\n\"I can see now why Gen is so keen to hang up his travelling boots,\" Isidore chuckled, as he came to his feet and kissed Olivia's cheek. \"You're adorable. I may have to find out exactly how far we are removed from each other on our family tree,\" he winked and chuckled, while Genesis bristled.\n\n\"It's nice to meet you,\" Olivia said, and couldn't help but smile as she took a seat beside Genesis.\n\n\"It's wonderful to meet you too. You look very much alive for a dead girl,\" he commented. \"Luckily for you, I believe that the records are about to show your miraculous resurrection, especially as I have now been to see you and can say, with complete honesty, that you are indeed Olivia Gambaro and that you were not lost at sea over a year ago. I'm afraid that your Uncle and Father are about to have a terrible time of it, explaining the misappropriation of your inheritance. Especially if I also discover Marcella hiding up here among the Zenati,\" he grinned easily, taking the sting out of his words by keeping his tone light and cheerful.\n\nOlivia opened her mouth as if to say something, but she shut it again and looked up at Genesis before lowering her eyes to where her hands twisted in her lap.\n\n\"What were you going to say, little one?\" Isidore used the endearment Genesis had, hoping to make her see that he, too, was a trustworthy Master. \"You don't have to be afraid to say anything to me. No harm will come to you from my family or me. Your family,\" he corrected himself. \n\n\"Marcella is gone, and she won't come back, especially not now,\" Olivia said, in a small but confident voice. \n\n\"Where did she go?\" he inquired gently, glancing at Genesis, who gave an imperceptible nod. \n\n\"Noah has found her and is staying with her. I'm sure they will return soon,\" Genesis explained. He realised that the look of surprise on his friend's face was because they had not told any of the Gambaros that Marcella had fled when she heard some of the Battaglia were in town.\n\n\"You don't believe that she will return?\" Isidore turned his attention back to Olivia. \"Why did she leave? Surely it wasn't something so bad that she was frightened or too embarrassed to return?\" he probed, keeping the same light tone in his voice, despite not being happy only just to be finding out this information.\n\n\"The Battaglia came for her again when she was in the hospital. She won't trust the Zenatis again,\" Olivia said as if the Battaglia were just like the boogiemen who prayed on the weak and helpless.\n\n\"Noah will explain that they were here for Apollo, not for her,\" Genesis reassured Olivia again.\n\n\"Why was she in the hospital?\" Isidore frowned, realising a lot of information had been withheld from him.\n\n\"Apollo pushed her in front of a car, and she hurt her head,\" Olivia answered simply.\n\n\"Apollo Martino,\" Genesis clarified at the look of shock Isidore couldn't hide. \"We spoke to Oscar and Nathanael about his visit here, and his claims to being Marcella's fianc\u00e9. She denied the claim, by the way,\" Genesis filled in the gaps for him. \"Xavier and Dominic will be able to give you a fuller explanation when you meet with them tonight,\" he suggested, wanting to stop this informal meeting from becoming an interrogation.\n\n\"Or you and your pretty little one can give me your version of events now. From the moment you discovered Olivia had been brought in to the hospital after her shotgun wedding, pun intentional,\" he gave a soft chuckle. \"Actually, I'd very much like to hear your version of events, Olivia, if you are up to telling me the story. I promise not to interrupt with too many questions.\" \n\nTo Isidore's surprise, Genesis sat back and let her speak. It was apparent that he had not protected her from the events going on around her but rather shared them with her. Isidore listened with rapt attention as Olivia told her story from the time Marcella had convinced her to leave on her boat with Kevin. She didn't gloss over her time with Remington Royce or what she endured. As she detailed her time with Genesis, he could see the love and devotion shining in her eyes, as they often strayed to him, and his touch comforted her, as he stroked her back during some of the more difficult moments.\n\n\"That's pretty much all of it. I haven't kept anything from Olivia,\" Genesis said. \"Aside from the fact that Marcella fled and it took us around twelve hours to locate her and ensure her safety, we have told Nathanael and Oscar all of it.\"\n\n\"If it helps, I believe that Marcella was trying to save your life by sending you away at the beginning of that story,\" Isidore said softly, at the end of her tale. \"She couldn't have known that you wouldn't go to Jessa like she asked you to.\"\n\n\"I know,\" Olivia said. \"It's what she does. I used to hate for that, being the good sister who tried to save everyone even when we didn't need it. At least I thought I didn't need it at the time. She's still trying to save me from the Suebi, the AFP and in some ways from Genesis. That's why she hasn't left the city yet, even though everyone is looking for her.\" \n\n\"You could be right,\" Isidore agreed. \"Okay, so let's just leave our family names at the door for a minute, and talk to each other like colleagues. I know there's more, or you wouldn't have been so pushy asking me to come and see you first if there wasn't. Tell me what you've got and I'll see what I can do to help you get answers,\" Isidore said.\n\n\"You've already given me some of the answers that I was looking for, but I still have a gut feeling that there was some deal with Martino and Marcella's family that allowed her to be sent there twice for questionable reasons. That and the engagement that everybody except Marcella seemed to know about as well. It just doesn't sit right, even in the already fucked-up story that Olivia and her sisters lived through,\" Genesis said thoughtfully, leaning forward to rest his arms on his knees and join his hands, as if deep in thought. \"There's something there. I just can't put my finger on it yet. Maybe it's the money. Apollo Martino's mother was Savoy and his father, Battaglia. That doesn't give him a lot of options to continue enjoying the lifestyle he had become accustomed to.\"\n\n\"Worth looking into,\" Isidore agreed. \"I'll be here for a few days. I'll see if my contacts have anything on him that we don't.\"\n\n*****\n\nNoah inhaled deeply, savouring the scent of sand and sea. His eyes absorbed the breathtaking coastline of the place he called home. For as far as he could see, the magnificent countryside stretched, bursting with life. He was overlooking an area considered to be one of the most beautiful, nestled between the cold, blue waters of the Timor Sea and the warmer expanse of the Beagle Gulf.\n\n\"Wow,\" Marcella said softly, brushing a windswept curl of dark hair from her face. Noah smiled and turned towards her. She looked amazing this afternoon. There was a sexiness that seemed to radiate from her green eyes and emanate from every pore of her small, lithe body since she has woken from her nap. \"It's stunning. Why don't they put sights like this in the tourist brochures?\" she asked.\n\n\"It's mostly private land along this stretch of coastline,\" he explained, letting his dark gaze rove over her again. \n\nMarcella smiled, unsure of this new dynamic that had evolved between them over the course of the day. She half-wished that she hadn't given in to temptation now, with the way he looked at her. Noah reached out an arm and pulled her close to him at the rail. His hard body pressed close to hers. His clean, masculine smell, mingled with the faint scent of after-shave, teased her senses and caused her heart to race. \n\n\"Did you shave again?\" she asked, and reached up and touched his smooth cheek. From her first glimpse of him, Marcella had been attracted to Noah. The fact that he had rejected her, and then acted like an arrogant arsehole whenever the chance arose, had dampened that attraction. She needed to remember that and not let the sweet, confident, sexy Noah get any further under her skin. It was his sexy distinguished look, tall and athletic, with midnight dark hair and the confident way he moved, that had caught her attention initially and still made her watch him appreciatively. She gave herself a mental slap and pushed away from where he had held her against him, using her question to turn her body so that she could look up into his face.\n\n\"Yeah, I showered in the suite next door while you cleaned up after...\" he paused for a moment, \"You let me get to third base.\" He gave her a genuine smile of happiness, but the smile dimmed as she took another step away from him.\n\n\"We all make mistakes sometimes,\" Marcella said flippantly, dismissing the fact that he had just brought her to an explosive orgasm. She didn't want him thinking that this was any more than what it was.\n\nNoah grimaced. Each time he battered down part of the wall that she held around her heart and emotions, she would rebuild it just as quickly. How could she say that what had just happened between them was a mistake? She had cum hard, and they had shared a moment of closeness after. She was making him lose his mind. Trying to hide the hurt he felt at her flippant words, he turned his attention back to the beautifully rugged coastline.\n\nAs a man who loved the outdoors, the wind on his face and lots of wide-open spaces, the claustrophobia of the last months, being stuck in unending meetings of the family business, had been getting to him. His endurance was stretched. Usually, he managed his work and family commitments in balance with his need to enjoy the great outdoors and the adventure businesses that he was heavily invested in, easily. Then, with the attack on the mothers, and the discovery of Olivia, he hadn't had a chance to do anything but move from one crisis to the next. He was enjoying his time alone with Marcella, he felt relaxed, and he had been sure that if he showed her just what was available to her here, that maybe she would reconsider her plan to leave, or at least reconsider her opinion of him. He held back a sigh of defeat as he realised that she was going to happily pretend that third base hadn't been as enjoyable as he knew it had been for her.\n\nMarcella saw the energy drain out of Noah, as he turned to once again gaze at the shoreline, and regretted her flippant words. It had been... different. Good but different. Everyone had an agenda, though, when it came to sex. She'd been trained and used by enough so-called dominant men to know that there was always an end game. She just had to work out what Noah's plan was. Maybe she should just call it a day and get back to StarCity. She had slept most of the afternoon away, anyway. He can't possibly have anything else too exciting planned when it was already so late. Her eyes dropped, and she saw his hands gripping the rails and narrowed her eyes. He definitely had a plan, and she would play along with his little game a while longer, to find out what it was.\n\n\"I'll go find out our time of arrival,\" Noah said, and turned away from the view and Marcella, making his way up to the bridge of the yacht. He needed to go for a jog, let off some steam. He'd tried today, pulled out all the show stoppers that he could and, just when he thought he'd made progress... he shook his head. His chest hurt, and he felt ill. He considered feigning illness and calling off the final events that he didn't cancel when she had slept so long. He would continue to stay with her and keep her safe. That was a given, but if she considered what they had just done as a mistake then he wasn't sure that he could ever break through all of the scars that created the wall around her heart, and he needed to shield himself from the pain that situation caused him.\n\nMarcella watched him go. She knew precisely what those broad shoulders that his shirt hung off looked like without it. She could see his muscled back in her mind's eye, but this time she also felt the change in atmosphere from her words. She'd expected an equally-flippant retort as occurred with all their banter. Instead, she had watched him visibly shut down. She shouldn't care. She didn't know why she was letting his moodiness affect her. They were playing a game - he had his plan, and she wasn't going to give in to it just because he was sulking. She regretted the remark. She wished that she had chosen different words, but she wasn't about to apologise or take them back, just because he didn't like the word 'mistake'.\n\nShe walked to the prow and settled into a lounger, resisting the urge to stand against the front rail and extend her arms, like that overused scene from Titanic. She'd never seen the movie, but even she knew that scene. She sighed audibly and gazed unseeing at the vast expanse of water ahead of them. Her mind wandered over all she had done and seen that day and realised that it was exactly what she had said she wanted to do, but never had the time between her family and career commitments.\n\nHe'd listened to her. He hadn't belaboured rules or safety instructions like she was stupid but had treated her as if she had enough brainpower not to take silly risks. She couldn't even blame her mistake in trying to take a second breath at the waterfall on him. He had warned her to count on the way down, and she hadn't. She hadn't, because of the way he had eyed her so appreciatively, as if he was surprised that she had acquiesced to stripping down to her underwear, instead of calling a foul ball on his plans.",
        "Marcella gave a small laugh. They'd been all but living together for days. He'd seen her in her underwear and bikini before. This was no different. Except that today felt different and she couldn't work out if it was the bet they had made, or if it was because he seemed to be doing just what he said and creating the perfect day for her, doing exactly what she said she wanted to do. He had done all this for her, and she was shooting him down anytime he made a display of simple affection. Why had he put his arm around her and held her close just now? Why was he trying to hold her hand, and being so nice and sweet all day? It was easy to shoot him down when he smirked and voiced some innuendo or another. She felt awkward and unsure of herself when he was sweet and nice to her for no apparent reason. She huffed, finding it hard to justify the words that had made him back off so completely.\n\nIf she were honest, she would have admitted that she hadn't believed that anything she could say would make him react as if she had hurt his feelings. That was just the way they bantered, and he had been very clear about his expectations for the day and the bet they had made, while she had remained sceptical about everything. \n\nIt wasn't that she and Noah weren't attracted to each other, because it was evident that they were. The chemistry between them the last few days had been electric, even though she had resisted falling into bed with him without a barrier between them. A situation she knew would forever be changed by this day of adventure if she continued to give in to every temptation that he posed her. But it was more than that. It was the edgy danger that she associated with each activity he had planned for her, and which she found undeniably exciting, that concerned her. There was something about him, and that made her a little crazy today. She finally realised that, even when he teased her, the arrogant, know-it-all arsehole had disappeared over the last few days and she had been left with the confident and sexy Noah that she had met when she first arrived in Darwin. \n\nShe liked to believe that she was the queen of cool. Self-control was her middle name, and yet, after what she had already allowed to happen between them today, she could admit she was rapidly losing that sense of self-control. The time left in this day could be the excuse to allow herself to let go and to revel in wild abandonment she had already decided she wanted. If she apologised and he stopped sulking, she could just give in and play into his baseball analogy, and take that exciting thrill ride with him, as well as whatever else he had planned. Her stomach muscles fluttered with a ripple of excitement and longing, as she acknowledged that he would be a very thrilling ride. \n\nDeciding to go and find him and make amends so that they could carry on with his plans, she stood and turned back toward the interior of the cruiser, only to find him walking toward her with a concerned expression on his face. She felt that small prick of guilt again and took a deep breath.\n\n\"Look, I probably shouldn't have said that the whole third base thing was a mistake,\" Marcella said, getting close to an apology without actually apologising.\n\n\"Come, sit down,\" Noah said gently, ignoring her attempt at smoothing over the tension between them. \"Something's come up that we need to talk about.\"\n\n\"Shit! Did Bea call? I knew I should have checked my phone earlier,\" Marcella asked, in a panicked rush of words.\n\n\"No, this has nothing to do with the Suebi or our deal with Bea,\" Noah smiled softly and guided her back to the couches on the main deck.\n\n\"You're making me worry here,\" Marcella frowned at him.\n\n\"Just promise to listen to everything I have to say before interrupting, okay?\" Noah asked seriously.\n\n\"I'm not going to like this, am I?\" she asked. \n\n\"Probably not, but I think that there is a way we can deal with it, and still do what we need to do with Bea. Will you listen to all I have to say before reacting?\" There was a slight pleading tone in his question.\n\n\"Fine,\" she snapped and sat back, crossing her arms.\n\n\"Oscar Gambaro and his younger brother Isidore arrived in Darwin today,\" Noah began and paused, expecting a reaction from her. \"I didn't know they were coming. Apparently, it was a last-minute thing. Nathanael is a childhood friend of Xavier and, therefore, Oscar is included in that friendship, and Isidore and Genesis have worked together several times over the years and are close. Isidore went to check on Olivia, and Oscar is asking to see you as well, to ensure that you are being treated well by us. The Gambaro didn't know you left the hospital the way you did, or why. Oscar and his brothers are concerned about your welfare, given the circumstances and the ill-will between four of the Tables because of the situation,\" he paused and let her digest that fact. \n\n\"I've met Isidore,\" she said quietly, considering all that he was saying, and trying to wait for all of the information, before refusing outright to endanger her deal with Bea because Table men were demanding that she do as she was told and return home.\n\n\"It's been years since any of the Tables were at war. I think that, with the attempts made on the mothers, yet another scandal for the Battaglia coming to light where a Table woman was mistreated, Olivia's involvement with the Suebi, and the strange behaviour of Apollo Martino, there is a storm brewing, that some of the less influential families will take advantage of, once the truth comes out. I believe that the Gambaros have their own secrets, that they don't wish to come to light, which is why they are requesting to see you immediately.\" Noah let the real issue drop and held up his hand to forestall her.\n\n\"I'm not...\"\n\n\"Please, just let me finish,\" Noah asked in a soft, gentle voice and took her hand in his.\n\n\"Okay,\" she said, drawing out the word as if not convinced that he could say anything to make her meet with them today, or ruin the plans she had put in place with Bea.\n\n\"I believe that the current Table, made up of Oscar's fathers and uncles, covered up the scandal of sending an underage Gambaro girl to the Battaglia for training. The Battaglia sent you back as soon as they realised that they had been lied to, and I believe that your father had been reprimanded quite severely. The cover-up by both families was so complete that it left the door open for your father to send you a second time, with a small modification to your name. That second time wasn't as easily covered up, hence the investigation from the Thirteen, and subsequent penalties for both the Battaglia and the Gambaro's including your father and Uncle. The Battaglia had enough to deal with at that time, due to the confrontation between Veronica and Peri Donati, so they sent Apollo with you, to ensure your safety when you returned home.\" He paused so she could confirm that what he said was true.\n\n\"I don't know about that side of it, but yes, Apollo came home with me the second time and organised for me to stay with my Aunt rather than return to my family home,\" Marcella confirmed, her brow furrowing as she took in all of what he was saying. \"Jessa left shortly after that to marry, and I got Olivia out of that house not long after that.\"\n\n\"Oscar and Nathanael are good men, Marcella. I honestly believe that they intend you no harm at all. They just want to understand what happened and give you the support you lacked from your family when you needed it. They have also offered full support and assistance with Olivia's case,\" he explained. \"I think that if you, at least, video chatted with them, then they would extend their demands to meet with you until after the raid on Hermione's.\"\n\n\"As if they would ever listen to what I wanted,\" she sighed. \n\n\"We are born into a patriarchal society for the most part but, in truth, it is the mothers of the next generations who rule the Tables. You have more power than you realise, Marcella. You shouldn't be concerned about talking with Oscar. He's a good man, and you have the advantage, right now. You can control this meeting. You can decide on the time and place, even the conditions surrounding the meeting. I will be there to support you, and back you up if you want to leave the meeting at any time,\" Noah reassured her.\n\n\"What if they command me to return to Perth? Would you break the rules of the Tables, or cause an even bigger incident by helping me run from them?\" she asked carefully.\n\n\"I highly doubt that that will be the case. My family would point out that you and Olivia are both safer here than you ever were in your own home,\" Noah said, with certainty. \"There is another way to ensure that won't happen...\" he said tentatively, and took her left hand in his, feeling his stomach lurch and pain form in his chest as he considered what to say.\n\n\"I won't give up on Olivia and run away. She needs me to do this. No one else has even got close to finding Hermione's. I can't run now. I can't let her be arrested and prosecuted,\" she said, sadly wondering how hard it would be to reason with Oscar about how much Olivia needed her right now.\n\n\"I would never ask you to give up on Olivia. I'm here helping you because I know how important this is, not just to you, but to Gen and my family. You're right. No one else could have done what you did. I am amazed by your tenacity, even if it does drive me crazy when you charge off without considering the danger,\" he chuckled and swallowed, considering his next words carefully as she looked at him suspiciously. \n\n\"Then what?\" Marcella huffed at the words of praise that she hadn't expected. She huffed again, not understanding what he was saying about ensuring Oscar could or would not command her to return home and have the Zenati comply, rather than have her create another incident in their state.\n\n\"Make this real.\" He twisted the ring that he had placed on her finger as part of their disguise. \"Announce our engagement to both families. We can have a long engagement, but it would mean that my rights to keep you close and safe with me would far outweigh their familial rights. It would also put Apollo in his place once and for all,\" he added, thinking that was possibly the best effect the announcement of their engagement would have. \n\n\"You want to marry me? Knowing everything you know about my family and my past? You want to marry me?\" Marcella asked her, eyes narrowing. \"Why would you want that?\"\n\n\"Why wouldn't I want that?\" Noah asked, with some frustration. \"Since picking you up at the airport, I haven't made any secret that I felt the chemistry between us. The hardest thing I ever did was walk away from you that night when you asked me into your apartment. But I am not a man who wants a one-night stand or casual affair. I don't do booty calls, and you obviously weren't offering or ready for more than that. You didn't trust the men of the Tables, and that included my brothers and me,\" he sighed. \n\nMarcella's face flamed in embarrassment as he spoke about what she had taken as a personal rejection and the real reason that he had left her that night, rather than sharing her bed. She was speechless, but Noah didn't let the silence between them build to awkwardness.\n\n\"You haven't let your past affect your future. Why would you think it would matter to me? All the things I have learned about you since you arrived have only made me want you more. You're insanely smart and ferocious when it comes to protecting the people you care about. You're stubbornly independent but also considerate of others and, best of all, you share my love of adrenaline-fuelled adventures. Our lives together could be the best adventure of all.\" He spoke from his heart, unsure if she would believe him or not.\n\n\"So, I could say yes and just announce our engagement to everyone, and they would back off and leave me alone?\" Marcella asked, furrowing her brow. That had been her original plan to make her father back off, but if it made everyone leave her alone, well, everyone except Noah, she could do the engagement thing. It didn't mean she had to marry him.\n\n\"Well, I would have to talk to Oscar, and possibly his father, about it, but I can't imagine they would have any concerns that my family couldn't deal with, so, yes. The answer to your question is yes. Is that what you are saying as well?\" he asked, wanting to hear her say it but not wanting to push her, in case she said no, just to be arbitrary. It was strange to ask her to marry him in this way, without professing his love or expecting hers, but he knew he wanted it and given enough time, her love would emerge. He just had to keep her safe until the whole shit storm blew over.\n\n\"How long would the engagement be?\" she asked. \"Could either of us change our minds, or is it a contract we would have to adhere to?\" She looked down at her hand and the unusual ring she wore as part of her disguise. \"Could I keep this ring?\" she asked.\n\n\"We can make it a contracted engagement if you like, and be specific in the terms about you remaining with the Zenati. The wedding doesn't have to happen this week or even this month, but within the year is preferable,\" Noah stated, matching her business-like voice as they discussed their possible engagement and wedding. \"I love this ring, but you can keep it and choose another black diamond engagement ring if you want.\" He picked up her hand and kissed her fingers close to the ring. \"I want this Marcella. I want you for better or worse.\"\n\n\"I... You...\" Marcella stammered and took a deep breath. \"It's a lot, you know.\" Her mind whirled with the benefits of saying yes, and reasons why she had always believed that she could never marry a Table man. Time was running out for her, and she knew it. Noah deserved to know the things that she had kept hidden from everyone before she agreed to anything, including returning home, once she had ensured Olivia's freedom and financial independence.\n\n\"We could video-call them. Ask them for time to return,\" Noah reminded her. \"You don't have to give up on finding Hermione's, and you don't have to give me an answer right now.\"\n\n\"There are things that you don't know. Things you should know before... well... before making that offer again,\" she admitted. \"There are things I want to know, to do, to see...\" Marcella tried to put her disjointed thoughts into words. \n\n\"Take your time. You're right, it's a lot to process in one go,\" Noah said gently and leaned back on the couch, pulling her close to him, despite her earlier reluctance, before he had found out about Oscar and Isidore's visit. \"Just breathe and relax for a moment and let it all sink in.\"\n\n*****\n\n\"When were you going to mention that Marcella fled after being hospitalised with a severe concussion?\" Oscar asked as he placed his phone back on the table. \n\n\"It was a simple misunderstanding, and Noah has been with her since shortly after she left the hospital,\" Xavier said. \"We have messaged him to let him know that you wish to meet with Marcella, as well as Olivia, while you are here.\" \n\n\"Isidore has met with Olivia and believes that I should join him there. Care to accompany me?\" Oscar asked. \n\n\"I'll have a car brought around for us,\" Xavier agreed. He had been friends with Nathanael since childhood, but he was still wary of Oscar, and he wondered if perhaps Oscar was put out that he had gone to Nathanael with his questions about the Gambaro sisters, rather than Oscar himself. He opened his mouth to speak, but Oscar cut him off.\n\n\"Nathanael speaks highly of you; he counts you as a friend.\" Oscar began with an edge to his voice. \"Knowing that he was seriously injured, why didn't you bring your concerns to me? I am the Chair and your counter-part after all. Consider if the situations were reversed and it was I who went to Dominic for assistance shortly after his surgery?\"\n\n\"It is the nature of each Table to hide their weaknesses. We didn't know how injured Nathanael was, just as you could not have known of my condition,\" Dominic answered. \"The hard truth for us, Oscar, is that those twelve boys including Xavier and Nathaniel, who were forced into close proximity with each other, year after year, saved our families because of that trust and friendship. When the alarm sounded, not one of them hesitated to believe Ricco, because of their bond with Matteo and recent contact with Ricco himself. That trust in Nathanael is possibly the one reason we couldn't believe that the Table men knew or sanctioned what had happened to Marcella and her sisters. Had Oscar not had that faith in Nathanael, we may have taken our doubt and need for answers to the Thirteen.\"\n\n\"I see,\" Oscar nodded. It wasn't a threat, of that he was sure, but he acknowledged that he did not have the bonds of friendship with these men that his brother did. They had no reason to trust him or his answers to their queries and, without that faith in Nathanael's honour, they could very well have taken the issue to the Thirteen. \"I appreciate that the depth of your inquiry has gone no further. Nathanael will never admit to anyone how close to death he was, but trust me when I say, it will be a long road to recovery for him.\"\n\n\"Then it's only good news that he will recover given time and I will heed your warnings and include you in any future conversations,\" Xavier said, almost as formally as Oscar had spoken. \n\n\"There's more though, isn't there?\" Dominic address Oscar.\n\n\"I want to speak to the sisters first before I relay all my information. Do not worry. They will be safe with and from me and my men,\" Oscar said carefully. \"However, we have discovered some relevant information that I am unsure the two sisters are aware of, and I believe it could be the cause of the trauma in the childhoods.\" He went on to explain about the inheritance and the dowries set up for each girl and the provisions for it if any of them died or were deemed unfit to receive it. He explained their theories on how that played out for Jessa and Marcella's time with the Battaglia and eventually would have for Olivia, just as Isidore had told Genesis.\n\nThe unique melody of the facetime app sounded from Oscar's phone, and he picked it up to check it. Noah was calling, which meant he had spoken to Marcella already and was getting back to them. When he answered it, it wasn't Noah's face he saw but Marcella's.\n\n\"Marcella, this is a surprise.\" His voice showed evidence of what he said.\n\n\"Hello, Xavier. I'm sorry to be the cause so many problems for you. That was never my intention, but I need to do one last thing before I come back. It might take a few more days. Can you let Oscar Gambaro know that I am safe and content here?\" she asked.\n\n\"You can tell him yourself. He is here with me,\" Xavier said, and before she could respond or argue with him, he handed his phone to Oscar.\n\n\"Marcella?\" Oscar queried, taking the phone.\n\n\"Yes. We've never met before, though I know Isidore would know me by sight if he is there. I am Marcella Gambaro,\" she acknowledged. \"I'm afraid I won't be able to come back and meet you in person for a few more days. What I am doing is very important to both my sister Olivia and me. I am not in the city right now. I called to let you know that I am quite safe and happy, and I will return once I have done what I set out to do.\"\n\n\"I see. And what exactly are you doing?\" Oscar asked, with a frown. \n\n\"Finding evidence to clear my sister's name. I know others are trying to do the same thing, but I am so close, and I can't risk losing this chance, just because you tell me to return. I won't, and I will face the consequences of that decision later if I have to,\" she said, with resolve.\n\n\"I see,\" Oscar said, considering her response. \"There will be no consequences. However, I believe that you may be at risk of harm from your father and Uncle's cohorts. I would like to send one of my most trusted men to meet with you, to protect you and ensure your safety until we can speak in person,\" he explained.",
        "\"As much as I hate to admit this in front of him, I am with the one Table man I trust without reservation, at the moment, and I am sure he will keep me safe. There is no need to send anyone else, I assure you,\" she said in a pained voice, her eyes darting to the sides of the screen where Oscar was sure Noah was sitting. \"He um... he proposed..., and I think I will accept.\" She rolled her eyes once again, looking at the side of the screen. \"So, you see, there is no reason to be concerned about me. I highly doubt that I will be returning to Perth to see my family in the near future, and neither will Olivia, as I am sure Genesis has informed you.\"\n\n\"I am sorry Marcella, for all that has occurred,\" Oscar said, stiffly. \"I will wait as long as I can for your return. Be safe.\"\n\nHe handed the phone back to Xavier and took a deep breath.\n\n\"Marcella, can you ask Noah to call Dom later tonight. He misses him more than he will admit,\" he smiled gently. \"Congratulations, by the way, I look forward to calling you, cousin.\"\n\n\"I haven't accepted yet but thank you. I'll let Noah know,\" Marcella said and clicked the end button, her face hot and flushed as she ended the call abruptly. Xavier looked down at his phone for another minute and looked up at Dom with a lop-sided grin. \"I guess you win again,\" he chuckled.\n\n\"You bet against your Oracle being right?\" Oscar smirked and shook his head. \"Nathanael told me that you were a smart man. I guess he was wrong about that. There's a first time for everything.\"\n\n\"If anyone can challenge and change their fate, it would be Marcella. Wait until you meet her before you judge that bet. She is a formidable woman, and I believe my cousin might have taken on more than even he can handle, with Marcella as his wife,\" Xavier continued to chuckle. The other two joined in the laughter, as they went down to meet the car waiting to take them to meet with Olivia.\n\n*****\n\nNoah took the phone from her hands, pulled her into his arms, and despite her half-hearted protests he kissed her. When he finally let her push him away, he let a broad smile appear on his face.\n\n\"I didn't say we were engaged,\" Marcella huffed at him rolling her eyes again.\n\n\"You trust me. You trust me without reservation to keep you safe,\" he said softly and took her hand. \"You have no idea how much those words mean to me. Take all the time you need to answer my proposal just don't stop trusting me.\"\n\n\"Don't give me any reason to stop trusting you,\" she shot back and hated the crease of disappointment that appeared on his forehead at her words. He didn't frown, but his smile no longer seemed as wide.\n\n\"When have I ever given you a reason not to trust me?\" he asked seriously. \n\n\"You're a Table man that alone makes me wary of you,\" she admitted not wanting to hurt him or get into an argument with him when the day had been so perfect up until she had fallen asleep on him.\n\n\"You may not have noticed, but the Zenati are not exactly traditionalists where the tables are concerned. We are not one of the most powerful of families, but neither are we considered weak. I would hope that what happened to you and your sisters would never happen in our family without someone stepping in to stop it. We don't send our wild teens to the Battaglia we have our own rehab facilities which don't involve undergoing training like a contracted staff member,\" Noah said as diplomatically as he could.\n\n\"Can we talk about this tomorrow?\" she asked. \"We were having such a good day until that phone call and you said you have more planned?\"\n\n\"Sure...\" Noah bit off a plea for her to consider saying yes to his proposal. He knew that going back to their lives, the danger of dealing with the Suebi and the complications of his family wanting them back where they could work on her plan together was going to make her rethink everything they had shared today and consider their growing relationship a mistake as she had said when they were standing at the rail earlier. \"Let's go,\" he held out his hand to her, and they walked toward where the gangplank had been fitted to the pier while Marcella made her call.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "adventure",
        "brothers",
        "dominance",
        "family",
        "submission",
        "secrets",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-22"
}