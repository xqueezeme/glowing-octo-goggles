{
    "title": "My Little Ventrue Pt. 03 Ch. 11",
    "pages": [
        "~~Jack~~\n\nIf there was one way he was going to die, it'd be between two dangerous women.\n\nAntoinette's tiger eyes returned, with all the ferocity and rage of when Lucas had crashed her ball. Like a crushing storm, being so near her shook him to his core as the rage poured off of her, buried him in rolling thunder that vibrated his bones and pulled his gut up into his throat. She wasn't looking at him anymore, thank god; her eyes would have bore holes through his body and couch otherwise.\n\nThe love of his life got up from the couch, stood up, and stared at the intruder.\n\n\"You have nerve, Avery.\"\n\n\"Hey, I'm just here to talk to my middleman. Didn't think he'd be here boning his girl, let alone boning the Prince.\" Avery stepped in nice and close, and looked up at the woman over a foot taller than her, with something between a grin and smirk on her face. \"Kind of young for you don't you think?\"\n\n\"Kindred do not see years as you do, wolf. He is an adult, as am I.\"\n\nJack sat up, but stayed sitting, and quiet. Getting up would imply he wanted to get involved in the conversation, and he wasn't that stupid. Not yet at least.\n\n\"Right, sure.\" With a snort, Avery walked around Antoinette, exposed her back to her, and started to explore Jack's apartment. Every step dripped of confidence, but where Kindred would make subtle jabs at each other, a lot of passive aggressiveness, Avery's jabs were blatant, aggressive, direct, and honest. Sort of. \"Had a couple tips that you two were an item. Had to see it to believe it.\"\n\n\"Is that why you have come to my love's home?\" Antoinette turned to face Avery, but the werewolf didn't seem to mind having the elder watching her exposed back. \"To insult me, pry into m\u2014\"\n\n\"Nope. Dead serious, came to talk to my middleman. Who's doing a piss poor job right now.\" Her fingers found his other couch, window, counter tops, his fridge, cupboards, and continued to glide until she found his hallway before disappearing into the bathroom. \"God damn you Invictus love to waste money. This is a nice place.\"\n\nOh god if Avery joined the group of people who kept randomly visiting his apartment, he'd have to move.\n\nJack looked at Antoinette. Safe to talk? A tiny glance from her suggested otherwise, but with a few more seconds, she let out a long, annoyed sigh, and sat down on the other couch while doing up her blouse's buttons. Ball in Jack's court then.\n\n\"You uh, wanted to talk to me, Avery?\"\n\n\"Yeap.\" The small, brutish woman poked her head out from the bathroom, smirked, and walked back down the hall to join them in the living room. \"No wonder this building only gets one apartment per floor.\" Once in the living room, she looked down from the enormous window nearly the size of his wall, and then around the curve into the other hallway. A short-lived hall that opened to his very, very large bedroom. \"A Ventrue and a Daeva, bet you two brainwash dozens of humans to be your sex slaves.\"\n\nHe frowned and said nothing. Neither did Antoinette. The wolf's prodding wasn't worthy of a response, and it was blatant instigating.\n\n\"So,\" she said at last, \"a few hours ago, half my pack were scouting the area near Devil's Corner, and ran into some Kindred guy named Damien. Don't know him. He was with some girl named Fiona.\"\n\nOh shit. He looked to Antoinette, and she looked at him. Hard to read her expression, solid and flat as it was except for a slightly raised eyebrow. Her silence was like a green light for him to handle the situation, and he was really hoping for a red light.\n\n\"... I know them,\" he said.\n\n\"Do you?\" Avery came back to join them in the living room again, and she leaned against the wall as she wiped her bottom lip with her thumb. \"Want to fill me in?\"\n\nHe steeled himself, folded his arms across his chest, and looked at her. Antoinette was right behind him, if shit went badly. But then, she wasn't on his side either, not really. She'd keep him from getting killed, but she'd also take advantage of any information she heard for her own gains. Walk carefully Jack.\n\n\"Damien is a Kindred of the Lancea et Sanctum.\"\n\n\"Is he now? Thought they were done with Lucas gone.\"\n\nJack nodded. \"Damien is trying to revive the covenant.\"\n\nAntoinette scoffed, more than loud enough for Avery to understand her annoyance with Damien.\n\n\"Right,\" the werewolf said, \"black sheep then. And Fiona?\"\n\n\"... a young Begotten.\" Not like he could lie and say she was Kindred; the Uratha would find out he was lying. He couldn't lie and say she was human either, they'd figure that out too.\n\n\"Begotten? You mean a monster? Been fucking decades since I've run into one of them. The fuck kind of hole city you running here, Ann?\"\n\nThe Prince stared daggers into the wolf, but said nothing.\n\nJack put up a hand. \"What's Damien and Fiona got to do with the Uratha? You said your pack were near Devil's Corner, not directly under it, so it doesn't sound like Damien was violating your rule.\"\n\nShe snorted and walked over to his window. Not a care in the world, she put her hand against the glass. Smudges, ugh. He kept his mouth shut as he ground his teeth.\n\n\"Azlu are sneaky fucking things. Weird tricks up their slee\u2014in their webs. David thinks one of those fucking spiders has set up a home here in Dolareido; that's why we're here. So, cats out of the bag, we're here for a host, Azlu.\"\n\nJack looked over his shoulder at Antoinette, but the Prince looked as confused as he did. \"Um... Azlu? Host?\"\n\n\"Yeah I'm telling you more than I should. But, after poking around and getting a feel for the city, I have to say I'm pretty happy with how things are here. You\"\u2014she spun around and pointed at Antoinette\u2014\"are still a fucking hazard and are going to bring hell down on this city if you keep fucking with the Gauntlet. But, things seem fine at the moment; only reason I'm telling you any of this. We think you might have an Azlu infestation.\"\n\nAntoinette's gaze was ice, but again when Jack checked to see what she'd say, she tossed him a quick glance and green light.\n\n\"What do Damien and Fiona have to do with any of this?\" he said. Spiders, she said spiders. Shit.\n\n\"Azlu are a problem. One of them has grown, and they're skulking around in your fucking maze of tunnels.\"\n\n\"My tunnels are much of the reason Dolareido is the haven it has become for Kindred.\" Antoinette switched and refolded her legs as she leaned back and hooked her arms on the couch's back. But, once she opened her mouth, ready to snarl, she sighed instead, closed her lips, and looked back to Jack.\n\nTrapped between the two most powerful women in the city, in the world for all he was able to figure. God damn.\n\n\"Yeah, I know. Good for you Ann, you put together a nice city for vamps. You also put together a nice city for nasty shit to hide. I'm not your fucking janitor. I\u2014\"\n\nJack got in her face. Again. Just like with Jacob, except now it was Antoinette, another Kindred elder, another person Avery seemed perfectly content to piss off. No wonder she wanted a middleman, if she treated everyone this way. Classic case of knowing she was trouble and not being able to help herself, maybe?\n\n\"Damien and Fiona,\" he said, \"what do they have to do with this?\"\n\nAvery snorted as she met him, eye to eye. Don't cower, don't show any fear. Like dealing with any animal, don't act afraid and don't run. Maybe he should have lay down and pretend to be dead? He was tempted.\n\n\"The girl is dead. Just a corpse walking around, possessed by an Azlu.\"\n\n\"... she didn't seem dead,\" he said, \"didn't feel dead.\"\n\nAvery reached out and poked him in the shoulder. It was enough to make him take a step back, and the touch of her finger on his body sent a jolt of panic through his limbs. He suppressed it; he was a Ventrue after all. Didn't change that the touch of her fingers on his body made him want to bolt, shot vitae through his fingers and toes, ready for a fight. Made the beast in his gut growl and back up. Better than curling up in a ball on the ground at least.\n\nAntoinette almost moved to intervene. Almost.\n\n\"Azlu are sneaky. I gotta repeat myself over, and over? None of you understand the threat this poses. The woman stopped my pack with a spiderweb. A fucking spiderweb. Think that's a coincidence?\"\n\n\"So they escaped.\"\n\n\"Fucking vanished.\" She snapped her fingers, hand outstretched and held beside his ear so the resounding snap was enough to hurt his hearing. Mean. \"Running in the direction of Devil's Corner at that. She's hiding in there, fucking with the Wall. She'll begin eating and absorbing people now, if she hasn't already.\"\n\nJack stood his ground. \"She's not Azlu, she's Begotten. Damien said so and I believe him.\"\n\n\"What, you think it's just coincidence that the Azlu show up, and there happens to be a Begotten with a form like a spider, with abilities like a spider?\"\n\n\"Or there are no Azlu,\" he said.\n\nAvery snorted and got in closer. \"You don't see what we see kid, don't see what's on the other side of the Gauntlet. You\u2014nah, fuck it. I said my piece. You see that Fiona girl, avoid her.\"\n\nAnd with that, the werewolf left. No glance back, no check for confirmation, no further instructions, just a door slam to mark her exit. Did she want him to tell her if he saw Fiona, or Damien? Woman's communication skills were horrible.\n\nBut then, he doubted she was the leader of her pack for that. Probably the leader cause she knew how to make smart choices on the hunt, and because she was strong enough.\n\n\"I am sorry for her ill manners, my love.\" Antoinette stood back up and came to him, hugged him, and rubbed his hair in that perfect way again. \"But, I must act. If what she says is true, I will need to investigate. Shall we continue this another time?\"\n\nDamn. Cock blocked, as Beatrice would say.\n\n\"Yeah sure. I'll see you later then?\"\n\n\"Indeed.\" She took his chin, aimed it up to her, and smiled with her red eyes as she leaned down to kiss him.\n\n\"Love you,\" he said.\n\n\"I love you, mon amour.\" But of course that wasn't enough for the busty goddess, and she took his hand to press it against her chest, to cup her breast through the blouse and bra. \"And Avery may have upset our date, but do not think I have forgotten what I said. Next we meet, hopefully, we may resume.\"\n\nHe melted.\n\n~~~~~~~~~~~~~~~~~~~~~~\n\nKnock knock.\n\n\"Oh my fucking god, someone kill me.\" He stepped away from his once again clean window, and peeked through the peep hole. Beatrice. He smiled; someone he could get along with in a normal way, sort of. He opened the door. \"Come in.\"\n\n\"Yo, Jack. Seen Fiona around?\"\n\n\"No. But Avery tells me the werewolves are hunting her. They say she's Azlu.\"\n\n\"Azlu? Fuck is that?\" She walked over to the window and leaned against it, both hands to the glass. God damn it, the smudges.\n\n\"I don't know. Some monster, I guess? Not a Begotten, but... something else? Avery said it was a spider, or they were spiders? Just... arg, that bitch refused to explain anything.\"\n\n\"Yeah seems like that's her shtick. Reminds me of Jacob.\"\n\nJack reached out and grabbed the Nosferatu's hand. Half to get her attention, half to get her claws off the glass. \"Please tell me you didn't tell Jacob that.\"\n\n\"Fuck no. Kid you think I got a death wish?\" Chuckling, she hopped over to the couch and sat down, as if she'd sat there a million times before. \"So you were talking to Avery again?\"\n\n\"Yeah. Seems like some of her pack ran into Damien and Fiona. And now they think Fiona's this weird Azlu thing, so now they're hunting her. She escaped with Damien into Devil's Corner, but she's vanished according to Avery.\"\n\n\"Fuck. Hope the dogs don't catch her, I like her.\"\n\n\"Yeah, I do too.\"\n\n\"She even likes metal music. You know how hard it is to find someone who likes metal? Like, quality good metal, long songs with good singers and shit.\"\n\nHe blinked at her. She blinked at him. He tilted his head to the side, and so did she.\n\n\"... favorite band?\" he said.\n\n\"Uh, not sure. Tough question. Probably Symphony X. Love the heavier sounds of their new albums.\"\n\nJack's jaw dropped, and he sat down on the couch across from her. \"I. Fucking. Love. Allen's voice, and Romeo's solos? Orgasmic, fucking orgasmic.\"\n\n\"Fucking yes!\" Beatrice slammed her claws down on the table in front of her. It shattered. \"... shit.\"\n\nGod damn it.\n\n~~~~~~~~~~~~~~~~~~~~~\n\nHim and the Nosferatu, in the tunnels, with flashlights. Seemed to be the 'in' thing to do these days, go into the tunnels like they were exploring god damn ancient, abandoned tombs. In truth, there may have been such hidden secrets, considering the history of the tunnels and who used to lived in them, but he was perfectly content to leave them forgotten and lost.\n\nBut, he wanted to know what was going on, and so did Beatrice. If he asked Julias, his sire would have forced him to stay above ground. If he told Antoinette, she'd have probably locked him in her tower.\n\nHe was in a suit, Beatrice was in a black t-shirt cut short above the navel, and some torn up blue jeans and combat boots. An unlikely pair, doing unlikely things.\n\n\"Favorite guitarist?\" she said.\n\n\"Tough call. I like Petrucci's sound, but prefer Romeo's solos. And if I'm in a heavy mood I prefer Loomis.\"\n\n\"Fuck yes love me some Loomis. Your turn.\"\n\n\"Favorite singer?\"\n\nShe tapped a claw along her extra teeth as she shined her flashlight down the tunnel. \"Probably J\u00f8rn. Can always rely on him for consistent belting power.\"\n\n\"Yeah, I listen to a lot of J\u00f8rn, but doesn't sing much of the heavier prog metal I like.\" Jack rubbed his head as he let his mind wander over his favorite songs, singers, bands. \"Personally I love Kelly Sundown.\"\n\n\"Love me some Sundown too. That new album from Adagio? Some amazing shit in that album.\"\n\n\"... so, I know you're dating my boss and sire, and I'm dating the Prince, but I think we should dump them and hook up.\"\n\nShe looked down at him and raised a brow, and he met her glance with the most steel, dead serious expression he could muster. Sure enough she broke into laughter, and stopped walking to reach out and lean against a wall.\n\n\"Maybe in the future kid. For now though I think they deserve a chance. Maybe we can convert them to the metal loving ways of our clearly superior musical taste?\"\n\n\"Ha, maybe.\" Probably not. Antoinette was into classical music, and a little of the modern era's electronic movement; getting her to join him in loving metal was likely never going to happen though. \"You got a plan about this, Beatrice?\"\n\n\"What's to plan? We're just going to talk with Azamel.\"\n\n\"Who I was expressly told to avoid, by Julias.\"\n\n\"Yeah well, Julias is too protective. You've proven you got skills kid, Julias said as much. Said you had some interesting ambassadorial skills too. And besides, I'm here to protect your ass.\"\n\nHe rolled his eyes. Triss was strong for her age, but she was no ancilla like Tasha or Jessy. If shit hit the fan, Jack had his large knife and his pistol, but neither would be of much use against the Uratha, and likely not useful against the Begotten. But maybe? For all he knew, putting a bullet between their eyes would kill them.\n\nHe kind of wished they'd turn around and go get Tasha, but he could see Beatrice wanted to do this with just him. Bonding moment? Nah, she wanted him with her cause she trusted him; and apparently people were starting to value his skills as an ambassador. Which was really weird.\n\n\"I kind of miss the days,\" he said, \"where I was just trying to stay afloat in this crazy new world, and trouble found me. Now I'm actively seeking out the trouble?\"\n\n\"Not trouble! Bad way of looking at this, come on. More like, being proactive. We both know shit is about to explode, and now we know Fiona has something to do with it. So before Jacob and the wolves butt heads, let's see if we can gleam a little information first.\"\n\n\"Gleam? ...you want to spy on her, don't you?\" Nosferatu could hide like Mekhet, but Beatrice wasn't Natasha.\n\n\"Maybe a little.\"\n\n\"Don't you have people in the Circle who'd help you with this?\"\n\n\"Eh we all kind of do our own thing unless Jacob gives us an order, and Jacob's gone silent psycho mode. Half the reason we're doing what we're doing. The wolves are hunting Fiona, and Azamel knows something about it. I want to learn about that, help Fiona, and maybe stop Jacob from doing something he'll regret in the future. You said you were hanging out with him not too long ago?\"\n\n\"... yeah.\" Memories of Clara's split mouth were not pleasant. One punch from the old man was devastating. Not even a punch, a backhand. \"He can handle himself.\"\n\n\"I'm not so sure. He told me what it's like, when these wolves go full war mode kid. Fucking terrifying.\" Triss shivered and rubbed her arms a few times. \"So, Avery says Fiona is an Azlu, some sort of spider thing?\"\n\n\"Yeah, says she's fucking with the Gauntlet, whatever that is.\" And that Antoinette was also fucking with the Gauntlet. Ordo Dracul business no doubt, and if he asked, she'd tell him such. \"... we sure we don't want to go ask Tasha or Jessy to come with us? Or if not some Invictus, how about Othello or Aaron?\"\n\n\"Like I said, doing their own thing. As for your buddies, you can tell them what we learn when we're done. Sorry if I don't trust them. I've been dealing with them longer than you have.\"\n\n\"Ever get into a fight with Tasha or Jessy?\" He never really considered that. Hard to imagine that these people had been getting into scuffs with each other for years before he ever learned of vampires.\n\n\"Not really. Back then it was the trio, the right hands of the Invictus, always together and getting in the Carthians' way. Garry would ask me to go check out a new building the Invictus were showing interest in, I'd show up and they'd be at the doors, preventing my access. Or they'd be in the tunnels blocking my access to areas Garry wanted some info on cause he thought the Invictus were spying on him in the area.\" She laughed again. \"Good times.\"\n\n\"I... I suppose it must have been. Just a few covenants to worry about, and only one of real opposition. Then Lucas returned, and then he died and things were fine for a whole five seconds before monsters and werewolves showed up.\"\n\nShe laughed again and pat his shoulder. \"I got to admit, over half a year now since you've been embraced, and it's been the most crazy year for Dolareido in a long time. Coincidence?\"\n\n\"... fuck I hope so.\" Tony, Viktor, Lucas, why the fuck did all the crazy shit come flying his way? What did he do to deserve such a role in their lives? Other than having a bad habit of putting his foot in his mouth, and putting the same foot into business he should have avoided. \"So, where is this Azamel?\"\n\n\"Aaron says there's been some unusual people hanging out deep beneath Morning Street. He didn't get close, but he says they're just hanging out there, and one of them is an old woman. Sounds like it could be her.\"\n\n\"Sounds like it could be a few human squatters too.\" And he kind of hoped it was. He wanted to go back to Antoinette, get back to being underneath her, feeling her huge breasts pressing on him, her lips tugging on his. This whole trip was likely to put another problem in her lap, and he didn't want to do that.\n\nMaybe it was his Ventrue blood coming through. Maybe it was his natural curiosity. Maybe it was just Jacob being correct, and he really did have some sort of unpredictable tenacity. He kind of liked Jacob's appraisal, insults aside; it stroked his ego, and all Ventrue loved to have their egos stroked. But if his actions meant being a pain in the Prince's ass, he didn't want to do that. But then, if he ever stopped pursuing his personal or Invictus goals, even the ones that got in her way, Antoinette would likely think badly of him for it. And he would too.\n\n\"So, Jack, you get laid on a pretty regular basis now right? The Prince, and her ghouls too right?\"",
        "\"... you are worse than Jessy. Yes, I do, with Antoinette. Sometimes her ghouls join us, sometimes they don't. Didn't we talk about this before?\" The Jessy comparison was enough to make the Nosferatu sneer.\n\n\"Yeah just, I dunno, you're still young and your opinion on this is valuable. You think it's weird? Kindred just fucking everything and everyone all the time?\"\n\n\"Um, not sure what you mean.\"\n\n\"Yeah uh... nevermind, forget it.\"\n\nHe raised a brow as he looked at the deadly woman next to him. What was on her mind? No need to push though, not with Triss. If she wanted to talk about it, she'd talk about it.\n\nIt took a little while to get down to the tunnel beneath Morning Street. They passed some Nosferatu on the way, but no one Jack didn't know. A small nod was enough for him to go by with only an innocent question or two from them. It meant Julias and the others would know he was down here, with Triss, but that was inevitable. Besides, he wasn't doing anything wrong, he was nowhere near Devil's Corner.\n\nJulias would have words for the two of them later, no doubt. But it was easier to ask for forgiveness than permission. That philosophy seemed to come up a lot lately.\n\nThey turned off the flashlights as they got closer to their destination, and Beatrice covered them in the cloak of night. An invisible force that made his skin tingle as he felt his new partner's vitae extend its influence out and over him. Like that force, they were now invisible. From a distance people would not be able to see them. From close, their eyes would pass over them like shadows. Not as strong as Tasha's, much stronger than Amanda's. Hopefully strong enough to let them approach the beast.\n\nHumming. A voice. A quiet, gentle hum. Jack raised a brow and looked at Triss, but she shrugged and pushed on. The tunnels opened into a large room, and the two Kindred poked their heads out from around the wall into the enormous cavern.\n\nA stage of concrete. Furniture. Some very ugly, old furniture that belonged in his grandfather's home. No bed, but there were some drawers and a cabinet, and a changing curtain on a rod. A horrible, ugly green recliner, color faded and stained and covered in equally dingy red and blue flower prints. Good god if he sat in the chair, he was sure he'd find cigarette burns and smell cat.\n\nBut there was no nearby cat in the huge room. Just concrete walls, old lights, and an older woman sitting in the chair. Eyes closed, faded silver hair, short with the way age could make you shrink, and skin hanging off of her withered frame.\n\nIt was like Grandma had moved her living room and bedroom \u2014 minus the bed \u2014 into the Dolareido tunnels.\n\n\"Two children have come to my little home. Come closer, before I kill you.\"\n\nWelp, fuck. Every time he thought he had his bearings, something flipped them. Antoinette and Avery were the deadliest women in the city, but just a peek, just a glance, just a single fucking moment of voice, and this woman joined the list. How quickly he was reminded that he was an insect before gods.\n\nThe old woman's voice was exactly what you'd expect from a old woman, complete with the history of smoking and screaming at children to get off her lawn. Her eyes were open but only a sliver, and she wasn't even looking in their direction. As comfortable with her surroundings as an old woman in her living room.\n\nSighing, Beatrice stepped out from around the corner, and turned off the cloak. \"Yeah, sorry. Kindred habit, you know?\"\n\n\"Yes, I know all too well. I'm Azamel Venastroth, as I'm sure you're aware.\" Grandma leaned up from her chair and blinked her worn eyes at them, skinny and wrinkled fingers clutching at the arms of her recliner. \"I said come closer.\"\n\n\"Closer, right.\" Shrugging off her shoulders, Beatrice started the walk toward the woman's stage, and Jack fell in behind her. \"I'm Beatrice, and this is Jack.\"\n\n\"Little vampires that scurry and roam.\" The old woman shrugged and brought a hand up so she could lean down, and rest her chin on her knuckles. \"It was bound to happen with those dogs causing chaos above, I imagine. I wonder what they're up to.\"\n\nShe talked like a super villain, vaguely referring to things and letting their imaginations fill in the blanks; she knew more than she was letting on. The feeling in his gut as he got closer and closer to the old woman suggested as much, if not more, like instead she knew everything that was going on. Every step toward her felt like a step toward something terrible and vicious. Beatrice could feel it too; Jack could see her shivering a little as they came closer.\n\nBegotten could see the beast in other creatures, according to Fiona. Kindred couldn't, but they could feel something, they could feel an aura, something inhuman, some with hunger inside other Kindred, in the Uratha, and in Begotten. It was like trying to describe something you could only touch, its shape hidden in total black. You could feel something like teeth, feel something like bones and spikes and talons and claws and muscle and fur. You could hear the rumbling voice, silent but to the beast within. You could feel the heat of its breath, and taste the blood in it too.\n\nThis tiny, frail old woman's beast felt like some lost, ancient deity, long buried in the desert, unearthed by curious explorers who didn't know when to quit.\n\n\"Come then, speak little leeches, why have you come to my tiny hole in the Earth?\"\n\nTriss frowned and adopted a classic fuck-you-I-won't-do-what-you-tell-me stance, arms across her chest and one of her feet out to the side. \"We wanted to talk about Fiona.\"\n\n\"Fiona.\" Azamel shrugged, and sat back up straight in her chair. Her feet, complete with slippers, pushed against the concrete stage in a slow rhythm to get her chair rocking back and forth. Squeak. Squeak. \"Why do you think I would know anything about her?\"\n\n\"So... she hasn't come to speak to you yet then?\" Jack said.\n\n\"Not yet, no. I'm sure she will, as all Begotten should.\" The old woman started to cough, the deep gargling kind that came out of the lungs. \"And if she did, why would that matter to a couple of young Kindred?\"\n\n\"We're her friends,\" Triss said, \"and we're hoping to stop the Uratha from killing her.\"\n\n\"The Uratha are hunting Fiona?\"\n\nJack nodded. \"We were hoping you'd know why.\" And he doubted her ignorance was genuine.\n\nAzamel stroked her spotted chin, and looked down as she contemplated. Such an odd scene, an old woman god thing, sitting in Grandma's chair, in abandoned tunnels beneath a city.\n\n\"The Uratha,\" she said, \"are hunting spiders, as they are wont to do. Vermin according to them, relics from an era long gone, when their so called Father Wolf prowled the lands of flesh and spirit. Abominations, as they are. The wolves will not stop until the spiders are gone. I warned Antoinette these vermin would call attention to Dolareido.\"\n\nJack came in closer, and stepped up onto the stage. A bit presumptuous maybe, but she did say come closer. \"You knew the wolves would come?\"\n\n\"Of course. It is in their nature. And if I had known those spider vermin were making their nest in the city, I would not have come.\"\n\nTriss raised a brow and came up to the stage, but not onto it. Defiant just to be defiant. \"Why don't you leave?\"\n\n\"I have plans.\" Grandma coughed a few more times, and gestured to the dresser near her. \"Fetch my cigarettes.\"\n\nJack shrugged, slid open the drawer and got her cigarettes, a lighter too, and handed them to the deadly monster.\n\nShe snapped them up, but her efforts to pull a cigarette from the pack took time. Arthritis maybe. Naturally, the old woman refused to ask for help, and with time managed to pull one from the pack and light it herself.\n\n\"Now,\" she said as she balanced the lit cigarette on her lips, \"you two either have a lot of courage or lack of brains to come visit me. And you Nosferatu are walking on thinner ice with each moment, so zip it.\"\n\nJack choked down his desire to chuckle, and Triss lowered her arms with a grimace.\n\n\"I like to think we're somewhere between,\" he said. \"We want to help Fiona, and we were hoping you could give us information about this mess of a situation.\"\n\n\"Your goal to help Fiona is misplaced.\" Azamel took a long drag of the cigarette, and tapped its ashes into the ashtray that sat upon the recliner's arm. \"But before I answer any questions, why should I help you? What does old Azamel get back for this?\"\n\n\"An opportunity to help a fellow Begotten?\" Triss said.\n\nThe old woman frowned at Triss, since she refused to 'zip it', but shrugged. \"She's not part of my plans.\"\n\nPlans plans. This Begotten sounded like a Kindred.\n\nJack scratched his buzzed head. The conversation was going well, surprisingly well. Just like talking to Grandma. \"If the Uratha are hunting Fiona, they\u2014\"\n\n\"As I said, they hunt the spiders. What do Fiona and the spiders have in common?\"\n\n\"Way Damien tells it,\" Jack said, \"Fiona's monster half is very spider-ish.\"\n\n\"Interesting.\" Azamel nodded, took another puff, and blew the smoke toward Jack. \"What else?\"\n\n\"Uh... um... I don't know? I mean... wait, Fiona mentioned something about there being an extra disappearance in Devil's Corner that she says she's not responsible for.\"\n\nAzamel chuckled, coughed her lungs raw, and continued to rock. \"If this extra kill is being attributed to her, then it must have happened around the same time, in the same area.\"\n\nThe longer the conversation went on, the less she seemed like some unknowable monster, the more she seemed like a perfectly reasonable person. Maybe Antoinette and Julias were overreacting. They had a lot of hate for the Begotten, and so far he couldn't see why. Kindred had fuckups too, draugr vamps and such, let alone the nasty bastard elders like Viktor, Tony, and Lucas. This old woman deserved a chance. Right?\n\nTriss started to pace. \"So these strange spider things show up in Dolareido, and... the wolves show up to hunt it. There just happens to also be a Begotten here that is also a spider-like thing? So... these spider things are\u2014\"\n\n\"Sneaky.\" Azamel tapped the cigarette fresh of its ashes once again, before setting it down to rest. \"They are not mere spiders. They can act with far more intelligence than such creatures should be able to. And no doubt, they have been drawn to Dolareido, as its landscape has changed dramatically in a small amount of time.\"\n\nJack winced. To say the Azlu coming to Dolareido was his fault was a scary thought, but at the same time, three elders dead at his hand was probably what Azamel was talking about.\n\n\"So they're smart enough to take advantage of power vacuum?\" he said.\n\n\"Nothing so political, I imagine. No, they took advantage of the chaos, and when they realized Fiona was here, they saw an opportunity to create confusion.\"\n\n\"... fucking smart for spiders,\" Triss said.\n\n\"I said they're more than spiders, stupid girl. Would you... it's ok Athalia, these two children are just curious about the Uratha.\"\n\nAthalia? Jack looked around, but didn't see anyone. For a second he thought maybe the woman was senile, but after underestimating crazy shit enough times, you learn to stop underestimating crazy shit. Someone else was in the room.\n\nA woman stepped from a nearby wall. She hadn't been there before, and as she came off the concrete, her whole body emerged from black. It faded with a few moments, and soon became a beautiful woman of dark skin, slender and somewhat tall, with long black hair and soft features. Looked a bit like that Stephanie wolf now that he looked at her, but a kinder face.\n\nKinder face on the monster. Fitting metaphor, or a mask?\n\nTriss frowned at her. \"What are you supposed to be?\"\n\nAthalia shrugged, climbed up onto the stage, and sat down in one of the wooden chairs. \"The two of you have a lot of guts just randomly coming down here.\"\n\n\"I guess,\" Jack said, \"but we didn't think you guys would attack us or anything. We're all friends here, right?\" Athalia and Triss both snorted, and Azamel coughed. Ok maybe not. \"We're confused as hell and we're trying to save Fiona.\"\n\nAthalia turned the chair so she was sitting facing its back, and she folded her arms across it as she shifted eyes between Jack and Beatrice. \"Give me one reason to believe you.\"\n\n\"What?\" the two Kindred said.\n\n\"Give me a reason to believe you. Kindred here don't like us. Your Prince and Primogen would prefer we didn't exist. Daniel and Jacob... So, you have to convince us that you two are genuinely trying to help out a Begotten. If what you say is even true, and the Uratha are hunting her, which makes no sense.\"\n\nJack looked to Triss for some sort of help, but she looked at him with as much confusion.\n\n\"Uh...\" He hopped down next to the Nosferatu and turned to look at Athalia, his palms against the stage edge. \"Fiona has come to me on multiple occasions, looking for help getting used to Dolareido. I was the one that introduced her to the Primogen, at my choosing.\"\n\n\"And,\" Triss said as she came up to stand beside Jack, putting her hands on the stage edge in the same way, \"I don't give a rat's ass about Begotten, none of us do. The Primogen and older Kindred may have something up their ass about you guys, but Jack and I didn't even know your kind existed a month ago. Far as I'm concerned, this Fiona is a fun gal with a big appetite.\"\n\n\"Big appetite?\" Athalia said.\n\nJack nodded. \"Yeah, she's eaten twelve people in less than a year, and I get the impression she could have doubled that number if she feasted as much as her hunger told her to.\"\n\n\"... then, perhaps we should speak,\" Azamel said, \"sooner, rather than later. If she does not learn to eat without killing her prey, she'll attract more attention than the Azlu and Uratha. Athalia, bring her to me.\"\n\n\"Fine.\" Athalia got up, tilted her head until her neck made a rather disgusting crack sound, and started walking. Without them.\n\n\"I suggest,\" Azamel continued, \"that you two go back to the surface, and wait. Stay out of the way, and perhaps, the deaths will be minimal.\"\n\nMinimal deaths. Not exactly the peaceful solution he was looking for.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nNatasha opened her door, and did her best to hide her smile. Better to not let the two wolves know she enjoyed their visits; if they knew that, she'd lose the power. Or so Antoinette suggested as a means of seduction. Playing hard to get. Did she want to seduce one of them? She had to admit, as her conversation with the Prince had gone on, she'd found herself opening more and more to the idea.\n\nLittle her, seducing the big bad wolf. Antoinette had also suggested she wear a red dress with a hood, just to see if they'd get the joke. Look at her being all fun fun. She hadn't played around and laughed and been silly about things since Julias and her were close friends.\n\nShe had to visit him sometime. It'd been so long since they talked.\n\n\"Hey Tasha,\" Art said, sneaky bastard smile on his face. Matt was behind him, and the big guy offered a wave.\n\n\"Hi. What're you guys d-doing here? I could have been gone; you should t-t-texted me instead.\" She stepped back and motioned for the two werewolves to come in. Less stuttering finally, even when looking up at two frustratingly handsome, very dangerous men.\n\n\"We're still working on the phone situation,\" Matt said. As per usual, Art forgot to take off his shoes, and Matt stopped him from getting her floor dirty.\n\n\"Officially we're here because we convinced Avery that you provide us with valuable insight into the Kindred situation.\" Art shrugged, and slid onto a stool at her counter. \"But we're really just here for the TV.\" He gestured to the enormous device against the wall.\n\n\"You know,\" she said, \"if you wanted, it'd b-be easy to get you a better place... t-t-to stay than those old buildings in North Side. I c-could even get you a TV.\" It'd be easy, very easy.\n\n\"Heh, maybe!\" Matt took a chair from her living room table; easier to fit his body than a stool. \"We still don't know what'll happen after we catch our prey. I'd love to stay, so would Art, but Avery seems to think Jacob will make life hard for us. Not worth dealing with according to her.\"\n\nThey've loved to stay! She smirked and slid off the stool. Blood in the fridge awaited her, and she poured herself a glass as she struggled to contain her smiles. It was silly and dumb to get so happy just because a couple of guys were showing up at her apartment, but it was a first, and she wasn't used to it. It made her giddy.\n\n\"Blood out of a fridge?\" Matt said.\n\n\"Mmhmm. Not n-nearly as effective as drinking it out of someone, b-b-but this works enough to tide Kindred over for a couple d-days.\"\n\n\"How do you get it?\"\n\n\"The Prince owns many of the companies in D-Dolareido, including the hospitals. We p-pay kine to donate blood, handsomely. They d-d-don't know where a lot of it goes.\"\n\nArt laughed and reached out to take her glass. She let him, and grinned as the man held it in front of his face and tilted it to watch the thick liquid move and dip. Satisfied, he gave it back.\n\n\"Cozy situation,\" he said. \"In Tijuana the vamps had nothing so symbiotic. Kindred killed humans without mercy.\"\n\n\"That... is sad.\" She took another sip of the liquid, and stared into the crimson life. \"I remember every kine I've... k-killed. Sometimes, when we're so hungry we can't stop ourselves, w-w-we drain a human dry. But the P-Prince doesn't like that, and... and most of us agree.\"\n\n\"What if they deserve it?\" Art added, eyes darkening as a strange, subtle grin marked his face.\n\n\"Some Kindred take it on themselves t-to kill kine who deserve it, b-b-but I never... did it on purpose, I guess.\" Her kills were specifically only on kine who deserved it, but also only when she was so hungry she couldn't resist; which was the typical approach for Kindred outside a few vigilantes. Her answer seemed to satisfy Art.\n\n\"The bloodlust in Dolareido is very low. Interesting feeling, being surrounded by Kindred but not worrying about a sniper bullet to the skull everywhere I go. Don't see vamps fighting vamps in the streets, don't see humans being torn up on a regular basis, don't see any of the violence in Tijuana. I guess those three elders dying really agreed with Dolareido.\"\n\n\"It has.\" Though, from what they were describing, Tijuana was a far more dangerous place than Dolareido ever was, even before the purge. \"The w-worst you'll find here is... sex holes and d-d-drug abuse.\" Not entirely true of course. Kine had their own ring of crime, but nothing worse than found in most cities.\n\n\"Sex holes?\" Matt said.\n\n\"Y-Yeah.\" She poured herself another glass of blood. \"I\u2014wait, did... I uh, you t-two want food? I d-d-don't have, uh, any meat.\" Putting something other than blood into her fridge? She frowned at the thought, then laughed at the irony.\n\n\"Nah.\" The giant shook his head. \"We ate before coming over... so all these cupboards are empty? You don't put spices in your blood? I'm sure honeyed blood would taste pretty sweet.\"\n\nShe snorted, something between a laugh and a groan. \"Ick.\" Another sip, and she started to walk around, the way she did when she was talking on the phone. \"Sex holes are... a f-frequent feeding place for Kindred. They're clubs, sometimes just t-t-tiny rooms in the back of bars or similar, where kine show up for d-drugs, and sex.\" Not exactly the sort of feeding ground she used, but the more confident Kindred, Daeva in particular, used them frequently.\n\n\"Man,\" Art said, \"Avery was right about that.\"\n\n\"W-What did she say?\"\n\n\"That the younger Kindred take every opportunity to get laid, as often as possible, and basically fuck all night every night.\"\n\nNatasha frowned, but the frown faded as she thought of Jessy and her squad of delicious ghouls. \"Some of us... d-do things like that.\"",
        "Art smirked, a knowing smirk, an evil smirk. Maybe he could smell the ghouls on her? She showered, but werewolves were an unknown quantity. Maybe they could smell all sorts of embarrassing things? But without the blush of life, she could be twenty sorts of embarrassed and not give it away with blushing. Her averting, fidgety gaze though, she couldn't help that.\n\nMatt reached out from his seat and gave his friend a hard smack on the leg. \"Dude, uncool.\"\n\n\"N-No, it's ok.\" She shrugged, swallowed her fear, and resumed walking around her apartment. It settled her. \"We all have our vices. Uratha m-m-must have some?\" Not that sex was the only Kindred vice, but it was definitely one the younger Kindred gravitated toward.\n\n\"Yeah.\" Matt pointed at Art, big smile on his face. \"Some of us like to hang out at bars, just to cause trouble.\"\n\nArt shrugged and slid off the stool. \"Sometimes, it's just really satisfying to punch a bastard in the face.\"\n\n\"Or stab them,\" she said.\n\n\"Still looking to stab me?\" Art came up to her, sly grin and evil eyes looking down at her from his great height. \"Recreate a scene from Game of Thrones?\"\n\nShe froze, and stared up at the big man as he came near. As Art got closer, his smile drifted between dark and sinister, to playful and fun, like he might start pulling on her non-existent pigtails. A nervous glance Matt's way showed he wasn't going to interfere. If anything, the gentle giant seemed intrigued, eyes watching her with as much intensity as Art; but at least Matt's intensity didn't also look like he might attack her.\n\n\"You... y-you... you're not as scary as you think.\" She put down the glass, and pushed at Art with her two hands. Of course, Arturo was a very tall, very athletic man, and likely weighed over twice as much as her very very short self did. Attempts to push him back were frustratingly futile; all she did was push herself away from him.\n\nWhich sent both wolves into howls of laughter, and Art leaned onto the counter with both elbows to catch his breath.\n\nFor a moment she wanted to be angry; they were laughing at her. But she caught Matt's eyes, and even Art's when he managed to recover from what was apparently a nigh deadly laughter. They weren't laughing at her, they were just laughing. She started to chuckle too, and pushed Art again in the arm, though not nearly as hard this time.\n\n\"You t-two would like Jessy,\" she said.\n\n\"That the Gangrel girl, works for the Invictus?\" Matt said. \"Clara didn't have anything good to say about her. Said she was a bitch.\"\n\n\"W-Well... yeah, she can be. But she's my best friend, and she... reminds m-me of you two.\"\n\nBoth men frowned and looked at each other.\n\n\"Should we be offended?\" Matt said.\n\nArt shrugged. \"You can be a huge dick.\"\n\n\"Me? You're the asshole.\"\n\n\"How you figure?\"\n\n\"You're the one that keeps hiding Stephanie's shit.\"\n\n\"She deserves it. And you? Pointing Mason at her.\"\n\n\"Not pointing you dumbass, just\u2014\"\n\n\"You're going to make things worse, dumb\u2014\"\n\n\"You're the one ma\u2014\"\n\n\"Boys!\" She stomped her foot down. Light or not, it was enough to make a thud, and both men silenced as they turned to look at her, eyebrows raised. \"I didn't mean you're d-d-dicks, cause Jessy isn't. B-But you can be... boyish. Like her. Very...\" Now that she thought about it, how could she describe Jessy? What was it about her that made her and Natasha friends? What was it about these two that reminded her of her friend? \"V-Very... fun.\"\n\n\"Fun?\" they said together.\n\n\"Y-Yeah. Fun, as in outgoing, and... comfortable t-talking, and being upfront and fun about things.\" Everything she wasn't. She was trying to change, and succeeding according to Jessy, but it didn't change that Jessy, and apparently Matthew and Arturo, were boisterous, jovial, aggressive, and confident in ways she'd never be.\n\nThey blinked at each other, until Matt shrugged, and Art pulled himself up to sit on her counter.\n\n\"Tasha,\" Art said, \"the only thing separating you from being as stupid and loud as Matt and me is alcohol.\"\n\n\"I... oh.\" She looked down at her glass again, and tried to picture it as wine. No good. A lifetime as a Kindred had long destroyed any taste she had for human food. If she blushed life she could reawaken her old taste buds, but she couldn't drink or eat human food; unless she wanted to vomit it all up later. \"I've n-never been drunk.\"\n\n\"Yeah?\"\n\n\"Mmhmm.\"\n\n\"Well,\" Matt said with a small slap of one hand to the other, \"that's the problem. You don't know what it's like to turn off your brain. Which, I think, is perfectly fine.\"\n\n\"Nah.\" Art shook his head, reached out, and took her glass of blood again, only to set it down away from her, further along the counter top. \"It's healthy to turn your brain off every once in a while. Even Uratha aren't in hunt mode twenty-four seven. We relax, get drunk, goof around.\"\n\n\"Dude.\" The gentle giant shook his head, and slid the glass back toward her. \"You're a fucking Irraka.\"\n\nArt smirked over his shoulder at his friend, and shrugged. \"Yeap, so she has no excuse. Come on, want to go out?\" he said looking to her. \"We could go to a club, city seems to be swimming in them. Dance or get drunk. Or in your case, full on fresh blood with a very high alcohol concentration.\"\n\n\"You sure you're Irraka?\" Matt didn't look too convinced, and he got up to join them in the kitchen, butt to the counter as he leaned against it. \"Aren't your types normally anti-social?\"\n\n\"H-Haven't you two been friends for years?\" Tasha said.\n\nArt rolled his eyes. \"Ignore Matt, he's just being a dumbass. In Tijuana we didn't exactly have the luxury of high living solitude. No offense.\"\n\nHigh living solitude. An interesting way to phrase her life. She giggled as she thought of a monk, living a life void of Earthly desires, and having Wi-Fi.\n\n\"You t-t-two might think I'm all nerdy and boring, b-b\u2014\"\n\nArt put up his hands, palms out in surrender. \"Ha, sorry. Nerdy, yes, but boring? You were exploring that tunnel alone, and the way you managed to put up a fight, gave us all a big chase. Certainly not boring.\"\n\nShe beamed. That was true, she had done that all alone. \"B-But I... I was terrified, exploring that darkness alone.\"\n\n\"You and me both.\" Art shuddered and gestured to Matt. \"Only a dumbass like him wouldn't be afraid. Fucking Rahu.\"\n\n\"Hey.\" Matt looked down. The gentle giant looked genuinely hurt, but a moment later a smile blossomed, and he looked at Natasha. \"Even Rahu get afraid. But we use the fear to fuel us. I\u2014\"\n\nA buzz stopped them, and they all looked down at Natasha's pocket. She pulled out her phone and quickly checked the text.\n\nFrom Jack: Avery hunting Damien and Fiona. Thinks Fiona is something called Azlu.\n\nOh god damn it.\n\n\"Looks serious,\" Matt said. \"You went pale... well, you know, you would have if you weren't dead.\"\n\nNatasha winced and put the phone away, grimacing.\"Apparently, Avery... she... she s-says you guys are... hunting Fiona.\"\n\nArt got off the counter, and the two wolves looked at each other with a raised brow each.\n\n\"Fiona?\" they said.\n\n\"A monster, a B-Begotten. Avery thinks she's... Azlu?\"\n\n\"... a host,\" they said again, each bringing one hand up to their face to cradle it as they groaned in pain.\n\n\"But she's not! I've b-b-been with her, t-talked to her, she's a... she's... I've seen the monster inside her. That's Begotten.\" Shit shit, she shouldn't have said anything. Ugh she was starting to act like Jack, saying things when she shouldn't, giving away information. Used to be so good at information control, now she was acting like a child.\n\n\"It also describes Azlu pretty damn well. Come on.\" Art pat his friend on the arm, and turned around.\n\n\"Sorry,\" Matt said, \"but if she's Azlu, then... she's not your friend. You'll thank us later.\" He nodded, and followed after Art toward the door.\n\n\"W-Wait! I... I can't believe that. I saw her w-with my own eyes, and she... she was a person. A n-n-normal person... normal for a B-Begotten anyway.\"\n\nThe two wolves looked at each other as they put their shoes back on. It was easy to see they didn't believe her, and were trying to find a delicate way to break the news to her that they'd likely be killing Fiona. Or at least it was easy to see on Matt's face; Art was better at hiding it.\n\n\"If Avery says we hunt them, we hunt them,\" the Irraka said, and he opened the door without a glance back. \"Sorry.\"\n\nShe dashed past Matt, under Art's arm, and into the hallway outside her door. Little her before the mighty wolves; they looked shocked. Good. She reached out with both hands and pressed against Art's chest \u2014 which she had to aim up to even reach \u2014 to push him back into the apartment, before closing the door behind her.\n\n\"You t-two, you're going to make it happen again!\"\n\n\"What?\" they said.\n\n\"What happened last t-t-time! Avery killed Minerva, and that... p-probably could have been avoided! You have to\u2014\"\n\n\"Tasha, listen.\" Matt came up behind Art, but couldn't get around him with the tiny amount of space around her door. So the giant peeked over his friend's shoulder, and shook his head with a sigh. \"We have to act fast, or this problem is going to escalate, in ways you don't realize. It could\u2014\"\n\n\"No!\" She stomped her foot, and folded her arms across her chest. \"You will n-not behave rashly, and make things worse. The P-Prince lost a friend because of Avery, and J-J-Jacob, he...\" What to say about Jacob? She never interacted with him; she knew better. Stay away from the old man, from his games. But in her fifty years as Kindred, he'd never done anything to make her want him to suffer.\n\nShe could imagine the eyeless man, sitting in his cave, surrounded by bones and scary, creepy things, while he wallowed in misery after the death of his love. Antoinette had painted quite the picture, and let Natasha's imagination fill in the blanks. Her imagination did love to exaggerate, but even knowing that, she couldn't help but feel for him.\n\nAnd she didn't want Fiona to die.\n\nArt, wincing, reached up to scratch the back of his neck. \"Well Avery hasn't contacted us yet, but we have to get back to the base by sunrise. And no doubt, she'll want us hunting after we get some sleep.\"\n\nDamn it damn it. They could move in the sunlight, she couldn't. She had to do something now while the sun was down and she had time to interfere.\n\n\"D-Damien... could get hurt too.\"\n\n\"Damien?\"\n\n\"A Kindred. He was the one t-to d-d-discover Fiona was a Begotten. He... he's probably with her now... and...\" And she didn't want him to die either.\n\n\"Our hands are tied,\" Matt said.\n\n\"... no. N-No, we're going to go find this thing now!\" Again, she stomped her foot.\n\n\"Find the Azlu? Now?\" The gentle giant looked down at Art as his friend looked over his shoulder at him.\n\n\"Well, if we can find the host and prove it's not this Fiona girl, I'm sure Avery will listen to us.\" Art elbowed his big friend in the gut, and smirked. \"Think you can stop being a momma's boy for five or six hours and come scouting with the two sneaky beasts?\" Beasts? She was sneaky, all Mekhet were, and so were Irraka if the werewolves were telling her the truth. Calling her a sneaky beast was a strange but welcomed compliment. \"Got your weapons with you Tash?\"\n\n\"Y-Yeah, uh... give me a second.\" Finally, some progress. She slipped past the two titans crammed into her door's little hallway, and went into her bedroom to get her spare gear.\n\n\"Not sure this is a good idea,\" Matt said, loud enough for her to hear. \"But, if you two idiots are going, I'll come too. Keep your dumbasses alive.\"\n\nShe came back with a sword and pistol, vest holster, and the appropriate suit jacket to hide them. \"I can t-take care of myself.\"\n\n\"You can at that,\" the big guy said, grinning at her, and winking too.\n\n~~~~~~~~~~~~~~~~~~~~~\n\nThe tunnels once again. Still a little ways to go before before they reached the area under Ronder Street, but the lights were already starting to become sparse, fewer and fewer of them functioning and lit. And the old chill of its dark, awaiting lengths crawled up her spine again.\n\nBut this time she had back up, two big bad wolves, she shouldn't be afraid. Then again, if it was an entire pack's job to hunt down this thing, and they were normally thirteen, would two be enough?\n\n\"I thought about asking if you had a flamethrower,\" Art said, hands in his pockets. \"We could really use one for this prey.\"\n\n\"... a flamethrower. Um, n-n-no, I have nothing like that. Kindred, we d-don't like fire.\" She wasn't even sure if they had such weaponry in the Invictus storage. Maybe her new boss did, but she doubted it. Sort of a rule of war for Dolareido, don't use fire. \"W-Why would Uratha use a flamethrower?\"\n\n\"We're going after Azlu.\" Matt came up on other side to walk beside her, eyes set on the darkness ahead. \"Hosts, from before the Sundering. Abominations, half-spirit half-flesh nasty things. The Azlu are spiders. They crawl into people's skulls and eat their brains, take over their body, grow and mutate into monstrous... monsters.\"\n\nNatasha tried to not smirk at the man's poor vocabulary, especially as the image he was painting was not a pretty one.\n\n\"Uratha are half-spirit half-flesh too.\" Art shrugged and tilted his head to the side, until Natasha had to wince with the loud snap sound of his neck crack.\n\n\"Spirit...\" She thought about the feelings the spirit Safe had bathed her in, the strange way it talked, the insanity that such a creature existed.\n\nMatt poked her in the shoulder. \"Interested in spirits?\"\n\n\"I, uh... you were r-right, about the Prince, experimenting with s-s-stuff. And... some of the stuff I've seen d-d-does look... interesting, and... wonderful.\"\n\nArt didn't look too happy about it. \"The Hisil is just as fucked up and brutal as this side of the Gauntlet, Tash. Not sure what you and white hair have been up to, but don't start trying to do... well, what Minerva did, according to Avery.\"\n\n\"C-Can you tell me what Avery was... d-d-doing that\u2014\"\n\nArt brought up a hand and shook his head. \"No. Sorry.\"\n\nShe sighed but nodded. \"So, the Hisil, that's... I d-don't really understand.\"\n\n\"Better that you don't,\" the Irraka said.\n\n\"I disagree.\" Matt reached down and pat her on the shoulder. \"Some healthy curiosity in you. Avery doesn't like it, but I think we can convince her to let us show you some things sometime.\"\n\n\"Show m-me things?\" She'd replace Jack as the intermediary at this rate.\n\n\"Art said it,\" Matt continued, \"we're half-spirit. Maybe we could show you the Hisil sometime.\"\n\n\"You're a dumbass. Avery will never agree to that, and you're going to get her killed.\"\n\n\"She can handle herself, and she'll be with us. You're just as bad as her, thinking it's the same as before, or like in Tijuana. Things are different here.\"\n\n\"Lenny you moron. Shit will\u2014\"\n\nShe punched them, both of them, Art first then Matt. \"We can t-talk about that stuff later. For now, w-we should be quiet, and f-f-find this thing.\"\n\nThey chuckled, and nodded. \"Yes Mom.\" Again, in unison.\n\nArt shook out his shoulders, and started to fall onto his hands. Matt stopped, and Natasha mimicked. What was going on, why stop, why fall? Why\u2014\n\nShe jumped away as the man's clothes began to vanish, only to be replaced by fur. Vitae jolted through her limbs and demanded she run away as the man began to change; she still remembered what it felt like to have those claws in her limbs and guts. But those beasts stood upright. Art was on all fours, and turning into a wolf. A really, really, really big wolf.\n\nHis hands became paws, but large, monstrous, with huge claws. His muscles showed through the fur as thick, hulking masses. He was four feet tall at the shoulder, and seven feet long, maybe eight. Ridiculously massive teeth jutted from his chops, head attached to a thick, powerful neck. More like a lion with wolf features. Her jaw dropped as the man came to end his transformation, and she gulped on nothing as she looked the unnatural creature from nose to tail.\n\n\"That uh... w-wouldn't pass... for a wolf.\"\n\nMatt laughed and pat her on the back again, huge hand dwarfing her spine. \"That's Urshul form. We can go Urhan, Wolf form, but it's not strong enough to deal with much.\"\n\nA form between the war titans she'd seen, and a normal wolf.\n\n\"W-Wait, this is... when I first saw you in the tunnel, in the dark before you chased me. You were in this... f-f-form.\"\n\nArt nodded his large wolf head, and stepped in toward her. She froze as the gargantuan mutant canine pressed his head against her arm, and then her shoulder.\n\nDon't pet the gigantic wolf monster, don't pet the gigantic wolf monster, don't pet the gigantic wolf monster.\n\nShe pet the gigantic wolf monster.\n\nArt crooned, a deep rumbling sound in his immense throat, and rubbed his head against her hand.\n\n\"Arturo Ibarra, you disgrace wolves everywhere.\" Matt reached out and shoved the big beast's head away from her.\n\n\"Hey! D-Don't push him. He's... he's so warm and... fluffy.\" Course he looked far more menacing than fluffy, with especially primal wolf eyes to match his massive, muscular wolf body. But that didn't change that he was, indeed, fluffy. The fur of his neck was particularly thick, almost like a mane, and she stepped in again to rub her fingers through the softness. Must touch the fluffy.\n\nAfter what was probably far too long rubbing his ears and combing his fur, they started walking again, this time with Art out ahead of them. He was their scout evidently; probably why he transformed. And as she watched his shoulders shift with each paw's step, she realized she'd just spent five minutes rubbing Arturo's face and shoulders and back. He probably planned it, just so she'd feel awkward later. Evil bastard.\n\nBut, watching him prowl forward, she still wanted to pet him some more. She had to shake her head a few times to remind herself he was Art. Not a dog, not a wolf. But, maybe he could go full normal wolf mode, and sit on her couch, and let her pet his head? And Matt too? It'd been a long time since she'd owned dogs.\n\nWerewolves, Natasha, they're werewolves, not wolves. Focus.\n\n\"Can you t-two see in the dark?\" she said.\n\n\"Better than a human yeah, but nothing crazy. We were pretty surprised a vamp was exploring the dark; we had to go by our noses.\"\n\n\"I can s-see b-b-better than most Kindred in the dark. But, m-maybe we should use a flashlight this time?\" She brought one out, small enough to hold easily in one hand, and she held it reverse grip, pointed out toward the darkness. A quick snap of the other hand and she had her pistol out, held on top of the wrist of the other hand.\n\n\"Doesn't look like the pistol model you used when you ran into us,\" he said. They'd started walking, and sure enough the lack of lights would have left most Kindred totally blind in the absolute black, and the Uratha too.\n\n\"It's n-not. We know these d-d-don't do much, against werewolves. So now most Kindred who use p-pistols... will use machine pistols. If we can't bring a werewolf down with a few b-bullets... a few hundred might d-d-do better.\"\n\nMatt winced, but laughed. \"Yeah, they do. Tijuana taught us that.\"\n\nCourse, machine pistols were the weaker choice over shotguns or sub machine guns. Or in the case of the Carthians, assault rifles. But it was easy to fit under the jacket, and unwieldy as a machine pistol was, Kindred strength made up for it.\n\nThey fell into silence as they continued along. Or at least, what Natasha thought would be silence, but something kept interrupting it every few seconds, a strange, straining noise of air.\n\nBreathing. She was hearing the two werewolves breathe. Last time she was down here, the only sound was the rubbing of fabric from her movement, and her steps. Now she could hear the wolves breathe, and as their ears adjusted, she could hear their heartbeats. Big, powerful heartbeats.",
        "How long had it been since she'd heard a heartbeat? She hung out with Kindred so often, and when there were humans or ghouls nearby, there was far too much city noise to hear the quiet things. Down deep in the Earth, she could hear them breathe, and swallow every so often; perfectly normal for a human or giant wolf, but so weird to hear. Felt like being on a hunt, hearing things so acutely, hearing life so acutely.\n\n\"W-What are we... looking for?\" she whispered.\n\n\"The Azlu will weave webs,\" Matt said, \"that often look normal, and then huge. But it'll also weave invisible webs in the Gauntlet, trapping any who crossover.\" The giant shivered and rubbed his arms. \"I do not enjoy the thought of being wrapped in webbing and having those vermin crawling on me.\"\n\n\"Spiders... are s-scary.\"\n\n\"They are.\" He smirked down at her, knowing full well she was talking about real spiders. But it was nice to see the huge guy express the same fears she had. \"So we're looking for those webs where we found you last time.\"\n\nShe wanted a shower just thinking about those webs getting into her hair.\n\nThey continued on for another thirty minutes, deeper into the old tunnels and through the abandoned depths. All the lights were out, the only source of light her flashlight. If it went out or broke, the best she'd see would be blurry silhouettes, and her two partners would be blind. But they weren't down here for a fight, they just needed to find the thing and prove it wasn't Fiona.\n\nDid she want to prove Fiona wasn't their prey because she liked Fiona? She did, but she barely knew her. Maybe it was Damien; she wanted to help bridge the gap there. Or was it Jack? She liked him a lot, and Julias too. She wanted to help him.\n\nDid she have her own reason for being such an idiot, or was she just drifting through her choices without knowing why she was making them. She'd ask Julias such an existential question, and he'd probably say something like: you're doing it cause you're the sort of person who tries to make everyone happy, at your own expense.\n\nSilence and darkness really did make her mind wander.\n\nAs they went deeper, she had to check herself for any spider webbing that may have caught on her. More webbing, and more, bigger and thicker. Ahead, Art came to a stop. Matt and Natasha stopped behind him, and she pointed her light into the distance before them. She expected to see a giant web perhaps blocking their path, but instead found webbing that'd been cut.\n\nSomeone was there, a woman, walking around in the darkness.\n\n\"Two Uratha and one Kindred. Odd arrangement.\" The woman walked toward them and dusted some spiderweb from her shoulder. \"What're you three doing down here?\"\n\n\"We could ask you the same thing,\" Matt said. \"Tunnels are off limits to Kindred.\"\n\n\"Good thing I'm not Kindred.\" She came closer into the light, and spent a little more time wiping webbing from her pants. Dressed like a Carthian, wearing some black jeans and likewise black boots, along with a white t-shirt. \"Asked you a question, what are you doing down here?\"\n\nNatasha took a step back, and looked at the two wolves. \"That's... n-n-not Fiona.\"\n\n\"Nope, I'm not Fiona. Looking for her though. Can't find her in the dream so I figured I'd come looking where everyone seems to think she is.\" The woman was a bit tall, black with long, beautiful dark hair that made Natasha jealous; so lustrous. Skinny but fit, and her face had a softness to it that her eyes didn't agree with; they seemed angry, and comfortable being angry.\n\n\"How... c-c-can you see... in this darkness?\"\n\nShe shrugged and folded her arms across her chest. Whoever this girl was, confidence dripped from her as much as the air of creepiness around her. \"Most Eshmaki can.\"\n\n\"Are... you Athalia?\" she said.\n\n\"Hey, you know my name. Kudos.\"\n\n\"I... there were rumors... about the sheriff and a Begotten.\"\n\n\"Just rumors.\" Athalia sneered and shook out her shoulders, like she was preparing for a fight. \"So if you don't mind, leave. Way I hear it, you dumbass wolves are hunting Fiona, which is pretty fucking stupid. She's not a host or what-the-fuck-ever you call your prey.\"\n\nMatt came closer, as did the giant wolf beside him, but Athalia didn't move. Didn't even blink, far as Natasha could tell.\n\n\"We're hunting the creature,\" the big guy said. \"If it's this Fiona girl you're talking about, then she's already dead, and I'm sorry. So we're\u2014\"\n\n\"Yeah I don't think so. Get out.\" Athalia took a step toward them, sneer unwavering.\n\nMatt looked down at Natasha, blinked a few times, and looked back at Athalia. \"I\u2014\"\n\n\"You fucking wolves love to bite first, ask questions later. So how about, no. Get out, before I make you.\" Again, she came closer, and her dark brown eyes glared death into the three of them.\n\nThe colossal wolf took a step forward as well, snarling and growling, rumbling in his throat, primal and angry.\n\n\"W-Wait! Please.\" Natasha lowered her pistol and came closer, light pointed at the tracks beneath them. \"This is w-what I wanted to avoid. We c-c-can work together, communicate, and p-prevent any more fights when\u2014\"\n\n\"I trust you as much as I trust your wolf buddies to not chase a squirrel. I. Said. Leave!\"\n\nNatasha's light began to flicker as Athalia raised her hands. It should have been stable, but the light cut the darkness in periodic flashes, like panicked heartbeats, and all three visitors took a step back as a wall of obsidian nightmare filled the air behind the beautiful woman. They could see nothing between the flickers, but when the light shined on the tunnel, movement subtle but chilling drifted around Athalia.\n\nWhatever it was, it was crouched forward to fit itself in the tunnel, its head of bone and teeth and spiked, serrated horns looming closer. It had arms, each also covered in what looked like spikes jutting from its black flesh, black that bled droplets of onyx onto the concrete before they faded. Like a giant, human torso, with arms and fingers, a head, all covered in spikes that poked through its dark skin and bled devil's blood. Gaunt, with bone showing through so its face looked more like an ancient mummy armed with a thousand shark teeth. Where its waist should have been, its flesh fell away and exposed a massive, dangling spinal cord that sat behind Athalia.\n\nAnd it had wings. Black angel wings.\n\nThe colossal entity slammed its immense hands onto the concrete beside them, and for the brief second the death creature existed, it shook the tunnels enough to send vibrations up through Natasha's bones and into her skull. And then it vanished in an instant, leaving the angry woman standing there and glaring at the trio.\n\n\"Azamel says I should see the horror in each of us, and respect each other as different forms of beast, as different children of the dark mother.\" She scoffed, and came closer again. \"Each of you think yourselves dangerous creatures of the night, the moon, of blood and hunger. Pathetic. You Kindred are nothing but blood leeches, and you wolves are animals. Just simple-minded animals.\" Again Athalia brought her hands up, and again in the flickering waves of white from Natasha's flashlight, the torso of Death appeared, struggling to fit in the tunnel, great maw open so they could see the endless darkness down its throat. It roared at them, but its voice was a screeching wind and no more.\n\nWhen the light was off, the only thing Natasha could see, was two white, glowing dots where the horror's eyes were, like small white pupils in the empty eye sockets of a skull.\n\nThe horror faded away, and again, only Athalia remained.\n\nThis was a Begotten? Fiona had demonstrated a little of her power, and she'd seemed like some sort of spider entity. This Athalia, she felt sort of like Fiona, but sort of different, and her horror certainly looked different. Like something out of a far more modern, more twisted nightmare. Like something out of a horror movie a little kid shouldn't be staying up to see, a movie with slaughter and gore and death cries.\n\nNatasha took a step back, and stared. But Art barked \u2014 more like roared \u2014 and came forward. Matt did as well. Certainly not fearless, not from what Matt had just told her about spiders, but they came toward her anyway.\n\n\"You're the one starting a fight,\" Matt said, \"not us. Hell we're here without our pack, just to see if Tash is right about Fiona. So... so...\" His voice died away as he looked past Athalia into the darkness beyond. Athalia turned around as well, and Art came closer to her. The opening was there, Art could take it any time he wanted, but instead the enormous creature stood near the other two, and stared into the black.\n\nThe little Mekhet walked over to join them, and in the dead black and cold silence, she pointed her light into the tunnel. There were more spiderwebs ahead, large ones, and they were moving, shaking a little, like someone was tugging on them. And now that she was listening again, it wasn't cold silent anymore, there was noise, a distant rumbling sound. And scratching, like someone dragging stone on concrete.\n\nSomeone was out there.\n\n\"I... w-what... should w\u2014\"\n\nThe ceiling of the tunnel exploded. She had only enough time to point her flashlight up to see the webbing narrow with tension, and the sound of strings tightening like rope, before concrete slabs started to fall in. A lot of them. The rumbling rose to ear shattering, and an earthquake tore through the tunnel as more than just the walls of the tunnel fell apart, but the metal tracks ripped upward as well. For a split moment, the rails bent like a whip, before twisting into permanently bent coils that shredded everything around them, breaking like rope pulled too tight. And the four of them were on the tracks as they snapped.\n\n\"Fuck! Get back, get back!\" Matt started to back away, arms out and up. Natasha managed a quick glance at him before every panic reflex she had had her turning around and sprinting at full Mekhet speed. Matt was getting bigger than before, taller, thicker. Some of his wolf was coming out of him, making hair grow longer, muscles bigger, everything. One of the giant blocks of rock crashed against his shoulder and tore through muscle, but Matt stayed standing as he turned around to join her.\n\nShe didn't get far. The tunnel ahead had webs as well, and the domino reaction of the collapse was tearing through the darkness faster than she could move. One of the tracks ripped up from underneath her, and snapped to the side with a loud crack. She went with it as it caught her, and the blackness engulfed her as she collided with concrete. First the ceiling, then the wall, each got a turn to remind her how hard concrete was compared to skin and bone.\n\nMatt was running for her, so was a giant wolf next to him.\n\nShe reached up to touch her head. It was wet, and covered in dust and dirt. Couldn't see it with her flashlight on the tunnel floor and pointed away, but she could feel it. She could feel bone too.\n\nThen the pain hit her. White flash, but not from the flashlight, and she coughed from the overload, searing fire launching through her extremities before settling in her skull. Vaguely aware of the noise around her, blurry movements, massive walls of concrete and metal beams ripping the world apart, the howls of pain from what sounded like wolves, and a dark-skinned woman running past them.\n\nAnd spider legs.\n\nMovement followed the chaos, and enormous legs stabbing into the shredded floor followed, eight of them, spindly and hairy and long and sectioned into many joints, just like spider legs, just like the legs Fiona displayed.\n\nBut this wasn't Fiona. A man, or at least his torso, sat upon the spider body where its head would be, its form mutated and lined with black discoloration to match the hairy, enormous, mutated spider body underneath it. Its face was a mess of ruin, spider eyes mixed in with human eyes, nose vanished, mouth expanded with a pair of fangs, and random patches of his\u2014its hair and beard were gone, leaving bald, scarred flesh where they must have been before. Its arms didn't end in hands, but in giant bones that looked more likes scythes or sickles.\n\nIt screeched at her, mouth opening and exposing a disgusting mixture of human teeth and spider fangs.\n\nShe tried to move, but her legs weren't working. Too hard to see what was happening to them in the black, with the flashlight still pointed away from her and sitting on the concrete before her, but the pain running through her limbs was buried by the pain in her skull. Again she tried to move, hands reaching out for the slabs of concrete sitting around her, still shaking as the giant spider before her yanked and pulled on its trap of web. More of the tunnel around them shattered and ripped open, like someone inside the belly of a snake making its body bleed around them. Damien would probably make a comparison to Jonah and the whale.\n\nAthalia was gone, or at least Natasha couldn't see her; not that she could see much at all. She reached for her flashlight, and screamed out as the movement lit her body on fire. Her arms collapsed with a new weight, immovable, total and final, pinning them to her sides. Nothing on them, nothing holding them down, but she could no longer move them, dare not move them, even as the spider thing came closer to her, its many eyes blinking and hairy legs stepping over the flashlight.\n\nA roar interrupted the rumbling of the tunnel's collapse. Claws and fur from a new source jumped across the light and against the spider titan, crashing weight against weight as a ten-foot giant of muscle landed onto the spider's side. The werewolf was mammoth in size, but the spider monster was taller, and five times longer and thicker with its grotesque monster body, and human, mutated half far larger than any human should be. More than large enough to fight the werewolf.\n\nAnother wolf leaped onto the monster, almost as large as the first one. Matthew, and Arturo, in their full werewolf form, towering beasts of strength and primal rage filled with snarls and roars, were both latched onto the creature. They bit into it, clawed and tore at its body, red and black gushed from wounds, and its screeching sounds threatened to rupture her ears. Like lions trying to bring down an elephant.\n\nIt raised a bone claw, and slashed one of them along his side. More blood poured, and animal roars followed. But the wounded beast didn't relent, he leaned in and kept his claws sunk into the side of the creature and bit into it. He thrashed his head from side to side, like a wolf tearing meat from a carcass, and the monster spun and twisted on its eight legs as it tried to stop the beast from shredding it.\n\nIt raised both claws again, and slashed as it spun. The speed and inertia of its enormous size was undeniable, and the two werewolves were thrown from its body onto the debris around them. They rolled, twisted, and almost flew as their weight crashed into the rubble, sickening crunches of bone and flesh following each impact.\n\nShe had to run. Flee, get away. The tunnel was collapsing around them. Buried alive. Buried alive and she was going to wither into a husk and her two friends were going to die.\n\nThe spider creature slashed the walls and pulled on more of the webbing, bringing down more of the concrete and metal and god knows what into the black. Art and Matt were already up, bleeding, broken bodies healing faster than Natasha ever could. They threw themselves back at the creature, but found only a crumbling ceiling of rock. What was once a tunnel of rubble became a wall, filled with steel bars and enormous slabs of concrete.\n\nShe looked to the right. Her flashlight, still on the ground in front of her, managed to light up the tunnel enough so she could see it, and the wall of rubble. She looked to the left and found the same thing, except with two giant wolves standing before the new barrier. The larger one was clawing at it, tearing at the mess and metal. His claws ripped through concrete one inch at a time, grating it down deeper and deeper until Matt dislodged a chunk. As the block fell to the floor, the tunnel rumbled, and more of the ceiling began to collapse around them.\n\n\"Stop! S-Stop before the t-tunnel caves in!\"\n\nHe didn't stop. He continued to rip and tear, snarls and howling included, and more of the tunnel began to collapse as the beast shredded the barrier. Until Art grabbed his fellow werewolf and threw him to the ground.\n\n\"Enough!\" Art said, or barked. \"Look.\" He gestured to the mess around them, barely lit by the flashlight.\n\nMatt forced himself back to his feet, blood trickling over his fur, exposed wounds healing and closing, even as he turned and started back for the wall. \"Must kill. Kill. Kill.\"\n\n\"S-Stop!\" Natasha tried to move again, but her body was rooted by pain and weight. Something was holding her down. \"Stop please, you'll... you'll g-get us all killed.\"\n\nA long time ago, maybe forty years, Natasha had a mission to kill a draugr, a Kindred who had succumbed to the beast inside. Much as Kindred liked to think of themselves as intelligent, superior to the humans they preyed upon, vampires had a beast inside them as mindless and bloodthirsty as a starving animal. It ate at the mind, the soul, and every Kindred fought against its desires to feast, to hunt and kill, or they'd destroy the Masquerade, and their self in the process. If they lost that battle, they become draugr, a revenant, mind and soul gone, just a body for the beast within.\n\nShe found a woman, not much older than her, who'd indulged her beast far too long, forgot she was once human, and bathed in the hunt, the kill. Natasha had to end her; felt like shooting a rabid dog. But she remembered the look in the woman's eyes, the total and utter lack of humanity, the primal, animal hunger and aggression. Chilled her to the bone.\n\nMatt looked at her just like that.\n\nArt grabbed his friend by the snout, and yanked him down to look him in the eye. \"Peace! Kuruth devours you. Peace, shartha escape... for now.\"\n\nMatt looked ready to rip his friend apart; and he could have, considering their size difference. Art was a big guy and a huge wolf, but his friend was titanic. The tension in the dead air forced Natasha to stare at the two of them, even as searing agony filled her skull. If she coughed, she felt like Matt would snap, and tear Art in two.\n\nBut the enormous creature started to breathe deeper, slower, and he let his shoulders drop. Art let go of his snout, and the two beasts stared at each other as the silence settled around them.\n\nThey started talking, in a language Natasha didn't know. Kuruth came up again, something she'd heard before, but everything else was new, hard guttural words that fit their mutant wolf mouths far better than English. They nodded a few times, mentioned Azlu a few more, and Fiona once, before they both started to walk around.\n\nArt found her, winced \u2014 if it could be called wincing from a giant wolf head \u2014 and reached down to pick up her flashlight. His hands struggled to handle the tiny thing, now that they were beast-like, and immense. But, he came closer to her, and knelt down with the flashlight. As he did he started to shrink, his features began to fade away, and not always with a smooth transition either, but sometimes with a disgusting crunch of what must have been bone. It didn't seem to bother the man, and he pointed the flashlight at her as he got smaller and smaller, until his clothes reappeared, and his dark eyes were human once again.\n\nHe shined the light along her body to her legs. Both were crushed under a metal beam, one of the tracks. But, there was more trouble than just her ruined legs, as she caught the man's obvious and loud wince and groan when he brought the light up to her head.\n\n\"You uh... appear to be missing a chunk of your skull.\"",
        "She sighed, and nodded. \"It'll heal... g-get this... thing off of me.\"\n\nMatt came over, and the two men scooped under the beam to lift it clear of her legs. And the pain came back with a vengeance, a thunderstorm with cracks of lightning that scorched her dried veins. If she were still alive and human, it'd probably have been better to leave the beam there or she'd bleed out, with how it had nearly cut through her shins. But Kindred blood was thick, powerful, and it stayed in her wounds as it began to heal them, reform the bones, bind muscle and skin, reattach tendons.\n\nOr at least it tried, but she could feel her vitae struggle with the wounds. Missing a chunk of her skull, and probably her brain; probably why she couldn't lift her arms correctly, something inside her was damaged. She doubted her spine was intact either.\n\n\"S-So, we're... we're trapped. Underground.\"\n\n\"Looks that way.\" Art stood up and pointed the light around them. Both sides of the tunnel buried, blocked off, and trapping them. \"Fuck, with that Azlu fuck spinning its fucking webs on the other side, there's no way I can cross over. No locus around either.\"\n\nMatt sat down beside Natasha, and watched her like a doting father might, eyes reeking of pain and sympathy. Not her finest hour, being pitied by these two, but she'd been crushed by metal and concrete. At the moment, she didn't mind a little sympathy.\n\n\"Twice now we fucked you up pretty bad,\" Matt said.\n\nShe coughed, and groaned, almost screamed as the cough tugged at her muscles. \"You d-didn't, that... that thing... that gross, h-h-horrible thing did.\"\n\n\"Unless Fiona is a man, I'm guessing that wasn't her. You could see the body of whoever it was before, yeah? Some poor sap the fucker crawled into, got into their head, literally, and did that to them with time.\" Matt shuddered and rubbed his arms. He'd said he didn't like spiders, but his behavior when in his werewolf body didn't betray any fear. \"Looks like David was right.\"\n\nArt chuckled. \"Stephanie owes him an apology,\" he said, walking over to the rubble walls and running his hands along the concrete, guided by her light he carried. \"We're trapped.\"\n\nMatt shrugged. \"For now. You know Avery's going to come here the moment she realizes we're missing. And they'll clear out the mess.\"\n\n\"M-Maybe.\" Talking didn't hurt as much anymore. When she looked down, she could see where her shins were starting to look like normal legs again; didn't feel it, but looked it at least. Her fingers were starting to work too. \"If... if the... t-t-tunnel starts to collapse while they dig... you might die.\"\n\n\"Heh, us? What about you?\" Art said.\n\n\"Unless I'm... crushed into paste... I'll survive without f-food, or air... or water.\" She looked around at the tunnel, the size of the space they had available, and sighed. \"Dehydration is... deadly.\"\n\nBoth wolves looked at each other, and sighed the same way she did. \"What a way to go,\" they said together.\n\nShe coughed again, and sobbed. The pain danced along the edges of her mind when she focused elsewhere, but something always brought it back like a sledgehammer. She set her head back, and sobbed a couple more times. Sick of pain, sick of getting ripped open or torn up or crushed. Sick of seeing her bones poking through her skin, sick of the sensations of muscles and cartilage rebuilding themselves with her vitae. Sick of how hungry she was every time it was done.\n\nMatt reached out and set a hand on her, so softly and gently she barely noticed. \"Need some blood?\"\n\n\"... this... is kind of... l-like last t-t-time, isn't it?\"\n\n\"Yeah. Starting to feel pretty guilty at this point.\" Much as Matt tried to smile and laugh it away, every time he looked down at her ruined legs, the guilt was written across his face. If the pain hadn't been so bad, she might have wished he didn't feel for her, but there was no denying she was in utter agony. Jessy would say she was fine, if she'd been injured like this. Matt and Art probably would too. \"Here.\" He held out his wrist for her.\n\n\"... you... sure? W-What if... it comes back...\" Not like she could fight it. Him. It. That thing. A fucking giant spider monster, hairy and gross and with giant bone scythe arms and a human, rotted, ruined half.\n\nGod, what the hell happened to their city?\n\n\"Don't drink me dry and I'll be fine.\"\n\nShe blinked at his wrist, then at him. Well the man did probably weigh nearly three hundred pounds of muscle, more than thrice her weight; her stomach could only fit so much of that. She nodded up at him, and waited as he brought his huge wrist to her mouth. Too big, his wrist was half the size of her face, and he chuckled as he turned it so she could find a better angle.\n\nShe bit down, gently, slowly, and even that was painful for her head. But the pain vanished under the warmth of life flowing through her corpse.\n\nWerewolf blood. Twice now she'd tasted it, and her eyes shot open as the memory mixed with the present, as the heat rushed through her from only the taste, the anticipation, the sweet misery of waiting for it to enter her stomach. And when it did, she purred into his wrist, and suckled. These wolves weren't human, or wolves, they were something else, something delicious that shot life through her dry husk and set her skin tingling. Vitae pumped through her veins like a shot of adrenaline to the heart, forced it start beating with the shock it, her body blushing life even if she didn't want it to. It was too good, so good.\n\nHer hands reached up, and took his wrist. At some point her body had started working again, and the pain of moving her damaged limbs paled in comparison to the pleasure of the Uratha's life filling her. She could almost see sparks through her closed eyes as she drew more of the ambrosia into her body, until her toes began to wiggle, legs no longer shattered. A little more, and the crying ache in her skull faded away into no more than a little whimper. A little more, and her nipples started to harden.\n\nDefinitely time to stop. She drew away, and let out a quiet moan of satisfaction; perhaps a little more than just satisfaction. Stop it, stop it you stupid woman, you're trapped underground in a life threatening situation. Now was not the time to get horny.\n\nThough, as she bathed in the glow of drinking Matt's blood, she couldn't help but grin as she remembered the noises he'd made. The big guy had let out a moan or two during the Kiss, deep rumbly sounds that went with his huge frame very well, very erotic and hot and\u2014\n\nStop it. Focus.\n\n\"Th-Thank you.\"\n\n\"You are welcome,\" Matt said, his voice quiet and subdued. She almost couldn't see him in the black, but the silhouette showed him leaning back so his head touched the concrete behind them. Breathing deep, and a few quivers showing through.\n\n\"Feels pretty good doesn't it?\" Art said, chuckling, but still walking around and shining the light at the rubble trapping them.\n\n\"D-Didn't you... ever... I d-d-don't know, make friends with any Kindred in T-Tijuana?\"\n\nMatt shook his head. \"No. The best we ever managed was a very weak truce, and they were short lived.\"\n\n\"A shame.\" She tried to get up, but pain still ripped through her legs, and she fell back down. \"... I... I'll still need time to heal. B-But thank you! I'll heal much faster n-n-now.\"\n\n\"Any time,\" Matt said. \"... really, I mean, any time. That was... wow, no wonder humans just line up for that.\"\n\nShe chuckled and pulled her knees up to her chest; at least she could do that without debilitating pain. \"The Prince really tries t-to encourage feeding like that. We get t-to feed, our victim lives, often to come b-back to... b-b-be fed on again.\" Julias was a perfect example, with kine lining up for a chance to get Kissed. And fucked.\n\nArt came over to them, and sat on the other side of Tasha. He found a bit of rock and rested the light against it so it pointed up, and provided a little light for everyone.\n\n\"Some of the Kindred in Tijuana had a similar setup,\" he said. \"Though, they were dealing in drugs as much as blood. And they weren't as nice about it.\"\n\nDolareido really had the Kindred spoiled she realized, the more the two wolves talked about their previous home.\n\n\"S-So, that... that thing. That was an Azlu?\"\n\nThe two wolves nodded.\n\n\"Well fed too,\" Art said. \"Probably killed a few people.\"\n\nNatasha nodded, hugged her legs, and set her chin on her arms. Jack said, of the thirteen disappearances reported in Devil's Corner that fit the MO, only twelve were her doing. One of them had no claw marks or blood trail, now that she thought back to the report. It'd been directly around the others though, and the disappearance was of a person no one was really sad to see gone. She'd assumed\u2014everyone had assumed it must have been a part of the same group. Stupid of her.\n\n\"I... I wonder where... it got m-more of its... kills. Is it smart enough t-t-to... cover its tracks, and get victims from various p-places?\"\n\n\"Yeah,\" Matt said, \"some of them are. Azlu are a fucking nightmare to deal with.\" He laughed, and set his hand against her shoulder. Her little shoulder disappeared into his gigantic palm. \"But, certainly seems like your Begotten friend is off the hook.\"\n\n\"She's not... I... I suppose she sort of is my f-friend? She's super friendly.\"\n\nArt leaned forward from his sitting spot beside her, and quirked a brow. \"Putting your life on the line for a sort-of friend?\"\n\n\"I... I uh...\" She sighed, and looked down. Damien, she was doing this for him. What the fuck was the matter with her? She wasn't attracted to him, or at least, she never really found herself thinking about him that way, cute as he was. But there was something about him that made her want to help him, like maybe she could help change him from the angry assassin he used to be. Like he'd be a different man, if someone gave him some help every once in a while.\n\nYou're such a stereotype, Natasha.\n\n\"I g-guess... I just... want t-to help people.\"\n\n\"Too nice for your own good.\" Art sighed, and leaned back the same way Matt was. \"Anyone got any ideas on what to do while we wait for rescue?\" Matt and Natasha both shrugged. \"Wonderful.\"\n\n\"I'd... I'd worry about oxygen,\" she said, \"b-but... dehydration... will come sooner.\"\n\nMatt laughed and shook her by the shoulder a little. \"You know, Uratha often think ourselves superior to Kindred. You guys are soft compared to us, turn to ash in the sun, go up like kindling if fire touches you, and there's only one thing you can eat. But... here we are, two big bad werewolves who'll die to fucking lack of water, while you'll live.\"\n\nShe chuckled, a sad and heavy sound. \"M-Maybe. If someone... d-d-digs me up in the future, and does it in daylight?\" Trembling worked through her body again, and she took a deep, useless breath. \"I'd be ash.\"\n\n\"Aha!\"\n\nMatt and Natasha almost jumped as they looked at Art. The man grinned at them, and held up his hand. A pack of cards, faded and worn. Must have kept them in a pocket.\n\n\"... whatever you do,\" Matt said to her, \"don't play poker with Art.\"\n\n\"Hey jackass, I can't hustle her if you tell her I'm good at the start.\"\n\n\"Man, you're going to make enemies of everyone if you try that shit again. Remember what happened last time?\"\n\n\"Hey! Those two jackasses needed to learn a lesson.\"\n\n\"And the fuck you doing with a pack of cards in your pocket anyway?\"\n\nNatasha smiled, relaxed against the wall, and listened to the two boys argue."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "violence",
        "slow",
        "vampire romance",
        "vampire",
        "paranormal romance",
        "large breasts",
        "squirting",
        "werewolf",
        "monster",
        "monster romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-03-ch-11"
}