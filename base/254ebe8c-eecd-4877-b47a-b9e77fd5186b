{
    "title": "Any Chance We Could Ch. 42",
    "pages": [
        "This chapter is not meant to stand alone. Please begin at the first chapter to appreciate this tale.\n\nSunday, November 4<sup>th</sup>\n\nSometime after one o'clock I awoke and felt the bed rhythmically moving. Enough moonlight flooded the room to reveal a shadowyMax on top of Cathleen stroking in and out of her. His hips were pulling back at a steady rate and driving down hard, pushing his shaft forcefully into her depths. Her legs and arms wrapped around his waist and back were encouraging him to keep up his lustful work. Their quiet moans were muffled by their locked mouths. In the shadows it was clear that they enjoyed the pleasuring of each other's mouth as they coupled together.\n\nI pulled Veronica more closely to me and tightly spooned her with my erection between her legs against her labia. I moved my left arm which was over her hip upward to grasp her full breast. Finding it, my pointer finger circled her nipple several times in an effort to gently arouse her. Since she only sighed, shifted her ass backward into my groin but didn't stir further any hope of pursuing that amorous line of thought ended.\n\nI raised my head a little to watch the couple beside us. Though the moonlight still only revealed their shapes, the sight was still arousing watching my ex-wife being fucked at an increasing rate by a young man who was just months younger than her daughter. Their kissing had ended for the moment and their moans were more pronounced. Cathleen's head turned towards me. While I couldn't see her eyes, her sudden increase in her moaning and the increased rate her arms and hands were moving indicated that she was excited that I was watching her being screwed by the eager young man. Less than a minute later I fell back to sleep hearing Max gasping and Cathleen mewing as they apparently climaxed together.\n\nWhen the early morning light illuminated the room I awoke lying on my back with the covers pulled to the foot of the bed. To my side Veronica was impaling herself on Max's well used member. When she raised her hips the morning's light glinted off her lover's wetted shaft. The young man was in his glory with Cathleen settling her pussy to his face. Many a young man has dreamed of seducing a MILF but here he was being attacked and pleasured by two.\n\nAs I watched the three lovers for a few moments my morning woody got even harder. Seeing my erection grow my wife winked and grinned at me. Emerging from the bathroom, Carol without any ado climbed on the bed, straddled me, impaled herself on me, tossed her head to throw her red hair from her eyes and without any 'by your leave' began to ride me. It was all very erotic, I thought. I fondled her swinging breasts for a minute while looking into her brightly smiling face then I pulled her down to embrace her. As we embraced and I was kissing her, her hips kept a steady pace of undulating up and down as I firmly stroked in and out of her matching her pace.\n\nWhen our string of long kisses ended, the second woman whom I had come to love more than my own life sat back up. She looked at Veronica who'd slowed her pace, she turned her shoulders and leaned towards Carol. The two of them kissed. \"Good morning my love,\" grinned Veronica when the kiss ended.\n\n\"Hmmm, good morning my dearest. It's nice to go for a ride together first thing in the morning,\" Carol replied. Veronica nodded as she picked up the pace again. Two seconds later Carol began emulating Veronica's circular movements on Max. The two women enjoyed their ride for several minutes before Veronica took Max's hand and put his fingers on her clit which he promptly began manipulating. Seeing what Veronica did, Carol did the same with mine. Both women's breathing became more ragged and their movements sped up. As she'd done earlier Veronica began playing with Cathleen's breast and nipples. Moments later with her chest and face becoming flushed, and a wild look in her eyes, Veronica leaned forward into Cathleen's chest. No sooner had Cathleen embraced her, Veronica came explosively and loudly. When she caught her breath she and Cathleen embraced and engaged in a tongue dueling kiss as Max continued to thrust his hips and ram his cock into her. A moment later he groaned filling Veronica's pussy with his sperm while at the same time Veronica pushed down and undulated her hips to milk every drop he was producing.\n\nAs Veronica raised up off Max, my eyes fastened on her swollen reddish pussy lips to see Max's white cream oozing from between them. As she moved off him a sizeable glob landed on his thigh. When Veronica moved aside Cathleen leaned forward and sucked it into her mouth and licked his thigh clean. More of a reaction to the sight rather than by planned intent, my hips thrust thrice into Carol, who when I looked at her, winked.\n\nAs Veronica dropped between Max and I, Carol who had slowed down as we watched the show started ride me with gusto. She began rising up and down with greater intensity. In addition to her greater urgency her hips danced in a circular movement. I felt my cockhead hitting almost every corner of her pussy. I could feel her pussy muscles tightly grasping and massaging my cock. I began to feel my balls tighten and asked her between gasps of breaths, \"Ready?\"\n\n\"Just about there again darling, try to hold off,\" she urged. I did my best. After five or six more of her rocking movements I was about to exclaim I couldn't hold it any longer when she cried out, \"just about there, ... ooh, now!\" As her pussy contracted even more tightly around my cock, to my relief I began splashing my come into her. Long after mine had ended Carol rode out her climax and then collapsed on my chest. Veronica cuddled against the two of us.\n\nAbout three minutes later, Max left to go into the bathroom. Though our breathing had returned to normal I was still inside Carol who still rested on me and Veronica nestled against us. All three of us were basking in that sated feeling when Cathleen leaned over Veronica, gave her a quick kiss and then me before smiling, \"Welcome to the lifestyle you two.\"\n\nThere must have been a questioning look on either my face or Veronica's because a moment later my ex-wife added, \"After last night and this morning, there is no doubt that you're officially swingers.\"\n\nI looked at Veronica and she me, and then we looked at Carol who had moved to my right side. With a big grin on her face she nodded. Carol guided my right hand to Veronica's pussy where it was quickly covered in Veronica's wetness and Max's release. Carol also placed Veronica's left hand around my growing erection before she whispered, \"While we need to talk about all this, you two do love the lifestyle idea.\"\n\n##\n\nIt was seven forty as Mary Claire and Lauren were in the kitchen drinking their first cup of coffee when Katrina, Ashley and Cindy walked in and sat after filling their cups.\n\n\"Well Lauren, do you think you made the right decision to come work for mom and dad?\" asked Mary Claire.\n\n\"God yes, what a rush Friday night was and then too last night with Katrina while watching the replay. Did you enjoy me as well?\" asked Lauren looking at Katrina.\n\n\"Oh, I think we all did as much as you seemed to enjoy us. Are you staying for the day?\" asked Katrina.\n\n\"No, gotta to run home, check my mail and dig out some tax reference books to discuss a topic with Scott. I'll be back about noon and I'll have to leave about two-thirty for a certification clinic for new basketball refs. I'm one of the instructors. Also, I'll have a presentation at the rules meeting for spring college sports. By then it'll probably be ten o'clock so I guess I'll come back in the morning. I'm really gonna like it when I start living here,\" grinned Lauren.\n\n\"So will we and all of you'll have to put up with me as well,\" laughed Cindy.\n\n\"Fucking you is hardly putting up with you're my dearest Cindy,\" said Mary Claire.\n\n\"In what spring college sports are you involved?\" inquired Ashley.\n\n\"I referee some women's Lacrosse but softball's my game. I've umpired college softball for the last three seasons and prior to last season I was also an assistant coach for a high school team.\" When all four women looked at each other and smiled Lauren asked, \"What's up.\"\n\nTrying to sound as innocent as she could Katrina replied, \"It's nothing. We're just amazed at all the things that you do.\" Then she thought, I'll bet we could put together a select senior team with her as coach.\n\nLauren left a little after nine taking one of her new suit and blouse outfits.\n\n\"Y'know, Katrina began. I'll bet with Dad's sponsorship we could get a dozen of us together to form a team. We'd have tryouts that would include sexuality as well as softball ability. I'll bet a side benefit for the players'd be Dad's cock, or Mom's mouth.\"\n\n\"Might be of interest to the player's mom as well,\" mused Ashley.\n\nMary Claire with the help of the other three women cleaned up the kitchen and the den and made up Bryce Field with fresh linen. Mary Claire then went into the den, downloaded her camera to a laptop, then connected the computer to the large screen and began flipping through yesterday's shoot. She stopped on one of Katrina and sat at Scott's desk with her sketch pad and within an hour had a sketch to finish shading when the three other women walked in. \"More coffee, lover?\" asked Ashley.\n\n\"No thanks, but thanks for asking,\" replied Mary Claire no looking up from her sketch pad.\n\nBy eleven thirty when Lauren returned she'd almost completed one of Cindy as well. Lauren asked, \"Where are the other three?\"\n\n\"Cindy is upstairs sleeping. She's been working long days for the last month, partly to build her savings and partly because they've yet to fill two vacancies. Dad and Mom wanted to give her five grand to put into her savings but Cindy told them that she'll not accept their money until she's saved up two on her own . I really respect her integrity and character. Katrina and Ashley, are at church to hear the Reverend Evie Graham. Though I'm not into those things I'd thought of going with them, but I wanted to get these done,\" she replied in a flat tone without raising her eyes from her sketch. \"What time is it?\"\n\n\"Eleven thirty.\"\n\n\"The service started at ten. So they should be back shortly,\" Mary Claire said as she put the finishing touches to her drawing of Cindy. Lifting the drawing pad asked, \"What do you think?\"\n\n##\n\n\"I'll bet you've really got to piss don't you?\" asked Carol as we broke our kiss and Veronica began to pull her hand off my still erect cock.\n\n\"I think Carol and I wanna shower with you handsome,\" smiled Veronica. Before waiting for an answer they climbed off the bed. Her statement was evidently not a suggestion but a 'let's do it' so I followed.\n\nMax returned to bed a short time before and was now occupied with Cathleen, or was it the other way around? Cathleen had turned around and was now prone on top of Max and they were eagerly sucking face. I laughed quietly to myself that what had been a get-away for Cathleen and I to reconnect had turned into a connection alright, but a connection between Max and Cathleen.\n\nAs Carol stepped into the shower pulling me behind her I said, \"Wait, I need to go.\"\n\n\"Piss on us in the shower, I won't turn it on until you're empty. I'll bet our wife needs to go as well, want to be on the receiving end too?\" grinned Carol.\n\nWith Carol's hand around my cock she pretty much 'hosed 'herself and Veronica down. Neither one of them seemed particularly pleased with it but they were probably doing the golden shower more for my benefit. The event left me pretty ambivalent about the whole fetish and I decided that I wouldn't pursue it in the future and tell them such at the first opportunity. Ah, well, thought of, tried, discarded I concluded.\n\nAfter the shower and dressing we had a late breakfast delivered to the room as Max and Cathleen showered. After breakfast I gave each of them $50 to have fun on the way out playing the slots for thirty minutes. Veronica lost the most. She had all but $7 left. Cathleen and I were slightly in the red while Carol finished in the black by $19. Cathleen played for Max and was the biggest winner, he was down $12 when she hit a $2,238 jackpot. He was smart enough to tell her not to try anything more and to say that he was going to put the winnings into his college savings. He offered to give my $50 back but I told him to keep it as well.\n\nVeronica and I drove home together and Carol took Max and Cathleen. When they got to Max's condo he invited Carol and Cathleen in for a sandwich, but Carol knew it was mainly for his Mom to see Cathleen. Cheryl was more than surprised to find her son in the company of Cathleen but welcomed them. Beth and the three of them had a delightful lunch with Cathleen and Cheryl catching up. Carol later told me that Max became very quiet at one point when he realized that Cathleen was my ex-wife and Katrina's mother.\n\nAfter eating and staying a 'proper' amount of time Carol and Cathleen left. On the drive to Cathleen's she remarked, \"Well that was interesting, meeting the mother of a young man I've just fucked. I remember when he and Katrina were in nursery school with Beth. I'm sure Cheryl remembers it too,\" said Cathleen ruefully.\n\n\"Aw, don't beat yourself up. He fucks both Cheryl and his sister, and he seems to be getting better every time. You weren't experiencing any guilt pangs that I noticed last night when he was in your ass, or this morning either,\" laughingly said Carol.\n\n\"You're right, his eagerness is nice and refreshing. So no harm, no foul. We'll fuck again another day.\"\n\n\"You're right. No harm, no foul,\" nodded Carol.\n\n\"Hmmm, I wonder if he's free to go with me to Hedonism for New Years,\" grinned Cathleen.\n\n\"No harm in asking. By the way you're invited to dinner tonight at our house, Scott's high school girlfriend and her kids'll be there. She's the realtor on a house purchase they're making.\"\n\n\"Kids? Little kids?\" asked Cathleen.\n\n\"No, you know them both from our social circle. The Warrens, they come every other gathering or so ....Anne, Sue and Tram. You know the young stud who's an amazing fuck, his cock has that delightful curve in it.\"\n\n\"Oh yeeah, and a mom and a sister who really know how to suck pussy too. I'll be there for sure,\" enthused Cathleen. \"Scott's high school girlfriend, eh. Did they fuck?\"\n\n\"Yep, that's what I've been told,\" smiled Carol.\n\n\"What time?\" asked Cathleen\n\n\"Anne and the kids are coming at about four, but Tram and Sue have to leave around five for some kind of formal event. Anne's the only one staying for dinner.\"\n\nAs Carol stopped the car in Cathleen's driveway, Cathleen turned to Carol. \"We've known each other for over four years now. I'm going to ask you a personal question and if you answer don't tell me what you think I want to hear.\" When Carol nodded Cathleen continued, \"Are you interested in Scott because you're lonely or are you in love and if you are in love, how much do you love him?\"\n\nWithout a moment's hesitation, \"I've been surprised by how much I love him. I was ecstatically happy for Veronica when I saw how much she loved him and when he proposed. Only days later as I came to know him better I became jealous too. He fills my dreams. I desire nothing less than to please him.\"\n\n\"You love her that much too,\" replied Cathleen.\n\n\"I do,\" she replied, nodding with a broad smile.\n\n\"The best of marriages take work. You realize yours will be a very complicated relationship and'll take a lot of effort to make it work. Are you sure you want to do this?\" Cathleen asked with concern.\n\n\"Remember that night we spent shortly after we met when we went to Chicago?\"\n\n\"Don't remind me. That was a horrible trip. Feeling a lot of self pity I got hammered before we even went to the club we were all there to visit. We never joined the others because I cried and blabbered on all night. I can't recall much of what I said,\" Cathleen said with sadness in her voice.\n\n\"Several of the things you said that night left an impression on me. The thing that I remember most is that you had taken your marriage and husband for granted and wished you could go back in time. I remember you saying, 'Carol if you ever meet a man who captures your heart and wants to do nothing less than make you happy and fulfilled, don't walk away. Seize the opportunity and do whatever you can every day to make your relationship work, to make him happy. Don't take him or your marriage lightly or for granted. Treat it as a precious jewel. Don't make the same mistake I made.' Well, I've met such a man who loves me and I him, and I have the added blessing of him being engaged to the woman whom I love as well. Yes I'll fight for my marriage every day. I want Scott and Veronica to be happy and fulfilled.\"\n\n\"Are you going to keep attending the parties?\"\n\n\"I 've told them that I've attended my last party,\" Carol smiled.\n\n\"You love them that much?\"\n\nWith tears welling in her eyes, \"I do. I won't do anything that'll put our marriage at risk. I've found love, true, deep abiding love.\"\n\nCathleen with tears in her eyes nodded and then hugged her. \"I'm very happy for you. Out of the ashes of my marriage is rising a beautiful one. It's my desire that you and Veronica love him from the depths of your soul and with every fiber of your being. He deserves to be loved and adored by women like you two.\"\n\n##\n\nAs Hazel rolled from the edge of the bed towards the center, in her half awakened state her arm reached out for her husband. Instead of finding him, she only grasped air and a cold sheet. She raised her head and forced her eyes to open to look at the clock on Emerson's side of the bed. It was only seven forty-three. Or was it six forty-three she asked herself trying to recall if Emerson changed the clock last night.\n\nWhatever time it was, it was too early to be up on a Sunday morning. She threw on her monogrammed cotton robe over her silk ajamas before searching for Emerson. Instead of finding her husband she found half a pot of freshly brewed coffee along with a note on the table saying he'd gone to the equestrian center for a ride and would be back by the time she returned from church. She knew he was off thinking about what transpired last night.\n\nAfter fixing a bagel and pouring a cup of coffee Hazel sat down in the den and sighed as she recalled the prior evening. It was a bad night to say the least. She hated arguing with Emerson. Last night became particularly testy that ended with Emerson walking out of the room and closing the door to his home office.\n\nWhile tempted to pursue him, she didn't. Shortly before they'd married Hazel read an article about the value of establishing fair fighting rules for a marriage. Shortly after that she and Emerson established just such rules, one was the lowering the volume of one's voice when angry. Emerson had done just that and then some the prior evening. Another which he exercised, the freedom to walk out during an argument to avoid losing one's temper and saying something that once said would be regretted by one or both of them. The disengagement rule allowed them to calm down and suspend the matter for no more than twenty four hours.\n\nAs she looked out the window she replayed in her mind how it all started. They were cuddling on the sofa watching a college football game that had become uninteresting because of the score and the fact that neither team interested them. Emerson feeling amorous guided her hand over his crotch and then encouraged her to take his erect cock out. Once it was out he tried to guide her head down to his cock, but she refused. Her puritanical nature had flared once again. When he tried to guide her head downward a second time while at the same time asking if she was interested in watching an adult DVD he'd bought Thursday, she'd said it was sinful and disgusting.",
        "In light of the progress she'd made in opening up sexually over these last few weeks he reacted strongly to her negative response to both. She couldn't blame him for being upset. He was correct; she was sending very mixed signals.\n\nShe tried to get him to understand that she was of two minds, each warring within her. Yes she wanted to be less uptight and told him that, but still there was the incessant voice saying good girls don't do nasty things or enjoy sex too much. When she wouldn't explain in more detail what she wanted, he rightly complained that she was not being honest with him. Defensively in the heat of the moment she glared at him and shot back that he was not being honest with her either. She protested that he'd never shared with her his fantasies and what he really desired from her. He complained that he'd rather remain silent than to face her cold rejection. That was the moment he stormed off.\n\nThe only thing that she was happy about was that she didn't tell him that he was perverted or that sucking him was a perverted or detestable dirty act. Though she didn't use those very words, she admitted that they were all but implied. Veronica and Evie helped her to become more accepting, open and free with her husband. The two women brought out the realization within Hazel what she privately desired to become but was still afraid to do so. What happened last night was not the Hazel she wanted to be. Though she wanted so much to be a more alluring wife for her husband, to be sexually liberated, she was afraid that if she took the step she would go beyond what he desired.\n\nFor years she quietly questioned various values she'd been holding but she'd never had the courage to express them aloud to anyone. Her mother, brother and sister would be stunned to learn her deepest thoughts and doubts about her family's beliefs. As sat in the solarium watching three squirrels jumping back and forth from one tree limb to another, she decided that she'd be true to her deeper self rather than wear a mask. Evie encouraged her to be truthful with her husband and ask him about his desires and fantasies. She'd find a way to do that, and soon. Yet she recalled Evie's counsel to do so only when she was ready to listen in a non-judgmental manner. Last night showed she was not ready for that step. To help her to be more prepared, she decided she'd start to read erotic stories on the web just to see what possible fantasies Emerson may hold.\n\nHow far did he want her to go? How far did she want to go? With her curiosity peaked she walked into his office. Sitting at her husband's new laptop Hazel looked at his internet and document history. Initially what she discovered shocked her until she pushed to look at it through new eyes, the eyes of the sexuality emerging being within her and desiring to know what was fueling Emerson's fantasies.\n\nRather than feeling threatened and crying about the sites he visited, and the pictures and stories saved, she set aside her familial baggage and using her new eyes it wasn't long that much of what she looked at and read touched on her own desires. Others started to give her ideas she hadn't thought about before. It didn't take her long to conclude that some of her more base fantasies were not beyond her husband's. When she explored several of the jewelry links a small grin formed, it seems that Emerson and I are not really that different.\n\n##\n\nVeronica was turned toward me on the way home when she asked, \"Are we really 'swingers'?\"\n\n\"I guess so. In a narrow sense, we've been since we started sharing our bed with females and now with Max it's widening to include other males. And as I'd mentioned you have my permission to bed Dave and Emerson if their wives are agreeable.\"\n\n\"I always thought swingers were sex crazed people who did little more than hop from one bed to another, had these wild orgies, and have sex at the drop of a hat with anyone,\" she replied. \"I guess that's a myth.\"\n\n\"From what I know it's more of a myth than anything. Remember Carol's said that her friends in the group she plays with prefers the terms lifestyle or lifestyle participants because of the stereotypes and misconceptions the general public have with swingers being sexual deviants, emotionally unstable and unloving,\" I explained.\n\n\"That certainly doesn't describe Carol or Evie. They're two of the most loving, accepting women I know. Amy Anne doesn't strike me as fitting that stereotype either,\" she remarked.\n\n\"Nor does Dave,\" I agreed. \"From what our love says and from what I've read, lifestyle participants are normal people that we see every day. Some have closed circles while others are more open, some only party with one or two other couples, others have a circle that takes in dozens of couples.\"\n\n\"Carol said that it could be just about anyone. Evidently the majority are middle aged professionals we see on a daily basis. I guess she's right. Look at Evie, a professor and a minister, in the lifestyle,\" Veronica agreed.\n\n\"We have a small group that we've chosen and have limited on purpose. I guess someday maybe we'll try a broader group, perhaps Carol's. I know the girls wouldn't mind, at least they say they'd like to try.\"\n\n\"Oh you'd love that you dirty old man, being able to go from one stranger's pussy to another all night long. And then you'd be even more excited seeing your wives and your daughters get fucked. Don't you get enough pussy at home?\" she teased.\n\n\"I'm more than happy with all the women I have at home. I've been surprised by something. Watching Max stroke in and out of you is hugely erotic.\"\n\n\"Are saying you like watching me get screwed silly?\" she asked. I unsuccessfully fought to keep from grinning but lost the battle. \"Why handsome you are kinky.\"\n\nWhen I looked into her eyes I saw the glint. \"So what about you,\" I challenged.\n\n\"Alright you got me. I confess that we're alike. I love watching you fuck another woman and make her moan as you make her come,\" my love confessed. \"Now what's this about not giving Lauren a good fucking?\"\n\n\"The next time we have Lauren in our bed, I promise to give her my entire focus. She deserves our best,\" I smiled and touched her upper thigh under her skirt.\n\n\"By the way, I liked how you coached Max to lift my legs last night, he got that young cock deeper in my cunt and it felt very nice. Having heard that from you I know that I'm going to keep enjoying myself with him and every other cock I, I mean we, bring to our bed. I love you handsome,\" smiled Veronica moving a bit forward toward my hand. \"Being a lifestyle participant has its advantages I'll admit happily.\"\n\n\"Since he'll be around the house a bit during the construction I'll remind him that outward signs of affection are off limits if someone other than family is or could be around inside the house. Since our bedroom is going to be the only private area left until we move, if you want to play with him do it there,\" I grinned.\n\nAfter a few minutes of silence I asked, \"Do you think Carol's going to miss her lifestyle group? She's said she's giving them up to marry us. I'm wondering if we should have that expectation of her. What do you think?\"\n\n\"There are number of people in the group who are special to her and she'll remain friends with them I assume. Allowing her to be free to attend lifestyle events? I want to say yes but I've not given it much thought. Let's think about it some more,\" she concluded.\n\n##\n\nAs we drove down our street Veronica pointed out the auction sign. After reading the sign I pulled down the farmhouse's laneway. Stepping through the high grass and weeds we walked around the old house. Having Dave give us a good assessment was my first thought until Veronica pointed out we wanted the land not necessarily the house. The last thing I wanted was a housing development going up on our doorstep like what's happening to Dave. It was just as well that we wanted the land rather than the house. The old place looked to be in terrible shape. It's various out buildings it should be bulldozed as well. A growling stomach reminded me that it was almost one o'clock and we should get home.\n\nAs soon as Veronica and I walked through the door we were embraced by one and all. Lauren looked incredible in one of her new suits. The dark blue jacket with a white ruffled-front blouse under it fit her perfectly. Her skirt hem was just above the knee, her hose were tan and her stiletto heels were a bright blue patent leather.\n\nAfter a bit of chatter, Lauren told us she had to leave about two-thirty and asked if we could discuss a bit of business now. Veronica, Lauren and I went into the den, Veronica and Lauren sat on the couch and I in the wing back. Mary Claire brought in sandwiches, coffee and tea, and made sure we noticed how low cut her top was. Lauren put a red wallet on the coffee table and scooted forward, dragging her skirt to the top of her stockings. \"Oh, my,\" she said with a grin after looking at her lap and then my eyes but made no effort to pull her skirt down.\n\nWe spent much of the next forty minutes rehashing her computer and software recommendations. We again agreed on a tax software package that included extensive research capabilities, better yet last year's version was free so Lauren was going to order it tomorrow to begin evaluating it. The same vendor had an accounting program that promised to tie into the tax software, so we're going to purchase that as well. Lauren also recommended the addition of three high capacity servers, one for business only and two personal with high capacity for photos, audio and video. She also suggested that the business server be linked to an off-site commercial backup server which would back-up automatically overnight. I agreed and advised her to ask Emerson for the name of the firm we'd used at our company. She also spec'd out a very secure wireless network that couldn't be snooped. All in all we just confirmed the recommendations she had shown me yesterday plus the computer servers.\n\nThen she clearly explained the tax ramifications of the sale in terms that both Veronica and I understood and offered to give the same presentation to Emerson, Hazel and Cathleen. She offered to explain the tax consequences to Kim and Katrina as well. I told her that'd be terrific, and suggested perhaps a mini seminar should be on the calendar after the honeymoon. She replied that'd be a good idea and assured us that the estimated tax payment wouldn't be due until January fifteenth. While we were on our honeymoon, she'd continue to explore various options, to run the numbers and hone her recommendations.\n\nI mentioned the auction of the land next to us and asked her to find a sketch of the plot. She replied she'd also learn about the conditions of being a bidder.\n\nJust before she left she made a list of officiating dates through January, 2008. After discussing it with us she said she'd get Cheryl to post them to the master calendar she was developing. She'd be working two or three evenings some weeks leaving about four o'clock, and usually home by nine. Since she'd be living here in a little more than three weeks she said she'd be able to put in full days by starting early until she moved. I reminded her that she was an exempt employee, and didn't need to punch a clock. She was being paid to complete specific tasks in a highly competent manner. If she accomplished the tasks of a given week in thirty hours, then she worked fewer hours knowing that there will other weeks where she could be working fifty to sixty hours. Veronica added that the same applied to Cheryl.\n\nSince she had about a half hour before she needed to leave she invited us upstairs to show off her new purchases. Some of the skirts were demure and one was particularly short, \"definitely a pantyhose skirt outside or stockings if worn here,\" she explained. I think Veronica's, and mine too, favorite for private office attire was a very sheer cream colored blouse that she modeled without a bra. When she had a jacket on it appeared quite sophisticated. She also showed us five pair of earrings, two large hoops and three long dangly pair that she and Carol had picked out together. She undressed and put her clothes on hangers and asked if she could put them in the closet in the spare bedroom for now. We both enjoyed watching her move about wearing only a garter belt and g-string with her heels.\n\nShe went back downstairs and brought up her bag of uniforms and carried on a normal conversation with us while taking off her hose and heels and putting on an athletic bra and full back cotton panties. At one point Veronica grasped my erection through my pants and looked at me and smiled. She knew I was wanting to feast on her luscious breasts and fuck her again. When Lauren finished getting dressed she approached us, leaned over and gently kissed Veronica and then with her arm around my neck, her tongue in my mouth and her hand wrapped around my cock, she kissed me more deeply than she had Veronica.\n\nThen she leaned over Veronica again and whispered something in Veronica's ear that brought a giggle from her.\n\n\"I'm going back to my apartment tonight, so I'll see you in the morning,\" she said as she picked up her bag. We wished her a good clinic and training session before I walked her to the front door. As I opened the door I asked her, \"Did the faxes on the cars come?\"\n\n\"Oh yes, late Friday afternoon. I called the bank and arranged for bank checks to be picked up Monday and called Kim to give her their amounts. The prices matched your conditions so I didn't see any reason to bother you any further,\" she smiled then turned to go. She suddenly stopped and added, \"Oh, I was thinking that if you had an Amex platinum card with no limit you could have put the whole purchase on the card and earned a big bundle of reward points.\"\n\nShe had a point. I should have thought of that once I turned in my corporate Amex. I'm pleased that this is really gonna work. She's bright, beautiful and has a 'take charge' personality to boot, I thought as I watched her ass sway toward her Corvette. She hasn't said anything but I still feel I didn't do her justice Friday night. We'll have to make it up to her, soon.\n\nVeronica was coming down the stairs as I closed the door. \"What did she whisper to you?\"\n\n\"Handsome, it's for me to know and you to find out when the time is right,\" she smiled before adding a tease, \"but you'll love it.\"\n\nMary Claire was bustling about in the kitchen and Cindy was setting the table. At three-thirty Cindy went into Mary Claire's bedroom and changed into scrubs and then on her way out kissed us all good bye. \"Cindy, can you take a break sometime Wednesday afternoon and come by here. I think you'll be pleasantly surprised,\" I smiled.\n\n\"Sure, I'll come by for lunch. I'm not starting until three,\" she replied with a perplexed look and kissed me again before going out the door.\n\n\"What's Wednesday?\" asked Ashley who was standing next to me nuzzling my neck.\n\n\"Car delivery in the morning,\" I replied squeezing her ass having lifted her skirt.\n\n\"You're having lunch with Dave tomorrow, right? Do you need me to go to the bank with you for the checks? I'd like to visit with Evie sometime tomorrow,\" Veronica smiled putting her arm around my waist and nuzzling the other side of my neck.\n\n\"That's fine. Lauren'll be with me to get the checks, then I'll be home sometime mid-afternoon.\"\n\nAnticipating the scheduled company, Ashley had changed into a scooped neck button blouse a mid-thigh skirt with garter hose and high heeled sandals. Katrina was similarly dressed in a knit top. Carol came into the den wearing a low square necked top with a knee length skirt that had buttons all the way up the front. She was wearing hose and high heeled pumps.\n\nVeronica hadn't changed yet. Before going upstairs she went into the kitchen to check appetizer and dinner plans with Mary Claire. After walking up to Mary Claire she pressed herself against Mary Claire's back, whispered \"Love you,\" into her ear and firmly grasped Mary Claire's tits. With Mary Claire wearing one of her more demure, albeit short, maid outfits Veronica's hands slipped under the apron top to fondle her breasts.\n\n\"Thanks, Mom, I love you too,\" replied Mary Claire who turned her face towards Veronica's while putting her arms behind her and grasping the side's of Veronica's perfect ass. Veronica loosened her grip and Mary Claire turned and put her arms around Veronica. They thoroughly kissed with a lot of tongue play.\n\n\"I just wanted to know how dinner was coming, and suddenly realized that I haven't told you that for awhile,\" smiled Veronica.\n\n\"Nor I you, but I never doubted that you did,\" grinned Mary Claire, lightly kissing the tip of Veronica's nose.\n\n\"In the next few nights you and I should spend the night together,\" Veronica suggested. Seeing a little puzzlement on Mary Claire's face she clarified, \"There'll still be one or more women with Scott. He knows I'd like to spend a night from time to time with another woman who is dear to me. And you my sexy girl, are one of those women. I'd like to spend the night, making love, cuddling, falling asleep in each other's arms and waking up with in the morning. Are you interested?\"\n\n\"Are you kidding? You two are something else. My body, mind and soul is part of this family and for their pleasure.\"\n\n\"I look forward to our night alone,\" Veronica grinned. \"You're special to me...and to Scott too.\"\n\nTheir lips met again to express the nature and depth of their growing relationship. \"By the way, is this dress okay? Or should I wear something longer that at least covers the tops of my stockings?\" Mary Clare asked when the kiss concluded.\n\n\"Certainly not on my account, I'm sure none of our guests'll mind either. Why don't you decant a bottle of Chardonnay and one of Shiraz and give them a chance to breathe. Amy Anne and her kids should be here shortly after four. Hmmm, I guess I ought to change. Love you, sweetheart,\" smiled Veronica kissing her again briefly before heading upstairs to change.\n\n##\n\nMeanwhile I'd moved to the corner of the couch when Lauren left. Ashley sat beside me, picked up my hand and slid it inside her blouse. At the other end of the couch Carol and Katrina snuggled together, more correctly Carol nestled against Katrina as Katrina's hand played around inside her blouse and Katrina lightly kissed and licked the nape my love's neck and ears. Lots of contented sighing was emanating from the other end of the couch. Ashley covered my hand and guided it inside her bra. While watching Katrina I tried to mimic what Katrina was doing to Carol.\n\nVeronica changed into an above the knee length flared skirt, tight knit top over a shelf bra, black garter belt and light grey seamed stockings and black patent pumps. At seven after four when she reappeared in the den she remarked, \"Hmm, looks like I 'missed the inside my top' memo,\" then laughed. As she watched the four of us from an arm chair her left hand lightly played with her breast outside her own top.\n\nAt four fifteen the doorbell rang. Veronica being the closest opened it and invited in Amy Anne, Tram and Sue. As she did so, I too walked into the foyer. Amy Anne wearing a black demi-bra and black semi transparent blouse, a mid-thigh straight skirt, hose and heels looked delicious. Sue, a stunning dark blond with lighter highlights was dressed in a full length burgundy gown under a maroon satin coat which Veronica offered to hang in the closet. Tram was an incredibly handsome young man, blonde curly hair, about six five, square jawed in a black tuxedo. I was standing next to Veronica when she extended her hand to Tram and Sue as she introduced me and herself as my wife. I'd already noticed she had a hard time taking her eyes off Tram as they came fully into the foyer. She was clearly taken with him. After hanging Sue's coat she and I walked them into the den where we introduced Katrina and Ashley as our daughters.",
        "Sue was just a bit shorter than Veronica and was wearing a strapless gown that showed a good bit of her creamy and generous cleavage above the top. She was definitely the bustiest woman in the house. As Carol and Mary Claire walked in carrying the wine decanters and a tray of glasses I noticed that Mary Claire's eyes brightened as she noticed Sue's bust line.\n\n\"Hi Tram. Hi Sue,\" immediately said Carol. \"Nice to see you both again.\"\n\n\"I guess I don't need to introduce Carol, but this is Mary Claire Peters. Carol and Mary Claire both live here with us, but your Mother probably told you that already,\" I smiled.\n\nJust then the doorbell rang again. Katrina opened the door to a cheery Cathleen. As she was taking off her coat and handing it to Katrina, she pushed her thick brown hair over her left shoulder, smiled and said hello to Tram, Sue and Amy Anne. \"It's nice to see all three of you. It's been awhile hasn't it?\"\n\nAs we sat and talked about Amy Anne's and my past together, Tram looked at his watch and said, \"Okay, let's talk about the elephant in the room. You said Carol and Mary Claire live here, but how do you know Cathleen?\"\n\n\"I'm Scott's ex and Katrina is my, our, daughter,\" replied Cathleen. I'd have answered if my eyes weren't once again momentarily looking at Sue's large breasts. \"We divorced some years ago. Since then Scott has found Veronica and they're getting married in about two weeks. At Veronica's insistence and for Katrina's benefit, Scott and I have reconnected. They've made me welcome in their home.\"\n\n\"It's more than just for Katrina's benefit,\" Veronica offered. \"It's for all of us. You're family.\"\n\n\"That's so nice,\" Sue said as she smiled at me as well as Mary Claire who had been doing the same as me. My mind refocused as she continued, \"Most divorced parents I know can't tolerate being around their former spouses.\"\n\nAs the conversation continued all the women of my home seemed to be trying to show as much leg as possible. It wasn't long before Amy Anne included herself. I also noticed more than a few of Carol's skirt buttons were undone. Veronica still couldn't take her eyes off Tram and took every opportunity to flash a stocking top or to give him a glimpse of her breasts when she bent over to pick up her wine glass or refill someone else's glass under his appreciative eyes.\n\nDuring further conversation Tram noted the room full of stockinged legs and cleavage freely being exhibited and remarked, \"Gonna be some sex games tonight I think. Too bad Sue and I can't stay.\"\n\n\"Ah, yea, too bad,\" Sue smiled teasingly as she looked at me and then the bulge in my pants.\n\nLooking into Veronica's eyes Tram continued, \"I know Mom, Sue, Cathleen and Carol are great fucks, but I'd certainly like to try to seduce you Veronica.\" He paused and looked at me, \"Of course assuming that you approve Scott.\"\n\n\"I do. But I don't have to, Veronica makes her own decisions. I'd enjoy watching you, the two of you,\" I smiled.\n\nLooking at Veronica Sue piped up, \"Perhaps Scott would like to do me when Tram does you.\"\n\n\"Perhaps I'd like to do both you and your Mom. It's been a long time from high school until now,\" I remarked.\n\n\"Ooh, in the same bed perhaps. The former sweetheart doing both mother and daughter while the wife is getting screwed by the son, I like that,\" smiled Sue under her eyebrows and taking a sip of her wine, and then as she bent over to put the glass down to reveal more of her cleavage she added, \"I would love to tape that for posterity if I could.\"\n\n\"Mmm, as they say most of the fun is in the journey, not just in the destination. So yes I'd like for you to 'try',\" Veronica replied looking at Tram. Glancing at Sue she noted, \"Taping is no problem. We've been known to record ourselves.\"\n\n\"If that's a challenge, and if Scott is agreeable, I'd take you out on a date Veronica. Maybe he can take out Sue and Mom,\" he replied.\n\n\"How does this Saturday evening look for the three of you?\" smiled Veronica as she looked at Tram to see if he would flinch from his challenge.\n\n\"You're on. How about I pick you up at six for dinner and take it from there,\" he said.\n\nThat prompted Amy Anne and Sue to take out their smart phones. They informed me that anytime after three would be okay. I had a date with two ladies and told them I'd call them later in the week about what time I'd pick them up. I also told them that I was open to suggestions. Plans were confirmed that we'd all return here later that night at a time we'd set sometime that day.\n\n\"What about us?\" asked Katrina.\n\n\"Sure both you and Ashley as well as Mary Claire are welcome to do something. Cindy too,\" I smiled. \"Once we return here. Why don't the four of you go out as well and then return here for the after-date party?\"\n\n\"Ought invite Max to spread the fun,\" grinned Mary Claire. \"If Scott can be out with two women, why not Max?\"\n\nI looked at Carol and asked, \"Who would you like to go with?\"\n\n\"I know what I'd like to do, but let me think about it for a day or two and then tell the individual or individuals involved what I want,\" she smiled. Then she looked at Katrina. I suspected that Katrina was the object of her plans.\n\nAfter about a forty- five minute visit Tram stood and offered his hand to Sue. \"We really hate to run, but we've had this event scheduled for about six months and couldn't find a way out of it. Next Saturday then?\" he warmly smiled at my wife.\n\n\"I'm looking forward to it,\" she grinned.\n\n\"Mom, I'm going to spend the night with Tram and go to classes from there, so don't worry when I don't come home tonight,\" giggled Sue.\n\n\"What about clothes?\" asked Amy Anne.\n\n\"I have a three complete outfits and a pair of flats in his closet as well as a drawer in his dresser with tops and underwear,\" smiled Sue.\n\n\"Enjoy your evening and see you whenever tomorrow,\" said Amy Anne lightly kissing them both.\n\n##\n\nEmerson arrived home about three thirty having stopped at the club for a late lunch and playing a few hands of poker in the grill before getting up his courage to return home. As he walked in through the kitchen from the garage he had a lot of trepidation about being confronted by Hazel for his behavior yesterday.\n\nHearing the garage door open and close, Hazel, wearing a sheer blouse, no bra, no panties, garter hose and four inch slides put down her magazine, dropped her robe and walked out of the den to greet him. Before they got close enough to kiss, she stopped put her hands on her hips, pirouetted and asked, \"I hope you missed this body. It's all yours to pleasure yourself with however you want.\"\n\nEmerson closed the distance, embraced his wife and they French kissed for at least five minutes. As they broke the kiss Hazel leaned back a bit and said, \"Your rod against my tummy says you missed me.\"\n\nTaking him by the hand she led him into the den and gently pushed him down to the couch. \"I'm sorry for last night. While it was ugly and I precipitated it it forced me to look at my behavior and remind myself just how much I love you, my dearest husband. You've been more than patient with me. You're right I've been sending mixed messages which have got to be driving you crazy. I'll try to be more receptive to whatever you want to do. If I'm not ready right away, please don't give up, keep touching, kissing, licking, and I'll come around. There are a few demons left, and with your patience, love and encouragement I'll banish all them yet. I love you, Emerson, I really do. I've not always said or showed you but I love you my dear husband more today than when I married you.\"\n\n\"And I love you Hazel. Sit, please.\"\n\nAs she sat he put one arm around her and caressed her breast through her sheer top. He gradually moved his hand to her pussy and began to gently stroke her clit. As she opened her legs, she reached down and unfastened his belt and pulled his cock out over the top of his briefs. As she was lightly jacking him she broke the kiss and leaned over dropping her head toward his cock. She licked her lips as she tentatively wrapped her lips around his glans. She began swirling her tongue around his shaft as he groaned.\n\nHazel's head was soon moving up and down trying to do what she saw in three video clips she watched on one web site. She knew she was a novice but she was determined to become an expert through repeated practice and studying as many oral videos as she could on the net.\n\nGlancing up into her husband's face brought her all the encouragement she needed. His face was filled with bliss, joy and contentment. He was clearly enjoying what she was doing. Just you wait and see my husband, I'm only going to get better, much better, at this, she smiled inwardly as her husband's eyes closed and his smile broadened. This is more enjoyable than I ever thought.\n\nAfter a few more minutes of oral ministration, Emerson opened his eyes, \"I'm going to come.\"\n\nShe raised her head off his cock, looked him in the eye and said, \"Come in my mouth, I don't know if I can swallow but I'll do my best.\" Immediately she engulfed him again and vigorously bobbed her head and sucked harder.\n\nAnd seconds later he began to pump into Hazel's mouth. After the third or fourth spurt Hazel tried to swallow and surprisingly was successful. No gagging, no choking, but was ready for him to finish. As he filled her with three more spurts she raised her mouth off him and looking him in the eyes, swallowed. Hazel then bent down and took him into her mouth again and thoroughly yet gently and lovingly licked and sucked the remnants from his shaft.\n\nShe sat up and they deeply kissed as she shared the flavor in her mouth with him. \"Thank you. I hope this wasn't a one time thing,\" softly said Emerson.\n\n\"No, I don't believe it was. You felt good in my mouth and your semen tasted a bit salty, but I did it and I'll do it again, whenever either of us wants to. No more rejections, ever,\" grinned Hazel.\n\nEmerson stood, extended his hand to Hazel and said, \"Let's go to our bed, once I recover I wanna screw your brains out.\"\n\n\"Why not right here on the couch, it's comfortable. I want to fuck you in every room in this house,\" grinned Hazel straddling him as he sat back down. \"Suck a tit 'til you recover.\"\n\nDamp with sweat, breathless but thoroughly sated, an hour later they held each other. As his semen oozed from her Hazel turned to kiss her husband and then said, \"Within a week of moving into our new home I hope we can christen each room just like this.\" With that she rested against his chest and closed her eyes.\n\nThough part of Emerson was tempted to ask what had brought all this about he wisely held his tongue. He hugged the bride of his youth more firmly, closed his eyes and took joy in the wonder and the satisfaction of the moment.\n\n##\n\nAfter handshakes and hugs all around Sue and Tram left, Amy Anne ran back out to her car. She came back in carrying a file folder, \"Your contract is in here. Just fill in a closing date, sign and date it, and if you have a fax machine we can get these off now.\"\n\nExtending her hand Veronica said, \"We do. Let me review it.\"\n\nAs Veronica walked back into the den I said to Amy Anne, \"You have beautiful, sexy children. I look forward to getting to know them better, and so does Veronica.\"\n\n\"I noticed that you're captivated by Sue's large boobs,\" grinned Amy Anne. I felt a little flushed at being so obvious. Amy Anne put her arms around my neck and kissed me as she hugged me, \"Don't be embarrassed. They're not only eye catching, they're natural too.\"\n\n\"They are definitely eye magnets,\" I nodded in agreement.\n\n\"She has a good dose of the Trammel blessing and the Trammel curse,\" she noted.\n\n\"Blessing? And a curse?\"\n\n\"The Trammel women, that's her father's mother's side of the family and they all have large tits. Large tits like hers are blessing when a woman's young. They do attract a lot of male attention, and some female attention too. Lovers find them fun to play with now, but they turn into a curse as a woman starts having children and getting older which is why she's planning to have them reduced either just before or just after her first child.\"\n\nI was confused. \"Men.\" Amy Anne complained. \"Scott, if you want I'll explain a few things that men never think about when they see a well endowed woman.\"\n\nIn these last months I had become a willing and eager student when it came understanding women. I nodded for her to continue, \"Men forget that the larger the size the greater the weight. While Sue is young, her breasts are firmer now than they will ever be. Yet, the effects of gravity change her center of gravity and put a strain on her shoulder and back muscles.\" I wasn't getting her point and she knew it so she asked me, \"How many well endowed gifted female athletes have you ever seen excelling at the college or Olympic levels in sports that demand either speed and/or fine dexterity? Soccer? Skiing? Track and field? Competitive swimming? Gymnastics? Basketball or softball?\"\n\n\"None that I can immediately recall,\" I confessed.\n\nAmy Anne sighed as I was still missing the point. \"That's because they're few and far between. Sue has an eye for and an interest in various sports but a girl like Sue has difficulty playing. Her center of gravity is off. When she moves, her breasts flop all around unless they're well contained and to contain them that well affects the athlete's ability to breathe. It's a catch-22. Her breasts demand a great deal of every day support and the demand will only increase in the coming years. The curse will become more problematic once she's pregnant for the first time. Her breasts will swell further and gravity will pull even more on them and her occasional back pain will become more frequent. By the time she's in her late thirties she'll be wishing she had B cups.\"\n\n\"I'd never given it any thought,\" I confessed.\n\n\"His eyes are now open,\" laughed and teased Carol as she walked in to gather up some abandoned glasses. \"Thanks for the public service announcement Amy Anne.\"\n\nFifteen minutes later Mary Claire announced that we'd eat at six and asked Carol to come in the kitchen and help her with something for a few minutes. Veronica returned with the contract and asked Amy Anne, \"Why am I getting a three percent commission?\"\n\n\"Because you're the buyer's agent and you'll get three percent on the Jacobson's contract as well. Both sellers think they're getting a good deal by finally selling these properties. I don't mind sharing the wealth with you. Will you mind sharing your husband with me?\" grinned Amy Anne.\n\n\"I'd do that even without the commission. I made Tuesday the closing date. Sign it handsome where I have it flagged. I think you've gotten a good deal, both on the house and your realtor,\" Veronica said handing me the documents.\n\nI asked Amy Anne if she knew anything about the property that is going up for auction. She told us, \"Our agency was close to having the property under contract fifteen months ago but one of the lady's daughters got her to change her mind and allow the daughter to negotiate with the developer who has the property on the other side of the road.\"\n\n\"What property?\" I asked with concern.\n\n\"Do you know the vacant land across from the intersection at the bottom of the hill?\" I nodded that I did. \"About four and half years ago a developer bought that land.\"\n\n\"What about the vacant land this side and to the right of the intersection?\" I asked.\n\n\"If memory serves me twelve acres on the corner are owned by the county or the city. I think they were wanting to build a small park there,\" she answered.\n\n\"Handsome, we need to bid whatever's necessary to win the auction,\" Veronica said with alarm.\n\n\"I agree,\" I replied.\n\n\"Don't worry about the development going up anytime in the near future. The negotiations on the lots behind you to the road fell apart. The developer was over extended and the daughter didn't find a new buyer before her mother passed away. We were still interested putting the land under contract and listing it but woman's executor, her oldest son who's a lawyer in Knoxville, is putting on the auction. He fears the land could remain unsold for years and he wants the estate closed by next summer,\" Amy Anne continued. \"There has been some softening of real estate prices in Knoxville and here too. I suspect that he fears it's going to get worse and wants to sell the farm quickly to the highest bidder.\"\n\n\"So you say the developer isn't in a position to do anything right now,\" Veronica inquired.\n\nAmy Anne nodded, \"In the last year he built a large development in St. Charles County. He got overextended on that project with half of the 89 homes still not sold. Most of those sold were at a steep discount. There are another 55 lot with foundations poured. Rumor is that he's desperately trying to stay solvent.\"\n\nVeronica and I looked at each other. We were both thinking along the same lines. \"Amy Anne could you make some quiet inquiries to see if per chance he's looking for cash and is willing to sell what he owns down the road?\"\n\n\"I know the two men who handle most of his real estate and I'll make quiet inquiries. If the rumors are correct that he's trying to keep from filing bankruptcy he may be willing to sell the land at a substantial discount.\"\n\n\"That's enough business for now. How nice that the two of you reconnected. Let's make it a physical reconnection after dinner, shall we?\" demurely asked Veronica.\n\nAfter signing the contract I took it in and faxed it to the cover sheet number that Amy Anne had thoughtfully provided. A message was returned confirming that it had been successfully faxed and received.\n\nVeronica sat on the couch next to Cathleen. As we talked with Amy Anne and our daughters I noticed my wife's hand had crept up against the hem of Cathleen's skirt. Cathleen lifted her butt to allow her skirt to be pushed higher to allow Veronica's hand to rest against Cathleen's crotch. In turn Cathleen turned toward Veronica and put her hand under Veronica's skirt while deeply and passionately kissing her.\n\nAmy Anne, licked her lips and muttered, \"I like some of that.\"\n\n\"Ask and you shall receive, I'm sure you find the dessert to your liking.\" I stood, moved to her and kissed her with my hand gently fondling her breasts. It was nice to be reacquainting myself with the first breasts I had ever played with in my teens. Her moans encouraged me to keep exploring until Mary Claire called us to dinner.\n\nShe'd made place cards for each of us. I was at the head, our guest Amy Anne was to my left, Veronica next to her, Mary Claire, then Carol at the other end of the table, then Katrina, Cathleen and Ashley. Each card had a small sketch of the person's face. What a unique idea, I thought.\n\nMary Claire's dinner was superb and whenever she'd need to get up and return with something she'd make sure that Amy Anne's eyes would become acquainted with more of her ample cleavage. As we were drinking coffee with our dessert in the living room Veronica asked Amy Anne, \"I understand from Carol that your lifestyle group is mainly made up people our age. What do your kids think about it?\"\n\n\"They love it so much that they'd party with members of the group every week if they could,\" laughed Amy Anne.\n\nCarol added, \"Sue's very popular with the men. They love her big boobies...so do many of the women. The women all love Tram. He not only has the energy and enthusiasm of a young man but he's become a skilled lover. Veronica if Tram does succeed in seducing you Saturday you'll find his up-curved cock to be a delight. Especially missionary or cowgirl, the curve makes his cock head tickle my g-spot. And for you Scott, Sue has extremely sensitive nipples on her hooters. I think they're hard wired to her clit, suck 'em and she'll come.\"\n\n\"Amen to that.\" smiled Cathleen. \"His curved cock in my ass is a totally different sensation, especially cowgirl.\"",
        "\"Three or four of the men and most of the women helped him along,\" Amy Anne replied. \"They've also enjoyed the games that we play from time to time.\"\n\n\"What kind of games do you play,\" Ashley queried of Amy Anne.\n\nAmy Ann explained several games including a favorite of hers. \"Several women are blindfolded and by orally pleasuring the cocks of several men for a minute each the woman tries to identify which cock belonged to which man. Another that I like has several women kneeling on a bed or along a sofa and various blindfolded men have to identify each woman after only fucking each of them for forty-five seconds. Because the men aren't allowed to touch the women with their hands, only with their cocks, other women not on the line help keep time and line up each man's cock with the pussy in front of him.\n\nMary Claire, always the shy one, piped up, \"The cock sucking game wouldn't be a challenge with just one man but the forty-five second fuck sounds like fun. Do you also play a tit sucking game where the sucker tries to identify the suckee?\"\n\n\"Katrina and I could be the 'cock aimers' and time keepers in the fuck game, but we could participate in the boob sucking game. What'd you think Dad, up for some fun. Oh, yes you are,\" laughed Ashley with her hand around my cock.\n\n\"Do you need help in the kitchen, Mary Claire?\" I asked.\n\n\"Sure, are you volunteering?\" she asked.\n\n\"Yep. Ladies I have a request. Leave skirts, hose and heels on, no panties, no tops. Okay?\"\n\n\"Absolutely,\" grinned Veronica, \"and before the pussy game Ashley and Katrina can lick us to make sure we're soaked before you fuck us. Come on ladies, we have our directive and let the games commence. Let's carry this stuff into the kitchen and head up.\"\n\nAs the women were carrying plates and silverware to the kitchen counter Mary Claire took off her maid costume, her g-string and half cup bra. Ever watch a topless woman in stockings, a garter belt and four inch heels load a dishwasher? If it were on YouTube it'd quadruple dishwasher sales. After the women left and we were filling the sink with soapy water, Mary Claire walked to me, kissed me with an open mouth and began to unbuckle my pants. After they fell to the floor I stepped out of them, toed my shoes off, she pulled my boxers down and pulled my socks off. \"Oh, much better,\" she smiled.\n\nWe completed washing and drying in that state of undress. As we finished she said, \"Fuck me, you'll last longer later tonight,\" and she hopped up on a stool and pulled me to her. \"Besides, I want to give your little women a little surprise treat from my pussy,\" she said with a glint her in eyes. Mary Claire had sure changed from the shy young lady I first met by the pool.\n\nNeeding not further encouragement I entered her without any trouble. She wrapped her legs around my waist and I began to thrust in and out. Within a few minutes I came in her and we made soft sounds to each others lips as we came down.\n\n\"Ok, now you're ready for some serious fun,\" grinned Mary Claire.\n\nAs I was thinking of pulling out of Mary Claire, a similarly attired Katrina came into the kitchen and with merely a glance and a smirk opened one of the kitchen drawers, pulled out a pair of swim goggles patted me on the ass and went back upstairs.\n\nAs Mary Claire and I walked into the bedroom and I glanced at the green light, Carol said, \"Okay, tits first. You can guess after one minute of sucking, one of us will guide you to the nipple.\"\n\n\"What happens if I can't identify you correctly?\" I asked smiling. \"And is that one minute total for both or one minute for each?\"\n\n\"We're not in a hurry, so one minute for each,\" smiled Veronica.\n\n\"You move on if your first guess isn't right,\" grinned Amy Anne.\n\n\"Do I get a second chance after I've sucked all six of you?\"\n\n\"Maybe, maybe not, it depends,\" frowned Veronica.\n\n\"Depends on what?\" I asked.\n\n\"Depends on how much we enjoyed you the first time,\" laughed Cathleen. \"Got the goggles ready Ashley?\"\n\n\"Yep. I put a piece of cardboard in each eye cup. We've used these for 'Marco Polo', so they should work as well for this.\"\n\n\"Since we're all within an inch of each other in height, why don't we just lean our butts against the bed rather than sit on the bed,\" suggested Katrina. \"Dad, keep your hands behind your back. My guess is that you probably know most of us by shape and that by using your mouth alone you'll get at least three, maybe four, wrong.\"\n\nI put on the goggles, couldn't see a damn thing. And I thought this was going to be easy. But it may not be as easy as I first thought downstairs. My daughter's statement rang in my ears and I silently cursed that I'd not paid more attention to my mouth's tactile sensations.\n\nSome silent female took me by the arm and positioned me, I assumed in front of someone. When she lightly touched my back I leaned forward and someone's hand brushed a nipple across my lips. I opened my mouth and began to gently suck and twirl my tongue around what was an already erect nipple. I released it from my sucking lips and asked, \"Other one please.\"\n\n\"Hmm,\" I said after treating the other one the same as the first one. Pea sized nipple, areola indistinguishable from the breast, firm and average size I noted as I sucked on the first breast. \"Other one again.\" After another full minute to confirm what I noted with the first I said,\" It's Katrina.\"\n\n\"Yeah, Dad, nice job.\" I was right the first time. This is easy.\n\nI heard Cathleen's voice \"God, that's erotic watching him suck his daughter's boobs and to see her enjoying it so much.\"\n\n\"Okay, Dad I'll guide you for the rest of the tits,\" said Katrina. \"Here, bend slightly and when she brushes your lips time starts.\"\n\nThis one was notable for small, yet firm nipples and from the resistance to my tongue pressure, quite firm. The slightly irregular areola was distinguishable but not raised. I must have been paying more attention than I thought. Without asking for the other one I confidently ventured, \"Ashley?\"\n\n\"Yep,\" said Katrina, \"let's move along.\"\n\nThis time she turned me in a circle then said again, \"Bend.\"\n\nThis time the nipple was a bit larger than the first two, kinda sat in the top of the breast which was amazingly firm for one of the older women. I tried both before saying \"My wife.\"\n\n\"Not bad three for three, Dad,\" said Ashley.\n\nKatrina turned me around again and I was presented with a nice, thimble sized nipple, the breast wasn't quite as firm and the areola seemed to be more dimpled, one of the nipples had a small depression in the end. \"Always a pleasure Mary Claire,\" I said.\n\n\"This guy's good,\" remarked Carol.\n\nKatrina kinda moved me from side to side after having me turn completely around. The nipple pressed to my lips seemed to be attached to a smaller breast than the ones previously. I was able to take a substantial part of the breast and thoroughly laved the nipple and areola before releasing the suction and saying, \"My first wife.\"\n\n\"Man's got a memory for tits, that's for sure,\" I heard Amy Anne say.\n\n\"He's a tit man. I don't know which of us loves to suck and play with tits more, he or me,\" my ears heard Veronica laugh.\n\nThe next one reminded me of my wife but the breast felt a bit larger and I sucked the nice sized nipple and lifted it a bit with my mouth. After taking the full two minutes I said, \"I still remember how you felt Amy Anne.\" It was more a process of elimination than familiarity, but said what I said more out of flattery than not. If her breasts had been first or second I'm not confident I'd have made the correct choice.\n\n\"Ohh, and I still remember how you liked to suck them then,\" said Amy Anne pulling me into her and kissing me.\n\n\"Well, I don't have a set as nice as our wife's and I'm the only one left, but I still want my minute per tit.\"\n\n\"You got it, dearest,\" and two hands guided me in front of her and a nipple was brushed against my lips. My lips happily opened. Carol put her hands around my head and held me tightly to her as I savored her nipples and breasts.\n\n\"Time,\" Katrina said. \"Take off your goggles for a few minutes and then we'll play the next game.\n\nAfter each of us finished another glass of wine, Veronica invited Amy Anne to spend the night. Carol then announced the rules for my second 'test'. Katrina and Ashley would lick each woman until they were very moist, then would position me behind them as they bent over holding onto the footboard of the bed. I could stroke for forty five seconds, then I'd be moved behind the second one and so forth until I had fucked each woman. The first round was intended to help me to note differences. The second round would have the ladies in a different order and after another forty-five seconds with each I was to make my guess.\n\n\"You aren't expected to come, save that for later,\" cooed Veronica.\n\nI put my goggles back on and Ashley waved at my face to see if I flinched. I didn't, I honestly couldn't see anything.\n\nThe women were silent as Ashley and Katrina on either side of me led me to a pussy. Then one of them dragged my cock through the slit and lined me up. The other pushed against my ass to get me inside the first pussy. It was kind of awkward to thrust in and out, but because the girls were steadying me I accomplished it. This one seemed to be full of my load in the kitchen. I was led through, really into, all five of them. Then Ashley announced nearby, \"Did you get your bearings? Now for round two and guessing whom you're in or ...\"\n\n\"Or what. That seemed ominous,\" I said.\n\n\"Not at all, just do your usual studley thing,\" laughed my wife, from behind me.\n\nI heard some movement as the ladies rearranged themselves. I was lined up, moistened and entered Carol and more strongly stroked her and when Katrina said, \"Time,\" and pulled me back, I heard her mutter, \"Nooo.\"\n\n\"That was Carol,\" I said.\n\nThe second pussy was the one full of cum but I enjoyed Mary Claire for the full forty-five seconds. \"Mary Claire.\"\n\n\"I want to take a number and have you guess again,\" she said laughing.\n\nMy wife was very familiar to me, I guess I'd been in her almost every which way possible. Then I wondered if I was correct. Maybe it was Amy Anne I thought. Whoever it was she felt heavenly especially when her muscles began gripping me. Veronica had been working hard on her Kregles and her grip was the definitive sign. \"My wife,\" I announced as I was eased out of her by the girls.\n\nThe next one was also familiar, not as much as Veronica or Carol. Then I had my doubts, but seconds later I was certain I was fucking Cathleen. I asked, \"Can I wait until I've had the last one?\" I asked.\n\n\"Sure, do me again just to make sure,\" laughed Mary Claire.\n\nThe last pussy I entered had to have been Amy Anne I concluded. I can't quite say why it had to have been her but it just felt that way. As time was called I didn't pull out but announced, \"This is Amy Anne and the one before was Cathleen.\" With that I put my hands on Amy Anne's hips and forcefully trust in and out for at least another minute before I pulled out and removed my goggles.\n\nShe sighed as I pulled out and asked, \"Can we get in your bed? Soon?\"\n\n\"Of course, both you and Carol can. I'm going to spend the night with Mary Claire and I think Cathleen'd like to spend the rest of the evening with Katrina and Ashley,\" smiled Veronica. Cathleen smiled at the two girls.\n\nMy wife went to the closet, quickly slipped on a sheer negligee, brushed her teeth, then returned to grind her pussy against my still hard cock as she kissed me with an open mouth. \"I love you handsome. Fuck them well, do me proud and I'll see you in the morning.\"\n\nAs the rest of the 'crowd' disbursed, Carol led me to the bed remarking, \"Wonderful muscle memory, kind sir.\"\n\nAmy Anne was lying on her right side still wearing her skirt, garter belt, hose and heels. Her left leg was bent with her shoe flat on the bed. \"See anything you'd like to use to further refresh your memory.\" Two fingers moved along and spread her pussy lips. \"Pussy perhaps?\" she grinned.\n\n\"On your back, you wonderful woman. Let me fuck you the way I did the very first time. I seem to recall we were on a pool deck, so let's pretend this is one.\"\n\nAmy Anne hiked her skirt to around her waist and rolled flat on her back with her legs spread. I knee walked between her legs, stopping to savor her wet labia and perhaps just a light lap of her clit which caused her to shudder a bit. I moved up her body leaning on my extended arms, gently sucking each nipple, then softly kissing her neck. I opened my mouth to engulf hers. As our kiss deepened I felt her hand reaching between us, grasping my cock and inserting it into her pussy. I slowly moved my hips penetrating her a half inch at a time. Amy Anne began groaning when I was about halfway in and said into my mouth, \"No more tease, fuck me, fuck me now.\"\n\nI kept the same pace as she mewed, \"Fuck me you bastard, fuck me.\"\n\nWhen I was fully in her I paused for a moment then pulled about halfway out and quickly drove deeply into her, hit bottom and held myself there enjoying the feeling. She grinned. I grinned back.\n\nI began to more rapidly withdraw until my cockhead was all that was in her pussy and quickly plunged deeply into her. \"Oh, God, that's nice. That's a good fuck, keep going, keep...,\" her last word was interrupted by a loud 'ugghnn' and she began to orgasm, bucking her hips. I rode it out with her by continuing to stroke in and out as best I could against her heaving hips. Finally she tightly squeezed her legs around my waist and her arms around my shoulders as tears ran from her eyes said, \"I should have loved you, I really should have. I didn't know or understand then what it meant to love.\"\n\nAs her arms and legs relaxed, she looked at me saying, \"My body has missed you. You could become habit forming.\" As she held me to her, I knew she was trying to make me feel good by stroking my ego with a generous dose of lover's pillow talk. She studied my face for several seconds before adding, \"I need to make sure your wife lets you do this with me from time to time. Did you come?\"\n\n\"I'm sure if you ask nicely she'll let us do this more often and no I haven't yet. I intend to. Can we try something?\" I asked.\n\n\"Whatever you wish as long as it involves fucking,\" she smiled.\n\n\"Carol, lean against the headboard. Amy Anne, get between her legs with your back against her. Kinda sitting up, yeah, like that,\" I smiled. I moved up between her legs sitting back on my heels and slid up my thighs under her ass and entered her. Because of the angle, I settled a bit deeper into her, which was acknowledged with a smile, then a groan of pleasure. I leaned forward and nipped her nipples as I started to gently take quick but deep strokes into her.\n\nCarol leaned forward, grasped her breasts and presented them to me, \"All for you handsome.\" I took the breast while she began tweaking the nipple on the breast I wasn't pleasuring.\n\nAs I sat back up a bit Amy Anne turned her head, \"Carol kiss me.\"\n\nAs they kissed I began to more forcefully fuck her and as I could feel her orgasm building, mine did as well. Finally I announced, \"Now,\" and began to flood her grasping cunt with my sperm. She then began to come as well and we finished together.   I stayed in her until she started to try to sit up a bit more after she cooled down. \"Amy Anne, I have to apologize. I should have asked you earlier if you wanted me to wear protection. I'm so used to loving the women in this house without it I didn't even think.\"\n\nShe replied, \"You wonderful man, you needn't apologize. Prior to tonight other than my husbands, I've only allowed two men to take me bareback, one is my son and the other is ... well there is another man who's in our social circle. I decided when I was invited here that you would just have to be content to fuck me bareback just like you did the first time and every time that summer. Like my son and my other lover I want nothing to come between us and I want to feel your hot sperm filling me,\" Amy Anne smiled. She pulled me down for a tender kiss. \"Now I have to go to the bathroom so why don't you make love to Carol now.\"\n\n\"She's a good fuck,\" I murmured to Carol as we embraced and she put her leg across my hip.\n\n\"Yeah, most guys say that. Are you glad you reconnected?\" she asked reaching over her leg and grasping my wet cock.\n\n\"Definitely. Her family looks like they'll be fun to play with. Veronica seemed quite taken with Tram,\" I smiled.\n\nShe was lightly playing with my half erect manhood, \"Yeah, and you with Sue's tits I noticed. So did Mary Claire. She's got a beautiful body, full hipped, slim waist, dynamite legs, pretty feet and knows how to please a sex partner, man or woman. Don't later claim later I didn't warn you, Saturday night you're going to have your hands full with those two. She's like her mother when it comes to men wearing condoms. If she allows you to fuck her without wearing one, it's because her mother bragged on you and you made an impression on Sue. The only two men that take her bareback are Tram and the same man who takes her mother bareback. When she and her late step-father started having sex she also never asked him to. \"\n\n\"Duly noted my dearest,\" I smiled. Her ministrations had brought me back to full life.\n\n\"And I can guarantee you that our wife is going to have her pussy full with Tram. Will you be okay with that?\" she asked sincerely.\n\n\"Of course, I thought you knew that by now. Doggy or do you want to ride me?\"\n\nShe rolled me on my back and impaled herself on my re-energized rod. As she started to ride me I asked, \"Do women in your lifestyle group usually take men bareback.\"\n\n\"Rarely. And then it's with men that they've known for a long time.\" Her hips continued to move at a moderate pace as we talked and made love. \"Some women like Evie Graham never do except with her daughter's husband. Like Sue, if a man ever takes her bareback it's because they have a special connection. Twice she's told me that she'd only take a man bareback if she loved him and that if they were both single she'd be happy to marry him.\" I groaned as she impaled herself forcefully upon me. \"It would have to be just that type of relationship, and before you ask, I've been very selective too. You and Max, and the one man who Amy Anne was referring to, and another man who passed away years ago and was the husband of a close friend of mine, no other man has taken me bareback in over ten years.\"\n\nAs she began to slowly move her hips she put her hands on my chest and bent her head to look at me. \"Any regrets?\"\n\n\"About what? \" I asked responding to her movements.\n\n\"The lifestyle you seem to have chosen. Other men fucking your wives, you fucking other women? God, Scott you feel good inside me,\" she grinned as she sped up her movements.\n\n\"Only one.\" I grunted countering her movements to more deeply penetrate her.\n\n\"Only one, that's all?\"\n\n\"Yeah, that I didn't meet you and Veronica three or four years ago. But I've got you both now and you've got me, heart and soul,\" I panted, \"for the rest of my life.\" I raised my arms to caress her swinging breasts and pulled her to me and we kissed with open mouths and tangled tongues. Carol broke the kiss so she could try to catch her breath and her body began to quiver as an orgasm coursed through her.\n\n\"Something I said?\" I asked.\n\n\"No, it's what you're poking me with,\" she gasped. \"Are you close?\"\n\n\"Slide up and down. Like that, and a little faster. Yes, that's it. I'm getting closer, closer. Ahh, God I love coming in you Carol.\"\n\n\"Ha, you love coming in a pussy,\" she panted.\n\n\"That too, but I love coming in you so much because it's you and I feel so connected by love. I love it because it so wonderfully symbolizes how much I love you and feel as one with you,\" I said breathlessly but truthfully with tears forming in my eyes.",
        "My fair-skinned, green-eyed , redheaded love dropped into my arms.\n\nAs my spurting slowed out of the corner of my eye I noticed Amy Anne sitting on her hip on the edge of the bed with her legs apart.\n\nAfter allowing Carol and I to hug and kiss in silence for several minutes Amy Anne finally and quietly said, \"You two make a 'cute couple' as they say, well really a cute threesome with Veronica. You've done well Scott, I'm happy for you and your two wives. I'm happy I was honored to be your first. Now that we've met again, if you'll have us, I'd like to stay in your lives. I know Sue and Tram would too.\"\n\nCarol raised up off me and laid beside me as Amy Anne did the same on the other side. \"Did you think Sue's request to be taped while you fuck us was 'kinky'?\" she smiled.\n\n\"See that green light beside the door?\" asked Carol.\n\n\"Yes. Is it a thermostat or something?\" asked Any Anne focusing on the door.\n\n\"Kind of. When it's green there're three cameras recording the activity in this room. So no, it's not considered outlandishly kinky in this home. It's a turn-on to watch replays,\" grinned Carol.\n\n\"Can you make a copy for me, including the guessing games?\" brightly asked Amy Anne.\n\n\"First thing tomorrow,\" I replied.\n\n\"Think you might have one more time left in you?\" hopefully asked Amy Anne.\n\n\"I probably won't come but I'll bet I can make you,\" I laughed reaching for her luscious breasts.\n\n\"You two play, I'm going to kiss Katrina and Ashley clean up, say goodnight, then take these stockings and heels off. I'll be right back,\" said Carol moving off the bed.\n\nWhen Carol walked out the door without going into the master bathroom Amy Anne inquired, \"I thought she was going to clean-up?\n\n\"She is. It'll be done in that order, kiss Katrina and Ashley, then....get cleaned up...then kiss them goodnight and...\"\n\n\"Oh, I see. I love how you guys think and live.\"\n\n\"Thank you.\"\n\n\"When are you going to start fucking Ashley and Katrina?\" asked Amy Anne as she gently began stroking me.\n\n\"Probably on our honeymoon, they're going along.\" I replied as I started to harden under Amy Anne's ministrations.\n\n\"Really. On your honeymoon. You really are a 'close' family,\" mused Amy Anne.\n\nTwenty minutes later Amy Anne and I were exhausted but content as she fell asleep for our first night together. I was almost asleep as I felt Carol slipping into the bed behind me and cuddle against my back. As peaceful sleep drew me in, my love's hand reached over me and rested against my exhausted cock.\n\nI hope you're continuing to enjoy this tale of a family and their lovers. I've a long way to go before I finish but the chapters may sometimes be published further apart because of my day job. I'd appreciate comments and if you have some ideas you'd like me to incorporate, please tell me and I'll consider them. I try to respond to all emails unless they're cranky. I'd like especially to hear from any female readers"
    ],
    "authorname": "Reindeer58",
    "tags": [
        "group sex",
        "stockings",
        "heels",
        "swinging"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-42"
}