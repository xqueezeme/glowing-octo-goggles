{
    "title": "The Jealousy Game",
    "pages": [
        "Thank you so much to everyone that commented on my first story! I greatly appreciate it and it inspired me to write another! Hopefully this one is even better after taking some of your critiques into account! \n\nThe Jealousy Game \n\n\"Excuse me?! What the fuck is THAT supposed to mean,\" Alex screamed at me. \n\n\"Babe, babe...calm down, I -\" \n\n\"Calm down? Fuck you! I make you dinner every night, I keep your apartment clean; notice that's YOUR apartment not MINE! I listen to you complain about your piece of shit job day after day but god forbid I complain about mine at any point!\" \n\n\"Ba-\" \n\n\"And then after all that you give me an ultimatum?! A fucking ultimatum?! Fuck off you piece of shit! I can't believe I just wasted 2 years of my life on such an asshole,\" and with that Alex barreled out the door. \n\nIt hadn't gone well, that was obvious, but give her a day to cool down and she'd come around. I hadn't phrased it well for sure, but that reaction had been a bit much even so. I'd go visit her tomorrow and smooth things over. \n\nAlex and I had been together for almost two years after meeting through a mutual friend. We loved each other but also had our spats here and there; nothing like this, but some pretty loud discussions. Alex had just graduated with a biomedical engineering degree when we had met and I had instantly taken to her because of her intelligence and sense of humor. Her gorgeous figure and adorable button nose with a smattering of freckles hadn't hurt either. Shortly after we started dating she got a job and then realized she hated everything about her day to day. She had quit shortly after and began talking about going to grad school for something entirely different. In the meantime, Alex had gotten a job cleaning and doing housework a few days a week for a few wealthy families in the area for minimum wage. It was a temporary job that had become a little longer than temporary. I had tried to subtly push her towards the next phase of her life but she hadn't gotten the hint, and thus, my blunt approach had been born. Sure I may have insinuated that I'd leave if she didn't move on from her temporary job but I had meant that as more of a motivator than an actual ultimatum. Ok, fine, I'd fucked that up horribly. I decided I would spend the next 24 hours figuring out how to get through to her and then everything would be fine. \n\nThe next day I took a deep breath as I pulled into Alex's apartment complex and threw my car into park. I made my way up the stairs and knocked on her door. I could hear talking inside and strained to hear if it was the TV or someone visiting; if she had someone over this probably wasn't a good time to discuss our issues. I started to turn around to leave when the door cracked and Alex's face appeared. It took but a second for her face to change from curiosity to complete detest at the sight of me. \n\n\"We have nothing to talk about. Leave me alone.\" She said \n\n\"Babe, I...\" \n\n\"Don't call me that, I'm not your babe anymore.\" \n\n\"Sorry. Alex, can we please talk? I didn't exactly explain myself well yesterday and I just want you to know where I'm coming from.\" \n\nHer voice started to escalate and I cautiously looked around to see if anyone was watching as she opened the door fully and launched into another tirade. \n\n\"Where you're coming from?! I really don't give a fuck where you're coming from. I spent so much time trying to make your spoiled ass happy and then you repay me with all this bullshit?! Fuck off! I don't even know -\" \n\n\"What's going on? Everything ok?\" Came a voice from deeper in the apartment. \n\nI looked over Alex's shoulder to see a shirtless guy wander into the living room from the bedroom. It took but a moment to realize Alex was wearing cotton shorts and a tank top with no bra; an outfit she always threw on after sex to lounge around in. \n\n\"Everything is fine, just some asshole trying to make me feel shitty about my life choices.\" \n\nNow it was my turn to feel betrayed and pissed, \"Oh my bad, I try to push you to be more ambitious and you go fuck someone?! Not exactly the 'go get it' attitude that I was looking to inspire! Jesus Christ, one fight and you go running off to get pounded by someone else?! Are you fucking kidding me? Fuck the last two years I guess. Have a great life, and enjoy cleaning up after people that did something with theirs.\" \n\nI stormed off leaving her standing their fuming and shocked. Even when we had argued in the past I had never raised my voice or thrown verbal barbs like that and it had clearly taken her off guard. Good. That bitch could rot in hell if all it took was me pushing her to live up to her potential to run off with someone else less than 24 hours later. The whole 'cleaning up after people that did something with their life' comment had me a tad conflicted as I got in my car. It was a damn good line so I was proud of how it had left her dumbfounded, but it was probably too harsh which made me regret it just a bit. No, fuck that, she can deal with it and talk it over with whoever she's fucking now. Not my problem anymore. \n\nOver the next few weeks I went from pissed about the betrayal, to depressed that I was now alone. Most of my friends had moved away after graduation and I hadn't really made many new ones since, so that left me with very little to do. I got into a rhythm of coming home, ordering some shitty delivery food, and binging Netflix shows the rest of the night; it became my reality and I rarely strayed from it week after week. \n\nEventually I became bored with the delivery options for food; having run through the gamut many times over. It was only in my frustration of having nothing new to eat that I made the decision to go out one Wednesday night. I had planned on ordering food and watching the playoff game, but I figured I could walk to the bar a few minutes away, grab a few drinks along with dinner, and watch it there all the same. \n\nHalf an hour later I saddled up to the bar, picking a chair directly in front of a TV with the game on it and away from everyone else. A minute or two later the bartender came over and asked if she could get me anything to drink. I was engrossed in the game and barely glanced away from the TV as she walked up before doing a quick double take. She was gorgeous; not in your typical 'wow she's stunning' way, she was objectively very pretty, but something about her short circuited my brain on sight. She immediately became my kryptonite. I couldn't think straight; hell I couldn't think curvy either. My brain completely shut down as I stared into her encapsulating brown eyes. I felt the panic rising from my stomach up through my chest as I realized she had asked me a question and it was getting awkward that I hadn't answered or even made an attempt at saying something yet. In my panic I blurted in a rushed jumble of sounds \"uhhh, canIgetaminutetothinkaboutit?\" Smooth, well played, she definitely didn't pick up on the sheer panic you had felt from trying to order a water. \n\n\"No problem! I'm Kim, so just flag me down or yell whenever you're ready!\" She responded with a smile that made my heart twist itself into knots. \n\nHoly shit what was that? I need to get out of the house more, I can't even order a water and a jack and coke from a woman all the sudden. I mean, she's beautiful, but it's a water and a jack and coke, how hard is that to say without looking like an idiot? \n\nI spent the next few minutes regaining my composure and flipping through the menu to figure out what I wanted to order for dinner. I had abandoned the game and was lost in my own head trying to sort out the knot that my insides had suddenly become. Finally I decided it was time to face her again and attempt to salvage as much of my dignity as possible. \n\nI caught her eye; her gorgeous, soft, deep brown, intoxicating eye, and made the most awkward half wave, half come hither motion I could possibly have devised and felt the panic begin to rise as she walked towards me. \n\n\"Figure out what you want?\" \n\n\"Uhh, yeah, umm, a water and a, um, coke with jack in it please,\" \n\nA coke with jack in it?! It has an official name dummy. Even kids in high school say jack and coke. What a debacle.  \n\n\"And can I also get a buffalo chicken wrap?\" I managed to spew out. \n\n\"Sure! Good choice by the way, I love that wrap.\" She responded cheerfully as she strolled back down the bar to put my order in. \n\nShe liked my order! Nice!...Yeah, nice chicken wrap order dummy, she totally loves you now. God I'm an idiot. \n\nI spent the next few minutes staring at the TV pretending to watch the game, but really I was mentally abusing myself inside for my complete lack of composure at something as simple as ordering dinner. Eventually she brought over my drinks and asked if there was anything else she could get me. True to the theme of the night, I reacted as if she had asked me a calculus problem and spewed forth a series of umm's before answering 'no thanks.' Nailed it. \n\nI had to figure out what the hell was going on. What was it about this girl that was sending me into a drooling stupor every time she came within 10 feet of me? As she helped other customers at the other end of the bar I analyzed her from afar. It couldn't be her personality, I didn't know her, so it had to be physical. I had been around beautiful women before and never reacted even remotely like this so what made her different? She had wavy brunette shoulder length hair, nothing special about that; dark brown intoxicating eyes, brown eyes are the most common color out there so that's not unique; an attractive face, fine but there are plenty of those; smaller seemingly perky breasts, maybe smaller B's, not remarkable; thin figure, ok that's nice but not drool worthy; a nice pert backside, I do appreciate that but it wasn't like she was waving it in my face every time she came over; long legs in skin tight jeans, again, nice, but not worthy of how I'd reacted. There wasn't anything I could pinpoint about her. Maybe it was the whole package? I was dumbfounded. Whatever it was, this girl had me doing summersaults inside. \n\nI spent the rest of the night trying to pull myself together every time she walked over and, eventually, succeeded in having a normal interaction with her; granted that normal interaction was just me asking for, and then paying my bill, but hey, little victories are still victories. \n\nOver the next three weeks I went to dinner at the bar every Wednesday and was pleased to find that she was there every time. I managed to stop stammering and acting like a total idiot and had normal interactions like a sane individual even though my insides were still churning. It wasn't until the fourth week that we broke the barrier between strict ordering and checking out conversations. It was completely dead that evening and I was the only one at the bar. She was clearly bored with very little to do and lit up when she saw me walk in and sit down. \n\n\"Hey! I knew I could count on my new regular to bail me out of my boredom! Water and a jack and coke?\" Kim asked cheerfully. \n\n\"You know it!\" I answered happily, \"I must say, I'm not sure if I want to be one of those guys that's a 'regular' at a bar or not; although I suppose I've somehow found myself becoming one.\" \n\n\"How come? It's not like you're one of the obnoxious regulars. You just come in, sit quietly, eat, and leave, nothing wrong with that!\" She said as she slid my water across the bar at me and then headed to make my jack and coke. \n\n\"True. I don't know, I guess I just feel like most people that are regulars at a bar don't usually have a lot else going on and I'd rather lead a more interesting life than that.\" \n\n\"Maybe some of them are like that, but those are the obnoxious ones. One of my favorite regulars in here owns a company that has a bunch of government contracts and he flies all over the world constantly, so I'd say he's got more than enough going on and he's still a regular.\" \n\n\"Touch\u00e9. I definitely don't fly all over the world so I guess I'm the lowlife compared to him.\" \n\n\"Haha well he's also got like 30 years on you so don't fret, you have time to land those government deals!\" \n\n\"Oh thank god. Being labeled a failure at 26 was going to be devastating to my psyche. I would have had no choice but to become an obnoxious regular.\" \n\n\"Hahaha! Please don't, I have enough of those. I can't imagine how many I'd have if I did this full time. I don't know that I'd be able to handle it.\" \n\n\"So what do you do other than this if this is just part time?\" I asked \n\n\"I'm a graphic designer during the day and just do this 3 nights a week for some extra spending money.\" She replied \n\n\"Oh nice! I almost went into graphic design actually but changed to electrical engineering last minute.\" \n\n\"Haha those two majors are nothing alike! How did you manage to go from graphic design to electrical engineering?\" \n\n\"Well, I always loved art in school and that side of me wanted to do that for a living, but I was pretty good in math, computers, physics, and that sort of thing and last minute I decided I could make better money in engineering and then art could be a hobby that didn't get ruined by the stresses of a career.\" \n\n\"Ugh, ain't that the truth. I used to love carrying around a sketchbook and just doodling; now that sounds like work and I haven't doodled for fun in over a year I'd bet. Good move on your part. I should have talked to you before I made my decision apparently.\" \n\n\"It can't be that bad! Staring at numbers all day can get really boring. At least at the end of your day you can hold something up and say 'I created this.' That's got to account for something.\" \n\n\"True. But it's never the thing I wanted to create that's the problem. The client always dictates what we can do to an extent and that's where it's frustrating.\" \n\n\"Ah, the dreaded client. People suck don't they?\" \n\n\"Hahaha they really do! I mean...some do...a lot do. Some aren't so bad! I mean you seem nice enough!\" \n\nI felt the heat in my cheeks as I blushed, \"yeah, well, it's easy to be nice when you're sitting in a bar drinking and talking to pretty girls, there's not a lot of stress in that.\" \n\nThis time she blushed and made the most adorable bashful face. \n\n\"What happened to the guy that comes in, eats, and leaves without a peep? This is the most I've talked to you since you've started coming! Not that I'm complaining.\" She said, changing the direction of the conversation. \n\n\"Yeah, well, I never want to take you away from work and stuff so I just sit quietly and eat. Tonight, well, I'm not sure if you noticed, but you aren't exactly slammed.\" \n\n\"Haha really? I hadn't looked around. But really, even if there are people here you don't have to be silent! You're fun to talk to so don't be a stranger in the future!\" \n\nWe continued talking as I ate and had a few drinks. She was captivating. She had a bubbly personality, a great sense of humor, and seemed to be fairly intelligent as well. We got along great and I may have ended up ordering more drinks than I should have just to stick around and talk to her. At the end of the night I thanked her for the food, drink, and conversation and she reminded me not to be a stranger in the future. \n\nFrom that night forward we grew into some weird version of friends that only saw each other at the bar. We had ongoing conversations about a variety of topics that would start and stop as she helped other customers and ran about doing her job. One night I told her about a movie I had watched the night before and how it had been one of the best movies I'd seen in a while and how she should definitely check it out. She said she'd never remember the title and gave me her number to text it to her. That single movie title text turned into texting regularly throughout the week after work, then little texts during work about clients or people being stupid, and eventually she even sent me a few pictures of designs she was working on to get my opinion. \n\nI thought about asking her out but I didn't want to be the guy at the bar that asks out the bartender. She was also way out of my league and I didn't want to ruin the great friendship we had developed. \n\nOne Friday, a few months after that first night of talking, Kim texted me that she had been asked to fill in for another bartender and I should come up to the bar and she'd buy me a drink. Of course I accepted, and after work, rushed home to shower and change. I didn't normally go to the bar on the weekend as it was pretty popular and got crowded quickly; and of course Kim didn't normally work weekends so that played a large role. I got there about 8:30 in an attempt to beat the late night rush of the college students. I grabbed one of the few remaining bar stools and looked for Kim. The bar had a few bartenders working that night since it was bound to get crowded and I found Kim weaving her way between them carrying drinks to a couple on the far end. As she turned around I caught her eye and her and that big beaming smile bounded down the length of the bar to where I sat. \n\n\"Hey stranger!\" She said as she began making me a jack and coke and pouring me a water, \"How was work?\" \n\n\"The usual, some good, some bad, some stupid.\" I replied \n\n\"Haha well forget about the bad and stupid, unless it's a fun story. Anything exciting on the good end of things?\" \n\nShe really knew how to put me in a fantastic mood. I was ecstatic to be there talking to her and there wasn't a place on earth I'd have rather been. \n\n\"Nothing too special. Got a raise and put on a fairly big project as the 2nd in charge which is kind of cool I guess.\" \n\n\"Hot damn! That's not 'nothing too special' that's awesome! Congrats!\" \n\n\"Thanks! What about you? Anything big or fun going on?\" \n\n\"Not really. Work sucks, I'm thinking about looking for another job. I've been getting a fair amount of freelance work lately and I'm liking that a lot more than anything I'm doing at work.\" \n\n\"Well, have you thought about starting your own company?\" \n\n\"Yes...and it terrifies me, so I don't think I want to do that.\" \n\n\"Oh nonsense, you could totally do it! You're super talented, you even said you're getting plenty of freelance work on your own merits already. My parents both run their own businesses so I know a fair amount about it. I could help you get started if you want? It's not near as terrifying as you think.\" \n\n\"I'll think about it. Gotta run though, I'll be back when I can.\" \n\n\"Sounds good!\" I said as she darted back down the bar to a group of guys that had just sat down. \n\nAs Kim worked I grabbed a napkin, borrowed a pen from another bartender, and began writing down all the things Kim would need to start her company. I had listened to enough dinner conversations and also worked in both of my parent's businesses enough to know how to start a company and what made them successful. By the time Kim came back I had 3 napkins worth of notes for her. As I handed them to her, Kim broke into a huge smile, \"Seriously? You meant it when you said you'd help me?! I thought you were just being nice! This is crazy! Thank you! I'm not sure if I'll actually do it but this is amazing either way.\" \n\n\"I'm happy to help. I love business strategy and all the inner workings of how companies operate, it's just a big puzzle to me.\" \n\nAs I glanced over Kim's shoulder my mood instantly dropped. Walking up and sitting down at the other end of the bar was Alex who was draped all over some guy's arm. She was sporting an outfit that could be described in no other fashion than slutty. Her tits were pushed up and on display, she sported a crop top that showed off her flat stomach, a skirt that ended a little higher than mid-thigh, and boots up to her knees. She never used to dress like that with me and I suddenly felt the loss of our breakup creep back in along with a sad realization of what she appeared to have become after our split. ",
        "It must have shown on my face because Kim followed my eyes to Alex and said, \"What's wrong? Do you know her?\" \n\n\"Yeah. We dated for 2 years. We broke up a few months ago when I caught her sleeping with someone else.\" \n\n\"Oh my god! I'm sorry! That's awful!\" \n\n\"Well, that's not fair I guess; we had a fight, she broke up with me, I went the next day to try to smooth things over and she had hooked up with someone else that night, so I guess she didn't really cheat.\" \n\n\"Uhh, maybe not technically but close enough, jeez.\" \n\n\"I should probably go,\" I said as I downed the rest of my beer. \n\n\"Aww really? No, please stay! Want me to kick them out? I totally will! I'll make up some reason about proper attire.\" \n\n\"Haha thanks, but really I should leave. We ended on bad terms and if she sees me down here I know she's going to just hang all over that guy and try to make me jealous. I'd rather not sit here by myself and have to watch that.\" I said with a weak smile. \n\n\"Hold on. Don't go anywhere ok? Be right back.\" And with that Kim moved back down the bar and began talking to another bartender. They glanced my way and the bartender nodded and said something to Kim while breaking into a big smile. Kim came back down to my end, \"stay here and save that seat next to you. I'll be back in 15 minutes tops.\" \n\n\"What are you doing? Really you don't need to do anything, I can just go home, it's fine.\" I called after her as she left the bar and sped off into the parking lot. \n\nI sat there sulking and trying not to look at Alex but it was hard not to. She hadn't noticed me yet as far as I could tell but she was still hugging the guy's arm and kissing his shoulder every time I chanced a look. \n\nWhy did she have to come here? Seriously? This is my spot. The night was going perfect too. God dammit, what a bitch. She has to ruin a great night with Kim now? A 2 year relationship wasn't enough I guess. \n\nA little over fifteen minutes later the stool next to me pulled out and I went to tell whoever it was that it was taken when I turned to see Kim. She had changed; she had changed a lot in 15 minutes. She was now wearing a light blue, loose fitting shirt that hung off one shoulder, short white shorts that fit her perfectly and showed off her long tanned legs, some strappy short brown heels, and some shiny silver hoop earrings. She had braided a small bit of her hair so it hung just next to her face framing it beautifully. I had never seen her outside of her work attire which was probably good because I was back to the bumbling idiot I had been the first night I met her. I quickly helped pull her chair out so she could sit down and stared dumbfounded at her with a look of pure idiocy on my face. \n\n\"Sorry it took a little longer than I thought. Changed my mind halfway through on what to wear.\" \n\nI didn't respond, I just stared. \n\n\"What? Did I miss something? I didn't have a chance to glance in the mirror before I rushed out.\" \n\n\"Uh, no, no, you didn't miss anything.\" I replied. Oh thank god my mouth works. Not quite as bad as the first time then. Let's get it together. Deep breath. It's just Kim, you know Kim, she's cool, just be cool too. \"You just, well, you look gorgeous. All that in 15 minutes?! Do you live out of your car or something? That was damn fast!\" \n\n\"Well thanks! Actually I just live like 2 minutes away so I ran home real quick to change.\" She said smiling. \n\n\"Wait, I forgot the bigger question here, aren't you supposed to be working?\" \n\n\"I asked Jen if they really needed me since it didn't seem to be absolutely swamped and told her I'd just be down here if it got super crazy all the sudden and she said it was fine for me to come hang out with you! So, here I am, making it so you aren't all alone if your ex decides she wants to pull some shit.\" \n\n\"Hahaha well aren't you just the best! Thanks! You really don't have to do this you know.\" \n\n\"Excuse me? I'm just sitting here keeping you company. You were the one that drew up a full business plan in 20 minutes earlier so who's the real 'you don't have to do this' culprit here?\" She mocked. \n\n\"Fine, fine, we'll call it even. Seriously though, thanks. This means more than you know.\" \n\nI glanced down the bar and locked eyes with Alex. Oh fuck. Here we go. Night officially ruined. She scowled at me and glanced at Kim. Kim saw the whole thing happen and leaned in close to me, \"let the games begin! Oh man this is going to be fun. Look at that face! My god, she really hates you! What the hell did you guys fight about when you broke up?!\" \n\nI proceeded to explain to Kim how I had failed to communicate that I just wanted her to live up to her potential as an incredibly smart individual and do something that warranted her having a biomedical engineering degree. I told her what I had said at the apartment the following day, what she had done, and what I had done. I told her everything. Kim shockingly loved it. \n\n\"You actually said 'enjoy cleaning up after people who did something with their lives'?! Damn that's a good line. I wish I could think of stuff like that when I'm mad. My brain just goes to shit and I can't think. Thankfully I don't get worked up very often. But seriously she has no right to hate you! You were just trying to help as any good boyfriend should.\" \n\n\"Seriously? You don't think I was too big of an asshole?\" \n\n\"Hell no! You're fine! But my god look at her go, you weren't kidding about the making you jealous thing.\" \n\nI looked down the bar and Alex was now standing behind the guy she came with kissing on his neck and lightly biting his earlobe. It was a tad over the top as her tongue darted in and out of his ear and up and down his neck. \n\nAs I looked towards Alex I felt Kim's arms wrap around my neck. I looked back towards her and she smiled at me, \"Want to play the game back? Girls only act like that when they're actually jealous themselves. Bet we can make them leave in under 20 minutes if we play it right.\" \n\n\"Hahaha oh man I dunno. Do I dare poke the beast?\" \n\n\"C'mon! Poke poke! It'll make for such a better story if we do rather than 'so we sat there and watched them slowly progress to dry humping each other at the bar and then we left.'\" \n\n\"Ok, ok, let's poke the beast. You seem to know your way around the situation, what's the course of action?\" I asked, getting a little excited by the prospect of Kim pretending to be super interested in me and also enjoying her arms around my neck. \n\n\"Ok just stare at her and act like it's bothering you a little. Not a lot, but suck her in by making her think it's working. Whatever you do don't break from that. I'm going to do my thing over here and you have to seem disinterested in whatever I'm doing.\" \n\n\"Easier said than done, but ok I'll give it a whirl.\" I responded. \n\nI turned back to Alex and caught her eye again. I put on my best \"please don't do this to me\" face and let out a huge sigh that even Alex could see from across the bar. Alex let a malicious grin flicker across her face that betrayed her desire to hurt me and went back to kissing and hugging on the guy in front of her. I felt Kim's hand loop around my neck and her chin rest on my shoulder, her mouth inches from my ear. \n\n\"Oooh that was perfect!\" She whispered in my ear, \"Now keep it up. This is where we really suck her in then twist it around on her.\" \n\n\"Hahaha remind me to never play games of emotion with you. You're quite the sadistic schemer!\" I said, barely moving my lips so Alex would think I was completely ignoring whatever Kim had whispered to me. \n\nI held my gaze on Alex as Kim began playing with my hair, nuzzled her nose against my cheek, and then got my heart pounding as she kissed my cheek and breathed into my ear as she asked, \"Is she watching? Squeeze my leg once for yes, two for no. Don't say anything just act like you don't care what I'm doing; or maybe you don't actually care anyway and I'm being presumptuous, either way just stone face it.\" \n\nI reached over and laid my hand on her smooth thigh and squeezed once. I left my hand where it was, enjoying the feel of her toned leg beneath my fingers. Alex was still putting on her show and seemed to love that I was ignoring Kim for her. Little did she know that inside I was almost solely focused on everything that Kim was doing. She had me all riled up. My heart was racing, my mouth was feeling dry, my mind was running amok with all sorts of possible hidden meanings in everything she said and did. \n\n\"Ok, ready to turn it around on her?\" Kim whispered in my ear. I squeezed her thigh once. \"Haha, oh my god this is so fun. Ok, you have to trust me a little here, if I cross any lines just let me know and I'll stop.\" \n\n\"There are no lines. Don't worry about anything\" I murmured between slightly parted lips. \n\n\"Let's set the line at not getting arrested then, that fair?\" she cooed. I squeezed her thigh once. \n\n\"Ok, slowly break eye contact with her and look at me.\" \n\nI stared at Alex a moment more before turning to look into those gorgeous brown eyes of Kim's. I had to kiss her, I just had to. The look on Kim's face, even if she was acting for Alex said kiss her, and so I did. She didn't pull back, she didn't even kiss back in a playing along kind of way, she really kissed me back. I knew we were putting on a show for Alex but damn did this feel real. It was passionate and sexy, and my god did her lips feel good on mine. After getting lost for a moment I finally broke the kiss off and pulled back, slowly opening my eyes and meeting Kim's. \n\n\"Wow, umm...you're, you're a good actor, that was perfect...maybe too perfect? Umm...I don't know, uh yeah, I'll shut up now.\" Kim stammered. \n\n\"You're a good actor too...you really made me think that was something for a second. You're a good kisser too by the way,\" I responded. \n\nIt took a minute as we stared at one another, doing the math in our heads and suddenly realizing neither one of us had been acting. My hand slid up and cupped Kim's neck, pulling her to me and kissing her again. Our tongues danced and swirled together like they had done this tango thousands of times. It was just a kiss but it was one of the most erotic experiences I had ever had. Something about this woman made my whole body tingle upon contact. I didn't care what anyone around us thought, I didn't care what Alex thought, I was lost in this beautiful girl in front of me and couldn't get enough of her. \n\nAfter what seemed like a blip in time but was probably far longer, we broke our kiss, still staring at one another and completely at a loss for words. Finally, Kim broke the silence, \"so, ummm, that happened. Does that mean...well, ok, is that implying what I think? I mean, I don't know, what...what are you thinking? Please stop me from babbling, I'm a mess at the moment.\" \n\n\"Hahaha, you're adorable you know that?\" I said taking her hand in mine and squeezing it gently, \"it means whatever you want it to mean.\" \n\n\"Oh c'mon! Don't put that on me! I'll be questioning it forever if you leave it open ended like that!\" \n\n\"Fine, fine, sorry. I'm not great at this stuff -\" \n\n\"Fooled me\" \n\n\"But I like you. I like you a lot. I love texting you every day, I love our random conversations, and I love your sense of humor. If it was entirely up to me, we'd hang out outside of the bar on a regular basis.\" \n\n\"As...friends?\" \n\n\"As friends, and as absolutely anything more than friends that you'd be open to.\" \n\n\"I'm...amenable to such a suggestion.\" \n\n\"Oh so I'll need to twist your arm a little huh?\" \n\n\"Maybe not my arm, but I wouldn't say no to another kiss...you know...to help me decide.\" \n\nWith that I leaned in and gave her what I hoped was my best and most passionate kiss. I tried to put everything I felt for her into that one moment but I knew I would fall woefully short, it was just a kiss after all. When I went to finally break it off, Kim pulled me back to her, desperate for more. When we finally did break she didn't open her eyes, she just sighed, and rested her head against my chest. \n\n\"Oh yes, quite amenable. You're very convincing.\" She murmured. \n\nI had totally forgotten about Alex until I heard a voice say, \"I hope you know you're with an asshole. Don't let him fool you, he's a real piece of shit.\" \n\nI turned to see her walking by and heading towards the door; apparently having seen enough of our show. Before I could even respond, Kim's head turned in Alex's direction and casually said, \"Could you kindly fuck off, I'm really enjoying the moment and you're ruining it.\" before closing her eyes again and returning her head to my chest. \n\nAlex stormed out completely pissed. I was left laughing almost uncontrollably. This night had been a rollercoaster of good to bad to unbelievable and that small barb by Kim had just put it over the top; it was perfect. I sat there grinning like an idiot enjoying Kim against me and just hoping it would never end. Finally she picked her head up, gave me a quick kiss on the lips, and yelled down to the other bartender asking if she could leave for good. The bartender gave her a thumbs up and Kim took my hand and towed me off toward the exit. \n\n\"Wait! I haven't paid my tab!\" I protested. \n\n\"You didn't have a tab, I told Jen I'd cover it all.\" \n\n\"Why would you do that? You said you'd buy a drink not all my drinks.\" \n\n\"I dunno, maybe I just like you and was feeling generous.\" She said as she leaned up and kissed my cheek, \"I'm still feeling generous actually. Feel like going back to my place for a night cap?\" \n\n\"Why you phrased that as a question I'll never know. You know I'm going to say yes. I'd say yes if you asked me to help you with a body in the trunk of your car at this point. Whatever you want to do, just drag me along and I'll happily follow.\" \n\n\"Hahaha, well sorry, the body will have to wait for another night; remember, we promised the line was not getting arrested and that would seem to wander into a bit of a grey area where that is concerned.\" \n\n\"Meh, screw the line, you got a body to move, let's move it!\" \n\n\"I mean...I do have a body that I wouldn't mind you tossing around a bit,\" she said suggestively. \n\n\"Oh yeah? You enjoy being tossed around?\" I said as I turned and scooped her up over my shoulder. She let out a little shriek as her feet kicked wildly and my arm pinned her to my shoulder. Her arms grabbed onto my back in shock and braced herself as she tried not to fall. She was so light, she couldn't be more than 5'6\" and had a toned and slight build. At 6'2\" I was much larger than her and worked out 3 times a week which made her easy to pick up and manhandle however I seemingly wished. Alex had been much taller and not quite as easy to throw around. The ease with which I could pick Kim up made me feel incredibly masculine. Something about picking a girl up and knowing that you're so much bigger than her gives such a rush of sexuality, protectiveness and nurturing knowing that if you aren't careful you could hurt her but also if she's willing you could have your way with her. \n\nOnce Kim realized she wasn't going to fall she stopped squirming and started laughing, \"I haven't been carried like this in quite a while. I feel completely helpless up here. I kind of like it.\" \n\n\"Well, oddly enough, I need your help while you're there because I don't know where you live so I'll need directions.\" \n\n\"Oh yeah! Even in my helplessness you're lost without me haha! Just go up to Orchard, hang a left, and it's the second duplex on the right. It's number 64.\" \n\n\"Simple enough.\" I said as I continued carrying her down the street. \n\n\"If I'm heavy you can put me down you know.\" \n\n\"Would you like to get down? You aren't heavy in the slightest.\" I said as I lifted her off my shoulder and over my head then brought her back down in front of me cradling her in my arms. \n\n\"Seriously? Not at all? How long do you think you could carry me for?\" \n\n\"I don't know...maybe 45 minutes to an hour? Hard to say but my arms and legs don't even burn walking right now and I can walk my normal pace while carrying you so I'd say quite a bit.\" \n\nI looked down and Kim was staring up at me while biting her lower lip, \"I've always wanted a guy that could throw me around a little.\" \n\n\"Oh yeah? Never had one before?\" \n\n\"Meh just one but he got tired real quick. Oh, left here, that's my place right there.\" She said pointing. \n\nAs we got to her door I set her down and she rummaged in her purse for her keys. She opened the door and towed me inside, flicking some lights on as she went. Her place was neat and tidy, well designed as expected from a graphic designer, and very comfortable with tall ceilings and a nice open layout. I didn't have much time to take in her living room before she had pushed the door closed and jumped on me, wrapping her legs around my waist, her arms around my neck, and pressing her lips to mine. My hands grabbed her ass and supported her weight, lifting her up to a more comfortable height for our make out session. Her ass was perfect in my hands, feeling supple and tight with just the right amount of cushion. As I squeezed her ass Kim let out a soft moan into my mouth, clearly enjoying the moment. I carried her away from the front door and pushed her back against a bare spot on the wall, pressing my body into hers. \n\nKim's hands clawed at my back and my hair, desperately trying to pull me even closer to her, if that was possible. She eventually began lifting my shirt up to take it off. I reluctantly removed my hands from her ass, supported her weight on my knee, and quickly shed my shirt. \n\n\"Mmm, much better,\" Kim cooed as we began making out again and my hands dove back to her perfect ass. \n\nShe ran her hands over my chest, around my sides and up my back, gripping my shoulders and pulling me into her. We made out for a few minutes longer before she leaned back and pulled her own shirt off, tossing it across the room onto the floor. She had on a dark blue strapless bra with a tiny white lace trim around the cups that suited her. Her breasts were larger than I had expected and were a solid handful. I would have loved to get my hands on them if they hadn't been occupied by her ass which they weren't leaving anytime soon. Before I knew it she had unhooked her bra and discarded that as well giving me a great view of her gorgeous perky tits and small dark erect nipples. Before she had a chance to smash her body back into mine I hoisted her higher and took one of her nipples into my mouth, swirling my tongue around the erect nub and playfully tugging at it gently with my teeth. Kim moaned as her head lolled back against the wall and her eyes closed. I copied the motion on the other nipple before kissing my way up to her neck, tracing her collar bone with the tip of my tongue. I made my way up her neck alternating between a soft brushing of my lips and a swirling of my tongue along the soft skin. Finally I nibbled gently on her earlobe before returning to her waiting lips. \n\nAs our lips melded together once again, Kim pressed her body to mine and I could feel her erect nipples drag against my chest. I slowly inched one of my hands down a little further on her ass until my fingers were able to press where I guessed her pussy would be. My guess found its mark as Kim squirmed and moaned into my mouth while grinding her ass back into my hands looking for more. I tried to get my hand under her shorts but didn't have a good angle to get to what I was after. Kim must have realized the same thing and while our tongues swirled and danced she reached between us, unbuttoned and unzipped her shorts, and began sliding them down off her ass until my hands were in the way. From there I took over. I wrapped my arm around her waist, pinning her to my body, and with the other hand shoved her shorts down her dangling legs. She kicked them off her feet and wrapped her legs back around my waist where my hands quickly found their way back to her ass. ",
        "My fingers played with and teased her pussy through her, now soaked, white lace thong. In no time my fingers were completely coated and dripping with her juices. I pulled her thong to the side and felt my fingers slide between her pussy lips and into her folds, searching for her opening. I quickly found what I was after and slid my middle finger inside of her which elicited a soft whimper from Kim as she tried to force herself down on my fingers further. I let my other fingers flutter and wave through her folds as I began slowly thrusting my middle finger in and out of her. Kim let out a soft moan with every thrust and swirled her hips around on my hand wanting me to touch every bit of her pussy. Meanwhile, my index finger found itself resting just next to Kim's asshole. I could feel the very edge of it but wasn't sure that she'd be into any anal play so I tried to keep my fingers from straying too much in that direction for the time being. \n\nAs I continued to finger fuck Kim's pussy, her thong kept getting in the way; eventually I decided to shed that as well and pinned her against me the same way I had for her shorts. As I pushed her thong down her legs it slowly peeled itself away from her dripping wet pussy and dropped to the floor. \n\nAs Kim moved to wrap her legs back around me, I hooked hand between us and under her leg, lifting it up over my shoulder. Kim yelped in surprise as I lifted her higher and hooked my other arm under her leg in the same fashion until Kim was basically sitting on my shoulders, her hands holding onto my head for stability, and, what had been my real goal, her pussy right in my face. I took a split second to admire her gorgeous sex; she had full plump lips that she kept cleanly shaved, her clit was protruding slightly from between her folds just begging to be licked and sucked on, and it was all glistening with her juices. \n\nI didn't dive in full force right away. I wanted to tease and build her up to a squirming ravenous state before I got her off the first time, so I started with the softest flicking of my tongue up and down her folds. I barely touched her but it was just enough to send a shiver down her spine, have her squeeze my hair between her fingers, and moan \"Oh. My. God.\" I circled her clit with the tip of my tongue but never touched it directly before sliding lower and then back up to tease her again. \"P-p-please, oh my god please just do it\" Kim moaned as I felt her try to force her clit into my mouth; I resisted and continued to build her up. I slowly added more pressure to my tonguing and just when I thought she couldn't stand it, I dove in. \n\nI sucked her clit into my mouth, swirling my tongue around it in small circles and then flicking it over and around. The sudden rush overwhelmed Kim just as I had wanted. Her hands pulled at my hair almost painfully as her thighs clamped like a vice around my head. She let out a gasp and a squeal of delight as she came, her body shaking and flooding my mouth with her cum as her pussy contracted over and over again. \n\nAs she started to come down from her orgasm I carried her to the couch and laid her down. I stood over her admiring how incredibly sexy she was. She was everything I would have wanted if I had built my ideal woman. She was beautiful, but she had flaws, small flaws, but things that made her real. She had a scar on her stomach from the appendectomy she had 2 years prior that she had told me about, her feet were slightly pigeon toed, and she had a birth mark on her hip amongst a smattering of other small imperfections. All of her flaws just made her more attractive to me. I couldn't believe I was standing there staring at the girl of my dreams and she had actually said she liked me back...well...in so many words she had. \n\nFinally Kim opened her eyes and saw me staring at her. \"Oh hey there,\" she smiled up at me mischievously as she rolled off the couch onto her feet and stood in front of me. She went up on her tip toes and kissed me as she began to unbutton my pants. \"Now why am I naked and you're still half dressed?\" She whispered as she nibbled my earlobe. \n\n\"I don't know, maybe because ladies come first,\" I teased as she pushed my jeans to the floor and I kicked them off. \n\n\"Oh a pun! You certainly know the way to my heart. And a sex based pun, damn, you're just checking all the boxes.\" She replied as she ran her hands over my chest, down my stomach, and grabbed my already hard dick through my boxer briefs. \"Mmm...damn...you just keep exceeding expectations. Keep this up and you'll set the bar too high.\" \n\n\"Or maybe you're just used to the bar being too low.\" I chided. \n\n\"Haha oh really? Well then, you'll just have to show me where the bar should be.\" \n\n\"I'll do my best.\" I replied as I scooped her up into my arms once again and laid her back on the couch, this time climbing on top of her. \n\n\"I don't think you'll need these.\" Kim commented as she began pushing my boxer briefs down. \n\n\"Ummm, I don't have a condom. Wasn't really planning on the night going this way.\" \n\n\"I'm on the pill. No worries.\" She assured as my dick sprang from my underwear and she used her foot to push them the rest of the way down my legs. \n\nAfter kicking off my underwear I returned my full attention to the beauty beneath me. As our naked bodies pressed against one another the head of my dick naturally fell directly against her pussy. With every movement my dick lubricated itself with Kim's cum and glided easily up and down her slit. Every time it slid over her clit a moan escaped her lips and within minutes she was begging for more. \n\n\"Quit teasing and fuck me\" she demanded in as sultry a tone as I had ever heard. \n\nNot one to disappoint, and also really anxious to be inside of her myself, I grabbed my dick and positioned it at her entrance. I slowly slid into her as I kissed her long and hard, not breaking the kiss until my entire length was buried inside of her. I stopped for a moment to just enjoy the feeling of being surrounded by her warm tight pussy. \n\n\"Mmm...god yes. You feel perfect.\" She said as she stared into my eyes with her arms wrapped around my neck, \"Now don't hold back. Take me. I'm yours however you want me. I want you to throw me around, use me, make me feel helpless.\" \n\n\"Yes ma'am. Now tell me something, do you like to be told what to do? Do you like to be called names? What level of dominance is too far?\" \n\n\"Oh you're too polite. Call me whatever you want. Maybe don't go crazy far, but I'm yours to command.\" \n\n\"Mm, fun.\" I said as I began slowly thrusting in and out of her with long slow strokes. \n\nI moved Kim's legs up so her knees were against her chest allowing me to fuck her even deeper while my hands pinned her to the couch. \n\n\"I'm going to take full advantage of your body. I'll fuck your beautiful pussy long and slow to warm it up. Then I'm going to flip you over and fuck you hard. I want to grab those hips and watch your ass quiver every time I slam into you. I want to see my dick disappear inside you with every thrust; and I want to see that nice tight ass on display in front of me.\" \n\n\"Mmmm yes sir whatever you want.\" Kim moaned as my dick slid in and out of her. \n\nAnd so it began. It would be the most passionate and completely animalistic sex I had ever had. The emotions and desires bubbled to the surface and I let them dictate my every action. I wasn't usually one to make much noise during sex but tonight I let all my worries and concerns go and let the moans flow through me. We moaned in time to one another matching my thrusts and the smacking of our bodies as we collided again and again. She squealed with surprise and delight every time I lifted her off the couch and effortlessly moved her body to a new position. We fucked slow and we fucked fast, but mostly we just fucked hard. \n\n\"Yes, yes, yes, oh my god don't stop!\" Kim yelled as my dick penetrated her over and over again. \n\nWe ended up with Kim bent over the arm of the sofa, both of our bodies glistening with sweat and sex as I fucked her from behind. I was shocked I hadn't cum yet but I knew I had had the perfect amount of alcohol to last quite a while; just enough to dull the sensations a bit. As our bodies slapped together and Kim's moans grew louder, I knew she was getting close. I picked up the pace yet again and changed the angle of penetration to hopefully hit her g-spot a little better. \n\n\"Right there, right there, oh shit, oh shiiiiiiit!\" Kim moaned as her orgasm overtook her a few hard thrusts later. \n\n\"Mmmm good girl. Cum all over my dick.\" I whispered to her. I felt her pussy begin to tug and pull on my dick hoping to milk me of my cum. I watched as even her pussy lips seemed to squeeze my cock tighter so it couldn't leave. \n\nI slowed my thrusting just a bit as her orgasm subsided and her legs stopped twitching. I smacked her ass and asked, \"Two orgasms down in two different ways, pretty good, think we can find another for you?\" \n\nTo my complete shock and pleasure Kim responded my sticking a finger in her mouth, reaching back, sliding the tip into her ass, and saying, \"Mmm and here I thought you might disappoint me.\" \n\n\"You keep that up and I'm going to cum.\" I said, watching her finger slip deeper and deeper into her ass. \n\n\"I'd certainly hope so. I've been waiting to feel you blow inside me since the moment you slipped in. Now what can your totally satisfied fuck toy do to help you fill her with cum?\" \n\n\"My god you're amazing. You just keep doing what you're doing.\" I responded. \n\nI started to pick up the pace again and knew I wasn't going to last much longer. The sight of Kim fingering her own ass was a massive turn on. When she bottomed out with her middle finger, she began sawing it in and out for a short time before starting to add a second. When I saw the second finger slip inside her ass and bury itself all the way past the second knuckle that was it for me. I felt the heat in my balls rising and moaned, \"Oh god, I'm going to cum.\" \n\n\"Mmm good, fill me up\" Kim moaned as my dick began to spasm and spray inside of her. I easily shot 6 or 7 ropes of cum deep into her pussy as one of the best orgasms of my life overtook me. My legs quivered and it felt as if my knees might give out if it didn't end soon. Finally it subsided and I collapsed onto Kim's back, both of us sweaty and satisfied. \n\n\"Fuck that was amazing.\" Kim said, \"I've never been fucked like that before. Not even close. That was incredible.\" \n\n\"Well I've never fucked like that before either so we must just bring out the best in each other haha.\" \n\n\"Well that's definitely something I could get used to. Want to go shower? We're both kind of covered in sex.\" \n\n\"Absolutely.\" I replied as I picked her up into my arms, turned her to face me, and kissed her. \"Which way to the bathroom?\" \n\n\"Down the hall on the left.\" She pointed giggling about being picked up yet again. \n\nAs we waited for the water to get warm she stood between my legs as I leaned against the vanity and kissed me; not a sex crazed kiss, but a lovingly soft, gentle kiss. We softly caressed one another in a manner completely opposite the way we had been fucking just five minutes prior. The contrast made my skin tingle and my heart melt for this amazing woman. \n\nWe hopped in the shower and let the water rinse the sweat away before lathering each other up with soap. As she stood rinsing her face, I stood behind her, caressing and cupping her breasts and then running my hands down to her pussy where I felt my cum leaking out. My cum dripping from her slit onto my fingers made my dick twitch and start to grow again. As I gently massaged and cleaned her pussy my dick slowly nestled itself into the crack of her ass. \n\n\"Well look who's a quick recovery!\" Kim commented, reaching back and beginning to stroke my shaft slowly, \"want to wait right here while I go get something that may be of use?\" \n\n\"As long as you're coming back I'll be right here.\" \n\nWith that, Kim ducked out of the shower, wrapped herself in a towel, and disappeared into the hall. She was gone a little longer than I anticipated and I assumed she had misplaced whatever she had been going to get. Finally she returned, closed the bathroom door, and set a bottle of lube on the shelf just inside the shower before climbing in. \n\n\"Welcome back, have trouble finding it?\" I asked as my hands reached for her and pulled her to me. \n\n\"Nope, just...ya know...doing a little prep.\" \n\nI looked at her questioningly. \n\n\"You know...prep.\" She answered as she guided my hand back to her ass where I now found a small ring sticking out. \n\n\"Ahhh...and what kind of fun prep is this?\" I asked as I looped my finger through the ring and tugged on it gently. \n\nKim's eyes closed and her mouth fell agape as I toyed with whatever she had put in. \"Th-they-they're beads.\" She gasped. Her hands on my chest dug into me as I pushed and pulled on the end of the beads. \"You can - you can take them ou-out if you want. I'm wanting somethi-thing else at the moment\" she said as her hand dropped to my dick and squeezed it. \n\n\"Would you like to get out of the shower first?\" I asked before leaning in and whispering into her ear, \"Or would you rather have your ass fucked right here in the shower?\" \n\n\"Right here. Fuck me right here.\" \n\nI slowly pulled the beads from her ass one by one. The largest was slightly wider than my dick which boded well for not having to do any additional prep work. As the last bead slipped from her ass I moved Kim away from the water so it wouldn't wash away any lube. She put her hands against the shower wall, thrust her perfect ass back towards me and wagged it back and forth while grinning mischievously over her shoulder. \"Lube that dick up and get that thing inside me.\" She coaxed. \n\nI applied a generous amount of lube to my dick and put what was left on my hands onto Kim's asshole directly, slipping a finger or two inside while doing so. I crouched slightly to line my dick up with her ass and pressed the tip against her rosebud. \n\n\"Mmmm yes, c'mon inside baby.\" She cooed. \n\nWith that I leaned forward and the head of my cock disappeared into her asshole with little resistance. I was about to stop and let her adjust but Kim wasn't waiting, she continued to push her ass back against me until my entire length was buried inside her. \n\n\"God your dick feels perfect inside me.\" She moaned as she began swirling her ass in small circles against me, stirring her insides with my cock. \n\nI grabbed her hips and began short slow thrusts that I built to full length strokes. The head of my dick barely stayed inside her gripping sphincter before pushing back deep into her ass. \n\nI leaned forward and kissed Kim's neck as I asked, \"So you enjoy having your ass fucked? Are you going to be a good little fuck toy and let your ass cum on my cock tonight?\" \n\n\"Oh god, keep talking and I will.\" \n\n\"Good girl. Now you keep your hands on the wall and just enjoy having your ass pounded like the dirty girl you are.\" \n\n\"Ye-yes sir.\" \n\n\"Mmmm you've got a greedy little asshole don't you? It grips my dick like it never wants it to leave. So tell me, do you always like to have your ass fucked or is this a special occasion?\" \n\n\"Oh. My. God. Yes, yes, you can f-fuck my ass whenever y-you want. So deep, oh my god.\" Kim moaned, \"Play with my clit.\" \n\nMy hand dove to her clit and began massaging it. \n\n\"Oh fuck I'm going to cum. Harder. Fuck me harder\" she begged. \n\nI picked up the pace, slapping into her ass and thrusting my dick as deep as it would go, \"make that ass cum for me baby. I want to feel your asshole squeeze me.\" \n\n\"Oh god, oh god.\" \n\n\"Are you going to be a good anal whore and let me cum in your ass?\" I asked as I furiously masturbated her clit and fucked Kim's ass. \n\n\"Yes yes yes ahhhhhhh!\" Kim screamed as her knees quivered and her whole body began to shake. I felt her asshole tighten and squeeze my dick for all it was worth. I stopped thrusting and let my dick sit deep inside her. I didn't think I was close to cumming but Kim's ass spasming around me was like her asshole jerking me off; it felt incredible and soon I felt my balls tightening. Just as her orgasm was subsiding, my dick twitched deep inside her and I let out a long groan as I painted her ass with my cum. \n\n\"Oh god that feels amazing.\" Kim said as my dick continued flooding her ass with my seed, \"stay inside me when you're done cumming. Having you in my ass just feels incredible.\" \n\nWhen I finally finished, I hugged her body to mine and we stood together, letting the water wash over us, still connected. I finally slipped from her ass and we finished cleaning up. \n\nWe spent the remainder of the weekend hanging out together for the first time outside of the bar. The majority of that time may have been spent fucking all over her apartment, but we did manage to leave and get groceries to cook dinner together; the first home cooked meal I'd had since breaking up with Andrea...or was it Ashley?...Alexis? Whatever her name was, it didn't matter anymore, she wasn't Kim."
    ],
    "authorname": "OnePenIsMightier",
    "tags": [
        "anal",
        "bartender",
        "oral",
        "piv"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-jealousy-game-1"
}