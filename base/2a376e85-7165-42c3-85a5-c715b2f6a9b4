{
    "title": "Chinese Takeout Ch. 05",
    "pages": [
        "<p align=\"center\">Chinese Takeout Chapter 05 \u2013 Listening for the Weather</p>\n\n<p align=\"center\">by Chloe Tzang</p>\n\n\u00a9 2016 Chloe Tzang. All rights reserved. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review.\n\nOkay, here's the fifth \"chapter\" of Chinese Takeout (and in a real novel, this would be about 8 x 2,500/3,000 word chapters...). There's still no outright sex in this chapter, but there is continued foreplay between Round Out and Jay-Lin. This is all a continued and lengthy lead-in and teaser for the main event which will be a chapter or three (okay, or more...) in coming with, of course, trials and tribulations for our heroine along the way. And, as always, \"Chinese Takeout\" is 100% dedicated to the real Round Out, with my thanks and gratitude for the ongoing help with this ... and with a disclaimer that any mistakes, biker and biker-culture related or not, are mine and mine alone. \n\nNow if you're going on to read this and you haven't already read Chapters 1, 2, 3 and 4, then I really do recommend you go back and read those in order, starting from Chapter 1. It'll all make a lot more sense that way. And thank you all again so much for reading this...Chloe\n\n<p align=\"center\">Chinese Takeout - Chapter 05 \u2013 Listening for the Weather </p>\n\n<p align=\"center\">So, I'm listening for the weather,\nTo predict the coming day.\nLeave all thought of expectation\nTo the weatherman.\nNo it doesn't really matter\nWhat it is he has to say,\n'Cause tomorrow's keep on blowing in\nFrom somewhere.</p>\n\n<p align=\"right\">Listening to the Weather, Bic Runga</p>\n\n<p align=\"center\"><bold> * * * </bold></p>\n\n\"We're off to bed honey.\" Dad was yawning as he spoke. \"Going to be a long weekend. Come on Cat.\" \n\n\"I'll get breakfast for you both, what time are you getting up?\" I thought I better remind them. Parents; they're old, sometime they forget things. Usually not the things you want them to forget.\n\n\"Got to start the rounds at nine,\" Mom said, \"We'll leave around eight, breakfast at seven thirty. Are you sure Jay-Lin, it's early for you?\"\n\n\"Mom! You guys work so hard, it's the least I can do.\" Not mentioning any ulterior motives of course. I absolutely wanted to make sure there was a clear run for Keith. My parents wouldn't miss a Harley roaring into our driveway. No way I wanted them to be late leaving.\n\n\"You're a good daughter, honey.\" Mom gave me a hug. \"Now you enjoy yourself Saturday with your young man.\"\n\n\"Mom!\" God, I so HAD to stop blushing.\n\nMy Dad laughed. \"Bed Cat. You too Jay-Lin, no staying up late.\"\n\n\"Okay, I'm just gonna check the weather forecast for tomorrow, then I'm off.\" I was yawning while I spoke. God, I really was SO tired. That workout at Quebec's, and then with Keith. I yawned again.\n\nFlicking channels, I found the Weather. It wasn't a channel I'd ever really looked for before; I'd never had any interest in listening for the weather. Cars and Shopping Malls were, like, air-conditioned or heated and they had a roof. Not like a Harley. Anyhow, it looked like it was going to be a perfect spring day tomorrow, warm and sunny. I could go to bed with my expectations for the coming day intact. Not that it really mattered, I was going to spend the day with Keith regardless. But I really was looking forward to riding on the back of his Harley. I was smiling as I closed my eyes. Sleep came instantly.\n\n<p align=\"center\"><bold> * * * </bold></p>\n\nMy alarm woke me. It was that soft early morning pearly grey where you can just distinguish the outline of furniture and shapes. Saturday morning six thirty. No-one should have to get up so early. There weren't even any birds singing outside, that's how early it was. I wondered if Ginny was awake. Unlike me, she was definitely an early morning person. Jesus! I hadn't called her last night. I better call her this morning. But later. Definitely later.\n\n\"You awake Jay-Lin?\" My Mom's voice was a whisper, her soft tap on my bedroom door wouldn't have woken me if I'd been asleep.\n\n\"Yeah,\" I said, \"you go get ready Mom. I'm getting up. Breakfast'll be ready soon.\"\n\n\"Thanks honey.\" Mom sounded so happy that I had to smile.\n\n\"No problem Mom.\" I swung myself out of bed. That hurt. I groaned. I ached. Everywhere. That workout at Quebec's had been a killer. I didn't feel so athletic this morning. A hot shower helped but I still hurt. Picking clothes was easy this morning. My cutest panties because I hoped and anticipated that Keith was going to see me in them, not that I had anything to match those lacey little Kiki de Montparnasse panties Keith had bought for me which were now in my laundry basket, but at least they were bikini panties and black. Matching bra. God, I was so going to have to go shopping for some sexy lingerie that Keith would like. Not something that'd been on my shopping list ever before. Jeans for riding on the back of Keith's Harley. A top. Tie my hair back. I'd brush it out and redo it later. Done.\n\nDownstairs and into the kitchen. My parents both liked large breakfasts. They said it helped them stay on their feet when it got busy at the hospital. It usually did. Throw a packet of bacon under the grill, six pieces of toast in the toaster, grind some fresh beans and throw them into the coffee machine. Maple syrup, butter and marmalade on the table. Get a smoothie ready. Two oranges, a whole lime, skin included, a handful of carrot sticks, rinse half a rice bowl of dried goji berries and tip in. Wash two large kale leaves and chop up, squirt in some of Mom's manuka honey as sweetener. Cut a thick chunk of raw ginger off and peel before tossing on top. Add water, put on the blender ready to go.\n\nOut with the egg poacher, fill it with water, break four eggs in; put it to one side. Get some fruit out of the fridge. An orange, an apple, some grapes, wash them. Slice and dice. Grab a couple of banana's and slice them, cut a slice of the pineapple on the counter, slice it up and add to the mix. Stir in lime juice. Out on the table with the cereal and soy milk and zero percent fat yogurt. Hearing Dad coming down the stairs, I hit the blender. Thirty seconds and done. Pour into three large glasses, place two on the table and drink one myself as I turned on the element for the poached eggs, then started flipping bacon. Master chef, that was me. Not. But okay, I wasn't bad, even if I say so myself.\n\n\"God, that smells great.\" Dad was sniffing appreciatively as he walked in and sat down.\n\n\"Smoothie first, then cereal and fruit.\" I rapped his hand as he reached for the toast.\n\n\"Bossy as your Mom.\" But he picked up the smoothie and drank it, then added fruit salad, yogurt and soy milk to the bowl of cereal. He was half way through when Mom wandered in.\n\n\"Aiiyaaahhh, you've been busy Jay-Lin.\" Mom looked raised an eyebrow but she sat down fast enough.\n\n\"Smoothie, then cereal and fruit first.\" I rapped her hand as she reached for the toast.\n\n\"Bossy as your Dad.\" But she laughed and drank her smoothie.\n\n\"Bacon and eggs coming Dad.\" He'd almost finished his cereal and fruit. I used the tongs to retrieve half a dozen bacon strips, flipped two poached eggs onto his plate. Left him to sort out his own toast. Mom's turn next.\n\nDad looked up, grinning as I set his coffee mug down in front of him, Mom's in front of her. The rest I was going to pour into a couple of thermos flasks for them. \"You're going to make some man a great wife one day, Jay-Lin.\"\n\n\"John!\" Mom tapped Dad's hand admonishingly.\n\n\"Daaaad!\" I thought of Keith. My insides did that little shivery thing, my breath caught for just a second. I was blushing. Mom looked at me, saw; smiled that all too knowing smile. God, Mom. Stop it, now!\"\n\n\"So what're you up to today? Out with this Keith boy? Going anywhere special?\" Dad changed the subject. Sort of. Mom was still smiling, only now she looked amused. Mom!\n\nOnly, that wasn't a subject I was keen to expand on but I wasn't going to lie about it. I never lied. Maybe I fudged a bit, but I never lied. Not to anyone, least of all my Mom and Dad. I wasn't starting now, either. \"Just meeting up with him later Dad, not really sure what we're doing.\" Well, I wasn't sure, but I sure had hopes. I just wished Mom'd stop smiling at me like that. That smile was just way too disconcerting.\n\n\"Just make sure Sally knows when you're going round,\" Mom chipped in. \"And give Riordan a hug from me.\" Riordan was my eight month old nephew. It still felt strange to be an Aunt.\n\n\"I will Mom. Keith'll drop me off.\" I had to smile. Mom doted on her first grandson. So did Dad. Well, so did I. He was a total little cutie.\n\nI was busy at the counter. \"Here, I packed you some BLT sandwiches and fruit, and there's a thermos flask each of coffee for the car, okay.\" I really wanted to make sure they left on time. No holdups. What if they were late and Keith was early?\n\nI must've looked too eager or something. Mom looked at me, one eyebrow raised. Again. God, I wished she'd stop doing that. After a moment she shook her head and laughed. She glanced at Dad but he was just sitting there eating, oblivious. Mom was always way too perceptive. I wondered what she'd been like when she was my age? Scary thought. I'd have to ask my Pawpaw sometime. Fortunately for my state of mind, Mom and Dad didn't dawdle. They hardly ever did. At eight on the dot, they were out that door.\n\n\"Enjoy your day Jay-Lin.\" Mom gave me a little hug and a kiss. She didn't usually do that. \"And don't do anything I wouldn't do.\"\n\nMy Dad laughed. \"And if you do, don't get caught.\"\n\nGod, I was blushing. Again. I was. Dad didn't notice, he'd been joking. I hoped. He was already in the garage. Mom noticed though, she gave me that quizzical little look again, the one that said she knew what I was thinking, or at least she was guessing. I just hoped she was guessing wrong. Or at least wrong enough.\n\nA huge sigh of relief escaped me as the garage door closed behind them. Now I was going to go grab that huge mug of coffee for myself and make those calls. Sally first, she'd be fast. Faster than Ginny anyhow.\n\n<p align=\"center\"><bold> * * * </bold></p>\n\nCoffee in hand, I didn't gave myself time to think. I picked up my iPhone, pressed Sally. \n\nShe answered after three rings. That was fast. \"Hi Jay, I was expecting you to call, just not this early. Brody said Dad wanted you to stay the night. When're you coming over?\"\n\n\"Hi z\u01d0-z\u01d0, yeah, is late this afternoon okay?\"\n\n\"That's cool mei-mei, Brody's gonna cook dinner so be prepared. Now tell me all about this guy with the motorcycle.\"\n\n\"Ahh, Sally...\"\n\n\"The guy with the Harley? Talk!\" She sounded excited. \"So what gives? Brody's looking after Riordan, so tell your z\u01d0-z\u01d0, I wanna know everything. So you met him last weekend? He took you for a ride on his Harley?\"\n\n\"I, ahh, I'm officially, like, his girlfriend now, we went out to dinner last night; he's just so ...\" I sighed, lost in visions of Keith for a second.\n\n\"He's already your boyfriend huh, jeez, that was fast work, Jay. When do we get to meet him? What does he look like? How old is he? Is he a gweilo? Did you tell Mom and Dad? Did they freak?\" That was my z\u01d0-z\u01d0, my big sis, she was always full of questions, never stopped talking when she had the chance. And yeah, well, she was still sensitive about Mom and Dad's reaction to Brody way back when. It hadn't been good. That might help me with getting her on side about Keith. But Jesus, Sally, where to start. \n\n\"No, I didn't tell Mom and Dad anything about him, except his name, and ... aahh, about meeting him?\" Okay, this was a big deal. I had to get Sally onside. I just had too!\n\n\"Yeah? Yeah?\" Sally was excited alright. \n\n\"Sally, just let me talk, okay, you're making me nervous.\"\n\n\"Okay, okay, go ahead, I promise to shutup.\" She laughed. She wouldn't though. She never did.\n\n\"Would it be okay if maybe he comes round to dinner tonight? I want you and Brody to meet him before I tell Mom and Dad about him. Would that be okay? I gotta ask him but I wanted to check with you first, make sure it was okay.\" I wanted her help too, but I'd lead in to that.\n\n\"Of course it's okay Jay. I think I'll cook after all, he might not survive Brody's cooking. You ask him, then call me or text me, okay. I REALLY wanna meet the guy that's melted the Ice Princess.\"\n\n\"Huh? Who did you hear that one from?\" I hated that nickname. I really did. That Chua bitch had come up with it. It'd stuck. Even my friends used it now. I hated it, I absolutely did. I had no idea Sally had heard it.\n\n\"Ginny, of course.\" \n\n\"Of course, Ginny, who else. I'm so gonna kill her.\" I should've known. Sally knew all my friends. And Ginny talked. She never stopped. Her and Sally both. I was soooo going to have a long long talk with Ginny about lots of things.\n\nSally laughed. \"Hey, Jay, it's not far wrong, I mean, when've you ever had a boyfriend. You're worse than I was before I met Brody. You date a guy once and that's it. ... and don't get upset with me ... it's true Jay, stop squealing ... that's why I wanna meet this guy. He's gotta be someone special.\"\n\n\"Oh yeah, he is, he's, like, really special.\" I forgot all about being mad with Ginny and annoyed with Sally. \"But Sally, there's a couple of things I wanted to tell you about him before you meet him...\"\n\n\"Hang on Jay ... aaaaiiiyaahhh! Okay Brody ... I'm coming ... sorry Jay, Riordan just puked on Brody's head 'n he's freaking, I gotta run... text me, okay ... see you both tonight ... Love you mei-mei ...Bye.\" She hung up.\n\nWell, shit. I didn't want Keith to turn up on them cold without briefing Sally first. But okay, I'd call later and lay the groundwork. Might as well call Ginny. Sounded like Sally was going to be busy for a while.\n\n<p align=\"center\"><bold> * * * </bold></p>\n\nGinny's phone rang and rang, then went to voicemail. What? Ginny always answered. Always. I looked at my phone. Huh? My phone rang back as I checked it was okay. Relieved, I answered.\n\n\"Hi Ginny.\"\n\n\"Sorry Jay-Lin, I was busy with Jiffy.\" She giggled. I heard a slap in the background. God, Ginny! I was so not asking where she was. \"So who was that guy Olaf? Everyone was talking about him. I thought that other guy with the Harley was scary. That guy Olaf, that teacher almost called the cops. They got Ms. Schwartzkopf out instead, she gave me the third degree. I covered for you Jay-Lin, but what the heck's going on. Who was that guy?\"\n\nOh shit! \"Uh, Ginny, what'd you tell Ms. Schwartzkopf?\"\n\n\"That Olaf was a guy you knew and he was giving you a ride to the gym. I mean, you had your gym bag and that was all I could think of. She was gonna call your parents and check but I managed to bullshit her that it was okay. She might wanna talk to you on Monday though.\"\n\nI had to giggle. \"Ginny, you didn't bullshit her, it's the truth. I started at this gym and Olaf's giving me a ride there every day after school, he trains there too. He's a friend of Keith's.\"\n\n\"Oh shit.\" Ginny's voice went all hushed. She sounded like she was going to cry. \"Uh, Jay-Lin, about that, about Thursday, I'm real sorry about that, I am, I was way outa line. You're my friend Jay-Lin, you're my best friend, always. I'm sorry, I was really scared for you Jay, I guess I just lost it a bit, he just looked so scary 'n I was so worried about you...\"\n\n\"Hey Ginny, Keith's a wonderful guy, he just looks a little, you know, if you don't know him he might look a bit, ...\"\n\n\"Scary.\" She was so emphatic.\n\nI had to giggle. \"Well, yeah, maybe, but you met Olaf. Olaf is REALLY scary.\"\n\n\"God yeah.\"\n\n\"Anyhow, Keith IS my boyfriend, okay, so just, you know, relax Ginny. I'm sorry 'bout what I said too, okay. Maybe next weekend you can meet him or something, maybe we can go eat dim-sum with him Sunday and you'll see, he's totally a nice guy. Once you meet him, you'll like him, I'm sure. Anyhow, I'm going out with him today, I'll ask him, okay?\"\n\n\"Uhh, you are? I mean, yeah, that'd be fine. You doing anything tomorrow?\"\n\n\"Staying at Sally's tonight, how 'bout I call you in the morning. Maybe go shopping tomorrow afternoon?\" \n\n\"Yeah, that sounds great, call me, okay.\"\n\n\"Okay, but hey, I better get ready Ginny, Keith's gonna be here soon, he's taking me for a ride.\"\n\n\"On that motorcycle?\"\n\n\"Harley, Ginny. He rides a Harley and he's got, like, a totally cool loft down off of Courtenay Drive. It's just the most amazing place.\"\n\n\"You've already been to his place?\" Ginny sucked in her breath. \n\nI just about sighed with happiness, ignoring her, remembering last night. Remembering paradise. For just a moment I forgot everything except those memories. Just for a moment. \"Oh, yeah, I went there last night with him and he took me out to dinner. It was the most amazing restaurant, Ginny, this French chef guy Keith knows, he was just ... the food was just heaven.\" I giggled. \"And so was Keith.\" I wasn't telling her more than that though. Not about his loft, she wouldn't believe me if I did and besides, I'd have to ask Keith before I said anything more to my friends about him. And I wasn't saying a word about what we did. No way. Ginny might like talking about what she did with her boyfriends but I didn't. Not that I'd ever had a boyfriend to talk about, but still. Keith and me, that was for us. No-one else.\n\n\"Do your Mom and Dad know about him?\"\n\n\"No, not yet, I mean they know I'm seeing this guy Keith but I didn't tell them anything about him. Not yet. So don't go saying anything, okay Ginny? I need to work out how I'm gonna position this, and, you know, you've seen him, it's not gonna be, like, easy. Not with my Mom and Dad.\"\n\n\"I'll say.\" She said that so fervently I had to giggle.\n\n\"Yeah, well, I'm gonna ask Sally for some help, you know what it was like for her, I'm not going through that.\"\n\n\"Yeah, good idea.\" Ginny did know, she'd held my hand, commiserating with me and supporting me through two years of screaming fights between Sally and my parents, crying jags and parental storms until Sally finally got her way and won permission to officially date Brody. As opposed to unofficially, which she went ahead and did anyway.\n\n\"Hey Ginny, I really gotta run, Keith'll be here any minute. Talk tomorrow, okay, I'll call in the morning, we can go shopping and then grab a coffee and have a long talk, okay?\"\n\n\"You better Jay, b.f.f., okay? And hey, I'm so sorry, really, I am.\"\n\n\"Yeah Ginny, b.f.f.\" When I disconnected, honestly, I had tears in my eyes. Ginny was my best friend. She really was. It was so good to have her back. I was so going to have to have a long talk with her tomorrow. And shopping. Definitely we were going shopping. I could use Ginny's advice on lingerie. I wasn't letting Keith spend more money on my clothes. I had an allowance for that. And I wanted to surprise him.\n\n<p align=\"center\"><bold> * * * </bold></p>\n\nTidying up the kitchen took all of ten minutes. I didn't have anything else to do. My jacket was hanging by the door. My hair was brushed out and tied back. Makeup applied. I was as ready as I could be. My phone sang its little Faye Wong song. An incoming text. Yaaaaay, it was from Keith. Checking everything was okay. He was on his way. I texted the all clear back. Spent the next ten minutes hovering by the front windows, busy hyperventilating.\n\nI heard him before I saw him. That unmistakable Harley growl growing louder, muted thunder as he pulled into the driveway. I was torn, torn between running out and into his arms or waiting until he knocked on the door, then dragging him inside, throwing him to the floor and throwing myself on him. Like I could throw him anywhere. But it's the thought that counts. Running out and throwing myself at him won. I was out the front door as he swung himself off his Harley.",
        "I heard Mr. Purvis as I came around the side of the garage. \"Nice bike, man. That Springer Heritage's always been a sweet ride. What year? Ninety seven? Ninety eight? That's no Evo. What'd you do, replace it with an S and S?\"\n\nWell, so much for throwing myself into Keith's arms. But my heart did a little dance anyhow when I saw Keith standing there in his jeans and his leather jacket and that patched and sleeveless denim jerkin thing with all the patches that he wore over the top of everything. God, he was just so wonderfully attractive. I wanted to throw myself on him and kiss him. Everywhere.\n\n\"Put in an Ultima one one three CI \"el bruto\" with an S and S shorty G carburetor and Vance and Hines pipes; that original Evo engine, that sucker vibrated like hell.\" His voice. I just melted hearing him.\n\n\"Yeah, well, that's what those Evo's did.\" Mr. Purvis' voice annoyed me. Why couldn't he mind his own business? Nosey old man.\n\nKeith smiled at me. Forget singing and dancing, my heart did a complete gymnastics routine.\n\nMr. Purvis gave me a curt nod as I stood there. \"Jay-Lin.\"\n\n\"Mr. Purvis.\" A really nosey annoying old man. I threw caution to the winds. He and my parents never talked anyhow. \"This is my boyfriend, Keith. Keith, this is my neighbor, Mr. Purvis.\" Maybe that'd get rid of him, knowing Keith was my boyfriend.\n\nMr. Purvis surprised me by actually smiling at me, before turning back to Keith. Jesus, he'd never smiled at me in the ten years we'd lived next door to each other. Never. Usually he scowled when he even deigned to notice me. \"Jay-Lin's boyfriend is it? I'm Slider, Vipers, San Diego Chapter.\" \n\n\"Southern Booze Cruisers, Round Out.\"\n\nThey gave each other that arms around each other hug I'd seen Keith and Quebec do on Thursday night. Huh? What? Mr. Purvis and Keith? What the...? Was this some kinda biker thing? Mr. Purvis, a biker? Must be. I'd never seen any other guys hug each other like that. God, my Dad would totally freak if he knew Mr. Purvis was a biker.\n\n\"Put it out there, Motherfucker,\" Mr. Purvis said. \n\nHuh? What!\n\nKeith smiled, his hand going out, clasping Mr. Purvis'. \"Yes, Sir!\" His other hand came up, gripped Mr. Purvis' shoulder. \"Man, I can't believe I'm standing here speaking with a San Diego Viper. I haven't heard shit about you guys in years... you guys, your fuckin' legends.\"\n\n\"Don't give me that sir crap, I worked for a living back in the day. I might be old and a jerk...\" He grinned at me. Yeah, he knew he was a jerk. Well, we agreed on that. \"...but back in the day I was Slider; 'n legends or not, I sure miss riding with the old Vipers I tell ya. They folded a long time ago, but I still got my old sled up on blocks in back of the garage and my cut in the back of the closet. Looking at your sled makes me think I gotta get her going again. Never too old to ride.\"\n\nKeith grinned. \"You're right about that Slider, you're never too old. What sled you got back there?\"\n\n\"An old seventy seven FXS Low Rider. Haven't had her on the road for ten-twelve years now, keep her tidy but she needs some serious work before I take her out again.\"\n\nKeith whistled, gave me a grin. \"You mind if we take a look before we head out, Jay-Lin?\"\n\n\"Heck, no, of course I don't... I mean, sure, yeah, lets.\" I blushed. \"I had no idea you used to ride Mr. Purvis.\"\n\nMr. Purvis looked at me rather drily. \"I had no idea your boyfriend was a biker Jay-Lin; with your Dad, that's gotta take some balls, if you know what I mean. He know about your boyfriend here?\"\n\n\"Ahh, yeah, well, no, he doesn't know about Round Out, not yet.\" I glanced at Keith. I was gonna have to have a real serious talk with him about my parents. It felt strange calling him Round Out too. I wasn't sure if I should but Mr. Purvis was an old biker, I thought maybe I should use Keith's biker name when I was talking to him. Keith'd put me right if I got it wrong. Mr. Purvis was right about Keith though, God knows how Dad was going to react. He'd been bad about Brody and Brody was as straight as they came. Just, he was a gweilo and Dad, he'd wanted a Chinese son-in-law so bad. He still did, and that left me. Thanks, Sally. I glanced at Keith. \"I gotta figure that one out.\"\n\nNow old Mr. Purvis really laughed. A young man's full laugh coming out of a big old man. That laugh, I could see what he'd been thirty years ago. A bit like Keith. \"Yeah, with your Dad, I get that.\" Mr. Purvis glanced back at Keith. \"So, she your Ol' Lady, Round Out? She earned a name yet?\" \n\n\"Blue, Baby Blue,\" Keith said. \"You can kinda see where the Blue comes from and yeah, she's my Ol' Lady.\" \n\nI looked at Keith, eyes a bit wider. I was his Ol' Lady? He grinned at me. I smiled back happily. Okay, I was good with that. I liked it. I wanted to be Keith's Ol' Lady. Keith leaned over, said something in old Mr. Purvis' ear that I didn't catch. Mr. Purvis looked at me, eyed my blue, yellow and green black eye and grinned, laughed that secret guy laugh, nodded. \"I can see where the baby comes from too; now shit, if you both got the time, come on in and take a look at the old sled then, Round Out. Blue.\" He gave me that grin again, the one that made me blush. Now they both laughed. Guys!\n\n\"Don't mind if I do, Slider.\" They grinned at each other like they were best buddies. I could see they liked each other. Guys. Who could understand them? I followed them over, waited while Mr. Purvis opened his garage door.\n\n\"Up in the back, far corner,\" he said, flicking the lights on, led the way.\n\n\"Oh yeah, nice sled,\" Keith said, squatting down next to the big old Harley sitting there on blocks. \n\n\"Yeah, she's just about original. Replaced the old four-speed transmission, had a five-speed put in twenty years ago, had to replace the starter, the old one, had a few problems with that. Primary gaskets still leak like a fuckin' sieve too...\"\n\n\"How'd you find those short stocks on the tail end?\"\n\n\"Goddam rough, I tell ya, and that riding position, I'm not sure I could fuckin' hack it these days.\" Mr. Purvis glanced at me. \"'Scuze the language there, Jay-Lin... Blue, I mean.\"\n\nI shrugged. \"Hey Mr. Purvis, heard it before, you guys go ahead, don't mind me, I'm Round Out's Ol' Lady.\" Just saying that made me feel all shivery. Keith gave me another grin, reached up and took my hand, gave it a squeeze. I was curious though, I had to know. \"What's with the riding position, Mr. Purvis?\"\n\n\"Call me Slider, Blue, call me Slider, 'cept when your Dad's around that is. Okay Blue, see where the footpeg and change lever are up front.\" He pointed. \"You end up sitting hunched-over, feet-and-hands-forward, kinda like a fuckin' monkey. That's okay when you're young, looked pretty damn cool when I bought her, but Jesus, last few years that sucker gave me a sore back riding like that. Now? Fucked if I know if I could do it.\"\n\n\"Neal, you mind your language with this young lady around.\" Mrs. Purvis' walked in through the door from the house. \"Hello Jay-Lin.\"\n\n\"Hi Mrs. Purvis.\" I gave her a polite smile. Very polite considering how nosey she always was. \"This is my boyfriend, Keith.\"\n\n\"He's Round Out,\" Mr. Purvis said, \"rides with the Southern Booze Cruisers.\" He grinned again. That grin really transformed his expression, he didn't look like an old jerk anymore; he looked like he was having fun. \"Jay-Lin here, she's his Ol' Lady, goes by Baby Blue.\"\n\n\"Really?\" Mrs. Purvis actually looked startled. \"Do your parents know, Jay-Lin?\"\n\nMr. Purvis laughed. \"No, they don't, so don't you go saying nuthin', okay Linda. You know Jay-Lin's Mom & Dad, they'd throw a fuckin' fit, you leave Jay-Lin to figure out how she's gonna handle it. No butting in, okay.\"\n\nMrs. Purvis looked at me. For the first time since I'd known her, her face cracked a smile. \"Teach your fuckin' mom to suck fuckin' eggs, Neal.\" She laughed at my expression. \"Neal told you he used to ride with the old Vipers outa San Diego I guess,\" she said. \"Well, I was his Ol' Lady back in them days, used to go by Jugs.\" She looked down and laughed. \"Guess I still could. Now that was a real one percent club, the parties we used 'ta have, the runs, man, we used 'ta give those other fuckin' clubs a run for the money too. Remember Altamonte?\" She glanced at Mr. Purvis. \"That was one wild fuckin' party. God, I miss that shit.\"\n\nI blinked. Holy shit. I tried to imagine Mr. and Mrs. Purvis. Slider and Jugs. Mrs. Purvis laughed. Must've been the expression I wore. \"You come over some time Blue, show you some photos. Old times.\" She sighed. \"I miss 'em.\" She glanced at Mr. Purvis. \"You too eh, Slider.\"\n\n\"You wanna get her running again, Slider,\" Keith said, \"beautiful old sled like that, she's too good to leave sitting in back of the garage.\"\n\nMr. Purvis shrugged. \"Lotta work for an old guy, Round Out; never was much on that mechanical shit. Have ta take it into the shop and jeez, that costs fuckin' money these days.\"\n\nKeith kind of scratched his head. \"Tell ya what Slider, got a brother, goes by Finn, he's got his own little shop, does jobs for cash mostly, he's straight up, use him myself now and then, get all my parts through him. I got a truck we could use Monday, roll your sled on the back, take her in for Finn to look at. He'll take a look, tell you what it'll cost, if it's too much we'll just load her up and bring her back. Whaddaya say?\"\n\n\"Well, shit, Round Out, that's decent of ya ta offer but I dunno...\"\n\n\"Just fuckin' do it Neal,\" Mrs. Puvis piped up, \"I miss sitting on the back with the wind in my hair. Not like we got much fuckin' longer either, honey.\"\n\n\"Fuck it, why the fuck not,\" Mr. Purvis straightened up, grinning.\n\n\"That's the fuckin' spirit,\" Keith said, standing, wiping his hands on his jeans. Okay, that's how those jeans got so oily. \"Hey Slider, sorry to cut this short but we gotta run, got somewhere we gotta be. I'll come by with the truck Monday morning, early.\"\n\n\"Sounds good to me Round Out, it's been fuckin' good meeting ya, you two get on your way, have yourselves a good time,\" Mr. Purvis said. \"And Round Out, you come round to see your Ol' Lady here, park your ride in our driveway just in case her parents come home, don't wanna see Blue here dropped in the shit.\" He grinned at me. \"No offence, Jay-Lin, but your folks, they can't stand me anyhow. Better safe than fuckin' sorry.\"\n\n\"Thanks Slider,\" Keith said, with a glance at me. \"I'll do that, don't want to screw things up with Jay-Lin's Mom and Dad.\"\n\n\"Nahh, you just concentrate on screwing Jay-Lin,\" Mrs. Purvis said, laughing as I blushed an instant pink. Keith grinned.\n\nMr. Purvis threw his head back, laughing. \"Fuck, Jugs, I was forgetting what you were like.\" He grinned at me. \"You gotta tolerate her, okay Blue, my Ol' Lady, her sense a humor, well, let's just say she used ta walk on the wild side.\" They smiled at each other.\n\n\"Well, we get that sled of yours running next week, we gotta small run going next Sunday, finishing up with an afternoon barbeque at the Church, you'd be real welcome if you wanna walk the wild side again,\" Keith gripped Slider's shoulder. \"Whaddaya say, Slider? Come along, go for a run, meet some of the SBC brothers, have a few. Old San Diego Viper, you'd be welcome, they're gonna be hanging on your every word, man. You guys, your total fuckin' legends.\"\n\n\"Man, you got me,\" Mr. Purvis said. \"Whadaya say, Jugs? You up to it?\"\n\n\"Shit yeah, you known me what, fifty fuckin' years Slider, when have I never been up for it?\" She gave him that smile again. Looking at her, seeing that smile, studying her closely now rather than just the cursory glances I'd given her in the past, I realized she must've been really good looking when she was younger. One of those tall blonde-haired 1960's hippy biker chicks or something. \n\n\"See ya Monday then, Slider, I'll bring the truck around first thing.\" Keith grinned at me. \"Maybe give you a ride to school, Jay-Lin.\"\n\n\"Oh yeah!\" I just about squealed, \"That'd be fuckin' awesome.\"\n\nThey all looked at me. They were all grinning. I blushed. I couldn't help it.\n\n\"Okay, let's hit the road, Blue.\" Keith gave my butt a slap, just a light one. \n\nI looked at him, just tingling everywhere. That touch of his hand on my butt, that light slap, it just echoed through me. Rippled. Reverberated. That tingle turned to a glow that filled me up, left me panting, left me wanting to jump on him and kiss him everywhere, wanting him to kiss me everywhere, wanting him to just do whatever he wanted to do to me. My nipples hardened, ached. Almost, I moaned out loud.\n\n\"Jeez Round Out,\" Mrs. Purvis was laughing, \"dunno about hit the road, you guys should just get a room and hit the fuckin' mattress.\"\n\nOkay, now I really blushed. Really. Bright pink turned to deep burning red.\n\n\"Yeah,\" I said, my eyes fixed on Keith's.\n\nHe smiled back at me, his eyes returning my look, his hand taking mine. \"We will baby, we will.\" Leading me out of the garage towards his sled. \n\nBehind me, I heard Mr. Purvis' voice. Slider. \"Jeez Linda, I had no idea that girl had it in her.\"\n\n\"Well, me neither, Neal, but she's sure landed a fuckin' good one.\"\n\nKeith grinned at me. He'd heard too. I grinned back as the garage door closed behind us. \"Get your jacket, sweetheart, we're goin' for a short ride, then brunch. That okay?\"\n\n\"Yeah, sure.\" God, I had to ask Keith about tonight before I forgot. \"Uhhh, Keith?\"\n\n\"Yeah, sweetheart?\"\n\n\"Umm, Mom and Dad, they're working tonight, I gotta stay at my sister's. Would you like to come round and have dinner at their house, my sister and her husband that is?\" I eyed him hopefully.\n\n\"Sure sweetheart.\" He smiled. \"You figure me meeting them'll help with your Mom and Dad.\"\n\nI nodded. \"Yeah, once they meet you, if I can get Sally onside, that'll help. She had an awful time getting Mom and Dad to let her date Brody back at High School, it was so bad, but she managed in the end, and now they're married and Dad and Brody, they get on now. But I need her help.\" For a moment I felt like crying. Mom wasn't so bad, but why did Dad have to be so weird like that? Dad, I loved him, but he'd made Sally's life so miserable for two whole years, just coz he wanted a Chinese son-in-law. \"I really do, I'm not tough like Sally.\"\n\nKeith have me a hug, his hand stroked my head, holding me. I felt so safe in his arms. Safe and loved and secure. When Keith held me, nothing could go wrong. Nothing. \"Hey, Jay-Lin, sure I can come round to your sister's. What time do we need to be there?\"\n\n\"Maybe around five,\" I said, pressing my face into his jerkin. I didn't care that all those little patches and things on it pressed into my face.\n\n\"That works.\" Keith sounded satisfied. \"After brunch we'll go for a ride, back to my place and clean up, then take the cage over to your sister's. Be a fun day.\"\n\n\"How long will we be at your place?\" I looked up, heart beating faster.\n\nHe grinned, pushing my heart into overdrive. \"Long enough babe, long enough.\" Then he kissed me. One of those open-mouthed tongue-halfway-to-my-tonsils kisses that left me breathless and wanting more as I squirmed against him, standing on my tiptoes, my arms around his neck. Wanting much much more.\n\nHis mouth lifted from mine. \"You got a jacket sweetheart?\"\n\n\"Yeah, inside.\" My lips were so close to his they almost brushed them as I talked.\n\n\"Your breath smells so fuckin' delicious.\"\n\n\"So does yours.\" It did. It was hard to describe, kind of a mix of menthol and Keith and I loved it, loved inhaling, tasting and smelling him. The scent of him, of his body, of his breath intermingling with mine as our lips met, as our tongues met and danced. His hands slipped down to my butt, pulled me hard against him so that I could feel him. Big. Hard. All mine.\n\n\"Ohhhhh.\" I had to moan. I had too. \"Can we go inside, Keith? Please?\"\n\n\"Oh man, we gotta get to Hardtails; told Punch we'd be there right after he opens.\"\n\n\"Hardtails?\" I had all the hard I wanted pressed up against me. I could supply the tail. \n\n\"Yeah.\" Keith kissed me again. A long long kiss that ended with me moaning into his mouth. \"God, I love you so much Babe ... now you go get your jacket and come back out, okay.\" He let go of me, stepped back, breathing hard. I loved the way he looked at me. Like he was gonna fling me over his shoulder and carry me off, a Viking warrior pillaging and ravishing. Well, he could do that to me anytime. Like, pillage and ravish me now, please oh please. \"Jesus babe, look at me like that again and we're not going anywhere except inside.\"\n\n\"Okay.\" I smiled hopefully, doing my best to look at him like that again.\n\nKeith laughed, swatted my butt. \"Get. Jacket. Baby.\"\n\n\"Okay.\" Said sadly. I was disappointed but hey, there was always this afternoon. It did take a couple of seconds before my legs started responding to my brain saying walk though. I wasn't too coordinated for a couple of steps. I managed to go inside, get my jacket, slip it on, zip it up, set the alarm, walk outside and lock the front door behind me though. It took me a couple of tries to get the key in the lock.\n\nKeith's Harley growled to life in the driveway, rumbling as I walked towards him. He handed me that helmet, buckled it under my chin. \"Hang on a second while I get her turned.\" He swung himself astride, balancing the Harley upright, folding the sidestand up, pushed her back and around. \"Climb on babe, we're off.\"\n\nI knew what to do now. One foot on the footpeg, swing my other leg up and over, my hands on his shoulders, balancing myself. Sitting down behind him, arms round his waist, pressed up against his back, legs either side of his, brushing him, all of me so close to him. Oh yeah, I loved this, loved feeling him so in control, loved feeling that big Harley vibrating with power, that engine rumble turning into a growl as he pulled us out, leaning with him as we turned into the street. Muted thunder as he twisted the grip, sending us accelerating away from my home.\n\nOh yeah! Wind in my face, hanging on tight to Keith, seated behind him on his Harley. We were on the road.\n\nWhat was Hardtails?\n\n<p align=\"center\"><bold> * * * </bold></p>\n\nKeith took us onto the Parkway, accelerating onto the on-ramp, laying her way over as we curved around. I moved with him, no longer nervous as I leaned with him, sitting lightly, feeling confident now, exhilarated, seeing the road flash by, the engine growl louder and louder, the cool clear spring air fresh in my face, the scent of last night's rain still in the air. I could pick the gear changes now, feel his feet and hands moving in a coordinated dance as he flicked through the gears, clutch eased in and out, accelerator twisted, eased of, twisted again, rocketing onto the Parkway. \n\nHe took us into a gap between two cars, a quick glance into the mirror, over his shoulder and we were in the middle lane, still accelerating. Me, I was smiling, looking over Keith's shoulders, clinging to him, feeling him move, moving with him as he wove us through the Saturday morning traffic as casually as if we were dodging seniors in the mall. Easing from lane to lane, overtaking cars, the odd truck, cutting through gaps, the engine thundering now, not growling but roaring, cars ahead hearing us, some of them moving out of the fast lane to let us through. Keith'd give those ones a quick wave as we swept past.\n\nThe odd one that didn't move, Keith took us straight down the white line, cars only inches away to either side, through and howling past them before they even realized what was happening. I glanced into one car as we swept by. Kids in the back seat looking at us wide-eyed, Mom startled, Dad driving, not even aware of us until we were almost past, seeing his face as the Harley thunder shocked him into sudden awareness. He beeped his horn at us as we cut in front of him. I looked back, gave him the finger. I'd never done that before in my life. That Peter Wong creep excepted of course. Keith saw; even over the wind and the engine I heard his laugh.",
        "Past a couple of downtown exits. Now the traffic was lighter. Not many people heading out from downtown this early. I wondered where we were going but really, who cared. The ride was the thing. Just sitting behind Keith on his Harley, on the road, wind blowing my hair out behind me, holding onto him, the road unwinding in front of us. This was what I wanted and I'd never known it. Never imagined it before that first ride with Keith last weekend. Now? Now I couldn't imagine not having this. Not having Keith.\n\nNo cars ahead of us in the fast lane. Keith really opened her up. His Harley surged forward beneath me, I could hear the engine bellow, feel the engine's vibration through my seat, feel the power as we accelerated. Now we weren't just moving, we were flying, flashing by cars in the middle lane, the wind noise and the engine thunder half-deafening me, the Harley alive beneath me. It was hard to see now, my shades were pressing into my face, I had my eyes narrowed, the wind bringing tears and I didn't care as we followed the gentle curves, tore down the long straights trailed by that reverberating storm of noise. I loved this. \n\nWe were heading out of town, I knew. The freeway widened, no longer hemmed in by concrete walls. Broad grass verges now, spring flowers poking through the grass, the scent of fresh pine suddenly overwhelming everything as we passed a copse along the side of the freeway, last remnants of the countryside that this had been not too many years ago. The wind was cool and fresh but Keith's body sheltered me, only my face and my hands felt that morning chill, my back was warmed by the sun, my front warmed by Keith where I pressed up against him.\n\nUp against his back, that powerful Harley engine vibrating the entire bike, throbbing, the growling thunder of the engine reverberating through me as I clung tightly to Keith, I just wanted to keep riding. I could ride with him like this for hours, enjoying the coolness of the morning, the road unwinding before us, the sheer exhilaration of experiencing everything around us. This wasn't enclosed, the way you were in a car. Caged in, protected from the elements, sitting in a bubble. This was out there, feeling everything, experiencing everything, inhaling the scent of everything the way it was, unfiltered, raw; real.\n\nToo real now and then. I smelt skunk. Unfiltered, all too raw. Overpowering. That smell vanished in a few seconds, replaced once again by that wet grass and wet pine scent, so vivid it overwhelmed the smell of the car exhausts and the wafts of diesel from the occasional truck. I wanted Keith to keep riding but of course, we didn't. We slowed, slowed to what now seemed to be a crawl, easing off and into one of those new industrial suburbs built around what must once have been an old rural village on the outskirts of town. \n\nOff some sort of main road onto a sidestreet, then another. Older buildings now, and then we were slowing, slowing and turning off the street into a parking lot in front of an old one story brick building looking like something from the nineteenth century. Old. Okay, I saw the sign as Keith parked his ride, this was Hardtails but there weren't any other clues. The engine died away, I slid off, unbuckled my helmet, grinning from the sheer happiness of that ride.\n\n\"That was awesome.\" I smiled as Keith took the helmet from me, hung it off one mirror.\n\nHe grinned right back as he swung himself off. He didn't need to say anything. He was happy I'd enjoyed the ride, I knew. His hand engulfed mine, he led me across the parking lot towards the doors. A couple of trucks parked outside and us. Whatever it was, busy it wasn't. Mind you, it was nine forty five on a Saturday morning. Speaking personally, this time Saturday I was usually still in bed asleep.\n\n\"What're we doing here?\" I asked curiously as we walked inside. Wow. That smell. Leather and oil and a kind of metallic tang. I loved that smell. \n\nHe grinned at me. \"Shopping.\"\n\nOkay, I liked shopping too. Just, I had no idea what we were shopping for. The inside of the shop should give me a clue. I glanced around, blinking. It wasn't exactly brightly lit. What the heck? Armor? Leather armor and helmets? Swords? Shields? Was that a battle axe? What was Keith planning? A Lord of the Ring's reenactment or something? I mean, I liked Arwen in the movies but I didn't exactly see too many parts there for Chinese girls. Now if we were talking Crouching Tiger, Hidden Dragon or The House of Flying Daggers, that was another story. Not that I'd ever gone to kung fu classes, but there was Quebec's.\n\nKeith chuckled. \"Wrong side of the shop, Jay-Lin.\"\n\nWell, so glad I was entertaining someone. I turned to face the other way. Now I giggled. Okay, this was making more sense. Leather jackets, gloves, jerkins, trousers, all sorts of motorcycle clothing. Helmets. Boots. Other stuff, I had no idea what they were. All sorts of things. Some kind of big leather bags? Whips. Huh?\n\nI eyed him. He grinned. He was enjoying this, I could tell. Was I going to have to ask?\n\n\"Okay, I give up.\" I giggled. \"What're we shopping for? Motorcycle stuff I guess?\"\n\n\"Got it in one, sweetheart. You're gonna ride with me, you need a good leather jacket for starters, gloves, boots, your own helmet coz I sure don't want anything happening to that beautiful face.\" He smiled, gave me a quick kiss. \"We'll get you some leather trousers as well. That'll do for now.\"\n\nHe didn't wait for me to say anything, he looked around, let me go, walked over to the old wooden counter, raised his voice. \"Yo, Punch, where the fuck are ya, bro?\"\n\n\"Hey, Round Out ... out the fuckin' back in the workshop, come right on through.\"\n\nI followed Keith round an old wooden counter, through a bead-curtained door and into a large and cluttered looking workshop. Half a dozen older women were working on big old industrial looking sewing machines, a couple of guys were working at other tables, paper patterns on tanned hides, cutting knives working. Piles of leather sat in big bins down one side of the room. The smell of leather filled the air, made me want to rub my face in those piles and just breath in deeply. Somewhere, country music was playing in the background.\n\n\"This her?\" The voice came from the other side of Keith. I peered around him, saw an older guy sitting at a workbench. Lined face, white hair, goatee and glasses.\n\n\"Yeah, this is her. Punch, meet my 'Ol Lady, Baby Blue. Blue, this is Punch.\"\n\n\"Hi Punch.\" I did my brightest smile.\n\n\"Huh.\" He looked over his glasses at me, ran his eyes up and down. \"Take the jacket off.\"\n\nSociable old guy, wasn't he. Keith laughed. \"He's always like this, Blue.\"\n\n\"Yeah,\" one of the women chipped in, \"friendly old git.\"\n\nPunch looked up, poker faced. \"Sorry Blue, gotta measure you, nice to meet ya 'n all. Now take the jacket off.\"\n\nI had to laugh even while I peeled my jacket off. Keith took it from me as Punch pulled out a tape measure from a pocket on the apron he wore. He was all over me with that tape, measuring, jotting down numbers.\n\n\"Punch does custom biker leathers,\" Keith explained. \"Best you'll get, good as Langlitz, better than Fox Creek even.\" He grinned. \"We won't talk about Dainese.\"\n\nNever heard of any of them but what did I know. Nada. \n\n\"Don't mention that eye-talian stuff in my shop man,\" Punch grinned. \"Anyhow, my leathers're better than Langlitz or Fox Creek ... In my honest opinion of course. Maybe not cheaper though, 'lessen you pay cash.\" Keith laughed. Punch didn't take his eyes away from the tape as he talked, still measuring, jotting down numbers. \"Just, we don't do internet selling. Too much hassle with measurements and customers bitchin' and complainin'. You want our stuff, you gotta come here.\"\n\n\"Worth it,\" Keith said. \"Best leathers you'll ever get.\"\n\n\"Yeah, well, speaking of best, Round Out, I know we were talking goatskin for her jacket, but how'd you like kangaroo hide, got a shipment in from Australia, wasn't expecting it for a few more weeks but it arrived yesterday.\"\n\n\"Kangaroo hide? What the fuck?\" Keith raised one eyebrow.\n\nYeah, well, I was kinda thinking that WTF thing too. Kangaroos? They looked so cute.\n\n\"Toughest leather you'll get, far more abrasion resistant than steerhide, about ten times tougher for the same thickness as a matter of fact. Real flexible too, be way more comfortable for her to wear, helluva lot tougher if she ever really needs the protection 'n I can fit it with pockets for armor as well. Costs a bit more though.\"\n\nArmor? Okay, I'd ask later.\n\nKeith nodded. \"Let's have a look then, not that I'd know the difference.\"\n\n\"Come on over.\" Punch led us over to one of the tables, a pile of hides sitting there. Thank god, they didn't look anything like kangaroos. \"Feel it man, feel that quality. For the same thickness as steerhide, she's gonna get far more protection, far more comfortable to wear, feel how pliable that leather is.\"\n\nKeith and I rolled it under our fingers. Soft and supple, really supple, far more than my one and only leather coat. \n\n\"Now compare it to this. These here hides are steerhides and the small ones over here are goat.\"\n\nKeith and I looked at each other. Oh yeah, even I could tell the difference. Well, I kinda liked kangaroos, but I liked lambs too and I ate them. Same difference. And it wasn't like they were family. I guess it was bad luck for Skippy. Yeah, I saw the re-runs on PBS when I was younger.\n\n\"Whaddya think Jay-Lin?\"\n\nI looked at him a bit doubtfully. \"I don't mind wearing it, Keith. Just, I really don't know anything about motorcycle jackets.\"\n\nHe smiled. \"Well, if you don't mind wearing it, no problem.\" A quick glance at Punch. \"Let's do the Kangaroo hide then, Punch, and inserts for the armor as well.\" \n\nPunch grinned. \"Good choice Round Out, if it was my 'Ol Lady, that's what I'd be picking.\" \n\nOne of the women at the sewing machines looked our way. \"I'm taking you up on that, Punch.\"\n\nHe laughed, glanced at the clock on the wall. \"For you, bro, I'll do this myself right now. I got her measurements, now, let's pick a pattern.\" Leading us back to a clear bench in one corner, Punch flipped open a binder. \"Whaddaya say Round Out, for your 'ol Lady here, I'd recommend that classic ribbed style, zipped across like this, snap downs so the collar won't blow up in your face if you ride with it down.\" He smiled my way. \"The style'll suit your looks girl, the collar's a snap down, comes with a removable vest liner, zips on the wrists and hips and there's two inside pockets, four outside. Whaddaya say?\"\n\nI glanced at Keith. \"I like the style.\" I did. It looked exactly like what I'd pick myself.\n\nKeith nodded. \"So do I, let's do that one then Punch.\" His arm slid round my shoulder, held me close. I reached up to rest one hand on his.\n\n\"Right you are bro.\" Punch grinned. \"Lemme pick the hides and get the pattern down and I'll get started. You wanna watch for a while Blue, Round Out, you're welcome.\"\n\n\"Can we?\" I asked Keith. I'd never seen anyone make any clothes before. And this was going to be my jacket. \n\n\"Sure baby.\"\n\nPunch was already moving back to that pile of kangaroo hides, sorting through them, pulling one out, then another, discarding one here, picking another there. \"Making sure the hides we're gonna use 're the same hues and texture so all the sections of the jacket match up. Need a few, there's over fifty pieces to each jacket, we gotta cut around any imperfections, choose the strongest pieces, takes a few hides for each jacket.\" He smiled at me now. \"These just came in, like I said. You're getting the best ones here, Blue.\"\n\nHe was already laying the hides he'd selected out on a large clear bench, positioning the pieces of the pattern on the leather. I watched, fascinated, as he pulled a knife from a sheath on his belt. Without looking up, he called out, \"Hey, Angela, you mind punching the pocket flaps and trim for me? You can use this one.\" He picked up a hide, handed it to one of the ladies who'd been working on one of those big old sewing machines. Pffaf, That was the name on those machines. They looked old. Old and tough.\n\nWithin fifteen minutes he had all the pieces cut, knife flashing, no hesitation. You could see he knew what he was doing. He started to trim here and there. \"Customizing it for ya,\" he said, not taking his eyes from the leather. One of the other men looked up from his bench. \"Want me to do the liner, Punch\"\n\n\"Yeah, thanks Joe.\"\n\nJoe was already moving, another long bench with a large roll of quilted material mounted at one end, pulling on the roll, laying the fabric out flat, placing another series of patterns on top of the fabric, pinning it down. Joe's cutting knife flashed now, more pieces of fabric taking on specific shapes. In no more than a few minutes, he was done, taking the pieces he'd cut and handing them to Angela, all without a word.\n\n\"He's giving 'ya the royal treatment here, Blue,\" one of the other ladies looked up, smiling at me and Keith. \"There's customized, then there's customized by Punch.\"\n\nPunch chuckled. \"No shit. Now we're gonna chop the pockets in.\" He took a couple of the pieces over to a die press, slid them under, positioned them, stamped down under a hydraulic blade and zap, cut small pieces out one after the other, then tossed the piece he'd finished with to another of the women. She took them without a word, put them on her work bench, pulled out a tube of adhesive and a hammer, started turning back edges around the pocket slot and gluing them down, pressing and tapping them with the hammer. \"Pocket edges,\" she said, seeing me watching.\n\nAngela was sewing now, sewing zippers onto the pockets she was making, fingers flashing as she guided the leather under the sewing machine, then taking the panels from the other lady, sewing the pockets on. Less than half an hour and my jacket was already taking shape.\n\nPunch looked up. \"Hey, it's all sewing and trimming now, you guys go grab a coffee or look around the shop or something and come back in an hour, it'll be ready for a final fitting, we'll adjust it right then if we need too, finish it off and she'll be good to go.\"\n\n\"Punch, you're the man.\" Keith gave him one of those hugs. \n\nPunch laughed, slapped his back. \"Round Out, bro, it's for you man, for anyone else it'd be a four to six week wait, so get your asses out of here, go grab that fuckin' coffee and leave me the fuck alone to get this done before someone else comes in and bitches at me about why their fuckin' jacket's late, 'kay.\"\n\n\"We're gone, bro.\" Keith took my hand, led me out into the shop. \"Coffee shop's next door,\" he said, \"but before we grab one, let's see about getting you some gloves 'n trousers 'n boots 'n a helmet.\"\n\n\"Okay.\" This sounded like fun. I had my purse with me, I pulled it out. Better check I had my credit card. Yep, there it was. I wondered how much it would cost. I knew I still had most of this quarter's clothing allowance from Mom. Fifteen hundred. That should cover everything.\n\nKeith's hand closed over mine. \"Put it away sweetheart, you're not paying for a thing.\"\n\n\"Keith, it's ...,\" I looked at him, looked at his face. Knew right away I wasn't going to win this one. \"Okay.\" Zipped my purse back inside my jacket.\n\n\"Good girl.\" He gave me that smile again. \"When you're with me, you don't pay for anything, okay, Jay-Lin. You're my 'Ol Lady, I take care of you. Got it?\"\n\n\"It's not like I can't afford it,\" I said. \"My parents give me an allowance.\"\n\n\"Got it?\" he said. Okay, I already knew that look.\n\n\"Got it.\" No point in arguing when I knew I was going to lose.\n\nNow he gave me that big warm smile, the one that made me shiver all the way down to my toes. \"I'd have to spank you if you didn't,\" he said, his voice low, rumbling. Doing things to me.\n\nOh god. I wasn't just shivering. I was melting. Keith. Spanking me. I chewed on my bottom lip. \"Really?\" I eyed him, my heart pounding. I looked around. No-one else in the shop. I went up on my tiptoes, arms around his neck, mouth searching for his, finding, kissing him hard, my tongue taking the initiative, sliding into his mouth, tasting him, flirting with him, sucking hard, dragging his tongue into my mouth, moaning as he took control. Moaning as he kissed me back hard, his hands on my butt, holding me up; pulling me firmly against him. We were both panting when our lips parted. Something else was hard as well. \n\nI moved against him. Just checking, you understand. Smiled at the look on his face. \"So spank me when we get back to your place,\" I breathed, nibbling on his neck.\n\nHe looked at me, but now it wasn't a gentle and tender look. It was a fiercely possessive look, a look that said he wanted me, wanted me very much. A look that turned my knees to jelly so that I hung on his hands where he held me, my head resting against his shoulder, my body pressed against his. All his. I was all his. \"Keith, I'm yours.\" I had to put it into words, even if they were whispered. \"I'm all yours.\"\n\nI looked up at him, looked up into those beautiful blue eyes. So different from mine. Round and blue, as blue as the sky on a clear spring morning. \"I love you.\"\n\nHis look was gentle again, as tender as his hand that now stroked my head, my hair, my cheek. \"I love you, Jay-Lin, little darling.\" He kissed me again, a long long kiss that left me breathless, left me hungry for more. Left me happy.\n\nHis hand patted my butt. \"Shopping, Jay-Lin.\"\n\n\"Okay.\" Content for now, I slid away from him. \"What do I need?\"\n\nWe spent the next ten minutes picking motorcycle gloves. Keith knew what he wanted for me right from the start, a beautiful pair of black kangaroo and stingray hide gloves that Hardtails made. They fit perfectly. I didn't like the cost though. Two hundred fifty bucks? For gloves? \n\n\"They're too expensive, Keith. And what's so special about stingray?\" I went to put them back.\n\nKeith took them out of my hands. Took my hand in his, lifted it to his lips, kissed my fingers. \"Baby, you've never seen what happens when you come off your ride and slide down the road. I don't plan on that happening, but if it ever does I want you wearing the best protection there is. And stingray's about five times more resistant than that kangaroo hide. We come off, your hands won't be skinned.\" He grinned. \"Besides, these are what I wear and you're not getting anything that's not as good as mine.\"\n\n\"Honest? You're not feeding me a line? I mean, they're, like, really expensive.\"\n\n\"Baby, the last thing I'm worrying about is how much they cost, okay? Just go with me here sweetheart, I know riding, 'kay?\"\n\nI thought about that for a moment. That building he owned. His loft. Yeah, Keith wasn't worrying. And he knew motorcycles. And I trusted him. Totally. \"Okay, just don't, you know, waste money, okay. I love you Keith, you don't need to buy me expensive stuff just because it's expensive.\" Now I smiled, poked a finger at his chest. \"You okay with that, Mr.?\"\n\nHe grinned. \"Got it.\" We smiled at each other. Smiled and smiled. His eyes. Oh god, his eyes. His face. I reached up, stroked his cheek, his strong jaw. His bristles. \n\n\"Did you shave this morning?\" Now I was curious.\n\nHe laughed. \"Yeah. If I hadn't, you'd know. Now let's go find a helmet.\"\n\n\"Okay.\" I followed him across the shop to the racks of helmets. Looked at them. \"You better pick Keith, really.\"\n\nHe laughed. \"No problem. You're getting a full face helmet for starters, Bell Vortex if we can find one that fits.\"\n\nWe did, after I'd tried on about six. I loved it. It was black, it'd been decorated. Motorhead in gothic letters on top, these awful fang things along the jawpiece. \"That's it,\" I just about squealed after I peeled it off. \"This one.\"\n\nKeith put it on the counter with my gloves. \"Boots next.\"\n",
        "That was gonna be hard. My feet were tiny. There just weren't that many in my size but they did have a few. Right down at the bottom of the women's rack. I had to get down on my knees on the floor to find the ones in my size. There weren't many. Three pairs. Lined up on the floor, we looked at them.\n\n\"I think these are for kids.\" Keith eyed them doubtfully.\n\nI looked down, looked at my sneakers, laughed. \"Yeah, so? That's my size.\" They were. I knew right away which pair I preferred too. When I tried them on, they fitted perfectly. I looked at the label. Harley-Davidson Romy Black Leather High Cut. They came up to just below my knees. I loved them. So, it was visibly apparent, did Keith. Very visibly apparent. I giggled. \"Really? You like me that much in these?\"\n\n\"Oooooh yeah, babe.\" His grin was huge.\n\nI tingled. Everywhere. Then I had to giggle. \"Anything else I need.\" I better ask before all the blood deserted his brain. He couldn't have been getting much oxygen up there now from the look of it.\n\n\"Chaps,\" he said. \"Pair of chaps and a pair of leather trousers.\"\n\nWe found a pair of both that seemed to be the right size. \"I better try them on.\" I held them up. Nice. Really nice. And the sizes seemed right. I didn't want to be trying half a dozen different ones.\n\n\"Fitting room's there.\" Keith pointed at a couple of curtained off cubicles. I headed for them. Passing that shelf of whips in all different sizes on the way. Whips? Keith had said something about spanking me when we came in hadn't he? Well, I'd read Fifty Shades of Grey like every other girl I knew. I grinned. Okay! Glanced back. Keith was over looking at those big leather bag things. I looked at the whips, picked up a small black one, plaited leather handle, a clip on the end so you could hang it on your belt, took it with me into the fitting room.\n\nBoots off, I tried the chaps on first, over my jeans. They kind of felt funny but they fitted. Trousers next. I peeled off my jeans, slipped into those trousers. More like leather tights. They clung to me. When I checked myself out in the mirror, even I thought I looked hot. With the boots on? I stepped into them, fastened them up. Oh boy. Keith was going to go crazy. I smiled at myself. Okay, I was going to ask Keith what he thought.\n\nLeaving the cubicle, I saw him, over looking at a rack of t-shirts. Still no-one else in the shop. \"Hey, you, the good-looking one,\" I called out, \"I figure seeing as you're paying, you get the final say. You like them?\"\n\nHe looked at me. His expression as I did a little pirouette. I had to giggle, \"I guess that's a yes?\"\n\nHe laughed. \"That's an oh fuck yes,\" he said, looking me up and down. Me, I was looking down. Jesus, his brain was going to short circuit soon. There reallycouldn't be much blood left up there. I shivered. Oh yeah. I was so going to see what those chaps did to him.\n\n\"I'll change back,\" I said, \"you can look at the chaps.\"\n\n\"Okay.\" He nodded, his eyes following me until the curtain closed. Trousers off again, I was about to change back into my jeans. I thought of Keith's look when he saw those trousers. I looked at the chaps. My heart pounded. I smiled. My heart beat faster. A lot faster. I peeled my t-shirt off, unhooked my bra, shrugged it off, stood there in my panties, breathing hard. Panting. Another peek past the curtain. Still only Keith.\n\nAlmost moaning out loud, my nipples aching, I peeled my panties off, stood there naked for a second, then slipped those chaps on and fastened them. Stepped into those knee high boots and fastened them. Picked that little whip up in one hand, held the fitting cubicle curtain with the other.\n\n\"Keith?\" I poked my head out of the cubicle. Only my head. Glanced around. No-one else in the shop. Good. I pulled the curtain open. All the way.\n\n\"Yeah?\" He looked around at me. Typical guy when a girl was trying things on. Standing around trying not to look bored. He did look bored. Until he saw me. Standing in the entrance to the fitting cubicle dressed in chaps and knee high boots smiling at him while stroking myself with the handle of that whip. Doing my best to look very casual and elegant. God, I was so wet, the handle was wet just from touching myself there. I could swear his eyes bulged. Something else did for sure. I saw it move. Oh yeah! Remember. To. Breathe. I did, but it was more like a moan.\n\nHe closed his eyes for a moment. \"Oh fuck me.\"\n\nThat was the idea. Well, that was my idea. I was glad we were thinking along the same lines. Now my heart pounded, my cheeks flushed. God, I was so wet. \"Here? Okay. If you want too.\" There was room on the fitting cubicle floor.\n\nHe took half a dozen steps across the shop towards me. Fast steps. That look on his face. I wanted to melt, I was jelly. I couldn't have moved if I'd wanted too. Not that I wanted too. \n\n\"Jesus, Jay-Lin, you've got no idea what you do to me, girl.\" He swept me backwards into the cubicle, sweeping the curtain shut behind us, sweeping me into his arms, his breath hot on my face as his mouth searched for mine, as he kissed me, as he sucked my tongue into his mouth while his hands ran over my back, over my butt.\n\nMy hands worked frantically at his belt. I wanted to touch him so much. Touch him and hold his hardness in my hand. Feel his excitement. Satisfy him. I really was moaning out loud as I got his belt undone and unzipped his jeans. Carefully. Pushed them down, pushed his boxers down, freeing his hard cock with another moan of excitement. Taking him in one hand, holding him in my fingers, hot and rigidly hard. Feeling the sharp intake of his breath where his mouth was locked to mine, where his tongue was now deep in my mouth.\n\nHis mouth lifted from mine, his eyes stayed locked to mine as his face twisted with pleasure, as he sucked in another breath, a soft groan escaping his lips as my hand stroked him fast. The sound of our breathing filled the small cubicle.\n\n\"I can't stop thinking about you.\" I moaned as one of his hands moved between us, cupped me between my legs where I was naked and exposed, his fingers exploring the smooth texture of my sex, one finger sliding deep inside me without any pause. I was so wet, so excited, his finger slipped into me so easily, my body welcoming his digital penetration, my hand still stroking him hard. Wanting him to take me, to do to me with his cock what his finger was doing.\n\n\"Girl, you've got no idea what you're doing to me,\" he growled, his other hand wrapping itself in my hair, pulling my head towards him, his mouth tight on mine, sealed to mine as he kissed me, as his finger moved inside me. I was as wet as he was hard, I could hear those wet noises as his finger explored me, teased me, feel my wetness soaking his hand where he cupped me. \n\n\"I want you ... I want you...,\" I moaned when his mouth lifted from me.\n\n\"Not here,\" he groaned, breathing hard, looking like a bull about to charge. \"Jesus, Jay-Lin.\"\n\nI didn't say anything but I wanted him so much. I wanted to satisfy him. Without a word, I dropped to my knees on the floor in front of him, feeling his finger slip from inside me, knowing exactly what I was going to do as that thick hard cock brushed my face. Knowing what I wanted to do. His cock held steady in my hand, I looked at him. I was sure guys didn't call their cocks beautiful, but it was. It ws gorgeous. Rigidly hard, gorgeous, veins straining under that silky skin, I couldn't wait to taste him, to run my tongue around the rim of that swollen cockhead. To take him in my mouth.\n\nI kissed the tip gently, licked it, licked one side, then the other, breathing hard myself, feeling my own wetness on my thighs. Lifting my mouth for a moment, I managed to gasp \"Sit down.\"\n\nHe did, sitting back on the cubicle's only chair as I dragged one of his boots off, dragged his jeans and boxers off one leg, pushed his knees apart, kneeling between them, pausing for a second to admire that wonderful looking cock. Only for a second. Then I held him in one hand again, my head lowered, licking him slowly from the base all the way to the tip, my tongue flickering over him, enjoying his hands stroking my hair. Enjoying the tenseness of his body as I cupped his balls in one hand and stroked his length with the other.\n\nWithout pausing, I opened my mouth wide, took him in my mouth, slid my lips down his shaft, down until the tip of his cock touched the back of my throat and my lips met my fist where I clasped him. I sucked hard, licking him as I pulled back, licking the tip as I lifted my mouth from him, blowing air over the tip, hearing is \"Oh fuck,\" feeling his body tense as my mouth slid down his length once more.\n\n\"Christ Jay-Lin, you're killing me.\"\n\nI sucked my way back up, lifted my mouth from him, smiled up at him as I very gently stroked his balls and his cock, both hands worked. \"Really?\" I whispered, my eyes looking up at him as I licked the tip again, ran my tongue around his glans.\n\n\"Yeah,\" he groaned, one hand stroking my head, the other entwining itself in my hair. \"You are.\"\n\nI licked him again, rubbing my nose, my cheek, my face against his saliva coated length, licking him again, sliding my lips over that swollen head and pausing, sucking, licking, bobbing my head slowly now, moving my lips and my tongue on the upper half of his length, my hand holding him now, not stroking him, loving the taste of him in my mouth, loving his excitement, his hard eagerness.\n\nI worked my head up and down on him now, looking up at him as I sucked and licked, sliding my lips up and down his shaft. I could feel his rising excitement through his body, the tension in his thighs, his hands where he stroked my hair, held my head, his breathe coming faster and faster. \n\n\"Oh fuck yeah baby,\" he gasped, \"suck me baby ... oh fuck yeah, suck me like that... Jesus Jay-Lin...\"\n\n\"Mmmmmmm,\" I hummed around his cock, my hand resuming stroking him as I worked my mouth on him, loving the feel of his skin sliding over the hardness beneath. His hips were jerking now, he was pushing his cock up into my mouth, his hand now holding my head, pressing my mouth down further on his cock. My jaw was starting to ache from holding my mouth open around his shaft but I didn't care. I wanted him to feel good, I wanted him to enjoy this, I wanted to satisfy him and I was going to suck him until he finished in my mouth.\n\n\"Fuck, Jay-Lin,\" he groaned, \"Oh fuck sweetheart, I'm going to cum ... you're going to make me cum...\" His hands had taken control now, moving my head on his cock, his hips jerking, pushing, thrusting, his cock moving in my mouth. I sucked and licked him eagerly, feeling his cock brushing my throat, not really sucking on him now so much as keeping my mouth wide open so that he could ease his cock in and out, using my lips and tongue and mouth to reach his release, a release I knew was coming soon.\n\n\"Ohhhh fuck sweetheard ... Uuughhhh ... uuughhhhh.\" He grunted, his hands holding my head, hips jerking, his cock blasting out his cum against the roof of my mouth as I did my best to seal my lips around him, lashing his cockhead with my tongue as I gulped and swallowed, gulped and swallowed, his cum flooding my mouth, hot and thick and acrid. I knew what to expect this time, I wasn't surprised and I loved the taste of him.\n\nThis time I managed to swallow all of it as fast as he filled my mouth, swallowing and swallowing again as his cum pumped out in spurt after spurt, the volume slowly decreasing until with a last shuddering jerk he finished. I kept his cock in my mouth as he subsided, once more stroking my hair gently, my mouth sucking gently, my tongue licking his clean as I swallowed the last of his cum. He was looking down at me now, smiling, breathing hard, happy and satisfied. My eyes watched him as I drew my mouth of him slowly, sat back on my heels, licking my lips, tasting him, enjoying the taste of him.\n\nMe, I smiled up at him. \"Did you like that?\" I breathed.\n\nHe smiled back. \"Oh fuck yes, I loved that Jay-Lin.\" His smile turned wicked. \"Now it's your turn baby.\" Before I knew what had happened, he'd slid out of that chair like lightning, lifted me and sat me in it, his hands lifting my legs, spreading my legs wide, hanging my knees of each arm of the chair so that I was wide open to him, those black leather chaps exposing me so openly to him.\n\nHis hands rested on my knees, holding me there while my face blushed bright pink. He smiled, his eyes dropping to look at my sex. I wanted to moan as he looked at me, feeling my own excitement rising quickly as his eyes looked at me there. Watching him kneeling in front of me, his hands resting on my leather-clad knees, holding my legs apart as he looked at me, that was driving me crazy. A week ago, I'd have been totally embarrassed and humiliated even thinking of myself doing something like this. Now?\n\nNow I cupped one of my breasts with one hand, stroking my nipple with my thumb while my other hand slid down over my stomach to slowly touch myself, feel my own wet excitement. Lightly brush my clitoris as he watched me, teasing myself, making myself gasp with pleasure. Looking down, I could see myself where I was spread so wide for his eyes, my labia so pink and swollen, wet, glistening under the light.\n\n\"You're beautiful,\" Keith breathed, his hands sliding up those leather chaps I wore to rest on my inner thighs, rest on my skin between the top of those chaps and the juncture of my thighs. I shivered, stifled a moan, but when his thumbs brushed the length of my labia, I had to moan. I couldn't stop myself.\n\n\"Oooohhhhhhh.\" Then \"Ooooooohhhhh\" again as his thumbs gently parted me, exposing my inner lips, my entrance, so wet, so wanting him. There were no words for how I felt in that moment, there was nothing but unadulterated sensation flooding my body, knowing that he was looking at me, seeing me. Knowing that he thought I was beautiful, knowing that he loved me. Knowing, as he lowered his head slowly, that he was going to kiss me there.\n\nA moment of shivering anticipation and suspense and then he did, his lips brushed against me, his tongue slid along me, slid up to lap at my fingertips where I touched myself, where I was still lightly teasing and circling my clitoris. He blew a cool breath across me where I was so hot and wet.\n\n\"Ooohhhhhh Keith ... Keith.\" My hand moved, lifted to rest on his head, stroke his hair as his tongue slid wetly over me, as he sucked my clitoris with his lips and stroked it with the tip of his tongue.\n\n\"Aaaahhhhhh...:\" Both hands clutched at his head, holding him. My head fell backwards, banged on the wall of the fitting cubicle. I didn't care, all I could do was stay where I was, limp, helpless, wide open, feeling his mouth on me.\n\n\"Uuuuughhhhhh.\" Feeling one finger ease gently into me, slide up inside me as his tongue lashed me, teased me, took me higher and higher.\n\n\"Baby, you're so fucking hot.\" His mouth lifted from me, his words vibrating through me as his finger explored inside me, his thumb on my clitoris now, stroking that swollen little nub, circling, touching, making me shudder, unable even to moan, my mouth wide open, working, no sounds coming out.\n\n\"You're mine, baby, you're all mine.\"\n\n\"Yes,\" I managed to gasp, \"yes ... yes I am ... all yours ... I'm all yours Keith.\"\n\n\"You are baby.\" His finger eased out from inside me, his mouth returned to me, his tongue sliding along the inside of my labia, flicking downwards, then up the other side.\n\n\"Nnnngggghhhhhh.\" My hips jerked, my thighs tensing, my hands holding his head, pushing myself against his mouth, feeling his fingertip tracing my vaginal opening as his tongue slid over me, taking me to the brink of my orgasm and holding me there ... Holding me ... holding me so that my breath caught ... I gasped ... my breath caught ... what he was doing to me ... Oh god ... ohhhh Keith ... Keith... I was going to die. I was going to die.\n\nHe pushed two fingers inside me.\n\n\"Aaaaagghhhhhhhh.\" I died. I did. My back arched, I cried out, my hips moved on their own, jerking wildly, my body shuddering, my hands clutching his head as his fingers inside me rubbed me somewhere that was perfect ... so perfect as his tongue slid over and around my clitoris and I didn't just think I was going to die. I was dying. I was, his tongue tracing circles of ecstasy around my clitoris, his two fingers pushed inside me stretching me, taking me to the limit. Taking me over.\n\nNow I was coming, my orgasm taking me in thick hot golden waves, bucking against his mouth, on his fingers, on and on and on in an endless haze of sensation that broke through my body, leaving me a mass of molten quivering jelly barely able to breathe. So good, what he'd done to me was so good and I loved him, I loved him so much and I had no way to put that love into words. Instead, my hands stroked his hair, stroked his head slowly as I struggled to breathe again, my body glowing.\n\nSitting on that fitting room chair, leaning back against the wall, panting like a steam engine, my hands holding his head as he rested on my stomach, one leg hanging over his shoulder, the other over the arm of that chair, I smiled, stroked his hair with one hand. Licked my lips, tasting his cum. Swallowing, tasting the residue of him coating my mouth, my teeth, my tongue. \"You like the chaps then?\" I breathed.\n\nHe laughed, lifting his head from where it rested on my stomach. His lips were wet and shining. Wet and shining with me. Actually, half his face was. That made me feel so special, so loved, knowing that he enjoyed me so much.\n\n\"Oh yeah,\" he chuckled, looking down. At me. At those chaps. \"We're gonna have to buy them now anyways I think.\"\n\nI looked down myself. My thighs, so wet. God, I was still so excited, so pink and wet. Those chaps, the leather shining where I'd made them wet as well. \"I guess we are.\" I was still panting for breath. But I had something else I wanted to say. \"Keith?\"\n\n\"Yeah baby?\"\n\n\"Can we buy the whip as well?\" My voice was a ragged whisper.\n\nHe reached out, picked it up off the floor where I'd dropped it, turned it in his hands, looked at me, his lips quirking as he ran his fingers down the braided leather. \"Sure, baby.\" He grinned. \"We better get you dressed before I'm tempted to use it.\" He brushed it down my inner thigh. \n\nI watched, shivering. Looked at him.\n\n\"Jesus, Jay-Lin, I love you.\" He kissed me. Gently. Tenderly. I tasted myself on his lips, on his tongue. Just as he was tasting himself on mine as our tongues met, entwined, teased.\n\n\"I love you Keith.\" We smiled into each other's eyes. Now I took the initiative, my tongue sliding into his mouth, kissing him, my eyes smiling into his. I could lose myself in those beautiful eyes, sink into them, drown in them forever. My lips lifted from his, I brushed my nose against his, my eyes still looking into his. \"Keith.\"\n\n\"Sweetheart\"\n\n\"I want you to make love to me soon, I don't want to wait too long.\" I brushed my face over his. \"I love you and I want you and I know we've only know each other a week but I want you so much.\"\n\n\"I know Jay-Lin, I know that.\" He stroked my hair back, now his face brushed mine so gently, his fingers stroked my cheek, caressing my face, transmitting love through his fingertips, sending little shivers through me. \"I love you Jay-Lin, I just ... you drive me crazy ... I don't want you regretting anything sweetheart, I don't want to rush you ...\" His smile was a little sad now. \"Honey, your eighteen, I'm way older than you and I really really really don't want you hurt, I don't want to push you, I want you to be very sure I'm who you want.\"\n\n\"Keith,\" I was holding him tight now, one hand stroking his hair, the other his back, pressing myself against him. \"Keith, I know. I know! how I feel about you, what you mean to me. I'll never regret anything we do together. All I know is I love you and I want you more than I've wanted anyone or anything in my life.\" I smiled into his eyes. \"Keith, I don't do crushes, I've never dated a guy I was serious about in my life. They didn't nickname me the Ice Princess for nothing.\"",
        "His eyes widened. \"Ice Princess? I don't think so! You, Jay-Lin Liu, you're the hottest thing since Mauna Loa erupted.\"\n\nI couldn't help it. I giggled. \"Says you.\"\n\n\"Says me.\" He slapped my butt, grinned. Stood up. \"Clothes my little volcano, now.\"\n\nHe hadn't answered me but I stood up anyhow. Undid the chaps, peeled them off, stood their naked. Giggling at the look on his face. Not giggling as his hand reached out and cupped my breast, caressed me gently. I just looked at him, wanting him so much. Loving him so much. \n\n\"I think that's what they call bedroom eyes,\" Keith's voice was low, reverberating, rumbling. Driving me crazy. His hand left me, slowly. He knelt, picked up my panties, held them for me. I rested one hand on his shoulder, stepped into them, first one foot, then the other, stood there as he pulled them up, all the way up to my thighs. He kissed me. Kissed me there, where I was still so wet.\n\n\"Ohhhhhh.\" My hands clutched at him as his tongue slid over me. Tried to hold him close as he pulled away, as his hands pulled my panties all the way up, covering me. \"Spoilsport.\"\n\nHe laughed, a low throaty laugh. Picked my jeans up off the floor, helped me into them, stood with them, his eyes looking into mine as he zipped them up on me, very slowly. Fastened them. His eyes held mine as he found my bra where I'd hung it off a hook on the wall, he slipped it on me, his fingers stroking my arms as I adjusted it. \n\nI turned, my back to him. \"Hook it for me.\" My voice was a whisper.\n\nHis lips touched the back of my neck, my shoulder, brushing across my skin, adjusting my bra, hooking it for me. His hands found my top, passed it to me. His eyes watched me as I pulled it on over my head, pulled it down.\n\n\"You're so beautiful, Jay-Lin.\" His eyes told me those words came from his heart. They pierced mine. I almost fell into his arms, just wanting him to hold me. He did, holding me, cherishing me, his breath hot in my hair. Now I could smell his sweat, I wanted to rub my face against his skin, rub myself all over him, absorbing that smell, absorbing him. Which was when I realized he was still naked from the waist down, his jeans hanging off one ankle. I had to giggle. \n\n\"What?\" he asked.\n\nMy hand slipped down, found him, held him gently. I batted my eyelids at him. \"Want to start over again?\" I giggled when his cock twitched in my hand.\n\nHis look turned my giggle to a little gasp. Oh god, yes. \"We'll go back to my place this afternoon before we go to your sister's,\" he breathed in my ear.\n\n\"Promise?\"\n\n\"Promise. Now we better get dressed, I really need that coffee sweetheart.\" He grinned. \"Although I'd rather taste you.\"\n\nNow I blushed. Blushed and giggled. Because I'd rather taste Keith's cum. But I needed that coffee too. A quick glance at his watch as we emerged at last from the fitting cubicle. Still nobody else in the shop. \"We've got fifteen minutes sweetheart, the coffee shop's next door.\" \n\nPunch stuck his head out through the bead curtain. \"Good, you're here, come and try it on, I'll adjust it and finish stitching it up, you can grab that coffee while I do that.\"\n\nThe jacket looked beautiful to me. Punch wasn't happy. He poked, prodded, tweaked, muttered to himself. \"Okay, take it off now. Go grab your coffee, it'll be ready in fifteen minutes, maybe twenty.\"\n\nWe were back in twenty. I'd used the washroom in the coffee shop to clean up a bit. The coffee had washed away the taste of Keith's cum. Unfortunately. I liked that taste. But I liked my morning coffee too. Punch walked out from the back as we walked across the shop towards the counter. He held the jacket up, looked at it for a second; passed it to me. \"Here, take yours off and try it on, Blue.\"\n\nI did. It felt beautiful in my hands, thick, soft, pliable leather with that brand-new leather smell. I wanted to rub my face in it but I didn't. Instead I shrugged it on, loving the feel of it right from the start. Heavy but supple, not thin and flimsy, but not too heavy for comfort either. The zippers on the front and the pockets moved easily.\n\n\"Zippers on the wrist here,\" Punch pointed. \"Makes it easy for on-off with your gloves. Zippers on the hips so you can adjust it for riding or walking around. Inside pockets zip so you don't lose shit outa them. These snaps here.\" He showed me. \"Snap the collar down so it don't blow round if you wanna leep it down in summer, unsnap and it zips all the way up for riding when its colder.\"\n\nI looked in the mirror. God, it looked so cool. \n\n\"You got that winter lining, I left that in coz it's still a bit cool, you take that out for summer.\" Punch peeled the jacket off me, showed me. \"There's a mesh liner as well, lets the jacket breathe in hot weather, you got back vents here with hidden zippers, hidden zippers here in the inner upper arm so you got air vents there in summer as well, stops you getting all hot and sweaty.\"\n\nHe and Keith grinned at each other. God, what was it with guys?\n\n\"Sleeves feel a bit long but that's for riding, you need 'em slightly longer when you're on a bike so don't think that's a mistake, it's not.\"\n\nI nodded. I'd noticed that, I'd been going to ask him that.\n\n\"Armor you can insert here.\" He showed Keith. \"Armor's extra, you want me to order it for her? Haven't got any inserts her size in stock but I can get it this week if you want it.\"\n\nKeith nodded. \"Yeah, go ahead and order it Punch.\"\n\n\"You got it, bro. Be here for next Friday.\"\n\n\"I'll drop by, pick it up. You can do the rockers now?\"\n\nPunch grinned. \"Yeah, got them ready, wanted to see if the fit was right first but we got it right first time, we'll do them now.\" He looked around. \"Angela?\" He passed her the jacket.\n\n\"Be ready in five, you sort out that other stuff they want, Punch.\" She took it out back, I could hear the sewing machine already stuttering away while Punch was still looking at everything else sitting on the counter.\n\n\"Glad you picked those for her.\" Punch turned the gloves over. \"Lot of work goes into these,\" he was talking to me now. \"They're about the best you'll get.\" \n\nI waited for Punch to ring the cost up on the old till. I wondered if I should try and beat Keith to the draw and pay myself. But no, he'd already made it clear he was paying. Remembering that look on his face, I wasn't going to argue that one with him again. But I'd done the math in my head, I knew what everything except the jacket cost and if it was anything like the ones on display, I had a good idea. Now I was embarrassed. This was way more than my clothing allowance for the quarter. It was too much. He was spending way too much on me. I should at least offer to pay some of it. I couldn't let him spend all that on me. I just couldn't.\n\nPunch scribbled something down on a bit of paper. Showed it to Keith. \"We're good?\"\n\nKeith nodded. \"Yeah, we're good.\" He smiled at me. He knew what I was about to say, his finger touched my lips. \"Shhhh Jay-Lin, I told you, I got it, okay.\"\n\nI took a breath. Took another breath. I knew he wasn't going to let me pay a thing. He had that look on his face. I nodded. Reluctantly. \"Okay.\"\n\nKeith smiled, turned back to Punch. \"Thanks Punch.\" He was handing over a wad of cash. No ringing it up on the till. No receipt. Okay, I did blink. Mom, Dad, they always got receipts. So did I. Religiously. You needed them for warranty, for returns. For Mom and Dad's tax deductions. Keith saw my glance. Laughed. \n\n\"Punch and I go way back Jay-Lin, his leathers, they're the best. Made by Punch, that's all the warranty you need.\"\n\nPunch grinned. \"Lifetime warranty, Blue. Anything goes wrong, you just bring 'em back in. Don't need a receipt, I know my work. That jacket, you look after it, it'll last longer than you will, Blue. You'll be able to pass it on to your kids. Hell, look after it, maybe your grandkids.\"\n\nI looked at Keith. Thought about us. Kids. Grandkids. I put my arm around his waist, leaned in against him, nestling into him, my head against his shoulder. Loving him. Content to be with him. Smiling.\n\nAngela came out holding my jacket. \"Here you go, Blue.\" She placed it on the counter, back facing up. \"That what you asked for, Round Out?\"\n\nI looked. It read \"Property of\" in a big half circle at the top, \"Round Out\" in a matching half circle at the bottom and a big blue and black flower patch in the centre. Keith nodded, glanced at me, I was smiling. Property of Round Out, that was me. I liked that. I wasn't sure about the flower. Looked like deadly nightshade or something to me but it was probably supposed to be some sort of rose. I wasn't going to say that though. Whatever, it looked wonderful.\n\nPunch flipped my jacket over. \n\nKeith pointed. \"This here's your handle, Jay-Lin, this one just above the right breast pocket.\" Where it read Baby Blue. Above it was another small patch that said \"Southern Boozettes.\" Keith pointed. \"That's the one for SBC 'Ol Ladies.\"\n\nMe? That was me! Okay! I hugged Keith with one arm, stroked that leather with my free hand.\n\nAngela grinned at me. \"Welcome to the Southern Boozette's, Blue. I'm Judy. Punch 'N Judy, get it.\" She laughed.\n\nThere were two Chinese characters sewn above the left breast pocket. \u516c\u4e3b. I tried to remember what they were. My written Chinese was hopeless but that did look familiar. Kind of. I glanced at Punch, then Keith. \"Uhhh, I know I look Chinese, but I don't speak it and I sure don't read it.\"\n\nKeith grinned. \"Princess,\" he said knowledgably. Like his Chinese was better than mine.\n\nI punched his arm, giggled. \"Show-off, you don't know any Chinese.\"\n\nPunch laughed. \"I do, Blue. Learnt some way back when in Taiwan.\"\n\nKeith laughed, took me in his arms. \"Remember back when I called you Princess, baby, your face just lit up. So I asked Punch to put that in Chinese for me, it's special to you and me baby, if anyone ever asks you what it means, you don't tell them, tell them to come talk to me.\" He chuckled. \"And I'm not gonna tell 'em, that's special baby, just for you and me and I wanted this jacket to remind you how I feel about you every single time you wear it, okay.\"\n\nI hugged him, tears in my eyes. Tears of happiness. \"I always will, Keith. Thank you.\" I kissed him. His arms wrapped around me, held me close. \n\n\"That's so sweet,\" Angela said. I swear she had tears in her eyes as well.\n\nPunch grinned. \"And me, I already forgot. Now, you got your 'Ol Lady's jacket Round Out, I better get back to work bro, got someone coming in in half an hour to pick up his jacket and I ain't started it yet.\"\n\nI smiled back, stroking my jacket. \"Thanks Punch, it's wonderful.\"\n\nKeith nodded. \"Yeah Punch, thanks a million man.\"\n\nPunch nodded. \"Hey Round Out, anything for a brother. Where ya off to now?\"\n\n\"Ace Caf\u00e9,\" Keith said, grinning. God, it was that guy grin again. I just looked at him. \"Brunch.\"\n\nOh yeah, good idea. I was hungry. Shopping. It was hard work. Or maybe that was our little interlude in the fitting cubicle. Whatever, I was starving.\n\n\"You'll like the Ace,\" Punch said to me. Then, to Keith, \"Next time, Round Out. Good meeting 'ya Blue.\" He was already heading back out to the workshop with Angela. She gave me a wave.\n\nI waved back. \"Nice meeting you too, Punch, and thanks a million, thanks Angela.\"\n\n\"Why don't you put your new leathers on,\" Keith said to me, \"I can put your jeans and jacket and sneakers in one of the saddlebags.\"\n\n\"Okay,\" I said. Then, \"Chaps or trousers.\"\n\nHe looked at me. Snorted. Shook his head. \"Trousers,\" he said, \"if I see you in those chaps again today we'll never make it to the Ace Caf\u00e9, 'n we're meeting a brother there.\"\n\n\"Okay.\" I took the trousers, boots and jacket in with me. Came out five minutes later carrying my jeans and sneakers and my old windproof jacket. My new one was beautiful. I'd have been quicker but I'd spent a couple of minutes admiring myself. Passed them to Keith, took my new helmet and my new gloves. We walked outside into the late morning sun together. While he packed everything away in one of the saddlebags, I slipped my new helmet on, flipped the visor up, fastened the strap, pulled on my new gloves. Now I really looked like Round Out's girlfriend. I looked like I really belonged on the back behind him. Although I did wonder what Motorhead was? Something to do with motorcycles at a guess. One more thing to ask Keith.\n\nI was smiling as his Harley grumbled into life. Smiling as I swung myself onto the seat behind him. Smiling as we rolled out of the parking lot, turning onto the street, heading back towards the freeway on-ramp. On the back of his Harley in my awesome new leathers and boots and gloves and my absolutely cool helmet. I wasn't just Jay-Lin anymore. Round Out's 'Ol Lady, that was me. I was Baby Blue, Property of Round-Out and I had the leather motorcycle jacket that said so. I wanted to dance and sing and spin in little circles. But most of all I wanted to hold Keith tight. \n\nSo I did, squeezing myself up against as back, my arms around his waist, holding him tight, leaning easily with him as we curved through the on ramp and onto the freeway, heading further out of town, the bellowing thunder of the Harley around us music to my ears as we merged into the traffic. There was more of it now, cars, trucks, we wove through them, moving from lane to lane, the Harley's power taking us through the gaps easily. \n\nKeith wasn't racing, wasn't hurrying, wasn't racing, we weren't riding the white lines. Just powering down the highway easily, those curves between lanes nonchalant, relaxed, Keith totally in control as he wove us through the traffic. I sat behind him, holding him, leaning in against his back, comfortable in my new leathers and my boots and helmet, wind in my face, sun on my back. I was with Keith, riding down the freeway on the back of his Harley, he loved me and we had all day together and we were going back to his place again later and he was coming to Sally's for dinner with me this evening. \n\nAnd ... and ... and life was as perfect as life could be.\n\n<p align=\"center\"><bold> * * * </bold></p>\n\nIt wasn't too long before Keith took us off the freeway, slowing as we exited, turning into a strip mall almost by the off ramp. Looking over his shoulder, I could see we were heading towards a long building at the far end of the strip mall. The sign across the front read \"Ace Caf\u00e9\". The parking lot out front was filled with motorcycles. Row after row of them. Keith slowed, we were idling now, just that low potato-potato-potato burble as we eased through the strip mall parking lot towards the Caf\u00e9. \n\nWe passed the first few rows of bikes, lined up in neat rows. I wondered where we were going to stop. Right in front of the Caf\u00e9, the spots were almost empty, three Harleys on one side, half a dozen on the other. Keith wheeled us in on the side with half a dozen bikes, pulled us up there, turned the engine off. Looking at the rows and rows of bikes as I swung myself off, now I felt nervous.\n\nKeith took my helmet from me, sat it on the seat. Gestured with one hand as he peeled his gloves off, tucking them in a jacket pocket. \"These spots here, these are SBC only, that side, that's reserved for any Satan's Slaves.\"\n\n\"Satan's Slaves?\" \n\n\"They're the big one percent Motorcycle Club around here.\" He grinned. \"You don't fuck with those guys. And you sure don't park in their spot.\" He grinned. \"Same as this side, you don't fuck with the SBC brothers, this side is our spot. Now, let's get inside, Joker's already here.\" He pointed. \"That's his ride, him and Jen should have a table.\" He looked at the other Harley's. \"Yeah, there's a few more of the brother's here, going to introduce you to them on the way in, you good?\"\n\nI smiled. Swallowed nervously. Just a little, but I was with Keith. I didn't need to be nervous. Tucked my hand in his arm. \"I'm good, introduce away.\" But there was still that sinking feeling inside.\n\nHe gave me a smile, led me towards the door, led me inside. It'd been quiet outside, just traffic noise from the street, muted, nothing special. The doors opened. A wall of noise hit me. No music, just voices. Loud voices, a sea of people talking. The place was big and it was full. The smell of coffee and food filled the air, a warmly delicious smell of brewing coffee, fresh bread, pancakes, hash browns, fried eggs and bacon, steak and sausages on the grill, all rolled into one giant wave of tantalizing odors that left me feeling hungry, my mouth watering right away. Nobody took any notice of us as we walked in together. A couple of bikers came in right behind us, eased past us as Keith paused, looking around.\n\n\"Hey.\" He grinned down at me. \"Friend of mine over here, haven't seen him for a while.\" He led me round towards a table against the wall, of to one side of the main entrance. Three guys sat there. Bikers. I could tell at a glance these guys were bikers like Keith. Two of them were big and mean, the third was smaller, relaxed looking, wearing just that jerkin thing and old denim jeans, nothing underneath that jerkin. It hung open. As we came closer I could see his chest and arms were decorated with a patchwork of small tattoo's. Closer, I saw each of those tattoo's was a miniature crossbones. Strange.\n\nAll three of then looked up as we paused next to their table. The two big guys looked I-don't-give-a-shit indifferent. The small guy's expression was cold, remote almost, his coffee mug half way to his mouth. When he glanced up at Keith, his expression changed, transfiguring into someone completely different. A broad smile crossed his face, his eyes lit up, his mug slammed down on the table, startling me. He almost leapt to his feet, kicking his chair back.\n\n\"Round Out, good to see ya bro. Been too fuckin' long.\" \n\n\"Tunes . How are ya, brother?\" \n\nThey hugged each other. An extravagant arms around each other, Tunes face pressed into Keith's shoulder, Keith holding his head, patting each other's backs kind of hug. Way huggier than that hug Slider and Keith had given each other earlier. I wasn't quite sure what to think about all this guy-hug stuff, but okay, I wasn't surprised anymore. I wasn't asking either. I was starting to get used to it. One of those things I guess. \n\n\"Hey Roo, Drop, this here's Round Out, him and me, we were in the Army together, he's a real brother in need bro's, the real deal, used to ride with Round Out before I patched over, he covered my back more times 'n you can count.\"\n\n\"Satan's Slaves, Roo.\"\n\n\"Satan's Slaves Prospect Drop.\" \n\n\"Southern Booze Cruisers, Round Out.\"\n\nThey didn't hug, they clasped hands. That kind of \"size each other up, look each other in the eye\" grip that guys sometimes do when they're meeting someone for the first time. Kind of like big dogs bristling and sniffing each other. I didn't say that, and looking at them, it was easy not to giggle at the thought. Very easy. They nodded at each other, a little stiffly, but those two mean looking dudes looked a bit more relaxed now, friendlier. Like you could call them friendly.\n\n\"Who's this gorgeous lady?\" Tunes asked, looking at me.\n\n\"My Ol' Lady, goes by Baby Blue.\"\n\n\"Good to meet ya, Blue.\" He gave me that nod. Roo and Drop nodded my way as well.\n\nNervous, I nodded back, a bit jerkily, saying nothing. These guys, they weren't as big as Meek but they sure looked scarier. Tunes didn't. Tunes looked like a happy-go-lucky sort of guy and he was only a couple of inches taller than me. But Roo and Drop, they were almost as big as Keith or Meek and they looked a lot rougher. Meaner. Way more dangerous. The sort of guys that if I'd seen them in the street, I'd have crossed to the other side to go round. Or better yet, just turned and walked the other way. Fast. Looking at them, I could kinda understand why Kitty Kat's needed a guy like Olaf hanging around.",
        "\"Well, better move on, Tunes, gotta grab some food.\" Keith nodded at the other two. \"Roo, Drop, good meeting you guys.\" They nodded back, sat back down.\n\n\"Good seeing ya, bro,\" Tunes grinned, slapping Keith's shoulder. \"Blue.\" He gave me another nod. \"I'll drop over before I go, Round Out, saw Joker come in, you looking for him?\"\n\n\"Yeah, bringing Blue over to meet him and Jen.\"\n\n\"Okay bro, sounds cool, be good to catch up with Joker, haven't seen him for too long either. Nice meeting ya, Blue.\"\n\nI smiled back shyly, tucked in close to Keith, holding Keith's hand as we threaded down the aisle towards the counter. I saw someone I knew, that guy Seth, sitting with a couple of other guys and a girl. Danielle? From Kitty Kats? He was looking our way, not saying anything. Looked like he wanted to though. I gave him a wave, a smile. \"Hi Seth. Hi Danielle.\" I knew one of the other guys. He'd been with Seth at Kitty Kat's. What was his name?\n\n\"Hi Blue.\" Seth grinned, gave me a small wave. \n\nDanielle grinned a big shit-eating grin. \"Hi Blue, how are ya' Round Out.\"\n\nBeside me, Keith looked around, looked startled for a second. \"Hey, Seth, how are ya man? Danielle, looking as good as ever.\" A little surge of jealousy ripped through me. Just for a moment. But I knew I didn't need to be jealous. Not the way Keith looked at me.\n\n\"Round Out... doing good man, real good.\" Seth looked pleased, even more pleased when Keith reached out, took his hand, slapped his shoulder. \n\nKeith glanced at me. \"You guys met?\"\n\nI grinned. \"Yeah, on my way to Quebec's with Olaf last night. Olaf introduced us.\"\n\nKeith raised an eyebrow. I giggled. For once it was me surprising Keith. \"Met Danielle as well, she wanted to hear all about how you and me met.\" I giggled again as he raised an eyebrow. Danielle's grin grew larger still.\n\n\"Kitty Kat's huh, what'd you think of that place?\"\n\n\"It was interesting,\" I smiled, eyeing him, thinking of that girl dancing on the bar. Thinking of doing that with Keith. Danielle giggled. \n\n\"I gotta hear about this later,\" Keith was grinning. \"Hey Seth, meeting Joker, you seen him and Jen?\"\n\n\"Yeah, sure have Round Out, they got a table over there by the window.\" He gestured. Keith looked, waved. I saw a big guy with lots of hair and a shaggy beard wave back. \n\nKeith grinned. \"Thanks man. Hey, you coming next Sunday?\"\n\n\"Couldn't keep me away, Round Out.\" Seth grinned. Gestured with his head at the two guys he was sitting with. \"Greg and Steve were wondering if they could come along for the ride, told 'em I'd ask.\" I remembered Greg now; he'd been with Seth at Kitty Kat's. \n\nKeith looked at them. I followed his look. They were sort of like clones of Seth. Young guys, early twenties maybe, eager, enthusiastic. They looked tough, way tougher than those rice boys that the Chua bitch hung out with but not tough and mean like those Satan's Slaves. Not tough like Keith or Olaf or Meek or Quebec. \"Hey, it's a fun run, not an official Club run, no harm in you guys coming for the ride, you've been around for a while, right? You already met a few of the brothers? Seen you guys round here 'n there.\"\n\nGreg nodded. \"Yeah, know Olaf and Meek and Goblin 'n we rode a few times with Noodle 'n Romeo.\"\n\n\"Watcha riding?\"\n\nGreg grinned. \"Sportster, Iron eight eight three.\"\n\nKeith looked at Steve. \"You ride that old V-Rod Muscle, right?\"\n\nSteve nodded. \"Yeah, that's me.\"\n\n\"Those'll do it,\" Keith nodded. He looked them over again, slowly. \"Yeah, Seth. You bring 'em along on the run, anyone asks, you can say you cleared it me with, okay. Why don't you guys come along after the run, we're doing a barbeque, we can have a chat, maybe introduce you to a couple more 'a the brothers. I'll call around, let 'em know you're coming.\" He eyed them for a long moment. \"You guys remember, you're my fuckin' guests 'n Seth asked if you could tag along. No fucking around on the run and mind your fuckin' manners at the barbecue, clear? Includes you, Danielle, no fuckin' stripping at the barbecue, okay, you come, you fuckin' behave. None of that kittie kat shit, we good?\"\n\n\"Yeah, we're good. That'd be great Round Out, thanks man.\" Greg looked like his day'd been made. Actually, all three of them did. \n\n\"Appreciate that, Round Out.\" Seth looked like he was on Cloud Nine or something.\n\nDanielle nodded. She wasn't smiling now.\n\n\"See ya next Sunday then, Seth. Greg. Steve. Danielle.\" Keith nodded, turning away.\n\n\"Bye guys, bye Danielle.\" I followed, smiling, not feeling quite so much the outsider. They were already talking away animatedly as we moved on.\n\nIt took us ten minutes to get to the counter. Every second table someone seemed to know Keith. We'd pause, Keith and whoever would chat, he'd introduce me as Blue, his Ol' Lady. They'd look at me, nod, smile; I'd nod and smile back. I lost track of the names right away. There were just too many of them. One thing I was sure of, Keith was showing me round, introducing me. They'd all remember who I was, they'd know I was Keith's. Know I was Round Out's 'Ol Lady. \n\nWe met four more of Keith's SBC brothers. I did try to remember their handles, failed miserably. There were just so many names and they came one after the other.\n\n\"What about Joker?\" I asked. \"Is he expecting us or anything?\"\n\nKeith grinned. \"He knows the game, told him I was bringing you. No worries, he ain't in no hurry, not today.\"\n\nThat was a relief. But I was getting hungry. Breakfast had been a while ago. At least the menu on the wall about the counter was easy to read. I was busy checking it out when Keith patted my butt. God, every time he did that I just wanted him. \n\n\"You hungry sweetheart, want to order?\"\n\n\"Yes please.\" I giggled, looked up at him. \"I'm starving.\"\n\nNow he grinned. \"Okay, let's do it. You know what you want?\n\n\"Yeah, an omelet.\"\n\n\"Seriously? That's it? An omelet?\"\n\nI laughed. \"And an English muffin and coffee. I'm dying for another coffee.\"\n\n\"Me too.\" He led me up to the counter. \"Hi Mitch, what's good today? Don't want food poisoning.\"\n\n\"Bite me, Round Out, it's all good.\" She laughed at him. Grinned at me, peered at my jacket. \"Hi ... Blue, what'll you have? The asshole you're with can wait his turn.\"\n\nI laughed. \"Tomato and spinach omelet with a side order of salad and one English muffin, no butter, and a large coffee, black, no sugar.\"\n\n\"No wonder you're so slim sweetie. Now, what's the asshole with you having?\"\n\nKeith laughed. \"Same as always, Mitch, the ribs breakfast special 'n a large coffee, double cream no sugar.\"\n\n\"Oooooh,\" Mitch said, \"that cream, it'll kill you Round Out.\"\n\nThey both laughed. Mitch rang it up, Keith paid, got a ticket back. \"Be ready in five, maybe ten minutes,\" Mitch said. \"You enjoy yourself Blue. ... NEXT ... come on, shake your ass, dude, shoulda made up your mind before you got up here, there's a queue here donchaknow 'n there's some hungry mothers behind you ...\"\n\n\"Okay, let's go siddown with Joker and Jen.\" Keith smiled at me. Anxiously? Huhhh...? Keith. Anxious? \"Joker and I, we go way back, Jay-Lin. High School together, went into the Army together, he's a bit ... he's ... \" He shrugged. \"You'll see, just take him as he is, okay, he's a real brother ...\"\n\n\"And you guys go way back.\" I smiled up at him. \"Don't worry about it Keith, I'm good.\" I had another question though. \"Why's everyone we talked to up this end of the Caf\u00e9? Who're all those guys down the other end? They're dressed real different.\" They were. Up this end, everyone was in black or brown leather, denim jerkin things, old jeans or leather trousers. Down the other end, they were far more brightly colored jackets with names like Dainese, Spidi, Alpinestars, REV'IT, Joe Rocket and more. They were a lot different to the leathers Keith and I wore. The guys wearing them mostly looked younger as well. In the center of the Caf\u00e9, it seemed to be a bit more of a mix.\n\nKeith grinned. \"Wondered if you'd notice. It's the great class divide. Harley riders and bikers this end, Rice Rocket riders the other end, euro trash in the middle.\"\n\n\"Euro trash?\" I mean, I got Rice Rocket, that was obvious, but what the heck?\n\n\"Guys that ride European motorcycles. Beemers, Ducati's, Moto Guzzi's, there's a coupla others. Guys that ride Triumph's, that's a Brit bike, there's not that many round here but they kinda qualify to sit with the Harley guys.\"\n\n\"Like that AJS in your workshop? And that other one, what was it?\"\n\n\"Yeah, that's right.\" His grin lit me up. \"You remembered those, sweetheart? That other one, that's an old Norton Commando, real old classic bike that one. That'd qualify for sure if anyone around here rode one ... Hey Joker, Jen, this is Blue, also known as Jay-Lin.\"\n\n\"Hi Blue, we've heard so much about you.\" Jen was standing up, hugging me. Tall leggy blonde was my first impression, a lot older than me. Late twenties? But a big friendly smile as she looked at me. \"He's already got you your jacket huh? Fast work, Round Out. Punch made it for you?\" That last was directed at me.\n\n\"Yeah.\" I smiled back. \"This morning before we came here.\"\n\nJen laughed as she sat down, patting the chair next to her. \"Okay, Round Out's pulling out all the stops here, how'd you swing that with Punch, Round Out?\"\n\nKeith grinned, one arm around Joker's shoulder as he sat down. \"I begged. But hey, you know Punch, he came through.\"\n\n\"Yeah, he always does.\" Joker spoke for the first time, slowly, watching me. \"Nice to meet ya Blue, gotta say, you're not what I expected.\"\n\nI giggled. \"Why does everyone that knows Round Out say that? You should've seen Danielle's face last night. And heard her. She thought Olaf was pulling her tit.\" Yeah, that was what she'd said.\n\nJen laughed. \"You met Danielle?\"\n\n\"Yeah, Olaf took me in to Kitty Kat's to help him on the way to Quebec's gym.\"\n\nJen threw her head back and laughed. \"God, I wish I'd been there. Round Out said you were in High School. Saint Bernadette's? You weren't wearing your uniform were you?\"\n\nI nodded. \"Yeah, I was.\"\n\nJen was laughing so hard she had tears trickling down her cheeks. She was trying to say something but she couldn't.\n\nJoker raised an eyebrow, still looking at me with that disconcertingly piercing gaze. \"So what'd you think of Olaf?\"\n\n\"Scary,\" I said, very firmly. \"Very very scary and he was really nice to me.\"\n\nJoker nodded, grinned for the first time. \"Yeah, Olaf's like that.\"\n\nKeith looked serious now, his arm still around Joker's shoulders. \"Olaf and Joker and I go way way back Jay-Lin, we were in the Army together, same unit over in the 'Stan, did three tours together, Joker and me and Olaf and Quebec and Tunes. Went through a lot of shit together didn't we, Joker.\"\n\n\"No shit, man, the 'Stan, that place was something else.\" Joker shook his head, he and Keith sharing a look. \"You've been through that shit together, you got a bond, something you don't understand 'less you been through it yourself. Thicker than blood.\"\n\nJen reached across the table, punched Joker lightly. \"Lay off that shit, Joker. We're here to have fun and meet Jay-Lin, 'kay? Don't be telling war stories now, save that shit for when you guys go drinking without us, okay.\"\n\nJoker laughed. \"You got it Jen. But seriously, I wanna hear what went down at Kitty Kats.\"\n\nI grinned. \"Well, every guy I ran into thought I was a stripper. Until Olaf or Meek put them right. I got tipped twenty bucks on the way out the door.\"\n\n\"Huh?\" Keith looked a bit shocked.\n\nI giggled at the look on his face. \"Yeah, but Meek and Olaf scared them off. I gave the tip to Meek to buy a beer with after he finished work. Him and Olaf, they thought it was funny.\" Well, so did I now. I'd been a bit indignant at the time, but now it made me smile.\n\nJen was laughing again. \"Jesus Christ, I wish I'd been there,\" she managed to say. Her laughter was infectious, Joker was chuckling. Looking at me and chuckling. Keith was looking at me and grinning, shaking his head.\n\n\"Number 64\" the speakers said, \"Number 64.\"\n\nThat was us. \"I'll get it,\" I said, standing, taking our ticket from Keith's hand. I'd already noticed that it was always the girls going to get the orders from the Counter. Not the guys. Unless they were by themselves. No way was I going to embarrass Keith by letting him get our order when he was with me. I knew he'd been going to, I'd seen him start to move but I was faster. I gave him a little smile. He smiled back. I didn't need him to say anything. That smile told me I was doing the right thing.\n\nTicket in hand, I threaded down the aisle. I liked this Caf\u00e9. It was humming, friendly, social. Camaraderie. That was what it was. Most of the guys here looked pretty scary, a lot of the girls did too, but once I kind of got past the scary factor, there was an atmosphere of camaraderie. Testosterone loaded camaraderie mind you. A lot of them seemed to know each other, exchanged greetings, slapped each other on the back, hugged each other, pushed past each other; joined the tables of people they knew. Just like we had. I liked that. I almost felt part of it except I didn't really know anyone except Keith. But they accepted me because I was with Keith and my boots and my gloves tucked in one pocket and my leather jacket said I belonged. I was the only Asian girl there, but nobody gave me a second glance.\n\nAt the counter, I swapped my ticket for the tray. \n\nThen blinked.\n\nI hadn't expected quite so much food. I could tell which was Keith's plate and which was mine, no problem. None at all. That gigantic oval plate loaded with a huge rack of ribs coated in hickory and hoi-sin sauce with a side of what looked like half a loaf of corn bread and four poached eggs was his. Definitely. Mine? A humongous tomato and spinach omelet with a side order of salad and one English muffin, no butter. My mouth started watering. I wasn't sure that I could eat it all but I was sure going to try.\n\n\"I'll bring your coffee over, honey,\" the waitress smiled, \"just making a fresh pot.\" A second later she looked past me, her eyes widening.\n\n\"Hey slant-eyes, ah figure you can come back with me and sit on my face. Ah always wanted to see if gook pussy goes sideways.\" The voice came from behind me. Skanky breath and a wave of body odor came with it. Gross.\n\n\"Huh?\" My heart jumped. Keith'd said nobody would bother me with that new jacket that said I was his. Who was this guy? I turned around, stunned, holding the tray with our order. \n\n\"Siddown before you get yourself in a shitload of trouble, Luther, she's with ...\" The waitress was loud behind me.\n\n\"Fuckoff Mitch, mind your own fuckin' business...You heard me Mulan, come and sit on my face.\" His breath was even worse when I faced him. Waaaay gross. Jesus, he was huge. A bear of a guy, almost bigger than Keith. Unshaven, blood-shot eyes, tatty old denim jacket, not a Cut. Even I knew he wasn't a real biker. Maybe a wannabe. But really, just an asshole. A huge asshole. I was too shocked and startled to be scared.\n\n\"Go fuck yourself asshole, I'm with someone .., and I wouldn't touch you with a barge-pole if I wasn't, you smell like a skunk.\" I wasn't keeping my voice down either. Jesus, where'd all this confidence come from? Last week, before I met Keith, I'd have screamed and run. Really, I would've.\n\n\"Well fuck who you're with, and who the fuck're you calling asshole you little gook slut?\" His voice was as loud as his breath was skanky. He started to crowd me. I had to step back, banging into the counter.\n\n\"Who the fuck are you calling a gook slut, asshole? I'm Chinese, not Korean.\" I was angry, not scared. Was he nuts? Hadn't he seen my jacket? Or was I nuts, standing their swearing back at some monster? Shouldn't I just drop the tray and run? Where was Keith?\n\nThe asshole teleported three feet away from me. I watched, relieved but also fascinated as his head jerked back; his body arched. The sound of a fist impacting his body came a fraction of a second later, a solid thump as Keith's fist sank into his side to the wrist, so fast I could barely see it. Keith's other hand was wrapped in the asshole's long greasy hair, snapping his head back, holding him up by the hair as his knees buckled.\n\n\"Who the fuck are YOU talking too, Asshole?\" Keith's voice was a wolf's snarl. His fist blurred again, pile-drivered into the big asshole's gut. He would've doubled over except Keith's hand wrapped in his hair held him up. I watched, wide-eyed, my heart beating like a rabbits. I wasn't worried about Keith though. I knew he could look after himself. Not just that, he was looking after me.\n\nThe Caf\u00e9'd gone dead silent in an instant. Heads turned our way, watching. Joker was on his feet, moving towards us. Tunes and those two Satan's Slaves he was with. Those other SBC brothers I'd met coming in and that hang around, Seth, along with the two other guys with him, Steve and Greg, they were pushing fast down the aisle towards us as well, other bikers and their girls getting out of their way. When the Asshole didn't struggle, when the guys the asshole had been sitting with didn't move, when the asshole didn't fight back, they returned to their seats, sat back down again. Slowly. The way a pack of wolves sits. Alert. Watching. Intent.\n\nSo was I. Watching, that is. I wasn't scared, I was fascinated. I'd never seen Keith like this. Mind you, I hadn't know him that long either. He was scary though. Scary in a good way mind you, coz he was looking after me, protecting me. I felt good about that, knowing Keith cared so much for me.\n\n\"Her,\" the asshole gasped, \"I'm talkin' to her, not you manOOOOOOPPHHHHH.\"\n\nKeith's fist blurred again. The thump audible throughout the dead silence of the Caf\u00e9. The asshole sank to his knees on the floor, whooping for breath. \"Read her fuckin' handle, asshole. What's it say?\"\n\n\"Blue. Her handle's Blue... Baby Blue.\"\n\n\"Good ... very fuckin' good ...\" Keith smiled at me, his voice suddenly gentle \"Turn around, baby.\"\n\nI turned my back to Keith and the asshole, still holding our tray.\n\n\"What the fuck does her jacket say, asshole? What's the fuck else does it say?\" Keith shook the asshole's head like a rat's. A large rat.\n\n\"Round Out ... it says ... Property of Round Out.\"\n\n\"You know, I think we're starting to really connect here, dumbfuck... so who the fuck do you think you're talking to now?\"\n\n\"Round Out ... Ah'm talking to Round Out.\" He didn't sound like he wanted to though.\n\n\"Oh yeah, you are, and you just called my Ol' Lady a gook slut didn't you? You just fuckin' dishonored my Ol' Lady asshole.\" Keith lifted him from his knees to his feet in one jerk. By his hair. The asshole half-screamed, a scream that was cut off as Keith's buried his fist to the wrist in the guy's gut. Again. Hard. I didn't feel sorry for him at all. Keith was in his face, his voice that wolf's snarl again. \"You dumbfuck. ... You ever tried to pick your teeth off the floor with broken fingers? You want to try?\"\n\nThe way he said it sent chills down my spine. I knew Keith would do it, that he'd break that guys teeth. And his fingers. Then make him pick the pieces up with his broken fingers. He would. \n\nThe asshole shook his head jerkily. No, no he didn't want that at all.\n\n\"See that jacket she's wearing, asshole,\" Keith was angry. His hand on my shoulder gently turned me round to face the other way. To face the entire Caf\u00e9. A sea of faces, all turned towards us, all looking at me. At Keith. At the Asshole. \"Fuckin' read it out loud again asshole ... I want the whole fuckin' Caf\u00e9 to hear you ... YOU CAN FUCKIN' READ CAN'T YOU? ... SO FUCKIN' READ IT, ASSHOLE!\"\n\nI shivered, scared now. He was just so intense, his expression so fierce. Keith's hand patted my shoulder, then stayed there, resting lightly. Reassuring me. Protecting me. His other hand was entwined in the asshole's hair. Not gently either. He shook the Asshole's head. I could see he was more or less hanging by the hair from Keith's hand. That must hurt. It made me realize just how strong Keith was too. I really wasn't feeling sorry for the asshole. I kindof hoped it was hurting him. Jerk.",
        "\"Property... of ... Round-Out.\" The asshole's voice was one long gasp of pain.\n\n\"I CAN'T HEAR YOU ASSHOLE... SAY IT FUCKIN' LOUDER.\" Everyone was watching. Everyone. Nobody moved. Not the asshole's buddies. Not any of the bikers. Not their Old Ladies. Not the waitresses. Not the Manager. Nobody.\n\n\"PROPERTY... OF... ROUND OUT.\" The asshole sounded desperate now. \n\nKeith was just loud. \"THAT'S RIGHT ASSHOLE... yeah, it says PROPERTY OF ROUND-OUT DOESN'T IT... FUCKIN' CONGRATULATIONS ASSHOLE, YOU CAN READ... \n\n\"...NOW,...\" Keith turned his head to look out at the Caf\u00e9. \"WHO THE FUCK IS ROUND-OUT?\"\n\n\"YOU ARE,\" half the Caf\u00e9 roared.\n\n\"AND WHO THE FUCK IS BABY BLUE?\"\n\n\"SHE IS.\" Another roar. Almost everyone in the Caf\u00e9.\n\n\"AND WHO'S PROPERTY'S BABY BLUE?\"\n\n\"YOURS!\" Jesus, I was almost deafened. Even those rice rocket riders had joined in on that one.\n\n\"You got that, Asshole?\" Keith's face was in the asshole's. Eyes glaring, narrowed, cold. I shivered. Mind you, the asshole looked a lot more scared than I felt. Guess he wasn't that much of a dumbfuck.\n\n\"I got it ... I got it, man... ah didn't mean to dishonor your Old Lady man...\" The Asshole's eyes looked away. I could tell he was scared. Scared and hurting. Everyone could tell he was scared. He stank of fear. Among other things.\n\n\"Good. That's real fuckin' good, dumbfuck. Now fuck off outa here. If you're still here in thirty seconds you're dogmeat. If you ever come back here, if me or my brothers ever see you here again dumbfuck, your fuckin' dogmeat.\" Keith didn't wait to see if the Asshole did or he didn't. He simply let go of the asshole's hair, turned, one arm round my shoulder, walking me back to our table as the asshole collapsed to his hands and knees on the floor. I was still carrying the tray with our order. \n\nIn an instant, the Ace Caf\u00e9 was back to the way it'd been. As if nothing had happened. Guy's talking, girls laughing, waitresses behind the counter taking orders, the clink of china and cutlery and coffee mugs on tables. I placed our tray on the table, sat down next to Jenny. Then my hands started to shake. But only when they were out of sight under the table. Keith sat back down next to Joker. \n\nSeth, Greg and Steve were outside with Danielle, standing by the SBC Harley's. Joker gestured with his head. \"Told Seth to keep an eye on the sleds, make sure that asshole doesn't try and fuck with 'em on his way out the door. Those other two guys keeping him company, you know 'em?\"\n\nKeith looked, nodded. \"Yeah, seen 'em round, invited 'em along on the run next Sunday, seem keen. We can check 'em out. See what they're made of. Saw 'em coming down the aisle with Seth, good attitude.\"\n\nJoker nodded. \"Yeah, saw that too.\"\n\nMe, I saw the Asshole dragging his sorry tail out the door. He glanced back towards me as he walked out, saw me watching him.\n\nHe wasn't sorry enough though. I didn't hear him, I read his lips. \"Fuckin' gook slut.\" Asshole.\n\nKeith had his back to the door, he didn't see. Neither did Joker. Tunes did. I saw his head jerk up, he looked around towards us, saw Keith's back, saw Joker's back, his eyes met mine. He said something to the two guys he was with. One of them, that guy that'd said he was a Prospect, he was on his feet and moving, following the asshole out the door. Tunes was right behind him, pulling on a pair of gloves. \n\nThe asshole glanced over his shoulder, saw Tunes and the Prospect; started to run. Tunes was past the Prospect, said something. That Prospect stopped dead in his tracks. Tunes, he was on the Asshole like a tiger. The Asshole had been bigger than Keith. He was way bigger than Tunes; he had to have six inches and fifty pounds on him. I watched in awe as Tunes beat the absolute crap out of him.\n\nI wasn't the only one. Half the Caf\u00e9 had windows seats. Almost everyone was watching as Tunes worked the guy over. Swiftly, methodically, effortlessly, viciously, his fists a blur. It took him sixty seconds. Tunes walked back in the door as calmly as if nothing had happened, peeling his gloves off, leaving that Prospect outside, standing by the Satan's Harley's. Tunes wasn't even breathing hard. He gave Keith a single nod before sitting back down. Keith nodded back. He and Joker looked at each other.\n\n\"That's a bit of a fuckin' surprise,\" Joker said.\n\n\"No shit.\" Keith still looked surprised.\n\nI didn't say anything. I wasn't sure what I felt. I'd never seen anybody beaten up like that, not so viciously, so badly. I watched out the window, feeling just a little ill as the Asshole slowly worked his way up to his hands and knees, then to his feet before staggering across the parking lot. He looked a bloody mess. I felt sick but I didn't feel in the slightest sorry for him. Asshole. Keith and Joker were both watching the Asshole through the windows.\n\n\"I knew it,\" Joker laughed, \"a fuckin' cage. He hasn't even got a fuckin' ride. Loser.\"\n\nKeith grinned. \"Gotta go wash my hands, that dude's hair was greasy man.\" He smiled at me. Only at me. \"Be back in a second Jay-Lin. You okay?\" \n\nI nodded. \"I'm fine, really.\" I was. With Keith there, everything was good, I knew.\n\nI watched him all the way to the washroom door. Jenny grinned at me, one arm went round my shoulder, gave me a hug. I needed that hug. \"Jesus, Blue, the way you two look at each other, it's so fuckin' sweet. I thought Round Out was gonna kill that dude, the look on his face. I never seen him move so fast.\"\n\nJoker nodded. \"I have, long time ago, back in the day. And yup, if that asshole hadn't backed down right away, Round Out woulda turned him into dogmeat alright. I guess Tunes had his reasons too.\" He smiled at me. \"You look after Round Out girl, I never seen him like this over anyone. Not ever.\"\n\nJenny nodded, looking serious now. \"Round Out never had an Old Lady before, Jay-Lin. Plenty of girls, but never an Old Lady. You hang on to him real tight, girl. He's a keeper.\"\n\nI knew that. \"I'm going to.\" I smiled. \"He's not getting away, not from me.\" Not ever.\n\nJenny gave me another hug. Joker gave me a nod. God, he even smiled at me. One of the other waitresses placed our coffee mugs on the table along with cream. \"Here you go Blue, need a refill, just bring your mug up.\" She smiled at me. \"First time at the Ace Caf\u00e9?\"\n\nI nodded. \"Yeah. I like it.\" I did, apart from the Asshole, but he'd got his and I was happy about that. Served him right.\n\nShe grinned. \"Good, and sorry about that Luther dude. Don't usually have anyone get outa line like that, do we, Joker?\"\n\nJoker laughed. \"Naaah, fuck knows what he thought he was doing, Betty.\"\n\nBetty laughed. \"Round-Out sorted him out fast enough. Guess Tunes had a beef with him over something too.\" \n\nI didn't say anything, but I knew why Tunes had worked the guy over. He was Keith's buddy from way way back and he still had his back, even if he was in another club now. And I was Keith's so he had mine. Tunes. Joker. Those other SBC guys. Keith's brothers. Close brothers. That made me feel good.\n\nShe smiled at me again. \"You got yourself a keeper there with Round Out girl, hang on to that guy.\"\n\nI found myself smiling back. \"I will, thanks Betty.\"\n\n\"You're welcome, sweetie.\"\n\nThen she was gone, off to the next table and Keith was already back, smiling down at me. I smiled back, glowing as his hand rested on my shoulder for a long moment. \n\nJenny laughed. \"You two, you're so sweet together.\"\n\nCaught in mid-gulp, coffee sprayed out of Joker's nose. Keith looked at him and started laughing. I couldn't help it, it was just so funny I had to giggle. That started Jenny off.\n\n\"Fuck,\" Joker spluttered, laughing and wiping his face with his sleeve, \"Round-Out, sweet? You got me there, Jen.\"\n\nJenny and I looked at each other. We both started laughing again.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\n\"God, I love these damn ribs.\" I could tell he did, the way he was eating them. They were good, I'd stolen one from him, that sauce was delicious. And it was all over Keith's fingers.\n\n\"I love that damn sauce.\" I smiled across the table, reached out as he finished the last rib, took his hand, drew it across the table towards me, staring into his eyes, arching one eyebrow as I sucked his fingers clean, one by one. Jen glanced at us and grinned. Joker smiled. I was on the last finger when a shadow loomed next to us. I glanced up as I slid my mouth down Keith's finger, teasing him with my tongue. Tunes. Laughing. At me. I slid my mouth of Keith's finger with a little pop, grinned up at Tunes.\n\n\"Oh man Round-Out, I gotta go or I'm gonna end up kicking my own ass defending your Ol' Lady's honor, dude.\" He grinned right back at me. It was hard to believe this was the same guy that'd beaten that asshole to a pulp half an hour earlier.\n\nKeith grinned, standing. \"Hey Tunes, maybe we should grab a beer sometime soon, really has been way too long. I'll bring Blue along to meet your Ol' Lady.\" They did that biker hug thing, arms around each other. I could tell Keith really liked this guy. So did I. After what he'd done to that asshole.\n\n\"Let's do that man, I got your number, I'll give you a call, set something up.\" They separated, gave each other a slap on the shoulder. Tunes nodded to Joker. \"See ya round, Joker. Jen.\"\n\n\"Tunes.\" Joker nodded back. Jen nodded, said nothing.\n\nTunes smiled down at me. \"My Ol' Lady'll like you Blue, she likes girls that stand up for themselves, you did good up there girl, cool as ice, didn't bat an eyelid. Not bad for a newbie.\" He grinned at Keith. \"Got yourself a keeper here, dude.\"\n\nI stood up, gave Tunes a little hug. I was almost as tall as he was, on my tiptoes, I could whisper in his ear. \"Thanks Tunes. For everything.\"\n\nHe gave my back a pat, his reply a whisper as quiet as mine. \"Anything for Round Out's Ol' Lady, Blue, you remember that.\"\n\nI sat back down. I would.\n\nA wave, another back-slap and Tunes was gone, that other guy he was with waiting by the door. The two of them walked out together, the Prospect standing outside joined them as they swung onto their sleds. Harley thunder filled the air, crescendoing as they pulled out, fading as they pulled away.\n\n\"That Tunes,\" Jenny shook her head, \"he's one scary dude.\"\n\n\"He seemed really nice,\" I said, \"What's with all those little crossbones he's got tattooed everywhere?\"\n\nThey all looked at me. Keith looked a little concerned. Joker shrugged, glanced at Keith. \"Better if she knows, bro.\"\n\n\"Those little crossbones?\" Keith said, \"Tunes, he's a debt collector for the Satan's Slaves. The Slaves, they're hardcore, deal meth, coke, horse, guns, you name it. They got ties in to the big boys and the cartels. Tunes, if any of their dealers short them, he collects.\"\n\nOkay, so he ran around collecting money people owed. Drugs, guns, not so good, but I could understand the debt collecting thing. Jesus, this was like being in a movie or something. Except this wasn't an act. Tunes was real, so were those guys he was with and they were scary. They made those guys the Chua bitch hung out with look like kiddies playing.\n\n\"It's how he collects the money,\" Jen said, \"you better tell her, Round Out, there's some dudes you gotta be real careful with and Tunes and those Slaves, you don't wanna put a foot wrong with them.\"\n\nI guess I was still looking puzzled. I was puzzled. I mean, I got these were all hard core dudes. They were bikers. Not pussies. I already got that. They already scared me. But I was with Keith. He'd look after me, I knew.\n\n\"Well, drug dealing, it's a real cut throat business,\" Keith said.\n\n\"Literally,\" Joker added.\n\n\"And the rip-offs, they happen a lot, dealers short their junkies, try and rip off the sellers every now and then, spend the money and say it got stolen. Tunes, he collects, got his handle coz he can make anything sing. He's got a good ear, plays a mean guitar, he can just listen to your bike running and tell you if its outa tune, says he can tell from the sound. So you saw him out there, he's a tough little mother, when he got out he started riding with us but then he decided he wanted the hardcore one percent life, he patched over to the Slaves. \n\nNo hard feelings 'bout that, every now and then an SBC brother decides he wants something different and hell, we're a social club, we're hardcore but we're not one percenters and we don't do territory or shit like that, we co-exist with those guys, we respect them, they respect us, so when one of us patches over, well, they're gone but it's not such a big deal for us. One of those things, you gotta decide where you wanna go, what you wanna be. We get on with the Slaves, we're not a feeder Club for them or any shit like that, but they're the dominant one percenter Club around here, we give 'em respect, we don't tread on their turf, we don't deal or shit like that, we're a social club, so when a brother patches over to them, we give 'em a farewell party, wish 'em well.\n\nSo Tunes, he patched over a few years ago, he likes the violence, not the drugs. He's a psychotic little fucker, you shoulda seen him in the 'Stan. Couldn't hold him back. So the Slaves, they put him on enforcing to start with. Got himself a way with wayward dealers, he teaches 'em how to sing out and pay up. Does that by chopping their fingers and toes off with a bolt-cutter. Each of those little crossbones he got, that's for each person he's chopped fingers or toes off of.\"\n\nI felt a little ill. He had lots of them. Maybe a hundred. Maybe more under the cut that I hadn't seen. That was a lot of fingers and toes. \"He seemed like such a nice guy,\" I said, not sure what to think. He'd been so nice to me. And he'd beaten up that Asshole coz he'd been rude to me. He was a friend of Keith's? There was just so much I didn't know about Keith. I swallowed.\n\n\"Oh, he's a nice guy,\" Keith said, \"couldn't find a better brother. Loyal to a fault. Patched over to the Slaves, but still treats any SBC brother like a brother 'n he doesn't have to do that but he does. Just don't owe the Slaves money and don't cross 'em, that's all. You do that and they send Tunes after you, best pay up right away. The fucker's ruthless. Nice about it though, unless you don't show any respect and you don't pay up. Anyhow, word's got around, he's not so busy these days.\"\n\nJoker laughed. \"Yeah, he's the Sergeant-at-Arms for the Slaves, they moved him up now he's not so busy collecting. One of their brothers gets out of line, Tunes gets sent to tune 'em up.\"\n\nThey both laughed, Keith and Joker. I sat there feeling a little disoriented. Out of place for a moment. In my world, people didn't get beaten to a bloody pulp for being rude even if they deserved it. In my world, people didn't deal drugs and guns. In my world, people didn't get their fingers and toes cut off with a bolt-cutter by a smiling psycho for owing money. In my world, guys likes Tunes didn't get sent to tune people up. In my world, stuff like that wasn't funny. \n\nBut I wasn't in my world was I? I was in Keith's world. Round-Out's world. And Tunes had Round Out's back. Mine too. God, now that was a scary thought.\n\nI looked across the table at Keith, sitting there laughing. Just looking at him, knowing I was with him, I stopped feeling scared. Looking at Keith, I felt good. Good? I glowed. Keith just lit me up inside. I loved him. I knew I did. And he loved me. With him, I felt whole, complete. Something I'd never known was missing was there. I smiled, reaching across the table for Keith's hand, finding it. He gave me a gentle squeeze, his hand engulfing mine, holding mine as I lifted it, pressed it to my cheek.\n\nI was in Round-Out's world now, and I was going to get used to it.\n\nI wasn't just Jay-Lin now, I was Round Out's Old Lady.\n\nI was Baby Blue.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\n<p align=\"center\">Coming up next - Chinese Takeout \u2013 Chapter 06 \u2013 When I See You Smile</p>\n\n...and thank you once again for reading all the way through this. The statistics are interesting. Not sure about other writers, but for my stories, about 1 reader in 100 actually gives a story a rating and I get about 1 comment / email per 1,000 views. I really do like to know what you think \u2013 your ratings and your comments (even if it's just an \"I loved this story\" or a \"wow\" or \"this sucks\" or \"damn, now I have to clean my keyboard\") or just a one, two, three, four or five star rating really do help me figure out what works and what doesn't \u2013 so if you give me a rating, or better yet, a rating and a comment about what you really like or better yet, what you really dislike or what just grates or doesn't sound right to you, it really really helps me tweak my writing and improve it for you. So pretty please\n\nAnd I like the feedback via the feedback form if you're too shy to comment on the Literotica website \u2013 I do try to reply to emails \u2013 just don't be asking me if I \"sext\" or talk about my personal sex life coz I don't. I don't do photos either. Ask for those and you won't get a reply. But I do love to talk about my stories and answer questions and just chat about writing in general \u2013 and I love your comments and suggestions \u2013 so on that basis, feel free. And for those hoping this is continuing, yes it is, all the way to the end \u2013 about 20 chapters worth similar to this one in length based on the plan at the moment so we're about 25% of the way through. I think. Unless the plan changes. Which it probably will. It always does as I write... Anyhow, Chapter 6 (\"When I See You Smile\") and Chapter 7 (\"Every Beat of Your Heart\") are coming along ... not fast, but they're coming ... \n\nSo I've said it before, but I'll say it one more time ... thanks again for reading and I do hope you enjoyed ... Chloe\n\n<p align=\"center\"> When I see you smile first thing in the morning\nIt raises curtains on your lazy eyes\nCould it be that you and I\nHave the greatest love to ever be \nHow could this have ever been before\nIt's not for anybody else to know</p>\n<p align=\"right\">\"When I See You Smile\", Bic Runga </p>"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "virgin",
        "blowjob",
        "oral sex",
        "18 year old",
        "chinese",
        "chloe tzang",
        "harley",
        "motorcycle",
        "leather"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/chinese-takeout-ch-05"
}