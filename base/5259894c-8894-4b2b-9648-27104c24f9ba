{
    "title": "Edge of Reason Ch. 01",
    "pages": [
        "Hi, \n\nSo I'm back with yet another Lesbian story. You'd think I'd eventually run out of ideas at this rate. This story is in response to several commenters who want me make Heather Franklin a more sympathetic character. In this piece, I take her back to her roots, to the person she wanted to be, rather than the one she became. \n\nAlthough this is a story that can be read on its own, you can try \"How To Catch A Falling Star\", \"The Day The Music Died\" and \"Moira\" to get a better understanding of the protagonist. \n\nDISCLAIMER --There is implied graphic violence against a child in this story. It is not described in detail, but it's still there. \n\nA shout of thanks to my editors RuzieD, sexnovella and Bramblethorn. \n\n\"Likewise, I say unto you, there is joy in the presence of the angels of God over one sinner that repenteth.\" \n\n-Luke 15:10 \n\n* *\n\n\"Will the defendant please rise,\" said the judge heavily. There was complete silence throughout the courtroom. Joey Lombardini stood up, looking desperately contrite.\n\n\"Madame Foreperson, has the jury reached a verdict?\"\n\nThe elderly woman seated on the far right spoke up. \"We have, your honour.\"\n\n\"What say you?\"\n\nShe stood up unsteadily and opened a piece of paper. The eleven other members of the jury looked down, as if ashamed.\n\n\"Case number 32656 -- the state of New York versus Joseph Lombardini on the count of murder in the first degree. We the jury find the defendant, Joseph Lombardini, not guilty.\"\n\nThere were audible gasps of relief and shock around the courtroom. The woman spoke up again.\n\n\"On the count of murder in the second degree, we the jury find the defendant, Joseph Lombardini... not guilty.\"\n\nThere were louder gasps all around the room. The prosecuting ADA's eyes widened and he stood straight.\n\n\"The prosecution moves for a judgement notwithstanding the verdict,\" he said breathlessly.\n\n\"Denied,\" said the judge. \"Mr Lombardini, you are free to go. This case is adjourned.\"\n\n\"Your Honour,\" continued the ADA. \"This man is a killer and he will kill again unless you put him behind bars. Is it fair that he walks free just because he can afford good lawyers? This is a mockery of...\"\n\n\"That's quite enough, Mr Sczyzmanski,\" interjected the judge sharply. \"One more word and I will find you in contempt. Then you will be behind bars of your own.\"\n\nThe defeated prosecutor gathered his papers, preparing to make a hasty exit. This defeat would need all the Scotch at his disposal to digest.\n\n\"Ms Franklin, a private word in my chambers?\" asked the judge. Heather Franklin looked up from where she was reluctantly shaking hands with her clients. Another unwinnable case won, just like that.\n\n\"Thank you, Heather,\" said Joey, shaking her hand profusely. \"I can't think of a way I could ever make it up to you.\"\n\n\"Disposing of your bodies better is one of the ways,\" Heather said in a low tone. \"Or else, keep paying my retainer.\"\n\n\"You got it,\" Joey said triumphantly.\n \n* * \n\nHeather walked into the judge's chambers. Judge Giles sat behind a large teak desk, painted deep brown to complement the shelves surrounding them. There were law reviews, journals and case files going decades back. \n\n\"The pen-drive, please,\" said Giles shortly. \n\n\"Straight to the point then,\" said Heather with a smile. She opened her purse and took out a small memory stick. \n\n\"Do you have copies?\" the judge asked, sticking his hand out. \n\n\"Of course I have copies,\" she replied with a grin, handing him the drive. Giles sighed, twirling the small device between his fingers. \n\n\"How many more cases do I have to go through before I earn all the copies?\" he asked wearily. \n\n\"I'll let you know when you've worked them off,\" she said with a light laugh. \"Did you really think a high school cheerleader was interested in screwing you?\" \n\n\"I'm a lonely old man,\" said the judge softly. \"That girl seemed like she was really into me. Can you blame me for thinking it was real? Wishing it was real?\" \n\n\"I suppose not,\" Heather admitted. \"That girl is one of the best. Outwardly, anyone would think blonde bimbo who can't wait to spread her legs. She plays that role particularly well. Inwardly, she's one of the sharpest girls you can hope to meet. Her parents have no idea of her side-job. It's how she wants it.\" \n\n\"So she's your go-to girl when you want to set a honey pot, eh?\" Giles chuckled. \"How many videos are there? How many judges, politicians and businessmen do you have under your thumb because of her?\" \n\n\"Are you sure this place is not bugged?\" Heather said jokingly, looking around. \"I mean, with the NSA nowadays, you never know.\" \n\n\"No it isn't,\" said Giles, leaning forward. \"You're way too smart for that, Heather.\" \n\n\"Still, I think I'll decline to answer,\" she replied glibly. \"For a few thousand dollars, I think I could persuade Carly to go out once more with you. It depends -- how old and lonely are you?\" \n\n\"I'm not that lonely yet,\" he said, pocketing the pen-drive. \"Thanks for this, Heather. You confirmed that the lawyers at Griffin, Markham and Wiley haven't changed.\" \n\n\"I think I'll get going now.\" \n\n\"No wait,\" said Giles. \"Sit down. I want to talk to you some more.\" \n\n\"I'm not really in the mood for chit-chat,\" she said wearily. \"Let's not make this any harder than it has to be. It was a business transaction, plain and simple.\" \n\n\"No, I got that,\" he said. \"I just want to talk to you. After all you've done, the least you could do is humour me.\" \n\n\"I guess,\" she said, pulling up a chair. \"Do you mind if I light one up?\" \n\n\"I've got Cubans,\" said the judge, opening one of his drawers. \"How about we celebrate yet another impossible case that you pulled off?\" \n\nHeather reached out and took a cigar. She ran the length of it past her nose, inhaling the musky aroma of the wrapper and the filling. She rummaged in her purse for a while before finding her lighter. A second later, a flame licked the tip of her cigar before she held it out for Judge Giles to light his. They took a deep breath before letting out puffs of smoke. \n\n\"Do you know why I ruled the traffic cam video as inadmissible?\" \n\n\"Because I told you so and because I had a tape of you getting it on with a cheerleader in a seedy motel?\" Heather said sardonically, making the tip of her cigar glow when she took a long drag. \"I think that's reason enough.\" \n\n\"True,\" he admitted. \"But the bigger reason was, I thought the case was still a surety. The state had Joey dead to rights, DNA evidence, threats made, fingerprints -- you name it. It all pointed to your client. I thought, 'what does it matter if I take out the video? They still have the guy,' and yet you managed to win.\" \n\n\"That's why I get to charge the exorbitant fee,\" she said, taking out the cigar to create a ring of smoke. \"You make my job too easy, really. The prosecution had to prove that Joey is guilty beyond reasonable doubt and all I have to do is find one gullible idiot in the jury who can believe he may not have done it. Not that he definitely didn't do it, but that he perhaps didn't do it. The state's burden of proof is what sinks it.\" \n\n\"Spoken like a true lawyer,\" Giles said with a laugh. \n\n\"Have I humoured you enough now?\" she said, stubbing out her cigar. \n\n\"Heather,\" began Giles. \"I've been a judge for over forty years. I've seen thousands of lawyers come and go. Trust me when I tell you, you're one of the finest I have ever seen. Your drive to win and legal skill are incredible. You can convince a jury the sun shines at night if you want.\" \n\n\"I'll let you know if I ever need to,\" she said, rising from the chair. \"I had better get going now. It's been a long day and I could really use a lame rom-com to unwind.\" \n\n\"Hold on,\" said Giles, shuffling through the mass of paperwork on his desk. \n\n\"What now?\" said a clearly exasperated Heather. \n\n\"Here,\" he said, holding out a file. \"There is a new case on my docket. The woman can't afford a lawyer, so I'm asking you to do your civic duty and represent her.\" \n\n\"Get her a public defender,\" said Heather. \"I don't have the time or the energy for a freebie right now.\" \n\n\"The public defender's office is stretched as it is. Besides, those kids are fresh out of law school. They could never handle this case.\" \n\n\"What are the charges?\" \n\n\"First degree murder.\" \n\n\"You expect me to do a first degree murder case for free?\" snorted Heather. \"Even if I wanted to, I couldn't. My firm would never give me the time off.\" \n\n\"At least meet with her once,\" pleaded the judge. \"She really needs someone like you.\" \n\n\"After all I've done, you still think I care about my civic duty?\" asked Heather incredulously. \"You obviously haven't learned much.\" \n\n\"I know that you like a challenge.\" \n\n\"Only when I'm getting paid for them,\" she dismissed. \"If she can't afford a regular lawyer, I sincerely doubt she can afford me.\" \n\nAs she said this, she opened the first page of the file. Her eyes widened when she read the name of the accused. \n\n\"Natasha Belvedere,\" she said. \"Of the Belvedere family from Brooklyn?\" \n\n\"Yes.\" \n\n\"How come she needs a public defender? The Belvederes come from old money, one of the richest families in New York.\" \n\n\"Apparently not any more.\" \n\n\"It says here she shot a man at point blank range in broad daylight with three separate witnesses watching,\" said Heather, scanning through the thick file with a trained eye. \"This lady doesn't need me, she needs a miracle.\" \n\n\"She needs someone willing to fight for her.\" \n\n\"No one can win this one,\" said Heather, shaking her head. She tossed the file back with the heap. \n\n\"The prosecuting ADA is Seth Watkins,\" said the judge. \"Do you really think any one in the public defender's office can match him?\" \n\n\"Not my problem,\" shrugged off Heather and began walking to the door. \n\n\"Heather,\" said the judge, his voice trailing off. \"Please. Give her a fighting chance.\" \n\n\"Look, the best I can do is try to convince Seth to get the charges down to murder two. With that, she at least has hopes of parole sometime in the future. I say try, because there's no way he'll let something as sure as this walk away. What was this woman's motive?\" \n\nThe judge took a deep breath and said. \"The man she murdered was Lance Whittaker. That man raped and murdered her six year old son and was found not guilty because the search of his home was on a bad warrant. My guess is, she simply snapped watching him walk out a free man.\" \n\n\"Doesn't the prosecutor have discretion when not to charge?\" Heather said, her interest piqued. \n\n\"You know Seth,\" said Giles. \"Do you think he'll ever drop a case as watertight as this? That too in the year he's making a run for the District Attorney's office.\" \n\n\"Wait, so the prosecution's poster boy is rail roading a grieving mother to score political points? And I thought we were the bad guys.\" \n\n\"You and Seth are very similar, Heather. Neither of you can stand losing.\" \n\n\"Why are you telling me all this?\" \n\n\"You may not admit this, but I think there is a human being somewhere inside you,\" Giles said. \"Very deep inside. Despite all you've done, I think you went to law school with the genuine intention to help people. Somewhere along the way, you lost that idealism. We all did. I suppose I'm trying to remind you of that person.\" \n\n\"I doubt that person still exists,\" said Heather. \n\n\"You'll never know unless you take this file. Think of what it could mean for your reputation if you win.\" \n\nHeather looked at the judge for some time, then looked at the door. Her gaze went back and forth while intricate wheels turned behind her eyes. \n\nSilently, she picked up the file off the desk. \n\n* * \n\nHeather Franklin lay on her back, resting against the cushioned headboard. She held her Galaxy Tab in her hands and searched through several news sites. It took her a few minutes to find what she was looking for. \n\n\"What are you doing?\" asked a voice between her legs. \n\n\"Work,\" she said, without looking up. \"That wasn't an excuse for you to stop.\" \n\n\"Sorry,\" said the voice. Once more, Heather felt a slippery tongue bathe her thighs and the outside of her lower lips. Ever so subtly, it snuck inside her for a brief instant. She continued browsing the net, unperturbed. \n\nShe looked through the news articles relating to Natasha Belvedere's son Cody. He was reported missing a few hours after his friend's birthday party. A week later, his body was found in a shallow ditch outside the Park Slope area in Brooklyn. Her eyes clenched and she cringed inwardly at the description of the body. \n\nHeather followed the links to more articles. The DNA tests came back and a match was found to a known sex-offender Lance Whittaker. He had recently been granted parole. The police searched his house and found the implements he used as well as several videotapes he had made of his time with Cody. \n\nHer brow furrowed when she read further. Even though the evidence against him was overwhelming, he had two technicalities on his side. There was a problem with the chain of custody in handling the initial forensic evidence and the search warrant missed a few clauses. Heather sighed, knowing how she had often used such reasons to get people off. \n\nShe closed her eyes and tried to imagine what it felt like to be Natasha Belvedere on the day her son's killer walked free. Nothing came close. \n\nBut then again, Heather was not one for emotions. She had long since eschewed that weakness. It helped her sleep better at night not feeling for the people she worked with. \n\n\"How was your day?\" asked the voice, lapping at her cunt earnestly. \n\n\"Good, I suppose,\" she replied. \"I won the case. Your Dad didn't look too happy with the result, though.\" \n\n\"I can guess,\" came the reply. \"He's locked himself in his room with all the bottles he could find.\" \n\n\"Shouldn't you be there for him right now?\" said Heather, running her fingers through the mess of black hair around her thighs. \"He needs his family more than ever.\" \n\n\"He'll be fine,\" said the voice callously. \"It's not the first case he's lost and it won't be the last. I think the best thing he can do is drink this one away and get a fresh start tomorrow.\" \n\n\"I've been a bad influence,\" muttered Heather. \"Be careful or your Dad might wonder why you suddenly have so many extra SAT classes.\" \n\nShe held the eighteen-year-old vixen's head down. The talented tongue made long licks all the way down her slit before making an agonizingly slow movement upwards. Heather groaned and bent down to kiss the back of the girl's head, nuzzling her hair. Her hair smelled of lavender and jasmine. \n\n\"After we're done, can I pick your brain on law schools?\" asked the girl. \"All the magazines have different rankings. Some say Harvard is the best, some say Yale, some say Columbia. I really don't know where to apply.\" \n\n\"Here's a little secret, Lynette,\" said the lawyer, unbuttoning her shirt and unclasping her bra while she spoke. \"It doesn't really matter. All that an Ivy League college does is give you a head-start. After that, it's all about you. If you suck, no degree can save you.\" \n\nHer nipples finally free, Heather pinched and tweaked one. The tactile tongue in her pussy probed deeper, making her moan, and her vision went blurry around the edges. She lifted her hips off the bed, pushing her sopping wetness towards Lynette's mouth. The teenager took the hint and impaled her tongue as deep as it would go into Heather. She drew it out and thrust it back in like a well-oiled piston. \n\nHeather continued manipulating her nipple. Her other hand left Lynette's hair and found her own clit which she rubbed in fast circles. Her erogenous zones were red hot with sensation. The familiar feeling was beginning within her. Her breathing became more shallow. Her pupils dilated and her muscles contracted around the tongue. \n\nThe intensity was too much now. Every nerve ending tingled and scorched with the sheer anticipation of climax. Heather felt her nipples harden to protruding points against her breasts. It was unreasonably hot. Sweat plastered on her forehead, glistening in the slanted light. \n\nHer body stood on the edge of meltdown, the heat having reached her very core. She closed her eyes to see a fireworks display. A riot of colours unfurled in her vision. Sparks of red, blue and green flew in different directions and scattered before blinding her in an incandescent glare. \n\nHeather slowly became aware of the room again. Lynette meticulously continued lapping away at the nectar dripping from her lover's orifice. She kissed every crevice and nuance of Heather's labia before her head rose. She planted gentle kisses on the breasts in front of her before her eyes met the lawyer's. \n\nThe lawyer smiled when she saw Lynette's face painted with her ejaculate. It shone and was even more prominent when she brought her face closer and shared a deep kiss. They tongued each other slowly, like a waltz, in contrast to the fiery tango earlier. Heather liked to taste herself on someone else's tongue. \n\n\"Wash up and go home now,\" said Heather. \"You have enough for a cab, I presume?\" \n\n\"I do. Heather, can I ask you something?\" \n\n\"Shoot,\" said the lawyer, lighting up a Marlboro from her bedside. \n\n\"My Dad comes home every day and rants about how defence lawyers use all sorts of unethical strategies to free clients they know are guilty. Is that true?\" \n\n\"He's just sour graping. It happens when you get frustrated after seeing so many cases. Don't worry about it.\" \n\nThere was a pause. Heather sat patiently, studying Lynette's expression. It was obvious that something bothered her. She quietly picked up her trail of clothes from the hallway and went to the bathroom. Heather finished her cigarette by the time she walked out once more. Lynette stood at the entrance to the bedroom, looking down. \n\n\"Is something bothering you?\" Heather asked dryly. \n\nLynette looked up, pursing her lips. Her well rounded face was taut with confusion and her large, elliptical eyes shimmered with a hint of moisture. When she spoke, it was so soft that Heather had to crane her neck towards her. \n\n\"Will we ever tell my parents about.. this?\" \n\n\"That's not a good idea, Lynette,\" said Heather calmly, blowing a stream of smoke upwards. \"Your Dad might not like the idea of you... sleeping with the enemy so to speak.\" \n\n\"But how can I keep hiding this?\" said the moody teen. \"I think I'm falling in love with you. It's getting harder to hide from everybody.\" \n\nHeather put her cigarette down and held the girl's face between her hands. \n\n\"You're barely an adult, Lynette. Do you really want to complicate your life with things like love and commitment right now?\" she said. \"This is your time to explore, to learn and to build a solid career. All that love stuff can wait.\" \n\n\"What about you, Heather?\" Lynette asked softly. \"Do you have any feelings for me?\" \n\n\"Not really.\" \n\nLynette seemed scandalized that two such words could have been spoken with such little emotion and introspection. Heather looked at her disinterestedly. \n\n\"Look, honey, you knew what you were getting into. I never said I was going to be in a relationship with you. Our arrangement is good for what it is, fun,\" said Heather. \"If you don't like that, you could always not show up like a love-sick puppy.\" \n\nThe teenager seemed to be on the verge of tears. Heather rolled her eyes and kissed her again. Their lips melded together and she carefully used her tongue to caress hers. By the time, she detached her face, Lynette felt better about herself. \n\n\"Same time next week then?\" \n\nThey kissed once more and Lynette left with her satchel. Heather watched the door close. She waited, in case Lynette had forgotten something and returned for it. After she was reasonably sure she had left, she opened her medicine cabinet. She retrieved a half empty bottle of Ipecac syrup and carried it to the toilet. ",
        "She swallowed some of the liquid and waited. It was coming. It was all too familiar -- the feeling of nausea and distaste. She scrunched up her face, waiting for the reverse peristalsis to run its course. Heather got on her knees, doubled over and emptied the contents of her stomach into the toilet. She waited for a few minutes before a second wave came and she violently retched again. \n\nFor some inexplicable reason, it felt like she had purged her soul. The bitterness that festered within her was gone, for the time being. She washed her face of any remnants and looked at her reflection in the mirror. \n\nWas there any hope for her? The answer might lie in the file she took from Judge Giles. \n\nBefore going to sleep, she marked her digital calender for an appointment with Natasha Belvedere the next day. \n\n* * \n\nHow is one supposed to look when everything has been taken away from them? \n\nHeather had seen it all in the confines of the court. Some bawled, some fainted, some even tried to jump over the railing in a futile attempt to hurt her when she showed them what real world \"justice\" looks like. \n\nNatasha Belvedere looked different. She sat in the dingy little room in Bedford Hills Correctional Facility with grilled trellis on all sides. The orange outfit looked alien on her. She looked nothing like someone capable of thinking of murder, let alone carrying it out. \n\nHeather sat down on the other side of the table. Her client looked at one obscure spot on the dirty table. She did not even blink, focusing all her attention at that point. Heather took a quick glance around to see the guards looking on through the grills. \n\n\"Mrs Belvedere,\" she began slowly. \"My name is Heather Franklin and I'm your lawyer.\" \n\nThe woman on the opposite side still looked down. Heather lowered her gaze and saw her listless eyes still staring intently. Neither of them spoke for a good ten minutes. \n\n\"I'm sorry, Ms Franklin,\" Natasha said. Heather was not sure she heard right. \n\n\"I beg your pardon.\" \n\n\"I'm sorry to waste your time, Ms Franklin,\" Natasha said. \"I'm sure you'd rather be fighting worthier cases than this.\" \n\n\"Why would you think so?\" Heather asked. \n\n\"I think you know the answer to that one,\" Natasha replied grimly. \"So how did they choose you? Did you draw the short straw or something?\" \n\n\"I'm not a public defender, Mrs Belvedere. I'm a counsel at a law firm.\" \n\n\"Call me Natasha,\" her client insisted. \"Are you aware that you will not make any money from this case?\" \n\n\"I know,\" Heather nodded. \"I'm doing it pro bono.\" \n\n\"Thanks,\" Natasha said softly. \"I'll make your job easier, Heather. I'll plead guilty to whatever the prosecutor offers. I don't care if I have to spend the rest of my life here, or even if I get the needle.\" \n\n\"Why would you say that?\" Heather blurted out, stunned. \n\n\"Heather,\" Natasha began. \"Did you look into me? If you did, you would know I have no one and nowhere to go back to.\" \n\n\"Do you really want the death sentence?\" \n\n\"It's only a formality. I died a long time ago. It's time I stop pretending otherwise,\" came the placid reply. \"I might as well have shot myself too.\" \n\n\"Natasha,\" began Heather. \"I am deeply sorry for what happened to your son. I won't even pretend to imagine the magnitude of grief you must feel. All I ask is that you take a moment to think it through.\" \n\n\"I just offered you a way to dump this case fast and get on with your life,\" Natasha said. \"Take it while you still can. You don't owe me anything, Heather.\" \n\n\"Why don't we take it one step at a time?\" Heather said warily. \"Let's think of your bail hearing and we'll go from there.\" \n\n\"Why are you pressing this?\" Natasha asked. \n\n\"Because...\" began Heather, unable to think of an ending. Natasha looked at her with a lop-sided smile. \n\n\"It's okay, Heather. I know you came in hoping to play the hero and save me from the big bad prosecutor, but I've already made my peace.\" \n\n\"Why don't you want to fight?\" \n\n\"Heather,\" started Natasha. \"You need something to fight for first. If Cody was at home, waiting for me, I would fight. I would fight and fight until the bitter end. But...\" \n\nNatasha's sentence was lost in a series of choked sobs and incoherent syllables. She looked down and squeezed out of her throat. \n\n\"Cody, I'm so sorry. I should have protected you. I should have been there for you. I failed you. Baby, I'm so sorry.\" \n\nHeather watched as the woman opposite her clenched her eyes shut. Inside her, an ocean of tears formed, but she could not bring herself to cry. Natasha sat, reliving every bit of pain she felt when she first saw her son's body. \n\n\"Can I ask you a question, Heather?\" \n\n\"Go ahead.\" \n\n\"How likely is it that I will get the death sentence?\" \n\n\"Very unlikely,\" Heather stated. \"Given the circumstances of this case, you don't need to worry about that.\" \n\n\"Can you please tell them I asked for it?\" Natasha beseeched. \"If it is at all possible.\" \n\n\"Why do you want to die?\" Heather asked, shaking her auburn hair. \"Do you think this is a way of punishing yourself for not saving Cody?\" \n\nThere was complete silence. Natasha studied the resolute face on the other side of the table. Heather took a deep breath. \n\n\"Cody would not have wanted his mother to want to die. No matter what. Think about that.\" \n\nThe grieving mother sat, motionless in the face of her lawyer. \n\n\"I will pick you up for the bail hearing.\" \n\nHeather signalled to the guards to open the door. She left and walked to her car briskly. Once inside, she took a few minutes to think of what she was doing. None of it made sense to her. It was not who she was. \n\nEven though she did not know what she was going to do, she was inexplicably more resolute than ever to do it. \n\n* * \n\n\"Yes, I am Natasha Belvedere's lawyer.\" \n\nThe prosecution attorneys kept gaping. Seth Watkins' eyes, in particular, had taken the diameter of dinner plates. \n\n\"As you know, you have a duty to turn over all the relevant evidence regarding this case,\" Heather went on in her businesslike tone. \"I have made a list of other ancillary evidence I will need to prepare a defence. If even one of them is missing, I will file a case of prosecutorial misconduct and make sure you end up on the six 'o'clock news. Are we clear?\" \n\nThe younger prosecutor took the list and left the room. Seth sat behind his ornate desk, patting his fingers idly on the polished rosewood. Numerous awards decorated his walls culminating in a summa cum laude degree from Columbia. He eyed her with contempt. \n\n\"Well, well, Heather. It would appear we finally have the chance to go up against each other,\" drawled Seth. \"Did Natasha Belvedere suddenly inherit some money?\" \n\n\"It's called pro bono work, you hack. Look it up once you've finished shagging your ego.\" \n\n\"Such language,\" tutted Seth. \"That too from an officer of the court. What is the world coming to when we have the best and brightest queuing up to defend murderers?\" \n\n\"As I recall, you wanted my job quite badly,\" said Heather with a derisive smile. \"I still remember the priceless expression on your face when the firm chose me over you to fill in the vacant associate position.\" \n\nSeth chuckled and leaned back on his plush recliner. His beach blonde hair was cropped short, leaving a fair amount of forehead before his cold blue eyes. Those eyes darted around excitedly, not betraying the razor sharp mind behind them. His rugged features had a few layers of tan. \n\n\"Rub it in while you can,\" Seth gloated. \"We'll see who has the last laugh once the verdict is read out. Lawyers like you sicken me, Heather.\" \n\n\"And yet, you're the one threatening a grieving mother with life without parole. Don't you find that offensive?\" \n\n\"Natasha Belvedere executed a man in cold blood and she hopes to get away by hiring a flashy lawyer? I find that offensive.\" \n\n\"Good sound byte, Seth,\" Heather laughed. \"Might as well save it for the media for when you announce you're running for DA.\" \n\n\"You think I'm doing this for the cameras?\" \n\n\"Of course you are,\" Heather spat out. \"You personally took a case of a woman with no money to hire a decent lawyer, intent on putting her in jail when you should have dropped the charges. All for the sake of your shameless self-promotion. You are a hyena, Seth, munching on the bones of someone too weak to defend herself.\" \n\nSeth's lips curled into an ugly smile. His features hardened and his eyes flashed fire. Undeterred, Heather went on. \n\n\"You thought you were going to get a weak, gutless public defender. Someone you could wipe the floor with,\" Heather went on vehemently. \"Well, guess what? Now you're going to have to pick on someone your own size.\" \n\n\"Have you even read the file, Heather?\" said Seth calmly. \"I don't care who you are, you can't win with those facts.\" \n\n\"But I can win with the truth, and the truth is very different to the facts.\" \n\n\"You think you'll win by pounding on the sympathy drum?\" Seth mocked. \"Oh please don't hurt her. She lost her only son. Best of luck with that.\" \n\nHeather felt an upwelling of bile. The bitterness rose to her throat as she surveyed the smug, self-assured ADA before her settling his paperwork. \n\n\"I'll have someone send over the evidence to your office later today,\" said Seth, not looking up. \"The bail hearing is on Friday. After which I'll wipe that smile off your face at trial.\" \n\nHeather turned to leave. She was almost at the door when Seth spoke up again. \n\n\"Oh and Heather. I will be sure to discreetly let your superiors at the firm know you have taken such a long-winded free case which will take up valuable time you could have used making them more money,\" he said. \"They'll still let you handle this case, right?\" \n\n\"For your sake, you'd better hope they don't.\" \n\n* * \n\nHeather carefully placed the boxes of evidence in her study. She yawned and contemplated getting started on the defence. Her eyes had dark circles around them, leading to cavernous bags. Working for the city's most powerful law firm was taking its toll. \n\nOne of the boxes was from the Lance Whittaker trial. It had the offending warrant and test reports, all useless in retrospect. Under a pile of papers rested a small CD. Heather took it out. The description confirmed her doubts. It contained the tapes Lance Whittaker made with Cody Belvedere. \n\nShe lit up a fine blend and began sifting through the evidence. The more she read, the more it became apparent to her that the prosecution had an iron-clad case. \n\nBallistics matched the bullet recovered from Lance's cranium to Natasha's personal .22 calibre. Her fingerprints were on the handle and trigger of the gun. There was a copious amount of gun shot residue on her hands. The murder happened at the mouth of an alley in Windsor Terrace at ten in the morning. The alley led to a bar where Lance was a regular customer. Some construction workers were taking a break nearby and had a full view of the shooting. \n\nThe final nail in the coffin was that Natasha showed no remorse after the action. She didn't rage or shoot anyone else. The report said she dropped the gun and quietly walked away. The police found her sitting on a swing in Prospect Park. All through her arrest and subsequent incarceration, she didn't say a word. \n\nThe ashtray was littered with burn out stumps. Impatiently, Heather tossed her empty pack in the trash and took out a new one. The more she perused the case files, the less chance she saw of making a case of it. \n\nHer eyes fleetingly rested on the tape. It was the one piece of evidence she had not taken a look at. \n\nShe exhaled a puff of smoke before resuming her search. She looked through her firm's databases for anything she could use. One of the things Heather had learnt was that the most obscure cases could be turned into binding precedents. \n\nAfter an hour, Heather had compiled a list of judgements which she would look at more closely later. The long day weighed on her. She yawned again, stretching her limbs. Maybe somewhere within that stack of work product lurked the miracle she was looking for. \n\nHer eyes wandered to that CD again. Inwardly, she cringed even thinking about what was on it. It was evidence, but not the kind she needed. \n\nHeather drooped on her desk, shaking herself awake. The paperwork looked as futile as when she started the evening. Her tired brain needed a break. \n\n\"I need a fresh pair of eyes,\" she mused, getting up from the chair. \"I'll take them to work tomorrow.\" \n\nShe turned off the lights and was at the doorway when a glint caught her eye. It was the reflective surface of the CD. There was something about that disk that wouldn't let go. Without turning on the lights, Heather walked to her desk and picked up the CD. She twirled it in her hand, watching shards of moonlight reflect onto the wall. \n\nThere was an eerie feeling of foreboding when she inserted the disk into her player. She took her place on the recliner and lit up a smoke while the 70 inch flat screen flickered to life. The video started with an empty room. \n\nA man carried a boy in his arms and brought him into the room. He took care to position the hand held camera at a good angle before turning his attentions back to his helpless victim. \n\nHeather's eyes burnt, her muscles tightened and a bitter feeling engulfed her as she watched. The boy screamed so much. His voice became hoarse from it after some time. He passed out eventually, but his horrific ordeal went on. She leaned forward, watching in sheer, grotesque amazement. \n\nCody Belvedere's face came into focus. The pain was too much for him. His eyes opened again and he mouthed silently. Try as she might, Heather could not make out the words. The sight of his cherubic face bathed in tears and scars made Heather's cold heart beat faster. \n\nThen came the blood. So much blood. \n\nHeather could not tear her eyes away from the macabre soap opera as much as she wanted to. Her head hurt and pulse became erratic. A fresh wave of nausea swept over her. \n\nAt last, it happened. \n\nHeather felt an alien wetness under her eye. It was a feeling she had long forgotten. She brushed her fingertips over her cheek and tasted it. It was the salty taste of grief. The last time a tear had crept past her was when her mother died. Since then, Heather had resolutely abstained from crying. \n\nIt was how she got through the day and slept through the night. \n\nShe let her fingertip intercept another lonely tear-drop. This time, she held it to her eyes and looked at the ephemeral liquid closely. It looked so normal and transparent, as if hiding the weight of emotion behind it. Heather watched the droplet trickle down her forearm and lose its way into nothingness. Not nothingness, because it reminded a private part of her that she was still capable of tears. \n\nIt felt so strange to her. Her trembling fingers turned off the screen. She held her head in her hands, clutching tufts of auburn hair. Her entirety felt numb and the images from the screen danced before her eyes. \n\nCody Belvedere's face came in vivid technicolour. His messy hair, his pleading expression at first which gave way to an expression of helplessness. His eyes were the most haunting. Heather kept seeing flashes of those crystalline green irises, so inhumanly robbed of their innocence. \n\nThere was a stirring in her stomach. She got off the chair and rushed to the sink before vomiting into it. No drugs were needed this time. She puked over and over until all that came were dry heaves. \n\nShe held onto the porcelain sink for support and caught her breath. She would not dare go to sleep that night. Instead, she looked in the mirror, trying to figure out the person on the other side. That person had a stoic expression set on her face. \n\nThe message was clear. Silently, Heather Franklin turned on the lights and resumed reviewing the evidence sent over. \n\n* * \n\n\"Case number 32699, the state of New York versus Natasha Belvedere on the charge of-\" \n\n\"Waive reading, your Honour,\" said Heather. \"I ask that you release my client on her own recognizance pending trial.\" \n\n\"You have to be joking,\" said Seth, straightening his tie. \"She executed someone in broad daylight and you want here back out there?\" \n\nJudge Giles leaned back on the leather chair, mulling over the facts. His hands were tied by precedent. \n\n\"She is a danger to society, your Honour. You can't possibly let her go. Look, she hasn't even come for her own bail hearing.\" \n\n\"She hasn't come because she is in the hospital, you lowlife,\" snarled Heather. \"She tried to hang herself in her cell last night. The guards intervened just in time and rushed her to the prison doctor. She is still unconscious.\" \n\nSeth took a few seconds to digest the news. Heather's cheeks flushed and her temper flared. Every hair on her body bristled. \n\n\"You charged a helpless woman with first degree murder. She can't survive in prison, your Honour. She almost died and all he wants is to keep her there so she can be successful next time.\" \n\n\"That's a lie,\" replied Seth. \"Your Honour, notwithstanding what happened, we still can't let a cold-blooded murderer back on the street. You have to consider the safety of the general public.\" \n\n\"Your Honour, Natasha Belvedere has no prior criminal record. She is not a flight risk. She is not a threat to society. In fact, the only person she is a threat to is herself. It is an indecent hypocrisy of our justice system that we have her locked up.\" \n\n\"All right, calm down both of you,\" admonished Giles. He turned his gaze to Heather. \n\n\"Is there anyone who can vouch for your client?\" \n\n\"I can,\" said Heather steadfastly. \"I have had opportunity to meet her and I can say with confidence that she is not the monster the prosecution wants you to believe she is. Right now, she is a broken shell of a human being who wants nothing more than to hide from what she did.\" \n\n\"Do you agree to be personally accountable for your client's actions hereafter?\" \n\n\"I do,\" she replied. \"As an officer of the court, I give that assurance.\" \n\n\"Your Honour,\" spoke up Seth. \"I would ask that you look at the facts in their totality. She took her gun and shot an unarmed man in the head. I understand that she might have done so in retaliation for what happened to her child, but we cannot set a precedent of killers out free because they thought their murders were justifiable.\" \n\n\"I am not releasing her on her own recognizance,\" said Giles. He turned his attention back to Heather. \n\n\"Bail is set at a hundred thousand dollars. We'll schedule a date for conferencing.\" \n\nSeth Watkins stood impassively. A scowl was painted across his face. \n\n\"For now, I suggest the two of you get started on your cases.\" \n\n\"Your Honour, at this time I would like to give notice of our affirmative defence,\" said Heather. \"We plead not guilty by reason of temporary insanity.\" \n\nSeth looked like he had been punched in the gut. He quickly mouthed some instructions to his second chair. They began settling their papers. Giles moved his glasses up his nose. \n\n\"Ms Franklin, may I see you in private for a moment?\" \n\nHeather walked past an unhappy prosecution team and made her way to the judge's chambers. Giles settled down and motioned for her to close the door. \n\n\"How is she?\" he asked tersely. \n\n\"Last I heard, the doctors said she was stable. They will contact me when she regains consciousness.\" \n\n\"How are you handling this?\" \n\n\"I'm fine,\" shrugged Heather nonchalantly. \n\n\"Are you sure? You lost your cool back there. I've seen you fight cases before, but you've never been off balance. Is there something about this case?\" \n\n\"I don't know, what do you think?\" she retorted caustically. \"You dumped this on my lap and now you don't seem happy with how I'm handling this.\" ",
        "\"Temporary insanity does seem like a stretch,\" said Giles. \"It might have worked had it happened the day she found out who murdered her son, but it was after the trial.\" \n\n\"How about you leave the legalities to me?\" said Heather calmly. \n\n\"Suit yourself, but remember, it's not me you have to convince.\" \n\n* * \n\nThere was a heaviness. The air seemed laden with poison, the guttural filth of everyday sin. She took a deep breath, trying to figure out which side of death's door she had woken up on. Her heavy lidded eyes opened in slivers, praying she might see Cody waiting for her. \n\nAlas, all that Natasha saw was her lawyer waiting by her bedside. The attending doctor came in immediately and flashed a pencil light into both her eyes. \n\n\"How do you feel?\" \n\n\"I don't,\" was Natasha's simple reply. \n\n\"The doctors have to keep you here for seventy two hours. After that, I'll be back to pick you up.\" \n\n\"Heather,\" she said weakly, feeling the weight of all the sedatives. \"Why can't you just let this one go?\" \n\nHeather didn't answer. She pursed her lips and averted her gaze. Natasha lifted herself off the bed on her shoulder. The weight was more than her weak joint could take and she collapsed. \n\n\"I don't want to fight, Heather. I can't understand why you do.\" \n\nComplete silence reigned for a few seconds. Heather held the metal railing hard and clenched her eyes shut. \n\n\"I saw the tape.\" \n\nNatasha's eyes shot up at her lawyer's. Heather took a deep breath and said in a steadfast voice. \n\n\"I'm not going to let you go to prison, Natasha. After seventy-two hours, I'm coming to pick you up. That's final.\" \n\nThe client gaped from the bed while her hitherto cold-hearted lawyer walked out of the room. \n\n* * \n\nSEVENTY-TWO HOURS LATER \n\n\"Where are we going?\" Natasha asked listlessly, leaning against the plush leather recliner. Her eyes were half-lidded from the remnants of the sedatives. She clutched her seatbelt gently. \n\n\"Away,\" said Heather, looking straight ahead. \n\nNatasha looked bewildered for a few seconds. Heather slowed down to the point where she could control the power steering with one hand before speaking again. \n\n\"Don't worry, we're not skipping town,\" she said. \"The last thing you need is to be a fugitive. We're just going out for a bit.\" \n\nNatasha turned her forlorn expression out of the window. Unfeeling concrete walls and brownstones gradually gave way to the lush green country. The air was alive with the rejuvenated spirit of Mother Nature. Birds chirped and insects went about their daily tasks, cheerily heralding spring. \n\nThere could not be a greater contrast to the shell of a human being in the passenger seat of the steel grey Bugatti Veyron. Heather kept a close watch through the corner of her eye. Her client idly twirled her hair around her finger and back, fixing a blank look at the scenery unfurled outside the window. \n\n\"So you saw the tape?\" asked Natasha, not turning her head. \n\n\"Yes,\" Heather choked out, trying her best not to think of it. \n\n\"That tape is the last record of my baby's life. The last time he was still alive,\" came a trembling reply from the side. \"They didn't let me see it. The police didn't let me see it.\" \n\n\"Natasha, they were only protecting you. No mother should ever see such a video.\" \n\n\"Did he look scared? Did he suffer much?\" \n\nAn unusual lump caught in Heather's throat. She took a deep breath, forcing out glimpses of what she had seen earlier. \n\n\"Please, I need to know,\" squeezed out Natasha. \"Did Cody suffer?\" \n\nHeather did not answer. She silently kept driving, her eyes fixed on the road. Natasha looked down. \n\n\"Cody, baby. You're not alone. Mommy has felt so much pain since you left.\" \n\nHeather drove off the country road towards the shore. There was a row of yachts tethered to the wharf. \n\n\"Alden's Cove,\" Heather informed her client as she drove to the parking area. \"The southern route leads towards Locust Point. I come here when I need to be alone for a while.\" \n\n\"Why have you brought me then?\" \n\n\"We need to be alone for a bit,\" came the reply as Heather parked and opened the door. \"Maybe you'll find some perspective on the calm sea.\" \n\nThey walked silently to the main office where Heather signed some paperwork and got a permit. Expansive yachts, each built on years of unfettered greed covered the coastline. She walked to her designated spot to find Norah standing exactly where she last left it. \n\n\"Help me, Norah,\" she prayed silently. Within a few minutes, the boat set out on the crystal clear waters. Two heavy souls went with it, both seeking absolution in their own ways. \n\n* * \n\nNatasha sat at the edge of the railing. The water looked placid, reflecting the orange hue smeared across the horizon. Her forlorn gaze followed the streak of light splitting the cerulean surface all the way to the glowing semi-circle shrouded by clouds. \n\n\"My Dad used to take me on his yacht,\" Natasha said. \"We explored most of the Long Island Sound together. For days on end, we stayed off shore and ate from the hatches.\" \n\n\"I would imagine he had quite a few.\" \n\n\"Three, but his favourite was Amelia, named after my mother. She died when I was young, but Dad never let me feel her absence.\" \n\nHeather sat beside her, letting the boat idle for some time. Natasha's gaze was riveted on the blue expanse below her. Ripples lapped against the whitewashed exterior of the yacht. \n\n\"Given your attempted suicide, I can make a case that you're mentally incompetent to stand trial,\" said Heather. \"You would be examined by a court ordered psychoanalyst and, if found so, be absolved.\" \n\n\"And then what? Live in a loony bin? Or so drugged up on various meds that I spend my life in a waking haze?\" \n\nHeather looked to her side, trying to decipher the ennui sitting beside her. Natasha continued to look at the calm water below. She pushed herself to the brink, deep in contemplation. \n\n\"You won't jump,\" said Heather quietly. \"I've pondered over it a few times. The water looks so welcoming, but I can't make myself take that final push.\" \n\nHer client turned her head and looked at her lawyer dispassionately. All emotion had frozen deep within her, teething under stoic wraps. \n\n\"I lost my son. What's your excuse?\" \n\nHeather took out a cigarette and lit it. She took a deep drag, calming herself and giving her a chance to form coherent words. \n\n\"I hate myself,\" came the soft reply. \"Every single moment of every single day. Sometimes I think I could do the world a favour by ending it all, but I can never go through with it.\" \n\nThe other woman looked on while Heather continued puffs of smoke. \n\n\"Everyday at work, I have to set bad people free. The rich and powerful have tailor-made the system to help them get away with whatever they do. Who do they come to to exploit these flaws? Me. Whenever I get a case, I know that I'm defending someone who is guilty and has no intention of reforming. The only thing that separates them from common criminals is that they have the money to hire dirty suits like me to put them back on the street.\" \n\n\"Why not quit?\" \n\n\"Are you kidding me?\" she coughed. \"This job is the reason I have the apartment on Fifth Avenue, the Bugatti, the yacht and all those zeroes in my bank account. Once you get a taste of this life, you can never go back. No matter how much it hurts.\" \n\nBoth women looked straight at the sunset. The entire sun had dropped below the horizon leaving a red afterglow in the sky. Heather looked down at the water again, trying to see her reflection. \n\n\"But you're different,\" she said. \"You're a lonely grieving mother who has become a convenient target for an overzealous prosecutor. I want to defend you. I... need to defend you. But I can't do that unless you're willing to fight as well.\" \n\nHeather stopped, suddenly aware of how much she had bared her heart. She felt a desperate burn deep within herself. All sorts of unpleasant, unfamiliar emotions reared up inside her in unison. She had sworn to never let herself be so vulnerable. \n\n\"You deserve better than to be a murderer. Cody deserves better.\" \n\n\"It's too late for that,\" came the disembodied reply from the side. \n\n\"No it isn't,\" Heather said, more to herself than anybody. \n\nThe mellow light in the distance had paled, heralding imminent darkness. Natasha looked up to see a prelude of stars peek out from behind the inky blackness slowly stretching itself across the sky. \n\nA solitary tear formed at the corner of her eye, swelling with pent-up grief. It left a marked rivulet down her cheek. Heather's keen eyes traced its progress all the way to her chin. It glistened momentarily before falling on her lap and fragmenting into a million particles of a mother's unfathomable grief. \n\nShe leaned on Heather's shoulder, letting the next few drops wet the skin of her saviour. The lawyer let a hand caress her client's hair, running her fingers through the dense tresses. Without thinking, she turned her head and kissed the straw blonde strands entangled near her lips. Natasha raised her face and looked at her curiously. \n\nHeather quickly averted her gaze, trying to let her moment of weakness pass. She felt a palm on her chin turn her head back. She saw into Natasha's eyes now, iridescent pools of affection flecked with shards of twilight. They shimmered and shone bursting to the seams with emotion. Their eyes were inches apart, as if each were trying to read into the other. She saw her reflection on her client's iris, for once not hating who she saw. \n\nAfter what seemed like an eternity, they kissed. Their lips met and waltzed, like two forgotten lovers remembering what made them one. \n\n* * \n\nNatasha Belvedere looked up at the myriad of twinkling stars embedded into the black canopy unfurled above her. The night sky was accompanied by a cool sea breeze, which tickled every part of her naked skin. She closed her eyes, trying to relive the sensations her body had just felt. Pleasure as she had not known before lingered in each cell. \n\nFootfalls approached. Heather came, sans all her usual layers of clothing, carrying a bottle of Glenfiddich and two glasses. She took a moment to take in the stillness of the sea, reflecting the starry night. The yacht remained motionless, frozen in time and captured in memory. \n\n\"First time?\" Heather asked, pouring out two glasses. \n\n\"Yes,\" came the quiet reply. Natasha put her glass down beside her, content at watching the moonlight shimmer on distant waves. \"I never thought I would.\" \n\n\"I'm sorry if I took advantage of you-\" began Heather, cut of by her client's hand. \n\n\"You didn't. I had a moment of weakness,\" she said. \"Are you gay?\" \n\n\"Very,\" Heather assented, sipping from her glass. \"It's something I don't deny any more.\" \n\n\"Did you enjoy it?\" \n\nHeather did not answer, taking another sip of whiskey. Natasha lay flat on her back. The cold deck of the yacht clung to her sweaty back. Heather let her index finger trail around Natasha's thighs, tracing lazy shapes. She drew a long ellipse, all the way to her navel and back down to her clit, walking her index and middle fingers over her pulsing torso. \n\n\"How fucked up am I?\" Natasha mused. \"I'm on trial for murder and I'm experimenting with my sexuality on a yacht with my lawyer.\" \n\nShe raised her head to see the fingers continue their cyclic wandering over her stomach and abdomen. \n\n\"You're confused, you're angry, you're depressed, you're desperate to make sense of your circumstances; but you're not fucked up. Not even close.\" \n\nHeather smiled and smoothed her auburn hair back. Her eyes were fixed on her client's. \n\n\"My shrink says I have schizoid personality disorder,\" Heather said. \"According to him, I block out emotions. I can't form attachments or feel connected to people on an emotional level. In fact it's probably what makes me a good lawyer -- that I don't emotionally invest in my dirtbag clients. I don't feel for them and what you can't feel... can't hurt you.\" \n\nNo one spoke, listening to the waves rumble in the distance. \n\n\"Still think you're fucked up?\" \n\n\"Apparently not.\" \n\nNatasha reached out and took her glass. The expensive, golden whisky went into her mouth, some of it spilling past her lips and pooling around her neck. Heather bent down and sucked it off her skin, savouring the feeling of contact. \n\n\"How do we deal with this?\" Natasha asked, squirming as she felt the other woman's lips pressed against her. The walking fingers came to a halt at her clit. \n\n\"We don't,\" Heather smiled. \"We enjoy it.\" \n\nHeather's lips returned to her neck, kissing gently. Her lips pulled the delicate skin, gradually descending past her clavicle and sternum. She left a trail of wetness, marking her new found intimacy. She closed her lips around Natasha's erect nipple, swirling her tongue around it. \n\nNatasha groaned and writhed with pleasure. Heather did not relent, moving to the other nipple and clamping her lips down on it as well. Her fingers came up and she gently pinched the free nub, eliciting a throaty moan from her client. Her tongue rubbed each nub in turn. Natasha's breathing became deeper, making her breasts swell more each time, pushing her nipples deeper into Heather's mouth. \n\nEventually, she disengaged her lips and kissed down her torso. Natasha's erogenous zones were awake now, tingling in anticipation of warm lips and a dexterous tongue. Heather kissed across the length and breath of her abdomen, paying special attention to her navel. \n\nHer lips crept to her client's inner thigh. She planted soft kisses up her thigh, letting her lips explore. Natasha was shifty under her, but she maintained her focus. Her lips retraced their path all the way back to her mound before beginning their journey on the other side. Simultaneously, her fingers brushed against Natasha's vulva, feeling the wetness. Her index finger dipped in to the recently familiar orifice, prodding the fleshy wall. \n\nNatasha felt the roving finger probing inside her, radiating eddies of pleasure through her nervous system. Heather let her finger run from top to bottom of her slit, gently teasing the inflamed opening. She added another finger, pushing deep inside until she found the G spot. \n\nHer fingertips brushed the G spot over and over again, rocking Natasha's entire being with paroxysms of ecstasy. She felt a heat run all the way to her molten core. Every nerve ending was aflame with a singular desire. \n\nIt was too much now. Heather's lips were on her clit, rubbing her tongue against her sensitive nub. She moaned and turned her legs, holding Heather's head in place. Abruptly, she pulled her lawyer up by her hair. Heather looked bewildered, but followed her lead. She rested her chin on her chest and looked into her eyes. \n\n\"I want to do it to you,\" Natasha said timidly. \n\n\"Are you sure? You've never done this before.\" \n\n\"Please let me.\" \n\nHeather took the lead and knelt above Natasha's head. She bent forward slowly, taking care not to put her entire weight on the fragile woman under her. Her dripping mons descended perfectly into the client's mouth. She paused, letting Natasha get used the new feeling around her tongue before bringing her own lips near the engorged lips, so invitingly splayed for her. \n\nThey tongued each other slowly and methodically. Natasha studied the beautiful opening before her, unfurled like the petals of a rose in full bloom. She let her na\u00efve tongue taste the forbidden depths of her lawyer's desire once, liking the exotic, tangy flavour. \n\nShe thrust her tongue in deeper, faster when she felt Heather slurp at her vulva in a series of long licks that traversed the entire length. The tip of her tongue grazed her clit and made her buck her legs up, pushing her clit past Heather's lips. She licked more vigorously, inciting a fervent response from the woman above her. It was a perpetual motion machine -- a cycle of each woman giving and receiving unbridled pleasure. \n\nHeather rolled to her side and rested her head on Natasha's thigh before resuming her licks. She saw moisture line her lover's orifice, glistening in the moonlight. The smell of sex intermingled with the sea breeze. A wave crashed into a nearby jutting rock and showered them with a fine mist. Heather's eyes momentarily detached from her lover to see the microcosmic droplets, suspended fleetingly and luminescent. They laughed, shaking the water off, and continued licking. \n\nNatasha felt a seething need within her. It morphed and grew, feeding on itself. She closed her eyes, feeling a tongue and two fingers impale her pussy in rhythmic strokes. Bursts of light clouded her peripheral vision, seguing into a scintillating flare. \n\nShe whimpered and pushed her tongue as deep as it would go into Heather's warm, inviting folds. The taste, the feel, the ambience -- it all seemed so right. The very air was tinctured with the cool zephyr of night, ensconcing the sweaty lovers, exploring tantalizing parts of each other. \n\nThe need took over her now, singeing every nerve ending in her body. Her erogenous zones were alight. Her stomach rose and fell like the angry sea after a midnight tempest. Her breathing was ragged and uneven, unable to wait for the hurtling imminent climax. She clenched her eyes shut once more and beheld a scattering of colours. \n\nHer orgasm swept her up like an inferno, searing through her and sending her into orbit. It had the intensity of a supernova and yet, the soothing calm of an autumn breeze. Her body verged on the edge of logic, before diving headlong into an abyss of untamed pleasure. It felt raw, animal, primal, and drowned her in endorphins. \n\nA kaleidoscope of images flashed before her. She fleetingly saw her life in frames. The reel raced past her eyes until she could only see herself and Heather naked in still life watercolour. Heather felt a flood of cum rush out against her tongue. She lapped it up and took as much liquid arousal into her mouth as she could. \n\nWrung out from their mutual exertions, they lay in a tangled heap of flesh. So close that they breathed as one, panted as one. So close that their hearts beat in unison. So close that their skin in contact made them feel like a natural piece of the other -- a two-piece jigsaw puzzle which was finally complete. \n\nThey were both afraid and incomplete alone, so they held on to each other tightly for courage. \n\n* * \n\nHeather stood and looked around, taking in the scenery. There were a few people in the distance. Her eyes lingered on the imminent sunset for a few moments. After a short while, she finally composed herself enough to speak. \n\n\"I'm here once more to talk. It's been a while.\" \n\nHer parents' gravestones looked back at her with their usual deathly silence. She slowly browsed every letter elegantly carved into the polished marble slabs. \n\n\"I'm sorry I haven't visited as often as before, but life gets in the way. You understand that, don't you, Dad?\" she said. \"After all, you were the one who encouraged me the most to become a lawyer.\" \n\nThe stones gleamed back at her in the ambient light. Heather felt a chink in her cold, invulnerable armour. She shrugged it off. \n\n\"Remember how excited you guys were when I got my first job? You'd be so proud of where I am now. I am in line to be the youngest partner in my firm's history. It's everything you dreamed for me.\" \n\nHeather paused to kneel between the gravesites, letting her fingers softly caress the grass. \n\n\"See how happy I am?\" she laughed. \"See?\" \n\nThe dead could not laugh at the irony. \n\nBroken. Lonely. Desperate. Confused. Betrayed. Crushed. Disconsolate. Fragile. Pathetic. Rejected. Depressed. Hollow. Worthless. Destructive. Empty. Defeated. Tortured. Numb. \n\n\"I'm fine. I'm happy.\" \n\nEven among those who could not tremble in fear or gape in awe at her stature, she felt it imperative to try and maintain her walls of stone. It was part of her psyche now. ",
        "\"It's all your fault,\" she said, forcing the raw emotion back down her throat. \"You left me all alone. You weren't there to guide me and look what I do for a living now.\" \n\nThe sentence sounded as hollow as herself. \n\n\"Sometimes, I'm glad at the thought of losing a case. Maybe someone will get their just desserts if I do. But I can't. It's unbecoming for a lawyer like me.\" \n\n\"But I've found someone worth fighting for. She's different from the others. She doesn't deserve to be in jail,\" Heather went on in a dispassionate voice. \"She deserves so much better. I can give it to her, right?\" \n\nThe stones sullenly refused to answer. Heather smiled and wiped a phantom tear off her cheek. Unbeknownst to Heather, the clear sky had slowly given way to a slate grey visage during her monologue. \n\n\"I'm going to fight for her. I'm going to fight and I'm going to win.\" \n\nThe lawyer inside her knew how improbable it sounded, but it was all she had to cling to. She turned her attention back to her mother's stone. The clouds overhead bulged and rumbled intermittently. \n\n\"Remember how we used to go to Church on Sundays, Mom? You made me sit in front and sing all the hymns you did. I'm sorry but I haven't gone in years. I used to think I'm too far gone for even God to help.\" \n\nShe put her bouquet down between the headstones. Her voice was no more than a choked whisper when she said. \n\n\"Am I too far gone?\" \n\nBefore she finished the sentence, she felt a fat drop of water hitting the top of her head. It was followed by several more in quick succession, tears from above to answer her question. She looked up at the torrents of water cascading down from the sky. Touching both stones one last time, she rushed back to the interior of her Bugatti, cursing at the untimely weather disruption. \n\n\"Get it together, Heather,\" she said, lighting a Marlboro. \"Get it out of your system.\" \n\nShe took a long drag and let her mind calm down before exhaling the smoke. The feeling of tender vulnerability abated, leaving an uneasy disquiet. \n\n* * \n\nOnce in a while, Heather had had occasion to drive past the Belvederes' mansion. She usually had her phone plastered to her ear, but did throw a quick glance at it. It looked grandiose from her vantage point. \n\nThat day, she stood at the heavy iron gates, studying the fa\u00e7ade of the ancient structure. Ivy grew between the white-bordered windows going all the way to the ground. The tiled roof had a few gaps, as did the aged paint on the walls. She parked her car and quietly walked to the front door. Her finger pressed the doorbell once. \n\nThe door swung open, revealing a burly old man standing with dignified poise and a coat to match. \n\n\"The men from the bank came less than an hour ago,\" he said, visibly irritated. \"Why have they sent someone else so soon?\" \n\n\"She's not from the bank.\" \n\nThe man turned around. Natasha stood behind him, dressed in a simple skirt and top. \n\n\"She's my lawyer, Gerard.\" \n\nThe man turned around with a softer gaze and bowed his head. \n\n\"I'm deeply sorry,\" he said, holding his arm out. \"Please, let me take your coat.\" \n\n\"Could you prepare two cups of tea?\" Natasha asked. The man silently disappeared to the right. She turned to face her flummoxed lawyer. \n\n\"You'll have to excuse Gerard. He doesn't like it when men from the bank pay unsolicited visits. He's been my family's butler for over twenty years. I haven't been able to pay his salary in months, but he insists on serving me. He says he wants to stay with me, even after the bank eventually forecloses the place.\" \n\n\"That kind of loyalty is rare these days,\" said Heather, walking alongside her hostess. Her eyes wandered through the cavernous hallways, somehow lacking their accustomed opulence. The high oak ceilings were not polished. Her eyes noticed a conspicuous lack of furniture. There were patches of light-coloured plaster visible on the walls, where paintings had probably once hung. \n\n\"There used to be a lot more furniture,\" Natasha reminisced. \"Many of them were really expensive and one of a kind. I had an original Chippendale armoire in my bedroom. I've had to sell most to get by.\" \n\n\"What happened?\" \n\n\"The crash happened,\" she said. \"We were among the worst hit. Within a few months, all the real estate owned by my family plummeted. Our investments fell through and before we knew it, we had to look up Chapter 14.\" \n\n\"I'm so sorry.\" \n\n\"My Dad doted on me growing up,\" she went on, leading the way to the sitting area. \"I never had to raise a finger to get anything. Maids, housekeepers, butlers, chefs -- you name it and I had them at my beck and call. I wanted to see kangaroos and we immediately got on his private jet to Melbourne for a couple of weeks. I was more spoilt than you can imagine.\" \n\nShe escorted Heather to a cheap, dusty sofa set and a small adjoining table. They sat down before she resumed. \n\n\"Dad was so happy the day he walked me down the aisle. Morgan was the best man anyone could hope to marry. He took my surname. Within a year of our marriage, Cody was born. Dad passed peacefully, confident that nothing would ever disturb the life he had set up for us.\" \n\n\"What happened to Morgan?\" \n\nNatasha stiffened at the mention of his name. Her discomfiture lasted while Gerard reappeared with a porcelain teapot and two cups. He lay the tray down and went his own way. \n\n\"You don't have to answer that question-\" Heather began, only to be cut off by a resolute hand. \n\n\"It's okay,\" Natasha whimpered. \"I want to tell you.\" \n\nHeather took a sip and leaned in closer. \n\n\"I knew the business was doing badly, but I always thought things would eventually work out. Morgan was so smart. He was at the top of his class at Wharton. There was no way he would let the company sink. I was so sure of it.\" \n\nShe paused and clutched her raven black tresses in despair. \n\n\"I should have known how bad things really were. Morgan looked so tense all the time and would spend most nights pouring over ledgers of how much we owed. He barely ate or slept. I tried to comfort him, but he pushed me away. Instead, I focussed on Cody, who was just a baby at the time. I took him to the park, the playground and never left him alone with his nannies.\" \n\n\"What happened then?\" \n\n\"One day, I returned home with Cody and found Morgan in the study,\" Natasha said listlessly. \"His lips were wrapped around the barrel of his gun. His brains were splattered all over the walls and furniture. Cody and I had to walk in on that.\" \n\n\"I'm deeply sorry,\" Heather said, knowing her words could never be enough. \n\n\"Suddenly, I was jolted into the harsh reality that I had been shielded from all this time. I went through the papers in the study and realized that all our stock options were worthless. It was only a matter of time.\" \n\nNatasha poured herself some more tea. Heather scanned her face for anguish, failing to find any. She had hardened herself to the point where she shut out all the pain. \n\n\"An all too familiar feeling,\" thought Heather. \n\n\"Cody became my life. He was all I had left to cling to. I made every moment of my day about him so I wouldn't have to think about my finances,\" she said. \"Everything fell apart around us, but we had each other. It was like a bubble, where the real world couldn't reach in.\" \n\n\"What about family? Didn't you have any relatives?\" \n\n\"No one. Cody and I were all that was left of the famous Belvedere family. I got three jobs to keep us afloat and made sure Cody could still go to school. I cut down to one meal a day to ensure he had three and had a new uniform whenever he needed it. He wanted to give a gift for a friend's birthday, and I pulled extra shifts to make sure he was not disappointed. I never let him feel what was not there.\" \n\n\"The same way your family sheltered you,\" Heather completed with a nod of understanding. \n\n\"I even begged the bank to hold off on the foreclosure for some time. All the imported jewellery my Dad ever bought me went towards earning extensions. In a month or so, we were supposed to move to a small apartment. I had set everything up with the help of a waitress at the diner where I take the late shift.\" \n\nHeather put her cup down and looked at the pitifully weak woman seated across from her. She looked so frail and delicate, with a gaping void where her soul once resided. \n\n\"I didn't believe it at first, you know?\" Natasha went on in a disembodied voice. \"When the police called me to the city morgue to identify my son's body. It was a mistake, it had to be. No one could possibly hurt Cody. Everybody loved him so much. All he had to do was smile and he had a new friend.\" \n\n\"I've seen his picture,\" Heather said. \"He looked adorable.\" A sentiment entirely lost on me. \n\n\"It all seemed like such a surreal dream to me when the coroner pulled back the white sheet,\" she went on. Heather was not entirely sure that her client knew what she was saying. \n\n\"I saw my baby's beautiful face with so many bruises and scars. I held his hand to comfort him, but it was so cold. I held it tightly, trying to remember when it used to be warm. My baby, so warm and full of life was now no more. My brain simply went numb. It was as if every sense switched off at once. From then on, I've been living this nightmare, hoping that I can wake up and hold my baby again.\" \n\n\"Tell me about the day of the verdict,\" Heather asked. \"It was last week, I understand.\" \n\n\"I can't describe it,\" she said. \"I keep hearing the judge saying that the evidence is inadmissible and without it he has no choice but to let him go. Those words kept playing in my head in a loop. After that, it's all a blur. The next thing I remember is when the police arrested me in the park.\" \n\n\"Here's the problem, Natasha,\" Heather said. \"That day, you took your gun out of your locked cabinet, filled it with bullets. Then you went to the entrance of the alley leading to Lance's favourite pub and waited for him. That will sound like the actions of a sane person to the jury and the prosecutor will make special mention of it.\" \n\nNatasha looked disenchanted while Heather opened her pad and started writing. \n\n\"Did you hear voices? Maybe Cody's voice. Did they maybe tell you to kill Mr Whittaker?\" Heather asked hopefully. \"Did you see Cody in your dreams where he asked you to take revenge? That I can give the jury.\" \n\n\"I see Cody every time I close my eyes. We are in the park, him on my lap. He tries to count the pigeons eating nearby, but some of them always fly away.\" \n\n\"Please, Natasha. Did you feel anything that told you to kill Lance Whittaker?\" Heather beseeched. \n\n\"Truthfully, I stopped feeling altogether. I didn't even feel the satisfaction that came with putting a bullet in him. It was all so... natural.\" \n\nShe looked at Heather's face, ashen with concern before giving a wry smile. \n\n\"Not a helpful case of temporary insanity, am I?\" \n\n\"Don't say that,\" her lawyer said fervently. \"I can get all the doctors you need to testify how you were out of your mind.\" \n\nImmediately, she knew it was a bad idea. None of her picks had evaluated Natasha in the aftermath of her shooting, and she knew from experience that juries did not respond kindly to an array of experts designed to confuse them. \n\n\"By your expression, I see you don't think that will help,\" her client said. \n\nHeather looked up at her. There was an unnerving nonchalance writ large on her face. She threw her head back and smiled. \n\n\"Oh well. It's not like there was much hope for me anyway. Let's go upstairs now.\" \n\n\"What do you have upstairs?\" Heather asked. \n\n* * \n\n\"Wow.\" \n\n\"I get that a lot,\" said Natasha, standing next to her piano. It was a Fazioli grand, made from specially prepared red spruce found in the Italian Alps. It sat in the middle of the upstairs hallway, a stark contrast to the destitution around it. Heather's eyes beheld the massive musical instrument. \n\n\"It's the one thing I haven't been able to let go of yet,\" Natasha said, running her fingers over the ivory keys. \"My father bought it from Milan when I was five and I fell in love with it. I even had a teacher for ten years.\" \n\nAs she spoke, her fingers wandered over some of the keys. Melodic strains floated through the air. Heather walked closer and Natasha sat down. \n\n\"When I play, it's like I'm in a different place. Cody liked it too. He often sat beside me and tried playing,\" she ruminated. \"One of my jobs is at a piano bar down town. It helps me relax after the gruelling work at the others.\" \n\nHeather leaned against the far end and let her fingers create a few notes idly. Natasha stopped playing, listening to her lawyer's attempt at the Fifth Symphony. \n\n\"You have some hidden talents, Heather.\" \n\n\"I'm not too good at it,\" she laughed back, missing a few notes. \n\n\"Come here,\" Natasha said, patting the part of the stool beside her. Heather sat and watched as her client's dainty fingers danced over the keys. There was a languid elegance in the way she glided from one note to the other, stitching together a harmonic rhythm. \n\nNatasha didn't speak like someone who was facing life imprisonment. She seemed at peace with whatever was going to happen to her. \n\n\"Heather, can I ask you a question and expect an honest answer?\" \n\nThe lawyer nodded tentatively. \n\n\"What are my chances like?\" she asked. \"Please. Tell me the blunt truth.\" \n\nA few agonizing seconds of deafening silence answered her. Heather averted her gaze. She smiled and lifted her face till they made eye contact. \n\n\"Thank you for not lying to me,\" Natasha said softly. \"I want you to know that I couldn't have asked for any more from you.\" She turned back to the black and white keys in front of her. \n\n\"This piece is my favourite,\" she said, letting her fingers rest for a moment. \"I find it calming. Cody loved it too.\" \n\nThe first few notes rose from within the piano. Heather listened, smiling weakly. Her fingers played the next notes on a higher scale. Natasha looked at her, surprised. \n\n\"Clair de Lune is one of my favourites too,\" she said, continuing with her amateur tapping. \"I heard it at Carnegie Hall last month and haven't been able to get it out of my head ever since.\" \n\n\"Can we try it together?\" \n\nThey sat close to each other. Natasha played on a lower scale and Heather matched her notes on a higher scale. There was the occasional mistimed note, but they went on. Heather smiled, trying to lose herself in the tranquil tune. For a fleeting sliver of time, she forgot about the grim reality of her existence. She turned her head to see Natasha's eyes closed and her fingers ghosting from key to key. Maybe she could see Cody sitting beside her, taking in the soulful rendition. \n\n\"We're going to win, Natasha,\" she said. \"I don't know how but we're going to win.\" \n\n\"Don't make promises you can't keep,\" came the lilted reply. Her fingers kept playing Debussy's masterpiece. \"Let go, Heather. You did all you could.\" \n\nThe next instant, Natasha felt a pair of luscious lips press against hers. She ignored the heavy stench of nicotine and tongued hungrily. A pair of hands grasped her waist and hoisted her atop the smooth surface of her piano. She opened her eyes to see Heather in front of her, looking like she was desperate to show some emotion. \n\nThey kissed again and Heather ripped open the buttons of her lover's top. She hungrily pressed her lips between Natasha's breasts. She groaned and threw her head back. Heather stood up and took her client's dress completely off, feasting on her aroused nipples. \n\nHer fingers reached down and rubbed along the length of her wet orifice. She frantically rubbed her clit, all the while her mouth wreaked havoc on her torso. Her teeth grazed each nipple before she moved up, leaving a wet trail on her neck. \n\nNatasha moaned and pressed a few random keys. The cadenza of lust played intermittently while Heather became more frantic with her manoeuvrings. Her fingers now concentrated on her clit, sending shockwaves of pleasure through her. Her lips kissed all over her face before culminating in her mouth. \n\nSuddenly, she impaled Natasha with her fingers. She gasped loudly into Heather's mouth in response and let a few notes ring loudly through the room. They reverberated off the walls and lost themselves in the furious panting. Heather pushed Natasha down until she was lying flat on her back and continued ravaging her G spot. \n\nThey shared a torrid kiss, letting a multitude of passions drown them. Three fingers were now sawing in and out of Natasha at a breathless pace. She closed her eyes and saw the darkness segue into a dazzling ensemble of colours. A riptide of orgasm crashed through her body, leaving her weak in the aftermath. \n\nNatasha could barely open her eyes into slivers, seeing the spent and sweaty face of her lawyer. Heather gave her a lop-sided smile. \n\n\"I won't let go, Natasha Belvedere,\" she said with cold conviction. \"I will hold on till the bitter end. If you burn, I promise you that I will be burning right beside you.\" \n\n* * \n\nHeather Franklin had an hourly rate of a thousand dollars. Tom Markham's figure was closer to a hundred thousand. Based on the numbers, a layman could conclude he was a hundred times better, but Heather knew all too well that was only half the story. \n\nIn reality, Tom Markham wasn't better. He was the best. Period. \n\nShe forced herself to stand straight outside his heavy door. Behind it was the Markham of Griffin, Markham and Wiley, a lawyer who every law student in every college aspired to be. Some of the most famous cases of the past two decades had been won by this man. As much as she hated her firm and everything it stood for, she had nothing but reverential awe for that man. \n\nTaking a deep breath, she knocked on the door twice. \n\n\"Come in, Heather,\" came the reply. \"Have a seat.\" \n\nHeather sat down on the other side of his ornate desk. He had his head down, going through some paperwork. Most of his hair was black and combed neatly. Despite pushing forty-five, he looked lithe and athletic. After a few moments, he raised his head. \n\n\"Heather, I think you know why you're here,\" he said. \"The senior partners wanted to talk to you themselves, but I told them that I would. I think it's most appropriate that way.\" \n\nShe nodded. Tom spread his arms out and leaned forwards. \n\n\"Your superiors tell me that you have taken a pro bono assignment from Judge Giles and are intent on going through with the trial, rather than dump it quickly,\" he said smoothly. \"This in the same year where we might consider you for a promotion to junior partner. Are you sure you're doing the right thing here?\" \n\n\"I think so, sir,\" she said, feeling a rising dread within her. \n\nHe looked at her dourly, studying her expression for a few seconds. \n\n\"You know that I can force you to drop the case or else fire you if you remain adamant, right?\" \n\n\"I do, sir.\" \n\n\"Drop the sir, Heather,\" he said genially. \"Let's leave that to the other petty sycophants who work under me.\" \n\nShe was unsure if she should laugh. Tom's grin broadened. \n\n\"I want to ask you, Heather, what is it about this case that you can't dump it?\" \n\n\"It's the client,\" she said. \"She doesn't deserve to be in jail.\" \n\nThere was silence while he collected his thoughts. \n\n\"You know you can't save the world,\" he said sombrely. \n\n\"I don't want to save the world. I just want to save her.\" \n\n\"Can you save her?\" Tom asked. \"I've seen the facts of your case, you know.\" \n\n\"Please, let me try at least. If that means you have to fire me, so be it. If those are my choices, then being fired is the one I can live with.\" \n\nTom chuckled and leaned back in his padded recliner. \n\n\"You must think of me as some kind of monster,\" he said. \"In all fairness, corporate lawyers have earned that stereotype. Let me tell you something, Heather and I want you to listen closely.\" ",
        "Heather leaned in, pricking her ears. \n\n\"You are by far the best lawyer here,\" he said. \"I don't know if you're aware of it, but you are. I follow every case of yours and I am truly impressed by some of the things you pull off. The last thing I want is you leaving, believe me.\" \n\n\"Thanks,\" she said shortly. Tom reached out and turned a picture frame on his desk towards her. There was a picture of Tom and a black man. Heather surmised that it had been taken twenty years back. \n\n\"David Carruthers. He used to be a dock worker back in the early nineties when I met him. He had a rare adenocarcinoma and needed an experimental procedure if he wanted a chance to live. The problem was, his insurance company refused to cover the cost. His case fell through the cracks, right onto my lap. I was a rising star back then, not unlike yourself. \n\n\"He was so different. He wasn't smug, rich and entitled like all the other clients who came my way. Here he was, a decent working man who needed a potentially life-saving procedure which he was going to be denied by his insurance company. The insurance company was one of the clients at my old firm, creating a conflict of interest. Everybody I met told me to drop the case, some not so politely.\" \n\n\"But you didn't,\" Heather said. \n\n\"I can't explain why but I clung onto it. I had had enough of defending trust fund jerks. I filed motion after motion and went to every damn deposition the insurance company set up. There was so much time wasted in discovery, trials and the opposition kept getting bogus continuances.\" \n\n\"They wanted David to die before the case got resolved,\" Heather said from experience. \n\n\"Precisely, but I fought through all that bull shit and adversity. I forgot about eating, sleeping and everybody yelling at me to drop this case. It became my obsession. Finally, I won and David got his treatment. Of course, I got fired from my firm for losing the insurance provider as a client.\" \n\n\"Did it work?\" \n\n\"He walked his daughter down the aisle last month,\" Tom said with a satisfied smile. \"I'm her godfather.\" \n\n\"Is that why you keep his picture on your desk?\" \n\n\"I keep that picture so that I can look at it as often as I need to. No matter how many scumbags I defend, I can always look up and see that I did something good.\" \n\nHe turned the photo back towards himself. \n\n\"Everybody should have a David Carruthers. Everyone who still has a conscience, I mean. That's more than I can say for most of the lawyers in this city.\" \n\n\"So you want me to fight this case?\" Heather asked. \n\nTom smiled and said. \"Heather, you are standing on the edge of reason. In front of you is a precipice of untold misery. When you jump, you are going to experience all sorts of emotions and attachments you never knew existed. For once, you are emotionally invested in your client. It's a good person that you're fighting for. Use that to positive energy to fly. But I should warn you, it's a long way down if you can't.\" \n\n\"What do you mean?\" she asked, puzzled. \n\n\"Have you considered what will happen if you lose this case? Have you even thought about how it will feel like seeing someone you have grown so desperately close to be sent to prison?\" he said quietly. \"Losing this case will destroy you, Heather. I've seen it before. You will never be the same again. Are you sure you want to take that risk?\" \n\n\"Yes,\" she said immediately. Tom placed his hands behind his head and beamed. \n\n\"In that case, I grant you carte blanche to do whatever you want. If somebody stands in your way, give them my reference,\" he said. \"There is one thing though, you will need a second chair. Pick anyone you want and I will make sure they are available.\" \n\nHeather thought it over, mentally evaluating the people she could pick. After a few seconds, the penny dropped and she said the bravest thing in her life. \n\n\"I pick you.\" \n\n\"Me?\" said an amused Tom. \"You're joking, right?\" \n\n\"No, I'm not.\" \n\n\"Heather, I am the last person you want on this case,\" he said plainly. \"You work in the shadows. My simply being there will put this case in the media spotlight. There's no way you're ready for that.\" \n\n\"I can handle that,\" she said. \"It means little compared to having you as part of the defence.\" \n\n\"What about your client? Will she be okay with this?\" \n\n\"I'll talk to her, but yes,\" she said firmly. \"You're the only person I can think of who can pull this off.\" \n\nTom pursed his lips thoughtfully, patting his fingers on the wood. A few minutes later, he shook his head. \n\n\"Can't, sorry. I have this anti-trust case to deal with. I'm not even half-way through the research. Pick someone else.\" \n\n\"I know anti-trust law inside out,\" Heather said triumphantly. \"After my case is over, I will give you all the work product you need that very day itself.\" \n\nHe looked at her determined expression and smirked. \n\n\"You're not going to let this go, are you?\" \n\n\"Not a chance.\" \n\n\"Then I don't have another choice. Looks like I'll be fighting my first murder case in years.\" \n\n\"Thank you,\" said Heather breathlessly. \"I'll get the files ready and inform the prosecution that you are taking over.\" \n\n\"The case is still yours, Heather,\" he said. \"All I'll be is second chair.\" \n\n\"Why would you be second chair?\" she asked incredulously. \n\n\"Because the lead on the case needs to be a woman. You want me in the background, guiding the case, not leading it. If I do, then it becomes about me and not about the plight of your client. We don't want that.\" \n\n\"Fine,\" said Heather, bouncing on the balls of her feet. She would never get used to the fact that she was going to have Tom Markham as second chair. \n\n\"What is our plea?\" he asked. \n\n\"Temporary insanity.\" Tom stroked his chin contemplatively for a few minutes. \n\n\"But she wasn't temporarily insane and any doctor who says so will obviously look fake,\" he said. \"There might be a backlash from the jury if we try that.\" \n\n\"Then what do we do?\" \n\n\"Nothing, we just fight the case.\" \n\n\"I don't understand.\" \n\nHe stood up and walked across the table to where Heather stood. \n\n\"You know she wasn't temporarily insane. I know it. The prosecution knows it. The judge knows and the jury will know it too. In fact, everybody who watches this case on TV will know it. The thing is, they're going to set Natasha free anyway.\" \n\nHe took a moment to see the priceless bewilderment on Heather's face before he laughed out loud. \n\n\"Temporary insanity isn't the reason they will set her free. It's merely the pretext. They are going to want to set her free and all they will need is an excuse.\" \n\n\"Why will they do that?\" \n\n\"Because they won't have another option. We are going to fight this battle outside court. You have a grieving mother who lost her only son against a sick pedophile who walked free. Give it to our media contacts and watch the public's blood boil. There will be so much public sympathy for her and outrage for the DA's office that the trial will be irrelevant.\" \n\nHeather's eyes widened. Tom placed his palms on his shoulders. \n\n\"Get an immediate trial date. Make the sure the event is fresh in people's minds. Exploit the heartburn every New Yorker will feel for her while it's still fresh. By the time we're done, the ordinary citizen should be so angry at the system that their only regret is not shooting that child-killing sicko themselves. They make up your jury pool.\" \n\n\"Isn't that illegal?\" Heather asked, overawed by the plan. \n\n\"That's our only shot.\" \n\nShe collapsed back into her chair, overwhelmed by the events of the past half an hour. Her brain hurt from all the information trying to sink in. Tom got on his knees and looked her in the eye. \n\n\"You'll have your own picture soon, Heather.\" \n\n* * \n\nIf you have reached so far, I would appreciate your votes and comments. Private feedback is also welcome. Chapter 2 is the trial itself."
    ],
    "authorname": "LaRascasse",
    "tags": [
        "heather",
        "lawyer",
        "natasha",
        "trial",
        "lesbian romance",
        "yacht",
        "starlight"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/edge-of-reason-ch-01"
}