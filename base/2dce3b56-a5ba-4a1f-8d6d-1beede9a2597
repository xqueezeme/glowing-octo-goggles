{
    "title": "Let Go",
    "pages": [
        "I'm detecting a trend. This one is edited, again by the smartest, lovliest ladies on Lit. And this is not just my opinion. Enjoy.\n\nThis is a pretty common theme. MM did it, several others have put their spin on it, Bigguy 33 was the most recent. This is my spin.\n\n*****\n\n\"Wait, what did you say?\" Dave was in his wife's office. She was the head honcho of the division, the big cheese. Dave, he was a lowly accounts representative, quite a bit down the food chain. he was a little nervous at first when she came on board, but there were several levels of management between them, so it was all good, he thought. Maybe not.\n\n\"You're numbers are way down, Mr. Waxman. You were the worst performer of the year in your division. I'm afraid we had no choice. X is waiting outside to escort you to your office to collect your things.\" X stood for Xavier, one of their two security guards.\n\nThe had always called each other Mr. and Ms. in work settings, to keep it more professional. She kept her last name for professional reasons, so she said, but everybody in the office knew they were married. He even had a picture of her on his desk, of her shaking the hand of the Chairman of the Board as she received her promotion.\n\n\"That's it? Nine years of loyal service to this company and I'm terminated because my numbers are off? If you had bothered to listen to me, you would know...\"\n\n\"Please, stop. The decision has been made. Let's not make it any harder than it has to be.\"\n\nFor some reason, that struck him as funny. \"Listen, Pink, I mean Ms Patterson, I really...\"\n\nShe must have hit some button, because all of a sudden three hundred pounds of black muscle was in the room with them. \"Xavier, would you please escort Mr. Waxman to his desk to collect his things? Best of luck to you Mr. Waxman, perhaps this will encourage you to try harder at your next position.\"\n\nX definitely looked embarrassed, but he had his own job to do. Dave looked at him and grinned. \"C'mon X. Like the lady said, let's not make it any harder than it has to be.\"\n\nShe was still talking when Dave went out the door. Everyone avoided looking at him, which told him most of them knew beforehand. That definitely didn't improve his mood. He walked slowly, looking those who would glance at him in the eye. They looked away every time, and the women actually blushed. He kept very little in the way of personal items in his office, so it didn't take fifteen minutes to pack one small box. He was walking out when X spoke.\n\n\"You forgot this, Mr. Waxman,\" he said, handing Dave the expensive pen and pencil set she had given him when he made Salesman Of The Year the first time. Dave looked at it for a second and dropped it in the wastebasket with her picture.\n\n\"No, I didn't\"\n\nX drove Dave home, so he could take the company car back. After several attempts at conversation he got the message and shut up. As Dave got out, X reached over to shake my hand. Dave took it, because it was just his job and he really liked the guy. \"Sorry, man. Sorry it happened like that.\"\n\nDave grinned, even though he didn't feel like it. \"Me, too.\"\n\nHe walked in, looking at the house as if it was the very first time he ever saw it. He realized suddenly there was very little of his presence in the house. It seemed she was minimalizing him at home as well as work. It made him wonder if he had a performance issue at home, and if he'd be canned for not keeping his numbers up.\n\nShe came in about seven, late even for her. Dave was watching a baseball game and didn't even look up. \"Hi, honey, sorry I'm late. Meetings ran over, you know how the Board loves the sound of their own voices.\"\n\nHe didn't respond, just kept watching the game. She looked at him for a minute before deciding to try a different track. \"What's for dinner?\"\n\nIt had been their practice over the years that whoever got home first made dinner. It had occurred to him as he examined their relationship that she probably hadn't fixed dinner more than a dozen times in the last year, and most of those times were because he was traveling.\n\n\"Whatever you decide to fix yourself. I've already eaten.\"\n\nShe just stared for a minute before she opened her mouth and started the worst fight of their marriage. \"Surely you're not mad about today. It was a business decision, honey. It had nothing to do with you personally. I still love you just as much.\"\n\n\"For an executive and a fairly intelligent person, I can't help but think in this case you're a fucking moron! And by the way, yes, I am angry. In fact, I'm pissed beyond words. You handled the whole thing very badly. Had I ever gotten an unfavorable review in all the time I'd worked there? Where's the paper trail of warnings, counseling and reprimands? Sure, my numbers were down, but there's a very good reason. One you never bothered to discover. I...\"\n\n\"Stop begging! I'm sure I did the right thing professionally.\"\n\nIt shocked him so badly that he did stop talking for a minute. She smiled and started to speak, but he exploded. \"Fuck you, the Board, and every other asshole in the company! YOU WERE NOT PROFESSIONAL, YOU WERE NOT REASONABLE, AND YOU DAMN SURE WEREN'T INTERESTED IN ANYTHING I HAD TO SAY. Tell me, how much input did Adler have in this?\"\n\nShe was reeling at his outburst. She actually stuttered for a minute before she got it out. \"He's been concerned for months, and was very nervous when he brought me the numbers. You had gone from being one of our top producers to the absolute worst. I had no choice! I had to send the message that no matter who you were, if you didn't produce, you were gone. It was the only way I had to keep the respect of the people under me.\"\n\n\"Once again, a fucking moron. I've been thinking all afternoon, now that I had some free time. When did you stop respecting me as a man and an employee? If you'd had the least bit of love for me, personally, or regard, professionally, you would have handled this completely differently. You could have tried talking to me, give me a heads up, and if it got bad, you could have offered me a chance to resign. Do you have any idea how hard it's going to be for me to find another position? If I can't perform well enough for my wife, someone who is supposed to love me, why would strangers trust me to do a good job? You've fucked me in this town; I'll have a hell of a time landing a job now. It not like I can whip out a glowing review from my old company, now is it? I've said enough. If we continue, we, or rather I, may say some things that can't be taken back. Why don't you get some dinner, and I'll finish watching the game.\"\n\nShe tried one more time. \"I never thought you'd take it so badly. It's just business, honey. We'll be fine. And don't worry about a job; I make more than enough to keep us...\"\n\nDave held up his hand. \"Please, stop while you're losing. I'd bet you'd love to turn me into a househusband; it would cement your reputation as a tough as nails CEO. I can hear them now. 'Watch out for that one. She's so tough she fired her husband and turned him into a little house bitch. Bet she's the one who's on top when they fuck, if she isn't banging him with a strapon. Wonder if she makes him wear panties around the house?' Well, you can forget that shit. I'll eventually land another position somewhere, even if it's not here. Now please, stop talking.\"\n\nHe'd finally managed to piss her off. \"Fine! Sulk! Get angry! It might give you enough motivation to do a good job next time. FYI, honey, your little tantrum put the skids on the extra good loving I had intended to give you tonight. Looks like it'll be you and your fingers if you want any release in the near future.\"\n\nHe shrugged. \"Fine. At least they won't fire me if I don't perform as expected.\"\n\nThat one hit her hard. She tried forming words until she finally screamed in frustration and stomped out of the room. He heard her rattling pans in the kitchen, so he assumed she made her dinner. A little while later, he heard her go up the stairs. She came back in the 'absolutely no sex for you tonight' outfit: an old tee shirt and ratty sweatpants. It seemed to upset that he didn't comment. They sat, and he let the silence stretch. Finally she spoke.\n\n\"I'm sorry, okay? I wrestled with it a long time before I made the decision. I do love you, and it isn't the end of the world. We can...\"\n\n\"We can stop talking about it. What's done is done, and you can't unring the bell. I'm going to bed. I need to get up early and put some feelers out, see if I can salvage anything out of the fiasco you turned my life into. Good night.\"\n\nShe floundered for something to say, before settling on \"I'll be up in a little while.\"\n\nHe was already asleep when she woke him with her scream. Seems when she changed, she never noticed that his things were gone. He was in the largest guestroom with attached bath, and planned to stay there a while. Soon she was knocking on the door, demanding that he let her in. Dave just turned back over, wondering how mad she'd be when she realized he'd changed the lock on the door and she didn't have a key. Ten minutes later he heard the lock rattle. A few minutes after that he heard a sigh, and then went to sleep.\n\n...\n\nJen brought her boss her standard coffee and pastry the next morning, as well as her own. She had been with her since her first promotion, as secretary, and later private assistant. Jen loved Bev for how she treated her, and was the one person in the company who was able to tell her the truth without worry of repercussions. Jen pulled a chair next to the desk, and they went through their morning ritual of coffee and personal time.\n\n\"How'd it go when you got home?\"\n\nHer boss sighed. \"Not good. Not good at all. He said more swear words in two hours than I've heard from him in all the years we've been together. Apparently, when he's angry the truth comes out, and he thinks very little of my management skills. He even moved out of the bedroom, and changed the lock on the one he moved into. Have I told you he threw the pen set he kept on his desk in the trash? Along with my picture? Really, why is he taking it so hard?\"\n\nJen looked at her boss with sad eyes. \"I warned you. You should have left him some dignity. The way you did it was really cold, boss.\"\n\n\"I had to do it that way! I was sending a message to everyone. No one is bulletproof if you're not performing to standard. How did the rank and file take it?\"\n\n\"Truth?\"\n\n\"Always.\"\n\n\"Well, Bev, it's divided. Most of the men and some of the women think you're a screaming bitch. A few admire you, but it's very few. A surprising number are updating their resumes, saying that a company that fires people with no warning whatsoever is not a company they want to work for. Two more of your salesmen say they've seen the writing on the wall. One already has an interview lined up, and I suspect that in two-week's time, he'll be gone. The other is thinking about relocating to be closer to his aging parents, and this is the incentive he says he needs.\"\n\nBeverly couldn't believe her words. This wasn't what she had in mind at all. She thought that if she showed them regardless of whom it was, she meant business when it came to the company, everyone would work harder. She had no intention of sparking an exodus. This could be very bad. Very, very bad. She knew that in a couple of years she would be in line for a board seat, maybe eventually Chairman. This might slow those plans down considerably.\n\nJen brought her back to reality. \"What are you going to do about your husband?\"\n\nShe waved her hands dismissively, still thinking about her job. \"Give him a little time and space, I guess. He really does love me, he'll come around.\"\n\nJen had an idea it was going to take more than that, but held her silence. She had been loyal to Beverly all these years, but if things got bad, if people started leaving, she needed an exit plan. She had her own family to worry about...\n\n*****\n\nDave spent the next three weeks being spectacularly unproductive. He stopped going to the gym, stopped eating right and was drunk more than he was sober. He did nothing around the house, leaving a mess wherever he felt like. Bev tried being supportive at first, enduring his cutting remarks, until finally sinking into silence. He did note that she spent a lot more time at work. Evidently, she felt more comfortable there, where she was Queen.\n\nHe then went through a phase of not bathing. After three days Bev finally had enough. \"For God's sake, Dave, man up! You stink and you've got a pretty good start on a pot belly. You might like living like a pig, but I don't. I'm sorry, all right? I could have handled it better, but as you said, I can't unring the bell.\"\n\nHer face softened. \"Please honey, I miss the old you. I miss you in our bed, and I miss you in me. It's been almost a month, why won't you come back to me?\"\n\nDave held up his fingers and wiggled them. \"I'm kind of involved now. They seem to love me, and have never once complained about my performance, or offered to terminate me. Besides, you're already in a committed relationship.\"\n\nShe went white, then red. \"You asshole! I have never cheated on you, not once in all the time we've been married. Although I have to admit, once the word got out we weren't getting along that well, I've had offers.\"\n\n\"We'll get back to that in just a minute. And you've cheated on me our whole marriage. Not with a man, but with a job. It will always have first call on your time, you will always put it first above any needs I may have. Know how many anniversaries we've missed celebrating together? Eight, out of thirteen years. Something was always more important at work than spending time with the man you supposedly loved above all others. Don't get me started on missed birthdays, the times you broke commitments with both our parents and good friends. Ever notice how rarely you see your parents now, or how many old friends we used to have that we haven't socialized with in years? You just never seem to be able to spare the time. I'm really glad now we never had children, they would think they were living in a single parent home because they would never see you. As for your offers, how many have come from people higher in the organization? I can't imagine you fucking down; it would have to be someone who could help your career somehow.\"\n\nDave felt bad for her for just a second, looking at the pained expression on her face. He quickly got over it when she slapped the hell out of him, the first time either had ever touched the other in anger. He looked about thirty minutes later, and the print was still on his cheek.\n\n\"You sonofabitch! Don't you know I'm doing all this for us, so we can retire while we're both still young enough to enjoy it? So I'm not Miss Congeniality, and I apologized every time I missed an anniversary or major event in our lives. And we agreed no children, I couldn't afford the distraction, so don't throw that up to me. As for the offers, yes, some were from people who could help my career, but I would never have an affair, because I still love you and could never betray you like that. You need to get your act together, so get showered, dressed, shaved, and let the woman who loves you take you out for dinner.\"\n\nShe stopped, out of breath from emotion and the long speech. He gave her a sad smile. \"Sorry, I've already had dinner, three burritos and a large fry. And on the subject of children, I didn't want to be a biological dead end. I loved you so much at the time, though, that the choice was easy. Still hurt, though, when my clients used to pull out pictures of their families. What was I going to show them? We don't even have a fucking dog.\n\n\"You're right though, the pity party has to stop. I'm going upstairs to shower, shave, and try to turn back in to a real person. I'll hit the gym three times a day for a while, after all, what else do I have to do? Thanks for the motivational seminar.\"\n\nShe just stood there in shock, from the words and the fact that she'd hit her husband. Bev was smart enough not to follow him, although when he got downstairs she was very contrite and apologized.\n\n\"I'm sorry, but you don't know how hard this is on me. One business decision shouldn't destroy a good marriage like this. Please, I'm sorry I had to fire you, but it was in the best interests of the company. Like I've told you many times before, it was just business. It doesn't mean I love you any less.\"\n\nHe sighed. \"Look, Bev, I know you think in your heart you did the right thing. Firing me was just the final straw. I've played second fiddle to your career our whole marriage, and frankly, I'm done. I hope the Board chair can keep you warm at night, and that the raises and accolades will make up for the loss of grandchildren to dote on. I hope your success fills the void of a sterile life, without family or close friends.\"\n\nHe paused. \"And is it hard on you because you regret how you handled things and hurt me so badly, or is it hard because suddenly people are leaving? You created a hostile work environment when you did this to me. People don't respect you anymore, they fear you, afraid you'll arbitrarily fire them at any time. That can't be conducive to a productive workforce. Don't look so shocked; I actually had friends there, and every time I see one they fill me in. And before you ask, I say nothing to denigrate you; I only say you were sure of your actions at the time. I'm curious as to how you're going to handle it when the numbers drop and the Chairman pops round for a visit. Better hire a really good spin doctor, if you don't already have one.\"\n\nDave sighed, quietly. \"Bev, I shouldn't do this, but I'm going to tell you now this is going to get a lot worse. Be prepared for what's coming in the next few weeks. Now, if you will excuse me, I have some serious gym time to make up for.\"\n\nBeverly was lying in bed, feeling sorry for herself, going over the conversation when it hit her. he said \"I loved you so much at the time\" She was still wondering if he still loved her when she finally drifted off into a fitful sleep.\n\n*****\n\nBeverly found herself sitting with Jen three days later, pouring her heart out. \"I just don't know what to do any longer. Everything I say or try he turns around on me. I'm beginning to understand he's carried these resentments around for years, but held them in. He hasn't touched me sexually in almost eight weeks. I had to buy a vibrator to keep the edge off or I'd be climbing the walls. I can't believe he turned down the job opportunity I wrangled for him. He didn't even wait for me to get home; he came here while you were running an errand for me, and exploded. I'm very glad it was lunch time and most everyone was out of the office or in the break room.\"\n\n\"Why did he get so angry when you were just trying to help him?\"\n\n\"Well, I had to promise the President over there I'd spread a little of our business his way if he helped me out. Things were going well until the final sit-down, and the guy laid it out. He was only hiring him as a direct favor to me and only then after I had made some concessions. He told Dave he was giving him the absolutely worst territory, and if he didn't bring the numbers up quickly he wouldn't make it past the probation period. Just because your wife carried you all those years, he told him, he wouldn't be as understanding.\"\n\n\"What did Dave do?\"\n\n\"He stood up, and politely thanked the man for the interview, then he turned and left, coming straight here. The President called me just after he left, and raised hell with me because he just walked out. Then he demanded that I keep my commitment to him.\"\n\nThey changed the subject, talking general business, when the receptionist called and said she had a gentleman there who wanted to see Bev, but he didn't have an appointment. \"He says he only needs five minutes, if you would be so kind. He says he has something to deliver.\"",
        "Curious, Bev had him escorted to her office. He was a large man with a friendly face, dressed impeccably in a nice suit and tie. He thanked her for her time, and got down to business.\n\n\"Ms. Beverly Patterson? Or should I address you as Mrs. David Waxman?\"\n\n\"I go by my maiden name here, for professional reasons. What can I do for you today?\"\n\nHe really looked apologetic when he handed her the papers. \"I'm sorry ma'am, but you've been served. Good Day, I'll find my own way out.\"\n\nBeverly looked at the large envelope, and fainted.\n\nShe came to her senses on her sofa, Jen and X had placed her there, and Jen was wiping her face with a cold cloth. \"What happened?\"\n\n\"You fainted.\"\n\n\"I fainted? Why would I faint?\"\n\nJen held the envelope and it all flooded back. Bev started crying uncontrollably. It took her twenty minutes to cry it out. In a trembling voice, she asked Jen to open it and tell her how bad it was.\n\nJen opened it up and nearly fainted herself. She read through them with intense concentration before placing them gently on the table in front of the couch.\n\n\"The good news, Beverly, is that he's not filing for divorce.\"\n\nBev started smiling again, but Jen held up her hand. \"He's doing something a lot worse. He's suing the company, you, Bob Adler, and the Chairman of the Board for wrongful termination and mental cruelty. You need to get hold of him fast, Beverly, and talk him into withdrawing all this, or your career here is over. It doesn't matter whether he wins or loses; the bad publicity will be enormous. IF you get to keep your job, you'll never rise any higher.\"\n\nBeverly nearly fainted again, before pulling herself together and driving straight home, trying her best to set a land speed record for a luxury SUV. All she found was a note on the dining room table.\n\n\"I'm sorry, Ms. Patterson, but you crossed the line. My lawyer assures me it's pretty much a slam dunk, and your Board will do just about anything to keep it quiet. She was pretty ticked when I told her I would accept no deals, that I intended to make this as public as possible. Don't bother looking for me, on her advice I've moved out, at least temporarily. I still love you, though I don't understand why. When this is over I'm willing to go into counseling if you are. Maybe we can find our way back to each other. Maybe not, but I want to at least try. Oh, and if it makes any difference, I got a job, something new for me, and I look forward to it. We'll talk soon.\"\n\nBeverly leaned back in the kitchen chair, watching her life and career go up in flames.\n\nJust when she thought her life couldn't get any worse, it did. Two weeks had gone by, and the hearing was in four days. The Board had sent an independent HR expert and a lawyer in, and it didn't look good. The discussions they'd had with the employees did not paint her as the best of bosses.\n\nShe was sitting in her chair, staring into space instead of working, when Bob Adler burst into the room. She had always liked Bob, had actively recruited him and he'd done a really good job up until then. He'd flirted hard after she had fired Dave, and Beverly had leaned on him to help with the pain. She was lonely and depressed, and when he offered to take her to dinner to forget her problems for a while she accepted. The would up drinking way too much wine and when he kissed her it felt so good she didn't stop him. Then reason kicked in and she pushed him away. He apologized and Beverly stopped any nonprofessional contact, even though he plead with her to give it a chance.\n\n\"Goddamnit, Bev, you need to do something about this! Solomon Enterprises just called, and have decided not to sign the contract. There goes eighteen percent of our business! All they said was they'd found a cheaper, more reliable source who's quality matched or exceeded ours. They told me they would be glad to let us bid next year, but it had better be something spectacular if this new supplier worked out. If that's not enough, Apex and Stuart industries have both been hinting they may go to someone else. That's another eight per cent.\"\n\nThat was absolutely the last thing Beverly wanted to hear. If they lost a quarter of their business, especially while they were tied up in the wrongful termination case, she was toast, as well as Adler and maybe a few others. She needed to move on this quickly. She sent Bob out, especially when he started pestering her for another date, saying it would be okay now that she was separated. Bev wasn't sure she had a marriage left, but a sure fire way to finish it would be go out with Bob, and Dave finding out about it. She reached for the phone.\n\n\"Hello, Mr. Soloman. Thank you for taking my call.\"\n\n\"You're welcome, Beverly, and how many times have I asked you to call me Sal? I'd like to think after all this time we were friends.\"\n\n\"We are, Sal. Tell Susan hello for me, and I hear your daughter just got her MBA from Wharton. Is she going to be the future of Soloman Enterprises?\"\n\nHe laughed. \"I hope so; the girl is already smarter than I ever was. I'm giving her three years, then Susan and I intend to sail away into the sunset.\"\n\n\"That sounds lovely. Sal. I'm guessing you know why I'm calling?\"\n\n\"Yes. I'm sorry Beverly, the new supplier is cheaper, faster, and exceeds our quality standards. The difference is significant enough that I can't walk away from it.\"\n\n\"Have you signed the contracts yet?\"\n\n\"Not yet, but we're scheduled to finish up the paperwork in two weeks.\"\n\n\"Good. Please, Sal, give me a chance to see if I can match or better their deal. One meeting, that's all I ask.\"\n\nHe sighed. \"All right, for old time's sake, I'll give you one shot. Set it up and I'll be there.\"\n\nBeverly was sure she could win the business back when when talked to Sal, so she stopped worrying about that and focused on the upcoming hearing.\n\n...\n\nDave was at loose ends, and about to go out of his mind. It looked as if he had any hope of finding anything in his line of work, he was going to have to expand the search area, and that meant moving. He was at the gym, straining his guts out, wondering if he had a marriage left, at all. Yes, he had coasted the last year, but Beverly never once allowed him to tell her his line of thought. She didn't know he had deliberately let orders dwindle, or that his core base of customers were fine with it.\n\nIt was blind chance that after he left the gym he ran into Sal Soloman and his wife, Susan. Sal had been one of Dave's first customers, in fact, they went back eight years. After they got past the customer/salesman relationship, Dave was treated like family. He once told Susan she was the smart aunt he'd wished he had when I was growing up. That statement cemented their relationship, and Dave have even introduced her to others as his favorite aunt. Susan would giggle and coo, and Sal would grin at her antics.\n\n\"Sal, Susan! What a surprise! It's so good to see you, are you in town on business?\"\n\n\"All pleasure, I'm happy to say. We just got out of the theatre. I've always wanted to see The Odd Couple, and this is supposed to be the best touring version of the revival around. When we found out they would be here but miss us, we just had to come.\"\n\nSal just smiled, he once told Dave that his real job was to make his wife happy, and his business was just a means to that end. He never forgot a birthday or anniversary, and most of his employees benefitted from it, because he instituted a policy of giving his employees a half-day off on your wedding anniversary, and the whole day off afterwards, to recover, as he put it. He also paid them for the time off.\n\nTurnover in his office and factories were the lowest in the state; someone had to pass or move away before there was an opening. Every woman got roses and chocolates on her birthday, and every man got something in line with his hobbies, be it a box of golf balls, a new fishing reel, or fine cigars. Executives came to his business to observe his operation, and while many changed nothing, a few copied him.\n\nThey insisted that Dave join them, and for ninety minutes he forgot my problems and admired what a true relationship was. Eventually, though, they brought up Dave's situation. Susan was baffled, and Sal was a little ticked. \"You were one of her best. I really don't understand it. Did she not understand your reasoning?\"\n\n\"She never gave me a chance to explain, Sal, just called me into her office and fired me in the most public way possible. It's poisoned the well, locally. It looks like I'll be moving soon.\"\n\nSusan spoke up. \"Does Beverly know you're considering this? Is she willing to go with you?\"\n\n\"No, she doesn't know yet, and she would never leave her lover, Susan. Before you ask, I have to believe she's never cheated on me, at least physically. No, her lover is her job, and like a skilled seducer, it's offered her things I could never compete with.\"\n\nSal was quiet for a minute, then grinned. \"Since you're at loose ends, my boy, pop by and see me in the next couple of days. I may be able to help you out.\"\n\nWith nothing else better to do, Dave was in his office three days later. They talked general business for a few minutes, when Sal asked what on the surface was an innocent question.\n\n\"Ever hear of the RGP Group?\"\n\nDave had, indeed. A new company out of South Korea, they were trying to break into the U.S. market. He had met the youngest son of the owner in an airport while we both waited on a delayed flight. They found out what each other did, and he happily showed Dave some of his products on his laptop. Dave looked them over and realized they would be in direct competition with his company. Luckily for the business, they were concentrating on the West Coast, far from his area of operation.\n\nHe was a likable guy, though. His father had sent him to the U.S. to knock on doors. Unused to American ways, he had an entourage with him, but most were just as clueless as he was. Since they ended up in the same towns a lot, Dave kind of took him under his wing. Dave lost contact with him when they sent him to the Midwest, basing him in Chicago. Dave breathed a little sigh of relief, his products were high quality, and their prices were almost thirty per cent less than the company Beverly and Dave represented.\n\nDave knew that Sal hadn't asked the question casually, and grinned. \"Yeah, I know of them. I'm even kind of friends with the youngest son of the owner, but I haven't talked to him in over a year.\"\n\nSal looked a little embarrassed. \"They're expanding into our area. I talked to a few people who've used their product, and all seem to be satisfied. I haven't responded to them, mostly because of you. Your stuff is higher, but you always kept your word, always delivered on time, always followed up if we had a problem.\n\n\"We, Stuart, and a few others took your advice when you demonstrated the latest version, and we've been retooling for the better part of the year, using up old inventory. I don't know about the others, but I have about a month's supply before I'll be completely changed over. We find ourselves in a unique position; RGP's version fits even better into our plans than your old company's version does. The main reason I wanted you to come by was to ask your advice and offer you a job. Instead of selling, why don't you try buying? My purchasing manager is retiring, and we still haven't found anyone we feel will fit. With your experience in sales, vendors would have a hard time trying to take advantage. After all, you know all the tricks, right? Besides, most either know you or know your reputation, so it'll cut down on a lot of haggling. What were you making before you got fired, and I don't mean now, I mean your best year?\"\n\nStunned, Dave told him. \"Not a problem there. In fact, I can probably go five or ten grand better, and work in performance and savings bonuses. Why don't you give it a try? Even if it doesn't work or you decide it's not for you, it'll look good on your resume when they see you've done some work on both sides of the business.\"\n\nIn the end, Dave decided to give it a try. It beat moving out of state, and he was a little excited about it, the first time since he got fired he was excited about anything. He went home to his apartment, actually happy to be there. His former house was really her house, an edifice to her success. She'd often remind him in small ways that if their salaries had been equal, they could never have afforded it. Dave thought a little about the upcoming hearing, and sighed. He wondered how much of what he was doing was seeking justice and how much was revenge. Probably half and half.\n\nHe knew if he won, Beverly's career was over. Even if she got to keep her job, it was as far as she would ever go in the company. If he lost, it would still take years to recover from the damage. Would he be happy if he was vindicated? Probably. Would he be happy about hurting her career? In honesty, he thought, he would, just a bit. Not because of who they were, but because she needed an object lesson in how to treat people, and remind her the world didn't revolve around her.\n\nThinking back to when they first got together, he remembered a fresh-faced young woman who had set goals, her determination as strong as her abilities. He remembered when she got her first promotion. He'd taken her out to dinner to celebrate, at a place they normally couldn't afford. When she objected, Dave showed her his very first bonus check, telling her she wasn't the only one in the company who was rewarded for hard work. As fresh as it was yesterday, he remembered the lovemaking, the celebration of two young people desperately in love and on top of the world. He also remembered afterwards, as they lay exhausted, her head on his chest, her hand rubbing across his stomach as he toyed with her hair, thinking things were just going to get better.\n\nTo make a long story short, they didn't. Get better, that is. Dave watched as each promotion sent her a little farther away from him. Her clothes got more expensive, her makeup and hair done by top of the line professionals, and how angry she got if he even tried to kiss her before they out to one function or another, always with her as the center of attention. He remembered standing around, mostly ignored, feeling useless. Finally he stopped going except on really important events. Bev was pissed at first, saying it sent the wrong message, before spinning it to look like it was her idea. He nearly tore her head off when it got back to him she told people he didn't go because he was embarrassed that he couldn't keep up with the conversations. He made it a point to go to every function for a while, seeking someone important to her, clients especially, and having long in-depth conversations about things she never had a clue he even remotely knew. It got to the point she asked him to tone it down, so the focus could be on her.\n\n*****\n\nWell, today was the day, Beverly thought as she walked towards the conference room at the local State Employment Office. Her career would either be over or not, depending on the outcome of the negotiations.\n\nShe hadn't seen her husband in almost three weeks, and was surprised at his appearance. He'd lost most of the spare tire, let his hair grow out a little and was sporting a closely trimmed beard. It made him look distinguished and young at the same time, if that was possible. There was what could only be described as a blonde bombshell sitting beside him, but Bev knew looks could be deceiving. This was Amanda Austin, one of the most experienced and feared labor lawyers in the state. She was there more as an observer, gathering more data for the lawsuit she knew was coming.\n\nBeverly had the best counterpart my company had to offer with her. He'd spent a little time coaching her on how to answer the inevitable questions, how to project confusion on how this had happened when all she was doing was what was best for the company. She asked him how he thought they would do.\n\n\"This case is a train wreck waiting to happen. There's no paper trail, no write-ups, no warnings, no explanation of the consequences if he didn't improve. His last review was very complimentary. By company policy, you should have had his manager handle the termination, with someone from HR as a witness. He was entitled to an appeal, to the next person up the food chain, in this case you. Since you fired him and never gave him his chance to take it to a higher authority, you once again breached company policy. You know, I read your file before I came down, and you got really good reviews; the home office and the Board talked about you in the highest terms, yet here you are, making a mistake someone fresh out of college would avoid. I'll do my best, but if he wants to make it ugly, we can't stop him. Have you talked to him at all lately? Does he have any idea the negative impact this could have on your future?\"\n\nBeverly had to admit she hadn't at the time, which made his frown deeper, and he probably knew almost exactly what would happen to me if it got bad.\n\nEveryone sat down, and the arbitrator started the meeting. She had a video camera set up, to record everything. She started off by introducing herself as an arbitrator from the State Employment Commission, and explained that while they may reach some kind of agreement, it wasn't binding until everything was written down and notarized. She also explained that if an agreement couldn't be reached, or if either party disagreed with her decision, they were free to take it to the capitol. or if that failed, court, in the form of lawsuits.\n\nFirst she thanked the HR representative for sending her a copy of company termination policy beforehand, so she could familiarize herself with our procedures.\n\nBefore she let anyone else speak, she asked a few questions. \"Mr. Waxman, Ms. Patterson, I understand you are man and wife. True?\" Beverly said yes as positively as she could, and Dave just nodded. \"Tell me, Ms. Patterson, if you will, how has this impacted your marriage? Do you consider what your husband is doing reasonable? I'd like to clear this up before it gets to the civil stage.\"\n\nDave didn't speak up, so Beverly went first. \"We are most definitely married, and will remain so. Yes, it has absolutely impacted our marriage. He's moved out, hasn't talked to me since he did, and now we're here. I must have told him a hundred times what I did was just business, and it shouldn't impact our private lives. I really don't understand why he's doing this.\"\n\nThe arbitrator thought the woman delusional; how could it not impact their marriage? She had told him he had no value to the company, terminated him after nine years, sent him home and couldn't understand why he was angry? She turned to the husband. \"Mr. Waxman, care to comment?\"\n\n\"Ma'am, on the advice of my lawyer, I am not here to discuss my domestic situation. This meeting is solely to determine if my wrongful termination complaint has merit.\"\n\n\"Fair enough. Ms. Patterson; please tell me exactly what occurred the day you terminated Mr. Waxman, and state your reasons for letting him go.\"\n\nBev explained how his supervisor, Bob Adler, had come to her to discuss the terrible sales record of Mr. Waxman, going back almost a year. She stated she had no idea his numbers had gotten so bad, and that after discussing it in depth with his manager they agreed he should be let go. She also said it was the hardest business decision she had ever made, but she had to put the interests of the company first.\n\nThe arbitrator asked for documentation, and frowned when none could be produced. \"Tell me Ms. Patterson, if this employee had a very good record for eight years, and then his sales plummeted, would you not have been curious, and try to determine why? If he had been a good employee for so long, surely he deserved a chance to turn his sales around, a probationary period, explained in detail, in writing, what failure to produce would result in, and monthly monitoring to ensure he was going in the right direction? The reason I ask is that very scenario is described in the company manual your HR department sent me for employees with at least five years of tenure.\"",
        "Beverly squirmed, and gave her coached answer. \"That is correct, but as CEO, I have the authority to terminate anyone, at will. The numbers had dropped so radically I thought we were in danger of losing some very old and lucrative accounts, in fact, that is exactly what is happening. I felt I had no choice.\"\n\nThe Arbitrator nodded, then turned to Dave. \"Sir, does this sound reasonable?\"\n\nDave actually grinned. \"Not at all. There was a reason the numbers were low. I even tried to explain it to Ms. Patterson a few times at work and in our domestic situation, but she told me I needed to stay out of things above my pay grade, so I dropped it.\"\n\n\"Tell me then, why did your numbers drop so dramatically?\"\n\n\"Believe it or not, it was planned. We were coming out with a new and improved product, and there was a lot of old inventory still available. I talked the customers into buying the new product by discounting the old, and clearing it out of inventory. I have here statements from four of our customers substantiating this. As soon as the old reached a predetermined threshold, they were going to order the new, in bulk. It was a win/win for everyone. They got the old inventory at a discount, which would be more than made up for when they ordered the new. So yes, I goofed off a little, played golf and had dinners with clients, while we discussed projected volume. I never, not once, forgot I had the best interests of my company to watch out for. MY immediate supervisor knew all this. Why isn't he here? I asked specifically for him.\"\n\n\"This isn't a court, Mr. Waxman. I can't force someone to appear at an informal hearing. Do you have any proof of your claims?\"\n\nAmanda Austin reached into her briefcase and extracted some paperwork, passing it to the arbitrator. She read through a few, frowning. The corporate lawyer tried to stop her, but she once again told him this wasn't a courtroom. He settled by demanding to see them after she was through. She would hand him a sheet when she got through with it, and his own frown got deeper.\n\nThey argued back and forth until the arbitrator put a stop to it.\n\nShe sighed and leaned back in her chair. \"I've heard and seen enough. Ms. Patterson, you were in direct violation of company guidelines when you terminated him. To put it in legalese, you denied him due process. My finding is that Mr. Waxman was let go without cause or recourse to his rights under company guidelines. Therefore, I'm ordering you to give him his position back with no recriminations, and pay his salary from the time he was separated from the company until now. Either of you may appeal this decision if you wish, but you will have to travel to the capitol, and it will be considered a legal proceeding. Does anyone object at this time?\"\n\nMy head down in despair, Beverly shook her head no. Dave spoke.\n\n\"I'll accept the backpay, ma'am, and thank you. I will not return to the company because I feel it would be a toxic environment. Besides, I have a new job that I'm really enjoying.\"\n\nWell, she was truly screwed, Bev realized. Her career was over, and she would be lucky if they let her stay with the company. Her lawyer, and Dave's, had a few words afterwards, and he was definitely still not smiling when he returned.\n\nBack at the office, they went into a conference room and he spelled it out. \"The hearing went pretty much as I expected. You need to make sure he gets that check as soon as possible. Amanda told me they were suing us, naming you, Adler, and the company in the suit. I told her to set a time, and we would get together and settle. Apparently, your husband doesn't want to settle. He wants to air it out in court, and make it a matter of public record. That means that anyone with any brains can look it up. How many talented people do you think would look at that and not send us resumes?\n\n\"I frankly don't know how to proceed. Normally we would throw a little money at him and it would just go away. That won't work here, because it's not about the money. You need to talk to your husband, as soon as possible, and get him to let us work something out.\"\n\n\"I would do that very thing, sir, if I knew how to get in touch with him. He's left me, changed his number, and just disappeared. None of our mutual friends have heard from him or even seen him. When he said he had a new job it was news to me. This is a small market, and I would have heard if he was selling for someone else. I'll try a few of his friends, telling them it's extremely urgent, but I have no idea if they'll help.\"\n\nHe left, saying as soon as he got the paperwork he would return. Jen took Beverly out to lunch to cheer her up. It didn't really work. Jen, clever girl that she was, distracted Bev by talking about the upcoming visit to Solomon Industries. \"The old man has always liked you, Bev. Turn on the charm, and get him back into the fold. Free words of advice here; while he likes you, he doesn't care much for Adler. I couldn't tell you why, but it's pretty well known that if your...\" she paused, stopping herself from saying 'ex-husband', \"if Dave wasn't wasn't running interference, Adler would have angered him enough to have already left.\"\n\nBeverly's head was swimming. She asked herself why, as CEO, she didn't have that information. A small voice was starting say she should have paid more attention to Dave when he talked about his job. She had finally admitted to herself, after half a bottle of scotch, she had been minimizing his position for quite a while, and she was struggling to understand why.\n\n*****\n\nDave had won, but, he had to think hard to try and figure out what he had won. he had, without a doubt, destroyed the woman I was supposed to love and support. She would be extremely lucky if she got to keep her job, or even stay with her company. Did he feel good about it? Not really. he knew how much she loved that job, how she loved giving out her business card with 'CEO' on it. He did, however, feel vindicated. She had brought this on herself. Oh, it was a lot worse than what she would have done to just an employee, but it would have been just a matter of time before her arrogance and egotism drove her to do something just as stupid to someone else. Maybe she would mark it up to hard experience, and use it as a learning experience.\n\nNow that that part of their lives was over, Dave wondered if they had any kind of chance to get over it and remain a couple. He knew he would never return to the old relationship; it would be a full partnership or nothing. He was damn sure never going to live in that monstrosity she called a home. It was nothing more than an edifice to her success. Sad, really. It would have made a great home in which to raise children.\n\nWell, one thing he had to look forward to was the money. The back-pay, almost five month's worth, was a nice chunk of change. Amanda was on his ass to settle instead of dragging it out in court, reminding him that the best revenge was living well. They had sued the company for two million, and she said they would probably offer twenty per cent, just to keep it out of the papers. She found out they were in the process of merging with a competitor, and this little incident would severely impact their worth, going forward. Firing Beverly wouldn't really help at this stage, but it might save them some face.\n\nDave liked the new town. It was half the size of the city he left, and the pace was more relaxed. The people were friendlier, and he couldn't ask for a better place to work. Best of all, the housing market was a little depressed, and it was possible to buy a lot more home with a lot less money than he would have spent back home. He grinned and shrugged at the thought. What did back home constitute exactly? He wasn't at all sure any more.\n\nDave even had his eye on a place that had been for sale for almost a year, a larger, older two story on six acres of land. He didn't need that much, but it would be fun to own. The owners were getting anxious to sell, and he had feeling he could get a really good deal. He researched it on the net, and it seemed solid, with no major problems other than the roof. It was still good, but was twenty years old. He'd already decided if he bought it, he would replace the shingles with tin. It was all the rage, and he had fond memories of staying with his grandparents on their farm in the summer, going to sleep with the sound of rain on the roof.\n\nThat night, Dave dreamed, something he rarely did. Likely, he dreamed all the time, but he hardly ever remembered them. This dream had him sitting on the front porch of the house beside a woman, both of them in a glider, rocking gently while they watched three children, two girls and a boy, run around the yard playing with a ball, two dogs, one big and one small, chasing them. A large calico cat sat on the railing, looking on, seemingly bored. In a wave of love, he turned to kiss his companion, only to discover she had no face. He woke with a start, and lay there, trying to figure out what it meant.\n\nSighing, He got up, deciding to hit the gym on the way to work. It was going to be a busy day.\n\n*****\n\nBeverly didn't sleep well that night, and as she got ready for work, she noticed the bags under her eyes. She hoped it was just stress related, but if they were permanent, well, she knew a good doctor. If anyone wanted to maintain in her world, they had to look like twenty-five, yet have fifteen-years of experience.\n\nIn a way, she was looking forward to what was coming. The lawyer did a little research on Bob, and came to her with disquieting news. It seemed he was in negotiations with the company they were merging with to take over her job when the contracts were signed. Corporate's directives were very clear. Remove the cancer, immediately. This time, however, Bev had all her ducks in a row.\n\nJack, their lawyer, and Angela, a woman flown down from corporate HR, would be with her, to make sure there were no mistakes. It rankled Bev a little to have them there; She was perfectly capable of handling it on her own, but recent experience taught her that this could be a good thing.\n\nBob was surprised to find he wasn't going with her to see Sal, and by then, she had no reason to sugarcoat the reason. \"Sal despises you, Bob. I'm trying to get back in his good graces, and bringing you along would undermine that.\"\n\nHe seemed surprised, then got angry. \"Screw that old fart, babe. His business doesn't mean that much to us.\"\n\n\"Do I need to remind you to remain professional here? I was never your 'babe', so you need to cut that out. If you think losing eighteen percent of our sales base means so little, perhaps you're not as suited to your job as I first thought. You were pretty pissed when you heard the news. Think about that while I'm gone, and remember, we need to meet after I get back, so keep your schedule flexible. I'll call you when I return.\"\n\nShe enjoyed the look on his face as she left, and couldn't wait to see it when they lowered the boom that afternoon. Pushing him out of her mind as she drove, she worked on her presentation to Sal and his new purchasing manager. It had to be just right if she were to have any chance.\n\nSal was waiting at the restaurant, even though Bev was fifteen minutes early. He stood and seated her, and she appreciated it. Dave had always been well mannered, taught by a great uncle who instilled in him that manners never went out of style. She missed that, among other things. They chatted for a minute, but when she started talking business, he stopped her.\n\n\"Please, Beverly, let's wait for my purchasing director. I want his opinions and insight on anything we go over. He should be here any minute, in fact, here he is now.\"\n\nBev turned to greet him and the words died in her throat. Dave! He was the new purchasing director? If she wasn't dead in the water before, she was now. He must have seen the despair in her eyes, and spoke to her gently. \"Hello, Beverly. Wow, you went all out, I bet I haven't seen you in that dress three times, and every one was an important event in your life. I can see why you wore it, though. You always looked spectacular in it.\"\n\nBeverly didn't know how to answer, so she changed the subject. \"This is the job you talked about in arbitration? You're in purchasing now? For a salesman, that must be like going to the dark side.\"\n\nHe grinned. \"It is, kind of, but it's really just sales in reverse, if you can understand what I mean. Besides, it's worth it when I see salesmen, and they realize who I am. It blows their plans completely. I've been there, done that, and there isn't much they can surprise me with. It actually makes things easier. They know they can't bullshit me, so they just get down to negotiations. That being said, let's enjoy lunch, and talk business later.\"\n\nIt was surreal to Beverly, sitting there eating lunch with her husband, knowing he held all the power. She couldn't help but wonder if that was how he felt at times. Dessert over, with cups of very good coffee in hand, she began her speech.\n\nShe pointed out how long they had done business together, how well they had responded to Sal's needs, and how they could continue to service him with excellence in the future. Dave let Sal take the lead, for which she was grateful. Sal listened, but stopped her halfway through. \"All you say is true Beverly, but let's not forget who landed our business in the first place and served us so well over the years. I was buying that as well as material, and now, well, the situation has changed. Before you ask, yes, I did have a verbal commitment with your salesman. Once he left the company, though, I no longer considered it binding.\n\n\"The South Koreans, to be honest, have a better product at a great price. It exceeds the specifications we have for your product. My purchasing agent happens to know the son of the owner, and finds him trustworthy. Who were you going to replace Dave with? Adler? I don't think so. I've never liked him, but more importantly, I never trusted him. Even if we had stayed with you, I'd insist on another account rep.\"\n\nHe stood, looking down on her. \"I always liked you Beverly, even if I didn't exactly like the things you did sometimes. I'm still your friend, if you let me, but professionally, we're pretty much through. I have another appointment, so I'm leaving. You can continue to press your case with my purchasing agent, if you wish. Best of luck.\"\n\nHe said the last with a grin, bent down and kissed her cheek. \"He still loves you,\" he whispered, \"but it's going to be a long road to get him to trust you again. Give it your best shot.\"\n\n*****\n\nDid Dave enjoy the lunch? Yes, on several levels. Did he enjoy her pain? Just a small amount. It was very satisfying to see her looking lost and confused, and not the supremely confident megabitch she projected most of the time in her natural environment. \n\nShe looked at him sadly. \"We don't have a chance, do we?\"\n\n\"Are you talking professionally or privately? If you're talking business, then no, you don't. Their product is superior to yours in almost every way, much cheaper, and readily available. Even if I were still with the company, it would have only been a matter of time before we would have started losing customers. You need to get with corporate and rethink your business plan. Maybe you should go in the direction I suggested a year ago, retool your assembly lines, get R&D more involved. It's time to reinvent yourselves, or you'll be as extinct as the dinosaurs in a few years.\"\n\nDave looked into her confused eyes, and realized she didn't recall what he tried to tell her all those months ago. He was no business genius, but he was literate enough to read the writing on the wall. Then again, he didn't have power goggles on. Arrogance and egotism is its own reward.\n\nThey sat silently for a few minutes. \"Dave,\" she said in a timid voice, \"May I ask about us?\". Dave almost laughed but stopped himself. Instead, he asked her as gently as possible, what us?\n\n\"You and me, honey. Please, you need to move back home so we can go back to what we had. I miss you very much.\"\n\nDave got the impression that she was surprised by his reply. \"What us? There hasn't been an 'us' for going on three years now. There was me, the ornament at dinners and parties, someone to come home to, but that's about it. I was just a minor supporting character in the movie of your life. Intimacy died between us years ago, Beverly, and I don't see a resurgence in our future. Before you say it, yes, we were intimate on rare occasions, but stop to think, how many times did I initiate it in the last two years? I'll give you a hint, never. I felt like I was just a human dildo, there to give you release when you needed it. There was no foreplay to speak of before, and no snuggling after. As soon as you got off, you were ready to roll over and go to sleep, whether I'd gotten anything out of it or not. Don't deny it. Instead, think about it and you'll see I'm right.\"\n\nHe could see conflicting emotions playing across her face, but he was on a roll, getting things he'd wanted to say for years off his chest.\n\n\"As for coming home, well, I'll never darken the door of that house again, whether we stay together or not. It was never a home, it was a monument to your success, and you fought me tooth and nail when I wanted to make changes. In fact, I have a bid in now on a HOME I think I'll really like. It's an older two story, too much house for me, actually, but it has lots of room and a little acreage. Best of all, it already has a building that would be perfect for the workshop I've thought about for years, and room for the vegetable garden I always wanted to plant. I'm sorry honey, but after eight years of living in your shadows, I've learned to love the light.\"\n\n\"Where does that leave us?\"\n\nIt was so sad and forlorn that he toned it down. \"I couldn't tell you. I suspect we'll never be together as man and wife again. You have to respect your partner, and I haven't had that from you as a man or employee for quite a while now. I'm not a supporting character anymore, Beverly, I want my own show. I realize now that it's at least partly my fault we ended up like this, but at the time I loved you so much that if it made you happy I learned to live with it. And the more I gave, the more you wanted until it got to the point I had nothing left to give. I suspect, deep down, that that is the exact moment when you realized you didn't need me anymore. You had minimized my impact on your life to the point that I was invisible to you. Really, it shouldn't be that hard on you, just carry on as you've been doing, and pretty soon I'll just be a dim memory.\"\n\nHe stood, placing my hand on her shoulder. \"Go back to the love of your life, Bev, your job. And free advice, stay away from Adler. The man's a snake. I don't know how he got into your head long enough to scramble your brains, but step back and consider. What did he have to gain by poisoning your mind against me? Think about it. And don't worry too much; you've been too good for too long for this brain fart to wound you fatally. You might lose a notch or two, and have to do some major ass kissing, but the company still knows your worth. Goodbye, Bev.\"\n\nHe paused for just a second. \"I'm sorry my company and yours have come to a parting of the ways, Beverly, but really, it's just business, you know?\"\n\nShe flinched, and he wondered if she caught his meaning. It was the exact phrase she had used to justify firing him.\n\n*****\n\nBeverly wanted to sit for a while and digest everything, so she went to a park she'd seen on the way into town, parked, found a bench, and reviewed her life. Some of it filled her with immense satisfaction. She could remember every promotion, the hard work she had done to get it, and the immediate plans to move to the next level, until finally she was at the top of her little food chain.",
        "Some of it filled her with unease. The anniversaries she'd missed, always promising to make it up to Dave, the birthdays, the special events in his life, her parents, his parents, and their friends lives, all missed while she chased the next deal. She remembered seeing the fleeting look of pain in Dave's eyes when the toddler of one of their friends' children tottered up to him with upraised arms. He cuddled the child, and for a moment Bev had a vision it was their child. She shook it off. Unless Dave would consent to being a full time house husband, there would never be any children in their future. She'd seen many a woman, full of talent and promise, get sidelined and passed by because they couldn't commit fully to the job because of family. Besides, she was 36, so that ship had probably already sailed.\n\nShe sat straight up in shock at her realization. God! Dave was right. He would always be second in her priorities, as long as she continued on the path she had committed to. It must really have been like her having another lover, one he couldn't compete with or fight. It hit her then: to get him back was going to be a long and difficult road. She did want him back. Yes, she had minimized him to the point of no respect, but he was her rock, the one she always turned to when she needed comfort and assurance, positive that at least, in his world, she was number one.\n\nThe question was how? How could she undo the damage she'd done to his heart and his ego? Could she learn to balance career and marriage enough to keep him satisfied and assured he was the most important thing to her? She knew it would be horrifically difficult, but she was a driven, goal oriented person, and if she set her mind to it, Bev knew she could do anything.\n\nSatisfied, she watched the children play for a bit, a sad smile on her lips. After a few minutes, it turned into a real smile. The first stop on her journey back would be to fire one of the snakes in her garden. She tried to muster up some sympathy for Bob, but could find none. He'd betrayed her husband, her, and the company. She wasn't as dense as he'd imagined, but she had to admit she was vain enough to listen to him feed her ego. Now it was time for his sins to come home to roost.\n\nShe called ahead, and set the time. Their lawyer and the HR representative were ready. They had arrived while she was gone, and she knew that after dealing with Bob, there would be some tough choices to be made and some bad news she would have to deal with. So be it. She had weathered storms before, and that day, it just wasn't as important to her as it had been in days past.\n\nBob came in all smiles that immediately went away when he saw who was in the room. She didn't have to introduce Jack, but he had never seen Angela. Bev went right for his throat. \"Bob, this is Angela, from corporate HR. She'll be auditing this meeting. We've received some disturbing news about some of you recent activities, and in the interest of fairness we've decided to hear what you say about it.\"\n\nJack stepped in. \"I don't know how you found out about the merger talks, but when you did, you apparently ran right to their company and engaged in a smear campaign against our CEO and our company, trying to woo them into giving you her job. Don't act surprised, their representatives came to us in concern, so we know the whole story. I'm sorry to say the negotiations are on hold, while we try to clean up our in-house mess. They made it clear that you have to go, without reference, for the talks to continue. Apparently, they've reached the conclusion that if you would do this to us, what's to keep you from doing it to them in the future?\"\n\nBob went through several shades of red while he found his voice. \"So you found out. Let me guess, I'm to be terminated for cause. At least this time, you got your ducks in a row. I know you will walk me through the appeal process, but I'd be wasting my time, so I'll go. Your company was right to try to dump this dinosaur; if there isn't a major restructure completed in the next three years, there will be nothing to spin off.\"\n\nHe grinned at Beverly, which set her teeth on edge. \"You got too complacent, girl. I played you like a banjo, feeding that massive ego, undermining that loser of a husband, even if he was the best thing sales had going for them. I'm glad I never got around to fucking you. I bet you'd be next to worthless in the sack. You're too wrapped up in yourself to give pleasure to anyone else. Of course, I would have lied, told you how hot you were, until it was time to get rid of you. Whatever, it doesn't matter now. I'll leave today, and send word to payroll where to send the last check. May you live in interesting times, Bev.\"\n\nBeverly flamed red. Dave used to say that a lot and she never knew what it meant until Bob heard him once and explained it to her. \"It's a Chinese proverb, or maybe a curse. Interesting times meant unrest, revolution, famine, that sort of thing, while boring times meant everything was good.\" Bev kept a neutral look on her face when she answered him. \"Same to you, Mr. Adler, and I'd like to add another wise saying. Cheaters never prosper. Stop looking for the path of least resistance and try to earn something for once in your life. Goodbye.\"\n\nJack and Beverly stood and started walking out. Bob, glowing with anger, started to speak but Angela cut him off. \"The time for talk is over, Mr. Adler. You have some documents I need you to sign, and then you can get on with your life. Please do not make this difficult.\"\n\nThe two large security guards that appeared just then made him think that might be a good idea.\n\n*****\n\nDave bought the house, getting a really good deal. He immediately gave the roofing contractor he'd consulted the go ahead, and two weeks later, the gray tin complimented the color of paint he had chosen for the exterior. While he was at it, he had the carpet pulled out and the original hardwood floors refinished. It had a wrap-around porch, and Dave installed ceiling fans over the rockers and the porch swing, to help keep it cool in the summer while he enjoyed the sunsets.\n\nHe could have afforded the house, using his back-pay and part of his savings as a down payment, but he would have still carried a fifteen-year mortgage, so he succumbed to my lawyer's pleas and took a settlement instead of going to court. It wasn't as much as they had hoped, because, frankly, that division wasn't all that profitable anymore. He still got enough to buy the house outright, make the changes he wanted, and have some left over, along with his severance pay and all his savings. That had been another bone of contention. Bev would never agree to a joint account, so they each had their own and deposited a set amount into a household fund.\n\nHe knew that if they divorced he would be entitled to half the value of the house because they never had a prenup, and since their earnings were so disparate he could probably get maintenance for a few years. He grinned, thinking about how much that would have galled her.\n\nIn the end, he decided to let her do the filing, after all, she determined everything else about their lives, so why should this be any different?\n\nHe found that he was a natural in his new job; his years in sales benefitting him greatly. Surprisingly, seventy-five percent of the salesmen he dealt with loved him. He didn't play games, expect gifts or kickbacks, stopped doing business with anyone who tried to bribe or hustle him into accepting an inferior product, in general he expected an honest price and excellent service. Those who dealt honestly and gave him what he wanted, got his business.\n\nThe other twenty-five percent learned quickly that Dave didn't require expensive dinners, outings to strip clubs, or rounds of golf at exclusive resorts. Some understood and appreciated his approach, others were so stuck in their ways they never learned, and they lost his business.\n\nSal loved Dave. Their materials and service costs were 20% lower, deadlines were rarely missed, and Dave took advantage of offers to have vendor technicians come in and observe and make suggestions, about half of which they took. The line workers loved Dave because their job got easier and their production bonuses got larger.\n\nSusan insisted he come to dinner at least twice a month, and the conversation inevitably turned to his domestic situation. Sal wisely stayed out of it, but Susan would not be deterred.\n\n\"When are you going to stop punishing the poor girl and take her back? She's suffered enough. She calls me, you know, maybe once a week and we always have the same discussion. She wants to know how you're doing, are you happy, and though you can hear the pain when she asks, if you're dating. I tell her the truth, straight from your mouth. You refuse to see any woman socially until the day the ring comes off your finger.\"\n\nDave tolerated it a few times before he got a little irritated. \"Susan, you know I admire you a great deal. If there was a category called 'Ideal Wife' in the dictionary, it would show your face, but let me ask you something. You had a pretty good career when you married Sal, and he told me you worked for six more years before you quit and became a full time mother. Sal had to face many of the same pressures Beverly faces now, but did he ever shut you out, miss anniversaries, dates that were important to you or your children? Did Sal ever once put his business before you and your family? Did he minimize your contributions to the relationship?\"\n\nDave paused and waited. She finally admitted there had been maybe three times in their marriage when the job had to come first, but that he had felt so badly about them that he showered her and the children with affection for weeks afterwards.\n\n\"Well, I didn't have that experience. Her attitude was 'suck it up, big boy, this is more important'. I lost friends, relationships I'd had for years, victims to her career. I'm just now getting used to having friends again, to being able to accept invitations for little get togethers, things that are simple and mundane to them, but precious to me. They're not networking, per se, just hanging out and enjoying the company. I've got a house I love, a place to enjoy my hobbies, I even got to plant a little garden, something I've wanted to do for years.\n\n\"Does that mean I don't miss her? No. I remember the little things, before she became important. The spur of the moment trips to 'sight see', which was code for making love in a strange bed, the conversations about life we used to have, years ago, when we actually shared a vision, I remember all that, but those memories are dim, and the ones fresh in my mind are of her egotism and arrogance. She was like a sports star that read her own press, believing every story. She wants me back? Why?\n\n\"Most importantly, Susan, if she wants me, why hasn't she come to me? She's still in queen mode, waiting for the errant knight to return. If she's not willing to put any effort into our almost dead marriage, what makes you think she wants it that bad? I haven't even received a phone call. Doesn't sound like she's all that heartbroken to me. In this case, Mohammed needs to come to the mountain. Now, I love you both dearly, and your husband is my boss, but this is the last conversation we're having about Beverly. If you'll excuse me.\"\n\nHe hadn't ranted or raved, but said everything in a calm reasoned manner, but the message was there. Leave it alone. Sal looked thoughtful, and Susan was red with embarrassment. She rose as he was leaving and surprised him with a hug. \"I'm sorry, Dave. I won't push you anymore, but you're wrong. She misses you terribly, and the truth is she's afraid to talk to you. She doesn't really know what to say, and she's afraid you'll bite her head off. I'm going to call her in a bit, and tell her about what you said. And you have my solemn word, this will be the last time I involve myself.\"\n\nShe grinned and kissed his cheek. \"Besides, you're doing too well in your job for me to rock the boat. I estimate your contributions have shaved at least three years off our retirement plans. Carry on.\"\n\nIt never occurred to Dave that Sal was thinking about retiring. He was just over fifty but his daughter was due to start work in the near future, and popular rumor has it as soon as he feels comfortable with her at the helm he was going to sail away into the sunset. Dave had a fleeting thought of working with another Beverly, and wondered if he could handle it.\n\n*****\n\nOnce again, Beverly went home to an empty house, to eat take out and pretend to watch television. She had escaped the ax, but it was a close thing. The Chairman and two board members flew down unannounced, scaring the whole office.\n\nShe was almost faint when they called her into the conference room. She felt like a schoolgirl in front of the principal. Their expressionless stares didn't bolster her self-confidence. After almost a minute, the senior Board member spoke.\n\n\"All right, Beverly. Tell us what happened, and more importantly, tell us why. Don't whitewash it or you'll be out of here so fast your head will spin. We've always trusted you to be honest. It would be a shame if we were to start doubting you now.\"\n\nIt took a few pauses, and a couple of crying breaks, but she got it out. She had nothing to lose, so she told them the truth. She had let my ego get the best of her, relied on people who didn't have the company's best interest at heart, and got played like a foolish schoolgirl.\n\nThey seemed relieved when it was over, and sympathetic. \"How are things on the home front? Have you kissed and made up yet?\"\n\nThis started another round of sniffles. The Chairman got a box of tissues and set them in front of Beverly. She mumbled her thanks as she blew her nose. \"No, and I doubt we're going to. I haven't talked to my husband in weeks. He's living in a new town with a new job, in a house he bought and has no intentions of leaving.\"\n\n\"I've always liked Dave,\" reflected the Chairman. \"It seems out of character for him to ignore your gestures of reconciliation.\"\n\nBev flamed red, and told them she hadn't contacted him because she was ashamed and didn't know what to say. The Chairman sighed. \"Well, there you go then. We may as well accept your resignation now. Two of the traits I admired most in you were your ability to analyze a problem and your tenacity in achieving your goals. Obviously, you don't want your husband back, and to be honest, someone who shows so much hesitation and indecision is not top management material. I mind the times not that long ago where the hounds of hell couldn't keep you from accomplishing your goals.\"\n\nHis words stung. Only the fact that he was right kept her from lashing out. He saw her face redden and the sudden thrust of her jaw, and chuckled. \"Ah, there you are. I was beginning to think I'd lost you for good. Now, listen closely. You're still on shaky ground here. Bill, Jack and I are your only supporters right now, and we've gone out on a limb for you. Do not chop it off behind us. You still have your job, but don't look for a favorable review or a bonus this year.\n\n\"What you do have is a second chance, but hear us out before you sigh in relief. This division was headed for a crash, Beverly. We're aware of the South Koreans and their imminent threat. If we stay the course we're on now, we would be out of business in three years. It's one of the reasons we decided to sell this division off, while it was still at the top. Your little gaffe brought that to a grinding halt. Between the suit and the snake you had trusted stabbing us all in the back, we're not nearly as desirable. The merger talks are history.\n\n\"What you need to do is figure out a way to reinvent the division, come up with products and services and give it a viable future. I'm going to be as blunt as necessary here. Do it, and you redeem yourself, fail, and you're out. We're giving you a year.\"\n\nHis voice softened. \"It was the best we could do, Beverly. I know you'll make me proud, even if you fail. We have faith in you.\"\n\nShe was so overwhelmed that a simple handshake wouldn't do, so she gave each a heartfelt hug, swearing she would give it everything she had. She hugged the Chairman last, after the others had gone. He took her hands after they broke. \"I'm going to give you advice, advice on something that has nothing to do with work. If you really want Dave back, you'll have to go to him. He'll never come to you because you've hurt his pride too badly. He holds the power now, child. He's got a good job, good friends and a bright future. You're going to have to show him you want an equal partner, and you have to mean it. The first instance of backsliding, and it will be over.\n\n\"I really believe you forgot, but Dave is a pretty shrewd individual. He saw the writing on the wall for this division last year. We even had a brief talk about it the last time I was down, and he mentioned the South Korean company then. He even had some ideas on how to re-channel our efforts to make us more viable in the market. I was impressed enough to tell him to discuss it with you. I have the feeling that discussion never took place. If it had, perhaps we wouldn't be having this talk now. Call me if you need resources, and if I think it's justified I'll allocate them. Think about everything I said, business and private, and make good decisions.\"\n\nShe left the conference room and went back to her office. Jen was hovering, and Beverly told her it was not all bad news, but that she needed some time to marshal her thoughts. She also asked Jen not to let anyone disturb her for the rest of the day.\n\nShe locked herself in, and thought about the most important goal in her life. How could she get Dave to love her again?\n\n*****\n\nThe start was simple, with the help of Susan. Beverly cyber-stalked him, getting on his Facebook page, and starting a conversation. She knew he took some of his bonuses from Sal and had bought an old car, slowly restoring it in his new garage. He posted every step, describing in detail what he was doing. He put out an appeal for a front bumper cover, and she burned up the websites. Money was no object; if it got her back into his life it would be worth every dime. The fates were with her, because a man contacted her, showing the front end of the car. It was perfection, but the back was totally trashed, thanks to a secret joyride by two of his great nephews. When he found out how expensive it would be to restore, he pulled it out in a field and left it for six months. The interior was in excellent condition, and the front end gleamed like a new penny. Beverly bought it instantly, but not before bargaining him down almost a thousand. Hey, she was a master of negotiation, when she remembered.\n\nBeverly planned her attack with precision, using Susan to help her. Dave was having a barbeque to show off his new gas grill and clay oven. It was mostly people from work, along with a few of his neighbors. Susan asked casually if she could bring a friend, and he readily agreed.\n\n\"This better not blow up on us,\" she warned Beverly. \"If he gets really pissed, it would make it incredibly awkward between him and Sal. Of course, he has a built-in defense. He has no idea who my friend is, and I told him you were meeting us at his house.\"\n\nPromising faithfully that if it started going bad, she would leave immediately, Beverly finished her plans. She must have changed outfits a dozen times, before she realized it was just a cookout and she should dress for comfort. She went for a really nice sundress in his favorite color, light blue. It stopped just above her knees, and quite a bit of leg would be showing when she sat down. He had always loved her legs. She used very minimal makeup, just wanting to highlight her eyes. She wore her hair loose, surprised at how long it had grown. She wore no jewelry except her engagement ring and wedding band, and a small diamond necklace he had bought her the first year we were together.",
        "Beverly was shaking a bit when she pulled into his drive. It was the first time she had seen the house, and she was surprised at how big it was. Why would an almost single man, childless, need such a big house? It gave off an air of old-fashioned charm, from the graveled paths to the porch swing on the wraparound porch, where several people were gathered. They looked at Beverly curiously as she walked to the door, wondering who she was. She was just about to knock when it swung open. There he was. His eyes widened with surprise. It had been ten weeks since they'd laid eyes on each other. Before he could speak, she rushed out what she had planned to say. \"Hello, Dave. Please don't be upset, Susan invited me and I wanted very badly to see you. If you don't want me here I'll go, but please, can I stay?\"\n\nHe stood for a moment before grinning. \"Come in, Beverly. I'd like to show you my house, and sometime later I think we need to talk, don't you?\"\n\nHe reached out, and she locked down on his hand like it was the only thing on this earth that would keep her from floating away. He flinched, but didn't pull back. He introduced her around, and many seemed surprised to hear he was married. She glanced down, and breathed a sigh of relief to see his band still on his finger. Maybe there was hope for them yet. She finally let go when Susan dragged her away to gossip.\n\nThey whispered war plans to each other and Susan gave Beverly a hug with encouraging words. \"You've got him a little off balance right now. Keep him that way. Don't give him time to think about the past. Keep him in the moment, and his eyes on you. Be as affectionate as he will allow, but if you sense reluctance, back off. You need to get him used to you again. Understand?\"\n\nBeverly found it very sage advice, and promised her. She went looking and found him out back. He had a massive yard, easily four times the land at their, er, her house, and it was meticulously groomed. His building stood shining under a fresh coat of paint and a new tin roof to match the house. When she saw him, she just stopped and observed. He came out of the building, carrying an elaborate bird feeder in one arm and a small girl, three or four, in the other. She was hugging his neck, giggling and raining kisses on his cheeks. He was smiling, and it suddenly hit Beverly like a knife through the heart. She would never be able to give him kids, now, at their age. It dawned on her how selfish she'd been. Career had superseded family, and there was absolutely nothing she could do about it now.\n\nBeverly forced her mind to clear. In order to keep him in the moment, she had to stay in the moment. There was always adoption, if they got back together. Her mind was clear now, the fog of power and arrogance washed away. If he still wanted a family, they would find an age-appropriate child and adopt. Maybe more than one.\n\n\"Who's your girlfriend, honey?\"\n\nShe didn't know if he caught the 'honey', but he smiled.\n\n\"This beautiful young woman is Ari. We're good friends. I'm a little too old for her, but when she grows up, I see more than one broken heart in her wake.\" He set her down.\n\n\"Ari, do you think you can carry this by yourself? If not, I'm going to put it on the table here, and you can get your sister to help you. And I didn't forget my promise. I'll be over tomorrow to put it up for you.\"\n\nShe said hello to Beverly in a breathless little girl voice that made you just want to hug her to death, and toddled over to a stunning young woman, babbling excitedly and tugging on her hand. They approached Beverly and Dave, smiling. \"Thank you, Dave. You don't know what it means to her. She's watches the birdhouse you gave her for hours, and was thrilled when a bluebird family took up residence. Plus, she's almost worn out the bird book you gave her. I had to read the names to her, and she's committed them to memory. We'll be going down the road and she'll name them off: robin, bluebird, English sparrow, crow. Her preschool is so impressed they've organized a visit to the local aviary. She wants you to come, too, if you can get off from work.\"\n\n\"We'll see. If I can spare the time, I'd love to. I should probably go; she'll be so wired it'll take both of us to wrangle her.\"\n\nThe woman looked like she was still in her teens. To use the common term, the girl was built, and wasn't averse to flaunting it. Her shorts weren't quite Daisy Dukes, and her halter top was modest, but it did nothing to mask the physical appeal. She also had the prettiest set of lips Beverly had ever seen. She nearly lost it when the woman put her hand on his arm and stood on tiptoes to kiss him. He glowed red and Beverly was furious to see her lipstick on his cheek. The woman grinned at her, and Beverly knew she was being baited. \"You must be his wife. I'm sorry, but after a while, we all thought you were fictional. I'm Marsha. Dave and I are neighbors.\"\n\nIt took every bit of self-control Beverly had not to slap the smirk off her face. \"Oh, I'm very much alive. I'm sure you'll be seeing a lot more of me from now on.\"\n\nThey stared at each other until she smiled and sauntered off, putting a little extra swish in her shorts as she strode away. Beverly turned to Dave, pissed, ready to rail, and was stopped cold by his smirk. \"Draw your claws in, hon. She's just turned eighteen. Her parents were druggies, and one day they got hold of a bad batch and overdosed. She's living with her grandfather now, and frankly, he has no idea what to do with her. I like her, and I adore her little sister. Besides, it bothers you how, exactly? You haven't contacted me in eleven weeks, and had precious little to say for the two years before. I just assumed you wrote me off as a bad business decision and moved on.\"\n\nBeverly opened her mouth to say... to say what? Instead she just burst into tears and walked off. Damn him, why did he always equate everything to business? Of course she knew the answer, but couldn't face it. Susan swept in, eyes shooting lasers at Dave, and herded Beverly into the bathroom so she could compose herself. Even as she snuffled, she admired the huge whirlpool tub, wondering how it would be to soak in it, especially with Dave in there with her. She took a few minutes, but she got her composure back, especially when she remembered he called her hon, something he hadn't done in ... well, she couldn't remember, but it had been a while. She said as much to Susan. She asked, and Susan told her he had finally stopped holding his feelings in, but she took that as a good sign.\n\n\"I kind of deserved what he said, but it didn't make it any easier to hear. I came here to try and rekindle my marriage, and tucking my tail and running isn't a good start. So, Susan, stay out of it, no matter what gets said. This is like heavyweight boxing, so I'm going to take my lumps and keep swinging. Maybe I'll get lucky.\"\n\n\"Or maybe you'll get knocked on your butt. Hang in there honey, and if you start losing too badly, swing below the belt. Either way, you'll get his attention.\"\n\nComposed, Beverly went back to the party to find Dave sitting at a table with an older gentleman, Ari firmly planted in his lap. He started to stand, but she told him not to, taking a seat beside him. Ari looked at Beverly for a few minutes before reaching out and touching her pendant. The older gentleman spoke.\n\n\"Ari, stop. Don't bother the nice lady.\"\n\nBeverly thought she shocked both of them when she held out her arms and Ari scooted over. \"Do you like it? Dave got it for me, a long time ago. It's one of my favorite things in the world.\"\n\n\"Pretty.\"\n\n\"Yes, it is, baby. Maybe someday, in the future, some nice young man who means as much to you as Dave means to me will give you one. If he does, cherish it, remember every time you look at it or wear it who gave it to you, and why. Now, if you promise to be really careful, you can wear it for a bit. Can you do that? Promise?\"\n\nHer little girl eyes looked up at Beverly, a solemn expression on her face. \"I promise.\"\n\nBev slid her up on the table facing her, turning her back to Dave. \"Honey? A little help here?\"\n\nHe seemed lost, not sure what to say. \"Beverly, you don't...\"\n\n\"Nonsense. She already promised to take care of it, right, Precious?\"\n\n\"Uh huh!\"\n\nBeverly felt his hands shake while she enjoyed his fingers on her neck, the most intimate touch they'd shared in months. She gently placed it around the little girl's neck as she giggled and cooed. She carried her into the hall, putting her in front of a large mirror so she could see herself. Ari clapped her hands in joy, which made Beverly smile. It took so little to make a child happy, sometimes.\n\nAfter that, she stuck to Beverly like glue, leaving every so often to check on her sister, who was enjoying the attention of one of the young men from Dave's office. They were on his front porch, in rockers, so she gently rocked, and sang her a song her mother used to sing to her. She felt eyes, and looked up. Dave was staring, and tears were visible in his eyes. He turned abruptly, walking into the house. She couldn't very well chase him with a sleeping child in her arms, so she continued to rock.\n\nA few minutes later, he was back, reaching down to get her. \"Come on, let's put her in a bedroom for her nap. She'll be awake in a little, full of energy.\"\n\nBeverly followed him into a bedroom, where he laid Ari down, covering her with a light blanket.\n\n\"Won't it scare her to wake up alone?\"\n\n\"No. She knows where she is. As soon as she wakes, though, she'll let us know.\"\n\nThey stood, looking down at the sleeping angel, almost touching. He turned to go, and Beverly grabbed him, pulling his head down to hers, and kissed him. Not a little peck either, but a full blown kiss full of passion. He started a little, then kissed her back, giving just as good as he got. When he finally pulled back, questions in his eyes, Beverly put a finger to his lips. \"Don't think. Enjoy.\" Then she kissed him again before pulling back and leading him out of the room. It was enough, for now.\n\nMarsha met them on the back deck, questions in her eyes. \"She's asleep, honey. We tucked her in, and she looks to be out for a while.\"\n\nShe looked at Beverly oddly. \"Thank you. You've been really nice to her; she doesn't get that much. Odd, really, Dave told me you didn't like kids.\"\n\nFlames must have been pulsing out of her eyes. How dare he share such an intimate bit of information! Before she could blow up, he spoke. \"That's not necessarily true, Marsha. I said she didn't want children of her own. She seems to get along fine with what few we've been around.\"\n\n\"Oh,\" said Marsha, \"why didn't you want kids?\"\n\n\"Marsha! Mind your manners. You don't know this woman well enough to ask such personal questions. Leave it alone!\"\n\nMarsha was immediately contrite; apparently Dave was important to her. \"Sorry, I'm sorry, I didn't mean...\"\n\nSomething about the way she suddenly looked so young and helpless touched Beverly, so she hugged her unexpectedly. \"Hush, baby, it's all right. I know you didn't mean anything, so there's no harm done. Come on, let's get those tears dried and fix you up a little.\"\n\nDave stood with his jaw hanging as Beverly led her away, back to the infamous bathroom. It was sure getting a lot of use today. She got a cloth and towel and gently patted her face dry, saying soothing words to calm her down. Marsha hugged her like she was afraid to let go. When she finally calmed down, Beverly had her wash her face, envying the smooth skin of youth. She wore no makeup, her hair in a simple ponytail.\n\n\"I'm all right now. We can go back now.\"\n\n\"Let's give it a minute. Let your ponytail down, and I'll straighten it a little.\" Marsha obeyed Beverly like a child, and she sat her in front of the mirror, straightening out her tangles. Without thinking Beverly started redoing Marsha's hair, putting it in an elaborate braid. It made her even more attractive. Determining to go farther, she used a bit of blush, a hint of mascara, and a light pink lipstick on her. Marsha sat silently, her eyes getting bigger as she watched herself transform. When Beverly was done, she would have looked comfortable on the cover of any teen magazine.\n\n\"Wow, just ... wow. What did you do to me?\"\n\nBeverly saw her lip start to quiver. \"Stop! You'll make your mascara run. I didn't do anything, child. It was there the whole time. You're a diamond, baby, you just needed a little polishing. Now, let's go back and knock them dead. That young man you were talking to will wish he'd spent more time with you, I'll bet.\"\n\nConversation almost stopped when they returned, and it wasn't long until there was more than one man vying for Marsha's attention. Beverly returned to Dave, standing beside him as he manned the grill.\n\n\"Were we ever that young?\"\n\nHe smiled a bittersweet smile. \"If we were, I can't remember it. It makes you feel good, doesn't it, watching the eons-old mating dance?\"\n\n\"It does. And even if you don't, I do. One memory forever enshrined in my heart is the first time I kissed you. We were, what? Nineteen? I was still a virgin then. Boy, we sure got over that quick, didn't we? I think I knew after the first date we were destined to be together. What happened to us?\"\n\n\"Life happened. We grew up, our priorities changed. Suddenly the thought of ducking out of work and spending the day playing wasn't as important as making a meeting or coming in early to beat the competition, so you'd have a leg up when promotion time came along, or you couldn't go on a spontaneous road trip because you had things left over from the week before, and needed to finish them and start on the new week so you'd gain ground. Good or bad, Beverly, we grew up, and now we're growing old.\"\n\nHe stopped suddenly, but she knew what he was thinking. They were growing old, and not together. She had to derail that train fast. \"Will you show me your garden?\"\n\nHe smiled and led her over. It was a lot larger than she thought it would be. It was just like him, though, neat and orderly, teeming with plants. She had no idea what most were, and he named them off for her. \"Black Crim, Rutgers, and Yellowboy tomatoes. Straightneck and spaghetti squash, Italian Grey zucchini. French purple pole beans, butterbeans, and bush stringless beans. Poblano and Cubanelle peppers. The flowers, especially the marigolds, are natural pest deterrents, and the mulch is to help retain moisture and enrich the soil. It almost completely eliminates having to hoe weeds.\"\n\nAri popped up, done with her nap. She tugged on his pants leg, and he picked her up without a second thought. \"Pick!\" she said, pointing to a bright yellow tomato. Dave carried her over, set her down gently, and Beverly was surprised when the little girl took hold of the tomato and twisted carefully until it came off in her hand.\n\nShe held it up to Beverly. \"Eat!\"\n\nDave laughed. \"She wants you to wash it, so she can have a sandwich. I've taught her not to eat anything until it's washed. I use organic pesticides, but they're still pesticides, and I want to be safe.\"\n\n\"Good idea.\" She held out her hands and Ari toddled over. She hugged her as they walked, her back turned to Dave so he couldn't see the moisture in her eyes. Her maternal instincts, instincts she wasn't even aware she had, were surging strongly. Marsha came over, but Ari refused to leave Beverly's arms.\n\n\"Well, all right then! I'll help Mr. Dave plate the food. When she gets her sandwich, bring her outside. I'll save you a seat.\" She walked off smiling. Beverly washed the tomato thoroughly, found the bread and mayo, sliced it, and built Ari her sandwich. She sat and watched, telling her to put more tomato until the whole thing was on the sandwich.\n\n\"This is going to be messy,\" Beverly thought as she carried the plate back outside, Ari holding on to her sundress. Marsha had saved a spot between her and Dave, and Ari spent her time going from one lap to another. She ate half the sandwich, half a buttered ear of corn, and half a hot dog. It was still a lot of food for a little girl. Beverly was right; it was messy, and Marsha had to take her for a change of clothes.\n\nThey sat under the party lights he had placed in the trees, watching the sun go down. She was surprised to see there was no alcohol. Dave told her privately it was because Marsha's grandfather was a recovering alcoholic.\n\nHe left shortly after, though, and Dave pulled a cooler full of beer out, along with four bottles of wine. Not enough to get smashed for the amount of people, but enough to give everyone a pleasant glow. He had music playing, speakers situated around the patio, surrounding them with gentle instrumentals and languid love songs. Beverly snuggled into Dave, hoping for the best, and he responded by putting his arm around her. She almost cried with happiness. Marsha and one of her admirers, along with Sol and Susan, were dancing, swaying together across the grass. Young love, and old, connecting in the soft lights. The music changed: a love ballad popular when they were in college. They had danced many a slow dance to that tune. Dave stood, pulling her along.\n\nBeverly had just enough time to kick off her sandals. Then she was in his arms and twenty-one all over again. She held him as tightly as she could, and soaked his shirt with her tears. One hand reached up to push her hair back and caress her cheek. They stayed together for a few minutes after the song ended. She stepped back, noticing Susan was standing with her mouth open while Marsha grinned.\n\nThe tears started again, and soon they were in a three-way hug, all of them sniffling, which led to another trip to the bathroom. This was getting to be a habit. She started to fix her makeup one more time, thought better of it, and washed her face.\n\nThe people left, thanking Dave for the evening. Marsha hugged them both, tightly. She had a sad face when she pulled back. \n\n\"What's the matter, baby?\" Beverly asked.\n\n\"I wish ... I wish ... I wish you guys had been my parents! Maybe I would have the love I deserved, the love Ari is going to need. I'm scared, real scared. Now that I'm eighteen, the support check for me will stop coming. Ari will still get one, but it isn't much. Gramps is already uncomfortable with us being there. If the money dries up, he'll kick us out.\"\n\nBeverly was shocked beyond words, and Dave had an expression on his face she hoped she would never see again. \"Marsha, I want you to listen to me. I'm right next door. If things get bad, you come here immediately. Immediately, understand? If I'm not here, lock the doors and call us. One or the other, we will be here for you and Ari. Say you understand.\"\n\nBeverly watched, shocked, wondering what kind of hell their life had been. Snapping out of it, she hugged her again. She gave Marsha her card and scribbled her private number on the back. \"Save this. If you need anything, and I mean anything, you call. You understand?\"\n\nShe was crying again, and took turns clinging to them. When she finally composed herself, she left, a sad, slow walk until she was out of sight. Dave walked over to the porch swing, lost in thought. Beverly sat down beside him and took his hand. She may have been the big bad CEO, but when things really got rough, one could depend on Dave to take care of it.\n\n\"What are we going to do?\"\n\n\"About what?\" he asked, coming out of his reverie.\n\n\"About the girls. We can't leave them in a situation like that!\"\n\n\"What do you suggest we do? I'd take them in in a heartbeat if I could.\"\n\n\"Why don't you?\"\n\n\"I don't know how it would work.\"\n\n\"She's eighteen now, \"Beverly said. \"She's legally an adult, so she can live where she wants. Since she is legally an adult, she can petition the courts for full custody of Ari. I'm sure the grandfather would go along with that just to get rid of them if what she says is true.",
        "\"Here's what we do. I'll take charge of the legal stuff, that's my strong suit. Yours is sales, so you need to sell her on the idea of being an adult and doing what's best for both of them.\"\n\n\"Won't it look bad, a single older man taking a young woman and child in?\"\n\nThat stung. Beverly finally let some of her temper loose. \"You listen to me, Dave Waxman. You are not a single man! You have a wife, and she is not inclined to be referred to as the former Mrs. Waxman. It took all of this to wake me up, Dave, and I intend to never sleep again. I've missed you so badly, honey. But introspection has led me to understand that what happened is all on me. I took you for granted for so long that I got used to it. I got bad advice, went a little power mad, and screwed my life up in ways I could never imagine. Tonight was the first step on my way back to you. Do you still love me?\"\n\nIt took everything she had to ask that question, and she was scared to death of the answer. He looked thoughtful, and it filled her with dread. \"I love the you I fell in love with, not the you that you've become. IF we manage to start again, things will have to be a lot different. I'm not asking you to be submissive, Beverly, but I would insist on you acknowledging me as an equal. An equal that deserves your respect and a good bit more than the time you've given me for the last few years. I woke up after I left. I have no desire at all to go back to that life, and I'm damn sure never stepping foot in that house again. I need to know in my heart that if the situation ever arises, you would pick me over the business every time. Honestly, I don't think you can do it.\"\n\nBeverly was crying, despite her best efforts not to, and he took her hand. \"Honey, all that being said, I'd really like to try again. I miss not waking up beside you, the affectionate gestures we used to share before you got too important. There are a few things we need to do though. The first is to find a competent marriage counselor who can guide us back to each other. We need to set some ground rules on how we allocate our efforts, making sure there's always time for each other. Does this sound reasonable to you? Would you be willing to live here, in this house, if we get back together?\"\n\nIt was too much! He wanted to save their marriage! He still loved her! She broke down, sobbing hysterically for at least five minutes while he held her, gently stroking her back. Eventually, she got herself together enough to answer him.\n\nHe waited, wondering if she understood what he told her. He'd never accept second billing ever again. If she wanted to stay married, it had to be to him, not the job. Honestly, he didn't think she could do it. She really surprised him with her answer.\n\n\"I agree to almost all of it. I'm not worried about the house. It's nice, but without you there it may as well be a box under an overpass. I'm sure the commute will suck until I get used to it, but if it helps save my marriage, I'll get over it pretty quickly.\"\n\nShe sighed. \"I lost direction, honey, and I want to find my way back home. I need a guide, and I'm depending on you. The counselor is a really good idea. Do you want to find one, or shall I? We'll both have to agree, of course, before we commit.\"\n\nIt was a few minutes before she could go on, crying into his shoulder. She finally pulled back, wiping her eyes. \"One of our first priorities should be to reestablish our intimacy. I know it's probably too soon for sharing a bed, but can I stay here tonight? I really need to wake up in the same house as you. As far as priorities, YOU are my main focus right now. I still have to work. Thanks to my blunder, I'm not in a very good position, so I have to really put effort into everything I do, but I will make sure I'm home at a reasonable hour. If something comes up that I absolutely can't walk away from, I'll call immediately. I'm willing to put forth maximum effort to ensure this never happens again.\"\n\nHe believed her, conditionally. Truth be told, once he got over the hurt that she had caused him, old feelings had started back. Most of their adult lives were entwined, and at the end of the day, he decided he didn't want to break them. He was serious about a counselor. If ever a couple needed professional help, it was them. She was saying all the right words and he was curious to see if she meant them.\n\n\"All right. You can have the room Ari took her nap in. It has its own private bath, and if you need something to sleep in we'll find you a shirt. Agreed?\"\n\nShe surprised him by shaking her head. \"No. I saw that big whirlpool tub in the master bath. I've been carrying around a load of tension lately, and I think soaking in it would do me a world of good.\"\n\nSoon he heard her in the tub, singing softly. She had a really good voice, and he tried to remember the last time he'd heard her sing. He couldn't, so it must have been a really long time ago. It was one of her tells. She always felt extra happy when she sang. Forty minutes later, she came out wearing a tee-shirt that barely covered her bottom. Bev caught him looking and grinned, flipping it up as she exited the room. He stood in shock at the sight of her bare butt, listening to her giggles fade down the hall.\n\nHi eyes flew open, and the first thing he looked at was the clock. 2:30 in the morning. There was just enough moonlight to see her standing at the end of the bed. \"Bev?\"\n\n\"I couldn't sleep, knowing you were in the same house and not in the same bed. Can I please, please, sleep with you? That's all I want, just to snuggle and feel your arms around me. Please, Dave.\"\n\nHe could have been an asshole and sent her back down the hall. He could have done a number of other things, but he pulled back the covers. She slid in and he felt her trembling. Wrapping his arms around her, he pulled her tightly to him. He felt the tears, but said nothing. Very soon afterward, he heard her breathing level out and knew she was asleep. He lay awake for a long time, wondering about their future, before drifting off with a smile on his face.\n\n*****\n\nHer eyes popped open and she wondered what hotel room she was in. Then she felt his arms around her and it all came rushing back. She was in bed with her husband! And judging by the bulge pressing between the cheeks of her bottom, he was very glad she was. She started pressing back gently, sighing. This went on for a few minutes before she felt him start. She stopped, but when his hand slipped up to my breast and toyed with a nipple she moved again. She slid her shirt up and reached back to free him from his boxers when the door flew open and a little bundle of energy crawled up on the bed.\n\n\"Mr. Dave! Wake up.\"\n\nMarsha stood at the door with her hands over her mouth. \"I'm so sorry! I told her to stay downstairs, but as soon as my back was turned she took off.\"\n\nDave grinned, tickling Ari softly. She wriggled and cooed, loving every minute of it. \"It's all right, Marsha. Now I have two beauties in my bed. How lucky can a man be?\" \n\nBeverly saw Marsha's expression and I knew something wasn't right. \"What's wrong, honey?\"\n\n\"We, um, well we, er ... Gramps hasn't gone grocery shopping lately. I was going to ask if I could give some of your cereal to Ari.\"\n\nShe could tell Marsha was embarrassed beyond words. Beverly's heart went out to her. \"She doesn't need cereal, honey; she needs a good breakfast. Give us a minute to get dressed and we'll come down and fix something, or take you out if he doesn't have enough. All right?\"\n\nMarsha couldn't talk, she just nodded and gathered up a squirming Ari. \"Come on, Ari. Let's get you some juice while Mr. Dave and Mrs. Beverly get dressed.\"\n\nAs soon as the door closed, Beverly whirled around, eyes blazing. \"I'm sorry honey, I was hoping for some long overdue loving, but it can wait. Really, what kind of man doesn't make sure there's enough food in the house for his children? Where's your robe?\"\n\nShe snatched it off the closet hook and was out the door. Dave followed a little more slowly after answering the call of nature. She was in the kitchen with all of the cupboards open, frowning. Dave was about to explain that, as a single guy, there was not much of a need to keep a stocked larder, but he thought better of it. Beverly didn't give him a chance, marching out to her car and getting The Bag, as Dave always called it.\n\nOne day, she was at a business luncheon and a vendor spilled red wine all over her light blue dress. She had to excuse herself, drive home, and change. After that, there was always a bag in her trunk that contained at least two outfits. Choosing the most casual dress, she was back, telling Dave to get his butt in gear, they had children to feed. A very quick shower and shave later, Dave was waiting by the door. Bev was almost as fast and he couldn't help but admire her. She always chose tasteful clothes, but was not adverse to showing off her toned body.\n\nThey almost didn't go out for breakfast when Beverly found out there was no car seat for Ari, but when Dave told her that they were less than half a mile from a really nice breakfast buffet, she decided to sit in the back with Ari until they got there.\n\n***\n\nThe girls consumed mass quantities. He looked at Bev and knew she had the same thought. These children were missing meals. Her eyes were dark with anger and Ari asked if he was mad at her. Dave straightened his face and told her he was because she had eaten the last pancake. Then he grinned and told her it was a good thing that they could always get more.\n\nThere was a mall across the road, and in a tone that brooked no argument, Bev told Dave to pull into its lot. They were there for two hours.\n\nFirst, she went to a department store and bought the best car seat they had, banishing him out to the parking lot to put it in. By the time he got back, they were in full shopping mode. Bev made sure they both got three outfits apiece. Ari loved it, but Marsha seemed embarrassed. Bev gently hugged her.\n\n\"Please let me do this. We never had children, and just once I want to pretend I'm out with my daughters doing mother-daughter stuff.\"\n\nAri got bored pretty quickly, so Dave walked her around while Marsha and Beverly finished up. Their last stop was a grocery store, and Ari rode as Dave pushed, while Bev and Marsha discussed everything that they picked up like they were going to use it to cook The Last Supper. Ari contributed by putting everything she could reach in the buggy, especially while they were in the snack aisle. Beverly started to put some of them back, but Ari made big eyes at her and she left them.\n\nIt was a quiet ride home. They were unloading the groceries when Beverly suddenly asked, \"How many bedrooms do we have?\". Dave found it very interesting when she said 'we'. \"Four. Why?\"\n\nShe just rolled her eyes, took the girls, and went upstairs. Ten minutes later she called him. Dave found them standing in the biggest guest room, the one with the attached bath. \"This is the girl's room. It belongs to them now. It will be their sanctuary if things go bad. You need to make sure Marsha has keys so she can come over anytime. Understand?\"\n\nMarsha was standing there waffling between hopeful and scared. Ari was in Beverly's arms, almost asleep. Bev had that determined CEO look on her face. When he didn't say anything, he saw her start to tremble. Then he grinned.\n\n\"Well, so it shall be. I leave it to you girls to decorate it.\"\n\nHe turned to Marsha. \"You understand what we're offering you?\"\n\nAs an answer, she flew into his arms and cried her heart out. Bev put a sleeping Ari down and joined the hug. He left them a few minutes later, going into the living room to sit on his favorite recliner. He tried to understand how his life had changed so much in the last twenty-four hours.\n\nBeverly came down a few minutes later, surprising him by joining him on his oversized recliner. Once she got comfortable, she started talking softly while gently stroking his chest. \"This changes everything, doesn't it? I'm going back to the old house to pack what I need. I'm taking Marsha with me to help, so you're on Da ... er, childcare duties until we get back. Do not feed her junk, understand? Feed her something light to hold her until dinner. We'll be back in three hours.\"\n\nShe stood, then stopped, bending down to kiss him. He could see the fear in her eyes as she spoke. \"That is, if you want me back.\"\n\nHe stood and hugged her. \"We have a lot of issues to resolve, honey. Living apart from each other is not going to help solve them. You were always better at organizing things, so I'll leave it to you. This probably won't be easy, but I love you enough to try. Are you in?\"\n\n*****\n\nWas she in? What a stupid question. She was about to use every metaphor in the English language before she caught herself and smiled through her tears. \"I'm in.\"\n\nHis smile gave her a lot of comfort. She grabbed Marsha from upstairs and hustled her out the door. She was quiet for a while before she asked a question. \"Why are you doing this? Helping us?\"\n\nShe thought carefully before she answered. If they were to have any kind of relationship, she didn't want to start it off by lying to her. \"First and foremost, I'm doing it because I like you and honestly want to help you. You're in a situation not of your own doing, alone and with a small child. What decent human being wouldn't want to help you? Secondly, you seem to be important to Dave, and by extension, to me. You know we were separated. This weekend is hopefully the first step of a long journey home.\" \n\nShe stopped for a second to gather her thoughts. \"One of the things I discovered while we were separated was that Dave really wanted children and I was selfish enough to deny it to him. Then I met you and Ari, and emotions I didn't even know I had came surging out of me. Now, I bitterly regret my decision not to give him children. You girls are my do-over. I'll never be your mother, but I'd like to be the best mother-figure I can be to you and Ari, no matter what happens between Dave and me. You probably don't understand, but I would honestly like to try. May I?\"\n\nTears glistened in her eyes and then she reached over and took Bev's hand. \"Well, then, you can count me in on your campaign to get Dave back. After all, for a perfect family, both parental units have to be present, right?\"\n\nBeverly had to pull over. Marsha held her while she cried and she reveled in her touch. When she finally got herself together, she let her loose, kissing her softly on her cheek. \"Thank you, baby.\"\n\nWhen she called her \"baby\", she started sniffling, so they hugged again. She hit her with a bombshell. \"To truly be my daughter, you need to live with us full-time. Now that you're eighteen, you can petition the courts to transfer custody of Ari to you. We'll pay for all the legal fees if you agree. It should be pretty simple, and when we're done, no one can take her away from us. You need to start practicing saying 'Yes, Mom'. Now would be good.\"\n\nBeverly lost feeling in her hand because her grip was so strong. It came out as more of a sob than a statement, but she understood it as though she'd shouted it. \"Y... Yes Mom.\"\n\nShe wandered through the house as she basically cleaned out her closets and dresser drawers. It took them four trips to get all the stuff in the car, filling the trunk and most of the back seat. \"You have a beautiful house, but it doesn't feel like Dave's. His feels ... warm, you know?\"\n\nBeverly did know. \"You're exactly right. I've lived in the cold long enough, baby. That's why we're selling it. I plan to never spend another night there. I find I love being warm.\"\n\n*****\n\nThey came back with her car stuffed. Ari and Dave came out with her in his arms, and Dave asked Beverly why she didn't take her truck. She slapped his arm playfully. \"Now you bring that up? We'll use it next time. Think about what you'd like for dinner while we unpack.\"\n\nDave thought he impressed Bev when he made a simple stir fry using chicken breasts, zucchini, carrots, ripe bell peppers in yellow and red, onions, mushrooms, and chopped Brussels sprouts. He served it over rice with a surprise. He'd taken parfait glasses, chopped up some tomatoes of different colors into little chunks, added basil leaves, and blended them with olive oil and a touch of vinegar. It was a very nice visual. Ari would have just eaten tomatoes if they'd let her. She had a bit of a temper tantrum and got her first experience with parental controls.\n\n\"Ari, do you want to grow up to be as pretty as your sister?\"\n\nAri wondered where this was going, but she nodded her head. \"Uh-huh.\"\n\n\"Then you have to eat different foods. You'll like what this tastes like. It has a whole lot of things you already like mixed together. Taste a spoonful.\"\n\nBeverly took a small spoonful and fed it to her like a baby. Her eyes grew wide and she smiled. \"More!\"\n\nDave took a shot at the parenting thing. \"That's 'More, Please'. And you should say thank you to Beverly for helping you learn something new.\"\n\nShe looked at Beverly and smiled. \"More, please?\"\n\nShe ladled a little on to her plate with shaking hands, and looked like she was going to burst with pride when Ari grabbed her hand. \"Thank you.\"\n\nThe meal over, Bev took Ari to clean her up while Marsha banished Dave to the living room. Ari came back in, bathed and in pajamas, and crawled onto his lap. They watched a DVD Beverly had purchased while they were out, which was the move Frozen, and Ari managed to stay awake for most of it. it became her favorite movie, and they must have watched it a thousand times over the years.\n\nMarsha walked next door and was back in just a few minutes. \"Grandpa is gone and the door is locked.\"\n\nBeverly could see the steam coming out of his ears and put a hand on his shoulder. She grinned at Marsha. \"Good thing we got you those pajamas then. Go get ready for bed.\"\n\nMarsha bathed and came out in shorty pajamas that showed a lot of leg but were conservative enough. Beverly grinned at his expression. \"Only one of them is a little girl, honey.\"\n\nThey were all in bed by ten, and both of them had to work in the morning. Beverly came out of the bath in a sexy little baby-doll that did her figure justice. She saw Dave watching and twirled. His eyes went wide when he saw there were no panties. She giggled. \"It comes with panties, but I figured it would be a waste of time to put them on. You, sir, are five months behind on your husbandly duties and I expect you to make up some of it tonight.\"\n\nThen she got quiet and said in a small voice, \"That is, if you want to.\"\n\nHe stood up and slipped the gown over her head. \"In my opinion, you wasted time putting anything on. I love you, Beverly.\"\n\n*****\n\nJust like that, her amorous mood vanished. She was too overcome with emotions to be aroused anymore. He still loved her!\n\nHe started kissing her, stroking her body in his familiar way, and she melted. It didn't take long for the fire to return. He was surprised when she grabbed a pillow. \"It's to scream into, baby. You know how much I enjoy making love to you and how loud I can get. We have children in the house and I don't want to wake them, so I'll be biting this pillow a lot tonight. I hope so, anyway.\"\n\nShe didn't know how many times she bit down, but it was enough to put a hole in the pillow. She was glad pillows were pretty cheap, but if it cost her half her salary a week, it would be worth it.\n\nTheir alarms were set, but Ari decided she would be their wake-up call. She was glad now that she made Dave put his boxers on and had slipped her gown on, with the panties this time. They snuggled her for a while until Marsha appeared and took Ari while they showered and dressed. They played with each other a little, but they couldn't get serious because of time constraints.",
        "Marsha had cooked breakfast and they sat down to eat as any family in suburbia would. Ari insisted on a kiss goodbye, and they also kissed Marsha on the cheek, not wanting to leave her out. Marsha had a driver's license so she took Beverly's car and dropped Dave off so they didn't have to swap the car seat. Beverly drove Dave's truck to work.\n\nJen burst into the office three minutes after Beverly was seated. \"Does that truck belong to who I think it does?\"\n\nShe couldn't help grinning. \"It belongs to my HUSBAND, if that's what you're asking. Now, go to work Nosy Nellie. We'll talk at break.\"\n\nShe bounced through the door five minutes early, bearing coffee and pastries. Beverly refused to say a word until they had their snack and were sipping their coffee.\n\n\"Dave and I are back together, Jen. We have things to work out, and counseling will probably be involved, so I may miss a few hours now and then. It probably won't be as easy as I'd like, and there will probably be times when I'm depressed and snappy, but bear with me. I know I've probably never told you, but you're my rock here in the office. I'm most likely going to lean on you more than usual. That being said, I have approval to raise your salary seven percent. It's not a lot, but it's the best I can do. Thank you for standing by me.\"\n\nJen was both elated by the news and saddened deeply. Her husband had just gotten a promotion and would be transferring to another state in three months. He was given the news Friday. His company had also helped line some referrals up for her, and she was flying out next week to spend a day doing interviews. They were both crying as she told her the news.\n\n\"I still have eleven more weeks, boss. I'll help you find someone new, someone who will be as loyal as I am.\"\n\nThey hugged and went back to work. She thought about it on the way home, and as she pulled into the drive, it hit her. Marsha!\n\nShe talked it over with Dave and he thought it was an excellent idea. Ari was a bundle of energy, loving on both of them. She gave her a bath, sat down and read her a story while she rocked her gently to sleep. She passed her off to Marsha and got comfortable on the couch while they waited, snuggled up under Dave's arm.\n\nShe came back downstairs and they called her over to them. \"Marsha, could you sit a moment? We have some things to discuss with you. First, how come you're still here? We care a lot about both of you, honey, you know that, right? You can tell us anything.\"\n\nThey noticed how unsettled she was all evening, but when they asked, the waterworks started. \"Grandpa threw us out! When we didn't come home last night, he went into a rage. I think he's drinking again. He told me I had to go, but Ari was staying because he wanted the money! I came straight home and locked the doors. He won't let us have our clothes, our records, any of the things we need. What am I going to do?\"\n\nBeverly grabbed her and put her on the sofa between them. They both petted her until she calmed down. It hit Beverly that night as she was snuggled in their bed that Marsha had said, \"I came straight home.\" That made her very happy.\n\nThey discussed it as soon as she was rational again. \"First, you need to go to the courts and petition for custody right away, tomorrow if we can get you a lawyer. You'll give them this address as your home. The first thing they're going to want to know is if you can support her. Right now you're unemployed, so that may be a problem. Have you ever held a job before?\"\n\nMarsha tearfully admitted she had worked at a few burger places but not for very long.\n\nDave had a small smile on his face. He knew how Beverly's mind worked and knew if she asked the question she already had the answer. \"Well then, the first thing we need to do is get you gainfully employed. Fortunately for you I have some openings at my company. You'll start Wednesday, after you fill out the paperwork.\"\n\nMarsha had stopped snuffling and asked timidly what she would be doing. \"It just so happens I'll be needing a personal assistant in three months. It requires at least a two year degree, so you'll have to take classes at night. If you fail or stop going, you automatically lose your job. I have faith in you honey. Don't let us down.\"\n\n*****\n\nMarsha finally stopped crying, and Beverly and Dave got into bed. He kissed Bev firmly as soon as she slid under the sheets.\n\n\"Not that I'm complaining, but what was that for?\"\n\n\"That's for what you did for Marsha and Ari. You know we're going to have to arrange childcare for Ari. Luckily for us, Sol offers free daycare for his employees, so I'll enroll her tomorrow. She'll ride back and forth with me. Marsha will ride with you. Should we look at getting her transportation?\"\n\nBev got quiet for a while and he asked what she was thinking.\n\n\"What are we doing here, Dave? We're back together, something I seriously thought wouldn't happen at times, and we're taking in two girls, something I could never see happening at all. Are we pushing too hard? I don't want anything to come between us at this stage in our life.\"\n\n\"Should we turn our backs on them? Send them back to their grandfather and wish them the best of luck?\"\n\nHer grip on him got tighter. \"Absolutely not. If something happens and we can't keep them, I will personally make sure they land somewhere safe. They're better off where they are right now than anywhere we could think of. I'd like to keep them as long as we can. Please, honey?\"\n\n\"Oh, we're definitely going to keep them. Marsha's legally an adult, even if she's not prepared to function like one. Ari is the one I'm worried about. She's four, and if we keep her she'll imprint on us. We'll become the parent figures in her life. Are you all right with that?\"\n\nShe was quiet for a minute. \"Two years ago, I would have run from them. Three months ago, I would have waffled over the idea. But now, as long as you're part of the package, it fills me with great joy. I don't have any idea how to do it, but I'd like to try.\"\n\nIt came out of his mouth before he thought. \"We'll make it, baby. Both of us made mistakes in the past. You should have given at least part of your attention to us instead of being so fixated on climbing the corporate ladder. I should have been firmer and demanded you remember that even if you were my boss at work, we were partners in life. These are mistakes I'll never repeat. I plan on being more open with my thoughts and a bit more forceful in my actions just to make sure it never happens again. I still think counseling is a good idea. After the dust settles with our kids, we need to look into that.\"\n\nHe felt tears on his shoulder and wondered if he had gone too far. He asked and she slapped his arm playfully. \"These aren't tears of sadness, they're tears of joy. I never thought the term 'our kids' would ever come out of your mouth or that I would be so thrilled to hear them. They're the missing link, my love. We got so focused on ourselves, well, in my case anyway, that we forgot what life is like. Children force you to prioritize. Suddenly, it's not all about you anymore, it's about them. I want to experience that so much. Now, let's go to sleep. I have a daughter to train in the business world tomorrow, and you can make damn sure she won't learn the lessons I learned the hard way. You've got to enroll our baby in daycare. I'd love to see the look in Sol's eyes when you show up with Ari tomorrow.\"\n\n\"We need to call out tomorrow, Bev, at least half a day. I'm sure Marsha needs a wardrobe, especially since her grandfather locked her out of the house, as does Ari. I need to see Sol about daycare because technically, Ari isn't ours. Plus, you need to get her a lawyer lined up for custody. We need to move on that fast. Sometime tomorrow I'm going to see their grandfather and see if I can get him onboard with what's happening. It'll make the transfer of custody a lot less complicated.\"\n\n\"Agreed,\" she said in her business voice. \"And you were right about transportation. She'll need a car to get back and forth to school. We can do that in a couple of months, after she's settled into her job. What kind should we get her?\"\n\n\"Let's wait two months and then get her input. No hotrods, nothing too expensive. A starter car should be something we don't have to worry about her dinging. We just need to make sure it's safe.\"\n\n\"Your end of the world, honey. You can handle that. Now, we need to sleep. Lots to do tomorrow.\"\n\n*****\n\nThey woke with a smile and a plan to their personal little alarm clock. It occurred to Beverly when they were intimate they'd have to make sure the door was locked. She giggled at the thought. Marsha didn't quite know what to think, and Ari had no clue about the changes coming into her life. She hustled them into the car for a trip to the mall. She showed Marsha the type of clothes she needed to maintain a professional appearance, and she chose well. Then she told her to pick some non-working clothes. There were a few miniskirts that she wanted approval for, and four or five pair of very well fitting jeans. She picked up some basic tees and a couple of cuter tops, and then she was set. Beverly sent her to pick her own underwear, telling her to bear in mind how it would look under her professional clothes.\n\nShe then concentrated on Ari. It was all a wonder to her, but it didn't take long before she was giggling and cooing as Beverly had her try on several outfits, as well as some really pretty dresses. She didn't like the shoe store until Beverly showed her a pair of pink sneakers, and then she cooperated. Dave met them for lunch and tried to act interested when they told him about their purchases. They finally gave up. He'd just have to experience them one at a time. Dave switched the car seat to his truck and they waved as he and Ari pulled out.\n\nJen was surprised when she showed up with a woman so young. She was surprised even more when she told her what she wanted. \"See if she's trainable, and if she has any business skills at all. I need total honesty after you work with her for a few days. If she's competent, she'll be taking your place. If she's not, we'll find her another position.\"\n\n\"Who is this girl to you?\"\n\nBeverly flushed as she explained how she came to know her. Jen actually laughed. \"I wish I was around to watch. Does she call you Mom?\"\n\n\"Not yet. I'd like to hear it, though, sometime in my life.\"\n\nShe showed her pictures of Ari. Most were while Dave held her. \"I'm afraid she's going to be a Daddy's girl. I can deal with that, as long as I get the big one. It'll be easier with her.\"\n\nJen almost fell over in a fit of giggles. \"Really? A teen, as pretty as she is? What's going to happen the first time she brings home a boy you don't think is good enough for her? You better get used to sleepless nights.\"\n\nBeverly hadn't thought about that. She wondered if Dave still had that old double barreled shotgun he'd inherited from his grandfather, and if it still worked.\n\nMarsha was completely overwhelmed with the whole experience, and just followed Jen around like a puppy. They took her to HR and got her paperwork started. She came in on the lowest entry level salary, $22,000 a year. She thought it was a fortune. Beverly just smiled. \"Wait until you have to pay your own bills. It won't seem like nearly as much then.\"\n\nShe saw Marsha frown and hastened to comfort her. \"That's years down the road, honey. I refuse to let you move out until you have a degree, at the very least. Then we'll see how you feel about it.\"\n\nShe was quiet on the way home. Beverly asked her how she liked her day. \"It overwhelmed me, but I'll learn. Look at the role model I have.\"\n\nBeverly glowed and Marsha spoke again, a small, shy voice replacing the confident one. \"I may have made a mistake today. One of the other secretaries asked who I was and Jen told them I was your daughter. I was so shocked I didn't correct her. The word is out, you may have noticed the strange looks.\"\n\nShe had noticed, but shrugged them off. She was trying to save the company and her ass, so she expected some strange looks.\n\n\"Don't tell them any differently. Maybe they'll treat you better. I could think of worse things to be called, and have been called.\"\n\nThey arrived home to find Dave and his little helper had prepared dinner, grilled chicken and vegetables. They ate like they had slaved in the salt mines.\n\n*****\n\nHe wished he had recorded the look on Sol's face when he told him why he was late and what he needed. Ari was in his arms, her little hands locked around his neck. He immediately called Susan, who must have set a speed record getting to the plant. She had that grandmother vibe down just right, and soon Ari was in her arms while they talked. He explained the whole wonderful weekend to them. Susan had tears in her eyes, which confused Ari. Sol looked a little misty-eyed and he made a comment about the cleaning crew not dusting well, but he was smiling the whole time.\n\nIn no time at all, Susan had Ari by the hand, towing them along to the pre-school. Ari wasn't used to being with people her age and was a little clingy, but the teacher soon had her coaxed into joining them in a game. An hour later, she barely acknowledged Dave when he left.\n\nHe gave Susan and Sol their history as he knew it and asked if they knew any good family law experts. Susan was on the phone immediately. Seems one of the Boards she sat on specialized in children in difficult situations. She got a family law judge to get them an appointment with what she considered the best expert in the field. She made it after normal hours to help them. He couldn't wait to tell Bev.\n\nSusan brought him back down to earth with some pretty pointed questions. \"So, one weekend with your wife and having these children dumped in your life makes everything all right?\"\n\n\"Not in the least, Susan. We have a lot of feelings and old wounds to sort out. The children won't make it any easier. We plan to find a good marriage counselor, and later on, if things work out, we'll make a few visits to a family expert to smooth the path for all of us. I know this, though: we still love each other. We are also developing strong feelings for those two girls. You know how goal-oriented and driven Bev can be when she wants something, and she wants the whole package. I think this weekend has shown her what we missed out on by not having children and sees this as a chance to correct an old mistake. It'll be up to me to keep her reeled in and balanced. It will be up to her not to return to her old ways. The first hint of that and I'll be all over her. So, no, it's not going to be an easy path, but it's one we're both willing to walk.\"\n\nSol grinned. \"Well done, Dave. I can tell you from experience it will be worth all the pain and heartbreak that's coming your way when you watch them leave the nest. Stay the course, my son, and the rewards will be more than you can ever imagine. Now, go to work! You have a family to support now.\"\n\nDave did work a few hours, and was not ashamed to say he was seriously ineffective. Ari bounded into his arms when he came to pick her up, rattling on about what she had learned and all the friends she'd made. The director of the facility smiled at him. \"Get used to it. She seems really bright, and it might be in your best interests to get her tested in a few years. It will be a challenge to us to keep her from getting bored. Here's a list of things you'll need to get. If you're uncomfortable with it, get her mother to give us a call and we'll go over what you guys can expect. Have a good night. Bye,Ari.\"\n\nShe ruffled her hair and walked away humming. The woman must have really loved her job. H got his baby settled into her seat and asked her what she'd like for dinner. \"Chicken,\" she declared.\n\nHe got a few of the toys Bev had bought and put her where he could see her while he grilled. He noted the way she was especially fond of a stuffed dog and he wondered how she would like a real one. She did have a birthday coming up.\n\nThe big girls got home and Ari ran to them laughing. Bev scooped her up and placed her on her hip like she'd been doing it since the child was born. She was trying her best to tell them she was going to 'school' now, with friends and a nice lady named Ms. Rose. He kissed Bev, and Marsha looked so lost he kissed her on the cheek. \"Get changed, girls. Ari and I made dinner and it will be ready in ten minutes.\"\n\nAri followed them into the house, singing and laughing as she tried to hold both hands at the same time. Ten minutes later, they reappeared, all changed into shorts and tees, even Ari.\n\nThe picnic table was quickly set, the tea and lemonade poured, the chicken plated, the veggies arranged on a large platter. Ari had just gotten back from Bible School at a local church the week before, and she grabbed his hand. \"Grace!\" she said, so, they all held hands while he thanked God for the food and his girls. That was enough for Ari, and she called out \"Amen!\" as she pointed to the roasted carrots. Bev helped her with her plate, chopping everything into small pieces.\n\nThat night after a ritual of baths, stories, and the rocker, Bev snuggled to him. She seemed to want to bring something up but didn't seem to know how. \"Bev! We promised to be honest with each other. If something bothers or concerns you, you have to share.\"\n\n'Why did we quit going to church?\"\n\n\"Short answer? We got too busy, and too lazy. Why? What brought that on?\"\n\n\"Ari, when she insisted we say grace. We need to find a church. It will look good when we have Social Services around investigating us.\"\n\n\"I refuse to go to a house of worship just to keep up appearances because I'd be afraid the roof would fall in. I agree it would probably be good for both of the girls, but it would also be good for us. We could get involved in activities for people our age and get a new circle of friends. It could end up being a new support group for us. Let's talk it over with the girls before the weekend and get their thoughts.\"\n\nThat apparently made her happy, because she shimmied around a bit and he felt bare bottom up against a suddenly very interested part of his body. \"Lock the door,\" she whispered as her top flew across the room.\n\nThey woke to Ari pounding on the door, upset that she couldn't get in. He dove for the bathroom while Bev slipped into her robe and opened the door. Ari was crying but soon settled down as Bev cuddled her. \"No more locked doors,\" she told him the next night. \"If we need time alone, we'll make sure the door is open when we're done. Got it?\"\n\nThey fell into a routine the next few weeks. Ari never missed a day of waking them up, diving on the bed for kisses and hugs while she chattered happily about what she was going to do at school. Marsha had been taking makeup lessons from Bev, and she'd get ready for work while they entertained Ari. In her professional dress with proper makeup, she looked a lot older than eighteen. Dave wasn't happy about that. Bev would laugh.\n\n\"Everybody knows she's the boss's daughter. There may be some interest, I would be disappointed if there wasn't, as pretty as she is, but it's a professional environment and Jen and I watch her like a hawk. Still, she's eighteen, and I think that because of her home situation, she hasn't had very many dates. I think she'll be really popular when she does start dating. Did you ever find that shotgun?\"\n\n\"Yes, and I bought a box of buckshot.\"\n\nBev was still laughing when she went down to breakfast.\n\n...\n\nThe grandfather finally came to the house after the girls had been with them for three weeks. He came when Dave and Beverly were gone. They had taken Ari with them to the grocery store, and Marsha stayed home to fix dinner. He knocked on the door, and when she answered it, he demanded they come home. Marsha tried to reason with him, saying they wanted to remain where they were, and he got really agitated. She thought he might have been drinking. Of course, as soon as they got Ari down for the night, she told them all about it. Dave indicated he would be going over to talk to him the next day, but Beverly talked him out of it.",
        "\"Let me call Mrs. Ingalls. She'll know what to do.\"\n\nMrs. Ingalls was the family law expert Susan had recommended. A retired Judge, she went back in to private practice after retiring from the bench, taking a very limited number of cases. She never had more than three clients at a time, and was very selective on who she chose to represent. They found her to be a likable person, and Ari loved to sit on her lap and play with her long silver hair, but when it came down to it, she was tough as nails.\n\n\"In one way, it should be fairly easy to give custody of the minor to the sister. She's in a nice home and holds a steady job, has no record, no tattoos or piercings, neat, clean, and quite pretty. If you guys get involved, it might get sticky because of your recent separation. You know you can't adopt Marsha because she's of legal age. There's nothing to stop her from having her name changed to yours, or of you formally recognizing her as a daughter. On the other hand, you both have good jobs, are in decent financial shape, and the fact that you're seeing a counselor and are willing to wait a year before starting the proceedings should help a good bit. The grandfather could be a bit tricky, but it will be hard for Social Services to give him a four year old if Marsha refuses to move back. His age, his history, and his attitude will weigh against him.\n\n\"Try not to antagonize him, allow him access to his granddaughters in a controlled situation, get him to see they would be better off with you. If he fights, well, we fight.\"\n\nBev told Mrs. Ingalls of the incident, and she promised to get Social Services to inspect their home and get the initial interviews out of the way. \"At the same time, they would revisit the grandfather, look for evidence of anything that would make the case for an unfit home. They may even be able to persuade him to let them go because of his age and health. We'll see how it goes. In the meantime, keep an eye out.\"\n\nSocial Services did come out, inspect the house and interview Beverly and Dave. They could tell that they were impressed with the house. They had scrubbed it top and bottom twice in anticipation of the visit. Ari didn't know who they were and was her normal outgoing self. They didn't have to ask to see her room because she dragged them up to see her toys and stuffed animals, chattering the whole time. Then she dragged them outside to see her shiny new swing-set and sandbox. Marsha remained calm and levelheaded as she described the atmosphere in the house as warm and loving. She sniffled a few times as she told them it felt like the first home they'd ever had.\n\nApparently, it did not go so well for the grandfather. It seemed Marsha did most of the cleaning and all the cooking while they lived with him, so they found a dirty house and a sink, counter, and table overflowing with dirty dishes and takeout containers. Mrs. Ingalls assured Beverly and Dave that their interview went very well and it was pretty much a done deal. She was right, because a month later Marsha became Ari's legal guardian. The grandfather never once came to see them, and Marsha finally took Ari, escorted by Dave, to see him. He wouldn't let them in the house, slamming the door in their faces. Ari looked sad for a few minutes before cheering up and demanding they 'snuggle' in the massively huge hammock Dave had found somewhere. It was big enough to hold Beverly, Ari, Dave, and Marsha.\n\nThey would giggle at the way they had to lie down. Dave would grab Beverly and flop backwards, and Marsha would toss them Ari as she giggled and squealed. Then Marsha would lie down beside Beverly and they would all rock gently to and fro. It usually put them all to sleep. Beverly would never forget the day Marsha asked if she could snuggle with Dave for a change. She sometimes found them asleep in the hammock, Ari nestled between them. She took pictures, and Marsha put them on Facebook with the caption \"Snuggling with our Dad\". Beverly showed it to Dave and he surprised them all by rushing out of the room. She found him crying in the backyard. He gave her a huge hug and kiss. \"Sorry. It's just something I never thought I'd see.\" He came back in and gave both girls a huge kiss.\n\n*****\n\nHe would like to say marriage counseling was a walk in the park and they only had to go a few times, but that wasn't the case.\n\nTheir counselor was a pretty shrewd woman. She had them tell her in separate sessions why they split up, and why they decided to get back together. She popped all her insights on them during the sessions. There were times when they shouted at each other, and times they cried and hugged as if they were afraid the other would disappear if they let go. She would lead them along like lambs to slaughter, then prop them back up and analyze everything when they were done.\n\nIt seems he harbored a deep resentment of her almost unilateral decision to not have children. She resented Dave for trying to bring it up every once in a while. In the end, they learned a lot of things.\n\nThe primary one was the fact that they lost sight of the marriage in pursuit of their careers. He found that while he was very proud of what she had accomplished, on many levels he resented it, especially when she started minimizing him as she climbed the ladder.\n\nShe resented the fact that while he was a very good salesman, he didn't have the burning desire to get to the top. He almost laughed at that. \"If we were both like you, the marriage would have been over long ago.\"\n\nThat set her on a crying jag but after she recovered, she understood his point. She hurt him pretty badly when she said she felt he was too passive and she felt like she wore the pants in the family. Then he realized she was right about some of her feelings. It was only after she committed the ultimate in disrespect to him that he started pushing back.\n\nSometimes they'd come back still upset and not speak much. Ari would sense their moods and jump back and forth, snuggling until they were both in better moods. Marsha would hover, understandably worried about what would happen to them, until they pulled her onto our laps and Bev would love on her.\n\nHe would never forget the day he went to fetch Ari from daycare and she came running to him. \"Daddy!,\" she yelled as he picked her up. She'd heard all the other kids calling their parents Mom and Dad and decided that was the way it was supposed to go. He told her, after he got his emotions in check, that if he was Daddy, then Beverly was Mommy. She seemed to understand that logic because she jumped down from the truck and ran to her, carrying a cut out dinosaur with little red puffballs glued along it's spine.\n\n\"Mommy! Look what I made for you!\"\n\nDave honestly thought Beverly might faint. Then the tears came. Marsha and Dave watched for a minute and she turned to him. \"Well done, Dad.\"\n\nThen his tears started leaking. The dinosaur hung in a shadowbox on Beverly's office wall until she retired.\n\n*****\n\nShe stood in the hallway of their house, waiting. Marsha stood by her side, holding her hand. It had been almost two years since Dave and Beverly started on the long road back to each other. This was the last step on the path. She heard the music start and Marsha held the door for her.\n\nShe was still thinking about the conversation they'd held while they were waiting. \"Thanks, Mom. Thank you and Dad for saving us, giving us a loving home, and believing in me. I can't believe I'm going to be a junior in college next year! I promise to do well. After all, I have a heck of a role model to emulate.\"\n\nBeverly hugged her hard, trying not to ruin her makeup by crying. \"It's me who should be thanking you. I had just about lost everything. My career was going up in flames, my husband had left me, and I had nothing left. Then I came to that cookout to make one more effort to get my life back. I not only got my husband back, I got a family as a bonus. Have I told you how much I love you and Ari, and how proud I am of you?\"\n\nMarsha laughed. \"Every day. It'll probably take another thirty or forty years before I get tired of it. Now, straighten that face! It's almost time.\"\n\nShe walked through the door to the cheers and claps of their friends. The reverend of the Episcopalian church they had been attending for the last fourteen months was standing at the bower, smiling. Their friends from the age appropriate group they had joined were there. Jen had even flown in with her husband and five month old son. Sol stood beside Dave, while Susan, dressed to match Marsha and Arianna, took her place on the opposite side from Marsha.\n\nSix year old (six and a half!) year old Ari was standing there with a basket of rose petals, flanked by their (translate, her) boxers, Sonny and Sugar. Each had a little pillow strapped on their back. They stood for a minute, enjoying the scene before Dave slowly walked down the red carpet, preceded by Ari spreading rose petals. The dogs were in their usual positions, one step behind her.\n\nThey joined hands in front of the reverend and recited their vows again. She got a big surprise when Ari handed Dave her ring. Dave had taken it to the jeweler's for cleaning, and had a large diamond encrusted band wrapped around it. She let him slip it on her finger, glancing at the mother's ring the girls had gotten her for her last birthday, the two different stones twinkling in the twilight. She let a tear slip down her cheek when the Reverend asked who gave this woman away, and Sol answered, \"Their daughters do.\"\n\n*****\n\nIt was the third most important day in his life. The first was marrying Beverly the first time. The second was the day Ari's adoption papers were signed and she got to carry their last name. Marsha broke down when he told her she would have to take their last name, too, giving her the papers. All she had to do was file them and the Waxman family was complete.\n\nHe grinned as he slipped the expensive band on her finger. It symbolized the old with the original setting, and a new beginning with the upgrade. He already had the one for their thirtieth anniversary in mind.\n\nIf he thought he had a surprise for her, she one-upped him in a spectacular way. After the vows and the kiss, she called for everyone's attention.\n\n\"Thank you all for coming, old friends and new. There is one more thing to celebrate tonight.\" She turned and took both his hands, and said the words he never in his life expected to hear.\n\n\"Honey, you know I had a doctor's appointment yesterday. It was to confirm something I already knew in my heart. I'm pregnant, honey, eight weeks along. I have no idea how it happened but I consider it a gift from God. Oh, and it's a girl.\"\n\nPeople started clapping and cheering, and he reacted in a way they never suspected.\n\nHe fainted.\n\n*****\n\nBeverly and Dave sat and watched Ari cross the stage to receive her high school diploma, just as they had watched Marsha do the same for her college degree ten years earlier. Ari had graduated with honors and would be following Marsha to the same university. Dave grinned at Marsha while he held his four year old grandson on his lap. She grinned back while she held his twin sister.\n\nIf he though Beverly was a terrific mother, it paled to how she doted on the grandchildren. Marsha had inherited her grandfather's house when he passed, and she had remodeled it to suit her and her then new husband. It made it really easy to see the grandkids, as they had a gravel path that led from backdoor to backdoor. He had already subdivided two acres in between them to build Ari a home when it came time. He'd also bought an empty lot next door for the terror that was squirming on the seat between Bev and himself. Their daughter, Haley, must have been a tornado or hurricane in her past life, judging from the way she lived her life. Always in motion, always on the way to somewhere else. About the only one who could calm her was Ari, who she had followed around as soon as she could walk. The thought of her hitting puberty scared him to death. Maybe it was time to buy a new box of buckshot.\n\nBeverly retired at fifty, jumping off the corporate plane with a silver parachute, sporting gold overlay. She had saved the company, and in a move that she said was inspired by Dave, led it to a merger with the South Korean company that had encroached on her territory. It was a win-win for everyone, and she was considered a business whiz for brokering the deal.\n\nThe Chairman flew down to oversee the merger and talk her into taking another assignment. They were sitting in her office and he was admiring portraits of a green dragon with red ridge spine tips, and another dinosaur not as easily identified that was yellow with blue dots.\n\n\"I'm sorry, sir. I'm entering a new phase of my life that I want to enjoy to the fullest. My youngest daughter just turned eleven, my middle one is getting ready to enter college, and the oldest, well, you know...\"\n\nHe grinned ruefully. \"We missed the bus on that one. I still can't believe she went to work for the Koreans. Tell her if it doesn't work out, she and Jen will both be welcomed back with open arms.\"\n\n\"I'll pass it along, but I wouldn't hold out much hope if I were you. Jen really likes her new position as general manager at her new company, and Marsha is having a ball working with the Koreans. It's a little insulting when they trot her out to show how progressive they are for hiring American women and putting them in positions of authority, but she's proved her worth and they really are impressed. The owner has his granddaughter working as her personal assistant for the time being, hoping she will absorb her techniques and skill.\"\n\nThey both laughed. \"Well, I had to try. Good luck to you, Beverly. Send pictures of the grandchildren when you drop us a line now and then. Think about the consulting position we have on the table. You could work the projects of your choosing, for as long or as short as you want. I'd hate to think I wasted all the energy it took to train you. It might break up the boredom now and again.\"\n\n\"I promise I'll think about it, and you know you can call or email anytime for an opinion. Thank you, sir, for standing by me. It means a lot to me.\"\n\nHe seemed a bit embarrassed. \"You were worth it. Goodbye, Beverly.\"\n\nShe grabbed him up in a tight hug as he reached for her hand, dripping tears on the lapel of his expensive jacket. He patted her in that fatherly way of his before she let him go.\n\nShe knew, after a year or so, she would consult for them part-time. As long as it was short term and didn't require extended absences, she was fine with it. She really was good at what she did. She figured when the youngest grandchild started school would be about right.\n\nDave looked at Haley as she squirmed. \"Tone it down, H.H.,\" which stood for Hurricane Haley, \"it's about over.\"\n\nAs she smiled at Dave, he remembered the time he heard she was going to join the family. Bev and Dave had decided to renew their vows after their counseling and court appearances to adopt their girls as a celebration of the successful resurrection of their marriage and completion of their family. He was already almost overcome with emotions when she dropped the bomb on him. Pregnant at thirty-eight. She said she didn't know how it happened, but suspected an interaction with some cold medicine. She couldn't quite look him in the eye at times and he knew it was deliberate on her part. If she had just asked him, he would have been ecstatic, but he suspected she was afraid he'd tell her no.\n\nHe fainted dead away when he understood what she'd told him and all their family and friends. She looked completely panic-stricken when he woke up, his head cradled in her lap. She was crying and apologizing, so he shut her up the most effective way possible. He pulled her head down for a kiss that felt like it lasted a lifetime. After that, she understood that he was happy.\n\nHe worried constantly, but Bev sailed through the pregnancy like it was nothing at all, and continued working until he pitched a fit and she stopped three weeks before her due date. When Haley came into the world, he was there with Beverly. He was lucky enough to present their newest daughter to her and marveled as the tiny bundle wrapped her tiny fingers around one of his. It went straight to his heart, and would always be there.\n\nHe had the look on Bev's face when she first saw her daughter recorded, and when he felt down or stressed or just plain old, he'd pull it up and just stare. He always felt better afterwards.\n\nMarsha had Ari and was waiting with Sol and Susan, their 'grandparents'. They had added them to their brood so seamlessly, many thought they really were theirs. When they got to go into the room and hold the baby, there were enough tears to fill a bathtub, but no one was sad. Over the months, everyone saw the bond developing between Ari and Haley. Ari was so small when they got her that she had only memories of them, and for years she really thought she was theirs by blood. She was devastated when she found out the truth, but Bev comforted her. \"You may not be family by blood, honey, but you're family by love. We got to choose to love you. I, for one, was hooked the very first time I saw you and you played with my diamond necklace. As far as you're concerned, as far as we're concerned, you are our blood daughter. Nothing will ever shake the love we have for you. Understand? Nothing. Hold your head high and be sure when you hear your name, Arianna Marie Waxman, that it was given by two parents who love you very much.\"\n\nHe lasted a few more years after Beverly retired before he followed her. Sol's daughter was changing and he didn't like the direction she was taking. Sol's death had hit her very hard and she was rudderless for a few months. She finally got over it when Bev showed up and forced her to go to lunch, telling her their story. \"When was the last time you surprised your husband with a night of passion? When was the last time you even had dinner with him. This...\" she waved her hand around the office, \"is not worth your husband. I almost lost mine and I'll never forget the feeling of pain, or the struggle it took to get him back. Think long and hard, Amanda. You think Sol would want this? Hell no, he wouldn't! He'd tell you to sell the damn company before you lost your family. Think back, he ran the company for decades and hardly ever missed dinner with his family or any of your important moments growing up. If he could do it, you can do it.\"\n\nIt must have worked because she hired enough staff and trained them well enough to delegate a lot of the day-to-day operations to them. When she was certain they could handle it, she surprised her husband with a second honeymoon at a tropical location. They made love every day, sometimes more than once, and she shocked the hell out of him by telling him she'd gone off birth control when she started planning their escape and that she hoped she was pregnant. Their first son was born almost exactly nine months later.\n\nOnce Beverly and Dave were free, they started on their bucket list that contained all the things they said they wanted to do or try when they had the time. They bought a motorized RV and spent a lot of the summers tooling around the U.S., usually with a grandchild or two along for the ride. Sometimes Haley came along, but she preferred to stay with her older sisters.\n\nThen they shocked them all by spending a month on the island of Crete. Bev had seen it on a travelogue and wanted to see it in person from that day forward. They came home for a month, then spent a month in Portugal. The next trip out was Spain, followed by Italy and France. After taking stock, they decided they liked Crete best, and bought a nice four bedroom house on ten acres. It came with grapevines, citrus trees, even an olive tree or two. It also had a really nice pool. They spent about half the year there. Marsha spent her two week vacation there with her husband and kids, and Ari stayed a month with four of her friends when she graduated from college. Haley was making noises about getting the house for her and six of her friends when she graduated high school. Dave wasn't not too crazy about that idea.",
        "Bev learned some of the local language and one of her favorite phrases meant, \"Let's get into the pool naked and fool around.\" At fifty-six, Beverly could still rock a bikini. When she bothered to wear one."
    ],
    "authorname": "qhml1",
    "tags": [
        "loving wife",
        "wife",
        "husband"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/let-go-6"
}