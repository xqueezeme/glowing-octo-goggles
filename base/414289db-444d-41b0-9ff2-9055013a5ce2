{
    "title": "The Torch Singer Ch. 02",
    "pages": [
        "Okay, my babies, here is Chapter 2. We're picking up the tempo now. Hope you are enjoying it.\n\nXO,\n\nL\n\n*****\n\nSECOND MOVEMENT \n\n[A section of a musical composition in which the progression of the piece continues to unfold...]\n\nJake paced around his swank hotel room, unable to sit still. It was easier when Frankie was just a distant fantasy - an idealized prototype of the woman he always wanted. Perfect and unattainable. That's what he was used to.\n\nBut now, they were in the same city. And in less than an hour, he was going to be in the same room with her. He was going to actually talk with her for the first time in over ten years. He ran his fingers through his hair, unknowingly disheveling it quite fashionably. \n\nMint from his toothpaste made the inside of his mouth tingle. Through the leather soles of his boots and all the way through his fine-gauge knit socks, he could perceive the knap of the rug as he walked. The cool cotton of his untucked navy dress shirt felt smooth on his skin - like his senses were overly-sharp. Pressing his palm to his hard, flat stomach, Jake wondered if he should try to eat something, and then immediately dismissed the idea. He was too nervous. \n\nHe allowed his mind to wander back to the last time he'd seen her in person. Her graduation from college, three years ago. No one he knew had seen him, he'd made sure of that. But he had to be there - he had to see her accept her diploma. Arranging the scholarship had not been easy - but it was something he could do for her. After his lawyer set up the endowment, it was a simple matter of establishing eligibility criteria that fit Frankie's situation - a female voice major, from the Massachusetts region, who had raw talent and great financial need. \n\nHe still remembered his lawyer's comical expression when Jake decided to give four-year grants not only to Frankie but also to three other need-based music students who fit the criteria. Hell, it was a good idea and he was sure that it would be a good thing to do. A little nod to karma.\n\nHe remembered the bright sunshine of that June day in Boston. He sat far in the back of the audience, hiding behind Aviator sunglasses and a Red Sox baseball cap. Frankie practically glided when she walked. The sun turned her silky hair to white gold. The bell-sleeved gowns worn by all of the graduates seemed to billow mythically on her as she received her diploma and flipped the tassel to the other side of her cap. She glanced back over the crowd, a dazzling smile on her face, until she picked out her family. Frankie's brothers were making ridiculous hooting sounds, and she laughed, tipping her head back, one graceful hand holding the cap in place. Jake felt dizzy just watching her. \n\nHow he'd wished that she'd remembered his letter and had chosen him - that she'd called him after turning eighteen, as he'd hoped. But Frankie had moved on, and he respected that. It didn't mean that he stopped loving her. He promised to be there for her, so he was - whether she knew it or not. He'd have happily given her more than money, if she'd let him.\n\nJake was jerked back to the present when his phone chirped. His car was downstairs. He snatched up his smart, pinstriped jacket and shrugged into it, surveilling himself in the mirror one last time. He felt pale under his L.A. tan, but he mentally shrugged - this would have to do. His jeans were genuinely old and distressed, which made them look expensive. He didn't really know how people dressed for jazz clubs in the lower east side, but he thought this would probably allow him to blend. \n\nSlipping the key to his suite into his pocket alongside his phone, he headed to the elevators. It was all he could do to stop himself from running.\n\nThe back of the SUV was cool and quiet, and his driver was mercifully silent as they made their way across town. Lost in his memories, Jake was stunned to suddenly feel the vehicle pull to a stop outside of Strange Fruit. She was somewhere inside.\n\nAs the driver jumped out to walk around and open his door, Jake practiced his deep breathing trick. He had to calm down. She was a human being, after all, like everyone else. Maybe she'd be pleased to see him. His manners automatically kicked in, and he thanked his driver politely as he exited. The door to the club was discreet, and the sign was barely noticeable - as if it was an old time speakeasy. \n\nThe doorman straightened slightly when he entered, seeing the unmistakable signs of an affluent customer, but Jake never noticed. An attractive young woman with gorgeous coffee-colored skin, a mass of curls and startlingly pale amber eyes flirted with him lightly as she led him to a prime table toward the center of the room. Jake gently asked if he could sit a bit further back from the tiny stage, and without skipping a beat, she pushed back the seat she'd been holding for him, and led him a few tables back. \n\nWith a practiced air, she let her arm rest against the back of his seat as she leaned down for his drink order. He could smell her patchouli-based cologne. Jake ordered a single malt and a bottle of water, handing over a platinum card as he asked her to keep an open tab.\n\nWhen the waitress had left, he glanced down at his watch. It was 8:55. He only had to wait five more minutes. Jake suppressed an impatient sigh and adjusted his posture, pushing the small shaded candle on his table a bit further away so it didn't shine so directly in his line of sight. He decided to kill time thinking about what he would say to her. \n\n'Hey, there, Frankie. Long time no see...' Well shit, that was just god-awful. \n\n'I bet you're wondering why I'm here...' Hell no.\n\n'I can see those Billie Holliday records paid off...' Not the worst attempt, but still pitiful. \n\n'You look just the way I always imagined.' JESUS!! Stalk much? No way. \n\nJake shook his head a bit, as if trying to clear it. He ran his fingers through his hair again. He really had to get a grip. The cute waitress brought him his Scotch and water. He smiled up at her gratefully. \n\nWithout thinking about it he asked: \"Should I go ahead and order another one before the show starts?\" The only thing betraying the woman's thoughts was a quickly raised eyebrow, but she recovered immediately and gave him a smooth, professional smile.\n\n\"Good idea. We don't like to create any distractions when my girl is singing. I'll get that for you right away.\" She winked at Jake before she sashayed back toward the bar. The rest of the tables were rapidly filling up, and the room seemed to be almost humming with anticipation. \n\nJake allowed the whiskey to coat his tongue, letting the burn dissipate, before he took a serious sip. The heat spread down his throat and hit his anxious stomach like a fist. It felt good. Alcohol didn't usually have much of an effect on him, and he rarely drank very much. But it wouldn't do to lose control tonight. Jake set down the Scotch and picked up the glass of water, knocking back half in one go.\n\nHis phone vibrated in his pocket. Frowning, he pulled it out and read the text. It was from Danny.\n\n\"ARE YOU SEEING HER TONIGHT?\"\n\nJake typed back a simple \"Y. AM AT THE CLUB NOW.\"\n\n\"LET ME KNOW WHAT YOU THINK ASAP. SEE IF YOU CAN GET HER TO COME FOR A TEST.\"\n\nJake laughed a little at the director's excitement. They'd been over this many times already. \n\n\"WE ALREADY DISCUSSED THIS. DON'T WORRY. I AM ON IT. GOTTA GO NOW> SHOW STARTING... TTYL\"\n\nJake put his phone on airplane mode so he would not be disturbed further. As he slipped the phone back in his jacket pocket, the saucy waitress returned with his second drink.\n\nLeaning close to his ear, she said: \"This one is on the house, Mr. Garner. We're big fans of your work.\" Jake flushed a little, and leaned back to look at her. She smiled, and it had a slightly deferential look.\n\nDammit. The credit card. 'What an idiot I am.' He thought. He still wasn't used to being recognized, so he never expected it. But in a music club - well, he should have thought more clearly. If he hadn't been so distracted...\n\n\"Thank you so much. That is very nice of you.\" He managed to say back. He could see she was noting his embarrassment. He wondered what she was thinking. \n\n\"My pleasure. Let me know if I can get you anything else.\" She tilted her head to the side playfully, and winked at him yet again, this time more exaggeratedly. \n\nSomehow, he suddenly knew she was just teasing - though he couldn't say why. Jake laughed, and felt himself relax for the first time all night. She grinned and laughed with him, seemingly pleased and surprised that he was in on the joke. \n\n\"What's your name?\" he asked her. Just like that, she seemed to drop the flirty waitress fa\u00e7ade and smiled at him like herself. This smile was genuine and full of wit and confidence.\n\n\"I'm Shari. It's very nice to meet you. I better go - they're about to come out now. Enjoy the show, Mr. Garner.\" She gave his shoulder a friendly little pat before walking away. \n\nJust then, the house lights slowly went down, and the audience - many of whom seemed to be regulars - began to applaud and whistle. The band members came out and bowed elegantly as they took their places. They wore white dinner jackets and black bow ties. In the grainy light of the white spot, against the dark velvet curtain behind them, the retro 1940s authenticity was dramatic. The last man to come out was the piano player, who was apparently also the band leader. The noise from the audience escalated as he appeared, and he waved to a few people as he took a bow, and then held his hands out for the rest of the band. He sat and allowed the applause to die down for a moment. Leaning close to the mic mounted on his baby grand, he said a very short \"thank you\". The room went still, and the white spot on the stage dimmed slowly as he intoned:\n\n\"Ladies and gentlemen, it is my pleasure to present Miss Frankie Rose.\" The stage went black. The only light in the club came from the flickering shaded candles on each table. \n\nJake took another drink from his scotch glass, and closed his eyes as the heat exploded down his throat. 'Here we go...' he thought.\n\n***\n\nFrankie waited for the spot to go dark, and she stepped silently into place in front of the microphone stand. The tiny piece of glow-in-the-dark tape on the floor guided her into position. \n\nShe breathed out silently, then inhaled, dropping her head forward so her hair fell in front of the left side of her face like a silky curtain. The baby blue spot came on suddenly, silently, and all at once she was illuminated in a single column of light. Frankie could hear a few gasps in the crowd - many of the new comers did that. She loved hearing that, but maintained her poker face. \n\n\"Good morning heartache, you old gloomy sight.\n\nGood morning heartache, thought we said goodbye last night.\"\n\nHarry on the sax blew a melancholy note. Frankie raised her head\n\n\"I turned and tossed, until it seemed you had gone...\n\nBut here you are, with the dawn.\" She held out one gloved hand in a helpless gesture.\n\nThe white spot came back up and the entire band joined in. The crowd cheered again but quickly simmered down. Frankie slid one hand up the microphone stand, and she began to sway her hips from side to side in time with the beat.\n\n\"Wish I'd forget you, but you're here to stay.\n\nIt seems I met you, when my love went away.\n\nNow each day I start by saying to you:\n\nGood morning heartache, what's new?\"\n\nAs the band played the bridge, Frankie looked out into the darkened room, aglow with dozens of tiny candles. Her eyes automatically sought out the phantom who haunted her dreams day and night. Maybe it was the excitable mood she was in, and maybe it was a trick of the darkness, but tonight she could see him more clearly than ever before. \n\nHis face was in shadow. It was always in shadow. But tonight she could perceive the line of his shoulders, the way his muscular arms strained the fabric of his jacket, the way the flickering light created blue highlights in his luxuriant hair. Though she couldn't see his eyes, she could feel his gaze on her like a caress. It was like always, but also, like never before. \n\nA strange tingling spread across her scalp and moved down her neck. She'd read about this once - it was called \"autonomous sensory meridian response\" - and it created a sense of euphoria. Frankie liked it. She felt alive and really awake.\n\n\"Stop haunting me now...\" She ran her hands down the sides of her waist and over the curve of her hips.\n\n\"Can't shake you, no how.\" She waved one hand in front of her face, as if trying to brush something away in slow motion.\n\n\"Just leave me alone.\n\nI've got those Monday blues, straight through Sunday blues...\" Frankie slid one hand down the front of her throat, and all the way down the deep v-neck of her dress. \n\nHer phantom Jake leaned forward slightly, his body seemed tense. Funny, this never happened before. She was really getting good at the fantasy mode, she thought. \n\n\"Good morning heartache, here we go again.\n\nGood morning heartache, you're the one who knew me when.\n\nMight as well get used to you... hanging around.\n\nGood morning heartache, sit down.\" Frankie swept her open palm to the right, as if inviting heartache to actually sit.\n\nThis was the point when the band did a little musical interlude. Frankie glanced over at Chance, giving him a crooked grin. She was still on display so even that glance was choreographed. \n\nShe allowed the music to wash over her, closing her eyes and letting her body undulate slowly, hypnotically, as the crescendo built.\n\nOpening her eyes again, a rueful expression on her face, she looked out to her phantom. It was nearly time for her cue. She began to act a little, an anguished frown appeared. Like always, a tiny glimmer of tears showed up of their own accord. This song really got to her.\n\n\"Stop haunting me now!\n\nCan't shake you, no how...\n\nJust leave me alone.\n\nI've got those Monday blues, straight through Sunday blues.\" Frankie shook her head as if about to burst into tears.\n\n\"Good morning heartache, here we go again.\n\nGood morning heartache, you're the one who knew me when.\n\nMight as well get used to you hanging around...\"\n\nThe band paused and Frankie deliberately came in half a beat late to create tension. She wrapped her long arms around her body, as if she was cold.\n\n\"Good morning heartache...\" She drew out the \"ache\" for eight beats. A tear slid down her cheek, and sparkled like a diamond under the lights. She caught her breathe and audibly sighed. The audience was breathless. There wasn't a sound in the room. Frankie's heart pounded in her ears. She allowed her arms to drop limply to her sides, as if defeated.\n\n\"Sit down...\" \n\nAfter holding \"down\" for another eight beats, the band came back in with the big climactic finish. The audience was on its feet and roaring before the music had stopped. \n\nFrankie laughed happily, even though a few tears continued to fall down her face. The standing ovation lasted a while. She bowed elegantly. Chance stood up with a flourish and handed her a large white handkerchief so she could dry her eyes (all choreographed).\n\nFrankie looked out across the crowd, her thanks were drowned out by the noise. Suddenly, she froze. Unless she was crazy, her phantom was not a phantom. She stared across the crowded room at none other than Jake Garner. In the flesh. He was here. He was standing up. He was clapping. He was looking straight into her eyes. \n\nFrankie dropped the handkerchief, and Chance swooped to pick it up. She leaned down and whispered fervently: \n\n\"Please, Chance - I need a few minutes. Can you do an instrumental?\"\n\nBased on the look on her face, Chance knew better than to question this. He was concerned, though, because he'd never seen Frankie rattled in the entire time he'd known her.\n\n\"You okay, Princess?\" He asked, his hand on her gloved elbow. She winced a little at the unfortunate endearment, but it made her laugh. \n\n\"I'm fine. Just have to go confront an old ghost.\" They both thanked the crowd, and Frankie stepped back from the stage as Chance took the mic. \n\n\"How was that for an opener, huh?\" The crowd hooted and clapped a bit again. Chance continued: \"Do we have any Duke Ellington fans in the house tonight?\" More cheering. \n\nHe moved back to the piano. \"Good, then you're gonna love this...\" He counted off and they kicked off \"In a sentimental mood\". Harry moved to the front of the stage, his sax sounding sweetly nostalgic. \n\nAs Frankie tried to unobtrusively make her way backstage, she paused to look over her shoulder toward Jake. A tiny thrill ran through her as she saw his eyes fixed on her. Not knowing how to read his look, she smiled nervously, one eyebrow raised. He smiled back, but it was still an enigmatic smile - a smile she didn't remember. After a tiny hesitation, she made a beckoning gesture with her hand. He rose swiftly and quietly followed. \n\nBy the time Jake got behind the stage and curtain, and found himself in the corridor that snaked back to the dressing rooms, he saw Frankie some yards away, turning left and disappearing through a doorway. Hesitating for only a second, he mentally chastised himself for admiring - a tad too much - the view of her retreating figure. Running his hand nervously through his hair, he shot down the hall to join her.\n\nWhen Jake walked into the small room, Frankie was standing with her back to her dressing table, facing him. He stepped just inside the door and stopped. They were barely five feet from each other, but it seemed like an interminable distance. He wondered whether he should shut the door. The music being played onstage was audible here, but not loud. \n\nThey stood opposite one another for a lingering moment, their eyes locked - but both were guarded. Frankie's deep red lips curled up at the corners in a playful half smile.\n\nShe said, in a theatrically husky voice: \"Of all the gin joints in all the towns in all the world... you walk into mine.\"\n\nThey both laughed, and there was relief in it. \n\nJake tilted his head slightly, and smiled a slow, melancholy smile. \"Hey Frankie Rose.\"\n\nUnshed tears shimmered in her eyes. \"Hey Jake.\"\n\nHe pointed back toward the stage, shaking his head a little. \"Christ, Frankie, that performance was... it was simply amazing. You. Are. Amazing.\"\n\nShe had trouble swallowing. How many times had she fantasized about this moment? But words failed her. \"Thanks.\" Her voice was just above a husky whisper. She cleared her throat in a remarkably lady-like way. \"Coming from you, that really means something.\" An errant tear ran down her cheek, and she laughed awkwardly as she swiped it away.\n\nJake took a large step toward her. Nervous, she straightened and their eyes locked. After a moment, he jammed a hand into his pocket and drew out a simple white handkerchief, reaching it toward her. Frankie didn't drop her gaze from his eyes, and didn't move for a few seconds, but then she moved a step closer and took the proffered bit of fine linen.\n\nShe only broke eye contact when she used it to dry her face. \"You're not here by accident, are you Jake?\" She asked softly. She groaned inwardly at how wistful that line sounded in her own ears. \n\n\"No, no - I'm not... I - GOD, Frankie! It's so good to see you! You have no idea...\"\n\nShe looked up at his hand as it raked through his gorgeous hair. \"Don't I?\" She asked softly. Her eyes traversed downward from his hair, to his eyes, and finally locked onto to his beautifully sculpted mouth.\n\nAs if sleepwalking, she spoke aloud without really meaning to. \"I bet I imagined this moment about ten thousand times over the last ten years...\" \n\nHer words rang in his ears. Next to her singing voice, Jake thought they were the most beautiful thing he'd ever heard. The direction of her gaze was not lost on him. Jake's body was on fire. He was clenching and unclenching his fists, trying to stop himself from grabbing her. His mind was reeling with his desire to touch her, to crush those velvety red lips with his own. ",
        "\"You did? You thought about this?\" He asked softly, his baritone voice like dark honey to her ears. \n\nShe nodded mutely, and looked back into his eyes. She noted that they seemed very dark blue and his pupils seemed large. He daringly continued: \"So when you imagined this, how did it end?\" He asked almost breathlessly, losing himself in her huge turquoise eyes. He saw a sudden flush rise in her cheeks, and her breathing quickened. \n\n\"Can't you guess?\" She breathed. Jake snapped, amazed at himself that it took so long. He took hold of her slender arms and yanked her to him, swooping down toward her waiting mouth. Frankie moaned aloud as his lips crushed hers. It felt as if she'd gone up in flames, but there was no pain - only arousal. Frankie felt a flood of wetness in her lace panties. \n\nHe enfolded her in his arms and pressed their bodies together as the kiss deepened, but grew more gentle. The scent of gardenia and lavender arose from her skin. He could feel everything at once - the trembling taut, soft skin of her back and shoulders covered by tiny goosebumps, the luxury of her satin gown, the press of her erect nipples against his chest. She strained into him as violently as he to her, and her mouth opened willingly as his insistent tongue pushed inside. Now it was Jake who moaned. He reached up to cradle her head with one hand, his fingers gliding through her impossibly beautiful hair. The other hand moved down her spine, molding her body to his. He was already partially erect and knew she could probably feel it pressing into her. \n\nOverwhelmed, she broke the kiss and pressed her face to his chest. Frankie was tall and wearing heels, but he was still much taller. He held her close, planting multiple tender kisses on the crown of her head, murmuring her name over and over.\n\n\"God, Jake.\" She spoke into his expensive shirt. \"Ten years... ten years...\" She pulled back and looked up at him, a tiny frown forming between her winged eyebrows. \n\nNo longer whispering, she demanded: \"I've been waiting ten years, Jake. What took you so fucking long?!\" Though she pretended to be angry, it wasn't really possible to feel anything other than joy in his presence. He laughed, incredulous, at her profane outburst. Emotions flitted across his face: surprise, happiness, confusion. \n\n\"Me, you ask?!\" He protested, but still couldn't resist running the pad of his thumb under her trembling lower lip to remove the last-remaining smudge of her now vanished lipstick.\n\n\"What about you, hey? Why didn't you try to find me after high school, like I asked?\" He was trying to scold her, but his voice only conveyed deep longing. \n\nNow it was Frankie's turn to be confused. \"What do you mean: like you asked? When? How?\"\n\n\"My letter, of course - the one I gave to Bobby...\" And just like that, they both understood. Thunderstruck, they stood a few inches apart, allowing the implications to sink in.\n\nAs they looked at one another, Frankie sadly shook her head at Jake, confirming what he only now understood. She said softly: \"I never got any letter, Jake... He must have...oh, god.\"\n\nFrankie looked upward in abject frustration. She was shaking now. \n\nJake felt a strange twisting in his gut. It was part good and part bad. The good: she didn't choose to move on - she never chose at all. All those years of doubt were swallowed up. The bad: they were swallowed up by regret - painful, frustrating regret and loss. He ached at the realization of what she must have felt. That she believed all these years he'd left without a word. The wasted time - the sleepless nights. None of it had been necessary. Fucking Bobby. Jake thought that he'd like to break his nose a second time. And then some.\n\nBut catching sight of Frankie, he saw that she was shaking with emotion. All of the pain and regret he was feeling seemed to be worse for her, because it was compounded by a sense of betrayal.\n\nShe was very quiet when she asked: \"What did your letter say, Jake?\"\n\nHe gently recounted the entire letter for her. He'd never forgotten it. Like he'd written it yesterday. She listened silently, her eyes wide. Her eyebrows shot up in recognition and her lip began to tremble when he quoted the part about his \"beautiful bright angel.\" \n\n\"Your Oscar speech...\" It wasn't a question, and yet it was.\n\n\"Yep, my Oscar speech. It was about you, Frankie. It's always been about you.\" He tucked a stray lock of her hair behind one ear, and drew her chin up to place a slow, tender kiss on her lips. She kissed him back with fervor, winding her arms around his neck. They kissed with desperation - full in the knowledge that something had been stolen from them. \n\nFrankie leaned back and looked up at him, her eyes shining. \"You loved me...\" \n\nJake countered, cupping the sides of her face: \"Oh Frankie - I LOVE you. Still. Always.\" \n\nShe burst into tears and pressed her face into his neck. Jake felt the tears running down his own face. It was almost too much. Almost.\n\n\"Don't cry, angel. I'm right here. And now we have the chance to make up for lost time, right?\"\n\nShe had no idea how beautiful she looked to him, her tears running down her pale face, her eyes flashing with passion and urgency. She gripped the front of his shirt and nearly shook him as she spoke. \n\n\"Oh my god. Oh my god. Jake - if you knew. All these years - it's been you. I sing because of you... I sing FOR you. Only for you.\" \n\nHis head tipped back, he expelled an ecstatic sigh. \"Aren't we a pair, then.\" He leaned down and kissed the tears from her face. \"You only sing for me. I only compose for you.\"\n\nFrankie pressed her forehead into Jake's chest. \"Fucking BOBBY! I'm going to murder him. Slowly.\" She wound her arms around him and pressed herself against him. \n\n\"I'll hold him down for you.\" He joked, and she laughed. \n\n\"How could he do it?\" She asked miserably. Despite the fact that Jake shared a similar sentiment, he knew how important Frankie's brothers were to her - and she to them. He found himself saying, surprisingly rather convincingly: \n\n\"Frankie, as upset as you are now, it's important to remember that this happened when you were only fourteen. I'm sure Bobby was just trying to protect you. Hell, that was his job, wasn't it? I've gotta be honest here - he wasn't wrong to try to shield you. I was much older than you...\"\n\nFrankie groaned, partly in unwilling acknowledgment and partly in refusal to grant him any mercy. She shook her head in denial for a moment, and then froze - looking up at Jake with a wild look in her eyes.\n\n\"Okay, fine - say that is all true. WHY didn't he tell me later, when I was of age? Huh?!\" \n\nJake bit his lip. He was thinking much the same thing. Yep, he'd happily hold the fucker down while she castrated him. The bastard. But a part of Jake remembered how much he loved Bobby and his boyishly thoughtless, yet generous nature. \n\n\"Although...\" Frankie began, worrying her lip with her thumb and forefinger. He found that so adorable he had to stop himself from slamming his lips against hers. She looked up at Jake, seeming more unsure of her anger than before.\n\n\"He did call me - just today as a matter of fact. He said he needed to tell me something.\" Her face softened and she sighed. \n\nJake had to remind himself that this was real. He was here, holding the woman of his every fantasy. \n\nAnd she was even better than his dreams. His cock was continuing to stiffen. He looked down at her now as a lover - and noted the heated swell of her breasts, the way the light silvered her luminous skin, the way she felt in his arms. \n\n\"Can I ask you something, beautiful?\" He purred, as he ran a hand lovingly down her cheek, her throat, and the deep v of her sexy dress. She shivered, curling into him.\n\n\"Anything...\" She sounded breathless. He wondered if she was wet. \n\nShe was. Tiny jolts of electricity were building in her pussy. She had \"ASMR\" again - tingling from her scalp, to her neck and shoulders, and on down, down to her toes.\n\n\"Why... the FUCK... are we talking about your brother at a time like this?\" His voice had now dropped a register and was essentially a growl. \n\nHe leaned down and recaptured her mouth in a masterful kiss that left her gasping. His other hand caught the firm round curve of her ass and pressed her to his hardening cock. She keened for him, winding her arms around his shoulders and jamming her glove-clad fingers through his hair. \n\nHe cursed violently and lifted her off the ground, spinning her toward the make-up table and depositing her on top. She gasped. This was too parallel to her nocturnal fantasy the night before - was it only last night?!! It was almost overwhelming.\n\nHis hands slipped inside the high slit of her gown, moving up to the lacy tops of her thigh high stockings. \"Fuck me, Frankie, you are such a sexy thing. If you'd worn these back in Massachusetts I might have risked jail, I think...\" She laughed into his mouth and slid further to the edge to make his access easier. \n\n\"I would never have turned you in...\" She whispered in his ear, and then darted the tip of her tongue inside. He moaned, and then she felt the tug and heard a ripping sound as he tore her lacy panties off. He crumped the torn, wet panties in one hand and held them to his nose, his eyes boring into hers. She sighed, heart racing, as a fierce blush suffused her cheeks. He stuffed the tattered garment into his pocket and then once again reached beneath her dress. She froze gripping his arms.\n\n\"Jake - STOP!\" Her eyes were anxious and wide in her face. His heart sank as he began to pull away from her. It must all be too much, too fast.\n\n\"I'm sorry Frankie - \"he began.\n\n\"No!\" She was laughing as she pulled him back. \"I was just going to tell you to go lock the door, you dope!\" Jake felt elated and redeemed, and fairly flew to the door, shutting and locking it. As he was about to return to her, he paused, and took a wooden chair and set it beneath the doorknob.\n\nFrankie laughed out loud - but her voice was almost immediately muffled by his mouth as he crushed her against his body once again.\n\nHe blazed a trail of kisses down the side of her neck, nipping her skin with his teeth. She groaned as her body trembled under his hands. Jake reached inside her dress, moving his strong fingers up the inside of her thigh. He could feel the heat emanating from her wet core. She could feel herself pulsating with the want of him. Brushing the knuckle of his index finger along her outer lips, he watched her face as she gasped, her eyes heavy-lidded. She was moving toward his hand, her need evident. It made him feel like a god to know that she desired him so much. \n\n\"Frankie, the woman you've become is even more beautiful - even sexier - than the dream I've been carrying around all these years.\" Her eyes focused back on his, and she expelled a breath that conveyed her excitement. He continued to tease her lightly with one finger. \n\nHe continued, his look intense: \"I wish I'd been your first...\" \n\n\"So do I!\" She exclaimed. \"I wanted it to be you. Why wasn't it you?!\" He kissed her fervently, jealous of the others who had been this close to her. A consoling thought occurred to him, and he pressed his lips to her forehead before continuing.\n\n\"It's okay, angel, because I'll be your last, if you'll let me.\" He looked into her eyes, and saw her completely pure and unguarded expression. It looked like the thing he'd been seeking most of his life. It looked like love.\n\n\"God, I want you.\" He murmured, as he pushed his finger inside her tender cleft. Her head fell back and she let forth a sound that was half moan, half scream. His mouth came down on hers, silencing the noise she was making. \n\n\"You're so wet, my baby.\" He growled as he stroked her - at first gently, and then more urgently. She clung to his shoulders, thrusting her body up to meet his motion. The climax was building inside her already - she willed it even while she was afraid of it. He marveled at how sensual she was - how responsive to his touch. It was like they'd been lovers all along. As if their bodies shared muscle memory of how to please one another. Jake knew somehow, for example, that if he pressed her clit with his thumb as he pumped his finger inside her, he could accelerate her orgasm. He pushed his tongue into her sweet mouth with the same rhythm. She was about to come apart, and that thrilled him beyond words. The idea that he could bring her such pleasure filled him with excitement, and something akin to a fierce protectiveness. Jake shivered a little to realize that he would kill for this woman. He would go to the ends of the earth. \n\n\"Will you cum for me, my Frankie?\" He whispered into her mouth. She breathed out a sound similar to yes - but it was as if she was beyond speech.\n\n\"Then do it baby, do it now.\" He commanded.\n\nFrankie screamed into his mouth as her body bucked under him. He had to hold her up or she'd have fallen off of the make-up table. Bottles and objects on its surface tumbled over as violent tremors overtook her. Jake felt her muscles contracting around his fingers, accompanied by a flood of wetness. In his head, he could hear the sound of violins. The composition was forming itself. \n\nAs she began to quiet, he leaned away to look down at her flushed, ethereally beautiful face. She was still in the throes, but seemingly now slipping into that calm pool of pleasure after the storm. He wanted to remember the expression in her eyes for the rest of his life. Cellos had begun to moan softly, accompanied by singular, drawn out cords on the piano.\n\nFrankie watched him in awe. She'd never achieved an orgasm like this before - not even close. She understood why the French called it \"the little death\" - but to her it was more like being born. In her head, a pair of female voices hummed in tight harmony, moving slowly up the scale. She could imagine this as the introduction to a song about finding true love.\n\nAs she looked adoringly into his mesmerizing ice blue eyes, he dislodged himself from inside her and slipped his index finger into his mouth. Frankie was amazed at how wet she'd made his hand, and when she heard the loud groan of pleasure he made at the taste of her, a vivid blush stained her cheeks. A base drum inside her was beating a rhythm that sounded a lot like her heartbeat.\n\n\"Jake...\" She began hesitantly. He hummed in reply, patiently waiting for her to find her courage. For some reason, she wasn't able to look at him while she struggled for the right words. \n\n\"That's never happened to me before - never like that. Never with someone else.\"\n\n\"What, my darling?\" His voice was deep and soft. He smoothed her hair back and she found herself leaning into his hand. It gave her the courage to finish the thought. \n\n\"No one has ever made me - cum - before. You are the first.\" She stammered, rather embarrassed to be making such an admission. At his sharp intake of breath, she met his eyes, and the look of wonder and pride in them was thrilling. He captured her mouth in a deep kiss. She could taste herself on his lips. It turned her on.\n\nWhen he lifted his head to look at her again, his face was fierce, like a predator. He smiled wickedly and ground out between his teeth: \"And that was just my finger...\" He took her hand in his and pressed it to his aching erection. Frankie cried out \"Oh my god!\" when she felt the rock hard thickness of him through his jeans. Her gloves were still on - so she began to tug them off. \n\nShe paused - something was amiss. The real music - the outside music from the band - it was stopped. \n\nLooking up at Jake with alarm, she said: \"The music\u2014\" Realization dawned on him then, too.\n\n\"Fuck.\" He touched her forehead with his and sighed in frustration. \"Will they come back here\u2014\" \n\nThe both jumped as a loud knock sounded on Frankie's door. It might as well have been a gunshot.\n\n\"Frankie - Hey, girl - is everything alright?\" It was Chance. Frankie was flustered and ashamed of herself for missing almost the entire first half of the show. \n\nUntangling herself from Jake, she straightened her clothes and quickly did the best she could with her hair. He likewise made an attempt at addressing his disheveled appearance. Chance knocked again, this time sounding more insistent.\n\n\"Frankie?\" A slight note of worry was in his voice.\n\nShe managed to move the chair away and unlocked the door, glancing back at Jake apologetically before opening it. Chance leaned in a little and looked her over, the lines of concern etched in his brow morphed into understanding, and finally amusement. \n\n\"Damn, woman. Whach'yall been doin' in here, huh?\" His smirk would be annoying if it wasn't so funny.\n\n\"You're not Southern, Chance, you're from New Jersey.\" She drawled. \n\nHe laughed out loud and cocked an eyebrow. Looking knowingly at Jake, he reached out a hand and stepped into the room. \"Hi there, I'm Chance. Nice to meet you.\" He actually winked at him.\n\n\"Jake. Jake Garner - it's, uh, nice to meet you, too. I loved your set.\" Jake shook his hand warmly despite his obvious embarrassment. \n\n\"Thanks, thanks, man. It's nice to meet a friend of Frankie's... Wait! Jake Garner? As in the composer?\" Chance looked at him with greater interest, and then turned his gaze on Frankie, his eyebrows reaching for his hairline. \n\nBefore Jake could reply, Frankie interrupted: \"Yes, yes - that's the one. Chance - I'm really sorry for disappearing like that. Did the rest of the set go okay?\" Her guilt was evident on her face. She was literally wringing her hands. \n\nChance was stunned at this turn of events. He didn't even know that Frankie had such a lofty friend - more than a friend, obviously. But at some level he was happy to see this very human side of her at last. \n\n\"Don't sweat it, Princess. There's a first time for everything.\" He didn't understand what he'd said, but whatever it was, Frankie's face flushed beet red, and she shot a quick look toward Jake, who tried unsuccessfully to stifle a laugh behind his hand. \n\nSince neither of them seemed prepared to say any more, he continued: \"Listen, Doll Face, we've got another fifteen minutes or so left on our break. So are you going to be ready to come back on then?\" \n\nFrankie nodded, smiling gratefully that he wasn't mad at her. To Jake, he said: \"It's a real pleasure to meet you, Jake.\" As he was about to turn away, he stopped and swung back around, saying: \"Hey! Are you the person from Vanguard Studios who came to hear us tonight?\"\n\nFrankie's head snapped up - she'd forgotten all about that. She looked slowly over at Jake, and found his eyes on her. She tilted her head to the side in silent inquiry. Jake's mouth came together in a firm line. He answered, but never took his eyes from Frankie's.\n\n\"I'm not sure how you heard about that - but as it happens, yes. I am here for Vanguard. Maybe we can all discuss this when the show is over?\" Jake didn't like the way Frankie was frowning. He knew he'd have to explain more thoroughly. \n\nChance, meanwhile, was exuberant. \"Yes, you bet. I'd be delighted. We'll come find you when we finish up. Anyhow, I'm gonna go break with the guys. See you out there, Frankie.\"\n\nAfter Chance shut the door behind him, Frankie stayed where she was. She was now staring at the floor, her mind working through something.\n\nJake went to her, and lifted her chin so she'd look at him.\n\n\"There is a story I have to share with you, Angel, about Vanguard. Yes, the studio sent me. But they did it because I told them I wanted to see you. It's a long story, but it's a good story. One that I hope has a very happy ending.\" Jake carefully gathered her against him. She let him, and her body relaxed against his. He could see she was still very confused - so much had happened so fast. His heart was pounding - he couldn't risk losing her again. Not now. ",
        "\"There's a lot we have to say to each other. But the single most important thing I have to tell you is this: I've been in love with you for more than half my life. I'm still in love with you. And I'm never...\" He pulled her closer. \"Never going to let anything separate us again. Okay?\"\n\nShe looked up at him for a moment, as the import of those works sunk in. Taking a deep breath and letting it out, the corners of her full lips slowly stretched into a smile. Standing on tip toes, she leaned up and pressed her lips to his. He groaned in relief and tightened his hold on her, deepening the kiss. \n\nWhen she gently pulled back to look at him, her face was clear and happy. She put a hand to his cheek, shook her head once, and began to speak.\n\n\"I've loved you for as long as I can remember. Whatever it was that brought you back to me - I don't even care. I'm just grateful for it. Maybe it's stupid for me to say this so soon, because you've been back in my life for less than an hour, but you can have anything you want from me. It's very simple: I'm yours. I've always been yours.\" \n\nHis heart nearly burst from his chest. He crushed her close and rained kisses on her brow, her eyelids, her cheekbones, and finally, her lips. He heard a tiny sob escape her dewy, bee-stung lips.\n\nWith his mouth against her long, silky neck, he murmured: \"Will you come back to my hotel with me tonight?\"\n\nShe purred: \"Hell yeah. Ice Princess my ASS...\"\n\nJake laughed, frowning at the strange joke. \"What?\" Shaking her head at him to dismiss it, she said: \"Nevermind... I'll tell you later.\" and pulled him in for another kiss. \n\n***\n\nLEGATO \n\n[Smoothly and connected, with no breaks in the flow and no intervening silence.]\n\nJake was back at his table, the second glass of single malt in his hand, waiting for the show to recommence. Looking at the people around him, he marveled that they could all continue on with their evenings, laughing and talking as if nothing earth shattering had just happened. Little did they know that the planets had all just realigned. \n\nFrankie had eventually kicked him out of her dressing room so she could prepare to come back on stage. He'd ducked into the Men's room to collect himself. Looking at his reflection in the mirror, he could hardly contain his sense of elation. It was as if he'd suddenly been released from prison, or had awakened from a persistent nightmare. He felt exhilarated and terrified all at the same time. \n\nHe heard the melody for a trumpet solo reverberating in his head. It was a lusty, joyful melody. It would be great for the score of the Torch Singer. \n\nJake took his phone from his pocket and turned off airplane mode. A text in reply to his last message to Dan came through. It must have been queued up for a while. It was a simple \"OK\".\n\nHe replied: \"TWO THINGS: 1) FRANKIE IS AMAZING. PERFECT. YOU WILL LOVE HER. 2) SHE AND I HAVE A PAST. ALL GOOD. VERY GOOD. BUT I MUST TELL YOU ABOUT IT WHEN I SEE YOU.\"\n\nAfter Jake hit send, his phone indicated that the message had been delivered. He saw a bubble pop up - as if Danny was writing back. Then the bubble disappeared. Reappeared. Disappeared. \n\nFinally, Dan texted: \"JUST TELL ME THIS: IS SHE OUR GIRL?\"\n\nJake laughed to himself for a little before replying. \n\n\"SHE'S MINE.\" And sent it. \n\nThen he added: \"NOT JOKING.\" He hit send again, and then finally: \n\n\"BUT I THINK WE CAN TALK WITH HER ABOUT THE PROJECT.\"\n\nDan was a long time in replying. Jake could imagine him staring at the phone and scratching his head. Finally, an \"OK\" came back. He put the phone back on airplane mode, and tucked it back inside his jacket pocket.\n\nHe was fidgety in the retro-style wooden chair, which was a tad too short for his long legs. His knees nearly brushed the underside of the small caf\u00e9 table. He could barely wait for her to sing again. \n\nJake ran the pad of his index finger along his lower lip, thinking about the taste and feel of her kisses. The lingering scent of gardenia and the flavor of honey still filled his senses. The melody in his head was evolving. It caused a strange tingling along his scalp and down his neck and shoulders. He thought to himself: 'I have to remember to look up what this phenomenon is called...' Just then, the house lights dimmed. 'Here she comes...'\n\n***\n\nIt took an enormous effort for Frankie to calm down and prepare for the set. She cleaned herself up, noting with relief that her makeup had not been very badly smudged, which was kind of a miracle, given what they'd been up to. An excited flush suffused her pale cheeks at the memory. She reapplied powder and lipstick, and tidied her hair. \n\nRecalling that Jake had shredded and pocketed her panties, she reddened further. Digging through her bag, she frowned a little to realize that she only had one extra pair, which she'd intended to wear after the show. Frankie had to decide which was more important - wearing knickers now on stage, or wearing them after the show under her little dress. Whichever way she decided - it would be more than a little risky and potentially embarrassing.\n\nSince this gown was long, even though it had a very high slit up the thigh, she decided that it would be better to go commando now, rather than later. A wicked little thrill ran down her entire body as she considered how it would soon feel to be standing in front of the audience in this state. A naughty chuckle rippled up from deep in her throat. \n\nShe felt a lightness - an exhilaration - that she'd never felt before. Was all of this real? Had the object of her lifelong fantasies suddenly appeared and said all of the things she'd wished for over a decade? Frankie forced herself to breathe slowly and deeply, so that her racing heart would settle down. She needed to focus or she'd be a mess on stage.\n\nOne thing was sure - she wasn't in the mood to sing a bunch of sad songs. Not now. Giving her appearance one last check, she dashed down the hall to tell Chance that she wanted to change the set list. She dreaded what was sure to be his smug look when she saw him alone - someone would have been blind to not see what had been going on when he burst in. And Chance was definitely not blind. She sighed - ah well - what did it matter what he said? She was too happy to care. 'Let him tease me all he wants' she thought.\n\nChance and the rest of the band turned to look at her when she pushed open the dressing room door. Frankie was taken slightly aback when she saw their expressions. Instead of being annoyed or tauntingly judgmental - which would have been well within their rights - the overt affection and happiness they showed her warmed her already overflowing heart. She stood numbly as the rest of the band filtered out, many of the guys patting her arm or her back as they left. Harry actually bestowed a brotherly kiss on her cheek and whispered \"That a girl, Baby Doll!\" as he passed by.\n\nChanced looked like nothing short of a proud Papa. He stared quietly and sagely for so long that she finally exclaimed: \"What are you grinning at?!\"\n\nShaking his head, he walked up and gently wrapped her in a light hug.\n\n\"I'm just pleased for you, sweetness. You deserve to be happy.\" \n\nFrankie tried to swallow the sudden lump in her throat and let out a breathy laugh. She blinked away the sudden tears that swam in her eyes.\n\n\"Oh shut up!\" She said playfully. His booming laugh echoed around the room.\n\nAfraid he'd just keep going on in this vein, she quickly explained what she wanted to do with the lineup. He smiled indulgently down at her and nodded his approval.\n\n\"They're going to love it. Him, especially.\" He added slyly. \n\nHer voice was low when she earnestly asked: \"You think so?\" \n\n\"Are you kidding? The dude is already in love with you - any fool could see that. But once you've serenaded him with love songs - well, shit, he doesn't stand a chance, Babe.\"\n\nHe cocked his head to the side and looked at her appraisingly. \"Jake Fucking Garner. Holy shit, Frankie. You are a dark horse, aren't you?\" \n\n\"It's a long story. One I might tell you later. But now we'd better get our butts back on stage before Ray fires us both!\"\n\n***\n\nFrankie waited behind the curtain for Chance to reintroduce her. She would walk out to her position in full view for this half of the show. She heard the applause as the band took their seats. Breathing slowly in and out, she tried to push everything out of her head except the music. She felt wonderful. She felt strong and confident. It was all she could do to stop herself from pulling the curtain aside to catch a glimpse of Jake. Everything had changed. It was like a long, cold winter had finally broken, and spring had come.\n\nChance was speaking: \"Please join me in welcoming back to the stage, the luminous, the amazing, Frankie Rose.\"\n\nShe slipped through the curtain and walked back on stage, taking her place behind the microphone stand. The crowd was noisy tonight. She smiled and looked across all of the faces before her, but only really saw one. There he was. Her Jake. Hers. \n\nHarry walked to the front with his trombone this time. He led off and the audience seemed to hold their collective breath. Chance nodded at Frankie, even though she needed no help in finding her cue.\n\n\"At last...\" The crowd began to cheer again when they recognized the tune. Frankie could see surprise register among many of the regulars.\n\n\"My love has come along.\n\nMy lonely days are over.\n\nAnd life is like a song...\"\n\nShe kept her eyes on Jake the entire time. The heat and tenderness of his attention sent a thrill through her entire body. She was in good voice - it felt wonderful to be singing such a triumphant song. It felt even better to really mean it. Frankie could not have known this, but she seemed to glow with joy. Many people - women and men alike - had happy tears in their eyes. Her song penetrated their hearts and communicated an optimism that lifted their spirits.\n\nThey knew they'd come to be entertained, but this was something else entirely. \n\nEven the rest of the band was transported. They found themselves playing with a passion they didn't often attain. \n\nWhen the song drew to a close, there was half a beat of silence. Chance looked out over the audience, surprised. The sudden roar of the crowd made them all jump. People were out of their seats. Shouts of \"brava\" could be heard. \n\nFrankie was laughing with pure happiness. It took a few minutes for the noise to die down. She looked over at Chance, who seemed fit to burst. He counted out an up-tempo beat. The band kicked it. \n\nFrankie couldn't stop smiling as she sang out:\n\n\"I fell in love with you the first time I looked into...\n\nThem, there eyes.\n\nI knew you had a certain little cute way of flirtin' with...\n\nThem, there eyes.\n\nThey make me feel so happy. \n\nMake me feel so blue.\n\nI'm fallin' loose darlin'...\n\nIn great big way for you.\n\nMy heart is jumpin' you started somethin'\n\nWith them, there eyes.\n\nYou'd better look out, little blue eyes, if you're wise.\"\n\nJake laughed out loud at her switch of color versus the original lyrics. He ran his hand through his hair, overcome by a number of happy emotions. His groin was aching with need for this amazing creature. He could feel his chest swelling with excitement and pride.\n\n\"They sparkle, they bubble.\n\nThey gonna get you in a whole lotta trouble.\n\nOh, baby - them, there eyes.\"\n\nThe rest of the set went much the same way, with the entire room pulsing with energy. It may have been the performance of a lifetime. \n\nPeople had so much fun and were so jazzed, they stayed far longer than usual that night once the show ended. Ray joined the bartenders in order to help meet the demand for cocktails. The club was still humming when Frankie and the performers emerged almost an hour later in their street clothes. They were greeted by another round of applause, and the crowd parted to invite them to the bar for a drink.\n\nJake straightened up from where he'd been leaning when she emerged from behind the curtain in an adorable blue toile print dress. Gone was all the dramatic stage makeup, and in its place was a Frankie much more like the one he used to know, natural and fresh. But somehow even more beautiful than before.\n\nHis heart seemed to skip a beat. She walked straight to him, and into his arms. It was as if they'd done this each night of their lives. He held her close, his lips pressed to her temple. Frankie snaked her arms inside his jacket, wrapping them around his waist. The noise around them seemed to retreat into the distance. She could hear him humming a tune against her hair. It reverberated in her bones, her very blood. \n\nThere it was. The music. \n\nShe sighed into his chest, relaxing her body against his. They fit together, molding to one another. She leaned back to look into his eyes. He smiled down at her, tucking a lock of hair behind her ear. Somehow, he conveyed a wealth of emotion without speaking a word. \n\nLeaning down to brush her ear with his lips, he whispered: \"Do you have any idea how brilliant you are? I didn't think it was possible to be this proud. You are a wonder. \"\n\nFrankie caught her breath, and turned so her lips met his. Their kiss was tentative at first, and then deepened. Someone bumped into them, bringing them back to the present. \n\nShe looked up at him, smiling warmly. Running a hand down the side of his face, she murmured, raising her face until her lips barely touched his, \"It's all for you.\"\n\nJake's eyes darkened. He cupped the sides of her face and looked down at her with a fierce possessiveness. \"I'll take it, then.\" He growled. \"I don't need anything else - just you. Only you, Frankie Rose.\" Jake adjusted his stance, and his lower body pressed into hers. She was aware of how aroused he was becoming, and was glad that she was now wearing panties, because without them, the rush of wetness she felt might have trickled down her thighs.\n\nShe sharply inhaled, and was about to answer in a similar manner, when suddenly they were interrupted by Chance. \n\n\"Hey, you two!\" He was nearly shouting over the noise around them. It was funny, because neither Frankie nor Jake had noticed the din before this. The bandleader draped his arms around the two of them. \n\n\"Should we sit down someplace quiet and talk?\" His excitement was evident. It made him seem younger and more boyish somehow, which tempered Frankie's irritation at the inopportune intrusion.\n\n***\n\nCRESCENDO \n\n[A gradual increase in volume and intensity, accelerating the drama of a composition.]\n\nIn an all-night diner a few blocks away, the trio sat at a small table by the windows. Frankie remembered that a waiter had just taken an order, but she couldn't recall what she'd said. She kept finding herself getting lost in a pair of magnetic, sapphire eyes. His nearness was creating a heat within her that she feared might burn her up. Her thoughts were traveling back to the encounter in her dressing room - the way he could play her body as deftly as he played the piano. \n\nForcing herself to focus on the present moment and listen to Jake's words, rather than just watching his beautiful mouth, she was stunned to finally absorb what he was saying. \n\nJake explained the project that he and Danny Burrows were undertaking. He described \"The Torch Singer\", and that he was there on behalf of the studio to search for the title character. He looked at her pointedly. Frankie's eyes went wide. She listened without interrupting, feeling as if she were in a dream and certain she'd wake at any moment. \n\nJake outlined the role of the young, beautiful singer, quickly sketching out the plotline. Frankie gasped - at last understanding that he meant to invite her to audition for the part.\n\n\"You guys want to talk to ME?\" Her voice was very husky from emotions running wild. \n\nJake described candidly how her name had been raised in the casting session. He didn't want to mislead Frankie into thinking that it had been his idea. She smiled, clapping her hands delightedly when he told her about the junior casting agent and his bootleg video. \n\n\"Why are you so happy about that?\" Jake asked, his hand moving over her shoulder affectionately.\n\n\"Because that means the idea didn't come up because of you - our history - don't you see? It was from someone objective - someone who just liked our performance...\"\n\nThe fact that she used the word \"our\" didn't escape either man's attention, and they exchanged a quick grin that Frankie missed as she searched for words.\n\n\"Don't get me wrong - I'd be incredibly grateful for a break if it came from you. I'd be happy about anything you might be willing to do for me. But this happened because -\" she faltered again as she tried to express herself.\n\n\"Because you're so fucking talented.\" Chance furnished.\n\n\"Brilliant. Not to mention incredibly beautiful.\" Jake added\n\n\"And sexy, and photogenic...\" Chance continued. \n\nFrankie was blocking her ears, her face flushed scarlet. \"Okay, okay, enough already! You're going to ruin me.\" The guys were laughing at her discomfort. \n\nChance added slyly, speaking to Jake: \"Probably good I didn't start going on about her killer body\u2014\" He was interrupted by a \"Hey!\" from both Jake and Frankie in unison. \n\nThey were all still laughing when Jake admonished Frankie that she'd have to get used to hearing praise. She groaned, hiding her face in her hands. \n\nWhen Jake asked Frankie who her representation was, she straightened up, shaking her head in disbelief. \n\n\"Are you serious? The only agent I know is the one who rented me my studio sublet!\" \n\nChance barked out a laugh and reached out to give her a fist bump.\n\n\"We'll fix that first, then.\" Jake said decisively. He began to speak of major talent agents that even Frankie had heard of. When she looked doubtful, he assured her that it was easily fixed with a phone call, and she needed to retain someone before officially responding to a request for a screen test.\n\nScreen test! Holy shit. Her head was reeling. \n\nWhen Jake asked Chance about his relationship with his agent, Leo, and whether he thought this would be something he could handle, Chance's eyebrows practically hit the ceiling.\n\n\"Wait - what? Why do I need an agent? Are you saying you're thinking about somehow involving me?\" \n\nJake smiled at him, and told him with quiet earnestness that he and his band would probably be very much involved, and that if the owner of Strange Fruit was open to it, they may be willing to consider it as a location. He went on to say that while production decisions such as locations were not within his control, if he brought Danny to the club he was sure that the director would want to use it for its authenticity.\n\nFrankie squeezed Jake's hand, her heart too full to speak. Not only had she found the long lost love of her life, it sounded as if she and some of her closest friends had a very good chance of being in a feature film, too. It was all a little too good to be true. \n\nJake was looking at her, a gentle frown of concern on his handsome face. \"Are you alright, Angel?\"\n\nShe looked bemusedly into his eyes, unsure what to say for a moment. \"I'm just trying to process all of this...\" She finally managed. \"So much has happened, so quickly.\" \n\nJust then the food arrived, and she was happy to see that someone (was it herself?) had ordered her a cheese omelet and wheat toast. She didn't think she'd have been able to force down anything else, despite the fact that her stomach felt painfully empty. \n\nChance peppered Jake with questions while they ate. \n\nFrankie was quiet as tried to settle her chaotic thoughts, but she found it difficult to concentrate sitting so close to him. She knew that he was as hyperaware of her as she was of him. As if static electricity was shooting between them. \n\nThe eroticism was intense - she knew he was observing her minutely, even when his eyes were on Chance and he was responding to something he'd asked. She could feel the heat rolling off of him. She could feel his want of her, and she somehow understood that he could feel she reciprocated. His foot slid across to press next to hers under the table. Frankie inhaled sharply, her eyelids getting heavy, her nipples hardening, her nether lips moistening with arousal. ",
        "The omelet no longer held any fascination for her. She looked down at her plate, astonished to realize she'd nearly finished it. Pushing the platter a few inches away, she shifted in her seat, feeling the pressure building inside her body. Jake glanced over at her, his eyes dark with desire. He reached across the table casually, stabbing the last bite of eggs from her plate with his own fork. She watched, enrapt, as he drew it back and into his mouth. When he made a low \"mmm\" sound, she had to bite her lip to keep from moaning. She could tell by the way he watched her that he knew what she was feeling. \n\nReaching the limit of her patience, Frankie interrupted the two men.\n\n\"Man! I'm sorry - but I'm kind of wiped out. Do you guys think we could pick this back up tomorrow?\" \n\nJake caught the cue perfectly, his phone already in his hands. \"Of course, Angel. I'll call my car and take you home.\" He flashed her a quick, private look which meant he wasn't referring to her home.\n\nJake signaled for the check, and there were a few moments of awkwardness as Chance argued with him about paying. He finally gave up when Jake pointed out that he was on an expense account from the studio. Frankie doubted that was true, but made an effort to hide her smirk.\n\nThey were finally outside, saying goodnight to Chance. He and Jake exchanged numbers so they could talk the next day. Frankie felt so keyed up, she almost feared she might fly apart. Every muscle in her body was tensed, and she had to be mindful of her breathing. \n\nA big black SUV pulled smoothly to a stop, and she almost missed Chance's attempt at a goodbye hug. Returning it quickly, Frankie glanced up to see Jake's eyes narrow and his nostrils flare slightly. Instantly she knew that he didn't like to see anyone else touch her. She gave him an \"oh please\" look as she climbed up into the vehicle. The pressure of Jake's hand in hers tightened momentarily before he turned to shake Chance's hand one last time. \n\nShe slid over to the far side of the back seat, and flipped down the little lighted makeup mirror to check out her reflection. Her eyes looked huge, pupils dilated, and she had a pink flush to her cheeks. Frankie wet her lips and snapped it shut as Jake took his seat and pulled the door shut decisively. \n\n\"Back to the Standard, Mr. Garner?\" the driver asked. Jake smiled at him and said yes. As they moved into the late night traffic, he turned to look at Frankie. Even in the darkness of the back seat, she could see the hungry look on his face. She slid a bit closer to him on the seat. He took hold of her hand, rubbing his thumb along her palm. She gasped at how erotic that seemingly innocent touch felt. \n\nJake leaned down, pressing his lips to her forehead. His voice was practically a purr as he murmured against her skin: \"I'm having trouble keeping myself under control right now, so let's be cool until we get to the hotel, or I won't be responsible for the consequences.\" He threaded his fingers through hers and squeezed, leaning back against the seat with his eyes closed. \n\nFrankie expelled a shaky breath, and leaned against his side, crossing her legs in an attempt to quell their trembling. His thumb continued to trace patterns on her palm. She let her fingers slide between his, playing along, and soon their fingers seemed to be slowly caressing one another - like a sensual dance. Neither one of them spoke or even looked down - as if they were pretending that it wasn't happening. The pads of their fingers touched briefly, Frankie's fingertips then slid down his, her nails lightly tickling the creases inside his knuckles until Jake caught hold of her hand against his, weaving his digits between hers once again. Her fingers now trapped, Frankie then began a teasing duel with his thumb. Jake made a noise like a growl in his throat, turning his head to rest his face against her hair. He inhaled appreciatively, liking the scent. She snuggled into him even further and he sighed.\n\nGlancing over furtively, she saw a definite bulge in his crotch. Without meaning to, she licked her lips. The urge to reach out and touch it was almost overwhelming. She began to disentangle her hand so she could reach across and explore it, but Jake stopped her, tightening his grip and pressing her wandering hand to the outside of his thigh. \n\n\"Don't play with fire, little thing.\" He whispered darkly. She looked inquiringly into his eyes to realize that they weren't actually closed, just very heavy-lidded. He didn't miss a trick.\n\n\"Coward.\" She whispered back, smiling up at him in the dark. \n\n\"You're really asking for it, Angel.\" The sound of his voice was deep and raw. She was so turned on by it. \n\nDriven by some perverse pleasure in teasing him, she replied devilishly, in a husky voice: \"One, make no mistake: I'm NO angel, and two: fuck yeah, I'm asking for it.\" He stiffened, and began to sit up straighter, when, louder and with false brightness, she looked around them and said: \"Oh look, we're here!\" \n\nThe SUV was pulling up along the sidewalk in front of The Standard Hotel. \n\nThe driver had exited and was walking around to open Jake's door. He still hadn't moved, and was staring at her through his abnormally thick eyelashes. His nostrils were flared again - Frankie realized she loved that - it was so hot. His jaw was set very tight and his eyes moved down her body very slowly and deliberately. It gave her a deep thrill, and she shivered unintentionally. He leaned closer to her - she thought he was going to kiss her and waited breathlessly. But then the door on his side opened, and after half a beat, he turned and descended gracefully. He turned back to Frankie, holding a hand out to help her.\n\nShe took it, and stepped down first to the running board, and then to the sidewalk. Jake hadn't stepped back enough, though, so her body brushed down against his. She had to crane her head back to look up at him, and his expression was so fiercely predatory, she gasped and felt another rush of wetness in her panties. He grinned like a panther eyeing his prey. \n\nGlancing up to thank the driver and wish him goodnight, Jake turned her toward the hotel lobby and wrapped an arm possessively around her waist, clamping her to his side as he walked. She had long legs, but had to hurry to keep up with his athletic stride. She was very aware of the heat of him against her body. \n\nThey crossed the lobby very quickly. People naturally veered out of their way, but then turned to stare at the stunning couple as they passed them. \n\nFrankie had to suppress a nervous giggle when he stabbed at the elevator call button with his free hand. The pent up violence in his manner spoke to a passion she could only imagine, and it was making her dizzy and excited. This was no sentimental, childish romance. At that moment, he could practically tear her apart with his lust, and she realized that she wanted him to do exactly that.\n\nSECOND INTERMISSION: To be continued..."
    ],
    "authorname": "lamoureuse",
    "tags": [
        "erotica",
        "romance",
        "orgasm",
        "fingering",
        "teasing",
        "true love",
        "the blues"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-torch-singer-ch-02"
}