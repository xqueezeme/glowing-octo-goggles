{
    "title": "Ingrams & Assoc 4: Beneath the Surface Ch. 03",
    "pages": [
        "We both did sleep well that night, in separate beds. \n\nNothing was said the next day, - spent mostly on the beach drinking pina coladas and trying not to get sunburnt. \n\nThat night we ate at the restaurant right near the trailer, and Megan wore a less outrageous dress. We passed the night trying different wines and when we got back she kissed me hard, murmuring, \"Down boy. I need my sleep. We are leaving tomorrow, so get your Zs. Packing first thing tomorrow.\" \n\nAnd that was that. I had no expectations, so I was fine. \n\nThe next morning, we got up, packed and were on the road by ten thirty. \n\nAnd it was off, via various back roads, to San Luis Obispo. \n\nSan Luis Obispo is a small self-contained city about three hours up from LA. It's inset from the beach - easy to get to the beach but the city itself is not on the water. It's really quite nice - a university town. Its where California Polytechnic State is, which coincidentally has a great water management program so I actually know a lot about it. Apparently its population doubles during term time. \n\nWe got rooms at a small place on the outskirts of the city. The weren't great, but they were was adequate. For once, it appeared we were somewhere Megan hadn't been before. She was as enamored of the city as I was, excited to check it out. \n\nWe spent three days there, looking around the town, and checking out bubble gum alley. That was interesting and disgusting at the same time. An alleyway where both sides where festooned with chewed up bubble gum. It stunk of chewing gum and while it was interesting - all the different colors, it was somewhere you'd want to stay well clear of the walls. I had no desire to add any chewing gum to what was already there. \n\nThe second day we took a little excursion about 45 minutes up the road to Hearst Castle. What a place! It reminded me of my apartment in tunnels. NOT. \n\nBut while the days were fun and interesting, it was the nights that were really the important part for me. \n\nBecause I got laid. No, I didn't get laid. I got waylaid. In fact, I got way laid. \n\nThough we had two adjoining rooms, after the first night we only used one. \n\nWe had gone out for dinner at a recommended Italian restaurant. I was disappointed - the servings were very small and pretentious. Megan arched her eyebrows at me, and said, \"I see you are just like every other man. No class. No understanding of sophistication, right? Meat and potatoes man. Heavy on the meat.\" \n\nShe sighed disgustedly, and in an overly dramatic fashion, dropped her fork and said, confrontationally, \"I suppose I'm going to be dragged back to the room by my hair and you'll do unspeakable things to my body, right?\" \n\nI actually laughed at that. Like I had the courage or self-confidence for that. \n\n\"I think you are safe from me,\" I said, smiling at her to let her know it was ok; I was fine with the joke. \n\n\"Oh really?\" she challenged me. \"What if its what I want? What if I did it to you?\" \n\nI looked at her, not knowing where she was going with this. \n\n\"I think I'd consider myself a lucky guy,\" I said, honestly. \"But really, all you have to do is ask. Like most guys, I think all it really takes is asking nicely.\" \n\nShe stared at me for a moment, then shook her head and took a bite, muttering, \"Unreal!\" under her breath. \n\nWe finished the meal, and then headed back to the motel. She wished me good night, and I went to my room. I was just wondering if I might risk some violin practice - it was only 9pm after all - when the adjoining door on my side opened, with a slight creak. I'd never bothered to lock it - the whole concept of adjoining rooms was a new one to me, and after messing with the doors when we'd first arrived, I hadn't relocked. I looked up and there was Megan in the doorway. \n\nIt was a classic double take. She was naked, in all her glory. And trust me, she was glorious! Her room was soft lit behind her and she was silhouetted in the doorway - her back against the frame, breasts thrust out, in side profile. She knew exactly the image she was presenting, like a classic 1970's playboy pose. \n\nI just didn't know what to say or do - I was tongue-tied. She smiled lopsidedly at me. Not a come on, just a look of slight amusement. \n\n\"OK big boy. I'm asking...\" she said, breathlessly. \n\nFor a moment I didn't react. My insecurities battled against the reality of what was being offered. The insecurities lost, badly. But while I barely knew my parents, I can tell you they didn't give birth to a fool. Well, not a total fool, anyway.  \n\nI got up - with some difficulty because I was tenting my shorts - and went towards her. \n\nI stood before her, wordless, and she just looked up at me, looking into my eyes. I looked back, seeing...I don't know. But it wasn't just lust. \n\nAnd then she pulled my hair and pulled my face down to meet hers, and we kissed. This time it wasn't hot. It wasn't all lust and passion. I don't quite know what it was, to be honest, but if I wasn't lost before this kiss, I certainly was now. There was just something about it. I understood what the French mean by    . I can't explain it but I knew I'd never be the same. \n\nMy arms went around her body, and pulled her towards me. She was warm, oh so warm. \n\nAnd we just melded together. We kissed for about ten minutes, each, increasingly hotter than the last, moving out of romance and into lust. \n\nThen she broke apart, breathing heavily and looked at me and said, \"Well, you are a quick study, that's for sure.\" \n\nThen she took my hand and led me into her room, towards the bed. As we got there, I hesitated. I was going to hate myself for doing this, but I was aware of who I was. What I was. What I looked like. I had to say something. \n\nShe felt my reticence and looked back at me, enquiringly, eyebrow raised. \n\n\"Megan...\" I said, hesitantly, \"are you sure about this? I mean, \n\n\"Thomas,\" she began, with that sly smile she always had when she was about to partake in sarcasm or some other witticism, \"When a naked woman says 'come here, big boy', you don't hesitate or ask questions. Go with the flow.\" \n\n\"No,\" I persisted, stubbornly. \"No, I have to be sure you are ok. I know what I am.\" \n\n\"And what's that?\" she said, folding her arms and sitting down on the bed, the whimsical gone. \n\n\"Well,\" I said, flustered, \"this.\" And I gestured to my face. \n\n\"Thomas, what you are is a sensitive man, who's had, frankly, a pretty shitty life, been crapped on from high places - sometimes literally - and one who needs a break. I see someone I like. Someone who saved my life. Someone I can relax with, and have a good time. Someone I have spent several really nice, fun, great days with. You are too damned hard on yourself.\" \n\nShe stood up, moved forward and put a hand on my chest and said, looking up at me, \"Thomas, I wouldn't be doing this if I didn't want to. This is not work.\" \n\nI didn't totally get her last sentence, but frankly, I was too far-gone anyway. As I looked down into her eyes, I knew what heaven was. To be desired by this angelic creature, well, it wouldn't get any better than that. \n\nAnd then she kissed me, again. And it was, if possible, even better than last time. But like last time, there was just something in it, something indefinable, which took all of my senses. \n\nWe moved to the bed and she -gently- pushed me down onto it. \n\nShe took her time undressing me. Not one piece of clothing went without her kissing me passionately between it. When I was as naked as she was, she put my hands on her breasts, looked at me and said, \"Love me, Thomas. Please.\" \n\nI didn't need to be asked twice at that point. \n\nNow, I may be inexperienced. I may not know a G spot from a Bed Knob, but as a single guy who is not dead, I've watched porn. I know what happens. I've had the one experience with the girl in Las Vegas, who looked like she had a good time - but then she was paid to. She was hardly going to look like she had a shitty time. \n\nI knew though what to do but didn't have the subtleties down. When I went at her breasts, I went a little too hard, and she had to tell me to slow down, that the nipples would still be there in the morning, to go gently, at least for now. \n\nWhen I fingered her, I remembered the lessons of the night before. \n\nEventually she, in turn, got to my dick and now she saw it in the bedroom light, she admired it, in all its erect glory. \n\n\"Nice,\" she said. My expression must have said something and she laughed gently, and said. \"What? I'm not saying 'Oh my god Thomas, I love your big fat cock, shove it in my now'?\" \n\nI just went red and she carried on, while gently encapsulating it in one fist and pumping it up and down, \"Thomas, a prick is prick is a prick. Size is nice, but it's not everything. You're plenty big enough. I've seen a few that are bigger, and plenty that are smaller. But a willingness to learn to use what you have is worth way more to a woman than a a couple of inches on a man who expects that to be enough. And something tells me, you'll be an even faster learner with this.\" \n\nAnd then she lunged forward and took it all on her mouth, slobbering on it. She licked and sucked it like a lollipop for a couple of minutes, with my breathing and heart rate zipping up like an elevator. \n\nThen she popped it out, a line of spittle drooling down from her lips to the top of my dick. It was a hugely erotic sight, making me even harder, if that was possible. \n\nShe smiled again and said, \"It's tasty too. A man with personal hygiene is something to be looked forward to. Plus, you really are on the big side. I mean it. And it's not too thick, so it won't stretch me too much. Enough to be pleasurable, not enough for me to be in pain, or gaping afterwards. And it puts anal sex on the table too, because that won't hurt so much back there.\" \n\nWith that, she gobbled it up again and I just lay back and tried to think about violins to prevent myself from exploding right there and then. \n\nI -obviously -hadn't brought condoms with me. I started to ask, in an awkward way, if I should go to the CVS we had seen. She put her finger over my lips and said \"Shhh. You are too sweet, really. Don't worry. I'm on the pill and I'm clean, and I know you are too. Don't worry about anything but our pleasure.\" \n\nWe spent almost ninety minutes exploring each other, and fucking/making love. Now I don't know how other people look at it, but I look at it that fucking is the animal act. All lust, all self-pleasure - the pleasure you give someone else is a by-product of what you want to do. Making love is eye contact, slow desire, holding each other, touches, sensual caresses, little kisses, asking what the other might like. \n\nWe did both. At times it was animal - when I took her from behind and pulled her hair (she did ask me to be a little rough) it was animal lust. And it was great. Empowering; it made me feel like a man. \n\nAnd other times, when I took her lying sideways, she twisted her body so she could look back at me, behind her, as I thrust into her eye to eye, hers open and sometime widening as I hit a particularly sensitive spot. \n\nShe was so wet, and I found I loved thrusting hard into her, then suddenly popping out and pushing my face into her pussy, smothering my face in her juices and attacking her clit with my tongue for all I was worth. I'd do that for a minute, then go back to sliding my cock in and out, varying the speed and intensity, and doing the face thing randomly. \n\nTo be entirely honest, I was experimenting. Trying to listen to her body and her reactions to what she liked. I found she preferred me to lick just up and above her clit, alternating directly on it and to the side of it. \n\nEventually I felt her building - her breathing getting more and more sharp and ragged, and her moaning getting more intense. At one point, when I had my face in her pussy, she used both hands to grind my face into it, moaning louder and louder. And then she came, clenching her thighs, thrashing her arms and giving a low, guttural growl. \n\nI looked up at her, from between her thighs, as she slowly recovered. Eventually she opened her eyes and looked down on me and said, \"Two for two Thomas! You are a catch!\" \n\nI just smiled and shifted, in order to move my body pressure on my rampaging erection. She caught the movement and smiled wider and wickeder. \n\n\"Oh yes, your turn, no question about that.\" \n\nShe gobbled up my dick for moment, then pushed me back on the bed, and squatted on top, sliding my extremely hard cock into her very wet hole. It slid in easily, and she closed her eyes, tensing her muscles in her vagina, contracting around my cock, while also gently pushing up and down. \n\nIt was the most exquisite sensation I had ever felt. With her eyes closed, she ran both hands up her body, and one hand captured a breast, kneading it and pulling at a nipple. The other roamed her body, touching her clit, up her body, to her neck, down her face and then back down her body, stopping at the other nipple then, back down again. Her breathing increased a lot, and from the look of intensity on her face, I could tell she was VERY into what she was doing. \n\nAnd that made it even sexier for me. I started thrusting up into her and she arched her back, holding herself at full extension so my pelvis had space to thrust up and down. She started grunting in time to my thrusts, and I felt myself increasing speed, my breathing matching hers... I came in now time, flooding her pussy with my sperm. I came like an express train, but even after I was done, I didn't get soft immediately. She kept riding me, taking over control of all the body motion. I swear she came again, which was a hell of a thing. The muscle spasms were really interesting to feel. \n\nShe fell forward, breathing heavily, her hair in my face. My slickly covered dick popped out of her and after a moment, she flipped up her hair and looked me in the eyes, a sweat sheen over her whole body. \n\n\"Oh yes, you'll do. You'll do very very nicely,\" she murmured. \n\nShe collapsed on me, and I rolled her over a bit, so she fell into the crook of my arm. She snuggled up and just spooned me as close as she could. \n\nWe fell asleep like that, waking up only at three am, when I woke to find myself already erect and her moving her lower body around, since my hard cock was pressing into her ass. She moved very gently, but somehow I was inserted into her throbbing and very hot and wet pussy, and that started round two. \n\nThis time it was slow, both of us half asleep. She moved gently and so did I, but the friction grew anyway and before fifteen minutes were up, I was exploding inside her again. This time my dick didn't fall out, it just slowly deflated inside her, and we drifted back to sleep that way. It was the best night of my life. I know that may not be a very high bar to clear, but on this one, I think it would have been the best night of any heterosexual man's life. \n\nMorning arrived, and I woke to the sounds of Megan pacing the room, obviously on the phone with someone. She was pacing around and as I came to, I had to place myself. I had found myself doing that a lot on this trip - waking up and wondering where I was. \n\nMegan was conversing in low tones, when she saw me with my eyes open, she put her hand over the mike of the phone and mouthed, \"Work\" at me. She was wearing just a robe and it was hanging somewhat open, offering tantalizing glimpses of bare breast and tight stomach. \n\n\"Yeah, yeah. Right now? Wondering about breakfast I would imagine...\" \n\nShe smiled at me brightly. \n\n\"We're in small place in San Luis...wait, what?\" Her eyes opened in alarm. \n\n\"Say that again? Shit. Shit shit shit...\" she hissed, eyes unfocused as she concentrated on the phone call. \n\n\"Well, that changes it up a bit. We'll get on the road. Yes. Today. I was thinking Santa Cruz next. We'll do that, stay a couple of days and get up to San Francisco. Then up to Oregon.\" \n\nThere was more murmuring. \n\n\"We'll keep it low key...Yes...Yeah, we can do that...Oh wait, really? He said he'd do that? Well, yeah, lets do that. That would be...interesting. Well, yes, that wasn't the word I was thinking of...sure. Ok. Thanks April. I'll get back to you when we hit Santa Cruz.\" \n\nShe disconnected the call and looked over at me with troubled eyes. \n\n\"Well, damn. Our little adventure in LA with Ryan Reynolds and his cohorts is going to cost us. When we made out? It's apparently on YouTube, titled 'This is how you make out', if you can believe it. The bad guys haven't seen it yet, but we have to assume they will. We need to be away from here and up the coast, so, up and at 'em.\" \n\nI nodded, all conversation about last night that was my immediate thought on waking were gone. I got out of bed and padded to the door. \n\nShe saw me and got to the door first, standing in the doorway, smiling at me seductively, her gaze slowly lowering to where I was sporting morning wood. \n\n\"But... we have to shower first, don't we?\" \n\nWe arrived in Santa Cruz later the day. The tension in the car was palpable. While we'd had a great romp in the shower - and I'd learned that even as tall as I was, I could still get into her with her standing up, leaning forward slightly, if I spread my legs wide enough to lower my groin -, leaving the room felt like venturing out with targets on our backs. We were nervous, looking around, staring at anybody who even glanced at us. It was total day and night from the atmosphere of the night before. That had been full of promise and abandon and pleasure, and now, we both remembered why we were here. People wanted to hurt us. Hell, we'd - I'd - hurt people and they would almost certainly like to hurt me back. It was a sobering thought. After the shower we'd both dried and dressed and Megan had done her best not to catch my eye. It was a little uncomfortable, to be honest, and I didn't really have the experience to know what was wrong, so I'd just given her space, made an excuse and gone back to my room to get dressed and pack. \n\nWe got in the car, top up, Megan was wearing dark glasses and she'd asked me to slouch down again - my height was too much of a give away. \n\nWe sped away and drove up the coast. Normally, the drive from San Luis Obispo to Santa Cruz would be one to savor. Top down, coastal roads on the edge of a cliff, inspiring views and nature. But we just wanted to get away as fast as possible. The traffic on the single lane road made that difficult; everyone else wanted to take it easy and enjoy the views. We just wanted to find somewhere to hide. \n\nWe drove silently, alone with our thoughts. Looking back on it, it probably wasn't the greatest idea in the world, driving along a place here there was poor phone signal, if we got into trouble. Where someone could push us off the cliff edge if they were so disposed. All I can say is that neither of us was really on our game. There was too much that had gone on, too much emotional upheaval - at least for me. \n\nI had no idea what to think or feel. I looked at Megan and I saw a confident, beautiful woman, who knew her way around the world. She had it all. And then I thought about me and what a waste of space I was. \n\nI was damaged goods. I'd been damaged ever since the accident. Physically, of course - that was obvious. But the truth is the emotional damage was just as bad. I had managed to do something right by saving her and April, but that was it. Maybe that was a lot. I didn't know. I was a guy with an empty life and now so much had happened. We were on the lam, hiding from the mob and I'd put us in a situation where they might find us. Megan was my protection and I'd screwed that up too. And for that, she'd had sex with me! It had been glorious, and I'd just gone from one incredible mess to another. You can see, my sense of self had no training in seeing the positive or crediting myself for very much. ",
        "And now I was in love. There it was. I'd said it. God knows why. She'd taken pity on me, given me a night I'd never forget. And a morning. And an education. And if I was being honest with myself, which who knows if I was, I'd have admitted that even if the bad guys got me - but not her - it would have been worth it. The last few days had validated my whole life. I felt human. I felt happy. But I couldn't trust it. I loved her, so I had to get away from her. I was nothing but bad news. Why bring it on her? \n\nI shifted uncomfortably in the seat and she glanced over at me and gave me the first smile of the trip. She leaned over and patted my hand said, \"Don't be hard on yourself. I can tell what you are thinking. None of this is your fault. And I did it because I wanted to.\" \n\nShe glanced at me, the smile was sardonic and she returned her attention to the road. \n\n\"Wait, what?\" I said, confused. \"How did you know...?\" \n\nShe laughed. \"You looked at me, and looked at...intense. Then you looked at yourself in the mirror, shrunk down in the seat a bit, pulled your hat down, then stared moodily out the window. Then you looked back at me. It doesn't take a rocket scientist to figure out your train of thought, given what I know of your background. You feel like you don't deserve me, right? That you are dangerous for me to be around? Am I close?\" \n\nWow, was she good. I just looked away, out the window. \n\nMegan crossed the road, pulled over and screeched the car to a halt, atop a small isthmus, jutting out over the ocean. \n\nShe open the door and got out and walked around the car and opened my door and grabbed my arm. \n\n\"Out, come on. Get out.\" \n\nI unfolded my frame and stood, standing next to the open door. \n\nShe kicked me in the shin, and I bent down to rub it and as I did so, she grabbed my shirt and pulled me to her and kissed me, hard. \n\n\"Now you listen here, Thomas. I kiss the people I want to kiss. I make love to the people I want to make love to. You are not dangerous Thomas. Well, you are, but not to me. I'm only here at all because of you. You play wonderful music, you are kind, attentive, you listen. You have depth. You are like a dream man. And my god, for someone who's had exactly one lover, one time, you are the fastest learner I've ever seen. You turned me inside out last night Thomas. I have experience, and we'll talk about that another time, but my god, that was just great. Sex without feeling is just that, Thomas. But what you did... well, lets just say, I plan on getting more of that. A lot more, if you are interested. I'm not going anywhere Thomas, I'm not doing this out of pity or as a thank you. I'm interested. In YOU! And for someone with my history, that's nigh on impossible. So stop with your self pity and doubt. You. Did. Not. Start. This. You. Are. Not. Responsible.\" \n\nShe said the last, poking me in the chest. \n\nWe stood there and stared at each other for a moment. It occurred to me I should say something. \n\n\"Ok then.\" \n\n\"What, that's it? I bare my soul and you just say 'Ok then'?\" \n\n\"Megan, I don't know what to say. You came into my life like a force of nature. I'm here in California, not knee deep in shit...I find myself, well, totally out of my depth. There are people chasing us who want to hurt us and I honestly don't know what to do. I don't know what to think. I don't even know what to feel. I do know that I have never felt the way I feel. Something is different. Something is exciting. But I am confused. And scared. And thrilled. And thank you for saying what you just said. It means a lot. Really \n\nShe smiled, then laughed, pulled my head down again, kissed me on the cheek and said, brightly, \"Good answer. Non-committal, but keeps all the options open. You are way too fast a study. Come on, Santa Cruz awaits!\" \n\nAnd we were back in the car. This time we had music on, and we put the top down. \n\nSanta Cruz was a disappointment, to be honest. It's a fairly dirty city. Megan had never been there before, and we ended up staying at some crappy roadside motel on the edge of town. \n\nWe had dinner at some Yelp recommended pizza place and everyone around us looked like a beach bum. \n\nWe slept together again that night, this time it was slow, quiet and with lots of long, deep kisses. I fell asleep with her arms around me, and it was nice. It was yet a new experience. For the very first time in my life, I spent an evening knowing I was going to go to bed with a woman. Without paying. Who wanted to be with me. This was a very validating thing. If getting laid by a hottie by surprise was incredible, knowing it was going to happen was pretty damned amazing also. \n\nI was up first next day and I went to get breakfast from the McDonald's at the next corner, and I dragged her out of bed, complaining, and took her down to the beach, where I played some stuff on the violin for her, while she sat eating an Egg McMuffin and throwing bits of hash browns at me. \n\nIt was very romantic, so she said. \n\nWe did end up with a crowd of early morning walkers around us, listening to my impromptu concert, until someone pulled out a phone to take video and suddenly Megan hustled us out of there. \n\nWe spent the day on the boardwalk, where there were roller coaster rides and amusements. Megan screamed appropriately on the old wooden rollercoaster, and clutched at me on some of the more modern rides. It was nice. \n\nWe spent one more night in Santa Cruz, sharing a room, but were both too tired from the day, the sun and the wine at dinner to do more than sleep. And that was nice too. Especially because, as we laid down, with my feet sticking off the bottom of the bed, Megan said, sleepily, \"It's so nice to go to sleep with someone I want to. Someone I want to wake up with.\" And then she drifted off, leaving me to ponder the meaning in the words. \n\nThe next day we headed to San Francisco, where we stayed at a small apartment in the middle of the city. \n\nSan Francisco was great. A terrific city I'd always wanted to visit, and now, here I was. And I barely got to see any of it. \n\nWe crossed the Golden Gate Bridge, I saw a tiny bit of Fisherman's Wharf, we had dinner at the House of NanKing - which was awesome by the way - and that's about it. \n\nAnd I was over the moon about it. Why? Because we spent the rest of the time in bed. Well, not just bed. The couch, the kitchen, the deck, if it had a flat space, we had sex there. Made love there. Made each other an animal. We did it all. \n\nAnd my education expanded. I learned how to 'edge' Megan. That's where you bring woman to almost her climax, then back off; then do it again. Well, actually she did it to me first. When you have almost come three times, and been dropped back, you are ready to give up anything to finally get there. \n\nI joked that it was the ultimate spy tool; that she'd been taught by Mata Hari, and while she joined in the laugh, it didn't quite reach her eyes. \n\nI learned how to use my fingers to get Megan off in about two minutes flat - two fingers in her pussy, a thumb on her clit, and a finger up her ass. \n\nI learned how to play the erogenous zones - of which there are several - and how to use temperature to get her excited and ready. \n\nAnd I learned how to have anal sex. There's an art to that, I found out. You don't just stick it in. No woman - or man, I imagine - likes that. You have to take you time, open her up a bit by using fingers and lube. Impatience is what destroys anal sex for most people. Too much impatience to getting you cock into her ass. Take it slowly, get her in the mood, worship the asshole first, get her interested. I learned about mouth to ass, rimming they call it - when it's 'ok', although frankly, for me, it never really would be - and how you never go directly from the ass to the pussy without risking some fairly nasty infections. \n\nI also learned about dirty talk. Now, that's a thing. I laughed the first time she talked about it, all clinical like. \n\nBut, used correctly, dirty language can spice up a moment. With the right person, at the right moment, a \"Take it, hard. You know you want it\" can increase desire. But I did learn it required the right person - you had to read the signs correctly. Calling someone a dirty bitch, when they secretly believe they are one, heightens the moment. Saying it to someone who doesn't believe that ain't good. \n\nWe spent almost a week in San Francisco, in basic seclusion, exploring each other. And it was truly a fantastic time. Well, both great and awful. I was falling more and more under her spell and when this was over, it was not going to end well for me. I knew that. I knew I would fall -and hard. But I also realized that no matter how hard the end would be, the here and now was the greatest time of my life and I was going to enjoy it. \n\nWe didn't speak of weighty matters - she called back to headquarters, wherever that was, and was reassured that no one had made the YouTube connection yet, although how they knew that I don't really know. \n\nBesides the sex, we talked about our lives as kids - I told her about my life with my parents, what very little I remembered of it, and then the life of being shuttled around foster homes and orphanages. How I learned to play the violin of my two semesters at college; all of it. She was an amazing listener. I could really see how she would have made a great therapist. She had empathy. She asked good questions. She made me feel so comfortable. \n\nShe talked to me, too. She told me about growing up in Ohio; of her school friends; of failing to make the cheerleader squad; and being thwarted by the head cheerleader, so she stole her boyfriend to get back at her only to discover that the boyfriend had never had sex with her cheerleader enemy. Further to find, after an ass kicking confrontation in the gym late in the prom night, just her and her nemesis, that the head cheerleader liked girls. Not that there's anything wrong with that, of course. After the ass kicking was over, they'd had a necking session the like of which she'd never had to date, and that night, she learned how to eat pussy, and how it felt to have someone who was truly interested in it do it to her. \n\nWe stopped after that story because my dick was going to explode. That story kept me going for at least three hours. I also learned that even the \"beautiful people\" had insecurities. Megan has great looks, an intact family and a stable childhood. But she worried that people only liked her for her looks. She worried that people who had less resources than her family assumed she didn't work hard. This was a real revelation for me. I had so much self-pity - much of it earned, in my opinion - that I never even considered that those with the things I didn't have could have self-doubt also. \n\nOne other thing we did was start watching a TV series together. I was a big follower of broadcast TV shows that I could get streamed - some current favorites included Elementary and Person of Interest. Since I have all my data in the cloud (and a Netflix subscription), I could watch anything anywhere I had a wifi connection, so I insisted we sit and watch something together, and she liked Person of Interest. It only took her a few episodes and she was hooked. We spent more than a few hours in bed, recovering from sexual, watching the adventures of Mr. Finch, Root, Mr. Reece and The Machine on my iPad. \n\nThe night before we left San Francisco, we had dinner at a small French restaurant called Caf\u00e9 Claude. It was terrific - I'd never had French food before and had this hot ham sandwich with an egg on top called Croque Madame. \n\n\"Champagne?\" asked Megan, bright as a button. She had mentioned the restaurant was one of her favorite places to eat in the entire United States, and declared she simply could not visit the city and not eat there. So here we were. Staring at menus in French. \n\nI was in a down mood. \"Seriously? We are being hunted and you want to drink Champagne?\" \n\nMegan looked mock hurt. \"Well, we are in wine country. Or we will be tomorrow. Is my little ickle baby feeling a bit down? Does ickle baby need some cheering up? Is the big bad bogie man scaring my little man? Fine, I'll order a strawberry margarita instead.\" \n\nI was not impressed. \n\n\"Megan, this is serious. I mean, don't get me wrong, this week is great, but I can't just exist on sex and nothing else.\" \n\n\"That's why we are at a restaurant. I'm pretty sure...\" she looked around, exaggeratedly. \"Yes, I'm quite sure...they serve food here. Look, at that table. See? Food!\" \n\nI sighed. \n\n\"Look, I've been patient. I haven't asked too many questions. But I am a little nervous. How about cluing me in? Just a little?\" \n\n\" 'Clue you in'? What, have you been watching too many Rockford Files?\" she asked, heavy with the sarcasm. \n\n\"Megan...\" \n\n\"Ok, ok,\" she waved me off. \"Fine. What do you want to know? I may not know and if I do, I may not be able to tell you. But you deserve to know some things. You've...earned, that right.\" \n\nShe smiled livaciously at me as she said \"earned\" and my pants twitched. Damn devil woman. \n\n\"Let start with, what are you mixed up with?\" \n\n\"Bad people,\" she responded, instantly. \n\n\"Yes, got that,\" I replied, slightly impatiently. \"Tell me something I don't know.\" \n\n\"Ok,\" she said, considering, \"I work for a private agency. Not a public one. There, you didn't know that.\" \n\n\"Great,\" I said, exasperatedly, \"that makes it all crystal clear.\" \n\nShe smirked for a second and then said, \"Sarcasm. You've come so long, Padawan.\" \n\n\"Megannnn.\" \n\n\"Ok, ok, keep your hair on. I work for an agency that... helps people. People who often don't know they want to be helped. I can't go into specific details, but imagine I'm an undercover...therapist. I go in, I see what is going on relationship wise, where the dysfunction is and I...try and patch things up. Fix them, as much as they can be fixed.\" \n\n\"You're not serious.\" \n\n\"Sure I am,\" she replied, brightly. \n\n\"You mean to say, I'm being hunted by the mob and I'm being protected by...a trick cyclist??\" I was astounded and shocked. \n\nMegan didn't like the psychiatrist jab, her face frowned and she said, \"If I'm a psychiatrist, I'm the best damn psychiatrist you've ever seen.\" Megan made air marks with her fingers on the word \"psychiatrist'. \n\n\"I'm doing a good enough job with you.' \n\nHer eyes snapped at me the moment the last sentence was spoken, suddenly aware of what she'd said. \n\n\"Thomas... I didn't mean...\" \n\nI was hurt. I was devastated. But if there was one thing I'd learned, it was to control myself. Megan could see all my moods, so I just clenched my fists under the table and did my best to hold a stony face. \n\n\"Whatever,\" I said, not meaning that at all, \"So exactly how are you involved with the mob?\" \n\nI could see her searching my face, looking for a reaction. \n\n\"Thomas, please, don't take that the wrong way. That wasn't meant the way it sounded,\" she pleaded. \n\n\"Please, just answer me, Megan.\" \n\nThere was silence for a second as Megan looked at me, trying to decide what to do. The drinks arrived and she sat quiet while they were served. \n\n\"Ok, well, we were hired because the son of a prominent banker - very prominent - got involved with some girl, she got him in trouble, broke it off and the son went looking for her. He didn't find her and is heart broken. He's the heir apparent to a large private merchant bank, and we were hired to, well, for want of a better way to put it, mend his broken heart. In doing so, we tracked down the girl, to find out why she dumped him, perhaps get him some closure. What we found led to organized crime - she was a honey trap and was supposed to get him hooked on drugs, so they could blackmail his dad. We contacted the fed, they got involved and since we were already in with this group - we posed as good time girls to infiltrate and find the girl - we kinda got roped into helping out and passing information along. To make a long story short, things went bad, April and I got details of how this group launders money - it was in the brief case we needed your help to find. Then things got even worse. They suspected I was a mole - which I kind of was. April got me out in the nick of time and we came to you for help. You know the rest. There are obviously details in there I can't give you, but you have the gist of it.\" \n\nI considered this for a few moments. Megan took another sip of her margarita, and wrinkled her face, in obvious displeasure. I did wonder what she expected in a French restaurant. \n\n\"And me? How do I fit in?\" \n\nMegan's eyes dropped to the table. \"They think you are who we work for. They haven't zeroed in on to what we really are. They just know that we took something valuable, and don't think we are federal agents cause they weren't busted. They think we are some type of crook, probably small time, looking for some leverage.\" \n\n\"Well, isn't that just dandy,\" I said, reverting to my self-pitying ways \n\nMegan just looked at me. \n\n\"So all that sex? All that? That's 'therapy' to you?\" I mimicked her use of the fingers in the air on the word 'therapy'. \n\n\"Thomas...\" \n\n\"No, fine. It's fine. It's what I expect. I hope I'm a good little lab rat for you. I hope I scurried down the right corridor in the maze. Your technique is flawless.\" \n\nMegan bit her lip. \n\n\"Thomas, yes, I will admit, I used some of the techniques I use in therapy with you. I won't be a liar and deny it. But the reality is, you needed it. You still do. You are a damaged man Thomas. But you are a good man -a dammed good man - despite that. As I've said before, I'm only alive because of you. Because of that, I owe you. The agency owes you. I owe you all the more because you didn't have to do it. But you did. You took life to protect April and me, and I'll never repay that as long as I live. \n\n\"But I'm not going to sit here and watch a soul in pain and suffering when I can do something about it. Sure, the way I do it is sometimes underhand and unorthodox, but please understand, this is what I do. And I'm not going to apologize for trying to make your life better. \n\n\"And lastly, fuck you. Yeah in the course of therapeutic projects, I may end up sleeping with someone. If that makes me a whore, so be it. But I'm the best damn whore imaginable. I didn't hear you complaining about my experience or what you've learned. And you are a better man because of it. \n\n\"I don't scream about what I do, or how I do it. Maybe I'm more ethically challenged than you are. Whatever. I go out into the world and I try and do good. Sometimes I get more than I bargain for, like now, but I'm not crying about it or hiding under the bed. \n\n\"I took you into my bed because, Thomas, I wanted to. That's the bottom line. No one is paying me, and I'm not doing it as a charity case. I actually like you, a lot. You need to know that people care about you, and I do. So I showed you. And we enjoyed it. And it made you happy, and me happy too. So fucking sue me. I'm not sure exactly how pissed off and bitter you need to be about it, honestly.\" \n\nShe was out of breath at the end of her rant, staring at me defiantly. \n\nWe just stared at each other for a few seconds, then she said, \"So now you know. You get to judge. So... are we going to eat, then you going to pay the bill and take me back to the apartment and fuck me till I cry Uncle, or what?\" \n\nSo that's what we did. I still didn't know exactly how I felt about it. A little betrayed. Some loss of trust. The loss of my stupid schoolboy fantasies. But she still wanted to bed me and I wasn't about to look that gift horse in the mouth, at all. And, despite what I knew, I still may have loved her. Intellectually, I probably knew I shouldn't. But my emotions were not as disciplined. So be it. ",
        "The next day, we hit Napa Valley. Megan was like a schoolgirl on speed, she was so excited. \n\n\"It's like the home of wine, Thomas! I've never been here and I've always wanted to come. April and I have talked about it - we were planning a week here, hiring a driver and spending all our time wine tasting. And man tasting, if there were any that caught our interest.\" It was a hundred words a minute, and I just sat there, nodding, watching the scenery out of the window and trying not to be offended by the last comment. \n\nShe glanced at me with a rueful smile as she drove over the Golden Gate Bridge and said, \"Well, I don't need the last one now, do I?\" \n\nShe really was very good at propping up my ego, even if the impact was lost a little, now that I knew for sure that it was a professional skill. \n\nWe found a small bed and breakfast and I spent the rest of the day tuning my violin and practicing. With an instrument like a violin, you need to keep up practice, or your fingers lose their dexterity, which is essential. Plus, I had new needs for that nimbleness now, so it served two purposes. \n\nMegan spent the time planning out our wine tasting trip, mumbling to herself like a excited girlie, making lots of facetime calls to April to discuss the best places to go. \n\nWe spent two days wine tasting. I'd like to say it was great, and in some ways, it was. Her enthusiasm was infectious. It was just the wine tasting itself that didn't do much for me. All that trying this, spitting in buckets, eating little biscuits to 'clear the palate' and so on. It's all just so incredibly pretentious. I don't sense hints of apple or earthy tones or whatever. It's just wine to me. Some more bitter than others. Other than that, it was entirely lost on me. Megan sat there nodding, and dropping choice comments frequently, fitting in with the entire wine drinking set. Me? I just knew what I liked and what I didn't. The words \"fruity afterglow\" don't mean diddly squat to me. \n\nBut Megan had a blast. The last day I just stayed in the small B&amp;B and let her go by herself. She pouted, made a face, but she went anyway. She arrived home later a little drunk, having taken a taxi out and back. I, as all men will understand, took full advantage of that situation. I think I deserved it. \n\nThen the day after that, we made another move, and this time, a long one. We drove all the way to Portland. And then things got even more interesting. \n\n\"Thomas,\" said Megan, about 4 hours into our drive up the coastal road. \"So, we are going to meet someone on the way to Portland. And then someone else when we get there.\" \n\n\"Who are we going to meet?\" I asked, my curiosity piqued. \n\n\"Well, the first stop I'll get to in a minute. The second stop is...well, he's like a friend of the family.\" \n\n\"Your family?\" I asked, straightening up and taking an interest. \n\nMegan laughed, \"No, not as such. More a friend of my work family.\" \n\n\"I see,\" I said, not really seeing at all. \n\n\"I doubt it. You'll like him though. I've only met him a couple of times, when he's come out to visit our office in Washington. He's kind of a legend around our offices.\" \n\n\"I'm sure it will be interesting.\" I said, not knowing what else to say. \n\nMegan glanced over at me and said, \"You should have been a politician, Thomas, with answers like that.\" \n\n\"Who's the first one?\" I enquired. \n\n\"Well, that's where we - well, you, - need to tread carefully. Because, you see, we are going to see Kyle Partridge.\" \n\nShe looked at me intently as she dropped that bombshell, dividing her attention between the road and me. \n\n\"I'm sorry, we are going to see who?\" I said, when I could speak again. I just needed to confirm I had heard what I thought I had. \n\n\"We are going to see the man who killed your parents, Thomas. Who damn near killed you. And you are going to forgive him. Because both he and you need it.\" \n\n\"What,\" I snorted, \"I go there, forgive him and suddenly everything is now ok in my world and his? He's just going to straighten up, live a Christian life, eat a fish diet and become an upstanding pillar of the community?\" \n\nI was laying the sarcasm on thick, to mask the surge of anger her announcement had brought up. \n\n\"Yeah, I get it, Thomas. I get the anger. It's very natural.\" \n\nI set my teeth for a second, then hissed out, \"Megan, right now, I do NOT need your approval for me being pissed off, ok?\" \n\n\"Yes...right, sorry Thomas. I was... trying to say that expressing your anger was the right thing to do. I want you to understand that it's the ok thing to do. I'm sorry, I didn't mean to act like I'm above your emotions,\" said Megan, trying to make nice. She sounded genuinely contrite. \n\n\"There's no real handbook for this, Thomas. I'm just trying to do what I think is the right thing for you, to help heal the ancient wound you have. Please, excuse me if I turn into therapist mode. I really just want to help. And, it is just therapist mode. I am your friend. I care about you. And I am a therapist. But if I thought of you as a patient, I never would have slept with you. So, please, understand that this is unique for me to. But I absolutely have no agenda in this but to help you.\" \n\nI nodded, the anger draining quickly. Then, I had a sudden insight. She'd deliberately delivered the news the way she had, so that I'd be mad at her, she could apologize, and all of a sudden my anger would fade, and I'd be able to actually consider the act of meeting this man with out being instantly angry about it. She'd redirected my anger quite effectively and neatly and here I was, able to actually think about meeting the man who'd destroyed my family. \n\nShe glanced at me and obviously knew what I'd been thinking. \n\n\"Yes, I'm a devious bitch. Get used to it, Thomas. There's a lot more where that came from,\" she said, sticking her tongue out at me. \n\n\"Ok, we are heading to Junction City, just outside Eugene. Can you look up the best route on Google maps for me, honey?\" \n\nIt was the first time she had called me \"honey\". It made me shiver. \n\nWe arrived about three hours later, having gotten slowed down in an unexpected down pour near Yoncalla, on route 5. It took a while to find the run down old trailer park. \n\nThe trailer park itself looked like every other trailer park you've ever seen on TV. Some trailers nicer than the others, a smattering of double-wides - trailers double the width of the normal ones - some really run down trailers, with rusting cars outside and a few looked abandoned and ready to be towed to the scrap dealer. \n\nWe found Kyle Partridge's trailer. It was a single side, with a small herb garden outside. The tomatoes were doing well, but some of the actual herbs had died and it had not been weeded. \n\nI stayed in the car, with the top up, while Megan got up and went and knocked on the door. It was 4pm in the afternoon, so we were taking a chance that Kyle was even there rather than still at work. \n\nWhile she did that, I tried to sort through my feelings. We'd talked about it in the car on the way here. When I thought about my parents, I felt more of an echo of loss and anger, rather than actual emotions. I tried to remember how they felt, rather than actually feeling them. I reacted angrily, but it was more a memory of anger than actual anger. I realized that my emotions were what I thought they should be, more than what they actually were. Why? Had it been too long? Was I too young? I just didn't know. \n\nMore than anything, I felt sad. Sad at the loss of my parents. At the loss of family, of the life that should-have-been. And then I realized something critical. I hadn't had even one nightmare on this trip.. Even before Megan had started wearing me out at night, I'd slept soundly. Ever since Megan had first talked to me in the cantina in San Diego, I'd been sleeping through the night without dreams. That was HUGE. I honestly sat there, stunned at the realization. And for once, Megan didn't see it on my face. It was my revelation, not hers. \n\nBut back to Kyle. I was angry at this man. He was the instrument of my loss; no question about that. But I was also angry at the situation that had created it all. At the randomness of it. The tragic waste. \n\nMegan had asked an interesting question as we drove, one I'd never considered before. Would it be more tragic if they'd been killed deliberately, if they'd been killed by total accident beyond their control, or if they'd been killed by their own negligence? \n\nWhen she asked it, I realized that it honestly didn't matter to me. What mattered was they weren't there for me any more. Why was immaterial in terms of what mattered to me, which put everything about it in a certain perspective. Being constantly angry at the instrument of the accident, - the man behind the wheel -, wouldn't bring them back. It wouldn't bring me peace. It would just perpetuate the cycle of my life. Of blaming others for what my life had become. Of self-pity. \n\nI knew I had to go in there and forgive him. But while that was an intellectual understanding, emotionally, it was another thing altogether. When we got to his trailer we'd basically agreed that I'd try, and see how it went. Megan was satisfied at that. She said there were no guarantees about anything anyway. All we could do is try, and even just that would be 'therapeutic'. I'd made some crack about a bottle of beer being even more 'therapeutic' and couldn't we go and get one instead, and she'd just looked at me, with that intent and serious stare. I'd looked away. It had been a stupid statement anyway. I did also notice that she kept saying that \"we\" were doing this. Not \"you\", but \"we\". Did that mean anything? I hoped so, but didn't really think so. It was that intellectual/emotional disconnect again. \n\nAnd now here we were and she was knocking on the door, and the door was opening, and there was the man who I'd only met once before, sort of, on dark night when he destroyed my world. \n\nMegan had a brief conversation with the man at the door, and then beckoned to me, and I mechanically got out of the car. \n\nAs I approached the door, the man showed no recognition. He was old - there were wrinkles on wrinkles, and he had the large red nose of a habitual drinker. He was shaved, basically, but there was stubble in various places. His hair was mostly gone, and he stood with a slight stoop, wearing old fashioned high pants, wrinkled shirt and rainbow suspenders over the top, the kind made famous by Robin Williams on the old Mork and Mindy show, even if they were pretty grimy now. \n\nHe looked at me as I walked towards the trailer, and I wondered what Megan had said to him. \n\nHe looked at me as I got to the door and then said, raspingly, like he had a cold, \"So, who is this again? What does this have to do with me?\" \n\n\"Mr. Partridge, as I said, we need to have a few moments of your time. I think you'll be glad we did once we've talked, sir. Can we please come in?\" \n\n\"You can come in, but I ain't got no coffee or soda. Got no time or money for that stuff. Got a beer, if you want, but that's it. Or water.\" \n\nHe shuffled back and went inside. It was as dark and dingy as you'd expect, although I couldn't help notice that the windows were clean, and the utensils and cups on the wash board by the sink were cleaned and orderly. \n\nWe went in and Megan and I sank down on a built in couch that had seen better days. There was a coffee table in front of the table with two dog-eared golf magazines, and one about Mustangs. What is it about these Mustangs? \n\nHe busied himself at the sink, pouring water from a bottle into three glasses and then shuffled forward and put them on the coffee table, before sinking slowly into an overstuffed lazy boy, facing the TV. \n\n\"Okay, what's so damn important that you have to disturb my day off?\" he demanded, with no preamble. \n\n\"Mr. Partridge, just to be sure, you were a driver with Mega Rapid Trucking, back in late 80s?\" \n\nHe instantly stiffened, and said accusingly, \"What if I was? What do you people want? You reporters?\" \n\n\"No, we aren't. I just needed to make sure you are who we think.\" \n\n\"Yeah, well, I was. Till the accident. Then, no one wanted to know me. Wasn't pretty. Hasn't been pretty ever since.\" \n\n\"I know. You see, that's the reason we are here.\" \n\nThere was silence while he waited to hear more. \n\n\"This,\" she said, gesturing at me, \"is Thomas Avaline.\" \n\nShe was silent, seeing if Kyle Partridge understood what she'd just said. \n\nHe shifted uncomfortable for a second, and then said, hesitantly, \"The folks that was in that car, they were called Avaline...\" \n\nHe turned his red-eyed attention to me and said, \"You related to them? You looking for...\" And then he realized who I was. \n\n\"Oh my god...I...\" \n\nHe didn't know what to say for a moment as he stared at me, mouth open, and then he started muttering, \"I aint got nutthin'. I got nutthin' for you to take. I...\" \n\nHis voice and his whole face were trembling. Megan was on her feet instantly and went across to him, crouching down and laying her hand on his arm, looking directly at him from close range. \n\n\"Mr. Partridge, we aren't here for revenge or anger or to take anything from you. On the contrary, Thomas has something he needs to say to you.\" \n\nI took a deep breath, and stood up, and as Megan moved aside, so Kyle Partridge could look up at me, said simply, \"Mr. Partridge, I didn't even know you existed until a few days ago. We've been traveling here, slowly, while I tried to work out my feelings. It was a long time ago, Mr. Partridge. I know some of the circumstances now, and...well, I've spent a lifetime hating you for what happened. But now... well, I don't know how else to say it. I forgive you. I know a lot of it was circumstances beyond your control, time pressures, lack of sleep, not drinking. You didn't mean it. It screwed up your life, too. I'm pretty sure you feel awful about it, so please, don't beat yourself up about it any more on my behalf. It's done, in the past, and it's best that it stays that way.\" \n\nThe man just stared up at me, mouth open, and then, after a second, he collapsed in on himself, sobbing. Megan was there, arms encircling him, hugging him tight. \n\nI heard some words coming out of the sobs, barely understandable. \"Sorry,\" \"My fault\", \"wish I...\" \n\nEventually, he started to get himself under control and with Megan's help, he stood, on wavering legs. \n\nShe was still supporting him when he just looked at me, eyes wide and glistening from the tears, when he said, \"I cannot believe you are here. I can't believe what I did to you,\" he said as he looked at my scars. \n\n\"I'm so so sorry for what happened. I've relived that night so many times. If I could take it all back...well...\" \n\n\"Kyle - can I call you Kyle? - You've suffered enough. I know this wasn't really negligence on your part. My understanding is that the trucking company put undue pressure on your to make delivery dates, is that right\" I said, as gently as I could. \n\n\"Well, yeah, that's how it was back then. No controllers in the cab, keeping track. You made the deliveries on the time the docket said, or you didn't get paid. I said... I said this was bad, but... we had to do what the dockets said.\" \n\nKyle was close to blubbering again. \n\nI nodded. \"I know Kyle. And we are going to go after that company for that, if we can. It's time now. Look, I can't guarantee you anything else, but the one thing I can guarantee you is that you don't have to suffer alone any more.\" \n\nAnd just like that, I was free. Free of the anger. Free of the frustration. I looked at Megan and knew she could see it in my eyes. She smiled at me, and at that moment, I knew I was lost forever. Again. This woman had somehow captured my soul, and I wasn't about to get it back. Intellectual/emotional disconnect be damned. She'd gotten to me and I would have to deal with whatever came. I couldn't fight it. \n\nKyle didn't exist at that moment. No one did, except Megan. She was the only person in the universe, and I couldn't look away. At that moment, I would have done anything she asked of me, including jumping off a cliff. If she wanted it, I'd have done it. \n\nMegan was smart enough to understand the euphoria of the moment, but also smart enough to know a fundamental personality shift when I she saw one. \n\n\"I...I don't know what to say. Thank you. I'm so sorry. I'm just so damn sorry...\" Kyle kept repeating, tears streaming down his face. \n\nIn the end, I had to move in and actually grab the unstable Kyle Partridge for a hug, whispering in his ear, \"It's ok. It wasn't your fault,\" over and over again. \n\nKyle just clung to me, sobbing hysterically. \n\nEventually we disengaged, Kyle wiping his eyes on his already sodden shirtsleeve. \n\nKyle even smiled, the first it seemed, for a long time. \n\n\"I'm sorry. I'm not normally a crier. Haven't really done that since my kids...\" his voice trailed off, staring in the distance. \n\n\"Yes, you kids,\" said Megan, very matter of fact, taking control of the emotional situation. \"We need to see about them.\" \n\n\"What?\" asked Kyle, puzzled. \n\n\"Well, your daughter, Emily, is married. Are you aware you are a grandfather?\" \n\nI was constantly surprised at the information that Megan seemed to have at her fingertips. Working for a covert agency with fingers in lots of pies seemed to be very useful. \n\n\"And your son, Jason, has just divorced, rather messily I'm afraid. I think he could definitely do with your counsel right now. I have contact information for both, and in a little while, you are going to give them a call.\" \n\nKyle just stared at her. \"Who are you people?\" he demanded. \n\nMegan just smiled back, even wider than before, a twinkle in her eye, and said, \"Concerned bystanders Kyle. You guys needed help to connect. We help. Simple as that.\" \n\nKyle looked back at me and said, shyly, \"Are you connected with this? With her?\" \n\n\"Me? No,\" I laughed. \"I'm as broken as you are. She helps put me together too. It's all too good to be true, if you ask me.\" \n\nMegan's face clouded a little at that, and she said in a somewhat brittle tone, \"Well, we can talk about that later. Kyle, you know what? I think we could all use one of those beers you mentioned.\" \n\nWhile Kyle went to get the beer, Megan leaned in and murmured, \"Ok, so, in a moment I'm going to order an Uber to take you to the hotel that was pre-booked for us. I have more work to do here, and it's honestly better done one on one. Kyle,\" she said, nodding over to where he was fumbling around in his ancient refrigerator, \"needs more counseling, in terms of contacting his estranged children. And while you being here is great for him state of mind, it's easier to do this without you here. You are a distraction. A great one, but still... I only have today to wrap this up. Drink the beer, by the time you are done, the car will be here. I'll catch up with you later on. We need to have a chat about how you feel about all this, although, I can tell you've already relaxed in ways you can't even feel.\" \n\nI just nodded. I'd have done anything she told me. It was probably a good idea anyway, I had a lot to sort out internally, and being on my own with the violin, would be a good idea. I had to remember to grab the case out of the car on the way out. \n\nAnd that's what we did. We sat, drinking terrible beer - Pabst Blue Ribbon was not exactly Sam Adams - and talking about having kids and the trials of that, and Megan suggesting how Kyle should take up walking the greens at the golf course where he worked, daily, as exercise. She was something else. She could weave suggestions into a conversation like a pro, and then bat her eyelashes at you, making you think it was your idea. ",
        "We men are just so easily manipulated, I reflected. No wonder women rule the world. \n\nI heard a horn outside, got the keys from Megan, grabbed my violin, and climbed in the Uber, heading for the hotel, where I spent the afternoon standing on a balcony, playing anything and everything on the violin, trying to make the music say what I was feeling. I even composed something on the spot, I was in such a good mood. \n\nTwo days later, we were in Portland. The evening she'd returned from Kyle Partridge's trailer, she was drained, but still insisted that we make slow love that evening. And it was loving. Slow, languorous, gentle, but intense. She looked at me the whole time, insisting on positions where we could look at each other. If I wasn't already completely smitten, I would have been after that. I know I keep saying that, but each time I do, it's equally true. \n\nI went to sleep, wondering how long my slice of heaven could last. \n\nWe spent the next couple of days driving very slowly up to Portland, stopping several times on the way. It's an easy drive to make in just a few hours, but we didn't need to be in Portland and Megan wanted to explore the Willamette Valley, where they grow a lot of Oregon Pinot Noir. This woman really did like her wine. Megan was on the phone back to HQ a lot. She mentioned that some things were changing back in Boston and it might all be coming to a head, which sounded good. \n\nWe ended up staying in a hotel in the Kings Hill historic area. It's not as trendy as the Pearl District, but is frankly very charming. \n\nThat evening, Megan announced we were going out, to meet the mysterious, 'family friends'. I was told to bring my violin, although she wouldn't tell me why. \n\nWe ended up at a tavern called \"Portleys\". I couldn't work out if it was named that for the city, or for the rotund owner, who embraced Megan like she was his long lost child. \n\nWe were shown to a table where a couple awaited us. The man, a tall bald guy, stood as we approached and similarly grabbed Megan in a bear hug, followed by the smaller, slim brunette woman, with the pixey hair cut. She honestly looked like Audrey Hepburn, reincarnated. \n\nThe man turned to me. \"I'm Jace. You must be Thomas? Dermot has told me all about you and this shitty situation. Glad to have you here. Must be a lousy time right now, on the run and all that.\" He was definitely earnest. \n\nI was surprised for a second, then less so. If they were tied in with Megan's group, I had no doubt he knew what I'd had for breakfast. \n\n\"This is my wife, Chloe,\" he said, holding her close. She clung to him, with both arms around his torso. She nodded at me, smiling slightly. \n\n\"You have me at a disadvantage I'm afraid\" I said, wondering who they were. \n\nMegan glanced at me, and made a gesture for us to sit down. \n\n\"Thomas, Jace is an old friend. One of our company's first clients, when Jessica - who runs the company - was still out in the field, doing...um... hands on work.\" \n\nI looked back at Jace, who smiled back. Then glanced at Chloe, and despite bursting with obvious questions, I figured the best thing to do was just accept it at face value. It was obviously a private thing. I was extremely uncomfortable, since everyone else seemed to be a part of something, and I was just...there. On the outside. \n\nAnd then he said, \"Yeah, Chloe and I had an issue, Jessica was hired to try and put me right, and she mostly did. Mostly. I did catch her at it though.\" \n\nMegan said, \"One of only two times in our history. Thomas, you are in august company!\" \n\nIt was said with pride. I really didn't quite understand what she was saying, but nodded anyway. It seemed the thing to do. \n\n\"I heard how you saved April and Megan, Thomas. That took real guts,\" he said, nodding over at a waiter to come over. \n\nChloe still hadn't said a word, but caught my eye and smiled at me, finally opening up with, \"Don't take all this macho shit too much to heart. Whenever Jace has dealings with Ingrams people, he gets all masculine and struts around.\" \n\nShe had a very soft voice, very contralto. \n\nJace looked at her, mock hurt and Megan hid a smile behind a menu. \n\n\"You be quiet and make babies, woman,\" said Jace, emphatically, beating his chest as he did it. \"Man be talking!\" \n\nSo he did have a sense of humor. He sure didn't look like he did. He looked like he was the villain from a new James Bond movie. \n\n\"So, sorry we couldn't host you at our place,\" Jace said, directing his speech at me. \"Honestly though, we have kids at home, and while I am sympathetic to your situation, I have them to consider. You are being hunted and I really don't need to be bringing that to our house. You understand, right?\" \n\nHe glanced at Megan, who nodded energetically. \"Of course. Totally understood. I'm just glad I'm able to see you guys again. It's been what, three years? How are the kids?\" \n\nJace took a drink and mumbled something and Chloe elbowed him in the ribs. \n\n\"Sorry?\" said Megan, mischievous smile on her face. She was prodding trouble and she knew it. \n\n\"He said, 'Noisy',\" said Chloe, glowering at her husband. \"And he can talk. Playing that stupid music all the time\" \n\n\"It's not stupid. It's Maori Haka. It's a good message to give the kids,\" protested Jace. \n\n\"It's in fucking Maori, Jace. The only message they are getting is that it's great to get worked up and slap themselves.\" \n\n\"Yeah... well...It's cool!\" Jace just mumbled into his drink. \n\n\"Thomas, you must forgive him. He's still a big kid himself and he doesn't like having to be an adult a lot, for the real children,\" said Chloe. I just smiled weakly at them. I really didn't want to get in the middle of marital strife of people I didn't know. \n\n\"Lets order! I'm famished!\" said Megan, looking through the menu. \n\nWe ordered, and drinks and dinner were delivered. I went with the Shepard's pie. We spend the whole meal just talking about world events, thoughts on the Superbowl, - to which I didn't have much to add, - relationships, movies, etc. The conversation was fast paced and bounced around a lot. Not much at all was said about Ingrams. I wanted to know more, but couldn't figure out how to introduce the subject without being obvious.. \n\nWhen the dishes were cleared, Jace belched, was elbowed yet again by Chloe - his ribs must be a mass of bruises - and she then looked expectantly at me. \n\n\"Thomas, did you bring your instrument?\" asked Chloe, after glancing at Jace being a clown and frowning attractively. \n\n\"He certainly did,\" interrupted Megan, before I could say anything. \"He has no idea why though.\" \n\n\"It's in the car,\" I said, finally getting a word in. \n\n\"Megan told us you play. We selected this tavern particularly, because they're doing live music tonight. It's a small band, and they love people sitting in with them. They play mostly Scottish and Irish dancing music. Ceilidh music they call it. Some band from the UK, called the Oyster Ceilidh Band. It's good stuff. Megan had been raving about your playing, so we thought we might persuade you to play a bit? We've primed them that you might.\" \n\nI was caught. What was I going to say, \"No\"? Of course I had to agree, even though I really didn't want to. I wasn't comfortable performing in public. Not the way I looked. Tall, scary face... I was the whole deal. I just wanted to sit in the corner, quietly. Being out in public with Megan was a whole new thing for me, and I still wasn't completely comfortable with it. Sitting in a sushi place and making out with Ryan Reynolds sitting across from us was one thing - that was so far out of reality, it was easy to imagine it wasn't real. But this... this was too close to the real world. \n\nI sighed internally, and tried to put a good face on it. I turned to Megan, who was both beaming and yet also searching my face for signs of how I really felt about it, and smiled at her and said, \"I'll go get the violin then?\" \n\nI got up, thinking about how surreal it was. Here I was, a water engineer, sitting with a white-hot babe, who worked as a kind of secret agent, practiced some therapy and was on the run from the mob. Not really your everyday situation if you think about it. And yet, the people I was with wanted me to play with a band I'd never met before. OK then. Why not? \n\nI fetched my violin and came back to find the band setting up at the other end of the bar, and nodded to them, holding up the violin case and saying, \"Any chance I might sit in on a few tunes?\" \n\nThey looked at each other, dubiously, and eventually, one grizzled guy with short grey hair said, in a distinctly British accent, \"You any good?\" \n\n\"I can hold my own,\" I replied. \n\n\"I didn't ask if you could play with yourself,\" he replied, smirking, \"I asked if you were any good?\" \n\nI caught on then that this was in jest - the Brits have that funny understated way of expressing themselves. \n\n\"Well, I can stroke like the best of them,\" I retorted. Tit for tat, I thought. \n\nThe guitarist snorted behind him, and the grizzled guy turned round and gave him a four-letter stare. \n\n\"Ok, well, sure, if you can keep up. We are big on gigging, the stuff is simple, and if you go with the flow, whatever you do will fit in. That's the nice thing about Celtic music, it's made for people who don't know it to pick it up quickly,\" he said, turning back to me. \n\nI nodded, and stepped up onto the little stage, nodding at the other violinist. \n\n\"I'm Dan,\" he said, holding out his hand., \"and the crotchety bastard over there is John Jones.\" \n\nI shook his hand, and opened the violin case, and pulled out the instrument, and Dan whistled, \"Is that a Karl Willhelm?\" \n\n\"Yep,\" I answered, looking it over to ensure there was nothing damaged. \"It's a model 64.\" \n\n\"Nice!\" he said, pulling his older instrument out. \n\nJohn Jones looked back at me and said, \"Lets give the new guy a whirl. See if he's any good. Dan, play some Dancing Squirrels, and lets see if he can follow.\" \n\nSo Dan did, he played eight bars of something, and I did my best to replicate it, and we did that for about ten minutes, with me responding to what he played, and then sometimes extrapolating it. He beamed at me the first time I did that, and we were soon going back and forth, playing the same material, but changing it. It was like dueling pianos, but with violins. Suddenly the guitar player joined in, and the next thing we had John Jones, with a squeezebox, and before I knew it, we were actually playing something. \n\nI have to admit it. This was actually a hell of a lot of fun. I'd never done this before, playing with other musicians like this. And John Jones was right - most of the Celtic music was fairly simple stuff, but with lots of variations on a theme. Once you got the beat and the theme, it was easy to just riff on it. I could really get into it. \n\nWe did about four songs like that, and then John Jones started calling. It transpired that Celidh music is meant to be danced to, like line dancing but with partners. And John Jones, even though he was playing, would be calling out what he wanted the dancers to do. \"Do-si-do your partner!\" whatever that was. \n\nThe tavern owners had moved all the tables back, so there was space for everyone to get out there, and I saw Jace and Chloe out there, dancing around and laughing. \n\nAnd then I saw Megan out there, asked to dance by some local, and she accepted, and then this guy almost literally swept her off her feet and I died inside. \n\nThis went on, song after song. Megan dancing with guy after guy and having the time of her life and I just played and played, and burned and burned. \n\nDuring the last song, I was so agitated that on a down stroke, I pressed too hard and snapped my bowstring. Replacing bowstrings is a tedious process, so Dan, noticing, just threw me a spare bow. His spare turned out to be nicer than mine, properly waxed with rosin. \n\nI just stewed, song to song, watching Megan out there. And I knew I had no real right to be upset. She wasn't 'my' girl. She was single and having fun and there was nothing wrong with that, and yet I burned angrily anyway. The heart wants what the heart wants, and I had to finally admit, mine wasn't even mine any more. \n\nEventually, everyone ran out of breath, and John Jones called a break. Before everyone stepped away for a welcome pint of cold beer, he glanced at me and said, \"Do you have any of your own stuff?\" \n\nI was still staring off at Megan, sitting with Chloe and Jace, and some random guy sitting with them, laughing at something he said, and I just nodded absently, not even really thinking about what he'd asked. \n\n\"Hey Folks. So, tonight, we have an extra player, my good friend Thomas,\" announced John Jones, over the mike. \"He has something he'd like to play for you. So lend him an ear while you recover, folks.\" \n\nWait, what? I was going to do what now? Somehow the lights had come down, and there was one spotlight, shining down on a stool in the front of the stage. \n\nWell shit. SHIT! \n\nSo off I went. I sat down, trying not to look out at the expectant faces waiting for me to entertain them. I had my cap on, and I pulled it tighter and lower on my face - sitting in a spotlight like that, with my face, and given the situation we'd already had with the video from LA, I just wanted to be as anonymous as I could be. \n\n\"Um...\" I said, into the microphone in front of me, mumbling a bit, \"this is called 'Megan's Heart'.\" \n\nI just hoped to god I could remember what I had had put together the other night. \n\nI started to play, as best I could, and somehow, the music took over. After the eighth bar, I just closed my eyes and let it flow. And it did. \n\nI had so many thoughts - you are supposed to internalize the music when you play, how it makes you feel. At least, that's what I always thought. But this time it was totally true... there wasn't even any audience in my mind. I kept thinking about my parents, their loss, Kyle Partridge, his life, my life, the lives I had taken, this road trip, Megan - especially Megan -, and it all just blurred together. The music changed as I thought about different things - same riff, but a different speed or take on it. When I thought about my parents, the music became mournful. When I thought of the lives I had been instrumental in taking, it became slightly frantic. And when I thought about Megan... well, it soared. \n\nI must have played for six or seven minutes. It felt like all night. I poured everything I had into it, not understanding why I needed to do it, but just doing it anyway. When the last note came out, I opened my eyes and looked out at the people in the audience. They just sat there. No one moved or said anything. And I just sat there, thinking, \"Shit, I must have been beyond bad.\" \n\nAnd then someone started clapping. I looked, and it was Megan. She was on her feet, eyes shining, clapping manically. Then everyone else did too, some standing up, as well. \n\nI just sat there, breathing heavily. Heavy violin work can do that to you. \n\nI don't know. Something changed inside me. Like the days before, with Kyle Partridge, and my active decision to forgive him, something just... clicked. I don't know what it was. I don't even really know how it made me feel. Just, something changed. For the good. \n\nJohn Jones came almost running to where I was standing. \n\n\"Damn, Thomas. That was... wow. Just wow. Really impressed. Do you have other stuff?\" \n\nI just looked at him, wearily, and said, \"Not tonight. I just need to... go. Please...\" \n\nAnd then Megan and Jace and Chloe were around me, talking intensely, and I was crying and I didn't know why. \n\nMegan could see I was in distress, and she immediately took me by the hand, not saying anything, and led me out of the tavern, nodding at Jace and Chloe, who stood, arms around each others waists, nodding back at her with understanding faces. \n\nI still had the violin in my hand, but had left the case in the Tavern. Jace came running out with it two minutes later, as we made our way to the car. \n\nHe pressed it into my hands, and murmured, \"That was astounding Thomas. I hope it did for you what it did for everyone else. Look after him Megan. He's special.\" \n\nAnd then he went inside and we were in the car and on our way back to the hotel. \n\nWhen we got there, we went to the room, still without having said anything. Megan led me by the hand, not speaking or making eye contact with anyone. \n\nMegan undressed herself, while I sat on the bed, just starting into space, trying to understand the dam that had broken inside myself. Feeling scared and happy and sad and basically overwhelmed. \n\nShe came to me, naked, and undressed me too; I was like a zombie. I looked up at her concerned face, tears dripping down mine. \n\nShe just guided me into the bed and the climbed in next to me, gathered me up in her arms and stroked my head, slowly and methodically, while I sobbed my way to oblivion. I still didn't even know why \n\nThe next morning, I woke early and found Megan already awake, sitting with plumped up pillows, looking down at me, and smiling at me. \n\n\"Morning sleepy head. Boy, do you make an impression?\" \n\nI smiled weakly back at her. \n\n\"You wrote that song for me? You really know how to turn a girl's head, Thomas.\" \n\nShe leant down and kissed me on the lips, not lustfully, or chastely, just...as I'd always imagined real lovers did. She did it with feeling, that's what it was. \n\n\"Come on, let's go get breakfast. You've been through a lot, and you need to refuel.\" \n\nAnd that's what we did. Then we went back to the room, and damn if she didn't rock my world. \n\nWe made love. We didn't fuck, or get lustful, we just... well, I thought we made love. She insisted on positions where she could look at me while I slid my iron bar erection into her well-lubricated pussy. \n\nIt was slow and languorous, and she closed her eyes on occasion, when the feelings overcame her, opening them and establishing eye contact again, once the orgasm had washed over her. Her hands were all over my body, touching my face or my chest. She took my hands, and made them move over her body, showing me what she liked and making me bring her to orgasm again and again. \n\nAnd finally, while I was solid as a rock, I just couldn't seem to get there myself. I was horny, but so interested in her pleasure that I just wasn't taking that much myself. I felt like she was giving herself to me, and I wanted her to understand how important that was, and how I wanted to make her feel everything she should from me. \n\nEventually she just said, \"Cum for me Thomas. Make me feel it. I need it, you need it, do it. Cum hard in me...\", while sitting on me. I was flat on my back and she was sitting on me, riding me for all she was worth, like she had done the first time. \n\nAnd the way she said it, looking down at me, the look of rapture on her face... well, I did what any red blooded male would do, and erupted. I could feel the cum spurting out of me, splashing into her - every ejaculation I felt with a grunt, that la petite mort, as the French describe an orgasm, hitting with ever spurt. \n\nWhen I was done, we just stared at each other for a second, and then she collapsed on me, her mouth finding mine and kissing me like they'd just passed a law banning it. And I kissed her right back. \n\nWe spent the rest of the day in bed, either her making me cum or me making her cum. We did everything either of us could think of. Hell, I even got her off with a toothbrush at one point. Don't ask - it works. \n\nAnd then there was a phone call, and while she didn't want to take it, she did, getting up and smiling at me, and then taking the phone into the bathroom. \n\nI don't know what was said, but when she came back to bed, half an hour later, she just clung to me, not saying a word. ",
        "We ordered room service, and they sent up a bottle of Champagne, telling us that a couple - Jace and Chloe - had commissioned it 'just because'. \n\nWhen we settled to sleep, Megan just said, \"Please, Thomas, hold me.\" And I was only too happy to oblige, even though I was confused about what had happened with the phone call. I asked her point blank and her response was, \"In the morning...\" \n\nBut I didn't get the answer in the morning, because when I woke up, she was gone. \n\nAnd sitting in the second room of the suite was April Carlisle, reading a magazine and sipping coffee."
    ],
    "authorname": "jezzaz",
    "tags": [
        "romance",
        "love",
        "intrigue",
        "mob"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/ingrams-and-assoc-4-beneath-the-surface-ch-03"
}