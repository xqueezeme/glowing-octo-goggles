{
    "title": "Baseball Ch. 11: Squeeze Play",
    "pages": [
        "Hopefully this is a worthy finale to the series.\n\n1. All characters are 18+\n\n2. No characters resemble real people\n\n3. Enjoy the fiction\n\n----\n\nBaseball Ch. 11 - Squeeze Play\n\n\"You're pregnant?\"\n\nCasey nodded again, waiting for my response.\n\n\"That's so... wonderful!\"\n\nThe look of relief on her face was so palpable, I felt it through the video screen. \"You're not mad?\"\n\n\"Mad?\" I started to cry. \"How could I possibly be mad?\"\n\n\"I told you he wouldn't be mad,\" said Lani from off screen.\n\n\"It's just, we didn't plan this,\" said Casey.\n\n\"No, we didn't. But I'm so happy!\" I grabbed my screen and spun it around. \"If I was there I'd be hugging you! I can't believe it!\"\n\n\"I'm so glad you're not upset!\" she told me. \"Lani said I shouldn't worry, but I couldn't help it.\"\n\n\"You continue to amaze me, Mighty Casey. There is no greater gift you could ever give me,\" I told her in full sincerity, and she started to cry happy tears. I continued, \"However, this does change our lives a lot. Are we ready for this?\"\n\n\"I don't know. But I know if we're together, we can do it.\"\n\nI had thought about my next idea, but now I was sure of it. \"I know Reading is an hour from Allentown, but I'm moving home. I'll make the drive daily if I have to. And I'll still have to go on road trips. But I can't be separated from you any more than I absolutely have to.\"\n\nCasey smiled widely. \"Johnny. You don't know how happy that makes me. I can't wait for you to come home!\"\n\n----\n\nI told my mom and my sister as I packed up my stuff in Millersport. Both of them cried, extremely happy for us. But then Mom asked an interesting question I hadn't thought about yet. \"What about the wedding?\"\n\nI scratched my head. \"We're still getting married, Mom.\"\n\n\"I know, but are you delaying it? She'll be pregnant during the wedding.\"\n\nI thought about that on my drive, the entire two hours back to Allentown. As soon as I got inside with my first load of bags, I hugged Casey close to me. \"Let's move up the wedding.\"\n\n\"What?\"\n\n\"What?\" parroted Lani from behind her. \"Do you know how much work we've already done for a November wedding?\"\n\n\"I don't want to wait that long. Let's get married in October, right after the season is over.\"\n\nLani started to say, \"That would be so much work...\"\n\nCasey gripped me harder. \"Let's do it. I was actually thinking about that same thing.\"\n\n\"Oh my God,\" Lani groaned. \"Stop being mushy for just a second. It's going to be incredibly hard to move the wedding on a whim like that. Plus, you're the GM now,\" she said, pointing at Casey. \"You don't have the free time to make the arrangements.\"\n\n\"I'll call my Dad,\" Casey said with a shrug. \"He had offered to hire a wedding planner before, but I said we could do it. Now it seems like we need one.\"\n\n\"And everyone's just going to rearrange their schedules?\"\n\n\"If they love us, then yes,\" I said. \"I'm sure our families will be there no matter what. And as long as the Phillies don't make the playoffs, my groomsmen will be there.\" I'd asked Ken Jackson and Drake Walters, my pitcher friends, to do the honors. The Phillies were still in it at the moment, but not likely to make the playoffs this year.\n\nLani sighed. \"You too are crazy.\" Then she hugged us. \"But I love you guys for it.\"\n\n----\n\nMoving the wedding up certainly was work, but Casey and I didn't want to wait longer. Casey had the benefit of showing less of a bump in her dress. She'd only be barely four months along, not five and a half.\n\nI reported to Reading to play for the Fighting Phils. The managers there thought I was crazy when I told them I planned to drive an hour each way, every home game. But they couldn't say anything else about it. They weren't paying for my housing, I was. And I'd rather make the drive than live apart from Casey. Now that it was August, the trade deadline had passed, so I wasn't going anywhere.\n\nThe risk of being traded after the season, or next season, was still a very real thing. I had to deal with that as long as I was a player. Lots of guys, in both major and minor leagues, had wives and kids that they were away from for part of the year. That was just the way it worked. Even so, I worried about it. So did Casey, though she tried to deny it.\n\nI worried less about the wedding itself. The wedding planner, Janet, hit the ground running. She had worked on some of the charity events thrown by Casey's father JJ. Our photographer was still available on the new date, but the venue wasn't. We moved the wedding from the hall in Allentown to another place, just as nice, in Philadelphia. With Janet taking the lead, the rest of us were able to do the small tasks as they came up.\n\n----\n\nThings got a little stranger in mid-August. First, the Phillies got on a hot streak. Suddenly, they were right in the thick of it for the division lead, along with the Braves and Mets. If they made the playoffs, Drake and Ken wouldn't make the wedding.\n\nSecond, Lani was offered a new job in Philadelphia. She was thrilled, but it started in September. She moved out of the apartment and into a new place there. She'd be at the wedding, but wasn't around when Casey needed her.\n\nThis meant, when I was on a road trip, Casey was by herself in the apartment. She said it was a little scary. She'd never lived by herself before. Being pregnant, it made her nervous. \"What if something happened, and no one else was around?\" she asked when I got back in town.\n\n\"You've got someone else with you,\" I said jokingly, patting her still-flat belly.\n\nShe didn't think it was funny, and I apologized. I rubbed her feet until she wasn't mad at me anymore. Then I suggested that she go on the road with me next time. \"The season's almost over, everything is wrapping up. You can do some work remotely. And I only have one more road trip,\" I said. \"If you want, think of it as scouting some of the guys you'll have next year.\"\n\n\"Hmm,\" Casey replied, eyeing me skeptically. \"Where's your last trip?\"\n\nI pulled out my phone to check the schedule. \"Harrisburg, then Akron. Maybe my mom and Morgan can drive up to Akron and see a weekend game.\"\n\nBetween her job and wedding planning, Casey had yet to see me play as a Fighting Phil, at the Double A level. I knew she really wanted to go before the end of the season. Plus, adding my family on at the end was like adding a cherry on the ice cream. I didn't have to twist her arm very far.\n\n\"Okay, I'll come. Tell the team I'm getting my own hotel room, and you're staying with me.\"\n\nThat whole week, I heard little \"whiplash\" noises from a few of the Fighting Phils guys. But I got to spend every night in the arms of my future wife, the future mother of my child. Those guys could snicker all they wanted. I was happy.\n\nAs it happened, Morgan and Mom were available that weekend. They drove to Akron for the Saturday and Sunday games. The three of them wore their Phillies jerseys on Saturday night, the ones they wore at my major league debut. Then they all wore new IronPigs jerseys on Sunday that Casey had brought. Instead of my name on the back, they said \"Grandma\" for Mom, \"Auntie\" for Morgan, and \"Mommy\" for Casey. When they modeled the new jerseys for my inspection, Casey held up a tiny matching jersey that said \"Baby\" on the back, and said that my \"Daddy\" jersey was waiting for me at home. \n\nGod, I love that woman.\n\n----\n\nThe Phillies stayed in the hunt for a playoff spot until the very last week of the season. Then they got swept by the Braves and were eliminated. It was a disappointing end of the season for them. It was strange, that while I was rooting for them, I was also secretly rooting against them. With their elimination, Ken and Drake were available to be my groomsmen after all.\n\nThat Saturday in October, Casey walked in on her father's arm. She looked ravishing; if you didn't know she was pregnant (everyone there already knew), you wouldn't have guessed it. Her white dress had lace on the shoulders, but was opaque the rest of the way. Around her neck was a shiny diamond necklace, but it didn't look new. She'd tell me later it had been her mother's; her father had given it to her as a wedding gift, to wear as her \"something old\" item.\n\nThe other, larger wedding gift from JJ Wentworth was a house. It wasn't a mansion, but it was larger than I'd ever lived in. With four bedrooms, a large back yard, and a finished basement, it was extremely generous. I'm pretty sure Casey knew that was going to happen, but it caught me off guard, and I admit I cried a little. I was happy that, despite my flaky job status, my family would have a wonderful place to live and grow.\n\nI danced the whole night with my new wife, or my mother, or Lani or Morgan, who both looked beautiful in their bridesmaid dresses. Casey tossed her bouquet, and it was caught by Lani. She'd later meet the man of her dreams in Philadelphia, a friend of Landon's. And in turn, she'd introduce Landon to his true love, but that's all another story.\n\n----\n\nBy Thanksgiving, Casey's bump was definitely showing, and by February, she was cursing me and my nether regions. \"Why did I let you do this to me?\" she asked, holding her belly. \"This child weighs a ton.\" We hadn't picked a name yet, as Casey had chosen not to know the gender until birth, so we just said 'the baby' or 'the child' a lot.\n\n\"You liked it at the time,\" I teased.\n\n\"My belly is huge. My breasts are huge. My feet are huge.\"\n\n\"I will gladly rub your feet, if that's what you're after.\"\n\n\"I wasn't, but yes please,\" she said, sitting on the couch. I sat on the floor and rubbed.\n\n\"Are you sure you're up to going to spring training?\" I asked. Casey was about eight months along, and I was a little nervous.\n\nShe nodded. \"Yes, I'm going.\"\n\n\"They don't exactly have the greatest accommodations for soon-to-be mothers.\"\n\n\"Do you not want me to go?\" Her tone made it clear that I was starting to irritate her.\n\nI put my hands up defensively. \"I want you to be happy and comfortable, and our baby to be safe and healthy.\"\n\nShe forced a smile. \"Sorry if I'm grouchy. I'm the GM, it's my job to be there.\"\n\nI resumed my foot rub. \"I understand. And you're allowed to be a little grouchy. Just remember that I'm on your side.\"\n\n\"I know.\"\n\nApparently Casey forgot that the doctor was also on her side. At her next appointment, right before we were set to fly south for spring training, the doctor strongly advised her not to travel. Casey ripped into her, and I had to make the doctor leave the room so I could calm Casey down.\n\n\"It'll be okay. You can do work remotely, right?\" I said. \"And I'll be your eyes down there. Not to mention Chuck and the rest.\"\n\n\"It's not the same,\" she pouted. \"This will be my first spring training as GM.\"\n\n\"I know, I'm sorry.\"\n\n\"I want a second opinion.\"\n\nI smiled gently. \"I don't think they do second opinions for that kind of thing.\"\n\nCasey hung her head. \"Dammit. Now look what you did,\" she said to her stomach.\n\n\"Hey, I'm mad too,\" I said. \"Your due date is March 20. That's still during spring training. I won't be here with you.\"\n\n\"Oh no!\" Casey groaned. \"You have to fly back.\"\n\n\"You'll have to cross your legs until I get back from Florida.\"\n\nShe grabbed me into a hug. \"You'll be here. Promise me you'll be here.\"\n\n\"I promise. I'll even book a flight for March 19th, just to be prepared,\" I said.\n\n\"What if the baby come before that?\"\n\n\"Then I'll be on the very first flight, as soon as I hear from you.\"\n\n----\n\nSpring training went about to be expected. I was told I'd be sent back to Double A in Reading, but with a likely shot at Triple A, back in Allentown. I would just have to take those odds.\n\nThe coaches also asked to see me do a little catching, which I was happy to do. My knees were sore after about twenty minutes, then they started hurting after another twenty. While that was certainly an improvement from last year, it was unlikely I'd be doing any catching this year, except in emergencies, like I had in Millersport.\n\nThere was also a new manager. Bud had retired, and Millersport was now being managed by Franklin Simons. He had played first base for the IronPigs in my rookie season, and retired from playing a little while ago. This was his first coaching job. \"Honestly, I'm nervous,\" he told me. \"I mean, these young kids like me okay, but I don't know if I can help them become a team.\"\n\n\"Start with helping them each individually,\" I suggested. \"Then maybe teamwork will come naturally.\"\n\n\"That's a good way of thinking,\" he said, nodding. \"You ever think about coaching?\"\n\n\"Maybe one day,\" I said. \"First, I'm trying to get back to the big show.\"\n\n----\n\nI got the call at 4 AM on March 16. It was Lani, practically yelling at me. \"Get your butt on a plane, Slugger, it's time.\"\n\nI had just played the previous night, and was supposed to play that day as well. I texted the managers and hopped on the earliest flight I could, straight back to Philadelphia. As soon as I left the airport, I was going to grab a taxi, but then I spotted a man in a black suit holding a sign with my name on it. \"I'm Johnny Mills,\" I said, approaching him.\n\nHe steered me towards a black SUV. \"I'm Oliver. Mr. Wentworth sent me for you. He told me to get you to St. Luke's Hospital as fast as possible.\"\n\n\"Is everything okay?\" I asked jumping in with my bags.\n\n\"The last update I had was that Mrs. Mills was there. I haven't heard any news beyond that, so I'm assuming there's still time.\"\n\nOliver's quick driving got me to the hospital in no time. I was the hospital by noon, and rushed into the room. Casey was already laying back in the birthing position. Her eyes were wide with pain, but when she saw me, she started to cry. So did I, as I rushed to her side. I had made it just in time.\n\nThe miracle of childbirth is hard to describe. But in the end, after the nurses cleaned up our daughter, they handed her to me, wrapped in a pink blanket. \"She's so tiny,\" I said.\n\n\"Our daughter,\" sighed a very exhausted Casey. She touched the baby's small face, stroking her cheek with a finger. \"I love her so much.\"\n\n\"What should we name her?\" I asked. We'd discussed names, but since we didn't know the gender, we never came to a conclusion.\n\n\"Jacqueline. And we'll call her Jackie.\" Casey reached out and I handed the precious bundle to her.\n\n\"Jackie. After another famous baseball player?\" I smiled.\n\n\"Of course. Jackie Mills has a nice ring to it.\"\n\n\"Jackie Elizabeth Mills?\" I suggested. \"After your mother?\"\n\nCasey nodded. \"Yes, it's perfect.\" Then she looked down at our daughter. \"Hi Jackie. We love you so much.\"\n\nJJ and Lani both came in as soon as they were allowed. It was touching to see JJ hold his first grandchild. We had to settle for video chats with my Mom and Morgan, until they were able to visit a couple weeks later during their spring break. And of course, we had to wear the matching jerseys for a photo session. Lani made fake gagging noises at how cheesy we were, but even she said the pictures were too damn cute. Wearing her tiny jersey, Jackie was officially the newest member of the IronPigs family.\n\n----\n\nAfter Jackie was born, I had to go back to work. On homestands, I would make the daily drives to Reading, play a game, and drive back home to Allentown. There waiting for me would be my wife and my infant daughter. I'd change diapers whenever I could, especially knowing I couldn't when I'd be on the road.\n\nI was two months in when I realized things had changed in my career aspirations. I still enjoyed playing baseball, and I still wanted to get back to the majors, but... let's say my priorities had changed. My heart broke every time I went on the road, and rose every time I came home. Even the drive to Reading, which wasn't too bad last season, became an irritating chore.\n\nOn top of everything, trade rumors had started again. There was talk of sending me to the Cubs organization, where I could possibly be sent to their Triple A team in Iowa. The mere thought of that made my stomach twist in knots.\n\n\"I don't know how long I can keep doing this,\" I told Casey one day. I held Jackie in my arms. \"It's increasingly unlikely I'll make it back to the majors, in any position. I mean, I'm 28 and still in Double-A. And even if there was a shot, I'd rather be home with you.\"\n\n\"Me too,\" Casey said. She had a short maternity leave and went straight back to work, leaving Jackie with a sitter most days. \"It would make life easier. And I still miss you when you're gone.\"\n\n\"And I'd really hate it if I got traded away.\"\n\n\"Other players have to be away from their families sometimes,\" she pointed out.\n\n\"Most guys have their families follow them, living in the city they're in. We can't do that, because you need to be here. Besides, you're in your dream job. I'd never ask you to leave it behind.\"\n\nCasey kissed me on the forehead. \"So what do you want to do?\"\n\n\"Maybe I'll quit. Maybe I'll leave it all behind. I can get a normal job.\"\n\n\"No, you can't. You still love baseball. It's still your dream.\"\n\n\"My dreams have changed,\" I said, and looked from her to the sleeping girl in my arms. \"My family is my new dream.\"\n\nCasey wrapped her arm around me and kissed my cheek. \"And I love you for it.\" She looked into my eyes. \"You should do what you want to do.\"\n\n\"Even if that's quitting?\"\n\n\"If you quit, you're getting another job. You're not sitting around here unemployed.\"\n\nI smiled. \"Well, I've had thoughts about that.\"\n\n----\n\nI went to the Fighting Phils office and laid out my demands. I'd finish the season, and then retire as a player. I'd accept a promotion to Triple A, if possible, since that was home. But I warned that if they tried to trade me, I'd outright quit. The GM wasn't happy about that. Turns out, those trade rumors were true. I had been about two days from going to Iowa. They reluctantly agreed not to trade me.\n\nI did end up getting promoted back to the Lehigh Valley IronPigs by the end of July. Chuck was more than happy to have me back. Even though I was a first baseman now, I was the backup, so I didn't play every day. I worked closely with Chuck and with Mike Karnes, the pitching coach, to give tips to the younger pitchers and catchers.\n\nI still had to play home games, and go on road trips, but I spent every other second of my life doting on Casey and Jackie. During the summer, my mother came and stayed with us for a few weeks, spoiling her only grandchild with kisses and attention.\n\nThen I retired as an IronPig. It was bittersweet. In my last game, a home game, JJ hosted our whole family in the box: Casey and Jackie, Morgan, Mom, and Lani. I started at first, but mid-game, Chuck surprised me. \"Mills! How's your knees?\"\n\nThere was only one answer to that. \"Just fine, skip.\"\n\n\"Get your pads ready. You'll play the last two innings behind the plate.\"\n\nSo, for the top of the eighth, I put on my pads and mask, and went out to home plate. I looked up to the box, where most of my family sat. Mom was holding six-month old Jackie, who was growing blonde hair like her mother's. But Casey wasn't there.\n\n\"Hey Mills!\"\n\nI looked down to find my wife right there, now sitting in the front row. She called to me, \"I'm right with you, honey!\"\n\nI grinned. It was exactly as the saying goes: behind every good man, there's a great woman. Through it all, the Mighty Casey was with me, and would continue to support me, no matter what.\n\n----\n\nExtra Innings (Epilogue) - Ten Years Later\n\n\"Your curve is shitty today,\" I told a young pitcher. \"What are you doing? It was way better yesterday.\"\n\n\"Sorry, skip,\" he responded. \"My right elbow's a little sore today.\"\n\n\"So you're not giving the ball as much spin,\" I nodded. \"Throw a few more fastballs, then go ice your arm. I don't want you over-exerting yourself. Clear?\"\n\n\"Yeah, skip. Clear.\" He resumed his throwing while I walked over to the baseline to observe.",
        "\"Dad!\" came a voice from behind me. I turned to see Jackie running towards me, baseball glove in hand. Her little sister Mickey and their lovely mother trailed not too far behind. All three girls wore their blonde hair in ponytails coming out of the back of their IronPigs caps.\n\n\"Hey girls,\" I said. Seeing them always put a smile on my face. \"You're early.\"\n\n\"No, you're late,\" said Casey. She was dressed in her replica of my old Phillies jersey. \"You said practice would be over at 5.\"\n\n\"You're absolutely right,\" I said, giving her a kiss. \"Randy! Hit the showers.\" I yelled at the pitcher. \"Thank the girls for your early reprieve.\"\n\nHe grinned. \"Thanks ladies,\" he said, and trotted off the mound.\n\n\"Bye Randy!\" said both my daughters. Both had grown up like their mother: blonde and beautiful, intelligent and determined. And, just like their mother did at that age, they had free reign over most of the stadium.\n\nAfter I retired as a player, Casey used her power to get me hired on as a coach for the IronPigs. I worked with Chuck and Mike for two years, then Chuck retired and Mike was hired as the pitching coach of the Pittsburgh Pirates. The Phillies organization named me the new head coach of the IronPigs, and I worked alongside Casey to run the team and develop the young talent.\n\nJackie was ten now, and she was a pitcher. It was sometimes hard to get her to wear a skirt or dress, as she said she was most comfortable in her baseball pants. Gender barriers be damned, as she wanted to play in the majors some day. She played on a youth baseball team with all boys and two other girls, her best friend Lindsay and her little sister. Jackie saw more and more women playing on college baseball teams, and she dreamed of being an IronPig someday.\n\nMickey was eight and wanted to be a shortstop, or an agent, or a teacher like her Grandma - she kept changing her mind. It was her first year on the baseball team with Jackie, and both girls were amazing, constantly outshining the boys. And yes, Jacqueline \"Jackie\" and Michelle \"Mickey\" were both named for legendary baseball players, just like their mother and father.\n\n\"Daddy, you promised we could play,\" Mickey said.\n\n\"I did promise. Let's play,\" I said. Every Monday evening during the summer, assuming the team was at home, Casey would bring the girls to meet me at the stadium, and we'd play on the field before having a family dinner. Sometimes we would have guests join us. Aunt Morgan loved to come to town to visit her nieces, whenever her schedule allowed. Sometimes Lani would make the trip up from Philadelphia. \n\nCasey took the field, halfway between second and first bases. Mickey grabbed a bat and stood in the batter's box, and faced Jackie who was stretching on the mound (or rather, just in front of it, as she wasn't strong enough to throw that far yet). We'd all take turns at batting and fielding. But Jackie loved pitching, and loved pitching to me, her personal catcher. \n\nI crouched at the plate. My knees had gotten better, very gradually, and I could do it now with only a little pain, and only if I did it a lot. I'd never play in a professional game again, but even if I could, I'd gladly give it up to keep what I have now. I'd given up on the major leagues, and somehow still made my dreams come true.\n\n \n"
    ],
    "authorname": "Octave888888",
    "tags": [
        "baseball",
        "sports",
        "blonde",
        "romance",
        "wedding"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/baseball-ch-11-squeeze-play"
}