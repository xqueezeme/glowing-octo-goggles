{
    "title": "Chrissy's Deception Pt. 03",
    "pages": [
        "Chapter Seven \n\nFrom the moment that Chrissy walked out of the front door of the ranch, Mike had been plotting to be with her again. She had told him that she wanted a baby, but he really didn't think her future plans included a husband! So Mike had kept his own future plans to himself - he hadn't told Chrissy that his time in the Marines was up because he didn't want to scare her away. \n\nEven before meeting Chrissy, though, Mike had been in the process of getting his retirement in order. At this point, all he needed to do was to get back to base, finish up the paperwork and close up his office. He had already applied for his terminal leave and it would begin in the middle of January. He would then have about 2 months before he was officially discharged, but he would be on leave for the whole time. It was a nice way to have some income and not have to worry as he was trying to figure out where he was going next. And where he was going next was definitely somewhere very close to Chrissy. \n\nIt took Mike the full two weeks to finish all that he had to do in order to process out of the Marines. Time took on an unreal quality for Mike with one moment seeming to pass quickly and the next moment seeming to drag on forever. He was anxious to get back to Chrissy, but he was really excited about bringing his successful military career to an end. He had done well as a Marine and there were lots of friends that wished him well. It was with great pride and pleasure that, on January 15th, he closed his office door and turned in his key. Mike's car was already packed and pointed out of town. Next stop - Chicago! \n\nOver the past three weeks, Chrissy's life had been busier than ever. She had returned to work on Jan. 2nd and immediately immersed herself into the world of corporate loans. Rather than allow for the possibility of having any extra time on her hands to mourn for her loss (both of Mike and the child she had hoped for) she took on even more of the loan applications than before. She found herself being asked out to dinner, by more than one male client, in order to finalize their loans. Chrissy marveled that, just when she no longer cared about getting male attention, suddenly she seemed to attract it. Even though she had no intention of pursuing a relationship with any man, she accepted the dinner meetings and closed deal after deal for the bank. Although her personal life was in shambles, her professional life had never looked better. \n\nSo, when her intercom buzzed on a bright Monday morning in the middle of January, Chrissy answered it with her usual, \"C. M. Stanton - may I help you?\" The intercom was wired throughout the whole building and it wasn't unusual for a new employee to call the wrong office. It was always safer to identify herself. \n\n\"Ms. Stanton? There is a client here who needs to speak with you,\" came the hesitant reply from the information desk receptionist. \n\nChrissy had worked with the bank long enough that she didn't have to handle the day to day customers. She only worked with the corporate accounts, and those meetings were arranged by appointment only. Annoyed at the interruption, she responded, \"I'm afraid that I am not able to meet with anyone this morning. Is it possible that another of the loan officers might be able to help our customer?\" \n\nChrissy was hoping that the receptionist would take the hint and direct the customer elsewhere. But her hopes were in vane as the young woman replied quietly, as though trying to keep someone else from hearing her, \"I'm sorry, Ms. Stanton, but he refuses to speak to anyone else!\" \n\nChrissy huffed out her annoyance but answered sweetly, \"Very well. Ask our customer to give me a moment and I'll be right there.\" As she made her way out of the back offices into the main area, she pasted on her best smile. She approached the information desk, thinking about a few odds and ends she needed to wrap up, and vaguely wondering just what this customer wanted. \n\n\"Katie? Is our customer here? The one that needed to speak with me?\" Chrissy asked the receptionist. \n\nKatie's eyes were big and round as she pointed over to some chairs that made up a small waiting area. \"It's the gentleman over there,\" she said. \n\nChrissy wasn't sure what the man had done to intimidate Katie so badly, but she knew that she would need to do a little damage control when this meeting was over. Either that, or find a new receptionist since this one seemed about to short circuit! \n\nAs Chrissy approached the area, she noticed that there was only one person in the waiting area. The man had his back to her. He was wearing a baseball cap and an old blue jean jacket. Not exactly the kind of corporate clothing she was used to her clients wearing. She cleared her throat, \"Excuse me? I'm Chrissy Stanton.\" \n\nWhen the man turned around and looked Chrissy in the eye, her legs gave way under her and her face turned ashen. He was beside her instantly and guided her into a chair, squatting down beside her. Her heart was hammering and she felt like she couldn't breath. Her mind kept screaming, \"It's Mike! It's Mike\" - Mike couldn't really be here - could he? \n\nBut it was Mike and he was grinning at her like a Cheshire cat. Chrissy reached out and touched his face. Mike turned to kiss her palm. Chrissy's eyes widened even more, \"Mike? Are you really here?\" \n\n\"Yes, Ms. Stanton, I'm really here!\" he answered, with a twinkle in his eyes. \n\nChrissy realized that the receptionist had turned around in her seat and was watching them with great interest. Several of the tellers were also moving around behind the counter trying to get a better view of the waiting area. For the sake of deterring office gossip, Chrissy realized that she needed to get Mike out of such an open area and she needed to do it fast. \"Why don't we go discuss your loan in my office, Mr. O'Connor?\" she asked with business like politeness. \n\nMike took his cue and stood up, offering her his hand. She accepted it only to stand, then broke the contact. Although disappointed that she hadn't held onto his hand, Mike obediently followed her out of the front office and down a hall into the back. Personnel offices lined the walls in this area of the bank. Chrissy turned into one of the doors on the left which had her name printed on it in block letters. Mike had a brief moment to register that her office was rather Spartan in appearance with nothing more than two rather generic landscape paintings on the walls. \n\nThen Chrissy was closing the door and suddenly all of his attention was focused on her. Her face had gotten a little bit of color back in it. She was wearing a pale green jumper with a hot pink turtle neck under it. In the dead of a Chicago winter, Chrissy looked like the blessed breath of spring. Her flaming red hair was drawn back into a twist, but several soft stands hung loosely around her face. Mike's heart warmed when she pushed her sleeves up on her arms, and he heard the familiar jingle of her charm bracelet. She was everything he remembered and all that he would ever want. But the look on her face said that she was less than amused at his presence. \n\n\"Mike, what are you doing here?\" Chrissy asked quietly, in a pointed and measured tone. \n\n\"Well . . . \", Mike drawled, \"I was hoping you could help point a newcomer in the right direction for getting a job.\" \n\nChrissy looked at him suspiciously. \"Just who is it that needs a job?\" she asked. \n\nMike's face broke into a huge smile. \"Sweetheart, you're looking at him!\" he said. \n\nChrissy felt the blood drain out of her face once again. \"Wh-what are you talking about?\" she stammered. \n\nMike moved over to one of her chairs and dropped down into it. \"Well, when I got back, I packed up my bags, locked up my office and retired from the Marines. Now, I'm living the civilian life! I thought I might just settle down here in Chicago and make a go of it in the city. I've never lived anywhere like this before!\" \n\nBefore she could stop herself, Chrissy gave a cynical laugh at that comment. If Mike was surprised at her reaction, he didn't show it. He just sat there, looking around her office, like he was considering moving in to it. \n\nNone of the fantasies that Chrissy had entertained over the last 3 weeks had prepared her for this moment. Never, in her wildest dreams, had she imagined Mike out of the military. The Marine Corps was his life. What was he going to do now? More importantly, what was she going to do now? \n\nChrissy realized that she was still standing against the door. She crossed the room and sat down in her own chair. She felt a little more balanced with her desk in between Mike and her. But her thoughts were still in a muddled mess. \"Mike, why would you come here?\" she asked, sounding rather plaintive even to her ears. \n\nMike looked as though he was actually pondering the question. Then, out of the blue, he asked, \"So are you pregnant?\" \n\nThat question was so far out of the range of possible things that Chrissy had expected Mike to say that it took her several minutes to recover enough to answer. Mike knew the answer from the look on her face long before she formed the words to tell him \"no\". \n\nUntil that moment, Mike hadn't totally comprehended how much he had hoped that she was carrying his child. The news that she wasn't hit him like a ton of bricks. He actually felt a physical pain in his chest at the loss. He lowered his eyes to hide his reaction from Chrissy. He struggled to get control of himself and to formulate a plan. Maybe this was just the break he needed. \n\n\"I'm sorry, Chrissy,\" he said quietly. He continued, \"I know how much you were hoping to be pregnant. Have you gone ahead with the artificial insemination?\" His gut was clinching at the idea that she might not be carrying his child, but that she was willing to try to carry some other man's. He was hoping she hadn't had time to pursue her original idea for getting pregnant, but he needed to be certain. \n\nMike hadn't thought that Chrissy could ever look any sadder than she had on the morning that she had last left him. But the look in her eyes at that moment rivaled the pain he had seen the last time they had been together. \"No, Mike. I haven't been artificially inseminated. I won't be pursuing that any further,\" she answered him in a voice thick with emotion. \n\nThe look that Mike gave her showed his surprise, \"You've dropped the idea of having a baby?\" \n\nChrissy took a deep breath before she answered. \"Yes. No. Well, sort of. What I mean is that I'm not going to be getting pregnant.\" At the completely startled look on Mike's face, she continued, \"I wanted to get pregnant because I thought it would be the most fulfilling physical experience of my life. I wanted to feel, within my own body, what it was like to intimately hold another human being - to be one with another person even if it was only for nine months. But after Christmas, I had to admit that it would be impossible for me to ever experience anything that could top the intimacy that I shared with you. Even carrying a child in my womb couldn't compare to what you and I had. Therefore, I dropped the idea of artificial insemination. I will be going forward with my plans to adopt, but I won't follow up on the other.\" \n\nMike couldn't have been more surprised if she had told him that she was an alien. He knew that he had never experienced anything like the passion that they had shared, but, to hear Chrissy admit that it had meant just as much to her, shook him to the core. Mike wanted to jump over the desk right then and show her exactly how much she meant to him - how much he loved her. He held himself back, though, realizing that he needed to bide his time. She wasn't pregnant, and she wasn't going to get that way without his help, so he had a chance. Now he needed to not blow that opportunity. \n\nWith as casual of a voice as he could muster, Mike changed the subject, \"Look, I know that we are taking up your work time. Will you have supper with me tonight?\" When he saw the hesitation on her face, he added, \"Please? I don't know my way around yet and I really could use a local's help.\" \n\nChrissy couldn't hide the trepidation that she was feeling. She took a few moments, then said, \"Do you promise that it's just dinner?\" \n\nMike looked confused. \"What else would it be?\" he asked. \n\nChrissy sighed in frustration, \"I don't know! I just know that I can't handle any more than dinner right now. I'm still stunned that you are here and my mind is all messed up and now you want to go out and I don't know what it is that you really want and I don't know why you are really here and why you picked Chicago and I'm not sure if I can handle all of this!\" \n\nMike would have laughed at her run-on explanation, if she hadn't been so serious. So he stifled his smile and said, \"It's ok, Mickey. I just want supper.\" \n\nAt the sound of her nickname, Chrissy's bones seemed to melt. She was glad she was sitting down, because her legs wouldn't have held her up at that moment. When Mike called her Mickey, it reminded her of the most intimate caresses they had shared. She swallowed hard and said, \"Meet me here at 6:00. I'll make arrangements for dinner and then I can show you the city.\" \n\nMike was much more interested in seeing Chrissy than he was in seeing the city, but he didn't let on. He thanked her adding, \"It's really good to see you again. I've missed you.\" Then he was out the door and gone. \n\nChrissy felt like she had just been run over by a truck! Or did she feel more like she had just ridden an emotional roller coaster? OK, maybe she felt like she had been run over by a truck while on an emotional roller coaster. Yeah, that sounded about right! She sat, stunned, at her desk, trying to put her thoughts back together. Mike was out of the Marines. Mike was in Chicago. Mike was going out to dinner with her. And, damn it, she hadn't even got around to kissing him! \n\nThe rest of the work day was virtually wasted. Every time Chrissy looked at the numbers on the papers in front of her, they kept swirling around into heart shapes. The image of Mike's face kept floating to the surface of her mind. Her palm kept tingling from his kiss. And her body kept quivering, remembering what they had shared together. She was so relieved when the clock finally chimed six that she almost shouted for joy. Then, breathing a sigh of relief, Chrissy locked up her office and headed out the front door. \n\nMike was standing outside of the bank, on the sidewalk, waiting for Chrissy when she came out. He had changed into the outfit she had bought him for Christmas. He looked so handsome. Suddenly she remembered the rest of what she had bought him and wondered if he had on the silk boxers. Her face turned bright red as she chastised herself for such a thought. \n\nShe reminded herself that Mike had wanted her for sex over the holidays. Now that he was out of the Marines, and living in a new city, there would be lots of women interested in keeping his bed warm at night. Chrissy knew she didn't have what it took to compete against the beautiful women of the world in order to win the affections of a man like Mike. She wished she could just be happy that he was willing to be her friend. \n\nChrissy tried to tell her heart that knowing that Mike could have his choice of women shouldn't hurt. They had had a deal and now it was over. He had looked her up because she was a familiar face in a new place - and that's all there was to it. But her heart knew that it was much more than that for her and it just kept aching for him. \n\nMike reached out for her hand as soon as she was close enough. His grasp felt warm and secure and Chrissy longed to lose herself in him. She was afraid that she wasn't special to Mike, except as a friend, but she wanted so much more. \n\nAs she felt a sadness creeping up on her, Chrissy brushed aside those thoughts. Anyway, she told herself, they had dinner reservations at her favorite restaurant so she didn't have time to stand in the middle of the cold Chicago streets mooning over Mike. She forced herself to smile up at him. She said, \"We can walk to the restaurant then come back afterwards and pick up my car. I'll drive you around to see some of the sights after dinner\". Mike nodded his agreement and they started off down the street. \n\nThe restaurant that Chrissy had chosen was an Italian diner. The owners were original immigrants and Chrissy promised that the food was excellent. The atmosphere was loud and festive. When Chrissy walked in, several of the staff called out greetings to her by name. Mike was surprised by that because he had pictured Chrissy as a woman who was quiet and kept to herself in the city. But obviously, in this place at least, Chrissy was not a wallflower. \n\nAfter they were seated, the waitress brought them a bottle of wine to sample. Chrissy declined, saying that she needed to drive home later, but she encouraged Mike to try the offering. It was truly some of the best wine he had ever tasted. The waitress poured him a glass and promised to bring more when he finished that. \n\nAs soon as the first waitress left their table, and before Mike had a chance to even get Chrissy's attention, a different waitress came over to them. This woman sat down by Chrissy and hugged her tightly. After she left, the host came over and kissed Chrissy on both cheeks. Finally, the owners arrived at the table and pulled Chrissy out of the booth to hug her. Not that he didn't like her himself, but Mike was amazed by everyone's open affection for Chrissy. \n\n\"Just how well do you tip these people?\", he joked when they were finally alone for a moment. \n\nChrissy just laughed. \"I met them all when I first moved here. I needed a roommate to share expenses. The owners' daughter was insisting on moving out of the family home, but they were horrified that she might fall in with a bad crowd. I offered to let her move in with me until she had a chance to get to know more about the world. She ended up living with me for about a year. I really enjoyed it and she had a taste of life outside of her family.\" \n\nMike sat, waiting for her to finish the story, but Chrissy seemed oblivious. When she continued to remain silent, he finally burst out, \"Well??? What happened then?\" \n\nStartled, Chrissy laughed out loud. She hadn't realized that he wanted to hear more. She said, \"At the end of the year, she met a good Italian boy from next door, took him home to meet the family and was married before the end of the next month! Her family thinks that I had something to do with getting them together and they are just so thankful that I chose an Italian! The truth is that I had no idea who my neighbors were at the time - their daughter went out on her own and met the people living around us. I'm just glad that, in the end, it was Nicky who lived next door to me and not some ax murderer!\" \n\nMike chuckled at her story and the sound filled Chrissy's heart with warmth. She knew that she had been miserable for the last few weeks, but until that moment, she hadn't realized just how empty her life had been without Mike. \n\nThroughout dinner, the staff kept coming over and talking to Chrissy. She introduced Mike to everyone as her brother-in-law. When there was a lull in the visitors, she whispered, \"Since they are Italian, family means everything. They will understand our relationship a lot better if I couch it in terms of family.\" \n\nMike nodded his head, sagely, but inwardly he wondered about her comment. He was glad that these people could \"understand\" their relationship, because he sure couldn't! \n\nAfter dinner and many well wishes and good-byes, Chrissy and Mike walked back to her car. Mike was glad to see that Chrissy's life wasn't a lonely one. When she had said that she had a simple, quiet life in Chicago, he had been afraid that she meant that she didn't have a lot of friends. He couldn't imagine that being the case, but he was still glad to have evidence that it wasn't. Although he certainly didn't want her to have any special male friends, he was pleased that she had so many caring friends. ",
        "Once inside the car, Chrissy realized that she hadn't yet asked where Mike was living. Her plan was to drive around his new home and show him what was available nearby. When she asked him where his apartment was, the sheepish look on his face made her suspicious. Finally he said, \"Well, I'm actually still in a motel.\" \n\n\"A motel? What are you doing in a motel?\" Chrissy asked. If the man was planing on living in Chicago, why was he still in a motel? Why hadn't he at least gotten an apartment? Then another thought hit Chrissy. \"Exactly when did you get to town, Mike?\" she asked. \n\nMike actually blushed before he answered, \"I got in about 10:00 last night.\" \n\nChrissy's mind went into hyper drive - 10:00 last night? That meant that the first thing he had done in Chicago was come to find her. That had to mean something, didn't it? Her heart skipped a beat, thinking how much she was hoping that it really did mean something. \n\nFinally, Chrissy said, \"Well, if you are serious about staying here, I'll drive around to some of the better places to live. You can get a feel for some of the neighborhoods.\" \n\nMike started to say something then stopped. Chrissy noticed and asked what he had wanted to say. Mike cleared his throat and started again, \"You just said, 'if I was serious about staying here'. And earlier today, in your office, it sounded like you weren't happy here anymore. If it's too personal to tell me you don't have to, but I was wondering what you meant.\" \n\nChrissy gave a short laugh. She pointed the car toward the west side of the city before she answered. \"Don't get me wrong. Chicago is a wonderful place, but I've lived here for almost 10 years now. Life here is fast paced and exciting. I'm just tired - tired of the hustle and bustle. I'm tired of the traffic. I'm tired of the winters. I'm tired of not having my family close by. I know it's my own fault for the way I have chosen to live here, but I'm ready to go somewhere where I can be comfortable enough to let myself experience life instead of rushing through it.\" \n\nMike could barely contain his excitement at her words. He didn't have strong feelings about where he lived as long as he was with Chrissy. But if he had a choice, the truth was that he wanted to go back to Boise. He wanted to live near his brother. He wanted to be a part of his family again. And he wanted Chrissy to go with him. He tried to make his voice appear natural as he said, \"So, if you could live anywhere that you wanted to, where would you go?\" \n\nAgain, Chrissy gave a short laugh and shook her head, \"I want to go home. I want to live near Tracy. Over Christmas, I realized how much I missed the ranch and everything that goes with life in a place better suited to me.\" \n\nMike asked, \"So why don't you?\" \n\nChrissy looked over at him as she continued to drive, \"Why don't I what?\" \n\n\"Why don't you go back home?\" Mike prompted her. \n\nChrissy sighed and said, \"It would never work. I have an awesome job here and I can't just give that up. Anyway, I don't have anywhere to live there. I sure don't want to move in with the newlyweds.\" \n\nMike was quiet for a few minutes. Then he said, \"Chrissy, you are just making excuses. I know that you could request a transfer to a branch of your bank in Boise. And I know that there were at least three small homes sitting on land touching your sister's ranch. And two of them were for sale. Is there something else holding you here? Maybe somebody?\" \n\nIt was Chrissy's turn to be silent. She hadn't given any serious thought to leaving. It had been a long time since she had felt happy about where she lived, but she had just gotten into the rut of accepting it as a fact of her life. It had taken Mike less than one day to see what she hadn't seen for years. She had options - she could change the course of her life. As she thought of the possibilities lying in front of her, she felt excited. When she turned to look at Mike again, her eyes were sparkling with interest. \n\n\"I really could go home, couldn't I? I could do exactly what you just said. I could transfer my job, sell my condo and move back to Boise. I hadn't even thought of that!\" she said. \n\nMike knew that this was the opportunity he had been waiting for. He casually offered, \"Chrissy, I think that's exactly what you ought to do if it would make you happy. And I would love to help you anyway that I could. Maybe I could help you pack up. In fact,\" he paused as though he had just thought of it, \"I could maybe even help more if I was living near you. Since I haven't gotten a job yet, I could pack up your stuff and run any errands for you while I'm looking for interviews. Are there any condos for rent in your building?\" \n\nAt that moment, Chrissy was too excited with all of her new thoughts to bother trying to hide her feelings for Mike. She didn't stop to think before she blurted out, \"Why don't you just move in with me? It's not like we are strangers. Anyway, I won't be staying here long, if the transfer goes through, but, in the meantime, you would have a place to stay until you can get settled.\" \n\nYES! That was exactly what Mike had been hoping for! He once again tried to sound casual when he replied, \"Well, that does sound like a reasonable idea. But only if you are sure.\" \n\nMike realized he was holding his breath, waiting for Chrissy's response. When she said, \"Well, of course I'm sure. I have so many things to do,\" Mike let out his breath, as Chrissy continued, \"We can't tell Mark and Tracy - I want to surprise them! Tracy will never believe that I'm coming home. I need to . . . \". Mike wasn't listening to her at that point. He was too busy congratulating himself on getting her to let him stay with her. Now, he just needed to make that arrangement permanent. \n\nWhen Chrissy realized that she didn't need to show Mike around town, she asked for directions to his motel, so he could pick up his stuff. She waited in the car while he checked out. He came back to the car and threw a duffel bag into the back seat before climbing into the front. \n\n\"Where's the rest of your stuff?\" Chrissy asked. \n\nMike looked at her and grinned. Then he answered, \"What you see is what you get! That's all the stuff that I own in the world, right there in that duffel.\" \n\nStartled, Chrissy looked at him like he was kidding. \"Are you serious?\" she asked, incredulously. \n\nMike just laughed, \"I moved around a lot in the Marines. I had more stuff at one time, but then I had to travel a lot during the war with Iraq. My General was needed in a lot of different places over a long period of time, so I just figured I didn't need anything to tie me down. I sold off everything, except my clothes.\" \n\nChrissy thought for a moment, \"Well, when you do find an apartment, you can get one already furnished. That way you can take your time and pick out furniture that you really like for when you settle down.\" Mike wasn't about to tell Chrissy that the only furniture that he wanted in his future home was the furniture that she already owned! He hadn't even seen her condo yet, but he knew that it didn't matter if she used milk crates for her chairs. He was going to love it, just because it was hers. \n\nWhen they finally reached her home, Chrissy led Mike up the flight of stairs. It was a nice section of town and the buildings were in good shape. Mike was surprised to realize how pleased he was to know that Chrissy had enough sense to take care of herself in a place like Chicago. It was just another fact about her that made him strangely proud of his lover. \n\nThe condo was simple with only a kitchen and living room, two bedrooms and a bathroom. There was a small lake in the back, so the view from the windows was quite nice. There were lots of windows and Mike imagined that it was a very sunny little place in the daylight. Chrissy's furniture was all light colored and the carpet was a pale blue. All in all, Chrissy's home was pleasant to be in. \n\nBut Mike wasn't overly interested in assessing all the details of her condo right then. He wanted to get Chrissy in his arms. She had told him to make himself comfortable while she went to change out of her work clothes. He had done a quick walk through to familiarize himself with his surroundings, but now he was impatient to be with Chrissy. As he wandered past her bedroom door, he noticed that she hadn't closed it all the way. He nudged it open with his foot. \n\nChrissy was standing in front of her bedroom mirror in her panties and bra. She was brushing out her long red hair. The tantalizing picture she made caused Mike to suck in his breath. Chrissy jumped when she heard him. \"You scared me to death!\" she accused him, with her hand over her heart. \n\n\"Had you forgotten that I was here? Or were you expecting me to suddenly be someone else?\" he teased her as he crossed the room toward her. \n\nMike's words might have sounded light and playful, but the look in his eyes was anything but! Chrissy could see the desire in them even before he reached out to touch her. He let his right hand trail from her cheek, down her neck, over the swell of her breast. When he cupped her breast from underneath, his left hand wrapped around her head to pull her mouth to his. Chrissy moaned out loud as she felt his lips on hers for the first time in weeks. She had never thought she would taste Mike again, and now that she had the opportunity, she found that she couldn't get enough. \n\nIt was only a matter of seconds before the two of them fell onto Chrissy's bed. Mike raised up over her to look at her. He whispered, \"Please don't make me sleep in the guest bedroom tonight.\" \n\nChrissy's throaty laugh was all the response she was able to make. Instead, she answered in a way that she was sure he could understand. She began unbuttoning his shirt and kissing him over and over. \n\nMike let Chrissy struggle with his buttons for a moment, and then he jumped off the bed. He stripped his shirt and pants off in an instant. Chrissy's breath caught in her throat as she saw that he did have on the silk boxers. She looked up at him and saw the hint of amusement in his look. \"Go ahead and say it,\" he said, \"I know you are dying to!\" \n\nChrissy just laughed and answered, \"I'm just glad that you like them, my sweet Jar Head!\" \n\nThat was the last of the conversation for the next little while. Words weren't needed as Mike reacquainted himself with Chrissy's body. He touched every curve and each place that he had missed so badly over the past few weeks. Chrissy touched Mike's body with a reverence forged out of the long nights of loneliness that she had thought would never end. After long minutes of exploration, the passion that their touch created began to burn out of control. \n\nMike had wanted to make their reunion last as long as possible, but from the fire raging within him, he realized that he had just about reached his own limit. Chrissy opened willingly to his touch and he sank himself into her in one solid thrust. The moan that ripped from Chrissy's throat matched the one that came from Mike's soul. Their bodies were made for each other and they belonged together. \n\nMike had worried that he wasn't going to last long enough to please Chrissy, but as her climax overtook her, he realized that he needn't have been concerned. As he felt her muscles tense into the involuntary contractions that signaled her release, Mike gave into his own desire. He began thrusting into her rapidly, lasting only moments before his own explosion. \n\nAs Mike and Chrissy lay entwined with one another, Chrissy thought her heart might burst from the love she was experiencing. Never had she imagined that she would have the opportunity to love a man like Mike. Although she told herself that this was still just sex for Mike, she couldn't stop her heart from soaring with the knowledge that, for a few short weeks, Mike would still be a part of her life. And, even though it was only temporary, she would enjoy each moment, without worrying about how she would feel when it was over. \n\nMike didn't leave Chrissy's bed that night. And over the next few weeks, the guest bed was never used. Chrissy put in her request for a transfer. Her boss and her co-workers had tried to talk her out of her request, telling her how much they needed her and how well she did her job. But Chrissy was adamant and the request was submitted to be processed. Then she put the condo up for sale with the contingency that she be allowed to live there until the transfer went through. Within 24 hours, she had a full price offer, with all conditions approved. Each day seemed to move her closer to Idaho. And each day also seemed to move her closer to Mike. \n\nChapter Eight \n\nChrissy and Mike spent every possible moment together. Chrissy showed Mike the city and they dined out in fine restaurants and even danced in a few bars. Each night was filled with a wonderful combination of passion and contentment. Although they made love often, they were just as happy when they only had the energy to snuggle together. They laughed a lot and shared things with one another that they had never told anyone else. And every night, they talked about the ups and downs that went along with ordinary living. As the weeks flew by they grew more and more comfortable around each other. \n\nOver dinner out one night, during their third week together, Mike had been telling Chrissy about some of the dinners and state functions that he had been called upon to attend due to his job with the General. He had made her laugh with stories about the expectations that some of the dignitaries had. Special foods and wines were the order of the day when certain visitors came to call - and for some there even had to be specific silverware and their own personal crystal glasses for the champagne. He had painted pictures of men and women that Chrissy couldn't imagine ever even meeting, let alone having casual conversations with. Yet Mike had seen and done it all. Even though he didn't dwell on any of the ladies from his encounters, Chrissy could only imagine that he had been able to take his choice of admirers on many occasions. \n\nWhen Mike noticed that the spark in Chrissy's eyes had dimmed while he had been telling his last story, he reached over and took her hand. \"Chrissy, what's the matter? Is something wrong? You seem to be lost in thought,\" he commented. \n\nChrissy looked at him with a genuine sadness in her eyes. Mike wrinkled his brow as he waited for her response. Finally, she said, \"Mike, look, I know I'm not the kind of woman you are used to spending time with. I'm not worldly, I'm not sophisticated and I don't even know anyone remotely famous. I know that you have been spending all of your time helping me get ready for my move, but honest, if you want to go out and start dating, it would be ok.\" \n\nMike sat, staring at her in stunned silence. Of all the things he had expected, having Chrissy tell him to get lost hadn't been one of them. He swallowed several replies before he finally managed to say, \"Is there some reason you don't want me around? I thought we were having a good time together. Is there someone else?\" \n\nChrissy's eyes flew open wide. In an effort to make him understand, Chrissy didn't take the time to measure her words, \"NO! Of course not,\" she said. \"It's just that, when I hear all of your stories, I realize that I'm not beautiful and attractive like the women you are used to socializing with. Mike, you have to know that there's nobody I'd rather be with than you. But I don't want you to feel obligated to spend all your time with me when you could be out finding a woman who is more like you - someone with the body and mind to compliment you.\" \n\nAlthough Mike's eyes flared, he didn't respond to her. Instead, he pulled out his wallet, and threw enough money on the table to cover their bill and a tip. Then he reached out and grabbed Chrissy by the hand and began pulling her out of the restaurant. Surprised, Chrissy asked, \"Mike, what are you doing? Where are we going?\" \n\nMike didn't answer Chrissy, but rather continued to pull her behind him until they were at the car. \"Get in!\" he growled, as he held her door open for her. \n\nChrissy slid into the passenger side of the car and waited for Mike to get into the driver's seat. She was still wondering what was going on when he turned to face her. His voice was strained with controlled fury as he said, through gritted teeth, \"Don't you ever say something like that about yourself again! I have never met anyone who interested me more than you. All the women that I have known in the past were superficial and transparent. You have more depth in your little finger than most of those women. And as for beautiful, you haven't seen what you look like when you open your eyes first thing in the morning, you haven't seen how your hair shines in the sunlight, you haven't seen your face burst into a smile that could melt a glacier. You have no idea what beautiful is because you can't see yourself. You are far more beautiful than I can explain.\" \n\nShocked, Chrissy blurted out what she thought was her biggest flaw, \"But, Mike, I'm fat. I'm not shapely and slender - \" \n\nMike cut off the rest of Chrissy's argument by claiming her lips in a searing kiss. When he raised his head, he looked into her eyes and whispered, in a voice that left no doubt as to the anger he was barely hiding, \"Chrissy if you ever say anything like that about yourself again, you better make sure that I don't hear you. Now sit right here and don't say another word until we get home.\" \n\nChrissy wanted to protest, but Mike gave her a look that brooked no argument, so she stayed quiet. When they got to the condo, Chrissy started to say something, but Mike put his finger over her lips. \"No talking until I say so!\" he said, sounding more like a drill Sargent than a lover. Once inside, he shut the door behind them and leaned against it. \"Now, Ms. Stanton, I want you to go to the bedroom and strip. Wait for me on the bed. Do you understand?\" \n\nSince Mike was still in his command mode, Chrissy snapped him a salute and answered, \"Sir, yes sir!\" before turning and running to the bedroom. She was relieved when she heard Mike's deep laugh following her down the hall. \n\nMike entered the bedroom a few minutes later, wearing only his boxers. He and Chrissy had expanded his collection of silk boxers and this pair was dark gray. Chrissy sighed as her eyes roamed over his body. \"Well,\" Mike said, \"Do you want to repeat what you said earlier?\" Chrissy looked at him blankly. She had been so caught up in enjoying the sight of him that she forgot why they had come to the bedroom in the first place. \n\nChrissy was quiet as she continued trying to remember what she had said. Mike laughed and fell on the bed beside her, \"That's more like it! I don't ever want you saying those things again and I would just as soon that you forget that you ever believed them.\" \n\nChrissy suddenly remembered what she had said. She started to protest, \"But, Mike, those things are tr - \" Again, Mike managed to cut off her sentence with a kiss. \n\n\"Chrissy, I'm going to go over this tonight and every night until I make you understand. You are not unattractive because of your size. It is a part of you and I find you incredibly desirable.\" Just for added effect, he rubbed his erection against her leg before continuing, \"See what you do to me? That's not just because I am in bed with a woman. That's because I am in bed with you - you do that to me.\" \n\n\"And as for not being shapely, my God, woman, how much more shape could I stand? You have this curve here,\" he stopped to cup her breast. \"And this curve here,\" he moved his hand to outline her waist. \"And this luscious curve right here,\" he smoothed his hand around over her stomach. His hand continued as the desire in his eyes grew. \"And this curve here,\" he said as he ran his fingers over her feminine curls. \"I love your curves, you silly woman. I don't ever want you to complain about them again. They are a part of you and I love - \" ",
        "Mike stopped in mid-sentence, realizing that he was about to tell Chrissy that he loved her. He wasn't ready yet for that bombshell, so he improvised and said, \"And I love each one of them.\" It wasn't a perfect recovery, but it was the best Mike could manage. \n\nFortunately, words weren't needed for the rest of the evening, as Chrissy let Mike show her just how much he truly enjoyed her curves! She was pretty sure that, once this night was over, she was going to need Mike to tell her, again and again how much he desired her, but he seemed more than willing to oblige. \n\nAfter getting that issue settled, the only thing that bothered Chrissy during the weeks to come was Mike's inability to find a job. She knew that he had been very specialized in the work that he had done in the Marines, but she had really thought he would be able to find employment quickly. He had assured her that he had arranged for almost two months of terminal leave, which provided him with a steady paycheck, so he wasn't worried about finding a new job. But Chrissy was getting worried. Weeks had gone by and he hadn't even mentioned getting any interviews. She had tried to talk to him about it, but he hadn't seemed interested enough to even have a conversation about it. \n\nAt dinner one night, Chrissy finally decided that enough was enough. Mike had cooked supper for them that night, so they were at home. With no one to interrupt them or to overhear, Chrissy insisted that Mike talk to her about his job plans. Although he was evasive at first, Mike finally explained that he had put in his application for a civil service job. He told her that since he would soon be retired military, he had requested a rather high level job. The paperwork and cross referencing of his qualifications and the available jobs was taking longer than expected. Chrissy was satisfied, though, that he was making progress and that he wasn't going to be unemployed forever. She willingly accepted his explanation and dropped the subject. \n\nMike was relieved that he had managed to appease Chrissy's interest in his job, but he hated having to lie to her. He had told her part of the truth, but since he still had not told her that he planned on going back to Boise with her yet, he couldn't tell her the whole truth. The whole truth was that he had requested a high level civil service job, but he had already been assured that it would be waiting for him whenever he arrived. He would be working with the U.S. Customs Service out of the Boise airport. The job sounded like a good fit and it allowed him time to settle down, get acquainted with Boise, and help his brother formulate plans for the ranch. He wasn't sure he would stay at the job until he retired, but it was a perfect match for him right now. And, most importantly, it let him stay with Chrissy. \n\nMike had been keeping another secret from Chrissy as well. After she had put in for her transfer, she had contacted the real estate agent that was selling the two small farms near her sister's ranch. When she had gotten the information, she had shared it with Mike. Although both farms had a lot to offer, one really seemed to appeal to Chrissy. The house was in good shape, there was a creek running through the property and the pastures were already being farmed for corn. Chrissy had told Mike about some changes she would like to have made in the house, such as redoing the kitchen and updating the bathrooms. But, overall, the gleam in Chrissy's eyes when she talked about that house, told Mike that it was definitely the one she wanted. They had even flown over to Boise one week-end to see the house, without Tracy and Mark knowing anything about their visit. \n\nAfter that week-end, Mike and Chrissy had returned to Chicago. On Monday, as soon as Chrissy had gone to work, Mike contacted the agent and bought the farmhouse! Since he had never married and had never had too much opportunity to spend his income, Mike had invested a great deal over his military career. He had managed to have enough to make a down payment of half the cost of the house and still have enough left over to get the kitchen and bath redone. It had been tricky to keep his purchase and remodeling a secret - not only from Chrissy, but also from Tracy and Mark. But he had done it. According to his contractor, the kitchen was finished and the bathroom would be done in another week. Mike wanted to share his secret with Chrissy so badly, but he knew that, if he did, it would blow his surprise. So he kept quiet, even though it was an agony for him to do so! \n\nOne Friday, about four weeks after Mike had arrived in Chicago, Chrissy came home after work earlier than usual. Mike was in her guest bedroom, packing up books in order to prepare for her move. Chrissy burst into the bedroom with her face glowing with excitement. \"The transfer went through! I'm going to Boise!\" \n\nChrissy's happiness was instantly contagious, as Mike grabbed her around the waist and they spun around the room together. Finally, when they were both out of breath, Mike set her down. \"When? When are you leaving?\" he asked her excitedly. \n\nAs happy as she was, Chrissy still felt a stab of disappointment that Mike was so eager for her to leave. The thought that maybe he hadn't enjoyed their weeks together as much as she had flickered through her mind. But she pushed that thought aside and smiled up at him, \"I report to work in Boise in two weeks! My last day here is Monday. I just can't believe it - I'm really going home!\" \n\nOver the week-end, Chrissy and Mike finished packing up the guest bedroom, the living room and most of the kitchen. Mike had already washed and packed Chrissy's extra clothes and dishes. So that only left the basics in the kitchen and in Chrissy's wardrobe. It was exhausting work. By the time Sunday night arrived, they both were ready to take a break. \n\nLooking over at Chrissy who was sitting on the floor in her kitchen, taping the last boxes shut, Mike said, \"Want to go out?\" \n\nChrissy looked up at him ruefully, \"Not on your life! Order me a pizza and don't forget the coke!\" \n\nMike laughed at her and went to call in their delivery order. When he returned to the kitchen, Chrissy was still sitting in the floor, but rather than taping boxes, she was staring off into space. Mike dropped down beside her and she smiled over at him. It was a happy smile, but with a touch of sadness around the edges. \n\n\"Penny for your thoughts,\" he whispered to Chrissy, as he put his arm around her to draw her closer to him. \n\nChrissy sighed, \"It's just all so hard to believe. I know I'm making the right choice, but I'm also having to step out in faith. I mean, I still don't even have a place to live when I get there. And Tracy doesn't know I'm coming yet. What if this is harder than I can handle?\" \n\nMike longed to reassure her that he would be beside her every step of the way, but he held back. He wanted his surprise to be perfect, when the time was right. \n\nSo Mike sat in the floor and held Chrissy while she talked to him about her fears and her hopes. When the pizza arrived, Mike paid for it and then sat back down in the floor with it. \"Let's not bother with the table,\" he said, \"Let's just have a picnic here on the floor.\" \n\nChrissy readily agreed, then she reached over and pulled some paper towels off of the roll that was sitting on the counter. \"Nothing like elegant napkins to accompany our elegant cuisine!\" she laughed. \n\nMonday morning dawned bright and early. Chrissy was like a little kid going to a birthday party. She was so excited about her last day at work. Mike watched her bounce out the door and thought about how much he enjoyed being a part of Chrissy's life. She was his perfect mate. And it was almost time to tell her that. \n\nThe next day flew by, with movers to be dealt with, utilities to be turned off and last minute details cropping up right and left. Finally, everything was finalized by Wednesday morning. Mike had told Chrissy that he would like to drive to Boise with her since he didn't have anything going on right then. He had implied that he would drop in on his brother for a few days and then head back. Of course, Chrissy had no way of knowing that, when Mike put his duffel bag in her car this time, he wasn't planning on any return trips. He was headed home, in more ways than one. \n\nChapter Nine \n\nIt was roughly 1600 miles between Chicago and Boise. Chrissy and Mike took turns driving. Their goal was to put in 400 miles a day. That was a long day, but not impossible. They didn't want to be worn out when they got to Boise, but they didn't want to waste too much time on the trip, either. \n\nOn Saturday night, they were still about 100 miles outside of Boise, in Jerome. They decided that they would stop for the night and surprise Tracy and Mark first thing in the morning. They also didn't want to end up on Tracy and Mark's doorstep in the middle of the night. So they left a request for an early morning wake up call and headed off to bed. \n\nAs usual, the room that they had chosen only had one bed. By the time that Chrissy finished washing her face and brushing her teeth, Mike had already fallen asleep. Chrissy crawled in beside him and snuggled up to him. In his sleep, he turned and draped an arm over her, then he sighed in contentment. Chrissy chuckled to herself at how comfortable they had become with one another. \n\nAlthough she was tired, Chrissy couldn't seem to fall asleep. Somehow in the excitement of the last few weeks, she had forgotten Mike would be leaving soon. She had slipped into the fantasy that they were a real couple and that this move was for them both. She had forgotten that it was all just a temporary arrangement for him. Now, it was over. This could well be the last night that they had together. That thought made her heart ache and tears come to her eyes. She snuggled closer into Mike's arms and hoped that sleep would come soon. \n\nMike woke Chrissy up with kisses the next morning. He started by kissing her forehead, then moved down her face, lingering over her mouth, then continuing down her neck. By the time that he had begun kissing the soft mound of her breast, she was wide awake and moaning. Mike kneaded her flesh with his left hand, while his right arm was occupied with pulling Chrissy as close as possible to him. \n\nFor her own part, Chrissy wasn't willing to be passive in their lovemaking. She reached out and stroked Mike's shoulders and ran her hands up and down his back. As Mike's touch became more insistent, Chrissy began to wiggle in his arms. He held her tight though and continued to love her. She was fast reaching the point of no return, but she wanted to take Mike with her. Without warning him, she suddenly shifted her weight and lowered her body onto his erection. It was Mike's turn to moan as he sank into her softness. That sound gave Chrissy a rush of power and she began moving under him. Mike picked up the pace and soon they were over the edge, finding their release almost simultaneously. \n\nInstead of drifting back down slowly, Chrissy grinned and jumped out of bed. She ran to the bathroom and started the shower. She turned back to Mike and said, \"Want to conserve some water, Marine?\" \n\nSurprised, Mike looked at her closely. He said, \"Are you sure? We've never showered before.\" \n\nChrissy's only answer was to arch her eyebrows suggestively before she jumped behind the shower curtain. Mike laughed out loud and bounded in after her. Getting clean had never been so appealing! \n\nTheir shower ended up lasting far longer than either one of them had planned. It had resulted in another bout of lovemaking, which then required additional cleaning. Although they had hoped to leave by 7:00, they finally managed to get their clothes on and pack up to leave around 10:00. \"Well\", said Chrissy, \"we can show up at their house when they get home from church!\" \n\nThe last 100 miles seemed to last forever. Chrissy was determined to hang on to her excitement and not give into the anxiety that was gnawing at her. Mike seemed extraordinarily relaxed which helped her stay upbeat. By the time that they had stopped to grab a bite of breakfast, and driven the last stretch, they were pulling into Tracy and Mark's driveway about 12:30. \n\nMike was driving since Chrissy was too excited. He saw Tracy and Mark just getting out of their car at the end of the long drive. He pulled up behind them, blocking their car in. Mark gave a questioning look over the top of his car, wondering who would be showing up at their home. When he recognized his brother getting out of the car, he couldn't stop himself from yelling, \"Mike!\" \n\nTracy had made it into the house already and was returning to see who had arrived. She heard Mark's excitement, but couldn't make out what he was saying. When she rounded the porch and saw Chrissy standing in the yard, she yelled herself and began running toward her sister. The two women hugged each other tightly and kept trying to talk at the same time. Finally, Mike raised his voice loud enough to be heard by them all and suggested that they go inside. The four of them finally managed to get into the kitchen and sat down around the table. \n\nChrissy started by saying, \"I wanted to come home.\" \n\nTracy looked at her, somewhat confused. She said, \"But you were just home at Christmas. Why did you want to visit again so soon?\" \n\nChrissy's face burst into a huge smile, \"I'm not visiting, Sis. I'm here to stay!\" \n\nThe squeals of delight between the two sisters were almost more than Mark and Mike could handle. They just looked at one another and shook their heads, waiting until the women calmed down enough for Chrissy to continue. \n\nIt took about 20 minutes to get the whole story out because Tracy and Mark kept interrupting with questions. Mike watched Chrissy as she talked to her sister and brother - in - law. He knew by the look on her face that she had made the right decision. She had never looked happier or more beautiful than she did right then. Mike couldn't wait until he could get her alone and let her know how much he loved her. \n\nChrissy and Mike had left everything in the car when they had arrived. After finishing up her story, Chrissy realized that she wanted some of the things she had left out in the car. She had brought a few presents and some information for Mark about incorporating the ranch in order to obtain a loan. Mike and Mark volunteered to go get the stuff in order to let the two sisters have a few minutes alone. \n\nAs soon as Mike was out of the kitchen, Tracy turned to Chrissy and said, \"So how far along are you?\" \n\nChrissy looked at her sister in confusion. \"Far along with what?\" she asked. \n\nTracy said, \"Oh come on, how far along are you in the pregnancy? \n\nChrissy's face fell. \"I didn't get pregnant, Tracy. I started my period right after I got back to Chicago.\" \n\nTracy looked at her sister suspiciously. \"Chrissy, I might not know a lot of things, but I know a pregnant woman when I see one. When was your last period?\" \n\nChrissy scrunched up her forehead as she thought back. \"Well,\" she said, still trying to remember clearly, \"I told you, it was right after I got back to Chicago. Yeah, that was the last time.\" \n\nSuddenly, it dawned on Chrissy what she had just said. Startled beyond speech, she could only stare at Tracy. \n\n\"Honey,\" Tracy began, \"that was the first of January. This is the first week in March. You are a month late!\" \n\nChrissy suddenly felt dizzy. She had never even noticed that she hadn't had a period. She had been too busy focusing on her move. As much as she had wanted a child three months ago, now she wasn't sure what she was going to do. Then she had developed a plan, had a schedule and had made arrangements accordingly. Now, she was winging it. She was in a new town, at a new job, madly in love with the father of her baby, and facing his imminent departure. How was she going to manage? \n\n\"What am I going to do? How am I going to handle this?\" Chrissy muttered, in her shock. It didn't even cross her mind that Tracy might be wrong. She knew in her heart that Tracy was right - she was going to have a baby. \"Mike's going to kill me! NO! Mike is not going to know!\" \n\nTracy looked at her like she had lost her mind, \"What do you mean, Mike isn't going to know? You two are a couple. You made this baby together. He has to know.\" \n\nAs they heard the men come back into the house, Chrissy turned to her sister with panic written all over her face, \"Please, please, don't say anything. I know you don't understand, but please, promise me you won't tell Mike. Promise me, please!\" Tracy nodded reluctantly as the men walked into the kitchen. \n\n\"Hey, Tracy, what's for lunch?\" Mike joked. Tracy tore her eyes from her sister and looked at him. Her face still held traces of annoyance, which surprised Mike. They had been home less than an hour and Tracy and Chrissy were having problems? That didn't bode well for the future. \n\n\"I'll have some lunch for us all in a few minutes. Mark, why don't you take Mike and show him the new barns that we have decided on?\" Tracy said. \n\nChrissy knew that her sister was trying to get her alone again, and she was not interested. She turned to Mike and Mark and said, \"I would love to see the barns as well. Can I come?\" Mike looked suspiciously between the two women and noted Chrissy's look of forced innocence and Tracy's scowl of displeasure. Man, this was going to be a great visit! \n\nWhen the Mark, Mike and Chrissy returned to the kitchen, Tracy had set out sandwich fixings and had warmed up some tomato soup. The four of them settled at the table. Mike had been afraid that the conversation would be stilted, given whatever was going on between Tracy and Chrissy. But Tracy and Chrissy seemed to have called a truce and the meal was pleasant and peaceful. \n\nChrissy asked where Sky was since she wasn't there to keep them all entertained, and Tracy explained that Sky's friend from Christmas was now her official boyfriend. After church every Sunday, Steven's family insisted that Sky join them for an afternoon of fun and games. It gave Tracy and Mark a chance to have some time together and Tracy knew that Sky and Steven were well chaperoned by his family. All in all, it was a nice situation. \n\nAfter the meal, the four of them moved into the den to sit in more comfortable chairs. It didn't take long for the conversation to become a chore as they all relaxed more and more. Finally, when Mark woke himself up with a loud snore, they all decided it was time for naps. Mike and Chrissy naturally went up the stairs to her old room and Mark and Tracy headed for the other end of the house to their bedroom. The quiet house and the lazy Sunday afternoon combined to make for a very peaceful atmosphere, as they all settled down to rest. \n\nChapter Ten \n\nWhen Chrissy woke up, she was shocked to find herself alone. She wondered where Mike was, and then, with a start, she remembered what she had discovered earlier. She was going to have a baby - Mike's baby. She wasn't sure if she wanted to laugh or to cry. She didn't want Mike to feel obligated to her or the baby in any way. Her original plan had been to use him merely as a sperm donor. Yet that was so long ago. So many things had changed. Now what was she going to do? \n\nThe door to her room opened and Mike stepped in. He was carrying a tray with two glasses of coke and some powdered dough nuts on it. \"No one else is awake yet, but I wanted something sweet,\" he said. \"Care to join me?\" he invited. Chrissy moved over on the bed so he could sit with her. They enjoyed the snack and then Mike took the tray back downstairs. \n\nWhen he returned, he looked anxious about something. Chrissy almost didn't notice since she was caught up in her own trauma, but when he kept hanging around the door and finally began pacing, she knew something was up. \"Mike? What's going on? What's wrong?\" ",
        "Mike stopped in front of her. He looked down into her eyes with an burning intensity in his own. In a rather strained voice, he said, \"Will you go for a ride with me?\" \n\nChrissy laughed at his seriousness and said, \"Sure, just let me get my shoes and socks. I'll met you downstairs.\" \n\nAfter having been in the car for five days, Chrissy was surprised that Mike wanted to get back into it. But something was up and she would go with him and find out what it was. When she got downstairs, he was leaving a note for Tracy and Mark. He motioned her to be quiet as they went out the door, so as to not wake up the newlyweds. Once they were outside, he dropped his arm around her shoulders and led her to the passenger side of the car. He opened the door for her and waited for her to get in. She had assumed that she would drive, but didn't question Mike since he looked so preoccupied and focused. \n\nThe car was filled with silence as they drove back down the long driveway and out onto the main road. On the way in, they had passed the house that they had looked at buying and Chrissy had commented that the \"for sale\" sign was gone. Now, Mike was pointing the car back in that direction. When he pulled into the driveway of the house, Chrissy shot him a surprised look. He was staring at the road in front of them with such intensity that she didn't dare comment. Finally, Mike pulled the car to a stop in front of the house and cut off the engine. \n\nWhen Mike turned to face Chrissy in the seat, she had no idea what to expect him to say. Driving into the driveway of someone else's house was rather strange behavior and she wasn't sure what he was up to. She looked at him expectantly, waiting for him to explain. \n\nMike took several deep breaths as he tried to form the words that he wanted to say. Finally, he blew out a long sigh and said, \"You want to go in?\" \n\nChrissy was even more confused, \"Mike, the house isn't for sale anymore. Why would we go into someone else's house?\" \n\nMike just looked at her in frustration. After a few moments, he said, \"Just come on. I can't explain all this. I've been trying to figure out how and you would think after a month I would know what to say, but I haven't got a clue.\" As she sat in the car, totally confused, Mike was climbing out of the car and coming around to open Chrissy's door. \n\nChrissy took the hand Mike offered and followed him up the steps. She watched as he pulled out a set of keys and opened the door. None of this was making sense to her. Mike took her hand and pulled her into the house. \n\nChrissy's eyes flew open wide as she recognized her own furniture, the same furniture that Mike had promised her he was sending to storage, sitting in the living room. \"What's going on?\" she asked as she began walking through the house. In the kitchen, she saw all the new appliances and remodeling that she had wanted done. She saw her kitchen table over in the corner. As she wandered through the house, she found her bedroom furniture in the master bedroom and her guest bedroom furniture in one of the spare bedrooms. The bathrooms had been remodeled just like she had wanted them. There were even curtains hung on the windows. The house was perfect. \n\nFurious by this point, she rounded the corner back into the living room where Mike was still standing. \"Ok,\" she practically shouted, \"Tell me what's going on and tell me now!\" Mike had the audacity to chuckle at her outburst. As her face just grew more angry, he sobered up and began trying to explain. He kept starting then stopping, never managing to get a full sentence out of his mouth. \n\n\"Look, I wanted to do this right, but I'm just no good at this stuff, you know?\" he finally mumbled. \n\n\"No, Mike, I don't know what you mean! What kind of \"stuff\" are you talking about?\" Chrissy stormed at him. \n\nMike ran his hand through his hair and sank down onto the nearest couch. He looked up at Chrissy and sighed, \"I didn't handle this very well. Please, Chrissy, sit down and hear me out.\" \n\nChrissy continued to look skeptical, but she sat down on the couch beside him, waiting for him to continue. \n\nLooking away from her, he began, \"When I first met you at the airport, you rocked my world. I never imagined that I would meet someone who blew me away, but there you were. Then we had that incredible night together. I almost died the next morning when you weren't there. I've never been so happy as when I saw you walk down your sister's stairs that day. I felt like somebody on death row being given a reprieve. When you told me that crazy story about trying to get pregnant, I jumped at the chance to spend more time with you. I told you it was going to be a charade, an opportunity for me to have some casual sex,\" he turned to look her in the eye, \"but Chrissy, it's never been a charade for me. I've wanted you from the moment I met you.\" \n\nChrissy was barely breathing as Mike continued, \"I went back to the Marines, knowing that I was only going to finalize the details of my retirement. I hadn't told you because I was afraid you would run away again. I didn't come to Chicago because I wanted to live in the city. I came to be with you. And these last five weeks together have been heaven. I just couldn't give all that up. So, I bought this house, I got a job in Boise and . . .\", Mike fumbled in his jacket pocket before pulling out a ring box. He dropped down on his knee in front of Chrissy and continued, \"and I want you to share this life with me. I want you to share this house and be a part of everything that's a part of me. My darling Chrissy, will you marry me?\" \n\nTears were streaming down Chrissy's face as she stared, first at the solitaire and then at the man, still on his knee in front of her. Her heart was screaming for her to say yes, but her mind wouldn't let go of one important fact - she wanted children. More importantly, she was going to have a child. And Mike didn't want kids. He had been clear from the beginning, hadn't he? \n\nA sob tore out of Chrissy's throat as she buried her face into her hands. Mike looked at her in confusion. \"Chrissy? This is the part where you say 'yes'. Remember?\" \n\nChrissy raised her tear streaked face to him. There was no way her voice was going to hold up while she explained to Mike why she couldn't marry him. Finally, desperate for him to understand, she managed to squeak out, \"But, babies . . . \" \n\nMike looked stricken for a moment, then he said, \"Chrissy, I know I haven't gotten you pregnant yet, but we've only been trying a few months. We'll keep trying until we get your babies. I know you want them, sweetheart, and it will happen. We just have to give it time.\" \n\nChrissy stared at him in confusion. She dropped her eyes and in a voice still filled with tearful emotion, she managed to say, \"What are you talking about? I thought you didn't want kids?\" \n\nMike threw back his head and gave a happy laugh. \"Oh, Chrissy, I have dreamed almost every night of babies with flaming red hair and dark brown eyes. Honey, I want to have children with you more than just about anything in this world. I know we haven't managed to yet. But, if it doesn't work out soon, I'll go to the doctor and be tested. And we still are planning on adopting, too, aren't we?\" Mike put his finger under Chrissy's chin to pull her face up so he could see her. \n\nWhen he did, he was shocked to find that she was silently laughing. He flashed her a confused look, but she just burst out giggling in his face. \"Chrissy? What's the matter with you?\" he asked. \n\nChrissy pulled herself together enough to answer. With a voice filled with happiness, she said, \"Mike, Mike. What's wrong with me? You want to know what's wrong with me? I'll tell you what's wrong with me. I'm going to have a baby. I'm going to have your baby! We're already pregnant - but I was so afraid that you didn't want kids. I was scared to death to tell you!\" \n\nMike sat on the floor in front of Chrissy, with his mouth hanging open. \"We're going to have a baby? How long have you known?\" \n\nChrissy smiled and said, \"Actually, only about five hours now. Tracy was the one who called it to my attention!\" \n\nMike's only response was, \"Oh\", as he stared out into space. \n\nTracy waited for a few minutes for Mike to speak again, but he seemed to be lost in thought. So Chrissy cleared her throat. When he looked at her, she said, \"I think there was an unanswered question on the floor. Do you happen to remember what it was?\" \n\nMike grinned at her and said, \"Yes, madam, I do happen to remember. This Marine was asking you to be his girl. And the offer still stands. Chrissy will you marry me and have babies with me and share this house and fulfill my life?\" \n\nChrissy's smile couldn't get any bigger as she nodded her head, and said, \"Yes, my beloved Marine, I'll do all those things and more - I'll love you forever and ever.\" \n\nThe ring was barely on Chrissy's finger before Mike was kissing her. They ended up on the floor with Mike gently laying on top of Chrissy. \"I don't want to hurt the baby,\" he murmured. \n\nChrissy just smiled, \"I don't think you have to worry about that yet.\" \n\nAs he fingered the ever present charm bracelet on her wrist, Mike looked into her eyes and said, \"Chrissy, my love, my very own soul mate, from the very first day I met you in the airport,\" he caressed the airplane charm, \"and fed you chocolate covered strawberries in bed,\" he caressed the strawberry charm, \"you have had my heart,\" he caressed the heart charm, \"and now you will have my babies,\" he caressed the baby carriage. Grinning at her with his cockiest grin, Mike added, \"And that, my dear Mickey, is what you get for staring at strangers in the airport!\" \n\nEpilogue \n\nChrissy sat on a blanket near the river, enjoying the Boise Greenbelt. It was a beautiful spring day, with lots of sunshine. From where she was sitting, she could see that many young families had decided that it was a great day for a picnic. Blankets dotted the landscape and children of all ages were running and playing. \n\nJust for a moment, Chrissy closed her eyes and drank in the warmth of the sun on her face. Then the tiny, wiggling bundle in her arms brought her back to reality. She smiled down into the face of her newborn nephew. He was the spitting image of his daddy, but he had his mama's big blue eyes. \n\nThe little boy had been a complete surprise. Sky had already started her third year at the university and was engaged to her high school sweetheart, Steven, when Tracy and Mark had found out that they were expecting. Sky had come home for the birth and had been in the delivery room with Mark and Tracy. Even with the age difference, it was obvious that Sky was quite taken with her little brother. And Tracy and Mark hadn't stopped beaming. Little Hank O'Connor was now two months old and the light of their lives. Chrissy and Mike had practically had to beg Tracy and Mark to let them take him to the park with them. \n\nChrissy was lost in happy thoughts about her family when she felt a shadow cross her body. She looked up to see Mike looking down at her. He was the most handsome man Chrissy had ever seen and he still managed to take her breath away every time that she looked at him. This time was no exception. And with the addition of their two year old daughter on his shoulders, it made him look even better. \"Hey, handsome. Where did you get the cute little redhead?\" Chrissy said, teasing Mike as he reached up and took Mickey off of his shoulders. \n\nMike plopped down on the blanket beside Chrissy as Mickey toddled over to her mother to inspect her cousin. Mike reached out to touch the baby's cheek before he answered Chrissy, \"Well, I found this wonderful woman who was willing to fulfill my every fantasy - including giving me little red haired babies!\" \n\n\"Baby sleepin', mama,\" Mickey said, in a loud stage whisper. \n\nChrissy smiled at her baby girl and said, \"Yes, honey, he is. Where did daddy take you? Did you go down to the river?\" \n\nMickey immediately launched into a babbling tale that Chrissy managed to understand about half of. \n\nMike smiled over his daughter's head and said, \"You know, if we don't get another child soon, she's going to be Sky, made over!\" \n\nChrissy just smiled and reached over to her purse. She pulled out an official looking envelope. Mike and Chrissy had begun the process for adoption of a child from overseas. So far, most of the paperwork had been done and the in home studies had been completed. Chrissy hadn't told Mike yet, but they had received a letter the day before telling them that they had a son, 5 months old, waiting for them now. All that had to be done was to arrange the date for the trip to pick him up and to finalize the adoption. \n\nWhen she dropped the envelope in Mike's lap, he looked down at it, puzzled. \"What's this?\" he asked. Chrissy didn't answer him but merely waited as he opened the letter and read the news. \n\nMike's war hoop of delight caused Hank to stir and several other families to turn around to stare at them. Mike was so excited that he didn't even seem to notice, though. \"We have a son! We have a little boy! What's his name? When can we go get him? How soon can we arrange it? Do you want to go, or should I? Well, say something!\" he blurted out, all in one breath. \n\nChrissy just laughed at him, \"Well, if you would give me a chance, I would love to say something. But you have to stop talking for me to be able to get a word in edgewise.\" \n\nMike tried to look chastised, but he was just too happy for it to work. Instead, he grabbed Mickey up in his arms and said, \"Baby, you have a little brother!\" \n\nMickey looked over at Hank and back at her daddy. Her little brow knit together in confusion. \"Hank Mickey's brudder?\" she asked. \n\n\"No, no, you have a real little brother. Hank's your cousin. You get to have your own little brother, too,\" Mike told her, still too excited to calm down. \n\nMickey just looked up into her daddy's face and patted him on the cheek, \"Daddy be ok!\" then she toddled back over to see Hank. \n\n\"Well?\" Mike prompted Chrissy when she just continued to stare at Hank and Mickey. \"Which one of us gets to go get our boy?\" he asked again. \n\nChrissy turned to smile at him. She said, \"The letter says that we can fly out anytime in about 8 more weeks. Since I don't think I'll be quite over the morning sickness yet, I think you better go.\" \n\nMike just sat on the blanket, looking at Chrissy like a stone statue. Finally, he managed to squeak out, \"Morning sickness? What morning sickness?\" \n\nChrissy smiled at her husband and pointed to her charm bracelet, \"Well, we had an airplane charm, a strawberry, a heart and a baby carriage. First we added the wedding ring charm. And now, we've added a little girl charm and a little boy charm,\" Mike saw that she had already gotten their son's charm put on her bracelet. She continued, \"But I have all the rest of this room on here and I really think we need to fill it up!\" \n\nMike laughed out loud as he reached out and pulled her into his arms. As she snuggled up to him, he caught sight of the bracelet and noticed that, indeed, it did have room for more charms. Life just didn't get any better than this!"
    ],
    "authorname": "JewelTran",
    "tags": [
        "chrissy mike",
        "chrissy eyes",
        "back boise",
        "needed mike",
        "chrissy imagine",
        "mike kind",
        "mike dinner",
        "looked chrissy",
        "leave chrissy",
        "chrissy continued"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/chrissys-deception-pt-03"
}