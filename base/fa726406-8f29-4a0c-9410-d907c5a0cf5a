{
    "title": "Full Count...",
    "pages": [
        "A little bit longer than usual story. A little bit sappy. Long on love and friendship, short on sex. There are sex scenes, but not as many as normal for me. Remember, this is a work of fiction. It's also a story that makes me smile, so...do as you wish.\n\nFull count...\n\nBaseball, hotdogs, apple pie and Chevrolet. I love them all.\n\nYou see, I play baseball for a living, and lived in the Midwest during my \"AA\" period. During that time, I ate more than my share of hot dogs and apple pie. As for Chevrolet, I guess they are in my blood because the brand-new Escalade that I drive is a part of a sponsorship deal.\n\nIt all sounds good, but like lots of good things, it came at a cost to me, and at times, to the others around me. You see, being drafted to Los Angeles was a dream come true. It was bright Lights, big City, for this small-town boy.\n\nThe old saying, \"do what you love, and you'll never work a day in your life\", couldn't have been more wrong for me in the beginning.\n\nI started hot. Way too hot. I was the toast of the sports town and soon enough I was being invited to every party that wanted a young sports celebrity in attendance. I was hooking up with every hot girl in the city. Starlets. Singers. T.V. stars. Baseball groupies, you name it. Most were just like me, small towners that came to Glitter City looking for fame and fortune. The only problem is that unlike me, they didn't work almost every day and soon my game started to suffer, but I didn't care.\n\nMany times, or should I say many mornings, I would leave the parties and head directly to the park for a game or to the airport so that I didn't miss a flight. Some of the younger players laughed about it, but the older players had seen bad things happen to more than one prospect.\n\nThe straw that broke the proverbial \"camel's back\", was my 21<sup>st</sup> birthday. I was \"dating\" a 32-year old movie star. She had a solid string of hits, making bank loads of money and was living the high life. She didn't love me, hell I don't even know if she liked me, but I was enamored with her. She was beautiful, sexy and graceful. It was something that I was not accustom to. We came from different worlds. I loved sports and she loved acting. The only thing that I knew for sure was that she liked to show me off.\n\nI made it to her mansion after our game and the party was already in full swing. Like most of the parties that I had attended, I didn't know many people. My girlfriend on the other hand claimed that she knew every single person there. Booze and other party favorites flew around the house. It was loud and obnoxious, and I loved it.\n\nMy responsibilities to my team and myself took a backseat. At 2:00am it was less than 11 hours until my next game. With a fresh drink in one hand and my super rich and famous girlfriend in the other, I was pulled upstairs for my birthday present.\n\nHer room was ready. It was like nothing that I'd ever seen. It was straight out of a design magazine. The huge master bed was made up with fine white linens and flower petals. The bed looked good but what looked better was standing beside it. There was my girlfriend's best-friend, she was European. A French actress that starred in many French films, including one where she played a lesbian. After tonight, I would always wonder if she was acting. She was just starting to make it onto the big screen in American movies, and there she was, naked and waiting. She had the sexy deep voice of a smoker, puffy lips, a cute gap in her teeth and an overall look that was hot as hell. Apparently, my present was to be her and the two of them, together and all at once. It was something very new to me, and I wasn't about to say no.\n\nI had watched their movies. I had seen interviews with them. But having them standing naked beside me was far more appealing to me than seeing them on any screen.\n\nThe last words I remember hearing were, \"Lay back baby and let us take care of you. Happy Birthday lover\". From there it was a shit show. They took turns riding my face. They took turns riding each other's faces. Then they rode me like I was a prize bull at the rodeo.\n\nIt wasn't the first time that I'd had sex, but it was the first time with two women. I was amazed at having extra body parts at my command. It seemed like my dick would pop out of one hole just to be stuffed into another. I went from mouth to mouth, to pussy to pussy, pussy to mouth, to the fabled ass to mouth, more times than I can remember. You name it, it happened. When I needed a rest, the girls provided each other with attention. I had never watched two women 69 each other, only in a porn. It made me rock hard in an instant, but by the end of the night my cock was dead, and every inch of my body was covered in either saliva or juices of my lovers. We didn't use any condoms. Concern for health and parenthood never played a role in our in-house porno. The very last thing that I remembered of that night was my girlfriend passed out on a sofa near her bed, and our French lover's lips on my neck as her wet pussy pulled me deep inside her.\n\nAn alarm woke me, but I was already late. Stinky from the sex and alcohol I called an UBER and snuck out of her house. It was the worst day of my life. 0 - 4, with 3 strikeouts. It wasn't bad enough that I puked in a garbage pail in the dugout, what made it worse is that it still shows up every so often on a sports \"highlight\" or in my case \"lowlight\" reel. Me barfing during the middle of a game with a bright red mark on the side of my neck. The sportscasters from cities around the country had lots of fun with it. Welcome to the big leagues kid.\n\nThat was the end of my first season. After which, I was known as a partying womanizer and some say that my antics led to poor play, and that had cost my team a shot at a playoff spot.\n\nMy birthday was the last time that I saw her. Our break-up wasn't what one would call cordial. She let me know, in her words that I was \"less than nothing. A piece of dirt. Florida white trash, a trailer park loser\". In fact, some of our more private moments had somehow mysteriously leaked to the gossip rags that every grocery store carried at the checkout counters. There were rumors that I had impregnated her French friend, but it turned out to be false. I will always remember her parting words to me. She was asking me if I thought that my contract was real money. Telling me that she paid her agent and publicist, more than I made per year. It was over with her, that much was for sure. But even to this day, when I see her in one of her movies, I can't help but think about being with her and that other actress.\n\nIt took my whole second year to cleanse my soul and turn things around, but I did it. I was lucky that after my first year that they didn't send me packing back to \"AAA\" ball, or even lower.\n\nSpring training has just finished, and I will be starting my third year as a pro. I was drafted high by the Dodgers and this will be my second year starting at third base, I was finally living up to my team's expectations of me. I love the old stadium and all the history that goes along with it. But being a pro ballplayer in Los Angeles can be a little bit surreal.\n\nPeople want a piece of anything that they can get from you and for a small-town boy from Florida, it is a lot to live with, and I had learned all about it, the hard way. Now I held on to reality with a bit tighter grasp.\n\nWhen I was young, we went to lots of Spring Training games in Clearwater and the surrounding areas. Hell, I watched baseball every single day, but until you are on the other side of the fence, you have no idea what it is like.\n\n\"Joe.\" \"Home, please.\" \"Joe.\" \"Home.\" \"Joe, please.\" \"Joe, come on.\"\n\nYeah, that's me. Joe Plato. Nicknamed, \"Home\".\n\nSometime after I had hit a homerun or when I had thrown someone out at home, Dodgers color guy, and ex-Dodger, Rick Monday called me \"Home Plato\", and it stuck.\n\nIt seems that every year that more and more people show up for batting practice. It has become part of the game experience and the screams can become distractions. I try to keep it from becoming so and always remember what it was like when I went to the park.\n\nAfter my hits I always walk the fence line and sign caps, balls and shirts. It keeps everyone including me happy, but when the crowds go home L.A. can be a big, lonely place, especially for a small towner that no longer wants to be a party animal.\n\nToday, when I had filled all of the screaming orders, I made my way deeper along the foul line. I was planning on tossing a ball around for a bit. Sitting a couple of rows up, I noticed a guy sitting with his program and a pencil. I had noticed him a few times last year and at least once this year at a pre-season game. He was always early to arrive so that he didn't miss one second of batting practice or the game. He looked to be about 19 or 20, and not once did he scream or beg for a ball or a signature. The thing that was different today was that he was wearing a t-shirt with the Dodger logo over his heart, and my name and number screen printed under it and on the back.\n\nHe was watching my every move, but didn't say a word, so I started.\n\n\"So, do you think that we have a chance against the Mets today?\"\n\nSheepishly, he looked at his program and said, \"Syndergaard is starting. You'll take him deep if you wait. Deep for sure.\"\n\n\"I hope you're right. Can I borrow your pen for a second?\" There was something about him that made me think that he was possibly older than he appeared.\n\nReluctantly, he stood and climbed over the rows in front of him and handed me his pen.\n\nI signed my name, put my jersey number on, and dated the ball. Dating a ball is something that I normally don't do because it just takes to damn long, but it felt like it was something that he might want.\n\nReturning his pen, I tossed the ball up and he caught it in his beat-up, vintage first baseman's glove.\n\nTossing the ball around with our third base coach, he gave me some pointers and talked about the kid I just talked to.\n\n\"Home, I never see that kid talking to anybody. Now look at him. He's showing that goddamned ball to everyone near him.\"\n\n\"Cool. I'm glad that he's happy.\"\n\n\"Yeah he's with a group that gets free tickets about 2 or 3 times a year. Fight Autism or something like that.\"\n\nI looked over a few times and he was staring at the ball in his glove, so when I headed back to the dugout, I stopped in front of him again.\n\nThis time there was no hesitation when I motioned him over.\n\n\"You really think that I'll take Noah long?\"\n\n\"For sure. Yeah, for sure. Just don't swing at his first pitch. And if he's got a 2 and 1 count on you, look for his heat to come right down the pipe.\"\n\nUndoing my practice jersey as we were talking, I laughed and said, \"thanks for the tip\".\n\n\"Yeah. Yeah, no problem. My sister and I love to watch you play.\"\n\nLooking at the crowd that he was sitting with, it was hard to tell which was his sister, but a larger dark-haired girl waved at me, so I returned the wave and assumed that it was her.\n\n\"Here\". I handed him my jersey and my Rawlings glove, which was not meant to be offensive, but it was a huge improvement on the glove he had. \"I'm Joe, by the way.\"\n\n\"Matthew. Matthew. I'm Matthew.\"\n\n\"Tell you what Matthew. If I get lucky enough to use your tip and put one out, stay in your seats and I'll have someone come over after the game and get you. You, and your sister can come into the dressing room and meet some of the guys. We'll get you a bat for the guys to sign.\"\n\n\"No. No way. Really?\"\n\n\"Yeah, but only if I go long.\"\n\nWell, Matthew was smiling and screaming in the second and the seventh. Both times I sent it deep, but only the first one was off of Syndergaard.\n\nAfter most of the media had cleared, Mack the equipment manager brought Matthew into the dressing and he couldn't have been happier.\n\n\"I told you. Right Joe. I told you right?\"\n\n\"Yeah buddy, you sure did. Where's your sister?\"\n\n\"Waiting in the hall.\" Matthew looked around in awe of the dressing room\n\n\"Grab a pop or something. What size are your feet?\"\n\n\"10.\"\n\n\"Hey, Mack. Can you see if you can find my buddy Matthew a pair of size 10's and a couple of caps.\"\n\nWearing my jersey, a new cap, his new soft sole cleats and his new glove, Matthew made the rounds asking for autographs on the same bat that I had used for the two dingers.\n\n\"You coming to the game on Tuesday?\" Monday was an off day for us.\n\n\"No. My sister has school and work. We. We don't come much. We can't really afford it. No money for this kinda stuff. I won't be able to come for a couple of months.\"\n\nMy heart broke a little. My new buddy was standing with a bunch of new stuff, for which he seemed very happy. Yet he was sad about not being able to come to another game.\n\n\"You gotta phone?\"\n\n\"Yes. Yes, I do.\"\n\n\"Promise not to give anyone my number?\" Matthew looked over both his shoulders and around the room. I think for a second that he thought that I was kidding, but he nodded in agreement anyway. Holding out my hand, he gave his old flip to me, and I entered my number.\n\n\"You text me anytime that you want tickets and I'll leave two at the box office for you. I get them and never use them. Maybe you can give me some more tips.\"\n\n\"Yeah sure. Sure yeah. I'd do that. I know all the pitcher's weakness. Thanks Joe.\" And he was gone.\n\nThe next week was good for the team. We went 5 and 2. Then we headed out on the road for a 9-game stint. We lost the first two, with me going 0 for 4 both nights. Added to that, I had 6 strikeouts.\n\nBack in my room, I opened a beer and watched the sports news. The Pittsburgh station was happily telling the world how much I sucked.\n\nNot many messages on my phone, but one of them struck me as odd. \"You're swinging too much. Slow down and wait for your pitch. And don't choke up so much.\" That was it, nothing else.\n\nWell, whomever sent the text was right. I loosened up a bit. Slid the bat down in my hands, watched a couple go by and went 3 for 4, with a walk. Man, I'd take that every day. And, so went the rest of the road trip. We played well and returned with a winning record.\n\nReturning home, we had a weekend stand against the Padres. We split the first two and Sunday's game was going to be a good one.\n\nSitting alone in a big home that was meant to be an investment and turned out to be far too big for one person, I watched the twinkling lights of L.A. below me. I could hear parties in homes and neighborhoods that surrounded me, but it wasn't me.\n\nInstead, I swam in a heated and when needed, cooled infinity pool while listening to one of California's better classic rock stations.\n\nI heard the ping indicator for a text and picked up my phone. Two missed calls from numbers that I didn't recognize and a text from a number that I had no idea who it was, until I read the message.\n\n\"If your offer for tickets is still good, we can come tomorrow. Tomorrow would work.\" It was my buddy Matthew, so I added that name into the information. What I was concerned with, is that a message had come from the same number two weeks ago. It was the \"choke up\" tip, and at the time, I didn't know who had sent it.\n\n\"Sure buddy, they'll be at the gate.\"\n\nOver the next two weeks Matthew came to 4 games. He and I spoke every time. He was grateful, and not once did he ask for anything other than the tickets that had been offered. After one of the afternoon games, long after the game had finished, I was leaving the parking lot and saw Matthew waiting by a bus stop. Pulling up, I honked.\n\n\"Hey buddy. Did you miss your ride?\"\n\n\"No. No. I took the bus. Waiting for the next one.\"\n\n\"Jump in. I'll give you a ride.\n\n\"I live in the valley.\"\n\n\"So, I got nothing else to do. Let's go.\" Matthew got in and buckled up. He looked around, checking out the vehicle.\n\n\"This is nice Joe, real nice.\"\n\n\"Thanks.\"\n\n\"We have a 1988 Toyota Corolla.\"\n\n\"Cool.\"\n\n\"It's not. Really, it's not.\" I couldn't help but laugh. He hadn't meant for it to be funny, but it kinda was.\n\n\"Why the bus today.\"\n\n\"My sister was working, but I hate the Yankees and I had to come and see them. It was my first time ever.\"\n\n\"Cool. How long is that bus ride?\"\n\n\"90 minutes, give or take.\"\n\nTen minutes into our ride, Matthews phone rang and from his end of the conversation, I could tell that he was getting shit from someone.\n\n\"The game. No. I got a ride home. No Beth. I don't know. I know I'm late. It doesn't matter. I told you, the game. I don't know, maybe 20 minutes, maybe less. I'm sorry. A friend. I know. I'll ask.\" He looked at me, \"are you staying for supper? It's my turn to cook.\"\n\n\"I hadn't planned on it.\" I remembered what Matthew had told me earlier about not being able to afford tickets, so I wasn't about to impose. \"But because you're late, we can pick something up and bring it home for you guys, if you want.\"\n\n\"Sorry. I know Beth. I will bring something home. 15 bucks. I know.\" I could see that he was not happy to be having this conversation in front of me.\n\nTurns out that his sister had to work. Matthew was supposed to stay home and start supper. Instead he took a bus to the game. Missed his bus home and was waiting for the next one and would have been much later than this if I hadn't picked him up. That much I was able to get from him.\n\n\"Is she pissed?\"\n\n\"Yes. Very angry.\"\n\n\"What does she like to eat?\"\n\n\"Johnny Rockets is her favorite, but it's expensive.\" I handed Matthew my phone and had him pinpoint where the closest location was. We called in an order for curbside pick-up and 30 minutes later we pulled up in front of his apartment building. Matthew and dinner were safely home.\n\nAn extremely attractive, tall blonde, maybe 5'8 or 5'9\" was headed directly for us. She was wearing a yellow paisley sun dress and a half-length black sweater, with beige leather sandals. She looked hot as hell and pissed off all at the same time, but I didn't know why. I started to wonder if I had pulled into her parking spot by mistake.\n\n\"You know her?\"\n\n\"It's my sister.\"\n\n\"I thought that your sister was sitting next to you at the game the other day, and the first day we met?\"\n\n\"No. Nope.\" Matthew shook his head and gave me a strange look. \"That's Angela. Angela. She works at the Learning Center. This is Beth. My sister.\"\n\n\"Well buddy, she looks pissed off. I think we're both in big shit.\"\n\n\"Even deeper if she hears you swearing like that. Plus, she won't be happy when she sees all this food. She knows that I only had $15 on me.\"\n\nMatthew introduced us, but he didn't need to. Beth knew very well who I was, yet it still didn't impress her enough to spare me her wrath and she couldn't have cared less if I knew who she was. Beth told me that even with the free tickets, they couldn't go to every game. She worked and attended school, Matthew also attended some special classes and he had daily duties that included starting dinner when it was his turn.\n\nStanding with his hands full of food bags and a drink tray, Matthew was looking very much the part of a scolded puppy. Beth's mood changed slightly, and she invited me in to join them. Their apartment was clean, and hot. Even though it was only early June, the warm air combined with the lack of air conditioning made it sticky.\n\nEveryone quietly enjoyed their food. Looking around, I found that their television was probably older than the Corolla that Matthew had mentioned before. When Beth excused herself from the table, I sent a text to a friend and his response was immediate. I sent him some info and he put the wheels in motion.\n\nAfter dinner, it was agreed that Matthew would no longer sneak to games. He would suffer by having to listen on the radio to those that were not on regular channels. Watching all of the games was impossible for him as they didn't have cable or internet for that matter. For over an hour Matthew and I watched the A's game, while Beth did some homework on a beat-up old laptop.",
        "When the time came for me to leave, Beth walked me out. Standing beside my truck she started the conversation.\n\n\"Mr. Plato, I truly appreciate everything that you've done for Matthew. He loves to watch you play. He did even before you spoke to him. Now it's even worse. He hasn't taken that glove off since you gave it to him.\"\n\n\"Please. It's Joe. Look, I'm happy to do it. I don't have any family out here and the tickets just go to waste, so any time that you want them, it's really not a problem. I usually leave two, how come I never see you at the games with him?\"\n\n\"I sit up top where I can pick up the WiFi signal.\"\n\n\"That would explain it. Anyway, thanks for letting me stay for supper.\"\n\n\"Thank-you for buying it.\"\n\n\"Enjoy the rest of your night and try not to give Matthew too much grief. Him being at the game was mostly my fault.\" Her nod confirmed that I was at fault, I think, but it didn't let either of us off the hook.\n\nI couldn't help but smile about my night. Matthew loved baseball and everything about it, but his sister appeared to be disinterested and probably had her hands full with the life that she had.\n\nMonday's game would be played under the lights, so I had plenty of time for a mid-morning jog before heading to the park. Never being someone that obsesses over my phone, I never bring it along.\n\nIt wasn't until somewhere around 1:30pm that I noticed 3 missed calls and a couple of missed texts.\n\nMy return call was answered on the first ring. Matthew tried to stammer some sort of warning into his phone, but his sister grabbed it away before he completed what he was trying to say.\n\nTo say her voice sounded irate would have been an understatement.\n\n\"Mr. Plato, can you explain to me why Direct TV showed up at our apartment this morning?\"\n\n\"I'm not sure...\"\n\n\"Not only did they hook up satellite and internet service. They also installed a brand-new smart television. Can you explain that?\"\n\n\"Well I...\"\n\n\"Do you think that I didn't notice when the technician winked at Matthew when he told him that he won a contest? I want some answers right now. Tell me what it is that you're after from my brother.\"\n\nMy jaw felt like it was dragging on the ground.\n\n\"Nothing. I don't want a goddamn thing. We're friends. We talk and shoot the shit about baseball. He gives me tips on pitchers, and what their tells are. Is it a horrible thing for him to be able to watch some of the games that he wants? So, I don't know what the hell you are implying, but I know that I don't like it.\n\n\"You do know that Matthew has a disability, correct?\"\n\n\"Disability? I'm not so sure that's how he would describe it, and no, we have never talked about it. I know that we haven't known each other a long time, but I think that we are friends. Not that you would know what that's like for him, but if it is going to cause him problems in his life, tell me right now. I'll delete his number from my phone, and you will never hear from me again. I'm sorry, but where I'm from we were always taught that it doesn't cost anything to be nice. Maybe you should try it sometime.\"\n\nThe next sound I heard was Matthew's phone disconnecting from mine.\n\nWhat a shitty night. I went 1 for 4, with an error. The team won, but I didn't do a thing to help them. The next 2 games were pretty much the same. Luckily, we were headed out for a road trip on Thursday and there was nothing like a road trip to take your mind off of your home park, even if said trip was to St Louis.\n\nSitting at my locker in Busch Stadium, I picked up my phone for the first time since Monday's fiasco.\n\nThere were plenty of texts from Matthew, but only the last one made me smile.\n\nYou got Wainwright tonight. Watch for his curveball.\n\nOn game days, I wouldn't normally respond, but tonight I made the exception.\n\nThanks buddy! He tries to throw that shit by me, and I'm taking him long.\n\nMy first game away from Chavez Ravine was my best in a while. Only a single away from hitting for the cycle, but there isn't anyone alive in baseball that would swing for a single when they could put their second homer of the night over the wall. A simple \"Told you\" waited for me on my phone. I had to laugh at Matthew becoming my personal batting coach.\n\nThe rest of the trip went well, and we flew into L.A. late Thursday night. Without much fanfare I headed home and grabbed a beer. Picking up my phone, I shot a text off to Matthew,\n\n\"Hey buddy, Miami's in town this weekend. Always lots of good tickets available if you want some for you and your sister\".\n\nI didn't have to wait too long before he responded.\n\n\"Beth works Friday night. Can't Saturday because it's my birthday, but Beth says Sunday would be good.\"\n\n\"Perfect! I'll leave them at the same gate. Happy Birthday Buddy!!!\"\n\n30 minutes later I heard my phone binging.\n\n\"Joe, do you want to come for pizza for my birthday. No gifts\".\n\nIt probably wasn't such a good idea, considering how my last conversation had gone with his sister.\n\n\"I would love to, but I think your sister wouldn't be too happy about it. Also, we have a 1:00 game, so I couldn't make it until around 6:00pm.\"\n\nI was sure that he would say that he would just wait until Sunday to see me, but he surprised me.\n\n\"It was her idea and she said that it's okay, we'll meet you there at six. Pizza at Guido's on Balboa, do you know it?\"\n\n\"I'll find it. See you then!\"\n\nWe split Friday and Saturday's games. The afternoon game went 11 innings, so it was a bit of a rush to get to the party. Even with my foot into it, I was twenty minutes late. Walking in with 2 bags in hand, I could hear Matthew telling his sister that he knew that I'd show up. But before I reached the table, I also heard him say, \"I told him. You saw me text him. I told him\".\n\n\"Hey buddy, Happy Birthday. Sorry I'm a bit late.\"\n\n\"That's okay. I told you no gifts. Tell Beth that I told you. Tell her.\"\n\n\"You did tell me. These aren't gifts. They're some things that were kicking around at the park and I thought that you might be able to use them.\" I handed a bag to the birthday boy and one to Beth.\n\nMatthew smiled and silently tore into his bag. Beth glanced into the bag that I had handed her and snidely said, \"Really?\".\n\nSo that it wouldn't create a problem, I opened my phone to my photos and handed it to her. \"Yeah, DELL is one of our team sponsors. We have, well you saw the picture, lots of laptops. They are available to anyone that needs one, so I grabbed one. Matthew told me some of the programs that you use, so I had the team tech load them up. It has everything that is current and new.\" She was still giving me the stink eye but was looking into the bag. \"I just thought that it could replace your old one.\" When she dropped her guard a little, I threw in, \"It was free. I didn't spend a cent on it.\"\n\nA very sheepish, \"thank you very much, but what about that?\", and she pointed at her brother.\n\nWe both looked over at Matthew who had put on the warmup jacket that was in his bag and was holding up one of the team's leather World Series Champion jackets. Beside it on the table was a new Iphone that was still in the box.\n\n\"The jackets are also available to us. AT&amp;T is another one of our sponsors. As of 30 minutes ago his old number has been changed over to this phone. It has everything at zero cost to him. My friends at AT&amp;T took care of everything, including the cost of closing out his old account.\"\n\n\"He had a phone.\"\n\n\"I am aware, but this one is a little self-serving for me. He can use it to take pictures and videos of me when he's at the games and maybe give me some tips.\" Beth laughed and gave me a \"yeah, right\", and shook her head, but at least she was smiling.\n\n\"Look, I know you said no gifts, and this is the closest that I could come. I didn't spend a penny. Well that's a lie. I bought the gift bags at the dollar store.\"\n\n\"Please Beth. Please can I keep them Beth?\" Matthew was pleading with her and I could tell that it was putting his sister in an awkward position.\n\n\"Yes, but I don't want you on that phone all night.\"\n\n\"Buddy. Instead of picking up the tickets at the gate, I put them in your card.\"\n\nA large meat pizza, house salad and a jug of Coke, and of course a flaming birthday cake, turned out to be my buddy's favorite birthday meal. The night went fairly well after Beth got over the gifts and started to believe that I wasn't trying to buy anything or anyone.\n\nMatthew opened up about Beth being a year younger than him but being his guardian since she turned 18, a few years earlier. The year after their parents died in a car accident. They had stayed with an aunt and uncle who had depleted any of the savings that they had inherited, and when it was gone, the only family that remained, kicked them to the curb.\n\nWorking part-time at a nursing home while doing nursing classes must have been taxing on Beth, but not once did she complain about it. What she did complain about was her older brother spending too much time watching, reading about and going to baseball games.\n\nWhen Beth picked up the check for the meal, I didn't even bat an eyelash. I was an invited guest and there wasn't a chance that I would even consider insulting her.\n\n\"Are you guys sticking around after the game tomorrow?\" They looked at each other and shrugged. \"The reason I'm asking is, it's supposed to be stinking hot and if you want, bring your suits and you can come over for a swim and we'll BBQ something. Does everyone like steak?\" They both nodded. \"Perfect. If you don't want to wait, I'll give you the address and gate codes, and you can get a head start before I get there.\"\n\nI could see it in Beth's face that this appealed to her far more than sitting in a hot stadium.\n\n\"Joe, that's very generous, but we don't want to be any problem.\" It was already too late. I had sent Matthew the coordinates and codes.\n\n\"How are we going to find it Beth? Do you know this street? I don't.\" He showed her the info on his phone, and she shook her head.\n\n\"Use your new phone buddy. It has Google maps. I'll be there shortly after the game. Make yourselves at home. Lots of towels and drinks in the cabana by the pool. If you can't find anything, look around for it.\"\n\nThe weatherman wasn't wrong. Waves of heat shimmered over the outfield causing the damp sweat to cover every inch of my body. It was uncomfortable and gave me a new appreciation for night games.\n\nA pitcher's duel ended with a 2 -- 1 win. By 4:30, I was on the highway headed home.\n\nPulling through the steel gates I noticed the old Toyota parked close to the garage. It was the first time in over 4 months that I had had any kind of company over.\n\nI know that I am at times sheltered and spoiled. Sheltered because, my life has for at last year and a half, has been one where I have lived well, but I was coached and guided every inch of the way. Spoiled because I was given an athletic gift. A star in college. Short, bright stints in \"AA\" and \"AAA\" ball, then the move to the majors and all the accolades that followed. Money and fame.\n\nBut as sheltered and spoiled as I am or can be, I'm not jaded. There are some things that keep me level- headed. Being kind to others helps and remembering to enjoy the purest and simplest things in life also doesn't hurt.\n\nOne of those things is recognizing beauty and walking towards the pool I could see that Beth was just that. Beautiful. Pure and natural. Tall and blonde. A true California girl, beautiful. Perky breasts. A round, firm butt. A body that would be the envy of most. The tiny droplets of water glided effortlessly down her bronzed skin forming a pool beneath her. The air was very hot, but it reacted with the cool water, making her nipples appear under the thin cloth of her modest suit.\n\nHer beauty wasn't just skin deep. It was also in mind and spirit. As she bounced on the rock diving platform, throwing pool toys to her brother she had a brightness and life about her that few have. There was no self-pity about the cards that she had been dealt. Instead she laughed and played like a teen and not like the 22-year old woman that was the only care provider for her older brother. For the first time in a long while, I was truly attracted to a woman.\n\n\"Joe, you coming in?\" Matthew noticed me first.\n\n\"Absolutely. I'll change and be there in two minutes.\"\n\nMinutes later, a dive / belly flop signaled my arrival. Submerging, I could hear the siblings laughing.\n\n\"No problems finding the place?\"\n\n\"Not really, but Matthew and I had to try to act like we belonged here. Security pulled right up behind us when we stopped at the gate. I'm sure if the code didn't work, they'd have shot us on the spot.\"\n\nNow it was Matthew's and my turn to laugh.\n\n\"Did you guy's help yourselves to drinks?\"\n\n\"No. Beth said that we shouldn't impose. No drinks.\"\n\n\"Well now that you have the code, you can come over here to cool down any time that you want, so you had better find out where the drinks are.\" I pointed toward the cabana and Matthew was out of the pool like a shot.\n\n\"Look Joe, thanks a lot for coming last night and for today. It means more to him than you'll ever know. You are his hero, but you don't have to do all of this.\"\n\n\"Hero? Well heroes often fail. I would prefer to be a friend more than a hero.\" Beth shook her head in disbelief. \"Matthew told me that you don't drink, so can I offer you a soda, juice, flavored water or something like that?\"\n\n\"I drink. I just don't drink a lot. It's a luxury that we can't afford. It takes the backseat to other things.\"\n\nUnderstood.\n\n\"Oh. I have lots of other things too. If you'd like something stronger, that is.\"\n\n\"White wine?\"\n\n\"Done.\" Finding Matthew staring through the glass doors, into the vast cavern of the cooler, I asked if everything was alright.\n\n\"Yeah. There's just so much. I don't know which one I want.\"\n\n\"Have one of everything.\"\n\n\"Beth would kill me. Kill me dead for sure. Manners. She told me before we got here.\"\n\n\"Well, Cherry Coke and Vanilla Coke are my favorites.\" That sealed the deal. Matthew pulled out a can of the cherry and made his way to the pool.\n\n\"A glass of white for the lady.\"\n\n\"Thank you very much. Nothing for you?\"\n\n\"Nope. Your brother tempted me with a Cherry Coke. I had to have one.\"\n\n\"Joe, your home is beautiful. Thank you so much for inviting us.\" Matthew shook his head wildly. \"Yeah, this pool is sooooo cool. It's so hot. Our apartment is so hot right Beth. Tell Joe how hot it is.\"\n\n\"Yes Matthew, it can get pretty hot.\"\n\n\"I wasn't joking. Anytime that you are free, come over and use it, even if I am on the road. Matthew knows my schedule. The WIFI password is on the fridge. Help yourself to whatever you can find.\"\n\n\"I think that's a little too generous of an offer for us to except.\"\n\n\"Not really. There's never anyone here. It nice to have company.\"\n\n\"No family Joe?\"\n\n\"Beth. No Beth.\" Matthew's tone sounded like he was scolding her.\n\n\"What? I'm just asking.\"\n\n\"Not really. My father passed 4 years ago. He and my mother divorced years ago. She remarried and has a family of her own. We only see one another a couple of times a year, if that.\" Matthew was staring at his sister.\n\n\"I'm really sorry. I had no idea.\"\n\n\"Don't be. How would you know?\"\n\n\"Well it looks like he knew.\" Pointing at her brother.\n\n\"That's because he reads about baseball. Sports Illustrated likes to write tell all's. Anyway, let me start the BBQ and get us some more drinks. Matthew, vanilla or cherry?\"\n\n\"Vanilla.\"\n\nBeth's guard was down from the night before. She laughed and even joked about baseball. The steaks and salad were a hit and Matthew lost his shit when I pulled out a small ice cream cake.\n\nWe wandered around the house so that I could show them where things were, just in case they came over and I wasn't there. Beth was amazed at the size of the bedrooms and the ensuite bathrooms. Her bother was fascinated by some of the memorabilia that I had and wouldn't leave the trophy room.\n\n\"Oh my god. I can't get over the size of those tubs. I can't remember the last time that I soaked in one. We only have a shower at our place. But on hot days like this, it works out okay because there is very little hot water.\"\n\n\"Well, I'll take Matthew downstairs. You can lock the door and soak for a while. Toiletries are in the closet somewhere.\"\n\n\"I couldn't. Plus, we have overstayed our welcome. We should probably be going.\"\n\n\"Your call. You said at dinner that you didn't start until noon tomorrow. Relax, have another glass of wine and stay the night. I have fresh robes and lots of new t-shirts and sweats that you can lounge in. There are 4 spare bedrooms. Pick one. They all lock. And if you feel more comfortable, the one down the hall has two beds, so Matthew can crash in there and keep you safe.\"\n\n\"It's not that. It's just that...\"\n\n\"I understand. It's very hot out and I know that you guys don't have A/C, so I just threw it out there. No pressure.\"\n\nShe didn't know which way to turn. As much as the idea appealed to her, her common sense was screaming \"no and yes\" in unison. She stared at her feet for a few seconds before speaking.\n\n\"Can I run it by Matthew and see how he feels? Sometimes things can't change in our routines with such short notice.\"\n\n\"Yeah, think it over. I'll be downstairs.\"\n\nOver the music, I could hear small squeals of joy. Their home was clean and had everything that they required, but I would imagine that staying here on a night like tonight would be very much like checking into a Hyatt.\n\n\"Joe. Joe. We're staying over. Thanks, so much Joe. Thanks for everything. Can I, can I, go back in the pool for a while? Is that okay?\"\n\n\"No problem buddy, I'll be out in a minute.\" Beth was standing behind me with a sadness in her eyes. She wanted to say something, but it appeared as though she couldn't find the words.\n\n\"Are you joining us in the pool or are you headed up to soak for a while?\"\n\n\"Oh, that big old tub and I have a date.\"\n\n\"Good. Enjoy. Help yourself to anything that you find. See you in a while.\" I poured her another glass of wine and her skipped up the stairs.\n\nMatthew and I hung out in the pool gazing at the stars. He showed me his favorite constellations, The Big Dipper, Orion the hunter and Taurus the bull. He told me that one of his best memories was Beth taking him to Griffith's Observatory to star gaze. He talked and talked and talked, and I listened to every word.\n\nI'm not sure where the night went, but at some point, Beth appeared from the cool comfort of the house to tell us that she was heading to bed. I agreed that my time was also up and jumped out of the pool.\n\nAs we dried ourselves off, I was drawn to Beth like a bug drawn to the blue light of a bug zapper. She stood there with her long blonde hair tied back in a ponytail, wearing a long white robe and she looked absolutely beautiful.\n\nWhen Matthew had discarded his towel, we gave each other the elbow handshake, shoulder bump hug and said our goodnights. Beth moved in for a real hug and said goodnight as well.\n\nThe soft cotton of her robe sent tingles up my body. It was soft and smooth, while her body felt firm beneath it. I could feel her breasts pressing into my chest for longer than I should have held her. The smell of her skin and wet hair was intoxicating. I'm not sure what had come over me, but I turned my face to the right. Separating my cheek from hers, I moved to kiss the soft skin of her cheek but missed and kissed her squarely on the lips.\n\n\"Beth, sorry. I didn't mean to. I mean I tried to. Oh man. Sorry.\"\n\n\"It's fine. Thank you very much for everything tonight. It was a great day and night for us.\"\n\n\"Well I hope that there will be many more.\"\n\nI wish that I could say that it was a good night for sleeping but it was the exact opposite. I tossed and turned like a teenager. Visions of Beth in her sundress, in her bikini and in her robe danced around in my head. Every time that I was able to clear those thoughts, the feel of her lips on mine popped into my head.",
        "My internal alarm clock woke me at 7:15 am. Putting on my usual gear, I headed out for my morning run. The forty minutes jog always started me off on the right foot.\n\nReturning home, I found that both of my house guests were still in bed, so I quietly made my way upstairs and showered.\n\nI think that the cool air on a hot night, accompanied with sleeping away from home caused my guests to sleep in. Chaos ensued when they finally awoke. The sounds of shuffling feet and opening and closing doors filled the air.\n\n\"Matthew! Oh man. Oh gosh. We're late. Come on Matthew, we have to move it.\"\n\nBeth rushed down the stairs looking like she had just rolled out of bed.\n\n\"Sorry. Sorry. Sorry. I, we never sleep in. You must think that we are so lazy. I feel like...\"\n\n\"Stop. Everything's fine. I have some breakfast ready for you guys. Go up and get ready to go. Come back down, grab some food and you will still have plenty of time to make it to class. I'll drop Matthew off at your house. Or, he can come to the park with me and I'll bring him home after the game.\"\n\n\"He'd love that\", faded into the air as she ran toward the stairs.\n\nThey both appeared shortly after. Beth freshly showered. Matthew freshly out of bed.\n\nMaking herself a plate to go, Beth hugged Matthew good-bye, then leaned in and hugged me also.\n\nFor the second day I a row, our awkward hug turned into an even more awkward kiss. I honestly tried for her cheek, but once again our lips brushed, and lightning bolts once again filled my body.\n\n\"Beth, I'm sorry. I keep doing that, but I didn't mean to. I was trying for your cheek. I don't want to make you feel uncom...\"\n\nThe fingers on her small hand pulled my chin toward her so that we made eye contact. Leaning forward Beth put her lips against mine and gave me the softest kiss ever.\n\n\"There. Now we're even. See you guys at home after the game. Thanks again for a lovely night.\"\n\nMatthew sat in the box with the media guys. They took him under their wings and brought him down after the game. The funny thing was that while working at the home, some seniors were watching the game and when Beth looked up to see the score, she noticed Matthew sitting in the box behind the commentators.\n\nAfter grabbing some ice cream, I dropped Matthew off to a dark house. Matthew texted me when he was safely inside and told me that Beth was already sleeping because she had an early class.\n\nThe heat didn't let up. The mercury continued heading up. It was a sweaty, shitty few days of ball and the weatherman said that it was only going to get worse. Luckily Thursday was a day off and Friday morning we were leaving for some games in Colorado.\n\nHot or not, I still put in my early morning jogs and on Thursday, I was grabbing some juice when my phone rang. I noticed 3 missed call over the last 15 minutes. I hadn't heard from Matthew since Monday night, so I assumed it must be important.\n\n\"Hey buddy, what's up?\"\n\n\"Joe. Can you help me? Beth, her car. Her car won't go, and we need it. I need it today. It's important. Can you look at it? Please Joe. Can you fix it?\"\n\n\"Where are you?\"\n\n\"Home.\"\n\n\"On my way.\"\n\nI had never heard Matthew like this. He was, for the lack of a better word, \"distressed\". He was very upset. I didn't race over, but I surely didn't waste any time.\n\nIn the already hot, early morning sun, both Matthew and Beth were dressed for something important and were standing curbside by her car when I pulled up. As much as I liked tinkering with motorcycles and old cars, I knew as soon as I saw the old Corolla that I couldn't help it. The greenish yellow liquid was a telltale sign that bad things had happened.\n\n\"Get in.\" Beth pointed toward her car as if asking why I wasn't going to look at it. \"Come on, I'll drive you guys wherever you need to go.\"\n\nMatthew climbed into the backseat and I noticed that he curled his arms around his knees and was gently rocking in the seat.\n\n\"It's okay buddy. Just tell me where to go.\" He just pointed at Beth, who had yet to do up her seatbelt.\n\n\"Joe, we can't expect you to take us to an appointment on your day off.\"\n\n\"We'll debate this later. Tell me where we're headed.\" Matthew belted out an address and showed me that he had it on his phone's GPS for us.\n\nThe first 10 minutes of the drive seemed to calm Matthew, that is after he knew that we would make it on time, and he wouldn't miss his appointment.\n\n\"When you were driving last night, did you smell anything weird?\"\n\n\"Yeah. It smelled like a sweet, kinda sour smell.\" I think that her car had overheated.\n\n\"Did the A/C stop?\"\n\nI am sure that under any other circumstances it would have been funny, but when I asked if the A/C stopped working, she said \"yes\". Then after what seemed like a very long pause, she said \"3 years ago\".\n\n\"Oh.\"\n\n\"I don't think that it has anything to do with the A/C. I started to smell that smell and a few minutes later it started to make a loud knocking sound. Almost like a tap, tap, tap noise.\"\n\n\"Oh. How far did you drive with it making a noise like that?\"\n\n\"Straight home. Not far. Maybe 6 or 7 miles.\"\n\n\"Oh.\"\n\n\"Do you think that you know what it is?\"\n\n\"Yes.\n\n\"Great. Can you fix it?\"\n\n\"No.\"\n\nWe pulled up in front of a Medical Arts building. Even though they both asked me to come in with them, I declined. Dressed only in my still damp running gear, I'm sure that I would have been out of place.\n\nJust over 2 hours later, they appeared at the parking lot. Beth spoke to Matthew all the way to the vehicle. She tried to look at him as she spoke. She rested her hand on his shoulder, but his gaze stayed fixed on the pavement. She pulled him to her and hugged him tightly, kissing the top of his bowed head. There was an unexplained happiness and a sadness surrounding them. My inquisitive side begged me to ask questions, but I knew my place.\n\n\"Well guys, where to now.\"\n\n\"Could you possibly drop me at work? I'm already late. I'll just grab a cab home. And if it's no problem, could you drop Matthew?\"\n\n\"No problem at all.\" I looked in the rearview mirror and Matthew still had his head hung low. \"Anyone hungry? I'm starving. We could grab something for the ride.\"\n\n\"Donuts.\" It was the only word that came out of the backseat.\n\nI quick stop the pick-up some \"fritters\", and we were headed toward Beth's work.\n\n\"Is there a spare key for your car at the house?\"\n\n\"Yes.\"\n\n\"Good. I'll take a look at it when I take Matthew home, if that's okay.\"\n\n\"Please do.\"\n\nBoth doors opened when we pulled up at the nursing home. Matthew called out \"SHOTGUN\", to nobody in particular, and jumped into the front seat. With remanence of donut glaze still on his lips, he kissed his sister, who told him that they would talk later.\n\n\"What time are you finished work?\"\n\n\"Four.\"\n\n\"We'll pick you up.\"\n\n\"You don't have to do that. You've done too...\"\n\n\"Bye.\" Matthew closed the door on his still talking sister and we drove away.\n\nThe spare keys were of no use to us. We tried to turn the old Corolla over, but the motor was seized. The old girl had seen way better days.\n\nMatthew and I called a number of garages for estimates, but no one wanted to touch it. With too many miles on it, and so much wrong with it, they all told me the same story, \"You're putting a bandage on a sinking ship. You're throwing away good money\". By 2pm we had emptied any personal belongings. I had taken pictures of the insurance, ownership and the photocopy of Beth's license and a flatbed had loaded it up and handed Matthew $200 for the scrap metal. The old car was gone forever.\n\nIt doesn't matter where you live, once you become accustomed to the pleasures of A/C, you need it to be part of your life. Just sitting in their apartment felt like a sauna. Even the constant hovering sounds and motions of the three oscillating fans did little, if anything, to move the air or cool the room. I know that millions of people live in conditions like this every day, but watching Matthew sweat as he just sat and read his Sports Illustrated, broke my heart.\n\n\"Buddy, you comin with me to pick Beth up?\"\n\n\"You're kidding right?\"\n\n\"No. Why?\"\n\n\"Your truck has A/C, dummy. That's why.\" Well that's what I get for asking a stupid question.\n\nBeth was still wearing her scrubs when she got into the truck. She looked tired and sad, but Matthew didn't seem bothered by it, nor did he offer his sister the front seat. Beth didn't seem to mind and pointed the air vents in her direction and turned up the fan speed.\n\n\"How's Betsy?\"\n\n\"Heaven.\" Mathew told her.\n\n\"Who?\" I asked.\n\n\"That's what she calls her car.\" Once again, I smiled.\n\nAfter that the ride home was in complete silence.\n\nI pulled into the same spot that her Corolla had been parked in. The only thing left as a reminder was the coolant and oil satins that still lay shining on the ground.\n\n\"Hey buddy, can you give your sister and I a second to talk?\"\n\n\"Why? Are you guys planning on going out for dinner without me?\"\n\n\"No.\" He closed the door behind him, but he walked half backward so that he could keep an eye on the truck. I'm sure if I even moved a muscle, he would have sprinted back to us.\n\nI made eye contact with Beth in the rearview mirror.\n\n\"Sorry, I needed to talk to you alone. I didn't want to put you on the spot in front of your brother.\" She had a look that she was expecting me to say something bad. \"It's so freakin hot out, and it's only going to get hotter. I'm leaving in the morning for a week and change, and I would like to offer you and Matthew to stay at my place.\" Her head lowered to the point that her chin was touching her chest. \"That way you'll have some relief from the heat, and you'll have a vehicle until you can figure things out.\"\n\nHer sobs were barely detectable, but they were there.\n\n\"If you agree, we'll go upstairs and pack up all the things that you need and take them with us. Anything else you guys can come back for if and when you need it.\"\n\nMatthew was still standing outside of the building with his eyes glued to the truck.\n\n\"I don't want to rush you, but your bodyguard looks like he's headed this way.\" Beth chuckled, and her voice crackled through her tiny sobs.\n\n\"Why?\"\n\n\"Why what?\"\n\n\"Why are you helping us?\"\n\n\"Because we're friends, and friends help each other. I'm going to get out and go over to Matthew. In 2 minutes, I'll send him over. You can either tell him what we were talking about, or that we are going somewhere to eat, or you can tell him whatever you want. If you decide to come, we'll pick some pizza up, just in case he asks.\" Beth chuckled again, but there was pain in it.\n\nMatthew eyed me with the same cautious look that he had given me the very first day we had met. He wasn't nearly as agitated as he was this morning, but he was concerned.\n\n\"What's wrong. What's wrong with Beth? Did you swear in front of her?\"\n\n\"Never. You told me how angry that makes her. I don't want her giving you or me any trouble. She won't let us hang out if I do something like that.\" Matthew nodded his head in agreement, but not once did his eyes leave my truck. \"I think that you should go talk to her.\"\n\nMatthew didn't hesitate for a second. He opened the back door and after a minute, he disappeared inside and closed it behind him. After what seemed like 10 minutes they appeared. Walking toward me hand in hand, I could see that they had both been crying.\n\nNo shoulder bump, no handshake, instead I was sandwiched between the siblings in a hug.\n\nWe unloaded the back of my Escalade. It didn't take much. Two loads each and we were done and that included the pizza. Apparently, all that Matthew needed to survive was his phone and his clothes. He told Beth that everything else was already here.\n\nThere was no surprise when Matthew appeared wearing his board shorts and ran toward the pool. His sister yelled \"eat\", but his \"later\" could not be heard over the splash of his cannonball.\n\nWithout asking, I poured wine for Beth and opened a beer for myself. Eating alfresco allowed us to jump in and out of the pool to cool down when we needed. Matthew did his own thing, eating his pizza and indulging in a various assortment of sodas.\n\n\"So, I have 3 vehicles. I'll leave the truck for you, if that's alright?\"\n\n\"Truck?\"\n\n\"The Escalade.\" Beth's surprised look, surprised me.\n\n\"Oh, no. That's way too nice. Don't you have something like Betsy?\"\n\n\"Not really. It's best you take that one, believe me.\" She curiosity got to her.\n\n\"What are the other two?\"\n\n\"I have a Mercedes-AMG GT Black Series and my first vehicle. A 1966 Bronco. It's old and unreliable, but it keeps me humble.\"\n\n\"Do you need me to drive you to the airport?\"\n\n\"No. We meet at the park. They take us to the plane from there.\"\n\nIt was refreshing to watch Beth. Unlike so many others in California, she wasn't trying to be someone that she wasn't. Her fingernails were done, but they were done by her. Her hair had a modern style, but I could only assume that it didn't cost her $500 to get it done. And for the second time in my pool, she was wearing the same suit, sometime that is an absolute no-no with girls her age. Beth had lots of responsibilities and it looked like she had a pretty good head on her shoulders.\n\nMore than once she caught me checking her out when she dove off the rock platform of when she climbed out of the pool. I couldn't help myself. Her beauty was mesmerizing. No matter which way she turned or how she walked, she was a vision of loveliness. My stares ended up getting me into trouble.\n\n\"What?\" Beth was now looking directly at me. \"What's wrong? Why are you staring at me?\"\n\nWow did I feel like a jerk.\n\n\"I'm sorry. I'll stop. It's just that you are so natural and pretty. It's hard not to look at you.\"\n\n\"See Beth, I told you that you were pretty.\" From out of the blue her brother piped in. He had been so quiet up until this point that I had nearly forgotten that he was there.\n\n\"Thank you, Matthew.\" She turned away from me and headed toward the cabana. I could have sworn that there was just a hint more bounce in her step and sure enough, she looked over her shoulder to catch me checking out her butt.\n\nWhen she returned, I was gifted with another beer and noticed that she had topped up her wine. We got into a long conversation about our lives, personal and otherwise. Beth told me that she really hadn't had a boyfriend since high school, and I told her that my last girlfriend was in my first year playing in LA. She was a movie starlet that wanted to be seen with a sports guy. We hashed out all the details of where things were, how to order anything that was needed and when the cleaning staff and pool maintenance would come in.\n\nFor Beth and Matthew, the idea of someone cleaning their home and bringing in their food, sounded like a foreign language to them.\n\nWhen Beth left the table, her brother hit me with a shocker.\n\n\"She likes you.\"\n\nI couldn't believe his words. I mean she kissed me, once. And she didn't kick me for checking her out, but like me? I highly doubted it.\n\n\"No way. I think you're running outside of the baseline on that one buddy.\"\n\n\"Nope. I know. And I know, you know.\"\n\n\"Know what?\" said Beth.\n\nMatthew and I both said \"nothing\" in unison. Beth had unintentionally snuck up behind us, putting a stop to our conversation. When she heard the answer to her question, a snide \"so that's how it's going to be with you two\" came out of her mouth.\n\n\"Joe, can I go read in your trophy room. I won't touch anything. Nothing at all, just the magazines. Promise.\" Matthew looked way younger than he was. It was time to clear the air once and for all.\n\n\"Okay, we have to set some guidelines up right now.\" Both siblings looked at me with their fullest attention. \"You guys are staying here. It's now your home. Anything in the house is fair play. Eat what you want. Drink what you want. You don't have to ask me. Matthew, if you had guidelines at your place with your sister, follow those. Beth, you can be assured that your room is off limits to us guys. As for any another room, please make yourselves at home. Read what you want, touch what you want, watch what you want. Understood?\" They both nodded their approval. Matthew was the first to speak.\n\n\"Joe, do we...do we have to leave when you get home?\" Beer flew out of my mouth and nose. It was just like one of the best comedy spit-takes of all time. Beth roared with laughter and Matthew looked offended. \"What?\"\n\n\"Matthew. Of course, we have to leave. Joe is being far to kind as it is. We'll probably be gone when he gets back.\" Matthew's head hung down so that we couldn't see the pain in his eyes.\n\n\"Woo, woo, woo. You better be here when I get back. I'll need someone to tell me how bad I played. If I stink, I can blame it on my batting coach.\" I put my hand on Matthew's shoulder to show him that I cared. \"Look, I'm in no rush what-so-ever for you to leave, so get that out of your head. Stay until fall, when the weather starts to cool down. Maybe things will have changed for the better. Plus, Beth will be done school, right.\" I looked toward Beth to see if I was correct about the school thing.\n\n\"Yes, but I still need a couple more classes.\" She looked at me as if she was going to scold me. \"Joe, you have to be careful what you say, Matthew will believe everything that you of all people tell him.\"\n\n\"Good, because not one word of it was a lie. I gotta hit the hay. Early flight. You guys talk it out amongst yourselves, but I hope that you are here when I get back.\"\n\nMatthew stood and hugged me hard. \"Joe, thank you for helping me today.\" I hugged him back just as hard. \"I'm sorry your day started off badly, but I'm glad that I could help buddy.\"\n\nMaking my way inside. Beth stopped me. There was something that she wanted to say, but she couldn't she was choking back tears. Her chin was puckered, and her voice was hiding somewhere deep inside of her. Somewhere deep inside for her young body, she carried a burden far larger than most. Pulling her to me, I let her know that things would be okay.\n\n\"Don't. You don't have to say anything. Nothing at all.\" A gentle kiss on her forehead and a reassuring hug was enough for her. \"I don't want to ask too many questions about this morning, but if there's anything that I can help with, you know that I will.\"\n\nBeth shook her head and said, \"Thank you. We'll figure it out\" and left it at that.\n\nThe days away dragged on. It was the first time that I was on a road trip and I wanted to be home. Matthew text me daily, letting me know how much that they were enjoying the pool and cool air at night. One of his texts included a picture of Beth by the pool. The image was burnt into my head. His last text told me that both he and Beth could not remember sleeping so well. I wished that I could say the same.\n\nThe purring engine of my Benz died when I pulled it into the garage. Both other vehicles were there. I hadn't noticed Matthew or Beth, but I was hopeful.\n\nNo need to worry. Matthew was floating in the pool and Beth was in the kitchen with her back to both the pool and me. Music was coming out of the cabana like it was a pool side concert hall. Beth's body swayed to the tune. She was wearing a loose, button down, white blouse and her butt was covered in small peach colored shorts, while her bronzed legs appeared as though they had been in the sun over the past few days. The overly sexy look had me in a trance.\n\nSneaking upstairs unheard over the music wasn't a problem. A quick change into some shorts and I would join them by the pool.\n\nIn retrospect, I should have announced my return.\n\nI heard Beth yell to her brother that she was going upstairs to put her bathing suit on. I thought nothing of it. Until she walked past the open door of my room, topless.\n\nThe white blouse was sliding down her arms and into her hands. With her shoulders squared back and her arms behind her, I got my first unimpeded look at Beth's naked chest. As suspected, her white, untanned breasts were impeccable. Placed firm and high on her chest, adorned with beautiful quarter sized areolas and small cute nipples. Her stomach was flat and tanned, while her back was straight and elegant as she walked. Beth's tan lines stood out like a sore thumb in contrast to the rest of her darkened body.",
        "Daring not to move, I stood in silence but one her senses gave away my presence and Beth jumped out her skin. Covering her breasts with her arms she let out a scream. When she saw that it was me, her scream changed to shock.\n\n\"Jesus Christ Joe, you scared the hell out of me.\"\n\nI laughed to try and lighten the situation. \"Beth, I'm so sorry. I thought that you guys heard me pull up.\"\n\n\"Ah, no. If I had, I wouldn't have been walking down the hall like this.\"\n\nThe damage was already done, so what more harm could I do. \"That's unfortunate. Very, very nice by the way.\" And I headed down to see Matthew.\n\n\"Hey Bud.\"\n\n\"Joe, you're back. Great road trip. You guys rocked. I didn't miss a game. What's that?\" He was pointing to a bag that I had with me.\n\n\"Bobbleheads. All 3 parks had bobblehead days. I ended up with 7 different ones. They're yours, if you're interested.\"\n\nToweling off, Matthew grabbed the bag, \"Thanks, Joe\", and moved toward a table so that he could investigate its contents. \"Oh, man.\" I guess that it met his approval.\n\n\"You're too good to him.\" Beth was standing behind me now fully dressed in her bikini. She was still blushing, and the redness deepened even more when my eyes looked her up and down.\n\n\"I brought you some too. Gonna get you started collecting baseball junk.\"\n\n\"Oh, lucky me.\"\n\nOther than doing it for myself, I couldn't remember anyone else cooking a meal in my home. Beth had made a rice dish and put together some kabobs that we BBQ'd. It was excellent.\n\n\"So, how was everyone's day off?\" Matthew was still too interested in his new bobbleheads to pay any attention.\n\n\"We both had online classes. But I have to tell you, it's hard to concentrate when the pool is shining away in the background. It's quite the distraction.\"\n\n\"Tell me about it, I get lost in it all the time. I'll float and listen to music. I lose the whole day. So, how did the week go?\"\n\n\"Oh my god. It's going to be hell getting Matthew out of here. It was so nice having the A/C to sleep. And the pool was great. We got so much done. I still haven't found a car. I looked at a couple, but they were just too expens...they weren't right for us. Luckily the bus stop is at the end of our street.\"\n\n\"Well, there's no rush. Use the Caddy until you find something that you like. Excuse me for a minute.\" I knew before I made the call that the end result of my upcoming actions would piss her off, but I was willing to risk it. The phone only rang twice before it was answered.\n\n\"How's my main guy?\"\n\nFelix has been my agent right from the start. He had warned me early about the path I was taking and when I slipped and fell, he stayed by my side, until he helped me stand back up.\n\n\"Hey Felix. I'm good, but I need a favor.\" I heard Felix rustling papers in the background. \"Remember that guy that I bought my Benz from?\"\n\n\"Yeah, Yeah. The guy in the Hills right.\"\n\n\"That's him. Well he wanted me to do a couple of spots for him. I want you to hook that up. Tell him that I'll do a couple of his spots, for a car. Tell him I want a C300. Fully loaded. Tell him that he's getting off wicked cheap, and if he does it, he'll be doing me a solid, and so will you. I'll owe you both. If he says it's a go, I'll send you a name and license for the registration today. I need this to be expediated, like yesterday. And Felix, don't worry, I'll make it right with you up later. This is very important to me.\" I had never told him that before. A simple \"On it\", was followed by a click.\n\nI brought a bottle of chilled white and two glasses back to the table. \"Sorry, where were we? Oh, yeah, now I remember. Why were you running around naked today?\"\n\nBeth's head shot toward her brother, but he wasn't close enough to hear what I'd said. \"I wasn't running around naked. I had finished the prep work for dinner and was in a hurry to get into the pool. Sorry.\"\n\n\"No need to be sorry. You didn't hear me complaining, did you? Not even a bit.\" The blush was back, and I laughed at the situation.\n\n\"Well by California standards, they're nothing to look at. Way to small.\" I laughed loud enough to catch Matthew's attention for a short time, so I lowered my voice.\n\n\"I don't know where you ever heard that, but it's a crock. And at the risk of sounding like a jerk, if anyone ever told that, they're an idiot. You're absolutely perfect.\"\n\n\"Liar. But, thank-you.\"\n\n\"I may stretch the truth on a few things, but that wouldn't be one of them. More wine?\"\n\n\"Please.\"\n\nA text from Felix came through in between sips of wine. \"Does tomorrow morning work? He has a gray one ready to roll. He said that he can have a crew ready to shoot the first thing in the morning, say 7:00am?\"\n\n\"That works, and thanks Felix.\" I scrolled through my pictures and sent Felix a shot of her license and told him to have registered to her, but have it insured by my company.\n\n\"Any more thoughts about what I said before I left?\" Beth looked down at her glass and spun the stem in her delicate fingers. She knew what I was asking her.\n\n\"No.\" A long silence followed. \"I can't put that on you. We'll be okay.\"\n\n\"I can assure you that no one's putting anything \"on\" me. Tell you what. We'll move what's yours into the garage. You save the money from your rent and when the time is right, you can look for another place.\"\n\n\"Please Beth. Please can we?\" We both jumped. Matthew snuck up on us like a cat sneaking up on a mouse.\n\n\"We'll see Matthew.\"\n\n\"We'll see what? We both love it here. Not everyone is like Uncle Bob and Aunt Judy. You have to trust again. It's comfortable here.\"\n\n\"Matthew, this is Joe's home, not ours. So, we aren't as comfortable as you might think.\"\n\n\"You were comfortable enough to walk around the house naked. Naked Beth. That's comfortable.\" I couldn't look at either of the siblings. I put my face in my hands to cover any of the emotions that might show through.\n\n\"Oh my god you little shit. Do you hear everything? I wasn't naked. I was taking my top off so that I could put my swimsuit on. I didn't know that Joe was home.\"\n\n\"Sure. Naked. I heard Joe say it. Naked.\"\n\nBeth looked at me with surprise and a certain element of desperation in her eyes.\n\n\"Joe. Please tell him.\" Matthew looked at me and smiled. The little shit. He was being mischievous, but it had slipped past his sister.\n\n\"She was naked. And that sounds pretty comfortable to me buddy.\"\n\n\"Oh my god. I was not. I was...\" Matthew started laughing so hard that he was snorting. \"Oh, you pair of shits. That's why I don't want to stay here. I have enough with one of you. I certainly don't need the two of you teaming up to pick on me.\"\n\nBoth of us stared at her waiting for an answer. It was a pressure tactic, but we didn't care.\n\n\"Alright, but we'll have to sneak our stuff out. The landlord used the last month rent to cover any arrears payments. So, he won't be too happy. We can try it until October.\"\n\nI messed Matthew's hair. \"It's all going to work out guys, you'll see. I just don't want you having too many parties while Beth's at work and I'm away.\" Another snort from my buddy.\n\n\"Before I hit the hay, can I ask you both a question?\" Their answer of \"sure\" was timed in perfect unison. \"If you could do someone a favor or something to help out a friend and it only took a couple of hours of your time, would you do it?\" They both nodded that they would. \"Good.\"\n\nWhen I got up from the table, so did they. Matthew hugged me first. It was the hardest that I had ever been hugged in my life. Beth's was a little more tender and the feel of her cheek against mine was incredible. I kissed her forehead before I let her out of my arms.\n\n\"I loved dinner tonight. It was the best in a long time. Also, I'll close my door in case you plan on walking around naked anymore tonight.\" Matthew screamed out a laugh and Beth just screamed.\n\n\"You two are horrible. I was not naked.\"\n\nThe shoot was done in 4 or 5 takes. It took less than 45 minutes to complete and we had finished 3 different commercials. The best thing was that the 300 was plated and ready to go when I was. Two sales reps followed me home. One driving Beth's new car and one driving his own. When I pull my Benz into the garage, I had to say that the smaller sized 300 looked good parked in the driveway.\n\nBoth Beth and Matthew were up and having breakfast. My showing up by the backyard entrance surprised them both.\n\n\"See, I told you that I knocked. I told you so.\" Apparently, they had tried to get me to come down for something to eat.\n\nMy plate of pancakes with kiwis and strawberries was a hit. It wasn't something that I had every day, but today was special.\n\n\"Where'd you go this morning Joe?\"\n\n\"Matthew. Don't be noisy.\" Beth scolded.\n\n\"As a matter of fact. I was doing a favor for some friends. I did a commercial and got something in return for a few minutes of work. Wanna, see it?\"\n\nThey both said yes and followed me without any idea as to where we were heading. Rounding the corner, the gun metal gray Benz stood out in the driveway. It was a shiny new toy. The paint was gleaming with a fresh wash and the tires glistened with a fresh coat of Armor all.\n\n\"Wow Joe, that's a beauty. It's not as nice as your black one, but it's a beauty. Aren't you a little too tall for it?\"\n\n\"Matthew.\" Beth tried to quiet her brother, because she thought that he was embarrassing me. \"It's a very nice car.\"\n\n\"Well buddy, you're correct. It is a little small for my liking but it's big enough. I was super comfortable when I sat in it, but it will probably be the last time I do.\"\n\n\"What, you just gonna leave it in the garage, and not drive it?\" Matthew was quizzing me.\n\n\"No. It's not my car.\" I handed Beth the leather pouch containing the key fob, owner's manual, ownership, registration and other important papers. \"It's for you guys.\"\n\nMatthew's, \"Yes\", was followed by Beth's, \"No\".\n\n\"No. Not a chance Joe, it's way, way too much. We talked about this. There is no way in the world that I could even imagine or think about taking it. It's far beyond...\"\n\n\"Beth don't over think it. We talked about this last night and we agreed that all of us would do the same. From the time I left, until the time I returned was 90 minutes. You feel like you owe me, continue cooking. I love it.\"\n\n\"Joe, I don't...\"\n\n\"Geez Beth. Take me for a ride in Betsy 2.0.\" Matthew didn't hesitate. His hand was on the handle waiting for his sister to unlock the shiny new door.\n\nSheepishly Beth found the key fob and pushed the button. Matthew was in in a flash. Beth followed, got in and made adjustments to the seat and mirrors and pushed the button to bring the gray beast to life. They both smiled at the sound.\n\nI watched the taillights as they disappeared down the hill and out of sight. I cleaned up the breakfast mess and went about my daily routine, not noticing until sometime after noon that they had been gone for well over 3 hours. Matthew answered my text in a few seconds.\n\n\"Hey, you guys all right?\"\n\n\"Yeah. Santa Monica. At the pier. Having IC\".\n\n\"Perfect! Just wanted to make sure nothing happened.\"\n\n\"Beth's crying, but don't tell her I told you.\"\n\n\"Why? Is she okay?\"\n\n\"Happy crying.\"\n\nI was gone by the time they returned. Even though it was my day off, we a voluntary practice. I made it home in time for a late dinner, to find the siblings sitting in the jetted end of the pool. Matthew's excitement was very evident.\n\n\"Oh man Joe. That thing is so cool. It has Apple Carplay, I synced my phone to it. And it has A/C. The leather seat even has A/C, my butt was cold and it's fast, not slow like Betsy. Not like Betsy at all. We went all the way to the pier, and it didn't stall once, not even once.\"\n\n\"I'm glad you like it buddy.\" I looked over at Beth and she just stared at me. \"Hey buddy, guess what? Tomorrow is bobblehead day. Clayton and Cody. I brought you a couple home. They even signed the boxes for you.\"\n\n\"You're the best. I have a good collection started. I'm going...\" I interrupted him mid-sentence and threw a towel at him.\n\n\"Sorry Matthew. I meant that they were for your sister.\" He was up and out of the pool, chasing me until I dove in the deep end. We had become a family of sorts.\n\nFor the next couple of weeks, the temperatures still hovered around the boiling point. It was hot and sticky, but we used the pool and stayed inside when it was too bad out. Unfortunately, Beth didn't have another clothing malfunction during all that time. I saw her in her bathing suit lots, but nothing less.\n\nShe started working overtime that rotated around my schedule. It helped her out that her brother was able to tag along to the park so that she had a few extra hours available. Matthew joined a group that were adults his own age, coping with the same issues. And much to my surprise, he liked it so much that he declined an offer for a Saturday afternoon game. Apparently, Beth was dropping him off somewhere on the coast, for a day long pool birthday party and a beach bonfire.\n\n\"Do you have to pick Matthew up tomorrow night?\"\n\n\"No, they said that a driver will bring him home. But it won't be until late around midnight depending on how many others need a ride.\"\n\n\"Well look at you. The whole day to yourself. Plans?\"\n\n\"Homework. Study. Pool. In that exact order.\"\n\n\"Sounds like a good plan. You feel like grabbing something to eat when I get home? It'll be around 5 or 6.\" Beth looked at me as if she had a question, but she didn't ask it.\n\n\"That sounds great. Are you bringing something home?\"\n\n\"No, I thought that we could go out to a restaurant. You pick. Steaks, Seafood, Mexican, whatever you want.\" The question still lingered on the tip of her tongue, until she couldn't take it any longer.\n\n\"Is this like a date?\"\n\n\"That depends on you. I think that you could do way better than me, but I'd love for it to be a date.\" Looking down at her feet, she crossed her legs, putting the top of her right foot behind the ankle of her left. Standing on one foot she looked back up to my eyes.\n\n\"I'd like that too.\"\n\nReservations were made for 8:00pm. I pulled up to the curb in front of Cantina Frida and the valets eyed Beth. She was wearing a form fitting jeans and black t-shirt with a white sweater. They stared at her beauty in approval and parked the car for us. The place was full, but our seats were ready and waiting. Beth gazed around the room looking at some of the people that she recognized. It was a popular spot with the famous. Our server suggested drinks, and we went with the house favorites, Cadillac Margaritas and Paloma's. Beth ordered one of each for us to share.\n\nI had eaten here a few times, and the service and food were always over the top good. I suggested ceviche for a starter and told Beth I was getting the steak, she liked that idea, but opted for some fish.\n\n\"Those people that said hello to you when we walked in, do you know them all?\"\n\n\"Not really. Some. I've met a few. Some come to the games. Some are friends of the other players, and some I know from a past life. But honestly lots of people say hi to me that I've never met before I my life.\"\n\n\"Lots of them are famous. Don't you find that weird?\"\n\n\"Very, but it never hurts to say hello. Sometimes it can be tiring, but it's always free to be nice.\" Beth looked at me, nodding that she knew exactly what I was saying. \"When it gets to be rough, or I'm going through a bad time, I stay home.\"\n\nSandy, the younger server that took our order, set down the drinks and told us to enjoy. Then continued. \"Mr. Plato, I know that I'm not supposed to ask, but I can't help myself. My little brother is such a big fan, do you think that I could maybe get an autograph or take a selfie with you later?\"\n\n\"Absolutely. Do you know any of the valets?\"\n\n\"Yes.\"\n\nI showed her my ticket stub and told her to have one of the valets bring a ball from behind the seat of my car, and I would sign it for her brother. Covert, so that she wouldn't get herself into any trouble.\n\n\"Oh my god. He's going to flip.\" Beth was staring at me.\n\n\"What?\"\n\n\"So, this whole nice guy thing isn't an act. You really are one?\"\n\n\"I guess it depends you talk to about it, but I try. Spent too much time in the beginning acting just like everyone that I now hate. It's a lot easier to be like this.\"\n\n\"Wow. This is freaking great. Try it.\" Beth held the straw of her drink up so that I could have a sip. I did, and she wasn't wrong. Lifting the other drink, she repeated the process. \"Oh, that's good. I don't know which one I like more. I'm not sure which one to pick.\"\n\n\"Don't. Have one now and order the other one later.\"\n\n\"You don't mind?\"\n\n\"Not at all. But I'm only having one. If I have any more and then have a bad game, the newspapers all write that it's because I was hammered drunk the night before. Out drinking tons of margaritas with a beautiful blond.\n\n\"That would be a lie.\"\n\n\"Only the part about the margaritas.\" Beth blushed, but smiled.\n\n\"Can I ask you a personal question Beth?\" She had the straw of the Paloma in her mouth, so she just nodded yes.\n\n\"The day I took you to the clinic, Matthew was very upset. What happened?\" Her eyes looked glossy instantly. She may not have wanted to tell me, but she did.\n\n\"He's so, so, smart. In ways that I can't even comprehend. He has been going for tests and he is the perfect candidate for a learning course for adults his age, with his disab...with the same challenges as him. He was accepted into the program, but the state only covers so much of the costs and we can't afford it until I finish school and start working full-time. That's the only way a bank will give us a loan.\"\n\n\"Maybe...\"\n\n\"No. Don't even suggest it. You have no idea how much you've helped us so far. It's crazy. Matthew and I can't understand our good fortune. We have stopped questioning why, but we appreciate it. We don't understand it, but with all of our hearts, we do appreciate it.\"\n\n\"Then let me help you.\"\n\n\"I can't. And even if I said yes, Matthew would kill me for even letting you know what happened that day. He would be so embarrassed.\"\n\nSandy brought the ceviche and handed me a rolled-up napkin. From the smile on her face, I knew that it was the ball.\n\n\"What's your brother's name?\"\n\n\"Tyler. He's going to be so excited. My boss is on her break, if you don't mind, can we do the selfie now?\" The phone clicked a couple of times and Sandy rushed away.\n\n\"I would never try to embarrass him, ever. Just tell me how much it costs. I'll help you out with it and you can tell him that you got an advance from your job.\n\n\"You forget who you're dealing with? He knows exactly how much I make and what we have in the bank, at all times.\"\n\n\"He is really good with numbers.\" His stat quotes proved that to me over and over again.\n\nWe ate in silence until someone removed the used dishes and Sandy brought the main course. My steak was a medium-rare masterpiece. Beth looked pleased with her fish.\n\n\"Can I get you another round?\" Sandy was good at her job.\n\n\"Please, and a tall glass of water with lemon.\" Sandy acknowledged my request and headed off to fill our glasses.\n\n\"I thought that you said you were only having one?\"\n\n\"I am. You couldn't decide which one you liked more, so I ordered you both.\"\n\nHer smile brightened my day. I watched as she chewed her food, she was delicate and sophisticated. Way more so than I was. Her eyes were bright and alert, she was absorbing every moment. When she watched me watching her, she surprised me again.\n\n\"Why no girlfriends Joe?\" I didn't hesitate for a second.\n\n\"I've had girlfriends.\" She smiled at my rapid response.\n\n\"I mean currently.\"\n\n\"I guess that I could ask you the same thing.\"\n\n\"Because if I had to choose, I'd choose boys.\" Her finger curled and covered her nose as if trying to suppress a laugh.",
        "\"Oh, so that's how it's going to be. Okay smarty pants, why no boyfriends?\" The smile had left her face, she wasn't angry, just pained.\n\n\"I don't have the time. I've tried, but it doesn't work for me. Most can't handle me in school and working at the same time, those that do, have issues with Matthew.\"\n\n\"How does Matthew figure into the equation?\"\n\n\"They think that he's a liability to a relationship.\" How it was my turn to frown.\n\n\"Wow. Let me apologize on behalf of the entire male species. It's their loss by the way.\"\n\nBeth downed about a quarter of the Paloma in one sip and asked again, \"So, tell me.\"\n\n\"Who says that I don't?\"\n\n\"Me for one. We've been living at your house for a month or so. It's big, but not big enough to hide a secret like that.\"\n\n\"I've had girlfriends out here. But I wasn't very smart or lucky about it. I have a bad habit of not realizing until it's too late that they wanted sometime that I just couldn't give them.\"\n\n\"What's that?\"\n\n\"It sounds vain. But the girls that I've met out here, want or wanted a trophy and I'm not that guy.\" Beth must have sensed how uncomfortable it was making me.\n\n\"What's your favorite thing to do on your day off?\"\n\n\"Easy one. Drive up the coast. Windows down, music blaring. Only stopping to eat, sightsee or fill up with gas.\"\n\n\"You?\"\n\n\"That sounds fun, but Betsy would have never allowed it. I'm going to say reading a good book with music playing low in the background, but recently it has changed. Now, thanks to you, it's done while laying around a pool.\" Her smile was back. She waited a few seconds, switched up to the margarita, then asked her next question.\n\n\"What's your dream date?\"\n\n\"My dream date is one just like this. Two people with zero expectations from the other. Good food, cold drinks, great conversation. How can you beat that? You?\"\n\n\"This is my first date in two years, and it seems like a dream date to me.\"\n\nSandy returned. We waved off dessert, opting to pick-up ice cream later. With the bill paid we made our way outside. A couple of phones flashed, and two kids asked for autographs, but that was a normal thing for me.\n\nThe valet parked the GT in front of the eatery. I held the door for Beth, then went around and palmed the driver $40 for his troubles. \"Thanks Mr. Plato. Sweet freakin ride by the way. Have a great night.\"\n\nBeth leaned across the console and kissed my cheek. \"Thank you for a great night.\"\n\n\"My pleasure.\" Her fingers found the volume and window controls and shortly after John Mayer was belting out tunes for all of Wilshire Blvd to hear. All the way home it was a loud sing-a-long to every tune that came over the airwaves.\n\nBeth got a text from her brother telling her not to worry, he was having a good time and would be home in a couple of hours.\n\nThe gates parted, allowing us to follow the lighted glow of the driveway to the brightly lit house. Beth's car stood shiny and sleek, but the spot in the garage was reserved for my beast.\n\nMy date waited in the car until I got out and opened her door for her.\n\n\"Thank you, kind sir. Chivalry is not dead after all.\" I bowed a mock bow and she curtsied in jest.\n\nWalking up the back of the house, her soft hand, held mine tightly. The pool was well lit, and a large baseball glove lounger floated aimlessly.\n\n\"Joe, that was the best night ever. Do you feel like starting the fireplace and having a drink with me?\" It was the best offer I'd had in a very long time, but I decided to stretch my luck.\n\n\"That sounds great. I'm going to have a shower first, if you feel like joining me?\" It was meant as a joke, but I looked at her for signs. Nothing. No words. No signs. No nothing. We stood silently. \"Sorry Beth, it was a joke that was in poor taste. It was supposed to be funny.\"\n\nI came to the point where I thought that maybe I had gone too far. Maybe I'd crossed an invisible line with her. She stood in front of me biting her bottom lip. I was seconds away from begging for forgiveness when I felt her hand squeezing mine. Her feet moved and mine betrayed me. A small stumble in my step and I followed her lead.\n\nThe door of my room closed behind us. Beth reached back and turned the lock.\n\nHer trembles did not go unnoticed as I pulled her body toward mine. With one hand touching her soft hair and the back of her neck, and the other holding the small of her back, I pressed my lips to hers.\n\nBeth parted her lips and darted her tongue to my lips. The sweet and salty taste of her margarita and ice cream tingled my senses. Our lips explored each other. Her soft lips were full and beautiful as they rained moist kisses over mine.\n\nI could feel her shimmying out of her sweater and lifting her t-shift over her head. The lacy material of her bra rubbed the skin of my chest. Beth's hand pulled at the back of my shirt pulling the tails out of my jeans. As her hands reached forward to start undoing my buttons, I reached behind her and in a single snap, unclasped her brassiere. Letting her arms drop, the lacy under garment fell to the floor alongside the other articles of clothing.\n\nWith a last button opened, Beth's hand slid across my chest and shoulders until they were in the sleeves of my shirt. Pushing outward, she removed it from my body.\n\nHer naked back was warm in my hands and her naked breasts felt incredible pressing into my chest. I could feel her fingers fumbling with my belt and the brass button of my jeans. When she pulled down the zipper I groaned. She had released me from the pressure of confinement.\n\nMy own hands slid down the curve of her back until my fingers traced the waist band of her jeans. I deftly undid the button and zipper and returned my hands to her back. With my palms flat I pushed my hands lower into the back of her pants. Finding no panties was the biggest surprise of night thus far. My hands filled with the firm cheeks of Beth's ass. I squeezed and she moaned into my mouth. Her legs moved up and down. She was trying to step out of her jeans. Following her lead, I did the same. Seconds later, we were naked.\n\nThe temperature in the room had increased by 40 degrees. I could feel the hardness of her nipples pressing into my chest and I could feel the oven like heat of her womanhood at my groin.\n\n\"Bed.\" Beth's one-word instruction let me know that this was not a dream. Lifting her up, I carried her over to my bed.\n\nWith her hair spread out over my pillows and her long silky leg and knee were arched so that her privacy remained somewhat intact, she looked like a princess.\n\nWe had kissed twice by mistake and once on purpose, but now was different, we were kissing like lovers. There was a want and a need in our actions.\n\nLowering myself, I kissed Beth's neck. I could feel her warm breath in my ear. The rate of her breathing was changing, and it didn't let up when I moved further south on her body.\n\nCatching her hard nipple between my lips, I sucked it and some of her firm breast into my mouth. Beth cooed and moaned from my touch. I alternated between the left and the right. Licking, suckling and gently biting. Beth's back arched and her body shook with anticipation.\n\nMy tongue left a small trail between her breast all the way down to her bellybutton. Kissing her firm belly, I noticed fine silky blonde hairs. Venturing lower, I headed toward heaven.\n\nLooking up at Beth's face for affirmation, I found her eyes wide open, staring at my every move.\n\n\"Is this okay?\" She didn't speak, but her hand squeezed my shoulder and her head nodded twice.\n\nIt didn't take too much pressure to push Beth's knee over. When it came to rest, she was completely exposed to me. The short silky triangle of blonde hair was barely noticeable against the backdrop of her white skin. On the other hand, the dark outline and dark lips of her vulva stood out beautifully.\n\nA simple, \"Oh my\", escaped her as my tongue parted her lips and I tasted her for the very first time.\n\nBeth's pussy was soaked with her own juices. My saliva would not even be noticed in the mixture. Lapping up what I could, I used my lips and tongue to explode her. Every time that I caressed her clitoris, Beth moaned and touched the hair on my head.\n\nUsing my fleshy probe, I upped the pressure on her clit. My flicks became mor and more focused. The circling and suction of my lips drew the hard nub away from her body.\n\n\"Oh my god. That feels so...\". Her words were cut off midsentence when I eased, pushed and curled a finger into her tightness.\n\nIt was her breaking point. Beth's back arched even further. With her legs wrapped around my head, only her shoulders and butt remained on the bed. The quakes of her orgasm rattle through her like a locomotive. Her shook and vibrated. The simple cries of, \"Oh, oh, oh\" filled the room.\n\nFollowing the same path up as I had down, I found my lips once again on Beth's mouth. She wasn't shy about where my face had just been. She sucked at my lips and tongue. Drinking her own juices off of me.\n\nHer heat brought me back into the moment. Grabbing my shaft in my hand, I rubbed my head on the wetness of her entrance.\n\nThe word \"condom\" startled me back into reality. The look on my face must have said it all. \"Sorry, I'm not on the pill.\" My mind was racing. Where? Where did I put the last box that I purchased? Not wanting to kill the moment I ran the spare bedroom. 30 seconds later, I was back.\n\nStanding by the bed, rolling the Durex over myself, I stared at my soon to be lover. \"What?\" She was questioning the look I was giving her.\n\nGetting back into position, I kissed her neck and whispered, \"It's just that I feel unbelievably lucky to be with you. You so smart and so beautiful, I feel like I'm the luckiest guy in the world.\"\n\nHer arms wrapped around my neck and for the second time that night I started to guide myself in.\n\n\"Please go slow.\"\n\nI nodded and gently started lowering myself. Little by little I sunk into her. Beth was tight and warm and when we finally bottomed out, it felt like a perfect fit. I held my ground. Not moving, barely breathing I waited for her signal.\n\nMy hand and fingers found her firm breast and my lips locked onto hers. Slowly her hips pulled away from me until all that me that remained in her was my tip, then she pushed upward until we were once again completely joined. \"Beth, you feel fantastic.\"\n\nSlow, steady strokes in and out of her. Each feeling better than the last. Beth's hands and nails held, teased and scratched at my back and head.\n\nI couldn't find the will power to take my lips away from hers. As much as I wanted to put my lips back on her perfect breasts, the taste of her lips and the sweet breath that she emitted into my mouth kept me glued to her.\n\nBeth's tightness held me like a vise. Every time that I withdrew, I could feel her clamping down around me. Holding me tight. Holding me in her.\n\nEverything in my body screamed for me to cum, but I held on. It had been so long since I had been with another woman, that I had almost forgotten the feeling. Tonight, was different from all the rest. Before I came to California, I had had girlfriends, we were young and crazy and the sex was just that, sex. Then I met my older woman. I used her, she used me, and neither one cared. She had an unbridled lust for me and my youthfulness, but never, not once, did we make love. It was always raw sex.\n\nTonight, with Beth was different, it felt like we had a bond, a connection. There was something more than sex, it was as if we were making love.\n\n\"Roll with me.\" I rolled to my left and Beth ended up on top of me. Still interlocked, still joined together.\n\nHer palms were on my chest, holding herself up. Her long blonde hair hung down away from her head, gently brushing my skin. Her perfect breasts were pressed together, hanging slightly away from her body. Her knees were at my sides and her perfect bottom bounced up and down as I glided in and out of her. It was the most beautiful sight that I had ever seen.\n\nWith Beth on top, riding me, my hands were free to explore. I couldn't believe how soft her skin was. I traced my fingers over her legs and up until I was able to grab the cheeks of her round butt. I used my grip to hold her as I rose up from the bed and sank into her. Beth's breath was a little more erratic with each thrust.\n\n\"Close. Real close.\" Her words sounded like angels singing.\n\nLetting go of her ass, I worked my way up over her arched back, cupped her boobs and sped up my motions.\n\nBeth stopped moving. She dropped to my chest. My hands that had just been on her breasts were now wrapped around her back, hugging her tightly to me. As I continued pumping, her lips searched frantically for mine. I could feel her body shaking as I released my load into the condom.\n\nI could have laid there all night. Her soft hair was a pillow for her head on my chest. The feel of her warm breath parting the hairs on my chest as she exhaled, kept me aroused.\n\nWe stayed in the same position until I finally softened and slid out of Beth's wetness. She had been quiet and motionless for so long I thought that she might have drifted off, but her giggles let me know that it was not so.\n\n\"I don't want to move, but I'd hate for Matthew to find us like this.\" I understood what she was saying, but I refused to let her go.\n\n\"No, stay with me.\" Finally, I reluctantly released my hold. I watched as she bent to gather the garments that were scattered on my floor. At the door, she turned and looked back at me on the bed.\n\n\"Are you still interested in that fire and a drink?\"\n\n\"Absolutely.\"\n\nThe fireplace crackled in the already warm night air. Drinks were made and I waited for Beth's return. I could see the sway of her hips as she walked from the house toward the cabana. The long black sun dress covered her body, but I could tell that that she was naked beneath it.\n\nWithout any hesitation, Beth sat beside me and snuggled into my side.\n\n\"Matthew's text said that he'd be home any time now. He's last, on the drop off route.\"\n\n\"I hope that he had fun. That's a long day if he didn't\" Not 30 minutes later, my little buddy appeared. Just from his walk you could tell that his ass was dragging. Beth hit him with a barrage of questions about his night. How was it, how many people, did he have fun, are you going to sit with us for a while. Matthew's simple to the point answer made me laugh.\n\n\"Good, 18, yes, nope, going to bed.\"\n\nWith drinks finish, Matthew safely home and in bed, Beth stretched and yawned, indicating that it was time for her to end the night also.\n\nPutting away everything that we had taken out and turning off the fire, we walked toward the house, holding hands as we went. Beth was first to act. She turned and stood in front of me. Her lips touched mine. It was gentle and there certainly wasn't any rush to take them away. When she did, it was like something was missing.\n\n\"I had a great night. Thank you for taking me out and for being such a gentleman.\"\n\n\"Believe me, it was my pleasure. I hope that you will allow me to ask you out again.\" A shy smile replaced the serious look that had been on her face.\n\n\"Don't sell yourself short Joe, the pleasure was all mine.\"\n\nI watched her firm bum bounce slightly under the thin fabric as she climbed the stairs. As the old saying goes, \"I hate that she left, but I loved watching her leave\".\n\nThe warm, slightly hot water, accompanied by the jets in my tub felt good. I laid back and relaxed before I bothered to lathered and clean. My mind continued drifting back to Beth. Her face. Her body. Her mind. All of it made me want her more and more, she was the epitome of being, \"The Whole Package\".\n\nThin darks shadows cast by her tall frame danced around my room. Beth appeared wearing only her robe and eased her way over to the tub. The cotton fabric hit the floor at the same time her naked body stepped into the water. She didn't bother to ask if I minded, because she knew full well that there wasn't a chance in hell that I'd say no.\n\nBeth sat between my legs with her back pressed into my chest. Using the fluffy facecloth and soap, I washed every inch of skin that I could reach. When she shifted, her hand landed directly on my erection. There was no way she could not notice or deny that it was there.\n\nOur lips and tongues did as much exploring, as did our soapy hands. For two people that had lived together for nearly a month, we were learning more about one another tonight than we had in all the time prior, combined.\n\nWith my face held tightly in her hands Beth looked deeply into my eyes.\n\n\"Why us Joe? Why me? You can have anything and anyone you want, why me?\"\n\n\"So, can you Beth. Do you realize how beautiful of a person you are? Not just your outer beauty. Your inner beauty too. I know that I'm not supposed to need you, but I do. I can't stand being away from you. I never want to go when I know that you're here. You're the only one that's ever made me feel homesick.\"\n\nThe glaze of her tear-filled eyes made me sad. She knew that I wasn't lying. I wanted to tell her how much I loved her, but I didn't want to scare her away.\n\nGentle ripples of water in the tub splashed as Beth slowly eased herself down onto my manhood. Her warmth surrounded me and held me tight.\n\n\"What about a condom?\"\n\n\"I trust you to pull out.\"\n\nBeth rose up allowing me access to her magnificent breasts. I filled my mouth with her nipples and sucked at her until she cooed.\n\nI wanted to touch every inch of her soapy body. When my hands finally to the end of their journey, they were planted firmly on her beautiful butt.\n\nEvery thrust was better than the last. Every kiss was new and exciting. Every time that I nibbled or sucked her nipples, she moaned louder than our first time together. Everything about it felt spectacular.\n\nWhen Beth looked into my eyes, I was amazed at the perfect blue coloring. She would stare deeply into my eyes for 10 or so thrusts, then kiss me for the next 10. Even without trying, her naturally tight vagina clung to and caressed me. It felt like heaven.\n\nThis was definitely the best first date night of all time.\n\nAll of Beth was natural and beautiful. She didn't try or pretend to something that she was not. She wore her heart on her sleeve and she was the most honest woman that I'd met since moving to California.\n\n\"So good Joe. So...so...oooooh.\"\n\nHer eyes closed so hard that it appeared as though she was hiding them from a scary scene in a horror movie. She had stopped bouncing on me, but there was still movement, because she couldn't stop quivering.\n\n\"Up. Up. Up!\"\n\nIt was a just in the nick of time situation. No sooner had I been released from the tight confines holding me, did semen blast out of me.\n\nWe remained in that position for many minutes, until Beth moved so that she was sitting sideways in my lap.\n\n\"Do you think I'm a bad person?\" I had been mindless playing with her hair and circling a fingertip around her hard nipple.\n\n\"No. Why would you ask that?\"\n\n\"I just don't want you to think I'm easy because I slept with you, twice.\"\n\n\"No. Never. We didn't sleep together, did we? I thought that we made love. You're such a special person Beth. I do want you to sleep with me. I want you to stay in my bed so that I can hold you forever.\"\n\nI checked the hall in the morning. I gave Beth the thumbs up. With a quick kiss from her soft lips, she scurried down the hall in just her robe to the safety of her own room.\n\nMatthew could smell the waffles and strawberries. With a shovel full of fresh whipped cream, he made his way over to the table, and skimmed through the Sunday sport section of the paper.\n\n\"So, buddy, how'd it go last night? You were pretty quiet when you got home.\"\n\n\"It was good. Everyone's real nice.\"\n\n\"Why don't you hang out with them more. You know that you can invite them all over here for a swim and BBQ if you'd like.\"",
        "I thought that that would perk Matthew up, but he had a sadness surrounding him and I didn't know what it was.\n\n\"Yeah, maybe.\"\n\nIt was time for a brother to brother talk.\n\n\"Matthew, are you upset with me?\"\n\n\"No.\"\n\n\"Then what is it? We've never lied to each other. You tell me that you're my friend, but you can't tell me what's wrong. When I'm down or in a slump and have a problem, you're there for me. So, why won't you let me try to help you.\"\n\nHe wasn't crying, but he was close enough that if I pushed any harder, he just might.\n\n\"You help too much. I could never ask you for anymore. I'd never ask you.\"\n\n\"Buddy, I'm not telling you to ask me anything. All I'm doing is asking you to be a friend and tell me what's wrong.\"\n\n\"I. I. Joe, I can't.\"\n\n\"Does it have anything to do with your new friends?\"\n\n\"Yes.\"\n\n\"See, that was easy. Is it a girl? I'm not that good with girl problems, but...\"\n\n\"No.\"\n\n\"Good, because that I couldn't help with that. Anything else and I might have at least a small chance.\" For the first time during breakfast Matthew smiled. \"Just tell me. I promise, I'll stop bugging you when you do.\"\n\n\"They all go to the same school. They live there most of the year. They mostly work together and learn stuff as a group and by themselves. Some of the school is paid for by a board or something. A group of some government people. Beth and I applied. We got the grant, but we can't afford the rest. You have to pay. You have to pay, some of it all by yourself. It's just too much.\"\n\n\"How much?\" The number was lower than I expected, both in volume and size, so I asked again. \"Sorry buddy, I didn't quite hear you.\"\n\n\"$31,750. That's without the grant.\"\n\n\"You want more waffle's?\" He nodded and we both loaded up. \"You're a smart guy. Why don't you get a part-time job to help you pay for it?\"\n\n\"Sure. Right. Where will I ever get a job that pays that kind of money?\"\n\n\"Look. I can't promise you anything, but the Dodgers are looking for an Assistant Stats Analyst. I'll put in a good word if you want. I'll show them the texts that you send me. My average goes through the roof when you send that stuff. Maybe you can help. No promises, but I can ask if you'd like.\"\n\nHis mouth was hanging open. His eyes were still glossy, but something had changed for the better. He looked better than he had earlier.\n\n\"I gotta run. I'll leave two at the gate in case you and Beth feel like coming. Maybe you can let me know what Keller will be throwing today.\"\n\n\"Yeah Joe. Okay I'll send it. I'll send it soon.\"\n\nAnd the little shit did. I went 3 -- 4 with 5 RBI's. Can't deny his attention to detail when it comes to reading and reporting stats.\n\nAfter I showered, I checked my phone and found only one text, \"Don't eat.\"\n\nThey had been crying. It was very apparent, but there was no way that they would have admitted it.\n\nFour helium balloons with \"CONGRATULATIONS!\" printed on them were tied to the chairs by the pool. Beside them on the table was Matthew's favorite pizza and a tray full of wings. It was a party.\n\n\"I got it Joe. I got it. I got the job. They hired me. A guy named Ed Swartz, said that he knows you, called me at the game. I met him and filled out some papers and had to do a test. We talked about today's game, and 4 innings later they called me back and hired me. \"$46,000 to start Joe. Do you know how much that is? I get paid every two weeks Joe. Every two, for the entire season.\"\n\n\"Buuuudddy, I'm so happy for you. When do you start?\n\n\"Today. I started today. Look I got a check already. Almost $1400. He said that it's an advance payment for past services. They took off stinking taxes. That sucks so much. $1400 Joe. Do you know what that means?\" I assumed that he was going to say that he could go to the school of his dreams, but I was wrong. \"It means that I make way more money than Beth. Now she can save.\"\n\nBeth wasn't even attempting to hide her tears.\n\n\"Woo Hoo, let's celebrate. Working man, can I get you can of our finest Cherry Coke?\" Matthew laughed and held his stomach.\n\n\"No. No thank you. If Beth doesn't mind, can I have a bottle of Sierra Nevada?\" Both he and I looked over to Beth. She made a feeble attempt to wipe away her tears.\n\n\"Absolutely big brother. I'm so proud of you.\"\n\n\"Beth?\" I made a tipping drinking motion with my right hand.\n\n\"Love one. I'll have whatever you and Matthew are drinking.\" Three cold beers went very well with our pizza and wings.\n\nWe ate and talked for hours until the sun set behind us, leaving us laughing like fools in the darkness. Beth left us to turn on the firepit and the pool and cabana lights. When she returned from her disappearing act, she had changed into her bathing suit.\n\n\"You boys plan on joining me?\"\n\nJoin her we did. Two huge cannonballs splashed and soaked her thoroughly. The water was warm, but not nearly as warm as the hot L.A. night. We swam, splashed and laughed until my phone rang.\n\n\"Hello. Yep. Yep. Come on up.\"\n\n\"Who's that Joe?\"\n\n\"Matthew, manners.\"\n\n\"It's no problem. I made a call. No celebration is complete without...\" I pointed toward the walkway that led from the side of the house to the pool. We waited. Waited some more. Matthew looked at me as if to say \"Really?\". Finally, we could see a light.\n\nThe owner of the ice cream store that we frequented, came around the corner. She was carrying a Chocolate Fudge Salted Caramel &amp; Pecan ice cream cake. On it was a dozen blazing sparklers.\n\n\"CAKE.\" Beth screamed before her brother had a chance to.\n\nBy midnight it was game over for me. I'd had a log day and the early morning flight to Atlanta was going to be even longer.\n\n\"Night everybody. Matthew, congrats on your new job. I texted Mack, he's gonna have one of those laptops loaded up and sent over here for you. That way you can do all of your scouting online.\"\n\n\"Thanks Joe. Thanks a lot.\" I'm not sure when they went to bed, but late into the night, the fire was still glowing outside.\n\nLoaded up with my travel bag, I wanted to knock on Beth's door. I wanted to talk to her. I wanted to say goodbye. I wanted to tell her how painful the next 10 days would be without her. But I didn't risk it. Lucky for me that I didn't knock, because she was standing in the kitchen, red eyed, leaning against the island with a cup of coffee in her hands.\n\n\"You okay?\"\n\n\"No. Up all night.\" I watched her chin crinkle as she started to speak. Wrapping her in my arms, I tried to stop her, but her words came out. \"You're his hero. He knows that you got him that job. He knows and he's so happy. He's so proud that you have that much faith in him, so much that you'd go to bat for him. No one in his life ever has. No one ever had the trust or faith. You've changed everything for him Joe. His dreams have come true, and part of that makes me sad, because now he'll move on to bigger and better things.\"\n\n\"He loves you. You'll always be his little sister. Every time that he sees or calls you, he'll have new and better stories to tell you. You'll end up getting bored by all the school and baseball talk. And I didn't do anything. I just talked to Ed.\"\n\n\"Don't lie. I was sitting on the stairs yesterday morning. I heard every word that you said.\"\n\nI hugged her tight to my body and kissed her forehead.\n\n\"Everything will be fine. Watch and see.\"\n\nSomewhere high over the Midwest states I picked up my phone. I had intended to shoot Matthew a text, but a text from his sister sidetracked my life.\n\n\"Joe, I love you, so much.\" Beside it was a heart emoji.\n\nThe aftermath of not responding from the heart could be disastrous. The last two months had been the absolute best of my life. I was in a good place, and I wanted it to continue.\n\n\"Really? I remember a couple of months ago, this sexy blond girl came running out to my truck, threatening to beat me up. The lioness protecting a cub.\"\n\n\"Sexy?\"\n\n\"Extremely\"\n\nA cartoon of a blushing faced blond girl popped up on my screen. I couldn't stop myself from smiling.\n\n\"You have no idea how long these next 10 days will be. I love you too!\"\n\n\"I bet you say that to all the girls!\"\n\n\"Hardly.\"\n\nMatthew sent me his schedule and Beth's work and school schedule. After being gone two days Matthew asked if I was kidding about allowing his friends to come over for a swim and BBQ.\n\n\"Call me\" It was a simple text, and far better than the long ones. 2 seconds later my phone was ringing.\n\n\"Buddy, what's up?\"\n\n\"I feel real bad asking Joe, but you mentioned a swim. Maybe a BBQ. A party. Not a party. But, a...\" He was rambling. I knew that I was on speaker phone.\n\n\"Matthew. Matthew. Matthew.\"\n\n\"Yes.\"\n\n\"It's your house too. You don't need to ask me. I won't be there. But you should run it by Beth. Make sure that it doesn't interfere with her schedule. Just don't get all crazy and start skinny dipping.\" Matthew's snorting laugh blasted my eardrum.\n\n\"Thanks Joe. Thanks so much. Owe you big time.\"\n\n\"You don't owe me anything. Is your little sister around?\"\n\n\"Yeah. Here, she's right here.\"\n\n\"Can you ask her to call me when she has a minute?\"\n\n\"Here, here.\" Matthew fumbled with his phone as he passed it to Beth.\n\n\"Hey.\"\n\n\"Hey. Am I off speaker?\" I heard the phone fumbling.\n\n\"You are now.\"\n\n\"Perfect. On the fridge, there's a magnet sticker with a caterer's number. Call them and let them know how many people, the date and the time. They will bring everything you need, tables and chairs, food, drinks, everything, plus they clean-up afterwards. I have an account, so I'll settle up when I get home.\"\n\n\"Joe, I...\"\n\n\"Beth...just let me. I'm so happy for him. He's taking that next step we talked about. Please let me do this for him. Let's surprise him. This way it won't be a ton of work for you.\"\n\n\"I really don't mind...\"\n\n\"Beth. Do this, please. If you want to make it up to me, you can make me your famous fish tacos when I get home.\"\n\n\"I'll do that for you anyway.\"\n\n\"Yeah? Be careful, 10 days is a long time. I might have some else in mind too.\"\n\n\"Promises, promises.\"\n\n\"Bettttttth.\" Matthew was asking her for his phone back.\n\n\"Are you still here?\"\n\n\"Yes.\"\n\n\"Good. Before you go, I really do love you.\"\n\n\"Uh uhm.\"\n\n\"What, you're not going to say it back?\"\n\n\"Aaaaaaah, nope.\"\n\n\"Chicken.\"\n\n\"Yep. Okay Joe. See you in 10 days. Here's Matthew.\"\n\nOur conversation went on for 45 minutes. My little buddy told me all about school and that he had written and admissions letter to get in. He was just waiting for a call back. After that, all of our lives were busy. I had called to guarantee that Beth had been in touch with the caterer. She had. I asked what she had ordered. Hot dogs and burgers. Calling the catering company myself, I spiced it up a bit and asked them to not take no for answer. On the day of the party, at about 5:00pm east coast time, I got a text from Matthew.\n\n\"Wow. Wow Joe. Wow. Everybody loves it. They're having such a good time. Better than the beach. Way better. It's a great time.\"\n\n\"I'm glad buddy. If there are any hot girls there that you think might like me, send a pic or two.\"\n\nAbout an hour later I heard my phone ping. The first picture was Beth standing in the distance with a bottle of water in her hand, she was wearing a floral cover-up and a white floppy hat. Apparently, she was chaperoning her younger brother and his friends. The second was one of her walking up the steps, out of the pool, dripping of water. Her tanned body glistening in the overhead sun. She was absolutely drop-dead gorgeous.\n\nI replied. \"Come on. I said one that might like me.\"\n\n\"She likes you Joe. She likes you a lot.\" It made me feel good all over.\n\nOur last game on the East coast went into extra innings. After that the flight time was delayed by another 45 minutes, so we didn't land until almost 2:00am West coast time, and by the time that I got home it was nearly 4:00am.\n\nThe home that I once returned to in the middle of the night no longer smelled clean and sterile. It now smelled like...home. Fresh basil and other herbs plants lined the countertops. Scented candles, even un-lit could be detected in almost every room. And the thing that topped it all off, was the smell of a woman. The light scents of her perfume, soap, hair and skin and the fact that at one time during the evening, she had been soaking in one of her famous bubble baths were the first things I breathed in.\n\nQuietness filled the night, or morning depending on perspective. Trying not to make any noise I made it up to the next level. Opening the door to my room, I was happy and disappointed at the same time.\n\nThe soft glow from my ensuite bathroom dimly lit Beth laying on my bed in a long silky neglig\u00e9e. Her form shimmered in the shiny material. Every bump and curve were accentuated through the night. Her long blond hair was spread over my pillow that she was holding in her small hands. On the night table was a silver bucket with the long-melted remnants of the ice that had once filled it surrounding a bottle of wine.\n\nOn the white linens, petals taken from red roses had been placed into the shape of a heart. I stared at her beauty as I undressed and for the first time in my life, I realized that I was in love.\n\n\"Sorry. I must have fallen asleep.\" Beth's voice sounded tiny and tired in the darkness.\n\nKissing her naked shoulder, I hugged her into my arms and covered her with a blanket, \"Shhh. Sleep. I'll see you in the morning.\"\n\nThe sounds of moaning and the feeling of someone stretching next to me gave me a start. Beth was still beside me. It was 10:45am and was later than I'd ever saw her sleep.\n\n\"Hey beautiful. Miss me?\"\n\nBeth giggled when she said, \"not really\". Apparently, Matthew had kept her informed of every single play, in every single game.\n\nMoving her leg up and over my hips, she used it to pull me closer to her. Wrapped up in her, our lips met for the first time in almost two weeks.\n\nNot in a frenzy, but with a certain amount of urgency, we stripped down. It was only one piece of clothes for each, but it was one piece too many.\n\nBeth swung herself over so that she was sitting fully astride me, pinning my arms at my sides. Her beautiful globes hoovered just out of reach from my mouth. The more I moved forward the more she pressed her hands into my chest and held me back.\n\nShe had my erection trapped between her body and mine. Slowly she grinded on it. Back and forth she moved. By the third pass her lips had spread and I could feel the heat and juice seeping from within her.\n\n\"You're so sexy.\" A coy smile came to her face.\n\n\"I think that you're just horny.\" She almost made a mistake. Sliding just a little too far forward, the tip of my hardness almost found its way home. Close, but not yet.\n\nMy head strained up. I wanted, I needed to suckle at those nipples. They were like rocks. They wanted it too, but Beth would not relent.\n\nI tried again to pull my arms free, but when I did, Beth stopped dead in her tracks and gave me a stern, \"nope\". It was her ride and I didn't plan on ruining it.\n\nMy senses were on fire. My penis felt like it was drowning in her juices. Every slide was wetter and wetter. Beth finally got to the point where she wanted and needed to be and moved-up so that the head of my manhood was knocking at the door.\n\nLeaning down so that she could press her lips to mine, she sunk down in one slow, smooth motion.\n\n\"Oooooh, baby.\" It was a great welcome home.\n\nOne by one, Beth raised her knees so that my arms were free. Reaching up, I cupped her firm ass and thrust into her. Every movement, every motion, every sound was that of lovers. I could see, smell, feel and sense the excitement that surrounded us both.\n\nAfter far too long of a wait, my mouth found its way to her breasts. Beth moaned and cooed when I sucked and licked at her hard nipples and crinkled areolas.\n\nEvery push down seemed to go deeper and deeper. I was trapped in the vise of her love and I would not or could imagine anything that would ever feel any better. The minutes passed use by like time was standing still.\n\n\"Close baby. Getting real, close.\" I gave her the warning.\n\nBeth's words came out in studders as we pounded into one another. \"Come...in...me. On...the...pill...now...\"\n\nMy arms pulled her down to me. Her arms wrapped my head and her hands pulled at my hair. Our lips were glued to the others.\n\nI was trying. I held on as long as I could. \"Cummmming.\" I could feel my shaft expand and explode. I was filling Beth with almost two weeks supply of my semen.\n\n\"Yeeeeeeeesssssss.\" She had stopped cold as I fill her. \"Oh my god, I can feel it in me.\"\n\nWe laid entwined, basking in the afterglow of our love making. I wasn't finished. Not by a long shot. My lips, fingers and tongue traced lines up and down and across Beth's body. Nibbling, licking and sucking everything in their path.\n\n\"Sorry buddy. I don't want to use you and run, but I work at 2:00.\"\n\nLike a disappointed child, I let out an \"aaaahhh\" followed by a \"pleeeeease\".\n\n\"Tell you what, you pick pizza up on the way home after your game, and I'll think about it.\"\n\n\"Deal.\" I carried her over my shoulder to the shower with her screaming all the way.\n\nAdmiring her butt as we dried off the last traces of the water that had washed away our lovemaking, I could not resist the temptation, and softly bit her on the right cheek.\n\nBeth's fake screams once again filled the air as she raced naked out of my room.\n\n\"STOP!\" She froze and turned back toward me.\n\n\"What?\" Her eyes looked at me in horror.\n\n\"Get back here before Matthew sees you.\" Beth walked back to me and kissed me.\n\n\"He left last Tuesday. He's all moved into his new dorm room. Apparently, according to the Dean of Admissions, his first year of tuition has been paid for by his employer.\" She tilted her head as if to let me know that she wasn't buying the story they got. \"And he didn't want you to worry about him or me. Didn't want the news to drop you under .320 as he put it. So, he wouldn't let me tell you.\"\n\n\"You okay?\"\n\n\"Yes and no.\" she tightened her hold on me. \"I miss him a bunch.\" She would tell me later that it had been the longest that they had ever been apart.\n\nBetsy II's taillights weren't even out of sight when I text Matthew.\n\n\"Buddy, how's school?\"\n\nIt took a while for a reply.\n\n\"Sorry. I was in class.\"\n\n\"Going good?\"\n\n\"Real good. Love it here. How's Beth?\"\n\n\"At work. When are classes done?\"\n\n\"Now. Done now, why?\"\n\n\"You wanna come to the game tonight? I can pick you up.\"\n\n\"Yeah, yes, please.\"\n\n\"Shoot me the address and I'll head over, and we'll have an early supper with the team.\"\n\n\"K\"\n\nMatthew was waiting by the curb. He had his trusted backpack and laptop. He was ready to change the world, one stat at a time.\n\n\"Hey buddy, long time no see. What's new?\"\n\n\"Lots. So, much. Lots of new stuff.\" Matthew told me everything that he could cram into the 45-minute ride to the stadium. Lots of stories, with lots of questions. \"Do, you like Led Zeppelin?\"\n\n\"Yeah, I can't think of anyone that doesn't. They are a classic rock staple. Lots of great tunes. Why?\"\n\n\"Natalie loves them. Says that they are the best band ever.\"\n\n\"Sooooooo, who's Natalie?\"\n\n\"Friend. A friend.\"\n\n\"Does she stay where you are?\"\n\n\"Oh yeah. Yes. 3 dorm rooms down from me.\" He was blushing a little. \"She loved your house. Says it's the nicest place that she's ever been. I told her same for me.\"\n\nIt was my turn to blush.\n\n\"Matthew, I want to ask you a serious question...but I don't want you to be mad at me.\"\n\n\"What? Tell me, I won't get mad, I promise.\"\n\nI wanted to shy away. But I looked him directly in the eyes. Matthew knew every stat in my life, including the bad ones, he knew about my past life because he had read all the articles written.",
        "\"I want to ask your permission to ask Beth to be my girlfriend. I really, really like her, and if you say yes, I give you my word as friends, that I'd never do anything to hurt her.\"\n\n\"Do you love her?\"\n\n\"Yes.\"\n\n\"Are you going to marry her?\"\n\n\"I haven't asked her, but I would someday if she said yes to me.\"\n\n\"Why are you asking me for permission?\"\n\n\"Because we were friends for a long time before I even met her. I owe you that much. And you are her big brother, and her only family.\"\n\n\"I know that you love her. Love, us. You can be her boyfriend, but not if you get traded.\"\n\n\"Well, I don't plan on getting traded.\"\n\nMatthew smiled at me. His work as a big brother was done for now. I was lucky to have him as a friend.\n\n\"I'm ordering pizza. Beth will be done work by the time I get home. Wanna come over for some?\"\n\n\"Early class. Sorry, I have an early class.\"\n\n\"What about Friday or Saturday? I can pick you up and we'll all go to the game, then we can go home and hang out. You can stay over.\"\n\n\"I...I can't.\" There was something sheepish about the way he said it. Something wrong. Maybe not wrong, but not normal.\n\n\"Everything okay buddy?\" He just looked at me. Embarrassment had taken over. He was shy about what was going on, but he had a devilish grin on his face. \"Tell me you little shit.\"\n\n\"Hey!\" There was a silence in the truck until Matthew turned so that he could face me. \"Promise not to tell Beth?\"\n\n\"Yes.\"\n\n\"No. Say it. Say, \"I promise not to tell Beth.\" Give me your word.\"\n\n\"Wow. What's with all the secret stuff? Okay, I promise not to tell Beth a single word about whatever it is that you're going to tell me.\"\n\n\"Natalie, well, Natalie and I are going to play...strip poker. She is going to show me how. She's never played either, but she wants to with me.\"\n\nI bit my tongue. The excitement had him shaking in the seat next to me. I had never met Natalie, nor had I heard much about her, but she sounded like a bad girl, in a good way.\n\n\"Well that sounds like a way better time than hanging out with me and your sister. You might want to learn the rules on your own, just so you are up to speed about losing your pants.\" His chuckles made me smile also.\n\nFour blocks from Matthew's dorm room, I stopped and went into a 7-11.\n\n\"You want any snacks for your room, chips, pop, anything?\"\n\n\"Doritos.\"\n\nI put my arm full of goods on the counter and the clerk smiled at me in a way that only stoned California surfer dudes can. \"Alright, \"Home\", now it's a party brah.\" He rang up my stuff and with a quick tap of my card, I was headed back to the truck. \"Go Dodgers, brah.\" He was giving me the \"hang loose\" hand signal as the door closed behind me.\n\nMatthew jumped when I put the bags down in his lap.\n\n\"What's this?\"\n\n\"Look inside.\"\n\n\"Okay, I will when I get home.\"\n\n\"No, do it now.\" His eyes were huge. Checking the contents, he showed surprise and turned his full attention to me.\n\nA 6 pack of tallboy cans of beer. 6 tall cans of some sweet syrupy cooler. 2 bags of Doritos. 2 cans of assorted nuts. 2 bags of chewy candy. 2 packs of gum, 4 boxes of assorted condoms, all different shapes, textures and flavors.\n\n\"What, what's, what's all this?\"\n\n\"If you're entertaining a lady friend, you need snacks. And you told me that you plan on playing games, so if those games go into, shall we say, extra innings, you'll need to be prepared, and those will help you prepare.\"\n\n\"But, but which one should I use?\"\n\n\"Don't get too far ahead of what might or might not happen, but if things do go that far, show her the options and give her a choice. Or use the one that you both like.\"\n\nHe couldn't stop staring into the bag. It was all pretty new to him.\n\n\"Joe, can I ask you a question?\" Or more like 50 questions.\n\nMatthew and I sat in the parking for the next hour. We went over the finer details of what a gentleman should or should not do. Matthew opened a box of Durex and rolled one down over his 2 fingers just so that he could get the feel and hang of it. He typed notes into his laptop, like he was writing a novel.\n\nWhen he had filled his head and notebook with as much information as he could, his next question surprised me the most.\n\n\"Do you plan on doing that stuff with Beth if she says that she'll be your girlfriend?\"\n\n\"Honestly, yes. But that's only if she agrees and wants to.\" I waited 5 minutes as Matthew scrolled through his notes.\n\n\"Fair enough.\"\n\nWe rode in silence for the remaining 4 blocks. His parting words were, \"Please, not a word to Beth about any of this.\"\n\n\"Oh Buddy, I guarantee you that she won't hear about it from me.\" I held out my hand and he shook it. \"Friends forever.\"\n\nBeth was waiting for me when I got home. The pizza wasn't nearly as warm as it had once been, but it was more about the company than the food.\n\nSnuggling together on one of the loungers, she told me about her day. When she was finished, she picked up her phone and showed it to me.\n\n\"Wanna see a text I got just before you showed up tonight?\"\n\n\"Nope.\" And I really didn't, but by the way that she was smiling, I knew that she would show anyway.\n\n\"Okay, I'll read it to you.\" I started to say something, but she put her soft hand over my mouth. \"It's from Matthew by the way.\"\n\n\"Joe likes you a lot. He asked me if I would give him permission to ask you to be his girlfriend and I said yes, so I think he's going to ask you. If you say \"yes\", be careful. Lots of other stuff goes along with having a boyfriend. Stuff you might not know about and might not like doing.\"\n\nWell there was no way that I would have mistaken that text to be from anyone other than Matthew. I laughed but gave him credit for being all big brotherly.\n\n\"Well?\" She had spun up onto me. Sitting just over my crotch, the hair of her ponytail was dangling down nearly touching my face.\n\n\"Well what?\"\n\n\"Is that true?\"\n\n\"Every word.\"\n\n\"What does he mean by \"lots of other stuff\"?\"\n\nPulling her down I bit her neck then kissed her full lips. \"I think he means kissing and stuff. He's your big brother. He's worried about you.\"\n\n\"Are you going to ask me Joe Plato?\"\n\n\"Oh yes I am. I want you to my girlfriend now and forever, but you have to move into my room. I sleep so good when you are in there with me.\"\n\n\"Does Matthew know that I slept in there? Because if he does, that's the \"other stuff\" that he's talkin about.\"\n\n\"No. We never talked about that. I promise.\"\n\nAs she pushed my hardness into her, she leaned toward to kiss me.\n\n\"Good, because I don't want him thinking that his little sister does the \"other stuff\".\"\n\nBeth did move into my room. Unfortunately, she kept her clothes in the other room for the nights that Matthew would visit. Our daily routines continued, and we grew closer and closer. Every day was a new and exciting time.\n\nThe only thing missing is what had originally brought us together, Matthew.\n\nTwo Saturdays later Beth was making a salad while I grilled some fish. We had some music on and were enjoying the air temperature that had dropped below the point where paper would spontaneously combust, when my phone binged indicating I had a text.\n\n\"Babe can you get that?\" Beth looked at my phone and picked up the interruption.\n\n\"It's from my brother.\"\n\n\"What's he up to?\" I took a mouthful of iced tea to get some of the smoke out of my throat.\n\n\"Not sure. His text says, \"The neon green ones. Definitely the green ones.\" What's that supposed to mean?\"\n\nThe spray from my flying iced tea hit everything that stood behind her, but most of it trickled down the side of her face. I honestly almost pissed in my pants.\n\n\"Sor...oh my god, sorry. I, I, oh shit, Beth, I'm so sorry.\"\n\nBeth used the soft hand cloth normally reserved for drying dishes and wiped herself dry. \"There had better be a good story behind that.\" She was smiling but looked like she might snap me with the towel.\n\n\"Not one that you'll ever hear from me baby.\" Dropping the towel and the salad spoons she started toward me. The only thing that stopped her was another text coming in.\n\n\"Don't...\" But it was too late. She had my phone in her hands and was reading her brother's next message.\n\n\"Really? Oh my god Joe. Did you put him up to this?\"\n\n\"What? No. Whatever it is, no.\"\n\n\"Okay...and I quote. \"Do you think Beth will be okay with Natalie coming with me to the house next weekend? Is it alright if we share my room? Stay in my room together\". And that's a quote. It sounds like you know exactly what's going on. The next message shot me right in the foot. \"Friends forever, right buddy?\" Start talkin right now Plato.\"\n\n\"Next Saturday's an early game, maybe we can BBQ when I get home.\"\n\n\"That's not what I mean, and you know it. Tell me what's going on with that, that, that Natalie person.\"\n\nI knew that she was concerned for her brother. Is was to be expected. Years of them looking out for one another and then him moving away to start a new adventure, but so was she.\n\n\"Apparently you met her at the BBQ here. They're friends. From the sounds of things...good friends. Have you told him about us?\" She lightly shook her head side to side. \"I think it's time to have a talk with your brother. Tell him that I asked you to be my girlfriend, you said yes and now we're living as a couple.\"\n\n\"But, but what about all the other stuff?\"\n\n\"I love you...but I can't tell you. He will soon enough, but it isn't going to come from me.\"\n\nDinner was a quiet affair. She wasn't upset, but she wasn't talking.\n\n\"What?\"\n\n\"Nothing. I'm just having a hard time thinking about my brother in a relationship.\"\n\n\"He probably thinks the same thing about you. Don't over analyze it. It will all work out.\"\n\nThe \"fateful\" weekend, as Beth described it, finally arrived.\n\nWe drove over to the school and picked up Matthew and Natalie on Friday night. It was the first time that I had laid eyes on her, and I had to say that I was happy for my little buddy.\n\nNatalie was a short, cute brunette. She was far more talkative than I was used to with Matthew. At first, I thought that it was because she was nervous to be around us, but no, she just loved to talk. And talk she did. There were times that we believed she might pass out due to lack of oxygen from talking so much, but no such luck. Beth and I stared at each other when the pitch of Natalie's voice changed as she gasped for air between words.\n\nShe left no detail of her life untold. Born and raised in California. Parents still married unlike so many of her friends. Her father took them all out to celebrate recently when he paid off the family mortgage on the house. They went for Chinese, her mom's favorite. She has 2 sisters, 1 brother, a dog and had a cat that sadly, had to be put down due to old age.\n\nNatalie didn't really like school, ever. But now that she was in the group that she was now, she could tolerate it. And now that she had found the love of her life, it was the best school in the world.\n\nApparently, Matthew is her third boyfriend. Bobby or Robert was her first. He was in grade school. They were in love and both had thought that they would be together forever. Unfortunately, it only lasted about 4 years, until his family moved to Texas. Considering she was still in grade school, Natalie was far too young to move there with him. Her second boyfriend was Stanley, it didn't last long at all, maybe 6 months according to her. She just couldn't stand his name. His last name was Addly, and there was no possible way in the world that she could ever live with the name, Natalie Addly. It just couldn't happen. No, he had never asked her to marry him. But what if he did? They were only 13 when they broke up. After Stanley there was no one that she would even consider to be boyfriend material. No one liked how much she talked. That was until Matthew came along. How could she resist his charm? He is handsome, funny and wicked smart. I laughed when Beth reached across the console, squeezed my hand and asked if we had enough wine for the weekend.\n\nBBQ, cake, and drinks hit the spot. The 4 of us hung around the pool and firepit. Natalie surprised us all by helping herself to coolers out of the fridge. She had 2 or 3 and told us that she loved the fruity taste. Unfortunately, the more she drank, the more she talked.\n\nDrifting off to the deeper end of the pool, Matthew and I got far enough away from the girls.\n\n\"Buddy, she's cute.\"\n\n\"You think so?\"\n\n\"Oh yeah. Real cute. Does she ever let you talk?\"\n\n\"Sometimes. Sometimes, not.\" The humor wasn't lost on me. I wanted to pry and ask questions about their relationship, but I didn't.\n\n\"So, is she officially your girlfriend?\"\n\n\"Yes. She said that after we did what we did, she is almost like my wife.\"\n\n\"Well good for you. You make a good-looking couple. Talking about, doing what you did, how are your supplies holding out?\"\n\nMatthew looked down the pool to where Natalie was chewing off Beth's ear.\n\n\"All the chips and stuff are gone. She likes that kinda stuff. We used...\" There was a long pause while he looked back over toward the girls. \"We used 5 of the green ones.\" The slapping noise our hands made from the high five caused Beth to look over, and from the look on her face, she knew why we were high fiving.\n\n\"We'll pick up a bunch of that other stuff Monday when we go back, but we'll keep the \"other\" supplies quiet until it's just you and me.\"\n\n\"Deal.\" His head turned again to see who, if anyone, was listening to us. \"Joe, Beth told me that she's your girlfriend.\" I nodded affirmation. \"She says that she in living in your bedroom with you.\" Another nod. \"And that she loves you. So, you better be good to her and not get into any more trouble.\" Big brother had just given me \"the talk\".\n\n\"Those days are long behind me. I won't let you down buddy. I plan on marring your sister someday. Who knows, maybe we can have a double wedding in Hawaii.\" Mathew's head tilted as if inquiring who I meant. \"You know, me and Beth. You and Natalie.\"\n\n\"Hah. Don't tell her that.\"\n\n\"Who?\"\n\n\"Natalie.\"\n\n\"Why?\"\n\n\"Because, when she...\" He looked over once again. \"When she was in my bed one time, she told me that she wants to get married in Hawaii someday. So, don't joke and tell her what you said, or we'll be on a plane in the morning.\"\n\n\"Matthew.\"\n\n\"Yes.\"\n\n\"I want...\"\n\n\"Yes.\"\n\n\"Yes what?\"\n\n\"You can marry my sister. I know she loves you. Because I've never seen her happier.\"\n\nNatalie and Matthew headed off to his room, while I put away all the leftovers and cleaned up. The pool lights were out, casting a darkness over the yard. But the distant lights from a city that seldom sleeps gave off enough light to maneuver effortlessly.\n\nBeth was already in bed when I got there. I could smell a hint of the minty toothpaste that she had used as I curled up beside her. I slid my hand over her belly and pulled her close.\n\n\"Don't even.\" Her stopped me in my tracks, but she held my wrist, not letting me pull away from her.\n\n\"What?\"\n\n\"Don't give me that Mister Innocent stuff. Natalie told me about a certain someone that provided my brother with what she called, protection.\"\n\n\"I don't know what you're talking about.\"\n\n\"Oh yes you do. And that's what has me worried. I'm not sure if I should be mad at you or love you even more.\"\n\nMoving her hand up to allow my palm to cup her firm breast, I said, \"I'll go for the love me even more option.\"\n\n\"I bet you would mister.\"\n\nThe night table on my side held the black box with gold lettering. The Harry Winston logo embossed on the front.\n\nBeth's eyes glazed over with tears immediately when I held it out to her. She knew what was in the box.\n\n\"I asked his permission. He knows how much I love you. He knows that you are the best thing that will ever happen to me in my lifetime. Beth, please make me whole. Please be my wife.\"\n\nHer soft \"yes\" was breathed into my mouth, when her salty lips pressed against mine."
    ],
    "authorname": "Frankenstein1962",
    "tags": [],
    "category": "Romance",
    "url": "https://www.literotica.com/s/full-count"
}