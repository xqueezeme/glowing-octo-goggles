{
    "title": "My Only Talent Ch. 39",
    "pages": [
        "Glamping, Clamping, Bedding, & Pre-Wedding Planning\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events.\n\n***\n\nThe van ride from the Strathclyde campus to our \"glamping venue\" was relatively routine, except for several releases and non-disclosure forms they had everybody sign. I was seated near several people who knew each other, but not me, so I listened to but did not participate in their conversations. I did observe as many of my fellow travelers as possible and could not help doing a little Suzie signal snooping along the way. My initial visual census of the group was 80% male and 20% female (with some error bars for \"Pats\"), but my \"Suzie Survey\" yielded a different result: roughly a 50/50 split between those that were sending for males and those who were sending for females, with a plurality doing both. Interesting crowd.\n\nWhen we exited the buses near those rustic cottages, we found tables set up not unlike the freshman orientation display greeting me when I arrived and the ESU campus last fall. We stood in small alphabetized lines and queued up for some fancy embroidered badges with neodymium magnet clips. They featured the logo of one of Jeremy Mignot's larger and more successful startups, and declared the recipient's name clearly in the center, and were festooned with a bunch of colored symbols around the edges. A sign went up announcing that dinner would be served in 45 minutes, and waiters began circulating with iced craft beers with unfamiliar (to me) names like \"Old Norway\" and \"Big Raspberry Dog Chew\". I suppose in Austin it would have been \"Black Metal Imperial Stout\" and \"Convict Hill Oatmeal\". I never liked beer, so it didn't really matter. Luckily each serving tray had some \"Highland Spring Sparkling Water\" that was very much to my taste. \n\nI thought perhaps that the symbols on the name tags were a variant of one of the corporate meeting ice breakers my Dad had often mentioned. The colored dots represented different interests, like blue for fishing and green for gardening, and in the process of questioning other folks about their badges the attendees got familiar with each other and began conversing. But these were not simple dots - there was a wide variety of shapes and colors, from a purple unicorn looking thing, to a black square, a green circle, and several others. Dungeons and Dragons enthusiasts, or vegan diets, or what? Then I spotted a pink triangle on one guy's badge. Sexual orientation? But what the hell did all those symbols stand for? There must have been more than a dozen different ones. \n\nI looked a little closer and found that they all seemed to be variations on and combinations of the 'traditional' symbols for man and woman. I had just begun to look even more closely at other people's badges without being too obvious about it when a very hot woman in her 30's grabbed a microphone and instantly commanded everyone's attention. She was dressed in a form fitting grey set of velour overalls, and she was beyond gorgeous.\n\n\"If you will look at the lower left of your name tag, you will see a number printed in red. That is the table you should find and take your seat. Dinner is served.\"\n\nI glanced down at my badge and learned I should find table #4. It looked like there were 20 or so tables set up on the central patio near all the cottages. Suddenly the hot woman took me by the hand.\n\n\"Hello Robbie. I'm Glennis Howries, Jeremy's primary administrative assistant. Jeremy couldn't be here, but he wanted me to introduce you to a few people.\"\n\nIf you hold my hand, sweetness, I will follow you anywhere. But maybe she can help me understand something.\n\n\"OK. What can you tell me about the meaning of all the symbols on the badges?\"\n\nShe smiled. One of those smiles that said she was a very hot woman who knew things I did not. \n\n\"As a matter of fact, the first presentation tonight, which will begin just after dinner, will introduce you to those. And the last presentation of the night will perhaps allow you to become, more, ah..., intimately familiar with them.\"\n\nWe arrived at table #4, and Glennis began to introduce me to a seemingly infinite series of very academic looking bespectacled boffins, with trendy titles, associated with trendy corporate names with no vowels in them. I had little chance of remembering any of them. This meeting had another feature in common with many of the sales meetings my Dad had complained about: an awful box lunch masquerading as a decent dinner.\n\nOh, it was trendy, all right. The box was made of beautiful green recycled cardboard, with all sorts of environmentally correct messages and art work. But inside was a culinary crime of massive proportions. Vegan haggis had top billing. I haven't lost that much touch with my Scottish roots. I suppose it was tofu based, or perhaps \"textured vegetable protein\" was used, but in any case, it was awful. At least the oatmeal in it seemed real. My grandfather made haggis once a year in Texas, but that was sort of modified thick menudo made with calf liver, lungs and heart rather than beef intestines or sheep offal. I now understood the physiology underlying my taste for the South Texas dish of calf brains and scrambled eggs that so perfectly supplied myelin precursors for my still developing Suzie signal receiving array, and grandfather's haggis has some of the same cholesterol rich stuff, I suppose. My table mates tried to present an optimistic picture, saying these were much better than the usual 'munchy boxes'. There was some sort of thick and buttery shortbread, thank goodness, which would keep my Suzie receiver tuned for a while, and some sort of fudge called 'tablet' which also supplied some much-needed glucose. I knew I could at least survive until morning. I went back to trying the decipher the symbols on the badges.\n\nAnother hot woman approached the centrally located lectern and tapped the microphone for attention. She certainly had my attention. She was tall and thin, but with exaggeratedly full breasts and buttocks. More like someone's cartoon waifu than a real girl. Very delicate almost elfin features with jet black hair and flashing smart girl light grey eyes with violet highlights. I was riveted by her appearance and torn between wanting to tenderly protect her delicate face, and roughly fuck it. I think that was just the effect she was going for. \n\nShe had everyone's attention now. \"Good evening. I'm Fancy Drathars.\"\n\nThe guy behind me snorted. \"That can't be her real name, but it certainly fits!\"\n\nI was about to ask why when Fancy launched into her presentation. \n\n\"Some of you may, by now, have hit upon the possible meaning of the symbols on your badges. I wish we had time to let you interact with each other to try to decipher them all. I could probably get another dissertation out of observing that process. But for now, and in the interest of saving time, I will try to jumpstart your understanding.\"\n\nShe had already jumpstarted my dick and clouded my mind. She was so hot it hurt. I was only catching about half of what she said and spent the other half of the time carefully observing how her body moved and swayed as she spoke. But something about her alarmed me and made me suspicious. Here was another of those girls that I desperately wanted even if she sent no Suzie at all for me. In fact, I was afraid to listen, because I might not hear even a hint of any attraction for me. \n\nI suddenly realized she affected me like Suzanne did the first time I saw her on the running track. But this girl was calculating and cultivating this effect. Suzanne was clinically depressed and racked with guilt when I met her, and not trying to come on to anyone. Somehow, I suspected that Fancy was trying to come on to everyone.\n\nI forced myself to tune up my Suzie receiver. She was sending for the guy behind me, but very weakly. There was an undertone I almost I recognized. Then her signal snapped off, very abruptly. And then popped back on, focused on the girl to my left. I suddenly tumbled to the undertone - pecuniary Suzie. But this was not money per se, like Jean Nancy from San Antonio, this was a rapid assessment of whether this person could be of use to her. Suddenly I shivered.\n\nI realized her Suzie was synchronized to her gaze: as she made eye contact with individual members of her audience, which was standard good speaker technique, she was also scanning and sorting them into useful or not; a prospect or not. It was quite efficient yet surgically cold. I now knew why I was shivering. I tried to listen objectively to her spiel.\n\n\"We are just beginning to understand the complexity of gender and sexual relationships, after many thousands of years of laboring under a ridiculous binary oversimplification.\" \n\nSay what? Summer and I had an extensive discussion on this very subject, in addition to the previous and frequent UDT house frat chats back at ESU. Her biology training said there were two and only two genders based on genotype: having an XX or XY chromosome pair was definitive, and the key behavior was the ability to play one of the two biologically required roles for sexual reproduction. Phenotype sometimes did not accurately reflect genotype, and there were certain chromosomal abnormalities that occurred, but those instances were statistically insignificant in the overall species wide reproductive context. Don't even get Summer started on gender fluidity - there wasn't any. Behavior, however, was another matter entirely. Whatever your gender, you could react and interact sexually with others as you chose. That was preference, not gender. But not in Fancy's world, apparently.\n\nShe began to describe such a wide range of genders, attractions and preferences that I could not sort them all out. I was struck by the sheer numbers. Was she saying there were sixty some odd genders/preferences/demi-genders, or more than a hundred? I did seem remember the ones that seemed to make sense to me, or that I could sympathize with. First, I learned that I was hopelessly cis-gendered, or stuck with my boring birth identify of being an XY male. Then there was \"condi-gender\", a gender that is only felt during certain circumstances. I recalles a guy in Phi Iota Gamma who was a straight male outwardly, but when he got drunk he acted like a flamboyant gay guy, but I can't identify really with that. \n\n\"We are currently evolving beyond this simplistic binary world view to a more nuanced and superior understanding. So, our social systems must also evolve.\"\n\nAsa Weltschmerz had explained to me the latest neuroscience perspective on sexual orientation based on brain research. He said there were at least 12 different areas in the human brain that showed either gross anatomical differences between male and females in general, and/or differences in nerve fiber tract connections and density depending on the individual's primary sexual orientation. The choices an individual made about sex partners were thought to be some sort of fuzzy logic 'sum' of all the influences of these areas. It wasn't as simple as nature versus nurture, either, because the synaptic connections were partially determined by socialization and experience. \n\nFancy went on and on about the three basic aspects of gender: physicality, personality, and preference and the various permutations and combinations of the three. At least this partially mapped to Summer's understanding. I learned that I was a \"masculine heterosexual man\" who was primarily attracted to 'female bisexual women\" and I got that. But then, things got really complicated. The symbol that I thought from a distance was a unicorn depicted a \"tranvesti\" and the most complicated symbol with the most stuff on it was \"genderfluid\" and I guess that made some sense. I was also termed \"gynephilic\" in that I was attracted to people who appeared to be women. She put up a funky set of Venn diagrams that were for some reason oval rather than circular and proceeded to explain still another classification scheme. I was reminded of Summer telling me there were at least 30 recognized historically established systems for classifying organisms by genus and species and sub species, most of which had to be modified when genetic mapping became available. \n\nThen Fancy supplied another term that applied to me: I was a \"sapiosexual\" in that I was strongly attracted to intelligent women. I suppose I would have to make up my own term for having a Suzie signal receiving array: \"suziesexual\" didn't sound scientific enough, maybe \"electrodynamosexual\" could work. Or perhaps \"reciprosexual\" for only attracted to people who were attracted to me - but wait, that's not correct. There were lots of girls I was attracted to that didn't send any Suzie for me, so I stayed away, but that was a choice, not the lack of an attraction. And when I detected a male sending for male Suzie directed at me, I was repulsed, not attracted, no matter how intelligent the male might be. There didn't seem to be a term for sexual attraction to trustworthiness, but perhaps there should be one. I also learned the differences between 'Pats' and 'Pans'.\n\nWith my head spinning, Fancy finished up her opening spiel, by alluding to her next one.\n\n\"As with all great social change, there comes economic opportunity. I will do another presentation, the last one of the evening, about a business venture that will accelerate and implement change and make a lot of money doing it for those who are wise enough to invest early. Thank you.\" She smiled her hottest little self-satisfied smile, and sat down, rather primly, I thought. \n\nI wouldn't have wanted to follow that act, but somebody had to, and the crowd's reaction was not enthusiastic. The presentations basically alternated between talks about a new idea, and straight up elevator pitches for startups. Obviously, lots of people had seen some great TED talks, and thought they could give one too. Nope. The startups varied from a solution looking for problem, to a management team looking to collect salaries until their idea proved infeasible, to some interesting but very hard to monetize concepts.\n\nWhen we took a middle of the evening break for a dessert bar and drinks, four people sought me out. First were the two Strathclyde guys I met at the mini-rave after the wedding reception: Alex Stonehouse and Jonathan Ballo. \n\n\"Hello, Roberts. Jeremy said you might be here. We wanted to talk to you about your next internship opportunity.\"\n\nI paused. \"Well, I think Rock Tappert already has me set up at some new startup.\"\n\nJonathan did not look surprised. \"What exactly is your relationship with Professor Tappert?\"\n\n\"Well, he is the faculty sponsor of the fraternity I belong to, and my academic advisor. Also, his wife has taken an active interest in guiding some of our members.\" I didn't mention where she guided those members, or how many of them. \n\n\"Is that how you ended up writing patents with him?\"\n\nI finally saw I was being pumped for information. \"Well, we do kick some ideas around, and occasionally the professor has his IP attorney play around with some of them. \n\nThey tried a few more ploys, but then gave up. I noticed they didn't volunteer any information about the companies they were working with. Their eyes bugged out when Fancy Drathars approached and took my arm. They stood agog while she tried to work her magic on me.\n\n\"Robbie, I am very interested in your reactions to the final presentation I am going to make in a few minutes. I want to touch base with you right after it and help you in your first experience with our software and how it will change the world. May I join you for the private demo?\"\n\nI was suspicious, but also infatuated and curious. \"Sure. See you after your talk.\"\n\nAn unusual fellow then approached me. I suppose with my new awareness I should say someone who presented as primarily male. He looked right at me and got way too close to me before speaking - maybe 18 inches away. That started my discomfort, which soon grew.\n\n\"Well hello. You're new here or I would have noticed you.\" He had certainly noticed me now, and unfortunately, he was sending some unmistakable male on male Suzie. Ugh. \n\nHe stuck out his hand, and I recoiled. \"I'm Duran Drathars! Yes, I am Fancy's much sexier cousin. You must be Robbie Roberts. I can see why Jeremy Mignot was so taken with you. I am too.\" \n\nWith that he moved even closer. He looked like a movie star. Was that make-up? His eyes sparkled like a smart girl, even though he was a boy, or appeared to be. I hoped he could tell how uncomfortable I was, because I was having trouble saying anything. He suffered from no such inhibition.\n\n\"I suppose Fancy's little dog and pony show in a few minutes will cast you as the pony and some comely grad student lass as your mare for the evening, but keep an open mind about tomorrow night, will you?\"\n\nThen the break was over. A couple more desultory pitches, and suddenly, Fancy was back at the microphone. She had changed into a very conservative, almost manly style of business suit, in understated dark grey with light grey pinstripes that matched her eyes. However, the lapels were cut so wide that both of her exaggerated breasts jutted out from the coat like raspberries trying to leap from their container, a tight red silk blouse. A spotlight that must have been mounted in one of the many large trees that surrounded the patio lit her up like a beam from a flying saucer. All eyes were truly on her.\n\n\"Imagine if there were no downsides to making all your sexual fantasies come true. No social costs, no disapproval, no ostracism, no catty comments, no risk of rejection from a potential partner, no issues with an employer, no uncertainty about what you wanted to give and to get, no uncomfortable silences, and no unknown risks of disease or being a target for criminal activity!\"\n\nThe crowd let out a collective sigh. \"If only!\" several people began, but Fancy cut them off.\n\n\"Not only can you do this, but you can do it in the comfort of your home, at a time of your choosing, on your terms, revealing only what you choose to, and search the entire world for your ideal partner or partners. And you can begin to do this TONIGHT!\"\n\nShe paused for effect, and everyone wanted to hear more.\n\n\"How much does it cost? How much do you pay for Netflix? Ten pounds a month? For Match.com? Thirty pounds? \"And the so-called 'free' dating apps come with some major risk factors. Our solution does not!\"\n\nSome nice pictures appeared on the screen. Attractive looking people looking very happy. Gazing longingly at each other or gaping in orgasmic joy. In all possible combinations of male, female, and indeterminate gender. \n\n\"We want to help you find the joy you deserve in your life. Every day. Every night. Every way.\"\n\nShe dropped her eyes, and somehow managed to look shy and embarrassed. \n\n\"I have experienced all of the uncertainty and shame of trying to fulfill my somewhat unconventional desires.\"\n\nThe entire audience literally leaned forward toward her.\n\n\"My secret desires were nearly impossible to fulfill in a traditional social arrangement and dating regime. You see, sexually, I need...\"\n\nEveryone was totally silent, hanging on every word.\n\n\"I need to be taken, to be forced, to be roughly dominated and controlled and taken just to the edge of abuse to get my release. When I get that, I feel joy and peace that I can achieve in no other way. But that is not something you can talk about. Just talking about it with a potential partner beforehand takes away all the excitement. Nor can I just hope that a potential partner, upon meeting me, will somehow intuitively know to treat me the way I need to be treated, and the kind of folks who would treat me like that for their own reasons are often not good choices. Before we developed LifeJoy, all of my dating experiences were awful and disappointing.\" ",
        "Several sighs were heard from the audience, including a loud one from me. I could see myself dominating this hot little waifu with exaggerated cartoon-like zeal. It would be my solemn duty to make her happy. And she was coming to my cabin in a few minutes to help me use the system. \n\n\"Our system can find me partners who are qualified and proven compatible, safe and acceptable in a way that I myself define and lets me know before I meet them that they truly want what I want and that they will give it to me. And I know what they want, and that I want to give it to them. We are truly simpatico. That was project codename for the system as we developed it: Sympatico.\"\n\nThe screen changed to a complicated looking network diagram, depicting long chains of interlocking transactions, with notations about hashing values, and Merkle trees. \n\nShe smiled. \"I don't have to tell this crowd about the potential of Blockchain software technology for contracts, supply chains, medical records, and a dozen other uses that can revolutionize commerce. But we see the potential to revolutionize society via social interactions and social contracts.\"\n\nAnother picture appeared on screen, of an attractive but shy looking young woman in her mid-twenties.\n\n\"This is Angela.\" She pronounced it 'An-hell-ahh' the way the Germans do. \n\n\"She lives in a big city and has an average office job. But her sexual tastes are anything but average. Most of the people she meets every day would call them bizarre. But for Angela, they are wonderful, magical. They are what she needs and wants, and up to now, hasn't been able to get.\"\n\nAngela's expression changes to one of frustration and anger.\n\n\"But now she can. She logs into the system and begins to specify what she is looking for. She wants someone within 35 km, so they can get together easily. She wants someone who has tested free of several diseases or conditions in the last six months, who is 18 or older, and is a single female of a specific size and build who wants to meet a female like Angela. These conditions are checked transparently with high security encryption, verified by outside third parties, maintaining the privacy of both women, and a potential match is made. After both consent, they exchange descriptions of specific behaviors, still anonymously. If those match, other conditions they may specify, like a short term or long-term relationship, etc. are checked and verified. Finally, a lunch is arranged, for the two to meet.\"\n\nAnother picture of Angela, on her knees, looking adoringly up at a big muscular black woman, who has her hand around Angela's throat. \n\n\"They have been together for some time now and are both very happy.\"\n\nThe pictures on screen began to be replaced with images of the people that were here tonight, presumably taken candidly during the munch box dinner and presentations. Laughing single people with happy expressions.\n\n\"When you get to your cabins tonight, you will find a Chromebook setup to communicate with our browser interface to our system. We call it LifeJoy. It will change your life. It will ensure that you find what you are looking for, perhaps with someone here tonight. Let the user interface guide you, and don't be afraid to specific exactly what you want. No matter how unusual it may be and how much frustration you have felt in the past. Go for it now! LifeJoy can deliver!\"\n\nThe room was now buzzing. Glennis Howries took to the microphone again, to wrap up the session.\n\n\"Look at the bottom right of your badge for your cabin number in black italics, like \"14A\". She made eye contact with me just as she said that. Was that her cabin? Wow!\n\n\"Each cabin has an \"A\" or \"B\" side. You will find the Chromebooks setup for you to try the LifeJoy system, which will undoubtedly occupy the rest of your evening. You will hear a bugle blow reveille in the morning at 0730, and then we will all meet here for breakfast at 0800 to begin tomorrow's activities. Goodnight!\"\n\nI watched a few people almost sprint for their cabins. I looked around for Fancy, and in the process, I unfortunately made eye contact with Duran Drathars, who promptly winked, raised his eyebrows dramatically and blew me a kiss. Ewww.\n\nSuddenly, Fancy was at my elbow. \"Are you ready for some new experiences, Robbie?\"\n\n\"Perhaps with you, Fancy, but not with your cousin.\"\n\nShe stopped in her tracks and put her hands on her hips. \"Has he already approached you?\n\n\"He certainly made it clear he wanted to hook up, but I'm not wired that way.\"\n\nShe smiled, took my arm, and steered me back towards my cabin. \"He is a pansexual. He likes women and/or men, and the smarter the better. I am told he is an incredibly skilled lover.\"\n\n\"Isn't that kind of thing dangerous, in terms of exposure to disease?\"\n\n\"He's pansexual, Robbie, not promiscuous. At 28 years old, I expect he has been with less than 10 lovers. How do you compare to that?\"\n\nLet's see. Mrs. Douglass, Janet, Melanie, Lara, Suzanne, Sarah, my TA Miss Wyricki, Strelsa, Millie, Peggy, Erminia, Nora, Elizabeth, Candy, Orinda, Veronica Tappert, Saskia, Rene', Rene', Mei Ling, and Summer. 21 since I was 18. That's roughly 21 per year. If Duran also did not become sexually active until he was 18, and he has had 10 lovers in 10 years, that is one per year. So, I'm the promiscuous one? Or at least, twenty-one times as promiscuous as Duran Drathars. If later tonight, I hooked up with Fancy, or made my way to cabin 14A to see Glennis Howries, that would be an even 22. I never thought of it that way before. I never thought of it at all. Famine to feast. \n\nFancy filled the silence I had left hanging. \"His first lover was my uni roommate, then she got a new boyfriend, and Duran managed to seduce her boyfriend, and then the three of them carried on together in various combinations for three years until he entered medical school. I guess you could say he was getting maximum action from minimum exposure.\"\n\nRisk reduction. It made me think of Suzanne, which made me sad. By now, we had reached my door. I had questions, but my first one was not about software.\n\n\"Was that story you told about your sexual predilections true, or just part of an engaging presentation?\"\n\nFancy smiled her best hot girl with inside information smile. \n\n\"It was true at one time. I may have evolved. I'm not sure you will ever know.\" Emphasis on the YOU again. Damn. I thought I was beyond that. \n\nShe opened the door to my room and gestured towards the Chromebook setting on the little rustic desk. \"If you will, I want to observe how you react to the software and the interface in a purely unaided and unprepared way and see how well our human factors work applies to a user like you.\"\n\nMe too. I sat down and put my assigned ID and password in. The computer made that \"USB device just connected\" sound and a little dongle looking thing next to it beeped and flashed a blinking light in a little depression on its surface. It looked just like the fingerprint reader on my dad's gun safe, so I pressed my index finger on it at several different angles. It made a more satisfied beep. Then my face appeared on the screen, presumable via the webcam built into the unit, with a grey outline of a generic face. I leaned forward and to the left to center my face in the grey outline, and the computer made several exaggerated simulated shutter snapping sounds, and \"Recognized: Robbie Roberts\" flashed on the screen for a moment.\n\nI looked over at Fancy and she just nodded back toward the screen. A swirling logo appeared: a gif or animation loop. Like M.C. Escher mirror image fish drawings looping and interchanging, only these were made up of the symbols for all the genders and preferences from Fancy's first talk. It finally coalesced into a stylized LifeJoy logo made up dozens of small images of happy smiling people. \n\nFinally, I was offered three choices: preferences, population, and fit. I chose preferences. Should I be honest, or put in something unbelievably unusual and thus undeliverable? \n\nI was presented with an on-screen dialog not unlike the nested one we used to select filters, limits and ranges for measurements in my Embedded Systems class. Only there were no ohms, volts, milliamps, microfarads, and millihenries involved here. There were simple things like distance and age per the Angela example, and lots of other choices. I decided to play it straight. Very straight.\n\nCis male seeks cis female, relationship only no hookups, no one night stands, no zipless fucks. Age 18 to 34 (the max guess I had for Glennis Howries' age), IQ above 130 (smart girls make the best lovers, I was now sure), height between 5 and 6 feet (I suppose I should include girls that were taller than me, but for some reason I did not), non-smoker (of any kind), disease free of every listed choice, and location within 300 yards of my present location. \n\nThe \"population\" and \"fit\" choices changed color to a sort of yellow green. I clicked on population and saw a display of multiple short but wide histograms, depicting each of the variables I had input, and the statistics of how the population fell out by each of those factors. It was very easy to understand, but not too useful. Only a tiny fraction of the users of the system were within 300 yards for example, but the clear majority were between 5 and 6 feet in height. About 15% were above IQ of 130, so this was a very smart crowd. About 45% were cis females, 75% were non-smokers, and 80% did not have any of the diseases I specified. This was interesting, but not what I really wanted to know.\n\nFancy leaned a little closer and looked over my shoulder but kept her expression neutral. I put in a preference for grey eye color with violet highlights, but she made no sound. Another histogram appeared, showing the 99.9% of the user population did not meet my criteria for eye color. At the bottom of the dialog was a button for more choices. I clicked it, there were thousands of them. How would I ever make sense of this?\n\n\"Try the fit item\" Fancy intoned.\n\nA series of nested histograms appeared, like a cascade of filters of different sizes. You could see how many individuals 'fell out' from your series of choices. Reality raised its ugly head, even in this idealized sexual fantasy! The 'population' item showed you what was out there, the 'choice' item let you say what you wanted, but the 'fit' item showed you the intersection of those two: what you could expect to get. Even in the world of imaginary cybersex, you had to stay in your lane! \n\nThere were little 'suggestion boxes' next each filter, with fine print that suggested what you could do to 'improve your fit' by compromising what you wanted to find something you could get. How realistic. I looked at all those thousands of sexual proclivities again in the choice item - they were ordered by popularity, I guessed. In my little subset of cis male seeks cis female, the list began with vaginal intercourse followed by oral and anal options, then rapidly descended into lots of terms I had heard but did not fully understand, followed by others I had never encountered. You could click on each one and see a little mini wiki explanation. Eww! Who made up all these terms? Who already knew they liked that? As my grandmother used to say, it takes all kinds to make a world. But jeesh!\n\nWhich made me think: what did I really want? I wanted it back the way it was earlier in the school year, with Lara, Suzanne, and Nora all three humpy and happy. Who wouldn't want that? I could no longer get Suzanne, apparently, but I could still have Lara and Nora, although we might be physically separated for work and school intermittently over the next few years. What did I want in the interim? Someone honest and wonderful like Summer Mawn, or Elizabeth Ashcroft Knowles. What did I want tonight? Fancy Drathars or Glennis Howries? \n\nIf Fancy had 'evolved' beyond just liking it very rough, where would she fall out? I began to try other 'filters' and watched the fit window. I re-entered the grey eyes with violet highlights filter and began to experiment with other settings. Was Fancy still watching over my shoulder? Spanking, flogging, anal. As I entered choices the fit window narrowed down, but still did not yield only one result. But I began to detect a little Suzie tone from her, without the pecuniary overtone. What else to try? I tried to put in a threesome with another female, but the choices were 'greyed out' and I couldn't select them.\n\nFancy cleared her throat. \"Tonight, it's singles night so your choices are restricted to select only one individual.\" But her Suzie tone warbled a bit. \n\nWhat was it Duran Drathars had said about keeping an open mind about tomorrow night? Surely, he couldn't mean a threesome with his own cousin? I had heard the term 'kissing cousins' but that was too much even for Duran, wasn't it? It was certainly too much for me. I made some more tries and watched the fit window. Suddenly no one was making it through the filters. Control Z reversed my last choice and I tried again. What else to try?\n\nFancy laid a very warm hand on my shoulder. \"I'm flattered, Robbie, but my stock option agreement specifies that I cannot have romantic relationships with potential clients or investors. I must leave you on your own to pursue other possibilities.\" With that she sashayed out the door. Damn.\n\nI played around with several other threads in the database, but my heart wasn't in it. I wasn't terribly frustrated, and I thought my desires were relatively mainstream, especially compared to this crowd. I shut off the Chromebook started out to find cabin 14A. \n\n+++++++++++++++++++\n\nAfter his trek through Canada, Dwight returned to DC and he and Carmencita had four days together before he had to report for his new assignment. It was four days of pure joy. Having her in his old apartment made it seem like a palace. They made love three times a day and cuddled the rest of the time. She was overjoyed to have him back and working a job where she could expect to see him regularly. She was even getting used to calling him Alex instead of Dwight. \n\nOn day five of his return, Dwight reported for work as directed, at an agency facility on Savage Road at Fort Meade. He almost failed to give the guard his real name. He would have to remember to always use Alexander Walton from now on. The guard scanned a list, looked a little apprehensive, and told him to go to room 100A around the hallway to the left. \n\n\"Sorry, pal.\" He said. \"That's where they do the exit interviews.\"\n\nDwight, er, ah, Alex, steeled himself. He was prepared for this possibility, but not very well. At any rate, if he had Carmencita he could find a way to be happy, and he could find another job. \n\nRoom 100A turned out the be a thoroughly bureaucratic office that could have served any government or military equally well by just changing the signs. A prototypical GS11 HR 'specialist' bade Alex to sit at his side chair and walked him through a procedure he had undoubtedly taken other unfortunate people through a thousand times. Forms on where to send his final paycheck, documenting that he had no remaining vacation days or expense statements outstanding, an inventory of government property, and finally, reminders of all the non-disclosure agreements he had signed, an affidavit confirming that he understood that his previously issued security clearance was revoked but that all his responsibilities under the National Secrets Act remained in place and that he would be criminally prosecuted if he violated any of its dictums. \n\n\"I wouldn't worry about that one much, they say it to everyone, but it's just routine,\" the GS11 said. \n\nAlex laughed inwardly. Not in my case, he thought, but I can't talk about it. \"I'll have to remember not to take any selfies inside submarines.\" The GS11 looked confused. Not much on current events, Alex guessed. \n\nHe started back toward the parking lot and began an internal dialog that he had only encountered in fictional stories before. Did he tell Carmencita he just got fired or not? He should always be honest with her, plus she was too smart to fool anyway. Maybe he could use his last assignment as a springboard to work at another, more promising startup? Wait, wrong name. His official resume would show nothing except his Department of Agriculture cover job since he graduated from MIT. That would raise a lot of questions. Could he apply for another, real job in government? Did he want to? This was going to be more difficult than he thought. He was not used to having time on his hands, either. They could pay the rent on his apartment with Carmencita's salary, but it would Top Ramen for dinner six nights a week without another paycheck. \n\n\"Alex Walton?\" A tall guy in a grey suit blocked his way out, not so subtly demanding a response. Very fit, very black, with that earnest look that said he was a government special agent and damn proud of it.\n\nThe FBI was here to arrest him for something, was his first guess. Many of his assignments for no such agency had required him to be very creative financially, and hack a lot of supposedly sacred systems, plus he still had several backup IDs and bank accounts he never mentioned, so they could likely send him to Leavenworth if they wanted to. \n\nBut no, the suit fit the guy too well, the tie was much better than expected, and his weapon did not print through the jacket. Secret service, maybe? But this guy was in his mid-forties and still lean as Cassius. Not a desk job then, but an active posting somewhere important. What was up?\n\n\"Yes.\" Alex would make him explain.\n\n\"Would you come with me please?\"\n\nAlex hesitated. The guy did not back off. \"It would be best not to draw any attention to yourself, Sir, even here.\"\n\nThe \"Sir\" was promising. It meant he was not to be arrested but transported. Where?\n\n\"Lead the way, Special Agent.\" The guy smiled and turned on his heel. Alex spotted an ankle holster and small backup weapon through his pants leg. Most people would not have noticed. \n\nThe tall guy walked over to a black Tahoe with several stealth antennas and some very discrete red and blues in the grill and back window. He opened a back left door and gestured for Alex to get in. \"My name is Jones. Special Agent Smith here will drive your car in for you.\"\n\nA younger but just as fit looking white guy in a darker suit had emerged from the right side of the Tahoe and held out his hand. Alex tossed him his keys. This is the only offer I have right now, he thought, plus my schedule is completely free for the rest of the day.\n\n+++++++++++++++++++\n\nGlennis Howries opened the door of 14A after just one soft knock. Her smile and her Suzie hit me like a warm and welcoming wave of perfumed air.\n\n\"I hoped you were basically an old-fashioned guy, Robbie, and you would take my little hint rather than devote yourself to a software adventure.\"\n\n\"I am planning to devote myself to you.\"\n\n\"What a line! But not bad, given the circumstances. To be perfectly honest, I only want your devotion for two nights. Are you okay with that?\" Her Suzie begged me to be. Can't disappoint a lady, can I?\n\n\"Yes ma'am. I'm due back to Texas soon, so that works for me. But if we only have two nights, I am going to expect some intense evenings, if you take my meaning.\"\n\n\"I hope you make me take more than that!\" She smiled. She reminded me more and more of Mrs. Douglass. \"Cards on the table, Robbie. I was divorced about a year ago from a much older man who hadn't touched me for years before that. I need to know I can be desired and excited again.\"\n\nIt was early in the evening, and I was feeling my oats a bit. I slowly began kissing Glennis. No worries about her being desirable - she was amazing. She looked even better with her clothes off. Her skin was as wonderful as I had imagined that Lynn Da Britain's would have been if I could have stripped her like I wanted to. Glennis was sort of 'short-coupled' and voluptuous under those overalls, and so fascinating to touch.",
        "Her Suzie began to grow, and I tuned in, stroking her and listening carefully for what stoked her fire. Almost everything I did worked just fine. Her Suzie waxed when she figured out I was on the way to go down on her - perhaps that was something she had been missing for the last few years. Peaches was my first impression. Beautiful tasty peaches. Her pussy lips were like someone had split a juicy peach vertically, and the little pink pit was her clit. Buttery, juicy, wet and wonderful. I worked on her patiently, but I didn't mind spending the time. Her first orgasm surprised me, both in its rapidity and intensity. It must have surprised her, too, because she shuddered and shivered in its aftermath. \n\nShe spread her legs even wider apart and reached out to grab my head. I synchronized with her Suzie and went on autopilot. I was a in a peach pussy induced trance - gobbling up her perfect juice and reveling in her signals. She came again, peachy as ever, and it made me feel even dirtier. I put my hands under her knees and pulled her butt up off the bed and bent her legs back, exposing her lovely ass. It was a perfect inverted heart shaped pink confection, which I proceeded to devour.\n\nHer Suzie sent shock, then awe. I was sure she had never had this kind of attention before. Soon I heard those wonderful chords that spoke of humiliation that then fed into excitement and new-found desire. She went from disbelief that it was happening to her to abject fear that I would stop. Gotcha baby! You belong to me. She spread her legs even further, urging my tongue on into her perfect ass.\n\nWhen I was convinced that her Suzie signaled excitement that could not climb any higher, I turned her over on all fours, deliberately trying to make her wonder if I would enter her pussy or her ass. I needed some lube, so the choice was easy - and lubed she was, a molten fountain of peach juice. But still tight, and so right. Suddenly it was pizza night.\n\nI pounded her, losing all inhibition and even disconnecting from her Suzie for a few moments. I bit her neck. I fucked her like I was a'gonna come out the other side. She groaned and came again, a big deep cough emerging from her throat. I stopped and got a little tender and kissed the side of her face. She sighed. Her refractory period was about 3 seconds. \n\nI flipped her back onto her back, pulled her knees up near her shoulders, and started into her ass. Slowly butt surely. It was tight, hot and tender. She stopped breathing. I slipped in, moving inexorably forward. She grunted and pushed back against me. What did Doctor D call it? The Valsalva Maneuver? No that was from scuba diving. I had almost completed my dive to maximum depth. Once I reached it, I stopped and just hugged her. I moved over to a 'spoons' position behind her.\n\n\"I'm going to fuck your ass now, Glennis. Slowly at first.\"\n\nShe drew a huge breath and held it. I pulled almost all the way out and paused, then went slowly back in. When I reached bottom again she exhaled loudly and took another breath. Slowly was the key. Soon she began to relax a little and matched her breathing to my pace. I wrapped my arms up around under her rib cage and sped up my stroking, also going a little deeper and twisting a bit at the end. \n\nShe began to hum in time with my stroke. It sounded weird, like a ventriloquist throwing a very deep voice. I was never planning to go as fast as a pizza night pussy fuck. I didn't need to. Her voice got deeper and louder, and then she clenched all her muscles and made a noise that surprised me. It was like some one yelling \"Yee-Haw!\" but with a weird accent. But her Suzie said she came. The noise triggered me, and I knew I was just about to come. I don't know why, but I pulled out, got on my knees and shot all over her breasts. Her Suzie said she liked it.\n\n+++++++++++++++++++\n\nAlex expected a long ride through the DC traffic before he got any clue as to what was up. That's what he got. They turned on the parkway, past Pax River, and then past NASA Goddard to the 495 and rode all the way through College Park and Kensington. It took forever. They finally turned on River Road and left into Congressional Country Club. WTF? Alex could see the famous clubhouse but before they reached it the driver turned left past a bunch of parked cars and tennis courts towards some new looking metal buildings. They stopped and parked off to the side some distance from what looked like a tennis pro shop with a big porch and tables overlooking the tennis courts and a little driving range. They took a little path in between two buildings and went in an unmarked door. \n\nThe service hallway had a bare concrete floor and was filled with rolling carts of chairs, tables and some other stuff shrink wrapped in plastic. They turned into a regular carpeted hallway that led to a little conference room, the kind you use for 6 people or less, with tennis pictures on the walls. Agent Jones (were those really their names?) opened the door for him, let him go past, and then closed it, remaining outside in the hallway. \n\nThere was only one chair occupied at the conference table, but Alex was flabbergasted by who it was. Ambassador Pliskin was much shorter in real life than he looked on TV. He supposed that was where Suzanne Pliskin got her petite frame.\n\n\"Hello Dwight, or should I say Alex? I think I'll have to call you DA, just to remind us both of your past and field work background.\"\n\n\"Actually, sir, please call me DB. That's what the other agents dubbed me when I was first assigned to field work.\" He was still the Dweeb Boy at heart.\n\nPliskin continued. \"Your little vacation is over, DB. Things are about to be shaken up substantially. POTUS is cleaning house, especially the intelligence apparatus. I am going to be the new National Security Advisor, and you are going to be my assistant. I need someone with no existing political debts or bureaucratic career plan, plus we have had too many ivy league poofters in that position. I wanted somebody who has been in the field and at risk to learn the ropes and advise me. You will have to work very hard, but I think you have the horsepower to handle the job.\"\n\nAlex was at a loss for words. He hesitated just a second. Should I call him ambassador, or?\n\nBut the ambassador talked just as fast as Suzanne did. \"It would be best if you did not mention your past activities in the field to anyone, and especially not your brief tryst with my daughter, and especially not to Carmencita. I'll expect you to be completely forthcoming with me about everything we do in the future but keep your own counsel about anything in the past. Understood?\"\n\n\"Yes, sir.\" That seemed to be the right thing to call him. \n\n\"Keep your mouth shut most of the time we are in meetings, unless I ask you to speak. But when it is just the two of us I expect you to be brutally honest and tell me immediately if you think I have missed something or I am about to fuck up. Understood?\"\n\n\"Yes, sir.\"\n\n\"Agent Jones will drop you to the EEOB to do all the HR shit. We are stealth staging out of there for a few days until all the right people get canned and we can move in and get to work. Until the public announcements, just tell Carmencita you have a new job in the executive branch, at a GS15 salary level. You can tell her more in a week or so.\" \n\nWith that, Pliskin stood up and walked briskly out the door. Alex was sure they could afford the apartment now - GS15 was at least twice what he made before. But how many hours a day would he even be there?\n\n+++++++++++++++++++\n\nGlennis was a natural in more ways than one. While we both caught our breath, she curled up next to me and began toying with my nipples.\n\n\"Robbie, we are going to have to talk about some things. But right now, you have worn me out, and I need a nap.\"\n\nIt was past midnight. She picked up her phone and set an alarm for 0500, and then snuggled in next to me. I was asleep before she was.\n\nI awoke to find, wonderfully, that Glennis was sucking my cock. Not gently, not teasingly, but earnestly, almost frantically. This is my kind of wake-up call. She was really into it. Groaning, snorting, slurping, tonguing and twisting. She was easily taking my admittedly average length and girth down her throat, but her fervor was such that she could have taken much more. I felt like I had been swept up into a tornado. Suddenly I knew I was losing it. I was just about to pop.\n\nSuddenly music was playing somewhere. A golden oldie - Roy Orbison I think. \"Only the Lonely...\" \n\nGlennis took her mouth off my cock for an awful moment and said \"Damn! I thought I could beat the clock.\" I realized the music was the alarm tone on her phone.\n\nShe then redoubled her efforts and clamped down on me like a lamprey clinging to a wet rock. But I had no desire to dislodge her. I let myself go and blasted off into her mouth. She hummed and strummed and made it all disappear, and then kissed her way up to my nipples and drove me crazy. Damn. Her neglectful husband must not have just been older, he must have been dead. \n\n\"I wanted to do that last night, Robbie, but you just took me like a stallion, which I also liked.\" She paused for a minute to kiss my nipples again. \"At my age, I thought that a vigorous young teenager like you could re-kindle my spark, and you certainly did that.\" She paused again and looked uncomfortable. \n\n\"Glennis, you are amazing. If you want to talk, this would be a good time, because I am not going to be able to move for several minutes, at least.\"\n\nShe smiled, cuddled up next to me, took my dick in her hand, and took a deep breath. Her Suzie signal moved from the contentment she had been sending all night and this morning to a plaintive, wanton wail. Uh-oh.\n\n\"Well, last night was singles night, as you probably know. Today will be a series of so called team building exercises to make the group and thus many of Jeremy's employees more creative and productive. All business. But tonight, Fancy will do another session on her software, to encourage the people who paired up on singles night to use the system to identify someone else to add to their hookup and have a threesome or more some. It's group night.\" \n\nShe looked at me expectantly, trying to gauge my reaction. She jiggled my dick a little bit in her hand. \n\n\"Have you ever done anything like that, Robbie?\"\n\nYou would be surprised, my dear. But I wanted to avoid that subject, so I asked, \"More importantly, Glennis, is that something you want to do?\"\n\nAs beautiful as she was, she actually looked shy and apprehensive. \"I think every woman thinks about being with two men, but most never do it. But you showed me last night that I could not only do some things I thought I never would but could enjoy them immensely. So, I suppose my answer is yes, but with a qualification.\"\n\nShe paused, a little too long for me. But still I waited. \n\n\"I don't want to use the software to find someone. I already know the two men I want. You are one.\"\n\nI did not like where this was going.\n\n\"The other is Duran Drathars.\"\n\nMy cock instantly shrunk in her hand. She could not have missed the effect her suggestion had on me. Could she? She hurried into the bathroom to shower and get ready for what I presumed was her Mistress of Ceremonies gig at breakfast. She bustled out without a word.\n\nI was still fretting about Glennis' plan as I showered and dressed just in time to hear the damn bugle blow reveille. What were these guys, Scottish Aggies? I headed down to breakfast early, my appetite stoked by all my exertions last night. My stomach was growling from hunger, but also from the uncertainly and apprehension of the night to come. Or not. \n\nBreakfast was much better than the munchy box dinner. The had hired a local caterer, who was not nearly as attractive as Summer, but was a very good cook. She had set up a little line of propane stoves and waffle machines and was making omelets and waffles to order, given the limitations of what she had on hand. My quest for breakfast heat did not prove quixotic, though, as she had an iron skillet on one stove and was making Migas Manchegas, Spanish style, and they were wonderful. Chorizo, jalape\u00f1os, eggs and chopped up corn tortas in perfect proportion. No Texas style pan dulces molletes or bunuelos to sugar charge my Suzie receiver, but a waffle with powdered sugar filled the need. I felt like kissing her.\n\n\"I see you found the good eats right away, Robbie. You have a talent!\" Duran Drathars put a hand uncomfortably on my shoulder as he stood in line behind me. \"I need some cholesterol, jalape\u00f1os with something sugary to start my day out right. Looks like we have a lot in common.\"\n\nNow I knew how hot women feel when a guy with no chance tries to hit on them with 'clever' lines. Oh please. \n\n\"I hope your evening was as wonderful as mine.\" \n\nDid he hear Suzie signals? Did I send some? Certainly not for him. \n\n\"I'd like a chance to make tonight even better.\"\n\nMy plate was ready - steaming and smelling wonderful. I nodded to Duran and headed toward the tables, looking for someone, anyone to sit next to and hopefully avoid or postpone hearing further details from him, but all the tables were empty. Duran and I were the only early birds. Perfect. I took a seat at the furthest spot away from the serving line. A rustic picnic table, bench seats with no backs.\n\nHe sat down next to me 30 seconds later, with the same food choices that I had. He dug in lustily (I supposed) and winked at me. \n\n\"Early bird gets the worm, eh?\"\n\nOh, please! \n\n\"Robbie, I think the two of us should double team some lovely young lady for group night tonight and make her dreams come true. Don't you? Fancy tells me you did not use the software as intended last night, but I'll wager a player like you was not left high and dry. Glennis Howries, right? Fantastic choice. And a perfect choice for tonight, too!\"\n\nEven if Duran didn't go both ways, I wouldn't be comfortable with his plan. Too much, too soon, too young, too fast. I think the gang bang condo experience with Mei Ling should remain my last multiple male on single female memory. All on the up and up, and with people I knew and trusted, and hot as hell with no down side. Perhaps if Summer really wants to try something like that, I could enjoy her hot Suzie while she got what she wanted. \n\nHe leaned toward me. My apprehension grew. \"Let's be honest Robbie. I am very selective, you know, but Glennis looks like a very hot number, a risk well worth the return, if you catch my drift. I think we could both enjoy driving her crazy. I also think we could enjoy each other. I infer from your facial expression that you are not experienced in that department, but let me tell you, it can be just as wonderful as with a woman. In some cases, better.\"\n\nI was frozen. I felt trapped. I felt time slowing down, though. Flight or fight reaction?\n\n\"You know how wonderful it is with woman that really needs a backdoor man, don't you Robbie? And the more muscular she is, the better it feels, right? Well, my friend, no woman is more muscular than I am, and you have never felt anything like what I can do.\"\n\nI couldn't help but think about Summer's fabulous muscular ass. Time slowed even further. His every word seemed to take forever, but I was frozen and unable to react. \n\n\"You know how they say a woman can eat pussy better than any man, because she knows the territory so well? It's true from the other side of the equation, too, Robbie. I can take you places you could not go any other way. Places you will not believe.\"\n\nI felt dizzy. Tunnel vision began to set in. I felt trapped. \n\n\"And once you relax and trust me, I can show you things about yourself you will thank me for. I can give you some warm and wonderful things you can only get from another man, and I will devote myself to teaching you everything I have learned!\"\n\nI saw white light, and everything stopped. I saw Duran's lips continue to move, but I didn't hear anything except my own heartbeat. I felt just like I did when the crazy ponytail air marshal was threating Elizabeth in the airplane, but this time it was me who was being threatened. Fight or die. I heard a loud buzz and saw flash of white light. A Suzie blast jumped out of me like a lightning stroke directed right at Duran's head.\n\nHis face froze and turned white. His eyes rolled up in his head and he toppled backward from the little bench and hit the ground hard. \n\nA guy at the next table jumped up, yelling, \"is there a doctor here?\"\n\nFancy came running over. \"He IS a doctor!\" She kneeled next to him and checked his pulse. She looked at me.\n\nI shrugged. \"He was talking and all of sudden he just keeled over. I don't know what happened.\"\n\nSoon an ambulance arrived in the form of a white van painted with alternating green and yellow rectangles. Duran was awake by then and protested that he was fine, but the EMT said he was exhibiting the symptoms of shock and had to be checked for a concussion. At least I hadn't kicked him in the face on the way down like the guy in the airplane. Hadn't thought of it, then. \n\nFancy went with him in the ambulance. There was a bit of a pall over the rest of breakfast, and finally Glennis called the group to order and begin introducing the day's schedule of activities. \n\n+++++++++++++++++++\n\nWe did some standard team building crap, like a three-legged race and an egg carrying contest. Then some improv that was designed to improve our creativity. At lunch the gossip was that Duran had checked out okay at the hospital, but he was not coming back to this event. I felt better immediately. The afternoon was devoted to something a little more interesting - caber tossing as a metaphor for teamwork and leadership. One of the woman referred to it as throwing phallic symbols around. After dinner, I went back to my room by myself. Glennis avoided me. \n\nFirst, I called Summer, but I got the message that she put on her phone during one of her events. Then I called Lara.\n\n\"How's life as a student, my love?\"\n\n\"A little boring. Wish you were here.\"\n\n\"Me too. I am up in Scotland at a 'team building' outing.\"\n\n\"Any hot women on your team?\"\n\n\"Not tonight. I am all alone in my cabin. I did get propositioned by a guy this morning.\"\n\n\"Ugh. Maybe you should come home early, Robbie.\" I loved the little rise in her voice.\n\n\"I have a ticket to come back for the wedding on the Fourth of July. But I really like my job and want to fulfill my commitment to the people there. I am learning a lot. \"\n\n\"Well, I will see you at the wedding, then. One other thing...\"\n\n\"What?\"\n\n\"Suzanne came by again. She is back in town to finish up her research project. She wanted to spend the night with me. I told her that if she wasn't with you, she wasn't with me either.\"\n\n\"I love you Lara.\"\n\n\"I love you too, Robbie.\"\n\n+++++++++++++++++++\n\nSunday morning, I boarded the bus for the ride back to Strathclyde. There were a few discussions about group night, but the folks I was closest to were talking about Fancy's software play. \n\n\"There are at least 5 other startups doing blockchain dating apps in the UK alone. Who knows how many worldwide?\"\n\n\"Kind of an obvious PR ploy, but where's the substance?\"\n\n\"Several of them are just ways to promote a particular cybercurrency or foist a questionable ICO on the public.\"\n\n\"If Jeremy is not on board, neither am I.\" \n\n\"I am not investing a farthing. My group hookup last night was a disaster.\"\n\nNot as bad as mine would have been, I was sure. I took a taxi from Strathclyde to the airport and boarded another puddle jumper to begin the journey back to Wingham. I was anxious to get back to Summer.\n\n+++++++++++++++++++\n\nThere were the inevitable flight delays due to weather, and I didn't get back to Canterbury on the bus from London until after midnight, after he local bus had ceased to run. As I contemplated the lonely walk from Canterbury to Wingham, a lovely white van rounded the corner and headed my way. Summer Event Caterers to the rescue!",
        "Mallory bounded out of the van and jumped up on me. What happened to all that military discipline? But I was glad to see her too. Steadfast loyalty was a welcome contrast to some of the behavior I had seen over the weekend. \n\nSummer looked tired but wonderful. After a tender kiss, she said, \"I had two very taxing events Friday and Saturday, and today we had to clean and reconfigure the kitchen space to put in a new oven. It took forever. I followed your flight on the web and came to get you. I missed you.\"\n\n\"I missed you too, Summer. A lot.\"\n\nShe drove back to her house where remodeling was still very much in progress and we dropped my stuff near the entry door and fell into bed and immediately asleep, both exhausted. I had to catch the 0730 shuttle bus to Folkestone in a few hours, and she had morning shift at Kent FRS. About 4 AM I had a morning wood wakeup call and reached for Summer sleepily. It was wonderful. She microwaved a couple of breakfast sandwiches that she kept prepared in the fridge for just such exigencies and dropped me at the bus stop about 30 seconds before the bus arrived. We both just made it. Damn it felt good.\n\nThings were in flux at work. OHH announced \"Your training period is over, and now you two lollygaggers will have to do some actual work! McFadden, you are reassigned as engineering liaison to the Chunnel II project, and Roberts will be your assistant. Officially, you are to assist the doddering dildoes of Downing Street by providing engineering assessments of their so called strategic plans. But beware, their ideas are all political puffery masquerading as governance, and it will be up to you two to steer them in some sort of realistic direction.\"\n\nHe paused and looked disgusted and thoughtful at the same time. \"Specifically, they want to have a grand discussion and produce a pretentious white paper about whether the second undersea link with Europe should be a rail installation like what we run now, or just a passive roadway setup for vehicles, or a full on futuristic maglev hyperloop. Bloody science fiction!\"\n\nOHH sat down next to us and lowered his voice. \"Beware, you two. The politicians will try to run roughshod over you and get you to say that what they want is also a good engineering choice. Don't do it. You get to control what the engineering sections of the report say - and keep it straight up. If they recommend something you think is infeasible, say so, in plain ink, and why. I will back you up, but passively, by refusing to force you to change anything. Since you, McFadden will be here long term, and may have to work with these idiots for years, I suggest that Roberts plays the bad cop to your good cop. Always give them a way to save face but steer them in the right direction. They must to learn that charm, charisma, and electioneering cannot trump physics and economics.\"\n\nHe gave us the backgrounder on the last set of meetings on the Chunnel II plans, contact information for our government counterparts, and a schedule of planned meetings. It looked like a whole day meeting every Monday, one here at our HQ in Folkestone, and alternate weeks in London. OHH was only on the agenda for the penultimate meeting before the report was released to the public. Lots of time on the train for Drummond and Robbie, I supposed. Our final report was due on my last workday before I went back school in August. I guess we had our work cut out for us. We spent the rest of the day going through the backgrounder and looking up the reports and the studies it referred to. Drummond had written a term paper on the whole idea just before he graduated, and he would help me get up to speed. The first meeting was right after I got back from Texas, since the 4th of July was not on holiday calendar here. \n\n+++++++++++++++++++\n\nBy day three of our Chunnel II studies, I was up to my ears in doubletalk and illogical bullshit and was happy for any interruption, even a call from Tessa Formby. \"Hello, Robbie. I need you to help me out with something. It's not for me, it's for one of Elizabeth Ashcroft Knowles associates at DEFRA, if you know what I mean.\"\n\n\"No gossip Tessa, not for you or any of your Tattler crew!\"\n\n\"Absolutely. Your devoted fan Abagail Clayton Bowles must not know anything about this, nor can anyone else at the Tattler. This is from my former life, not my current one.\"\n\n\"OK, Tessa, but how can I help?\"\n\n\"I can't say on the wireless, Robbie. I'll pick you up at your bus stop by the Holiday Inn Express and drive you to Wingham and explain what is needed on the way. What time will you be ready?\"\n\n\"I'm a little busy today. How about 6 PM GMT?\"\n\n\"See you then.\" I texted Summer, telling her I would be a little late getting home, and dove back into the reports, writing a list of key questions as I went. I set my alarm for 5:45 and when it beeped I closed my desk and walked to the bus stop.\n\nTessa showed up in another of those Audis with the steering wheel on the right-hand side, and she was even driving it herself. I stepped in and buckled up, physically and psychologically. \n\nShe began without fanfare. \"I need an intelligent and perceptive male, unknown to most folks in London high society, who can be a credible Master to escort a submissive slave to a very exclusive sex club, observe one of its members carefully and report back to me.\"\n\nThis sounded interesting. \"Are you to be my slave, Tessa?\"\n\nShe laughed. \"In your dreams, teenybopper, plus I would be recognized immediately. You must supply your own submissive. Can you do that?\"\n\nI forced myself to laugh just as tauntingly as she had. \"Of course, Tessa, and I'll bring a young and spectacular one! She pointedly ignored my little dig. \"But what kind of club is this?\"\n\n\"It's called the Walpole Society. Very secret, very upper crust, and by invitation only. One of my contacts can sponsor you as a guest and prospective member. They officially practice frottage, the old-fashioned kind, not the new wave gay kind. Understand?\"\n\n\"You mean they ride up and down in elevators and rub against strangers to get themselves off?\"\n\n\"Not exactly. One member rubs up against another member's submissive, with permission, of course. They have a formal evening for just that. It's almost ritualistic. But they have some other evenings with other themes, too.\" \n\n\"I'm not sure what the new modern wave is, though.\"\n\nShe laughed again. \"Oh, you tender and unspoiled lamb. I need to get you invited to some parties, so you can see the sights. All the gay guys like to 'frot' by rubbing their dicks together. It's consider a safer sex alternative to anal. It's the male equivalent of tribbing.\" I had certainly seen that, at home.\n\nI suddenly thought of Duran Drathars, and my blood ran a little cold. \"No thanks, Tessa, I am not wired that way!\"\n\n\"I only meant you should see it for your edification, not do it for gratification!\"\n\n\"I don't even want to watch. What else do these Walpoles do? What do you want to know, and about which Walpole?\"\n\n\"They don't want anything to do with the new kind of frotting either. They have other theme nights, though. The members always come in business dress, and their subs wear a mask to hide their identity and in a state of undress appropriate to the theme. For example, the night I can get you into is topless night, and all the subs must come bare breasted. The members all walk around showing off their sub's breasts and occasionally giving another member permission to fondle and kiss them. Some bring their wives as their sub, some bring their mistresses. But nobody notices that, officially. I need to know who a certain member is escorting. We know it is not his wife, but we don't know who his mistress is.\"\n\n\"I surely won't recognize her, or him for that matter.\"\n\n\"No, but I'll send you some pictures before the party. The fellow we want to know about also has a verbal 'tic' - he starts or ends most of his sentences with 'don't you know' or 'don't you see'. Afterwards we will have an interview about what you remember, and a sketch artist will work with you and we'll to try to figure it out from there.\"\n\nI thought about my 'mask camera' from the Halloween parties. \"Why not just smuggle in a cam?\"\n\n\"No chance, Lance. No phones or even any metal objects allowed. They screen and wand everybody very thoroughly. It's practically a SCIF. There are some very powerful people in that club and they make sure they get no unwanted publicity.\"\n\n\"When is this little party?\"\n\n\"Thursday night. The club meeting doesn't start until 10 PM. I will send a car to pick you and your sub up at 7 in Wingham and arrange for you to have dinner before and then be dropped at the meeting. I will pick you up afterward. Can you be ready?\"\n\n\"Sounds interesting.\"\n\n\"I'll owe you one, Robbie. This is important.\" \n\n\"I may need your help with something, now, Tessa. Can you get me the skinny on the MP's that are interested in the Chunnel II project?\"\n\nShe did not look surprised at all, but still asked, \"whatever for, Robbie?\"\n\n\"I may need some leverage, but I want to find a win-win compromise somehow.\"\n\nShe looked thoughtful, then smiled. Damn. Another hot woman who knows something I don't. I didn't realize until she had dropped me off that I still didn't know why all this was so important to her. Need to know, I suppose. \n\nI called Summer. She was still at her prep kitchen but about to finish up. I invited her over and told her to 'save the date' for Thursday night, as we were going to a special event.\n\nShe arrived a few minutes later full of curiosity. \"Where are we going? What should I wear? Who are we going to meet?\"\n\nI was deliberately vague. \"We'll go out to dinner at a nice place, so dress well. Business suit for the man is all I know. But you have a special requirement.\"\n\nShe waited. I heard her Suzie rev up. I wanted to let her imagination run wild.\n\nThen, \"we'll go out to dinner, in London. But after dinner, things will change. You will need a mask to wear after dinner. Nothing fancy, just one of those simple little costume masks like a masquerade party.\"\n\n\"What kind of party, Robbie?\" \n\n\"I can't tell you right now. But you will be going as my sub, my pet, so you will do whatever I tell you to do. No questions, no hesitation.\"\n\nHer Suzie signal burned and turned. I let her stew for another moment.\n\n\"Oh, and after dinner, when we go into the party, you will have to remove your top and expose your breasts for the remainder of the evening. \"\n\nHer Suzie shuddered, but betrayed that she liked the idea. No images of what she thought might happen, though. Just excitement. \n\n+++++++++++++++++++\n\nDrummond McFadden and I did our homework on the MP's and bureaucrats that we might expect problems with on the Chunnel II report, and hoped that Tessa could supply some other stuff I couldn't find with 'conventional' sources before push came to shove. There were some major problems with just providing a roadway for vehicles, and huge other problems with the maglev approach. Both shared one very big problem - there were few if any successful examples for us to get operational data from even 'normal' above ground siting. If the present Chunnel taught us anything, it was that undersea tunnels often had new and different problems that no one anticipated beforehand. \n\nI got to play bad cop even before the first project meeting. The political guys in London had asked for a conference call, so we put them on the only speaker phone we had, in OHH's office. Just as predicted, they tried to dictate what we were to write, chapter and verse, in support of conclusions they had already reached. When a guy named Digby, who was a policy assistant to a Labour member of the House of Commons named Richard Paul, finished the outline of his demands, Drummond just gestured to me, as if I had the floor.\n\nI tried to get into my role as the ugly American. \"That's not how this is going to work, Digby baby!\"\n\nI could hear him sputtering over the phone, but I pressed on. \"We will work together to lay out reasonable and explicit goals and our mutually agreed to criteria for concluding that they have been reached, and we will write a report with a plan that is well supported from an engineering perspective. Otherwise, the engineering sections we write will totally undercut the hasty and ill-considered plan you just outlined. Your loyal opposition will use our section of the report to draw and quarter you.\"\n\nThere was a full fifteen seconds of shocked silence. \"What is your name, young man!\"\n\n\"Robbie Roberts, old man.\"\n\n\"We will discuss this in great detail and face to face at our next meeting, after I have directed your superiors to bring you to heel!\"\n\nThey disconnected loudly. Drummond looked shocked. I looked up and saw OHH grinning from ear to ear.\n\n\"Those Texans are a combative bunch, aren't they McFadden? Remember to find a way to let them save face, Roberts.\"\n\n+++++++++++++++++++\n\nI wasn't really looking forward to our meeting on Friday, but I was looking forward to Thursday night's activities with Summer. She was dressed in a very classy dark blue suit outfit, and I noted it featured a blouse and jacket that could be easily removed. She was braless, and I could see perky nipples through the fabric of the suit. Her hair was up in a way I had never seen before, and she had an understated pearl necklace with matching earrings. She looked tall, strong, and perfect. \n\nI smiled at her. \"I always like showing up with the hottest looking woman at a party. Makes me feel important.\"\n\nShe smiled back. She did a double take when a big copper and tan Bentley Mulsanne pulled up to my little flat. A uniformed chauffeur type jumped out and opened the back door for her. She strutted over and floated into the seat. I hustled to the other side. She looked at me funny, then smiled as she relaxed in the buttery leather seat. We wound our way into London, and Summer's eyes got bigger and bigger as we made our way across Waterloo Bridge and stopped near a big old building. \"Somerset House!\" she said. \n\nMaybe that was a coincidence, but I was learning that with Tessa Formby, few things were coincidental. What was she trying to do?\n\nThe driver wound his way through an archway and we were led to a restaurant entrance. It was called Spring. There were lots of windows and white walls and high ceilings. Summer looked around in awe. To say the meal went well was an understatement. She knew exactly what to order, even asking for some things that were not on tonight's menu, which the chef prepared for her anyway. She told me what to order and tasted some of each of my dishes, too. Summer was enchanted, loved every bite, and I was enjoying the buzz she was feeling. I thought the food was good, too. The biggest buzz for me was when the waiter told us the hefty check had all been taken care of.\n\nThe driver magically re-appeared just as we emerged from the dining room, and soon we were turning into a non-descript stone building only a few blocks away. There were no signs or external markings at all. The driver stopped at what didn't even appear to be an entrance. He handed me a printed invitation and jumped out to open the doors for us. A narrow door opened suddenly, and we went in. The big wooden clock in the foyer said ten minutes to ten. \n\nSecurity was a lot better than your average airport. A guy dressed like a butler took my invitation, logged us in with a tablet computer, and dropped the invite in a shredder. The hallway from the little external entrance was like a cattle chute with walls about armpit high directing us along one path and one path only, and there were guards on each side looking intently at monitors as we walked through, so I presume we were being scanned by something. At the end of the 'chute' we were again scanned with hand held wands and then passed thorough to a little coat check station with two little private booths for one couple at a time. They looked like the dividers in an airport restroom, but floor to ceiling. Summer had to check more than an overcoat, she had to remove and fold her suit coat and blouse. She had not worn a bra. Her Suzie signal sounded as she began to unbutton her blouse and was in full cry by the time she folded it into the little plastic snap top box that was provided. Her incredible breasts were high and mighty like a carved bust on the front of a sailing ship, and her nipples were like beacons, too. \n\nI tried to look very casual and Masterful, but her Suzie was infectious. Neither was I prepared for the rolling waves of signals when we opened the door as passed into what looked like a medium sized hotel ballroom that must have been last redecorated in the early Victorian era. Ruby colored velvet wallpaper predominated, above elaborate wainscoting and a host of very polite potted plants on ornate stands. But I only noticed the d\u00e9cor for a moment, because suddenly my little mammalian brain was triggered by dozens of pairs of breasts moving about unencumbered. \n\nThere were at least three dozen couples already in the room, and a few more arriving behind us. There were big breasts and little breasts, high perky ones and relaxed dumpy ones, little hard nipples and big soft nipples in every size shape and color. It was like Christmas morning - everywhere I looked I saw something interesting. Summer drew herself up to her full height, making herself one of the tallest women here, and taller than many of the men, which made her muscular chest stand out and her nipples 'pop' like one of my roommate Kevin's favorite female body builder videos.\n\nIt had to have been a hard-wired reaction, but it stopped me in my tracks. I know they are defined as secondary sexual characteristics, but they had a primary and fundamental effect on me. I was focused on watching all of them, and my cock was suddenly very hard. \n\nI began the hear envious Suzie signals from several of the women nearby, and some stark male desire signals from their Masters. It all seemed to resonate with Summer, and she drew a ragged breath. I did my best to smile mildly like I did at the many Cotillion country club receptions my mother made me attend from age 11 on, which had resulted in me serving as an escort for several young Dallas pre-debutants and debutants. Those debutant balls would have been a lot more fun with the dress code in place here!\n\nSuddenly I realized I had no idea what proper manners dictated at an event like this. Does one politely look away, or is it considered a complement to stare and mouth breath at the lovely breasts on parade? Do you nod anonymously or work the room and make introductions? I decided to use the same method I had for learning to use the proper utensils at formal meals, wait for someone else to start and mimic their actions. \n\nSuddenly, Summer grabbed my arm and hissed in my ear, \"Oh my God, there is one of the OKS board members over there!\"\n\nI couldn't help asking, \"Is he with his wife or a mistress?\"\n\nShe gasped. \"It's not his wife! It's one of the female King's School alums, though, who was widowed several years ago.\" She tried to bury her face in my shoulder.\n\n\"Head up high, my pet. They probably won't recognize you in that mask, and even if they do, they will probably not mention it to anyone and hope you don't either. The man will be staring at your chest, not your face, I am sure.\"\n\nHer Suzie boiled anew. Perhaps a partial trigger of her 'darkly dirty' fantasies about dancing naked in front of people she knew. \n\nThe guy next to me introduced himself to another man but did not introduce the woman he was with. This pattern was repeated with the next couple and the next. By the time he reached us, I knew what to do. I offered my hand \"Robbie Roberts.\"\n\nHe introduced himself and stared pointedly at Summer's chest. \"Lovely\" he proclaimed.\n\nLuckily, I was already staring at his companion. \"Likewise.\"",
        "He smiled. \"Perhaps we will pass by each other again after the initial promenade.\" I realized he was setting the stage for permission to touch Summer's chest later. I presumed reciprocity would apply. Now I knew the purpose of this initial walkaround. Again, it was like the debutant balls - scout around see who is here and set some targets for later in the evening. I hadn't seen any formal dance cards though. \n\nSuddenly it occurred to me that I should seek out that OKS board member and propose the same kind of arrangement. Perhaps that would get Summer's motor running, too. I didn't have time to think about it, though, as several more couples approached in rapid succession. There were several polite codewords and signals in use, from a polite \"lovely\" or \"fascinating\" or \"charming\" to more gauche mouth noises and clicks, but the intent was obvious. I didn't recognize or remember any of the names so far. Nor had I seen anyone resembling the picture Tessa sent me. \n\nI was going with the flow and trying to work may way back around to the OKS guy when another fellow approached, and his name jarred my memory. \"Richard Paul\", he said, presumably to me but his somewhat glassy eyes were glued to Summer. His companion stunned me for a moment, as she was at least six foot tall, and very muscular. Big breasts, but I found myself looking suspiciously for an Adam's apple. Nope.\n\nWake up Robbie. Richard Paul. My father always said I should take advantage of my opportunities. \"Fascinated to meet you. I'm Robbie Roberts. Could we talk a little more, perhaps just at the end of the evening?\"\n\nHis eyebrows rose slightly, but his eyes were still resolutely fixed on Summer. \"Yes, of course.\"\n\nHe walked away with a twinkle in his eye. Summer kicked me.\n\nWe had almost made our way all around the room when a tall fellow in an awful suit made a beeline for Summer. He spoke loudly to his companion. \"Oh, don't you see. Marvelous form. Amazon warrior, don't you know!\"\n\nSuddenly the picture Tessa had sent me fell into place. I glanced at Summer and she was staring at his female companion. She somehow looked familiar to me, too, but I couldn't place her. She had on a big grey mask much larger than any of the other women, and dark hair and eyes, but marvelous breasts, don't you know. \n\n\"Robbie Roberts. Please to meet you\", I intoned. She did a little double take under that mask, then focused on Summer. \n\n\"Richard Smithson!\" he boomed. \"Let's stay here together and 'talk' a bit shall we. The first round is almost over.\" He was tall and thin, with large hands and a face some would call ruggedly handsome, but to me it just said he had a hell of time with teenage acne.\n\nSummer squeezed my arm like crazy, but her Suzie said she was excited. I studied the man's companion more closely. She did look hot, and her nipples got all crinkly when he announced his plan.\n\nNear the center of the room, someone rang a little silver bell. Smithson chuckled. \"Don't you see, I have this all timed by now!\" He took Summer by the arm, then asked me, \"May I, old chap?\" I saw Summer tense. \n\n\"Of course, old man, of course. May I?\" I smiled and took his companion by the arm in a similar fashion and steered her to the other side of the table nearest us. I sat and pulled her into my lap.\n\nSmithson sat down across the table and patted the seat next to him, indicating to Summer that she should sit in it. She did, slowly. He began to touch Summer's shoulders, and she shivered, but her Suzie said it was hot. I was reminded of Suzanne saying that sometimes what the pussy wants overrides what the mind wants. Summer closed her eyes, and Smithson's hand trended down to her nipples. He was gentle and playful, and her nipples showed a definite response.\n\nThe woman in my lap began to squirm a bit. Was she jealous? I focused on her, and her Suzie. It betrayed both frustration and excitement, without revealing the cause. I used the back of hand to gently touch all around her breast without touching aureole or nipple. Her Suzie grew in anticipation. On a whim, I leaned over closer to her and gently blew on her left nipple, the one closest to me. It crinkled and pulsed. Absolutely wonderful. \n\nInvoluntarily, she turned her other breast toward me. This was fun. I reached up and took her nipple gently between my fingers and twirled slowly. Her Suzie ignited. \n\nThe little silver bell tinkled again. Smithson rose slowly, looking longingly at Summer. \"Hope to see you in four weeks. Don't you know? Fellatio night! My favorite night of year, don't you see?\"\n\nSummer's Suzie did a backflip. Smithson's pet took his offered hand and they moved along clockwise to meet another couple.\n\nSummer leaned in and hissed in my ear, \"Do you know who that woman was?\"\n\n\"No, but we can figure it out later.\" \n\nShe started to speak again, but a tall and very stately looking grey haired gentlemen and his sub smiled and introduced himself, and the little ritual began again. We met four other couples in succession, and Summer's Suzie sizzled louder for each one. She was building up quite a head of steam. I was in a mystic mammalian fog of my own. This was a marvelous club, wasn't it?\n\nFinally, the bell rang twice, and the butler looking guy announced, \"Final round!\"\n\nI looked up to see Richard Paul approaching. His companion was a tall redhead with lots of freckles and marvelous breasts. Her nostrils were flared, and she was staring at Summer. He motioned to a nearby table and we all sat down. \n\n\"While we speak, Roberts, I'd like to ask for a little special leeway, as it were.\"\n\nMy eyebrows rose in a silent question. Summer drew a big breath and held it.\n\n\"I want my pet to fondle yours, and we can enjoy watching them while you tell me what you wanted to talk about.\"\n\nSummer jumped, and so did her Suzie signal level. I was enjoying it.\n\n\"Capital idea, old boy. Shake things up a bit, eh? Proceed!\"\n\nHis sub moved forward in an almost predatory way and sat in the chair next to Summer, took one of her hands, and kissed it gently, never taking her eyes from her. I heard my pulse pounding, or was that Summer's? \n\n\"So, Roberts, what did you want to talk about?\"\n\nI tried to pull myself together, as much as I could. I was feeling the voyeuristic excitement of the moment. Maybe this really is my kind of club. But back to business.\n\n\"It's about your man Digby. He seems to think he is the MP, not you. And perhaps he is Prime Minister, too?\"\n\nPaul smirked, then looked like he had an indigestion. \"Is this about that Chunnel II business?\"\n\n\"Yes. He has already reached conclusions without even consulting the other team members. Very wrong conclusions, I might add.\"\n\nPaul looked uncomfortable again. \"I put him on that thinking it would just be another forgotten white paper. But now all sorts of people are talking about it. What's wrong with his position?\"\n\n\"He is total ignoring reality, especially when it comes to cost estimates. Are you familiar with seawall construction?\"\n\nHe barked. \"Bloody right. I'm from Lynmouth. People still tell stories about the great flood and spin conspiracy theories about it.\"\n\n\"Well then you know that if building a seawall to withstand a Category 3 storm costs X, then one rated to Category 4 costs 10X, and Category 5 costs 100X?\"\n\n\"Yes, but what has that to do with the Chunnel?\"\n\n\"Building a tunnel for rail system we currently use costs X but building one for a hyperloop will cost 100X!\"\n\n\"Oh my!\" I could see the gears turning in his head. Political calculations, I assumed, not numerical ones. \"But, Roberts, I have to appear progressive and in favor of building the economy.\"\n\nOHH's words about practical compromise and saving face rattled around my brain for a moment. I wished I could just continue thinking only comforting mammalian titty thoughts with my hind brain. But MP Paul came up with an idea first.\n\n\"What about making one for the current system that is 'Hyper-Loop ready' for a later refit?\"\n\nI was taken aback. \"More like 10X, but where will that funding come from?\"\n\nHe smiled. \"I think I have an idea about that, and maybe getting some jobs for my people in Lynmouth, to boot. I'll work to raise the money if you will give us an estimate that supports that plan.\"\n\nI was skiing way out over my boots, here, but what the hell? \"OK, but make sure Digby accepts our engineering estimates as gospel, so we present a united front for your funding campaign.\"\n\nHe offered his hand. \"Done! Now we just have about three more minutes to watch the wonderful show taking place at our table.\"\n\nI looked up to see the lovely redhead now had both of Summer's nipples well in hand and was twisting them enthusiastically betwixt thumb and forefinger. Summer was staring right at me with eyes as big as new moons. But her eyes somehow got even bigger when the redhead leaned her elbows on the table and took one of Summer's now rock-hard nipples in her mouth.\n\nPaul groaned. \"Oh, my!\" So, too, had I.\n\nSummer's Suzie signal now had a pulse of its own. The redhead disengaged from Summer, put her head up, and held one of her breasts up toward Summer. \n\n\"Only two minutes left! Kiss it, you slut!\"\n\nSummer's Suzie exploded. This was both darkly and desperately dirty, and it went right to her spinal column, seemingly firing every nerve below her waist. She glanced doe-eyed at me for just a moment, and then leaned forward a little and stuck her tongue out tentatively. Soon she was anything but tentative. I was reminded of Lou Baby diving in on Suzanne's fragrant snatch. \n\nThe redhead closed her eyes and ran her tongue all around her lips as Summer worked on her. Richard Paul and I just stared in wonder. Then the little silver bell tinkled again, and the spell was broken. \n\nPaul cleared his throat. \"Strapping good evening, you two. Let's do the final round together next month too, eh?\" Summer gulped loudly. The redhead winked at me. \n\nThe crowd started back through the check station and women began putting their tops back on. There were a lot of pheromones still hanging in the air. Should make for some interesting times later this evening, with either the pet or the wife, or perhaps both? We queued up and were almost last in line. Summer ducked her head as we were just behind the OKS board member she had pointed out. She donned her blouse and jacket and held her head high as we walked out the narrow little unmarked door.\n\nNo Bentley this time, but a brief flash of headlights led me to spot Tessa behind the wheel of an Audi. I took Summer by the arm and steered her to the passenger door. \"Different car to go home in, my pet.\"\n\n\"I could get used to that Bentley!\" She saw Tessa and realized she was an unusual choice for a hired driver. \"Hello?\"\n\nTessa smiled. \"Good evening, Miss Mawn. I assume you had a stimulating time?\"\n\nSummer giggled involuntarily. \"You might say that.\" She smiled broadly but said nothing else.\n\nTessa looked pleased. \"Points for discretion, my dear. I am sorry to interrupt your evening.\"\n\nI jumped in to explain. \"Summer, this is Tessa, someone I met in Austin last fall. She is the one who got me an invitation to tonight's party. Oh, and she arranged dinner for us, too. \n\n\"Thanks so much, Tessa. I have been dying to go to Spring for years!\"\n\n\"Glad to help, but for now Robbie and I have some work to do, to identify one of your playmates for this evening.\"\n\nSummer looked curious. \"Which one?\"\n\n\"Richard Smithson's pet don't' you know?\" I said.\n\n\"Actually, I do know her. Not well, but enough to recognize her even with that big mask on.\"\n\nTessa startled and pulled the car over, parked at the curb and swiveled to look Summer in the eyes. \"You have my full attention, Miss Mawn. Who was it?\"\n\nSummer smiled, suddenly she was that hot girl that knew something we didn't. \"Why, it was Christine Davies! Some call her the Herts Hussy. You may have seen her famous car park video. It was quite the hit at my fire station. She was engaged to be married to some society sod, but her video bolloxed that, and now she must have become Smithson's mistress.\"\n\nTessa snapped her fingers. \"So, it wasn't Abelard who rescued her after all! It was Smithson.\"\n\nI suddenly realized why she looked familiar. I couldn't blame her for doing anything to escape marriage to Chasemore Gardiner Betts. \n\nTessa was almost talking to herself. \"So that explains why...\" She suddenly stopped. \"Well, thank you very much, Miss Mawn. I am happy to provide dinner and a show for such a perceptive young couple. I'll drive you two on home now.\"\n\nOnce we were cruising on the M2, Tessa got talkative again. \"So, Robbie, did you meet anyone else interesting?\"\n\nSummer's Suzie answered for her, spiking with memories. I tried to be cool about it.\n\n\"Well, I did get to speak with Richard Paul. I think it was constructive.\"\n\nTessa smiled. \"I think you two can find mutual advantage. Call me if you need help.\"\n\n\"Thanks, Tessa.\"\n\nSummer piped up. \"I am curious as to what you do for a living, Tessa.\"\n\n\"Oh, this and that. I do some consulting for the government and sometimes write freelance stories for the Tattler.\"\n\n\"Really? I love that magazine: a dirty pleasure. I am not proud of it, but I never miss it.\"\n\n\"Sometimes dirty pleasures are the best. I was in Austin covering the Formula One race parties when I met Robbie.\"\n\nTessa then asked Summer about her business, and they discussed planning society events and catering all the way back. Tessa was knowledgeable and very skilled, asking lots of leading questions and getting Summer to talk, but I imagine Tessa had already researched things quite thoroughly. She probably had access to Summer's Inland Revenue filings. \n\nWithout directions, Tessa drove directly to Summer's DIY fixer upper house. Mallory bounded out and circled the car. She was in her second puppyhood, I guess. She put her paws up on the driver's side window and stared at Tessa, eye to eye.\n\n\"My, she's big for a female, and very muscular. I think your household is safe from intruders.\"\n\n\"Oh, you have no idea!\" Summer opined, but I suspect Tessa did. \n\nWe waved goodbye and walked in. Summer clicked on the lights, then turned them off again. She glued herself to me, put both her hands on my buttocks, and kissed me roughly. Her Suzie wormed its way into my spine. She was wild.\n\n\"What a wet little slut you are! Parading yourself in front of all those strange men, letting them grope you, and then carrying on with another woman, in front of an audience, no less.\"\n\nSummer smiled again, a truly devilish grin, and dropped to her knees. \"I suppose I should begin practice for the fellatio night event, eh?\" She proceeded to own my cock, and I was happy to surrender it.\n\n+++++++++++++++++++\n\nI was sleepy at work Friday. I didn't mention anything about my Thursday night adventure to Drummond or OHH while we prepped for our first meeting with Digby and the junior grade politicians. I would wait and see how they behave. \n\nAfter lunch, Drummond couldn't stand it anymore. He got a funny look on his face and pulled out a box from his desk, \"Well Roberts, here's a bit of kit for our meeting with Digby!\"\n\nWith a flourish, he produced a dog collar with \"Heel, Robbie\" engraved on it. I would find a way to make him pay.\n\n+++++++++++++++++++\n\nCarmencita insisted they go out to dinner to celebrate Alex's new job. He didn't tell her who he was going to work for, or where, but she would soon learn he had a spot in the West Wing. It was broom closet sized, but location was everything. It turned out she already knew to the penny what the salary range for his new job grade was. She was already making plans to spend some of that new paycheck, starting tonight with a little restaurant on 8th Street NE that served Croatian food. It was unbelievable. They had some sort of chocolate mousse dessert with who knows what else mixed into it that put anything he had ever eaten in Croatia to shame. He resolved to let Carmencita pick the restaurants from now on. \n\nCarmencita said she was doing more and more rehabs now, but couldn't talk about them, as to do so might reveal mission timing and injuries that could lead to identifying certain personnel. Loose lips sink ships, etc. Alex said he understood, and Dwight would have too. She looked at him funny and then laughed. At least she knew he was never really USDA, prime or otherwise. He was looking forward to getting her home. She was too.\n\n+++++++++++++++++++\n\nOn July 2nd, I made my way to LHR to catch my flight back to Texas for Jay Kincaid and Millie's wedding. My dad's frequent flyer miles could be used on American for the early direct flight to DFW, business class, which was pretty damn nice. There were no such reward seats open on the late morning flight, where First Class seats sold for five figures, if they were available at all. Talk about price pressure!\n\nI was in a window seat on the right-hand side of the aircraft, with plenty of room. With a ten-hour flight ahead of me, I had stayed up late with Summer, who managed to keep me up in more ways than one until she put me on the train for Heathrow. After establishing that Elizabeth Ashcroft Knowles was regrettably not on the plane, I declined the offered drink, accepted the breakfast, and then settled in for a nap. With the time zone changes and the forecasted headwinds, we should land in Dallas between 1 and 2 in the afternoon local time. I put in a solid eight hours and was awakened by my growling stomach. \n\nThe landing was normal, and so was the weather in Dallas - hot. My illustrious father, Ronnie Roberts himself was waiting when I emerged from a very perfunctory customs check, and we schlepped my single suitcase to his dedicated airport beater car. \n\n\"It looks as though you are going to the wedding of the year, Robbie. Old Cactus Jake is really putting on the dog. There are newsies from all over the country already in Dallas talking about it. The ranch is decked out fancier than the state fair, and the guest list looks like everyone that old Jake ever knew. There must be at least 1,000 people going!\"\n\nI knew that most of Jay's PIG fraternity brothers, and lots of UDP and ZZZ guys were going, along with many of Millie's Bi Phi girls and friends from other houses. Mei Ling was the Maid of Honor, and Theo Cadwallader was the politically loaded choice for Best Man. Lara thought I should be best man, but I understood my relatively sensitive position vis-\u00e0-vis the bride. I was a groomsman, the only non-PIG one. There were ushers galore, and Millie's cute little cousin was the flower girl. \n\n\"Something political is definitely going on, Robbie. Even Cactus Jake doesn't drop this kind of cash without a plan. It looks like half of the Texas House and Senate are invited, and the entire Congressional delegation of Texas and all the neighboring states will be there, plus the Speaker. I haven't seen an assemblage like this since LBJ's funeral!\" \n\nI didn't mention Millie's sexual fascination with politicians. This crew should have her all steamed up for the honeymoon. Jay said he had a plan to 'keep MY filly in MY pasture' and I wished him luck.\n\nMy mother had stepped up to the plate and had the real live tailor at Nordie's fix me up with a brand-new tux, which was hanging in my closet when we got home. Grandma had a plate of fudge out to tide me over until dinner. It was good to be back. Lara was coming in after supper, driving her baby beamer up from Austin, and Nora was coming from Boston early in the morning at DFW. I would see everyone at the rehearsal dinner tomorrow night. \n\nEldee rubbed against my knee and sat down on the floor next to me, slowly. She was really showing her age these days. Grandma made almost the same motions and took a spot on the couch next to me. We were alone while my mom finished up the dinner prep. ",
        "Grandma touched my knee. \"So, if my memory is correct, you and Lara have both slept with the bride?\"\n\n\"Yes ma'am.\"\n\n\"Does Jay Kincaid know about it?\"\n\n\"Yes ma'am. I also told him everything I learned about Millie's special needs.\"\n\n\"Can he handle that?\"\n\n\"Millie says he has so far. He studies on it. He says he has a plan.\"\n\n\"Okay then. What's the deal with Suzanne?\"\n\n\"Her first boyfriend woke up from his coma and she went back to him. I'm out.\"\n\n\"Sort of noble, but also sad for you. Lara and Nora?\"\n\n\"They will both be away at school outside of Austin for a while, but I think we will all end up together.\"\n\n\"Okay then. I think supper is ready.\"\n\nIt was nice being back home. We sat around the table and enjoyed dinner. Then the jet lag hit me like a ton of bricks. They say it is worse when you go from east to west, and I can't handle the supposedly prophylactic 18 hour fast before arrival in the new time zone, nor could I have stayed awake on my flight and only slept at night time at my destination. I was determined to stay awake until Lara arrived, but my body conspired against me.\n\nA text arrived from Lara. She was about to leave her building and head north on I35. My mom noticed my droopy eyes. \"Go on up and get some sleep, Robbie. We'll greet Lara when she arrives and send her up to wake you.\"\n\nEldee pawed at my leg and then waited for me at the bottom of the stairs. I followed her up, spent 30 seconds looking around my old room, and then was fast asleep, clothes and all. I must have been dreaming. Someone began to gently caress my nipples through my shirt. Lightly, tentatively, like a butterfly was landing on them. My top shirt button was undone, and a warm hand slipped into my shirt and touched my chest. Warm lips kissed my neck. Then another button came undone.\n\nSuddenly warm and wonderful soft lips met mine, and wonderful perfume tickled my nostrils. Then a scrumptious Suzie signaled excitement and acceptance. Lara was here! She rolled over on top of me and her blond hair surrounded me like a silk tent, framing her sparkling eyes as she smiled down at me. My heartbeat accelerated, and my Suzie receiver locked in to Lara, just like I had with Nora. It was a phase locked loop and I could count every cycle of my emotions and hers. \n\nMy arms circled her waist and tightened around her. I never wanted to let her go. I realized that I didn't have to. Gratitude and wonder filled me. Somehow our clothes disappeared, and our bodies merged into one. It was slow and powerful, deep and strong, and incredibly fulfilling. I entered her slowly. We fit perfectly. Stronger and faster we climbed, and she met me thrust for thrust. Deeper and more profound. I never wanted it to end, but I also wanted to fill her up. No egg, damn it. My damn burst. Lara cried out, then sobbed. \n\n\"I love you Robbie.\"\n\n+++++++++++++++++++\n\nThe rehearsal dinner was at the Four Seasons at Las Colinas, and it probably cost more than most big weddings that were held there. Millie's and Jay's fathers, both long term rivals, agreed to split everything, so neither could claim to have outspent the other. But they both wanted things to be so spectacular that people would wonder how much they really spent. I sure wondered how much it all cost, and what else that could have been spent on. Everyone seemed to know their parts, but the happy couple wouldn't reveal the content of their vows beforehand. That sort of piqued my interest. What kind of vows would I want to make to Lara and Nora? What were the legal requirements? Lara would know, or perhaps was re-defining them.\n\nI was pleased to be seated between my two girls, despite the obvious sideways glances from all the people who thought I was way out of my lane by being with either girl, much less the two of them. Mei Ling looked radiant sitting next to Cisco and was radiating some serious Suzie for him and him alone. I guess her wild oats and been sown and harvested, for memories only. When Oiler and Gretchen danced together, he being 6'8\" and she 6' 3\", remarks were made about basketball and volleyball coaches and pre-natal recruiting. \n\nWhen the rehearsal dinner broke up about 10 PM, Mei Ling made a final toast. She stood up and smiled that enigmatic smile that I was beginning to recognize - she was a hot woman that knew something most of us did not. \"Millie and Jay are not having bachelorette or bachelor parties tonight, or any other night. They don't need the excess excitement, nor the excess publicity. You will see why tomorrow.\"\n\nWe caravanned down to the ranch early in the morning, for an early afternoon wedding. The big iron gates, festooned with antlers, cameras, and according to Big Un a few Claymores in case of a frontal attack, seemed to hold off the hordes of TV trucks parked just outside the ranch fence line. The crowd was incredible. The guards checked our invitation and then directed us to an assigned numbered parking place. Most guests were shuttled from parking lots outside the fence in big golf carts. \n\nThere was a monster reception line, with both sets of parents holding court and carrying on an extended conversation with each and every person that came through. It was going to take forever to get everyone seated. But the bars were all open and doing a land office business, well before noon. It had been several hours since breakfast, so I looked around for appetizers. Jackpot! Tables upon tables, carefully arranged parallel to the queues for the bar stations.\n\nIced shrimp the size of small chickens surrounding by glass boats filled with gallons of aggressive horseradish cocktail sauce. Don't mind if I do. Big crispy fried tortillas displayed next to small lakes of guacamole, queso, habanero salsa, and pico de gallo. I'll have to help them out with that. Killer handmade tamales still steaming in the shucks. I'll have to try those. Big bouncing chunks of brisket on a stick with three kinds of barbecue sauce flanking. Can't be rude.\n\nCold Perrier water in ice buckets. Cleanse the pallet.\n\nGiant crab cakes on fresh baked melba toast with remoulade. Can't offend our hosts. Bite sized Rueben sandwiches with Russian dressing dip. Skewers of watermelon alternating with globs of goat cheese and interspersed paper-thin slices of jalape\u00f1o. Unique. Foie Gras on Black Pepper Macaroons. Have to try that. Caviar and Cr\u00e8me Fraiche. So decadent. Getting full, but... \n\nIt was some time before I even checked the progress of the reception line. Lara and Nora emerged from the mysterious bride preparation chamber and walked purposefully towards me. Looks like it's almost showtime."
    ],
    "authorname": "conanthe",
    "tags": [
        "sex club",
        "wedding",
        "frotting",
        "anal",
        "tibbing",
        "oral",
        "english",
        "blockchain",
        "fraternity",
        "waifu"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-39"
}