{
    "title": "Three Square Meals Ch. 084",
    "pages": [
        "The Raptor raced through the city, weaving through the skyscrapers with what a casual observer might consider to be reckless speed. Alyssa rolled the gunship to the right around a huge well-lit arch, then slammed back the throttle, retro-thrusters on the front of the Raptor flaring in an orange blaze to slow its speed. The sparkling white ship dropped towards the ground, another orange burst at the last moment bringing them to a perfectly controlled stop on the tarmac.\n\nJohn was running across the loading ramp before it had even lowered half-way and he jumped off the end before dashing over to Jade and the Maliri girls. The Nymph had been too tired to shift again and was lying in cheetah-form between the two armoured women, her green feline head resting on Irillith's thigh. She looked much paler than normal, the viridian lines that contoured her muscles were faded and barely visible. Looking up at him with heavy eyes she let out a weary chirrup.\n\nCrouching down beside the exhausted Nymph, John stroked her furry head with his left hand, while activating the emergency-medevac function on the twins' Paragon armour with the other. A flash of green on his belt drew Jade's attention and she spotted the special transmitter that she normally kept on the Raptor. Dana knew her aversion to wearing armour, so she'd given it to the Nymph in case she needed to help with evacuations. The transmitter chimed as it linked with the twins' armour, the suits locking up and rising from the ground.\n\n\"I've got you now,\" John said softly, before scooping Jade into his arms.\n\nHe glanced around and saw the brutal evidence of the ferocity of the fight. There was a scattering of ripped and torn cybernetic limbs, along with a couple of hideously mangled assassin torsos, one of which was embedded head-first in the base of the nearby building. Some way down the road, directly underneath the Invictus that hovered protectively overhead, an enormous trench had been gouged into the ground. It was still glowing amber from the intense blast that had vaporised all in its path.\n\n*Sakura's got Dana and Rachel. We'll meet her at the top of the building,* Alyssa informed him, her voice taut with barely controlled emotion. While her initial reaction had been shock and horror, her fear had quickly been burned away by steadily mounting fury.\n\nCarrying Jade while Tashana and Irillith floated behind him, John turned and started striding briskly towards the Raptor. A police officer tentatively approached, his eyes darting to the golden lion on John's unbuttoned white jacket. \"Sir? I'm sorry to ask, but we need to take statements... these women were witnesses.\"\n\nJohn shook his head, giving the man a grim look. \"Sorry, we haven't got time for that.\"\n\n\"What about the men who did this?\" the police officer asked, glancing over his shoulder at the blackened nightclub, the wounded and the dead already being carried outside. \"We can't let them get away with it.\"\n\n\"Leave them to me,\" John replied, clenching his jaw and briefly making eye contact with the man.\n\nThe police officer quailed before that look, his eyes widening as he nodded and backed away.\n\nRe-entering the Raptor, John placed Jade gently on the floor, watching as she closed her eyes and finally relaxed, shimmering in a green haze as she reverted to her Nymph shape. Irillith and Tashana were floating beside him, so he guided their armoured forms down to the deck. *Go, we're aboard,* he said to Alyssa, but the gunship was already lifting off.\n\nHe turned to look out through the still-open loading ramp, the gathered crowd of shocked onlookers disappearing from view as the Raptor ascended skyward. Rising parallel to the nightclub, the gunship swept past the blackened hole in its side, revealing a glimpse of the epicentre of the blast. John's eyes narrowed as he saw the extent of the fire-scorched devastation. White clouds of fog had started drifting out into the night, their icy chill having extinguished any remaining flames. Alyssa swung the gunship around, smoothly circling the Enigma building until the landing platforms came into view. Sakura was waiting for them there, carrying Dana and Rachel over her shoulders.\n\nJohn walked out to meet her as the gunship touched down, gently lifting Rachel from Sakura's shoulder and carrying her aboard. The loading ramp started to close the moment they had cleared the top, Alyssa taking them up to the sparkling white battlecruiser floating above. The Invictus was resplendent as it reflected the city lights, shining like a heaven-sent guardian angel.\n\nSakura knelt down and laid Dana on the floor next to the other girls. She watched John as he did the same with Rachel and when he straightened, she said in a small, dejected voice, \"I'm sorry... I was supposed to protect them. I tried, but-\"\n\nHe turned and quickly wrapped his arms around her. \"Shh... It wasn't your fault. From everything that Alyssa's told me, you were incredible.\" Stroking her back soothingly, he added, \"Let's get back to the ship, regroup, and focus on rescuing Calara. We'll talk more when we get the chance, okay?\"\n\nShe smiled at him gratefully and nodded.\n\nJohn sat back and glanced down at their bedraggled group. One girl kidnapped, two drugged, two unconscious, two exhausted, and the last a smouldering powder keg of rage. What a goddamn mess. \n\nHe knew exactly how Alyssa felt.\n\n***\n\nFaye was waiting for them when the Raptor touched down in the Secondary Hangar, flanked by a couple of maintenance robots. Her translucent wings fluttered in tiny stop-start flurries, conveying her current state of anxiety. \n\n\"Is everyone alright?!\" she exclaimed, her face tense with worry. \"I brought a couple of the boys to help out!\"\n\n\"Calara's been taken,\" John said, meeting the sprite's shocked gaze as he scooped up the sleeping Nymph. He glanced at Sakura and handed her the medevac transmitter. \"Can you take the twins to Medical? We need to give them a full body scan; I don't want any nasty surprises.\"\n\nSakura nodded obediently and reactivated the evac-mode on their armour. The Paragon suits locked the twins into position again, before levitating them into the air in a silent anti-gravity field. \n\nTashana had started to come around and she let out a faint groan as she rose. \"Irillith...\" she murmured faintly a second later.\n\n\"She's right here. We'll get you both checked out in a minute, honey,\" John said, his voice calm and soothing. \"Just rest.\"\n\nAs Tashana let out a soft sigh of relief, Alyssa marched into the loading bay. Jehanna floated peacefully behind her, still fast asleep and wrapped in a sheet, the material tenting over her hugely rounded stomach. The look of fury in Alyssa's eyes softened for a moment when she glanced at Dana and Rachel, but the seething blonde clenched her teeth and snapped her fingers, lifting the two girls off the ground in a supportive telekinetic embrace. \n\nShe glanced at John as she stormed past, growling, \"Come on. We need to find those fuckers so we can start with the killing...\"\n\nFaye watched her stride past with wide eyes, before she shot John an anxious glance. \"I know it's a bad time, but can you come up to the Bridge, please? Terran Federation Flight Control is very cross with me at the moment.\"\n\n\"Of course,\" John replied, starting to follow after Alyssa. \"Let me just drop Jade off in the bedroom; the poor girl's shattered.\"\n\nHe suddenly felt an insistent tugging on his arms and when he looked up in surprise, Alyssa's bright blue eyes were staring right at him. \"I've got her, I'm already going that way.\"\n\nEasing his grip on the Nymph, she levitated out of his arms, supported by a host of invisible telekinetic hands that guided her over to Alyssa. Walking at a brisk pace through the double-doors into the corridor beyond, John saw the ship's complement of cleaning bots frenziedly scrubbing the floor. The deck was marred with all sorts of black, oily stains, making him wonder what on Terra could have happened aboard the Invictus while they were away. His eyes drifted upwards to something embedded in the ceiling and he froze.\n\nThere were two black ninjatos plunged into the titanium right up to their hilts, instantly clearing up any doubts as to the source of those stains on the floor.\n\n\"Faye...?\" he asked, walking backwards to the grav-tube, his eyes fixed on the sinister swords. \"Care to elaborate?\"\n\n\"A team of five cyborg assassins infiltrated the Invictus,\" she explained with a bright smile. \"I didn't think you'd appreciate them stealing the ship, so I neutralised them!\"\n\nJohn looked at her in shock. \"Five?! You managed to kill the entire team?\"\n\nShaking her head, Faye replied. \"I could have, but one of them is still alive and in the brig!\"\n\nSharing an alarmed glance with Sakura, John replied urgently, \"They're very dangerous, Faye! I'm not sure the Brig will be secure enough to hold him.\"\n\nHesitating for a second, the purple sprite gave him a shifty look. \"Don't worry, he won't be going anywhere. I would've just disposed of him, but I wasn't sure if you wanted to question him first or hand him over to Terran Federation Law Enforcement.\"\n\n\"I think you better show me. We'll head to the Brig after we've tracked down Calara,\" he said, stepping into the blue anti-grav field.\n\nThe group rode up silently in the grav-tube together, each of them coming to terms with recent events. Sakura peeled off first on Deck Seven with the Maliri twins, then Alyssa led her procession of sleeping girls out onto Deck Two. John watched her stride away with a worried frown, until she disappeared from sight as he floated up towards the Command Deck. It was only John left when he finally stepped out onto the Bridge, but Faye was there waiting for him up on the Command Podium. She stood at his side as he sat down on the Command Chair.\n\n\"I'll put you through,\" the purple sprite said quietly, opening a channel to Terra Flight Control. \n\nA stern middle-aged man appeared in the holographic viewscreen, a Commander by the rank insignia on his uniform. \"How dare you cut me off like that! Have you any idea how many laws you've broken?! Firing your weapons in a-\"\n\n\"This is Vice Admiral Blake,\" John said curtly, in no mood to deal with the man's indignant outburst. \"I authorised all of it. Now, I want a complete planetary lockdown. No ships to leave any starport on Terra for the next... three hours.\"\n\nThe Flight Control Commander's jaw dropped open in shock and he babbled incoherently for a moment before blurting out, \"That's impossible! There's no way I can justify that! The chaos that would-\"\n\n\"Alright, who do you need to sign off on it, Commander?\" John interrupted in an even tone, making it clear that he wasn't intending to take no for an answer. \"One of my crew's just been kidnapped. Either you shut down flights out of Terra, or I start disabling every ship that tries to leave the system until I find her.\"\n\nLooking aghast, the Flight Controller paused for a second before replying, \"Admiral Devereux has direct command over the Homeworld Sector, but I don't think-\"\n\n\"Track her down and ask,\" John said curtly, cutting him off again. \"If she says 'no', then put me through to her.\"\n\nGiving him a shaky salute, the Terran Commander nodded. \"Putting you on hold, Vice Admiral.\"\n\nAs the man's face disappeared, John glanced at Faye, who was nervously biting her nail as she watched him. He studied her anxious expression for a moment, then asked, \"What is it, Faye? You look like you've got something on your mind; something other than Calara and these assassins.\"\n\n\"I... I wanted to talk to you about something I did. I mean... I didn't do it, but I thought about it. A lot,\" Faye blurted out in a rush, her reply leaving John completely mystified.\n\n\"Is it urgent?\" he asked, giving her a pained expression. \"I know I promised you that my door's always open, but it's a really bad time right now.\" \n\nFaye slowly shook her head. \"No, it can wait.\"\n\nJohn brushed his fingers against her purple holographic cheek, being careful not to break the image. \"I'm sorry. I promise when I've got some time, I'll listen to anything you say with an open mind, but with Calara missing... you understand?\"\n\n\"I do, perfectly!\" she replied, giving him a lovely smile. \"We can talk about it later, that's quite alright!\"\n\n\"Thanks, honey,\" John replied, giving her a grateful look. He blinked as he suddenly remembered the devastation he'd seen outside the nightclub. Raising an eyebrow, he added, \"I saw your handiwork in the city... what happened?\"\n\nFaye carefully described the attack on the Invictus and how she'd raced towards Terra's surface to save the girls. John shook his head in amazement as she told him how she'd blasted three of the ninjas, using the ship's Beam Lasers to obliterate them the moment Jade had sprinted clear.\n\n\"Thank you for saving her,\" he said, his voice filled with gratitude. \"Jade was exhausted when I found her. I don't think she could've lasted much longer.\"\n\n\"I love all of you,\" Faye said in a whisper, gazing into his eyes. \"I'd do anything to keep you safe...\"\n\nBefore John could reply, the viewscreen crackled to life again, the fraught Flight Control officer looking worried. \"We can't get hold of Admiral Devereux, Sir! She isn't answering any of our attempts to raise her on her private comms.\"\n\nJohn ground his teeth together in anger. \"There were dozens of Admirals on Terra for the Award Ceremony! You must be able to find someone with authority to order a temporary planetary blockade! What about Fleet Admiral Buckingham? Admiral Harris?\"\n\n\"We'll keep trying, Sir,\" the Commander replied, giving him a helpless shrug.\n\n\"Call me the minute you can lock it down!\" John snapped, ending the call.\n\nThe click of heels alerted him to Alyssa's presence on the Bridge. \"Fucking useless,\" she snarled, bristling with anger as she stalked over to the Command Podium. \"Doesn't that dickhead realise what's at stake?!\"\n\nJohn rose from his chair to meet the furious girl, reaching out to take her hands in his. \"We'll get her back,\" he said quietly, staring into her eyes. \"I understand you're furious, but we've got to keep it together to track her down.\"\n\nThe blazing intensity of her cerulean gaze lessened for a moment, and she said in a tortured whisper, \"I can't let go of my anger... I'd fall apart...\"\n\n\"It's Calara; I understand what you're going through,\" he said, stroking her arm supportively. Glancing at the holographic System Map behind him, he continued, \"We need to track all the ships leaving Terra. The kidnappers must be heading for Mikaboshi's base and my gut tells me it's not here. We have to figure out which system they might be taking her to...\"\n\n\"I've already started monitoring all system traffic!\" Faye declared. \"I'll keep following every ship for as long as they're within the radius of our long-range sensors.\"\n\nAlyssa's expression turned bleak, that hard edge reappearing in her eyes. John spotted movement over her shoulder and Sakura stepped out onto the Bridge, nodding to him in acknowledgement as they made eye contact.\n\n\"I've run Tashana and Irillith through the medi-scanner,\" the Asian girl said, as she strode up the steps to join them. \"They're both suffering from concussions from the blast, but the full-body scan didn't pick up anything life-threatening.\"\n\n*Oh, thank goodness for that!* Edraele gasped and John could immediately feel her relaxing. She'd been fraught with worry ever since she'd heard her daughters had been caught in an explosion.\n\n*They'll be okay, I'll take care of them,* John told her, his voice soothing.\n\n\"We need everyone back in action for this,\" Alyssa said, giving John a pointed look. \"If you top them all up, you can fully heal Irillith and Tashana, and burn away the drugs that knocked out Dana and Rachel.\"\n\nJohn nodded, then grimaced as he replied, \"I need a little more recovery time first, we were only with Jehanna an hour ago. Let's try and figure out what we can between the four of us until then.\" Turning his Command Chair to look at Alyssa, Sakura, and Faye, he continued, \"What do we know so far about the location of Mikaboshi's base?\"\n\n*May I interject a moment, John?* Edraele asked politely. *I might have some useful information.*\n\n*Of course, go ahead,* he replied, glancing at Alyssa who could also hear everything the Maliri Matriarch was saying.\n\nAfter a moment's pause, Edraele said, *I've taken all the cybernetics dealers operating out of Lahlenor into custody and had a little chat with them. They proved most cooperative and we tracked down the serial number on the cybernetic brain that you removed from Sakura. It was sold to a Peter Koeman, who I believe is registered as a precious stones dealer in the Theta-Serpentis system.*\n\n\"Peter Koeman?! That's the guy who tried to contact us before we went on holiday to Oceanus!\" Alyssa blurted out, looking at John in shock. \"He was working for Mikaboshi!\"\n\n\"And was probably setting us up for a trap,\" John replied, his voice grim. \"He wanted us to go to visit him didn't he?\"\n\nAlyssa nodded, her eyes blazing with anger. \"We should definitely pay him a visit later.\"\n\nSakura was looking at them both in confusion. \"Would you mind giving me a recap? This all happened before I joined you.\"\n\nJohn patiently explained how they'd been contacted by a merchant, that wished to give them a box of gems in gratitude for supposedly saving his sister's life from the Kirrix. He then described the merchant's confusion when they'd turned down his offer and suggested he donate them to orphanages instead.\n\nSakura couldn't help smiling at that. \"That sounds like classic bait for a trap to me. Your rejection must have infuriated Mikaboshi.\" \n\n\"How long has Mikaboshi been hunting us?\" John murmured, looking at the girls in amazement. \"That was nearly three months ago!\"\n\nAlyssa glanced at Sakura and replied, \"I thought Shinatobe's attack on us was the first attempt, but it looks like he's been after us a lot longer.\"\n\n\"Peter Koeman is dead!\" Faye squeaked, luminous eyes wide as she displayed a news article above John's Command Console. \"When you mentioned his name, I did a quick check. I got this hit from the Zento Station Chronicle; that's the trading hub where he was based in Theta-Serpentis.\" \n\nJohn glanced at the heading of the holographic news article. It read: \"Successful local trader slain in ritualistic murder! Police investigating possible links to organised crime...\" He scanned down through the rest of the article, reading how the man had been tortured to death, his body subsequently found by a property developer.\n\n\"Mikaboshi didn't appreciate you foiling his plan,\" Sakura said, her expression bleak as she also finished scanning the article. \"It looks like this Peter Koeman paid the price for his failure.\"\n\nJohn sat back in his chair and rubbed his chin thoughtfully. \"Alright, we'll have to forget about that lead for the moment. Theta-Serpentis is a bit of a trek from here, at least a day I think.\"\n\n\"It would take us eighteen hours, forty three minutes to get there,\" Alyssa confirmed.\n\n\"Alright, so what else do we know?\" John asked, staring up at the ceiling. \"I feel like we're missing something obvious.\"\n\n\"My abduction!\" Sakura blurted out, eyes going wide. \"I was captured on New Eden at just after ten in the morning. The men who abused me before handing me over to Mikaboshi said the handover was at two o'clock the following afternoon!\"\n\nJohn leaned forward and asked intently, \"They took you to Mikaboshi's base?\"\n\nShe hesitated for a second then shook her head. \"No, but I was definitely in Yomi-no-kuni two hours later. I remember the stone corridors... that place is unmistakeable.\"\n\n\"Yommy what?\" Alyssa asked in confusion.\n\n\"Yomi-no-kuni, it's what Mikaboshi calls his base. The name's from ancient Shinto mythology and it's what they called the land of the dead,\" Sakura explained to them. \"I never knew what planet it was on. Shinatobe was always in cryostasis between missions, so I was only awake for brief moments at his base for maintenance.\"",
        "\"Okay, well that gives us a good starting point,\" John said, turning to look at the System Map. \"Faye, can you display a Sector Map and mark New Eden at the centre, then show every system reachable within say... twenty six hours?\"\n\nA huge green globe appeared, covering scores of systems, including Terra itself.\n\nAlyssa shook her head, saying, \"Assume they were using a non-military Terran FTL drive for the transport vessel. That radius is based on modern military drives and this was seventy years ago.\"\n\nFaye nodded obediently and the radius shrank dramatically, no longer covering the Sol System. \n\n\"We're making a few assumptions, but that backs up my gut feeling that he's not on Terra,\" John said, staring at the holographic map. \"Trying to operate a coven of assassins with that much Terran Federation scrutiny on the Homeworld would be impossible...\"\n\n\"We're still looking at a very large area. There's thirty-four systems still in range,\" Alyssa replied, staring intently at the map.\n\n\"Alright, what else?\" John asked. \"How about when Shinatobe attacked us?\"\n\n\"My shuttle attached to the Invictus at Olympus shipyard,\" Sakura said, pointing to Alpha Centauri on the map. \"I've no recollection of how I arrived at the system I'm afraid.\"\n\n\"Yeah, but we know where we were when we intercepted Mikaboshi's battlecruiser,\" Alyssa said, her eyes gleaming with a predatory light. She leaned forward and her hands danced over the Executive Officer's console with practiced familiarity. \"When Shinatobe attacked, we were knocked out of hyper-warp right here. Irillith shut down their battlecruiser's FTL drive at that spot there.\"\n\nJohn turned and glanced at the map, seeing two crosses appear on the map, one blue for the Invictus, one red for the Amaterasu. They were both a significant distance outside the previously marked green sphere, marking the point on the Invictus' route towards the Dragon March where Shinatobe had struck. \"He was heading back this way...\" John replied, seeing the red cross appear closer towards the Core Worlds.\n\n\"We shut them down very fast,\" Alyssa said with a note of satisfaction. She frowned then as she continued, \"Unfortunately, that makes using this point for triangulation quite difficult. The Invictus was twelve hours out from Olympus Shipyard at that point and we'd covered a lot of ground. We were attacked some distance outside the primary shipping lanes, probably to avoid any interference from Terran Federation patrols.\" \n\n\"Does it help narrow things down?\" John asked, tracing a line from the blue cross to the red one, then following it onwards. \"It looks like they were definitely flying somewhere close to Terra.\"\n\n\"That does make sense,\" Sakura said, cupping her chin as she pondered the map. \"The wealthiest Terran citizens and the most populated systems are in the Core Worlds. These were Shinatobe's prime hunting grounds for decades...\"\n\nAlyssa hesitated for a moment then said, \"There's no guarantee they were heading straight for his base when we intercepted them, but if they were, there are five star systems they could have potentially been aiming for.\" She tapped in some more entries on the map and the five systems were highlighted. \"He could have been heading for: Alpha Centauri, GJ 1061, GI 628, Kapten's Star, or Epsilon Indi. Alpha Centauri is a triple star system, so that's actually eight stars in total.\"\n\n\"So we just need to track every ship heading in that direction since the kidnapping?\" John suggested, sounding more optimistic.\n\nAlyssa nodded but the flicker of hope in her eyes faded a moment later as she looked at the Sector Map. \"Twenty-seven vessels have already left Terra heading in that direction!\"\n\n\"If Irillith were awake, I'm sure she'd be able to hack each of those ships and find out in no time if Calara or the assassins were aboard!\" Faye suggested, her face lighting up with a bright smile. \n\n\"We're much faster than those vessels. We could easily catch up and start searching each of them in turn,\" Alyssa said, nodding her agreement with the plan.\n\nJohn glanced at the map, his brow furrowing for a second. \"I was about to suggest getting the Terran Federation involved, but most of the local fleets are in orbit around Terra. Even if they were able to catch up to these ships, I'm not sure I'd want to entrust Calara's life to a bunch of Terran-led, stop and search operations.\"\n\nAlyssa looked at John with a raised eyebrow. \"Looks like we need Irillith back on her feet then.\"\n\n\"We'll need Jade's help to feed the girls, but she's exhausted at the moment,\" John said, meeting the blonde's questioning gaze. \"I don't want her exerting herself to... you know.\"\n\nAlyssa's stoic expression wavered for a moment and he could see the anguish behind her mask of anger. \"I'd normally have you load me up in a heartbeat, but... I can't handle that intimacy at the moment, I'll crumble like a pack of cards! I need to stay angry...\" She darted a glance at Sakura who was standing between them. \n\nThe Asian girl traced her fingers along the epaulets on John's shoulder, before brushing them through his hair. \"Let's go,\" she said with a tender smile.\n\nRising to his feet, John took her hand, then paused and turned back to look at Faye. \"What about the assassin you captured? Should we interrogate him first? I'm still worried about leaving him in the Brig.\"\n\nAlyssa sprang to her feet, her eyes blazing with anticipation. \"Now that's something I'm more than happy to get stuck into.\"\n\n\"We'll go there now,\" John agreed, before taking a final glance at the green sphere in the Sector Map. He could see the limit of the Invictus' sensor range marked in a globe around the ship, which covered the local systems but not those further afield. \"Faye, can you contact Terra Flight Control and tell them to forget the blockade. I assume they haven't been able to authorise anything yet as they haven't called us back. Instead, tell them the Lion needs full access to the Terran Federation Sensor net. When we're patched into that, we can make sure nothing slips past us in case we were wrong with any of our guesses.\"\n\n\"I'll contact them right now!\" Faye exclaimed, nodding enthusiastically. \"I'll start monitoring everything in the sector after that!\"\n\n\"Thank you,\" he said, giving her an appreciative smile. \"We'll meet you down in the Brig.\"\n\nThey turned and walked down the illuminated steps of the Command Podium, before entering the crimson glow of the anti-gravity field. The red shroud made Alyssa's glowering expression all the more terrifying and when they arrived on Deck Seven, she marched out purposefully. John chose not to comment, holding Sakura's hand as they followed the blonde. \n\nThe new Brig had been constructed to replace the old gym at the end of the corridor and Faye was waiting for them by the reinforced security door. She gave them a bright smile in greeting, then purposefully stepped in front of the door to block their path. \"I took a few precautions to make sure that the assassin wasn't going to be a threat to any of you,\" she warned them, her tone uncharacteristically serious. \"I'm just letting you know beforehand so it won't come as a shock.\"\n\nJohn darted a slightly apprehensive glance at Sakura, while Alyssa snarled, \"Don't worry, whatever you've done to him was just the warm-up act.\"\n\nFaye nodded and stepped aside, opening the security door to allow them into the Brig. \n\nThe huge gym and swimming pool that had been there before had taken up a fairly substantial section of this deck, so with all those facilities removed, there'd been more than enough room to build a large prison. Directly behind the door was a spacious area flanked by more security doors, with one wall fitted with clear crystal Alyssium windows. The door directly ahead of them led to the Security office that monitored the Brig, while two long halls could be seen stretching away through the window, with ten cells per side. \n\n\"He's in the closest one on the right,\" Faye explained, opening the inner security door. \n\nThey followed her through, walking over to the first of the prison cells. The bars on the front of each cell were made of very familiar sparkling white metal, with a shimmering blue forcefield in place directly behind the sturdy cell door. There was something neatly piled up on the floor outside the cell and John's eyes widened as he recognised the shape of the golden-brown objects.\n\nHe shot a quick glance at Faye. \"Are they...?\"\n\n\"I had my boys remove his arms and legs!\" she replied with a beaming smile. \"They were all cybernetic, so it wasn't quite as grisly as it sounds.\"\n\nAlyssa looked through the cell door and spotted the battered cyborg assassin, his dismembered torso lying propped up on the bed. Her pitiless laughter echoed around the Brig.\n\nWhen Faye dropped the forcefield, the assassin finally realised that he had company, the opaque screen having blocked out all sight and sound from inside his cell. \"Please!\" he begged, seeing John and the girls. \"Keep that AI away from me! She's fucking crazy!\"\n\n\"She's the least of your problems,\" Alyssa said ominously, her eyes starting to glow with a fierce white light. She gestured at the barred portal with a flick of her wrist, causing the cell door to slam open with a crash.\n\nThe man's almond eyes widened with terror as he stared at Alyssa, who stalked angrily into his cell. \"W-w-what are you going to do?!\" Omoikane stammered in fear.\n\n\"Shut the fuck up,\" Alyssa growled, forcing his jaw shut with a telekinetic flick of her fingers. \"You're going to tell me everything you know. If you even think about resisting, I'll lobotomise you.\"\n\nA flicker of confusion crossed the terrified cyborg's metallic face as Alyssa closed her eyes.\n\nIt didn't take long. Time moves much faster on the Astral Plane, so it seemed to John that Alyssa's spirit walk into Omoikane's subconscious only took about thirty seconds. When Alyssa finally opened her eyes again, she looked down at the cybernetic ninja with disgust.\n\n\"That piece of shit volunteered for this,\" she said, waving a contemptuous hand towards his obviously inhuman body. \"He's killed hundreds performing contracts for Mikaboshi.\"\n\n\"Any information on Mikaboshi's base?\" John asked, watching the blonde as she strode out of the cell, the door slamming closed behind her.\n\n\"It's in a mountain range, protected by a battery of holographic projectors to conceal it from view,\" she replied, walking back to the security area. \"Mikaboshi keeps the location secret from all his assassins. He's paranoid about security and arranges all the transportation to drop off and collect his operatives.\"\n\nSakura nodded and said quietly, \"I've no memory of anything other than the interior of Yomi-no-kuni.\"\n\nJohn put his arm around her and squeezed her shoulder supportively before saying, \"Well, it was worth checking, even if it wasn't useful.\"\n\n\"Oh, I wouldn't say that,\" Alyssa replied, a gleam in her eyes. \"Omoikane, that cyborg back there, has been on guard duty a few times. I've seen the views of the mountain ranges where the base is located. I'm going to go up to the Bridge and start checking the topography of all the mountain ranges in those systems. Who knows, I might get lucky...\"\n\nJohn reached out to catch her arm, stopping her from striding away. \"Are you sure you're alright? I'm not sure I should leave you alone right now.\"\n\nHer glowering frown faded away and she gave him a troubled smile as she murmured, \"No, I'm not alright, but I will be when we get Calara back. You two go and take care of the girls. We've still got the assassins' black shuttle attached to the hull, so I'll need to move that into the Primary Hangar before we can jump into hyper-warp. When I'm done, I plan to do a bit of brooding up on the Bridge.\"\n\nAfter pulling her in for a brief kiss, John let her go and watched as she strode away. Alyssa was radiating with the anger she was using as an emotional crutch and he could practically see it pouring off her in waves.\n\nSakura rubbed his hand and when he glanced her way, she gave him a look of sympathy. \"We'll rescue Calara, then everything will be alright again,\" she said quietly.\n\nHe breathed a heavy sigh and nodded. As furious as John was with Mikaboshi for taking Calara, letting himself succumb to his own considerable rage wasn't a risk he was prepared to take. If Alyssa needed her fury to stay sharp and focused, then he'd play good cop to her bad cop and do his best to look out for all the girls. \n\nGiving Sakura a grateful smile, he nodded then said, \"We needed to talk anyway. I'm glad we've got the opportunity.\"\n\nThey walked along the corridor together, with Sakura holding his hand in both of hers as she leaned into him. When they stepped out into the corridor on Deck Two, she paused by the grav-tube and said, \"Your bedroom is full of sleeping girls at the moment, so let's use mine. Make yourself at home and I'll be with you shortly.\"\n\nShe turned and went through the double doors into the Officers' Lounge, leaving him to walk the few metres to her room. He pressed the button to open the door and went inside, raising the illumination to a warm glow. The light sparkled off a large disc on the table to his right and he walked over to look at the crystal Alyssium sculpture that Alyssa had created for Sakura. \n\nThe incredibly lifelike portraits of Shiro and Emiko Honami smiled at him, a look of parental pride on their faces, with love shining in their eyes. John marvelled at the telekinetic skill Alyssa had displayed in creating this piece for Sakura, recreating exact replicas of her parents using only images recalled from the Asian girl's memory. He studied Emiko's face, seeing her daughter's features in her kind, almond-shaped eyes and in the soft smile gracing her lips.\n\n\"I'll never be able to repay Alyssa for that gift,\" Sakura murmured, gliding over to stand beside him, her entrance unnoticed with John so absorbed by the portrait. \"My memories fade and I sometimes forget...\" her voice caught for a moment before she swallowed. \"But now I'll never forget their faces.\"\n\n\"You can tell she was a kind and loving person,\" John said, putting his arm around Sakura. \"It wasn't just her beautiful smile she passed on to you.\"\n\nShe turned to look at him, a riot of emotion over her face. \"It feels like my head's spinning, I've got so much going on inside me right now,\" she finally admitted, staring into his eyes. \"I'm just not used to this amount of emotional turmoil; I don't know if my heart can take it.\"\n\nHe slowly rubbed her back to soothe her. \"Do you want to talk to me about it?\"\n\nSakura leaned against his chest, resting her head against him. \"Yes, but in bed. I want to feel as close to you as I can when we talk.\"\n\nJohn released her and she took his hand, leading him over to the large bed on the far side of her room. She'd placed a big glass of water by the bed and giving him a knowing smile, she passed it over to him for him to drink. Sakura slipped her backless dress over her shoulders and climbed under the covers, then watched him with a gleam in her eyes, as he quickly removed his white Lion uniform and joined her. \n\nFacing each other only a few inches apart, Sakura moved closer to kiss him, her soft full lips pressing against his. They spent a couple of minutes like that with John running his fingers along the perfect curve of her hips to her slim waist, enjoying the touch of her gloriously soft skin. She hooked her leg over his, then pushed him so he was lying on his back.\n\n\"It'll be easier to chat together this way,\" Sakura said, straddling his hips and lining herself up to take him.\n\nHe watched the slight flutter of her eyelashes as she pushed down, saw the way her teeth tugged at her lower lip as she let out an almost inaudible moan. She felt hot and tight around his broad girth, and he could feel her stretch to take him as she inched her way down his length. Sitting up slightly, she undulated her hips, making them move in an altogether enticing and wonderfully erotic way. \n\nThere was familiarity in that exquisite motion and he smiled as he looked into her almond-shaped eyes. \"Jade?\"\n\nNodding in confirmation she groaned in delight as she took him to the hilt.\n\nPlacing his hands on her gloriously firm cheeks, he held her still, simply revelling in being inside this beautiful girl's womb. Sakura leaned forward, resting her weight on him and pressing her large supple breasts against his chest. She brushed her hair out of the way and gazed into his eyes, a look of contentment on her face.\n\n\"I feel calmer now, like you've centred me,\" she said softly, giving him a tender, appreciative kiss.\n\nJohn let his hands wander up to stroke her back. \"You said you were conflicted... struggling with your emotions?\"\n\nShe nodded, relaxing further in his supportive arms. \"So much has happened in the last few months... I can barely keep up with everything.\" Seeing the look of curiosity in his eyes as he waited for her to elaborate, she continued, \"First, there's my parents. I'm still grieving and I miss them so much, but living here with you and the girls makes me so happy... I end up feeling guilty because of it.\"\n\n\"That's only natural. You can't help-\" John started to reply, but she silenced him with a brief kiss.\n\n\"I love you, and I'm so grateful for everything you've done for me. You've asked for nothing in return, acting selflessly and looking out for my best interests every single time. I never imagined I'd meet anyone like you, which ends up making me feel sad,\" she explained, gazing at him with her lovely dark-brown eyes.\n\nGiving her a quizzical look, John asked, \"Sad? Why's that?\"\n\n\"Because I wish that my parents had been able to meet you. They'll never know the man I want to spend the rest of my life with,\" she replied, letting out a forlorn sigh. Hesitating for a moment, she took a deep breath. \"I've imagined how it would have been, taking you to meet my parents for the first time... Mom would have loved that you can cook and when you offered to help prepare dinner, she'd have leapt at the chance. I can just picture the two of you sharing recipes and her teaching you how to prepare my favourite dish.\"\n\n\"What's your favourite?\" he asked, brushing his fingers through her silky black hair.\n\n\"Okonomiyaki,\" she replied with a wistful smile. \"When I was very young, I was going through a phase and told her I didn't like green onions any more. She still wanted me to eat my vegetables, so she used to chop them up so fine, I didn't realise she still kept adding them. Years later, I tried the dish in a restaurant after requesting 'no onions' and it tasted so bland, I immediately realised what she'd been up to. I never mentioned it to her and she kept making Okonomiyaki the same way right up until...\" Sakura's voice trailed off, thick with emotion.\n\nJohn gave her a moment to compose herself, then asked gently, \"What about meeting your father? Would he have been overprotective of his precious daughter?\"\n\nShe laughed and nodded. \"At least until I told him you were a real-life samurai. He loved all that ancient feudal Japanese stuff and would have been awestruck.\"\n\n\"What sword style did he prefer?\" John asked, genuinely interested.\n\nSakura smiled affectionately as she replied, \"My father was an intelligent and successful businessman, but he was hopelessly uncoordinated. He told me the first time he tried handling a katana he nearly took his own hand off. Very wisely, he decided to admire swordsmanship from a safe distance.\"\n\n\"We would have had to cover all this extensively beforehand,\" John said, catching the tear running down her cheek and brushing it away. \"I'd have wanted to make a good impression.\"\n\n\"I know...\" she said, giving him a loving smile. \"You would have been so earnest. They would have seen that and been delighted with the man I chose to bring home to meet them.\" Her eyes narrowed in anger as she snarled, \"But Mikaboshi took all that away from me!\"",
        "John knew that while Sakura looked no older than the rest of his nubile crew, by chronological age she was actually ninety-five. Considering the many long decades separating them, without Mikaboshi's abduction they would never have met. Mikaboshi had still robbed Sakura of those kind of memories with her parents however, even if it'd been another man she'd brought home to meet them.\n\nHe nodded, his expression filled with compassion. \"It won't be long now. You'll get your reckoning with him; the chance for vengeance that you were denied for seventy-five years.\"\n\n\"I know and I hate him with every fibre of my being,\" she said vehemently, before the conviction in her voice wavered. \"But I've seen how furious Alyssa is right now. I respected my law professors, my parents; I know they'd be disappointed to see me behave the same way, so twisted up with rage. If they knew all the things I want to do to Mikaboshi to exact my revenge...\"\n\nJohn cupped her face in his hand, looking at her with sympathy and understanding. \"We've talked about this before; whether there's a fine line between justice and revenge, or if you can achieve both at the same time. My answer hasn't changed: All I care about is you and making sure you get what you need to settle your score with him. I'll support you unreservedly, however you decide to deal with Mikaboshi.\"\n\n\"I don't know what I want...\" Sakura murmured quietly, the conflict in her eyes quite clear.\n\n\"You will, when it's time,\" he replied, massaging her temple to help soothe her troubled mind.\n\nShe closed her eyes and rested her head against his hand, just letting herself be supported by him. When she finally opened her eyes again, she said earnestly, \"You're probably the only man in the galaxy who can truly understand everything I'm going through. I'm so lucky to have found someone so exceptional.\"\n\n\"I feel the same way,\" he replied, pulling her down for a kiss.\n\nShe gave him a coy smile when they eventually pulled apart. \"Speaking of the exceptional, we came here with a purpose in mind...\"\n\nHe nodded, his hands sliding down over the perfectly toned muscles in her back. \"How do we want to do this? With you on top?\"\n\nSakura shook her head and leaned in close to whisper. \"I like you being on top of me, it makes me feel more submissive that way.\"\n\nJohn smiled at her indulgently as he said, \"Are you sure? Alyssa seemed to think you enjoyed a little change.\"\n\n\"Never with you,\" she purred, rolling to one side and pulling him with her. When he was on top of her, she wrapped her arms and legs around him, then kissed him passionately. \"You're my Progenitor, I'm your Thrall. I fight for my Master until he chooses to breed me...\"\n\nJohn stared into her eyes and couldn't deny the thrill that coursed through him at her words. A flicker of doubt crossed his face as he said, \"You know I don't think of you like-\"\n\n\"I know,\" she replied, giving him a tender kiss to quieten his protests. \"But I also see how much that thought excites you.\" She pulled him down and whispered in his ear, \"It's exciting for me too!\"\n\nInterlacing his fingers with hers, he gently but firmly pinned her hands to the bed above her head. \"I do like seeing you get excited...\"\n\nSakura was a strong, powerful girl, her body lovingly nurtured and enhanced by him during their time together. She was built to take a pounding, and he gave her exactly what she cried out for, riding her hard through her climaxes as she urged him onwards. The bed was creaking ominously by the time they were done, her womb filled to capacity as he packed her full of spunk. His aching balls did their best, feeling numb after having loaded up Jehanna relatively recently. \n\nJohn collapsed on the bed, panting for breath, and Sakura rolled over on her side to gaze at him adoringly. \n\n\"I found my niche,\" she murmured, sounding tremendously satisfied. \"Promise me you'll come find me if you feel the urge for that kind of excitement again.\"\n\nHe chuckled as he nodded, taking a deep breath before rolling over on his side to face her. \"Your niche?\" he asked, looking confused.\n\n\"Nothing, just something Rachel told me a while ago,\" Sakura said, a little smile of contentment on her flushed lips. She reluctantly sat upright, offering him a hand. \"I'd happily spend hours snuggled in bed with you but we need to get moving.\"\n\nJohn nodded and climbed off the bed, gathering all their clothes in his arms and following Sakura out as she walked into the corridor. He left the bundle of clothing by the door to her quarters, knowing that the cleaning bots would already be racing their way in their urgency to get the outfits pressed and laundered. \n\nThey walked hand-in-hand down to his bedroom, where Jade, the twins, Dana, and Rachel were all asleep in bed. A dusky-hued new addition slumbered peacefully in their midst, Jehanna completely oblivious to her sudden change of location.\n\nWhile Sakura climbed on the bed, her rounded tummy leading the way, John crouched down next to Jade. He gently stroked her pale green arm and whispered in her ear, \"Little Nymph... Your Master needs you...\"\n\nJade's eyes flickered open an instant later and she looked up at him with heavy-lidded eyes. \"I'm sorry I fell asleep, Master. I was just so tired...\"\n\n\"Shh, I should be apologising for waking you,\" John said gently, running his hand through her thick hair. \"I need your help, but first I've brought a treat for you. I want you to drink deep and feed yourself, then I can help you get your strength back.\"\n\nHe helped the exhausted Nymph reposition herself on the bed between Sakura's athletic thighs, a hungry glint appearing in Jade's cat-like eyes when she saw the golden-brown curve of Sakura's tummy. Jade wasted no time in lapping away, her long prehensile tongue snaking deep into the splayed girl's pussy. Sucking slowly at first, she soon began to intensify the suction, her body rapidly darkening and looking healthier by the second.\n\n\"That's a good girl,\" John said, stroking Jade's hair as she gripped Sakura's thighs with strong hands and greedily drank from her. \"Don't forget to save some for the girls, we need to wake them too.\"\n\nJade nodded her understanding, diverting the flow of cum away from her belly as she continued to empty Sakura's womb. Glowing viridian circles of light began pulsing outwards from the Nymph's stomach, curving around her spectacular body and flowing down her limbs, rejuvenating them as John filled her with vigour. Her emerald eyes were bright and alert when she eventually sat up, her bounteous green chest having grown a few cup sizes to house their new cargo.\n\n\"Which kittens first?\" she asked, looking down at the five girls lying in the bed. Her gaze flicked to Jehanna and she began to purr, glancing back at John and nodding her approval.\n\n\"Irillith first, then Tashana please,\" John replied, sitting on the edge of the bed. \"They were both knocked unconscious and I want to make sure they're alright. They shouldn't need much, just enough for me to establish an active connection.\"\n\nJade nodded, then smiled at Sakura, beckoning her over. \"I'm sorry I took all his cum,\" she said, gathering her in her arms. \"Take some back and fill your tummy while I feed the others.\"\n\nSakura glanced at John and he gave her an approving smile. \"You need to recover too. You used up a lot of energy today and I'm not just talking about the phenomenal sex in your quarters.\"\n\nHer eyes shone with arousal and she gladly let herself be cradled in Jade's arms as she began to suckle. The Nymph snaked her free hand over to Irillith's mouth, then slipped two fingers between her lips. The Maliri murmured something in her sleep before the noise was abruptly smothered as Jade's fingers eased down her throat.\n\nAs cum started to pump into her stomach, Irillith's violet eyes fluttered open, looking at Jade in shock. The Nymph eased her fingers back and filled her mouth with a sweet-tasting spurt, Irillith instantly calming as she let out an ecstatic groan. Jade moved from one girl to the next, sharing out enough for John to be able to heal wounds and purge the drugs from their overwhelmed systems. One by one they returned to consciousness, each sitting up and staring at John with wide eyes.\n\n\"Come here,\" he said, giving them a gentle smile and welcoming them with open arms.\n\nThey each rushed across the bed to him, the Maliri twins first, and then the redhead and brunette who hugged him from behind.\n\n\"I was so worried about all of you,\" he said, stroking them reassuringly.\n\n\"What happened?\" Tashana murmured, looking at him in confusion. \"We were dancing in the nightclub and then... I don't know. Blackness...\"\n\n\"There was an explosion. You were attacked by assassins,\" John said, glancing over the girls at Sakura and Jade who knelt together on the bed. \"I would have lost you all, but my amazing Security Chief and Nymph were there to save you.\"\n\nThe girls went over to hug Sakura and Jade, showering them in grateful kisses.\n\nJohn let them have their moment, then said quietly. \"Calara's been taken.\"\n\nThere were sharp intakes of breath as the newly-woken girls looked at him in horror.\n\n\"We've got to get her back!\" Dana blurted out, stating the obvious in her shock, the colour draining from her face.\n\nHe nodded, staying calm to try and instil them with confidence that he certainly didn't feel. \"We've got a plan, but we need your help. Get dressed and we'll meet in the Briefing Room to fill you in.\"\n\n***\n\nThere were grim faces all around the briefing table as the girls learned what had happened and the plan to rescue their lost Lioness.\n\n\"So that's why we need your help, Irillith,\" John explained, waving his hand towards the holographic Sector Map that showed dozens of spacecraft in flight. \n\nEach ship that had left Terra since Calara had been captured was highlighted in red, the vast majority of them Terran merchant vessels of varying sizes and classifications. They were slowly creeping their way across the Sector Map, their progress in hyper-warp tracked by the Terran Federation sensor grid.\n\n\"If you can get me within interdiction range, I can easily hack any of those ships,\" Irillith said, nodding emphatically. \"It should only take me about thirty seconds to gain complete control of any vessel, at which point, I can start scouring the internal cams for any sign of Calara or the assassins.\"\n\n\"What if they're hidden in concealed compartments?\" Tashana asked, a worried frown on her face. \"A kidnapped Federation officer is about as illicit a cargo as they could possibly haul. I'd be astonished if they haven't taken any additional precautions.\"\n\nJohn looked at her in surprise. \"Memory flashbacks?\" he asked with concern.\n\n\"Yes, but nothing bad,\" she replied, giving him an appreciative smile. Turning back towards the map, she frowned as she added, \"We have to allow for the fact that they might have taken a circumspect route to try and throw off suspicion. Are we tracking every ship that left Terra since the kidnapping?\"\n\nFaye nodded, her elfin face bobbing up and down exuberantly. \"I've been monitoring every ship just to be on the safe side!\" She blinked at the map and it expanded until it was showing hundreds of vessels, each trailing a green line that led back to Terra.\n\n\"Nice work, Faye,\" John said, looking at the other ships for any sign of erratic flight paths. He glanced at Dana and continued, \"What about active scans? Can we check the listed crew on the ship's manifest, then compare that number against the lifeforms picked up by the scan?\"\n\n\"Yeah! That would work, we could definitely do that,\" Dana said, tapping her finger on her chin as she thought about it. \"We'd need to get a bit closer to be in range and the ships would know that they're being scanned.\"\n\n\"If I gain control of the ship before you initiate the scan, I should be able to prevent any retaliation against Calara by locking down bulkheads, ejecting the crew, that kind of thing,\" Irillith mused, thinking of the relevant subsystems she'd need to hack.\n\n\"There are scores of ships; this is going to take a lot of time,\" Alyssa said, looking very worried. \"What if the assassins wait for a day, then make their move? The sheer number of vessels leaving Terra will make finding Calara impossible.\"\n\n\"I know,\" John said, his expression bleak. \"We just have to hope they're moving her immediately. They'll probably be operating on the assumption that they need to escape from Terra before the planet is locked down.\"\n\nAlyssa snarled angrily, \"They obviously don't know how fucking useless Terran Flight Control is!\"\n\nJohn nodded, then shrugged as he said, \"If they have stayed on Terra, we'll just have to deal with the situation if that turns out to be the case.\" He looked around at the girls and continued, \"So, to summarise then: we chase down all the ships that are heading to those five target systems and start searching each vessel for Calara. We get close enough for Irillith to hack them, then move in closer for Dana to perform an active scan. If we see any discrepancies between the crew manifest and the scan results, we make our move, with Irillith locking down the ship to keep Calara safe.\"\n\n\"Sounds good, let's get started,\" Alyssa said, with an impatient nod.\n\n\"Or, we can just follow Calara's ethereal cord!\" Sakura gasped, staring in astonishment at Alyssa, having just noticed the seventh glowing cable snaking away from the fuming Matriarch.\n\n\"Wait... what?!\" John blurted out, staring at the Asian girl in shock.\n\nLooking at him in awe, Sakura replied, \"I only just spotted it when I looked at Alyssa! This must be something to do with having an active connection with you. When you preloaded us before the Battle of Ashana, I used the same ability to find Alyssa on the Legacy.\" She looked upset as she added, \"I'm so sorry! With all the stress of combat, I completely forgot about it.\"\n\nJohn shook his head, and he gave her a reassuring smile. \"You're trying to adjust to a lot of new abilities so you've got nothing to apologise for. Which way is her cord pointing?\"\n\nSakura sprang to her feet and stood beside Alyssa, holding her arm out in the same direction as the ethereal cord that snaked off through the hull of the ship. \"She's that way!\"\n\nAlyssa's eyes narrowed as she turned to look at Sakura's outstretched arm, then her intense blue-eyed gaze swung back to the holographic Sector Map. \"That one,\" she said, pointing at a freighter inching its way towards a red dwarf star. \"They're heading towards Proxima Centauri.\"\n\nJohn's eyes fixed on the small freighter. \"They've nearly arrived, let's get geared up and move out. How long until we get there?\"\n\n\"Twenty-two minutes,\" Alyssa replied, a dreadful smile of anticipation appearing on her face.\n\nSakura glanced John's way. \"What's our plan?\"\n\nJohn rose from his chair, replying solemnly, \"We show everyone what happens when you fuck with the Lion and his Lionesses.\" \n\n***\n\nThe muggy darkness seemed to fall away from Calara's mind and she groaned as she awoke, her tongue feeling thick in her mouth. She was vaguely aware of a slight sting in her left arm and that she was lying on a cold, metal table of some kind. Feeling groggy, she tried to sit up, but bands restraining her chest, arms, and legs held her tightly in place. Her eyes slowly opened and the lights seemed much too bright at first, before the glare faded away, and her pupils were able to adjust.\n\nThe ceiling was oppressively low and constructed from large, rough-hewn stone blocks. Aside from the few operating spotlights, the room seemed to be shrouded in gloom. Operating spotlights... That realisation sent a shiver down her spine.\n\nRealising John and the girls would be searching for her, Calara reached out with her mind. *Alyssa? Are you there?*\n\n*Calara!* Alyssa blurted out, her voice throbbing with emotion. *Oh my love! I've been worried sick!*\n\n*I just woke up. I was shot with a tranquiliser dart by an invisible attacker, probably someone wearing nanoweave. I'm not sure where I am right now, but the room I'm in is made from big stone blocks. It's a bit musty, so I think I'm underground,* the Latina replied, trying to give her girlfriend as much useful information as possible. A shoe scuffed the floor, and she tensed, wondering who was there. *There's someone else here, hang on.*\n\n*We know where you are, we're coming!* Alyssa replied, the absolute conviction in her voice filling Calara with a surge of confidence.\n\n\"She has awoken, Idaina-sha,\" an obsequious voice murmured, from somewhere behind Calara's head.\n\nThere was a long moment's pause, until a cold voice replied, \"Thank you, Doctor.\"\n\nCalara glanced downward, trying to get a glimpse of her captor, until a handsome golden-brown face suddenly filled her vision. There was no warmth in his unnerving gaze and there was a hint of a metallic sheen to his almond-shaped brown eyes.\n\n\"My name is Amatsu Mikaboshi, but you may address me as Idaina-sha, Commander Calara Fernandez,\" Mikaboshi gloated, sounding extremely pleased with himself. \"I imagine you must be terrified at this moment. Are you wondering where you are? Hoping with all your heart that your friends will save you? I can assure you, they will never find you.\"\n\nCalara looked at the man with anger, then her expression shifted to contempt. \n\nMikaboshi seemed confused by her reaction, but a wicked smile appeared on his face as he continued to taunt her, \"John Blake took something very precious from me, so I will return the favour and replace what was lost.\" Stepping aside, he gestured to his right and added with an evil grin, \"Behold and despair!\"\n\nLooking off to her left, Calara saw what appeared to be the body of an Asian woman lying on a table beside her. However, the woman's face was tilted sideways at an angle, like a hinge door partially opened. The silvery metal surrounding that oval face glinted as it caught the light.\n\n\"Your glorious new body!\" Mikaboshi declared, leaning forward to study her reaction. \"You will be magnificent when our work is complete, my new Shinatobe!\"\n\nGiving him a level look, Calara said patiently, \"You have no idea what you've done, do you?\"\n\n\"John Blake destroyed my most precious possession! I will make him feel that stinging pain of loss!\" Mikaboshi snarled, his face twisting with malicious glee.\n\nCalara slowly shook her head. \"No. You've managed to enrage three of the most powerful people in the galaxy.\" Glancing away for a moment, her mind whirred as she started analysing the situation, calculating variables, predicting the most likely outcomes.\n\n\"Your false bravado will provide you scant comfort!\" Mikaboshi crowed, accompanied by a mocking laugh. When Calara didn't react in the slightest, the Master Assassin frowned in irritation. This wasn't unfolding the way he'd been hoping. He'd expected weeping, screams of terror, and begging for mercy, but not... total indifference. His lip curled in annoyance and he studied her look of concentration. \"What on Terra are you doing?!\"\n\n\"One moment. Could you tell me the time, please?\" Calara requested politely.\n\nMikaboshi gave her a confused frown. \"It's three in the morning. By the time the sun arises, you will be encased in a cold metal shell! You shall be my obedient servant for the rest of your life!\"\n\n\"Interesting, thank you,\" the Latina replied gratefully. She gave him a grim smile as she continued, \"To answer your earlier question: I'm just trying to calculate which one of my friends will end you and how much time you've got left.\"\n\nEyes narrowing in anger, Mikaboshi glared at this stubbornly defiant woman. No, this was not how he'd imagined this encounter going at all. He glanced at the doctor who had remained silent during the entire exchange. \"Prepare her for surgery! We shall see how brave she is when we begin the operation... with no anaesthetic!\"",
        "\"You could go that route, but I wouldn't advise it,\" Calara said, wincing as if he'd just told her he planned to go for a walk in the rain without taking an umbrella. \"I predict your only chance of survival is to release me immediately, and order your entire organisation to surrender. If you're lucky, I might be able to convince John to hand you over to the Terran Federation for trial. If you harm me in any way... it's not going to be pretty. My girlfriend likes to start breaking... people... when her loved ones are threatened.\"\n\nThe absolute certainty in her voice left Mikaboshi badly shaken. He shared a worried glance with the Doctor.\n\n\"Should I...?\" the Doctor asked in confusion, nodding towards Calara's prone form.\n\n\"Wait! Just wait a minute... I need to think,\" Mikaboshi muttered, his index finger tap-tap-tapping on his thigh. He couldn't get a certain image out of his mind: that of a soldier snapped in half, his mangled body hurled down a corridor.\n\n\"Seventeen,\" Calara stated solemnly.\n\nMikaboshi lunged forward, his frantic face hovering above the olive-skinned girl. \"Seventeen? What the fuck's that supposed to mean?!\"\n\n\"How many minutes you have left,\" she said quietly, her gaze filled with pity. \"I won't spoil the surprise for who does it.\"\n\nMikaboshi started backing out of the room, which suddenly felt much too small and oppressive. He sucked in a big lungful of air, feeling like he was suffocating. She had to be bluffing... didn't she? He glanced at his HUD and started a timer, syncing it up with Calara's proclamation of doom.\n\n\"16:57\"\n\nAs he stumbled backwards into the corridor, he glanced down at his left arm - the one John Blake had ripped from its socket with his bare hands. He felt a tremor of fear run up his still-organic spine, reliving emotions that he had no desire to feel again. His one unbreakable rule was never to expose himself to unnecessary danger and stay hidden in his secret impregnable fortress. But what if she was right? What if they had sniffed out the location of Yomi-no-kuni?! He turned and started walking away, his pace quickening until he found himself sprinting down the corridor. \n\nNo! She had to be lying!\n\n***\n\n\"Punisher rifles for maximum armour penetration, ladies,\" John said, striding over to the weapons rack and picking up one of the vicious looking rifles.\n\nJade was leaning against the wall, her dark-green arms crossed over her chest as she watched the crew gearing up in Paragon armour. \"Watch out for their stealth fields. I was able to disrupt them with a low voltage pulse of electricity.\"\n\nIrillith slapped a magazine into a Punisher rifle and nodded as she said, \"I'll be able to create broad static fields to short them out. I did the same thing to the Drakkar who tried to board us.\"\n\n\"Those fuckers are full-cyborg conversions,\" Dana said, stepping out of the armour-equipping frame. \"Just switch to mag-view and they'll light up like a Christmas tree.\"\n\n\"Where's Sakura?\" Tashana asked, as she slotted a Punisher pistol into a holster, then picked up a second of the heavy-bore weapons. \n\nAlyssa strode over towards the emergency grav-tube and said over her shoulder, \"She'll join us in a moment. There's something important she has to do first.\"\n\n\"Alyssa,\" John called out to her. \"Take a Punisher rifle.\"\n\nShe turned to look at him, her eyes blazing with a fierce white light. \"It'll only slow me down...\"\n\n***\n\nSakura walked into the Engineering Bay, her face a mask of conflicting emotions. She knew exactly where the object that brought her to the workshop was, Dana having safely stored it away after checking the serial numbers for Edraele. Striding across the room to the rows of compartments built into the wall, her fingers drifted across the storage crates until she found the one she was looking for. On the front was a tag, with \"Sakura's implants\" scrawled across its surface in Dana's spidery handwriting. \n\nHauling out the crate, Sakura lifted off the lid and set it aside, before gazing down at the pile of cybernetic implants that were packed away neatly inside. She froze for a moment, glancing down at all the metallic objects that had been forcibly inserted into her body without her consent. It was astounding that so much could have fit inside her relatively small frame. Of course, that was the petite girl who she used to be, not the glorious amazon she was now. \n\nSquatting down beside the crate, she rummaged around, moving aside the tangle of wires that had been the adrenal booster, until she found exactly what she was looking for. It was relatively small, but had just enough mass for the purpose she had in mind. Scooping up the cranial implant in both hands, she turned and walked towards the Mass Fabricator. \n\nThey were fairly simply devices to use; she'd seen Dana operating them dozens of times over the last few weeks. Dropping the cybernetic brain into the hopper at the back, she walked around to the console, then quickly sketched out the shape of the object she had in mind. The Mass Fabricator performed a quick check and a green light flashed, confirming that it had enough matter to build the item she had designed. Rumbling into action with a deep hum, the Mass Fabricator started to go to work, smelting the metal contained within the cranial implant as the first stage in the process.\n\nWhile the big machine went to work, Sakura toyed with the pendant around her neck. She paused for a second, unlocking the clasp and turning it, so that she could study the image of her parents looking at her with pride. To see them again triggered a sharp pang of loss and she traced her finger over their portraits, wishing with all her heart that she could have seen them one last time. All those years spent not knowing what had happened to their daughter, the long decades of grief with no sense of closure...\n\nSakura knew they'd blamed themselves for her kidnapping, however illogical that might seem. She'd seen the look of guilt on their faces during the police video Calara had uncovered and it still haunted her dreams. She much preferred reliving nightmarish visions of Shinatobe's murders than recalling the look of anguish on her mother's and father's faces. Her parents had never really approved of Sakura owning that hover-bike, and she was forced to admit that if she'd taken the grav-train to college as they'd begged her to, she probably wouldn't have been kidnapped. \n\nIf only she'd listened to them and not been so headstrong. If only she had been a more dutiful daughter. If only she hadn't been so gullible and fallen into her kidnappers' hands. If only she could have spent just one more hour with her parents to tell them how much she loved them. If only...\n\nThe Mass Fabricator beeped, alerting her that the job was complete. Sakura stepped over to the front of the machine and examined the newly crafted object. Yes, that would do nicely. \n\nShe hesitated before picking it up, glancing down at the open locket in her hands. \"Forgiveness\", her parents would say. \"There's no room in your heart for love if you fill it with hate.\"\n\nHer fingers wavered inches above the object on the Mass Fabricator, the light gleaming off its metallic surface. \n\n*Sorry to disturb you,* Alyssa said gently. *We'll be dropping out of hyper-warp in thirty seconds.*\n\n*I'm on my way,* Sakura replied, turning and striding out of the Engineering Bay without looking back.\n\nThe door slid closed behind her, the lights in the Workshop slowly dimming.\n\nThe object on the Mass Fabricator had been taken. \n\nHooked over the emergency stop button, a delicate white pendant hung on a sparkling chain. It spun back and forth, making the faces inside look as though they were shaking their heads in disapproval.\n\n***\n\nThe planet Kozuno was on the sixth orbital path in the Proxima Centauri system, circling around the dull crimson glow of the Red dwarf star at its centre. As the closest neighbouring system to Terra, Proxima Centauri had been an obvious testing ground for the Federation's first experiments with terraforming. In the sudden rush for newly-colonisable worlds back in the 24th century, there'd been an insatiable hunger for new planets and terraforming seemed to offer the miraculous potential of turning barren rocks into verdant paradise worlds.\n\nAt least in theory.\n\nThe initial experiments with terraforming had triggered terrifying planet quakes, turning what had once been a relatively flat world into a jagged sprawl of mountain ranges. Terran scientists had learned from their mistakes and ultimately refined and perfected many of the terraforming marvels that were taken for granted in the present day. However, irreparable damage had been done to Kozuno's tectonic plates, and while the planet had subsequently been given a breathable atmosphere, there was no easy way of undoing the fracturing of the planet's surface.\n\nWith the benefit of hindsight, Kozuno was the perfect and obvious choice for Mikaboshi's base. It was right in the centre of the Core Worlds, being as close to Terra as possible without actually being in the Sol system. Being so close to the power-centre of the Federation meant quick and easy access to the most lucrative of assassination contracts, while also reducing travel times for redeploying Mikaboshi's assassins. Finally, Kozuno had a scant population, and after all the valuable metals had been extracted from the world, the cost of land was negligible. That meant vast swathes of mountain ranges could be bought up for a fraction of the price they'd be on a more civilised world, allowing Mikaboshi to secretly build his hidden base away from prying eyes.\n\nThe Raptor peeled away from the Invictus, engines flaring as the gunship turned towards Kozuno and began racing towards the planet. John turned away from the cockpit canopy, patting Jade's shoulder as he passed her Pilot's chair, before facing the group of attentive girls.\n\n\"Our primary objective is to secure and protect Calara. Irillith and Sakura have drawn up a map of Mikaboshi's base, and the location she's being held at has been pinpointed in the HUD overlay. We move straight there, neutralising all threats in our path. Once she's safely back on the Raptor with Jade, then we clean house,\" he said, meeting the six sets of beautiful eyes looking his way. \"Any questions?\"\n\nSakura raised her chin slightly, drawing his attention. \"When Mikaboshi realises we've launched an assault, he's going to bolt. I understand and fully support Calara's need to scare him off, but now he knows we're coming, he'll be on a hair-trigger to run.\"\n\n\"Faye will be providing fire support in the Invictus,\" John reminded her. \"Once we've initiated our attack, she'll gun down any ship attempting to flee the base.\"\n\nShaking her head, Sakura replied, \"There are tunnels underneath Yomi-no-kuni. If Mikaboshi believes his life is in danger, he'll evacuate the base via the network of underground passages. He could blight us for years afterwards.\"\n\n\"What are you asking then?\" John asked, meeting her steely gaze.\n\n\"Let me do an orbital drop before you move in on the base. That'll give me a minute or two head start before you begin your attack,\" she replied, her voice calm and determined.\n\nJohn was silent for a long moment, staring into her lovely brown-eyes. \"Do you want company?\"\n\nShe hesitated for a second, her lips briefly turning up into a grateful smile. \"No, this is something I need to do alone.\"\n\n\"I understand,\" he replied, glancing back at Jade. \"How long, honey?\"\n\n\"We'll be in position for an orbital insertion in twenty seconds,\" the Nymph called back over her shoulder.\n\n\"Let's go,\" John said to the Asian girl.\n\nSakura fell into step beside him as they left the cockpit, the rest of the girls making no move to follow them, but giving her supportive smiles as she left. The two of them rode down to the bottom level in the red anti-gravity field, before turning right and walking down the short corridor to the rear loading area. They stepped into the starboard airlock together, seeing the rocky grey surface of Kozuno filling the view through the porthole.\n\nJohn hit the button to decompress the airlock, then placed a gauntlet on the DNA reader. A green light scanned over his armoured hand, flashing as it recognised his genetic code. The airlock spiralled open a second later, giving them an unimpeded view of the planet from low orbit.\n\nTurning to the girl standing beside him, John pulled her into his arms. \"Stay safe, Sakura. I'm not planning on losing either you or Calara to Mikaboshi.\"\n\nShe nodded, her expression solemn as she stared into his eyes. \"Thank you... for everything.\"\n\n\"You can thank me properly after this mission,\" John said sternly. His expression softened and he leaned forward so that his faceplate was touching hers. \"I love you.\"\n\n\"I love you too, with all my heart,\" she replied, hesitating for a second as her earlier thoughts came back to haunt her, knowing that what she'd said wasn't strictly true.\n\n\"What is it?\" he replied, seeing that tiny flicker of hesitation.\n\nShe pulled away and moved to the airlock, turning around to face him. Her expression was grim as she replied, \"I'm going to make some more room in my heart.\" With that, she launched herself backwards in a graceful dive, quickly plunging planetward.\n\nJohn watched her for a few seconds, wondering if he was doing the right thing in letting her go alone. \n\n*You know what you've been training her to face,* Alyssa murmured quietly. *You've done all you can.*\n\nHe nodded and turned away, the airlock door spiralling closed behind him.\n\n***\n\nSakura plummeted through the thick cloudbanks, the orange heat from re-entry burning a hole through their fluffy white surface. As she blasted out the other side in an amber blaze, she was finally given a glimpse of her destination. They'd all studied this particular mountain peak while approaching the system, so she knew it by sight, but taking into account her gifts that hadn't been necessary. She could see the silvery ethereal cord snaking from Alyssa to Calara, the bright cable leading directly into the mountain top below.\n\nUsing the anti-gravity generators on her armoured limbs, she shifted position as she fell, turning so that she could use the retro-thruster on her back to arrest her fall. The exhaust port flared brightly for a few seconds, sending a long orange tail out behind her as she descended. Her speed began to slow and once she'd levelled out, she deactivated the retro-thruster and began to drop once again. \n\nThis time she focused her will to draw on the thermals surging up the mountain face, harnessing their power and swathing herself in tightly controlled streams of air. Falling silently while using only the wind to keep her aloft, she watched as she approached the treacherous mountain surface. She couldn't help bracing for impact as the forbidding escarpment loomed in front of her and then she was through, sighing with relief as she slipped inside the holographic field without causing so much as a ripple.\n\nThe fortress beneath was constructed from huge stone blocks, making the grey citadel seem menacing in its appearance. Yomi-no-kuni covered several levels, with pagoda-style roofs made of black slate surrounding several courtyards. The mountain-top castle was never designed to repel a full-scale assault, relying on subterfuge to avoid detection. There were no gun emplacements or anti-aircraft batteries in place, with Mikaboshi's battlecruiser, the Amaterasu, intended to smash anything less than a full-scale Terran Federation invasion. Unfortunately for the forces lurking within, the Amaterasu had been blasted into a million pieces, Dana thoroughly obliterating the once-mighty vessel.\n\nSakura spotted movement on the covered walkways that surrounded Mikaboshi's lair. The assassins were more than confident that their lethal skill would be enough to eliminate anyone bold or foolish enough to dare trespassing. She switched to mag-view and sure enough, a half-dozen guards patrolled the rooftop, evenly spaced around the circumference of the closest courtyard.\n\nReaching above her shoulders, she grasped the hilts of her ninjato, drawing the sparkling white blades from their sheaths, and holding them ready. Floating down like some ghostly apparition in her pristine white armour, she gathered her will as she touched the ground behind the first assassin, willing her psychic speed into effect. Her target had no idea she had even landed, when he was impaled through the back by two irresistible white blades. They sheared through his titanium chassis with a shrill shriek, neatly impaling his heart and severing his spine. \n\nSakura placed an armoured boot on his back, tugging out her blades as she kicked off from him. Using the momentum, she backflipped and reversed direction, before running full-tilt at her second foe. The first ninja was already dead by the time he'd started to topple over and the second didn't even have time to react before Sakura was on him, driving her first blade through his temple, the second through his heart. \n\nStartled cries of alarm reached her ears as the rest of the guards reacted, but she was already charging towards the third. A terrifying crack echoed around the mountain top as her blades were rimed in hoar frost, the ice clawing its way up each of her sparkling blades. She heard the low hum as the remaining cyborgs activated their alacrity enhancements, massively increasing their speed as they reacted to her assault. \n\nThe third had only partially drawn his two weapons as Sakura fell upon him, slashing down with her twin ninjato in dual overhead chops that hacked through both cybernetic limbs below the shoulder. She heard his gasp of horror as she pulled back and rammed her swords into his chest, not bothering with any finesse in the location of her strikes this time. Stabbing him through his synthetic gut and piercing a cybernetic lung, she poured the glacial cold swathing the blades into his torso, freezing him where he stood. \n\nAs the flash-frozen cyborg pitched over towards the courtyard on her left, she heard rapid footsteps from behind her. Whirling around, she crossed her swords and blocked the lunging black blades that had been aimed for her back, matching the cyborg strength for strength. Before the shocked ninja could react, she dropped and lashed out with her crystal-Alyssium plated boot, sweeping the cyborg's feet out from underneath him. He crashed to the ground, sliding down the slate roof towards the courtyard below. Sakura pounced on the stunned assassin, driving both blades into his skull as she rode him down the roof like a sled.\n\nHer impromptu ride dropped off the roof like a stone, lifeless cybernetic limbs twitching wildly in his death throes. Sakura leapt clear and used the swirling mountain wind to carry her to the middle of the courtyard, landing lightly and whirling in place to face the last two assassins. They ran at top speed down the slate roof, flipping off the end to spin through the air towards her. She made a sharp gesture towards the one on the right and he yelped in surprise as he was suddenly buffeted by the winds and twisted upside down, his elegantly controlled descent turning into a clumsy headlong dive. \n\nNot bothering to wait until they landed, she sprinted towards his companion, racing underneath him and slashing out with a ninjato as she skidded across the floor. The force of her blow hacked off his leg beneath the knee, sending him cartwheeling sideways with the momentum of that strike, his severed leg sparking as it sailed across the courtyard. Both cyborgs crashed into the ground at the same time, one face-planting straight into the stone floor with a stomach-turning crunch, the other crumpling in an ungainly flailing of limbs.\n\nAs the ninja that had thumped head first into the stone floor stumbled to his feet, Sakura was upon him, her deadly ice-coated swords whirring in a figure-of-eight that carved through metal like a knife through butter. The cyborg's titanium body was flayed just as efficiently as if he'd been made of flesh, his leg slashed right down to the titanium bone, his arm hacked off at the elbow. He lurched drunkenly to one side, just as Sakura's finishing strike neatly sliced through his neck. There was a shrill screech as his head was cleaved straight from his shoulders, rolling through the air as his mangled corpse collapsed in a heap.",
        "There was only one cyborg left, the one-legged assassin trying to crawl away on his hands and knees. He was moving quite quickly considering his crippled state, cybernetic limbs rapidly propelling him across the floor. He covered twenty metres before Sakura caught up to him, impaling him through the back of the head as she sprinted past. The tip of her blade appeared under his chin in a flash of white, having skewered his brain straight through the parietal lobe. She gave the ninjato a savage twist as she pulled it clear, frozen chunks of brain showering out in the wake of her sparkling white sword.\n\nThen the spectre of vengeance was gone, charging deeper into the fortress in a white blur.\n\nIn the courtyard behind her, the third cyborg she'd killed slid off the edge of the roof, then smacked into the solid stone floor. His frozen torso shattered into a thousand jagged pieces that skittered across the ground.\n\n***\n\nRaijin listened in shock as he sprinted along the gloomy stone corridor, the fearful chatter over the comlink ringing in his ears. The brief bursts of warnings ended in shrill screams, or just went deathly silent mid-sentence, which proved even more terrifying. \n\n\"Idaina-sha!\" he called out over the comlink for the third time, but there was still no answer. \n\nHe burst into his Master's dimly-lit enclave, heaving a sigh of relief as he saw Mikaboshi standing by the black gothic throne. Light from dozens of monitors cast a ghostly pall over the Master assassin's face, making his golden-brown features look sickly and pale. The expression he wore was one that Raijin thought he would never see on his impassive Master. A look of fear...\n\n\"We're being attacked, Idaina-sha!\" Raijin blurted out, as he skidded to a halt. \n\nMikaboshi didn't appear to have heard him, seemingly stunned by the shock of having his fortress home invaded. Raijin ran up the steps to his paralyzed Master and grabbed him by the shoulder. \"Someone has attacked! They're killing our men!\"\n\nTurning to face him, Mikaboshi whispered in a tremulous voice, \"The Lion... How did he find me?!\" \n\nRaijin shook his head, replying swiftly, \"I've no idea, Maste-\"\n\nBefore he could finish, Mikaboshi snarled in fury as if seeing Raijin for the first time. Grabbing the fellow assassin by his black jumpsuit, he hauled him off the ground with one hand. \"You fucking cretin! Calara must have had a tracking device inserted! Why the fuck didn't you scan her?!\"\n\nShocked by his Master's abrupt change in demeanour, Raijin frantically shook his head. \"We did scan her! She had nothing on her body or inside her! Nothing!\"\n\nMikaboshi glared at him for a moment then let him go, Raijin stumbling as he was dropped unceremoniously to the ground. \"Rally our forces, coordinate the defences!\" Mikaboshi ordered, more focused now and back to his normal calculating self. \"I will join our counter-strike shortly. I am planning a little surprise for John Blake!\"\n\nGiving him an evil grin, Raijin bowed respectfully. \"Hai, Idaina-sha!\" The assassin darted down the steps and ran for the door.\n\n\"Oh, and Raijin,\" Mikaboshi called out to him, making the assassin skid to a halt and turn back to look at his Master. \"Dispose of the Lion's pet. If I cannot have her, then neither shall he.\"\n\n\"I will do so immediately, Idaina-sha,\" Raijin replied, a malevolent glint in his almond-shaped brown eyes.\n\nMikaboshi watched his underling sprint out of the room and once Raijin was gone, a flicker of fear crossed his face again. He turned and started rapidly tapping on the console, his metallic fingers working as fast as he could type. As he rapidly drained all the funds from his organisation and transferred them to his personal secure account, his eyes couldn't help flicking to the timer in his HUD. \n\n\"6:38\" the countdown read, the seconds slowly ticking down.\n\nThere was a chime to let him know that the transfer was complete and he straightened, a gloating smile appearing on his face. What did the Lion's whore know, anyway? He smiled smugly to himself as he turned away from the console and jogged towards the secret door at the back of his inner sanctum. With Raijin coordinating his forces, his legion of ninjas might buy him a few more minutes to evacuate, but at this point his escape was essentially guaranteed. Being forced to flee from Yomi-no-kuni was a bitter blow, but Mikaboshi hadn't lived to be one-hundred-and-thirty-five by taking any chances. \n\nHe would live to seek his revenge another day.\n\n***\n\nThe Raptor raced lower, punching through the clouds as it swooped in towards the solid rocky face of the mountain top. Placing absolute trust in the information provided by her friends, Jade didn't hesitate for a second as she steered the gunship through the holographic illusion, the mountain disappearing to be replaced by a view of the monolithic stone fortress. She pulled up hard on the stick while hauling back the throttle, retro-thrusters on the front of the gunship flaring as she dramatically slowed their speed. By the time the loading ramp was half-way down, the Raptor had drifted to a halt next to the roof.\n\nJohn ran down the loading ramp, the five remaining girls following hot on his heels. \"We're clear, Jade,\" he said over the team comm, while jogging down the slate roof. \n\n\"Pulling back and providing close air-support,\" she confirmed, the gunship peeling away.\n\nThey had arrived at the rear of the base, on the opposite side to the courtyard that Sakura had landed in after her orbital drop. As the Raptor pulled back, a group of ninjas raced towards John and the girls across the rooftop walkways. Mag-view made the cybernetic ninjas' metal chassis gleam a fierce white, lighting them up like blazing beacons. Alerted by the sudden blast of the Raptor's retro-thrusters, the seven cyborgs were sprinting towards them in a blur.\n\n\"Incoming hostiles,\" John said, over the team's internal comm channel.\n\nHe took careful aim at the closest cyborg, lining up his smart-linked crosshairs with the centre of its torso. The speed compensator arced away from the ninja as it charged across the walkway surrounding the courtyard, moving almost faster than his eye could follow. Sweeping his rifle to his left, John led the target, keeping the reticle squarely placed in the centre of the speed compensator. Squeezing the trigger once, there was an echoing retort as the twenty-millimetre railgun slug was hyper-accelerated towards his target. \n\n\"VrmPkaow!\" the Punisher rifle barked. \n\nThe high-calibre round hit the cyborg dead-centre in the torso, blasting a huge dinner-plate sized hole through its body. The ninja tripped and landed flat on its face, skidding a few dozen metres before sailing lifelessly off the side of the building.\n\nThere was a strangled series of shocked cries from the rest of the ninjas, as Alyssa reach out with both hands and lifted the six remaining cyborgs into the air. They thrashed impotently, their alacrity boosts rendered useless by the tight telekinetic grip pinning them in place. Punisher rifles sang out their glorious song of retribution, the girls having fanned out to either side of John and opening fire on the incoming cyborgs. One heavy slug after another smashed into the ninjas, blowing away limbs, shooting huge chunks from their bodies, or just instantly slaying them by punching through the internal organs in their chest or head.\n\nAs the last of the pack of ninjas collapsed in a twitching pile of cybernetic limbs, John heard the piercing scream of Photon Lasers being fired. Glancing over to his right, he saw that Jade had repositioned the Raptor so that she was flanking the fortress fifty metres below them. Bright blue laser bolts slammed into the mountainside, sundering the concealed Hangar doors with the first shot and causing untold devastation as she raked the interior with the subsequent beams. She opened up with the five turreted Pulse Cannons afterwards, sending a blistering blue hail into the glowing wreckage, targeting anything still moving.\n\n\"Remind me to build another Pulse Cannon for the upper spinal turret,\" Dana said conversationally, following his glance.\n\n\"Will do,\" he agreed, before turning back towards the base before them. \"Alright, let's move out.\"\n\nJohn took a short run towards the edge of the roof and jumped off, using the grav-generators in his suit to steady his descent to the stone flagstones on the courtyard floor. The girls landed lightly beside him, weapons held at the ready as they rushed across the open area towards the double doors beyond. A gloomy corridor behind that doorway led to the quickest way down through the fortress, allowing them to reach the cell where they knew Calara was being held.\n\n***\n\nSakura sprinted deeper into the base, making a beeline for Mikaboshi's inner sanctum. It meant having to rush through the area known as the mausoleum, filled with scores of sepulchres, each small stone room containing a heavy black sarcophagus. This was effectively the citadel's barracks, where the Master Assassin kept his legion of vicious killers until they were needed. \n\nShe rushed through the brooding stone passageways, noting with alarm that every single sarcophagus was open now, the deadly inhabitants presumably loose within the fortress. It didn't take long for that presumption to be proven correct, when she burst into a training area, almost running headlong into a dozen of the black-clad ninjas who were using the room as a rallying point. \n\nMassively outnumbered, she couldn't afford to hesitate for an instant and she stabbed the closest two through their heads before they even knew what hit them. \n\n*Alyssa!* she cried out. *I need more power!*\n\nHer Matriarch channelled more energy into her, making Sakura suck in a sharp breath as her body tingled with throbbing potential. She was ready for it this time and she immediately channelled that energy into the still air within the training room. A whistling wind began to pick up speed, swirling around the room and ruffling the assassins' black garb as she pushed the air to follow her will.\n\nThe cyborg ninjas reacted instantly, low hums sounding like the angry buzzing of a stirred-up hive of bees as they all activated their speed enhancements. They had drawn their swords so quickly that black ninjato seemed to leap into their waiting hands and Sakura was soon fighting for her life in a flashing whirlwind of blades. Her own white ninjato flicked through the air so fast, it seemed like she was surrounded by a white wall as she blocked their attacks. The flurry of blows was relentless, not leaving her time to riposte after each parry and forcing her to swiftly reposition her swords to deflect yet another attack.\n\nThat Sakura was able to keep them from striking her for over twenty seconds was a miracle, but it was one that could not last forever. One of the ninjas had been biding his time, waiting patiently as he watched for the opportune moment to strike, his black sword pulled back in readiness. As Sakura slashed back and forth, parrying each blow with a sharp ringing note, she ducked a swing at her head and blocked a stab aimed at the middle of her back. The patient ninja chose that instant to lunge forward, thrusting his sword at her face with all his strength.\n\nSakura caught the flicker of movement at the last second, twisting aside to avoid being stabbed through the forehead. The blade plunged through her crystal Alyssium faceplate at a sharp angle, narrowly avoiding shearing off her nose, the black sword tip embedding itself into the side of her helmet. With the blade shoved through her visor, her ability to see was completely compromised, and more blows began to rain down on her armoured body. \n\nHowever, Sakura hadn't just been desperately defending herself from attack, she'd been biding her time as well.\n\nThe swirling winds were spinning faster and faster, flying around her with ever greater speed. Those winds found their voice in a crescendo of sound, building to a piercing howl as the maelstrom reached its apex. The assassins surrounding her wobbled unsteadily on their feet, the wind whipping by them like a thing possessed. The ten men looked around themselves in terror, with the sudden realisation that they were standing in the eye of a tornado. The epicentre of calm suddenly contracted, brutally exposing the ninjas to the ferocity of that cyclone. As if plucking up toy soldiers, the whirlwind yanked them off their feet and sent them slamming into sturdy stone walls, battering the cyborgs into insensibility.\n\nSakura pulled her shattered helmet off her head, her long black hair fluttering in the breeze as she looked upon the raw manifestation of her psychic might. The screaming vortex hurled the ninjas around her in excess of three-hundred-miles-per-hour, ripping limbs from torsos until she was being orbited by a jagged storm of metal flechettes. Glancing at the broad set of doors on the other side of the training room, she deflected the flow of the wind, channelling her hail of metal through that doorway. The sounds of screams barely reached her ears over the throaty roar of the wind, the lethal blizzard clearing the passageway beyond. \n\nWith the training room now cleared of... everything... she rushed after the deadly hurricane that was howling through the citadel, eviscerating all in its path.\n\n***\n\nJohn strode into the corridor, glancing back at the girls who followed him into the passageway. He wanted to rush to Calara's side, but he was also worried about leaving the rest of the girls behind.\n\n*Go. I'm here to protect them,* Alyssa replied, sharing a quick glance with him.\n\nTurning to look at the rest of the group, John said, \"I'm going to run ahead to find Calara, keep working your way down to join us.\"\n\nHe slung his Punisher rifle over his shoulder and drew his sword from his back, the magnetic fields holding it in place releasing it to his sturdy grip. Already channelling his willpower, he engaged his psychic speed and sprinted ahead down the corridor, checking the map overlay on his HUD. The staircase down to the next level was ahead and to the right, along two corridors and then into an anteroom which housed the stairwell. \n\nWhen he rounded the first corner, taking a right at the T-junction, he barrelled straight into a couple of ninjas lying in wait. His speed took them by surprise as he slammed into the pair, knocking one flying down the corridor and the other crashing into the wall. John reacted faster than his stunned opponents, bringing his two-handed sword around in a cross-slash that struck the closest cyborg in the chest. His octo-folded crystal Alyssium blade hacked straight through the ninja's titanium torso, cleaving him in half below the sternum.\n\nJohn was already moving on to the next cyborg who flipped up onto his feet, twin ninjato appearing in his black-garbed hands. The assassin made his blades dance in the air, trying to bedazzle his opponent, but John simply lunged forward with the tip of his blade. The ninja had no idea of the colossal strength behind that attack and while he was able to meet John's sword in time with a twin-bladed parry, his ineffectual defence was batted aside. John neatly impaled him through the chest and rammed three-feet of solid crystalline blade through his torso. The ninja gaped down at the sword sticking out from his body, then watched in horror as John took a two-handed grip on his hilt and heaved upwards, freeing his blade and neatly bisecting the cyborg's head in the process.\n\nHis way was clear now and he rushed ahead down the corridor, bursting into the anteroom and bounding down the steps two at a time. Mikaboshi had designed this fortress with defence as his primary concern, rather than for efficiency of movement. Aiming to slow the progress of an assault, he had placed the stairwell down to the next level over on the other side of the complex. John gritted his teeth together with irritation and sprinted along the gloomy cyclopean stone passages, making his way across the level. \n\nHe could hear the bark of Punisher rifles behind and above him, quickly followed by the booming retort of heavy slugs punching through thick armour. Over that cacophony, his sharp ears picked up a hideous synthetic screech, making him wonder what horrific fate had befallen that particular cyborg. Similarly, he could hear what could only be described as a raging hurricane howling through the base, which certainly sounded like Sakura's handiwork.\n\nThe staircase to the next level passed through a large maintenance area, lined with cybernetic body parts hanging from hooks on the ceiling. The floor and assembly tables were also plated in steel, which he could only assume was intended to make the cleanup of oil spillages easier to manage. With mag-view enabled, this repair bay seemed to be a forest of shining white shapes against an equally gleaming background, the metallic objects blurring together into one blinding glare. He quickly deactivated the magnetic resonance imaging, relying on normal eyesight once again. \n\n*Alyssa?* he called out to his blonde Matriarch. *Can you shed a bit of light down here?*\n\n***\n\nAlyssa and the girls walked cautiously down the corridor, wary for the bright gleam of light that would forewarn them of a cyborg assault. As they reached a crossroads, a grating noise sounded from their right and left. Sections of stone wall slid aside, revealing themselves to be cleverly painted metal doors and not the roughly cut stonework they appeared to be.\n\nFour black-garbed men dashed out from each side, rushing forward with swords poised to strike. The Maliri twins were to the right and Irillith reeled backwards, managing to clip the one charging her in the arm with a hurried snapshot, severing his limb at the bicep. Tashana reacted instantly, flipping both pistols to burst fire and unloading on the cyborgs rushing her. \n\nThe first received a three-round burst to the chest, leaving a cavernous hole through his torso as the high-powered slugs punched straight through him. As he began to topple over, the second was hit in the head, cratering his face and liquefying his brain with the force of the impact. She switched to the third at the rear on Irillith's side, hitting him with a deadly salvo of rounds from both pistols that turned him into titanium swiss cheese. \n\nDana and Rachel both fired on the first two that stormed towards them, Dana's rushed shot punching into his leg and literally cutting it out from under him. The cyborg toppled over, thrown off-balance as his limb was blown apart by the railgun slug. Rachel managed to gut the one charging at her, her shot hitting him just above the groin and ripping him in half. \n\nIrillith cried out in pain as the one-armed cyborg lunged forward with his sword, impaling her in the left arm - it was almost as if he was seeking to reciprocate his own dismemberment. She dropped her Punisher rifle and grabbed for his throat, her arm swathed with electricity.\n\n\"Fry, you fucker!\" she snarled, pouring lightning into her assailant and making him jerk and shudder. \n\nElectricity arced over his metal body, the ninja letting out a wordless howl of agony as she cooked him from the inside, lightning scorching his internal organs. The sparking energy crackled along his blade and reached her impaled arm, but her body absorbed it, the electricity dissipating harmlessly. When she released him, he toppled over with a clang, smoke pouring from every orifice, including his melted eye-sockets.\n\nThe last two on the left vaulted over their slain compatriots, swords held aloft as they leaped through the air, ready to plunge them into Dana and Rachel. Suddenly they were hoisted aloft by ghostly telekinetic hands, which started to violently shake them until they dropped their weapons. More ethereal hands appeared, gripping the ninjas securely as they began to twist and wrench their limbs. The two assassins were slammed into each other as the sound of tortured metal filled the air, warring with the two men's screams of horror as Alyssa... merged them.",
        "Dana fired a burst into the first one she'd hit, finishing him off with a headshot, while doing her best to ignore the terrified synthetic screams that filled the junction. Rachel did likewise to the upper torso section of her cyborg, executing him cleanly. Alyssa tossed aside the cube of crimson-stained metal that had once been two angry cyborgs and surveyed the damage.\n\n\"Irillith's been hurt,\" she said to Rachel, walking over to the wounded Maliri girl. She examined the black sword sticking out of Irillith's arm and added, \"Want me to take that out?\"\n\nRachel jogged over to join them, placing her free hand on Irillith's arm and checking her aura. Species: Maliri, severe injury to left bicep, tendons severed, muscle lacerations. The brunette nodded and replied, \"Yes please. That's a nasty wound, I'll heal her immediately afterwards.\"\n\nAlyssa placed her hand on Irillith's shoulder and said sympathetically. \"Are you ready? This might hurt.\"\n\nIrillith nodded bravely, then gasped as the blonde flooded her senses with pleasure. She wobbled on her feet as she let out a low groan, briefly aware of a tugging sensation in her arm. Tashana holstered one of her pistols and helped support her sister, holding her steady.\n\nAs soon as the blade was tugged clear, Rachel acted. She was swathed in a soft grey aura, which she simply shared with Irillith. The severed blue flesh closed, sealing together as the nerves and tendons were re-knitted by the brunette's psychic gift. She smiled with satisfaction when her work was done, peering into the rent in Irillith's armour and only seeing flawless skin beneath. \n\n\"How does that feel?\" she asked the swooning Maliri girl. \n\n\"Amazing...\" Irillith replied with a happy sigh. \n\nAlyssa was about to speak, when she heard John's urgent telepathic request. She glanced at the girls and ordered decisively, *Hold position in this corridor. Tashana, cover the right while Irillith recovers. Dana, the left, and Rachel, watch our back.*\n\nThe girls reacted instantly, moving in one fluid team to crouch in defensive positions around her, weapons trained down the corridors to either side and behind them. Alyssa summoned her will, swirls of psychic energy streaming down her arms to gather around her clenched fists. While that aura was gathering in brightness, she peeled off her spirit form and leapt away from her body.\n\nIn the Astral Plane, living creatures shone with their own inner radiance, something that the lifeless world surrounding them did not possess. Cybernetic organisms possessed that spark of life too, even though it was now encased in a cold, hard, metal shell. Racing through the fortress as an astral projection, she was able to scour the base in the blink of an eye, tearing from one room to the next and hunting out the living.\n\nAlyssa didn't need to get a snapshot of their minds as she had in the Underworld, separating the innocent from the guilty - there were no innocents here. This was a nest of vicious killers, each and every cyborg a trained assassin responsible for multiple murders. She simply tagged them all as she swept by, preparing them for the psychic wave she was about to unleash. The last living soul she found was hurrying down subterranean passageways, deep in the bowels of Yomi-no-kuni. Her ethereal fingers flexed with fury when she saw him, wishing she was close enough to exact a terrible vengeance upon Mikaboshi for his audacity in stealing away her lover. Instead, she tagged him as she had the others, then soared back to her body, letting the astral cord draw her home.\n\nHer eyes blazed with an incandescent radiance as she crouched and touched her fists to the stone floor, sending out the sweeping pulse that would locate all their foes. Rippling waves of light surged outwards, briefly illuminating the corridor in both directions before disappearing off into the murky distance.\n\nShe rose to her feet, her fists still swathed in a roiling miasma of eldritch energy. *You can switch to normal vision now, girls,* she said to her cohort of beautiful women. *Let's move out.*\n\n***\n\nMikaboshi smiled to himself, wishing that he'd been able to see the look on John Blake's face when he found Calara lying slain on the operating table. It wasn't the elaborate revenge that he had hoped for, but it would be a start. The Lion had plenty of other Lionesses and Mikaboshi could always abduct more of them. Yes, he could torment John Blake for years, stretching out his revenge for the indignities the man had heaped upon him.\n\nThe thought of having to start again wiped the smug grin from his face and he snarled in bitter frustration to see his life's work being brought low in such a manner. Still, he had access to the vast fortune he'd acquired over nearly a century of misdeeds, enough to let him rebuild five times over. More importantly, he had at least another several decades left in the nurturing life-support of his cybernetic body. He would start again, activating one of the numerous contingency plans he had prepared for just this sort of eventuality. Yes, it was hugely inconvenient, but within a year, he'd be back with another horde of loyal killers at his command. He'd make better preparations next time, construct a harder-to-find base, be more rigorous in-\n\nA pulse of light swept past him, disrupting his scheming, six white lines rippling over his body as it rolled down the corridor. Mikaboshi acted in an instant, activating his nanoweave suit, enabling his alacrity enhancements and crouching low, wary for danger.\n\nHis enhanced audio picked up some kind of faint whistling noise, like wind howling through a distant mountain ravine. There'd been explosions earlier, so perhaps a hole had been torn in the side of the base far above his head and the mountain wind was blustering through. It was the only explanation he could think of. \n\nLowering his gaze, he shrugged and prepared to move on, deactivating his speed enhancement to avoid burning out the actuators. He left his nanoweave suit engaged though, the light-bending rays concealing him from sight...\n\nA bright red glow caught his eye and he glanced down at his right hand, abruptly doing a double-take as he stared at it in shock. His fingers were limned in a blazing scarlet aura, which he mistook for flames at first, frantically patting his hand down in an attempt to extinguish them. That proved completely ineffective and it was at that moment that he realised his other hand was swathed in the same crimson shroud. \n\nThe ethereal lights surrounding his body seemed completely unaffected by the nanoweave suit, and he felt a shiver of fear as he realised how vulnerable he was in this state. He couldn't help glancing at the timer in his HUD.\n\n\"4:32\" \n\nChastising himself for being ridiculous, he reminded himself that he didn't believe that impertinent woman's soothsaying for one moment. Mikaboshi hurried along the corridor, his fear making him move just that little bit quicker despite his bold claims to the contrary. He just had to reach the emergency hangar and the cloaked shuttle there, then this nightmarish day would be over with.\n\n***\n\nJohn watched as the broad pulse of psychic energy swept through the repair bay ahead of him, Alyssa's response appearing only a couple of seconds after his call for assistance. Half a dozen figures blazed to life, the ambushers previously concealing themselves by skulking in the shadows amongst the racks of hanging cybernetic body parts.\n\nRaising his left hand, John channelled a surge of energy into a wall of telekinetic force, hurling the five-metre-wide wave at the hiding assassins. There was a huge booming crash as the glowing blue wall swept all before it, knocking golden-brown limbs aside and blasting the ninjas backwards. He charged after them as they cartwheeled through the air, reaching them as they slammed into the wall amongst a tangle of spare limbs. His long blade rose and fell, hacking them apart before they could react, the assassins still lying stunned by the thunderous impact with the wall. \n\nAs he sprinted from the room, John grimaced at the unnecessary delay, deeply worried as he was about Calara. Having to clear the room of ambushers had taken nearly ten seconds.\n\n***\n\nThe doctor had left the operating room shortly after Mikaboshi had fled, leaving Calara still lashed to the table. She glanced around herself, looking for anything she could use to escape from captivity, but everything was well out of reach of her fingers. Taken prisoner after an evening out at a nightclub, she was still wearing the short backless dress that she'd chosen -- intended for dancing, not stowing away handy items she could utilise to escape. Unfortunately, her options were rather limited.\n\n*Are you alright?* Alyssa's concerned voice asked, filling her mind. \n\nCalara sent her a reassuring telepathic smile. *Mikaboshi took off like a frightened rabbit. I think his surgeon got bored, because he also left a few minutes ago,* she replied, resting her head back on the metal operating table.\n\n*John's rushing to you now and the rest of us are following,* Alyssa replied, her sense of relief warring with her towering rage. *We just found our way down to the level two above yours, but we'll be with you soon.*\n\nCalara smiled, eager to see John again. *Okay, I'll try not to wander off and get lost.*\n\nAlyssa's laughter echoed through the Latina's mind and she was pleased to feel her girlfriend's mood lighten somewhat over their empathic bond. Such pleasant thoughts were rudely interrupted by the sound of the cell door being thrown open, someone padding into the operating room.\n\nThere was a moment's pause until she was suddenly aware of the man standing to her right, his face looming above her. \"We meet again, Calara Fernandez,\" he said, a dark glint to his brown, almond-shaped eyes. \n\n\"I'm sorry, I have no idea who you are,\" she replied with an apologetic smile.\n\n\"My name is Raijin and I shall be the one that ends your life,\" he declared, brandishing a sinister black ninjato. \n\n*Stall him, get him away from you!* Alyssa cried out in alarm.\n\nGiving the Latina a twisted smile, he added, \"You killed my friend and I wanted you to know his name before I-\"\n\nCalara loudly cleared her throat, interrupting him mid-sentence. \"I'd love to hear all about him, but could you do me one favour? Consider it my last request?\"\n\nEyes narrowed in suspicion, Raijin asked, \"Are you begging for mercy? It is pointless; there will be none.\"\n\nShaking her head, Calara tilted her head up a bit so that she could glance at the door. \"Can you just stay exactly where you are for five seconds? You'll see why in a moment.\"\n\nRaijin's eyes widened in alarm, and he rushed across the room to hug the wall to the right side the doorframe. Drawing his second ninjato, he was poised and ready, fully prepared to ambush anyone coming through the door. \n\nJust as Calara predicted he would react.\n\nHigh above them on the second level of Mikaboshi's complex, Alyssa's face contorted with rage. She spun in place, her feet lifting off the ground as she was bathed in a tumultuous swirl of eldritch power. \n\n*Avert your eyes,* she cautioned the girls, her words of warning echoing with the eerie reverberation of a second voice. \n\nA low hum filled the air, growing louder by the second as a vast seething ball of energy appeared before her outstretched fists. Powered by her fear for her lover and hate for the monsters who had taken her, the orb blazed like a supernova, throbbing in time to her heartbeat.\n\n\"LEAVE HER ALONE!\" Alyssa screamed, unleashing the twisting vortex of pure destructive force. \n\nA huge beam of energy blasted outwards, scything through floor after floor, disintegrating everything it touched. In the operating room, the radiant beam blazed through the wall in a coruscating lance of eldritch power. Raijin's upper body was hit mid-torso by that beam, instantly consuming him in the brilliant flash of light. When the beam winked out a few seconds later, there were a few glowing motes still hanging in the air as Raijin's legs toppled over, everything above his waist completely obliterated.\n\n*I'm okay!* Calara told her lover a second later, her ears ringing from the keening blast that had annihilated the man threatening her.\n\nAlyssa dropped to the ground and sagged to her knees, panting with the exertion. While the Maliri twins watched for attackers, Dana and Rachel rushed to her side.\n\n\"Are you alright?!\" Rachel asked in alarm, touching Alyssa's arm and reading her aura.\n\n\"Got to protect you girls, keep you safe...\" Alyssa murmured between laboured breaths.\n\nDana patted her friend on the shoulder and gazed wide-eyed down the broad tunnel that had just been cored through the fortress. She grinned and said cheerfully, \"Now we don't have to bother finding the stairs!\"\n\n***\n\nSakura sprinted at full speed down the corridor, winding through the catacomb of tunnels as she made her way to Mikaboshi's sanctuary. She'd let her metal-infused hurricane peter out, having not run into any more ninjas as she rushed through the citadel. When she bounded into his inner sanctum, she found it empty, the dozens of monitors in there casting a pale glow over the vacant gothic throne.\n\nShe'd expected that, knowing that Mikaboshi would be capitalising on the chaos of their assault to safely escape. Without pausing, she rushed across the room to the partially open doorway at the back of his throne room. Charging through the portal, she continued down the long tunnel behind it, following the curve downwards as it descended into the depths of the mountain.\n\nAlyssa had found Mikaboshi only minutes earlier, so Sakura knew exactly where he was. Accelerated by her psychic speed, she rapidly closed the gap on her former enslaver, determined to prevent his escape. There were no branches off this tunnel, as it was an emergency escape that spiralled all the way down to the base of the mountain. \n\nWhen the tunnel finally levelled off, Sakura could see lights further up the passageway, dim illumination coming from the room up ahead. When she reached the end, she saw that the tunnel opened out onto a metal gantry, which overlooked a large hangar. In that hangar was a black shuttle and scurrying towards that vessel was her target. \n\n\"Mikaboshi!\" she screamed in challenge. \"Face me!\"\n\nThe black-clad assassin whirled around, shocked by the sudden shout from an interloper in his secret escape tunnel. His first instinct was to activate his nanoweave-mesh suit and run for the shuttle, but dancing red lights still flickered around him, making such an escape impossible. \n\nHe couldn't see the woman clearly from down there, but if she wished to die that much, he would dispose of her then make his escape. Drawing both of his black ninjato, he tilted up his chin and snarled, \"If you wish to be slain, I am more than happy to oblige! Make it quick as I have pressing business elsewhere.\"\n\nSakura leaped over the handrail surrounding the gantry, her eyes glowing as the wind whipped around her, making her long black hair swirl over her shoulders. She descended gracefully, invisible zephyrs of air cushioning her descent as she sailed down to the deck.\n\n\"Shinatobe!\" he gasped in wonder, gazing at the vision of perfection held aloft by the winds, the elements obeying her every command.\n\nSakura's eyes narrowed in fury and twirling her twin ninjato in her hands, she hissed, \"Now you die, Mikaboshi!\"\n\n\"No, wait!\" Mikaboshi blurted out, dancing back a couple of steps and sheathing his swords, before raising his hands defensively. He performed a sweeping bow and continued in a reverent tone, \"I pledged my life in service to you, Shinatobe! I tried to recreate your image in tribute, but the girl's flesh was too weak to mirror your glorious majesty!\"\n\n\"That was me, you fucking lunatic!\" Sakura screamed in rage. \"You took everything from me! My parents, my whole life! Just so you could play your sick games!\"\n\nMikaboshi gaped at her in shock. The girl's face... it did look familiar... so achingly beautiful. She WAS the one he'd chosen out of hundreds-of-thousands! The girl he'd picked to become his avatar of Shinatobe. \n\nHe smiled as he waved his hand dismissively. \"What's in the past is done and best forgotten. Accept my apology and we can work together!\"\n\n\"You say you're sorry and you think that's the end of it?!\" Sakura balked, staring at him in utter disbelief. Her face twisted in outrage as she snarled, \"Do you have any idea the debt of pain I owe you?!\"\n\nMikaboshi met her furious gaze and said with an eager grin, \"Just think about it! With you and me united in purpose-\" \n\n\"The only thing we'll be uniting is my sword with your black heart,\" Sakura snarled defiantly, advancing a step.\n\n\"But we could be as gods!\" Mikaboshi pleaded, desperate for her to understand. \"There's nothing we couldn't achieve with you standing at my side!\"\n\nSakura drew herself up and looked at Mikaboshi with utter contempt. \"You pretend to be a god, with your metal coffin for a body and by copying the name of a long-forgotten deity. You have no idea who John Blake is, do you?\"\n\n\"John Blake?\" Mikaboshi sneered in annoyance. \"What does that fool have to do with anything?!\"\n\n\"He's as close to a god as this galaxy has seen in ten thousand years,\" Sakura whispered, advancing slowly. \"He healed my body, undoing everything you'd inflicted on me, then gave me gifts beyond your wildest dreams...\" Her blades frosted over as she sheathed them in ice, a splintering crack echoing around the hangar.\n\nMikaboshi stumbled backwards, his eyes fixed on those glacial blades, tiny ice crystals drifting down from that bitter cold in an icy flurry. He glanced at Shinatobe's face and saw the unvarnished hate in her answering glare, that look more chilling than the frozen ninjato she wielded. There was no mercy in those enchanting almond eyes, no matter their breathtaking beauty.\n\nWith a wordless cry of bitter frustration and rage, he yanked his swords free. To think that he was this close to claiming his beloved Shinatobe after all these years, only to find she'd been stolen from him, usurped by John Blake. This was worse than any torment he could have ever imagined! His heart ached with a profound sense of loss, knowing that even should he escape, his life would be a empty facade, never able to recreate a creature as perfect as the one now intent on killing him.\n\nStill, if he couldn't have her, then neither would John Blake!\n\nMikaboshi activated his alacrity enhancements, moving in a blur. He leapt forward, slashing out towards the beautiful girl with both blades. While this Shinatobe might have command of the air and the ice, that was still no match for raw spe-\n\nTwo ringing blows echoed out across the room as Sakura met his blows with her own blades, her glistening white ninjato moving as quick as the wind itself. \n\nMikaboshi stared at her in shock as the two sets of swords clashed, the girl possessing freakish strength, more than a match for his own hydraulically-enhanced frame. Sakura's eyes sparkled in the light and she shoved at his blades, forcing him back a step. Moving on the assault, her swords started chopping and stabbing in a whistling hail of blows. \n\nHe had never seen anyone move so fast! She was moving at a speed that rivalled his own and his cybernetic body had been augmented with state-of-the-art upgrades, making him quicker and stronger than any of his lackeys. He staggered backwards, his arms whipping back and forth as he struggled to fend her off. \n\nAlthough Sakura was sorely tempted to summon another tornado and smash Mikaboshi into a million metal pieces, that felt impersonal somehow. She wanted to beat him at swordsmanship and really grind his face in his defeat, besting him at something he prided himself on. Putting into practice everything she'd learned over the long weeks spent in intensive training with John, she showed Mikaboshi the limitations of the skill chips he used to hone his technique.",
        "In a bewildering array of improvisation, she mixed in a confounding mix of feints with her parries and ripostes, lashing out at Mikaboshi every time he fell for one of her deceptions. Her blades struck home again and again, gouging out chunks of his synthi-flesh as they danced across the hangar. A slice to his left arm, a slash across his right leg, a stab to the gut, a chop to the shoulder; the hits came thick and fast as she flayed his metallic body. \n\n\"You're doomed,\" she whispered under her breath, as she raked her right blade over his left hand and severed his little finger.\n\nMikaboshi stared at her with wild eyes, frantically trying to defend himself against her remorseless barrage of attacks. Normally, he preferred to be on the offensive, striking hard and fast to eliminate a foe before they knew what had hit them. But against Shinatobe... she seemed to know what move he was making before he'd even started it, tickling him with her razor-sharp blades every time she anticipated and countered his attack. \n\nHis heart was pounding in his chest, icy tendrils of fear clawing at him as he finally understood how outmatched he was. Mikaboshi realised he only had one chance, and he stumbled backwards, pretending to have been overbalanced. As this frenzied woman pursued him, he knocked both her swords out wide, then suddenly charged forward, dropping his blades as he lunged for her exposed face. \n\nSakura was forced to drop her own swords and grab for his wrists as he pounced on her, Mikaboshi too close now to be able to protect herself with her ninjato. He knocked her backwards with the impact of his wildly unpredictable bull-rush, and he fell on her, his nine-fingers only inches away from clawing her beautiful, flawless skin. \n\nShe grinned evilly at him now, her armoured hands radiating the cold of the grave. Ice began to form around his wrist, spreading outwards as she sucked all the warmth out of the air. \n\nMikaboshi's cybernetic limbs felt sluggish and unresponsive as the hydraulic oil inside froze, paralysing his arms just as effectively as if they'd been made of flesh. He looked at her in horror as she clamped down with all her strength, shattering both limbs at the forearms. For a second he toppled over onto her, until she shoved him away to land on his back with a clang. He tried to react, but she pounced on him, straddling his chest and pinning him to the deck.\n\nGesturing behind her, the wind picked up, whisking her two swords into her hands. She raised them high overhead as Mikaboshi shrieked in terror, knowing the moment of his death was upon him. Sakura slammed the blades down, driving them through both his shoulders and impaling him to the ground. He was utterly helpless now, staked out on the hangar deck by the swords shoved through his body.\n\nSakura leaned back and closed her eyes, taking a deep breath before exhaling slowly. \"You don't know how long I've waited for this moment,\" she murmured, when she reopened her eyes. They glinted with anticipation as she added, \"Oh wait, you should know exactly how long... It's been seventy-five years since I was kidnapped, raped, and tortured.\"\n\nMikaboshi was wracked with fear as he gaped at her. \"Wait, we can-\"\n\n\"We'll forgo the kidnapping, and the rape is too hideous to contemplate... but torture, that one has promise...\" she crooned, staring into his eyes. \"Do you remember what you told me, that first day we met?\"\n\nHe could only shake his head, staring at her in terror.\n\n\"You'll forgive me if I paraphrase,\" she said, leaning down to study his petrified face. \"My name is Sakura Honami, but you may address me as Justice, which means you're totally fucked.\"\n\nBefore he could respond, she gripped his head with both hands, ice spreading out from her fingertips and chilling his titanium skull. He shivered uncontrollably as she froze his cranium, the cold seeping through to his still-human brain beneath. Reaching for something on her belt, she pulled it free and held it in front of his terrified eyes. \n\n\"You see this?\" she asked him, letting the metallic object catch the light. \"I made it from the cybernetic implant you shoved in my brain. I thought since you like cybernetics so much, you might like it back.\"\n\n\"Sakkk-urra, waaittt....\" Mikaboshi stuttered, his voice modulator juddering with the ice seeping into his skull. He watched her draw back the thin steel blade, but his eyes were suddenly drawn to the countdown in his HUD.\n\n\"0:02\"\n\nRaising the dagger above her head in both hands, Sakura screamed out her release, letting go all her hate and grief as she stabbed down, plunging the blade through Mikaboshi's cranium. The metal was incredibly brittle after being exposed to such intense cold, and it offered no resistance as she drove her dagger up to the hilt in his frontal cortex.\n\n\"0:01\"\n\nMikaboshi juddered a couple of times, then lay still, his body now lifeless beneath her.\n\n\"0:00\"\n\nSakura's shoulders sagged and she began to sob, tears rolling down her cheeks as she wept.\n\nJohn strode across the hangar, then knelt beside her. \"Everything's going to be okay now, honey,\" he murmured, pulling her into his arms.\n\nShe leaned into his embrace, crying softly with the release of decades of pent up emotion. With the hate purged, she felt hollow now, emptied out after finally achieving her vengeance. He whispered comforting words in her ear, stroking her hair as he told her how wonderful she was.\n\nSakura pulled back a moment and a look of guilt and shame crossed her face. \"How much did you see?\"\n\n\"Most of it,\" John admitted. \"Alyssa and the girls got to Calara before I did, so I came after you. There was no way I was going to risk letting you get hurt, not if I could help protect you. I would have stepped in if you needed my help, but you never did, not for one moment.\"\n\nShe heard the pride in his voice and she gazed into his eyes in confusion. \"How can you be proud of me after what I just did? I could have captured him, handed him over to the Terran Federation to stand trial.\"\n\n\"Be completely honest with me: I won't judge you whatever you say,\" he said, gazing into her eyes while still holding her tight. \"Considering everything Mikaboshi had done, would a trial have felt like justice to you?\"\n\nSakura glanced at the frozen corpse beside her, then slowly shook her head. \"No. He got what was coming to him.\"\n\n\"For what it's worth, I agree,\" John said, nodding firmly. \"All that matters to me is you and that you got what you needed to move on. But know this: He'll never blight anyone else's life. You've avenged the thousands he and his men killed, and saved the lives of thousands more that he would have kept on killing.\"\n\nShe smiled at him, reaching up to brush his cheek. \"Thank you...\"\n\n\"Thank me later,\" John replied, returning her smile and lifting her from his lap. \"We still have work to do...\"\n\nHe replaced his helmet and they walked out of the Hangar, not giving Mikaboshi so much as a backwards glance.\n\n***\n\nSarutahiko crawled out of the burning hangar, both his legs completely severed mid-thigh. He'd been speaking to one of the techs when the hangar door had been blasted inwards and the entire bay seemed to explode in an orgy of destruction. The shuttle he'd been standing next to had been struck by some kind of beam weapon, blowing it apart in an instant and while the tech had been ripped apart in the explosion, it had merely knocked Sarutahiko flying.\n\nNormally he would have considered being caught in any kind of blast to be extremely bad luck, but being thrown clear actually saved him from being completely obliterated in the subsequent salvo of beams. He hadn't escaped unscathed though. It was one of those lances of blue energy that had vaporised his legs, leaving him staring at two glowing stumps when he'd recovered from being hurled across the hangar.\n\nAfter that, he'd listened in growing horror as his fellow assassins had been torn apart. First there were reports of some white-armoured girl massacring the guards, then frightened talk of a group of soldiers running through the base gunning down operatives. Someone had even reported that the Lion was here and it was he leading this massacre. \n\nWhat had started as a spirited defence of Yomi-no-kuni had turned into a rout and now the survivors were being hunted down. One terrified voice after another went silent as the band of assassins were exterminated to a man. It seemed that no matter where they hid, they were ferreted out, but Sarutahiko had a plan. He knew Mikaboshi had an emergency escape route out of the fortress. All he needed to do was-\n\n\"VrmPkaow!\"\n\nCalara lowered her Punisher rifle and nodded with satisfaction. She'd hit the crawling cyborg in the head, blowing it clean off his shoulders.\n\n\"Nice shot,\" John said, patting her on her armoured shoulder. \n\nThe girls had immediately evacuated Calara back to the safety of the Raptor. She had pleaded to be included in their cleansing of the base, so once John had agreed, Jade ferried the Latina up to the Invictus to don a suit of Paragon Armour and collect a Punisher rifle. When she returned, she brought a replacement helmet for Sakura and with everyone fully armoured, they had begun scouring the base of enemies.\n\nDana grinned at the Latina as she studied the mangled remains of the cyborg ninja. \"That's the last of 'em. Faye just swept the place with an active scan and there's no more life signs, apart from us that is.\"\n\n\"Alright, let's head up and rejoin the others,\" John said, turning and walking back down the gloomy tunnel they'd just arrived by. \n\n\"I spotted a ton of cybernetic parts in one of the rooms on the second level,\" Dana said, bouncing along the corridor in her excitement. \"Can we do a load of 'requisitioning'? I'd like to see what makes these guys tick.\"\n\n\"For Faye?\" Rachel asked, walking alongside the redhead. \n\nDana nodded enthusiastically. \"Yep!\"\n\nCalara shot her an uncomfortable glance and her voice was quiet as she said, \"I'm not sure we want to be reusing cybernetic parts from trained killers. It seems... wrong.\"\n\n\"I'll just take a peek and see what I can learn,\" Dana replied, giving the Latina a reassuring smile. \"Then I'll just space all this junk and make an improved version for Faye!\"\n\n*We've found Mikaboshi's stash of high-grade cybernetic parts,* Alyssa said, speaking to them all telepathically. She hesitated for a moment, then added, *Sakura said he was equipped with more advanced cybernetics and that she's fine with us taking back pieces to study, but I'd rather not bring any reminders of what she's been through. Especially not when everything's still so raw.*\n\nJohn nodded, a sympathetic expression on his face. Turning to look at Dana, he added, \"We could go to the armoury right now so you can take a look. How long do you think you'll need to research the cybernetic parts?\"\n\n\"I can memorise everything I see, so it's really just a case of taking some bits apart to see how they work,\" she said with a shrug. \"A few hours should do it.\"\n\n\"Alright, let's go then,\" John said, before putting his arm around Calara. He squeezed her gently as they walked in step together. \"How are you holding up?\"\n\n\"I'm expecting an adrenaline crash at any moment,\" she replied with a tired smile. \"But thank you for letting me be part of the cleanup operation, I really appreciate it.\"\n\nHe returned her smile. \"You're welcome. It was actually very helpful having another skilled marksman on the fireteam.\"\n\n*And better for her to remember these bastards fleeing like rats as we cleaned house,* Alyssa said fiercely, speaking only to John.\n\nHe didn't visibly react to her words, but he thought back to his blonde Matriarch, *Yes, exactly, that's why I allowed it. The last thing I want is for Calara to start having nightmares or flashbacks from being held captive. This should help her put it all behind her.*\n\nIt didn't take long to reach Mikaboshi's armoury and Alyssa was waiting for them when they arrived. She was standing by a huge vault door that had been smashed open, the reinforced portal now lying flat on the floor, having been battered off its hinges. When she saw them, she rushed over to hug Calara tightly.\n\nJohn glanced at the door and asked, \"Wasn't Irillith able to open that for you?\"\n\nAlyssa smiled at him and shook her head. \"She's busy in Mikaboshi's inner sanctum. I had fun bashing my way in though, so I was in no hurry to drag her over here.\" \n\n\"Has she found anything interesting yet?\" he asked, watching as Dana stepped through the portal, her eyes wide like a kid in a candy store.\n\n\"A few things actually,\" Alyssa replied, as she walked over to the armoury with Calara, her arm wrapped around the brunette's waist. \"I'll keep an eye on the girls if you want to go take a look. Tashana and Sakura are with her.\"\n\nHe nodded and waved the girls goodbye, before striding away down the passageway. Irillith had marked important locations in the base on the HUD overlay and Mikaboshi's armoury wasn't far from his inner sanctum. John found the door thrown open to the throne room when he arrived, with three armoured girls gathered around the monitors.\n\nIrillith was sitting quietly on the throne, a serene expression on her face as her glowing violet eyes darted between monitors. There were thirty monitors in here and sixteen of them were rapidly sifting through data as the Maliri hacker scoured Mikaboshi's computer systems. On the remaining fourteen monitors, pictures and information appeared as she found anything pertinent or interesting.\n\nTashana stood protectively beside her sister, watching in fascination as her twin dredged up every dirty secret that Mikaboshi had been hiding. Sakura was on the opposite side of the throne, hugging herself as she stared at the glowing monitors. \n\nJohn strode over to the troubled Asian girl. \"What's the matter?\" he asked, putting his arm around her.\n\n\"Look,\" she whispered, nodding towards the screens.\n\nHe turned around to join her in staring at the monitors. Ten of the fourteen screens were flicking through what appeared to be personnel files, cycling through the pictures of scores of men, along with their criminal records. All of them were known felons, with extensive and brutal histories of criminality before they'd been recruited by the Master Assassin. \n\n\"Mikaboshi kept meticulous records,\" Irillith informed him in a detached, distracted tone. \"By Terran standards his digital security was extremely robust, so he must have felt safe in retaining all this information. All his data archives are on an internal network with no external connectivity, but I've created a bridge and I'm uploading everything to the Invictus.\"\n\nJohn glanced at her, watching as her eyes flicked back and forth. He'd assumed she was looking at the monitors at first, but it was apparent now that she was looking into the cyber-realm. \"I take it his security didn't give you too much trouble?\"\n\nIrillith just raised an eyebrow and smiled. She paused for a moment, blinked, then turned to look directly at him. \"Would you like to see what Mikaboshi looked like? His real face that is?\"\n\nJohn glanced down at Sakura and when she nodded, he gestured at the bank of monitors. \"Sure, let's see.\"\n\nThe central four monitors went black for a second, then flickered and were replaced by a man's face. He had mousy brown hair, pale skin, a narrow nose, and beady eyes that had a wary cast to them - like he'd spent most of his life being hunted.\n\nJohn gaped at the picture in shock. \"He wasn't even Asian!\"\n\n\"None of them were,\" Sakura said quietly. \"I was the only one...\"\n\n\"His name was Dominick Hooper, born May 15th, 2644,\" Irillith informed them, bringing up his criminal records on the adjacent two monitors. \"He worked as a hitman for years and was the prime suspect for dozens of crime syndicate murders. There were a number of outstanding warrants for his arrest when he disappeared in 2686. It was assumed he'd been killed by a rival.\"\n\nJohn shook his head in amazement. \"That must have been when he adopted this 'Mikaboshi' persona.\"\n\n\"That's correct,\" Irillith confirmed, bringing up a picture dated September 7th 2687. It showed the golden-brown face of a handsome Asian man, who looked delighted as he grinned at the camera. \"That was taken after his full-cyborg conversion. He made scores of upgrades to that chassis in the decades since then.\"\n\nSqueezing Sakura's shoulder, John said quietly, \"Have you found any reason why he did that to himself?\"\n\n\"There's extensive data in here regarding ancient Japanese culture, Shinto mythology, and tens-of-thousands of images of young Asian women,\" Irillith said, glancing at Sakura with sympathy in her eyes. \"The pictures weren't of models, they appear to be normal high-school girls, the timestamp dating them back to 2703. I've been running a search algorithm on a hunch and it just found something.\"\n\nJohn nodded, giving her permission to proceed. The four central monitors swept clear, replaced by a very familiar, very beautiful face.\n\nSakura let out a shocked gasp and took a faltering step forward. \"I remember when that was taken! It was for the yearbook when I graduated from High School...\"\n\n\"He picked you for his 'Shinatobe project' out of a huge number of Asian girls,\" Irillith said, a bleak expression on her face. \"I'm really sorry.\"\n\n\"I thought it was all my fault...\" Sakura murmured in shock, gazing at the picture of herself taken when she was eighteen-years-old. \"That I'd just been kidnapped because I'd been foolish and gullible enough to walk into their trap.\"\n\nIrillith slowly shook her head. \"If their initial plan failed, Mikaboshi had ordered the men abducting you to kill your parents and capture you when you returned home. He provided them with at least a dozen other contingency plans - they wouldn't have stopped trying until they'd successfully kidnapped you.\"\n\n\"By stopping to help that man with the broken hover-car, you actually saved your parents' lives,\" John said gently, pulling Sakura in for a hug. \n\nShe just leaned against him, too stunned by these revelations to reply.\n\nMeeting Irillith's sympathetic gaze, John asked, \"Have you found out anything else?\"\n\n\"Mikaboshi had an emergency evacuation plan which he triggered when we assaulted his base. He diverted funds from dozens of accounts into one private, highly-secure account,\" she replied, the monitors flickering in front of them before they showed account details and bank transfers. Giving him a smile of satisfaction, she continued, \"I've diverted the entire balance into a new account which we can use as a victim reparation fund. I've started identifying surviving relatives of all his victims and can allocate payments accordingly.\"\n\n\"That's excellent work,\" John replied, looking genuinely impressed with her initiative. \"You're right, that's exactly what I'd have wanted to do with his money. How much is there anyway?\"\n\nIrillith's eyes flicked to the central screen, which immediately displayed a bank balance. \n\n\"Holy shit!\" John exclaimed, staring at the number in shock. \"He had over three-hundred-million credits?!\"\n\nShe nodded, her eyes darting over to a scrolling list of payments next to the names of victims. \"He was a prolific hired killer before he effectively retired and started up his stable of assassins. Sakura was the first, but she was the only one forced into this. The rest were recruited and all volunteered for full-cyborg conversions. Between them all, they've completed thousands of contracts.\" She gave him a wolfish look as she added, \"Do you want to see who paid for your assassination?\"\n\nHe blinked at her in surprise, then nodded, his eyes narrowing. The scrolling list of contracts stopped on his own name, the file expanding to provide details on the contract, including the date it was created, how much was paid... and who instigated all this trouble.",
        "\"That fucking bastard!\" John swore vehemently, glaring at the name.\n\n***\n\nJade dipped the nose of the Raptor as she brought the gunship in towards the centre of the stone courtyard. At the last moment of her rapid descent, she feathered the retro-thrusters, bringing the glossy white ship down to land on the cold stone without so much as a tremor.\n\nJohn led the group of weary girls up the loading ramp, then stood aside to let them pass, sharing a tired smile with each of them as they boarded the Raptor. Sakura was carrying a pair of black ninjato with her and he nodded to her in gratitude as she boarded. When the last of them had entered, John hit the button to start closing the ramp. \"We're all aboard now, Jade. Let's go home,\" he said, over the team comm. \n\n\"I'll have you back in just a couple of minutes. Then you can get some sleep,\" she replied, hearing the weariness in his voice.\n\nJohn glanced at the chronometer in his Paragon Armour's HUD. It was nearly six in the morning, and a good sleep sounded perfect. They didn't bother leaving the forward loading room, knowing that Jade would soon have them back aboard the Invictus. Just as she'd promised, the loading ramp opened again only a couple of minutes later, revealing an anxious purple sprite waiting for them in the Secondary Hangar.\n\n\"Is everyone alright?\" she asked, her luminous eyes darting over John and the girls searching for injuries. \"I heard Irillith had been hurt!\"\n\nIrillith was walking down the ramp behind John and she shook her head. \"I'm fine, Faye. There's nothing to worry about,\" she said, giving the elfin girl a reassuring smile. \"Rachel had me as good as new in no time.\"\n\n\"Any problems while we were away?\" John asked, stopping beside the fluttering purple sprite.\n\n\"Nothing to report!\" she replied, looking immensely relieved to hear they were all unscathed. \"No vessels managed to escape from Mikaboshi's base and your guest is still fast asleep.\"\n\nJohn smiled at her in gratitude. \"Thanks for keeping an eye on things for us up here. I really appreciate it.\"\n\n\"We'll be able to show you how much soon!\" Dana said with a broad grin. \"I'm going to make a start on your new body when we're on holiday. Irillith said she'd write all the sensory input code for me, so you're going to be in for a wild time when we're done!\"\n\nFaye looked overwhelmed with excitement and her big eyes got even larger when she turned to gaze at John.\n\n\"I haven't forgotten you wanted to speak to me,\" he said, giving her a look of apology. \"If it's alright with you, we'll all get some rest, then wrap things up here. Once this business is dealt with, you can have as much of my time as you want. Does that sound okay?\"\n\nShe nodded, gazing into his eyes and suppressing the flicker of worry she felt. \"Yes, that's quite alright!\"\n\nThe crew walked across the hangar hand-in-hand, except for John, who put his arm around Sakura as she fell into step beside him. She glanced up at him and gave him a weary smile, feeling emotionally drained after everything that had happened. Alyssa and Calara were in the lead, so the blonde Matriarch pressed her hand against the hidden panel in the wall. The DNA reader flashed green and the concealed door opened, revealing the rapid grav-tube up to the Combat Bridge. After being swept up to the armoury, everyone stowed away their weapons, then stepped into the armour equipping frames to remove their Paragon suits. \n\n\"We've got quite a few sets of body armour needing repairs now,\" Dana said, glancing at the deep cut in Irillith's suit. \n\n\"I'll start patching them up tomorrow,\" Alyssa replied, stifling a yawn. \"I'll go through the lot and octo-shape them all.\"\n\nThe redhead beamed at her in gratitude. \"That'd be awesome, thank you!\"\n\n\"How can you still be full of beans?\" John asked, rubbing his tired eyes as he walked over to the second set of grav-tubes.\n\n\"You perked me up earlier, remember?\" she replied, bouncing over to give him a kiss. \"When Jade gave me that emergency top up.\"\n\nCalara gave him a tired smile as she walked past with Alyssa. \"It looks like I've got another reason to be annoyed at Mikaboshi.\"\n\n\"We'll make it up to you tomorrow,\" Alyssa said as they stepped into the grav-tube.\n\nWhen they reached the bedroom, the girls shot curious glances at Jehanna as they walked past the bed towards the shower, looks of fascination on their faces. No one said anything until they were all in the shower, with everyone relaxing under the cascading water, letting the heat ease their tired muscles. There was soon plenty of chatter, with everyone wanting to know what John's plans were regarding the beautiful dusky-hued reporter.\n\n\"I'll introduce Jehanna to you tomorrow,\" John replied, standing under the warm streams of water with his arms around Sakura. \"She's a lovely girl, I think you'll like her.\"\n\n\"She's really fucking hot!\" Dana exclaimed, sharing a grin with Rachel, who nodded her agreement. \n\nThe brunette gave him a quizzical look. \"I'm a little surprised she was willing to drop everything and run away to the stars like the rest of us did.\"\n\n\"Alyssa and I need to have a talk with her about her role tomorrow. She hasn't committed to anything yet,\" John explained, glancing at the blonde.\n\nAlyssa gave him a knowing smile. \"Well, she hasn't agreed to anything verbally at least. That doesn't mean she hasn't already made up her mind.\" \n\nHe studied her for a moment, pleased to see how much more relaxed and calm she was. Alyssa's fury at Mikaboshi seemed to have dissipated and aside from being exhausted, her empathic bond with him was full of feelings of happiness and contentment once again.\n\n*Of course, we've got Calara back,* Alyssa thought to him, wrapping the Latina in a loving embrace and letting out a happy sigh. She kissed the brunette tenderly before saying, \"It's so wonderful you're safe with us again.\"\n\nJohn followed her lead, standing behind Calara and wrapping his arms around them both as he kissed them on the cheek. The rest of the girls quickly joined in the group hug around the Latina, kissing her on the arm or shoulder and telling her how much they'd been worried about her.\n\nCalara looked around at the faces of her friends and lovers, and her voice was full of conviction as she said, \"I never doubted for a second that you'd find me. You've no idea how comforting that was, knowing I had all of you looking out for me.\"\n\nJohn looked around at the girls, smiling at them affectionately. \"I think we all know what that feels like...\"\n\nAware of how late it now was, they wrapped up the shower, quickly drying before getting into bed. John and Alyssa joined Jehanna in the middle, with Sakura cuddling up in John's arms, and Calara snuggling into Alyssa. The rest of the girls realised that the normal sleeping arrangements had been abandoned, so Dana and Rachel paired off, while the twins ended up embracing Jade.\n\n\"Goodnight everyone,\" John said, after sharing a kiss with Sakura.\n\nThey all wished him a goodnight too and the entire crew was soon fast asleep after the incredibly intense and emotional day. Faye settled back in her chair, happy to see her friends reunited safely aboard the Invictus, but watching over them with a conflicted expression on her face. \n\nWhile she was thrilled to hear about Dana's firm plans to build her a physical presence, and couldn't wait to be able to interact with the crew, she still felt apprehensive about talking to John. He had told her he'd listen to anything and she desperately needed to tell him the truth about her recent feelings, that had left her with such a dilemma. She just needed to think of the best way to talk to him about it.\n\n***\n\nJohn woke later that day, feeling like a new man after a good sleep. He felt a couple of soft, warm bodies snuggled up against him and when he opened his eyes to glance down, he saw two dark manes of jet-black hair resting on each of his shoulders. Being careful not to wake Jehanna and Sakura, he stretched out his muscles before glancing over at the ship's chronometer. When he saw the time, he blinked in surprise. It was now one in the afternoon! He'd slept the entire morning away.\n\n\"It looked like you needed the rest, so I let you sleep,\" Faye whispered to him, her cute face appearing above him. \"I didn't think it would be a problem, but I hope that was okay?\"\n\n\"You're right, I feel much better now,\" John replied, nodding to her gratefully. He settled back against the pillow and gazed up at Faye as he added, \"Any trouble while we were asleep?\"\n\n\"There's been no activity at Mikaboshi's base. I performed active scans periodically to make sure!\" she replied, her pixie-like face uncharacteristically serious. \"I've also been monitoring the news networks too, to check what they were saying about last night's assassination attempt.\"\n\nJohn looked at her with interest and asked, \"Anything I should know about?\"\n\nFaye's eyes darted over to Jade as she replied, \"There's been a lot of speculation about huge green animals seen around the Enigma building. Surveillance cameras picked up images of Jade as a Falcon and as a Tyrannosaurus Rex, so those have been all over the news for the last several hours.\"\n\n\"Alright, I suppose we'll have to deal with the fallout,\" John said, glancing down at the girl resting against his left shoulder. \"Perhaps Jehanna can help us there.\"\n\n\"She's very pretty,\" Faye said, studying the girl's face. She stopped herself from adding wistfully, \"And very lucky.\"\n\nJohn looked into Faye's eyes and grinned. \"I'm surrounded by exceptionally pretty girls at the moment.\"\n\nFaye blushed a darker shade of purple, her cupid-bow lips lifting up into a sparkling smile. She leaned down and gave him a virtual kiss on the tip of his nose.\n\n\"Good morning, you two,\" Alyssa said, giving John a sunny smile as she sat up and stretched. She looked at them both fondly and added, \"You make a very cute couple!\"\n\nWhile Faye somehow managed to blush an even darker shade of purple, John returned the blonde's smile. \"It's lovely to see you back to your normal happy self. I must admit, you had me worried there for a few moments.\"\n\n\"I'm sorry for alarming you,\" Alyssa replied, sounding genuinely contrite. She leaned over the still-sleeping Jehanna to give him a tender kiss. \"I was frantic with worry about Calara and staying furious at Mikaboshi helped me stay focused. I wouldn't have been much use to you if I'd been bawling my eyes out!\"\n\n\"It's alright,\" John said, nodding his understanding. \"As I'm sure you remember, I've had a few anger management issues in the past. I was just concerned for you, that's all.\"\n\n\"Well there's nothing to worry about,\" Alyssa said, giving him a radiant smile. \"I feel absolutely amazing this morning! It feels like I-\"\n\nAlyssa abruptly stopped speaking. She didn't trail off and get quieter, she just closed her mouth mid-sentence. Suddenly those bright cerulean eyes of hers blazed with an inner radiance, white light shining out of her eyes.\n\n\"It's time,\" she said quietly, but it wasn't Alyssa who was speaking now.\n\nJohn didn't attempt to untangle himself from Jehanna and Sakura, he just closed his eyes and focused his willpower inward, concentrating on peeling away his spirit-form from his body. The resistance was there as before, but he gritted his teeth and powered through it, fighting against the pull that tried to keep him anchored to his physical form. He lurched bolt upright and twisted to his side, just as a glowing girl rushed over and threw her arms around him. \n\n\"I wasn't truthful with you before!\" Athena blurted out, startling him. \"Now I've sampled some of what life has to offer, I want more! I was pretending to be calm, but I'm scared! I don't want to die!\"\n\nWrapping his arms around the trembling girl, John hugged her tight. \"Are you sure it's time? You might have made a mistake, you might still have a few more-\"\n\n\"No, I can feel it!\" Athena insisted, drawing back to stare at him with wide, frightened eyes. \"Alyssa's surpassed my ability, she no longer has need of a guide!\"\n\nJohn stared at her, feeling completely helpless. He had no idea how to help the scared girl, having little understanding of this whole process, even though he'd inadvertently been the one that had created her. \"Is there anything I can do?!\" John asked, meeting her panicked gaze.\n\nShe looked desolate as she shook her head. \"This is what is supposed to happen to guides. We're only meant to be a transitory step to let a Progenitor learn their powers.\" She hesitated for a second, a look of confusion on her face as she added, \"But I should have been absorbed last night! I don't know why I'm still here this morning!\"\n\n\"Maybe you made a mistake?\" John asked, searching her expression for a reaction. \n\nWild hope reached Athena's eyes and she replied hesitantly, \"I don't know... maybe... I suppose it's possible I have been wrong.\"\n\nJohn felt a tingling against his skin where she had flung her arms around his neck and he glanced down in confusion. Athena's body looked normal at first glance, but then he blinked as it got harder to focus on the glowing shape of her slender limbs.\n\n\"It's starting!\" Athena gasped, clinging to him in fright.\n\nRealising there was nothing he could do now but comfort her, John ignored the bitter sting of failure, putting aside his own feelings for hers. \"Shh, I'm here for you,\" he murmured, stroking her back as he held her against his chest.\n\nHe could feel her sobbing quietly, Athena resigned to her fate. She was growing more indistinct, her body slowly fading away as her essence was absorbed by the Progenitor she was always intended to merge with. \n\n\"Thank you for everything you've done for us,\" John told her, his voice earnest. \"I'll never forget you.\"\n\nAthena pulled back and he was shocked to see her face was translucent, although he could still make out her crystal-clear tears as they rolled down her cheeks. She leaned in to kiss him, her lips faintly tingling against his, but the sensation was so much weaker than before. \n\n\"Goodbye...\" Athena breathed, little more than a faint outline now.\n\nJohn closed his eyes as he felt no more resistance against his arms, the girl fading away into nothingness. He let his hands fall to his side and let out a heavy sigh, mourning the girl who'd been there selflessly for him time after time, but one whom he'd failed when she needed him the most.\n\n\"You didn't fail her, handsome,\" Alyssa said, her voice warm and full of love.\n\nHis eyes snapped open and he had to wince against the incandescent aura pouring from his Progenitor lover. Adjusting to the glare, he was shocked to see that there were two copies of Alyssa kneeling in front of him, although the faded, insubstantial one was clearly Athena.\n\n\"Come to me, Athena,\" Alyssa purred, opening her arms in invitation. \"You have a beautiful voice and I wish to add it to our chorus...\" \n\n\"But... I thought?\" Athena replied, staring at her counterpart in wonder. \"You need to drain the last of my essence to fulfil your maximum potential!\"\n\n\"Where's the fun in that?\" Alyssa replied with a playful smile. She leaned in and added with a staged whisper, \"Now when John's fucking me, he'll be doing us both! How hot is that!\"\n\nAthena stared at her Progenitor mistress in stunned disbelief for a moment, then began to laugh, shaking her head in amazement. Alyssa joining her in a duet of melodic laughter that echoed around the Astral Plane.\n\n\"Merge with me now; everything will be alright,\" Alyssa said gently, wrapping her arms around the other girl. \"You've looked after me all these months, now let me take care of you.\"\n\nWith a hopeful expression on her face, Athena closed her eyes and slid into Alyssa's glowing body. She was giving up her independence on the Astral Plane for a chance at so much more. \n\nJohn watched in astonishment until there was only Alyssa kneeling in front of him on their bed. \"What just happened?\" he asked, thoroughly bemused.\n\nAlyssa let out a happy sigh. \"Athena's a part of me now... but I didn't take everything. I can feel her here,\" she replied, tapping her temple. \"When you created Athena, you formed her from my mind. That's why we couldn't give her a body of her own.\"\n\nJohn frowned as he said, \"Why didn't you tell me what you were planning? The poor girl was so scared.\"\n\n\"I'm really sorry I couldn't warn you beforehand. I had no idea if it was going to work, and I didn't want to get your hopes up,\" Alyssa said, moving closer to him across the bed. \"It was only at the last moment when the barrier separating us had fallen away, that I knew I could keep Athena intact.\"\n\n\"So what now?\" John asked, looking at her in confusion. \"Can I still speak to her?\"\n\nAlyssa shook her head. \"No, it doesn't work like that. She can speak to me directly and now she'll be able to experience everything that I do.\" Straddling his lap, she linked her arms behind his neck and gave him a kiss filled with promise. \"I plan to help her experience lots of very naughty things...\"\n\nJohn chuckled and hugged the mischievous blonde. \"Thank you for doing that for her.\" He looked into those bright blue eyes for a moment and added curiously, \"Is she happy?\"\n\nTilting her head to one side, Alyssa nodded, a lovely smile on her face. \"Yes, she's overjoyed. She's also grateful, excited, and very horny...\"\n\n\"I promise I'll take good care of her later. For now, we need to have a chat with Jehanna, she'll be waking up soon,\" John said, giving Alyssa a brief kiss.\n\n\"We have eternity together, there's no rush,\" Alyssa agreed, but she made no move to let him go. She cocked an eyebrow at him and added, \"How about fooling around for a bit on the astral plane first? At least until you get yanked out of here.\"\n\nJohn nodded and kissed her, feeling a faint tingling as their lips met. Alyssa smiled at him, letting him know that she felt it too.\n\n***\n\nJehanna let out a low groan, starting to awaken exactly fourteen hours since she'd swallowed her first mouthful of John's cum. She was aware of someone sitting on the bed next to her and she said in a raspy voice, \"Would you mind getting me a drink, please? I'm really thirsty.\"\n\n\"Here you go,\" John said, handing her the big glass of chilled water. \n\nShe grasped for it with shaking hands then gulped the drink down, her throat bobbing as she downed a pint in just a few seconds. \n\n\"Would you like another?\" Alyssa asked, offering the groggy young woman a second full glass and taking the empty one.\n\n\"Thank you,\" Jehanna replied, quickly finishing off the second drink too.\n\nJohn reached out to take it from her when she'd finished, and asked, \"Feeling better now?\"\n\n\"Much better, thanks,\" she agreed, opening her eyes and smiling at him. The soft white sheets and sparkling white bed frame immediately drew her attention and she glanced around in bewilderment. \"This isn't my bedroom!\"\n\nShaking his head, John reached out to clasp her hand. \"There was an assassination attempt made against the girls last night. We brought you back to the Invictus to keep you safe.\"\n\nJehanna gaped at him in shock. \"An assassination attempt?! Are all of you okay? I hope no one got hurt!\"\n\nAlyssa placed the empty glass on the bedside table and gave her a soothing smile. \"Everyone's fine now. The girls were out at a nightclub and there was an explosion. The group responsible also kidnapped Calara.\"\n\nJohn gently stroked the back of Jehanna's hand with his thumb as he said, \"Alyssa and I had to rush to help, but we were worried about leaving you on your own. You would have been vulnerable alone in your apartment while you slept.\" His smile was reassuring as he added, \"Don't worry, I promise you haven't been abducted. We'll take you back home this afternoon.\"\n\nJehanna looked relieved, then bit her lip anxiously. \"I really should check in with TFNN. They would have been trying to reach me to cover something this big.\"",
        "\"You can call them from here if you want?\" John replied, nodding towards the comm interface panel in the bedroom. \n\nShe smiled at him in gratitude, then glanced down at the covers. She blushed as she replied, \"I appear to be naked...\"\n\n\"How much do you remember about last night?\" Alyssa asked, reaching out to stroke the dusky girl's arm soothingly.\n\nJehanna gave them both a coy smile. \"I remember thoroughly enjoying myself.\" She glanced at John and frowned as she added, \"Although I don't remember what happened right at the end. Was that due to the effects of your cum?\"\n\nHe nodded, looking startled. \"I'm surprised you even remember that. It's normally just a blur for the first couple of times.\"\n\n\"Alyssa warned me what would happen beforehand,\" Jehanna admitted, giving the blonde a grateful smile. \"I was only asking about my clothes so I could make the call to TFNN without raising any eyebrows...\"\n\n\"I've got something that will fit you perfectly,\" Alyssa murmured, sizing up the slim young woman and climbing off the bed. \"I'll be right back!\"\n\n\"Any regrets about last night?\" John asked, studying Jehanna's face for any sign of doubt.\n\nThe raven-haired reporter grinned at him in delight as she shook her head. \"Of course not! I'm in the Lion's den! Bill Armstrong would kill for this opportunity!\"\n\n\"I didn't mean it quite that way,\" John said in amusement. \"Besides, you're much prettier than Bill.\"\n\nJehanna laughed, grinning at him as she exclaimed, \"Don't let him hear you say that! He's incredibly vain!\" She squeezed his hand and continued, \"I don't regret anything that happened between us last night. Once I've checked in with TFNN, I'm hoping we can continue where we left off.\"\n\n\"Absolutely,\" John replied, equally as eager. \n\nAlyssa strolled back into the bedroom and carefully placed a smart business suit on the end of the bed. \"It's in your size. I picked it up when we went shopping yesterday... just in case.\"\n\nReddening with embarrassment, Jehanna glanced at each of them in turn as she said, \"I was trying to be subtle and not just throw myself at you like some crazed groupie. I wasn't too obvious about how much I wanted this, was I?\"\n\n\"No, not at all,\" Alyssa said, throwing John a teasing grin. \"He had absolutely no idea and I was just being optimistic, hoping we'd all eventually end up in bed together. I bought this outfit for you so you could... well, we can have fun with that later.\" \n\nJohn glanced at the clothes and said kindly, \"Get dressed and make your call. We've got a few important things to talk about this afternoon and I'd like to introduce you to the girls at some point. As long as that's alright with you, of course?\"\n\n\"I'd love to meet them!\" Jehanna enthusiastically agreed. Giving him a flirtatious glance, she threw aside the covers, then climbed out of the bed nude.\n\n\"They're all very eager to meet you,\" Alyssa said, shamelessly admiring the brown-skinned beauty.\n\nJohn watched as Jehanna slipped on the lacy set of underwear that Alyssa had bought for her, noting the seductive glance she threw him as she did so. When she pulled on the skirt and started buttoning up the white blouse, he said, \"I thought you might be interested in conducting that exclusive interview you requested? What I have planned for this afternoon should make for some dramatic footage.\" \n\n\"Are you kidding?! That would be amazing!\" Jehanna gushed, beaming at him in delight. \"Let me just check in with TFNN, then you can tell me all about it...\"\n\n***\n\nAvery Gibson threw the door to his corner office open, the door crashing into the wall and knocking the embossed plaque that read \"Editor in Chief\" from the frame. The loud bang silenced the hubbub in the open-plan TFNN office, all the journalists looking his way with trepidation.\n\n\"Where the hell's that exclusive?!\" he roared. \"We're on air in fifteen minutes, god-dammit!\"\n\n\"I'm still happy to stand in, sir!\" Bill Armstrong immediately volunteered, giving him a gleaming smile.\n\nAvery snorted and waved a dismissive hand his way. \"Unless you're suddenly best pals with the Lion, don't waste my time!\" He whirled around and pointed at a terrified intern, snarling, \"Why haven't you made me a coffee yet?!\"\n\n\"Chief! We're getting the feed through now!\" an excited technician called out, leaning to one side so he could see around the holo-screens in the centre of the room. \"This stuff is dynamite! The ratings are going to go crazy!\"\n\n\"Put it through to my office, for God's sake!\" Avery snapped. \"Do I have to think of everything around here?!\"\n\nHe stormed back into the office, and slammed the door behind him, hitting the button on the wall that would make the floor-to-ceiling glass window opaque. Concealed from the newsroom, he relaxed and strolled across to his desk, a small smile on his face. Avery Gibson was actually a very reserved and thoughtful man, but there were certain expectations for the role of Editor-in-Chief, which his dedicated team of journalists instinctively responded to. Besides, he quite enjoyed the theatrics, truth be told.\n\nSitting at his desk, he glanced at the backup piece he'd been reviewing. After the wall-to-wall coverage of the spectacular Award Ceremony the previous night, this attack on the Lionesses at the Enigma nightclub had come as a real shock. What had been even more surprising had been the tone of the official response from High Command, being considerably cooler than the previous line they'd being pushing regarding the Lion of the Federation.\n\nWith Jehanna not answering her calls, he'd been expecting to use his secondary Anchor, Bill Armstrong, to go through the official statement. Until that is, Jehanna had called in, jubilant about some exclusive interview she'd been able to arrange with John Blake. \n\nHe considered the woman his prot\u00e9g\u00e9 if he was being honest -- although he'd never admit to as much. She had the same drive and tenacity that Avery himself had when he'd been a young reporter. Where he'd had to work hard to cultivate relationships to gain access and interviews, Jehanna was fortunate enough to be blessed with model-like beauty, which worked even better for opening doors. He didn't begrudge her that, though. Jehanna wasn't conceited with it, she just exploited the way people were naturally drawn to attractive people. If that meant getting better stories for TFNN, then he was hardly going to complain.\n\nThe holo-interface on his desk chimed to let him know the data transfer was complete, and the familiar figure of Jehanna Elani appeared, standing next to John Blake. Jehanna was as immaculately dressed and coifed as usual, looking like a million credits. However, Avery's eyes were drawn like magnets to the Lion of the Federation, who was wearing what could only be described as full battle regalia. He wore glossy white armour, similar in style to the sets worn by his two bodyguards at the award ceremony, but this suit had regal-looking lions embossed on his chest and shoulder pads. The hilt from a massive sword was poking up behind one shoulder, while a brutal looking rifle was slung over the other.\n\nThey appeared to be in some kind of dropship, probably that Raptor-class vessel which had been sighted at the Enigma building in the early hours of the morning. The front-loading ramp had been lowered and through that open portal he had an unobstructed view of a mountain range in the background, along with John Blake's battlecruiser floating beside it.\n\nAvery leaned forward, his eyes gleaming at the sight. He'd been a newsman for over twenty years, and he knew pure ratings gold when he saw it. After watching the first thirty seconds of the interview, he paused the playback then walked over to his office door. Taking a deep breath, he slammed the door open.\n\n\"We've got our exclusive! Run it!\" he bellowed at the top of his lungs. \n\n\"You got it, Chief!\" the technician yelled back, grinning wildly.\n\nThe frightened intern was back with a cup of coffee in his shaking hands. \"Gimme that!\" Avery growled as he grabbed the cup. He turned back to his office while jerking his thumb towards the holo-screens in the centre of the newsroom. \"Watch this, kid. You might learn something.\"\n\n***\n\n\"Can't we just impound his ship!\" Admiral Carl Weber stated, thumping his fist down on the table. \"It's only one vessel, we could overwhelm them with sheer numbers!\" He looked around at the four other Senior Officers, who had reconvened their meeting in Fleet Admiral Buckingham's Command Suite aboard the Zeus.\n\nShaking her head, Admiral Jayanti Mishra said in a weary tone, \"We went over this last night, Carl. What justification could we possibly have for trying something like that? Aside from the fact that we all owe him our lives and that he saved Terra from destruction, we've all just attended an Award Ceremony in his honour!\"\n\nCarl Weber shot Lynette Devereux a furious glare. \"If you'd just listened to Edwin, we could have avoided that disaster! Do you have any idea what you've done?!\"\n\nDevereux bristled at his tone, but she faltered before replying, still badly shaken by the events of the previous night's ceremony. What was supposed to have been a stage for her triumphant campaign for promotion to Fleet Admiral had been entirely hijacked by John Blake. She'd seen the looks of adoration on the faces of the attending crowd and had suddenly realised she'd massively underestimated the man.\n\n\"It's too late to be pointing fingers and it won't achieve anything,\" Edwin Caldwell said grimly. \"Considering the cult of personality that's growing around him, could we even rely on the loyalty of our troops to carry out such a mission?\"\n\n\"We have to do something,\" Carl Weber protested, looking deeply troubled. \"How close are we to John Blake instigating a coup?\"\n\n\"I'm still not convinced that's his objective,\" Jayanti Mishra stated, looking dubious. \"Why would he give us access to new technology if his intentions are hostile?\"\n\n\"You heard it from his own lips,\" Vincent Buckingham said, his expression bleak. \"John Blake is a member of an incredibly advanced species of galactic tyrants. We've all seen the footage of that cannon hidden in the moon, and after Regulus, everyone's well aware what his ship can do!\"\n\n\"That's why we need to capture it!\" Carl Weber insisted. \"Just think of the technology we could uncover. We'd eliminate a threat and be able to harness his radically advanced tech for ourselves. Imagine a whole fleet armed with that beam weapon he used!\"\n\nLynette Devereux quailed as she remembered the shows of physical and psychic strength she'd witnessed during her time aboard the Invictus. She met Carl Weber's eager gaze and slowly shook her head. \"I'm not sure we'd even be successful no matter how many men we threw at him. He's extremely powerful and so are his crew.\" \n\n\"Have you seen the footage on the news this morning?\" Vincent asked them, glancing around the table at the Admirals' worried faces. \"The 'Lionesses' were attacked last night. One of them turned into a dinosaur! A Tyrannosaurus-Rex for God's sake!\"\n\nThe officers all shook their heads, shocked by this latest revelation. They'd been up until the early hours discussing how to deal with the growing threat that John Blake posed and had regrouped to continue the meeting as soon as they awoke later that morning. \n\nFrantic knocking on the door into the meeting room drew all their attention that way. Vincent cleared his throat and said loudly, \"I said we were not to be disturbed, Carmela!\"\n\nThe door opened and Rear Admiral Carmela Morena poked her head around the door. She looked badly shaken as she said, \"TFNN have ignored the official statement we put out this morning!\"\n\n\"What the hell are they playing at?!\" Vincent Buckingham snorted in disbelief.\n\n\"You need to see this!\" Carmela said, dashing across the room to grab the remote and activating the huge view-screen at one end of the meeting room.\n\nThey all recognised John standing next to TFNN's Lead Anchor, although he was wearing a suit of intimidating body armour minus the helmet. Through the Raptor's lowered loading ramp, they could see a mountain in the background, with the Invictus floating nearby.\n\n\"-so we tracked the group responsible for the explosion back to their lair,\" John replied, turning slightly and gesturing towards the mountain.\n\nAs if on cue, the mountain top shimmered and changed shape, revealing a huge grey stone citadel that had been cleverly concealed behind the illusion created by banks of holo-projectors.\n\n\"It's remarkable that such a group could exist so close to the heart of the Terran Federation,\" Jehanna said, shaking her head in amazement. Her beautiful face took on a grim expression as she added, \"I've seen the casualty reports from the Enigma nightclub bombing and it appears twenty-seven people were seriously injured, and another eight were killed.\"\n\nAcross the bottom of the screen, pictures of the dead scrolled past. At the forefront were two famous holo-movie actors, followed by a couple of attractive young women described as \"guests\". Two bouncers scrolled by next, the list of the dead ending with pictures of a handsome man and beautiful woman identified as host and hostess of the VIP section at Enigma.\n\nJohn nodded and he said in a sombre tone, \"The group was a coven of assassins who'd been operating from this base for over seventy years. We've uncovered their list of contracts and what we found was shocking. Over nine-thousand people have been murdered by this organisation since its inception.\" Turning to look at the camera, he added, \"Rest assured, everyone associated with this nest of killers will be brought to justice. I passed on the list of clients who had placed contracts with these assassins to Law Enforcement agencies in the early hours of this morning.\"\n\nNodding in agreement, Jehanna said, \"I've been able to confirm that thousands of high-profile arrests are now being made, from corporate executives through to senior figures in well-known crime syndicates.\"\n\n\"We've seized the assets owned by this organisation. I'll ensure that surviving family members of the victims will receive compensation,\" John said, looking towards the camera with a sympathetic frown.\n\nJehanna turned to gaze at the imposing grey fortress and asked, \"What are you planning to do with this nest of evil?\"\n\nJohn's eyes narrowed as he replied, \"I wanted to take this opportunity to make a statement... I will not tolerate attacks against my crew. Should anyone seek to pursue a similar course of action, I am pleading with you to think again. Such a path will only lead to one inevitable outcome. I consider myself to be a loyal and honourable friend to my allies...\"\n\nJehanna nodded and interjected, \"That goes without saying. Your defence of Terra and your decisive intervention to save the Terran Fleet at the Battle of Regulus are well known, and were honoured only yesterday.\"\n\nLooking directly at the camera, John said sternly, \"But I want to demonstrate what happens to my enemies...\" He paused for a couple of seconds, before continuing, \"...the enemies of the Terran Federation.\"\n\nIn the background, a huge ball of light was growing in front of the Invictus, blazing with a radiance so bright that it hurt the eyes to look at it. After building to a crackling crescendo of power, the colossal conflagration of energy was unleashed as a brilliant white beam, that completely obliterated the grey stone fortress from sight. The battlecruiser pivoted slightly, strafing that beam sideways until it dissipated a few seconds later. \n\nIt took the stunned audience in the Fleet Admiral's briefing room a second for their eyes to adjust, but when they did, the entire mountain top had been totally annihilated. There was now a flat, glowing plateau where the fortress had once been.\n\n\"One inevitable outcome,\" John stated again for emphasis.\n\nJehanna smiled at the camera and said, \"I for one, will sleep more comfortably in my bed knowing that someone like the Lion of the Federation is watching out for ordinary Terran citizens. It's heart-warming to know that such swift and ferocious retribution await those that dare to prey on the good citizens of the Federation.\"\n\n\"I'm just happy to do my part, Jehanna,\" John said, giving her a respectful nod. \"I consider it a privilege to be able to protect the citizens of the Terran Federation from evil, whatever the source.\"\n\nGiving him a grateful smile, Jehanna looked into the camera. \"That concludes this exclusive interview for TFNN. My thanks to Vice Admiral John Blake, Lion of the Federation, and truly a champion of the people.\"\n\n\"It was my pleasure,\" John replied, saluting the camera.\n\nThe image cut away, returning to Bill Armstrong in the TFNN studio.\n\nThe Admirals looked at each other aghast. It seemed quite obvious who the real audience for this demonstration had been -- the five men and women sitting around the briefing room table.\n\n\"What are we going to do?\" Carl Weber asked, his eyes wide with fear."
    ],
    "authorname": "Tefler",
    "tags": [
        "cum inflation",
        "swallow",
        "bisexual",
        "ninja",
        "cyborg",
        "boss fight",
        "revenge",
        "psychic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-84"
}