{
    "title": "Toofy Ch. 17",
    "pages": [
        "Author's Note: Trigger warning. This chapter is bitter-sweet, and will deal with the consequences of the shit that happened in Chapter Four.\n\n---\n\nToofy paused, foot midair, as her nose flicked back and forth. It wasn't hard to catch the smell permeating her nostrils, she expected that even a human could smell it when Meerakeilian entered the room.\n\nShe emitted a tiny little frightened miaow, before she found herself lying on a table, looking up into deep black eyes. Seeing only her reflection in them.\n\n\"B-bad dragon.\" Toofy whispered.\n\nMeerakeilian growled as she leaned further down, slowly opening her jaw to reveal bright white, sharp, and triple-rows of teeth. Her forked tongue flicked outwards to tap Toofy's cheek.\n\nThe catgirl's expression suddenly changed to one of confusion, and she coughed, \"Eh... Mia... Do you... Have balls?\"\n\nThe salamander's chuckle was deep and rolling, sending shivers through Toofy as she realised she was trapped beneath a very horny dragon that had just undergone a sexchange.\n\nThe black scales beginning to sprout where Meerakeilian had been scarred by her battle, and the darkening of her other scales, showed off that the red salamander was somehow turning into a black, as well.\n\n\"Mia... Do you have... Other male bits?\" Toofy cringed.\n\nIn answer, she felt something large and solid smack against her underwear, pushing against her private parts as the woman... Man... Lizard, leaned down even closer to her, growling in her ear.\n\n\"Toofy doesn't want.\" She said breathlessly. \"Toofy doesn't want.\"\n\n\"Want.\" Meerakeilian growled again, kissing both her cheeks quickly, \"Want her. Make egg. Make egg. Make egg.\"\n\nShe let out a frightened whine, her own tail curling in around her leg. She didn't stand a chance if the unbalanced hormones of the salamander got the better of them.\n\nShe was also feeling a bit like everyone kept using her. First Elatham, then Daen, and now even her dragongirl was going to ignore her telling them to stop.\n\nA tear slipped down her cheek.\n\nMeerakeilian vanished from sight, letting out a pained howl as she did.\n\nToofy took a few deep breaths before sitting up slowly from the table, shifting her recovering arm in its sling and looking around in confusion for whatever had managed to attack the salamander.\n\nThe only other living thing she could see in the room was the tavern owner, hiding behind his broken kitchen, practically gnawing on his own arm in terror of everything he had witnessed since breakfast.\n\nThe catgirl took a whiff of the air, frowned, and her bell jangled as she dropped her head upside down to look beneath the table where her dragon was curled into a very tight ball.\n\nYou could attack her with a battle axe right now, and all you'd hit were layers of scales. The salamander may as well be a larger pillbug, all frightened and armoured.\n\nToofy blinked her golden eyes, \"Mia?\"\n\nA puff of white smoke emerged from inside the ball, and it curled in even tighter.\n\nShe crawled in beside the ball shape, lifting a hand hesitantly before she poked at it. She shot back, but all that happened was another little puff of white smoke.\n\nToofy padded in closer again and let out a small whine. She prodded at the ball with her face, \"Mia not want to hurt Toofy?\"\n\nA big puff of white smoke.\n\n\"But Mia wants Toofy... Because Toofy is Devourer?\"\n\nThe ball cracked and black eyes peeked out from inside, which seemed to be glowing orange. The eyes moved back and forth, the lizard shaking its head, before the ball snapped shut again.\n\nToofy breathed a sigh of relief, and lay down next to the ball. \"Toofy isn't mad at her. But Mia is stronger than Toofy. Does Mia remember the temple? You're bigger and stronger than Toofy. She can't run away. Can either hurt Mia with the rite, or get hurt.\"\n\nThe salamander let out a strange and warbling keening sound that Toofy recognised from one of their lessons. She'd never heard it before, but she knew it was a sound of deference, from one salamander to another.\n\nThe sound of defeat.\n\n\"If Toofy gives Mia a little kiss, will she stop being all frightened and wary? Toofy already has her Arina, and her Saia, and her master. Doesn't think she needs more. But she will give dragon kiss, and forgive her for her arm.\" She said sympathetically.\n\nThe ball cracked open again, steam emerging where the orange light hit the air. Meerakeilian gave a growl that shook the ground, \"She belongs. She owned. Toofy owns. Toofy owns. Want. Want egg.\"\n\n\"Toofy won't let anyone give her kittens. She does not want to hatch a little dragongirl.\" She shook her head.\n\nThe ball uncurled a little more, A scale-frame faced becoming visible, and the lizard growled quietly, \"But Toofy has kittens.\"\n\n\"What?\" Her golden eyes shot open in terror.\n\nThe salamander uncurled, slithering up to her smoothly in the same motion and put a hand to her stomach, \"Three heartbeats. Three little kittens.\"\n\n\"What?\" Toofy's own heart hammered in her ears as she failed to process the information.\n\nMeerakeilian's black eyes looked at her sympathetically, \"Didn't know? I could hear them. Younglings.\"\n\n\"C-can you tell when? When Toofy got pregnant?\" She asked in terror.\n\nThe dragongirl frowned, and leaned in, placing her hot and scaled ear against Toofy's stomach. Tapping a claw on the ground and considering. The creature scratched at their chin, \"Mmm... Twelve, thirteen weeks?\"\n\n\"Three months.\" Toofy breathed out and fell backwards, almost spraining her tail as she landed on it. She blinked her golden eyes in fright, \"Sai... Or... Or... Bastard elf.\"\n\nMeerakeilian looked at her sympathetically, \"As ancestor?\"\n\nShe nodded noiselessly, biting at her lip.\n\nIf her master was the father of her children, then Toofy would be ecstatic. She didn't exactly want to be pregnant, but she would love her kittens and do everything in the world to keep them safe.\n\nOn the other hand, if she gave birth to half-elven children, even though it wasn't their fault, Toofy didn't know if she could take that reminder of what had happened to her.\n\nShe might end up ending her own life, turning them into more frightened orphans for the temple to care for. Children who the emperor would undoubtedly target, if he knew their lineage.\n\nThat was why Toofy hadn't wanted kittens.\n\nShe knew that their entire lives would be spent hiding from the enemies that Toofy was bound to make on her path to seize the empire, seize the throne.\n\n\"What can Mia tell?\"\n\n\"Frightened little hearts.\" The salamander whispered, \"Feel what mother feels. Not understand. Too young.\"\n\nToofy gave a half-hearted laugh, \"Mother always frightened. Worse now. Oh, shit! Toofy has been using black magic with fucking kittens inside her! Fuck! Motherfucking fuckshit!\"\n\n\"Souls untainted.\" The salamander said quickly, smiling weakly at her, \"Neko constitution. Remember temple, they teach us. Neko children shielded from parent magic.\"\n\nShe shook her head frantically, \"No! Not from fucked magic. Bad magic. Shit! Toofy can't use death magic anymore. Neko kittens only protected from mother's normal magic. Humans can't risk using any magic when pregnant. Neko can use theirs, but Toofy was using fucking bad magic. Cursed magic.\"\n\n\"Souls untainted.\" The salamander insisted, \"Glowing. Quiet. They have aura, all glittering like treasure. Make want, make jealous. Want egg.\"\n\nToofy sniffled in terror, smiling at the woman, \"Toofy really has kittens? Oh gods. Oh those poor fucked souls. Toofy is going to be such a bad mother.\"\n\n\"I be wetnurse?\" Meerakeilian offered to her, \"Protect kittens with my life, like I protect you.\"\n\nShe laughed weakly, \"Don't think neko milk is like dragon milk. Oh, shit! Three months. Toofy's going to get breasts, soon. Start getting heavier. Tender. Toofy doesn't wanna! Toofy wants to be able to hunt!\"\n\n\"What are you two bastards yelling about?\" The elf appeared, crouching by the end of the table, \"Hiding because you walked away from a fight, slutcat?\"\n\nToofy's eyes flicked to her, and she snarled, barely resisting the darker magic she had been trying to teach to herself. Forcing herself to reach for the light instead, her golden eyes glowing vibrantly. \"Elf. Play nice. Toofy is very, very, upset right now.\"\n\n\"You left me to deal with a fucking army, on my own!\" The elf hissed, ears pulling back, \"And you know what? I summoned Astadia. And she fucking kicked my ass! If Orli hadn't been there I would have -\"\n\n\"Toofy has kittens!\" She shouted, interrupting the woman.\n\nThe elf blinked in surprise, \"W-what?\"\n\n\"Toofy... Just found out... She's pregnant.\" She said, chest heaving with each pause. She swallowed nervously, \"Insane elf can yell at her another time. 'Kay? Also, Toofy knew Orli. Knows about the Orli. So she knew she would make Astadia run away.\"\n\nThe elf fell into a sitting position, leaning her forehead against the end of the table, \"That's why your aura is so twisted up. Shit, you've got to be like... Only a few months in. How long is a neko pregnancy, anyways? And how stupid do you have to be to get pregnant when you're fighting gods and emperors?\"\n\n\"Toofy didn't mean it.\" She burst into tears, sobbing.\n\nA protective tail wrapped around her like a brick wall curling up around her, and Meerakeilian issued a warning growl from the back of her throat. Puffing out black smoke from her mouth.\n\nThe elf gave a weak laugh, \"Well... Shit. Guess I shouldn't have expected anything different from a damned neko. Of course you done got fucked.\"\n\n\"Toofy... Doesn't know... If master's kittens... Or fucking bastard elf who hurt her.\" She snarled.\n\nTrician blinked, and smiled sympathetically, \"I could tell you, if you wanted. I'm a prophetess. I can read you, and your children. If you wanted me to... It was an elf? The one who hurt you?\"\n\n\"Elatham.\" She sniffled, naming the man she hated more than anyone else in existence. Even long dead, his shadow was a scar that clung more tightly to her than any other.\n\n\"Lord Elatham? The emperor's magic adviser?\" Trician asked cautiously, causing the salamander to growl another warning.\n\nToofy nodded, feeling snot beginning to mingle with her tears, dribbling down the front of her face. \"Master... Her Sai... He killed the elf... When he was still inside Toofy. Still hurting her. He... He paralysed Toofy. Wanted to steal her magic. She hates him. That's why she hates elves. Toofy hates you all.\"\n\nThe woman lifted her hand, her embedded gemstones twinkling for a moment, and when she looked at Toofy again, her face was a picture of grimness.\n\n\"No!\" Toofy said in front, warbling and ducking her head, \"No... No it can't... I can't... Not... Not cope...\"\n\n\"Two of the children are human. Human and neko.\" The elf whispered, \"One of the two is... Sick. His soul is fighting with itself. He might not survive. His sister, she's okay. Stable.\"\n\n\"Sai's magic. Menes magic.\" Toofy whispered, \"She's going to lose her kittens, to it?\"\n\n\"No. It isn't clear. Your son fights, and he fights with the outrageous and unbending will of his mother.\" The elf said firmly.\n\nToofy sniffled, \"Third. He's Elatham's heir. Isn't he?\"\n\n\"She. You have a half-elven daughter.\" Trician whispered regretfully, \"She's innocent. So very innocent. She isn't the monster... That her father was.\"\n\nThe catgirl wailed in pain.\n\nHer daughter would have the face of her father. Whatever happened, no matter how much Toofy would love her, it wouldn't change it. She would see her abuser, every single day.\n\n\"Toofy wants to die.\" She whispered.\n\nMeerakeilian let out a bellow that blew the table from above them, \"Succubus! Saia!\"\n\nToofy grabbed a spider from the floor that tried to scramble away and shoved it into her mouth. Sniffling as she crushed the squirming snack in her mouth.\n\nSaia stumbled in, off-balance and moving painfully. She hesitated, obviously not wanting to crouch or bend over, before giving up and sitting in front of Toofy with a wince. \"Ow. What's going on, here?\"\n\n\"Your mistress is pregnant. Two of the children are her master's, but the third...\" The elf trailed off and glared, \"You knew. You would have known, you're a succubus.\"\n\n\"Fuck.\" Saia cursed, \"I didn't want to have this conversation. I really did not want to have this conversation.\"\n\nToofy looked up at her, and shook her head, \"Saia is fine. Toofy understands... Toofy understands.\"\n\n\"Says want dead.\" Meerakeilian growled quietly, \"Needs one she loves. Needs.\"\n\nSaia reached out and squeezed one of the catgirl's hands, \"No... No she doesn't. Toofy doesn't need any of us. She's going to be the empress of the fuckin' world. She's stronger than any of us.\"\n\n\"Not strong.\" Toofy disagreed. \"Not now. Not ever again.\"\n\nTrician whispered quietly, \"She's right. Right now, Toofy isn't strong. What she is, and what her enemies are actually afraid of, is that this neko... Is a survivor.\"\n\nThe catgirl gave a half smile, \"Insane elf not a total bitch.\"\n\n\"I lost Ancestor.\" The dragon said quietly, \"Saia was misused. Elf lost love. So many hurt us. Toofy, you unite us. Make us... Better than we were. Your hurt now. We save you, now.\"\n\nToofy rolled her eyes and brushed the lizard's cheek with the back of her hand, \"You can't protect Toofy from Toofy, little Mia. It doesn't work that way.\"\n\n\"I will kidnap Sai.\" The dragon said and stood up, causing Toofy's eyes to widen as the new genitals flopped right at her face level. \"These ones, protect you. Prepare for the arrival of my servants.\"\n\nThe catgirl looked up, \"What does Mia mean... Kidnap? And what does she mean, servants?\"\n\n\"My voice has been heard. All will come. To challenge, be devoured, or bow.\" Meerakeilian growled, \"I own dragonkind. They will come to me. They will serve me. As I serve my Devourer.\"\n\nToofy's eyes widened in astonishment, \"Did... Did... Did Mia just... Become... Dragonking?\"\n\n\"I am the Heir of Irrlichdan.\" Meerakeilian growled with a challenge in her voice, \"And I will serve you, and your children. Lord Sai, by your side. The emperor is a threat. We will remove it.\"\n\nTrician gave a small gasp, \"Holy shit. Holy shit... It's a civil war. It starts here. This is the moment, this is the truth, this is where it all changes. Where it begins. Goddess save us.\"\n\nToofy finally noticed that one of Saia's eyes was no longer red, but green. So the girl really had tried to save Tyre, after Toofy left them to their buttplay.\n\nThe succubus really did like the stinking human.\n\nSaia smiled slowly, \"We will protect this town. Send the dead. Send the living. We'll fuck 'em all, to keep you safe. Fuck the emperor. He ain't touching a hair on the head of my nieces and nephew.\"\n\n\"Aunty Saia?\" Toofy raised an eyebrow.\n\nThe woman shrugged, \"I've been called worse. What do you say, mistress? Become our empress? Take up the call, and make this world yours, starting here... And now?\"\n\nShe hesitated.\n\n\"If I can summon Astadia again, with Orli's help, and bind her, with your help... I can take control of the draug.\" Trician said quietly, \"I am a Princess, of the empire of the Golden Mountain. Royal blood runs through these veins. I can't do it alone... But draug and dragon, united by the neko.\"\n\nToofy gave a small giggle, and rubbed at her cheeks, \"She loves you. She loves all of you. Protecting her and... It's time we hurt them. Hurt everyone who hurt us. Toofy won't take her time, anymore. Saia goes with Mia. She goes to capital, and kills the Yu.\"\n\nThe succubus raised an eyebrow, \"Just like that? I don't want to get caught, again. Barely made it out last time.\"\n\n\"Saia stole Menes' magic from Tyre.\" Toofy pointed out, \"He was shifter. She was glamour. It won't take her long to master it. Take glamour, and make it real. Saia... Can become any living thing. Does she think a drunk can stop her?\"\n\nThe woman kissed her cheek, \"You know just how to make me horny, mistress.\"\n\n\"Go fuck 'im up.\" She growled and then hesitated, rolling her mouth for a moment, and produced a white scorpion from inside her mouth. She held it out, \"Don't get stung. Angry fucker. Death in three steps.\"\n\nThe assassin took it and stood, kissing her cheek again, \"I love you, mistress.\"\n\nToofy rubbed her chin, \"Toofy shouldn't use magic, anymore, elf. She has kittens. If she touches her bad magic, kittens get sick. But Orli will help. She just needs to be taught.\"\n\n\"Yeah... What the hell is she?\" Trician asked.\n\nThe catgirl shrugged, \"Demigod. Daughter of that scared one, and the guardian spirit. Toofy forgot, what was guardian's name? Whatever. That one.\"\n\nSaia started, \"Orli's your stepsister, mistress?\"\n\n\"Huh? Toofy is orphan.\" The catgirl said in confusion.\n\nTrician laughed like it was the biggest joke in the world. \"Oh, of course she is. And that's why we're here. To do all of this. My goddess always fucks you over sideways. Never see her coming. I see the divine, Orli touches it. Together, we can channel the goddess.\"\n\n\"Orli also has boyfriend to help.\" Toofy shrugged, \"Slept with him a week ago, on her eighteenth.\"\n\nTrician frowned, \"Boyfriend? The human managed to find another worthy to join our little rabble? Who is he?\"\n\n\"Your god is Missy, Tricksy.\" Toofy said slowly, \"Orli's god is Ouruk. Betrayer god who made orkind. He very jealous that Orli finds Tricksy fun and games.\"\n\n\"The god of destruction and rage.\" The elf shivered, \"Well. That's handy. If he doesn't kill me first.\"\n\n\"Mmm... That would make Orli cry. He not want Orli cry.\" Toofy shrugged, and then clapped her hands and glared, \"What are you all waiting for? Toofy has given her orders!\"\n\nShe giggled as everyone snapped into motion, but her heart still felt like a knife had been driven through it.\n\nShe cupped her stomach with her hands, wishing she could feel the children growing there. She whispered to them quietly, \"Toofy loves you. Toofy never let anyone hurt you.\"\n\n---\n\n\"Ouruk.\"\n\nThe human girl who was just trying to clean up some of the mess left when Westcolm and Meerakeilian had torn through the tavern literally jumped in terror.\n\nTrician laughed and shook her head, \"That's why you're so powerful, mage. You've got a touch of the divine to you. That, and your mother is Eratigan.\"\n\n\"Ssh.\" Orli said urgently, her bright blue eyes darting around, \"Are you trying to get me exiled? If people knew that dad and... Her... Were together, bad things will happen.\"\n\nThe elf shrugged and walked over, \"You helped me run, when I couldn't stop the lich, last time.\"\n\n\"No, no!\" The girl said in fright, \"We barely made it! If that soul you summoned hadn't thought you were amusing, we would have died. I just want to clean up, and forget you freaks ever came here. I'm not helping you.\"\n\n\"Sure, you are.\" Trician yawned, and waved a hand, \"Oh, this is Tyre. He'll be helping us out. He used to fight alongside the emperor himself. And if you don't help me, what makes you think I'll keep your secrets?\"\n\nOrli clenched her jaw, glaring, \"You're such a bitch.\"\n\n\"Mmm. I am.\" She nodded, \"You see, I actually hate humans. A lot. You and yours forced my people to serve you. We've still got our crowns, but we have to pay for the privilege. I hate it. So, I don't care if you think I'm bitch. I care if you do what I say.\"\n\nTyre rubbed at his face tiredly, \"Don't mind her, girl. The draug that attacked us? They killed her boyfriend. The lich that is controlling them? Her dead sister. Who she was supposed to kill, before she could become a lich, but failed. It's all personal.\"\n\n\"Shut up, abomination.\"\n\nHe shrugged, \"Calling me that doesn't work so well, anymore. Still feels odd, to have my own soul back. Saia is... Something else.\"\n\nTrician rolled her eyes, and crossed her arms, \"You two are helping me strip my sister's undead soul down to turn it into a weapon. Are we going to fuck around all day, or do this?\"",
        "Orli cringed, \"I... I hate doing it. I don't like being a channel. It feels like I'm steal from them.\"\n\n\"Your boyfriend complained, yet?\" Trician raised an eyebrow.\n\nThe girl shrugged, \"No... But he's a betrayer. He wouldn't complain if any of the official gods went and got murdered.\"\n\n\"Girl. You're still acting like you have a choice.\" The elf said with irritation, \"I've got a very angry, very scary, cat who just discovered she's pregnant. Your tiny little village is about to be swarmed by dragons who might be dumb enough shits to pick a fight with her. I'm not in the mood for this.\"\n\n\"Scary? The neko?\" Orli said, glancing towards the building, \"What... What is she?\"\n\nTyre yawned tiredly, \"She's the last thing you'll know before you die. She'll fuck you. And then she'll fuck your chances of surviving. You can do whatever you like to try and survive. Even go and summon someone like Ouruk to protect you... And all you'll be doing is delaying the inevitable. No one who fucks with her survives. She's terrifying.\"\n\n\"The gods love her?\"\n\nHe shook his head, \"Lady Twenty Four regularly says she hates all the gods. So I highly doubt it.\"\n\n\"T... Twenty Four.\" The girl breathed out slowly, \"I didn't know her name. I didn't know her name. Shit. Oh, gods, shit.\"\n\nTrician chuckled softly, \"Yeah. Eratigan's daughter. Just like you. Isn't that a fun little piece of bullshit?\"\n\n\"Oh, you don't get it.\" Orli shook her head, \"Not even a little. Twenty Four was fated to die, before mother stepped in. Which means that Death, the god, has been trying to claim her ever since. And failing. Ouruk has mentioned her... She's... Like the sack man, but for gods. I didn't actually think she was real.\"\n\nThe elf laughed loudly, \"The sackman of the gods. I like that. Describes the bitch perfectly. You want to piss her off, little human? Then don't help me.\"\n\n\"I hate you.\" Orli said lightly, giving in. \"Let's die, then. Better to die by the hand of an immortal lich, than piss off that neko.\"\n\nTyre stretched for a moment, and then drew a sword from his hip. He flicked a couple runic symbols in the air, and his eyes briefly glowed a light blue. \"Sorry to say it, girl, but if you let the lich kill you, the cat will probably find a way to come and scream at you.\"\n\n\"Shit.\"\n\nTrician held out her hand, and the human hesitantly took it. Orli closed her eyes for a moment, taking a deep breath. Then she thrust her hand into the sky.\n\nThe elf's eyes rolled back in her head and she nearly collapsed. The magic surged through her, overwhelming her senses all over again. There was no getting used to it.\n\nShe struggled for a moment, and then breathed out slowly. \"Last time, Tyre, Astadia came immediately. She... Has crazy power. But, thanks to this one, now so do I. I just...\"\n\n\"Need a skilled spellsmith to help you choose the right ones.\" He replied tiredly and took Orli's other hand, \"Sorry, girl, this is easy. Be my channel to her. You'll feel the tug, Trician. Don't resist. Don't try and control it. Or it'll rebound.\"\n\n\"Not an idiot.\" She said through gritted teeth and snapped her fingers, \"Astadia! You whore! Come out and play!\"\n\nLast time, her sister had come out of curiosity. That wouldn't work twice. The dead elf would also expect this to be a trap, so any slight edge like being pissed off, should help.\n\nTrician grunted in surprise.\n\nIt wasn't just a tug she felt. Relinquishing control was difficult when it felt like you were being hauled around by a damned salamander.\n\nLike getting your feet stomped by an inept lord at a ball.\n\n\"You call me, whore!?\" An ethereal voice screamed from behind the three of them, blasting them rolling, and out of each other's grip.\n\nTrician cried out for Orli as the human went tumbling out of reach. She spun onto her back and tossed up a shield that shattered with a burst of blood from her own mouth.\n\n\"Fucking an onokentaura, and you call me, whore!?\" The voice screamed again, flattening and pinning all three of them.\n\nThe elf reeled, feeling the blood pouring from her nostrils, mouth, and ears. Yet, despite the agony and the overwhelming magic blasting directly at her, she knew what she had to do.\n\nShe reached out for the same desperate spell she had cast against Kaleid. The spell that had saved her life and enslaved Astadia's bodyguard to her side.\n\nA spell that had slipped right passed his defences.\n\nThere was a brief spark of blue. Just a tiny moment where a single speck of light left her finger tips, before dying in the air.\n\nA scream of utter rage shook the ground, as shadows from all around them were dragged into the same location. Flecks of darkness swept up and forced together until it formed some kind of physical shell.\n\nOrli's hand closed around hers warmly. Little fingers interlacing with her own, and Trician felt the magic rip right through her. She gave a breathless gasp, and all resistance to her spell vanished.\n\nThe shadow flickered and shook, before bursting outwards and leaving a terrifyingly pale-skinned elf kneeling in front of them.\n\nTrician felt a tear slip down one cheek as she looked at the semi-familiar figure.\n\nHer sister was too pale. Not even a sickly pale, but corpse pale. The hair was unkempt, looking like it had been dragged through oil, and then mildly charred.\n\nTrician had mourned her when Tresian had killed her. Even though she'd attempted it, herself. She had still mourned for Astadia, and now... Now she was looking at her and reopening that wound.\n\nShe had loved her sister.\n\nThe goddess had been the one to demand her death. Anything to prevent Astadia from ascending to the very position of power she had, in death.\n\nTrician had served the gods unquestioningly, all of her life. The moment that the goddess had demanded the death of her sister, was the first time that she had known doubt.\n\n\"Astadia.\" She whispered, feeling Orli squeezing her hand reassuringly.\n\nThe human was definitely her mother's daughter. She was just a waitress in a hick town, and she was showing sympathy to someone looking at an undead lich that had tried to murder them all.\n\nNot a single hint of freaking out, like a reasonable person would.\n\nTyre sat up, stretching out his arms, \"Ow. Well, I was useless. Apologies.\"\n\nTrician staggered upright, and Orli came with. Refusing to let go of the elf's hand. She looked at the human, but saw nothing but earnest determination in her blue eyes.\n\nSo this is what someone who moved beyond prophet to date a god looked like. Stubborn and stupid.\n\n\"Astadia.\" Trician said more firmly.\n\nThe dead elf reached up and touched the silver collar around her throat, and winced, \"You bitch. You fucking whore. You steal my boyfriend, get him killed, and then fucking seal my soul?\"\n\n\"You killed, Kal!\" Trician roared.\n\nAstadia sneered, looking up at her with sunken eyes, \"No, you fucking idiot, I did not. That'd be the bitch who calls you her little fucking toy. Might as well be a fucktoy, from what I've seen. Whore.\"\n\n\"Your army.\"\n\nThe elf sneered, \"I didn't hate you. Even after you burned down my palace to try and kill me. But fucking Kal before my corpse was even cold? You're a piece of shit.\"\n\n\"I needed the magic.\" Trician muttered, feeling on the defensive.\n\nOrli spoke timidly, voice shaking, \"Why would Trician's goddess kill... Kal?\"\n\n\"Kaleid. My bodyguard, and an onokentaura. We could never be together.\" Astadia explained quietly, before glaring with her white eyes at Trician. \"Goddess killed him, because she's a jealous bitch. Wanted to punish you for falling in love, with anyone who wasn't her.\"\n\n\"The draug woke up when I crossed the border. That just a coincidence, too, lich?\" Trician sneered.\n\nAstadia laughed, a hoarse and cackling noise, \"Of course not, you dumb cow. I woke them up. Sent them to shadow you.\"\n\n\"You really working with the human emperor? Bringing back Menes' magic?\"\n\nThe dead elf stared, \"Gods above, you're fucking stupid. How the fuck is my own sister so stupid? Even with most of the puzzle in front of you, you can't see shit. Fuck.\"\n\n\"Stop treating her like she's worthless.\" Orli said angrily.\n\nAstadia sneered, \"I am dead, witch. I don't have much of a soul. All I am is fucking rage! So, shut up the fuck up, before I get sick of both of you and break this fucking collar and rip out your throats!\"\n\nTrician frowned, considering everything, \"The emperor is bringing back Menes' magic. We didn't get that part wrong. But the method was. You... You were Menes' apprentice. You... You stayed alive to stop him. To fight him.\"\n\n\"Congrats, moron.\" Astadia said sarcastically, \"The emperor needs you. Your blood, and the blood of ten thousand orks. With that... He might actually be able to ascend.\"\n\n\"Why, her?\" Orli asked in confusion.\n\nTrician stared at her sister sadly, \"Royal blood. The royal blood of the elven line is bound to the Golden Mountain. Enchanted. Old magic, lost magic. There's nothing else like it... Menes sacrificed father, didn't he?\"\n\nAstadia punched the ground, cracking and shaking it, \"Of course he fucking did. That's how he made the abominations, like that fucker next to you!\"\n\n\"This fucker doesn't have that magic anymore.\" Tyre offered weakly.\n\nThe lich spat on the ground. Or at least made the sound and motion, but nothing seemed to come out of her mouth.\n\nTrician looked at her sister with pain, \"The goddess wanted you dead... Because she wants me dead. And Tresian. The three of us are the last of our bloodline... She assumed Twenty Four would use me, and then kill me.\"\n\n\"The gods keep trying to mess with that cat.\" Tyre muttered and shook his head, \"Someone has to teach them the meaning of self-preservation. It doesn't involve pissing off that neko.\"\n\nAstadia touched her collar, \"I could break this any time I want. I'm already dead. Blowing myself to hell wouldn't be a big deal. I blew myself out of it, to protect my fucking stupid sister, after the other one killed me. I hate this fucking family.\"\n\n\"I think what she's trying to say... Is that she loves you.\" Orli said quietly, squeezing Trician's hand.\n\nThe undead elf frowned, \"This... Thing... That helped you bind me, sister. What the fuck is it? Even if I was a god, it would make me shit my pants. Her aura isn't human.\"\n\n\"What about Toofy's aura, dead-elf? Is it cute enough?\" A familiar voice cut the air like a knife, despite the soft tones.\n\nTrician looked at the approaching neko, and her golden eyes. The neko seemed as cute as ever. She wasn't showing yet, either. If the elf hadn't known who she was, she would have been confused that the cat was acting like a threat.\n\nApparently Astadia knew who she was.\n\nHer sister scrambled backwards on the ground, twisting and breaking her arms in a mad dash to get away from her. \"Fuck! Please. Please. Fuck, no!\"\n\nToofy crossed her arms, glaring, \"Astadia is a little bitch. Toofy also doesn't like that Astadia wanted to sleep with her Sai. Did she touch him, when she was alive?\"\n\nThe pale-skinned woman flattened onto the ground in a bow, dropping her forehead to the dirt. \"Lord Sai rejected me. Said he never wanted to pass on his curse.\"\n\n\"Toofy still wants to hurt.\" The cat said angrily, and took a deep sigh, \"But she can't touch her death magic. Not with kittens. Won't ruin their souls to bind the Astadia. Assboy. You know Relanti's Rite?\"\n\nTyre nodded, \"Relanti? Sure. It's simple enough. Just blood magic. Binding two people to a promise.\"\n\n\"Swear to follow and obey the insane elf, and Toofy won't send your soul to oblivion.\" She instructed.\n\nTrician watched in confusion as Tyre sketched out an intricate circle of symbols on the ground. Her lich sister, who had summoned and controlled a nation-sized army, still panicking before a simple neko.\n\nThe elf had seen the neko's magic first-hand.\n\nIt wasn't Toofy's magic that was impressive. It wasn't the reason she survived, or thrived, when surrounded by so many enemies. She was average for an exotic.\n\nWhat was impressive was that Toofy was either a genius, or luckier than the god of luck.\n\nThat little neko had the gods themselves trying to control and manipulate her, and at every turn they failed. All they managed to do was piss off the cat, and give her more powerful weapons to use.\n\nWhich she was more than happy to make use of.\n\nThe bagman of the gods.\n\n\"Blood magic. Needs blood.\" Tyre said to her, \"Won't get any from the lich. Sister should work, with my modifications to the rite.\"\n\nTrician looked at the circle, and then over at her sister. \"Astadia... Despite everything that has happened... I don't hate you. Choose. Return to death, or be bound to me.\"\n\n\"I came back from hell to protect you, bitch!\" Astadia yelled, glaring at her with her dead eyes. \"Bind me.\"\n\n---\n\nSaia held her head as she stumbled out of the gateway's circle. The salamander had dropped her off at one on her way to ruin Lord Sai's day. Wasn't as bad as a flash dance, but still made her feel sick.\n\n\"Hold. Documents.\"\n\nShe looked blearily at the guards surrounding the gateway just outside the walls of the capital, and rubbed her temples, \"I left the city just yesterday. What the hell are you talking about?\"\n\n\"The city has been sealed.\" One of the guards barked, \"A permit is required, for passage in and out.\"\n\nShe tried out her new magic, lifting her wrist to show off a golden bell. She rattled the small item, \"I serve the will of the emperor. That good enough for you?\"\n\n\"An ambassador is of course welcome.\" The guard said and bowed his head, \"My apologies, m'lady.\"\n\nSaia struggled not to laugh. She'd felt the spell scan her bell, but apparently she really could make one as good as the real thing on a whim, now.\n\nThat was cursed magic for you. Might steal your soul, but it let you do whatever you felt like. With terrible consequences.\n\n\"What happened to seal the city in the one night that I was gone?\" She demanded.\n\nThe man bowed his head, \"There was a prison break, m'lady. The former priestess of the temple escaped.\"\n\n\"Efina.\" She growled, \"Well. They should have seen that coming. Bitch never did play fair... The temple is my destination. I assume security around it has increased?\"\n\n\"Yes, m'lady.\"\n\nShe pretended to be pleased with that, \"Good.\"\n\nSaia headed towards the city, but before she reached the front gate, she had transformed herself with a shiver and cracking of bones. A thrill of short and sharp pain.\n\nShe took on the form of an elven woman, who was a right twat, but would find it easy to get close to Lord Yu. Getting her walk correct was harder than getting the form.\n\nEsme walked with an arrogant sway of her hips, to emphasise the sound of the bell she wore there. Showing off that she was a favourite play thing of Lord Yu, and the property of Domina Florence.\n\nIt made Saia feel like an idiot.\n\nDidn't help that without her tail, she felt completely unbalanced and out of sorts. She'd only ever glamoured it away, never actually physically changed herself so it was gone.\n\nShe'd worn so many faces over the years, becoming more comfortable under a glamour than her own skin. But now that she literally was in someone else's skin, she felt like a beginner, all over again.\n\nShifting felt so different than just faking it.\n\nShe had plenty of time to get used to the new movement, and to experiment a little with the limits of shifting, as she made her way through the city to the temple.\n\nShe couldn't create anything that was actually separate to her.\n\nSo she could have a bell, but it was part of her. You would have to cut it free, and Saia wasn't quite willing to find out if afterwards the bell would remain or not.\n\nHeck, she didn't know if she had nerves connecting her to something like that.\n\nShe did notice that the longer she spent in a form that wasn't her own, the more she had to concentrate to stay in it. She had used an alley to drop back, before re-becoming Esme, and it became easy again.\n\nThere seemed like there were plenty of limits and rules.\n\nShe would have to have a very long talk with Tyre, if either of them survived the coming days. Which probably mean that she'd have to actually ask him what happened to Helen.\n\nShe could already guess parts of the story, but Saia had turned herself into an elf, and she didn't seem to have the instincts of an elf.\n\nSo why was the man who turned into a bear, mourning because he killed someone he had loved?\n\n\"Esme?\" A voice said in surprise, and Saia felt the familiar danger.\n\nShe turned towards them, looking over with absolute arrogance at the woman approaching her. They were some kind of mongrel, with short nekomimi showing up through their blonde hair, but also the ears of a human.\n\nShe only knew of three half-nekos in the city.\n\nAll three, funnily enough, were sisters.\n\nThey were officially daughters of Domina Florence. However, it was an open secret that they had been born as illegitimate children of Lord Westcolm on one of his whorehouse crawls.\n\n\"What do you want?\" Saia sneered, popping her hip.\n\nThe woman frowned, \"Well, I did want a drink. But you turned me down. Said you were too busy hunting -\"\n\n\"No shit.\" She interrupted the woman, \"What do you think I was doing? Going on a bear hunt? Bloody hell, idiot.\"\n\nThe woman moved closer, looking around fearfully, \"She's still in the city? I thought... She'd run away.\"\n\n\"She's got some grudges to settle, first.\" Saia said, pulling back her elven ears, and glaring, \"And number one on that list, is Lord Yu. So I think you should be running the other direction, hey? And leaving me the hell alone.\"\n\n\"Sorry.\" The woman mumbled nervously, briefly touching Saia's hand, before she turned and walked away.\n\nSo... Esme had a girlfriend. That was intriguing.\n\nIf she didn't have somewhere else to be, she would be using it to undercut the arrogant bitch and make her life hell. But, Saia had somewhere to be and someone to kill.\n\nThe rest of her trip to the temple went without incident. Not a second glance from any of the guards. She didn't even know if her new magic was detectable once she'd changed form.\n\nA glamour wasn't the easiest thing to detect in the first place. And this was a step up from that.\n\nThe succubus made her way to Lord Yu's private office, retracing steps that she knew so well. Remembering all the times she had made the trip with trepidation, knowing that a failure meant he was going to hurt her.\n\nNot this time.\n\nShe pushed open the door, and stepped inside with a ring of the bell on her hip.\n\nYu looked up from a half-flagon of wine, and glared at her, \"You found her, yet?\"\n\n\"Pretty sure. But I'll need your help to get to her, m'lord.\" Saia replied, not even trying to sound like Esme.\n\nHe glared at her, \"Pretty sure? What crap is this? Gods, I miss Elia. At least she knew how to bend over and take it.\"\n\nShe smoothly pulled out a cage and put it onto the desk, \"I found this, whilst tracking Lady Efina. I think I know what it is, but I also think I'm out of my depth. Sir.\"\n\nHe practically fell off his stool.\n\nThe man made his way around, half-stumbling, and stared at the hissing white creature inside the cage. He looked up at her and back down at it again, \"How in the fuck did you catch it without getting stung?\"\n\n\"With difficulty.\" She replied, \"I believe that one of these was also found when Lord Sai's assistant was killed. They're supposed to be a special thing, right?\"\n\n\"Special ain't the half of it.\" Yu breathed out with a belch of fumes, \"This... They aren't meant to exist. They're the symbol of the goddess of mischief. A betrayer god. One of those deities that is supposed to be trapped where they can't mess with mortals anymore.\"\n\nSaia nodded slowly, \"Curious. I suppose these must be the truth in the legend. They can't be native. Maybe Efina is using whoever she got them from to escape across the sea.\"",
        "Yu made his way across to a bookshelf, and began tossing books onto the floor, checking the covers frantically. \"No, you're not getting it. I know you don't really believe in the gods, Esme, but they don't care if you do. They exist.\"\n\nShe scoffed, covering the sound of her opening the latch on the box.\n\nHe paused and dusted off the cover of one of the books, \"Here it is. Mythic creatures... The Seven Step Scorpion. Bone white. A native creature of the nekan desert that went extinct before the creation of the neko race. So-called because you've got about seven paces before you're dead.\"\n\nSaia blinked, \"Quite poisonous. Nekan desert? So, we've found shells and crap that show they weren't always so mythic?\"\n\n\"Ancient times. Old enough that even the dragons weren't sure where the stories came from.\" Yu said quickly, \"Highly associated with another mythic figure... Do you remember anything from your history lessons about the pre-empire?\"\n\n\"Before the empire? The continent was mostly rabble. Tribes and clans. All species separated into their own loose little nations.\" She shrugged.\n\nYu shook his head, \"Not what I meant. I meant the Pre-Empire. An empire that existed long before the current one. This city is built on the ruins of one of their cities. It's buried beneath us.\"\n\n\"An underground city.\" Saia raised an eyebrow, \"Anyone ever find it?\"\n\nHe smiled at her, \"Of course. And every time someone does, the emperor makes certain to seal the entrance and kill those who knew about it. Can't have an easy passage for the assassins to get near him.\"\n\nShe shrugged, \"Okay... So what's so interesting about this Pre-Empire?\"\n\n\"It was ruled over by someone anointed by the gods. Like our emperor is a demi-god.\" Yu informed her, \"Unlike our own, this emperor was actually anointed, and crowned, by a deity. In person.\"\n\nShe shrugged, \"That supposed to be... Interesting?\"\n\n\"The Seven Step Scorpion is supposed to be the symbol of their emperor. As in, the emperor can summon them. Speak to them.\" Yu said slowly, and looked at the cage curiously, \"These things... Are extinct by several thousand years.\"\n\nShe shrugged and stepped back from the cage, \"Strange. But... Efina was using dark magic. Who knows what she could pull back from the dead? You think you can help me trace it?\"\n\nYu took a deep breath and walked over, leaning down to look at the cage.\n\nSaia winked one eye with a flash of magic, and the lid flew open.\n\nShe shivered, retaking her usual form as Yu fell back screaming and flailing. The scorpion gripping his face as the tail stabbed into him a dozen times over.\n\nHer tail flicked excitedly, and she sprang onto the table, glaring down at him with red eyes, \"The new empress sends her regards, asshole. Her name, if you care to tell the afterlife, is Toofy.\"\n\nShe smiled at the pain and fear on his face.\n\nAfter everything that he had done to her, after everything he had continued to do, this was nothing less than his deserved fate.\n\nYu's eyes rolled up into his head and he went still with a gasp and quiet rattle.\n\nThe scorpion that had been attacking the crap out of him let out a strange sound, almost like a squeal, before falling onto its back and curling up.\n\nSaia nodded to herself, and picked up the flagon off the desk, crossing to the dead man and keeping an eye on the scorpion's corpse, in case it wasn't.\n\nThe mug shattered on the first punch into his face.\n\nThere wasn't much face left when she was done.\n\nSaia stood up and let out a low and slow breath of relief. Feeling a weight lifting from her. Her mistress had given her a promise, and now it was done.\n\nThe succubus rolled her neck, and shifted again.\n\nShe looked at her old and male hands in disgust. However, it seemed appropriate, all things said and done. Sowing a little bit more discord and confusion would help.\n\nAdopting Yu's drunken swagger easily, she made her way back into the main section of the temple. Pausing in confusion as she saw the real Esmerelda actually poking around one of the walls.\n\nSaia made her way over, \"The hell are you doing here?\"\n\nThe elf jumped, \"I, uh... Sorry, m'lord. I believe that... Lady Efina, is here. I cannot be certain, so I haven't come to you, yet. M'lord.\"\n\n\"Looking for her hidden chambers?\" Saia said with amusement, \"Follow me, little elf.\"\n\nShe led the woman to the same place that Toofy had led her, and the two of them entered the forbidden room. Almost all the books and scrolls were gone.\n\nAs if the ministers were going to leave those behind after the discovery.\n\nEsme looked crushed, \"Shit. Sorry, m'lord. I have wasted your precious -\"\n\n\"Not a lord.\" Saia dropped back to herself with a cracking and popping of bones. \"Not a bad thought, little elf. But stupid if you think Yu would be polite enough to help with anything.\"\n\n\"Shit!\" The elf swore, throwing up a hand.\n\nSaia caught her wrist easily, sinking her claws in, \"Uh ah. I was being nice. No attacking me, now. Besides, if you make me hurt you, how would the Madame Florence feel?\"\n\nThe elf's eyes widened in terror, \"Please don't hurt her.\"\n\n\"Then don't hurt me.\" Saia rolled her red eyes and let go. \"It isn't like either of us much likes Yu, is it? I've got no reason to tell him about any of this. Just wanted to talk to you.\"\n\nEsmerelda winced, \"You want something.\"\n\n\"Mm... Not particularly.\" Saia shrugged, \"Actually... Maybe. I got hurt a little while back. Still healing. You could always help with that, but only if you're interested. I never realised you might have a thing for girls.\"\n\n\"I'm not supposed to.\" Esme said quietly, \"Yu forbid it. Domina Florence forbid it. She also explicitly forbid me going anywhere near any of her adopted daughters. I'm her slave. Please. Don't hurt me.\"\n\n\"Girl. I'm offering to play with you, not hurt you.\" Saia rolled her eyes. \"Interested? If not, I'll be on my way.\"\n\nEsme blinked slowly, \"Oh. Oh! Wait... Are you seriously propositioning me in a room that used to be full of dark magic?\"\n\n\"It isn't anymore. All the traps are gone, too.\" Saia shrugged, \"Can you think of a more secret place to fool around? I would have killed to have a private space like this when Yu was still my owner.\"\n\nThe elf smiled slowly, \"That is... True. And I doubt anyone is likely to find us here... But you also just hurt my wrist.\"\n\n\"Want me to kiss it better?\" Saia teased, her tail flicking in the air excitedly.\n\nEsme frowned, \"What would your current owner think, if she found out about this?\"\n\n\"Toofy?\" Saia scratched her chin, \"She might be jealous. But she did get rid of my slave collar. I ain't owned by anyone, Esme. I'm free. She even named me.\"\n\nThe elf stared at her, \"What the shit? The cat actually freed you?\"\n\n\"Apparently the collar doesn't hold up so well when you hit it with a friggin' lightning bolt.\" Saia chuckled, \"If you were thinking about running away from Florence.\"\n\nEsme bit her lip, \"I want to. I want to run away, with... The daughter.\"\n\n\"Oh.\" Saia grinned with a flash of her eyes, \"Are we making a deal, now, are we? You'll sleep with me, if I help the two of you run away?\"\n\n\"Mmm.\" The elf nodded, looking terrified.\n\nSaia shrugged, \"Sure. Why not? Toofy is about to declare herself the godsdamned empress. Take on everyone. If you feel comfortable coming back to a city swarming with friggin' dragons, I'll help you.\"\n\n\"D-dragons?\"\n\nShe chuckled softly, \"Yeah. You remember Meerakeilian? She tried to kill Toofy. And lost. But... Now she's turning into a he. And she's fuckin' Irrlichdan's heir.\"\n\n\"Holy fucking shit.\" The elf stared at her, \"You were serious. The freaking cat is going to try and take on the empire. With an army of dragons. Oh, wow. She might actually stand a chance. Maybe.\"\n\nSaia smiled at her, \"You in or out, elf?\"\n\n\"In. If you help me save Taudry, I will do literally anything.\" Esme said firmly, \"Besides... I've wanted to wipe that smirk off your face since forever. Yu always preferred you to me. I'm better.\"\n\n\"We'll see about that.\" Saia grinned and pushed the elf backwards onto the empty desk. \"Wanna cast a bit of a silence sphere? Don't want your bell bringing an audience.\"\n\nThe elf's eyes glowed a brief blue as she snapped her fingers, \"I was always better at you, at that.\"\n\n\"And I'm better at this.\" Saia said aggressively, yanking off the clothing she found beneath the elf's skirt.\n\nShe smirked as she descended down onto her knees, smelling the lust of the elf. Esme was just as much into this, as she was. It would be interesting to see which of them really was the better fuck.\n\nShe kissed briefly at her legs, and smiled up at the elf and shivered. There was a small, but painful, pop, and tiny neko ears popping up as her hair turned blonde.\n\n\"Oh gods, no.\" Esme shook her head, \"Shit. That's just creepy. I can't tell those ears are just an illusion.\"\n\nSaia laughed and grabbed a hand, and put them to the sensitive ears. Which immediately twitched away from the touch, and Saia felt a deep urge to miaow and scream.\n\nShe really fucking hated having the ears touched. Is that what Toofy felt?\n\nThe elf recoiled, \"What in the fuck!? How did you just... Grow nekomimi!?\"\n\nSaia laughed, \"Long story. But let's just say I can turn into anything that you desire. If you don't want me to be your girlfriend, name a fantasy. Like I said... I'm better than you, at this.\"\n\n\"Name a fantasy.\" Esme rolled her jaw, \"Fine. I can do that.\"\n\n\"Name one you'll actually enjoy fucking.\" Saia said tiredly.\n\nThe elf frowned, and took a deep breath, \"Always wanted to hate fuck the Domina. That count?\"\n\n\"Hate fucking doesn't sound that fun. I'd have to let you dominate me, and I've always wanted to be on top of you.\" Saia replied with a small smile.\n\nEsme rolled her eyes, \"Green Mother preserve me. Fine. I've always wondered what a domania might be like. You going to complain about that one too, before I dry up?\"\n\nDomania were rare as all hell. Hard to have household guardian spirits when the temple had tried to track them all down and kill them for siding with the betrayer gods.\n\nSaia had only really seen drawings in books.\n\nShe barely managed to avoid crying out as her neck broke during the transformation. Along with her ribs cracking and imploding, and every bone in her feet shattering.\n\nA cute little white-haired woman looked up from her knees with eyes of glowing blue flame. Before Saia knew what was happening, she was making a small keening noise, with a puff of white smoke floating out of her mouth.\n\nNot like a salamander. Her smoke didn't stream, it came popping out in little balls, embodying cuteness.\n\n\"Oh, shit.\" Esme shivered.\n\nSaia nuzzled her head into the side of the elf's leg, \"Y-you l... Like this form... Mistress?\"\n\n\"Oh, shit, yeah.\" The elf smirked despite herself. \"Oh, now that's how you make me wet, succubus.\"\n\n\"D-domania.\" She said with a little bob of her head, smiling sweetly, \"I... C-can I taste it?\"\n\nThe elf leaned back on the table, \"Please.\"\n\nThe tongue that snaked out of her mouth wasn't even close to human, surprising Saia. It managed to not just flicking at the elf's entrance, but actually snake a good fingers' length inside her as well.\n\nEsme cried out at the surprise intrusion, as Saia wiggled it around. The tongue wasn't quite prehensile, but it was damned agile. The little forks were sensitive, as well.\n\nShe rolled the tongue around, curling and uncurling. Darting it in and out of the elf's tight little slit until she was white-knuckle holding onto the edge of the desk.\n\n\"Oh... Oh, fu-uck, Elia!\" The elf cried out.\n\nHer tongue slurped at the dripping snatch, and she whispered, \"Saia. Little Saia.\"\n\n\"Green... Mother.\" The elf tried to say sarcastically, failing as the tongue darted back inside her. \"T-Twenty Four... Has shit taste... In names.\"\n\n\"Do you want me to keep going?\" Saia said angrily.\n\nEsme's face changed and she gave a small meek look, \"I'll behave. Fuck, I'll behave for you.\"\n\n\"For my tongue.\" Saia smirked, and then dove back into the light-tasting little snatch. She enjoyed the hell out of the way the elf was moaning, left completely at her mercy.\n\nThe succubus might not fully understand this form she was in, but it was damn well getting a reaction. She could feel a heat in her mouth, like it held a furnace.\n\nSeeing with eyes of flame was also taking some getting used to.\n\nBeing covered in an incredibly fine white fur, head to toe, was also a new experience. It wasn't something that you could see, not at first glance.\n\nBut there was no doubt that the elf could feel her silky fur as she shoved her face against the woman's dripping cunt. Slathering all inside her with gleeful abandon.\n\nSaia was almost as wet, herself.\n\n\"Oh, fu-fuck...\" Esme moaned, \"D-don't tell... Taudry... But... Fuck. You're better... Than she is.\"\n\nThe succubus felt a deep stirring as her pussy purred excitedly at the praise. Lapping faster and deeper. Feeling the heat in her mouth growing as the salty liquid slipped down her throat.\n\n\"Mmm. Mmm.\" The elf moaned urgently, \"Mmm. I... Mmm... I... I...\"\n\nSaia smirking as her tongue continued doing exactly what it had been doing. Not daring to change it up, knowing that her longtime rival was right on the edge of flooding her mouth.\n\nShe counted down the seconds in her head, feeling the squirming of the elf before the floodgates opened.\n\nThe succubus leaned back with a smirk and shiver as she returned to her own form. Licking her lips to swallow in the elf, before she stood up and looked at the flushed and exhausted looking woman.\n\nSaia frowned, \"I hope you're up to reciprocating. That was part of my deal for helping you.\"\n\n\"Just... Need a minute.\" Esme gasped quietly, and looked at her curiously, \"Why... Is one... Of your eyes... Green?\"\n\nShe shrugged and sat down beside the elf, \"Consequence of magic. Not something that's particularly sexy to talk about. So how long have you and the Madame Florence been an item? Since she bought you?\"\n\n\"Pretty much.\" Esme smiled sadly, \"It didn't start off very fun. Domina forbade the kittens from leaving the property during their coming of age. Three horny part-neko girls, all awakening at the same time, and forbidden from touching anyone.\"\n\nSaia snorted with laughter, \"Three eighteen year old kitties? Told that they can't fuck? That would have gone down badly. How long until they were up each other's skirts?\"\n\n\"It didn't happen that way. Well, not really. They had servants to corner and pounce on.\" Esme said tiredly, \"Just so happened that Taudry was the most reluctant to do just that. And she chose me, because I was a temple girl. Not knowing I was trained as an assassin, not a companion.\"\n\nThe succubus frowned, \"Did you hurt her?\"\n\n\"Nearly killed her.\" Esme flinched, \"I fractured her throat. Cared for her in secret, nursing her back to health. Both of us too frightened of the consequences to tell anyone.\"\n\nSaia rolled her eyes, \"So you fell in love. You did always go weak for the tropes.\"\n\n\"Like you can talk. Twenty Four? You actually let a neko give you a name?\" Esme scoffed.\n\nThe succubus frowned, thinking, \"You're going to be hearing her name a lot, soon. I know she just seems like a horny little cat... But Toofy will fuck you up, Esme. She's... Not everything about her makes sense. She has the luck of... Something divine.\"\n\n\"She's going to go up against our deathless, demigod, emperor. She better be fucking divine.\" The elf said quietly.\n\nSaia smiled, \"I met her mother. Adoptive mother.\"\n\n\"Really?\" The elf laughed, \"Someone willing to play parent to Twenty Four?\"\n\nShe nodded, \"Yes. And apparently she already was, back in the cat's temple days. Taking care of her, and then disappearing. There's... Some kind of curse. Toofy forgets the woman when she's gone, but remembers it all when she comes back.\"\n\n\"That's... A hell of a spell. I suppose you're being coy because I'll recognise the mother's name?\" Esme raised an eyebrow.\n\nSaia shrugged, \"Do you remember Yu teaching us about anomalies? The weird fucks that you're supposed to run away from?\"\n\n\"Handful of 'em. Yeah.\"\n\n\"Eratigan. The White Witch.\"\n\nEsme coughed and spluttered for a moment, \"Green Mother! The cat was adopted by that unkillable fucker?\"\n\n\"Yeah.\" Saia nodded, \"I feel kind of... Boring. Like I don't have a lot to contribute. I'm just an assassin. Now, Toofy has Eratigan... Meerakeilian is the Heir of Irrlichdan. Tyre fought beside the emperor and was a cursed abomination. Trician is a fucking royal. Toofy... She's got half the heavens behind her.\"\n\n\"Trician.\" Esme whispered in terror, \"The Godkiller is serving Twenty Four?\"\n\nThe succubus shrugged, \"Not sure if serving is the right word, but... Yeah. The princess bitch is there. Hates most of us, but her goddess said she has to serve Toofy, so she is.\"\n\n\"The gods.\" The elf shuddered, \"I... I'm not sure who I'm more afraid of, now. The emperor's wrath, or the wrath of the kitten I used to pick on.\"\n\n\"Make sure she meets Taudry, first.\" Saia laughed.\n\n---\n\nShe stirred the small petals into the hot liquid slowly, sitting and smiling down at the immobile man. \"In some ways, dearest, this is a mercy. A freedom from this quiet existence that you have been banished to.\"\n\nLady Castelle smiled sadly at the man, \"Oh, you were so beautiful, once. Do you remember it, I wonder? When we met?\"\n\nShe placed the tea down to seep, far enough away that the rising steam from the drink was unlikely to cause her any problems.\n\nThe lady brushed her hand across his forehead, straightening his hair out of his face. She leaned down and kissed at his forehead, and fondly remembering the time when she did love him.\n\nA time before he began to ignore her.\n\nA time before he felt the need to strike her, when they were alone.\n\nA time before he felt the desire to rapidly switch between either ignoring her altogether, and forcing himself upon her.\n\nShe kissed his forehead, \"Goodnight, m'lord.\"\n\n \n"
    ],
    "authorname": "shakna",
    "tags": [
        "catgirl",
        "neko",
        "succubus",
        "elf",
        "lesbian",
        "sexchange",
        "dragon",
        "salamander"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/toofy-ch-17"
}