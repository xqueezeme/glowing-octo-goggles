{
    "title": "Surefoot 15: Flinch",
    "pages": [
        "USS Surefoot-A, Deck 3 Fore, Alpha Squad Cadet Quarters: \n\nNeraxis Nemm snapped awake without needing an alarm, a trick she'd been able to do since she was a child, getting up to ensure her many younger brothers and sisters were up, dressed, fed and ready for school before their parents were even out of their own beds. She cast aside her bedcovers, eased herself out of the lower bunk, stretched, swivelled her neck about and scratched her pits. \n\nShe stayed quiet; Alpha Squad was scheduled for the Afternoon Shift and had a few more hours left to sleep, but she didn't. She turned to the slumbering figure in the top bunk, smirking in the minimal light from the wall clock as she tapped his shoulder, cooing softly, \"Come on, Scrappy, get up, time to get your ass handed to you some more.\" \n\nJonas Ostrow heard her, responding with a slight groan and a pull of his bedcovers up over his head. \n\n\"Come on,\" she urged teasingly. \"You agreed to it, and I've got the ring booked. Don't you want to get all hot and sweaty with me? I'll let you lather me up afterwards in the showers.\" \n\n\"Changed my mind,\" came his muffled reply. \n\n\"Too late for that, Deputy Squad Leader, I'm under orders. Come on, hands on socks, hands off co-\" \n\n\"Jonas,\" came the grumpy voice of Squad Leader Sasha Hrelle from her own bunk nearby. \"Stroking get up already, the rest of us need our sleep.\" \n\n\"Indeed,\" Kitirik agreed from his own bunk. \"I must respectfully insist on silence.\" \n\n\"See?\" Neraxis quipped. \"You have Kit swearing at you now.\" \n\n* \n\nDeck 3 Fore, Gym/Training Room: \n\nIt was quiet at that time of morning, the multifunctional combat ring ready for them. Neraxis and Jonas, wearing identical headgear and gloves, danced around each other, their vests and shorts gradually building up sweat, though Neraxis' blue Bolian skin didn't glisten as much as Jonas' pale human own. \n\nNeraxis grunted with approval as his right glove connected with the jaw padding on her helmet. \"Good! I didn't see that coming. The drilling we're doing will build up muscle memory that'll give you instinctive, rapid movements; if you can act and react faster than your opponent, you'll have surprise on your side.\" \n\nShe kept up her guard, jabbing back every now and then, passing up many openings his lack of experience unknowingly gave her, not wanting to discourage him so early in his training. When he seemed to be letting her hit him too much, she eased up and instructed, \"Start acting, stop reacting. When you're reacting, you're letting your opponent control the fight-\" \n\nShe cursed and stepped back when his fist connected with her ample chest. His moment of pleasure at getting a strike in evaporated immediately, and his face turned scarlet inside the framing of his helmet. \"Damn! Sorry!\" \n\nBut she shook her head and slapped her gloves together. \"Hey, don't worry, kid, it's nice to know someone onboard's willing to feel me up.\" She raised her fists once more. \"Speaking of getting felt up, has Thykrill asked you out yet?\" \n\nJonas stopped and dropped his guard. \"What?\" \n\nShe grinned. \"She's interested in you. I swear, pal, you keep this up and you'll be nominated for the James Kirk Tomcat Award.\" \n\nHe raised his fists again and resumed sparring. \"No, it's getting too distracting, especially with all the work we've got in our final year and the new duties onboard-\" \n\n\"Hold it, Scrappy - are you complaining that it's tough having all this female attention your way?\" \n\n\"Well, yes. I need a break from it.\" \n\n\"Don't you dare, there's enough of us making our bunks shake on our own without you joining in again.\" Suddenly she offered a series of jabs that forced him into a corner of the ring, leaving him with his forearms raised defensively. She stopped and stepped back. \"I told you: stay decisive, stay focused, stay in control. That's the key to success.\" \n\n* \n\nDeck 3 Fore, Enlisted Mess Hall: \n\nJonas returned to his bunk after the lesson, but Neraxis had a security staff meeting in an hour's time, so she stayed up, showered, dressed and indulged in some breakfast and a letter from home. \n\nThe Ktarian scrambled eggs kept falling off her fork, but she ignored it as she watched the letter: a chaotic affair of boys and girls shifting in and out of view, with only Mama as the eye of the storm, narrating on the latest affairs of the family. \"So, Myneva is wanting to shave her head because none of the other girls in her class have hair; can you have a word with her about it, dear? Tell her there's nothing wrong with girls having hair? \n\nAnd Kenoxena and Oshexis are still fighting over who gets your room when they turn fifteen. I keep telling them that they should share, but what do I know, I'm only their mother. Oh, and Neriwira has started dating the youngest brother of that idiot boy that you used to like, remember? Powa? The one with the pit stains?\" \n\nNeraxis remembered. Before she left for the Academy, she would have known all about this, every detail of the comings and goings. She had almost gone back home on the last break, but she accepted a request from Commander T'Varik for someone within Security to remain available while the Surefoot was docked at Starbase 154. Neraxis never regretted that decision... except at times like this, when the pangs of longing for her family returned. \n\nMama continued as she shooed more children out of the way. \"Oh, and Maixx and Qhife and Veliwia are doing a presentation at class about their big sister in Starfleet, after Harvest Break ends and-\" \n\nA wide, grinning, chocolate-covered blue face suddenly filled the screen. \"Hi Ner-Ner! I ate six donuts last night and threw up all over Lyvya! She was MAD!\" \n\nThe guffawing girl was shifted aside by Mama. \"Run along, Alazila. And clean yourself up! Again! Neraxis doesn't want to look at your grubby face!\" \n\nStaring at the PADD, Neraxis smiled at her family's pandemonium, missing it so much. \"Yes I do...\" \n\n* \n\nDeck 4 Aft, Security Bay: \n\nMore alert now, Neraxis still indulged in a Bolian coffee as she attended the briefing with the other cadets and security crewmen around the table, and Lt. C'Rash stood in front of the Status Board and briskly went through the itinerary. \n\nThe young Caitian was the very model of efficiency and professionalism, a quadrant away from the mercurial, libidinous character Neraxis first met only a week ago when the new Security Chief first arrived, driven by some personal troubles that she seemed to have put aside, if not behind her. \"The big event coming up is our rendezvous with the Iberia tomorrow. I'll want all hands on deck, Standard Security Duty 1. I'll let you know specifically who's covering what tomorrow.\" \n\n\"Lieutenant?\" Delta Squad's Security Specialist David Cheung, a beefy, broad-faced Terran with a close crop of sable hair on his head, spoke up. \"May I be issued with a phaser rifle for my duty shift, please?\" \n\nBeside him, Epsilon Squad's Bronagh Adams, a shorter but muscular Irishgirl with a freckled face and copper hair ponytailed behind her, sat up straighter at that. \"Yes, me, too, Ma'am. I think it might be more appropriate, considering we're on the frontier and all.\" \n\nNeraxis, sitting across from them, chuckled at Adams. \"I can see Cheung feeling the need to compensate - I've seen him in the gym showers - but what's your excuse?\" \n\nThe crewmen smirked at the joke; the new cadets shot her dirty looks, Adams responding with, \"I believe we were addressing the Chief of Security, Cadet.\" \n\n\"Yes, you were,\" C'Rash agreed. \"And the answer to your request is No. Who do you intend to impress with phaser rifles, Ms Adams, Mr Cheung? The crew of the Iberia? They're a tough group, they've been through the Seven Hells out here.  \n\nBut I'm glad you mentioned phasers: after the meeting, I want you two to check out a Type 1 phaser each from the Armoury and meet me on the Firing Range for assessment.\" \n\n\"That's okay, Ma'am,\" Adams assured her. \"We were certified at the Academy before our transfer to the Surefoot.\" She grinned. \"We both received perfect scores, and commendations from our Instructor.\" \n\n\"And you managed it despite being so humble and unassuming?\" Neraxis quipped. \n\nC'Rash ignored the Bolian. \"Well, I'm absolutely delighted that you two got perfect scores and pats on the head from the instructor, but you don't mind if I get a personal idea of your skills myself, do you? Seeing as how we and everyone else onboard might end up depending on what you can actually do, rather than what your records say you can do?\" To Neraxis she added, \"Cheung's due to return to complete the rest of his bridge duty; would you go up and take over for him? You were going to be up there at 1200 Hours anyway.\" \n\nNeraxis nodded, smiling. \"Sure, why not?\" \n\n* \n\nShe smirked with the memory of the look on Cheung's face when C'Rash asked Neraxis to take his place. Delta and Epsilon Squads seemed so wound up compared with the rest of them, though Kit had helpfully pointed out how much Alpha and the other older squads were when they first assembled: insecure, anxious, arrogant. Still, Cheung and Adams were going to have to settle down and- \n\nShe quickened her pace as the Red Alert klaxon filled the corridor, nearly banging her shoulder on the bridge doors as she slid between them before they fully opened. \"Sir?\" \n\nIn the centre chair, Captain Hrelle turned and nodded. \"Glad you made it, take your station.\" \n\nNeraxis glanced up at the main viewscreen, taking in a tactical display, and noting how they had gone into high warp, though she had been too distracted to feel the subtle shift - or maybe the ship was too new for all that? - but she took her place at Tactical, keying in her ID and calling up a status. But still she turned and asked, \"What's happening, Captain?\" \n\n\"Fill her in, Ledit.\" \n\nBehind Hrelle at Ops, Delta Squad Leader Ledit straightened up, the Hermat's lithe, muscular body as stiff as the creases in hir uniform as s/he intoned, \"A Federation passenger liner, the SS Nakatomi, was on a tour of this sector when it was taken by a Cardassian terrorist group. They have sent a message to stay back or they will begin killing their hostages.\" \n\n\"Hostages?\" \n\n\"That doesn't matter, Cadet Nemm,\" Hrelle informed Neraxis. \"What matters is that they are taking the ship across the border into Cardassian space, and we have orders to stop them, by any means necessary. We're on an intercept course now.\" \n\n\"Aye, Sir.\" Neraxis turned back to her station, calling up further information on the situation for herself, planning ahead. Always go in with a strategy, even if you end up changing it; that was true in or out of the ring. She brought up the Nakatomi's specifications, the tactical analysis, crew and passenger manifest - 60 crew, and... 600 passengers - and the cargo manifest, with an Alert flashing highlighting- \"Corbormite?\" She looked back at Hrelle. \"What's that, Captain?\" \n\nHe looked grave. \"Something we can't allow the Cardassians to obtain. That's all you need to know. Helm, what's our ETA?\" \n\nAt the station before Hrelle, Cadet Simon Utrecht's fingers danced over the displays. \"One minute, Sir, but they'll be across the border seconds after that.\" \n\nHrelle nodded, his gaze still focused on Neraxis. \"Plot us a firing pattern, Cadet Nemm. And hurry; this is serious.\" \n\nShe nodded - it had to be, he hadn't even bothered to delay things before more experienced crewmembers arrive - as she returned to her work, furiously moving over the displays, testing patterns, and then rejecting them as they resulted in the total destruction of the Nakatomi. No, there had to be a way. There was six hundred and sixty lives at stake here- \n\n\"Cadet Nemm,\" Hrelle cut through her growing anxiety. \"We need a pattern in place.\" \n\nShe swallowed, her heart pounding inside her chest. \"S-Sir, I- I can't find one that will keep the Nakatomi intact.\" \n\n\"I understand. Lock a pattern and be ready to fire on my command.\" \n\nShe looked to him pleadingly, her eyes wide. He couldn't be serious! He was Esek Hrelle, a legend! He had to know a way to stop them without killing them! \"Sir-\" \n\n\"Do it, Cadet!\" \n\nShe turned back, locked the first pattern she had written, brought a half-dozen photon torpedoes online, and watched the countdown before she had to fire. She accessed the passenger manifest, saw the names. The ages. 660 lives... men, women, children... \n\n\"Twenty seconds to rendezvous,\" Ledit updated. \n\nChildren. Children like Myneva, Kenoxena, Oshexis, Nerawira... \n\n\"Ten seconds.\" \n\nHer stomach twisted inside out. Her fingers trembled over the controls. Please, she begged him inside, stop this, change your mind, take over, do something, Holy Hraxor please don't leave this for me to do- \n\n\"Cadet Nemm,\" Hrelle announced, \"Fire.\" \n\nShe couldn't move. She couldn't breathe. Her head spun. \n\n\"Neraxis, fire!\" \n\nNow her hands trembled violently, a spasm that ran upwards, reminding her of the time she accidentally received a neuroleptic shock during a weapons testing class. \n\n\"Cadet Nemm!\" Ledit snapped in an annoying clipped tone. \"You were given a direct order-\" \n\n\"Stand down, Squad Leader,\" Hrelle ordered, rising to his feet, more loudly announcing, \"Computer: End Simulation Exercise.\" \n\nDistantly, Neraxis was aware of the cadets at their various stations reacting with shock as the Red Alert ceased, the ship seemingly dropped out of warp, and the viewscreen's tactical display vanished, replaced by a static starfield. She was also conscious of Hrelle drawing up to her, dropping to one knee and taking her shuddering hands away from her station. \"Neraxis, calm down, it's okay, it was just a simulation, that's all, a tactical simulation.\" \n\nBehind him, the cadets looked at each other, allowing Ledit to voice their feelings. \"Simulation? Sir, with respect, we were not informed of this beforehand-\" \n\n\"No, Mx Ledit,\" Hrelle snapped at hir over his shoulder. \"And I'm not under any obligation to do so!\" He faced Neraxis again, his voice softer, more sympathetic. \"There was no ship. There were no hostages, no terrorists. Do you understand?\" \n\nShe stared at him in disbelief. No. They were there, she was- there was nothing there. But- \n\nSomething like a cry escaped her. \n\n* \n\nDeck 1 Fore, Captain's Ready Room: \n\nCounselor Kami Hrelle's expression spoke volumes. But her voice still helpfully provided illustration. \"Well, I hope you three are happy. You managed to traumatise that young woman out there.\" \n\nSitting across from her, a shocked and contrite Hrelle leaned forward. \"That was never our intention.\" \n\n\"Indeed, Counselor,\" T'Varik assured her. \"Though the Nakatomi Scenario is by necessity and its very nature meant to help a future Tactical Officer face a potential situation that could inflict moral damage. And unlike the similar no-win scenario faced by Command cadets with the Kobiyashi Maru, Tactical cadets must not know that they are in a scenario, in order to achieve an authentic reaction.\" \n\n\"It's something any of us could face,\" C'Rash added soberly. \"Not every Security crewman has to take it, just those that man the Tactical Station on the Bridge. And I know it's the Captain that gives the order, but it's still our hands that carry out the act. I remember I didn't fire on my Nakatomi. But the experience still prepared me for the time when the situation was real.\" \n\n\"We wouldn't have put her through it at this time if we thought she couldn't handle it,\" Hrelle informed Kami. \"Your psychological assessment gave no warning signs.\" \n\nShe glared at her husband. \"Oh? Are you blaming me now for this?\" \n\n\"No,\" he replied sadly. \"I'm blaming me. Hurting that girl is the last thing I wanted to do.\" \n\nKami's anger weakened at his expression as she leaned back, hand on her bump. \"I know. Sorry, hormones are making me more maternal than professional.\" \n\n\"Will she be okay?\" C'Rash asked. \n\n\"I think so.\" Kami was scanning her PADD again, seeing the data audit Neraxis unknowingly left in the exercise. \"She kept accessing the crew and passenger manifest, seeing the numbers of lives she was about to take. Pausing at details of the children.\" \n\nShe set the PADD down again. \"Not surprising. She grew up in a large household, took on responsibility to care for her younger siblings, and she had been reluctant to go to the Academy and leave them behind. She was in a similar state when we rescued those Malurian children from that slave trafficking ring. She has strength. I think she'll get over failing the test.\" \n\n\"One cannot fail the Nakatomi Scenario,\" T'Varik pointed out. \"Any more than one can fail the Kobiyashi Maru.\" \n\n\"I know that; I just hope she knows that. Young people have a simpler worldview, untempered by experience.\" \n\n\"We did explain it to her before this meeting. However...\" Hrelle tapped his combadge. \"Cadet Nemm, please enter.\" \n\nThe Ready Room door slid open, and Neraxis stepped forward, looking more confident and animated than when he last saw her. She came to attention. \"Sir?\" \n\n\"How are you feeling, Neraxis?\" \n\nShe smiled. \"Fine, thank you, Sir.\" \n\n\"Cadet,\" T'Varik proceeded, \"We have provided you with a briefing on the nature and purpose of the Nakatomi Scenario. Did you understand it?\" \n\n\"Yes, Commander.\" \n\n\"And you realise that you didn't fail anything?\" C'Rash asked. \n\n\"I know, Lieutenant. It wasn't my fault.\" \n\nHrelle noted the growing look of concern on Kami's face as she studied the Bolian, despite Neraxis' seemingly-confident responses. \"It's perfectly natural to hesitate when faced with such overwhelming moral-\" \n\nShe looked to him. \"Excuse me, Sir, but I didn't hesitate.\" \n\nHe blinked. \"You didn't?\" \n\n\"No, Sir. I realise now that there's something wrong with me physically. It might be a virus or some neurological condition or something, but whatever it was, it kept me from doing my job. So, I'd like permission to go to Sickbay so Dr Ling can get it treated.\" \n\n\"Cadet-\" T'Varik began. \n\nBut Kami held up a hand. \"I think it's a good idea.\" She tapped her own combadge. \"Counselor Hrelle to Sickbay: I'm sending Cadet Nemm to you, I want her to undergo a full physical as soon as possible.\" \n\nOne of the nurses on duty responded, \"Will do, Counselor, Sickbay out.\" \n\nKami looked up at Neraxis and smiled. \"We'll get to the bottom of this, Cadet. Dismissed.\" \n\nNeraxis glanced at Hrelle, the senior officer in the room, and only departed when he nodded in assent. Once gone, he looked to his wife. \"You think that was wise? To encourage that denial?\" \n\n\"I must concur,\" T'Varik contributed, \"It cannot be helpful to allow her to believe that an outside agency was responsible.\" \n\n\"Denial is a buffer to emotional trauma. You don't just rip it off like a bandage. And the physical exam will take several hours, giving her an opportunity to process the truth at her own pace; she knows inside that no external agency was involved in her hesitation.\" She leaned forward, resting her chin on her fist. \"Still, what do I know? I've only been a Counselor for twenty-five years, whereas you three are clearly experts in the field. I should just go and let you manage all my work, you are obviously far better at it than me.\" \n\n\"Sarcastic much, Aunt Kami?\" C'Rash quipped. \"Or just hormonal?\" \n\n\"Why not both?\" Hrelle smirked - the smirk dropping at the look Kami hit him with. \n\n* \n\nDeck 3 Fore, Holodeck: \n\n\"Forgive me for saying so, Good Friend Jonas,\" Kit spoke up softly. \"But you have let the panel slip again.\" \n\n\"What? Oh, sorry Kit.\" Jonas adjusted his kneeling position and his grip on the projector panel as Kit, also kneeling facing him, continued attaching the power columns in the correct places. He glanced around; the Holodeck was unfinished when the new Surefoot was delivered to them, but Chief Grev corralled the Engineering and Science cadets to complete the installation. Once done, it will create any spacious environment with virtually total fidelity. Now, however, having ten people in here seemed crowded. ",
        "Especially when four of them, the cadets from Delta and Epsilon Squads, seemed more interested in gossip, led by Zajan, Delta's Suliban Science Specialist and Guforg, their Tellarite Engineering Specialist. Guforg led the conversation, clicking her hooves for punctuation as her beady black eyes lit up with glee over her narrative. \"I swear, it's true! She cried. She was actually crying! The Captain had to go over and console her. It was a pathetic sight.\" \n\n\"You're kidding. That big blue bruiser? Hard to believe.\" \n\nZajan grunted. \"Yeah. Well, I'm not counting on that Flinch to watch my back-\" \n\n\"HEY!\" Jonas nearly dropped the panel in his hands as he rose to his feet and glared at them. \"Watch who you're calling that!\" \n\nZajan smirked. \"I call 'em as I see 'em. You weren't there.\" \n\n\"I don't have to be! I know she's not that!\" \n\nGuforg chuckled, clicking her hooves in amusement. \"You sweet on that Flinch?\" \n\nJonas strode towards them, as the other cadets rose, some stepping forward to physically intervene. He ignored them. \"I said don't call her that!\" \n\nKit drew up as well. \"Forgive my ignorance, Good Friend Jonas, but what is the meaning behind this disagreement?\" \n\nJonas never took his eyes off the offending cadets, nodding towards them. \"They're insulting Neraxis! Calling her a Flinch!\" \n\n\"Forgive my continued ignorance, Good Friend Jonas-\" \n\n\"It's a midshipmen's term, Kit,\" Beta Squad's Nancy Yeager explained, shooting dirty looks at the Deltas and Epsilons. \"A nasty one. It means someone who's a coward.\" \n\nKit seemed to absorb this, then turned politely to the new cadets. \"I understand. I must respectfully correct you. I can assure you that Good Friend Neraxis is not a coward. I have personally witnessed her in physical combat against Nausicaans and Ferasans. She has proven to be a dauntless individual.\" \n\nZajan smirked again. \"She wasn't so dauntless on the bridge today. In fact I think she left a big blue puddle on her seat-\" \n\nJonas charged at him, as the rest of the cadets swarmed in to pull the two men apart, voices raised. \n\nUntil one new voice dropped them all into silence. \"Explain yourselves.\" T'Varik stepped into the centre, eyeing them all coldly. \"I said explain yourselves.\" When no one was forthcoming, she turned to Jonas. \"Mr Ostrow?\"  \n\nHe straightened himself up, shaking the hands holding him and staring at Zajan and Guforg. \"They accused Neraxis of cowardice. Called her a Flinch.\" \n\n\"That is no excuse for aggressive behaviour. Report to my office immediately.\" \n\nJonas started, as if about to question why he seemed to be singled out, before nodding, \"Yes, Ma'am.\" \n\nAs he departed, the smirks from Zajan, Guforg and several other of the newer cadets vanished as T'Varik focused on them. \"Was the aforementioned insult employed by yourselves?\" \n\nZajan's pebbled green skin was shifting in colour with the scrutiny, an obvious genetic holdover from his people's genetic experiments of centuries before. \"Yes, Commander, but it was-\" \n\n\"I did not ask for an explanation, Cadet. And was it in reference to the events that I know you and Cadet Guforg witnessed on the bridge today?\" \n\nSomehow his colours seemed to race more. \"Yes, Commander, but-\" \n\n\"I still have not asked for an explanation. Captain Hrelle provided you with information regarding the nature of the exercise you witnessed. You were also ordered not to discuss the events with anyone else. Did you wilfully disobey his orders, or did you simply forget?\" \n\nZajan looked to Guforg, allowing the Tellarite to reply, \"We, ah, forgot, Commander.\" \n\nT'Varik nodded at that. \"Your replicator credits are revoked for the next two weeks. You will have access to emergency rations only. They should assist with your memory problems.\" \n\nLouder now, she turned and addressed the rest of them. \"Return to your assignment; this discussion is ended.\" \n\nShe left them at that. \n\n* \n\nSickbay: \n\nNeraxis' bed slid out from within the claustrophobic enclosure of the deep scanning device. Dr Ling stood nearby, next to Cadet Bernadette Quinn, the Medical Specialist for Delta Squad. \"Okay, Cadet, you can get back on your feet. You're in good health. Maybe a little too much alcohol in your system, and you could lay off the Bolian souffl\u00e9s for a while, but-\" \n\n\"No,\" Neraxis said simply. \n\n\"Excuse me?\" \n\n\"There's definitely something wrong. I couldn't move my arms to carry out my job.\" \n\nQuinn looked to Ling. \"Did you want to run further tests, Doctor?\" \n\n\"No, Cadet.\" The elderly Asian woman folded her arms across her slim chest. \"I found nothing physically wrong with you, Neraxis. But I did hear about what you went through. In the face of such a difficult act, it's natural for you to hesitate-\" \n\n\"I didn't hesitate! Something is wrong! And if you can't find something internal, maybe it's external! Nanites or some energy being possessing me or-\" \n\n\"Neraxis...\" \n\nThe Bolian turned. \"Counselor?\" \n\nKami stood at the doorway into Sickbay. \"Come into my office with me.\" \n\nSilently, sullenly, she complied. \n\nKami slumped down into the couch, cursing as she adjusted her rear end to free her tail. \"The Bump is going to owe me a lifetime of Mother's Day gifts.\" She patted the other end of the couch in invitation. \"Do they have a Mother's Day on Bolius?\" \n\nNeraxis skid in warily. \"Um, no.\" \n\n\"To be honest, neither do Caitians, but it's always good to have an excuse to get gifts. Still, anyone can make a valuable contribution to the family. It can be a big sister, like you. How many siblings have you got? Eight?\" \n\n\"Nine. Five boys, four girls.\" \n\nKami smiled. \"And you know all their birthdays, their favourite colours and foods and games who's the Quiet One and who's the Little Devil-\" \n\n\"Is this going somewhere, Counselor?\" \n\n\"I hope so. Of all the cadets, you're the one who's come from a large family, where you were a caregiver. \n\nYou're more conscious than most about children and their welfare; they touch you on emotional levels the others can't understand. If someone else had seen that fake ship manifest, they might have seen them as nothing more than names and numbers. But you can't do that. You have empathy.\" \n\nNeraxis rolled her eyes. \"Great, that's a useful skill for Security.\" \n\n\"Yes, it is, actually! Understanding the emotional state of a potential threat, having the skills to defuse a hostile situation. It's not all about bare knuckles and photon torpedoes. \n\nYou think you failed the Nakatomi Scenario. You didn't. There is no failing it. It's a means of showing you something that, hopefully, you will never have to face in real life. It's an exaggerated scenario designed for maximum emotional impact. \n\nAnd I've checked the Academy statistics on it: 60% of Security cadets fail to fire on the ship in the scenario, including our current Chief of Security. You have nothing to worry about.\" \n\nNeraxis stared at a point on the floor. \"Counselor... can you guarantee that if a real life Nakatomi happens, that I won't freeze again?\" \n\nKami stared at her sympathetically. \"No one can guarantee that, sweetheart. Not me, not you.\" \n\nThe Bolian nodded in agreement. \"Then... I do have something to worry about. Don't I?\" \n\nShe rose. \n\n\"Neraxis-\" \n\n\"I appreciate your help, Counselor. You've given me a lot to think about.\" \n\n* \n\nDeck 2 Fore, Conference Room: \n\nAlpha Squad Leader Sasha Hrelle didn't like going on first impressions. It was something the Caitians in her extended family did, but Sasha knew it wasn't always accurate; certainly her first impression of Giles was radically different from what she felt about him now. \n\nBut from the very start, she didn't like Ledit. The Hermat was an intense, driven little engine, and s/he wore hir emotions on hir sleeve - most of them varying combinations of ambition, contempt and arrogance. She tried to put it down to hir people's short lifespans requiring a focus not seen in most other races, or to Ledit's desire to compensate for the more experienced cadets on the Surefoot. \n\nBut then there was hir behaviour in staff meetings like this one, where Ledit would feel the need to add to every point, to volunteer hir squad to do this and that - and to subtly point out that Alpha, Beta and Gamma Squads were somehow flawed for not being as committed - or as obsequious. \n\nMore than once she would look at Giles and Falok, and occasionally her father, at the head of the table like a patriarch; Giles would smirk, Falok would offer a raised eyebrow... and Dad would respond with a smile and a rude gesture, the latter hidden from T'Varik as if Mom was still around and not wanting her to see what he was teaching her. \n\nBut the attempts at distracting her from getting more annoyed fled when T'Varik offered, \"Is there any other business anyone wishes to raise before this meeting ends?\" \n\nAlmost immediately Ledit raised hir hand. \"Commander, I wish to lodge a formal protest against Alpha Squad Cadets Ostrow and Kitirik, for their assault on members of my squad.\" \n\nSasha straightened up. \"Excuse me?\" \n\n\"Assault, Ledit?\" Hrelle frowned. \"That's not how I heard it.\" \n\n\"Is someone going to tell me what the hell this is about?\" \n\n\"The details are irrelevant, Squad Leader,\" T'Varik informed her. \n\n\"Excuse me, Commander, but with respect I should know what is happening with members of my squad.\" \n\nThe Vulcan looked to Hrelle, who nodded. \"Neraxis underwent an advanced tactical exercise that proved emotionally trying for her. Members of Delta Squad witnessed this, and despite being ordered not to reveal the details, they reported this to other cadets. They also intimated that her reactions were a result of cowardice, and employed the derogatory term 'Flinch'. Jonas took offence on behalf of Neraxis, and made his objections vocal, but no actual physical altercation took place as far as I could discern.\" \n\nSasha felt like she'd stopped listening after the mention of cowardice, and just scowled furiously at Ledit, who appeared to remain cool and superior. \"I was assured that an assault took place; I have no reason to believe that my squad members would lie. And you responded by punishing Cadets Zajan and Guforg for being victims of this assault. And having directly witnessed Cadet Nemm's behaviour during the exercise, I will certainly corroborate the intimations of cowardice.\" \n\n\"Hey!\" Sasha rose to her feet, turning red and looking ready to climb over the table to throttle him, shaking off Giles' restraining hand on her forearm, to stab a finger in the Hermat's direction. \"Don't you dare say anything bad about one of my people! You have no stroking idea what you're talking about!\" \n\nLedit stared up at her with open contempt. \"It's clear where your squad members get their aggressive tendencies from. Perhaps you should be their Security Specialist? As for Cadet Nemm, she would obviously serve Starfleet better in another role. Anything would be more effective than her current one.\" \n\n\"You fakakta little prick-\" \n\n\"Sasha,\" Hrelle said simply, softly - but unignorably. \"Sit down. Now.\" \n\nShe looked over at her father, silent, reluctantly complying, shooting daggers at Ledit with her expression. \n\nThen Hrelle turned to Ledit. \"Cadet, how many people have you killed?\" \n\nThe question took hir aback. \"Killed? Sir, I haven't killed anyone. But-\" \n\n\"I estimate that in my lifetime to date,\" Hrelle continued quietly, \"I have killed over one thousand, two hundred and sixty people. A handful of those were with my bare hands, or with a hand phaser or other close-quarter weapon. But most were people I have never seen, people whose names I would never know, because I killed them from a distance, either in my role as Tactical Officer for various ships, or when I was in command of my own. You might think that I didn't really kill them, that I was operating under orders, either from my Captain or from Starfleet Command. I think differently. \n\nYou would also think that with so much experience it would get easier for me to take a life, or to order a life to be taken. It doesn't. And it shouldn't. Every life taken, no matter the justification, leaves a scar on your soul, and a Tactical Officer who goes into a situation taking lives without understanding that, is not one who will ever serve under me, or any other Captain of note. \n\nNeraxis' reaction to the scenario she was thrust into, without warning and preparation, was perfectly natural; it does not make her a coward. I respect her - and I will challenge any snot-nosed little punk who calls her Coward, or suggests she change her career path.\" He leaned in over the table towards Ledit. \"And I bet I'll win, too.\" \n\n\"Well said, Sir,\" T'Varik added, focusing on Ledit, \"And for the record, Squad Leader, Cadets Zajan and Guforg were punished not for being alleged victims, but for disobeying orders not to reveal details of the scenario.\" \n\nNow she looked to the other squad leaders. \"Those of you who have served under my authority know of my acute intolerance of disrespect. Not just towards superior officers, but towards each other. Consider this a warning that you will immediately forward to your respective squads: any use of the aforementioned word to describe any fellow crewmember will earn the one responsible severe penalties - and depending on the circumstances, up to and including expulsion. Is that clear?\" \n\nSasha, Giles and Falok nodded. \n\nT'Varik looked at the other side of the table. \"Mr Naavos, do you have a problem with this matter?\" \n\nThe Bajoran male dipped his head. \"In my experience, Commander, most people who equate the willingness to kill with courage, have never had to face the onerous task of doing it themselves. Those members of my family who served in the Bajoran Resistance all said that it was the victories they celebrated, not the killings that made those victories possible. I will forward your orders to my squad.\" \n\nThen all attention focused on Ledit, who drew up hir narrow chin, strands of truculent purple hair dropping in commas over hir high forehead. \"I of course will obey all orders given to me.\" \n\n\"Of course,\" T'Varik concurred. \"Dismissed.\" \n\nSasha made sure she caught up with Ledit outside in the corridor. \"Hey! Next time you have a problem with any of my people, you come to me, not to the First Officer or the Captain.\" \n\nS/he looked at her like some sort of insect climbing along hir arm. \"I followed procedure by bringing my concerns to the First Officer. I would not approach your father anyway, as his bias towards you is obvious.\" \n\n\"Excuse me? You think he plays favourites?\" \n\nBehind her, Giles and Falok drew up, Giles confirming, \"T'Varik has final say on the cadets, Mr Ledit.\" \n\n\"I'm not a Mister,\" the Hermat informed him archly. \n\nGiles flushed. \"Sorry, no offence. But it's true, Captain Hrelle doesn't play favourites. In fact he's twice as tough with Sasha compared with the rest of us.\" \n\nLedit made a dismissive sound. \"And I would expect to hear no less from her lover.\" \n\n\"Hey!\" \n\n\"I am not physically intimate with either of my colleagues here,\" Falok informed hir dryly, \"And I can attest to the Captains equanimity, as well as the First Officer's authority over the cadets... And for that matter, Cadet Nemm's courage.\" \n\n\"Yeah,\" Sasha agreed angrily. \"She's the one you'd want at your side in a fight.\" \n\n\"Not based on what I saw,\" s/he informed her. \"But if you gender-deficient types want to risk your lives trusting her, be my guest. Excuse me.\" \n\nAs Ledit departed, Naavos stood there, looking uncomfortable. \"Um, for the record, I think s/he's a jerk, too.\" \n\nSasha smiled ruefully. \"Well, do my fellow gender-deficient types like to get a drink in the Lounge?\" \n\n* \n\nDeck 3 Fore, Gym/Training Room: \n\nNeraxis punched the bag, again and again and again, eyes focused on the soft sighs it made with each connected punch, and the soft chink of the chain it was suspended on, with the sweat she felt beading down her bald blue head. She blocked out everything else: the announcements over the intercom, the ache in her arms and in her bare knuckles. The looks from the other crew in the area. \n\nNo. Those last she couldn't ignore. The contemptuous, accusing looks. \n\nThen she started at the appearance of Eydiir behind the bag, reading out and keeping the bag still, offering Neraxis greater resistance. \"In Terran pugilism, more deaths occurred in the ring after protective gloves were introduced, because fighters could inflict stronger blows to the head with gloves on. It seems it would be safer all around to feel some of the pain we can inflict on others.\" \n\nNeraxis didn't answer. \n\nThe Capellan peered around the bag. \"There is an android in Starfleet, on the Enterprise. Did you know? They say he has no emotions. No hate, no love, no jealousy, no fear-\" \n\n\"Sounds ideal,\" Neraxis grunted. \n\n\"It sounds nightmarish. Even Vulcans have emotions. I don't want to stand beside someone without fear.\" \n\nThe Bolian stopped punching and straightened up. \"Leave me alone, willya? I'm blowing off some steam, I don't need life lessons from you, too.\" \n\nBut Eydiir stepped around to face her directly. \"I have killed. I have killed on my homeworld. I have killed in the line of duty since joining the Academy. I have been called ruthless and cold. But faced with the terrible situation you faced on the Bridge... I would have faltered, too.\" \n\nNeraxis stared at her, before nodding. \"Thanks. But you're Medical, not Security. It's expected of you. Now, if you'll excuse me I've got a call scheduled for home now.\" \n\n* \n\nDeck 3 Fore, Enlisted Mess Hall: \n\n\"Ner-Ner!\" Mama frowned, then grinned, and then frowned again. \"What's wrong, sweetheart?\" \n\nNeraxis sat in the far corner of the Enlisted Mess, PADD propped on her raised thighs, out of view of the few in the room. \"Nothing, Mama. Can't I drop you a surprise call every now and then?\" \n\nHer mother drew closer to the household communicator. \"Not when it's this time of night! And not when I see that expression on your face! Now what's wrong? Is it your Captain? Is he giving you trouble? I'll drop a note to him-\" \n\n\"NO! I mean, No! He's amazing... he reminds me of Papa. It's just...\" She could feel the purple tears welling up in her eyes. \"I don't think this is working out for me. Starfleet, I mean. I thought it would, but-\" \n\n\"Neraxis-\" \n\nShe wiped her face. \"I just- I just wanted to know that- if it doesn't- can I- can I come home again?\" \n\nMama reached up and touched the viewscreen. \"Oh my sweet baby, of course you can. This is your home, it always will be your home. And if you need to come home, you come home anytime. It's just... you seemed so happy being there...\" \n\n\"I was...\" Neraxis admitted, giving up on stemming the tears now. \"I was.\" \n\n* \n\nSecurity Bay: \n\nLt. C'Rash didn't know Neraxis well, but saw enough of the change in the girl to know she was still shaken up over the exercise, enough to want to talk to her after the meeting. She also couldn't help but notice the hostile looks cadets Cheung and Adams were giving Neraxis from across the table; she was definitely going to have a talk with them, too. \n\nThe Caitian stood by the status board, making sure not only the five Security cadets could see, but also Ensign Gorman and the three Security crewmen, the schedule C'Rash had organised for their duties while the Surefoot remained docked with the Iberia. \"Gorman and Sanders, you'll be on Docking Bay 1, managing traffic. Thykrill, you're with Ssilrik at Cargo Bay 1, running standard scans on the goods prior to transport; some of them will be sensitive materials, so ensure the security seals are intact. Cheung, you, Adams and Nemm will man Docking Bay 2-\" ",
        "\"Excuse me, Lieutenant,\" Cheung asked. \"May I have an alternative assignment, please?\" \n\nThe temperature in the room seemed to cleave in half. \n\nThe sable-furred Caitian stared at the young cadet in sheer disbelief. \"What did you just ask me?\" \n\nCheung was sneering now. \"May I have an alternative assignment, please, Ma'am?\" \n\nBeside him, Adams wore a similar expression. \"Me, too, Lieutenant. We have no interest in working with Flinches.\" \n\nNeraxis rose to her feet. \"Excuse me, Lieutenant, I need to speak with the Captain-\" \n\n\"Stay right there, Cadet.\" C'Rash approached the table where the cadets sat, addressing them all, and sounding calmer than she looked seconds before. \"There seems to be some issue regarding the Nakatomi Scenario and the expected reactions to it. Now, I'd be interested in knowing how the other cadets might have responded to the order to destroy a ship full of Federation civilians - and I am ordering all of you to be honest with me.\" She looked to Thykrill. \"How about you?\" \n\nThe Andorian's antennae dipped at the attention aimed her way. Her dark blue eyes narrowed. \"Once, I might have said I would do it without hesitation. But I have since faced real threats, threats who were out to kill me. Death... became more real to me. My own, and others.\" She looked up at a downcast Neraxis. \"I have never been overly fond of the Bolian... but I do not envy the burden she was given.\" \n\nC'Rash nodded, looking to Orogg. \"And how about you?\" \n\nThe tall salmon-pink Saurian's wide ovoid eyes darkened, and his thin lips pursed in scrutiny. \"I might have done it. But I do not know how I would have felt afterwards. No matter the justification, there must be guilt. How can there not be?\" \n\nAcross from them, Cheung made a smirking sound. C'Rash turned to him. \"How about you, sport? How would you have handled the orders?\" \n\nCheung glanced around, visibly puffing himself up to reply, \"Without a problem, Lieutenant.\" He shot a contemptuous look in Neraxis' direction. \"It wouldn't have bothered me.\" \n\n\"Really? No sleepless nights? Nothing?\" \n\nHe shrugged. \"Tough for them, but I'm just doing my job.\" \n\nC'Rash nodded at that, and looked to Adams. \"And you, Cadet? Would you have had any problems following that command?\" \n\nThe Irishgirl leaned back and smiled. \"I'd have been firing before the Captain even finished the order.\" \n\nNearby, C'Rash felt Gorman and several of the more experienced crewmen react to that; they understood where she was taking this line of questioning. \"Oh, really? Well, that's illuminating.\" She smacked her combadge. \"Lt C'Rash to Commander T'Varik.\" \n\n\"T'Varik here.\" \n\n\"Commander, effective immediately Cadets Cheung and Adams have had their security certifications revoked.\" \n\nCheung paled, rising to his feet. \"What? You can't do that-\" \n\nC'Rash stabbed a finger in his direction. \"Sit. Down. Now.\" As he nervously complied, she continued. \"They're on Minimum Security Status, restricted to their quarters, with supervised access only to the mess hall, gym and instruction room. They'll need to recertify, and undergo full Counseling assessments; I believe you can provide the required retraining programs, and the Counselor can accommodate the latter. It'll take them a week at least to get back to speed, and the rest of my team will have to cover for their absence. But as a gesture of thanks, Delta and Epsilon Squads will forfeit their group replicator rations for the interim to my security crew.\" \n\n\"Acknowledged,\" the Vulcan confirmed. \"May I ask the reason they lost their certification?\" \n\n\"Disrespect. Lt C'Rash out.\" She sneered at a stunned-looking Cheung. \"Why look so shocked? You just told everyone here you would have no problem with killing hundreds of innocent people. Do you think that's normal? Do you think that's responsible? Do you think the Captain wants someone like that at the phaser controls? There's a reason you undergo Compulsory Counseling whenever you're involved in the death of someone else: because it's recognised what a terrible, traumatic act it really is. No one should look forward to it, or dismiss it.\" \n\nThen she turned at an ashen-faced Adams. \"And you! Did you really think I'd be impressed with someone who claims they'll fire on another ship before the captain even finishes giving his orders? Oh I'm impressed all right - I'm impressed that you two arrogant little tailchasers managed to get as far as you have without any understanding of what it means to do this job.\" She pointed at Neraxis. \"And you have the gall to look down on her? I'd sooner have her at my side than a hundred of either of you! Mr Gorman, escort them to their quarters.\" \n\nThe ginger-haired young ensign drew up to the cadets. \"Come on, geniuses.\" \n\nAs she watched them rise and walk out, Crash regarded Neraxis, who still looked ready to walk away. \"Ignore them, they know nothing. Cadet Thykrill, you and Nemm will man Docking Bay 2.\" \n\nThe Andorian rose. \"Aye, Lieutenant.\" \n\nBut the Bolian girl continued to look defeated. \n\n* \n\nThe Surefoot met with the Iberia, docking clamps were engaged, and with a surprising level of assuredness, courtesy of the supervision of Lt. Neheru, the crew began the process of transferring cargo, with the appropriate level of security provided for various materials like photon torpedoes and phaser power packs. \n\nNeraxis and Thykrill took their posts, saying nothing to each other... but whenever Neraxis looked at the Andorian, Thykrill would offer her a supportive nod. It was almost a relief. \n\nUntil the time she was given a break, and went to grab some food in the Crew's Mess Hall - and finding Jonas there, tucking into a huge and delectable-looking double cheeseburger. He brightened up as he saw her approach with her own tray. \"Hey, there's my sparring partner! How's it going with the cargo transfers?\" \n\nShe settled down opposite him. \"Boring.\" \n\n\"Sorry to hear that.\" \n\nShe shook her head. \"Don't be. I've had enough excitement for a lifetime.\" She picked at her curry. \"I heard you got in trouble with T'Varik sticking up for me. You shouldn't have done that, Jonas. I'm not worth it.\" \n\nHe smiled. \"Don't sound so special. I'd have done the same for anyone in Alpha Squad.\" \n\nShe let her fork rest in the concoction. \"You don't know what that test brought out in me. You don't know how it made me feel-\" \n\n\"It made you feel lost,\" he ventured soberly, catching her attention once more. \"It made you feel adrift, and alone, and afraid. I've been there, remember? You, and all my other friends reminded me that they were there for me. We love you, Neraxis. I love you.\" \n\nThen they were interrupted by Ledit, who approached and sat down without invitation beside Neraxis, a cup of black coffee in his hands. \"Good evening, cadets, I trust you both are well?\" Without waiting for a reply, assuming s/he ever wanted one in the first place, s/he turned to Neraxis. \"You're looking better than when I last saw you, Cadet Nemm. Perhaps you've managed to appreciate the opportunity you received?\" \n\nShe looked at hir. \"What are you talking about, 'opportunity'?\" \n\n\"We're having a private conversation here, Mx Ledit,\" Jonas informed hir coldly. \n\nLedit ignored him. \"The opportunity? To see what you're made of, as the humans like to say? Better to do it now in a false scenario than when you're genuinely needed by others, but can't meet your obligations, and real lives are lost because of your inaction.\" \n\n\"She has no problem meeting any obligations,\" Jonas snapped. \n\nNow Ledit glanced at him. \"You didn't see her on the bridge. No offence to her, but it wasn't a pretty sight. Do you really think Captain Hrelle will trust her again? Or for that matter any captain, now that this is on her record?\" He focused on Neraxis again. \"The senior officers and the squad leaders had a meeting about you.\" \n\nShe looked up again. \"You did?\" \n\nThe Hermat nodded. \"I just wanted you to know that you have our full support, should you choose to stay in Starfleet. On an alternate career path, of course.\" \n\n\"What?\" \n\n\"Well, it's obvious that Security isn't the right career for you. I thought perhaps Engineering? That's a less challenging field.\" \n\n\"Excuse me?\" Jonas exclaimed. \n\n\"Or perhaps the Support Services?\" Ledit suggested. \"Someone has to keep the ship clean.\" \n\nJonas rose to his feet, looking ready to climb over the table and throttle hir. \"You need to get the hell of out here before I send you to Sickbay.\" \n\nLedit remained unmoved. \"You need to calm yourself and sit down again, Cadet, before you're up on charges for threatening a Squad Leader.\" S/he offered a baring of hir pointed teeth. \"After I've taught you a painful lesson, of course.\" \n\n\"Sit down, Jonas,\" Neraxis urged quietly - but then stared Ledit down. \"I'm not taking an alternate career path; if I'm not good enough for Security, I'm not good enough for Starfleet. And if you threaten Scrappy or any of my other friends again, I'll put my boot so far up your ass your next turd will be leather-bound. And since I'm ready to be kicked out now, I have nothing to lose by doing so.\" \n\nLedit regarded her, before rising up. \"I was merely trying to be helpful, Cadet Nemm. Good luck with your future, wherever it takes you - because it certainly won't be here.\" \n\nHe left. \n\nJonas settled down again. \"Jerk. Don't listen to hir, s/he's talking crap. I'll tell Sash-\" \n\n\"No.\" Neraxis stared at her food, her appetite gone. The Captain, T'Varik, Kami... they all thought she wasn't cut out for this, despite their assurances. Fine. \n\n* \n\n\"Come.\" \n\nNeraxis entered, glancing around the Ready Room. \"Sir, I-\" \n\nShe stopped and saw Hrelle looking at himself. Literally. He was near his desk, in front of the holocommunicator disk on the floor, which now projected an exact duplicate of himself, only sporting a white canvas harness on his back. He kept walking around the image. \"Hi, Neraxis. Come on in. What do you think?\" \n\n\"Um... what is it supposed to be?\" \n\n\"A cub harness; Caitian infants develop quickly, and the Bump will be up and about before you know it. I have my holocommunicator tied into the replicator systems to display various items available, clothes and accessories, that sort of thing, as they would look on me. I know the birth is months away, but Kami's pheromones are making me even more broody and protective of my cubs than usual. Anyway, I've narrowed it down to two: this one.\" He touched a control on his PADD. \"And this.\" \n\nThe image changed slightly, to display a similar harness but worn on the front. \"Which do you think is better, to have the cub in front or on the back? I have no experience with this sort of thing, and Sasha was already six when I met her mother. Maybe I should get both?\" \n\n\"The one on the front, Sir.\" \n\nHe looked to her. \"Really? I thought the cub would want to watch where we're going.\" \n\nShe shook her head, smiling. \"The only thing they want to look at is you, Sir. Later when they're crawling, they'll want to get away from you and explore the Galaxy. But until then, you are their Galaxy.\" \n\n\"I never thought of it like that.\" He smiled. \"I probably seem so naive to you.\" He turned off the image and approached her. \"I'm glad you're here, I wanted to talk to you-\" \n\n\"Sir,\" she cut him off. \"I'm coming to you with this instead of Commander T'Varik, because I think you might understand better-\" \n\n\"You want to quit.\" \n\nShe stopped. \"How did you know?\" \n\nHe shrugged. \"I've been in your position, years before you were even a glint in your mother's eye. Speaking of which, I was also talking with her before.\" \n\n\"You were?\" \n\n\"The parents of all my cubs have the priority protocols necessary to reach me in emergencies - thankfully, most of them haven't abused that privilege. She was worried when she talked with you earlier today, said that wasn't her little Ner-Ner.\" He smiled at the nickname. \n\nShe flushed purple with embarrassment. \"Sir, I'm sorry that she-\" \n\n\"That she what, was concerned for you? As a fellow parent, I can hardly fault her.\" He set a hand on her shoulder. \"Okay, let's go to the Shuttlebay to continue this conversation.\" \n\n\"The Shuttlebay, Sir?\" \n\n\"Yes, we're going away on a mission; I've cleared it with C'Rash and T'Varik. You and I are off to reconnoiter our next assignment.\" \n\n\"Which is?\" \n\nHe smiled. \"That would be telling.\" \n\n* \n\nThe runabout Sureswift launched within minutes, and Neraxis remained distinctly uneasy and expectant, waiting. Waiting for the inevitable lecture from Captain Hrelle about how wrong she was to feel like this, how she couldn't quit and throw away her dreams like this, etcetera. \n\nBut he didn't. He chatted happily away about Kami's pregnancy, his own phantom discomforts whenever the Bump was restless, the amusement at how ruffled Lt. Neheru got over Lt. C'Rash's grooming herself in the Rec Room, even a comparison of the replicators between the Officers' and the Enlisted Mess Halls. They shared a dinner of extra spicy fried chicken, as well as a collection of some of the filthiest jokes ever imagined. \n\nShe loved the time. It reminded her of the nights she spent with Papa before he died, before she took on so much responsibility around the household while her other parents were busy. \n\nBut still, the expectation of the inevitable grew too much, and she finally declared, \"I'm not changing my mind, Sir!\" \n\nHe sat across from her in the cockpit, a last chicken drumstick half-finished in his grip. He offered it to her. \"Look, Neraxis, if you want the rest of it-\" \n\n\"You know what I mean, Sir!\" \n\nHe scrutinised her, before turning and flinging the drumstick into the replicated bucket with the rest of the remains. He licked his fingers. \"Fine.\" But then a proximity alarm made him sit up and run his greasy fingers over the controls. \"Ah, we're coming into view of our destination.\" \n\nNeraxis frowned. \"Destination? You mean we're not just-\" \n\n\"Not just what? Do you think I'm the type of commanding officer who would use Starfleet property to take one of his crew out on a bogus mission just to help them deal with a personal crisis?\" \n\nShe looked at him and smiled. \"Yes, Sir. Yes, you would.\" \n\nHe laughed - then nodded ahead. \"See for yourself.\" \n\nShe did. They were quickly approaching a large, derelict, depowered starship, of obvious Starfleet design and construction. The distinctive two vertically-stacked nacelles told her it was a Challenger-class ship, and there were large chunks blown from its saucer section and the lower nacelle. She stared at it in fascination. \"Sir?\" \n\nHe stared as well. \"Cadet, say hello to the USS Limaari: NCC-44771. She's proudly served on the Tholian, Tzenkethi and Cardassian borders for sixty years. Named for Otahn Limaari, a 22nd Century starship captain who commanded a Daedalus-class ship named the Charlemagne during the Romulan War.\" He chuckled. \"I served on her thirty years ago, and when I first boarded, Captain Cassius Tolliver made us all memorise the history of the vessel, stressing how important it was that we knew where we had been, before we knew where we were going. I can't believe I still remembered that, after all this time.\" \n\nAs Hrelle piloted, gliding the Sureswift around the much larger vessel, Neraxis stared out at it, her own worries momentarily set aside. \"What is she doing out here?\" \n\n\"It was her last post, on the frontlines during the Cardassian War. She remained behind with a skeleton crew to take on three Galor-class warships and buy time for more damaged vessels to make their escape. She's been out here adrift ever since; Starfleet Command asked us to make an assessment of its potential for retrieval and salvage.\" He grunted. \"I'm amazed so much of her survived intact. Amazed and pleased. She's too fine a lady just to go to the scrapyards.\" He drew them up to the Engineering Hull and parked them against the hull itself with magnetic clamps, before rising to his feet. \"Come on, suit up.\" \n\nShe looked at him. \"Suit up, Sir?\" \n\nHe nodded. \"I told you, we're here to make an assessment. And I'm not going to pass up the opportunity to visit one of my old stomping grounds.\" \n\nShe wanted to protest, without knowing why. She looked out again at the hull of the Limaari. She remembered reading about her, about the sacrifice she made during the War. To say that she walked its decks, before she returned home to Bolius... \n\nIn ten minutes they were in exosuits and beamed aboard, hand torches lighting the way, their magnetic boots keeping them to the floor as they moved through one of the lower decks, nudging aside debris floating in the zero gravity around them. \n\nAnd suddenly, Neraxis was afraid. She blamed Jonas, and his penchant for those old Terran horror videos of spooky houses and hospitals. Bolians didn't believe in ghosts, but Holy Hraxor, she couldn't stop the chill racing down her spine as she almost urgently covered every corner they approached with the light from her torch. Damn it, Scrappy- \n\n\"Spooky, isn't it?\" Hrelle asked, as if reading her mind. \"No one's been back since she'd been abandoned.\" His tail, sheathed in its own attachment at the rear of his exosuit, slapped against the adjacent wall, making an eerie sound. \"Damn.\" \n\nShe looked to him. \"What's wrong, Sir?\" \n\n\"My butt itches.\" \n\nShe chuckled. \"Thank you for this, Sir.\" \n\n\"For what?\" \n\n\"A final adventure.\" \n\n\"Who says it's final?\" \n\nShe grew sad again. \"I do, Sir. I know you mean well, wanting me to do something other than Security-\" \n\n\"Who says I want you to do that?\" \n\nShe stopped. \"Squad Leader Ledit. You all had a meeting about me.\" \n\nHe frowned. \"No we didn't. You were brought up in a meeting, by hir, s/he recommended you try an alternate career path, and I basically recommended s/he kiss my furry ass.\" \n\nIt was bullshit? That son/daughter of a bitch! But still, it didn't change how she felt now. \"Captain, I can't go on, I don't know if I'll... I tried to convince myself something was wrong with me. All that was wrong with me was that I was terrified.\" \n\nHe stopped and stared at her, his concern and consternation clear through the visors of their respective helmets. \"You were faced with the prospect of ending hundreds of lives, even if they were under my orders. Why would you think that being terrified by that prospect is wrong? It is terrifying! It should be! \n\nI took my Nakatomi when I was a midshipman, older than you are. It was slightly different from yours; they actually played fake audio logs of the crew and passengers calling for help, crying, begging for mercy, as I was ordered to blow them up. \n\nNeraxis... I peed myself. I tried to hide it, excused myself as quickly as I could. But people found out - certainly the next guy in that seat figured it out. They called me Scaredy Cat for a year, which admittedly is probably better than the urine-themed names they could have come up with. \n\nI was humiliated. I was angry. I wanted to go, too. Later, I understood the purpose of it all. \n\nNeraxis, I don't want someone up there who doesn't care about the potential for loss of life! I don't want a thug, I don't want an assassin. I want someone I can trust.\" \n\nHis gloved hands reached out and held her by the reinforced shoulder pads on her suit. \"I trust you.\" \n\nShe looked up at him, fighting the torrent of emotions within her. Wanting to believe him. \"I could- I could fail next time-\" \n\n\"Maybe. I could fail, too. So can Kami, or Dr Ling, or Chief Grev, or Sasha or anyone else onboard the Surefoot - except for T'Varik; she's really annoying about that - but that possibility exists no matter what we're doing, whether we're Starfleet officers or parents or partners. You may as well be doing something you love.\" ",
        "She swallowed - then jumped, as he did, as the lights came on around them, and gravity reasserted itself, objects dropping noisily around them. \"What the- we didn't do that, did we, Sir?\" \n\nHe drew back warily. \"No.\" He removed the tricorder clamped to his belt and scanned the area, moving up to an upper vent grille in the corridor nearby. \"Life Support's coming back online.\" \n\n\"How? Did we trigger some automatic process?\" \n\n\"I don't think so.\" He nodded to a Jeffries tube access. \"Main Engineering's the best place to get some answers.\" \n\nIt was a tight squeeze, with their suits on, but they managed to descend the requisite decks and along the main accessway. He stopped and motioned to the communicator panel on her exosuit glove. She understood, switching to an encrypted frequency. \"What do you think is happening, Sir?\" \n\n\"I think we're not the only ones onboard. Keep your phaser handy.\" \n\nShe started, seeing he'd already drawn his own. How did he manage that? \n\n\"Muscle memory,\" he replied. \"Years of practice. You'll pick it up too, the way you do with your boxing.\" \n\n\"Sir?\" \n\n\"You were mumbling about how I drew my phaser without you seeing me do it.\" \n\n\"I did?\" \n\n\"Well, it's that, or I'm a telepath. Now hush, I'm trying to listen.\" He nodded ahead of them. \"It's tough to pinpoint with this helmet on, but I'm hearing voices, activity.\" \n\nThey moved more stealthily, drawing around the corner to find themselves on the upper level of Engineering, peering down at a collection of diminutive humanoids with tangerine skin, bulbous heads and enormous ears, scurrying around the various control panels, bringing systems to life. Beside them, exosuits lay, discarded like shed skins. \n\n\"Ferengi,\" Hrelle muttered. \n\nNeraxis blinked. Holy Hraxor, those were Ferengi? News spread about them quickly through the Federation once they finally emerged from myth and legend. They had a formidable reputation. Here they seemed... less formidable. \"What are they doing?\" \n\n\"Claiming salvage rights on the Limaari, it looks like.\" \n\n\"You can't claim salvage rights on Starfleet vessels! Not in Federation space.\" \n\n\"Ferengi operate by their own rules, chief of which is Finders, Keepers.\" He peered over the railing. \"Beam back to the shuttle and call for the Surefoot.\" \n\n\"Captain, I'm not-\" \n\nSuddenly the observation deck they are on shattered into a thousand pieces. Neraxis leapt backwards and managed to climb back into the corridor. \n\nHrelle fell... \n\n* \n\nSurefoot, Deck 1 Fore Corridor: \n\nSasha was tired. Tired and wound up. The business with Neraxis and Ledit had taken a lot out of her squad and herself, though she did her best to hide it from the others. But still, when Commander T'Varik informed her that Neraxis had gone off on some sort of mission with her Dad, she felt elevated; he would take care of things. \n\n\"So, we're going to this dance that Neheru's planning?\" Jonas asked. \"Or are we embargoing it?\" \n\nKit walked alongside him, sipping on a freshly-replicated iced nectar. \"Why would this be done, Good Friend Jonas? I thought the notion of the celebration was to bring together the various squad members in a shared social setting.\" \n\n\"It is,\" Jonas admitted grudgingly. \"But I still hate the way those jerks talked about Neraxis. And then when I heard those goons refused to work with her... And Ledit- s/he needs hir ass kicking-\" \n\n\"Everyone involved has been punished,\" Eydiir reminded him. \"Including a verbal reprimand for yourself, as I recall.\" \n\n\"That has nothing to do with it. I just think it's stupid.\" \n\n\"You are being entirely too stubborn, my friend,\" Rrori warned him. \"Passing up the opportunity to bask in delightful female company... and to witness my success on the dance floor with the redoubtable Reyii Igavo.\" \n\n\"The Betazoid Medical Specialist from Epsilon Squad? She interests you?\" \n\nThe white-furred Caitian made a purring sound. \"She can read minds. We can pass over the boring conversations and get to what I'm really interested in.\" \n\n\"We don't need telepathy to know what that is,\" Sasha quipped. \n\n\"Is it coitus?\" Kit asked. \n\n\"Yes,\" everyone else, including Rrori, answered. \n\nEydiir nudged Jonas, smiling. \"Are you sure your reluctance to attend doesn't stem from being between girlfriends?\" \n\n\"Um... no.\" \n\n\"You do not sound very convincing, Good Friend Jonas,\" Kit pointed out, bumping into Sasha from behind. \"Ooh, apologies!\" \n\nShe didn't hear, having stopped dead in her tracks as she stared at their door. The others followed, their expressions ranging from confusion to disbelief. \n\n\"What the hell...\" Jonas murmured. \n\nSasha's face stiffened, and her hand slapped her combadge hard. \"Commander T'Varik, please come to Alpha Squad Quarters immediately, it's urgent.\" \n\n\"What is the problem, Sasha?\" \n\n\"I'd rather not discuss it over this channel, Commander.\" \n\n\"Acknowledged.\" \n\n\"I do not understand,\" Kit acknowledged, bemused. \"What is this about?\" \n\nSeconds later, the First Officer arrived from the opposite end of the corridor. \"Please explain the reason-\" \n\nThen she stopped too, no longer needing to ask, seeing for herself the graffiti scrawled across Alpha Squad Quarter's door in big red hateful letters: \n\nDIE FLINCH \n\nImmediately T'Varik touched her own combadge. \"Lt. C'Rash, report to Alpha Squad Quarters immediately, bring a security tricorder. Counselor Hrelle, report to Alpha Squad Quarters immediately. Lt. Neheru, I will be assembling the cadets in the Crew Lounge shortly, please be prepared to call on crew to cover for those currently on duty shifts. T'Varik out.\" \n\nSasha couldn't take her eyes off of the words. \"You think it was a cadet who did this, Commander?\" \n\n\"Of course it was!\" Jonas snapped, outraged. \"And it'll be Cheung or Adams, or both! They're confined to their quarters just down the hall! They could sneak out and do it when everyone else is away studying or working or something, and no one would know!\" \n\n\"We will not engage in speculation at this time, Mr Ostrow,\" T'Varik informed him, and by extension the rest of them. \"But I promise you: we will learn who is responsible for this.\" \n\n* \n\nUSS Limaari, Deck 12: \n\nNeraxis stared in horror as Captain Hrelle plummeted two decks down, protected from the debris around him by his exosuit, but still in danger of breaking a limb, or worse, when he reached the ground floor- \n\nBut then she saw him twist in mid-air, reach out to grasp at struts and supports as he descended, interrupting his fall enough to let him roll when he finally reached the ground, and the Ferengi surrounded him, obvious weapons in their hands. \n\nNeraxis clung to the side of the doorway and leaned out, ignoring the sense of vertigo as she pointed her phaser downwards, calling out over her helmet's comm. \"Captain! Are you okay? Captain! Talk to me, please!\" When he didn't answer, she peered down, hoping he wasn't hurt. \n\nBut then she saw him helping himself up and talking with the Ferengi. They weren't firing, anyway, or making any threatening gestures. She had to- \n\nShe had to follow procedure, get back to the Sureswift and call for help. \n\nIt took more willpower than she expected to force herself away from the corridor and retrace her steps back to the beam-in point. Please be okay, Captain, you have no idea how much you mean to me- \n\nAn energy surge struck her from behind, sending her face forward and shattering her helmet and sending her phaser sliding out of her grasp. She gasped, a neuroleptic wave racing through her, making her lose control of her limbs. Holy Hraxor, that was- \n\nA strong tangerine-coloured hand grabbed her by the shoulder and turned her onto her back, and she looked up to see a leering Ferengi in furs and glittering silver clothes, carrying what looked like a short glowing whip in one hand. He stepped back, crouching slightly despite currently towering over her. \"Are you a hyoo-man? I did not know they came in blue colours!\" He grinned as he glanced down at her chest. \"You are female, whatever you are.\" \n\nShe gasped, forcing her limbs to return control to her. \"Nemm, Neraxis; Cadet Fourth Year, Serial Number 056-55-8977-\" \n\nHe raised the whip in his hand. \"I'm not interested in your identity, female!\" He grinned, displaying crooked, jagged teeth. \"Only in what you look like underneath all those unnecessary clothes...\" \n\n* \n\nUSS Limaari, Main Engineering: \n\nHrelle's left arm had been wrenched, but he ignored it, aware that, though his exosuit was damaged enough from the fall to be useless now, it had saved him from potentially life-threatened injuries. \n\nHe was also aware of the half-dozen Ferengi surrounding him, most carrying phaser-like hand weapons, but one of them, the very ostentatiously-dressed one, wielded a short whip-like weapon that glowed. \n\nThere was no fighting his way out of this. But he already had an alternate plan - and a hope that Neraxis would follow procedure and not try something stupid and heroic. He removed the remains of his helmet and tossed it aside, pointing to it as he focused on their alleged leader. \"That's being added to the final price.\" \n\nThe Ferengi twitched and glanced nervously at each other, their leader parroting, \"Price?\" \n\nHrelle nodded, helping himself back to his feet, ignoring the nervous reactions that gave to his captors as he pointed to the debris from the upper deck. \"And that is certainly being added! There's no way in Mother's name that it's coming out of my commission!\" \n\n\"Who are you?\" their leader asked suspiciously. \n\nHrelle smiled and approached, holding out his hand, stopping only when they raised their weapons at him. He looked hurt at the reaction. \"Gentlemen! I'm Crazy Esek Hrelle, Starfleet Sales Division! And they call me Crazy Esek, because my prices are insane! And you must be here about this fine piece of vintage Starfleet equipment! Well, of course you are! Such obviously intelligent and astute individuals as yourselves recognise the once-in-a-lifetime opportunity on offer here!\" He took another step towards the leader. \"And what's your name, my friend?\" \n\nThe leader moved his whip weapon from his right hand to his left, and offered his right hand warily. \"I am DaiMon Grub.\" \n\nHrelle shook his hand boisterously - noting the strength behind it, gauging that they might be tougher to subdue than their sizes might suggest - and grinned. \"Of course you are, of course! Someone with such fine lobes as yourself must be in charge!\" He indicated his own furred tipped ears. \"I can only aspire to such perfection with these things - still, they're better than those tiny shells that humans wear on the sides of their ugly little heads, amiright?\" \n\nHe patted Grub on the shoulder. \"So, where did you hear about our sale? \" He leaned in and whispered, \"If you say it was my son-in-law Mirow, I'll get half his recommendation bonus, and I can arrange for a 10% markdown on the final price.\" \n\nGrub glared at him. \"You are selling this wreck?\" \n\nHrelle laughed. \"Me, sell? I don't have to! This fine lady sells herself!\" He moved around, indicating the reactivated systems. \"You saw yourself how easily she came back to life! Why, I'll bet you can get the warp core going and have her flying back to Ferenginar on one nacelle!\" \n\n\"It was abandoned! It's salvage, we don't have to purchase it!\" \n\n\"Hardly abandoned, my friend! I'm here, after all, waiting for some fine intelligent people such as yourself to come and realise the full potential on offer here!\" \n\n\"If you were here,\" another Ferengi sneered. \"Then why was everything powered down?\" \n\nHrelle chuckled. \"I'm not going to have it all powered up, wasting energy, not when I'm the only one onboard, waiting for buyers! Those type of expenses come out of my seller's commission! No, I'm living in a shuttle attached to the underside of the Engineering hull! It's a much more profitable arrangement! You can appreciate that!\" He reached out and set a hand on Grub's shoulder, guiding him towards the doors out of Engineering, the other Ferengi in tow like ducklings. \"Now, while we tour the rest of this fine vessel, let me tell you more about its history, while you tell me more about yourselves...\" \n\n* \n\nUSS Surefoot, Crew Lounge: \n\nThe cadets were assembled, in formation and at attention, silent but the curiosity from most at their reason for assembling here almost palpable; only Alpha Squad was in the know, but under orders not to reveal anything. \n\nTowards the far end, the senior officers stood close together, C'Rash holding her security tricorder up. \"It's next to impossible to get any reliable DNA evidence, as it's a public area, and my nose will fail me for the same reason. We're narrowing down the possible suspects based on corroborative witnesses, verified ID logins to systems elsewhere on the ship, duty shifts and the approximate time when the defacing occurred.\" \n\nT'Varik nodded, looking to the Operations Officer. \"We have gathered sufficient forensic evidence, Mr Neheru; I want Support to remove those words. Immediately. Leave no trace.\" \n\nThe Kelpien nodded. \"I'll tend to it now, Commander.\" \n\nAs he left, the Vulcan turned to Kami. \"I assume you have suspects in mind for this, Counselor?\" \n\nKami's hand was resting on her bump as she looked over at the cadets. \"Obvious ones: you punished Zafan and Guforg for talking about Neraxis' test, and C'Rash punished Cheung and Adams for refusing to work with Neraxis.\" \n\n\"Zafan and Guforg were on Support duty on Deck 5 for the last 2 hours, cleaning Cargo Transporter 3's pads while the transporter was running through a diagnostic cycle; its scanners indicated both of them remained there the whole time.\" \n\n\"Then Cheung and Adams are the remaining suspects,\" T'Varik concluded. \n\n\"Not necessarily,\" Kami corrected, \"As I said, they're just the obvious ones. And given that they were confined to their quarters, they would make obvious scapegoats.\" She looked to C'Rash. \"Unless you can confirm that they've stayed in their quarters the entire time?\" \n\n\"We can only pinpoint that with accuracy via their combadges - but they could just as easily have taken them off long enough to leave and deface the door. What about the regular crewmembers?\" \n\nKami shook her head. \"No, they're all too old, too professional - and too smart to risk their careers over an act of vandalism. This was impulsive, immature, committed by someone with pent-up feelings that they couldn't express in a healthy way. And it's more than just an opinion about alleged cowardice. With time and questioning, I think I can find the one responsible-\" \n\n\"Thank you, Counselor,\" T'Varik interrupted. \"But I intend to have this solved and the one responsible punished before Captain Hrelle returns. This is a blatant act of disobedience that must be dealt with immediately.\" \n\n\"Are you looking to punish someone for the act,\" Kami asked, \"Or because they snubbed your authority?\" \n\nT'Varik didn't respond, instead turning and drawing up to the assembled cadets. \"Earlier today someone committed an act of vandalism, of disrespect. A threat. The details are irrelevantt. I want the person or persons responsible to step forward. Now.\" \n\nThe thirty cadets remained mostly at attention, but many spared sideways glances at each other, either to share their curiosity or to look to see if anyone might break ranks and confess. But none were forthcoming. \n\n\"I want anyone who knows the person or persons responsible to step forward. Now.\" \n\nStill, no one seemed to respond - until Squad Leader Ledit spoke up. \"Commander, perhaps if the Squad Leaders had the opportunity to speak privately with their Squad members about this? We might be able to identify the one who did this, and convince her to step forward.\" \n\nT'Varik nodded. \"That will be acceptable. But be advised: you are all suspended from ship and academic duties, and will remain in this lounge, until this matter is settled. I suggest the one accountable for this act of hatred demonstrates enough maturity and responsibility to spare their fellow crewmembers this. We will return in 30 minutes.\" \n\nShe motioned for the two Caitians to follow her outside. \n\n* \n\n\"Get up,\" the Ferengi ordered. \"Get up and strip. I haven't had a female since we left Ferenginar.\" \n\nNeraxis helped herself to her feet and threw aside her gloves. \"Typical, the first guy to ask me to do this, and it has to be you...\" She removed her helmet and cast it aside. \"How do I even know you're packing equipment that can satisfy me? I'm very demanding.\" \n\nHe sneered. \"Your satisfaction is not my concern! You should count yourself fortunate I would deign to show an ugly thing like you any attention!\" \n\nShe stared at him for a second, before uncoupling the upper half of her exosuit, casting it aside. \"You know, it costs nothing to be nice. A Ferengi should appreciate something that's free.\" \n\nHe chuckled. \"You're a female. You're good for only one thing.\" \n\nShe uncoupled her boots, stepped out of them, and picked them up - pointing the magnetic soles in his direction. She smiled at him. \"Bet I know what that is.\" \n\nHe kept chuckling. \n\nUntil she put the magnetic soles on Maximum and pulled the whip from his grip. \n\nThen she threw the boots at him before barrelling into him, bringing him down and punching his face, again and again, snarling, \"Was the one thing kicking your ass? Well? 'Coz I'm doing that real well!\" She glanced around for her dropped phaser, rising and retrieving it. \n\nOn the floor, the Ferengi was clutching his nose, as black-red blood seeped out from his stubby fingers. \n\nShe aimed her phaser at him, stopping as she realised she hadn't even set the power level on it - except she looked and saw that she had, on a standard stun level. Muscle Memory, Captain Hrelle called it. She didn't even have to think about it, it came naturally. \n\nShe should stun him. That would be standard procedure. \n\nBut she could kill him. \n\nIn fact, the more that she thought about it, the more obvious it became. This was the perfect opportunity. She was alone. She had a weapon. It was a hostile situation. She could claim anything, and people would believe her. \n\nShe could finally see if she had the stomach for killing. \n\nBut then... This wouldn't be killing. It would be murder. That's not what she was. That's not what her Captain wanted from a Tactical Officer. \n\n\"You...\" The Ferengi struggled up. \"You misbegotten fat ugly-\" \n\nShe stunned him. She certainly had the stomach for that. \n\nThen she raced for the beaming point for her shuttle. \n\n* \n\nT'Varik returned to see the various squads collected separately, conversing amongst themselves. She didn't give them the opportunity to return to formation. \"Well? Is anyone prepared to be honest?\" \n\nNext to Ledit, a young Terran female with black curly hair and olive skin that T'Varik recognised as Delta Squad's Medical Specialist Barbara Quinn, was about to step forward - but then her Squad Leader beat her to it. \"Commander, I regret to inform you that Cadet Quinn was responsible for the deplorable words written on the door to Alpha Squad's quarters. Once I had the facts on hand, it was simple to deduce the identity of the culprit. This was a heinous act, which I of course condemn entirely. However, I respectively request that you give her a chance to explain her actions.\" \n\nT'Varik eyed the Squad Leader. \"I was intending to do so anyway.\" She looked to Quinn. \"Well, Cadet?\" \n\nHer dark eyes dotted to Ledit, who ignored her while she replied, an anger barely at the surface now erupting. \"The Bolian's a Flinch! She was in Sickbay, trying to find some excuse for her cowardice! She has no business being on the bridge, in a position of authority and trust, if she hadn't got the balls for the job!\" She looked around at others - Cheung, Adams, finally Ledit again - before continuing. \"We all agree on that!\" ",
        "The Vulcan raised an eyebrow. \"I do not recall your promotion to a position where you can judge the fitness of your fellow cadets for their respective roles. That is left to us to judge, and you should have trusted us on our capacity to do so.\" \n\nKami stepped up, watching the girl closely. \"Commander, before you take any actions now against Cadet Quinn, I would like to speak with her. She hasn't been long onboard, and I haven't had a chance to provide any proper Counseling assessment.\" She glanced at Ledit. \"I have reason to believe there are mitigating factors.\" \n\nT'Varik. \"As you wish. Lieutenant C'Rash, please escort Cadet Quinn to the Counselor's Office. The rest of you: dismissed.\" \n\nThe Vulcan eyed Ledit as s/he departed. \n\n* \n\nUSS Limaari, Deck 6: \n\nHrelle led the way, hand on DaiMon Grub' shoulder, amazing himself with his patter; maybe he missed his calling and should have gone into used ship sales? \"The Limaari has had a long and proud history, has been through no less than three major retrofits and 49 combat engagements. In her last battle, her captain, Cassius Tolliver, died defending his fortune against the Cardassians.\" He stopped and faced Grub fully, looking solemn now. \"Can you imagine any more noble way to die, than in defending one's accumulated wealth?\" \n\nGrub shook his head meaningfully. \"That's how I would want to go.\" \n\n\"Me, too.\" Hrelle continued along, expecting them to follow. \"Sadly he didn't survive, but the Cardassians never did discover the hidden vault, and then they had to evacuate the area-\" \n\n\"Wait, wait!\" Grub rushed up, stepping in front of the Caitian, half-cringing, half-demanding. \"Hidden vault?\" \n\n\"Yes, the hidden vault. Over the years, Captain Tolliver managed to collect quite an impressive collection from planets he visited: a First Edition Shakespeare Folio, the Ark of the Covenant, the famed Pink Panther gem of Lugash, a complete set of Fizzbin cards, the Ring of Sauron, the Arquilian Galaxy, the Infinity Gem collection-\" \n\n\"Where is this hidden vault?\" \n\n\"Well... hidden. I can't just tell any Tom, Dick and Grub, now can I?\" He glanced around before leaning in, whispering, \"Unless, of course, we can come to an arrangement. Do you think we can come to an arrangement, Grub?\" \n\nThe Ferengi DaiMon grinned. \"Crazy Esek, if only more Starfleet officers were like you...\" \n\n* \n\nNeraxis stripped out of the rest of her exosuit inside the Sureswift, while still making her way to the cockpit, glancing outside and seeing what was obviously the Ferengi ship: large, brick-coloured, crescent-shaped. \n\nShe had to send a distress signal, and hope that the Ferengi don't pick it up. \n\nThen she had to go back for the Captain... \n\n* \n\nNeheru's threat tendrils had extended. \"Excuse me, Cadet? Did you say, Ferengi?\" \n\nNeraxis' voice drew the attention of everyone on the bridge. \"Yes, a ship full of them! They're trying to take the Limaari! They have the Captain hostage! I have to get back and rescue him!\" \n\n\"No, Cadet! Stay in the shuttle! We will be there in 15 minutes! Possibly sooner!\" \n\nShe swallowed. \"Sorry, Lieutenant, your signal's breaking up, I can't read you-\" \n\n\"Cadet Nemm, that ploy was old before my great-grandfather shed his first hooves! I'm aware of the fidelity of the signal! Now I'm giving you a direct order: st-\" \n\nNeraxis cut off the rest of the signal, before moving to the weapons locker. \n\n* \n\n\"Well, here you go, the Shuttlebay,\" Hrelle announced, feeling a chill even through his exosuit at the cold air; the shuttlebay was high and narrow, with the Limaari's four shuttles stacked on either side, overseen from above and behind him by the Shuttlebay's Operations Booth. \"The four shuttles of course come with the rest of the ship - though my own outside does not.\" He chuckled. \"So, once we agree on a price, you head off to bring back the payment, and I'll bring the rest of the ship online and have it ready for you.\" \n\n\"No,\" Grub said, drawing a phaser-like weapon from his belt and pointing it at Hrelle. \"I have a better idea.\" \n\nHrelle's pulse quickened, but he kept a calm expression as he raised his hands slightly. \"Grub, bubulah, we haven't even talked price yet!\" \n\n\"Ferengi Rule of Acquisition 4: 'Make your own price'. And the price for all of this will be... your life.\" \n\nHrelle stepped back, glancing at the other Ferengi, who were drawing their weapons now. \"DaiMon Grub, I am a duly-authorised representative of Starfleet's Sales Division-\" \n\nGrub laughed. \"You are nothing! I knew it the moment you talked about the treasures in the hidden vault! 'The famed Pink Panther gem of Lugash'? I have the entire collection of the original Pink Panther movies!\" \n\n\"You do?\" \n\n\"Peter Sellers was a genius! The way he would say 'minkey' when he meant 'monkey'!\" He laughed. \"I knew then that you were pulling a scam on us!\" He raised his weapon. \"But no one can outscam the Ferengi. And this little scheme of yours is going to cost you everything.\" \n\nHrelle stepped back further, hoping to make it around one of the shuttles, perhaps get inside one long enough to find a phaser onboard. \"Well, as my first wife used to say: 'If the rich could hire others to die for them, the poor could make a nice living.'\" \n\nGrub stopped and stared. \"Was she Ferengi?\" \n\n\"Better.\" \n\nSuddenly all eyes turned to the shuttlebay doors behind Hrelle, as they parted, revealing the space outside. He tensed, ready to hold his breath as the explosive decompression carried him out - only there wasn't; the atmospheric force field was obviously in place. \n\nGrub and the Ferengi were darting about nervously, Grub taking charge again. \"Crazy Esek! What do you hope to do by opening those doors? You cannot escape without your helmet!\" \n\n\"It's not me, sport, honest.\" He looked up at the Operations Booth, eyes wide. \"Neraxis!\" \n\nThe Ferengi looked up as well, as Neraxis' voice carried over the intercom and reverberated through the high enclosure of the Shuttlebay. \"This is Starfleet Security! Drop your weapons and surrender to Captain Hrelle, or I'll open the shields and send all of you out to eat vacuum! You have thirty seconds to comply.\" \n\nHrelle grunted as he met his cadet's resolute expression. Damn you, girl. And thank you. \n\nBut Grub proved to be less than compliant. \"A nice bluff, female. But we know you will not sacrifice your Captain's life!\" \n\n\"Do you?\" her voice returned. \"A Security Officer has to be prepared to sacrifice themselves, or anyone else, in the defence of the Federation and its interests. Captain Hrelle knew the risks when he signed up - and so do I. And you still haven't surrendered. You have twenty seconds to comply.\" \n\n\"What? You talk nonsense!\" Grub looked to Hrelle. \"She wouldn't do that to you!\" \n\nHrelle looked up again at the booth, calling aloud, \"Neraxis... it's been an honour serving with you.\" \n\n\"And I with you, Sir. I'll give my best to your wife and daughter. Ten seconds.\" \n\nHrelle stepped forward, closer to Grub, hoping to grab the DaiMon's weapon, knowing that Neraxis was bluffing... until he realised that she might not be. \"Give up now, DaiMon.\" \n\n\"DaiMon! Look!\" One of Grub's Ferengis was pointing to the outside. Hrelle looked as well, seeing their Marauder ship powering up. \n\n\"Hah!\" Grub cried gleefully. \"They will rescue us! They will-\" \n\nThey warped away. \n\nSeconds later, the Surefoot took their place. \n\nThe Ferengi dropped their weapons. \n\n\"You should have accepted my offer,\" Hrelle told them, collecting a weapon. \"I would have thrown in a free set of steak knives.\" \n\nOne of Grub's men smacked him on the back of his bulbous head. \"You idiot! We could have had steak knives!\" \n\n* \n\n\"Captain's Log, Stardate 42598.10: The arrival of the Surefoot sent the Ferengi ship running - DaiMon Grub should pay better for loyalty next time - and he and his cronies are in custody, as we await a transport ship to come collect them. The Limaari has been re-secured, and our next mission for the following week will involve preparing her for her eventual return to Starbase 154; maybe someday she'll fly again, and continue her legend? As for Cadet Nemm, I have plans to reward her for her actions. \n\nCadet Bernadette Quinn has offered to resign from Starfleet Academy for her act of vandalism, but after consultation with Counselor Hrelle, it was decided that she should leave the Advanced Work Experience Program and return to a regular Academy life, albeit with increased Counseling. Her act was apparently not one of genuine hatred, but driven by grief and frustration. Another Medical Specialist is being sent from the Academy to replace her. \n\nBut our business with Delta Squad, and its leader, is not quite over...\" \n\n* \n\nLedit entered the Conference Room, expecting another staff meeting regarding the following mission, with the senior officers and squad leaders present. Instead, there was only Hrelle, T'Varik and the Counselor sitting at the table, facing him formally - and with no chair set out for him. Caught momentarily off-guard, s/he recovered quickly, straightening up and announcing, \"Sir, Squad Leader Ledit reporting as ordered, Sir!\" \n\n\"One 'Sir' is sufficient with such greetings, Mx Ledit,\" T'Varik informed hir dryly. \"Mx Ledit, on Stardate 42532.97 you attended a staff meeting in this room, where you raised the issue of Cadet Nemm's fitness for Security duty, recommending that she be transferred onto another career path. This was summarily rejected, and you were verbally admonished for overstepping your bounds. Do you recall this, and agree with the accuracy of my synopsis?\" \n\n\"Of course, Commander. My memory is perfect.\" \n\n\"That's debatable,\" Hrelle grumbled. \"So, how did this mutate into our having a meeting 'about' Cadet Nemm, where we were 'discussing' her future in Starfleet? Isn't that how you spun it for Neraxis?\" \n\nLedit swallowed, hir heart racing a little. \"Well, Sir, it was technically correct-\" \n\n\"Oh, are we getting technical, Mx Ledit? Because if we are, then technically the subjects of conversation in a staff meeting are confidential, and you violated regulations by revealing them to her.\" \n\n\"Sir, my purpose in doing so was to reassure her that she still had a place in Starfleet. She was obviously troubled, and although she is not a member of my squad I felt that my role I have a duty to my fellow crewmember.\" \n\n\"Very laudable,\" Kami opined dryly, but with a simmering anger behind her words. \"You know exactly what to say, you know what's expected of you. Except your actions don't match your words. When did you discover that Cadet Quinn was the one responsible for defacing Alpha Squad's door?\" \n\n\"When I had the opportunity to examine the evidence, and interview my squad members.\" \n\n\"Liar. When T'Varik confronted all the cadets, and you asked for time alone, you said, 'We might be able to identify the one who did this, and convince her to step forward.'\" \n\nS/he blinked. \"A mere misuse of gender-specific pronouns, that is all.\" \n\n\"No, it wasn't, it was a slip on your part. She was a potential suspect already in my eyes: her father had been killed in the line of duty six months before on Starbase 112, involving another crewman who'd lost his nerve and didn't assist in a firefight with Miradorn smugglers. She spoke about this in the presence of you and her fellow squad members, and a subsequent audit trail of her movements at the time gave her opportunity to commit the act.\" \n\nLedit's heart raced further. \"But that's not proof, is it, Counselor? I am not prepared to condemn anyone on circumstantial evidence alone.\" \n\n\"I interviewed her afterwards. She had been immediately regretful about doing it, had been wanting to come forward and confess it from the start. But she had been persuaded not to do so, to protect the reputation of Delta Squad. She wouldn't say who had persuaded her, though; she still possesses loyalty. \n\nMore loyalty than you, certainly. When we returned you stepped forward and gave her up without hesitation; the reaction I saw on her face spoke volumes.\" \n\nThe Hermat stiffened. \"It was my duty, for the good of the ship and Starfleet-\" \n\n\"You didn't do it for the good of the ship and Starfleet,\" Hrelle growled. \"You did it because you're an ambitious little cub who wants to make Captain by the time s/he's twenty, and will do whatever it takes to get there - including manipulating the truth, and your fellow crewmembers. You knew Quinn was troubled, but instead of showing empathy and persuading her to seek help, you encouraged her resentment, persuaded her to keep quiet, and then stole her opportunity to be honest, in order to make yourself appear decisive and leader-like.\" \n\n\"You ingratiate yourself to us at every opportunity,\" T'Varik offered. \"Seeking attention and acclaim, at the expense of fidelity and trust from those who serve under you. Your actions appear to serve Starfleet, this ship, or your fellow crewmembers - but ultimately they serve yourself.\" \n\nLedit swallowed, flexing the muscles in hir hands behind hir. \"You have no direct proof of any of this. If punitive action is taken against me the Hermat Government will lodge a formal protest.\" \n\n\"We do not intend to pursue the matter,\" the Vulcan responded. \"Cadet Quinn has dropped out of the AWE Program and is returning to Starfleet Academy to continue her studies and receive additional Counseling. You are correct, we do not have any direct proof. At this time. \n\nHowever, we do have proof that you revealed the contents of a staff meeting to someone not in attendance; it was a skewed version of the contents, but it was still an unauthorised disclosure. \n\nEffective immediately, command of Delta Squad will be turned over to your deputy, Cadet Simon Utrech, for the next three weeks. Your Command privileges will be temporarily revoked, and you will be reassigned to join Cheung and Adams on Support Service duties.\" \n\nLedit's face went taut. \"Support Services?\" \n\n\"Yes,\" Hrelle confirmed. \"Someone has to clean the ship, don't they?\" \n\n* \n\nNeraxis felt like an idiot in her dress uniform, even though everyone else was in similar attire, milling about the Crew Lounge. She had no idea what this was about, but had heard a rumour about a shuttle arriving with a VIP. \n\nKit was carefully sipping at some nectar in a tall glass, in lieu of the champagne everyone else favoured. \"The majority of opinion is that it is Admiral Nechayev, with a close secondary speculation that it is Caitian Ambassador M'Ress.\" \n\n\"No,\" Jonas said, watching Neraxis. \"Most likely it's just the replacement cadet for Quinn, while they collect the Ferengi prisoners.\" \n\nSasha tugged at her collar. \"Whoever it is, they'd better hurry; the fabricator got my size wrong.\" \n\n\"Of course,\" Eydiir seemingly agreed. \"It couldn't be all those shuris rolls you've been favouring since returning from Cait.\" \n\n\"It's not my fault, they obviously have a secret addictive ingredient in them!\" \n\nNext to them, Rrori admitted, \"I have trouble staying away from them, too; still, I must resist, for the sake of all those onboard who admire my superior physique.\" \n\nJonas drew up to Neraxis, smiling. \"So, how are you doing now, True Blue?\" \n\nShe smiled back. \"Better, Scrappy. And... thanks for sticking up for me.\" \n\nHe nodded - and then leaned forward and kissed her. A long and lingering kiss. \n\nHer heart raced. But he remained insouciant, though he couldn't hide a flush as he turned away. \"I need a champagne...\" \n\n\"That-\" She blinked. \"That was unexpected.\" \n\n\"Was it, Friend Neraxis?\" Kit asked, smiling enigmatically. \n\nNeraxis glanced at the others. But then from the other side of the room, T'Varik's voice called out, \"Captain in the Room!\" \n\nAs the cadets quickly moved into formation, Neraxis watched as Captain Hrelle ascended to the dais and faced them all, clad in his own tight-fitting dress uniform. \"Thank you for attending, and be comforted in knowing that I have not gathered you here to witness me dancing once more with a holographic Hendrix. I have orders from an unimpeachable authority never to embarrass her again like that.\" He glanced at Kami as the group laughed, before he continued. \"In fact, we are here to publicly acknowledge the actions of one of your own: Cadet Neraxis Nemm, will you step up here, please?\" \n\nNeraxis glanced at the rest of Alpha Squad, before she joined Hrelle, fighting to control her blushing purple. He faced her, smiling. \"Cadet, you performed above and beyond the call of duty as a Starfleet Security Officer, saving my life and ensuring the security of one of our vessels, without any loss of life or limb.\" \n\nHe raised his right hand, revealing a small brown box. \"For your actions, I am proud to present you with the Starfleet Medal of Commendation.\" He opened the box to reveal the ribboned medal, drawing it out and slipping it over her head. Then he offered her his hand, the crowd cheering as she accepted it. \n\nHer heart felt like it was swelling up, fit to burst. She couldn't be happier. \n\nThen she heard cries over the cheers. \"NER-NER!\" \n\nThe cadets parted like curtains, and a gaggle of Bolian children of various ages and heights raced forward and up onto the stage. Neraxis thought she was dreaming. \"Holy Hraxor...\" It was her brothers and sisters! Myneva, Kenoxena, Oshexis, Neriwira, all nine of them! They raced past Captain Hrelle and swarmed around her, hugging her tightly. She looked at each of them in sheer disbelief... before seeing Mama herself join them onstage, beaming proudly. \"My beautiful baby!\" \n\nSomehow Mama managed to worm her way through the force field of children now surrounding Neraxis, to hug her as well. Neraxis looked past her to Hrelle. \"Did you do this?\" \n\nHe shrugged. \"Well, it was no big deal; the transport was coming to collect the Ferengi and bring us a new recruit, Bolius is along the way, and I understand it's a public holiday now on your homeworld so your brothers and sisters won't miss out on any school.\" \n\n\"Captain Hrelle arranged for everything,\" Mama revealed, grinning, \"We can only stay for a couple of days, though.\" \n\n\"But we'll be stationed here anyway doing an assessment of the Limaari.\" Hrelle informed them. \"Well, the rest of us will be doing that. You're on special assignment: giving your family a tour of the ship, trying out the holodeck, flying in a shuttle, firing some phasers-\" \n\n\"Sir!\" Lt. Neheru protested, aghast. \n\n\"Okay, maybe not phasers...\" \n\nThe tears were pouring out of her unabated as she stared at Hrelle. \"Thank you, Captain... shit, I can't stop crying-\" \n\n\"Ner-Ner swore!\" Alizila declared, setting off the rest of the children. \"Ner-Ner swore!\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... DAY OF THE DEAD"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "fan fiction",
        "science fiction",
        "federation",
        "caitian",
        "alien11111",
        "starfleet",
        "federation",
        "ferengi"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-15-flinch"
}