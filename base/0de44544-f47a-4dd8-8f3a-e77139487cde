{
    "title": "My Only Talent Ch. 27",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. The delay in posting this chapter and perhaps the next few may be ascribed to some unexpected turbulence and travel in the author's schedule.\n\n*****\n\nOrinda looked so fantastic standing by the door that I couldn't believe it, and her Suzie sounded crystal clear, pure and relaxed, too. She must have done something special in the 30 minutes since dinner, because she looked scary good. I couldn't figure out exactly what it was, though. She had changed her clothes, but they weren't that different from what I had seen her wear before. Was it her hair? Maybe it was the way she was tilting her face slightly or the light in her eyes or the enigmatic smile she wore. \n\nIt was a miracle there weren't ten guys standing in a line trying to hit on her. Her skin was so black it was sort of a dark purple/blue, and by contrast her teeth were blazing white, the whites of her eyes a creamy white and her pupils just were a little lighter than her skin, with some multi-faceted highlights that were more than just slightly different colors. Her face was perfectly balanced and symmetrical, and I realized I was staring at her. This amazing woman was willing to give herself to me? She had a spectacular figure, she always had, but her face was riveting. I almost lost my edge.\n\nAlmost. I walked over to her and put my hand on the small of her back, which was warm and firm and wonderful and seemed to fit my hand perfectly. \"Are you ready?\" When she looked up at me, her Suzie answered my question all by itself. She was ready: she was open, willing and wanton. She was terrific. She leaned over and kissed me lightly on the cheek, and I felt a lightning bolt go straight to my cock. Wow. \n\nShe had on a simple white blouse with some blue highlights, and it was thin enough that her nipples still looked crinkly and delicious though it. A simple blue skirt picked up the blue color in the blouse but did nothing to spoil the line of her generous and fabulous hips, her legs were accentuated by some dark blue high heels, and I noticed a little touch of blue makeup on her eyelids. Nice. I remembered she had no panties on, either. Nicer still.\n\nWith our contact came a fast Suzie channel connection and I sought out her 'black box' sexual event recorder and also looked for her modulated fantasy images. Both were big surprises. \n\nThe fantasy box was full; the event recorder was almost empty. There was a young black guy pictured, maybe one or two years younger than Orinda, in some early explorations while playing doctor, and a few backyard petting sessions in late June when the days were long and the nights were warm, and some very brief, very protected intercourse on prom night, but not much else until she came to ESU. Then there was a steady stream of frustration and of her fighting off the 'smooth' APA frat rat boyfriend who seemed to have no concept of whether she was actually receptive or not, and just plunged ahead clumsily until she literally slapped him away.\n\nHer fantasies were another matter altogether - some of them would have made Millie blush! She seemed to have two kinds: the ones that got her hot but that she knew she would never actually try, and the ones that she wanted to try but hadn't been able to arrange yet. The central problem was a profound distrust of men, and fear of their sperm - instilled by her maternal grandmother who mostly raised her to not get pregnant before she finished school, like she and Orinda's mother both unfortunately had - and ably reinforced by her recent ex-boyfriend, plus a fear of being ridiculed by the women she might approach and admit that she was attracted to. Her fantasies were something I intended to study further, and I parked my Suzie tuner on the proper channel to continue monitoring it throughout the evening. \n\nI leaned towards her and spoke softly into her ear. \"Orinda, you belong to me to do with as I please for the next three days. Then things go back to normal, but you will know just what you are capable of, sexually, which you will discover is anything and everything. I will never tell anyone, even Lizzie Faye, the details of what happened between us. If anyone asks me, I will only say that you are a lovely young woman and I am proud to be your friend. But in these next three days, you will learn how to please me, and to do it exceptionally well. I will learn what truly excites you, and may choose to do it for you. Are you ready?\"\n\nShe gulped, and in a quivering voice said, \"Yes, Master.\" She was so my kind of girl.\n\nOur first scheduled stop was just north of campus at the recently remodeled Phi Iota Gamma house. I had to put in an appearance out of semi-respect for Theo Cadwallader, their frat president, whose family had paid for the remodel, but there was little if any chance I would pledge the PIGs. \n\nThere was more construction planned as they had bought the lot north of them and were going to demolish the old small house on it and build an addition and annex to their stately southern style mansion frat house. While Orinda and I walked north along the Drag toward the PIG house, I began to recall the summary of the ESU Greek scene that Kevin had tried to give me, as a PNM, or Potential New Member, as indoctrination for Spring Rush, before the various Rush Captains got me in their clutches. \n\nAccording to Kevin, you could divide the Greek scene up into three major groups: the old guard, the new guard, and the new age or 'multi-cultural' houses. The old guard was composed of the oldest and most established fraternities and sororities, mostly founded pre-1900 at colleges mostly on the Eastern Seaboard or in the Midwest, and that had been on campus at ESU for many, many years. Their membership was primarily white bread white people, with, as Kevin put it, some 'Suitably Semi-Sephardic Jews' and some 'Barely Blonde Jews' thrown in for window dressing. \n\nPhi Iota Gamma considered themselves the number one most powerful, wonderful and desirable frat of this group, along with three other frats that were collectively referred to as the 'big four', not just at ESU, but most places. They didn't officially do Spring Rush, because they had so many potential members in the fall that it filled their quotas. This reception at PIG was not really Rush, nor for any official invitations or bids, but Kevin explained that I was a special case: they would invite me to join in the spring because of my rep. \n\nThere was also a corresponding 'big six' sorority group. After the top four, there were the 'middle tier' and the 'lower tier' with appropriately declining degrees of looks, style, panache, and wealth. Pledging one of the fantastic four or significant six might determine who you dated, married, and may inherit a fortune from, plus joining certain country clubs, yacht clubs and law firms, think tanks, PACs, secret societies, and the client list of certain specialty drug dealers, escort services, law firm 'fixers', and psychiatrists. \n\nBeing part of the middle tier might determine who you bought your Tahoe and Buick from, or who you sold real estate and insurance to, with perhaps a modest inheritance here and there thrown in. The middle and lower tier were more active in Spring Rush, hustling to keep their membership up, and they had much more modest houses, cars and clothes. Being part of the lower tier mostly determined who you continued to get hammered with long after college and complain to about your lousy dead end corporate job. All of these organizations had lots of mottos, manufactured traditions, and nice and not so nice nicknames, and at any given time several were either banned from campus or on probation for hazing violations. There was a constant slow turnover, as some failed to attract enough members to keep up a house, or got the Dean's death penalty for repeated and awful infractions, usually involving a hazing death or other outstandingly bad publicity for the university.\n\nThe new guard was composed of the non-white 'establishment': the Latino houses, the Black houses, and several varieties of Asian houses. They were mostly founded in the 1960's, 70's, and 80's and were thus newer and less established than the fantastic four, but would love to have the kind of pull that the old guard did. They were working on it. \n\nThe new agers were 'multicultural' and 'diverse' with memberships theoretically composed of all racial and cultural groups, and many of them declared that they recruit members 'regardless of sexual orientation'. The perception among the old and new guard was that the new agers were people who were not cool enough to get into any of the old or new guard houses. UDP was sort of an outlier as an older (1930's) 'new guard' group, except its membership was just about proportional to the ESU population in general: mostly white guys, but with some of every other group, too. UDP alums tended to make their own fortunes rather than inherit them, and because of their fearsome reputation as geeks and hackers, none of the other frats messed with them, preferring to maintain diplomatic relations instead.\n\nWe arrived at the PIG house to find the front door open and a big steel BBQ smoker set up in the side yard, along with two kegs and a punch bowl, and a trio playing reggae style. The guys standing around the door, who probably didn't recognize me without the costume and/or the two hot girls in skin tight leather, gave me a look that said 'you aren't planning to come in here, are you?' They did obviously consider Orinda some pretty fine eye candy, and would have loved to have her come in as a single girl, without me. \n\nThe PIG house had some recent problems with people just walking up and joining the PIG yard parties, and the new expansion plans included a 12 foot high wall and some more secluded outdoor party space, and they also planned to make even more use of the lake house, and a hunting lease. Theodoric Aloysius Cadwallader the Fifth spotted me, put an arm on me and steered us both inside, and began his sales pitch.\n\n\"Just another typical weekend at our fabulous house, Robbie, with the best food and the best looking girls on campus!\" I had to admit the girls were gorgeous, especially the ones that were standing in groups of three and talking to each other. Orinda walked over and began talking to one of the groups of girls, and I got a 'ping' from her of attraction for one of them! Spring Rush was looking up.\n\nTheo leaned over and spoke into my ear conspiratorially. \"Here with still another exotic beauty on your arm, eh, Roberts! I just know you will fit in here, and your dates will too. Where did you find her?\"\n\n\"She lives at the freshman, dorm, Theo, and her roommate practically threw her at me last night at dinner. She just broke up with her frat rat boyfriend, who in my judgment qualifies as a certified fool for letting her get away. She is in need of some comforting, and I couldn't refuse such a noble mission, could I?\"\n\n\"Of course you couldn't. If this fellow is Phi Iota Gamma, I shall personally drum him out in disgrace. He should have at the very least steered her to cry on another Phi-I's shoulder!\"\n\n\"You have avoided that kind of humiliation: he is an AKA pledge. Excuse me, Theo; I need to see if my date needs some punch.\"\n\nI moved over to the group that Orinda was talking to, and began to introduce myself, all the while listening carefully for any reaction from her Suzie, and theirs. I figured out which girl had prompted her to come over here. Nice choice. Perhaps Orinda was preparing to come out of her shell? I was disappointed to learn that the other two girls were much more interested in Orinda than in me. Another group came in the door, and it included Jackson Pollack Jackson III and the incredible water skiing Candy, in a killer strapless dress that showed off her shoulders and tan. I heard an instant 'ping' from Orinda!\n\nOrinda leaned over and spoke in my ear. \"That hot chick with the cool tan is giving you the stink eye, big time. Did you do something to her you shouldn't have?\"\n\nI laughed. \"It's more like I didn't do something that I should have, from her point of view.\"\n\nShe continued. \"She also does not like that overdressed guy she is with very much!\"\n\n\"Same song, different verse. She has been dating him since September and he hasn't completed a pass yet, if you know what I mean. He's not overdressed; he's just Phi Iota Gamma.\"\n\n\"There must be something wrong with both of you guys. She is hot enough to get any guy here if she wants to, plus half the girls, including me.\"\n\nThose simple words resonated with me. Suzanne and even Nora kept talking about making sure they had some 'wild college days'. I decided right then and there to make the next three days some of my wildest ever. I had no classes and no worries until then. It was going to be an early three day mini Mardi-Gras in Austin on fraternity and sorority row for one Robbie Roberts, and I just realized had the ideal companion traveler for my little adventure. \n\n\"Orinda, go over to that lovely and well-tanned young lady, who is named Candy, give her a nice wet kiss for me, and tell her I am ready to put out for her for the next three days, and that you are too. Ask her if she would like to join us later tonight for a little three person after party.\"\n\nOrinda's eyeballs bounced around in their sockets, and a loud Suzie yelp emanated from her. But she squared her shoulders, took a deep breath and marched over to Candy, who was in conversation with two other girls. All three of them looked up as she approached, and I detected the same 'herd envy' signals from the two other women for Orinda that I first heard for Suzanne at that ZZZ party. These women were nice looking, but Orinda was exotically beautiful and much hotter too, and they both knew it. Candy was not sending envy - it was nascent desire. I suddenly realized that the Suzie signals were slowing down for me again, like movements did just before I attacked ponytail on the plane. I was also now reading subtleties in the signals at a much greater distance, without physical contact being required. \n\nOrinda reached Candy. I could see Candy's face and Orinda's back. Candy smiled and then Orinda kissed her, and then whispered in her ear. Candy's face froze, and then she looked at me over Orinda's shoulder with kind of an evil grin, and then emitted a searchlight growling Suzie beamed right at me. She whispered several sentences in Orinda's ear, then grasped the back of her head with both hands and gave her what I inferred was a showy tongue kiss, judging by the befuddled expressions on the other two women's faces. Plus they sent shock and awe, Suzie-wise. Orinda spun on her heels and started back toward me. The expression on her face was almost indescribable: chagrin, shock, fear, delight? Her Suzie was just as jumbled and confusing. What in the world had Candy said to her?\n\nOrinda whispered in my ear. \"One A.M. at her apartment, #414 at the Villas, just about a block north of here.\" She demurely put her hand on my forearm and stood next to me, like nothing unusual was going on. But her Suzie was like a chorus rapidly chanting 'bubble bubble toil and trouble' at high volume. She tried to sound normal when she spoke, but her voice cracked a little \"Would you get me some punch please Robbie?\"\n\nI smiled. \"Right after you tell me exactly what else she said.\"\n\nOrinda made that fish out of water gulp again, and then whispered \"She said you had better be ready to fuck her, and I had better be ready to lick her clit while you do it!\" She continued to grip my arm so hard that she almost cut off the circulation to my hand. It did seem to increase the blood flow to my dick, however, so much so that I had to carefully plan my steps out to the punch bowl. I got her a big red cup of the Phi Iota Gamma version of 'instant stripper'. I could never refuse a lady.\n\n*******\n\nSarah Stevens Susskind had never been this high before. Not even close. Her own breathing fascinated her. The texture of the old ratty Naugahyde couch in Billy's parent's trailer was absolutely beguiling. She loved the way it sort of stuck to her fingers and then just kind of let go with a funny little sound when she moved them. The old plastic radio in the kitchen right above the sink was playing KPYK - the real oldies - big band music. How wonderful. The breeze through the slightly open windows of the trailer was cooling her skin, but she felt the heat between her legs. She looked over at Billy, wondering if he was feeling it too. \n\nBut he was only lusting after the next marijuana bud he had just retrieved from the Coca-Cola can. He was caressing it, grooming it, tearing into three pieces and lovingly tamping one of them down in the bowl of his bong. Coca-Cola sounded marvelous right now - little fizzy bubbles on her tongue - cool liquid down her throat. \n\n\"Billy, may I please have one of those Coca-Cola's in the fridge?\"\n\n\"Sure. Bring me one too.\" Billy said.\n\nEmily Post he was not, but then she was too thirsty to complain. She was a little unsteady as she rose from the couch, but it did feel a little like dancing when she moved. She had to stare at the refrigerator for a moment to figure out which side the door really opened on, and then she worked the handle and grabbed two cans from the front of the red and white paper 12 pack. \n\nShe put one on the coffee table in front of Billy. Whoops. No coasters, but there were lots of can rings and cigarette burns on it already so it may not matter. Billy was still engrossed in loading up the bowl of the pipe. She popped open the can and was surprised and delighted by the snapping sound. She lifted the can to her lips and sipped - it was wonderful: sugary, tickly, and cool. Billy had fired up the bong again, and was taking another big hit. \n\n\"So, Billy, do you have a girlfriend in Dallas?\"\n\nHe laughed. \"Well I do have a lot of girls who drop by to see me but they don't stay long and there is no one really special.\" He offered her the pipe and lit the bowl for her again. \n\nShe was now worried about getting home safely, so she took just a little hit, and he snatched it back from her to suck up the smoke she had left in the chamber, then used his lighter again and took another massive hit. She leaned back, putting her arms up along the back of the couch, chest out, and neck back. Her mother would have called her posture 'too provocative'. Billy didn't notice, and it didn't provoke him to do anything other than load another bit of the fuzzy bud into the bowl. He took three big hits and didn't offer her any more. It was just as well. Sarah realized she didn't really want to go home yet, but she didn't want to stay here, either. She was now sure Billy wouldn't care.\n\n\"I gotta go, Billy. You sure have some great dope.\" But that's about it, she thought. He smiled and loaded the bowl again with one hand, waving dismissively at her with the other. She stood up again, a little unsteady, found her purse, and headed back outside. She spotted her car, and found her keys, but had to think for a moment about what side of the key should go up to unlock the car door. She finally got it open and sat in the seat, primly buckling her seat belt out of sheer habit. She decided to plan for a minute before she started the car. \n\nShe thought about that place out on 34. It was strictly country music, but she heard that they had a dance floor and maybe someone would ask her to dance. Back east towards town, then south towards Kaufman. She started the car. Lights on, a little voice in her head said. I probably don't need anything to drink just now, she thought, but I am hungry. Should I check the mirrors to see if they are adjusted properly?\n\n*******\n\nSuzanne Pliskin woke to the sound of Lettye vacuuming downstairs. Last night's domination of Professor Auguste had been titillating, but not really satisfying, even after she made her exit with him still restrained, sputtering, spitting and cursing in French. She had heard much more guttural and artful swearing as a child in Mayotte, Senegal, and Morocco - his was strictly a whiny Parisian dialect and sounded inadequate and unauthentic by comparison. She knew he would eventually get the knots untied and release himself. ",
        "She was fairly certain he would not call for help from others and advertise his predicament. She was going to have to re-examine this whole Dominatrix thing. It certainly got Cindy, the Judge and Auguste very excited, and it had a very positive effect on the judge's life. The jury was still out on Professor Haubenfelter, so to speak. She would be interested to see his next publication and public appearance. \n\nBut the Dominatrix act had really done nothing much for her. She realized that she loved doing it for Millie and Lara because it made them come so. She knew it from the other side when she had been taken for a wonderful ride in the trapeze after a long training run. But she felt embarrassed when she thought about dominating Robbie after his first Marathon. She thought taking advantage of him would excite her and being in control would make it even better. \n\nIt had gotten him off, but also seemed to confuse him. She felt a little guilty about that. Then when he had fucked her so hard the next time they were together and made her come like never before, and she realized that was his natural way. When he told her he loved her and was going to fuck her like that again it made her melt like butter in a hot pan. Perhaps it was her natural way too, even if she didn't like the idea intellectually. But there was nothing intellectual about how hot it had made her, and the orgasms just about made her black out. She still had dreams about Robbie her doing her like that, and maybe she always would.\n\nThree more days in DC with her folks and then back to Austin. This coming semester, she was head TA for one huge freshman section and the only TA for a relatively large upper division section, so she had lots of work to do as classes began. But, she decided to take at least one evening to ask Robbie to buy her some pizza and take her up to his dorm room. She stretched under the covers and decided to daydream about that for a while. \n\n*******\n\nWe stayed long enough at the PIG house for me to down some decent appetizers: my stomach was already growling even if it had only been about two hours since dinner at the dorm. I had set up our planned route to minimize the distance we had to walk to cover all the 'open house' style stuff tonight besides PIG. It reminded me of the Konigsberg Bridge Problem we had studied in math. \n\nI got lots of 'drop by' invites, and Kevin helped me toss out the 'total losers' and 'service frats' so I could focus on the more interesting ones. The next two nights were invitation only deals held for people they truly considered serious PNM material, plus the very interesting 'slumber party' invite the final night at the Booties, Beta Omicron Tau, AKA the Big Ol' Titties. We headed east toward the law school to visit the Gamma Iota's and the Bi Kappa Sigma's, AKA the \"Skull Fuckers\" for their chosen symbols and supposedly sexual predilections. \n\nAccording to Kevin, both considered themselves top four, but were actually middle of the pack second tier houses. I hadn't realized that there was such a pecking order (my father called it a 'peckerwood order' and said only about 10% of the 'elite' frat guys ever accomplished anything in the real world), how much stock some of the houses placed in it, and how much disagreement and self delusion there was about who ranked where. \n\nNeither of these two houses dressed as well as the PIGs, but then neither did the male models in GQ. But I did notice one obvious and very disturbing faux pas: khaki pants and boots without the proper accessories! In Austin, if you wear a nice white button down collar shirt with khaki pants and boots, there are then two hard and fast rules that automatically follow. \n\nFirst, the boots should be burnt orange and/or incorporate an unmistakable and obvious Longhorn image. If you must wear plain boots, then you have to add a very large and showy Longhorn belt buckle to your outfit. Failing those rules, you might be mistaken for an Aggie, God forbid. These guys were breaking those rules, and a couple of them were chewing tobacco, which was too Aggie even for most Aggies these days. If you chew Red Man and have goat shit on your boots, you are considered an Aggie no matter what else you wear or where you went to school. All of their members suddenly seemed a little more goofy and inappropriate. There were some good looking girls there, but they mostly seemed to be dumb as a post, not as bright and interesting as I like them, and I also smelled a very high percentage of tobacco smokers, which put me off even further. They did seem to be the exactly the right kind of girls to \"skull fuck\", I suppose. We are outta here. \n\nThen we dropped in at the largest of the 'multi-cultural' houses: Lambda Gamma Beta, about which Kevin had said, in a tone he usually reserved for wild porn web sites: \"You gotta see this place!\" They were true to their ideals, combining, or 'mixing' both genders, indeterminate genders, and the androgynous 'Pats' as they were known, into one rainbow membership base, and welcoming all sexual orientations and practices. How many potential variations were there? I figured it was at least six factorial! \n\nMost people on campus called them the 'Rainbow Greeks' or 'LGBT', although I wasn't sure about the transsexual part. Who was? Many Greeks also called them 'the Tri-Lam's', a reference to the fictional frat in the movie 'Revenge of the Nerds', but they were not actually part of the official 'Lambda Lambda Lambda' frat, which was founded long after the movie was released. They had a reputation for wild and crazy parties, and a house with very unusual d\u00e9cor. I wondered about the pre-op transsexual lead singer from the Chicksie Dicks. He had left for Brazil right after the Halloween parties, and had certainly had his surgery by now. There would be several months of rehab, after which he was planning to return to Austin, enroll in school as an official woman, and ask me out. Would he pledge LGB?\n\nI am not sure you would call it 'curb appeal' but their house had a very distinctive appearance indeed. As we entered, I was hit by the most disparate jumble of Suzie signals I had ever heard. Every wavelength, amplitude, tone, and overtone was represented, and I got a perspective I had never had before. It was like a lab exercise in signal processing and I learned some things, including a lot of 'mixed mode' content I don't think I had encountered before, and I almost felt like I should sit down and take notes. \n\nWe were greeted by their designated 'Rush Rainbow', who reminded me strongly of the 'Serge' character from the Beverly Hills Cop movie. He (I assume) introduced himself as Reynaldo 'Patsy' Klein, and emitted no Suzie signals whatsoever that I could detect, but he took one look at Orinda and let out a strange shrill cry: \"Oh my, you are the most exotically beautiful thing I have ever seen. Why haven't I seen you on the covers of fashion magazines yet?\" \n\nHe circled her twice, a 720 degree tour, while making comments like \"unbelievable\", \"look at those cheekbones, look at those eyes\" and \"Booty-luscious Baby!\" He was of course exactly right. \"I am doing an MFA in photography, and you are obviously fine art, and I want to photograph you. How's about it, deary?\" Orinda laughed, and said maybe, giving me a shy but hot look that made my heart beat fast, and that also said she was going to do it, and enjoy it. She was definitely coming out of her shell. Then another, highly androgynous person appeared, dressed in grey jeans and a grey shirt, and whispered in Patsy's ear. \n\nHe looked up at me in shocked surprise, and emitted another shrill cry: \"Get the fuck outta here! The Master, at our party? Oh God, I wish you were in costume. I have my leash up in my room!\" \n\nOrinda giggled, but then put an arm on my shoulder, saying \"I am afraid I am his exclusive pet tonight, Patsy!\" He groaned, and said \"That's something else I would like to photograph! You are both officially offered bids to pledge right this very minute!\" \n\nA bunch of people gathered around and gawked at us for a while, and I overheard some interesting conversations and new terminology, including 'excessively hetero-normative', 'basic bozo breeders', 'toggafs' , 'hopelessly straight', 'peg out', 'tuesgay night lights', 'heterosexist patriarchy', and 'Regnarian degeneracy'. It sounded like the sociology class Oiler told me he was forced to take as an elective because it was the only thing that fit into his schedule. I certainly didn't feel accepted. In fact, Patsy turned out to be the only person who treated us nicely. Oh well.\n\nThen we went to visit Kevin at ZZZ. Things must have been a little slow; three guys offered Orinda cups of instant stripper in the first minute we were there. They had a major and very successful rush push in the fall, and were just looking to pick up a few new members in the spring. Their Prez took me aside, after ogling Orinda for a moment, to try to close me for ZZZ, while Lou Baby and Kevin seemed to be giving Orinda the third degree. \n\nWe finally agreed that I would be an \"honorary\" ZZZ member, attending as many mixers as I could and helping the brothers target girls. I also committed to come to Seder at their house and to join one of their annual rituals - a big delegation of members and alums that traveled en masse to tailgate and party at an away football game. He also told me that I could expect some serious sales efforts from a couple of other houses besides PIG. As always, ZZZ had some great food out, and I was already hungry again, so I planned to stay close the buffet line here until about 12:45, before Orinda and I walked back east to Candy's place. \n\nAll of the pledge class, except Kevin who was under the watchful eyes of Lou, asked Orinda to dance, and she had a great time dancing while I settled my stomach. She was a fabulous dancer, and certainly the center of attention on the dance floor, whetting my appetite for the night to come. Finally she got a little plate of food and another big cup of instant stripper and sat down next to me to talk.\n\n\"So, Robbie, Lou certainly has some interesting stories to tell about you. \" She gave me that female look that said 'time to be on the defensive, you ignoble male', but I wasn't having any.\n\nI gave her my best Dom look, which admittedly wasn't nearly as good as Suzanne's. \"Three days from now, you will have some much more interesting stories to tell than she does.\" Orinda dropped her eyes and smiled. What a wonderful girl. I tuned her Suzie, again noting the almost total lack of sexual experience, in stark contrast to her intense and powerful fantasies. It made me curious.\n\n\"So, Orinda how is it that you don't have more sexual experience?\"\n\nShe looked at me suspiciously. \"How do you know I don't have lots and lots of experience?\"\n\n\"Come on, Orinda. They don't call me the Master for nothing. I can tell when you aren't telling me the truth. Never forget that. You have to tell me the truth, the whole truth and nothing but the truth about your sexual desires. And you, my lovely little hottie, have some serious desires that have yet to be fulfilled. Why is that?\"\n\nShe looked slack jawed for a moment, then sighed, and answered: \"My grandmother taught me to always be in control, and to always be on guard against the evil male sperm. The pill wasn't to be depended on, nor could you trust condoms, and that all men are essentially lab rats with multiple STDs that have to be monitored, defended against, trained and controlled by a woman. So I had incredible lust in theory, but could not let myself go in practice with any of the real guys I knew.\"\n\n\"That's why I decided to let myself go with you. Lizzie Faye told me what she saw in that laundry room, in great detail, and I wanted some of that for myself. The dorm gossip pipeline was also full of information about the two girls you had on leashes at those parties, and everyone agrees that they are both very smart and very beautiful, and I figure that they wouldn't have been crawling around on the floor for you unless it was working for them and getting them off. Three days of getting what I know I need without a bunch of drama and rigmarole before or after sounds just fine to me.\"\n\n\"Including what Candy has in mind for you?\"\n\nShe giggled. \"That sounds okay for starters, but hopefully it won't be limited to just that.\" \n\n\"Orinda, you have the Master's word that it won't be limited to just that!\" What a wonderful girl.\n\n*******\n\nLara was looking forward to getting back to Austin. She had loved spending time with her grandmother, especially since her dad seemed so happy now that he was with Lillian Gush. Getting away from school had been a good break, but getting away from Robbie was not so good. She missed Suzanne, too. Truth to tell, she missed Millie too, even though she accepted that her training was over. Once the Christmas stuff was over, boredom inevitably began to set in. \n\nShe took to updating and improving her skiing ability, and enjoyed for a while the series of instructors of various nationalities who asked her out as a result of meeting her on the slopes. There had also been a couple of earnest sons of Colorado neighbors, a few years older than her, who were just finishing an MBA or a law degree, and considered accessorizing with her as they began the climb up the corporate ladder, or just positioning themselves to benefit from her father's money. But none of them gave her the slightest thrill. \n\n*******\n\nWe said our goodbyes at ZZZ, and started the walk back east toward Candy's place. I heard a little buzzing Suzie emerge from Orinda as we walked, and it seemed to me that her hips were swaying a little more than normal, too. I had heard lots of rumors about the complex where Candy lived. \n\nIt was very close to campus, and the apartments were modern looking with all the cool stuff that all the cool kids wanted: disposals, dishwashers, microwaves, washers and dryers, and Wi-Fi access all over the complex. That summarized all the pros. The cons included a very dirty, noisy and presumably overloaded and poorly maintained elevator, a management staff that could barely dress themselves, a swimming pool that was actually an incubator for a whole taxonomy of microorganisms, with a hot tub that was even worse. \n\nIt also had walls so thin you could hear everything that went on in the nearby PIG house and the neighboring apartments, from loud sophomoric philosophical discussions to noisy, if often mercifully brief sexual encounters. I was operating on the assumption that my beautiful Candy would keep her place hygienic, and that we would not want to listen to anyone else's sexual activity. \n\nThe multi-colored stucco exterior intended to look like a European village wasn't so effective when poorly lit at night: it merely looked jumbled. We didn't even consider the elevator, but someone had puked in the stairwell earlier in the evening, providing the appropriate West Campus ambience, plus some questionable footing. Candy's place turned out to be on the southwest side of the complex. We were one minute early. Despite her obvious quivering anticipation, Orinda refused to knock even one minute early. I will never understand women.\n\nCandy opened the door in an outfit right out of Victoria's Secret, and Orinda and I both involuntarily drew in a loud and very audible breath. Candy giggled, and then spoke with emphasis. \"That's just the reaction I was hoping for! Come into my parlor.\" She giggled again. She offered us seats and some bottled water. It seemed weird to me to just talk instead of 'getting down to business' but that must have been me thinking with the brain between my legs. \n\nI forced myself to tune their Suzies, and discovered both were truly fired up - but intensity did not necessarily mean urgency - they both wanted to anticipate and enjoy. I could do that - for a while. Candy had the 'smooth jazz' cable music channel playing through an amp and speakers that sounded pretty good. She also had what I have learned is almost always sexually symbolic for young women: candles going in several places around the apartment. I remembered from somewhere that there are almost 7,000 residential fires in the Unites States started by candles each year. Maybe I do have a future as an actuary, after all.\n\nOrinda licked her lips and noticed something on the coffee table that led her into a conversational ploy. \"Do you and your roommates play a lot of Scrabble, Candy?\"\n\nCandy smiled. \"Well my roommates won't be back in town for a few more days - and they never play Scrabble. I thought you two might want to play with me, but not Scrabble.\" The double entendre almost dripped from her lips. \n\nOrinda moved closer on the couch, put a hand on Candy's knee, and cooed. \"So, uh, what's your major?\" Zing went the strings of my dick, er, ah, heart. Sprong!\n\nCandy kept her gaze focused on Orinda, as she slid her hips a little lower on the couch and moved her knees a few inches further apart. \"Well, I am actually a very serious pre-med student, but for the next few days before classes start again, I want to relax and let my hair down, so to speak.\" You didn't need a Suzie receiver to know some sparks were about to fly. \n\nSitting on the other side of the couch, I put my hand on Candy's other knee, and said \"Some ground rules: I will never talk to anyone about anything we three do together. I will tell you both what I need and want and expect you to do it for me. I want you to both tell me, and each other, with complete honesty, what you need and want.\"\n\nCandy sighed and put one hand on each of our hands, moving them up to cup her breasts. \"That's enough talk.\"\n\n*******\n\nSaskia Grandael turned out of her parent's driveway onto Camino Estancia and then onto Silver Springs Drive, blending into Sunland Park and passing the mall her mother usually shopped at on her way to the I-10 to head east back to Austin. She was leaving earlier than she originally told them - literally leaving in the middle of the night, but traffic would be light and that would make her trip faster. It would take at least 8 hours of driving, even with her lead foot, given gas and bathroom stops along the way. Her tank wasn't completely full - she would probably make her first stop in Fort Stockton. \n\nShe had quickly grown tired of playing with all her sister's children, and her mom's incessant comments about Saskia's remaining single. At least this visit no one had wondered openly if she was a lesbian. She certainly hadn't told anyone she was (mostly) straight, either. She also hadn't told anyone about her growing sexual fantasies and preoccupation, almost to the point of obsession, and thus her lack of true release for many months, and she probably never would. She forced herself to think of earlier, more pleasant times in Austin. \n\nShe was still recovering from the awful shock when she learned that Bob the Knob had been replaced as her department head by Arturia Colorado. It was like going from having a brilliant and laughing Robin Williams as a boss to suddenly having to report to Joan Rivers on crack, except Joan Rivers was occasionally funny. There was nothing funny about Arturia Colorado. Three people had already left, and Duke Knorr was frantically looking for an RA gig anywhere else, even A&M. \n\nSaskia was stuck - she had completed 99% of the planned work on her post doc, and had several papers worth of results written up and ready to publish, but Arturia could stop the whole process by just holding onto the paperwork for a while. She had done it before, requiring one other poor and trapped postdoctoral student to spend two years of work repeating and reworking a study on contractility in pig heart muscle that Arturia had botched in the first place. His real work was thus delayed and less impactful when it was published. Saskia did find it momentarily pleasant to think about the physiological experiments one might do on Dr. Colorado, though. Perhaps some extensive thalamic tract pain studies while she was awake and immobilized? Wouldn't be ironic to use Dr. Colorado, who delighted in trapping students in her service, as a subject in a study on locked in syndrome?",
        "Even more pleasant were thoughts of working with Robbie Roberts on early MWF mornings this coming semester. She had crafted a clever plan with even more than her usual OCD-like thoroughness, and was confident that mid-May would find Mr. Roberts with an upper body like he had never dreamed of. There was something about that kid and his flirting and confident manner that spoke to her. \n\nHe even gave hints of understanding what her fantasies were. Or, in her increasing need, was she just projecting her obsessive fantasy scenes onto his comments that really meant something else? Unfortunately, it wouldn't matter. When she stopped in Fort Stockton, she would send Roberts a text to remind him to start keeping up his food and exercise diary again. She had a lot of work to do on him, and she needed all the baseline data she could get. \n\n*******\n\nIt didn't take long for Orinda and me to remove Candy's hot little outfit. The sight of her starkly contrasting tan and pink areas, close up and imminently touchable, soon had me very short of breath and long on altered circulation. Seeing Orinda's very dark hand moving across those breasts was even more titillating. We alternated kissing her mouth, and she put her hands on the back of our necks and alternated pulling us into her. Then we began gently kissing her little pink rock Candy nipples, and she groaned with each touch. Orinda started to remove her blouse, but Candy reached out to stop her.\n\n\"I want you both to keep all your clothes on for a while, with one modification.\" She reached out and pulled down my zipper, reached into my underwear, and liberated my cock, which stuck straight out, red and pulsing, and surrounded by my Navy blue pants. She touched it lightly and smiled. I hoped she was happy to see it, and not laughing at it. She pushed her hips out until they were just on the front edge of the couch, and then used her hand on the back of Orinda's neck to pull her head up so they made eye contact. \"I want you to kiss me.\"\n\nOrinda smiled and gulped, and then Candy's hand pushed her head down and made it clear where she expected to be kissed. Orinda started well down on her thigh, just above the knee, and then Candy sighed and put both her hands on my dick. College may not be for everyone, but I was now sure it was the right thing for me. I didn't think I could get any harder, but somehow Candy's light touch was accomplishing exactly that. I began to worry about coming just from watching the two of them. I decided to concentrate of their Suzie signals, since that often distracted me from coming too soon. Candy was floating on a cloud of sensuous feelings, and Orinda was crazed with excitement. \n\nBy now Orinda's head was right between Candy's legs, kissing her inner thighs and almost ready to dive into the main event. She drew a big breath and said \"Candy you are so wet!\" and then began tonguing her gently. \n\nCandy was now working on frigging my cock like one of Kevin's favorite internet hand job web sites, but when Orinda's tongue made first contact, Candy gritted her teeth and grunted. \"Oh, fuck. Fuck me!\"\n\nI figured that was my cue. I stood up and grabbed Candy's shoulders gently, getting her to put more weight on her legs and lean forward a bit while I slipped in behind her onto the couch. I then spread her legs, moved up to the front edge of the couch, and grabbed her waist to guide her down onto me. Orinda moved her head in synchrony, but kept her mouth on Candy. Candy was so wet and so ready, and she put herself right on me and moved steadily down, bending her legs and showing me a captivating view of her apparently perfect ass. She narrated her own movements, \"Oh fuck yeah. Fuck yeah!\"\n\nI leaned back and pulled her back against me, slipping my hands around to her breasts. Her nipples fit perfectly, popping out between the second and third fingers of each hand. If I turned my head at just the right angle, I could see Orinda's head moving around on Candy, but not actually see her mouth and tongue touching her. If leaned forward for a better view, my chest moved forward and my pelvis moved back, and it reduced my penetration of Candy. Unacceptable. I finally tuned Candy's Suzie signal and adjusted my angle and thrusts to please her the most. Slow and deep, it turned out. It felt fantastic. \n\nI could also hear in the signal the little ruffles and flourishes that Orinda's mouth was making, like a wire brush on a high hat cymbal. That was smooth jazz indeed. Suddenly the percussionist made twenty little fast hits, keeping the cymbal ringing continuously, and Candy came with a very musical little kitten like growling sound. Orinda made slurping noises, then stopped motionless for a moment, and then began playing percussion again. \n\nI guess that made me the rhythm section, so I resumed my slow and steady beat. The contrasting skin tones and languid motions of the two girls looked so hot that I began to worry that I would pop too soon, so I turned my head the other way and looked out the window for a distraction. I had read somewhere about doing multiplication tables or the like in your head to take your attention off of the pleasurable sensations. \n\nThat wasn't sufficient, but I did find that trying to remember and sub-vocalize the trig identities we had memorized to facilitate some of the more common integration problems for the last chapter of calculus worked pretty well. I gazed out the window for additional distractions. There were several. Candy's apartment was on the south west corner, but the window mostly faced west, not south. \n\nThere was a well lit orange and white 24 hour Whataburger store right across the street with a big line of cars in the drive through at this peak late night munchies hour. From up here on the fourth floor I could see the back of the ZTA house, but that made me fantasize about hot little rich girls (who according to Kevin's ZZZ gossipology not only had Zits, Teats, and Acne, but also loved to give head) and that memory hardly functioned to delay my climax. Finally I spotted an 'urban outdoorsmen' pissing in a dumpster in the alley, and I knew I could last a good deal longer, as long as I didn't lose my hard on entirely.\n\nOrinda delivered another set of tongue ruffles and lip flourishes and Candy came again, like a jazz singer with perfect timing. After she lolled her head and shoulders from side to side for a moment, she reached down under Orinda's chin and brought it up so as to make eye contact with her. \"You, my lovely friend, have a magical mouth!\" \n\nOrinda looked a little embarrassed, but then smiled, her chin gleaming wet. \"Best pussy I ever ate! The only pussy, too!\"\n\nCandy moved her head around to look at me. \"Robbie, are you ready to come?\"\n\n\"I suppose I could. Right now?\"\n\n\"Oh, not yet! Orinda, do you mind if I suck him off all by myself this first time?\"\n\nOrinda managed a grin and an ironic tone all at once. \"As long as get to watch.\"\n\nI pulled out of Candy, turned towards her and bent down a little to bring my cock level with her mouth. She smiled a very smug smile and began to lick me gently and teasingly. Orinda watched from six inches away, mouth open and eyes big. Neither of them had ever looked so beautiful. Then Candy made eye contact with me and began to suck me in earnest. Her mouth seemed to get hotter and her eyes shone more brightly. Orinda leaned in even closer and licked her lips, framing another picture for my girlfriend Hall of Fame wall. That did it for me. Bingo!\n\nCandy murmured her approval, not that I could have stopped at that point, and took everything I had to give, swirling her tongue around the head of my cock like water swirls down a drain. And drain me she did: completely, wonderfully, enchantingly, an artist in the medium of local pressure differentials and tongue strokes. Then she gulped and swallowed what she had been holding in her mouth, and looked mischievously at Orinda, who simply said \"Damn, girl!\"\n\nWell said. I shucked off all my clothes and sat back down on the couch, and both girls' Suzies were now pounding with anticipation. As I decoded their fantasy images, another bit of ZZZ gossip came to mind: the apocryphal 'pussy parties' that were said to be an ongoing ritual in certain sororities. I was about to witness such an event held by a very special sorority, a very exclusive one with only two members. \n\nTwo very, very hot members who were about to be devoted to each other for a while, and were making up their own rituals as they went. And I only had to watch for that while, until my one and only member was ready to join the party again. I moved to the window end of the long couch, and they began to circle each other like cats about to fight or fuck or cuddle, or all three. Orinda did her own little quick improvisational strip tease, underscoring how freaking beautiful she really was. \n\nAlthough they probably weren't thinking about it that way, they were certainly putting on quite a show. Candy was a little more aggressive at first - perhaps because she had just had two shuddering comes and was already in an altered state. Still, they were women, and they took their time with each other. They soon moved into opposed positions that would inevitably lead to them 69'ing each other, but for now they were just kissing each other's breasts and necks. What a sight. \n\nSoon they were kissing each other's navels, and using their hands to stroke each other gently. Their breathing became louder: so did mine. Then Orinda twisted around on top, with her perfect ass facing towards me, soon to be centered over Candy's face. Candy reached up from underneath and spread Orinda's legs a bit, giving her a face on but upside down view of Orinda's pussy. Candy and I gasped simultaneously.\n\nI had never seen anything like it. The best visual analogy I can make is to imagine a big juicy dark skinned plum that has been split vertically down the middle so that two gashes of the delicious red fruit inside showed against the darker surrounding skin, and in the middle between those two lovely wet red areas was a central patch of bright pink juicy bubble gum. It took my breath away. \n\nCandy spoke first \"Oh my!\" She smacked her lips. \"That's incredible.\" Had I been in her place, I would not have been able to avoid just diving into that black, red and pink, plum and bubble gum flavored, hot steaming pussy pudding. I had to exercise major self control to not push Candy aside and go for it myself. It was hypnotizing. Candy at first just used her hands to spread first those dark ass checks and then open up those dark red lips a bit and touch them gently, getting her fingers wet in the process. Another wave of Suzie signals hit me from both girls - they were in new territory and buzzing with excitement. The pink bubble gum called out to me - and I wanted to chew. Candy got there first. \n\nI just watched in awe for a while, and listened to the slurps and grunts, and the Suzie signals washing over me. Orinda liked being worshipped - she came almost immediately. Then she moved her shoulders a bit and bent her neck down and began some enthusiastic reciprocation on Candy - who soon came too. They then demonstrated their female sexual super powers, and just did it all over again, and again. I stood transfixed at the end of the couch and watched them do it, as a series of pulsing orgasmic Suzie signals hit me between the eyes.\n\nI may have been frozen, but old John Henry, the pile driving man, suddenly channeled his spirit through my dick, in stages of wood, stone and finally obsidian. I leaned forward, and realized I had a little solid geometry problem to solve. The girls were perfectly comfortable on the couch, and Orinda's pussy was on top, wet, fragrant, and appeared immensely penetrable, doggy style, but the relatively tall armrest of the couch was right in the way. I bumped against it with the front of my thighs, as apparently my spinal reflexes needed evidence that I just couldn't bull forward and fuck her. \n\nBut somehow that bump engaged some visualization neurons somewhere that Asa could probably give me all the special names and circuit diagrams for, and I knew what to do. I put my left foot on the floor next to the front of the couch, and balanced myself so I could stand on it alone. Then I threw my right leg over the back of the couch, such that the back of my knee hooked over it and could also support most of my weight if needed. \n\nThe outside of my right calf and foot were against the wall, braced between the couch and the wall. I then moved my left leg around a bit to brace it against the front leg of the couch near the floor, and now felt I could not only stand on either leg, but thrust fore and aft vigorously without falling over. I bent my knees and got aligned with my target, and reached down to grab Orinda just above her waist, with my fingers along her ribs and my thumbs on her back near her kidneys.\n\nThe anticipation was incredible, and I stopped with my dick about half an inch from Orinda's dark outer lips, feeling like a primitive conqueror, while the image of red plum fruit and pink bubble gum burned into my brain. I don't care who you are: that right there was definitely some more girlfriend hall of fame material. I bumped the couch again, and Candy, from her upside down position, opened her eyes and looked up in surprise at my cock, which in its current state was making its best possible visual impression on her. \n\nI pushed it just into Orinda, spreading aside her inner lips and feeling and incredible hotness and wetness. Candy's eyes got huge, probably looking even more so since they were only about six inches away. I heard a new Suzie signal from her: it was almost like the 'female herd envy' signal I knew from envious groups of women at parties: but this was a positive, not a negative feeling. I realized she was anticipating what Orinda was about to get and was not envious of her, but empathetically joyous for her. Candy licked her lips and said breathily, \"Oh Fuck, Orinda!\"\n\nPrecisely! Orinda was tight, but so wet I was soon plunging her fully. She made these funny little noises and pushed back against me very encouragingly. Candy stopped watching and started licking again. It was almost impossible for her to get her tongue on Orinda's clit from this angle, but she was working everything else, including occasionally my balls. Orinda came and that magical mystery pussy grabbed me like a pair of those expensive stainless steel fishing pliers, but I did not even get close to coming. I wasn't channeling John Henry any more - I was John Henry now, and I fucked on. \n\nOrinda came at least three more times, making more and more noise and sending louder and louder Suzie all the while. The last two Candy just watched and narrated instead of licked. She could not stop talking about how much juice Orinda was dripping. I speculated that Orinda had completely and enthusiastically overcome her fear of males and sperm, and was perhaps a little more trusting of her contraceptives, too. \n\nA new level of Suzie sprung forth from her, and her gorgeous pussy gripped me with continuously ratcheting strength. \"I want to feel you come in me, Robbie! All the way in me and all you can give me!\"\n\nHypothesis confirmed. Candy had her opinion, too. \"Give it to her, Robbie. Give her everything you've got!\"\n\nJohn Henry considered it, but he was pretty happy just fucking along on autopilot like he was. Candy slid back towards me until the top of her head was butted right up the arm of the couch, pushed her neck up a little bit, and began to kiss me right between my asshole and my scrotum. Even John Henry couldn't hold out long with that kind of treatment. I then felt a buzz up and down my spine and all the way down into my balls, and then a Suzie blast came out of me like the one I had directed Melanie's 'playmates' at the dorm, except it was loving and caring and focused on Orinda. \n\nIt was like some kind of reflex, or ancient spinal memory, or something else entirely. I thrust myself into Orinda, pulling her to me with both arms so strongly I might have snapped some of her ribs. I pushed with my legs, pushing her shoulders down and up toward the front of the couch and levering myself up and a higher angle for deeper penetration. It felt like my cock expanded inside of her and then it seemed like my soul was shooting out through my cock. Her orgasm and accompanying Suzie reached down into me and gave me a little electric shock, triggering a final spasmodic ejaculation as I pinned her down to the couch and then almost passed out.\n\nI stood up and then sat perched on the armrest of the couch, pretty much out of it. I saw but did not fully comprehend Orinda's pink bubble gum with slash of white inside, and then my view was blocked by Candy's head. I drifted off for a while, then startled awake when I almost fell off the armrest. \n\nWhen I focused again, Orinda and Candy were still 69ing and giggling on the couch. My stomach growled, and somehow I put together a thought. My blood sugar must be really low. It felt like I did after I kept running well past 'the wall' on Lavaca Street at the end of my first marathon attempt, and just like I felt in the airplane after punching ponytail. Bob the Knob's energy gels, or those little sugar envelopes! That's what I needed, but I was too dazed and confused to seek them out. \n\nThen Candy and Orinda stood up, walking gloriously naked over to the refrigerator, and bending over very attractively to look inside. Candy reached down into one of the bottom drawers and rummaged through a paper bag, then grabbed two bottled waters from an upper shelf. Orinda got water and an apple, and then they walked back toward me.\n\nCandy took my hands and put several little brown things into my palm. \"Have a Snickers, Robbie. You're just not yourself when you're hungry!\" That paper bag must have been her stash of leftover Halloween candy. She held out a bottle of water to me, too.\n\nWhat an angel of mercy. They were the little bite size ones, small and chewy, but cool and delicious, and I polished off four of the little suckers in no time, followed by half a bottle of water, and began to feel better almost immediately. \"Thank you Candy. I really needed that!\"\n\nOrinda hugged us both. \"Candy, will you take us to bed now?\" Candy giggled, and led us into her bedroom. I don't fully remember everything that happened after that. The Snickers bars did revive the brain between my ears, and the girls soon fully revived the brain between my legs. I distinctly remember eating Orinda's wonder pussy for some time, and reveling in her incredible Suzie music as I did so. Candy jumped in and kissed her ass while I took care of the pussy, and Orinda was in her glory for some time. I also fondly remember entering Candy's ass while Orinda ate her pussy, and that was a real hall of fame highlight for me. I also remember laying in an exhausted daze while they continued to get each other off repeatedly.\n\nI woke to find both girls next to me in Candy's bed, looking at me fondly. Candy spoke first. \"Good morning sleepy head! You are one funky little male monkey. I think you have dried pussy juice from both of us on your eyebrows, and I know you have dried come on your pubic hair.\"\n\nI was still a little loopy. \"You are both wonderful young ladies and I am proud to have your bodily fluids on my eyebrows!\" The both laughed.\n\n\"Let's all take a shower and then get a gourmet breakfast!\" Candy trilled. Whatever her apartment complex's other shortcomings, it had plenty of hot water, and we used it. We all got thoroughly clean, and well kissed, but I was still short on my normal ass worship duties: maybe more on that later. Orinda and I put our clothes from last night back on and Candy donned a whole new outfit: an orange and white tracksuit thing that really hugged her figure. We followed her across the street, and she headed into the Whataburger.",
        "\"My treat!\" she announced. \"Austin's finest gourmet breakfast: the incredible bacon, egg, and cheese Taquito!\" I had never had one before, but had I always supposed that was some kind of small taco from Ecuador. I was so hungry that anything with bacon sounded fine. \n\nOrinda laughed. \"Candy, you know I love you, baby, but the only way to go here is the Honey Butter Chicken Biscuit!\"\n\nNot one to offend either lady, I got one of each. The Taquito was okay, but the hot sauce was not: hot that is. The Honey Butter Chicken Biscuit was just about perfect. There was only chewing at our table for a while. \n\nFinally Candy spoke up: \"Same time tonight, my lovelies?\"\n\nOrinda looked at me before answering, and Candy interjected immediately: \"What's up with that look?\"\n\nOrinda looked shy and embarrassed and pleased all at once, and her Suzie sent contentment tinged with excitement. \"Well, Candy, I am promised to be Robbie's pet and he is promised to be my Master for the next two days. I am to go with him to all the Rush parties, and he can do anything to me or ask anything of me he wishes, and I must give myself fully to him. Tonight I am going to learn how to please him best, and if I do well, tomorrow night he will please me.\"\n\nCandy cut her eyes at me. \"Is that true, Robbie, and if so how do I fit in to the plan?\"\n\n\"Very well, I thought!\" I grinned at her. \"Tonight, Orinda will learn to go beyond her considerable natural talents and learn to suck my dick just the way I like it!\" Candy's eyes got big, and Orinda giggled. \"Do you want to audit the same course, or take it for the grade?\"\n\nMy Suzie receiver came in real handy just then, because Candy's face looked offended, but her Suzie was intrigued. \"Does she have to wear a leather suit and crawl on her hands and knees?\"\n\nI interjected. \"No, she must wear normal clothes, with an imaginary collar and leash underneath. But no bra and no panties allowed!\" I went for it. \"As will you.\"\n\nOrinda made a kissing noise at her, and mouthed \"yes\" silently. Candy smiled. \"I promised Jackson I would be at the PIG dinner tonight, but I'll be back at my place before 1:00 AM.\" Maybe this Rush thing was going to be all right. \n\n*******\n\nOrinda and I walked back to the dorm. I turned my phone off mute and noticed that a text had come in, from Dr. Graendel. It still seemed weird to call her that. \n\n\"Roberts: start keeping your food and exercise diary again, and change your running routine from MWF to TTS, since we will be lifting and working in the early morning conditioning class at 7 AM MWF. Run only 5 miles from now on, jogging the first \u00bd mile, and then sprinting one mile and running one until you get to 4.5, with the last \u00bd mile as a cool down jog.\"\n\n\"Later we will do graduated wind sprints and pacing until you can do 5 full miles at a very fast pace, giving you more aerobic exercise in less time. I know it is a challenge for me, but give yourself up into my hands and in one quick semester, I will mould your upper body into something you can be proud of.\"\n\nSomething fell into place for me: a memory of the last time I had tuned into Saskia's fantasy signals, and a connection between some of them. I would have to try a ping when I saw her three days from now to confirm my suspicions. If they proved true, maybe I could do a little special training for her at the end of the semester, when she was no longer officially my instructor. \n\nOrinda stumbled on a curb and I reached for her arm to hold her up. She took my hand and kept it as we walked, and then said, \"Robbie, can I ask you something?\"\n\n\"Sure, Orinda, but be careful, because I will always tell you the truth, if I can.\"\n\n\"Had you ever been with Candy before last night?\"\n\n\"No. I kissed her once at a lake party, but that was all.\"\n\n\"Did you know she wanted to be with you, though?\"\n\n\"Yes. She made that very clear.\"\n\n\"But you did not act on that?\"\n\n\"Not until last night.\"\n\n\"Why not?\" She looked worried.\n\n\"It's complicated. It has to do with the two women that you saw me with at that costume party. \"\n\n\"Go on.\"\n\n\"All I can say is that they are wonderful young ladies and I am proud to call them my friends.\"\n\nHer face relaxed a little bit. \"So you won't tell me about what you do with them, other than to say that?\"\n\n\"That's right. Nor will I talk about what I do with you to anyone.\" She smiled.\n\n\"So you would not talk about the details of your relationship with them. What about the big picture?\"\n\n\"I'm not sure what you mean.\"\n\nShe moved her arm from mine to around my waist. \"For instance, the tall blond girl that Lizzy Faye saw you with in the laundry room. I know a lot of intimate details about that, but not the big picture. Such as, do you love her?\"\n\nI answered without thinking. \"Yes.\" Then I realized I had violated my own code. \"I shouldn't have told you that.\"\n\nShe laughed. \"Yes you should have, if it's true. And that's not something about her it's about you. I didn't ask if she loved you. Although Lizzy said she was very vocal in saying that she did.\"\n\nWe walked in silence for a while, and then she said, \"Does she know about Candy?\"\n\n\"She has met Candy, and she knows that Candy wanted to sleep with me, but that I didn't, then.\"\n\n\"Will you tell her now? Will you tell her about me?\"\n\n\"Yes to both.\"\n\nShe looked very thoughtful for a while, and then said \"How will she feel about that?\"\n\n\"Well, she actually thought I should have slept with Candy, as long as she was there, too.\" I realized I had violated my code again.\n\n\"So she is okay with you having other women sometimes?\"\n\n\"Sometimes.\"\n\n\"And she likes to be with other women, too?\"\n\n\"Sometimes.\"\n\n\"How about two women with one man, like last night?\"\n\n\"Sometimes.\"\n\nWe had been moving south along the Drag, and now turned east along 21st. We were almost back to the dorm. Candy seemed to realize she had to ask things a little faster.\n\n\"What about one woman and two guys. Would you do that with her?\"\n\n\"It makes me very uncomfortable.\"\n\nShe sniffed. \"Isn't that kind of hypocritical of you?\"\n\n\"In one sense maybe, but there is a big difference: She gets turned on by other women, and I don't get turned on by other guys.\"\n\n\"So you were born that way, it isn't a decision?\"\n\n\"I don't think so. Maybe for some people it is, I don't know about them.\"\n\n\"What do you mean?\"\n\n\"Take for example the ESU campus. There are roughly 50,000 students here, and according to the university, more than half of them are female. Every day when I walk across campus, I see at least a dozen women that make me think 'Wow, she is nice! I wonder what she looks like without all those clothes on. What would it be like to touch her?' It's automatic, it's like a spinal reflex, and it's not a choice. I see several dozen more women that make me think 'I wouldn't kick her out of bed' and that's a reflex too, not a choice. But I have never had that kind of reaction to a guy. I think for some people, the numbers are different: maybe 10 girls to 1 guy, or one to one, or 1 girl to 10 guys. I don't know how I would react if that was the way it was for me.\" \n\n\"But couldn't you just do her along with another guy, without you doing the other guy too?\"\n\n\"I'm not sure if I could.\" I didn't mention that I was going to find out if I could do it in a few Sundays. \"If you weren't into girls, would have spent the night with me and Candy just to please me?\"\n\nShe drew in a big breath and sighed. \"Probably not.\"\n\nI kissed Orinda goodbye and she went up to her room to rest and change, and after I made a quick trip through the late breakfast buffet to charge my batteries, I did the same. I went over today's schedule of visits, all pretty decent frats that had sent me invitations and one sorority who asked me to their 'Special Rush Night Mixer\" this evening. That sounded like some wild college days to me. \n\nTomorrow was the last day of rush (and of my arrangement with Orinda) topped off by the BOT 'Special Slumber Party. Now isn't that special? I had time for a nap or a run, but my trainer was recommending that I cut back a bit on the distance. I set my alarm to give me enough time to take a shot at the early lunch line before I met Orinda, and then let the gentle fingers of Morpheus caress my cortex. \n\n*******\n\nOrinda was dressed a little more formally when I met her at the entrance of the dorm, since we were going to a sit down dinner at one of the frats, I suppose. She had on a dark green version of the 'little black dress' that looked amazing, with just a little hint of the same green on her eyelids, and some very high heels. Her eyes sparkled and danced when she smiled at me, and I allowed myself to think that I had supplied some of the mythical 'Vitamin D' that had improved her mood and looks. She kissed me on the cheek sweetly and whispered \"No bra and no panties, Master\" and then lightly touched my ear with her tongue. What a woman. \n\nThe dinner invitation was from Alpha Nu, one of the frats that Kevin told me was going to make a big push to get me to pledge. As Orinda and I walked westward toward their near West Campus house, just past a row of giant West Campus high density apartment blocks, I reviewed what I knew about them. They had the rep of having parties almost as big as the PIGs, but with less of the GQ fashion and much less expensive booze, but reportedly in much greater quantities, with at least one pledge death by alcohol poisoning in the last few years. One of their themes was 'memories that last a lifetime' but they reportedly were often so wasted that they might not remember anything. The had a lot of engineering and science majors as members, which was a little bit cool, but their average GPA much lower that UDT, which was not so cool. \n\nKevin had offered a few more gossip grapevine insights, to wit, \"totally white bread upper middle class guys who couldn't get bids to PIG but want their parents to think Alpha Nu is just as cool. They do lots of stuff with the Zetas. The Zeta girls suck dick better than the Alpha Nu guys, but not by much.\" I had looked at their website, and discovered the Dallas area rush captain was a guy I knew that was one year ahead of me in high school, and a total dipshit. Strike one. \n\nWhen we walked into the house, the first guy to speak to us, who had obviously been drinking since well before lunch, ogled Orinda, and got his beer breath right in my face, sounding a bit like that old Notre Dame coach on TV, saying very sloppily \"Welcome to AN, where we have the best parties, the finest girls, and the best memories.\" He was obviously impaired, and unable to judge any of the above. Strike Two. \n\nThe overall rush captain, a guy I didn't know but recognized from the web page, shooed the bozo away and tried to recover the fumble. \"Roberts, isn't it? Welcome. I'm Sean Martin. I am so glad you guys could come to dinner with us.\" He introduced both of us to all the folks around. Ball One. He offered to get Orinda a drink, and actually laid some pretty good bullshit on us. Ball Two. \n\nA lot of beer was consumed during a respectable waiting period for dinner, wherein two guys hit on Orinda. I could tell her Suzie was offended, not attracted. She gave both of them a really evil look that said 'I was hoping for something further up the food chain' and then smiled at me and blew me a kiss. What a woman. Dinner turned out to be pretty good: steaks and baked potatoes done on their big built-in grills outside, and they had at least four kegs of beer that I saw. \n\nI had to hunt to find the coolers with Diet Coke in them, passing through a blue clouded knot of cigarette suckers right outside the door. They did not allow smoking in the house, and the joints seem to be confined to an upper deck overlooking the backyard grills. There was one big plus - a make your own ice cream sundae line: my sugar cravings were quieted for a while. \n\nPerhaps enlivened by the sugar hit, my Suzie receiver began to scan all the girls in range to see what they might be like and how they fit with the Alpha Nu culture. Orinda spotted someone she knew from high school, and motioned to me she was going to go talk to them, so I concentrated even further on my signals reconnaissance mission. I noticed a trend. \n\nMost of the girls that were hanging on the arms of the Alpha Nu guys were not sending much in the way of Suzie for them, and some of them were actively thinking about other guys they would meet later tonight. I spotted two very nice looking girls with great big engagement rings, sending zero for the guys they were holding onto and smiling at. Maybe if one of the brothers becomes a divorce attorney he will have lots of business in a few years, but he might be on his second or third wife himself. Strike Three.\n\nOrinda came back over to me and whispered in my ear \"When can we leave here?\" She had read my mind.\n\nWe walked a little north to drop in at Chi Omega Chi sorority. I still not exactly sure why they had invited me, but what the heck? All I learned from their web page was that all the girls they put on the web page were great looking, went to school at ESU, and wanted to make the world a better place. They put more pictures on their webpage than all the other sororities combined, and judging from the pictures, they redecorated their house with a new party theme about every other week. \n\nThey were mostly business majors, which meant they had good grades and high SAT scores to get in at ESU to that highly sought after program. They were all good looking enough to be the face of corporate communications, or do the six o clock news, that was for sure. My invite turned out to be a 'stealth recruitment' effort by Sigma Mu Delta, one of the frats that Kevin said was after me, but had not actually invited me to anything during Rush. \n\nKevin, as usual, had some info from the Greek Grapevine. They were really two sororities in one: sweet girls by day and man-eaters by night. Most of them had an official 'college' public boyfriend they went to football games and parties with and an unofficial 'townie' boyfriend that they never introduced to anyone on campus. The townies got all the pussy. I was reminded of the 'religious' college girls from Baylor and Trinity that came to Austin to party with people who didn't know their real names. When it came to sorority politics, it was all 'take no prisoners, mean girls rule'. Perhaps another good group for future divorce lawyers to know. \n\nThey had a very nice and well kept house, and by far the best appetizers I had seen at any Greek event. The first thing I noticed was that they were even better looking in person than in their pictures, which was very nice. The second thing I noticed was that the vast majority of them were smokers, heavy smokers, and they smelled like it, which was not very nice. The first girl to greet us was Missy Manginoochi, a sophomore fashion major from the Woodlands near Houston. She looked like a virginal valedictorian that went to Sunday school three nights a week, but her Suzie was sending stuff just this side of a Melanie meltdown. When I introduced Orinda and then myself, she paused and waved at a tall and pale blonde guy who was schmoozing another group of freshman looking guys. \n\nIt took him a few minutes to work his way over to us, and in the meantime, Missy made it clear she knew exactly who I was, and if she hadn't actually been at the Halloween or 'Addicted to Austin' parties, she had certainly heard a lot about them. She turned a dazzling, if slightly yellowed smile on Orinda, and said \"Were you one of the girls who got to dance at the 'addicted to' party?\"\n\nOrinda smiled. \"No, I was at the UDP Halloween party, though. Would you like to have danced naked on TV? Would you let the Master have his way with you?\"\n\nMissy's Suzie vibrated through my forebrain like a jackhammer, even though no one else apparently noticed. She not only wanted to dance naked on TV, she wanted to be sure everyone in the world had her tuned in on a high definition monitor. She smiled shyly, a look she may have had to practice in front of a mirror. \"I don't know if I could actually bring myself to do it, but it would have been an exciting memory.\" \n\nMissy's event recorder was full of a lot of exciting memories that involved a great many people having their way with her, and she seemed to have to get more and more daring and risky to keep the excitement coming, so to speak. A few of the parties she had enjoyed totally exceeded Suzanne's wildest fantasies, and would have sent even the Amazing Pliskin running away screaming. I considered Missy a very high risk, very low return kind of girl.\n\nShe gave me a smoking look, very authentic considering she smelled like my old teacher Miss Kuratko. \"So, Robbie, are you into leather?\"\n\n\"Sometimes.\"\n\nThe blonde guy arrived. He was, unsurprisingly, the rush captain of Sigma Mu Delta, one Peyton \"Kato\" Kaelin, who up close looked so pretty I was convinced he was actually wearing makeup. Strike One. Two things became clear: He and Missy were 'dating' and she sent no Suzie for him nor did she have any exciting memories of him in her event recorder. She quickly re-adopted the virgin valedictorian persona and he seemed to be buying it all the way. \n\nPeyton was dressed up PIG style or maybe even a little beyond, in a light grey and blue patterned double-breasted slim cut suit with a pink shirt and pink pocket square and a powder blue tie that matched his eyes, in penny loafers with no socks. I am not even sure what that was supposed to convey. He might have been a fashion major, too. I tried hard to read his signals, and found, perhaps not happily, that I was getting much better at recognizing and deciphering male 'Suzies' or whatever I should call them.\n\nFirst the good news: he was not sending for me. Next, maybe good news for him, he was not sending for Missy either, which could have been either a penchant for staying in sick relationships or good judgment, but probably not both. Finally, he was sending enthusiastically for Orinda, which boded well for him in the long run. Orinda had no interest in either one of them. \n\nAs we made small talk, and he began to introduce his selling points for Sigma Mu Delta, I formed a theory: all of these people were behaving like they were being videotaped as an audition for some kind of reality show. They were all trying way too hard to convince themselves and others that they were having a really good time. Strike Two. Strike Three. I realized another vibe: most of the PNM's that were here desperate to get a bid, any bid.\n\nKevin had explained the usual Greek sales strategy during Rush, especially the abbreviated three day Spring Rush. The first night it was all \"love and happiness\" like the line from the smooth old song. Everyone was a buddy, and greeted warmly, like everyone was taking ecstasy. All the PNMs were meant to feel included and wanted. The second day was for feeling out prime targets and deciding if they should be given a bid, and introducing the idea of selectivity and potential exclusion. \n\nIt was like in football recruiting, the coaches didn't want to give anyone an early offer unless they were sure it would be immediately accepted. There was a feeling of momentum, and PNMs should feel a foregone conclusion that they wanted to pledge somewhere they needed to get on board soon. The third and final day was about elimination: PNMs figured out they might not get a bid, and were meant to fear exclusion and rejection, so in the final hours, they would take any bid. \n\nHere, timing was everything - if you didn't get an early bid from the top four, how low should you go to make sure you got accepted. The lower tier frats had to close hard at the end, or adopt a strategy to offer lots of geeks (especially if they had a 4.0 GPA) to go Greek and then cull them if they prove to be too un-cool and/or the frat's overall mean GPA was up and you could turn in a good grade report before you dropped them from your rolls. ",
        "We headed for our third and final formal invitation for the evening: the \"Tri-Phi's\" or more formally Phi Phi Phi. I had done some research on them, and had a favorable first impression. They seemed to be not as ritzy as the PIGs, but they were a lot more 'establishment' than UDP. They had even more rich and famous alums than either PIG or UDP, and my dad would probably give them a great grade for 'networking potential'. \n\nJudging from the pictures, there were some 'rich kids' who were not good looking and/or well dressed enough to get a bid to PIG (a category if would surely be in if they didn't have a hint of my talent). The party pictures featured some nice looking girls and a lot of drinking and dancing, and lots of pictures of white guys either doing Karaoke, standup comedy, or trying to rap. I knew a few guys from the old neighborhood who were on the website, and they were okay as far as I remembered. Most of the members had stated career goals to be MBAs or CPAs, or maybe both, which seemed a little out or character with the hard partying image otherwise portrayed. \n\nThe gospel according to Kevin called them Phi Phi Pho Phum, and said they were high pressure recruiters, and had a lot of turnover with guys leaving the frat in their sophomore or junior years, and thus a shortage of seniors on their rolls. This also had the effect of significantly depressing their average GPA, keeping them on the borderline with the University guidelines. I knew they only had to have 2.5 out of 4.0 to keep the University happy, so being on that borderline was not good. \n\nHe said they had a lot of members who had to finish high school at boarding school somewhere, and in related news, the frat had some of the best dope in Austin. They were also known far and wide for having large numbers of very slutty 'house girls'. How could they possibly be any sluttier than the Chi Omega Chi girls? I made a mental note to check that situation out personally.\n\nWhen we arrived, my first impressions were actually pretty good. The guys all snapped to attention when they spotted Orinda, but they were polite about it. Nobody was obviously wasted like at Alpha Nu, even though it was now later in the evening. They all had pretty good bullshit too, and I recognized a couple of guys from some of my classes that I had no idea were in Tri Phi. The house was nice but not too fancy, and in a very nice location, closer to campus than UDP but not as close as Millie's Bi Phi house, which was just south of campus. \n\nThere was a pretty nice band playing and a well laid out dance floor with five or six couples dancing and looking good. Orinda wanted to dance and we enjoyed the music and motion for a while. These guys were starting to look like real competition for UDP. The Rush Captain, who had the unfortunate nickname of Gomer, and his date, Giselle something, came up and introduced themselves to us and suggested we go outside away from the noise and they got punch and I found a Diet Coke. \n\nIt was cool out, but not really cold, and the music still sounded good in the backyard of the house and the area around the pool was very nice. Giselle proposed that she take Orinda around and introduce her to the girlfriends of the officers of the frat and some of the 'Big Sisters', while Gomer took me up to 'member country', i.e., the upstairs of the house.\n\nI gave Orinda a little kiss and we went our separate ways, promising to meet up back at the dance floor no later than 12:30 PM, both of us sharing a smile at the prospect of walking northeast to Candy's place for our 1:00 AM date. Gomer gave me a conspiratorial grin as he watched Orinda and Giselle walk away. \"Wow, Roberts. You may not even need to be in a frat if you can get girls like that as a freshman!\" I made some complementary comment about Giselle. \"She's a trooper.\" He replied, and led the way up the stairs. The atmosphere changed, and not subtly. We entered a long hallway where most of the connecting bedroom doors were open. \n\n\"So, Roberts, about that Diet Coke thing: you don't drink at all?\"\n\n\"It doesn't affect me like most people. I don't get drunk, I just get sleepy. It's more fun to stay awake.\"\n\nHe seemed to be considering this, but not fully accepting it. \"What about weed?\"\n\n\"Same sleepy effect, plus it irritates my throat and lungs, too. I have the munchies all the time even without it. \"\n\n\"Coke?\"\n\n\"Makes me sneeze and my nose run.\"\n\n\"E?\"\n\n\"I'm too worried about how it's made and what else is in it.\"\n\n\"Then what does get you high, Roberts?\"\n\n\"Running sometimes does.\" His expression remained frozen: he was not into running.\n\nI gave him my best conspiratorial grin. \"And always, women\", I intoned. He smiled: we had finally reached a point of agreement. \n\nWe walked to the other end of the hallway to a large room with two big couches and a bed that was about the size of two regular king-sized beds put together, and lit only by a black light. There were fluorescing posters in the walls, and a low and lilting kind of eastern music with a pounding beat. As my eyes adjusted, I also noted that there were girls on the couches, but not on the bed. Those girls were sending Suzie, an edgy and predatory generic 'woman sending for man' variety that made me tune in closer. I realized that they were waiting for their natural prey to arrive. Maybe it was the ice cream sundae bar from earlier that had my blood sugar optimized or my 'Suzie Sense' was continuing to develop, but I got the impression that they took no joy in their predation; but rather that they were just trying to survive. \n\nGomer smiled a crooked smile. \"This is our pledge palace, reserved for the new members who pledge during Spring Rush. Our house girls just go crazy over new members, literally and figuratively.\" He chuckled at his own turn of phrase. \"In fact, our house girls are totally devoted to our members!\" Another chuckle. \"They will do anything our members want.\"\n\n\"So these aren't your 'Big Sisters'?\"\n\n\"Oh no! The Big Sisters are in sororities and stay downstairs and appear in pictures we publish on the web page. These house girls are independents who stay upstairs, and appear in pictures we circulate privately, or not at all.\"\n\nA group of guys came up the stairs, laughing and jostling each other, and smelling strongly of booze. The door to the room next to the 'pledge palace' opened up, and I could see some sort of super high tech bong set upon a card table, hooked up with several hoses that went up through the ceiling. The group went in, and Gomer urged me to follow them. One of them spoke up, sounding like a radio announcer: \"Rush Captain, I present Brownwood Texas's own Clement Edwards, a legacy PMN who has accepted his bid to pledge Tri Phi. He will henceforth be known upstairs as \"Ed the Head.\"\n\nEd was a short and plump with thick glasses, bushy unkempt hair and a very red face and vacant expression that made it clear he was already three sheets to the wind. Gomer whispered to explain that this kid's older half brother, known as \"Prince\" Edwards, had been a major ESU jock and former Prez of the Tri-Phi's, so young Clement got an automatic legacy bid, implying that otherwise he would not have been Tri-Phi material. He also explained that each member got an \"upstairs party name\" that was to be used only by other Tri Phi's. I seemed to remember that big brother Prince Edwards had been indicted a few years ago in some sort of bribery scheme involving bid rigging of contracts for the state lottery. \n\nThe group sat \"Ed the Head\" down in a folding chair at the card table, and Gomer produced a metal cookie tin, which he opened with a flourish and showed Ed the contents. I looked over his shoulder into the tin, which did not have cookies inside at all, but some little light brown squares that looked a bit like smaller than bite sized milk chocolate pieces, except that each one had a blue dot in the middle of it. \n\nGomer loaded one of them into the business end of the bong, handed Ed a lighter, and explained that he should light up the edges first, and smoke the little blue dot last. When Ed fired it up I smelled a sort of dank and exaggerated version of the pot smell that permeated some of the dorm hallways on nights and weekends. Gomer explained that this was primo hashish, and the little blue dot in the middle was opium, to provide the 'final blast'. The smoke that emerged from \"Ed the Head\" was gathered up by the pipes, and seemed to be mostly carried up to the roof, presumably to be exhausted up into the night sky in a relatively stealthy fashion. \n\nBy the time Ed finished the little square and then the blue dot, he had a crazed expression on his face that made his previous visage look alert and scholarly by comparison. They all cheered, slapped him on the back, and stood him up and steered him towards the pledge palace.\n\nThe girls inside greeted Ed warmly, pushed him onto the bed, and began to paw him and dance around him. I remembered reading that the most potent hashish usually came from Afghanistan, where lately production was way up, and a big percentage of the profits helped finance the Taliban. The girls seemed to act just like the regular dancers at Babe's Club in Dallas, but they were younger, slightly better looking, and had larger and more artistic tattoos. Ed got a lap dance from all of them, but then, unlike at Babe's, the girls stripped quickly and encouraged Ed to kiss them all over. He did, sloppily. \n\nGomer leaned into me, thinking he was closing me: \"Just another typical weekend at our fabulous house, Robbie, with the best dope and the hottest house girls on campus!\" I just stood there. As each girl finished her turn with Ed, Gomer put some white powder from a little vial in his pocket on a little silver spoon, and let the girl sniff it into her nostrils. Once again he spoke to me conspiratorially: \"That's what we Tri-Phi's call a grind and bump, rather than bump and grind!\" He thought I was digging it. I was not. Strike Three.\n\nI slapped Gomer on the back. \"I gotta go walk my date home, buddy! I might come back later!\" I might not. \n\nHe smiled and served himself again from the spoon. \"We party until dawn!\" Ed the Head, Tri-Phi's latest illustrious pledge and future world leader, was getting a hand job from one of the house girls. Best day of his life, probably.\n\nI was early getting back to the dance floor, and Orinda was already waiting for me, looking anxious and impatient with me already. \"Am I late?\"\n\n\"You should have been earlier! Those girls give me the creeps.\"\n\n\"How so?\"\n\n\"They basically sit around the table and do lines of coke, and gossip about how the pledges will get to fuck the house girls, and which pledge do they think would be the best fuck, and who the girlfriends and Big Sisters might get to fuck them on the side, or who they have now to do that, because their boyfriends are too wasted to make it with them most of the time. They don't respect their boyfriends, they don't even like them very much, but they still want to get engaged to them and marry them! I don't get it!\"\n\n\"They won't either, Orinda, although they all think they will.\"\n\nWe took off for Candy's, walking briskly, going north to get to 24th and then east and then back north on Guadeloupe. Orinda shook her hair out, and sniffed me. \"What's that smell on your clothes? Have you been smoking dope?\"\n\n\"No, but everyone else upstairs was. Hashish with opium, in this big ass bong with an exhaust chimney through the roof, literally.\"\n\n\"It smells weird; I wish I could take shower to get these smell of that place off of me before we get to Candy's. We're early, aren't we? Let's go back to the dorm and take a shower.\"\n\nThat wasn't a bad idea, but: \"I'd rather get to Candy's a little early. Maybe she will take a shower with us?\"\n\nShe laughed out loud. \"Okay, better idea.\" She put her hand on my waist and tickled my ribs. \"Is this the night where you teach me to suck cock?\" Tickle. \"Do you teach Candy too?\" Tickle. \"Separately or together?\" Tickle, tickle. \"Can I take the advanced placement test?\" Tickle. What a delightful young lady.\n\nWhen we knocked on her door, Candy was waiting for us, and was as glad to see us a little early. She had just emerged from the shower, and she instantly noticed that we smelled weird. She came into the bathroom with us to talk while Orinda and I washed each other off, and shampooed each other's hair. We soon smelled and felt a lot better.\n\n\"So how were the parties?\"\n\nOrinda laughed. \"A little creepy at the last place: we both wanted to leave early to see you!\" That earned her a kiss from Candy, and then she continued, \"This is our big night when Robbie teaches us to suck cock! Are you ready?\"\n\nCandy gave me a 'spitfire' look. \"I was born ready, honey! Robbie do you really think you can teach me anything?\" We were drying off and she was leading us to the bedroom. I wanted to impress on them the great importance of this subject, and the power and responsibility that was about to accrue to them. I was very proud of my training regimen, which had been pioneered with Lara and Millie and perfected on Erminia. \n\nIt was guaranteed to teach a woman how to quickly be world class fellatrix, and in the process learn to concentrate on her partner and forget completely about pleasing herself, the first step in reaching complete sexual mastery. I decided to crib from Professor Lillehammer's first lecture in my Engineering 101 class, where he impressed upon us the incredible power of the knowledge we were about to be given - the power to perform feats that the common man could not, and could likely not even comprehend. At least that was the gospel of engineering according to Lillehammer. \n\n\"Girls, I am going to share with you some of the most powerful sexual knowledge in the world. It not only has the power to cloud men's minds, but in some cases to control them or drive them insane. The techniques I am going to impart to you are dangerous, so much so that if you use them on a weak minded or weak willed man, they may be driven to criminal behavior to try to get you to do it to them again. You must not use this knowledge in casual relationships, but only with men you trust and respect. It is to some extent self limiting, in that you will not be able to do it properly to a man you do not respect and genuinely want to please. \"\n\nOrinda tilted her head and said, \"Why are you speaking with a Norwegian accent?\"\n\nI detected a little mischievous Suzie signal from Candy. \"Are you sure we should use them on you?\"\n\n\"Yes, because I have determined that you are both women of fine underlying character, and worthy to receive the boon I am about to give you!\" I hope they were buying my tone.\n\nOrinda still looked suspicious. \"So you are saying you are doing us a favor to let us learn how best to blow you?\"\n\nI tried to look my most sincere. \"You have no idea how big a favor!\"\n\nThey both chuckled. \"OK, Master, lay it on us!\"\n\n\"First, get out of those clothes and get me two bandanas, or something else to use as blindfolds, and both of you put your hair up in pigtails and get on your knees. The first part of the training is totally experiential; you must undergo it yourself and not watch how the other one handles it before you do it. In the first stage of the training you will be pleasing me maximally without any initial training on what I like best.\"\n\n\"How is that possible?\" Candy asked.\n\nI glared at her. \"Oh! I mean, how is that possible, uh, Master?\"\n\n\"That's better. It is possible because I'm just going to fuck your mouth the way that pleases me best. You won't have to think about my pleasure this first time; I'll take care of it. You will have four goals. First, to manage to breathe well enough through your nose to stay conscious and second, to learn to anticipate my motions and adapt to them, so you are getting your mouth and throat in the correct position for me, and I don't have to use so much force to get you where I want you or to cause you any real injury. Quickly learn to suppress your gag reflexes when my cock enters your lovely throat - vomiting really spoils the mood. Finally, when I ejaculate, you must find a way to suck me dry and swallow every drop, even while my cock is buried all the way down your throat, while still managing to breathe through your nose.\"\n\nOrinda piped up. \"Jeesh you don't want much do you, boy!\" Candy kicked her. \"Oh, I mean how will I ever be able to do all that well enough to please you, Oh Supreme Master?\" Even Candy snickered at that. \n\n\"Practice makes perfect.\" By this time they had both put their hair up in very pretty pigtails and had blindfolded each other. I stood in front of Candy and gently caressed her cheeks. \"You are so pretty, Candy, and that's what makes me want to fuck your lovely throat!\"\n\nI grabbed her pigtails and put my now fully erect dick in her mouth. I clearly was getting better at reading Suzies, and I found that instead of just tuning them out completely like when I first developed the technique, I could now selectively ignore the signals from their negative feelings, which the girls would have to learn to stop on their own, and the feelings of excitement and later sexual power that they would develop. Candy's signals were a revelation. \n\nShe liked having her head held and controlled, but she was also terrified about not being able to breathe. I limited my penetration to her mouth for now, establishing a steady rhythm so she could anticipate my motions and time her breathing successfully. As soon as she realized she could get enough air through her nose, she relaxed and her excitement increased. I began pushing increasingly deeper and deeper into her mouth, listening carefully for the little signals that would tell me what she liked and didn't like. Meanwhile, I also tried to concentrate on making her whole head go where it pleased me the most. \n\nI glanced over at Orinda. Despite being blindfolded, she was totally alert, tilting her head up slightly and back and forth like a dog listening to a new noise. Her nostrils flared with each little gulping noise that Candy made, and she would occasionally lick her lips and swallow. What a woman.\n\nI felt Candy's throat relax, and detected a little signal of enjoyment. I pushed in a little further, just beginning to reach all the way past the base of her tongue and down into her throat. She was nervous at first, but very successful at anticipating my thrusts and suppressing her gag reflex. After ten or so thrusts in and back out, I pushed in a little further and stopped, just holding still with about 1\" of me in her throat. \n\nShe gulped three quick breaths of air through her nostrils while I held still and I enjoyed the resulting motions of her lips and mouth around my cock, then her throat relaxed a little more when she realized she could handle it okay and still breathe. Then a miraculous and clear Suzie emerged: it was turning her on! I let out a little groan of pleasure, giving her positive feedback for her excitement. \n\nThen, of course, I recalled my duty to educate her further, so I put another inch of my cock down her throat. She adjusted quickly, and soon was breathing with no problems, and then her Suzie said she kinda dug it. I just kept repeating my little routine, and she settled in and actually began to give me a little tongue on my way back up, so it was time for another pleased little groan and thus more positive feedback. Pretty soon I was bottoming out with my cock all the way down her throat. It felt fantastic and she was really beginning to like it too. Then my Suzie receiver gave me perhaps more information than I wanted: she was beginning to wish I had a little more length to give her. Time to change the subject!\n\nI tilted her head up a little more and got up on my tiptoes and began to go for maximum depth and sideways friction so I could get off relatively quickly. I moved my grip from her pigtails to her skull and really got into it. Maybe I should pledge Bi Kappa Sig, or at least get the tee shirt? She had a little trouble adjusting to the faster pace, which not only gave me more friction and stimulation, but led to the occasional scrape of her teeth on me, and soon set me off. Sunshine of my love, baby! ",
        "She almost gagged, but stopped herself. I felt her throat muscles spasm around me while I came in her throat, but she really was not able to generate any real suction on me. Perhaps we can work on that in her next lesson. I pulled back out until only the head of my cock was in her mouth, and recalled her previous skills from last night as she sucked hard on me, hollowing her lovely cheeks and dredging up all I had left and swallowing the last little bit. The incredible Candy: she may water ski down my dick anytime.\n\nWhen I finally let her head go and pulled all the way out of her mouth, she gasped and drew in a huge loud breath. \"That was down dirty and nasty, Robbie! I liked it. Not at first, but by the end, especially the end.\" What a woman. \"Is it Orinda's turn now? Since I went first, can I watch her get face fucked, Master?\" She took off her blindfold, and I did not correct her. \n\nOrinda turned out to be a natural. She gagged and fought at first, but then we settled into a rhythm, and she then had no trouble breathing at all. Candy's eyes got huge as she watched Orinda, and then a popping Suzie emerged from her, doing that empathetic sensuality bit again. She would occasionally lean in for a closer look, or touch Orinda's shoulder or my leg tenderly. \n\nOrinda seemed to have a talent for relaxing her throat just enough to avoid any difficulties on her part, whilst maximizing the sensations on my part. She was just naturally fantastic. She would move slightly left or right, giving me a little thrill each time, and occasionally twist her head or put her teeth or tongue on me on my way out. When I finally shot, she managed some suction even when I was maximum depth, then Hoovered me strongly on the way up, stopping me and sucking her cheeks hollow, then smacking her lips. I took off her blindfold and saw a giant smile and beaming bright eyes, and I was transported back to a time to when I imagined a younger Orinda won at some game or contest. I just basked in that smile for a while, and Candy's next to it. \n\nBoth girls were radiating excited Suzies, and the mood in the room was incredible. I tried once again to channel Professor Lillehammer. \"OK, class pretty good for first timers! Let's take a brief water break, and then you will begin to learn things that will forever change your relationships with men, should you choose to use them. They both got bottles of water, and I downed two, figuring I needed immediate fluid replacement in order to function well for the rest of the evenings lessons. Duty, you see.  \n\nWe all took a brief bathroom break, and did one more 'experience' for each girl, and I was concerned I was already getting dehydrated. Then we sat together on the couch and I recalled Professor Lillehammer talking about the practice of engineering, and tried to adapt his lecture to my subject. \"You both understand the basic theory, and now we will move to practical considerations. First, you both seem to have no trouble with swallowing, and that's important. No guy want to come 'out in the cold' so to speak, he wants to feel accepted and be sheltered and warmed.\"\n\nCandy raised her hand: I guess she was really into the classroom metaphor. \"Why do all the porn films always show guys who want to come all over a girl's face or hair? It seems like every one of them ends that way! And the girls all say stuff like 'gimme that load' and 'shoot all over my face, baby!' What's up with that?\"\n\nThere are certainly pros and cons to having girls watch more and more porn, which they certainly do these days. I tried to explain: \"Those girls aren't doing that to please the guy in the movie, but playing to the audience. That's why they always come out in the open: so the camera can see it.\"\n\n\"That's where the term 'money shot' comes from: guys who buy porn pay for seeing that, and they won't pay if they don't get to see that. And the positions they use in those films are not necessarily the ones that feel best for the guy or the girl, they are often the ones that give the camera the best view.\" \n\n\"For example, you both have lovely faces, but I don't really want to come all over your face. I would rather come inside your pretty mouth, and have you look me right in the eye as it happens. There are some important techniques which you are about to learn. Have you ever heard a chef say that 'the presentation is just as important as the preparation?' Well, that's certainly true of blowjobs. Let's do an exercise that will 'bring home' this point, so to speak...\"\n\n*******\n\nProfessor Auguste F.I. Haubenfelter was literally spitting mad for three entire days. That bitch, selling him on the world's most wonderful possible pussy, and then delivering only piss! He realized his fever was finally beginning to break a little when he thought to himself that he had never been so pissed in his life, and then laughed at his own brilliant joke. He then knew that his incredible intellect and sense of humor could get him through any difficulty, and his soaring faith in his own superiority was reinforced even further. \n\nHe had realized two things, though, that kind of shook him. First, his little piss surprise turned him on a bit; although he was loathe to admit it. Wasn't he the one that had been worried that his new super hot Mistress would succumb to his wonderfulness like the previous ones, and lose her ability to humiliate and dominate him? He now knew there had never been any danger of that. If that kind of humiliation was part of the bargain to actually gain access to all her charms, he would probably have gone for it. \n\nSecond, she must have really not respected him; otherwise she would not have been able to do that to him. That left the very difficult question: by what kind of incredibly twisted logic could she have possibly ended up not respecting him? He also recognized tangentially another problem, in that the attacks on his brilliant theories were becoming more frequent in the academic but especially the popular press. Twisted logic must be contagious. \n\nThen her sarcastic tone as she was questioning him about his theories finally hit home. She was actually making fun of him! Surely she couldn't be so naive as to think he should not have formed his conclusions before amassing his data. That was so 19th century of her, and he was part of the modern intellectual elite and New World Order. She also thought less of him for using metadata instead of doing his own primary research, and that was not a fair criticism either! \n\nIt would have taken him decades to compile a really meaningful data set, and he wanted tenure right away. Plus the nature of economics itself often made it impossible to do real experiments; his genius was in interpreting the data he could find. In fact, it was very noble of him to move forward in the way he did, because the popularity of his ideas among the ruling class of politicians may soon give him the political power to run some actual experiments! \n\nIt wasn't fair of his critics to accuse him of manipulating the data, either. There may have been a few little errors in his arithmetic, but his overall process was a good faith effort, and the errors hadn't lead him astray, rather they only reinforced his correct conclusions. Truth to tell, he had chosen his datasets very carefully, and there were none that he thought could fail to arrive at the results he wanted, or he would not have included them.\n\nSome evil racist capitalists were actually suggesting that all his datasets should be made public, even the ones he choose to exclude from his studies, so others could attempt to recreate his results. Foolish consistency is truly the hobgoblin of small minds, which all his critics certainly had. That's why they weren't part of the in crowd, like he was. One particularly smarmy conservative critic even said his latest book was so popular with liberals that it was considered 'faked, but accurate'. \n\nIf they actually succeeded in showing that crunching all the data resulted in not supporting his conclusions, his career path would be derailed. He owed it to the poor people who were suffering under the so called 'free market' economies to protect his high status and get his ideas implemented so he could help those poor people, as only he could. Plus, he had his eye on a really nice weekend place in the south of France, so he could escape the crowds of Paris and let his thoughts soar, for the benefit of all mankind, of course. \n\nThen a thought occurred to him, one that scared him a bit. What if he dredged up all that data and did the analysis on it himself? If it turned out to still support his conclusions even when complete and accurately processed, his position would then be unassailable. If there actually were problems, wouldn't it be better for him to know about them first? He was fairly sure he could find a way to make it come out the way he wanted and still appear accurate. Or at least divert attention from the issues. He could even get more grants and funding for this extended analysis! \n\nHis biggest problem with this new approach would be the powerful politicians that were his current supporters - they would not want to open this can of worms at all. In their world, strict denial of anything that did not support their narrative was the best tactic. To them, factual correctness on some policy issue was not worth spending money on, when you could instead spend it on PR to drown out the opponents' arguments. They would spend almost any amount to ensure that they had all the facts when it came to opposition research, though, and he did not want to be their target for that kind of thing. Therefore he would keep all this under his hat until he knew how it turned out.\n\nSuddenly a new goal occurred to him, and he got a major (for him) erection! He would process the data perfectly, such that even his strict almost Mistress would be proud of his rigorous analysis, and if it supported his conclusions, he would publish it far and wide, with all the supporting data bravely revealed. She would be so impressed that she would seek him out once again, and excite him through her incredible skill as a Dominatrix, and then actually let him have her pussy the way he wanted it. If she made him her little piss boy occasionally, that would be okay too!\n\n*******\n\nCandy and Orinda continued to astound me with their natural talents, and their learning curves were steep and sure, adding mountainously tall and wonderful techniques to their repertoires with only a few minutes of practice, rather than hours of drill. They had two very different but charming facial expressions when they finally conquered me with their lips and made me shoot for them. Candy's was smiling, but with a bit of a challenge that said 'you can't resist me, you know' and I knew I could not. Orinda, on the other hand, or mouth, or whatever had an expression that matched her raspy and newly powerful Suzie signals, saying 'I own your cock, boy, and you will give it up for me at just the instant I want you to.' I certainly wanted to, and I certainly did.\n\nI settled in with them on the bed, all of us sleepy but still with an excited buzz, and I wanted to give them one final bit of advice. \"You two are now some of the most powerful sex goddesses in Texas, so you have to be careful. The average guy, if you do even a quarter of this stuff to him, will follow you around like a puppy for the rest of his life. So don't do things to someone you don't want to 'imprint' with your charm. You are now so technically talented that even if you were horribly ugly, you can make them feel so good they would never care, and want you every night and every day. Given that you are both hotter than a depot stove, it will be even worse!\" I knew I was fading fast from all those ejaculations, and arranged a pillow under my head so I could watch what I predicted was going to be a series very juicy and frantic embraces, given the way were they were looking at each other.\n\nOrinda smiled at me, and then sparked a challenging Suzie. \"So we pleased you Master?\"\n\n\"You have both proved worthy of my attentions tomorrow night.\"\n\nThey both laughed, and then I realized they had misunderstood my promise to them, as Orinda said 'So tomorrow night, you have to do whatever we want!\"\n\nI shook my head, and they got angry expressions on their faces. \"Not at all\", I said. \"That was never the idea. I promised to do what pleases you best. Not what you think will get you off, or what you tell me you want, but what really will please you the best. There may be some overlap, of course. But I will do what I know will get you off the best!\"\n\nThe both look worried, and I realized their Suzies were betraying two things. First, clear images what they thought they wanted but have never had, including some of my favorite training activities, and some other stuff that they never, ever thought they wanted that I might be referring to. It made them both uncertain and hot. But they soon demonstrated that they already \n\nknew many ways to get each other off, ways that I never could have kept up with. I lay there in a half sleeping state and felt a series of their orgasmic Suzie signals wash over me. I never realized you could fuck someone that hard without a dick, and I might never look at a pair of scissors the same way again. One time when I did wake up a little bit they both smiled and then held my hand, so I felt sort of included.\n\n*******\n\nOrinda and I skipped the gourmet breakfast at Whataburger, and left Candy sleeping in a jumble of sheets as we made our way back to the dorm for early breakfast. We had time for a quick shower in our respective rooms, and then both of us showed up in just jeans and tee shirts to go through the line. I was starving and thirsty and she was too. We sat a table near a corner window, and she leaned over a whispered in my ear \"I wonder if people can tell from the way I look that I have been sucking your cock all night?\"\n\nI sputtered and then said \"I sure hope so! It would improve my reputation a thousand fold!\"\n\n\"Your reputation doesn't need any improvement, Robbie. In fact, you should probably be doing a little counter PR campaign to reduce your profile.\" She looked around with hooded eyes, and then said \"I haven't seen Nora yet this semester, have you?\"\n\nI did not know that Orinda knew Nora, although since they both lived in this dorm all last semester, and both seemed to be early risers, I guess I should not be surprised. \"She won't be back in town until the night before classes start. And she's not living in the dorm anymore; she is in one of the co-ops for her final semester.\"\n\n\"That's right. She was hoping they would let her cook.\"\n\n\"They'd have to be crazy not to. That girl can cook. This is her last semester at ESU. She is going to graduate school next fall, but not here.\"\n\n\"What's her degree in?\"\n\n\"She is going to get three undergraduate degrees: math, business, and economics. Last I heard she could choose between B-school at Harvard, Stanford, or go for a PhD at the London School.\"\n\n\"Wow. I figured she was hot stuff, academically speaking. You know she is crazy about you, don't you?\"\n\n\"Well, we are friends.\"\n\n\"No you are not. You and I are friends with benefits, for one more day only. But you are all she ever talks about, especially that Thanksgiving that she spent with your family. She already fell for your whole damn family, fool. You've got some skills, boy. If you ever sleep with her, she will fall hopelessly in love with you. Tread carefully, Robbie.\"\n\nWe agreed to meet at 2:00 PM for two more drop in invitations at frats, then we were going to the 'Chapter Dinner' at the UDP house. If I was going to pledge anywhere, that would be it. I would decide between now and then. I explained to Orinda about the 'slumber party' at the BOT house, and she said she would go to Candy's after the UDP dinner and then I could join them whenever I could get away, and not to worry because they would be fine without me. That's precisely what worried me.\n\n*******\n\nSaskia unloaded her stuff in the cool and still early Austin morning, glad to be back at the job she used to love, but filled with dread as to what academic and administrative torture Arturia Colorado might devise for her this term. The Brown Bear had already made her rewrite her own stuff three times and even she could not find anything to criticize about it now. \n\nSaskia had also done a masterful job of re-working two papers from data gathered by another departed post doc that Arturia had almost driven to suicide, and they were ready for submission to the journals - the first things Arturia had a chance to have published in years, and in respected journals she had never appeared in before. She would, of course, be listed as the principal author, even though she had done absolutely nothing for the work save administer the grants and torture the actual researcher, but at least Saskia would be on the papers as a co-author. Hopefully. \n\nShe found a note from Duke Knorr on her desk, and then noticed that his desk was all cleared out. He had gotten on as an RA with Bob the Knob at UCSD. He had just left - they might have passed each other on I-10 as he wended his way west. She felt a twinge of envy, and then crushing sadness as she realized having Duke as a 'co-prisoner' had somehow made things seem more bearable. \n\nThis semester would be a test of one of her dad's favorite sayings \"That which does not kill me makes me stronger\" Her dad was a high school football coach and he attributed the quote to Ray Nitschke, the linebacker, not Friedrich Nietzsche, the philosopher. Probably works okay in that context too - she wouldn't mind suiting up and catching Arturia Colorado coming across the middle for a pass thrown a little high! \n\n*******\n\nThe two drop in visits to other frats turned out to be completely perfunctory, except that I met two more guys that I used to know in junior high, and was a little taken aback to realize they knew all about me and I didn't even know they had come to school at ESU. Orinda left a sting of broken hearts in her wake - she looked even better today than yesterday - she just glowed with magic. Maybe I could take some credit for supplying the Vitamin D, but I think I was just helping to reveal her true beauty.  \n\nBy Monday, she would have at least ten potential new boyfriends, and perhaps be a fashion model, and I had just learned that she certainly did not intend our 'benefits' to continue after tonight's training. Oh well, I could just keep telling myself that \"she is a wonderful young lady and I am proud to call her my friend.\" Plus if any of the new boyfriends hurt her, I would make them disappear in the night. At least I was certain to have much better memories of her than that 'smooth' former boyfriend. \n\nWe got to UDP a little early, and I realized that going back into the UDP house almost felt like coming home, and I knew then and there that I would pledge. They had only two new spring pledges, as they had gotten very serious about academic qualifications, so I would make the third. It used to be that anyone who got into ESU had good enough grades and scores to be almost certain to make a 2.5 GPA, but these days UDP wanted a 3.0 or better from every individual, and there were a lot more distractions and better dope on campus than in years past. \n\nThere were also about 5,000 more females than males on campus these days, and people were not too far off in saying that any guy that was not horribly disfigured and openly gay was going to get a lot of female attention and opportunities for even greater distraction. The house looked good, with people moving around and in conversation groups. \n\nThe menu board at the entrance to the dining room advertised fried chicken, corn on the cob, broccoli and cauliflower casserole, and Blue Bell ice cream. I just knew it was a great idea to pledge, and I made a note to see about living in the house next fall. My favorite cook had already gone home for the day, but I would come back to give her a hug and tell her I was joining up. ",
        "The Weather Channel was on the wall mounted LCD TV, and they were talking about a big storm system currently forming as two weather fronts collided in Colorado and were expected to move across Oklahoma, Texas, Arkansas, Tennessee, and the Carolinas tomorrow, with the potential for big thunderstorms, hail, flash flooding, and even some tornados. The predictions were that the storm system wouldn't make it as far south as the Austin area, so I forgot all about it. \n\nOiler spotted me first, and he and Gretchen came over to welcome us. I told him I had decided to pledge and he gave me a bear hug that lifted me at least a foot off the ground. If that wasn't embarrassing enough, it made Orinda send some Suzie for him. Word spread quickly, and soon Cisco and a the fall pledges I had helped with girl spotting at the mixers came out to greet me. A few minutes later, Ralph arrived with Big Liz and Little Marilyn, and soon all three were grinning and hugging me, and I was very aware of how nice Liz and Marilyn felt in my arms. \n\nDinner was wonderful, and everyone loved Orinda. I was feeling melancholy about our soon to expire 'benefits' arrangement, but that made me determined to rock her world tonight. I knew I would never forget her, and I was going to do my best to make sure she never forgot me. I was introduced to the other spring pledges, and learned that although UDP eschewed hazing, there would be 'pledge classes' with required service, tests on fraternity history and dogma, and some required ingenious pranks to be devised to demonstrate that we were really UDP material. \n\nI got another commitment from Oiler to help tutor me as required, as this spring semester I started some of the more challenging 'weed out' classes, like engineering mechanics and differential equations. I would have to work exceptionally hard to maintain my current high GPA. If I made it through the spring semester, this coming summer would be my first official 'work assignment\" for the distributed education program, and if I followed the normal progression, I would go to school in the fall and then work for a second time in the spring. Lillehammer was already bugging me via email about completing my interviews and securing a spot for the summer work period.\n\nWe got another round of hugs (Orinda got more than I did) as I prepared to leave the UDP house for the 10:00 PM invite to the BOT slumber party. Two of the fall pledges who lived at our dorm insisted that it was their duty to escort Orinda there to make sure she was safe. I know all about that duty shit, guys. At least if there were two of them they might police each other. \n\nI watched the three of them walk off toward the dorm, and then turned and made my way toward the Beta Omicron Theta, or \"Booty\" house. I had been there before, with the lovely Country Chrissy at the square dance party, and had very fond memories of it. It was a huge white painted brick house with several outbuildings, surrounded by huge oleander bushes, and was right in the middle of West Campus, a ways almost due west of my dorm, amid apartments and a few other smaller sorority and fraternity houses. I got a bit of a rush (so to speak) thinking out my incomplete but wonderful 'second base' tryst with Chrissy behind the pool house sitting on those stacked and stored patio chairs. \n\nThe front porch light was on, but the Spring Rush open house was apparently over - no comely female PNMs were in sight and the front doors were closed. I grabbed one of the two big knockers on the front doors (how appropriate) and announced my arrival. The door was opened by a spectacular woman: if you scaled Suzanne up to Lara's full six feet, she might look like this one. She had shining black hair, perfect light olive skin, light brown eyes, a muscular yet curvy figure with some very big knockers of her very own, and a beautiful face. \n\nThis woman had not been at the square dance party, because I would have remembered her. She had pink silk pajamas on - should I have brought pajamas? She was absolutely captivating, but I was very disappointed to discover that she sent no Suzie for me. Damn. I recognized her from my brief visit to the sorority's web page. She was their President, a senior political science major from Houston, and the fourth generation heir of a famous (or perhaps infamous, and very liberal) Texas political family.\n\n\"Hello, Robbie. I am Jenna Hogg Shrub, Sorority President of Beta Omicron Theta. Welcome to our house!\" She opened the door wide and beckoned me to come in. The first thing I noticed was candles: a lot of candles. What kind of slumber party was this? Susan introduced me to several other women who came down the very impressive stairway in their entry hall, they and turned out to be the internal and external vice presidents, social chairpersons, rush coordinators, rush trainers, rush captains, and pledge trainers. The 'rush' group had on jeans and sorority logo tee shirts, but the others had some very frilly pajamas on, like Susan did. \n\nShe explained that the rush coordinator, trainers and captains were involved in the what they called 'first night' for the new spring pledges, and would go back to work with them until midnight, then put on their pajamas and join the rest of us for the 'first night slumber party' which they referred to with an almost reverent tone in their voices. My ego soon got a little salve, in that Susan was the only woman who wasn't sending some Suzie for me, and some of them were sending rather frantically, at that. The rush group all shook my hand very warmly and lingeringly, and went back upstairs to 'put the spring pledges to bed for the night', and promised that they would be back as soon as they could. That did sound promising. \n\nSusan took my forearm and led me, with the other pajama clad girls closely following, into a sitting room with several large couches. \"Welcome to our parlor!\" Susan said. It reminded me of Candy's initial invitation into her apartment, and it reminded the brain between my legs too, with the usual physiological result. I tried not to pay any attention to it, but it was obviously noticed (and appreciated) by almost everyone else in the room. I sat on the couch and suddenly found myself surrounded by pretty, perfumed and pajama clad girls. I just got harder. \n\nSusan cleared her throat, and said, \"Robbie, you may be wondering why you were invited to our 'first night' slumber party tonight. It is rather unprecedented to invite a male - you are in fact the first. This party is a tradition, held in parallel with the slumber party for new spring pledges. It is a reward for the hard work all the sorority officers have done in the fall and the spring to bring in this year's pledge class. We have a set of activities for the pledges to help them bond, but while that takes place we try to do something separately that we officers will all enjoy. We invite someone that we admire and want to meet. We have had senators, first ladies, fashion designers, entrepreneurs, authors, singers, and award winning actresses here to stay overnight with us and teach us how to be better people.\"\n\nI wondered how I fit in, and she went on: \"When we did some preliminary polling to determine who we wanted to invite this year, I was surprised to find that my vote, for you, was duplicated by the majority. You see, I was one of the hundreds of women at the \"Addicted to Austin\" party, and I was spellbound by the insights you gave the ones who came forward to reveal their sexual desires, and envious of the woman who was your 'trainee'. Frankly, I was very envious.\" Then why no Suzie signals, I wondered, but she went on, \"Everyone here has heard all about it and feels the same way that I do, a we have taken an oath to keep all this secret, but once the other officers return to join us, we want you to choose one of us as your trainee for the night, and let the rest of us watch her training!\" \n\nWow. What a concept. The brain between my legs ran with the idea, with the one between my ears following along. Let's train all the pledges, too! In a big group, with all the women naked and on their knees, anxious to learn how to best get us off, then feast on and fuck all those lovely pussies and asses, too. This was a brilliant idea, and it increases our blood flow. \n\nThe brain between my ears then saw some problems, but had trouble being heard. Why was the very woman who started all this not sending any Suzie for us? What would happen if someone didn't keep their oath? What would lovely Country Chrissy think, since we made a promise to her, and without sounding too much like the punch line to the old joke, a deal was a deal. Besides, both brains were really looking forward to having Chrissy next fall. \n\nThe brain between my legs sought a way to move forward. What if we ask Chrissy and she is okay with it? But then, she will have to say yes or her name will be mud with all her sorority sisters. Hooray. Let's do it! But that will make her feel even worse, the brain between my ears countered, because she really didn't have a choice, and she will hate us, and we'll never get her like we want. Plus what does Susan get out of this? What is her real purpose? \n\nSusan, who was setting right next to me, locked her eyes on to me, leaned in closer, touched me gently with her hands, and started speaking to me in a soft and breathy voice, extolling all the virtues of her plan, and ending most of her sentences with her mouth open. Something stirred in both my brains. \n\nIsn't this exactly the way Suzanne and Strelsa acted toward each other right before they made it on that couch? Aren't these all the classic signs that a woman is really into you? But with no Suzie signal, it really feels disturbing. Both of my brains reached the same conclusion: she is play acting, and thus OUR DICK IS IN DANGER! \n\nA feeling of absolute certainly swept through me. It was amazing how clear everything can be when both brains are in complete agreement. I was not going to do what Susan wanted. But what was I going to do?\n\nBy this time the other women were walking down the stairs again, in pajamas, and looking and smelling fantastic. The brain between my legs rebelled. Look at all that pussy! We have got to find a way to get that stuff. The brain between my ears was resolute. Don't fall for it; this is some kind of hustle. For some reason I recalled my Dad's advice about customer control. Sometimes you just can't sell the customer what they want, especially if it might damage you or the relationship and cause you to lose them as a future customer. Sometimes you have to sell them on what is best for you and okay for them. All of the sorority members were sitting around me now, and watching me very closely. \n\nI leaned back, listening to all those sweet Suzies, save only Susan, their leader, who was still sending nothing. Zip. I gave Susan my very best lusty leer, and then began, trying to sound fully masterful. \"I have never seen a more wonderful and attractive group of potential trainees than y'all. You are all lovely, well educated, well mannered young ladies, who also happen to be hot as hell, and I would be proud to be with any one of you. In fact, I am having fantasies about all of you right now.\"\n\nTheir Suzies soared, except for Susan, still sending nothing at all. But the rest not only wanted me, but now I was telling them how wonderful and desirable they were, and they liked that. \"I have long admired your sorority, ever since I attended a square dance party last September. Everything was set up beautifully and I had a wonderful time.\" \n\nOne of the girls spoke up. \"I thought that was you! Susan, this is the guy I told you about that filled in for the square dance caller when the old guy got sick. He saved the party!\"\n\nA wave of Suzies hit me again. In this crowd, saving an official sorority party that would otherwise have been known far and wide among the other sororities as a disaster was for all intents and purposes a gratifying sexual act! Now they liked me even more. One more setup statement and then on to my substitute close.\n\n\"I spent some time on your website when I got your invitation, and one of the things I admired most was your commitment to each other and the pledge of loyalty to your sisters.\" They were on board, I knew, so go for it, Robbie. \"So I know you will understand why I must decline your offer. I have a previous loyalty to one of your members, the one who asked me to that dance.\"\n\nThe same woman spoke again. \"Chrissy? The Master is holding out on us for Chrissy Nunnely? A pledge!\" \n\n\"Yes. Chrissy and I have made plans to date each other again next fall, and I could not be comfortable being intimate with any of her sorority sisters instead. She is a wonderful young lady and I am proud to call her my friend.\"\n\nThey were stunned. The Suzies halted for a moment, and then returned even more strongly, as each one of them (except Susan) pictured themselves as the object of such devotion and loyalty. Then they liked me even more, and they were proud of their sister Chrissy, again except for Susan. An ugly kind of un-Suzie signal emerged from her, not completely unlike the one ponytail had sent in the plane when he saw me, and I realized what it meant. She perceived me as foiling her plan, just like he saw me as messing up his plan, and it worried me. \n\nSuddenly she reacted, angrily yelling at the Pledge Trainer. \"Go up and get that bitch Chrissy and bring her down here! We'll all watch her training right now!\"\n\nI had to cut that off at the pass. \"I can't do that. It must be done in private and in an atmosphere of complete trust to be effective.\"\n\nShe glared at me. I wondered if I was up to another knockout right cross, if required. Without a Suzie blast to make her stumble, this Amazon might be able to take me, but I was very curious as to what was up with her. \n\n\"Let me propose something, Susan, since you are the leader of the sorority. If you will open yourself up to me in private, and tell me the absolute truth about your desires, I will give you even more insight and advice about your desires than I gave to those women at the party!\"\n\nThis was a hit with all the other sisters. They wanted that kind of session for themselves. Susan felt trapped. It seemed that the very last thing she wanted was to be truthful and open with me, but she knew she could not refuse me in front of the whole sorority. But she could delay. 'Okay, Robbie. I need to stay with the group tonight, but I will call you and we will spend some time together talking.\" \n\nAfter that the real action was over. There was some polite small talk, and a few smiles and hugs. I never even got to see Chrissy, and soon I was headed out the door, and I beat feet to Candy's place. I literally couldn't wait to get there, and it wasn't a long walk. It was an even shorter run - I got there early.\n\nCandy answered the door and let me in. I could tell by the smell it wasn't Mattel, although they did have some sex toys in use - the girls had definitely started without me. I was so happy to be here with beautiful AND trustworthy girls. They were both flushed and beaming, and I had to force myself to pick one to concentrate on. \n\nThey were not keen on being split up, but I made it clear we could all get back together after our initial 'one-on-one' training sessions. Since Candy was our host, I had to pick her first. Orinda said she would take a shower and freshen up and see us later. We retired to Candy's bedroom.\n\nI had given some thought to the 'find out what my girl likes best' problem, using some of the techniques from engineering 101 to plot the best route to survey and catalog her Suzie responses. Best in this case meant complete, finding everything that pleases her; effective, meaning to discover what is her #1, #2, #3, etc., and finally efficient; finding all this out in the minimum possible time. \n\nThis was the kind of experimental design exercise I really liked. Despite my advanced planning, I found myself just kissing Candy's lovely face and lips because I wanted to. It worked, though, because I instantly had a high speed connection to her Suzie, and I was lovin' it. So was she - she was so turned on that everything I did seemed to work equally well, and I realized she was well beyond the need for extensive foreplay. I stuck to my plan, and focused in on her nether lips and her sweet little pussy, so well framed by the pink outline of her bikini bottoms surrounded by her perfect tan. She was already wet and wild, and ready for a tune up. \n\nI had never felt such a direct connection. I knew exactly how to scratch her itch at just the right time and place, and was rewarded with a copious flow of her sweet juice. This really was the nectar of the gods, and I told her so. I learned her trigger spots, how rough to get with her clit, how strongly to suck and nip at her inner and outer lips, how long and strong to thrust my tongue into her, and how quickly her muscles would tense when she came. \n\nI could tell when she was just about to go over the edge, and I could hold her there in delicious anticipation and then bring her off at will. Her orgasm sent a Suzie signal that burrowed into my brain. I didn't ejaculate, but otherwise it was a little ancillary orgasm of my own. I began to see how it was possible for a woman to have so many orgasms, one right after another. It scared me a little, but I soldiered on.\n\nI put a finger in her, and then two, and found I could map her G-spot and its sensitive regions by touching and listening to her Suzie for responses. I got her just on the edge again, the pulled her trigger with my finger just as I tongued her lovely ass. Another, slightly different and more powerful Suzie orgasm signal hit me and brought me off, again without ejaculation. In fact, it just seemed to make me harder. \n\nThank goodness for those mirror neurons. After two more of those, I felt her urgent need for penetration calling out to me. Somehow I knew to get a little rough, and I used my knees to spread her legs apart and put my elbows on either side of her armpits, and entered her pussy long and strong, or at least as much as I could. After a few thrusts, her response was obvious, and I shifted to put all my weight on her pubic bone and fucked her for all I was worth. Every hour of running and workout pain I had ever endured was worth it for just one second of this feeling, as my thrusting awakened something primal within her, and she came again, and still another even more urgent Suzie speared my brain, and made me pause for a second. \n\nI could be happy as a fly in amber, suspended and preserved with this feeling forever. But then another signal grabbed me and shook me, an even more primal and urgent Suzie that clearly and unmistakably said \"Fuck Me More\", and so I did. Another orgasm ensued and that made something primal within me seek even more penetration. I flipped her over and pushed her up toward the front of the bed, and she grabbed the headboard with both hands and put her head and shoulders down and her beautiful butt up, and sobbed. \n\nI felt the ancient penetrating wasp within me rise up as I mounted her doggie style and got up on my legs a bit so I could slam into her from above and behind. It was perfect. Her final orgasm went through me like a lightning bolt, and my thunder followed a few seconds later with an ejaculation so violent I was convinced I had left more than my seed behind in her. It was completely non-volitional for a few moments as my spinal reflexes took over my entire body and pumped my cock into her five or six more spastic times. \n\nThen I was completely still and wanted to just stay this connected with her for as long as I could. I heard voices whispering her name and realized they were all mine. I rolled off to the side and wrapped her up in my arms and realized I was crying. So was she. We said nothing. We fought for oxygen and we both won. Every square millimeter of skin contact was pure joy. Was this true love? I didn't know. Maybe I was too scared to find out. Finally she kissed me on the shoulder and said, \"I am going to turn on the lamp.\"",
        "A few seconds later, she clicked on the light on the bedside table. I saw that the blanket and bedspread were on the floor, and the sheets were in a wet, fragrant and rumpled mess. Candy laughed. \"We made a big mess of the bed Robbie. Help me change it.\" She stood up and made it plain that I should too. \n\nWe pulled off the sheets and mattress pad, exposing a plastic mattress cover. She opened the closet door and reached up and pulled down a bundle from the upper shelf: another mattress pad, a fitted sheet, and a top sheet. We made short work of making the bed, and she pulled on a robe and gathered up the wet stuff and headed for the washer in the corner of the kitchen. I pulled my pants on, sans underwear and followed her.\n\nOrinda was sitting on the couch, and her nostrils flared, perhaps at the sight of us and perhaps due to the smells we were emitting. She gave us a look that said \"I know what you've been doing\" and then smiled. Candy smiled at her. \"I just changed the linens. We need to take a shower, and then I'll start the washer and let's have a snack before you and Robbie retire to the bedroom.\" Orinda looked very pleased. I must have too, because Candy swatted me on the butt, and said, \"You are going to wash my back for me, you nasty fucker.\"\n\nI bowed to her, as chivalrously as I knew how. \"The pleasure is mine, you nasty fucker.\" Orinda giggled. We hit the shower laughing. I was too sated to even think of ass worship, if you can believe that. But I did do a great job of getting her clean. I could not help but tell her how wonderful she was. Orinda had raided Candy's refrigerator and put out some cheese and apple slices, grapes, and water. Sometimes simplest is best. We were all three hungry and thirsty.\n\nThen Orinda grinned and said, \"So, how was the seminar?\"\n\nCandy smiled. \"Seminal. I learned a lot about myself, and about Robbie. You should definitely pay attention during your session.\"\n\n*******\n\nSarah was surprised at how quickly she found the club, and then how long it took her to find a parking place. The place must be packed, or else she was really high, or perhaps both. She rejected a parallel parking space, which she had trouble getting into even when stone cold sober, and also parking at the Motel 6 across the road, and finally found a spot she could back into, so she could pull straight out when it was time to leave. Was that a Freudian slip? She giggled.\n\nMaybe that Motel 6 would come in handy, after all. As her father would say, she was 'feeling the sap rising' and it wasn't even officially spring yet. She knew all the cautionary tales about pickups at bars, but she would bet that none of the hook up apps so popular in Austin would work here, and there were plenty of scary stories about those, too. As she made her way to the entrance, she noticed a sheriff's deputy near the front door, maybe working security? Maybe she should try to pick him up, just for safety's sake. He wasn't as cute as Billy, but he was likely more dangerous, and she was sure he was more easily provoked, as he was checking her out right now. Thank you, kind sir! \n\nAs she passed through the door the music hit her - loud and blaring and country and not her first choice but from a good quality sound system that was really pumping it out and making her feel the bass line. She had only heard about this place, and when she looked around she could barely believe this was really in her little hometown. \n\nIt had a big professional looking stage, a big dance floor, and at least three separate bar areas she could see. There were two dozen couples dancing, about 50 other couples sitting at tables, and at least 100 single guys milling around. She went to the bar and got a glass of wine, and sat down, provocatively she hoped, to see what happened. \n\nSarah looked a little out of place sitting there, but in a good way, and she had barely finished her wine when she got her first invitation to dance. When she stood up, she realized that the wine was having more of an effect on her than she anticipated, perhaps thanks to Billy's big bong. The guy was only marginally cute, but he danced well and it felt great to move and swing around. \n\nThe next guy to ask was certainly the dangerous type, but smelled too bad to even consider. When the third guy asked, she felt like Goldilocks - he was just right. Tall and strong looking, but scrubbed up and smelling okay, and no cigarette breath. She wondered if she had dope breath. If he was a good dancer, she decided, he was in for a very interesting night in Texas.\n\n*******\n\nCandy began cleaning up the stuff in the kitchen and shooed me and Orinda into the bedroom. I wanted to leave the light on the nightstand on so I could take in the visual delights when Orinda undressed, and I was not disappointed. In fact, John Henry was soon in attendance, too. But I had a protocol to run, and results to analyze. My subject was so visually arresting that I had trouble with distraction, but I doggedly gathered the data with tender loving care. \n\nEvery square millimeter of Orinda's body was an erogenous zone. No matter what I did or where I did it, it got her motor running, and dripping sweet lubricating oil. It wasn't just a Suzie connection; it was like a hardwired brain jack: a wonderful, nuanced, sensitive channel through which I felt her, knew her, and loved her. Making her come was child's play, making her have a long rolling series of orgasms was the real goal. When I achieved it, I felt them too. \n\nDespite her ecstasy, she wanted something more - penetration - and lots of it. I suddenly recognized the similarity to the smug signal that Suzanne sent that first time in my dorm room when I just let loose and took her, pounded her, and satisfied her, and myself, like never before. We were all animals; we just needed to find out what kind of animal we really were. I thought I was reading her signals, but everything was so tied in together that maybe I was just reading my own desires, because just like with Candy, I was suddenly moved to flip her over on all fours and do the dirty doggie with her. \n\nI pounded and penetrated, I pushed up on my legs so I could get just the right angle, and when I found it. I drove it home. She gripped the bedpost and pushed back against me, and suddenly a Suzie spike passed right through my brain, and I came like short circuit blowing a breaker, and she came at exactly the same time. I suddenly understood how a male Praying Mantis may have found the sex to be worth dying for. I knew that time could stop and peace could be at hand. \n\nI am not sure how long I was out, but when I awoke, both girls were urging me out of bed, and I crawled onto the floor and panted while they changed the sheets again, using the newly laundered ones that were slightly warm in spots and still smelled like a dryer sheet. I got back up on the bed, and they crawled to either side of me, putting their heads on my chest like the perfect mind readers they were. They occasionally circled one of my nipples with a finger, threw a leg across mine, and giggled. It was music to my ears, and salve to my soul. \n\nI emerged from Candy's apartment tired but very happy, and started to head back to the dorm. I went south to 26th then east and then turned south on Speedway. Orinda was going to stay at Candy's for a while, so I was headed back to the dorm alone. I needed fluids, breakfast, and sleep, in that order, and the dining hall was already open and serving breakfast. \n\nFor extra credit, I could run the 5 mile plan that Saskia had sent, and record everything in my food and exercise diary. While I walked, I went over my plans for the day. Suzanne, Nora and Lara would all arrive sometime today, and dinner tonight was set up for Suzanne and I to visit Strelsa and G\u00fcnter, for the next phase of our little adventure in sexual permutations: tonight's plan was that I get to make it with both girls while G\u00fcnter watched. Tomorrow, classes would begin.\n\nI turned the sound on my phone back on, and noticed a text had come in earlier from Nora. Her flight could not land because of weather; she would end up flying into Austin tomorrow morning. Then the little low to high toned sound that signaled an incoming text from someone on my 'VIP' list sounded. \n\nIt was from Suzanne. \"DCA to DFW flight cancel resked tmw morn no AUS 2nite. Go ahead to dinner and you 2 guys give Strelsa all your best. I won't be there to watch, but she will tell me all about it tomorrow. :) Love, S.\" \n\nUh-oh. Not only was I not getting both girls tonight, but my time to adjust to the idea of watching G\u00fcnter have Suzanne from inches away had just decreased precipitously, and if I went ahead and did Strelsa with him tonight, I could hardly object to that happening to Suzanne on the next Sunday. Was I the one who wanted some wilder college days? Careful what you wish for. \n\nThen a text from Lara came in. \"Drive back delayed by storms in Dallas, will leave early morning, see you tomorrow. Love, L.\" \n\nNot much I could do about all that, so eat, then sleep, and only after that would I think some more. When I got to the dorm, the single breakfast line was sparsely attended, as most residents would arrive later this afternoon in time for classes tomorrow. \n\nMy Suzie receiver must have been working overtime lately, as I had sugar cravings worse than ever. I downed a big meal of eggs Florentine, sausage, potatoes, biscuits, but only logged two of the four pastries I had, and none of the sugar envelopes. I was going to lay in an emergency stock of those little bite size Snickers, too, also off the books. No use in Saskia asking any more questions I shouldn't answer. \n\nI checked the alarm to make sure I would wake up for lunch, and was then out like a light. I slept right through my alarm, and my good intentions to take a run. I did wake up in time to shower and change for an early dinner line snack before the walk to Strelsa and G\u00fcnter's place. \n\nWhile I was in the shower, a text came in from Strelsa: \"G\u00fcnter can't get back from his recruiting trip until tomorrow, so let's do dinner next Sunday instead.\"\n\nWhat was that old saying about the best laid plans? It looks like this wild college day was almost over, and tomorrow began with a 7:00 AM conditioning class with Saskia, and then back to regular classes and slogging through densely written textbooks. But it was currently well before 10 PM on a day with no classes, so I had dating homework to do: tune up that Suzie receiver and go downstairs and get some phone numbers. \n\nI wonder how many brand spanking (hopefully) new spring semester coeds are moving into the dorm today. Maybe I better go help tote some foot lockers and snoop some Suzies. Duty calls!"
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "doper",
        "fraternity",
        "tranny",
        "sorority",
        "heteronormative",
        "spring rush",
        "opium",
        "fellatrix",
        "golden shower"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-27"
}