{
    "title": "Mary and Alvin Ch. 28",
    "pages": [
        "The Flower Moon \n\nMary had a few more calls she planned to make, but when she checked the clock, she saw that it was almost time to go meet the girls. \n\n\"Kelly,\" she asked, spinning around in her desk chair, \"Do you think you could call and see where we are at with Terri's loan application? I am supposed to ride home with the girls and I need to get going.\"\n\n\"Sure,\" Kelly replied, \"What about the thing with Breanna?\"\n\n\"That can wait until Monday.\"\n\nMary had not expected that she would be able to hire a full time assistant for at least five years after she opened Winslow Business Consulting in the little office above the Post Office. But she had done well enough that after only three years, she had been able to offer a position to Kelly Martin. Kelly had been her first friend in Maine, but more than that, while working together at the bank, Mary had come to admire her sharp mind, her work ethic, and most of all, her people skills. It had not been easy to convince her to leave a good, reliable job to join in a risky new venture, but when the economy took a downturn and the layoffs began, Kelly decided to take a chance. It had turned out to be a great decision for both of them.\n\nMary put on her sweater and draped her bag over her shoulder. \n\n\"See you tomorrow,\" she said as she left the office.\n\n\"Looking forward to it,\" Kelly said with a broad smile.\n\nMary went down the stairs and fetched her bike from it's hiding place behind the rhododendrons that lined the side of the building. It was a beautiful spring day. She hoped the weather would hold for the weekend. She climbed on the bike and peddled hard on the uphill slope of Main Street, turning into the school driveway just as the dismissal bell rang. Within seconds, children began pouring through the doors. She slowed, hopped down off her bike and walked it over to the rack near the playground. As she watched the children boarding the bus or bustling toward their parent's waiting cars, she thought back to another time when she had watched the children leaving school, after she had lost her first pregnancy. That seemed so long ago.\n\nThe stream of children was beginning to taper when Hannah and Bonita came through the doors. They still did nearly everything together, but they were beginning to develop into more distinct individuals, in appearance and personality. Mary wondered when Bonita had gotten several inches taller than Hannah.\n\nThe girls spotted Mary and ran to her. She squatted down and gave them each a hug and a kiss.\n\n\"How was school today, babies?\" she asked.\n\nBonita just shrugged, but Hannah launched into a long description of the day's lessons. Mary helped them each don their helmets while her daughter explained to her how fractions work.\n\nAs they mounted their bikes, Bonita asked \"Can we go to Dairy Queen?\"\n\n\"No, honey, we need to get home. And besides, that place has only been open a month and you've been there, what? Ten times?\"\n\n\"Because we like it!\" Hannah said.\n\n\"If we ride our bikes on Monday, maybe. But tonight, you and me and Papa are going out for supper, so no ice cream.\"\n\n\"Can Nita come with us?\"\n\n\"Not this time, sweetie.\"\n\n\"Good,\" Nita said, \"I want to play with Moosie.\"\n\nThey started to peddle across the parking lot. Mary smiled \"You guys like your puppies?\"\n\n\"I love Buster!\" Hannah said.\n\n\"But I miss Fang,\" Bonita pouted.\n\n\"Well, honey, Fang was an old dog even when he first came to live with us.\"\n\n\"Mama Jen said Fang and Angus were chasing each other over the Rainbow Bridge, but I don't believe her.\"\n\n\"Oh? Why not?\"\n\n\"Angus was too fat to chase Fang.\"\n\nMary was happy that the girls loved their new basset hound puppies so much, but she had been annoyed that Alvin had gotten them without consulting her, or Jen and Danni, for that matter. Still, if after all this time, her biggest complaint about him was his tendency to surprise people with gifts and favors, she supposed she had it pretty good.\n\nThey rode down the hill toward town, then turned on to Grove Street. When they reached the cemetery, both girls began to peddle furiously, eager to get past it as quickly as possible. Mary thought of Bonnie as she passed by the rusting iron gate. I couldn't train him either, honey, she thought with a wry smile.\n\nThe pavement ended and the road took a downward curve through a small stand of woods.\n\n\"Keep to the side, girls,\" Mary called. She liked biking with the girls down the back roads. There was seldom much traffic, but she still worried. It's funny, she thought, but until I became a mother I didn't really understand the concept of worrying.\n\nMeadows lined the road, displaying the first blooms of lupine. In a few weeks, they would be awash in pink and magenta. There was a new house going up near the corner of Puddledock Road. The girls waved and smiled at the workmen, who waved back, but Mary felt a flash of resentment. I think I am turning into one of those old time Mainers who hates any change, she thought.\n\nThe girls reached the stop sign at Puddledock Corners and waited for Mary to pull even with them. When she gave the go ahead, they turned toward home. A flock of turkeys were milling in the road. They scattered as the bikes approached, but one ran down the center of the road and Bonita nearly collided with it. The turkey flapped its wings and awkwardly flew a dozen yards into the meadow. Hannah and Bonita laughed at the sight of it.\n\n\"Until I moved here, I didn't know turkeys could fly,\" Mary told them.\n\n\"Well, they aren't very good at it,\" Bonita said.\n\n\"They don't like to fly because it's embarrassing,\" Hannah added, starting both girls laughing.\n\nWhen they reached the old Perkins farm they saw Yusef's wife, Jamilla, hanging clothes on a line in the yard. She waved at them as they approached.\n\n\"Girls! Come!\" she called.\n\nBonita and Hannah rode to her and Mary followed.\n\n\"Were you good in school today? Did you study well your lessons?\"\n\nThey assured her that they had been very good. She looked up at Mary, who smiled and nodded.\n\n\"Well then, please wait right here.\" She disappeared into her apartment in the old stable and came back a minute later with three small dark nuggets wrapped in paper.\n\n\"Good students get rewards. I just made halwa this morning.\"\n\nShe handed out the treats. \"Say thank you, babies,\" Mary said. She bit into the sweet confection. It tasted of sugar and nutmeg and cardamom.\n\n\"Oh. So good, Jamilla, thank you.\"\n\n\"You are welcome. And thank you for inviting us to your celebration tomorrow.\"\n\n\"Well, we are very pleased to have you,\" Mary replied. She turned to the girls. \"Alright, babies, let's get going. Papa is waiting for us.\"\n\n***\n\nAlvin and Yusef sat on the porch steps, drinking lemonade. They had just finished stacking firewood for the next day's bonfire.\n\n\"I have received a letter from my brother in Somalia,\" Yusef said.\n\n\"Well, that's good,\" Alvin replied, \"I know you been worried.\"\n\n\"Yes, but he says conditions have improved. He shrugged. \"But they have before and peace did not last.\"\n\n\"Any word on whether or not they can get out?\"\n\n\"Perhaps someday, not now.\" He looked around the farm. \"Alvin, I look and I see these fields and all the trees. I think there are more trees on this one farm than in all of Somalia.\"\n\nHe chuckled and shook his head. \"I hope, my friend, that you know what a lucky man you are, that you know how much treasure you possess.\"\n\nAlvin considered Yusef's words. \"I didn't always think so. My Dad died young and that pretty much dashed my dreams. Then my wife died, and I was brought pretty low. But I had my girls and they kept me going. Then I met Mary, and Hannah come along, and my babies had their own babies...\"\n\n\"And you understood, you are one of the luckiest men alive.\"\n\n\"Yeah,\" Alvin chuckled, \"but that's what Lou Gehrig said, too.\"\n\n\"And who is this Mister Gehrig?\"\n\n\"Gotta teach you about baseball, Yusef,\" Alvin laughed.\n\n\"No, no, no,\" Yusef shook his head, \"I can not make sense of it. Football for me.\" He poked his finger into Alvin's shoulder. \"Round football.\"\n\n\"Here comes some of my treasure now.\" Alvin watched as Hannah came furiously peddling up the driveway. By the time Mary and Bonita turned in, she had already reached the dooryard. She skidded to a stop, kicking up gravel, dropped her bike and ran toward the house. Alvin raised his hands to welcome her, but she bounded up the steps and rushed past him into the house.\n\nAlvin looked at Yusef and shrugged, then stood as Mary got off her bike and leaned it against the porch. \n\nBonita waved. \"Hi Papa! Hi Mr. Yusef!\" She made one big circle around the yard then headed down the lane to her house.\n\nHannah came back out on to the porch, carrying Buster in her arms. His back feet dangled close to the deck. She put him down and sat next to him.\n\n\"I've been demoted,\" Alvin said to Mary, leaning over and kissing her cheek.\n\n\"The puppies were your idea, big boy,\" she laughed. She greeted Yusef, then told Hannah to put her bike away. Hannah gave out a theatrical sigh, then went to the bike and walked it into the garage, Buster dancing at her feet.\n\nMary sat down next to Alvin. \"All packed and ready?\" she asked.\n\n\"Packed and loaded in my car,\" he replied.\n\nHannah came back from the barn. \"Baby, take Buster down to Nita's house, then come right back,\" Alvin told her, \"He will stay with them while we are gone.\"\n\n\"Why?\"\n\n\"Because we will be away all night.\"\n\nHannah's eyes grew wide. \"All night? Where will we sleep?\"\n\n\"In a hotel.\"\n\n\"Like in movies?\"\n\n\"Just like that.\"\n\n\"Buster can come. He can sleep with me and he won't cause any trouble.\"\n\n\"No, honey, no dogs are allowed in hotels.\"\n\n\"That's not fair.\"\n\n\"But it is fair,\" he explained, \"The state of Maine does not allow tourists to sleep in dog houses, so it evens out.\"\n\nHannah squinted at him as if she was pondering his statement. He stood and gestured to her, \"Come on, I'll go with you.\" He handed his lemonade to Mary and kissed her cheek. \"Be right back.\"\n\nThey began down the path to the new house by the pond. Buster ran ahead, exploring the edges of the fields, sniffing at the ground. Hannah ran forward as well, and Alvin watched the two of the them, the happy little girl and her new puppy, scamper down the path. He sauntered behind them and thought about what Yusef had said. He could not imagine living in a poor, war torn land, having to fear every day for the lives of his family. He had known sorrow in his life, but it all seemed so long ago.He had made a joke, but he knew that Yusef was right. He was a lucky man, indeed.\n\n***\n\nMary and Hannah walked into the lobby of the Bar Harbor Inn while Alvin parked the car. \n\n\"This is a fancy place,\" Hannah said, looking around.\n\n\"It is a fancy place,\" Mary agreed. \"Papa and I came here a long time ago.\"\n\nWhile Mary checked in, Hannah wandered over to the doorway to the restaurant. She looked inside, then turned to her mother. \"Mama, do they sell mac and cheese?\"\n\n\"I don't know, dear,\" Mary answered as she signed for the room.\n\n\"We certainly do,\" the desk clerk said, smiling down at Hannah.\n\n\"Okay, I want that.\" Alvin came into the lobby. \"Papa, I'm going to eat mac and cheese for supper!\" she called across the room.\n\n\"Well, alright then,\" Alvin said. \"You can order whatever you want.\"\n\nThey went up to their room to drop off their luggage.\n\n\"Wow! This really is a fancy place,\" Hannah exclaimed, looking around the room. \"But where will I sleep?\"\n\n\"They are going to bring up a rollaway bed,\" Mary told her. \"Now, go wash your face and hands and we will go downstairs and you can get your mac and cheese.\"\n\nThe sun had nearly set when they were shown to their table. Its last light rippled across the water of Frenchman's Bay and gave a soft glow to the trees on the opposite shore.\n\nHannah picked up the menu and began to read it.\n\n\"I thought you knew what you wanted,\" Alvin said.\n\n\"I do. But I like to read.\"\n\nMary nodded. \"She really does, you know,\" she told Alvin. \"She'll sit and read all day if we let her.\"\n\n\"Is that bad?\" Hannah asked with a frown.\n\n\"Not even a little bit,\" Alvin told her. \"Charlotte was like that. If I was wondering where the girls were, I'd have to hunt the woods and fields for Jennifer, but Charlotte, nine times out of ten, was in her room reading a book.\"\n\n\"Maybe we will have another writer in the family,\" Mary said.\n\n\"Well, Miss Mary, you and me, we made something special, one way or another.\" He stared into Mary's eyes. She looked back at him tenderly and reached her hand across the table. Alvin took it and gently squeezed.\n\n\"You guys are weird,\" Hannah sighed.\n\nThe waitress brought their food. Hannah got her macaroni and cheese, while Alvin had prime rib and Mary, grilled salmon. \n\n\"Why do you think we are weird?\" Mary asked Hannah as they began to eat.\n\nHannah shrugged. \"You do that staring at each other thing, and you kiss each other, like all the time.\"\n\n\"We're in love,\" Alvin told her.\n\nHannah pondered for a minute, taking a few bites of her food. \"How do you know when you are in love?\" she asked.\n\n\"You just know,\" Mary said, \"You just, at a certain point, realize it.\"\n\n\"At the same time?\"\n\n\"No, not usually.\"\n\n\"So, who was in love first?\"\n\n\"I was,\" Mary told her.\n\n\"I don't think so,\" Alvin said, shaking his head, \"I think for me, it was love at first sight.\"\n\nMary laughed, \"It was something at first sight, but I am not sure it was love.\"\n\nAlvin laughed, but looked sheepishly at Hannah.\n\n\"Oh please,\" she rolled her eyes, \"I know what you're talking about.\"\n\nMary stroked her daughter's head. \"You know, when I was in college, my friends and I made a list. It was supposed to just be for fun. It was a list of how to know when you had met the right person for you. And in the end, we realized that if it's right, you'll just know.\"\n\nThey finished their supper and got up to return to their room. As they entered the lobby, Hannah was walking ahead of her parents. Alvin stopped and called out, \"Hey, Hannah. Look.\"\n\nHannah turned to face him. He wrapped his arm around Mary's waist, pulled her against him and planted a kiss on her lips.\n\nHannah rolled her eyes and walked to the elevator, shaking her head. \n\n\"Oh, you embarrassed her,\" Mary said, trying to stifle a laugh.\n\n\"I told you you guys were weird,\" Hannah muttered as they rode the elevator.\n\nThe rollaway bed had been delivered to their room, and sat in the corner, still folded up. Alvin kicked off his shoes and flopped on the big double bed, leaning against the headboard.\n\n\"Is that my bed?\" Hannah asked.\n\n\"Yeah, I'll set it up in a little while,\" Alvin said.\n\n\"Okay,\" she climbed on to the bed and sat beside him. He picked up the remote control and turned on the television. He clicked through a few channels, then handed the remote to Hannah. \n\n\"Here, see if you can find something good,\" he told her.\n\nMary came out of the bathroom in her pajamas and robe. She sat on the bed next to Hannah and draped her arm over her shoulder. Hannah stopped clicking when she came upon a nature show about wild elephants. The three of them watched it for a little while, then Mary said, \"Remember when you had to take Mr. Heffalump with you everywhere you went?\"\u2028\n\n\"Yeah,\" Hannah nodded. \"But that was a baby thing.\" After a moment she added, \"I still love him, though.\"\n\nAlvin laughed and looked at Mary. \"You know, that's what she's going to say about us one day.\"\n\nHannah sighed and shook her head.\n\nMary picked up the room phone. She nudged Hannah. \"You know what I want? I want a strawberry milkshake.\"\n\n\"Where are you going to get a milkshake?\" Hannah asked.\n\n\"From room service.\"\n\n\"What's that?\"\n\n\"Oh, my dear child, you have so much to learn. Alvin, you want one?\"\n\n\"Chocolate,\" he replied.\n\n\"And for you, baby?\"\n\n\"Pistachio!\"\n\n\"I don't know if they have pistachio. Let's see.\"\n\nShe dialed room service and ordered. To her surprise, they did have pistachio. Hannah looked at her, wide eyed, as she hung up the phone.\n\n\"Now what?\" she asked her mother.\n\n\"Now we wait for them to bring it to us.\"\n\nTen minutes later, there was a knock on the door. Alvin got up and answered it, returning with their milkshakes.\n\n\"I like hotels,\" Hannah said as she sipped her shake. The elephants had been replaced by a talk show, so she changed channels again, until she stopped on a scene of teenagers in a classroom.\n\n\"What's this show?\" she asked. \"How come it's black and white.\"\n\n\"Because it's old,\" Alvin told her.\n\nMary watched for a minute. \"Oh, I saw this, years ago. It's called Up The Down Staircase. It's about a young woman who teaches at a big city high school.\"\n\n\"Okay, I want to watch it,\" Hannah said.\n\nAfter a little while, Alvin fell asleep. Mary fought off drowsiness, but managed to stay awake. Hannah, however, watched the movie with rapt attention. When it ended, she turned off the television and nudged her mother. \"Mama, Papa didn't make my bed. Can I sleep with you guys?\"\n\n\"Sure, baby. Go get into your jammies.\" \n\nWhen Hannah returned, Mary shook Alvin awake. \"Honey, go get ready for bed.\"\n\n\"Oh, alright.\" He got up and stumbled to the bathroom. When he returned in his pajamas,Mary and Hannah were already under the covers. Hannah was fast asleep.\n\n\"How does she just conk out like that?\" Alvin whispered.\n\nMary shrugged. \"And why didn't she do it when she was younger,\" she grinned.\n\n\"Yep, she kept us awake many a night.\" He reached his arm across his daughter and took Mary's hand. \"But wasn't it all worth it?\"\n\n\"Yes, it was, my love.\" She nestled Hannah in her arms, and Alvin draped his over her, and together they fell asleep.\n\n***\n\n\"Papa, it's still dark out,\" Hannah whined when Alvin woke her.\n\n\"I know, sweetie, but we don't want to be late.\"\n\nShe rolled over and pulled the blanket up over her head. Alvin sat down on the edge of the bed and began to slowly inch the covers down.\n\n\"You can't hide from me,\" he said, poking at her exposed shoulder with his finger. \"You can't hide from your Papa.\"\n\nHannah giggled and rolled on the back. \"But it's too early to get up.\"\n\n\"Come on, get up. I'll get you a cup of coffee.\"\n\n\"I don't drink coffee!\"\n\n\"Do you eat chocolate chip pancakes?\"\n\n\"I love them! Will you make me some?\"\n\n\"No, But I will buy you some. But we have somewhere to go first. To a special place.\"\n\n\"Can we get pancakes first?\"\n\n\"Nope, the restaurant is not open yet.\"\n\nHannah kicked at her covers. \"Why not?\"\n\nAlvin laughed. \"Because it's too early to get up.\"\n\nMary came out of the bathroom. \"Come on,Hannah, get up and get dressed.\"\n\nHannah slid off the bed. \n\n\"Dress warm, baby, I packed your red sweater, put that on.\"\n\nHannah gathered her clothes and went into the bathroom.\n\n\"How do you do that?\" Alvin asked. \"You tell her to do something, and she just does it.\"\n\n\"I give her this look,\" she said. She pushed her glasses down her nose and glared at him over the rim. \"Works every time.\"\n\n\"I think that would work with me, too.\"\n\nMary draped her arms over his shoulders and kissed his forehead. \"But I like when you are bad,\" she whispered.\n\nAlvin ran his hand up the back of her thigh and squeezed her ass. \"We can be bad together tonight after the party.\"\n\n\"Oh, love, I am counting on it.\"\n\nThey packed their bags and were ready to go by the time Hannah came out of the bathroom.\n\n\"You know it took your sisters until they were almost teenagers to start hogging all the bathroom time,\" Alvin told her.\n\nThere was a continental breakfast set up in the hotel's lobby. Mary got coffees for herself and Alvin and a juice box for Hannah while Alvin brought the car to the front door.\n\n\"Mama, they got doughnuts,\" Hannah said.\n\n\"Yes, but didn't Papa promise you pancakes?\"\n\n\"Uh huh. With chocolate chips.\"",
        "\"Well, shouldn't you wait for that?\"\n\n\"Okay, but he better not be tricking me.\"\n\n\"Sweetie, your Papa might tease you, but when he promises you something, he means it.\" She squatted down to look at her daughter face to face.\n\n\"You know what? One time Papa and I stayed in this hotel, and on that day he made me a promise. The best promise ever. Do you know what it was?\"\n\nHannah shook her head.\n\nMary put her hand on her daughter's cheek. \"Baby, he promised me you.\"\n\nShe saw the flash of headlights from the doorway, stood up and handed Hannah her juice. \"Your Papa keeps his promises,\" she said as they crossed the lobby.\n\nThere was a little nip in the air, and swirls of ground fog spread before them as they made the drive up Cadillac Mountain. When they reached the summit, though, the sky was clear, and the landscape still lit by the last light of the setting moon, hanging just over the western tree line.\n\n\"The Wabanaki called May the Flower Moon,\" Alvin said.\n\n\"Well, that certainly makes sense,\" Mary nodded as she helped Hannah out of the car. Alvin took a blanket and his big flashlight from the trunk. He came around to the side and took Hannah's right hand, while Mary held her left. Together the three of them stepped over the curb and on to the granite face of the mountain. There were only a few cars in the lot, but they could hear the soft murmur of voices here and there in the dark.\n\nAlvin shone his light on the ground in front of them and they carefully walked out on the gentle slope. Finding a flat, smooth spot, Alvin took the blanket from under his arm and laid it out on the ground. He sat down and pulled Hannah into his lap. Mary sat next to him and wrapped her arm around his back. When he turned off the flashlight, they could see a soft glow on the horizon.\n\n\"Now what?\" Hannah asked.\n\n\"Now we wait for the sun to come up,\" Alvin told her.\n\nMary took her hand. \"Honey, this is where your Papa asked me to marry him.\"\n\n\"Well, over that way a bit,\" Alvin said.\n\n\"Hard to tell, it was light out then,\" Mary said. \"Anyway, we came up here and this is where he proposed.\"\n\n\"What did you say?\"\n\n\"I said, yes, of course, silly.\"\n\n\"And then you got married and I was born.\"\n\n\"Well, something like that. So, after he asked me, the next morning we came up here and watched the sun come up. And I told myself that someday we would have a wonderful child and we would bring them up here and we would all watch it together.\"\n\n\"Okay. Is it soon?\"\n\n\"If you look close,\" Alvin told her, \"it's already started. See how those clouds are turning pink? They didn't look like that a few minutes ago, did they?\"\n\n\"They're pretty,\" Hannah said.\n\n\"My life is jammed full of pretty,\" Alvin said, kissing the back of her head.\n\nMary snuggled closer and rested her head on Alvin's shoulder. The sun slowly rose and streaks of rose and magenta decorated the clouds. The fog melted away from the surface of the ocean, and light glistened off the water. For a moment, Mary felt a flush of melancholy, thinking of the scene at the end of Rachel's book, when the princess stood and looked out across the sea, longing for her lost love.\n\nShe looked at Alvin, reached up and ran her fingers through his hair.\n\n\"If I ever lose you,\" she said softly, \"I will come and find you here.\"\n\nAlvin gazed at her with a puzzled expression. \"I an't going anywhere without you,\" he said.\n\n\"I'm getting hungry,\" Hannah interrupted.\n\nAlvin hugged her tightly. \"We will watch until the sun is all the way above the water, alright? Then we will get you your pancakes.\"\n\n\"With chocolate chips.\"\n\nHe kissed her forehead. \"With chocolate chips.\"\n\nThe sun slowly rose and illuminated the silver water and the dark green islands. When Alvin felt it's warmth on his face he decided that Hannah had been patient enough.\n\n\"You ready to go get breakfast, sweetheart?\" he asked Mary.\n\nShe nodded and stood up. Alvin lifted Hannah off his lap and began to get up, but faltered.\n\n\"Are you okay, love?\" Mary asked.\n\n\"Just a little stiff,\" he said, rising to his feet. \"Don't be concerned.\"\n\n\"It's my job to be concerned.\"\n\nAlvin took Hannah's hand as they walked back to the car.\n\n\"I wonder if Walter and his wife were here last year,\" Hannah said.\n\n\"Who's Walter?\" Hannah asked.\n\n\"A nice man we met the first time we came here,\" Alvin told her.\n\nThey got back in the car and drove down the mountain road. When they reached the turnoff for Bubble Pond, Alvin slowed the car. \"You got anything you want to tell me, I can pull off here?\"\n\nMary laughed. \"No, I think we are all good.You've kept your promises so far.\"\n\n\"Well, I have one to fulfill to the lady in the back seat,\" he said. He drove back to Bar Harbor, to Jordan's restaurant, where he bought his daughter a big stack of chocolate chip pancakes. \n\n***\n\nMary and Hannah were both sound asleep when Alvin turned into the driveway. He smiled when he saw the blue Honda with Pennsylvania plates parked in the dooryard.\n\nMary sat up and stretched. She looked around. \"I thought Robby and Carm and my Mom might be here by now,\" she said. She took her phone from her purse and checked her messages. \"Oh, their connector was delayed in Memphis. They'll be landing in Portland in about an hour.\"\n\n\"So, they'll be here this afternoon.\" Alvin said as he parked near the porch. He got out and deftly lifted Hannah from the back seat without waking her. Mary ran ahead of him and opened the door. He carried Hannah inside and upstairs to her bed. When he came down, he saw Charlotte and Seth walking up the lane from the new house. He stepped out on to the porch.\n\nCharlotte was carrying her baby in her arms. \"Your namesake has come to see you,\" she said.\n\nAlvin came down the steps and took the baby. \"Hey, Lil' Alvin, how are you, chummie? Ain't seen you since Christmas.\"\n\n\"Yeah, I'm sorry about that, Daddy,\" Charlotte said, kicking at the ground. \"It's just that we are both wicked busy.\"\n\n\"I understand,\" Alvin shrugged, \"And roads run both ways.\" He put his hand on her shoulder and kissed her.\n\nThey went into the house. Mary had flopped down on the couch and gone back to sleep. Alvin sat in the rocking chair, bouncing the baby on his knee. Seth sat in the recliner while Charlotte squeezed on to the end of the couch, lifting Mary's feet into her lap.\n\nMary stirred and stretched.\n\n\"He wear you out last night?\" Charlotte asked her with a sly smile.\n\n\"No, he got me up before dawn to watch the sun rise,\" Mary replied, yawning.\n\n\"Well, join the club. Alvin 2.0 over there doesn't think I should ever sleep.\"\n\n\"Believe me, I know what that's like.\" Mary sat up and put on her glasses. \"What do you think?\" she asked Charlotte.\n\n\"They look great on you. You aren't self conscious about them, are you?\"\n\n\"Only a little bit,\" she shrugged. She stood up and started toward the kitchen. \"I need coffee, who wants some?\"\n\nThey spent the remainder of the morning chatting and catching up. Hannah came downstairs, with Buster close behind. Alvin handed the baby to her. She sat down on the floor and carefully held him in her lap. Little Alvin laughed and cooed at the puppy.\n\n\"Now you have a niece and a nephew,\" Mary told Hannah.\n\n\"I know, and I am very good being an aunt.\"\n\n\"Meaning she likes to boss Bonita around,\" Alvin told Charlotte with a wink.\n\n\"I do not. But I am older than her, so I can.\"\n\n\"You are three weeks older.\"\n\n\"That's still older,\" she said, and turned her back on him to concentrate on playing with the baby.\n\nJennifer and Bonita joined them for lunch. Bonita was carrying Moosie, who squirmed out of her arms and began scampering underfoot with Buster. They gathered around the kitchen table, eating sandwiches and potato chips and dilly beans. With the arrival of the baby, Charlotte and Seth had decided that they wanted to buy a house. \n\n\"Kids should have yards to play in,\" Seth said. \"That's my personal and professional opinion.\"\n\nAlvin nodded in agreement. \"Comes the time, we'll be down to help you move. Hell, if you don't find a house you like, Jen and Danni can come down and throw one up for you.\"\n\nJennifer laughed and agreed, but Charlotte shook her head. \"I want an old house. Like this one. Well, without the friggin' barn attached.\"\n\nA car horn tooted from the driveway and Alvin looked out to see Audrey pulling up in her van.\n\n\"Here's Audrey to set up,\" he called, and everyone went outside to help. As they began unloading tables and folding chairs from the van, another vehicle turned in from the road. \n\nMary shielded her eyes from the sun. \"It's my Mom,\" she said.\n\n\"Grandma Jean!\" Hannah cried and ran toward the car.\n\n\"I can't get over how she loves her grandma so much, when she only sees her a few times a year,\" Alvin said. He remembered his promise to Jean, that despite the distances between them, he would ensure she had a relationship with her grandchild.\n\nMary laughed. \"Sweetie, they skype at least three times a week.\"\n\nWell, that makes thing easy, he thought. He went back to unloading the car, while Mary greeted her mother, Robby and Carmella.\n\nWhen all the tables and chairs had been unloaded, Audrey climbed back in the van to drive back to the diner to pick up the food. Alvin picked up a stack of chairs, but was stopped by a hand on his shoulder. \n\n\"Let me have those,\" Seth said to him.\n\n\"That's alright, I've got them.\"\n\n\"No, Alvin, you're one of the guests of honor. Let us do the work.\"\n\nReluctantly, Alvin handed him the chairs. Jennifer walked past him, carrying a stack of her own. \"Go inside and visit, Daddy, we've got it.\" Robby and Carmella each took the end of one of the tables and followed her down to the grove. Alvin watched them for a moment, then shrugged and went into the house.\n\nMary sat at the kitchen table with her mother and Charlotte. Jean was holding baby Alvin. Hannah and Bonita were sitting on the living room floor, watching TV, while their puppies slept on the couch.\n\n\"What are you watching, girls?\" he asked.\n\n\"Dora the Explorer,\" Hannah told him.\n\n\"Jeezum crow, ain't that kid already explored every place? That was Jen and Charlotte's favorite when they were your age.\"\n\n\"I think it's repeats,\" Hannah said.\n\n\"New for us,\" Bonita added.\n\nAlvin stepped into the kitchen.\n\n\"Come sit with us,\" Mary beckoned him, \"Have some ice tea.\"\n\nHe sat and poured himself a glass from the pitcher.\n\n\"You get everything set up already?\" Mary asked.\n\n\"Nope,\" he shrugged, \"I got told to go away. Guess they think I'm getting old.\"\n\n\"No, Daddy,\" Charlotte said, \"They want to do things for you. For chrissake, let them.\"\n\n\"You need to learn to enjoy the perks of age, Alvin,\" Jean added.\n\n\"I suppose you're right,\" he said. \"I sure do like watching the young ones grow and become who they were meant to be.\" He looked over his shoulder at Hannah and Bonita. \"Hope to stick around and see more.\"\n\nMary put her hand on his arm. \"You promised me you'd live to be an old man, honey, don't think I'm going to let you out of it.\"\n\nAlvin laughed. \"I've got no plans to depart. Just a day for looking back, I guess, and wondering what lies ahead.\"\n\n\"Well, what lies ahead right now is guests starting to arrive in about an hour, so why don't you get cleaned up and change your clothes?\"\n\n\"Yes, Miss Mary,\" he said, standing and kissing her forehead. He went up stairs, shaved and showered. When he finished he went into the bedroom to dress. Mary was standing in front of the full length mirror. She wore a knee length blue and green floral dress. Alvin stood and looked at her. How the hell did I get so lucky, he asked himself. \n\n\"You are even more beautiful than you were ten years ago,\" he said.\n\nMary turned to face him. She smiled and said, \"Wait until you see me ten years from now.\"\n\n\"I intend to.\"\n\n\"Good. You seem down. This is supposed to be a happy day, love.\"\n\n\"I am very happy. Just...reflective. I was talking to Yusef yesterday, and he asked me if I realized what a lucky man I am. That's been on my mind.\"\n\nMary sat on the edge of the bed and held out her hand to him. He took it, and sat beside her.\n\n\"He's right, I know that. And I just...sometimes I wonder if I deserve it.\"\n\n\"Oh, honey,\" she rested her head on his shoulder. \"There won't be one person at this party who wouldn't say, unequivocally, that you do.\"\n\nAlvin kissed her cheek. \"I can't imagine how I could be good enough to deserve you.\"\n\n\"Well, baby,\" she said, kissing him back, \"That's the lucky part.\"\n\nShe stood and kissed him again. \"I need to finish getting ready.\"\n\nShe stopped in the doorway and looked back at him. \"Oh, and by the way, you should expect to get very, very lucky after the party tonight.\"\n\nWhen they had both finished getting ready, Mary and Alvin went back downstairs to find the house empty.\n\n\"I guess everyone but us is already at our party,\" Alvin said.\n\n\"Well, then, let's join them.\" Mary replied, starting toward the door.\n\n\"Hold on a second.\"\n\nMary turned to face him. He reached into his shirt pocket and took out a rumbled piece of paper. He unfolded it and began to read.\n\n\"Mary, you have brought love and joy into my life in a way I would not think was possible. I promise you, I vow to you, that I will return it to you will all my might, from this moment until my dying breath. Whatever the future might bring, there will never be another day when you do not know that you are loved.\"\n\n\"That was your wedding vow.\"\n\nHe looked up at her, his eyes moist. \n\n\"I mean that now more than ever,\" he said.\n\n\"Oh, sweetheart.\" She stepped forward and wrapped her arms around him. \"And I said that it was my destiny to find you and that I would sail with you to the farthest horizon.\"\n\n\"Been a wicked good voyage so far.\"\n\nShe raised her face and they kissed, as deeply and lovingly as they had on their wedding day.\n\nHand in hand, they walked down the path to the grove. When they entered, they saw that it had been decorated with colorful paper streamers and strings of plastic lanterns. Jean and Jennifer and Carmella were helping Audrey set up trays of food on one of the tables, while Seth, Robbie, and Danni, still in her uniform, stacked wood in the fire pit. Hannah and Bonita were running and playing, their puppies at their feet, while Charlotte sat on the far side of the clearing, nursing her baby.\n\n\"Look around,\" Mary whispered to Alvin, \"This is the family you created. I think you deserve everything you've got.\"\n\nTim and Molly came into the grove just a few minutes after Mary and Alvin.\n\n\"Theo coming?\" Alvin asked.\n\n\"Sure, You didn't think he'd come with the old folks, did you?\" Tim replied. \"Soon as you gave him your old Subaru, we seen the last of him.\"\n\nTheo was not far behind, though, arriving a few minute later with his girlfriend, Olivia. As Alvin watched family and friends join the party, he reflected on Mary's words. Maybe I earned all this, he thought; hard to believe, but maybe I did.\n\nDiana and Bob came into the grove, and Andrew and Jessica. Andrew carried toddler Emily in his arms while Jessica's son Jimmy ran to join Hannah and Bonita.\n\nKelly Martin and her husband Mike arrived, and Laura with her new boyfriend, Eric. \n\n\"Didn't expect to see her with a fella again,\" Alvin muttered to Mary. \"Sure hope it works out.\"\n\nYusef and Jamilla walked into the grove and approached Mary and Alvin.\n\n\"We are so honored to be invited to your celebration,\" Yusef said. Jean was standing near by, and Mary introduced them to each other.\n\n\"It is very nice that you are here,\" Yusef told her, \"in our culture, marriage is not thought of as the joining of a man and woman, but as the coming together of two families to form one.\"\n\nMary heard a screech and turned to see Jennifer running towards the grove's opening. Rachel was coming through it, flanked by a handsome, dark complected young man carrying a large cardboard box.\n\nMary and Alvin crossed the grove to meet them. As Rachel freed herself from Jennifer's hugs, Mary saw a very confident, self assured young woman, so different from the shy girl she had first met in this same spot.\n\n\"That looks heavy,\" Alvin said to the young man, \"let me take it off your hands.\"\n\n\"I brought everyone copies of my new book,\" Rachel said with a broad smile. Mary hugged her and kissed her cheek.\n\n\"I hope I ain't still drowned in this one,\" Alvin muttered.\n\n\"Don't worry, Uncle Alvin,\" Rachel said, standing on tip toes to kiss him.\n\n\"Wow, so you're Alvin and Mary,\" the young man said, his face breaking into a grin.\n\n\"This is them,\" Rachel nodded, \"Uncle Alvin, Aunt Mary, this is my boyfriend, Carlos.\"\n\nThey shook his hand and welcomed him. \n\n\"He's a little nervous about meeting the whole family,\" Rachel said.\n\nMary laughed. \"Sweetie, I first met your family right here, including you. It was Jen and Danni's coming home party.\" She patted Carlos on the arm. \"They'll give you a little guff at first, but by the end of the night, they will consider you part of the family.\"\n\n\"That's just so as to make you feel obligated to help clean up,\" Jennifer said. She took Rachel's arm and they headed off to introduce Carlos to the rest of the family.\n\nAlvin lugged the box of books over to one of the picnic tables, while Mary made the rounds of the guests, thanking them for attending. When she reached her mother, she wrapped her arms around her and the two of them stood silently and held each other for a long moment.\n\n\"You know, sweetheart,\" Jean said, \"there was a time when I worried that you'd never be happy.\"\n\n\"I can't imagine being happier, Mom.\"\n\n\"I know, sweetie.\"\n\nThey stood, arm in arm as Tim and Bob got the bonfire started. As they watched the flames climb up the stacks of wood, Jean said, \"Something I had meant to tell you...\"\n\n\"What is it Mom?\"\n\n\"You will never guess who I saw at Whole Foods.\"\n\nMary frowned. \"Oh, I bet I can, just based on the way you brought it up.\"\n\n\"Well, it was Wyatt.\"\n\n\"I figured as much.\"\n\n\"We had a very nice conversation. Did you know he got married again?\"\n\n\"Mom, I haven't spoken to him in ten years.\"\n\n\"Very nice Asian girl. Korean, I think. Her name is Kim. Isn't that usually a Korean name?\"\n\n\"I guess so. Well, I hope he's happy. I don't have any hard feelings toward him.\"\n\n\"I thought he was a very nice boy.\"\n\nMary sighed. \"And I'm sure he still is.\"\n\nShe looked around and didn't see Alvin. She kissed her mother's head, then walked up out of the grove, and saw him. He was standing on the path, hugging a plump blonde woman. Next to them, a slight, elderly man sat in a wheelchair. As she walked toward them, the man turned and smiled at her and she recognized Stanley Pierce.\n\n\"Well, here is the beautiful bride now,\" he said in a weak, hoarse voice.\n\n\"Hello, Stanley, I'm so glad you could come.\" She was startled by how frail he looked, but she managed to hold the smile on her face.\n\nStanley tugged at the blonde woman's arm. She turned and looked down at him. \"Sandy,\" he said, \"here's Mary now.\"\n\nAs soon as their eyes met, Mary realized that the woman was Bonnie's sister.\n\n\"I am so happy to meet you,\" Mary said, extending her hand. Sandy took it and held on. \n\n\"You know,\" she said, \"My Dad told me, he said, honey, you know that Alvin had to find someone extraordinary if he was going to replace your sister.\"\n\n\"Um...thank you.\"\n\n\"Shush, Sandy, she don't want to hear that,\" Stanley croaked.\n\nAlvin pushed the wheelchair down the path and under the trees. Sandy walked beside Mary.\n\n\"Are Charlotte and Jennifer both here?\" she asked.\n\n\"They are,\" Mary told her.\n\n\"I haven't seen either of them in years.\" She shook her head, looking embarrassed. \"And now they have kids of their own...\"\n\n\"What about you?\" Mary asked.\n\n\"No,\" Sandy sighed, \"I've never found the right partner, I guess. I keep busy with work and with my cats. And now, with my Dad.\"",
        "Mary stepped aside as Charlotte and Jennifer rushed to greet their aunt and their grandfather. Most of the family had gathered around the serving table, so she beckoned to Alvin, and the two of them went to fill their plates. Audrey had laid out a buffet of cold cuts and cheese, salads and pickles, veggie dip and shrimp on ice. At the end of the table there was a large white frosted sheet cake. Across the top, bright blue piping read \"Happy 10th Anniversary, Alvin and Mary. The Best Is Yet To Come.\"\n\nMary looked around the clearing and caught Jessica's eye. She looked back at the cake then turned back to her and smiled. Jessica winked and blew her a kiss.\n\nAlvin took her plate and carried it, along with his own, over to one of the picnic tables. Mary fished two cans of Diet Coke from the ice bucket and joined him. Robbie, Carmella and her mother sat across from them.\n\n\"So, you're going sailing tomorrow?\" Jean asked Alvin.\n\n\"\"The three of us and Seth,\" he said, gesturing to Robbie and Carmella, \"and my first mate.\"\n\n\"Who's that?\" Carmella asked.\n\n\"Bonita.\"\n\n\"Really?\"\n\nAlvin nodded and swallowed his food. \"Oh yes, she's a hell of a little sailor.\"\n\nMary laughed. \"She's her grandpa's girl. Follows him around everywhere he goes.\"\n\n\"Well,\" Robbie asked, \"you are more her less her father figure, aren't you, Alvin?\"\n\n\"I suppose I am,\" he shrugged.\n\n\"Mom, Charlotte and Jen and I were talking about going down to Camden for shopping and lunch. I thought you'd like to go with us?\"\n\n\"That sounds lovely.\"\n\nTheir conversation was interrupted by a loud, sharp whistle. Charlotte was standing by the fire. She clapped her hands together twice. \"Everybody! Can I have your attention?\"\n\n\"Stand up when you're talking!\" Tim shouted.\n\n\"I am standing up, wiseguy,\" she said, \"Now shut up and let me talk.\"\n\nThere were a few chuckles, but everyone quieted down. Charlotte stared into the fire for a minute, then looked up at Alvin and Mary.\n\n\"About eleven years ago, right here in this grove, we threw a party for Jennifer and Danni coming home. But, as happy as I was to see my sisters,\" she looked over to Jennifer and Danni, \"and I call them both my sisters, I was anxious when I arrived at that party, because I had heard that my father had a new girlfriend.\"\n\nThere were a few chuckles as Charlotte continued. \"And I admit, I was, well, a little bit bitchy to her at first...\"\n\n\"Just a little bit,\" Mary said, to more laughter.\n\nCharlotte grinned. \"But when I saw how happy my Dad was, and then when I got to know her, she won my heart, as she had won his. A year later, ten years ago this week, we gathered here again, and I had the honor of singing at their wedding.\"\n\nShe walked over to the picnic table and laid her hand on Alvin's shoulder. \"Daddy,\" she said, \"I love you more than ever.\" She raised her other hand towards Mary, who took it in her own. \"Mary, I love you just as much.\"\n\nMary kissed her hand, and Alvin stood and wrapped his arms around her.\n\n\"So, somebody else say something,\" she sniffled.\n\n\"How about a toast,\" Tim said, holding up a bottle of beer, \"Here's to Mary and Alvin!\"\n\nEveryone cheered and clapped, then quieted as Danni rose.\n\n\"Can you see that I'm standing up?\" she asked Tim.\n\n\"Oh, yeah, no problem there,\" he laughed.\n\n\"Good. I just wanted to congratulate Mary and Alvin, but also, to thank them. Thank them because every day, they remind me, and I think all of us, of the power of love.\" She looked down at Jennifer. \"Anything you want to say, honey?\"\n\nJennifer shook her head. \"I'll start blubbering. Just that I love you both so much.\"\n\n\"We all do,\" Diana said, and many voices rose in agreement.\n\n\"Speech!\" Tim called, \"Alvin, speech!\"\n\nTheo joined him. \"Speech! Speech!\"\n\nAlvin looked at Mary and sighed. He stood up, stuffed his hands into his pockets and kicked the ground a few times. Mary stood up next to him and laced her arm through his.\n\nShe smiled at their guests. \"You know, every time he's asked to speak at something like this, he acts like he's going to get a tooth pulled. So I'll go first.\" \n\nShe bowed her head toward Yusef. \"Yusef said something earlier, about how a marriage is not just between the bride and groom, that it is a union of the families. I look around here this evening and I know that to be true.\"\n\n\"Alvin,\" she said, reaching to kiss his cheek, \"I love you so much, and I love you more for bringing all these wonderful people into my life.\" She made a sweeping, inclusive gesture, \"Thank you all for being here tonight, and for the past ten years.\"\n\nAfter a round of applause, Alvin looked up to see all eyes on him. \"Can I just say ditto?\" he asked. He was met with shouts of \"No!\"\n\nHe rubbed his chin for a minute. \"Well, if it's hard for me to find the right words, I think folks should understand. So, I'm going to do what Mary did. I'm going to quote our friend Yusef, who told me yesterday that I was one of the luckiest men alive.\"\n\nYusef stood and bowed, much to everyone's amusement.\n\n\"When he told me that,\" Alvin continued, \"it sort of made me feel blue. Guilty, I guess. Why should I be so lucky? But tonight, looking around here, at all of you, at my beautiful daughters, and now at a new generation of little ones, I don't feel anything but happiness.\" He turned to Mary. \"And when I look at my beautiful wife...\"\n\nHe paused for a moment and frowned. \"When I was young I went off on an adventure. It wasn't nothing like in one of Rachel's books, but it was an adventure. I was working a big luxury yacht bound for Key West. One morning I came up on deck just as the sun was breaking over the horizon. The light was on the water and the whole world seemed to glow. But then, out of nowhere, a school of flying fish broke the surface. They passed before the sun and every one of those fish, thousands of them, I'd venture, caught that light and turned into an arc of shining crystal.\"\n\nHe stood in silence for a moment. The only sound in the grove was the cracking of the fire.\n\n\"I don't know about God or the universe or any of that. But at that moment I felt a sense of wonder and awe that seemed like it took me right out of my body. I never thought I'd feel that again. But I do. I feel it every time I look at Mary.\"\n\nMary wrapped her arms around him, and they kissed, oblivious to the cheers and whistles that filled the grove.\n\nThe air grew chilly as the light faded, and everyone gathered close around the fire. Tim and Charlotte fetched their guitars and the grove filled with song and laughter. Before long, it grew too cold for the baby, and Charlotte and Seth left to take Little Alvin to their motel room in town. Soon, Jennifer gathered up Hannah and Bonita and the puppies and took them down to her house to go to bed, while Danni helped Sandy push Stanley's wheelchair back to her van. Eventually, Mary and Alvin were alone with just Mary's mother, Robbie and Carmella.\n\n\"I guess we ought to get to bed too,\" Robbie said, \"We don't want to be too tired for sailing tomorrow.\"\n\nAs they got up to go, Jean stood as well. \"Hold on, honey,\" she said, \"I'm going with you.\" She turned to Mary and Alvin. \"I'm going down to Jennifer and Danni's house as well. They've made a bed for me on the couch. You two should have your house to yourselves tonight.\"\n\n\"Oh Mom,\" Mary sighed. She stood and hugged her mother. \n\n\"That's very thoughtful, Jean,\" Alvin said. They all bid good night and then Mary and Alvin stood alone by the fire.\n\nMary leaned against Alvin and rested her head on his shoulder.\n\n\"Ten years,\" Alvin said, his voice wistful.\n\n\"It's gone by so fast,\" Mary murmured.\n\nAlvin lifted her chin and kissed her. \"Why don't you go on up to the house, while I put the fire out?\" he asked.\n\n\"Alright, love.\" She kissed him and turned away. Alvin watched her as she walked toward the opening in the trees. When she reached it, there was one brief moment when she stopped and turned back to look at him. The moonlight silhouetted her for just a few seconds, and then she was gone.\n\nBy the time Alvin tamped the fire out and walked back to the house, Mary was already in bed, waiting for him.\n\n\"Well, you didn't waste no time,\" he said as he entered the room. He unbuttoned his shirt and dropped it in the hamper.\n\n\"You smell like smoke.\"\n\nAlvin raised his t-shirt to his face and sniffed. \"Jeezum, I do.\"\n\n\"That's okay,\" Mary chuckled, \"it's a manly smell.\"\n\nShe watched him peel off the t-shirt and step out of his pants and undershorts. When he straightened up and faced her, she looked at him closely. He was a little thicker around the waist than he had been on their wedding night, and the few specks of gray in his hair had grown in number, but he was still the handsome man she fell in love with that day on his boat.\n\nShe threw the covers back, revealing her nakedness. Alvin smiled as he kneeled on the bed. He leaned down and kissed her. Mary wrapped her arms around him and pulled him down. He kissed the side of her neck and the hollow of her throat. \n\n\"I still think about our first time,\" she whispered.\n\n\"I mostly think about our next time,\" Alvin said as he lowered his face to her breasts. He kissed his way down across her belly, where only a few faints lines gave evidence of her motherhood. Mary tangled her fingers in his hair as he lowered his head between her thighs.\n\nHe kissed her mound and the inside of her thigh, then rose and shifted himself, sliding between her legs. Mary reached down and her fingertips traced the length of his rigid cock. He lowered himself and she guided him, letting out a loud sigh as he entered her.\n\n\"You can make all the noise you want tonight, honey,\" Alvin said. He moaned then, and they both laughed.\n\n\"Okay,\" Mary said. In a loud voice, she shouted, \"Fuck me!\"\n\nAlvin laughed and began to move inside her with a slow steady motion. She raised her legs and hooked them around the back of his thighs, pulling him tighter. The bed springs began to squeak as they rocked together.\n\n\"Come on, baby,\" Mary gasped, \"let's make some noise.\"\n\nAlvin began to move with more urgency. The springs squeaked louder and the headboard thumped against the wall. Mary rose to meet each thrust, grasping the back of his shoulders. He was panting, drawing in deep ragged breaths. He slowed down, but he did not stop.\n\n\"You okay, love?\" Mary panted.\n\n\"Yeah, just need to pace myself,\" he replied in short puffs of breath.\n\nThey settled into a gentle rocking rhythm. Mary laid her head back and closed her eyes. She felt an overwhelming love for Alvin, for all the good that had come into her life in their years together. It was that surge of emotion, more than any physical arousal, that brought her to orgasm. She whimpered and gasped as a warm electric sensation washed over her. \n\nThe sounds of her climax brought a sense of urgency to Alvin. He increased the tempo and force of his thrusts, and in a few moments, he felt himself drain into Mary's body in a great release of tension. He collapsed on top of her and rolled on to his side, gasping for air.\n\n\"Are you okay, baby?\" Mary asked, stroking his face.\n\n\"Yeah, I'm alright,\" he said, \"I think I do pretty good for a fifty seven year old man.\"\n\n\"You do just fine, love.\"\n\n\"I'm sorry that it takes me longer to finish than it used to.\"\n\n\"Oh sweetheart, that is not something you need to apologize for.\" \n\nShe rolled on her side and he spooned tightly behind her.\n\n\"Wait until you see how long it takes me when I'm sixty seven,\" he whispered in her ear.\n\nShe jabbed him with her elbow. \"Just make sure you're still here, mister.\"\n\nIn a few minutes Mary heard his breathing slow into it's familiar sleeping rhythm. She listened to him for a few minutes, then drifted off herself.\n\n***\n\nMary woke up when she felt Alvin leave the bed, but she rolled over, wishing to sleep a little more. She dozed lightly, but the sound of voices from downstairs kept waking her. She smelled coffee and bacon and gave up on the idea of sleeping in. She got up, put on her robe and went downstairs.\n\nHer mother and her husband stood side by side at the stove. Robbie and Carmella were sitting at the table, each reading on their phones.\n\nAlvin looked over his shoulder and smiled at her. \n\n\"We'll have french toast and bacon ready in just a minute or two,\" he said, \"Good timing on your part.\"\n\n\"Sit down, sweetie,\" her mother said, \"I'll get you some coffee.\"\n\nAs she took her coffee, Mary heard yipping from the dooryard, then pattering feet and the sound of scratching at the screen door. She looked up and saw the two puppies scurrying into the kitchen. They began exploring, no doubt searching for the source of the smell of bacon. \n\nHannah and Bonita followed their dogs.\n\n\"Good morning, babies,\" Mary said.\n\n\"Climb up, we have plenty for everyone,\" Alvin told them.\n\nHannah climbed into her grandmother's lap. Bonita pulled up a chair next to Alvin and began loading her plate.\n\nDanni came into the house, dressed in her uniform. \"You want something to eat?\" Alvin asked her. \u2028\n\n\"No thanks, I'll just grab some coffee,\" she said, but she reached over Bonita's shoulder and picked a strip of bacon from her plate. Bonita looked up and Danni kissed her forehead. \"You be good for Papa,\" she said.\n\n\"She's always good on the boat,\" Alvin said, \"She takes it damn seriously.\"\n\nDanni filled her travel mug with coffee and said her goodbyes.\n\n\"You really like sailing, huh?\" Carmella asked Bonita.\n\n\"Papa says I'm his second best first mate.\"\n\n\"Who is first?\"\n\n\"Mama Mary.\"\n\nMary laughed. \"Sweetie, you're seven years old and you already know more about sailing than I do.\"\n\n\"You sure you don't want to come with us?\" Alvin said, stroking Hannah's hair.\n\n\"Nope. Want to be with Grandma Jean.\"\n\n\"Well, alright then.\" He stretched and stood. \"I suppose we ought to get a move on. Charlotte is going to drop Seth off at the wharf.\"\n\nAlvin and Robbie cleared the dishes from the table. When they had finished gathering their gear, Alvin kissed Mary and Mary and led his little crew off for their day of sailing.\n\nHannah tugged on Mary's sleeve.\n\n\"Mama, can I go show Gramma Jean the loons?\"\n\n\"Sure,\" Mary said. She turned to her mother. \"There's a pair of loons nesting down on the beaver pond. The girls have been fascinated by them.\"\n\nHannah hopped out of her chair and began pulling at her grandmother's hand. Jean and Mary rose and the three of them stepped out on to the porch. Buster ran out under their feet and hopped down the stairs into the dooryard.\n\n\"Oh, honey, Buster should stay here,\" Mary told Hannah, \"He will scare them.\"\n\n\"Buster won't hurt them,\" Hannah pouted. \n\n\"I know that, sweetie, but they don't.\" She squatted down, patted her thigh and called to the puppy. When he trotted to her, she scooped him up, went back to the front door and set him inside.\n\nJean held Hannah's hand as they walked across the pasture toward the path through the woods. Mary stood on the porch and watched them. The lilacs were in full bloom, and she drank in their aroma. She remembered when that smell had made her melancholy and wondered when she had begun to enjoy it again. Hannah stooped and picked a handful of violets from the side of the lane, and Mary realized when the change had occurred. It had been the spring after her daughter was born.\n\nHannah gave the flowers to her grandmother. Jean leaned down and tucked one purple blossom behind her granddaughter's ear.\n\nMary stepped off the porch and followed slowly behind them. This field would be left fallow this year, given the opportunity to replenish and renew itself. A few weeks ago, it had been covered in yellow dandelions, now it was spotted with violets and white trillium. In the month ahead, the columbine would come, and the the lupines and black eyed susans. As summer reached it's full glory, there would be Queen Anne's lace and day lilies, buttercups and asters. Goldenrod would come in a burst of bright color, then slowly fade, as would the daylight itself. The leaves would change and fall, the air would grow sharp, and another hard winter would take hold. But as she watched her mother and her daughter reach the trees and turn to await her, she felt comfort in knowing that there was still summer ahead."
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/mary-and-alvin-ch-28"
}