{
    "title": "Trophy Wives School Rachelle Pt. 03",
    "pages": [
        "This is Part three and I would suggest that you read part one and two first. \n\nAs stated in Part one and two this is a slower building story than my other series. \n\nAs always all sexual acts take place between people 18 years old or older.\n\n \n\nLet me know what you think in the comments below and don't forget to rate it as well. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n\n\n\nTen\n\n\n\n\"It's time for us to move on to third base, Pet, but first I want you to show me you remember your lessons for first and second base.\"\n\nI say as I settle myself in a chair and watch as my stepsister, flushed with excitement, walked over to me and settled on the end of my knees before sliding closer to my naked body with her own. She looked in my eyes and said, \"First base is basic kissing and holy kissing.\"\n\nShe leaned forward and pressed her lips to mine, and we kissed getting more and more passionate as we went along and then she slid a little close as her tongue entered my mouth and she started moaning as her first trigger kicked in and she had a mild orgasm from our kissing. Then she pulled back, breathless. \"Which leads to second base, more kissing in more intimate places and touching each other both over and underclothes.\"\n\nShe took my hand and slid it up to her breast and moaned and kissed my neck as I did hers. After my hands were groping her perfect boobs, she took her lips off me. \"Don't forget to mark my neck and breasts again so everyone knows I'm still yours, master.\"\n\nThen she went back to her own little kisses along my neck and jaw as her own hands rubbed my rock-hard cock. She pulled her mouth off my neck and leaned back, showing me her tits. \"Please suck my tittes, Master. I loved it yesterday when you sucked them and nibbled on them and don't forget to tell me before you need to cum so I can get my mouth on you to keep us from sinning.\"\n\nShe pumps my cock with her little hand again getting faster and harder as I'm sucking on her titties, she's moaning, and I can feel the heat and moisture as her little pussy is getting wetter and ready for me to just sink my cock into her. Instead, I run my hand down to her little bald mound and rub her pussy lips and slit, spending time flicking her clit and rubbing around it, pushing her closer to another orgasm.\n\nThen I let a single finger dip into her. She froze as my finger penetrated her and then her subliminal messaging kicked in and she screamed as an organism twice as strong as she'd had earlier pushed into her from my penetration. I let my finger continue to slowly pump in and out of her through her orgasm, then I pulled my finger out only to have her whine and try to pull my hand back down to her eager hole again. \"Stop now, Pet, we've finished second base and I've started on your new lesson what did I do different today? So far.\"\n\nShe sat back and looked at me, her hand still on my cock but not pumping it. \"You put your finger inside my Pussy. It felt so wonderful Master, even better than our holy kissing.\"\n\nI smiled, knowing that my suggestions and triggers were holding and working exactly like they were supposed to. \"Yes, that's part of Third base. Third base is everything a guy and girl can do to each other except sex. So It has several parts we are going to explore today. But at its most basic it's anything but my fucking your Pussy. Anything else is third base and is a way for a couple to express how attracted they are to each other sexually without making a baby or having sex.\"\n\nRachelle is all but bouncing on my lap and clapping. \"So this is the last step before we can have sex and try to make a baby?\"\n\nI laughed at her enthusiasm and knew it would drive her mother crazy as she watched it on the monitor. \"Yes, Pet, these are the last lessons before you are ready for having sex, and making a baby.\"\n\n\"Then hurry and show me.\"\n\n\"Slow down, my little pet. There are several of these and they all have me releasing my sperm, my man juice either on your skin or in your mouth.\"\n\nShe looked at me with confusion. \"I thought it had to be in my mouth or it was sin.\"\n\n\"No pet. I said it can't fall on the ground be wasted. Most of the things in Third base are done laying down or in very close quarters. Like in the back seat or a car or someplace like that, or the guy or girl's bedroom, a hotel room, places where the couple can get comfortable together. As long as we keep my cum on your body, then we aren't sinning. For example, some girls like to have guys spray their cum on their faces and they rub it in to their face. I've been told by a couple girls in college that it helps keep their skin clear of acne. I don't think it's true, but they swore by it. Others like to rub it in their tits or belly to keep their skin nice as soft.\"\n\n\"You want me to do those things Master, rub your juice on my face and tits and belly?\"\n\n\"We will do some of that, yes, because not only does it do the things like making your skin soft, it also marks the woman as that man's. No woman lets a man cum on her and rubs it in unless she belongs to him.\n\nThat way she walks around after wards smelling like his cum. It is a way of letting other people know she belongs to some man saying nothing. It's like the marks I put on your neck in second base. They will know she belongs to her man because she will smell like his essences, his cum.\"\n\n\"Oh, then we have to do that today, Master, before supper, so Cunt can smell you on me and see what happens when you're an obedient servant. So, she will know that I've been a very good girl today.\"\n\nI looked at the sweet virgin on my lap and I pulled her to me and kiss her passionately. \"That's exactly right Pet, that's a good girl Pet, my very good girl.\"\n\nRachelle's coming and I can feel her cum flooding out of her pussy all over both of our legs. I smile, knowing Ruth is watching all this in her own room and cursing my name. \"So let me give you a quick list of what is Third Base\"\n\nI sit her at the table in the other chair to get a bit of distance from her, to allow my cock to settle down some. The little fuck toy had worked me into quite a state, and I was having trouble thinking straight. I wanted to skip third base and just sink into her creamy warm depths. But I wanted to show her everything as well.\n\n\"Third base includes all these things.\" I list off fingering and hand jobs, tit fucking and boob jobs, Sucking Cock or Blowjobs and eating or going down on a girl, humping, grinding or outercourse and ass humping, or grinding.\n\n\"One of the most commonly known actions of third base is fingering a girl. That was what I was doing when I put my finger in your pussy earlier. If I'm just rubbing the outside, that is called stroking and is part of second base, but once a finger or more than one finger goes inside your body that is third base and called fingering. As you saw, it is very pleasant and helps get you ready for actual sex itself by letting your body get used to being penetrated.\"\n\nRachelle was nodding her head enthusiastically. \"Yes, My Lord, I really enjoyed fingering it was amazing, and it took me deeper into your Joy and gave me a very good cum.\"\n\nI smiled at her. \"Yes, everything we do today should bring you deeper into my joy. Because it's a deeper level of intimacy. Just like second base feels better than first base, third base should feel even better than second base.\"\n\nRachelle was bouncing again. \"Can we do more fingering, My Lord?\"\n\n\"In a bit, my Pet. The female version of fingering is what you were doing yesterday and just now when you wrapped you hand around my cock and stroked it. With my clothes or underware on it's second base, if you are touching my cock with your bare hand it is third base and is called either a hand job or jacking off. That's a good way for a man to mark his woman with his essence, his cum.\"\n\nI could see that she was thinking hard about something. \"What are you thinking, my Pet?\"\n\nShe looked at me. \"Yesterday, when you were teaching me about second base. I was already doing third base?\"\n\nI nodded. \"Yes, some of what you did was third base because we didn't have our clothes on. With our clothes on it would have been second, but you wanted to show me you were mine and wanted us to be naked together, remember? So I just changed our training a little. Don't worry, it was okay and now you know the difference, don't you?\"\n\nShe reached over and hugged me. \"You are so good to me, Master. Thank you for being so understanding and teaching me about being a good slave and a woman.\"\n\nI kissed her tenderly and whispered in her ear. \"You're welcome, my Pet. Now lets get on the bed and practice fingering and hand jobs so I can put my essence on your face and neck for you to rub in and mark you as mine.\"\n\nShe jumped up and pulled me by my hand over to the bed and climbed on, pulling me with her. Her hand wrapping around my stiff shaft before I could even get in bed and stroked me.\n\n\"Slow down and take your time, Pet. We have as long as it takes, no need to rush. Third base is what we will work on the rest of the day.\"\n\nBreathlessly, she nodded and answered. \"I don't want to wait, Master I want you to cum on my face so you can mark me with your cum. I want to be marked everywhere so Cunt will know how good a girl I am at supper.\"\n\n\"That's good, My Pet, but I want you to take your time and enjoy our time together. To show Cunt how good a slave you are, you need to learn your lessons too. Not just have yourself well marked.\"\n\nRachelle nodded and settled down enough that I was starting to really get turned on by the things she was doing. I knew it wouldn't be much longer before I was ready to blow my first load all over her pretty face. Just the thought of painting my pretty stepsister with my cum had my balls swelling and my cock getting harder.\n\nAs I got closer and closer to cumming and feeling the rising need in my own balls, I stroke over my stepsister's outer folds and clit, watching her face as her desire climb. When I knew I was about to lose my load, I moved up her body so that my throbbing cock, which she was still stroking, was at the bottom of her face.\n\n\"Get ready Pet, I'm going to spray my cum all on your face and neck. Make sure you catch every drop and rub it in so we don't accidentally sin.\"\n\nShe looks down at my purple, throbbing cockhead. \"I won't let a drop escape My Master, mark me with your cum.\"\n\nI felt my cum rocketing up from my balls and I slide my finger inside my slave's virgin pussy. As I watch my cum splash on her face, between her eyes and over her cheeks, her mouth opens as my finger shoves into her tight virgin hole.\n\nShe screams in orgasm from my conditioning, getting a big mouthful of my hot seed. Her hand lets go of my cock as she rubs my cum in her face and neck, still screaming in orgasm, as my finger plunges in and out of her tight hole. I can feel her spasming orgasm inside her cunt, and I keep it rolling as she continues to rub my essence all over her.\n\n\"Yes, Master feels so good. I'm cumming while you mark me as yours. Won't Cunt be surprised when she sees me!\"\n\nI look up at the camera in the room's corner, knowing her mother was seeing every second of her daughter being transformed from pure innocent virgin to my willing sex slave and breeding slut. I pull my finger out of Rachelle and let her calm down. She's licking what's left of my cum off her hands and swallowing like it's the most delicious thing she's ever tasted. I slide down my stepsister and to the side, allowing both of us to calm down a bit. \"Did you enjoy learning this part of third base, My Pet?\"\n\n\"Oh Yes Master!\"\n\nI smile at her \"Good, then its time to move to your next lesson the tittie fuck or Boob Job.\"\n\n\"What is that, Master?\"\n\nI get off the bed and walk over to the medical cabinet and get the aphrodisiac cream and bring it back to the bed with me. \"They are the same thing, only it's called Tittie Fucking when I control it and a tittie or boob job when you control it. We start by putting lotion, cream, oil or lubricant all over the inside of your tits.\"\n\nI star rubbing the lotion from her nipples and across the inside swells of her breasts and the valley in between. \"Then you do the same with my cock. Make sure you get a lot on it and cover the whole thing.\"\n\nI hand her the ointment and she slathers it all over my cock. While it won't affect my excitement, the lotion will increase the tingle in her breasts as I'm plowing between her nice perky mounds of tit flesh. Once she has me good and covered, I climb back on the bed and straddle her body just below her chest. I reach down and take both her hands in mine.\n\n\"Now you push your titties together and hold them. We're going to start with me in control, so you see how we do this. Next time we do this, I'll let you be in control and you'll do all the moving. This time you just hold still and keep your boobs together.\"\n\nRachelle nods and pushes her tits together, holding them tightly. I position myself and slide my hard cock in the valley between her tits, letting my hands rub and stroke her nipples, sending tingles racing into her pussy. My mental conditioning causing her to start cumming as I'm fucking between her young, perky tits.\n\n\"OH MY GOD!! I'M CUMMING IN YOUR JOY AGAIN MASTER! OH IT JUST KEEPS GOING AND GOING! AH, AH, AH, AH! OH, OH, OH, OH SO GOOD MASTER, YOU MAKE ME FEEL SO GOOD!\"\n\nRachelle keeps screaming, her orgasm keeps building just as I conditioned her to do. I'm pumping her for a good half hour. I explain to her how she can lean her head down and lick the top of my dick as it comes out the top of her tits and the feeling of pleasure to me increases as she does what I'm saying while she still moans and pants in orgasm as she's licking my dickhead with every stroke.\n\nAfter about twenty-five minutes I feel my balls drawing close to my body as I get ready to cum again and I lean into the tit fuck, getting a better angle for my pleasure. \"I'm going to cum on your tities soon and mark them and you belly as mine, Pet. But I want you to see we can mix things up on third base and add the two things you've learned together.\"\n\nI reach behind me and shove two fingers into her cunt causing her own orgasm triggers to increase and her body arches as she experiences the strongest orgasm she's had yet from a two to a five in one swift thrust as both my cock and fingers work together. \"OH. MY. GOD. SO GOOD I'M SO DEEP IN YOUR JOY MASTER! CUMMING SO HARD!\"\n\nI grunt and blast rope after rope of jizz over my stepsister's tits. \"Rub it in Pet. Help me mark your tits and belly and claim them as mine.\"\n\nI pull my fingers out of her and my cock out from between her tits, letting my ropes splash on her nipples and then lower on her belly. I watch as my cum pools in the valley between her breasts and in her belly button as her little hands quickly start rubbing and spreading my seed all over her perky breasts and tight belly.\n\nShe's still cooing in the afterglow of her last orgasm and I fall off her. I'm spent from the exertion of fucking her perfect tits and cumming on my innocent stepsister chest and belly. The very belly I plan to impregnate soon.\n\nNeeding a break to replenish some fluids, I go over to the medicine chest as I realize we are getting close to lunchtime. I put two cc's of the aphrodisiac into a glass along with some cold pomegranate juice for Rachelle and swallow another one pill I brought to help me replenish quicker with some juice for myself.\n\n\"Rest my Pet. I need to go check on Cunt and get us some lunch. Then I'll be back so we can eat, then I'll teach you all about the next two parts of Third base oral sex and grinding.\"\n\nI hand Rachelle her juice, knowing that the dose of aphrodisiac in the juice will have her on a hair trigger after lunch. Allowing the next two lessons to give her even stronger orgasms. I'm trying to keep myself from pushing too fast and just injecting her with six cc's of the drug so she's begging me to fuck her. I want to so badly but I'm enjoying what I know is going on across the hall to and I want to torment Ruth some more.\n\nRachelle nods and sits up to drink her juice. I can see that physically the orgasms she's experienced this morning have exhausted her. \"Why don't you take a nap while I check on Cunt and get our lunch together.\"\n\n\"Okay, Master.\" She hands me the glass and lays back on the bed, her eyes drifting closed. \"I love you Zack and I'm so glad you're my Master.\"\n\nI stand at the door and look back at my stepsister, the girl I used to resent for taking my place in the family. As I look at her tight little body, I realize that my feelings for her have been changing in all this.\n\nOriginally, she was just the instrument I was going to use to help break her bitch of a mother. But somewhere in the last forty-eight hours she'd become special to me. Was this feeling love? I didn't know, but I realized I didn't want to break her I wanted to keep her as mine for all eternity. Maybe that was love after all.\n\n<br >\n\n\n\nEleven\n\n\n\nI walk into my office and turned on the subliminal message music in Rachelle's room. Not because she needs it anymore, but the more often she hears the hidden track, the more it will become truth to her.\n\nI switched to the camera view of Ruth's room. I zoomed the camera in and saw the tears running down her face and knew that she was weeping at the lost innocence of her precious daughter. Seeing the fear on her face and knowing she was realizing that I'm right tickles me. Ruth knows now not only will I have her daughter begging me to fuck away her virginity. Rachelle will also beg me to put my bastard baby in her womb.\n\nThat's not what scares Ruth to tears though. No, it's knowing that I'm going to win and break her as well. Below her fear, I can see the aphrodisiac fluid working on her. As angry as she is that Rachelle is giving me all her firsts. As afraid as she is that I'm going to succeed at breaking them both. Underneath it all, Ruth is very aroused and can't understand why.\n\nI smile, knowing that she'll be even more unnerved by what's about to happen next. Honestly, right now I'm just toying with Ruth. I have no desire to break her yet. I want her to fight, to resist for now.\n\nThe harder she fights me, the sweeter her inevitable surrender will be. So I'm going to fuck with her head some more today. Show her what I can really do to her if I started trying to break her. I need her fear and I want her to fight, so I'm going to push her right to the edge today and then back off until after I make Rachelle mine.\n\nWhile I was at my lab today, one scientist handed me something new. An Idea I had and asked him about when we were perfecting the Aphrodisiac serum. Was it possible to make an airborne version of the compound that would mix with the wearer's own pheromones? A scent that would cause the women who inhaled it to become specifically attracted to that male?\n\nHe'd taken my idea as a personal challenge and had gone to work on it. Today he handed me an aerosol spray he thought was exactly that. A spray on Aphrodisiac that would mix with the wears pheromones and drive any woman to desire the man wearing it.\n\nI sprayed myself with it, allowing it to mix with the sweat on my body from my morning spent with Rachelle. I waited until it had dried a bit and then I grabbed the remote for Ruth's collar and her vibrator's and headed for her room. I was ready to push her to the very edge of breaking before letting her return to her slightly aroused state as I further trained her daughter.\n\n~~~~~~~~~~~~~~~\n\nThe moment I entered Ruth's room, she started screaming. \"You're a disgusting piece of shit. I hate you. I'll kill you. You can't hold me. You'll screw up and I'll get free and when I do, I'm going to tear your cock right off your body and shove it up your ass and fuck you with it. Then I'm going to kill you. Oh, it won't be fast, I'll carve you up slowly piece by piece.\"",
        "I walk over close to her. So that the airborne pheromone and aphrodisiac permeates her nostrils and mouth as she breathes. \"Bad girl, Cunt. Bad girls curse their masters and threaten them. You know what happens to bad girls, don't you?\"\n\nI stand there, watching as her nostrils flare with the scent being carried to her libido. Ruth can't understand why my presence is causing her to become more aroused. She answers me.\n\n\"I know what you want asshole, you want me to tell you bad girls get punished, my Lord and Master. Well, you can fuck off. I'm not playing your games anymore.\"\n\nI step even closer and lean down so she's getting the full effect of the spray. \"Oh, I think you are crying wolf, little cunt. I think in reality you are so turned on watching me dirty, your pure virginal daughter. I think my little cunt is so turned on watching her pure daughter stroke my dick with her little tight hands. Watching her fuck my cock with her tight teenage tits and rub my seed into her body being marked and claimed by me turns you on. You can't help yourself.\"\n\nI make a point of looking down at her body. \"Look at you. Your own nipples are hard as diamonds and you've soaked you panties so much I can see and smell your arousal.\"\n\nShe shakes her head but then draws in a deep sniff taking in even more of the arousal inducing spray. I'm not about to let her lie to me. I reach down and swipe the evidence of her arousal off her thighs and show her her fluids.\n\n\"Your mouth and head shakes may lie but your pussy doesn't, Cunt. But you are right about one thing, Cunt. Bad girls get punished. You've resisted my punishment by electroshock so I guess it's time to punish you a different way.\"\n\nI walk over to a locked cabinet and unlock and open it. The first thing I pull out is a set of velvet line hand cuff and I lay them on a tray beside the bed Ruth is secured too. Then I pull out a set of two pullies with wire cable and attach them to two metal poles that rise from the floor on each side of the foot of the bed. About two feet out on either side. Then I take and attach the cable from the pulley on the left side of the bed to the leather and sheepskin restraint on Ruth's right leg.\n\nI follow that by attaching the cable from the pulley on the right to the restraint on Ruth's left leg, running it under her right leg. Then I reach into my pocket and hit the remote for her shock collar until she is screaming and writhing. While she is recovering, I quickly remove the restraints from her wrists.\n\nSnapping on the cuffs and attaching them to a pulley at the head of the bed, straight out over her head. Before she realizes what is happening, I hit a spot on my tablet and the pulleys all tighten. Pulling her hands over her head and flipping her over so that her ass is sticking up. The cables pull so tight they lift her off the bed. Which I then slide away from her, leaving her suspended in the air.\n\n\"Since you aren't learning your lesson cunt from the shocks. I guess I'll just have to whip your ass instead.\"\n\nI walk over to the cabinet and take out a riding crop and show it to her. \"Yes, that is what we will do today. I'm going to spank Cunt's bad girl ass.\"\n\nI move over in front of her and kneel so that I'm just an inch from her nose, my scent overwhelming her sense of smell. She moans without even realizing it. But she may not say anything, but she can't deny the state of her arousal. It's so strong now her juices are running down her thighs and dripping on the floor.\n\nSuspended in the air, held tight by the cables and pulleys. Her hands stretched in front of her and her legs spread so wide her cunt it open inside her, soaked thru little sheer panties. I smile at her. \"\n\n\"Look at you, Cunt. You threaten and you curse and yet your body already knows what your brain doesn't yet. You belong to me. I am your master. Your body wants me to fuck my baby right up in that nasty adulteress cunt of yours.\"\n\nI shake my head just an inch from her nose and mouth, letting the aerosol overwhelm her, push her closer to the breaking point.\n\n\"But I won't. I won't fuck a baby in you until after you watch your precious pure baby girl beg me to give her one. I won't fuck you until I've planted my baby in Rachelle right here in front of you, while she thanks me for doing it. Then I still won't fuck you. Not until it's all you can think about. Having my little incest bastard in your slutty womb.\"\n\nShe breathes in deep, getting a huge dose of the chemical and flooding her body with the aphrodisiac. \"FUCK YOU!\"\n\nI laugh. \"Not today, Cunt. Today you get spanked. You will count each whack and thank me properly or we will start over until you do.\"\n\nI walk down beside her, trailing the crops leather strip over her back to the top of her panties. Where I stop and tsk. \"Look at your panties, Cunt. You've completely soaked them. Does watching your daughter take my cum turn you on that much, you dirty fucking cunt? These are so wet their worthless.\"\n\nI reach out and grab them, yanking driving the bullet that was resting against her clit into her pussy folds. A reverse wedgie with a plastic vibrator until the seams give and she's left bare from the waist down. \"Don't forget to count and thank me properly cunt.\"\n\nWith that I lift my hand and let it drop the leather strap of the crop, whistling before contacting her ass cheek. CRACK!\n\n\"OWE!\"\n\nI tsk her. \"Not owe. You should have said One thank you, my Lord and master. Lets start again.\"\n\nCRACK\n\n\"ONE, THANK YOU MY LORD AND MASTER.\"\n\nCRACK\n\n\"TWO, THANK YOU MY LORD AND MASTER.\"\n\nI reach into my pocket and pull out the remote set to her four remaining vibrators, the one in her pussy, her ass and sitting on each nipple and turn them on to the lowest setting. Then...\n\nCRACK\n\n\"OH! THREE, THANK YOU MY LORD AND MASTER\"\n\nCRACK\n\nFOUR, THANK YOU MY LORD AND MASTER.\"\n\nI slid the level up to three on the vibes and start striking her ass faster, making it harder for her to count. When she reaches eight, I up the vibrations to six and start striking her even faster and harder.\n\nNow she can hardly count between the speed with which the blows rain on her ass and the strength of the vibrations. She's shaking from the strain on her legs and arms and the pleasure and pain all mixing along with the smell coming to her from my sweat and the spray.\n\nI decided to really drive her to the edge of sanity. And double the speed of my blows and set the vibrators at full speed.\n\nRuth screams as both pain and orgasm mix as the vibrators and my serum drive her over the edge. She's cumming over and over. All the while I'm raising welts on her soft ass. Then I upped the ante and move. Changing my angle of attack to her inner thighs.\n\nHer cunt, ass and tits are buzzing with pleasure; while her thighs burn with pain. She's screaming, having lost all reason. In her mind, pain and pleasure mix. She doesn't know where the pain ends and the pleasure begins.\n\nI switch my angle again. Now I'm striking her pussy and clit hard and as fast as I can swing. All the while leaving the vibrators on full blast until she is squirting her cum across the floor. Her body jerking as she humps against an invisible lover, screaming and crying. Pain and pleasure becoming one to her.\n\nI go on until my arm gets tired and then I turn off the vibe and don't strike her again. She hangs in the air. She's cum so hard and long she's passed out.\n\nI slide the bed back under her, loosen the cables, and strap her back to the bed. I grab a washcloth and clean her up, then put up my toys. Grabbing the lube with the aphrodisiac in it and apply a generous coat of it over her ass and pussy.\n\nGet a clean dry pair of panties. I slip the two vibes in the pockets and put them on her. Then I lock her legs back down and turn on the subliminal feed and the video of Rachelle's room.\n\nI slip out of Ruth's cell and lock the door, knowing when she comes around, it will shake her to her core. I abused her, and she came harder than she ever had before. The psychologist in me knows that now in her subconscious, pain and pleasure are intertwined. She won't be able to separate them.\n\nShe doesn't know it yet, but my bitch of a stepmother is well on her way to psychologically breaking. Which will let me reshape her into what I want her to be. A perfect trophy wife for my father, and an eager breeding slut for me. Once I've made Rachelle my eager baby factory, it won't take that long to remake her mom into whatever I want her to be.\n\nI head to my office space to shower off the sweat and get ready to have lunch with Rachelle. After lunch I'll finish her lessons on Third base, teaching her to grind and painting her from belly button to thigh with my cum. Then teach her the two lessons I want to teach her the most. How to get her pussy eaten and how to suck cock like a pornstar. all while Ruth watches from the other room, knowing she's next.\n\n<br >\n\n\n\nTwelve\n\n\n\nAfter getting the two silver domed trays from the dumbwaiter, I walk back into Rachels training room and wake her. Shutting down the music and inviting her to eat lunch with me. \"What is my next lesson, My Master?\" The smiling dark blonde haired angel asked me.\n\n\"After we eat my Pet, we are going to just practice the things you already know while we let our food digest and then there are three more things to teach you as part of Third base.\"\n\nRachelle nodded. \"What are the parts left to teach me?\"\n\nI smiled. \"I'm not going to tell you those again, My Pet. We talked about them earlier. I will mention them again as you're learning them.\"\n\nShe looked at me and smiled. \"Was Cunt better for you when you went to train her today, Master?\"\n\nI shook my head. \"No, she was a very bad girl, and I had to severely punish her for it. I hope this time she learns her lesson and starts to be trainable.\"\n\nThere were tears in Rachelle's eyes as she nodded. \"I don't understand why she doesn't want to learn to be a good wife for Daddy Ethan.\"\n\nI smiled at my nieve little stepsister and soon to be lover. \"Oh my Pet, it isn't her fault. Pastor Jeff has brainwashed her just like he did you. She's more resistant because he spent more time deepening his control over her. I'll get through to her, don't worry.\n\nWhen I'm done, she will be the perfect wife for Dad. She'll love him again and be faithful and I'll make sure that no one can take her from him again.\"\n\nRachelle stood and ran around the table, and started kissing me. \"Thank you, Master! Thank you for saving me and for wanting to help Cunt be a good wife to Daddy Ethan!\"\n\nHer enthusiasm caused my cock to rise, and I stood, taking her in my arms and sweeping her up as I captured her lips with mine. I carried her over to the small loveseat in the corner and turned on the camera so that Ruth could see what was going on again.\n\n\"Let's sit here and make out, My Pet. We will practice first thru third base that you've learned while our food settles then I teach you the rest of third base before time for you to have supper with Cunt and show her how good a girl you've been today.\"\n\nThen I sat on the love seat and turned her, so Rachelle was straddling my hard cock. We started kissing and groping each other and just like I knew would happen soon; she was scrubbing her wet virgin pussy all over my hard dick. \"Oh Master, Oh I'm entering your joy again Master.\"\n\n\"That right, My Pet, cum into my joy. Rub your horny little pussy all over my hard, fucking cock. This was the next thing I was going to teach you. How to grind or hump, as it's called. The sex-ed word for it is outercourse. Why do you think that is?\"\n\nRachelle smiled at me and I could see the devotion and yes love in her eyes. \"Because it's like what we will do to make a baby only without you being in my pussy?\"\n\n\"That's right my Pet. It's exactly right.\"\n\nI pulled her lips to mine and feasted on her innocent love and devotion. I'd done more than I thought possible. My plan had been to get this innocent woman to beg me to fuck a baby in her in front of her mother. All parts of my revenge plot against Ruth. Instead, I'd made my stepsister fall in love with me, worship me, desire me.\n\nI looked into Rachelle's eyes as I put my hands on her hips and pulled her tighter against my cock. Fitting her gash as snug against my rod as we could be. Then I began lifting her higher and grinding her up and down on my cock, harder and faster. Making sure the head of my cock caught on her clit with ever pass.\n\nRachelle's conditioning kicked in and she began cumming. Her orgasm just kept rising higher and higher, headed to the five I'd told her to rise to subconsciously. By this time, I couldn't instruct her on anything. I lost her in the sensations of the ever continuing and growing orgasm she was experiencing. She was cumming so hard I could see the contractions of her internal muscles across her stomach.\n\nWatching and hearing her cum so hard was having its effect on me, too. I could feel my own cum rising from my balls. I quickly stood, carrying her to her bed as she continued to scream and grind against me the whole way. Laying her on her back, I finished grinding against her.\n\nMy orgasm exploding as I pumped what felt like a gallon of spunk onto her tight little belly and upper thighs. One rope of cum splashed across the top of her pussy mound as she continued to scream out her orgasm. \"OH MASTER! I LOVE YOU! MARK ME! COVER ME IN YOU ESSENCE! MAKE ME YOURS!\"\n\nEven in the throughs of her biggest orgasm yet, Rachelle's perfect little hands moved, rubbing my seed into her belly and thighs, covering every exposed inch of her skin with my cum.\n\nOverwhelmed, I staggered back to the love seat and collapsed, watching as she came down from her own cum. The afterglow of her experience still lighting up her face. As I looked at the not so innocent virgin laying on the bed rubbing my cum into her flesh, everything changed.\n\nOh, I still wanted to punish Ruth. I still wanted to humiliate that gold digging bitch, but I didn't want to break my stepsister anymore. As I looked at her, I realized something that shocked me. Somehow, in teaching my stepsister how to be a complete and utter slut, she'd stolen my heart.\n\nI wanted her love to be real, not something I programed into her. She wanted me because I programed her to want me. I wanted her to ask me to fuck her, not because of drugs or hypnosis. I wanted to teach her to please me, not \"a man\" anymore. What I wanted was for her love to be real. Because I had just realized something:\n\nSomehow, in the middle of teaching my stepsister to be a complete and total sex-slave. In programming her to respond to me like a cum addicted slut. I'd gone and fallen in love with her. THIS CHANGED EVERYTHING!!\n\n<br >\n\n\n\nThirteen\n\n\n\nI stood and crossed the room to the table and picked up my tablet, turning off the camera. I was confused and still overwhelmed, knowing that I was in love with Rachelle. After the camera was off, I crossed back to the bed where she was just finishing rubbing my cum into her body. She saw me coming and noticed the look on my face. My Beautiful stepsister looked confused. I grabbed her and lifted her to her feet. I crushed her to my body, my mouth diving to hers, and I kissed her with everything I had. All the love I'd just discovered pouring from my mouth to hers.\n\nRachelle started moaning and humping me as the programing for her to orgasm from my kiss hit her. Smelling my dried, stale cum on her face and upper body pissed me off. I couldn't do it. There was no way I could go thru with corrupting her just to break Ruth. I pulled away from Rachelle's perfectly fuckable body and turned. \"Go take a shower Rachelle. Wash all over and don't miss a spot.\"\n\n\"But Master, how will I show Cunt I've been a good girl?\"\n\nI spun around and screamed. \"DON'T CALL ME THAT!\"\n\nShe looked at me, shocked. \"But you are my Master.\"\n\nThat did it. Those were the words that broke me. I dropped to my knees, weeping. When I'd started all this, I hadn't thought about the consequences. I hadn't ever considered I might want something real with Rachelle. Now my innocent, perfect little stepsister was my slave. I was ashamed and broken by that realization.\n\nI felt her wrap her arms around me. \"Stop Zach. You're scaring me.\"\n\nHer tone wasn't that of a worshipful slave. It was different. More like the girl I'd had dinner with just two weeks before. I looked up to see the worry on her face. \"What did you call me?\"\n\n\"Zach, is the camera feed off?\"\n\nNow my eyes got wide in my head. What. The. Fuck? How did Rachelle know about the cameras?\n\n\"What?\"\n\n\"I asked, big brother, if the camera to my mother's room is off.\"\n\n\"How?\"\n\n\"For Christ sakes is the camera off?\"\n\nI nodded, but my confusion must have shown on my face.\n\n\"Oh Jesus, Zach! For an off the charts certified genius you're really dumb. Did you really think you could brainwash me that easily?\"\n\nShe laughed. \"I may not be as smart as you, but I'm not as gullible as you think. I knew at my graduation dinner you were up to something. Just had no idea you were this diabolical.\"\n\n\"I don't understand?\"\n\n\"When I woke up in this room, I knew what had happened. You'd kidnapped me. At first I thought it was just me and I'll admit I was scared. Then you came in and started that whole 'your family gave you to me because you'd been brainwashed.' I had a good idea then what you were going to do to me. Since I wanted you to take my virginity, I didn't fight you. I had no clue you'd taken mom too.\"\n\n\"Wait. You wanted me to take your virginity? I thought...\"\n\n\"You thought I was the poster child for the Purity Movement. Everyone thought that. It's what I wanted them to think. Look, we really need to talk. Real talk. Yes, you've conditioned me a lot, I know that. I mean, I've never heard of a girl cumming just from getting French kissed, so I know you've done some things to me while I was under hypnosis. But I'm not completely brainwashed. I'm stronger willed than my mother. If I'd wanted to resist you, I would be. No electric shock would have broken my will. It probably won't break mom's either.\"\n\n\"I don't understand.\" I said honestly. Rachelle smiled and then kissed me before shuddering in a small orgasm. \"Damn it! That get's annoying Zach. You need to fix that please so I can kiss you without cumming like a cheap slut.\"\n\nI couldn't help it. I laughed. \"I kind of like that kissing me makes you cum.\"\n\n\"Yeah, but it would be embarrassing in public. And I'd really like to kiss you without giving everybody front row seats to my orgasms.\"\n\n\"Okay, I'll fix it.\"\n\n\"Not just yet, please. First, I have a question. Do you have something here that will put my mother to sleep?\"\n\n\"Yes.\"\n\n\"Can you give her enough so we can have a talk and her not realize anytime has passed?\"\n\n\"Sure why?\"\n\n\"Because it's obvious by your breakdown something's changed. You don't want to brainwash me any more. However, I still want you to take my virginity and I want to help you brainwash my mother to be the perfect wife for Daddy Ethan. So we need to talk. To explain why I was willing to let you brainwash me and fuck me. However, I don't want my mom to know anything has changed.\"\n\nI nodded. \"Okay, I can do that.\"\n\nRachelle smile and almost kissed me before pulling back. \"Damn it. You need to fix that after mom's out. I'll shower while you put her under. You should too. You're kind of sweaty.\"\n\nI stood and grabbed my stepsister and before she could escape; I kissed her, shoving my tongue in her mouth. Causing her to cum and then I slid two fingers into her pussy, driving her orgasm higher. Then I pulled away. \"That's for keeping secrets from me.\"\n\nI turned and left the room with a laugh as she lay in a heap where we'd been as the last of her orgasm washed over her. I walked to my office and walked to the medicine locker. I opened it and pulled out a bottle of a drug called Propofol. I looked it up and measured the amount needed to keep Ruth sedated for three hours. Then I took it to her room. \"YOU SON OF A BITCH!\"",
        "Obviously, she was mad again. \"Bad girl, Cunt. Do we need to get out the crop and pulleys again?\"\n\n\"YOU FUCKED MY DAUGHTER!\"<br >I was confused. What the hell... Then it hit me. From the angle of the camera when I laid Rachelle on the bed, Ruth couldn't see that I hadn't penetrated her daughter. \"No, I didn't. I told you I wouldn't fuck her until I took all her firsts. She hasn't sucked my cock yet and I haven't licked her cunt. Hell, I might even fuck her ass before I fuck her pussy. I just showed her the joys of humping. Another first I took.\"\n\nThen I got right in the Cunt's face so the last of the cologne overwhelmed her senses. \"Did it turn you on to think I'd fuck her? Did it Cunt?\"\n\nShe moaned from the arousal coursing through her between the aphrodisiac in her system and the cologne upping it. \"That's what I thought. I told you I won't take her virginity until she begs me too. You'll know when I take her cherry. I'll pop it and dump my virile seed deep in her womb right here in front of you and she'll be thanking me and begging me for more the whole time.\"\n\nShowing her the small bag of solution I'd brought in. \"I thought you might be in pain from your punishment earlier. I brought you some pain reliever but now I'm not sure if I should give it to you.\"\n\nI turned to walk away. When I heard what I knew, I would. \"Please, Master.\"\n\n\"Please what, Cunt?\"\n\n\"Please give me the medicine. I do hurt from my punishment. Master.\"\n\nKnowing that it would confuse her more and even cause a bit of pain against her freshly whipped anal pucker and clit, I turned. \"Good Girl Cunt. Good Girls get rewarded.\" I triggered the vibrator remotes to full sending her into an instant orgasm at the same time I hit the shock collar giving her pain in the middle of her vibrator induced cum. Then I turned off the Vibrators and connect the IV of Propofol to her heplock, setting the timer to administer it over three hours. I stood and watched as Ruth's eyes closed and she slipped into a drug induced sleep.\n\nI hurried to my shower and cleaned up. I stopped myself from putting on the pheromone cologne because I wanted to hear what Rachelle had to say.\n\nI stepped into her room and she was clean, sitting on the bed naked. \"Can you fix the kissing thing first?\"\n\n\"Sure. Take us to the Pink Door My Pet.\"\n\nRachelle slumped and I caught her before she fell. \"Where are you Rachelle?\"\n\n\"Standing in front of my Pink Door.\"\n\n\"Unlock and enter the room go to your truth chair and sit down.\"\n\n\"Yes, Zach.\"\n\n\"I need to speak to the hidden you is she in the mirror?\"\n\n\"Yes.\"\n\n\"Then you can rest in your chair and let me talk to her now.\"\n\n\"Yes, Zach.\"\n\n\"Rachelle, it's time to remember the truth about a French or holy kiss do you remember that truth?\"\n\n\"Yes, anytime you kissed me like that I would feel myself enter your joy in an orgasm.\"\n\n\"That's right, but we've moved so far into my Joy that from now on any kiss or Holy Kiss will just make you feel aroused it will not bring you into my joy anymore. We've moved past that.\"\n\nRachelle frowned. \"I understand. Because we are deeper in our training, I will not enter your joy from a kiss. I will just become aroused.\"\n\n\"That's right unless before I kiss you, I say: 'I'm going to kiss you so hard you cum in your panties.' If I say 'I'm going to kiss you so hard you cum in your panties' when I kiss you then you will cum just as hard as if I were fucking you.\"\n\n\"I understand if before you kiss me you say 'I'm going to kiss you so hard you cum in your panties' then I will orgasm as if we had sex.\"\n\n\"That's right.\"\n\n\"Rachelle one more thing. From now on you will not keep secrets from me and will always tell me the truth.\"\n\n\"Of course Zach. I won't keep secrets from you and always tell you the truth.\"\n\n\"Oh, and you don't have to call me Lord and Master anymore you may call me Zach or anything else you want to call me.\"\n\n\"I understand I can call you anything I want instead of Lord and Master. But what if I want to call you Lord or Master or both?\"\n\n\"Then you can, but only if we are in private or in your mother's training room. In Ruth's training room you won't forget to call me Lord and Master.\"\n\n\"Of course I won't forget to call you Lord and Master when we are training.\"\n\n\"Thank you, now wake up normal Rachelle so we can leave the truth room.\"\n\nI brought Rachelle out of the training room and after we'd locked the Pink Door and climbed the stairs, Rachelle woke up refreshed and ready to talk. She looked at me. \"Did you fix the kissing thing?\"\n\nI walked over and kissed her, and she smiled. \"Interesting. I just wet my panties, but I didn't cum. Thank you.\"\n\n\"You're welcome. But did you know I'm going to kiss you so hard you cum in your panties?\" Then I kissed her, and she screamed into my mouth. OH, Shit I forgot I'd made her fucking cum trigger so much stronger than any other.\n\nShe hung on and then looked at me. \"Oh, now that was different.\"\n\nI smiled \"Good different or bad different?\"\n\n\"Oh, that was very good different. Um can you get me some clothes? We really need to talk, but I want to do it back at my house. I need to show you something.\"\n\nI stopped. \"What do you need to show me?\"\n\n\"Proof of what I need to tell you. Please, Zach, for me?\"\n\nI sighed and nodded. Took her hand and lead her to my office. It was the first time anyone had seen the inside of the control room for the training area. But if she was truly going to help me train Ruth, then she might need to know about this room. She looked around. Fascinated with everything. \"This is a very interesting room.\"\n\n\"It's the never center of the training center.\"\n\n\"Why do you call it the training center? Why not the home lab?\"\n\n\"It's not a lab. I don't make things here.\"\n\nShe laughed. \"Yes, you do. You make brainwashed little cum-sluts and sex-slaves.\"\n\nI shook my head. \"No, in reality I make Trophy Wives.\"\n\n\"Oh, I like that. That's what you should call this place The Trophy Wives School. After you train mom as your test case and product sample you could make extra money training other adulteress or frigid wives into the perfect Stepford wives or whatever the husbands wanted.\"\n\nI shrugged. \"It's not like I need anymore money. I built this to break you and your mom safely.\"\n\n\"I know, but I can think of a few of her friends whose husbands might give you just about anything to fix their wives or daughters or both. Think of the power you could have.\"\n\nI promised her I would think about it and then I opened a locker and showed her her luggage. She quickly pulled out a pencil skirt, blouse and light sweater. Which she pulled on. What shocked me was she didn't add a bra or panties.\n\n\"What?\" She asked when she saw my face.\n\n\"Underware?\"\n\n\"Why? You'll just make me cream them anyway and you know it.\"\n\nI shook my head \"Not until I understand why you didn't fight me.\"\n\n\"Then lets go home. We don't have a lot of time.\"\n\n<br >\n\n\n\nFourteen\n\n\n\nAs we drove toward the house I'd grown up in, Rachelle started talking. \"My mom's always been a manipulative Bitch. From the earliest memories I have, I can remember her using men. Getting them to give her anything she wanted. It wasn't until I was older I realized she was using her body and sex.\"\n\nShe looked over at me. \"Daddy Ethan was when I realized what she was doing. After he spent the night for the first time. I knew they had sex. I just didn't realize why she was doing the thing she and Pastor Jeff told me not to do. Then mom came to me and told me she was getting Daddy Ethan to fall in love with us. I was to call him Daddy Ethan and tell him how much I loved him and wanted him for my daddy. She was in her words going to get him hooked on her charms.\"\n\n\"Jesus Rachelle. Your mom is a sick fuck.\"\n\nRachelle nodded. \"I know I hate her, Zach. I mean, she's my mom and I love her. But I hate she is the way she is. She was telling me how Ethan would be the best thing that happened to us. That when she was done with him, we'd be rich and never have to worry about anything again.\"\n\n\"What do you mean when she was done with him?\"\n\nRachelle looked at me and sighed. \"Don't you understand? She never planned to stay married to him. She planned to marry him for a couple of years, then divorce him and take half of everything. Only problem was your dad outsmarted her. He made her sign a prenup. If they divorce for any reason, other than him cheating on her, she gets half a million and nothing more. The only other clause was if he catches her in an affair, she gets nothing but what she brought into the marriage. In other words, her clothes and me.\"\n\nI thought about the audio I had. I could get rid of Ruth just by giving it to dad. Well, maybe. He was so whipped by her she might convince him it was fake. Besides, I wanted to hurt her for kicking me out of the house and family.\n\n\"Alright, but I don't see what this has to do with me?\"\n\n\"She didn't know about you at first. Your Dad was very protective of you. Once she found out about you she had gone to far to start over. So she had to control you, too. Honestly, I think she thought you'd be a typical teen, and she'd control you with your hormones. You know a flash of skin here, a bit of tit there. Maybe some sexual innuendos and the hint she'd suck or fuck you. But you turned out to be super smart, and that scared her.\"\n\n\"So she had him kick me out of the house?\"\n\nRachelle shook her head. \"No, that was my fault.\"\n\nNow I frowned. \"What do you mean that was your fault?\"\n\nRachelle sighed. And I knew this was what she wanted to show me. \"When we met, I was just twelve, and you were fifteen. I thought we could be friends. I mean you're smart, I'm smart. We were going to be step brother and sister and I thought we'd grow up and be friends. I was just getting interested in boys and I thought since we weren't really related maybe you and I could even become boyfriend and girlfriend.\n\nThen your dad told us you were really smart and about to go off to college. I was curious; you were only fifteen. How could you go to college? But off you went, and I only saw you during holidays and breaks. You were smart and cute and the longer you were gone the smarter and cuter you got. I realized you were the only boy I thought about that way. The only boy I dreamed about.\"\n\nShe looked over at me and blushed, and I knew what she meant. I was the star of her naughty teenage dreams. Me, which was flattering. She'd stared in a few of mine over the years as she grew up too.\n\n\"Then I messed up. I keep a journal. It's all my thoughts and dreams and feelings. Normally I keep it hidden. Mom had never seen it. I don't think she even knew I kept one. But when we all came to your graduation from college, I realized you were the one. The guy I'd been saving myself for.\n\nI mean yeah I was in the Purity Program and it teaches purity until marriage but most of the kids just fake that. A lot of girls have done everything but let a boy pop their cherry and some of them have done that. Me, I just never found a guy I wanted to kiss or experiment with.\"\n\nShe looked at me again and blushed. \"Then I saw you at your graduation. You weren't a boy anymore. You were a man, and some of those women you graduated with were so beautiful. To me it seemed like they all wanted to get their pictures taken with you and were hugging you and talking about how they'd miss you and I got jealous.\"\n\nShe laughed. \"I realized I wanted you. Not just for a friend. I figured they'd all had the man I wanted. I figured you'd been at college and that's where people experimented the most with sex. So that must mean you'd had sex with them.\"\n\nI laughed. \"Rachelle. I was younger than they all were when they started college. Not one of them ever even kissed me. Well, a few did on the cheek, like I was their little brother. Some of them even offered to set me up with their little sisters.\"\n\n\"Yeah, well, I didn't know that all I knew was I was fifteen and wanted you. But I knew you wouldn't want me I was just a kid. But I went home and wrote in my journal about how I felt. I wrote how when I was old enough, I was going to give you my purity. That I'd save it for you. I feel asleep without hiding my journal and mom found it.\n\nThat's why you got sent away. She told Daddy Ethan that you and I had been writing to each other and that you'd told me you were going to teach me all about sex and pleasing a man. She told him you planned to corrupt me and that she wanted you gone from my life.\n\nThen after they made you leave, mom came to me with my journal. She told me I wasn't ever going to offer you my virginity. That I was a fool if I thought she'd let me give away so valuable a commodity. Then she told me she had plans for my purity. That we could sell it for millions and never have to rely on anyone else for money again.\"\n\n\"What do you mean you could sell your purity?\"\n\nRachelle shrugged. \"She said she knew of a place that held virgin auctions and the more innocent the girl was, the more the men there would pay. A never been touched or kissed virgin was worth millions, maybe even a billion dollars to the right buyer.\"\n\nI thought about that and then I knew. \"Holy Shit! Rachelle, that's what the Purity Movement is about. Pastor Jeff's the one holding the auctions.\"\n\nHer eyes got big, and then she nodded. \"That makes sense. I never could understand the whole never touched a guy thing. Most of the other girls and guys don't either. I bet he can do the same with the guys. How many dirty rich women whose husbands ignore them would pay for an innocent guy they could teach?\"\n\n\"There might be a few but most of the women I've met who fit that category, want a guy who knows how to make a woman cum. An innocent wouldn't know how to do that. But the taking a girl's virginity thing is a big thing for guys. So some old rich bastard might part with a couple million for one who had no experience at all.\"\n\n\"Is that how you learned? Did you find a horny housewife to teach you?\"\n\nI blushed. \"Honestly, I paid a sexual surrogate to teach me how to please a woman sexually.\"\n\n\"A what?\"\n\n\"A sexual surrogate. They work with psychologist that deal with sexual issues to help men overcome their problems, like premature ejaculation. They're experts on human sexuality.\"\n\n\"They get paid to fuck, isn't that a prostitute?\"\n\n\"They don't get paid to fuck. Sometimes sex is part of their therapy. Mostly they show men and women how to overcome their issues. A lot of those third base things we were talking about.\"\n\n\"OH shit Zach! I just thought of something. Pastor Jeff's daughter Beth. She's even more innocent than me. I mean she really buys into the whole movement. You don't think he plans to sell her at auction, do you?\"\n\n\"Don't worry Rachelle. I already have plans for Jeff. He won't be selling his daughter at auction or anywhere else.\"\n\n\"What do you mean?\"\n\n\"I mean, when he fucked my father's wife he made his most costly mistake. When I'm done, he won't be worth anything and that pretty little wife and virgin daughter will belong to us.\"\n\n\"You mean they're coming to the Trophy Wives school?\"\n\n\"Yes, all three of them. My original plan was to make his wife and daughter breeding slaves to me and cuckold him. Now I'll make him into an eunich and caregiver if we do open wives school. I don't know what to do with his wife and daughter, though. I mean, they might be innocent in all this. My original plan didn't have me falling in love with you. I planned to knock you up just to mess with your mom. Now that's not what's going to happen.\"\n\nRachelle looked at me. \"What is going to happen?\"\n\n\"I'm going to marry myself a trophy wife. The first graduate of The Trophy Wives School will be my Trophy wife. You may know her. Her name's Rachelle.\"\n\nRachelle squealed. \"Seriously? You want to marry me?\"\n\nI nodded. \"I realized today that I couldn't continue to brainwash you. Because I loved you. I didn't want you to want me because of my conditioning, but because you wanted me too. I wanted you to love me for real.\"\n\n\"I love you for real. It's in my journal.\"\n\n\"I know, that's why I said I'm going to marry you.\"\n\nWe'd just pulled up in front of the house I grew up in and I put my car in park when Rachelle launched herself at me. Kissing me. \"I want one more thing while were here, Zach.\"\n\n\"What's that, my Pet?\"\n\n\"I want you to give you the rest of my firsts. I don't mind going back to the School and pretending that you're still conditioning and training me for mother's eyes but I don't want to give my first to you while she watches. I want to actually give them to you. Not make you take them to punish her.\"\n\n\"You want me to eat your pussy, have you suck my cock. Take your virginity and fuck your ass in your bed here?\"\n\n\"Yes, please.\"\n\nMy cock was all for that. The thought of my stepsister taking me into the bed in this house. Man that got me Dick's full attention. \"Then lets go to your room.\"\n\nShe squealed again and climbed out of the car.\n\nWith all the family not in residence, the house was empty. They had offered the staff paid holidays, and they'd all taken them. We turned off the alarm, waited for the company to contact and make sure we were allowed entrance, which Rachelle did using her security code for all clear. Then we made our way up to her room. No sooner had I come through her door than she was on her knees, tearing my pants open and freeing my cock. I stood in the open doorway in shock. My pants and underware around my ankles.\n\n\"What are you doing Rachelle, My Pet?\"\n\n\"I'm going to suck your dick, Master. Right here in my doorway.\"\n\nHer mouth was suddenly devouring my cock, and I was enclosed in the warm, wet, sucking mouth of a horny cock hungry virgin. Who apparently could suck dick like a hooker. \"Fucking shit Rachelle. Where did you learn to suck cock?\"\n\nShe looked up into my eyes and popped her lips off my dick long enough to respond. \"I told you I'm pure. I never said I was innocent. Girl's talk and I've watched porn. I've practiced for this day, Zach. I may not have ever sucked a guy's cock, but I've sucked off many a banana, cucumber, carrot and even Lovehoney's King Cock dildo. I bought that one when cook started asking about missing veggies.\"\n\nThen before I could respond she was back to bobbing up and down on my cock. Her suction and speed were perfect. Her tongue work wasn't as good, but since there had been no verbal correction in her training methods. I was going to let that go for now. I mean, who wanted to argue with a virgin who could deep throat them?\n\nAnd she not only could deep throat, she seemed to enjoy making me moan as much as I enjoyed making her moan. Just because I could, I waited until she had me buried in her throat and I smiled down at her. She'd never taken her eyes off mine and I could see the love and devotion and that she was getting horny sucking me off. \"Good Girl my Pet.\"\n\nThe orgasm trigger kicked in and she screamed on my cock as she had her own orgasm. The vibrations were more than I could take, and I was spewing into her mouth. My hands latched onto her head, holding her where she was as she swallowed. Just to keep things going, I smiled as I repeated. \"Good Girl My Pet you are such a Good Girl my Pet.\"\n\nBack-to-back orgasms blasted through her as I shot my load down her throat. And once I was done, I let go of her head. She slowly brought her lips off my cock. Sucking the last of my cum on her way up. \"Oh My God Zach! That was incredible!\"\n\n\"Did you enjoy that, Rachelle? Was it everything you hoped it would be?\"\n\nShe kissed me. \"It was perfect thank you.\" <br >I smiled and told her. \"Get undressed we aren't done.\"\n\n\"What's next?\"\n\n\"Next, I'm going to eat that sweet little pussy. You've teased me with it for two days now I think it's about time I taste that juicy little bare peach, don't you?\"",
        "She moaned and bit her lip before looking at me with half-lidded eyes shining with lust and arousal. \"Yes, Master, eat my virgin pussy. Suck up all my virgin cream.\"\n\nFuck this. I wasn't waiting for her to get undressed. I reached out and ripped her silk blouse off her tight little body and unzipped her skirt, letting it fall to the ground. Then I pulled my shirt over my head so that we were both naked, still standing in the doorway. I pulled her into my arms and looked into her eyes. Time to play dirty. \"You turn me on when you talk like that, My Pet so I'm going to kiss you so hard you cum in your panties.\"\n\n\"I'm not wearing P...\"\n\nThat's as far as she got before my tongue invaded her mouth and she screamed as her orgasm rocked her. Which was when I got the shock of my life. Instead of grinding on me like she had been. She wrapped her legs around my waist and before I realized what she was up to, my little Virgin had my hard throbbing cock buried in her orgasming pussy.\n\nShe'd done just what she had told me she wanted to do she'd given me her virginity. Who was I to argue? I was balls deep in the tightest, wettest pussy I'd ever been in. I'd just been given my first virginty. I'll admit that I lost it. I turned and slammed her into the wall in the hallway outside her bedroom, pounding into her tight little virgin whole with all my might.\n\nWall banging my virgin stepsister as she came on my cock continuously, as her condition dictated. \"OH GOD YES, ZACK! FUCK MY PUSSY TAKE IT RUIN IT MAKE IT YOURS. DON'T STOP I'M CUMMING AND CUMMING AND CUMMING! FUCK ME MASTER! FUCK ME ZACK FUCK YOU FUTURE WIFE!\n\nI HAVE ONE MORE SECRET TO TELL YOU, ZACH! I KEEP TRACK OF MY CYCLE. I'M FERTILE! IF YOU CUM IN MY PUSSY YOU'LL PUT YOUR BABY IN ME! IS THAT WHAT YOUR GOING TO DO? ARE YOU GOING TO KNOCK ME UP, MASTER? ARE YOU GOING TO FILL MY VIRGIN PUSSY AND PUT YOUR BABY IN YOUR STEPSISTER?\"\n\nThat was the last straw. I knew she was telling me the truth. I'd conditioned her to never keep another secret and to tell me the truth. If Rachelle said she tracked her fertility, then she did. And if she said she was in her fertile period, she was or believed she was. I'd check for certain when we got back to my place. I had ovulation kits in my supplies. But for now I pounded into her fertile, just claimed pussy and knew I was going to fill her with my cum.\n\n\"YES BABY GIVE ME A BABY! SO FULL! SO GOOD CUMMING SO MUCH ZACH! FUCK YOUR BABY IN MY TIGHT LITTLE PUSSY, BIG BROTHER!\"\n\nThat did the trick. My balls erupted so hard I saw spots and roared as I came rope after rope. I came so hard and for so long I thought I was going to black out. As my first blast of cum hit her cervix, Rachelle screamed wordlessly as her conditioning kicked in.\n\nHer orgasm jumped to twenty times harder than she'd ever orgasmed. Her body shook, her eyes rolled back in her head, and then she went limp in my arms. She wasn't unconscious, but she was completely overwhelmed. She just convulsed in pleasure as the last of her conditioning kicked in, and she kept orgasming for the next ten minutes.\n\nI carried her to her bed, laid her down. Grabbing all but one of her pillows off the bed, I shoved them under her ass. Tilting her so she kept my sperm in her, flowing into her cervix to find the egg that she knew she had dropped. Smiling at the thought of watching my stepsister's belly swell with our first child.\n\n \n"
    ],
    "authorname": "PreacherPorn",
    "tags": [
        "stepbrother stepsister",
        "stepson stepmom",
        "bondage",
        "bdsm",
        "nonconsent",
        "first time",
        "spanking",
        "slut training",
        "orgasm control",
        "mind control hypnosis"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/trophy-wives-school-rachelle-pt-03"
}