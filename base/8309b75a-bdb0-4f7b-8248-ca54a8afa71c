{
    "title": "Milly Scott Pt. 04: The Artist and The Troubleshooter",
    "pages": [
        "This is the continuation of 'The Artist and her young lover'. It will make little sense unless you have read the previous parts. For the sake of consistency it should be titled: The Artist and the Trouble-shooter, but, too many characters! \n\nTo Recap - Milly's wife, a police officer, is killed and her friend's daughter, Fiona, comforts Milly through her grief. The following year Fiona decides to study at university, near to Milly's home and spends a lot of time there before they discover their love for one another despite their age difference. University is finished for Fiona and they are about to make some big changes in their lives. This part covers the next few years of their lives. \n\nThere is no tragedy in this story. There is also some mild bondage and all sexual activity is consensual. All the people involved are fictitious and are over 18. \n\nThank you to all of those who have taken the time to make a comment. They are very welcome. \n\nWedding \n\nAfter breakfast, we cleared the dishes, made another pot of coffee and sat together on the patio of Jess's house. We were alone now, but the others would be back very soon. \n\n\"Can you believe it, Milly? This time tomorrow we'll be getting ready and in what, twenty-nine hours we'll be married, partners, you'll be my wife. Something I've dreamed of for years. Are you okay?\" \n\n\"I was thinking that this'll be my third time, I'm more excited about this, more scared and there's something that makes me think that this isn't real. I need to ask you, and I promise that that'll be the last time I ever ask you. Are you absolutely sure that you want to marry someone so much older than you? I'd be devastated if you said no, but I'd understand.\" \n\nFiona fell onto her knees in front of me, \"Milly, please, I've thought of everything, I've been through it so many times. I've talked to Jane and Victoria. I can't help it, I love you so much, more than I did the first time we had that kiss. Living with you has been magical, wonderful; you've looked after and supported me so much. You make me laugh and you kiss like a, like, I don't know, wonderfully? You're also beautiful and sexy. I love us naked, stroking, touching, cuddling. I'm sure and have been for years.\" \n\nShe came and sat on my knee, usually, it was the other way round, but this was cosy. We kissed a little and she rested her head on my shoulder. \n\n\"Okay you two, cut that out, you need to wait another day. I know that you struggle to keep your hands off of each other you randy sods!\" \n\nFiona looked up and smiled at her sister, \"Oh how lovely to see you sister, what a nice greeting. You're just jealous that I've got my fantasy woman and you're a sad lonely spinster who's almost past her sell-by date.\" Fiona got a swat on the head for that. \n\n\"Bloody cheek, but I wish Milly had a sister.\" \n\nFiona was staying with her family and I was off to a hotel for the night. The hotel in which we'd be married the following day. I'd be pretty much on my own for a few hours. That was fine by me as I had something that I needed to do on my own before Susie and Isha arrived. \n\nAfter loading my bags into the car I headed across town. I parked, took a very deep breath and almost silently said, \"Courage girl.\" I know what I'd told Fiona, but somehow I felt that I had to give them one last chance, maybe one last chance to insult me. \n\nI wish I could say that I strolled up the garden path, but it was more a hesitant walk. I saw the curtain twitch as I rang the bell. My mother opened the door and I got a shock, she seemed to have shrivelled and her face was sunken. I heard my father shout from the distance, \"Is that her? Tell her to leave us alone.\" \n\n\"Hello, mother. I'm back in the area and decided to call to see how you both are?\" My knees were knocking. \n\n\"Come into the hallway so that the neighbours don't see the shame that you bring to this house.\" I stepped inside but made sure that the door did not fully close. \"What do you want?\" She didn't look friendly. \n\n\"What does she want?\" My father was still not in sight until I moved slightly to my right; he was in a wheelchair and looked as ill as my mother. \n\n\"I wanted to say hello, tell you that I was still alive and to see how you are.\" \n\n\"We're as well as we can be. Are you still a sinner and deviant? A pervert?\" \n\n\"I'm still a lesbian if that's what you want to know, but I'm not a pervert or a deviant.\" \n\n\"In that case go away before you bring more shame on us.\" There was anger in my mother's eyes and spittle forming at the corner of her mouth. \n\nI turned with my head held up and walked back down the path. I saw curtains twitching in the houses on both sides and turned to wave at both. I got into my car and drove off as the anger built. I'd known that it would be like this, but at least I'd given it another try. I didn't cry and my anger subsided, it was a waste of effort \n\nI checked into the hotel and had just finished unpacking when there was a knock at the door. \"Isha, Susie how nice to see you both and how nice of you to come.\" \n\n\"Hi, a free break and a party, why would we refuse?\" Susie grabbed me in a big hug. Isha stood back until Susie let me go and then she grabbed me as well. \n\n\"How're you doing? How's Fiona?\" \n\n\"I'm good, nervous, but good. Fiona's great. Better than me and this isn't my first rodeo. Do you realise that when I married Jenny, Fiona was one of my bridesmaids?\" \n\n\"Yes, we did and we talked about it in the car. Does it matter? You two are nuts about each other. Jenny liked Fiona and Jane.\" Susie smiled at me, \"I knew Jenny from when we were toddlers. There was always something about her that never seemed, I don't know, complete. After she found you that day she changed and became more withdrawn. Then that night in the pub she changed again, she came to life and when you became a couple I saw a new person, one that I liked more.\" \n\n\"Susie's right, Jenny became someone else after you got together. She loved being with you and the kids. But then her life was cut short,\" Isha paused, struggling to continue. She took a deep breath, \"She loved you and would want you to be happy, we all do. What you're doing is brave.\" \n\nIsha held me tight and whispered, \"You've been lucky to find people to love you, I live in hope that some of it might rub off on me.\" \n\n\"What about you Susie, any good looking guy in your life?\" \n\n\"Sleaze bags, that seems to be all I can find. Only ever after one thing. Best date I've had in a while is with Isha today!\" \n\n\"Don't get your hopes up, girl!\" \n\nWe went to dinner together and chatted for a couple of hours. It was good to see some faces from home, or at least what had been home until a couple of weeks ago. \n\nLater that evening Alan, my Vicar friend, appeared and sat with us. \"I'm so happy that you agreed to attend Alan, it means a lot to me.\" \n\n\"You mean a lot to me, Milly, it will be an honour.\" \n\nI told him about the visit to my parents and his head seemed to get heavy. \"I prayed for you my girl, but I prayed for them as well. The tragedy and joy that you've faced would be a trial for anyone, but to know that your parents disowned you is hard to understand. God cares for people and forgives, he doesn't preach hatred.\" \n\nI slept well and we all ate breakfast together before we went up to my room. Isha and Susie had agreed to act as bridesmaids, even though I thought that one was more than enough. Then Susie had suggested that as Jenny's friend she could give me away and that Isha could do the more formal bridesmaid thing. I liked that idea. \n\nOne of Jess's staff came to fix our hair and make-up and then I got dressed. This time the dress was pale grey silk with a lace overlay. It was just short of my ankles and there was a lot of material in the skirt. The sleeves were just lace, the bodice was close-fitting and it showed a modest cleavage. Nude stockings, grey silk underwear and a pair of ridiculous grey high heels. My hair was loose but held clear of my face by a narrow grey hair-band. Pearl earrings and my strand of pearls completed the outfit. \n\nRather than walk down the aisle separately, we met at the back of the room. Fiona wore a traditional white gown with lace and beads. It had a small train and a long lace shawl over the train. It had long sleeves with lots of pearl buttons; I silently tittered to myself as I thought that the dress might take some time to get off again later. Her hair was up, she too wore pearls and her heels must have been pretty high because she was still an inch or two taller than me. She looked stunning and I noticed Jess beaming. \n\nVictoria was on Fiona's right and Susie on my left. Isha and Jane followed us and by the time that we were halfway down the aisle, we were already holding hands. When we reached the front Fiona leaned towards me and whispered, \"I've waited years for this day, I love you so much.\" \n\nThe Registrar did her stuff and then invited Alan to speak. \"I've known these two fine people for a few years now, they're my friends, and although neither of them is churchgoers they both have faith. When I offered to bless their union they agreed without hesitation, so please stand for a moment.\" \n\nAlan offered up a prayer and a blessing that were simple and rather beautiful. It made me feel that this was all real and so right. \n\nI turned to kiss Fiona and looked into her eyes, I saw the love and I knew deep down inside me that she meant more to me than anything or anyone. We kissed daintily and I heard Jane mutter, \"For goodness sake, that has to be the chastest kiss you two have ever had.\" It seems that almost everyone else heard it as well and there was muted laughter. I agreed with her and I put my hand to Fiona's cheek and she did the same to me. We kissed; it was like that first one, the night that Pandora's Box opened. They were both special, even if they were nothing like most of those that we usually had; but then, we were standing in front of quite a few people. Pandora's Box was still open and I had no desire to close the lid. \n\nIt wasn't a huge party, a nice meal and some dancing, no speeches. Lots of alcohol and a few laughs. I danced with Fiona a lot of the time, we held each other, gazed into each other's eyes with dreamy looks and I kept thinking how lucky I was. \n\nI danced with Victoria and Jess; who were both lovely and wished me well. Fiona spent time talking to Karen, no doubt about work. Isha and Susie meanwhile tracked down every male in the area to dance with. I caught up with my sister in law near the bar, she looked sad and I dragged her up to dance. \"You got rid of your sister, why so sad?\" \n\n\"I'll miss her; I've missed her since I went to Uni. We were together for a long time, and she got you. I always knew that was on the cards.\" \n\n\"You never felt the same as she did though?\" \n\n\"No, I was too slow Milly, she got there first. She got there a long time ago.\" \n\nI nodded. \n\n\"But I don't think she really knew at first. She's loved you for a long time.\" \n\n\"Well I love you too and you're always welcome at our home, wherever that may be, and I'll always be there for you, anytime.\" \n\n\"Thanks, Milly. I love you too, but not the way she does. She's so in love with you it scares me. Go get her.\" \n\nAfter the guests had all left we headed for our room, the one that I'd left that morning as a single woman and that I now returned to as a married woman with a wife half my age. Fiona had changed me and today we'd done what a few years ago I thought was impossible. \n\nI was right; it took quite a while to undo all of those damn buttons. Our lovemaking that evening started gently, softly and slowly. Then suddenly we changed gear and it became frenzied and urgent. It was raw, fast and very satisfying. I fell asleep in the arms of my wife and lover. I was content. \n\nHoneymoon \n\nAs we didn't need to borrow any money from Jane for the house she'd decided to send us away for our honeymoon as her wedding gift. She'd booked a villa in Crete for us and it looked lovely in the pictures. \n\nIt was lovely in reality; a pool, patio, close to the beach and some great restaurants. We tried one restaurant in the evening that we arrived. It was great, but I have no memory of very much except the very beautiful woman sitting opposite me. \n\nWe went to the local shop the morning after we arrived and stocked up on food and drink. Aside from a walk on the beach, we closed the door and didn't leave the villa for three days. The two of us were together, alone and in love. By the second day, we'd dispensed with clothes. I doubt if we were out of touching distance for more than a minute or two in those three days. \n\nAfter a few days, we went for walks and swam in the sea, but we were alone. \n\nI'd been tied, blindfold, to the bed for most of the afternoon and I knew that the door was open because I could feel the breeze. I could hear the waves gently breaking in the distance. I felt lots of things, excited, nervous, wanting, sexually ready, worked up and desperate, desperate for Fiona to come back to me. She was sitting only six feet away watching me, but of course, I didn't know that. \n\nShe'd made me come several times when we started this game. Game? It wasn't a game - she'd fucked me with a strap on, long and hard, then suddenly nothing, nothing, for a while. Then stroking with something, a feather perhaps? It started at my feet and covered every inch of my body and I was so wound up that it felt as if the only parts of my body touching the bed were where my hands and feet were tied. I'd agreed to this, it was something that we'd done before, many times, but this time the feelings were more intense and special, this time I'd agreed to anything that she wanted. I wanted everything, anything, something! \n\nThese restraint and teasing games were things that I'd never done with anyone else, never thought about doing with anyone else, but I loved being at Fiona's mercy. I loved it because she loved me and she took me to places that only exist in your head. I'd played with her as well, but I wasn't as good at it as she was. Right now I wanted something, anything. \n\nI felt movement at my side and then she bit my nipple, not hard enough to cause damage, but it hurt and it turned me on. The surprise was what amplified its effect and when she bit the other one it wasn't as bad, but still glorious in its effect. She held ice cubes to my nipples, they were cold, painful and she kept them in place, I screamed, it hurt and it was lovely. I thought about asking her to stop, I have no idea why because I didn't want her to. Something hard was touching my clit and then it started to move, oh shit! It was a vibrator and that was going to be something else. Fiona knew exactly what to do, how to touch me, where to touch me and for how long. I came over and over again, then she stopped and I swore at her. \n\nI felt her close to the side of my head and heard her ask, \"You okay?\" I nodded. \"Want to stop?\" I shook my head. \"Are you sure because this might get intense?\" How much more intense could it get? I might go out of my mind. I nodded. I wanted whatever she was going to do. I felt her move and nothing, again! I yelled at her. Nothing. \n\nI could hear her moving, nothing else and then something soft touched the middle of my belly and I jumped. She stroked me all over, softly, slowly, with her hands, but not with her hands. It took me a while to work out that her hands were covered in stockings or something that felt like that. It was driving me up the wall. I wanted more; I wanted her touching my lower lips. Nothing. Then she kissed me and lay on top of me. I was in heaven but wanted to hold her so badly, I couldn't and I knew it. The desire, the need to hold her built and built, knowing that I couldn't sent me spiralling off. I simply wanted to hold her, nothing else and it was driving me out of my mind, not that my mind was in a normal state anyway right at that moment. \n\nShe stopped kissing me and moved. Then she started kissing me again between my legs, she stopped before I came. Nothing. \n\nSomething on my belly, liquid, sticky, then something else. Something metal and when she touched it against my lips I realised that it was a spoon, I opened my lips, a strawberry and chocolate. I chewed, she'd spread sauce and strawberries on my stomach. A very warm feeling started to rise inside of me and I started to quiver. She fed me more strawberries. The feeling inside of me built and Fiona knew it, she touched the back of the spoon against my clit and I came, I came so hard I knew that I'd hurt one of my wrists as I'd snatched at the rope. I yelped. \n\nShe was there quickly. \"Are you okay? Something hurt you; I could tell from the sound you made, what is it?\" \n\nI could barely speak and gasped, \"My wrist, I jerked it, please don't stop, please don't stop, it's fine, please don't stop.\" I was crying because I thought that she'd stop. She checked again and I muttered, \"More, I love you.\" \n\nShe cleaned my belly with her tongue. I loved being licked and this was so nice, so erotic. She touched me with the spoon again and I came again. I felt her hair on the inside of my thigh and I felt her close her teeth. A love bite, I hate love bites, so tacky. Oh, how wonderful that she was biting me and it was so good. It was going to be a good one. \n\nFiona knew that I didn't like them and came up to my ear, \"You know what I just did?\" I nodded. \"Right at the top of your thigh, a big one. You hate them don't you?\" I nodded. \"I could give you another one on the other thigh.\" I nodded again. \n\nShe bit the other thigh, same place, same pain, so good. She stopped and asked, \"You okay?\" \n\n\"More, please.\" \n\n\"More what?\" she sounded puzzled. \n\n\"More of everything; more bites, more kisses, more touching, anything, just more.\" I was lost, I just wanted her. \n\nShe bit my thigh, lower down and then the other one. I was disgusted with myself and I wanted more. She bit the side of my left breast and then she stopped again. \n\nI felt her release my ankle and then the other one and she rolled me onto my stomach. My arms were taut as they were now the wrong way round, she swapped them over and tied them off close to the headboard. She tied the rope that had been around my ankle around the knee and then the other one. She then tied those ropes to the headboard so that my legs were under me and my backside was sticking up and my lower lips exposed. \n\nShe kissed between my legs and teased my ass with her tongue and then she stopped again. I was puzzled and knew that I wanted something, pain or pleasure, but nothing was killing me. \n\nI felt her move on the bed and she rubbed my lips, lube? What did she need that for I was dripping? \n\nThen I felt it, oh lord, the strap on again. She moved slowly and I felt it filling me, stretching me making me strain and whimper. Oh no, oh no, I couldn't stand this, but I shoved myself backwards with all the force that I could muster, it filled me and I knew that it was all inside me. It felt good. \n\nFiona leant over and whispered, \"Are you okay?\" \n\n\"Are you going to fuck me with that?\" \n\n\"Yes. Okay?\" \n\n\"Well get on with it and make a good job of it. I need it, now!\" \n\nShe fucked me! I have no idea how long for or how many times we came and I didn't care. It was so very good. \n\nFiona woke me up with gentle kisses. \"Milly, are you okay? Do you need a drink, the loo, anything?\" \n\nI was free and there was a light cover over me. \"A kiss, please.\" \n\nShe lay down beside me and kissed me. My eyes were still closed, but I felt her stroke me, so gentle. I purred. \"Are you okay, did I hurt you?\" \n\n\"No, it was lovely; can we do it again, soon?\" \n\n\"Really?\" \n\n\"Yes, but not today.\" \n\n\"All of it?\" \n\n\"All of it, just the same, maybe more. I love you.\" ",
        "The next thing I knew it was dark. Fiona fed me some pasta, one forkful at a time. She gave me sips of wine then she held me and when I went to hold her I yelped. I looked at my wrist, there was a bruise where the rope had cut into me and there was a pain, a slight sprain I suspected. \n\nFiona inspected it, \"It'll be okay, I'm so sorry.\" \n\n\"No, don't be sorry. It's okay, it must have been good, that should be the measure,\" I giggled, \"Next time we need to try to sprain both of them.\" \n\nI slept again for a few hours and then needed to use the toilet. I checked five love bites, two on the inside of each thigh and one on my breast. Ugly things I thought as I looked at them and then I started to get a warm feeling. Maybe I should always have one! \n\nI went outside to sit with Fiona where it was still warm on the patio, but very dark. She handed me a cold drink and I stared up at the stars. She was watching me and saw me smile. \"What are you thinking?\" She asked. \n\n\"How much I love you. I just saw two stars wink at me.\" \n\n\"I love you too, winking stars?\" \n\n\"Yes, I know what they are?\" \n\n\"What are they?\" \n\n\"One was Alex and one was Jenny, they're holding hands watching me.\" \n\n\"Have you lost your mind?\" \n\nIt was possible that I had lost my mind, but for the first time, I knew something special as I spoke, \"Maybe. Maybe this is the first time that I could think about them like this. I always worried about being unfaithful to them, about comparing one to the other, you to them. Now I realise that they helped me to be this way so that I could love you as I do. I'm sure that they winked at me, they're happy for me, I feel so good right this minute.\" \n\n\"Which one is which?\" \n\n\"That one there on the left is Alex and the one just over there is Jenny. They loved me and I loved them, now they've left me to you and I feel something that I've never felt before. That they still love me, they approve, they're happy for me, for us.\" \n\nIt's possible that I was crazy, but maybe not! \n\nWe walked on the beach the next morning splashing in the surf and fooling around. We didn't talk about the previous day until later that afternoon after we'd been in the pool for a while. I dried off, Fiona brought cold drinks and applied sunscreen to my back, whilst sitting behind me. \n\n\"Thank you for yesterday, it was insane, I loved it. I don't remember much of it, just the sheer pleasure.\" \n\n\"You're more than welcome, I loved it too.\" \n\n\"What did we do?\" \n\n\"Do you really, really want to know?\" \n\n\"Maybe, maybe not. You could tell me.\" \n\n\"I could show you.\" \n\n\"What do you mean, show me?\" \n\n\"Several times after we've played like that you've asked me what we've done because you were too scrambled up at the time to remember. I did something yesterday that you might be mad about.\" \n\nI looked up, what had she done? \"What, tell me?\" \n\n\"I set up a camera.\" \n\n\"What?\" \n\n\"I set up a camera so that you could watch if you wanted to.\" \n\n\"A porn film? Now I'm a porn star?\" \n\nShe laughed, \"Well you could be, I'd pay to watch it, but no. No one will ever see that film and I plan to give it to you, if you want to watch it you can and if not you can get rid of it.\" \n\nI wasn't sure if I was embarrassed or angry or both. \"Get it now!\" \n\nI watched a few moments and turned it off. \"Shit, I want to watch it, but I can't. I'm nearly fifty and I'm spread out on the bed with my, with my, my, oh shit, my pussy wide open! Put that away you filthy pervert.\" \n\n\"But you love me, don't you.\" \n\n\"Confident little bastard aren't you? Yes, I do, come here.\" I hugged, kissed and we lay together. \n\nThe next few days passed quietly, walking, swimming, visiting restaurants, but mostly it was the two of us together by the pool, reading, hugging and yes, we spent a good deal of time having sex, gentle sex. \n\nThere was an afternoon shower, one of those days when the rain came, a pain for sun worshippers, but welcome for the locals who needed the water. I smiled to myself and thought that this would be the chance to undertake some torture experiments on my new wife. But no, she had something to do in relation to the University and needed an hour on her laptop. \n\n\"Give me your tablet.\" Oh maybe it needs an update, thank goodness I'm married to a computer geek. She handed it back to me, \"I've loaded a file, see, here. You might want to watch.\" \n\nI walked away stunned; there's no way, could I? \n\nWatching myself being tied to the bed was a shock, the fact that I allowed it willingly and that I was spread so wide, so exposed, so lewd, made my breath come in short gasps. It was a record of events, there was nothing artistic about this. I watched as Fiona fucked me, teased me and then I realised where my hand was, I had several fingers inside myself and I was turned on. I'd rarely played with myself since Fiona and I became lovers, in fact, I don't think that I'd ever done it by myself. I had when she was with me, it was one of those things that she liked to do, to instruct me, guide me and watch. I liked to do it; it disgusted me to think about it afterwards, but not when I was doing it. \n\nWhat was happening on the screen disgusted me as well, but I couldn't drag my eyes away. I'd been watching for about an hour when I came, then I realised that Fiona had been watching me, although I had no idea for how long. \n\n\"What do you think?\" \n\n\"I'm disgusted with myself for doing it, for watching it, for being turned on by it.\" \n\n\"But?\" \n\n\"But I want to watch the rest of it, just not now, I can't. This time I want you there with me, watching it with me.\" \n\n\"Is that all?\" \n\nI looked at her with my eyes down, \"No, I want to do it again, it's filthy, awful, degrading, but so bloody good. I want more, I'm sorry.\" \n\n\"Don't be sorry. I love you, doing that with you was wonderful, seeing the pleasure that you get. It's not me doing it to you; it's me doing with you, for you.\" \n\n\"Don't you get frustrated, me having all the pleasure?\" \n\n\"No, it's strange, I feel so satisfied, fulfilled, me coming is immaterial. In any case, I know that you'll love me later. I don't know what else I can do though; I don't want to hurt you.\" \n\n\"Fiona, you hurt me now; the ice, the clamps, the ropes, they all hurt, but it's a good hurt, makes no sense I know. Think about it and we can talk, maybe when we watch more of this porn!\" \n\nI lay awake that night thinking about the sex, the bondage, what we did. I spoke to myself, \"Let's face it, Milly, you love it, you want more, no point in being disgusted, Fiona and I are the only ones who know what we do. I'm not a slut; I'm just prepared to try anything with her.\" I fell asleep. \n\nAfter showering the next morning I inspected my love bites. They were almost gone now; good, I thought, I don't like them. Then I looked at myself in the mirror and came face to face with a liar! \n\nThat afternoon when I got out of the pool I sat on the edge with my feet in the water, put on my best 'little girl lost look' and said to Fiona in a whiny voice, \"Please can you give me a love bite.\" \n\n\"Really? Where?\" \n\n\"Inside of my thigh, left I think this time.\" \n\n\"This time? You hate them.\" \n\n\"This time, and it seems that I don't!\" \n\nA couple of days later it rained again and we watched the rest of it. There was a great deal of time when nothing much was happening when she'd left me alone, wriggling and desperate for something. We fast-forwarded through those bits. Most of the time, as we watched, she had her fingers inside me and was kissing my breasts. I was so randy, so horny I thought about what I was doing and realised that I wanted this so much, I was being wanton both on the screen and right there on that couch. I wasn't disgusted; I'd enjoyed it and asked for more. By the time that we got to the end, I was so worn out that I had to make Fiona stop touching me. I slid onto the floor, using my fingers and tongue I made her come many times. I don't know what that made me, what name I deserved, but it felt good. \n\nI'd loved our honeymoon, not just sex. The two of us being together was the good part. Just being able to touch each other, to talk or kiss, I loved this girl so very much. We had great tans and felt rested. That was good because now we had to create a home, our home and Fiona had to start her new career. \n\nNew home \n\nJane collected us at the airport and drove us to our new home. \"How much did they get done?\" I asked. She'd kindly agreed to supervise the decorator's whilst we were away. \n\n\"It's all done, they finished a couple of days ago and the bedroom carpet went in two days ago. All of your clothes are there on temporary rails.\" \n\n\"Really, all of that?\" \n\n\"And more, but wait 'til we get there.\" \n\nJane handed Fiona the keys as we walked to the door. Of course, after opening it Fiona had to pick me up and carry me in, me fighting her off whilst Jane laughed. It looked bright, clean and very bare. Jane took us into the kitchen and opened a cupboard. \"Tea, coffee, sugar, bread. Eggs, milk, butter, bacon etc in the fridge, enough for breakfast. Follow me.\" \n\nThere in the bedroom was our bed, she'd assembled it and made it up. There was nothing else except a bedside light sitting on the floor. \"I thought that you might want your first night home to be here, so I got it ready. There are toiletries in the bathroom and a pile of new towels.\" \n\nI went over to her and took her hand, \"Damn it, I think I've screwed up and married the wrong sister. Thank you so very much.\" I hugged and kissed her. Fiona came up beside me and took Jane's hand. \n\n\"Thanks, sis, I love you. You know that you're always welcome here don't you?\" \n\nI nodded and added, \"Always.\" \n\nThat first night we went to bed early. For a long time the two of us lay facing each other, just looks and gentle touching. It was ours and we were married. She was beautiful, I was lucky. Then her hand sneaked between my legs. She stroked my pubic bone and slid a single finger between my lips and inside me, she rubbed gently and I lay back and let her do her thing, it was what I wanted, needed. I was climbing higher and higher, and then she moved and licked me and kissed me. I came with a rush. She let me down easy, came back up to hold me and kiss me. \n\nAfter a few minutes I spoke, \"Thank you, now my turn to play. I need this.\" \n\n\"Milly I need you very badly. Don't play nice, please.\" \n\nI slid down under the sheet and played with my fingers around her entrance and one at a time I slid them in, massaging her as I did so. I started moving more quickly, more forcefully and I heard her groan, I knew that sound, it was one of wanting and desire. I moved more urgently and kissed her clit at the same time. I was going faster and faster. I reached up, grabbed one of her breasts and pinched her nipple. She let out a scream as she came and grabbed my hand to stop me from withdrawing holding it in place. A few minutes later she turned and looked down at me. \n\n\"Milly that was wonderful, thank you. Could you do it again, please?\" I was happy to oblige and this time there was no pretence that this was anything else other than a good fucking with my fingers and tongue. She screamed for me to stop, I looked up at her. No, she'd said don't play nice, so I kept going more forcefully still and when she came this time I held her and whispered how much I loved her. \n\n\"I never knew. I never knew that it could be like this. Thank you so much.\" She was done and held me as she fell asleep. I rested my head on my new pillow and looked at the ceiling. I never knew that it could be like this either. \n\nThe next few days were a bit crazy. Furniture started to arrive, the stuff that we'd brought from Rose Cottage and the new sofas, beds and wardrobes that we'd ordered. It took a while for us to get our things organised. \n\nThe walls were bare and we needed artwork but that would take a little longer. The house had a dining room in addition to the large open plan kitchen, dining, sitting area and we'd decided that we didn't want a dedicated dining room that wouldn't get used very often. I bought a couple of bookcases, desks and chairs so that I could create a study. I'd let Fiona work out what she wanted in the way of gadgets, that was her area. I set up my easel so that I could work and her keyboard for when she wanted to play. \n\nThere was a large bare wall opposite the door of the study. I bought a pile of frames of different types and mounted some of my work, pictures of the two of us, Jess and Victoria, Jane's graduation and a lot from the time that the three of us, Jane, Fiona and I, had spent together in the Lake District. That evening I showed Fiona what I'd done and asked her one more thing. \"There are two more pictures that I'd like to add, would you mind?\" I pointed to two frames leaning against the wall facing it. She went over and turned them both around. They were sketches that I'd done, one was of Alex and the other was of Jenny. \n\nShe came over to me and stood facing me, taking my hands in hers she simply said, \"You told me that they'd made you the way you are so that you could love me. They were a part of your life Milly, no point in denying that or trying to forget them. They'll always be welcome in this house.\" I held her close, what a lovely girl. \n\nWhen I hung them I placed them in less prominent positions, they were important memories, but no longer the centre of my life. I offered up a small prayer for them. \n\nOf course, Fiona was only around for a few days before she started work. On her first morning, I was up before her and was making her coffee and toast as she came into the room. My hand flew up to my mouth. She wore a dark blue two-piece skirt suit, with a white collarless blouse, dark blue hosiery and navy heels. Her hair was fastened back in a hair clip, modest jewellery and light make-up. I wish that I'd been wearing pants under my robe because I felt myself getting wet. She looked every inch the executive, she looked beautiful. \n\n\"You look stunning, beautiful. Is that a bit OTT?\" \n\nShe grinned at me, the lopsided, cheeky one. \"Probably, but first impressions count. Like it?\" She twirled. \n\n\"Drink coffee, eat toast and go quickly! Hang about too long and you'll find me dragging you into the bed, onto the coffee table, the floor or somewhere.\" \n\nI got dressed and did stuff around the house until 11 am when the doorbell rang, it was Jess. \n\n\"Coffee?\" \n\n\"Hi, Milly. Yes, coffee please, I brought pastries for us. Thanks for the photo, didn't she look something?\" \n\n\"She certainly did and it was all I could do to let her go. She also reminded me of Victoria a little bit, smart, sophisticated and confident. Except that she was using the clothes to cover up the fact that she didn't feel any of those things.\" \n\nWe chatted for a while. It was great to see her and start to establish a new relationship. \n\nI spent that afternoon cooking. I'd not done very much for a few weeks and it felt good. I laid the table and waited for Fiona to come home. \n\nShe bustled through the door, buzzing with excitement. She grabbed and kissed me, one of those long languid, crazy kisses that could cause a heart attack. I thought of throwing cold water over her to calm her down as she was itching to tell me about her day. \n\nI served food, poured wine and sat listening. I studied every inch of her face, every gesture, every raised eyebrow, curl of the lip. I fell in love again, right there in our home. This was what I'd dreamed of for a long time, but never expected to be a reality and yet here it was. \n\nGraduation \n\nFiona and I were driving north, a journey that we'd done many times. We sang along to music and she told me stories about the people at work, inventing backstories for some of her colleagues. We reached Windermere mid-afternoon and checked into our hotel. \n\nI went to see John and Mary, Jenny's old friends. Then we both went into Ambleside to see Ben and Alan. It was good to catch up with them and I felt a small sense of loss, I'd lived there for a long time and as happy as I was, part of me missed the place and these people. Isha and Susie joined us for dinner. Susie was still hunting down single men. Isha was a little reserved and then it all came out in a rush. She was dating a solicitor a few years older than herself, a female solicitor. Her family were horrified, not only was she dating a white person, again, but a woman as well. It eventually turned into a fun evening and the two of us were smiling as we headed upstairs to our room. \n\nI dropped Fiona at the University early the next morning and headed to the railway station to collect Jess, Victoria and Jane. \n\nWe arrived at the hall where the presentations were due to take place and took our seats. There were a few speeches and we could see Fiona sitting with the others from her course. Then one by one they were called forward to be presented with their awards. We clapped everyone as they went forward, but we got carried away when Fiona went forward. Jess and I stood holding hands and when I looked at her I noticed that we had matching tears. The pride was ripping from both of us and as I looked over at Jane she was hugging Victoria. I think they both had tears as well. I'd promised to look after Fiona and to help her, I'd done both and I was overjoyed for her. \n\nThere were lots of photos, plenty of shaking hands with friends and staff from the course. There were also some sad farewells, people who'd come together to learn were setting off on their journeys in different directions and most of them would never meet again. Gerry stood with us for a few minutes and shook all of our hands. He mentioned that Fiona was one of his star pupils and she had the good grace to look abashed. As he was about to walk away I grabbed his arm, gave him a huge hug and kissed his cheek. \"Gerry, thanks for helping Fi and give my love to Tom.\" \n\nWe headed for lunch and toasted Fiona before we set off back home. It was a decent drive and five of us in my car made it cosy, but we chatted, sang and let our hair down. \n\nI was worn out by the time we reached our bedroom. I was pulling the duvet up when Fiona came into the room; she was naked and gorgeous but had her hands behind her back. \"So what are you hiding? Vibrator, strap on, ribbon, what?\" \n\nShe sat on the bed beside me and leaned over to stroke my face. \"Thank you. You've supported me, helped me and loved me. You made that ceremony possible for me today, because of all that you did and you know how important it was to me. So thank you. These are a little something from me.\" She handed me a small jewellery box. \n\nI took it in one hand and as I brought the other hand to it I trembled a little. I watched her face as I opened the lid then I looked down. A pair of sapphire studs. The mount was minimal so that it was simply the two stones that were visible, two stones that were the most beautiful blue. I touched one with my finger expecting it to vanish. \n\n\"When I saw them I instantly thought that they matched the colour of your eyes and I was right. I liked the simplicity. They're not very much but ...\" \n\nI grabbed her and pulled her to me. \"They are very much, they're beautiful, I love the colour, the simplicity and the thought. Thank you so much, you're wonderful and I love you.\" She leaned in for a kiss and I put my hand up to stop her, \"Sorry, hold your horses.\" \n\nI inserted the studs and then turned to her, \"Like?\" \n\n\"Oh I like, they look beautiful. Now can I get a kiss?\" She got more than a kiss. \n\nI wore those earrings every day for weeks and then at least a couple of times a week for years. I loved checking them. I did, accidentally, find out how much she paid for them, no wonder they were so gorgeous! \n\nFiona had been away overnight, something to do with work. I'd been busy the previous day, but today I couldn't seem to find the motivation to do much. I read for a while, tried sketching and even arranged some flowers. I cooked and set the table, with flowers and candles, and then I went to change. Normally I would pick something smart, but we'd played at dressing a little differently and tonight, I decided, was to be one of those occasions. I'd found a very short, flared pink skirt which just, and no more, covered the tops of the pink stockings, worn with a suspender (garter) belt. I slipped on a pink blouse, the cuffs of the sleeves were tight fitting for a few inches because they contained lots of elastic, it wasn't sheer, but almost, so it didn't much matter that it was close-fitting and low cut. I fastened my hair up and did my makeup. As I applied some blusher I opened my blouse and brushed some around my nipples. ",
        "I checked the mirror, wow, okay I did look slutty, but not bad for a woman fast approaching fifty. I hope to God she doesn't bring anyone home with her. I slipped on my heels; these were new as well, pink and tall! \n\nI was leaning against the worktop when I heard the door. I sipped my white wine and heard bags dropping. Fiona's head peeped round the corner of the door and she gasped. \"Fuck, Milly you look...\" She didn't seem able to finish. \n\n\"Sexy, slutty, gorgeous, ready, randy?\" \n\nShe nodded, \"All of the above. What's doing?\" \n\nI walked over, although in those heels it was something quite sexy and walking seemed, well, an inadequate way to describe how I moved. \"I missed you and wanted to give you a present. Maybe you can unwrap it later, after dinner.\" \n\nShe took me into her arms and kissed me, it took a while before she spoke again. \"I'm only hungry for one thing and that is not food!\" \n\n\"Too bad, I've cooked for you and you will eat. Go and change.\" \n\nWe sat opposite each other as we ate, gazing at each other. It had been more than four years and she still made me melt and did things to me sexually that should be classified as dangerous. She told me about her trip and had clearly learned some things that would help her. \n\nThen she looked at me, \"Did you two-time me with my namesake, last night?\" \n\nI smiled, \"Oh no. She's been a bad girl and I've cut her off!\" \n\nShe raised an eyebrow instead of asking a question. \"It's a stamina issue, flat batteries!\" She laughed. \n\nWe cleared the table and I think that she wanted to head for somewhere comfortable; I could see what she had in mind. Too bad, I was driving this. I hopped up onto the worktop and found the granite a little chilly with a bare backside, no panties of course. She stood in front of me and I put my hands to her cheeks. \"You know how I feel about love bites?\" She nodded, \"Well I need one, right now.\" \n\n\"You don't like them, too tacky.\" \n\n\"Maybe?\" \n\n\"Where?\" \n\n\"Inside left thigh, high as you can go.\" \n\nFiona stared at me as she moved my skirt back to reveal that apart from the stockings I was naked below the waist. She ran her fingers over my breasts, they were very erect. She slid her hands down my thighs and then to my knees which she separated and then moved back upwards. \n\nShe knelt down in front of me and broke eye contact. Then she ran her hands to the spot that she was headed to and looked down. She jerked back and looked up, \"Fuck, what's that?\" \n\nShe looked again and I could see her smile. She touched it with her fingers softly and then looked up at me. \"Milly?\" \n\nThe day before I'd gone to a tattoo artist and with all of the courage that I could muster I showed her what I wanted and told her where I wanted it. It was the outline of a small heart, in red, with a letter F inside it. The whole thing was about the size of my thumbnail. It was as high on the inside of the leg as it could be and would be invisible unless I was displaying myself as I was right then. \n\n\"I always thought that love bites were tacky, and then somehow on honeymoon, I realised that when you'd made them, they were okay. I wanted something more, something permanent and I realised that I would have to do it for myself, to myself, so that it would show that I was yours.\" \n\nShe studied it again and looked up. \"I should hate this, hate that you marked yourself, hate it because it's, well, slutty,\" I held my breath. \"But I love it and I'm so flattered, honoured and right now I don't think that I've ever been so turned on.\" With that, she drove her tongue into me. It took no time at all for me to come. After a moment to collect myself I grabbed her hand and hauled her to the bedroom. I pulled my blouse off and threw myself onto the bed, \"Get naked now and get the toys. I want you so badly, hurry up.\" \n\nShe was fast and threw herself on top of me and we kissed for a long time. Kissing was amazing and it made me hot and needy, but fortunately, I had the very person to help with that problem. The finger fucking that she gave me was brutal and fast, she made me gasp and I tried hard to grab her nipples. I took a moment to gather myself and looked at her. \"I want you astride me so that I can tongue you.\" \n\nFiona moved over and put her knees either side of my head, then lowered herself onto my tongue, she moved her hand to hold the headboard and gyrated her hips. I kissed, bit and probed her. I poked at her ass with a finger and she took over and used me, with a force and a vigour that disregarded me underneath her. It was just what we both wanted, what I needed. She tried to pull away and I grabbed her hips and managed to shout, \"No, not yet, please not yet!\" \n\nShe started again and came quickly, then twice, then a third and again she tried to pull away and again I held her and said, \"No!\" \n\nI lost all track of how long we were like that, but eventually, she collapsed next to me with a grin of satisfaction. She managed to mutter, \"Thanks love\" and she was gone. She'd given me so much satisfaction on many occasions; it was not often that I got the chance to do what I'd just done. I loved her and had loved that. I curled up and held her thinking, yet again, how lucky I was. \n\nScared \n\nI sat down with a cup of tea in this large room and closed my eyes. I felt the tears forming and the sadness grew. This house was wonderful; it was what I'd wanted. I was here with Fiona, also what I wanted, but it wasn't my little Rose Cottage. The place that I'd used as a refuge, where I found safety, where I'd made my home. Where I'd shared love, where I could walk in the hills, where I knew people. \n\nThis house was wonderful, but it didn't feel like ours yet. It didn't feel like home. I felt less secure. I didn't yet have places to walk, no job, only Fiona's family. Suddenly I was frightened and unsettled. \n\nI told myself that I was an ungrateful woman, I tried to tell myself that I had a lovely house that I would be able to make ours and that I had the person that I most wanted. 'Pull yourself together' I was telling myself as I heard the doorbell. \n\n\"Hi Jess, come in. Would you like tea or something else?\" \n\nShe followed me into the kitchen area and took my wrist. She turned me around and looked at me. \"Milly, what is it, what's wrong? Is it Fiona?\" \n\nI made her tea and we went to sit down. I told her what I had been thinking about and how stupid I felt. \n\n\"Milly, I'm not surprised. You found a safe place in the Lake District and made a life for yourself, then you uprooted yourself in a dramatic way and came back here without really having any choice because you wanted to be with my daughter. I bet she hasn't worked this out has she? \n\n\"Please don't tell her, it'll be fine.\" I paused and sniffed. \"Jess I'm not sure that you really understand even after all of this time. Fiona has me mesmerised, makes me swoon. I love her so much; I would do anything for her. It's not one way either, it's hard to describe, but I know how she feels with a certainty. I'll be okay once I get this a bit more homely.\" \n\nBy the time that Jess left an hour later, I felt much better and resolved to talk to Fiona. \n\nWe did talk for hours. It felt good to let it all out. Fiona hadn't realised, she'd been so wrapped up in her work. She loved me and we were together, I'd wobbled, but we had each other. \n\nCompany dance \n\nI found the shoes and bag that I wanted in the wardrobe in the spare bedroom. There were too many for our own room, but then I did have a thing for shoes. I transferred the things that I'd need into the clutch bag and walked back to our bedroom to finish dressing. \n\nI stopped in the doorway and gasped as I caught sight of Fiona. Her hair was fastened up in a sexy librarian style and her make-up was dramatic. She turned to look at me whilst reaching for the dress that was lying on the bed. Her underwear was fire-engine red with a strapless push-up bra that was doing a lot of pushing, a pair of almost see-through French panties over a suspender belt and nude stockings. Her red heels had an ankle strap and were rather high. She saw me and said, \"What?\" \n\n\"Bloody hell Fiona, this is a company dance, not the Moulin Rouge.\" I smiled at her, \"But I rather like it.\" \n\nShe stepped into her dress and turned to ask me to fasten it up. It was sleeveless and cut low to her breasts which weren't actually trying to escape, but they'd find it easy if they decided to make a run for it. It was ankle length but had a slit up each side to show plenty of legs and believe me there was plenty of legs to see. \n\n\"I don't want anyone to think that I'm just some geek spying for the boss.\" \n\n\"I very much doubt if anyone is going to think that. But what they might think scares me.\" \n\nI slipped off my robe and revealed that my pale green underwear was a little fancy as well and oddly apart from the bra, very similar to Fiona's. My bra was a little fuller, my stockings were nude, my heels were dark green, and they were higher than Fiona's and may cause me some issues if we were too late getting home. My dress was pale green silk, calf length, with a slit at the front. It had sleeves and showed rather more cleavage than I'd realised when I'd bought it. Fiona fastened the zipper and my string of pearls whilst whispering some things that she wanted to do to me later and she had some really great ideas! \n\nJane came to collect us and when she walked in I thought that she might have a seizure. \"Fuck. Are you two going to a dance or going on the pull, 'cause if it's the latter you'll succeed.\" \n\nWe walked through the doors of the hotel arm in arm and I counted at least two men whose eyes popped and maybe a woman as well. \n\nWe sat at a table of eight with three administrative staff and their partners, husbands. I was a little surprised that Fiona didn't want to sit with some of the programmers, but I was aware that many of them suspected her to be a spy for Karen. She'd told me that she felt more comfortable with these staff and they clearly liked her. I was sitting next to Alice who was the Admin Supervisor, \"I think Fiona mentioned that you used to be a PA, is that right?\" \n\n\"A rather long time ago. Just over fifteen years ago, although I've done a little temping in the last three years, not much.\" \n\n\"What do you do, if you don't mind me asking?\" \n\n\"I make a little money as an artist, but it was easier when I lived in the Lake District, a bigger market.\" \n\n\"Milly, I'm nosey so forgive me. The programmers and system engineers think that Fiona is a spy and they don't trust her. From what I've heard they realise that she's much smarter than most of them and of course she's Karen's prot\u00e9g\u00e9. I think that she's smart as well, in a different way. She gets on well with all of my staff and treats them nicely, takes an interest. You'll know that admin staff can make peoples life easy or difficult and Fiona's worked that out. Did you teach her that?\" \n\n\"Actually no, I didn't. You're right of course and so is she. Most of the time she's great with people, but sometimes she forgets that the rest of us don't really understand all the stuff that they do and it can frustrate her.\" \n\n\"Personal question, were you really at college with her mum?\" \n\nI laughed so loud the rest of the table turned to look at me. \"Sorry. Yes, she was studying hairdressing. I first met Fiona when she was eight or nine. She was one of my bridesmaids and to save you having to try and work it out, 26 years.\" \n\n\"You cannot be forty.\" \n\n\"Almost fifty.\" \n\nWe chatted away for most of the meal. I liked her a lot. \n\nAfter the meal there were some, thankfully, brief speeches before preparations were made for the dancing to begin. Karen came across to speak to me and we chatted for a few minutes before she had to continue to circulate. \n\nI decided to go to the toilet and was in a cubicle when I heard two women chatting. I didn't catch the first part of their conversation, but some of it caught my attention. \"... young woman in the red dress looks spectacular. Who's she?\" \n\nHer companion replied, \"That's Fiona, she's Karen's prot\u00e9g\u00e9 and some sort of real genius. Some of the guys suspect that she's a spy for management.\" \n\n\"Well, she's certainly stunning. Who's the older redhead with her, she's very striking as well.\" \n\n\"Ah, that's Fiona's wife and yes, I agree, she's gorgeous.\" \n\n\"Her wife, but she must be nearly twice her age.\" These two women were not being malicious just gossiping, but I'd heard enough and opened the cubicle door. They turned and saw me, their mouths fell open and they turned a lovely shade of red. In the brief moment of silence I checked them out, both in their mid-thirties, attractive and they were nicely dressed. \n\n\"Oh god, I'm so sorry.\" I expected her to faint at any minute. \n\nI went to wash my hands and replied, \"Ladies, don't worry about it. You were gossiping, it's what we do sometimes. I'm sure that you aren't the first people to have had that conversation tonight and I'd guess that you won't be the last either.\" \n\nI dried my hands and turned to face them. \"I'm Milly Scott, Fiona's wife. Why don't we head to the bar, I'll buy you both a drink and I'll answer some of your questions so that at least the gossip is accurate. They sheepishly followed me and we stood at the bar for about twenty minutes chatting. As I walked back to our table I had to try hard not to laugh. I'd wound them up and enjoyed myself. \n\nFiona had bought drinks for the people at our table and then excused herself to go and speak to someone. I chatted with the other women who confirmed that Fiona was not exactly welcomed by many of the programmers, but that all of the other staff liked her. \n\nI announced that I needed to dance and a couple of the guys at the table offered. That started things off and for the rest of the evening, I had no shortage of partners. Fiona also danced with lots of the guys and I suspected that she was trying to build bridges. The two of us danced a few numbers, but it was dangerous because I had to try hard not to ravish her. I was having great fun until I spotted Fiona talking to the piano player and had this fear that she was going to play. \n\nSure enough, when the band took a break she sat at the keyboard and played several numbers including a classical piece. She started to play 'something in the way she moves' and never took her eyes off of me. I glanced around and I think it was obvious to most people who she was playing for. She got a deserved round of applause and came over to me. \n\n\"Hi, gorgeous lady fancy a drink?\" \n\nI laughed, hooked her arm and we headed to the bar. \"What was that about?\" \n\n\"I couldn't help it and thought that it might break down a few barriers because lord knows, I'm not very popular.\" \n\n\"The admin staff like you.\" \n\n\"That's because I treat them like people and not as second class employees. Besides if you ever found out that I didn't treat them well, you'd kill me.\" \n\n\"Maybe not kill you, something much worse.\" \n\n\"What could be worse?\" \n\n\"I'd cut you off for a few weeks.\" \n\n\"You wouldn't?\" She looked worried. \n\n\"Don't try me.\" I concealed my smile. I doubt if I could cut her off for even a few days, it would be like self-torture. \n\nI managed to survive the night in those shoes and after removing them and the dress, crazy Fiona grabbed me by the waist and pulled me onto the bed. Two ladies in racy underwear would have made quite a sight. We kissed, hugged and that turned into some very vigorous sex. We gave and received without holding back and after an hour I called a truce. I was shattered and could take no more. I fell asleep half-clothed. \n\nWe were late in waking up the next morning and shared a kiss before I went to the bathroom. I started the shower and had just stepped in when two hands snaked around my waist and my ear was nibbled. I turned around to stare at her. \"I must be very dirty if you're going to wash me.\" \n\n\"Hmm, very dirty, but a quick rinse in here will clean up the parts that can be cleaned.\" \n\nWe washed each other. It took a long time because of all the kissing. We dried each other gently and held hands as we went back to bed. I held Fiona down and kissed her from head to toe as she wriggled and sighed. I shuffled around until was on top of her and I licked her as she licked me. We came together and I turned around again and snuggled up to her chest. \n\n\"I love what we just did, but having you in this position is almost as good as sex.\" \n\n\"I sometimes feel so satisfied and fulfilled when we're close like this. I feel like a love-struck teenage girl around you.\" We lay for another ten minutes as I listened to her heartbeat. Then it was time to move, we had things to do, but that was okay because I knew that I could have an early night and possibly some more kissing later. \n\nThe tree \n\nOur first Christmas together in our own home. I wanted it to be special and Fiona agreed, but then she agreed with almost anything I wanted. We sat one evening and talked about decorations, we settled on simple, stylish and modern, with lots of fairy lights. We had a few of them in the bedroom anyway. \n\nA trip to one of the garden centres that clear out almost all of its garden stuff and becomes a Christmas shop was just what we needed. Our trolley was laden when we reached the car. We had a tree, baubles, holly and lights, lots of lights. Oh, and a hula hoop. \n\nI told Fiona to go for a run on her bike and she set off to meet Jane. In the meantime, I stared at the large blank wall in the lounge dining area. I'd wanted to find a large piece of art for it, but so far we'd not come across the right thing. I started at one end and inserted a large hook, up high near ceiling level, from that I draped several sets of green lights, the small ones. Then I placed half of the hula hoop on the floor below it and started attaching the lights to it. By the time I'd finished and by using the hoop, I'd created half of a cone of lights to give a three-dimensional effect. I then created another four tree shapes of varying heights using red, green and white lights, but these were just flat against the wall. I added stars at the tops and a few baubles at strategic points. I stood back and killed the room lights. I clapped my hands together; it had worked better than I'd hoped. \n\nI was sipping some wine and staring at the box containing the Christmas tree components when Fiona and Jane returned. \"Jesus Milly, that's amazing. I couldn't imagine what it would be like when you explained it but, wow.\" \n\nJane stood staring at it and then took my elbow. \"Milly, amazing, it's incredible. You're so clever.\" \n\n\"Thank you, I'm pleased with it, but now I want to get this tree up.\" \n\n\"I'll scoot off and let the two of you put up your first tree in your new home.\" I looked at Fiona and raised an eyebrow. \n\n\"It would be a nice thing to do, just the two of us, but I'd like Jane to stay if you wouldn't mind?\" \n\n\"I knew that you two had a thing.\" Fiona sounded angry but gave me a smile and a huge wink. \n\n\"Go and shower. I'll put some chilli on to heat and get some glasses.\" \n\nThe two of them were back fifteen minutes later. Jane sipped her wine and stood close to me. \"Are you sure that I'm not intruding in this?\" \n\n\"I'm sure, maybe check with your sister. I owe you a lot; you've been there for us. I like having you around.\" \n\nFiona came over. \"I was looking forward to the two of us doing this, but Milly's right, you're special and it'll be nice to have you here.\" \n\nThe tree was about seven feet tall and made up of a pile of slats that were stacked up and threaded onto a central piece of round wood. Once it was put together, we spent ages arranging the slats so that it formed a tree shape. \n\nWe ate our chilli and drank more wine. Then we decorated the tree with baubles, tinsel and lights. There were lots of jokes, insults and stupidity as we worked away, just like old times. When Fiona balanced on a chair to add a star on the top, Jane tried to shake it, but the tree ended up looking great! ",
        "The three of us sat chatting, about work, Jess and Victoria, politics, sport, we covered lots of things. Jane decided to stay the night and headed for the guest room. Fiona and I headed for our room and when I climbed in beside her I kissed her on the cheek. \"I think the place looks great, maybe a bit different and thanks for letting Jane stay, I really enjoyed it. I like having her around again.\" \n\n\"The decorations are really great, a terrific idea. I liked having her here as well. Thank you.\" We kissed and cuddled for a while and then Fiona fell asleep. I lay watching her breathe and thought how beautiful she was. \n\nThe next day I made some small wreaths with holly and candles for the tables and a large wreath for the front door. There was one thing missing, but I'd fix that. \n\nSalon \n\nThe following day Jess and I were having coffee. It was the Monday morning before Christmas. \"I bet this week is going to be busy at the salon, all those women wanting their hair done in time for Christmas.\" \n\n\"We're packed, good for business, but Sheila my Receptionist, had to go into the hospital yesterday. It'll be a nightmare.\" \n\n\"Can't you get someone else or manage without?\" I had no idea. \n\n\"There isn't anyone, not that I trust, it means the staff need to cover. Not a problem when we're quiet.\" \n\n\"I could do it.\" \n\n\"Why would you want to be a Receptionist?\" \n\n\"You need help, I can help, and surely my old skills would help. I can sweep, answer the phone, take bookings, take money, make coffee.\" \n\n\"Would you do that, really? I'd kiss you if you did.\" \n\n\"I'll do it no problem, but let's leave the kissing thing to your daughter; she's really good at it.\" Jess laughed. \n\nI turned up at the salon early the next day. Smart blouse and trousers, modest heels, I looked good and I was excited. Jess and her staff showed what was needed and kept an eye on me. \n\nBy lunchtime, I was getting the hang of it. One of the staff muttered about needing a sandwich but having no time between appointments. I grabbed a pad and took orders. I was back half an hour later and made a fresh pot of coffee. That changed things in an instant, I was one of the team, even more so when I grabbed a brush and started sweeping up the hair clippings. The shampoo girl had been so busy that she'd not had the time for that task. I went home exhausted, but happy. \n\nThursday looked even busier and it would be a long day as well. I smuggled a large pot of soup, which I'd made the evening before, into the small kitchen. Just before lunchtime one of the staff asked if I would go for sandwiches again. \"Give me half an hour,\" I replied. \n\nI went around the staff, \"There's a tray of sandwiches and a pot of soup in the kitchen when you're ready.\" The box of doughnuts also went down well. \n\n\"Milly, do you want a full-time job? You've been a saviour this week, the staff all love you.\" \n\n\"Thanks, Jess. I've loved it more than I can tell you. Being around people, feeling useful and looking after the others is great. I'll help you out anytime, but not full-time thanks.\" \n\nChristmas day \n\nJess, Victoria and Jane arrived mid-morning and I greeted them as they came through into the kitchen/dining area. Victoria was the closest and I grabbed her and gave her a huge kiss on the lips. Her eyes opened in shock and I saw the others looking at me as if I'd gone crazy. I looked up at the ceiling. Then they spotted the large sprig of mistletoe. Next, it was Jess, then Jane. Fiona came over and pulled me underneath it and we kissed for about two or three hours or so it seemed before Jess came to separate us. \"Maybe we need to do something so that we can eat today. And I don't mean you two eating each other.\" \n\nIt was about then that Fiona pointed out my lights on the wall. There were lots of comments about how smart I was. I was really proud of myself. Jane regaled them with the story of the tree and how we'd had fun putting it up and decorating it. \n\nThere wasn't much to do, but Jess helped me whilst Fiona poured drinks. We sat chatting until Karen arrived. She was a little stunned when Jane kissed her until she spotted the mistletoe that she was standing underneath. \n\nThe food was great. We were all in good humour as we ate and drank. We discussed past Christmases, talked about our plans and hopes for the future. There was an exchange of gifts, small personal gifts, nothing extravagant. Being together was the greatest gift. \n\nIt was getting late when I looked around the room. Jess and Victoria were sitting on one of the sofas, Jess was resting her head on Victoria's lap and she was looking down at Jess with affection and stroking her hair. Karen and Jane were seated facing each other on the second couch, chatting away easily like the old friends that they were. \n\nI was seated on Fiona's lap in a big chair. I had my arms around her and my head resting on her shoulder. She was discreetly trying to slide her hand under my skirt. I wasn't trying too hard to stop her. This was what I wanted for Christmas, this scene, these people - my friends, family and lover. \n\nNew Year \n\nJess had asked me to help her with preparations for their New Year party something that they'd held for a few years and it seemed to grow each year. I'd not been at many of them but had really enjoyed the ones that I had attended. \n\nWe sent Jane and Fiona to the shops for the last minute supplies and when they returned they moved some of the furniture to create more space. Then we told them to go away on their bikes and give us some peace to work. Victoria was busy getting plates and glasses sorted out. She was singing along to the music that was playing and she looked up at Jess every few minutes. Jess would catch her looking and smile or stick her tongue out. \n\nI burst out laughing and the two of them stopped what they were doing and asked what I was laughing at. I was making sausage rolls and had to stop to wipe the tears from eyes, laughter tears. \"You two can't take your eyes off of each other, smiling, pulling faces. It's lovely, after all these years you're still mad about each other.\" \n\nJess stroked my arm. \"I fell for her so long ago and eventually we got together. I feel much more in love with her now than I did back then. But you're one to talk, you and Fiona are just the same. You don't need to tell us how you feel about each other, we can all see it.\" \n\nVictoria came over to join us and pulled us together in an embrace. \"It's true; I love Jess like crazy and have done for such a long time. I find myself looking for her all the time, just checking. When she smiles at me it makes me feel warm inside. Jess is right about you and Fiona; you behave just the same, it's sweet.\" \n\n\"I love the two of you. I have no idea how I'd have survived without you both, thank you.\" \n\n\"Just look after Fiona for me.\" Jess squeezed my hand and smiled. I nodded. \n\n\"Okay you two, enough idling, there's food to be prepared.\" Victoria slapped us both on the bum and laughed as she walked away. \n\nJess and I spent two hours getting stuff ready. When I stood back and cast an eye over what we had, I turned to ask how many people were coming. \"I'm not sure, twenty, twenty-five, we'll see who turns up.\" \n\n\"I hope they all have good appetites.\" \n\nThere were almost thirty people there by 10.30 pm and they'd made some impact on the food and even more on the drink. I knew many of them, some of Jess's staff, a couple of Fiona's colleagues, Karen, Victoria's assistant and their secretary and a couple of the neighbours. \n\nI was standing topping up my glass and one girl that I didn't know appeared at my side. \"Can I top you up?\" \n\n\"Thank you. I feel a bit lost here. I work with Jane and don't know anyone else.\" \n\n\"I'm Milly, Jane's sister in law. So now you know at least two people here.\" \n\n\"Pleased to meet you, I'm Natalie. I just moved here a few months ago and Jane invited me or I'd be on my own. She seems to have disappeared.\" \n\n\"She's mentioned you. I suspect that Jane and Fiona are planning what to play later.\" \n\n\"What to play, like games?\" She had a look of horror on her face. \n\n\"No, music.\" I smiled, \"Sometime after midnight they'll play a few pieces of music, they're good.\" \n\n\"Thank goodness, I thought you meant actual games.\" \n\nI laughed out loud. \"No, nothing like 'Twister' or throwing keys into a bowl. Stick with me and I'll introduce you around, you won't be a stranger for long around here.\" \n\n\"So you're Fiona's partner.\" \n\n\"Yes, her wife actually. Have you met Fiona?\" \n\n\"Yes, just once.\" \n\n\"I was at college with her mother and then beguiled her youngest daughter.\" \n\n\"Jane's told me a bit about that story. She likes you a lot.\" \n\n\"And I like her. We're good friends. Come on.\" \n\nJust at that, Jess arrived. \"Jess, this is Natalie, a colleague of Jane's. Natalie, Jess is Jane's mum and your host.\" \n\nNatalie tried and failed, to stifle a laugh. \"I'm sorry, a thought just flashed through my head. Please forgive me. Milly, Jess must be your mother in law, but you look more like sisters and I don't believe that you're old enough to be Jane's mum.\" \n\nI smiled, \"Natalie, you're going to fit in really well. We like a sense of humour, you'll need it around here, and compliments like that are also welcome. Come on let's find Victoria.\" \n\nNatalie stayed close for most of the evening, she looked puzzled when Jane eventually reappeared and hugged me. \"I see that you've met the one that got away. I was too slow and my sister got in before I could.\" \n\n\"Stop it, Jane. I love you too, but it's not the same,\" I turned towards Natalie, \"Jane's my friend and she wasn't too slow.\" \n\nAs the two of them moved away I wondered if they were an item. Jane hadn't mentioned it. \n\nVictoria made a speech just before midnight to thank us for our friendship and then the corks popped as we welcomed in the New Year. \n\nJane and Fiona played for about half an hour and most of the guests sat silently. I perched on a stool at the kitchen worktop and watched. I watched my girl playing with passion and occasionally she would look over to me and I'd see that smile that always melted my heart. Jane was at her best and I watched her with such pleasure as well. I caught a glimpse of Victoria who was standing behind Jess with her arms around her and both were beaming with pride. \n\nBy the time the party started to wind down Jess and I had cleared away most of the food and had stacked the dishes. They could wait until later in the day. \n\nVictoria had asked a few people to stay the night and Jane had volunteered her bed deciding to come home with Fiona and me. Jane came over and whispered, \"Can Natalie stay the night with us. It'll be impossible to get a taxi at this time of night.\" \n\nNatalie looked a little sheepish as we clambered out of the car and entered the house. She seemed a little more confident when I made hot chocolate and we chatted for a few minutes. \n\nNatalie still looked a little embarrassed later the following morning when I served coffee. She walked back to Jess and Victoria's house with us before leaving in her car whilst the three of us went inside to help with the cleanup. I couldn't resist any longer, \"Natalie is lovely, are you two ..?\" \n\n\"No, Milly, we aren't. We were years ago at uni, for about four months, but we became just friends. I like her but not like that.\" She blushed and I thought, 'Damn what a shame, they looked good together.' \n\nTemping again \n\nJane and Fiona tried to get out on their bikes on a Saturday and Jane often spent the rest of the day with us. She was often round in the evenings as well. We both liked her being there, they were my two girls, girls that I'd spent such happy times with, and who'd become my friends. Well, one had become a little more than that, but I enjoyed the two of them together, they made me laugh and made me happy. \n\nThe five of us, Victoria, Jess, Jane, Fiona and I, were having coffee and reading the papers, something that we did on a Sunday, a couple of times a month, either at our place or theirs, but there was no rigid pattern. \n\nJess and I didn't really need the catch-up. We'd got in the habit of spending Mondays together, shopping, walking if the weather was good, swimming if not. We were good friends again. \n\nThat Sunday Victoria was talking about work and ruing the fact that her PA was away for a month with her family. \"I really need her; I've such a lot of work on just now.\" \n\n\"Could I help out?\" \n\n\"What?\" She looked at me as if I had grown horns. \n\n\"Could I help out? It's what I used to do remember.\" \n\n\"But Milly, why would you want to do that? Temping?\" \n\n\"Why?\" I laughed, \"You just said that you needed help. I'm not familiar with your set up and I won't be as effective as your PA, but I'm pretty sure that after two days I could help and make a difference.\" \n\n\"You'd do that?\" \n\n\"Of course.\" Just like that, I had a job and it excited me. \n\nThe first few days were a real challenge. I knew none of the people, nothing about the business and getting access to the computer system was frustrating. I tried bribing the IT guy with doughnuts, but that didn't work. \n\nI went home frustrated. Fiona didn't help because she'd been given a lead role in some project. She explained it in detail and I had to stop her because it sounded as if she was speaking some strange African language. Then she tried to put it in lay-mans terms, but that didn't help either. After two glasses of wine and mindless stuff that I didn't follow I stood up and stripped in front of her. That stopped her and pleased me in more ways than one. \n\nBy the end of the first week, I was starting to get the hang of things and some understanding of what I could do to help. \n\nThat weekend I threatened Fiona. \"If you mention work or anything to do with one's and zero's I will lock the bedroom door, with you on the other side, for a week.\" \n\n\"Threaten me would you?\" At first, I thought she was angry, then, that I was getting a hug. Instead, she picked me up, threw me over her shoulder and carried me to the bedroom. I was, literally, thrown onto the bed. She pulled my clothes off despite my resistance, actually, I helped her. Then she produced the red ribbon. I held out my wrists so that she could tie them and lay back quivering with expectation. I was not disappointed. We spent several hours with her touching and stroking me, frustrating me until eventually, she allowed me the release that I craved. She lay back and started to doze. I went to the bathroom and woke her up by climbing between her legs wearing the strap-on. It didn't shut her up, quite the opposite, but she never mentioned ones or zeros. \n\nMy second week working with Victoria went so much better. Now I could actually make myself useful and she was good to work with. I ended up working with her for five weeks and by the time I finished I knew that I was going to miss it. \n\nA few weeks later I was asked to return to fill in for one of the director's PAs for a couple of weeks. I ended up doing quite a few weeks there filling in for absences and on one occasion to help with a special project. The money more than made up for the time that I'd not devoted to my drawing. \n\nDespite that work, I knew that my priority was Fiona, to give her the time to concentrate on her work and when she came home, the time to relax. I organised lots of things for us, theatre, opera, music and events. I invited Jess, Jane and Victoria to join us regularly for dinner. \n\nI was proud of our home, but one day when I had nothing else to do I stood in the lounge staring at the large blank wall. This was the one that I'd decorated with the trees formed by small lights. It reminded me of a very large canvas and I grabbed a pencil and treated it as one. \n\nFiona found me staring at the wall with a pencil stuck in my ponytail, another behind one ear and the third one I was chewing on. \"What's this?\" \n\n\"I've never been able to find the right piece of artwork so I decided to create my own. It's not there yet but I know where it's going and by tomorrow evening it will be almost done and I'll have dinner. That's different from this evening because I've done nothing about food. Fancy a pizza?\" \n\nDinner was almost ready the following evening - a couple of nice steaks, mushrooms and baked potatoes. Fiona studied the wall as I plated the food, then she turned to me. \"Spectacular. It's the view from the sunroom at Rose Cottage. But you've added a pier and some daffodils. I love it. Well done, it's perfect.\" \n\nAfter we'd eaten we sat chatting until Fiona's phone rang. She looked at me when she hung up, \"Jane's on her way. Bad day at the office, Jess and Vic are out for the evening and she needs company.\" \n\nJane stood for about fifteen minutes studying my new art wall, sipping her wine as she did. \"Milly, it's amazing. It looks so simple, but you can see great details in it and there's a real ... I'm not sure, passion or love for the place.\" \n\n\"It was my home and refuge for a while. Cosy and mine. I found love there, not just once, but several times, Jenny and her friends, Bob, Alan and of course you two.\" \n\nWe were late going to bed that evening and drank a lot of wine as we recalled the fun times that we'd had over the years. \n\nDaffodils \n\nI got the door open, piled all the bags inside the hall and stepped back pushing the door closed with my bum. It had been a long day, or so it seemed. I'd been busy at work, good busy. I managed to get away half an hour early and get to the supermarket. Now I had the bags in the house and leaned against the door for a moment to catch my breath. I was home. \n\nIt was home now, I had it the way I wanted and Fiona liked it. It was welcoming and comfortable. I'd found places to walk; I was working at various things and when I got back here I knew that I belonged. I still missed Rose Cottage a little, but this was home now, Fiona and me, together and not a fantasy. \n\nI was unpacking the shopping and putting things away when Fiona arrived. \"Hi, love. You okay?\" \n\nI turned to look at her, smart suit, heels, hair up in a messy bun, handbag under one arm, laptop bag under the other, clutching her phone and with a wide grin. Still, my knees wobbled when I saw her, \"I am now. Let me get this stuff tidied up and I can come for a kiss, I need a couple.\" \n\n\"Can I help?\" she asked. \n\n\"Stay away from my cupboards! If you start putting things away I'll never find them. You could put those flowers in vases, lilies in the big vase for the lounge and the daffodils in a tall glass vase for the dining table, please.\" \n\nAfter dinner we were sitting on the couch, I was reading and Fiona was surfing the net. Actually, our thighs were touching and I had my fingers resting on hers. I wasn't moving, but I could sense her slight movements and I concentrated on those feelings. Then she nudged me and turned her laptop screen towards me, \"Did you know that there may be 160 different types of Narcissus which are the family that daffodils belong to?\" \n\nFiona often came up with interesting facts, but this one threw me. \"No, I didn't. Wow! Golly! How interesting! Gosh!\" \n\n\"You are a sarcastic woman. I was thinking about them and decided to look them up, to learn new things.\" \n\n\"Well it is fascinating, but why?\" \n\n\"The very first time we met you, Jane asked you about the poem by Wordsworth, which got us an invite to the Lake District and our first trip away from home. We both fell in love with you then, you were so good with us. When I put the daffodils in the vase earlier it reminded me of that and I decided to look them up.\" \n\nI leaned over and kissed her. \"I do remember that, but even more when you told me that you were expecting to be beaten and then you winked at me as you walked away. I remember thinking that there was no way that you could be eight, nine?\" ",
        "\"You seemed to be on our wavelength, had a sense of mischief, you weren't our parents with the constraints that they had. Maybe that is why you and I are here today, happy.\" \n\n\"They were happy times and they helped me a lot. I just wish that Jane were happier.\" \n\n\"She'll find someone.\" \n\n\"I think that she has, but can't have them. Maybe one day she'll find what I found - my perfect person.\" \n\n\"There are some wonderful illustrations of daffodils.\" She was thinking. \"Maybe I should get a small daffodil tattoo to remind me of that time. I like that one.\" She pointed to one. \n\n\"Okay. If you want to annoy me, you have succeeded, well done!\" \n\n\"What?\" \n\n\"Hey, I'm an artist! You want an illustration; you can have a Milly Scott original.\" \n\n\"I'm sorry, I never gave that a thought, please forgive me.\" \n\n\"Possibly later in bed. Would you want a tattoo?\" \n\n\"I never thought that I would, but you know what, something discrete and tasteful like that might be a nice reminder of you and happy times.\" \n\n\"Where?\" \n\n\"The inside of my forearm, not big, just there.\" \n\nShe pointed to the area above her watch strap and indicated something about two inches long. We said no more about it that evening. \n\nI was working at home a couple of days later. I had a boudoir sketch to complete, but I got distracted and ended up drawing daffodils, simple line drawings. \n\nFiona saw my sketch pad later that evening. \"These are great Milly. I really like that one.\" It was simple; one daffodil head on a stem with a leaf and a little M beside it that could be mistaken for grass. \n\nAn hour later she turned to me. \"I was thinking about the tattoo. I want one, that one that you drew. But only if you think that it's okay?\" \n\nI kissed her, \"You would carry my mark. It's tasteful and means something, I approve.\" \n\nThat Saturday we were at the tattoo studio and Fiona showed the Tattooist what she wanted. \"Nice simple art, where did you find it?\" \n\n\"My wife drew it, she's an artist.\" \n\n\"I like her work; I should get you to introduce me.\" \n\nFiona turned to me. \"This is my wife, Milly.\" \n\n\"Ooops, sorry I had no idea.\" She blushed. \n\n\"That's okay, it's not the first or the last time that'll happen.\" I smiled at her, I loved her blush. She didn't remember me. \n\nAs she was getting set up I saw her look at me. \"You look familiar; did I do a tattoo for you? High up, on your leg?\" \n\n\"Yes, her initial in a heart.\" \n\nHalf an hour later the tattoo was done, we all admired it. It looked beautiful, it was lovely. \n\n\"Are you busy?\" \n\n\"Most of the time, but it's quiet today for some reason, why, something else?\" \n\n\"Fiona, move over,\" my blouse was off and I sat in the chair, \"The same thing, the same place, please.\" \n\nThey both looked at me. \"What? Give me the forms to sign.\" \n\n\"Do you want the M as well?\" \n\n\"No, make it an F, please.\" \n\nJess looked at Fiona as we ate and asked, \"Fiona you're scratching at your arm, do you have a rash? Is something wrong.\" We were at their house for dinner, Jess, Victoria, Jane, Fiona and I - pasta and lots of wine. \n\nFiona looked at me and smiled, she raised an eyebrow towards me and I nodded. \"I got a tattoo and it itches.\" \n\n\"A tattoo?\" Jess seemed shocked. \n\nFiona pulled the sleeve of her sweater up to her elbow and removed the plastic wrap. Victoria gasped, \"Wow, that's lovely.\" \n\nJess studied it, \"It is but, why?\" \n\nJane stepped in, \"It's beautiful and I think that I know why.\" She'd guessed correctly and Fiona filled in the rest of the story. \n\nJess looked at me, \"I assume that's your design?\" I nodded, I took a deep breath and pulled my sleeve up and also removed the wrap. \n\n\"Fiona had it done earlier and when it was finished I knew that I had to have a matching one. It means something to us.\" \n\nJane looked sad as she held my wrist to examine it. She looked at me, \"It's stunning, I love it.\" \n\nThere was something wrong, very wrong. I thought that she was going to cry so I took hold of her. \"What is it?\" \n\n\"I'm sorry, I know what that means. I was there and suddenly, I feel left out. I'm sorry, I'm being stupid.\" \n\nFiona walked around me and kneeled on the floor next to her sister, \"I, we, never meant to leave you out of this, it was spontaneous.\" They hugged. \n\nShe looked up at the two of us, \"Could I get one the same, would you mind, please?\" \n\nJess and Victoria looked at each other and shook their heads. \n\n\"No, I'd be honoured. Those days with you two were amongst the happiest of my life up until that point. Being with both of you changed me in a big way. All because of a poem and some flowers: 'And then my heart with pleasure fills, and dances with the daffodils.' That's how it ends, that's how I felt when you left. I'll come with you if you'd like me to.\" \n\n\"Yes, I'd like that, thanks, Milly.\" \n\nFiona smiled, \"I'll come too.\" \n\nJane looked at her, \"Thanks Fi, but no. If you don't mind, just Milly and me.\" \n\nShe smiled again, \"Okay, but remember, she's mine, keep your hands off.\" \n\nWe laughed again and kept drinking. \n\nA few days later I went with Jane. The important, smartly dressed conservative lawyer had her own tattoo, the same as ours including the tiny M and also a tiny F that also looked like a blade of grass. The tattoos were discrete and even with bare sleeves, not exactly in your face. \n\nJane showed Fiona the tattoo that evening. \"See, I added M and F. It connects us - 'The Daffodil Girls.'\" That made us laugh and we had a lovely evening, the three of us just like old times. \n\nAfter dinner on Friday evening, Fiona looked at me. She took a deep breath, \"I have an appointment at the tattoo place tomorrow.\" It was a matter of fact statement that shook me. \n\n\"Another one? What? Why?\" \n\n\"No, this one is incomplete and I need to rectify it, you're coming with me.\" \n\n\"I'm sorry I don't understand.\" \n\n\"' The Daffodil Girls' our tattoos are incomplete and it bugs me. We need to add a J to ours.\" Now I understood. I thought about it, she was right and I nodded. \n\nNew band \n\nI was bored. There was a gardening programme on television and Fiona was on the phone talking to a colleague about work. I wanted some new roses, but that involved a quick trip to the garden centre and twenty minutes with a spade so I didn't need to know about splitting bulbs or mulching. I flicked through the channels, Die Hard - again, Coronation Street - save me, celebrity idiots, darts - really? I muted the sound and closed my eyes. The next thing I knew some lunatic had dived over the back of the couch and was kissing me. I only knew of one such lunatic so I just kissed her back. \n\nAfter a few minutes of that, I was thinking about dragging her clothes off when she stopped and started speaking. Spoilsport. \"I think that Jane and I should start a band. It would be good, something to practice for and stop me thinking about work or sex.\" \n\n\"I like the idea of you not thinking about work, but the sex thing has me worried.\" \n\n\"I was joking about the sex thing. I see you and want you. I need to keep myself under control or we'd never get out of bed.\" \n\n\"So that means sex on the couch or kitchen table is still on the agenda?\" \n\n\"Hmmm, need to think about that. I don't want to kill you.\" \n\n\"Great way to go though.\" \n\n\"Behave, stay there, rest to build your stamina, you're going to need it after I've spoken to Jane.\" I laughed as she walked away. \n\nA minute later I had an idea. I went for a quick shower, then put on some stockings, knickers and pair of heels before tracking Fiona down in the study. She looked up and a grin broke across her face when she saw me. She was at the desk with her feet up. I pushed her feet off the desk and jumped up to sit on it facing her. Her eyes bulged and smiled at the same time. \n\n\"I need to go now, an almost naked woman is trying to attract my attention and she's succeeding. See you tomorrow.\" She put the handset down and looked up at me. \"Did you want something?\" \n\n\"What made you think that?\" She didn't answer, but grabbed my hand and pulled me through to the bedroom. \n\nShe pushed me back and I fell onto the bed. She pulled my panties down and gave me that look. Lust, pleasure, intent. 'Oh good, just what I'd hoped for.' \n\nFive minutes later my nipples were rigid when she cruelly abandoned them in favour of somewhere else. Fiona pushed my legs apart and licked the inside of both thighs. She traced my thigh tattoo with her tongue before slipping it inside of me. She was good, very good, from the very first time she knew the right things to do to get me going. Not that I needed much help that evening. Thirty minutes later I was a mushy mess with a huge smile and a great deal of satisfaction. \n\nFiona held me close. \"You are truly amazing. One minute you're looking after me like my mother and the next you turn into a sex maniac. I love you.\" \n\n\"You're wrong. I'm a sex maniac all the time and just manage to hide it quite well. I never used to be like this, I was just a normal girl with a healthy sexual appetite until you came along. I think you must be drugging me or something.\" \n\nFiona laughed, \"I hope that you still have some stamina because I need you very badly. Very badly indeed.\" She must have been very wound up because it took no time at all for me to get her motor running. She clamped her thighs to the side of my head and as I couldn't get away I just kept kissing and sucking at her clit. That made her clamp tighter, a vicious circle, but she'd give in before I did. I was right. Now I should probably get another shower, but I was done, so I held her close and pulled the duvet up. \n\nI opened the app on my phone to select some music. The table was laid and the dinner almost ready. I'd had a great day, a long walk followed by some new sketches that I was happy with. I'd sang and danced as I cooked knowing that my girls would both be here soon. \n\nJane arrived before Fiona and we were sitting with a glass of wine when the dynamo burst through the door. \"Damn, too late. I wanted to get here before Jane in case she tried to seduce you.\" She laughed and kissed her sister and then me. \n\nFiona went to change and Jane looked at me. \"She gets crazier as she gets older. Is she like that all the time?\" \n\n\"No, not all the time. Sometimes she is so very gentle and quiet, at others she's like a bomb going off. As long as she comes home safely it doesn't matter.\" \n\n\"Still happy then?\" \n\n\"Yes, very happy. It seems unfair that I've found such love three times and you're still searching.\" \n\nShe shrugged and looked down. Then she looked up at me, \"But I have you two, it could be worse.\" I touched her arm and she smiled at me. There was sorrow hidden just below the surface. She was too good a catch to be alone without that special someone. \n\nI cleared the plates away and the two of them started discussing a new band, where they would find other musicians and what they would play. I watched them as I loaded the dishwasher and made coffee. They looked so similar, although Jane's hair was a bit shorter. I loved Jane, but I wondered what it was that made me feel the way that I did about Fiona. What I felt for her went beyond anything that I'd felt before. I sat with them and listened. It made me happy just to be in their company. \n\nThey'd made a few decisions and then we chatted. Jane told us about some of her cases and made us laugh with the stories that her clients hoped would get them out of trouble. Fiona talked about her work and her frustration that a lot of people looked upon her with suspicion. \"They go quiet when I walk in and when I ask a question they tell me the minimum they can. It drives me nuts.\" \n\nOver the next few days, they'd each identified a girl to play bass, Allison, and guitar, Maria. Fiona had been told about a girl drummer who was still at school and very shy until she started to play. She was due in half an hour. \n\nI went to the door and found a lady a few years younger than me with a girl almost trying to hide behind her. \"I'm looking for Fiona Scott, about a band. Have I got the right house?\" \n\n\"Yes come in. I'm Milly, Fiona's wife. Fiona and Jane are in the lounge, come through.\" \n\n\"I'm Abigail, Abby, and this is my daughter Danielle, Dani, she's the drummer.\" \n\nI was busy making more coffee when Abby joined me in the kitchen. \"I think Dani will be okay. She's not shy when she plays, but at other times ... I hope I'm not being rude, but I was shocked when you said that you were Fiona's wife.\" \n\n\"I've told this story more than a few times so don't be embarrassed,\" I told her a little of our story. \n\n\"Will you be at all the gigs, if it works out?\" \n\n\"I'll probably be at most of them. I love to watch Fiona and Jane play. Will you be there as well?\" \n\n\"Almost certainly, I'll have to be there until she gets over her shyness. We'll see a bit of each other then.\" \n\nThe following Saturday all three of the new band members arrived at our house and got set up in the garage. Abby was there with Dani still looking terrified, the other girls were all much older than her. Then Dani got her drums sorted out, sat down and played. We all stopped and stared at her. Her hair flew wildly as she threw herself into playing with a huge grin on her face. I looked at her Mum, \"Not so shy now is she?\" \n\nAn hour later they were meshing together well and I called a halt to feed them. Jess and Victoria had joined us so it was a big crowd that managed to all find seats in our house and tuck into a huge pot of chilli and rice. Abby fitted in well and the four of us sat chatting when the band went back to practice. \n\nOver the next few weeks, they rehearsed and established a playlist. They had a gig the following Friday at a local pub, but the landlord was hesitant to pay until he'd seen them perform. That seemed reasonable, now all they needed was a name. After considering dozens of names, most of which had already been used, Maria sighed and asked, \"How hard can it be to come up with a name for five girls?\" \n\nThey all looked at each other and Jane shouted, \"Check if that's been used.\" It was that simple and 'Five Girls' was born. \n\nThe girls were a little apprehensive as they set up their gear and did a soundcheck. Abby came over to sit with me. \"How'd Dani feeling?\" \n\n\"She's confident about playing it's just that she's shy. She'd been asked to play with some boys but refused so this is her first chance. We had some tears a couple of days ago, she thinks that she's gay.\" \n\n\"Okay, so how did you handle that?\" \n\n\"I just said okay. I've suspected for a while, it's fine by me. She's eighteen. Her dad is not going to be happy though.\" \n\n\"He doesn't know?\" \n\n\"He left me six years ago. For his secretary would you believe? That lasted for a couple of months. He's on his third or fourth one now and all at least ten years younger than me.\" She laughed, \"Best of luck to them.\" \n\n\"Parents can be a problem.\" I'd said it quietly, almost as if I'd not wanted to say it out loud. \n\n\"Yours I guess.\" \n\n\"I fell in love with another woman, Alex, when I was twenty-five. It came as a surprise to both of us. They told me that I was a pervert and would burn in hell.\" \n\n\"Do you see them?\" \n\n\"No, the last time was the day before I married Fiona. It was unpleasant and I vowed never to contact them again. Fiona's mum and I have been friends since college. Apart from an uncomfortable time for a while when I fell in love with her, they've been my family.\" \n\n\"You knew Fiona when she was a kid?\" \n\n\"I'd seen her as a baby and then I met her properly when she was eight. She and Jane used to visit me regularly in the Lake District; they were my bridesmaids when I married Jenny. Fiona saved me when Jenny was killed, she was amazing. I think that we both changed how we felt for each other, but it took another two years before it became a reality.\" \n\n\"Your first wife was killed?\" \n\nI smiled and knew that my reply was going to blow her socks off. \"My first two, actually.\" I was right. She was speechless so I went to get us both a drink. Over the next hour or so we traded our life stories, broken up by the girls first set. Just before the band went back to play again Abby smiled at me, \"You two are daft about each other aren't you?\" \n\n\"Yes, yes we are and we're very lucky.\" \n\nThe first set wasn't great. They were out of synch a little and there didn't seem to be any spark. The second set was a different ball game. They'd found whatever magic had been missing. Allison and Maria found their voices. They were good solo, but singing in harmony was amazing. As they were taking their applause I saw them look at each other. 'Oh my, there's a spark there.' \n\nWhen the two of them sat down for a drink they avoided each other. I was sure that would change very soon. \n\nAll of the girls were riding high and Dani, covered in sweat with her hair everywhere, seemed like a different girl. \n\nThat night I held my arms open for Fiona and after a kiss, I told her how good I thought they'd been. \"We were, eventually. He wants us back next week and he may even pay us.\" \n\n\"It's not about the money though, for you anyway?\" \n\n\"No, I don't need the money, we don't need the money. It's about performing and that would be less enjoyable if you weren't there. It's also about playing with Jane.\" \n\n\"I love to listen, but to be honest; I love just to watch you more. I still can't believe how beautiful you are.\" \n\n\"Thanks, you're pretty sexy yourself. Did you see the look between Maria and Allison?\" \n\n\"Yes. But they have partners don't they?\" \n\nFiona was feeling good and that made me feel good. Sleep beckoned. \n\nJane \n\nI was washing dishes one morning when the phone rang. \"Hi, Jane, what's up?\" \n\nShe groaned, \"Milly, I'm really not well, I have dreadful pain in my belly and feel like shit. I need help, Milly.\" I covered the mile and a half very quickly. I found her on the bed; she was pale, had a temperature, was clearly in a great deal of pain and complained of feeling sick. \n\nI called an ambulance and was told it would take about thirty minutes, \"Don't bother, I'll get her to hospital.\" I managed to get her downstairs and into the back seat of my car. We made it without getting caught for speeding. A porter gave me a wheelchair and I asked him to move my car for me. \n\nThirty minutes later Jane was on her way for surgery, things were serious. I went to find the porter who handed me back my keys, told me where he'd left the car and I gave him a twenty-pound note. I bought a bottle of water and sat down near the main door. I sent a text - 'Emergency, call me.' \n\nOne minute later my phone rang. \"Fiona, I'm okay, it's Jane. She'll be okay, calm down.\" I explained what had happened. \n\n\"I'll be there in twenty minutes.\" \n\n\"No, no. First, I need you to go to your mums, make sure that the house is properly locked up, I left in a hurry. You need to get Jane some underwear, pyjamas, slippers, a robe, her Kindle and some toiletries. Then you can drive here slowly and carefully. If you're here in less than an hour I'm cutting you off for a week.\" \n\nShe laughed, \"You don't mean that!\" \n\n\"Actually I do! If you take your time you'll get here safely. She's not going to be aware of anything for at least another two hours. Slowly and safely!\" \n\nThere was a flicker of eyelids and then they opened, lazily. She tried to speak and it was a barely audible whisper, \"Hi Sis, Milly. Am I okay?\" \n\nFiona snorted. \"Yes, you are. It was your appendix, it'd burst. They've taken it out and patched you up. Much longer in calling for help and it might have been a different story.\" \n\nJane looked over at me and I took her hand. \"Thanks, Milly.\" \n\nI smiled back at her, \"Any time, any place, anywhere. It's what sisters do.\" \n\nWe spoke for a few minutes, then I raised the subject of the elephant in the room or rather the parents who weren't in the room or even the country. \"Let me call them. I assume that you don't want them to come home early. I can take care of you for a while. I'd like to.\" ",
        "They were on a cruise ship somewhere in the Caribbean. The first few minutes were frantic, fretting worrying, saying stupid things about getting flights. \n\n\"Whoa, stop! Jane is fine, her surgery went well. She'll be home before you could get here. The three of us have discussed this. Jane is coming to stay with Fiona and me until she's recovered. Stay where you are and enjoy yourselves. Think how fortunate you are to have a backup.\" \n\nJane was wiped out by the time that she got to our place. She'd stayed in one of our guest rooms so many times that we referred to it as 'Jane's room.' Fiona collected some clothes, personal times, laptop and her briefcase. \n\nThe following day she felt much stronger and managed some of her work. Over the next week, I took care of her, fed her, took her drinks, whatever she wanted. We would sit and talk for long periods, exchanging stories and confidences. It was sad that she'd been ill, but in lots of ways both of us enjoyed her recuperation. I loved spending time with her and in the evenings the three of us ate together and chatted just like old times. I had both of them and I loved it. \n\nJess and Victoria were due home so Jane and I set off to collect them from the airport. It was clear that they'd worried, but that was forgotten when they saw that she was okay. On the drive back she told them what had happened and how she'd been looked after. We dropped off their bags so that they could change and then they came to us for dinner. \n\nIt was a wonderful evening hearing about their trip and checking their photos. They were keen to hear about Fiona's work and Jane's plans for getting back to the office. Jess came over to me when I was making coffee and took me by the waist. \"Thanks for all that you've done for Jane. I didn't worry too much because I knew that you'd take care of her.\" \n\n\"She's my sister. I made a promise to Fiona that I'd always be there for Jane as well. I love her Jess, she's a wonderful girl and we get on very well. I'm going to miss her when she goes back home.\" \n\nFirst anniversary \n\nShe placed the bangle around my right wrist, next to the one that Alex had given to me. She looked up at me and asked, \"Are you sure about this Milly?\" It was a thin plain silver bangle, an 1/8<sup>th</sup> inch wide, hinged with a clasp that needed a hex key to open it. \n\n\"Yes, you're about to give me something that I cannot take off, that I want, fasten the damn thing!\" The clasp snapped shut and Fiona held up the key. \"Throw that away, destroy it. I don't care what you do, that'll never come off if I have the choice.\" I had two bangles on my wrist both given to me by people that I loved and neither could be removed without being cut off. I also wore a thin chain around the same wrist that Fiona had given me a long time ago. It had been off several times, but only for a short period for whatever reason. I was hers and this was her gift to me. \n\nWe went away again, back to Crete to the villa we'd used for our honeymoon. This time we had all of our toys with us and not many clothes. I had a few dresses and pairs of sandals that I wore when we walked to the beach or the shops and when we went to dinner. I'd worn a pair of panties and a bra when we travelled to the villa and they were not worn again until I set off for home. There was no other underwear in either of our cases. We spent most of our time alone, naked. We went through lots of sun cream, most of it was used up massaging each other and we spent a lot of time doing that. \n\nSex in the pool using a strap on is a little wild and very different, but by the end of two weeks we'd found out the best way to manage it. The poor thing got a lot of use both in and out of the pool and at one point I was sure that it tried to surrender. \n\nAlmost five years together as a couple and a year of that married, the sex had not reduced during that time. We occasionally went a day or two without, but that was rare, mostly it was gentle and loving, but when it wasn't, it could be pretty brutal, but never without love and affection. I never tired of it; I always seemed to be ready. \n\nOne afternoon Fiona wanted me to tie her up. I spent four hours touching her everywhere. I took her to the edge and stopped so many times; she called me names and pleaded with me. She promised me a lot of things, but I wanted none of them. She was climbing the walls when I finally bent down and took her clit in my mouth. She came instantly. When I released her she demanded that we repeat that very soon. \n\nThe following afternoon I tied myself up for her and she returned the favour and then some. She took me lying on the bed, on my knees. She used vibrators, a butt plug and the strap on. When I cursed her she threatened me with a fly swatter, one of those plastic ones like a square mesh on a long handle. I looked at her and laughed, \"You wouldn't dare!\" \n\n\"I want you silent and you'll get one of these on your ass for every word!\" \n\nYeah, right.\" I heard the swish of the first and swore. The second hurt more and I swore again. She leaned in close to me and whispered, \"I told you one for each word and you added another one with each curse. Are you okay?\" \n\nI don't know what had got into me, that thing hurt like the blazes, but she'd fired me up and before I knew it I'd uttered some stupid words, \"If you want to make a point stop hitting like a sissy!\" \n\n\"Twelve words, wow.\" The first stung like I couldn't believe and the second on the other cheek made tears run. Then she tried harder. She leaned in again, \"Are you sure that you're okay?\" \n\nI nodded to her and grimaced, \"Get on with it you weakling!\" \n\nI have no idea how many blows she struck, but after eight or nine I was lost and gone, she could've hit me a hundred times it wouldn't have made any difference. I was in ecstasy; I came over and over again as soon as she touched me. \n\nShe untied me, cradled me and rubbed lotion into my buttocks, I loved that gentle touch. I knew that sitting down was going to be sore, but I smiled through the tears. \"Thank you, that was so good.\" \n\n\"Do you mean that?\" \n\n\"I'll regret it when we go to dinner, but otherwise that was incredible. I love you.\" \n\nWe talked about it the next day and agreed that it was not something that we'd do very often, but I knew that I wanted to experience that again. I have no idea what had happened to me, I'd become something different, something I thought I should despise, but there was no denying that I liked it!\" \n\nThe 'Five girls' band was playing three or four times a month and it was clear that they were all enjoying themselves and they were developing a following. I was pleased that Abby also went to all of the gigs because it gave us the chance to chat. \n\nHer daughter Dani had come out of her shell and was far less shy than she had been. \"She has a new friend from school,\" Abby confided in me. \"She'd managed to sneak into a club where the band were playing, despite not being old enough, they should be twenty-one to get in and spotted Dani playing. She'd spoken to Dani a few days later and they'd both admitted how they felt about girls. I'm pretty sure I almost found them having sex in Dani's room last week. I'm not sure that I really approve, but at least she can't get pregnant.\" \n\n\"Tell her how you feel, it might help. It looks as if Maria and Allison have finally decided to show the world that they are together. Fiona tells me that they are going away together for Christmas.\" \n\nChristmas again \n\nA few weeks before Christmas Fiona and I were talking about her work. \"It's been more than a year and I've been in all the departments, I've attended more management meetings than I could ever imagine were needed. But there's still no sign of the job I want.\" \n\nI said a few supportive things. \n\n\"There's one project that needs to be concluded and I hope that'll be the point at which things change. Maybe in another month or so.\" \n\nIt looked like we were going to spend Christmas at Jess and Victoria's home. That would be nice. I could help Jess in the kitchen and it would be fun. \n\n\"Hi, honey.\" Fiona grabbed me and grinned as soon as she walked through the door. \n\n\"Karen wants to talk about my role when we go back after the New Year. At last.\" She seemed a bit more relaxed. \n\nI spent the week before Christmas working in the salon. I covered reception, made lunch for the staff, coffee for the clients, swept the floor and even did some shampooing. I loved being there amongst people and had fun. \n\nWe stayed over with Jess on Christmas Eve. The next morning I helped her; the two of us laughed and fooled around as we prepared the food. We may have had a little too much wine because we were doing a lot of giggling. \n\nThe food had been eaten and things tidied up. We were sitting exchanging gifts. It had been agreed that we would be sensible again this year, so the gifts were thoughtful and not too extravagant. I got a couple of handbags, some new shoes and jewellery. After all, a girl can never have enough shoes. \n\nKaren looked over at Fiona. \"I have a small gift for you.\" She handed over a small wrapped box and an envelope. As Fiona was pulling off the wrapping paper Karen spoke again. \"Fiona, I know that you've been impatient and I'm sorry about that. We were going to talk again next week, but well, open the box.\" \n\nIt was a box of business cards. Fiona stared at the contents and I saw her start to smile. She slid the top card over to me as her smile broke into a big grin. Fiona Scott, Director, Customer Support. \n\n\"It's a better title than 'Trouble-shooter,' even though it means the same thing. The new contract is in the envelope.\" \n\nI passed the card to Jess and then it went to Victoria. In the meantime, Jane had reached over and grabbed the box. \"Bloody hell, a Director! Soon we'll need to make an appointment to speak to you.\" \n\nFiona opened the envelope and scanned the document; she turned to me, pointed to the figure for her salary and grinned. She passed the document to Jane, \"How much would you charge me to look this contract over?\" \n\n\"For you; a bottle of wine.\" She glanced down it until she saw the salary figure. She spluttered and said, \"You can pay my normal bloody rates and can afford them on this salary. \n\nFiona turned to Karen. \"Thank you for this. It's what I've wanted for a very long time. I won't let you down, thank you.\" She turned to the rest of us. \"For a long time, years, I've wanted two things, this job and to be Milly's partner. Now I have both. Thank you all for your support, you all helped me to get here, thank you.\" \n\nJane laughed, \"Would someone get me another drink before she makes me throw up.\" \n\nA few hours later we were alone and lying in bed. I turned to Fiona and looked at her. \"Well done I'm very proud of you. This is what you've wanted and worked towards. Now you've got it. I love you.\" \n\nShe reached over and stroked my hair. \"You've been there for me every step of the way. Supporting me, encouraging me and giving me the room to do the work that I needed. Thank you so very much, this is down to you as well. I love you so much.\" She reached over to kiss me, it was tender and I melted into her arms. \n\nWriting \n\n\"Fiona, a couple of days ago I was trying to do some sketches, but it was no use and I ended up doodling, do you remember my other love - 'Tricky?\" \n\n\"The dog?\" \n\n\"Yes, the dog. I started thinking. Some nonsense about what mischief he'd get up to and I started to write. In the last two days I've come up with a story, for kids, I've created four characters, Ann, Chloe, Jack, Daniel and they have a dog called Tricky, a Wire-Haired Fox Terrier. I suppose it's a bit like the Famous Five, but up to date and based in the Lake District, in Ambleside. I may call it Ambleside Adventures or The Adventures of Tricky, I don't know yet. I'd really like to encourage kids to read books. I thought that I could illustrate it as well. What do you think?\" \n\n\"I think that you're wonderful and it's a great idea. Maybe I can help?\" \n\n\"Just be you, do your work, let me look after you and come home to me. Maybe take me to bed sometimes.\" I gave her my best lewd face. \n\n\"And what would you want me to do there?\" \n\n\"Well, fuck me senseless would be a start.\" How filthy I thought, but actually that was exactly what I wanted. Sometimes I wanted to do the same thing to her. \n\nOver the next few months, I went through lots of ideas and binned most of them, but I managed to develop a story. It was a simple story that showed that friendship and loyalty were important, that telling lies resulted in trouble and that fun was essential. There was a lot of humour and plenty of bravery, mainly from Tricky. I'd drafted some sketches as well. Fiona had been very good at critiquing the work and made a number of suggestions. Jane had also been enthusiastic and helpful when I shared it with her. \n\nI tracked down Alex's agent and went to see her. She thought that it had real possibilities and offered to see what the publishers thought of the idea. \n\nIt took several months before Zoe called me back and after the usual pleasantries she said, \"I've found a publisher who would be keen to work with you and make your books a reality.\" I was stunned and excited, for just a moment as she carried on speaking. \"There's a caveat; they want at least three books, three stories, with illustrations. They want to meet with you to discuss ideas and see if they can work out a deal with you.\" \n\n\"Zoe, three stories might be too much.\" \n\n\"No, Milly it won't be. They'll help you and work with you on ideas and then you create them. It will all be your work.\" We discussed a meeting and Zoe suggested someone come with us. Instantly I thought Fiona and then something stopped me, Jane; my solicitor, sister and friend. \n\nFiona was excited and then disappointed. \"It makes sense to take Jane; she can put her professional head-on and still hold my hand. You'd get uppity if someone criticised my work and you know it.\" She smiled at me. \n\n\"That's true. One wrong word and I'd want to punch them.\" \n\nIt was a good, productive meeting. They listened to my ideas and made some suggestions about how they could assist. Basically, it would be my work, but they had writers and other people who would help with ideas. The artwork would also be mine, but they wanted it in colour. That scared me a little because it wasn't something that I'd done much of. They solved that by setting me up with someone who would colour my work and ensure that it would look good in print. The thing that made me agree was that I'd have the final say. \n\nZoe steered us through financial issues. Jane didn't have to do much, but having her there gave me confidence that I'd otherwise have lacked. Fiona would have made me nervous, she was quite protective! \n\nJane came back to the house with me and by the time we arrived, Fiona had dinner ready. Okay, she'd heated the food that I'd prepared earlier. I explained the details to her and of course, she asked, \"How much are they paying you?\" \n\nJane explained the retainer, the agent's fees and the expected revenue. All a little complicated, but when Jane got to the bottom line Fiona's face lit up, \"How much? Bloody hell, that's amazing. I always knew marrying you was a good idea!\" \n\n\"Hi, Zoe, what's up?\" The first book, 'The Adventures of Tricky' was done, in print. A parcel would be arriving later today with a dozen copies. They wanted a book signing or a reading, low key, their own photographer. I told her that I'd give it some thought. \n\nI dashed out to the supermarket to get things for dinner. Then I sent the text messages - 'Milly demands that you attend for dinner - 7 pm.' The four text messages resulted in four phone calls. I said the same thing to each of them. \"Wait and see, just please be here, it means a great deal to me.\" \n\nThe table was laid by the time that Fiona got home from work. She hugged me, kissed me, groped my bum and then asked, \"What's the big deal?\" \n\n\"Wait and see. Dinner's at seven.\" I went to change, nice dress, hair and make-up. \n\nThey were all early and intrigued but I said nothing. Victoria looked at me with a smile. \"You, Milly Scott, are up to something. I don't care because you're going to feed us and you're a great cook, so I can wait, as long as there's wine.\" \n\nI cooked steaks with onions, mushrooms and baked potatoes. Lots of red wine, all followed by cheesecake which I'd barely had time to make. \n\n\"Thanks for being here today, I want to share something special with all of you, the people that I love the most. I have champagne.\" I gave the bottle to Fiona to open. \n\n\"If you don't tell me what the secret is soon I'm going aim this cork at you.\" \n\n\"Just pour the wine. I have a gift for each of you.\" There were four packages in simple wrapping paper with labels. It was important that they get the correct package because I'd written a personal message inside of each one. They pulled the paper off of their books. \n\n\"A first edition of my book. I'm so proud and delighted to share this with my favourite people.\" \n\nThere were gasps, cheers, oohs and aahs, applause, smiles and lots of hugs. \n\nThey went into the lounge with their glasses and the books; there was silence whilst they read. I topped up the glasses and watched their faces. I was so delighted at the way they studied the book, every now and then one of them would look up and smile at me. As I poured Jess a refill she took my hand and I sat on the arm of her chair. Her eyes were filling with tears. \"Milly, it's wonderful, these are great messages. Tricky's grin reminds me of Fiona when she grins like that.\" \n\n\"Thanks, Mum, comparing me to a dog.\" \n\n\"You won't know this story, although Fiona and Jane do. A long time ago I saw him tied up outside a shop and had to draw him. I realised that the grin was Fiona's. I told Fiona that I was in love with him, she was devastated.\" \n\nVictoria was smiling and sipping her drink, looking thoughtful said, \"Milly I think that it's wonderful and I'm very proud of you.\" \n\n\"Thanks, that means so much to me. I need to do a book reading and I've been thinking about where to go. I want to go to Ambleside, to the primary school and do a reading there. I need to tell Zoe tomorrow. I think that I owe them that.\" \n\nFiona \n\nFiona had been putting in long hours. Her company were in the final stages of new product development when a serious flaw had been identified. She'd stepped in to provide a fresh set of eyes to try and help to find the problem. It was frustrating her, partly because she believed that it could have been addressed earlier, but mainly because she couldn't see the solution. \n\nShe was later getting home most evenings and after dinner would pour over the problem in the study. There was no alternative but to let her do what she needed to do, so I'd take her drinks throughout the evening then gently chide her when I thought that she'd had enough for the day. \n\nShe'd try to resist and when she did I'd distract her so that she couldn't work. After a few attempts at stripping, I thought that I was getting quite good at it. When I did get her to bed we'd manage some gentle sex and she'd hold me as we fell asleep. I'd taken to offering a prayer quite often to say thanks for my life and my lover. \n\nAfter a few weeks of hard work, Fiona and her team managed to identify the cause of the problem and get the project back on track. She suddenly lightened her mood and was back to her old self again. \n\nWe ate a quick breakfast that Friday before Fiona left for the office and I got down to some more work on my books. I got a text from her at 2 pm - 'I'll collect you at 6.30 pm. Be ready, your outfit is in the wardrobe in the spare room. X.' What was all that about? I wondered. She ignored my text reply, so I went to check on my outfit. It was the blue silk dress that I'd owned for a long time but hadn't worn for a while. On the shelf were new underwear, very sexy underwear, new stockings, my highest blue heels and a bright red lipstick. ",
        "I went to make tea, puzzled about what she was up to. It didn't matter because I guessed that we'd be spending the evening doing something nice together. I abandoned all hope of getting any more work done and decided to have a long bath, do my hair and nails. \n\nAt 6.30 pm on the dot, a black Mercedes pulled up outside the house and the driver opened the door. Thirty minutes later he stopped at the door of a country hotel and opened the door for me. As I walked up the steps I saw Fiona waiting and I took a deep breath. Her hair was piled up; she wore long black earrings to match her dress. It was ankle length but was clearly split at the front or she would not be able to walk as it was tight across her hips. It was sleeveless and could probably have been described as frontless as well. The shoulder straps just carried on down to the high waist leaving most of her chest bare. Her breasts were covered, but unless she was using tape, one sharp move sideways would reveal most of her assets. I don't think that I'd ever seen her clothed and looking so sexy. Then I noticed that we were both wearing the same colour of lip gloss. \n\nFiona took my hand, smiled, and led me inside. I raised an eyebrow and she shook her head just a little. A very smart man in a dinner suit escorted us to a table by the window of the restaurant and held both of our chairs. As soon as we were seated another server arrived with champagne and poured two glasses. Fiona raised hers to clink with mine and for the first time, she spoke, \"I love you very much and I think that you look beautiful this evening, I've always loved you in that dress. I wanted to thank you for putting up with me for the last few weeks and for keeping me sane, cheers.\" \n\n\"I love you too. Thank you.\" I didn't know what else to say. \n\nShe'd felt guilty about the amount of time that she'd neglected me and this was her way of making it up to me. We weren't given menus. Fiona had selected our meal in advance; pate, scallops, rack of lamb and fresh fruit with homemade ice cream. With each course, the servers brought an appropriate wine. The food was beautifully presented and very tasty, not large portions, which was good because neither of our dresses left much room for expansion. Throughout the meal, we gazed at each other and I found myself almost in tears. I loved her, I loved her so much. She was so beautiful and kind. I dabbed my eyes. \n\n\"Thank you, this is such a nice surprise.\" We were interrupted by the Chef who came to check on us. After a few brief words, I stood and kissed him on the cheek as I thanked him. \n\n\"Would you like coffee?\" Fiona asked. \n\n\"Yes, please and maybe a small liqueur and then I need to get you home to thank you properly,\" Fiona ordered our drinks and when they were served she looked at me with a smile. \n\n\"Home is upstairs, we're staying for two nights and tomorrow you're going to be pampered.\" \n\n\"What? But ...\" I was stunned, \"I don't have my stuff.\" \n\n\"I packed what you need and brought it with me. I love you very much.\" \n\n\"I love you too.\" \n\nWe lingered over coffee and had a second liqueur before thanking the staff and heading to our room, sorry suite, it was luxuriously decorated. The thickest towels that I've ever seen and my clothes were all in the wardrobe. \n\nI was correct about Fiona's dress. It was held in place with tape and, I know that it was cruel, but pulling it off made me laugh and her wince. We tumbled onto the bed in our underwear and kissed for a very long time. I spent a great deal of time on her breasts because they were really rather remarkable things. They'd grown over the years that we'd been together, not a huge amount but they were objects of great beauty and very sensitive. She returned the favour and then we stroked each other to very gentle orgasms. I held her head to my chest that evening and fell asleep a very happy woman. \n\nAfter a lovely breakfast the next morning, which had followed some energetic sex and a long shower, we headed for the spa. Massages, therapies, relaxation and facials. By the time we were finished, I was so relaxed that I needed to sleep. I thought that Fiona felt the same, but she'd found some energy that she needed to spend and that involved me. Still, I'd be able to sleep when I was dead and the way she was treating me that was just around the corner. \n\nI did sleep, she'd exhausted me but it was oh so good. After a couple of hours I'd found a second wind and in the wardrobe was another of my best dresses, so we got glammed up and went back for another fabulous meal. This time I did get a menu. The food was every bit as good and so was the wine. We chatted and laughed. We had our coffee and brandy served sitting in front of a large fire in the lounge. I cuddled up to my wife with my head resting on her shoulder and a grin of contentment. \n\nI was looking for something in the bottom of Fiona's bag when I found 'It.' 'It' had never been given a proper name, it was just 'It.' A strap on, larger than any real ones that I'd ever seen, and something that we'd had lots of fun with over the last few years. When I touched it I instantly knew that I was going to make very good use of it in the next hour or so. It was something that Fiona loved, but then I loved to be the one using it. I'd discovered that, through practice, it provided me with at least as much pleasure as being on the receiving end. \n\nShe laughed when she saw me lying naked on the bed wearing it, but not for long as she climbed over me. An hour later we agreed to call a truce as we were both spent. \n\nBook reading \n\nIt took five weeks to organise. The publishers liked the idea, but they were less keen on me giving each child at the school a copy of the book, but they gave in. \n\nFiona was too busy with work, which I understood, so I drove up with Jess. We were staying at a small hotel in the town. That evening we had dinner with Ben, Alan, Isha and Susie. It was great to see them again, catch up and to enjoy their company. \n\nJess came out of the bathroom and noticed that I was crying softly curled up in a ball. \"Milly, what's wrong?\" \n\n\"Fiona.\" \n\n\"I don't understand.\" \n\n\"I miss her Jess. Almost every time I have to sleep without her it's the same. I can't help it.\" \n\n\"You poor thing. Does she know about this?\" \n\n\"No, please don't tell her. It's so stupid, but I hate being separated from her. Every time the two of them came to visit I used to cry like this the day that they left. I was so jealous of you. In those first few months when she was at university I cried when she left because I wanted her so badly. I knew that I was being stupid and couldn't have her. I was ashamed of myself. I'll be okay once I get to sleep.\" \n\nThe next day I was at the school by 10 o'clock where I met the photographer the publishers had sent and a reporter for the local paper. \n\nThe headteacher, Marion, had decided that it would be nice if I could read to the whole school at the same time. Would I? The idea made me nervous, so many little ones, could I hold their attention? \"Okay, I'll give it ago,\" I asked to borrow an easel and set it up next to my chair. My original sketches were stacked next to it. \n\nThe children were all seated on the floor; most of them looked at me with anticipation as Marion introduced me. \n\n\"Good morning boys and girls. My name is Milly; Miss Scott makes me sound like a teacher. Whilst I'm reading I'll pause briefly to change some pictures that I have with me. I hope that they help you to enjoy the story.\" \n\nI displayed a drawing that was used as the front cover for the book and I opened my copy at the first page. I took a breath. \"It was a sunny day in Ambleside. The sky was blue and the daffodils were dancing at the side of the footpath. Four friends and their dog, Tricky, were going for a walk, looking for adventure ... \n\nI read for thirty minutes, whenever I looked up they were all staring at me and the pictures, I had their attention. I stopped reading to give them a break and they dashed off. Marion and two of the staff came over to me. \n\n\"That's wonderful; I don't think that they've been so quiet in a long time.\" \n\n\"They seemed to enjoy it.\" \n\nOne of the other teachers touched my arm. \"Milly, it's wonderful and so are the illustrations. How much more are you going to read?\" \n\n\"I'd planned to do another half hour, which should take us to a natural break in the story, about halfway through.\" \n\nThe second teacher spoke, \"Marion, could we ask Milly to do the rest of it? They'll learn as much from this story as they would in other lessons. Milly would you?\" \n\nI finished reading, and then I signed a personal copy for each child. I got lots of hugs as I handed them over. I'd spent all day at the school and enjoyed myself more than I could have imagined. Jess had also sat there for the whole day and she too seemed to be wrapped up in the story and watching the kids. \n\nWhen the parents started to arrive to collect their children they were told about the day and many of the parents came to speak to me. I was thrilled and a little embarrassed. \n\nI was gathering my sketches together when I had one final idea. I flipped through the sketches until I found the one that I was looking for. It was a view of the four children standing at the end of Ambleside Pier looking over the lake towards the hills, with Tricky sitting beside them. I grabbed a marker and laid the picture on the table. I wrote 'For the children of Ambleside, Milly x' \n\nI walked over to where some of the staff were chatting and spoke to Marion. \"Thank you for having me today, I've really enjoyed being here and meeting everyone. The drawings that I had today are the original artwork used for the book. I'd like to give one of them to the school.\" I handed it to them. They all looked surprised and pleased. Jess looked a little shocked as well. We gathered our things and went to the car. \n\n\"Milly you just handed over something that must be worth a small fortune.\" \n\n\"I have no idea what its worth, but I enjoyed myself so much today. This was where I lived for a while; it helped me and inspired my art which gave me an income. The people were kind to me and I wrote the book because I wanted to get kids reading. If I achieve that I'll be happy. The money from the book is more than I could ever have hoped for, but it was never about that. I want to be happy, doing all of that today made me happy and proud of myself. Being with your daughter makes me even happier and that's enough for me.\" \n\nSales of the book exceeded expectation and the publishers were eager to get the second one in the shops. Fortunately, it was ready to go and I'd almost completed writing the text for the third. I still had a lot of work to do to prepare the sketches, but I had roughed out my ideas. \n\nFiona was very busy for a few weeks with another huge project that she was coordinating. It was taking up a great deal of her time at work but she'd decided that she wasn't going to bring it home with her as she had done previously. I'd listen to her talking about it over dinner each evening and I enjoyed her enthusiasm. Eventually, she'd go off into some long rambling nonsense about Easter eggs, GUI's, thunking or worms whatever they all were. That was when I'd start pulling faces at her or playing footsie until she realised that she'd gone too far. Then we had the chance to chat about other things and for her to clear her mind of work. \n\nOn a couple of occasions over the weeks when Fiona was busy, I'd meet Jane for dinner or we'd go to the theatre. It meant that Fiona could work later without feeling guilty about deserting me and it gave Jane and me the chance to spend time together. \n\nI spent long hours over the sketches and submitted far more than were needed for the book. I also did a portrait of Tricky with his lopsided grin. I wanted it for myself and had intended to hang it in our study, but when Zoe saw it she wanted to try something, but wouldn't tell me what. A few weeks later she called to say that the publishers wanted to market it. When I realised how much money it might make I agreed to the sale of prints and T-shirts. I also decided to sell the original and donate the proceeds and the royalties for the prints to charity. \n\nThe charity that Alan the Vicar had established was still going strong although he was soon to retire. I spoke to him on the phone and discussed my idea. He was delighted at my offer and accepted half of the royalties, how much that would be, we had no idea. The other half I decided to give to a children's literacy charity. The publishers were delighted with that idea and offered to make a donation to them as well. \n\nThe evening that I confirmed all of the arrangements I sat thinking with a glass of wine. I'd found a skill in art that had earned me a living for many years. The writing had been fun and earned me more than just money. It had given me pleasure and I hoped would give the same to some children. To crown it all I would be helping others less fortunate than me through the charities. I was smiling when Fiona arrived home and it was then I realised that she was the thing that gave me the most pleasure. She was stunned at my greeting but made no objections when I dragged her to our room. \n\nMemory box \n\nI wandered into the study to find my book and was surprised to see a very shapely bum sticking up in the air. The rest of Fiona was hidden underneath the desk. \"What a lovely view. What've you lost?\" \n\nI heard her laugh and she waggled her bum at me before pulling backwards and emerging with a box, her memory and keepsake box. \n\n\"I was signing lots of things today with some scabby ball pen. I wondered what'd happened to my old fountain pen. I think it might be in here.\" She pointed to the box. \n\nI sat on the floor next to her as she opened the box. On the top was a pair of pale-blue silk panties that she'd stolen from me a very long time ago. I was about to grab them, but she beat me to it. \"They're mine, hands-off.\" \n\n\"Actually they're mine, you stole them.\" \n\n\"I've had them for so long, they're now mine.\" She laughed as she spoke. \n\n\"Why have you got an old lip-stick? It's your usual colour, why keep that?\" \n\n\"Remember when Jenny was coming for dinner the first time we met her? You allowed Jane and me to pick one of your lip-sticks, this is the one that I picked. It's been my favourite ever since my 'go-to.'\" \n\n\"That is the actual one from all those years ago?\" \n\n\"Yep.\" \n\n\"What about this?\" I indicated two pieces of stiff card wrapped in string. \n\nShe untied the string and sandwiched in between sheets of newspaper was a dried daffodil head. \"Jane and I nicked this from Dove Cottage when we were there. I was about nine.\" \n\nWe spent an hour examining the contents of her box; her hospital ID bracelet from when she was born, a boarding card from our trip to Barbados, another from her trip to Barcelona, a string of beads from New Orleans, a 'bobblehead' Yankee baseball player and a small stone from the Grand Canyon. There were lots of other things from her childhood and university. One thing that surprised me was a drawing, a cartoon, which I'd drawn of Jenny in plaster after breaking her leg. I looked at her. \n\n\"I liked that, it's funny. We liked Jenny and I found that after she died. I decided to keep it as a memory of someone that I liked.\" She looked shy. \n\n\"That's nice, I'd forgotten about that. I liked her too, I loved her. What a sad way to die.\" \n\n\"Maybe we should add it to the wall.\" I nodded, it was a lovely idea. \n\nIt was a nice way to spend time, remembering events and people. The sad things made us who we were and made us appreciate the fun things more. \n\nFiona never found her fountain pen so I bought one for her. It was a beautiful thing, but who knew they cost so much. \n\nAnniversary \n\nWe went back to the villa in Crete for our fifth wedding anniversary. The place hadn't changed very much, but I'd changed a little; I was more in love with the woman that was holding my hand as we walked to the beach that first day. Fiona was quiet as we walked and I suspected that she was thinking as well. When I first realised how I felt about her I'd believed that I was some kind of monster, until we confessed our feelings. I'd still been afraid and I had to admit that I was wrong. Here we were celebrating another anniversary, I would soon be fifty-four, exactly twice Fiona's age and yet somehow I felt as if was ten or fifteen years younger. When I looked in the mirror every day I said a silent thank you to whoever was responsible for my looks. \n\nI was suddenly aware that Fiona was speaking to me. \"Sorry, I was lost in thought.\" \n\n\"Thinking about me were you?\" \n\n\"As a matter of fact, yes I was. I love you my darling.\" I stopped and stood in front of her and kissed her. She kissed me back and I had that feeling, the thing that I'd first felt almost ten years ago. \n\n\"I was busy saying that I think that we're lucky. We have each other and I love you very much. I could never have imagined that the feelings that I struggled with ten years ago would result in us being here like this. Thank you.\" I looked at her and she gave me that stupid grin, Tricky's grin. I kissed her nose and ran off splashing in the surf. She chased me, pulled me clear of the water and laid me down on the sand. She lay beside me and we kissed again. \n\nI got up and ran away again, shouting as I did, \"Kissing is all very well, but I need you and I'm too old for wet sand. The last one in the bed's a loser.\" I didn't get very far before she caught me laughing as she did. \n\n\"Come on old girl, I'll help you with the stairs.\" I punched and tried to run again. We laughed as we ran back in the warm sun. I ran through the house and jumped into the pool still in my dress. When I came up I pulled the dress off and being without underwear I felt free and happy. Fiona smiled at me and dived in coming up underneath me. She shucked off her dress and we embraced bobbing in the water. \n\nSex in the pool is good, we'd done it in there often enough to know what works, but pretty soon I wanted something else and climbed out grabbing a towel as I headed for the bedroom. \n\nI managed to get most of the water off, threw the towel on the bed and threw myself on top of it rolling over as I did so with my legs spread. Lying there like that was still not entirely comfortable for me, but what the hell, it was just us. I wanted it hard and fast, we could do soft and gentle later. Fiona just grinned as she ran her eyes over me. \"So beautiful, so wonderful, so sexy.\" She lay beside me and started kissing me and I returned her affection. She stroked my legs and worked up to my lips. She slid a finger inside me and I felt waves of delight flowing through me and she followed that by a second and then a third. \n\nI was high and climbing. I was wide and relaxed. Fiona added a fourth finger whispering that she loved me and making some filthy suggestions. I needed something else and whispered, \"More please, more.\" \n\n\"There are four fingers in there already.\" \n\n\"More please.\" \n\nI felt her curl her thumb into her palm and push gently. \"Milly this won't go and I don't want to hurt you.\" \n\n\"Keep going, please, I'll tell you if it's too much. \n\nShe pushed, relaxed and kept repeating that and suddenly her hand in, wrist deep. I felt it fill me up; it was huge and felt so good. I heard Fiona gasp then she started to move gently. I was full and so turned on I sighed. Fiona stopped and asked, \"Are you okay, are you sure?\" \n\n\"Just do it, just do it please, stop buggering about and make me come, it's so good, so full, so ... aahhh.\" I came and it was different, I looked at Fiona and then... nothing. I'd passed out. \n\nWhen I came to she was holding me. \"Oh god, I thought I'd hurt you. I can't do that again, I can't stand the idea of doing something to cause you harm. I love you so much.\" ",
        "\"Thank you, it was wonderful and very different. Thank you. Do you mind if I doze for a while?\" She held me. An hour later she was still holding me. \n\n\"That was something else, I don't know that I could relax enough to allow that very often, but wow, it was good. Thank you.\" \n\nLater on that week I tied myself up using the thigh and ankle straps before lying on the bed waiting. Fiona found me and, as I'd hoped teased me for a very long time. I have no idea how many times I'd come but it was a few. She had taken advantage of my mouth and tongue by sitting over me. I loved her up there and being able to tease and satisfy her. \n\nAt some point, I said something to which she answered, \"You cheeky Minx. Perhaps I should see if I can find the fly swatter.\" She'd used it my ass a few times, it hurt but ... \n\n\"Get it if you like, but you hit like a sissy so it's no big deal.\" She smiled at me and, without words, asked if I was serious. I nodded. \n\nTwo minutes later she swatted both cheeks of my backside then paused, \"Are you really okay?\" \n\nI growled at her, \"If you're serious about this, get on with it and stop pissing about.\" The next half dozen blows had me crying and screaming. She paused. \"Are you okay?\" \n\n\"If you want to make me come you're going to have to try harder and I need to come very badly. Please.\" \n\nI lost track of everything in the next few blows, there was no longer any pain as such, just waves of pleasure until I came with one momentous, gigantic orgasm that made me shake and scream. Then I passed out. \n\nI was lying on my stomach when I came to. The bonds had gone and Fiona was massaging lotion into my backside with very gentle strokes. \"Thank you.\" \n\nA few days later we were kissing under the shade of a parasol when Fiona looked at me lovingly and whispered. \"I love you and right now I need you very badly. I need it hard and ...\" \n\n\"I get the idea, come with me.\" \n\nI lay beside her and we kissed for a while until she was getting antsy. I pulled out the ribbons from the bedside drawer and tied her hands to her sides. \"Now, you need to behave, be a good girl. No loud screaming.\" I used a scarf to cover her eyes, I knew that this enhanced your senses and some things came as a surprise, mainly a good surprise, but the not knowing was the thing. \n\nI used ice on her nipples and followed that with some tiger balm. It made her swear at me so I went back to the ice, that made her swear too. I kissed and stroked her, I rubbed after-sun over every inch of her and then I left her alone. Actually, I sat watching her for a while until she started yelling. \n\nI pulled on the strap-on and climbed onto the bed beside her teasing her with a small vibrator as she repeated \"yes,\" over and over. I eased between her legs and slid 'It' inside her. She growled. I gave her what she wanted, hard with no mercy. I went so long it made me come twice, but by that time she had surpassed me several times over. I slipped the strap on out, threw it onto the floor and slid down so that I could lick her. I spent a very long time between her legs, kissing, licking and sucking, but I didn't let her come. Then I stopped and she whispered, \"Milly, please just another minute and don't tease me, please. I need to come again or I'm going to die here. Please.\" \n\nIt was polite as it was ever going to be. It took thirty seconds and this time she screamed and I swear the whole village may have heard her. She closed her eyes as I lay holding her. I smiled and it grew across my face. This was love and I liked it. \n\nAll is well \n\nFiona was home early for once. Her hours had stretched over the last couple of years as she took on greater responsibilities. Her work excited her and I enjoyed listening to her enthusiasm over dinner. I liked to watch her expressions, her smile and the give-away were her eyes. \n\nWe cleared away the dinner dishes and I wiped down the work surfaces before heading over to our big couch. Fiona was already stretched out with the TV on. She tapped the cushion in front of where she was lying and I stretched out in front of her. I wiggled my bum back into her belly, one arm snaked underneath me and the other went around my waist. Her head was propped up so that she could see the screen over my shoulder and I put a hand on her thigh. We often assumed these positions when watching TV, although sometimes they were reversed. \n\nWe'd been lying there for some-time, although I have no idea what we were watching when I felt her hand move up to her face and heard a strange noise. I turned to look at her and rolled over to face her. There was a hint of a tear in the corner of her eye. \"Fiona, honey, what's wrong?\" \n\n\"Nothing I'm fine.\" \n\n\"Rubbish, what is it?\" \n\n\"For the last ten or fifteen minutes, I haven't taken in anything from the TV. I was concentrating on you. All of my senses were centred on you. Your smell and perfume. I could hear and sense every breath that you took. I could feel your heart beating through my chest and the pulse in your arm. I feel almost a part of you, as if we are the same being, in the same body.\" \n\n\"Wow, that's something.\" \n\n\"I fell in love you a long time ago Milly Scott, and over the years it's grown. There's a saying 'behind every great man there is a great woman.' Well, if I rephrase that I'd say 'behind a successful Fiona there is a wonderful Milly.' I love you very much and was counting my blessings.\" \n\n\"For a great woman you are a soppy bugger, but I love you too.\" We kissed and I felt that wonderful feeling that told me that we were meant to be together. We lay holding each other for a long time before we headed for the bedroom. \n\nSome years later \n\nI lay in a bath with lots of bubbles, a glass of wine and I closed my eyes. Fiona would be home soon, then we could snuggle on the sofa and kiss a little, I quivered with anticipation. My fantasy, my dream had lasted for a long time. What a wonderful time it'd been, what a lucky girl I was. To love and be loved in the way that I was has to be the most magical thing. Thank you, whoever you are that gave me this gift, thank you! \n\nThere will be a final story about the lives of Milly, Fiona and Jane."
    ],
    "authorname": "sandy_paris",
    "tags": [
        "lesbian",
        "lesbian romance",
        "lesbian sex",
        "strap-on",
        "teasing",
        "wedding",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/milly-scott-pt-04-the-artist-and-the-troubleshooter"
}