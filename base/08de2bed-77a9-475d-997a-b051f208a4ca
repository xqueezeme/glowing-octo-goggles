{
    "title": "The Hot Date Mystery Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 6 - Making the Law\n\nSunday, January 22d. I was in Midtown, having driven down the afternoon of the previous day. The Governor had invited me to stay overnight at the Governor's Mansion along with Chief Griswold and his wife, and I accepted his hospitality.\n\nI'd ended the meeting the previous morning, telling my Detectives and Officers to collect as much data as possible... talking to other apartment occupants that might've heard something, people at Luigi's Restaurant, more digital records and data. I told them that either Detective Warner would've solved the case by Monday morning, or we'd have a meeting on Monday to update where we were with the case.\n\nWhen I got to Midtown, I stopped by the Headquarters of the Midtown Police Department. The new Chief of Police, Frank Soltis, greeted me warmly, showed me around their offices, which were next to City Hall, and introduced me to the Midtown PD top brass. No one present was fooled: this was a clear demonstration by the new Chief to his new Staff that he had the Power of the Crowbar backing him up when it came to honest law enforcement...\n\n* * * * * * * * * * * * * * * *\n\nThere were eight people in the conference room at the State Capitol building. Governor Jared sat at the head of the table. To his left was State Senator Sean Stockton (R), House Ways & Means Committee Chairman Wilson Hammonds (R), Chief Griswold, and myself. To the Governor's right was State Senator Katherine Woodburn (D), State Senator Jimmy 'Coffin' Cerone (D), and State Representative Justin Madoff (D).\n\nBefore the meeting, as tension was already thick in the room, Senator Cerone came up to me and said \"Commander, would you please give your wife my congratulations upon her retirement after over thirty years in our Nation's Intelligence services?\"\n\n\"I'll be glad to, Senator.\" I said, shaking his outstretched hand. \"Thank you.\" If you think that relieved any of the tension in the room, you would be wrong. Madoff looked angry, and Katherine Woodburn looked non-plussed, herself, though she respected decorum and offered her own congratulations.\n\n\"I want to thank all of you for coming in on a Sunday.\" said the Governor to begin the meeting after we were all seated. \"It is unfortunate we had to postpone the meeting, but Commander Troy had an investigation to handle in his County.\"\n\n\"Yes sir.\" I said. \"Perps behaving badly in Senator Woodburn's district. Unfortunately, it's a murder investigation. I do appreciate everyone's understanding of the delay.\"\n\n\"You'd think criminals would learn not to commit crimes at all in the Iron Crowbar's district.\" retorted Katherine, and perhaps her hypocrisy went over everyone else's heads.\n\n\"Okay,\" said the Governor, struggling to regain control of the meeting. \"now that we're all here, let's begin. This meeting is to try to reach some kind of compromise over the budget, and especially the State Law Enforcement bill. The two competing versions that have been submitted are going to be non-starters with the other Party, so I'm hoping to begin a framework for a bill that can be accepted by both sides and passed.\" The silence in the room was deafening.\n\n\"Okay, who wants to start?\" asked the Governor. \"Sean? Wilson?\"\n\n\"Governor,\" said Wilson Hammonds, \"as you know, I believe the overall budget should be treated separately and passed separately. Then we can work on the real issue: the SBI.\"\n\n\"Not going to happen.\" said Katherine Woodburn, matter-of-factly. \"No budget at all unless and until the SBI budget is a part of it. And that means the SBI bill is passed and signed... or veto overridden... before we allow a budget vote.\"\n\n\"So you're going to hold the entire State budget hostage.\" said Sen. Stockton. \"And hold the jobs of all our State employees hostage, as well?\"\n\n\"No, it's you holding them hostage by not accepting our proposals for a strong SBI.\" sneered Justin Madoff.\n\n\"Chief Griswold,\" said the Governor, \"this is why I brought you in here.\"\n\n\"Darn tootin', Governor.\" said the old Chief, who was already getting flushed in his face and neck. \"I'm here to remind you legislators, sitting in your gold-domed State Capitol here, that the people on the outside, the voters, the ordinary folks, do not think the same way you do. They are a lot smarter than you are.\"\n\nGriswold went on: \"My point is that they do know who is holding what hostage, but more importantly, they don't give a damn about your rhetoric and blame games... on either side. They want action, they want solutions, and they want honesty and integrity in our State institutions. That does not exist in the SBI today, and they want it corrected.\"\n\nIt was like talking to a brick wall. I noted the looks on Katherine's and Madoff's faces; they were set in stone. What might've surprised me more is that Wilson Hammonds and Sean Stockton's faces were equally set in granite against the Chief's words on behalf of the People.\n\n\"All right.\" said the Governor. \"Let's try to start from a point we can all agree upon, okay? The State Troopers are respected by our Citizens and our Legislators. Let's at least put their budget, which we know, into the overall budget and pass it.\"\n\nKatherine Woodburn rolled her eyes. Then she stood up. \"Governor,\" she said, \"I think we should stop wasting everyone's time, and let Chief Griswold and Commander Troy get back home and to their murder case. You just don't seem to understand, Governor, that we are not backing down, nor compromising on this. No SBI bill, no budget.\"\n\n\"Oh I totally agree.\" I said, shocking everyone in the room... except Chief Griswold.\n\n\"What do you mean, Commander?\" asked the Governor.\n\n\"No compromise, no budget.\" I said. \"Shut the Government down. And you Republicans... grow a spine and do it. Call the Democrats' bluff on this. Show the people of this State that they CAN live without Government, and how well they will do.\"\n\n\"That's crazy talk.\" said Wilson Hammonds.\n\n\"Is it?\" I asked. \"These Democrats are counting on you thinking that. Stand up to them for once in your lives.\"\n\nWilson Hammonds turned in his chair to face the Governor. \"I now agree with Senator Woodburn that this meeting is a waste of time, Governor. Having to listen to this crazy... this shit from this man who is not a Legislator, has no idea what the concept of compromise is... yes, it's a waste of our time.\"\n\n\"At least Commander Troy has a spine.\" growled Griswold. \"Which is something you have no concept of, Mr. Hammonds.\" Hoo boy, this was about to get ugly... oh wait... it already has...\n\n\"Wilson,\" said the Governor, who was trying his best, \"Commander Troy is also an Inspector in the SBI Reserve, and his knowledge of law enforcement matters is of the highest value to us, which is why I've asked for him to be here and give his immensely valuable input.\"\n\n\"Here's some 'input', Governor Jared.\" said Justin Madoff, beginning to show disrespect in his voice. \"There's not going to be an SBI Reserve if I can help it. That program has been a disaster from the beginning, and I'm going to demand that it be eliminated completely. Troy can stay at home and sit and spin on his crowbar.\"\n\n\"Let me just ask you one question, Mr. Madoff.\" I said. \"You represent the City... which has standing orders from their Police Commissioner, their Mayor, and their City Government to arrest any SBI Agent that comes into their City Limits, if they don't actually shoot the SBI Agents on sight. I'd think you'd want less SBI based upon your constituents's wishes, not more.\"\n\n\"That shows how stupid you are, Troy.\" said Madoff. Yep, getting disrespectful. \"I want a strong SBI that the City and my people can respect, not a useless shell of an organization that can't enforce dog catching regulations!\" \n\nMadoff was rising out of his chair as he screamed: \"And the SBI Reserve is just an excuse to let bastards like you exercise police brutality all over the State!---\"\n\nJimmy 'Coffin' Cerone stopped Madoff's rant by slapping the back of his hand to Madoff's chest, forcing Madoff to sit back down in his chair. \"You show more respect, young man. That's not Ferrell and Ikea you're shouting at over there.\"\n\nThe silence was most very awkward for all the politicians. Chief Griswold's mustaches were twitching, and I did not know if it was from sarcastic merriment or from anger... or both. The Governor looked like he genuinely did not know what to do. Madoff looked still angry but chastised. Hammonds and Stockton both looked a little shocked at the lack of decorum by Madoff, but otherwise looked bored. And Katherine Woodburn had a look on her face of smugness, as if she thought she was winning. Time to wipe that smug look off her face.\n\nI said: \"Governor, Senator Woodburn thinks she's winning, but she does not hold the true trump card. Whether or not there's a budget, if there's no money for the SBI, there will be no SBI at all on July 1st. And I would be perfectly happy with that.\"\n\n\"That's not true.\" said Wilson Hammonds. \"If we don't pass a budget, last year's carries forward per the State Constitution. So the SBI will be fully funded.\"\n\n\"No sir.\" I said. \"The SBI bill last year was a separate bill. Last year's budget bill without the SBI money is what will go forward. I'm sure that'll reach the Courts and be tied up for months, too... in fact, any attempt to fund the SBI that way, and I personally guarantee that it will result in a lawsuit. Also... if there is no budget going forward, then... per that State Constitution you just quoted... the Governor is authorized to make unilateral spending cuts... he can just wipe out the SBI with a pen and a phone.\"\n\nThe smug look on Katherine's face was gone. She knew I was right. Chief Griswold's mustaches were twitching again... this time in an effort to keep from laughing out loud.\n\n\"So you think you're a fucking lawyer now, eh?\" snarled Justin Madoff.\n\n\"No, he's right.\" said Stockton, finally growing a spine and a voice. \"Especially that this could get tied up in the Courts for years. So why don't we do our jobs and get this worked out, eh?\"\n\nThe silence that met him was oppressive in its intensity. Then Madoff spoke.\n\n\"No way.\" he said. \"I'll be opposing any reduction in the SBI just because Troy wants it. Anything Troy says is good, has to be bad and should be opposed to the last ditch.\"\n\nFinally, Katherine Woodburn spoke up. \"I think there are too many cooks in this kitchen, even in this small meeting. I propose that Senator Cerone speak with Mr. Hammonds and Senator Stockton, and I will have a one-on-one conversation with Commander Troy.\"\n\nEveryone was surprised at that. Madoff was angry. \"I thought we were agreed about this.\" said Madoff. \"We were going to hold the line and not give these Republican bastards a God-damned thing---\"\n\n\"Son,\" said Cerone, jabbing his finger almost into Madoff's face, \"I've asked you nicely to shut your trap. If I have to ask again, then you and I will be having a private conversation.\" That was the kind of 'private conversation' that usually was fatal for whoever Jimmy 'Coffin' Cerone was talking to... after all, he was the Southport Mob Boss-of-Bosses Emeritus, so to speak.\n\n\"I think that could be a good idea.\" said the Governor. \"There are a couple of side room to this one. Why don't you meet, while Chief Griswold and I talk about fishing, and Mr. Madoff finds a way to calm himself down.\" Madoff reddened at the baiting insult, but held his tongue, knowing that Cerone had not been kidding around.\n\n* * * * * * * * * * * * * * * *\n\n\"So who was it that died last night?\" asked Katherine as we sat down at a small table in the side room.\n\n\"Woman named Terry Schultz.\" I said. \"Single, no family that we know of, at least not yet. Ran a small staffing business.\"\n\n\"Sad.\" said Katherine. \"If she has family, let my office know, so we can send condolences.\" \n\nThose preliminaries now aside, Katherine squared up and her eyes became more intense as she said \"Commander Troy, I'm not trying to be disrespectful like some of those turds in there. I am very aware of your capabilities and your record of achievements with the Police. But one thing said in there is true: we're the Legislators, we're the ones that make law and compromises for a living.\"\n\n\"You should be telling the Governor that, not me.\" I said. \"If he wants me in the meeting, that's where I'll be. He's asked for my input in crafting the SBI bill, and he knows I'll have a lot to do with it going forward.\"\n\nI then said \"And as to compromise... I'm not seeing a bit of it from you nor your fellow Democrats. With you guys it's 'our way or the highway'. Now you know Jack Lewis's SBI was so corrupt that there is no rebuilding it without tearing down what's left of it now. Don't insult my intelligence by pretending otherwise, and I won't insult yours by having to spell it out.\"\n\nKatherine gave a grunt that was meant to be a laugh. \"Then I won't insult your intelligence by telling you why we don't have to compromise.\"\n\n\"Because Wilson Hammonds and the Republican Establishment will cave?\" I asked. Katherine's eyes lit up. Yep, that was it, I realized.\n\n\"You've said it yourself a number of times.\" Katherine said. \"So what you should be thinking about, Commander, and I will insult you by telling you what to think here, is what you can do to support the SBI like you do the FBI. We're going to win. We're going to make the SBI the boss of all the counties' law enforcement entities. We're going to run Tom Conlan out on a rail, and if you're smart, Commander, you'll consider taking the job of SBI Director yourself and making the SBI great again.\"\n\n\"Don't know where you're getting the 'again' from, there.\" I said. \"The SBI has always been a corrupt and incompetent organization, practically from the day it was started. And no, I won't take the SBI Director job... and for the very same reasons you're offering it.\"\n\nKatherine saw that I was seeing right through her. \"Well then,\" she said, getting up, \"we'll just have to see where the cards fall.\"\n\n\"You know, I wasn't kidding.\" I said. \"No SBI is better than the SBI we have now. And that's where you're heading. Governor Jared has nothing to lose by vetoing the entire budget. The Republicans will be destroyed if they cave in, and I'll make sure they know it.\"\n\nKatherine did not even bother to reply. She just gave me a brief, pursed smile, and exited the room.\n\n* * * * * * * * * * * * * * * *\n\n\"I want you to join me for lunch, Commander.\" said Senator Jimmy Cerone. \"There's a great little restaurant right across Capitol Square.\"\n\n\"Okay, Senator.\" I said. We walked across the Capitol grounds to one of the many restaurants and bistros in the area. Curiously enough, the place was called Luigi's.\n\nThe back of the restaurant had an open area that looked upon a park on the other side of the street. It was enclosed by clear plastic sheeting and therefore was plenty warm as we sat down.\n\n\"Allow me to order the lasagna for both of us, Commander.\" said Cerone. He did so, also ordering wine and bread rolls. He then said to me \"I met the chef down in Southport. Best Italian food I'd ever had. I helped him open his own restaurant, and now he has places here, in the City, and a new place in your Town, near the River. Took us a long time to get that spot, and Thomas Cook took me to the cleaners on the price. But it was worth it... now please don't go raiding the place, it's a clean, legit business.\"\n\n\"I know.\" I said. \"The only raids I'll be doing there are for the food, I hope. So... what did you want to discuss away from all the hotheads?\"\n\nCerone laughed. \"Yeah, that Madoff gets ahead of himself. They used to say you were a hothead, Commander Crowbar, but I know that's not true... you don't really lose control. When you beat down Sergei Molotov with that crowbar, that was a brilliant, calculated move. And I've enjoyed watching your career these past few years. To tell you the truth, I'm glad as hell you're not in Southport.\"\n\n\"Butter me up, butter me up.\" I said. Cerone laughed.\n\nThe food arrived. The lasagna for both of us came in one 13x9 casserole dish. Per protocol, Cerone took a large portion and ate some to show it was 'good', then I took some. And I had to admit, it was the best lasagna I'd ever tried.\n\n\"Mmm, very good.\" I said. \"You weren't kidding.\"\n\nAs we ate, Cerone said \"So what I wanted to talk to you about is this SBI bill. Everyone's dug in. You know something about 'honor', in the Japanese sense. It's like that with some of them now. Katherine Woodburn can't back down, or she 'loses face', as the Japanese say. Madoff, don't worry about him, he does what he's told in the end of it all.\"\n\n\"Governor Jared, though,\" continued Cerone, \"he's dug in, too. And between you and me, Commander, I don't blame him. He's won his last election, the Republicans are stabbing him in the back right and left, pardon the pun, and they were doing that during the campaigns, too.\"\n\n\"Now me,\" said Cerone, \"I'd love to see the SBI go away. My boys down in Southport have no respect for 'em, but they don't have any love for 'em, either. So I have no problem with your plan and Jared's plan to reduce the SBI down to a support organization. Where the problem is for me, is the rest of the budget. If that doesn't get passed, people start losing things that prop them up. And people start getting restless, then hungry, then desperate, then violent. And they commit crimes... crimes that can't be controlled. Not by Police, not by my Boys, either.\"\n\nI nodded, then Cerone went on: \"And Commander, I know there's some crap going on about race wars, and ginning up stuff. It's at the Federal level, too. And stuff like that is as bad for my business as it is yours, and threatens good order in Society. So we have to find a way to get something done, let people like Woodburn save face, make everyone happy and unhappy at the same time...\" He finished his lasagna and helped himself to another portion.\n\n\"I think I have a solution.\" I said. \"You won't like it, he won't like it, nobody will like it. But it's the only way to get it done.\" With that, I got on my cellphone and said \"Come on over to Luigi's.\"\n\nA moment later, Jimmy Cerone almost choked on his lasagna as State Senator 'Moe' Molinari (R) stepped up to our table. \"What is this, Crowbar Man?\"\n\n\"Oh, I know you don't like Senator Molinari, and the feeling is mutual.\" I said. \"But you're the two toughest Legislators in the State, and whatever gets worked out will be accepted by all the wimps of both parties. Have some lasagna, Senator Molinari, it's really good.\"\n\n\"I gotta admit,\" said Molinari as I fixed him a plate and poured him some wine as he sat down on my other side from Cerone, \"only the Iron Crowbar would have the guts to do this... much less the brilliance of it.\"\n\n\"And why do you think I'm going to work with this guy?\" asked Cerone.\n\n\"Because,\" I said, \"you're practical, you're smart, you want the same things that he and I both do. And because you two will both be better off letting the past go. And it'll be a face saving thing, like that meeting of the Five Families in The Godfather... you make a truce, you make compromise legislation, you hug in a public press conference, and you both win in your respective zones of influence... which should never cross mine, of course.\"",
        "\"This is good lasagna.\" Molinari said as he ate. \"Westphalia could use a good Italian restaurant like this. Of course, I'd want to start a steak and seafood place in Southport, like The Chop House in Don's Town and it's sister place in Westphalia.\"\n\n\"I think an arrangement could be made.\" said Cerone.\n\n\"I've missed my calling.\" I said. \"I should've been a food critic for Elsie Gringer's online Society site.\" Both men laughed.\n\nAfter lunch, I shook hands with both very tough men, and then they shook hands, albeit a little grudgingly... for the first time in years. And if things held, I might literally have ended a Mob war between the City and Southport... all over a lasagna lunch.\n\n* * * * * * * * * * * * * * * *\n\nBack at the State Capitol, I went to the Governor's office.\n\n\"How was lunch, Crowbar?\" asked Griswold.\n\n\"Good.\" I said. \"The food was really good. And I don't want to get ahead of myself, but Cerone might be open to a deal.\"\n\n\"I hope so.\" said the Governor. \"I think Wilson Hammonds wants to cave in, give the Democrats what they want.\"\n\n\"I'm not surprised.\" I said. \"He's the John Boehner of State politics... anything he can do to spit in the Grassroots's faces, he'll do it.\"\n\n\"That's a good analogy, Crowbar.\" said Griswold.\n\n\"By the way, Governor,\" I said, \"how did you decide on who to invite to that conference this morning?\"\n\n\"I didn't.\" said the Governor. \"Woodburn said she would bring along Cerone and Madoff, and Hammonds picked Stockton. I was surprised; I thought he might pick Molinari.\"\n\n\"Next time, invite Molinari yourself.\" I said. \"And keep Molinari in the loop, even if Hammonds and Stockton scream about it.\"\n\n\"So why didn't Hammonds bring Molinari?\" the Governor asked thoughtfully. Chief Griswold and I just glanced at each other...\n\nPart 7 - Enforcing the Law\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette from in front of City Hall at 7:00am, Monday, January 23d. \"Channel Two News has learned that the murder victim at the Alberta Pines Townhouses was Terry Schultz, a single, 34 year old business owner!\"\n\n\"Ms. Schultz was murdered by a knife wound to the throat.\" Bettina went on. \"Police are searching for one Anthony Martoli, who goes by the name 'Andy', in connection with the case. Anyone with information regarding Mr. Martoli's whereabouts are asked to call the Police hotline, or 9-1-1.\"\n\n\"In State news,\" said Bettina, \"the Legislature is all but shut down as the budget battle has brought out the deep divisions between the political parties. State Senator Katherine Woodburn had this to say. Roll tape.\"\n\nA tape was played, showing Katherine Woodburn all but screaming at an outdoor press conference: \"Governor Jared refuses to show any leadership! He insists upon gutting the SBI and subjecting our children to predators and drug distributors! He refuses to understand that the People of this State want security, and want a strong SBI protecting us!\"\n\nBettina said \"Republicans are also unhappy with Governor Jared's lack of leadership. Representative Wilson Hammonds, chairman of the Ways & Means Committee, said this. Roll tape.\"\n\nHammonds was surrounded by reporters at the Capitol as he said \"I believe the parties can come together with a reasonable compromise, but the Governor is refusing to budge on the SBI issue, and he is endangering the entire budget process. State employees will not be getting paid if the Governor continues his unreasonable positions on the SBI bill.\"\n\nBack on air, Bettina said \"And more locally, the Town & County Council will be taking up the issue of promotions within the Police and Fire Departments. The Police Department has especially critical promotions for Precinct Lieutenants coming up, as well as nominations for Detectives. Councilman Reginald B.F. Lewis, supported by Council members Kelly Carnes and Thomas P. Cook, continues to call for dispersal of Detectives to the Precincts, but Chief Sean Moynahan says Detectives will not be limited to any geographical areas while solving crimes in this County. And now for Sports with Nick Eastwood! Nick!\"\n\n\"Thank you, Bettina!\" Nick said. \"Channel Two Sports has learned that Jayne Hallerton, who was kicked off the women's varsity basketball team and her scholarship rescinded, is suing the University, its President, the Athletics Director, and the women's basketball coach for discrimination as well as Title IX violations!\"\n\n\"Patricia Iceland, head of the State Organization for Women, the SOWs,\" continued Eastwood, \"is supporting Ms. Hallerton's lawsuit, and has filed 'friend of the court' briefs to support Ms. Hallerton, who was accused of violating the University's standards of ethics by posing for photographs that were considered obscene by the University's leadership. However, none of those photos were nude, none showed the University's logo nor colors, and supporters of Ms. Hallerton say she was dressed no more improperly than one could find in Town Fitness Centers or any other gym!\"\n\nBettina took back over: \"Also in University news, Dr. Tom Harbor filed a complaint with the State that doctors have been allowed to practice medicine and University Hospital without being on Staff. He says he will bring proof of that in a formal hearing, including proof that radical, unapproved cancer treatments are being allowed at the University. But more, Dr. Harbor asserts that at least one doctor has been allowed to operate in the Trauma O.R. upon wounded police officers. Furthermore, Dr. Harbor asserts that Dr. Laura Fredricson, who is on staff as a gynecologist and surgeon at the Hospital, is not fit to be on Staff because of the salaciously sexual nature of her research with the University's Psychology Department...\"\n\n* * * * * * * * * * * * * * * *\n\n\"So now your wife can sue for discrimination against women, as well, Commander.\" said Theo Washington as we drank our coffee in MCD.\n\n\"But she won't.\" I said. \"Dr. Wellman does not like people who besmirch his University, and ambushing him in the process makes him even angrier. He's going to slap back Dr. Harbor so hard, all the king's horses and all the king's men may not find the pieces.\"\n\n\"Looks like your trip to Midtown didn't bear much fruit.\" Cindy said. Only Theo was there with us at the moment.\n\n\"We'll see.\" I said. \"I am delighted to see that the Media is not focusing on the true key players in all this.\"\n\nTheo said \"Sir, I'm hearing that some people are going around the black areas of Town trying to stir up trouble. Maybe even paying people to demonstrate against the Governor for holding up the budget. And people are spreading rumors that welfare checks will be cut off, and food stamps, too.\"\n\n\"That's a Federal program!\" Cindy exclaimed. \"No one is going to get their food stamps cut off!\"\n\nTheo shrugged his shoulders. \"That's what's being spread around, and people aren't stopping to consider things like that truth.\"\n\nI shook my head. \"God, I hate politics.\"\n\n\"So why are you getting involved?\" Cindy asked. \"Why not just let them implode on themselves?\"\n\n\"Because I've been given an opening to make a difference.\" I said. \"And the SBI issue affects me and all of us LEOs directly. It's almost my duty to get involved.\"\n\nJust then a ghost came into MCD. On second look, it was Teresa Croyle, and she looked sick as a dog.\n\n\"I had my treatment over the weekend.\" Teresa said as she saw my look at her. \"And I'm a lot better than I was yesterday.\"\n\n\"Good grief, Captain.\" I said. \"Go home, get some rest. Especially if you intend to attend the Council meeting tomorrow night.\"\n\n\"How about I just stay in my office?\" Teresa said. \"You know, desk duty.\"\n\n\"How about couch duty?\" Cindy said. She escorted Teresa out of the MCD room. Others began trickling in, and another beautiful day in our Town and County began...\n\n* * * * * * * * * * * * * * * *\n\nAt 8:30am, Classroom 'E' began filling up with Detectives and Officers for the morning meeting to discuss the murder of Terry Schultz. Chief Moynahan sat in, and Cindy had Joanne lead it.\n\n\"Nothing further on the autopsy or toxicology tests.\" said J.R. Barnes. \"The DNA tests are still out. Preliminary tests didn't get any hits, which is not surprising since Martoli had a clean record.\"\n\nSergeant Rudistan gave his report: \"We talked to other residents. No one heard anything, no screams or anything like that. We talked to the staff at Luigi's, no one really remembered Terry nor Andy. They said it was a busy night.\"\n\n\"Sounds like you, Micah.\" Cindy said. Everyone laughed, and Rudistan grinned.\n\n\"If he's like me, why does he need to be on a dating site?\" Rudistan replied jovially. Everyone laughed... except me. I just turned and looked at him.\n\n\"You know,\" I said, \"that raises a serious point. Martoli has money, unless Myron is about to tell me differently. He has a Beamer. He's a decent looking guy, though you ladies can attest to that better than I can. Why IS he on a dating site?\"\n\n\"Sir,\" said Teddy Parker, \"online dating has become a normal thing in this day and age. People find dates as well as activity groups, friends, that sort of thing. Even elite singles, as Martoli would be considered to be, use dating sites.\"\n\nParker continued: \"And sir, this may tie into something else I learned. I was able to contact some of Andy Martoli's co-workers at Dakota Funding. They all said he was a good employee, decent person, a.k.a. 'nice guy', and that he was somewhat impish at times.\"\n\nParker went on: \"But one of his I.T. co-workers here in Town, a Jeff Fuqua, said he thought Andy had problems with women. He was one of those types that would ask women out in a way that turned them off, and he wasn't good at simple conversations with them. I contacted Alan Harris, who works in Dakota Funding's H.R. Department. He said there were no formal complaints about Andy Martoli, but he said it with an inflection that something unofficial might've been said.\"\n\n\"Okay. 'Unofficial' complaints are as good as the paper they're printed on.\" I said. \"And I'm not good at conversations, either. Most of them are with potential perps, not potential dates.\" Everyone laughed tepidly. \"Okay, what's next?\"\n\n\"I could not get in contact with any of Terry Schultz's employees.\" said Teddy Parker. \"I left messages, none have been returned as of yet. We got a search warrant for the office yesterday, and went in and got everything we could: papers, computers, all that. The Mouseketeers and the other Data Guyz are processing that now.\"\n\n\"What about the 'Red Flag' business?\" I asked.\n\n\"We asked ADA Patterson about getting warrants.\" said Mary Milton. \"She said she would talk to you about that this morning, Commander.\"\n\n\"That does not sound promising.\" I said. \"Okay, I've obviously usurped this meeting from Detective Warner, and I apologize. What's next, Ms. Warner?\"\n\n\"Uh, can someone run that film footage of Andy at the condo?\" Joanne said.\n\n\"Sure.\" said Myron. Seconds later, the film was running.\n\n\"When it gets to him getting out of his car, stop it.\" Joanne said. Myron did her one better: he fast-forwarded to it.\n\n\"Commander,\" Joanne said, \"Andy Martoli's drivers license lists him at 5'6\". That man is far taller than five-foot-six.\" There were audible gasps as we realized it.\"\n\nI stood up. \"Yes, and I should've seen that. For all of you that say nothing gets by me, this is proof that things do. And in this case, Detective Warner saw it when I did not.\" I walked over to where she was sitting, two chairs to my left. \"So Detective Warner is the Iron Crowbar for the day.\" \n\nAnd with that, I handed Joanne the red crowbar. Everyone broke into applause as Joanne practically squealed with happiness.\n\n\"How long do I get to keep this, sir?\" she asked as she admired it, tapping it in her hand and feeling its weight.\n\n\"Until I have to leave the building and need it for personal defense.\" I said, returning to my chair. I noticed the Chief smiling at the end of the table.\n\n\"Very astute obser-vayyy-tion, Mizz Warner.\" said the Chief.\n\n\"It explains some things, too.\" I said. \"Okay, let's see what we can do with this knowledge.\" I reached over and dialed a number into the speaker-phone in the middle of the table.\n\n\"State Crime Lab, Lieutenant Perlman speaking.\" said the voice on the other end of the line.\n\n\"Hi Tanya, it's Commander Troy.\" I said. \"We're in a big meeting about the Terry Schultz case, and you're on speaker phone. We need to ask about Andy Martoli's DNA.\"\n\n\"I was just about to call you about that!\" Tanya exclaimed.\n\n\"It's not Andy Martoli's semen in Terry's vagina, is it?\" I asked.\n\n\"Nothing gets by you, Commander.\" Tanya said. We all broke out into laughter.\n\n\"Credit where due, Tanya.\" I said with a grin. \"This one didn't get by Detective Joanne Warner. So what's the scoop?\"\n\n\"Good for Joanne!\" Tanya said. \"Here's what we have. Four years ago, a woman filed a paternity suit against Andy Martoli, and he gave a court-ordered semen sample. The baby wasn't his, but the State kept the DNA record on file. We just got a report back that the semen sample from your case does not match that previous sample from Andy Martoli. We have not yet found a match, and you'll have to give us 24 more hours at least while we access Federal databases and those of other States.\"\n\nAfter everyone yelled \"Bye Tanya!\" and we disconnected the call, I sat back down... a very serious look on my face.\n\n\"Mouseketeers: any other data from that computer?\" I asked.\n\n\"Two things.\" Mary said. \"First, a list of women, first names only, and money amounts. They may have been the 'Red Flag' women. Second, we found another file. Apparently men could hire her to find out if their wives were cheating on the husbands. Only six cases there, three green flags, two yellow, and one red. No list of paid men employees, though. And it's all part of my overall package I asked ADA Patterson to get warrants for.\"\n\n\"Good.\" I said.\n\n\"I also searched hard through her emails to find out if she had any girlfriends.\" said Mary. \"Women like to tell a friend if and when they're going on blind dates, for their safety, of course. But as far as I can tell, Terry didn't have any close friends. And no emails with any other women about her date with Martoli.\"\n\n\"That's why not having the phone is such a problem.\" I said. \"That might tell us a lot more than the computer... the computer...\"\n\n\"Uh oh, reverie time.\" Cindy said.\n\nWhen I came out of it, I asked \"Myron, did you guys get all of the footage from the condo complex that night?\"\n\n\"Yes sir.\" said Myron. \"And we have some footage of other couples that live in the complex going out or coming in. However, sir, some of the cameras are connected to motion sensor lights, and only record when movement is detected.\"\n\n\"Hmmmm...\" I growled to myself. Just then the Duty Desk Patrolman came in after knocking.\n\n\"Chief, Commander,\" the young rookie said, \"We just got a call from Dakota Funding. They said Andy Martoli has not come in to work today, and he hasn't called in, either. They cannot get hold of him on the phone. They called immediately because we'd called them over the weekend, and because of the morning news reports.\"\n\n\"Thank you.\" I said, dismissing the Patrol Officer.\n\n\"Warner, Parker, get over there.\" Cindy said.\n\n\"Hold on.\" I said. \"Before you go, let's finish this up. I need three questions answered. One: where is Andy Martoli? And I'll just say it now... I think he's dead. Captain Ross, alert the Precincts and all patrols to be on the watch for a dead body. \n\n\"Question Two.\" I continued. \"Motive, means, and opportunity for murdering Terry Schultz. And Question Three: who put Terry's original computer back on her table for us to find?\"\n\n\"What?!\" Cindy and the Chief said simultaneously. Everyone else gasped.\n\n\"Look at this this way, people.\" I said. \"That computer has been a burr in my saddle since the moment I saw it. Why was it not taken by the perp? He took her damn cellphone, and left the computer right there. Not only is it of value, the information on it is tremendous, and could be damning to the perp or someone else. Why not take it and destroy it? My answer is that he DID.\"\n\n\"And that means,\" I continued, \"the stolen computer was not her original one. Either she or someone else left that second computer as a diversion, and after it was taken the original was put back there. The original was obviously hidden while the decoy one was out there, or the original would've been taken, too. That's why I was asking about the footage.\"\n\n\"We'll take a second look at it, sir.\" said Myron.\n\nAt that moment, Joanne stood up and came over to me... and handed me back the red crowbar. \"I'm out of your league, sir. I don't deserve this... not yet.\" There were murmurs of agreement... not at Joanne, but at what I'd just deduced.\n\n\"Sooooo,\" said the Chief, \"how did this computer get back to the desk? Terry Schultz was dead when she hit the floor.\"\n\n\"Yes sir, she was.\" I said. \"And if the person who did put the original back didn't set off the motion sensors in the building, it suggests that this person might have been in the apartment the whole time, or the manager knows more than he's told us, so far. But let's not go after him until we're sure there's nothing on the tapes.\"\n\nAt that point, Cindy dismissed the Detectives to the pursuit of the case. I asked Mary to come with me to see Paulina.\n\nPart 8 - Legalities\n\n\"So how is Tasha doing?\" I asked Paulina Patterson as Mary and I sat down in front of her desk in her office next to mine.\n\n\"Wonderful.\" Paulina said. \"You got the latest pictures I sent you?\"\n\n\"Sure did.\" I said, then added as a hint: \"And I wish I could see more of her, and you.\"\n\n\"It's been a busy time, lately.\" Paulina said, somewhat demurely. \"For both of us.\" She obviously wanted to change the subject, as she said \"Okay, about the warrants for these people listed in Terry Schultz's 'Red Flag' file: Judge Folsom is handling this one personally. I did not do a good enough job explaining to him why this data was necessary, and he wants you, Don, to accompany me to his Chambers today and explain things to him. I don't think he's averse to it, but he wants to understand a lot better.\"\n\n\"We can do that.\" I said. \"Should we bring Mary along, to explain any details he might want to know?\"\n\n\"Er, no.\" Paulina said. \"He's not exactly enamored of people with purple hair, even if she is a Police Detective and a brilliant data analyst.\"\n\n\"He should try purple hair himself before he judges others on that.\" Mary said with something between humor and acerbity.\n\n\"He's a judge; judging is what he does.\" Paulina replied. \"Okay, I'll call the Courthouse now. He's only got one case today... handling preliminaries for Sharples's upcoming trial.\"\n\n\"I'll be really happy when that finally gets underway.\" I said.\n\n* * * * * * * * * * * * * * * *\n\n\"I appreciate you coming over today, Commander.\" said Judge Folsom as we sat before him in his chambers. \"We jurists sometimes have to work at it to keep up with your ideas as you solve cases, though we've come to trust your judgment even when something sounds outrageous. So help me understand this 'red flag' situation.\"\n\n\"Thank you, Your Honor.\" I said. \"Our recent murder victim, Terry Schultz, ran what was a de facto private investigation service where she sent women to test the loyalties of certain married men. The wives of these men hired Ms. Schultz to make these inquiries. In some cases, men hired her to test their wives loyalties, but there were few of those, so I'll just talk in terms of the wife hiring Ms. Shultz to inquire about the husband.\"\n\nI continued: \"Ms. Schultz gave her reports in the form of 'flags'. A green flag meant the husband passed the test. A yellow flag meant the husband may or may not have succumbed to the temptation or only succumbed part of the way, and a red flag meant certain infidelity. We, meaning the TCPD, are still pursuing leads regarding this. What it also means, Your Honor, is that these husbands might have had motive to do Ms. Schultz harm.\"",
        "\"So how did you derive Ms. Schultz's intent?\" asked the Judge. I explained about the website as well as the entries found on Ms. Schultz's computer.\n\n\"Okay.\" said the Judge. \"Ms. Patterson, you will have to make a much more solid connection if any of this ever gets to trial. But that level of proof is not necessarily needed just to obtain warrants. So, Commander, if I grant the warrants, what will you specifically be looking for?\"\n\n\"Motive, means, and opportunity, Your Honor.\" I replied. \"We, meaning the Police, are developing leads that the murder may have been a professional hit upon Ms. Shultz. We want to look into the finances of these men for any abnormalities. We also would like to read their emails and cellphone text records where possible, to see if they did us the favor of spelling out their intent to harm Ms. Schultz.\"\n\nThe Judge pored over the data for several long minutes. He then asked \"What were the numbers of divorce filings versus the number of cases you have here... some forty or so of them?\"\n\n\"I believe that twelve of fourteen 'red flags' ended up in divorce filings, sir.\" I said. \"Six of sixteen 'yellow flags' led to divorce, and only one of ten 'green flags', that being Dr. Robin Grayson. He was involved in some of our previous cases months ago, but is not a prime suspect at this time.\"\n\n\"Okay.\" said the Judge. \"What I think I am going to do is allow warrants for any of these people for whom a petition for divorce was actually filed with the Courts. Additionally, I'll allow warrants for all those listed as 'red flags', men and women. For the rest of them, you'll need to show more before I grant the intrusion into their lives, or if all the 'red flags' don't come to anything.\"\n\nAs that was the best I was going to get, I said \"Thank you, Your Honor.\"\n\n* * * * * * * * * * * * * * * *\n\nBack at Headquarters, I first went to check on Teresa. She was sitting at her desk.\n\n\"Nothing in the trash cans.\" I said. \"So you're not getting sick any more?\"\n\n\"They gave me some medicine for nausea.\" said Teresa. \"It's working pretty well today. Can't say that for yesterday.\"\n\n\"I'll bet.\" I said. \"When I leave this room, lock the door behind me and lie down on the sofa. Sending you home is harder than keeping you from getting Purple Orders, so if that's the best I can get you to do, I'll take it.\"\n\n\"Yes sir.\" said Teresa. \"Oh, by the way... I've asked the Precincts and the SWAT Teams to do as much training as possible as quickly as possible on crowd control and riot interdiction. I'm hearing some 'grapevine' stuff about that girl that got kicked off the University basketball team... someone may try to make hay out of that situation.\"\n\n\"Your ears are very good.\" I said. \"Thanks for the info. Get some rest.\"\n\n* * * * * * * * * * * * * * * *\n\nIt rarely fails to happen: the Green Crowbar followed the Red Crowbar into my office. I had Cindy sit down in a hot chair. She repeated to me what Teresa had told me about rumors of something being made out of Jayne Hallerton's issues.\n\nCindy then said \"Joanne is still floating in the clouds over your handing her your crowbar in this morning's meeting.\"\n\n\"She made a great observation.\" I said. \"And I totally missed it.\"\n\n\"If you were perfect, you could run for God.\" Cindy replied. \"As it is, we'll take you as the big ol' teddy bear with a 99% record that you are.\" A red crowbar was waved in her general direction.\n\n\"Okay,\" I said, \"we got some of the warrants on the 'red flag' business.\"\n\n\"Yes sir, and Mary and Myron are already amassing the information.\" Cindy replied. \"And speaking of that... everyone just about went nuts when you brought that up about the original computer being brought back for us to find.\"\n\n\"I surprised myself on that one, too.\" I said. \"But it is just about the only thing I can think of that fits the data. So what is everyone doing with regard to that?\"\n\n\"They're going back over the film footage, to see if anything got taken out, or if the recording was somehow interfered with.\" Cindy said. \n\n\"Tell you what,\" I said, \"Get Joanne and Teddy, and let's ride over to those Townhouses.\"\n\n* * * * * * * * * * * * * * * *\n\nAs we were riding in my Police SUV, Cindy said \"One thing about all this doesn't make sense to me.\"\n\n\"Oh?\" I asked. \"What's that?\"\n\n\"Terry Schultz.\" Cindy said. \"To be running this 'red flag' business... I get the idea she's a man-hater. So why is she dating a man? Don't get me wrong, but my first impression is that she would be looking for dates with women, or just not dating at all.\"\n\n\"Maybe it's just unfaithful married men she had a problem with.\" Teddy Parker replied. \"But I understand where you're coming from, that she has an issue with men.\"\n\n\"Or maybe she changed her mind and decided she wanted to try to date men again.\" Joanne said. Cindy's face assumed a look between skepticism and cynicism.\n\n\"You have a point, Joanne.\" I said, rescuing my Detective. \"My wife says that 80% of all lesbians are actually bisexual, and some of them often end relationships with other women because they begin dating a man.\"\n\n\"Harrumph.\" Cindy said quietly.\n\n\"You mean like Melina Allgood, sir?\" asked Joanne.\n\n\"Maybe.\" I said, studiously not showing surprise at Joanne's 'gotcha' comment. \"My wife Laura is the academic expert on those subjects. Our expertise is in catching criminals and making them pay dearly for committing their crimes in our County. Okay, here we are...\"\n\nPart 9 - Finding A Cat\n\nI made the notations on the tag attached to the seal on the apartment door, then sliced it open. I went into the apartment, followed by Captain Ross and Detectives Warner and Parker. Though I had not asked for it, a Uniformed escort, that being Rudistan and Morton, were sitting in their parked patrol cruiser on the street below.\n\nThere was still a huge bloodstain on the carpet in the bedroom. The bed was stripped; the sheets and pillowcases had been collected as evidence. I went up to the front window and looked out. Then I tried to open the windows. They were locked. I then examined the locks with my magnifying glass.\n\n\"Okay.\" I said. I then went to every other window and did the same. All the windows were locked, but on the last window I tried, the right-side window that looked out back from the greatroom, I saw a tiny sliver of bright, shiny brass. I took a picture with my cellphone, and sent it into the evidence servers.\n\n\"Note this, everyone.\" I said. \"This window lock was recently moved. Unlocked and locked back. None of the other windows have been opened in a very long time, if ever. Y'all can borrow this magnifier if you want to check for yourselves.\n\nJoanne eagerly took the magnifying glass and looked at that window, then went to all the others. Teddy said he'd take our word for it, and only looked at the window that showed use, as did Cindy, who videotaped it on her cellphone.\n\n\"So this window was opened, sir?\" Joanne asked.\n\n\"With all of you as witnesses,\" I said, \"I'll try opening this window.\" I did so, with Cindy taping it, and it opened fairly easily. I tried the one on the left, also; it opened, but gave a lot more resistance.\n\n\"Yes, I'd say this one was opened somewhat recently.\" I said.\n\n\"So whoever replaced the computer came through this window?\" Joanne asked.\n\n\"Possibly.\" I said. \"Let's go check outside.\"\n\nWe went out the door, downstairs and down the hallway to get to the backyard area. There was a grill for common use and a bit of yard.\n\n\"Interesting.\" Cindy said. \"The fire escape ladder is up, and it'd be rough but doable climb to get up there.\"\n\n\"Easier to come from the roof or the third floor apartment.\" I said. \"Come down that fire escape to Terry's landing, then on down. Extremely poor design of a fire escape; barely meets code.\"\n\n\"You gonna bust Edward Steele on it?\" Cindy asked, probably meaning it as a joke.\n\n\"All kidding aside,\" I said, \"I might have a quiet word with him about it. Okay, who lives in the third floor apartment.\"\n\n\"It's empty.\" said Teddy Parker. \"It's never sold nor been rented out.\"\n\n\"Let's go up and take a look.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nThe apartment manager, Tom Yaris, let us into the third floor apartment. The floor design was identical to Terry Schultz's apartment. The walls were bare white. The place was fairly clean and not very dusty, but it still looked and smelled stale and unused.\n\nI went to the back windows. \"These have been closed and unused for a long time.\" I said. I opened one window, with Cindy filming me, and looked out at the landing. \n\n\"It's pretty grimy on the landing.\" I said. \"If anyone walked on here, it'd be hard not to leave traces.\" Everyone else looked and agreed.\n\n\"What about the ladder to the roof?\" asked Joanne.\n\nI went out onto the landing, leaving footprints, and examined the ladder to the roof, which was attached to the side of the building. \"Tough to tell.\" I said. \"But I'm not seeing any mud or obvious signs of recent use. Besides... this is the only way to the roof. How else would someone get up there in order to climb down here?\"\n\n\"Sir, I have a question.\" Joanne said. \"Do you think the man who had sexual intercourse with Terry Schultz is the person who murdered her?\"\n\n\"I can't say one hundred percent, but I think it's the most likely scenario.\" I replied. \"And to that point... what we're looking at here, while important, may just be a side issue. Remember, my thesis is that the murderer took the decoy computer, so the question of who put the computer back may not answer the more important question of who murdered Terry Schultz...\"\n\n* * * * * * * * * * * * * * * *\n\nAs Cindy and I got into my Police SUV to return, with Joanne and Teddy riding with Rudistan and Morton, she said \"Well, I guess we eliminated some things, but didn't really get any concrete answers.\"\n\n\"True, that.\" I said. \"Like I said, that was a fun intellectual exercise, but if I'm right it's not going to land the fish that murdered Terry.\"\n\n\"What about Andy Martoli?\" Cindy asked.\n\n\"Hmmm, that reminds me of something...\" I said as I had a thought. I called David Krueger.\n\n\"David,\" I said when he answered, \"do you still have friends among the Governor's staff?\" David had been hired by me from the Governor's staff.\n\nHe answered: \"Yes sir, I still talk to a couple of them from time to time.\"\n\n\"Listen, I'd like for you to do me a favor...\"\n\nPart 10 - Fruition\n\nAt 4:30pm, I called to see if the Mouseketeers had gotten anything quick and dirty from all the data the warrant had allowed us to obtain that morning. Mary said they had, and that they'd be up to brief us at 5:00pm, if that was okay.\n\nOf course it was, and the Chief brought us into his conference room to discuss it. It was me, Cindy, the Chief, and the Three Musketeers David Krueger, Myron Milton and Mary Mahoney around the table, the Chief at the end of the table near the door, me at the end of the table at the far end, Cindy to my left.\n\n\"First, sir,\" said Mary, \"you wanted information on Tommy and Tina Yaris. They've been married four years. She's the daughter of Harmon Sage, who runs Sage & Son Funeral Home. Tommy Yaris did not like that kind of work, so he instead took a job at Crown Chemicals.\"\n\n\"From what I could get from the Crown people,\" Mary said, \"Tommy resigned suddenly, and about two weeks after he was promoted to shaft manager in one of the factories. After that he had a job with the County Department of Education, doing maintenance at some of the schools. I can access their records, and they say he resigned from there over the summer about a year and a half ago. They were surprised because they were going to make him the Maintenance Manager for all the schools. Then he and his wife were hired as apartment managers when the Alberta Pines Townhouses were completed, and they've been there ever since.\"\n\n\"What did she do before they married?\" I asked. \"And after they married, for that matter.\"\n\n\"She was a receptionist for Effim, Goode & Hart, the Men's Divorce law firm.\" Mary said. \"She left there when she got married, and had no official job, per tax records. Then she was put on the payroll along with her husband when they came to the Alberta Pines Townhouses.\"\n\n\"Not a whole lot there.\" I said. \"That's not a complaint about you, Mary. There's just... not much on them. Okay, tell me about 'red flags'.\"\n\n\"Of the nineteen divorces and two other 'red flags',\" said Mary, \"we had two immediate names come up. You know Patrol Officer Louie Towson?\"\n\n\"Towson!?\" exclaimed Cindy. \"He's one of our best Patrol Officers! He's going to be up for promotion to Corporal or even the Detective Track in August!\"\n\n\"Yes ma'am, and it's not him.\" Mary said, which calmed Cindy down. Mary explained: \"He has an older brother, Gregory Towson, called 'Greg'. Greg was also a TCPD Police Officer. He was married with one child. It's Greg's name that came up.\"\n\n\"He was before my time.\" I said.\n\n\"He left right when you got here.\" Cindy said. \"I remember him, now that you mention him. Had a domestic abuse issue, didn't he?\"\n\n\"His wife claimed he was verbally threatening her and their child. He said he never raised his voice.\" said Mary. \"I went back into the records and found the date of the call to 9-1-1; it was in the Spring before you got here, Commander.\"\n\n\"So with any domestic abuse case, for real or imagined, the Police have to make an arrest. What did they do?\" I asked.\n\n\"They brought Greg Towson back to Headquarters, but didn't formally arrest him.\" Mary said. \"Internal Affairs grilled him extensively. He said his wife was accusing him of cheating on her but he swore up and down that he never had. He had a good record as a Police Officer, no hints of alcoholism or violence or job stress. So the TCPD arranged for marriage counseling with... well, you get one guess, Commander.\"\n\n\"Pastor Westboro, I presume?\" I said. Mary nodded.\n\n\"Yes sir, but it didn't work out.\" Mary said. \"This was also Terry Schultz's first 'red flag' case, too.\"\n\n\"What was the name of Greg Towson's wife?\" I asked. Mary and Myron just looked at each other.\n\n\"Not much at all gets by him.\" Cindy said, noticing their look.\n\n\"Let me guess... \" I said. \"Her maiden name is Schultz, or she's in some way related to Terry Schultz.\"\n\n\"Yes, Vivian Schultz Towson.\" Mary said. \"First cousins; their fathers are brothers. And I already bet Myron a bottle of wine that you can tell us the gist of what happened.\"\n\n\"Sooo...\" I said, \"it now makes sense. I'll bet 'Red Flag' was the not-so-good Pastor Westboro's idea. Fits him like a glove. He got Terry to start doing it, beginning with Greg and Vivian Towson, with the idea he could use it, and her, in the future, perhaps to blackmail people he wanted to put into his power.\"\n\nI continued: \"So Terry sent a woman to seduce Greg, and with that marriage falling apart, he likely succumbed. Ergo, red flag; ergo, divorce.\"\n\nMary said \"Close, sir. Greg contested the divorce, and said his wife had sent the woman to seduce him after getting him drunk. He said it was 'male rape'. The Police backed him up hard; a bunch of them testified on Greg's behalf. Some evidence of Vivian cheating was also introduced into the case. Greg got joint custody, but his wife left the State with the child. At that point, Greg began becoming unstable and drinking, and Captain Charles got him a transfer to the Fire Department. He got cleaned up with some help from 'The Vision' in Coltrane County, and he's still with the TCFD.\"\n\n\"Okay, he's suspect number one.\" I said. \"You said there was a second name that jumped out?\"\n\n\"Yes sir.\" said Mary. \"His name is Dan Walther.\"\n\nI sat upright in my chair. \"The executive producer of KSTD?\" I asked, shock in my voice.\n\n\"The same one, sir.\" said Mary.\n\n\"Damn...\" I said, going into a reverie. \"When did he get 'red flagged'?\n\n\"Six months ago.\" said Mary. \"The divorce was filed four months ago, and is working through the Court system now.\"\n\n\"Besides the fact that he's part of your 'beloved' Media, Mr. Crowbarrr,\" said the Chief, teasing me, \"is there anything special about Mr. Dan Walther?\"\n\n\"Yes sir.\" I said. \"Walther is a good friend of Gil Krasney, our District Attorney. I've suspected that Krasney has leaked information to Walther from time to time. And Walther is also close to State Senator Katherine Woodburn. When she was at KXTC, she and Walther colluded a lot more than Citizens would realize.\"\n\n\"So is Walther a possible sus-pect herrrre?\" asked the Chief.\n\n\"Not from what I'm seeing of his finances, Chief.\" said Myron. \"The divorce is killing him financially, and tangling up his finances. So I don't see him hiring anyone to kill anyone. And he's too old to be the killer, who we think is around Andy Martoli's age.\"\n\n\"That might apply to any of these guys that have gone through divorces.\" Cindy said.\n\n\"Most of them are definitely in bad shape financially.\" Mary said. \"But we're still looking, and some of them have worked or are working their way out of their problems.\"\n\n\"Okay, guys,\" I said, \"the six o'clock news should be extremely interesting. Captain Ross, I halfway expect Andy Martoli to be found tonight, so put the Force on alert. No, don't ask why... call it a 'vibe'.\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Amber Harris, KXTC Channel Two News at Six!\" said the lovely athletic blonde reporterette from the Channel Two Newsdesk in KXTC's studios. \"Channel Two News has learned that a compromise SBI bill may be in the works! Sources close to the situation have told Channel Two News that a group of legislators and members of the Governor's staff are working to bypass the feuding party leaders and achieve a reasonable solution for all sides.\"\n\n\"Other sources tell Channel Two News that our own Police Commander and SBI Inspector Donald Troy was integral in this legislative compromise, and that he is on his way to Midtown to help close the deal!\" Amber continued.\n\nAs Cindy and I watched from my office, she peered at me and asked \"Is this true?\"\n\n\"Beats me.\" I said. \"I'm obviously not in Midtown right now. I'm up here trying to solve a murder case.\"\n\n\"Uh huh.\" Cindy said skeptically. \"Yesterday, Sunday, you came back from Midtown reporting virtually no hope. Twenty four hours later, Amber is announcing near-term hope, and you were anticipating watching the news. And I don't hear any choppers flying in to take you down there. So what's going on?\"\n\n\"If I tell you that I expect new information in the Terry Schultz murder case,\" I said, \"would you believe me?\"\n\n\"Of course I'll believe you.\" Cindy said. \"But why?---\" She stopped short, beginning to realize some things. I just let her think through them.\n\n\"Figure it out while you drive Teresa home.\" I said. \"That is a dismissal, Captain.\"\n\n\"Yes, Commander.\" replied the Captain as she got up and left the office.\n\n* * * * * * * * * * * * * * * *\n\nAt 7:15pm the news came. The Duty Desk Patrolman knocked on my door, then stuck his head in when I called out \"Come in!\"\n\n\"Sir,\" said the Patrolman, \"we've just got a call that a body has been found in Ronald Reagan Park. Young man, dark hair. I.D. on the body says he's an Anthony Martoli, and we have an APB out on him.\n\n\"Thank you, Patrolman.\" I said. \"When you get back to the Duty Desk, call Captain Ross and Detective Warner, and tell them to meet me at the scene.\" The Patrolman hastily left to implement my instruction.\n\nI got my kevlar-lined trenchcoat and the ubiquitous red crowbar. Putting on my Tilley Hat, I was about to leave in response to this very expected development when Myron Milton came racing up the hallway and to my office door.\n\n\"Commander!\" he said, catching his breath, \"do you remember when we learned of that code 'Pink Knights', that it was the signal for something about to happen? And that it would appear on the website of Citizens for Police Accountability?\"",
        "\"Yes, I do.\" I said. (Author's note: 'Knights of the Round', Ch. 03)\n\n\"Sir, the phrase just appeared on their site...\"\n\nTo be continued.\n\nBonus question: how did the Iron Crowbar know that 'new information' would be coming, and in the form of Martoli's body being found?"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-hot-date-mystery-ch-02"
}