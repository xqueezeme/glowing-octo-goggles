{
    "title": "The Shack: Necessary Evil",
    "pages": [
        "Although this is a Tale from the Shack, it can be read as a standalone tale. As with the rest of the Tales from the Shack, this is written in a Noir style. This is posted in LW to put it with the rest of the series. I typically don't write graphic sex into this story line and that remains true here. Special thanks to sbrooks103x and Crkcppr for the editing and Beta reading. Any remaining errors are entirely mine -- probably added after their assistance. \n\n///////\n\nFavors. In my world, favors are more important than almost anything else.\n\nA favor owed is immensely important, sometimes insanely difficult or expensive. Sometimes easy and cheap. Usually all the cheap ones cost you is pieces of your soul.\n\nThose favors are why Trace and I were sitting in the enclosed box seat the symphony. He looks amazing in a tuxedo -- tall and thin, the contrast of the close cropped grey hair against his almost jet black skin. Very distinguished, so much so that nobody even blinks that he's with a white woman; that's still a little unusual these days, though less than it was. I suppose, given my rather plain appearance, that some probably wonder why he chooses to be with me.\n\nHe runs technical exploitation for both sides of CUMULOUS, which means he sort-of works for me since I am the Director. CUMULOUS is mostly a covert surveillance program with two sides. GREEN is the more conventional, Army-standard covert program with highly trained agents in various intelligence disciplines. RED is the dark side, where we recruit the desperate, the lost, and the hopeless. Assets that won't lead back to us, assets that don't know who they are working for, or even what the mission really is.\n\nI've distanced his chain of command as far as I can from me because we've been \"friends with benefits\" for just a bit less than two decades. Ever since we both worked much further down in the food chain. Long before the project was even named CUMULOUS.\n\nTrace and I will be together until one of us dies, we both know it, but neither of us is the \"marrying kind.\" I've always been pretty much married to my work. And regardless of how I might or might not feel, he's still carrying a torch for his wife. He still wears his wedding ring. The fact that she's been dead for almost 25 years hasn't lessened his love for her at all. Or his pain.\n\nHe'd been driving home with Josephine after a little too much to drink at a company party, celebrating because she'd finally gotten pregnant, when he crossed the lane into oncoming traffic. She was decapitated, dead instantly, but he walked away without a scratch. That was before they prosecuted drunk driving very much, so he got a suspended license and a very empty home. It didn't take very long for ghosts and spirits to start tearing him apart.\n\nThe ghosts of his Josephine and unborn child and the spirits of Johnny Walker and Jack Daniels.\n\nHe fucked up again, of course. Trace was one of the first of them; a drug addicted, alcoholic electronics expert recruited to an experimental program that would later become CUMULOUS RED. And I was the junior grade Army Counterintelligence Agent assigned as his handler. Far too inexperienced for the job, though I'd have told anyone different. Including myself.\n\nThe very first lesson in handling an asset is: Do Not Get Emotionally Involved. It's practically on the front steps at the school. Maybe they really should carve it there. I don't know that it would have helped, but maybe.\n\nHe was pretty much a wreck when he was handed off to me -- been living in gutters for over a year, despite an advanced degree in electronic engineering from CalTech. Filthy, miserable, utterly repulsive, foul beyond belief. Disagreeable at the best of times. He was devolving, starting to talk to himself. And answering. He didn't have much time left to be of use to us and I knew it. Logically, it was nearly time to drop him, let him wander off and die. Any stories he could tell of bizarre espionage operations would be written off as the fever dreams of a dying alcoholic.\n\nBut I watched him sleep, and heard him talking to his Josephine, pleading, begging her not to die this time, as he relived his nightmare over and over.\n\nFor months I ignored it, maintained my distance, and maintained that precious gap between us.\n\nI was weak. In the end, it turned out that actually watching a basically good man destroy himself with drugs and alcohol is more difficult in practice than in the classroom. We were together so much and his pain was so intense. And, worst of all, he wasn't really what I'd been trained to deal with -- he certainly wasn't betraying his country or seeking money or sex or revenge or any of the usual motivations CI agents are trained for. He was just trying to stop the pain.\n\nI could almost hear Josephine begging him not to do this to himself.\n\nIt ate at me every day. Josephine's voice got louder in my mind. I just didn't have enough experience yet to ignore her.\n\nHe failed to show up at a meet to examine a computer we had \"temporarily appropriated.\" Even as incoherent as he was getting, he was still the best.\n\nWe had to return the computer unexamined, leaving me furious. Pissed beyond belief.\n\nI headed straight over to the abandoned factory where he was living in the basement, stormed down the rusting metal stairs and found him passed out in his own vomit. Probably only alive because a crumpled pizza box was holding his face out of the actual pool of half-digested food and booze.\n\nHe'd probably pulled the box of pizza out of a dumpster.\n\nI couldn't take it anymore. Without thinking it through, I stripped him, emptied his pockets and all of his little stashes, then dumped his assortment of drugs in the floor drain, washing it down with his booze. I dragged his sorry ass into the bathroom and handcuffed him to a cast iron pipe. The only thing he had on was his wedding ring.\n\nI kept him there for months and it almost killed him. The fatality rate for the DT's from sudden alcohol withdrawal alone is almost 15 percent, much less coming off the cocktail of whatever drugs he could scrounge. But I decided that he'd be better off dying than to \"live\" like he was. It wasn't my decision to make, of course, but I made it anyway.\n\nI do that a lot.\n\nI do the things that have to be done because other people can't bring themselves to do them.\n\nHe had full-on Delirium Tremens with hallucinations, fever, and seizures. All of the worst symptoms. He screamed, ranted and howled like an animal. In almost any other neighborhood, somebody would have called the police. In a religious one, they'd have probably called for an Exorcist.\n\nIn this one, people looked down, studied the broken pavement, pulled their coats a little tighter, and maybe walked a little faster.\n\nHe'd lay in his own vomit and shit until I came by and rinsed him off with buckets of cold water. Several times, I had to bring in our off-the-books medical support -- a doctor whose license had been pulled for fraud -- to give him IVs. The \"doctor\" never questioned what was going on -- even in those early days, \"assets\" realized that curiosity was an unhealthy habit.\n\nI went from being \"Donna\" to \"You Fucking Diseased Cunt\" to something ugly he just whimpered venomously under his breath, huddled in the corner. With tears streaming from clenched eyelids.\n\nUntil he really learned to hate.\n\nDay by day, I watched it grow until it was stronger than his need for alcohol. When his hate was so strong he refused to beg me for a drink, I figured we'd reached a turning point. He answered in one syllable words for a long time. Eventually he stopped speaking altogether and just sat glaring at me. Silently making promises to himself about things he'd do to me. Someday, when he got the chance. When I dropped my guard.\n\nI gave it another couple of weeks. Then took a bottle of whiskey and a backpack with me to visit him.\n\nI put a bottle of whiskey in front of him and walked around behind him, pulling my throw-away gun out. An unregistered Beretta Minx. A Minx fires .22 Short rounds, and it only carries six. No stopping power, no real penetration to speak of. Not a good choice for self-defense unless you get attacked by newborn kittens a lot. As long as they only show up six at a time. It's a terrible combat gun by pretty much any measure.\n\nBut it's perfect for executions.\n\n\"Go ahead. Take a drink.\"\n\nHe stared down at the bottle sitting a little unevenly on the cracked white ceramic tile floor in front of him.\n\n\"Why?\"\n\n\"I'm done. You want to fucking kill yourself, go ahead.\" I leveled the gun at the nape of his neck. \"Make it a good long drink though. It's your last. I'll just speed things along. I figure I can either just leave you here or roll you out of the van on 14<sup>th</sup>.\"\n\nHe slowly looked back over his shoulder until the barrel of the Minx was only a half inch from his eye.\n\n\"Just another dead junkie in the street?\"\n\n\"Happens every day. Nobody will even bother to ask who you were. At least it'll be quick.\"\n\nHe turned back to look at the bottle. Then slowly reached out to pick it up. I felt the sadness wash over me, but I'd made up my mind.\n\nHe unscrewed the cap bit by bit. He moved brokenly. Rhythmless. Wordlessly, he upended the bottle over the green brass floor drain, watching the amber liquid slowly stream away.\n\n\"You're a fucking hateful bitch, you know that?\"\n\n\"Yeah. I know.\"\n\n\"What if I slip up?\"\n\n\"You die.\"\n\nHe knew I wasn't bluffing. Knew that I'd never forget. I could see that understanding as clear as his hate.\n\nI pulled a set of clothes and a bar of soap from my pack, then unlocked the handcuff for the first time since I put it on him, looking at the torn skin underneath. It would heal -- but he'd always have those scars.\n\n\"Get cleaned up and get dressed. We'll go get something to eat and get you settled into your new home. We have an abandoned hotel. Even has heating.\"\n\nHe nodded, an undying hatred simmering behind his eyes.\n\n***\n\nThat hatred was always there, always just under the surface, always palpable; like that thunder you can feel in the distance rather than hear. I caught him looking at me from time to time, and I knew he was just watching for the right time, the right circumstances. I could feel him promising himself it'd be slow.\n\nIt was something of a race though; I was waiting for the time I'd have to kill him. His pain and guilt over Josephine's death were never going to go away. I promised myself I'd make it quick.\n\nWe worked together for two more years. Much more often than I worked with any other asset. That's kind of the nature of technical exploitation though. It's not like swallow or leg breaker work. Much more constant, much longer term. It also meant he had a better idea of just what we were doing and who we really were.\n\nStill, we barely talked at all. Only about the job underway, the steps that needed to be done.\n\nHe got to the point that we trusted him to drive the van, make the brush passes, and service dead drops. He cleaned up, almost too much. Over time it was harder and harder to tell the \"leveraged asset\" from the trained professionals.\n\nIt was his idea to start a small electronics repair store in a nasty section of town -- and it was perfect. Rumor on the street was that the shop was a front for organized crime. That worked for us. Nobody wants to look too hard at a shop they think works for a syndicate.\n\nThat hate never went away, never diminished -- he was invariably professional, almost icily so, but the subtext was all too clear: Go ahead, drop your guard. See what happens. It made me a better agent, a better decision maker, that certainty of consequences for any momentary lapse of attention.\n\nI ended up handing him off to my replacement when I was promoted to the deputy chief position at CUMULOUS GREEN. I'll admit I breathed a sigh of relief. The relief from stress was almost indescribable. I could finally let my guard down, relax without the risk of being murdered by my own asset.\n\nGo ahead, drop your guard. See what happens.\n\nCancer. That's what happens.\n\nCervical and uterine cancer.\n\nYou know those degrading, uncomfortable pap smears women have to get? Do it. Really. My survival chances were good because we caught it really early. To someone like me the answer was pretty damn obvious. Pull out all the plumbing. All of it. Never planned on kids anyway, and why fucking keep ovaries if you don't have a uterus?\n\nAlmost a year after trading over to GREEN, I had the operation then went home from the hospital. I should have contacted mom, or Pogo. They'd have come and stayed with me. I don't have any idea why I didn't. I lied and told the hospital staff that I had someone to take care of me. I cheated and snuck off in a taxi rather than stay in the hospital one more damn day.\n\nTook way more pain pills than I should have and went to sleep. When I woke up, Trace was sitting in an easy chair he'd pulled over next to my bed.\n\nHe was staring at me, expressionless as a sphinx.\n\nI vaguely remembered locking my guns in the safe before I left for the surgery. Too bleary to remember to get one out when I came home.\n\nOn a normal day, I might be able to take him. He was a lot bigger than me, but I'd had lots of formal training in combat, he'd had none. Certainly not a sure thing given the hundred pound of difference in our sizes, but a good fighting chance.\n\nBut not now, not like this.\n\n\"Good morning Trace.\"\n\n\"You look like shit.\"\n\n\"I feel like shit.\"\n\nHe studied me for a second. \"You saddled us with an idiot.\"\n\nI winced as I pulled myself to a sitting position. \"He just doesn't have experience yet.\"\n\n\"He's had a damn year. He doesn't listen, he doesn't learn. He's gonna get people killed for no fucking reason. He puts a full team on a dead drop. Like nobody would notice that. Looks like a goddamned Easter Parade. Doesn't trust us to do what we do.\"\n\n\"I'll talk to the boss. No point in using throwaways if you just pile on agents to watch over them.\"\n\nHe nodded thoughtfully. \"Get us a real pro. Somebody good. Not some by-the-book asshole.\"\n\nWe sat in silence for a long minute. Until the silence grew too loud for me.\n\n\"I was surprised to see you.\"\n\n\"I figured you might be. Took me a while to find your place. And the right time to talk.\"\n\n\"I thought maybe you might be here for something else.\"\n\n\"Can't say I didn't think about it. Watched you sleep for the last couple hours thinking about it.\"\n\n\"Pillow?\"\n\n\"Fireplace poker.\" He pointed at the decorative wrought iron fireplace set next to my gas fireplace.\n\n\"Oh.\"\n\n\"Have to make it messy.\"\n\n\"Makes sense. Looks more like a break in. At least it's a classic.\"\n\n\"You were just doing your job though. Getting the asset straightened out.\"\n\nI couldn't look him in the eye. Damn meds. \"Yeah. That.\"\n\nIt didn't fool him at all. A look of absolute horror crossed his face.\n\n\"Jesus.\" It was a prayer, rather than a blasphemy.\n\nI didn't say anything; just struggled not to fall apart under the pain and the meds. At least that's what I was blaming.\n\nHe leaned forward, gripping the chair arms. \"Why?\"\n\nI shook my head and looked away. I didn't dare answer that. Damn painkillers had me too off balance.\n\n\"But you'd still kill me if I took a drink.\"\n\n\"In a fucking heartbeat.\" Anger gave me strength to snarl.\n\n\"Why?\"\n\n\"What do you think Josephine would want? You think Josephine would want you to die that way? Rot away slowly? Or would she want it to be quick?\"\n\nHe sat back in the chair, his face grayed and drawn.\n\n\"Jesus.\" Definitely a prayer. \"You made me hate you.\"\n\n\"It worked, didn't it?\"\n\nThere wasn't much to be said to that, and he didn't bother. We lapsed into an oddly comfortable silence. He even helped me get to the bathroom and back to bed before he left.\n\nI thought about calling it in -- my home location was blown to an asset. But I knew it wasn't a risk. He'd had a chance and not taken it. And now he understood. More than I ever wanted him to.\n\nHe looked in on me almost every day as I healed. Shaking his head in disbelief every time he left. We talked a little, mostly about nothing. But mostly we sat and stared into the gas fire, just being together in our own worlds.\n\nI talked to the director about the guy who'd replaced me -- he'd never gotten comfortable working with the kinds of assets RED ran, so it was pretty easy to convince him to move on to a more conventional assignment. A more flexible agent replaced him.\n\nAn unsigned, unstamped dime store \"Thank You\" card showed up in my mailbox a few days later.\n\nTrace became something of a trustee -- he'd figured out who we were, or gotten close enough anyway. Proved himself over and over, eventually he was let in completely.\n\nHe never really stopped coming by. We'd never talked about it, never discussed the next time he'd come over. It just sort of happened.\n\nIt was a couple more years before our relationship went further. It certainly wasn't \"fated,\" the love of his life was dead and I'd never even thought that way.\n\nBut we understood each other thoroughly, and in our world that goes a lot further than looks or charm. The physical aspects were pleasant enough, but just having someone to be with now and then, someone who wouldn't judge, is far more important. And while he never judged me, he was often my conscience.\n\nHe told me he expected me to hold to my promise to kill him if he ever drank again.\n\nI assured him I would.\n\nBecause I do the things that have to be done.\n\nThings nobody else is willing to do.\n\n***\n\nSo nearly two decades later, we sat in the box seat together, Trace's hand resting gently on my arm. Waiting for Maria.\n\nMaria Hawthorne, Deputy Director at the FBI.\n\nI smiled blandly when when she arrived. Her Bureau-assigned protective detail took up positions outside the door to the box, directly across from two of my Dobermans. A dozen more of mine were positioned discreetly around the building. Not too discreetly, I wanted Maria to know.\n\nWe'd both opted for fairly standard versions of the black dress; hers a hair longer than mine, but then she's quite a bit taller.\n\nHer escort, Michael, led her in and seated her next to me, then sat on the other side of her. A slight breach of convention, I know, but necessary. He said something quietly to her, then she turned toward me.\n\n\"You've got my detail a little concerned, they're wondering why you have so many people here.\"\n\n\"Because this is odd, Maria, and my people don't like odd unless we're the ones doing it. You could have made an office call. We've worked together before.\"\n\n\"This has to be completely off the books Donna.\"\n\nNow she had my complete interest.\n\n\"Why is that?\"\n\n\"Because I've lost four agents and can't do anything about it officially. Four agents; I can't let that go. There has to be a penalty. And people have to know it.\"\n\n\"Why me? You have to have other contacts who are a little less complicated to work with.\"\n\n\"Because you have the ability. And you have a vested interest. You remember Morton Gallagher?\" I felt my jaw tighten as she continued. \"A couple years ago, a hooker and a known drug addict with mile long rap sheets were murdered in and near a hotel room that was rented in his name with a supposedly stolen credit card. The money trail stopped cold, but I'm pretty sure you paid for their burial. I'm certain they were your people.\"\n\n\"Even if they were, I believe the unfortunate Mr. Gallagher passed away. Something about a drug and alcohol overdose in a hot tub.\"\n\n\"We looked into that too. There's no proof of anything, but the security camera system glitched at the hotel he was found at for about an hour near the estimated time of death. One of your people I presume.\"\n\n\"Believe me, if it was, it'd be Nobody you would ever want to find.\" If Spooky found out the FBI was looking for her, odds were she'd be rifling though Hawthorne's office and home in less than a week, and there'd be little I could do to stop her. Even if I wanted to.",
        "Maria grimaced slightly as her curiosity fought with common sense. \"I'm not asking you to hand them over.\"\n\n\"So what are you asking?\"\n\n\"The network he was involved in is a private concern. Anything to anyone, specializing in technologies on the prohibited list. Dual-use chemical, biological, nuclear, guidance systems.\"\n\n\"I'm aware.\"\n\nShe paused, uncertain how to proceed. She hated being uncertain, I could tell.\n\n\"So. Our brothers in the three letter agencies found one of their main nodes. Instead of cutting off an arm, you could kill their operations in this hemisphere for quite a while.\"\n\nThat's what we'd been looking for before the unfortunate Tommy-Amber incident.\n\n\"So cut a deal with local law enforcement and roll them up.\"\n\n\"That's what we were trying to do when my people got kidnapped and murdered. Local law enforcement is involved. And DOJ has told me not to make waves.\"\n\n\"Where is it?\"\n\n\"Tri-border region. Argentina, technically, if anyone cared.\"\n\nThe Tri-border of Brazil, Argentina and Paraguay was complicated at best -- international accusations of terrorism, drug running and other crimes were almost too numerous to track, while the local officials claimed everything was blown out of proportion.\n\n\"What are we talking about here?\"\n\n\"An isolated two-acre compound, three buildings, maybe 25 mercenaries, 12 of their company men. Some working girls, maybe six or so.\"\n\nI winced internally for the hookers. Just more girls who'd run out of options, didn't have choices. Doing what they had to do. Like Amber. Like me. Kindred souls.\n\n\"If you want a lesson, you want witnesses. So the girls live.\"\n\nShe nodded, relieved, I think, to salvage a piece of her soul. Michael handed her a small envelope to give to me. I passed it over to Trace without really looking at it. Tuxedo jackets have pockets, and my clutch, like hers, was filled with that last little bit of firepower nobody ever wanted to use.\n\n\"Everything we know about the organization and the facility is on the data stick. Along with details of everything we know about why I'm being told to stand down.\"\n\n\"Somebody above you dirty?\"\n\n\"We don't think so. Not this time. Stupid, yes. Dirty, no. The stand-down came out of the State Department. They're trying to broker some reciprocal law-enforcement information sharing thing.\" She shook her head, lamenting the idiocy of bureaucrats. \"Another useless deal. They just don't trust us down there.\"\n\n\"We earned a little bit of that over the years.\"\n\nShe grimaced slightly at that. FBI types all want to be heroes and don't like to see themselves as bad guys. I'm a bit more honest with myself; I prefer to think of myself as a bad guy who works for the right side. Makes it much easier to make the tough decisions. To do the things that have to be done. She didn't deny my comment though. She's realistic enough know that this is how the world works.\n\nThe US is a more than a bit \"radioactive\" in South America. Memories of Yankee Imperialism, some of it not as long ago as we'd like to believe, give them a pretty dark lens to view our \"help\" with. Besides, the reality is that even when we act with the best of intentions, we're too big, too powerful, and too damn close for comfort. Even cooperating with us on sensible issues -- like stopping chemical weapons from being traded in their own back yards - is looked on as bowing to the US.\n\nMaria seemed to decide to accept reality for what it was. \"Be that as it may, this needs dealt with. If this doesn't get a reaction, it will be open season on every FBI agent, DEA liaison, NGO worker and Embassy staff person out here. Yours too.\"\n\nI considered objecting that mine had teeth, but she already knew that. It was why she was here. It made sense.\n\nAfter all, I was the one that did the things that had to be done.\n\n***\n\nIt took six weeks to set everything up. The electronic dossier Maria had provided was extremely thorough and clearly identified the one government official who needed to be convinced of the error of his ways.\n\nArgentina hadn't had the smoothest relationship with the U.S., and at least one official was using that as an excuse to cover his lack of cooperation and to benefit from pay-outs by the organization. Using that, it didn't take long for Spooky to hunt him down and identify his vulnerabilities.\n\nShe came into my office but left the door open, I noted she had a light grey jacket and skirt suit this time.\n\nSome of my people believe she wears the same style suits as me in a low key effort to piss me off. I know what it really means even if she's never said as much. In my mind, the day she put on one of those suits was the day she was informing me that she'd gone from being a gifted amateur and useful tool to a professional I could trust to do the hard jobs, to think on her own, and respond rather than react.\n\nThe suit didn't bother me, but Candy, my secretary, walked in behind her and leaned easily against the doorframe with her arms crossed across her chest, an almost mocking smile on her lips.\n\nCompletely unlike her. She's always, inevitably, professional to the point of rigidity.\n\nCandy looked oddly feral. Hungry. Things I normally associate with Spooky. I hope it isn't contagious.\n\nThe Nobody Girl put a file on the desk in front of me and moved to one side, so Candy could watch. \"Comisario Mayor Matias Acosta. He's the one who passed the information on the FBI agents, their whereabouts. From what we picked up on the bugs I planted, I don't think he knew they were going to be killed. Once they were, though, he blocked every real attempt to look into it. Probably to hide his own involvement.\"\n\n\"You question him?\"\n\n\"Not yet. He has pretty good close security; they aren't good enough, but I didn't want to clue anyone in by making a mess. Probably better to do everything all at once.\" She let a tiny hint of a smile through, glancing back at Candy. \"He's scheduled to do inspections in the Tri-Border region in three weeks. He likes to play away from home, always hits the bars after work, looking for a girl for the night. And he has a weakness for pretty black girls.\"\n\nCandy's smile broadened voraciously. She'd loved Amber and Tommy and she obviously wanted a bit of revenge.\n\nNormally, I'd have waved her off because of her personal involvement, but Candy was always professional. She'd been one of the best Swallows we'd ever had before we brought her in; her ability to lure a man or woman into bed was remarkable. Besides, if anyone can detach their personal feelings from their work, it's a Swallow.\n\nShe'd even taught Spooky some of the tricks of the trade; how to catch someone's attention without looking like you were trying to. How to get picked up in bar by the right guy so you could get into his house. Spooky occasionally used those tricks as entry options on some of her missions; ways to get into a house or a building, but she'd never be a great Swallow, not like Candy. Spooky just had trouble connecting with people.\n\n\"I assume the two of you have worked out some kind of plan.\" I gestured to forestall any response. \"Just give me a timetable and broad brush details.\"\n\nCandy straightened up. \"It's in the packet.\"\n\nI suppressed a smile. Glancing at the rest of the pages, it was clear they'd spent more than a little time getting this just right. \"I'll let you know if I need anything else.\"\n\nSpooky slipped out, and Candy closed the door behind them.\n\nI reflected that I probably needed to keep a closer eye on those two. Just a glance at the packet was enough to tell me they're a dangerous combination.\n\nBut who would I use?\n\n***\n\nI nodded to the Sergeant, giving the approval to go ahead.\n\nOf course, they're all Sergeants, most of them Staff Sergeants. Anywhere else, they'd have their own squads or platoons. Staff Sergeants are perfect for me -- they're experienced and tempered, but still mostly have the reflexes of youth. \"The Sergeant\" is actually a Master Sergeant. Leading only 40 men, an infantry platoon, would normally be a step down for him. Not these forty. Especially not leading them for me.\n\nHe tapped his mike. \"Mockingbird Mockingbird this is Hellhound over.\"\n\nA woman's voice, grim and controlled, responds. \"Hellhound this is... Mockingbird.\" She paused for a second, not used to the name she's using for this mission. \"Mockingbird on station over.\"\n\nA woman, I pondered that for a second and suppressed a smile. God, we're everywhere now. A big change from the early days.\n\nThe Sergeant grinned carnivorously. \"Mockingbird Mockingbird sing me a song. Over.\"\n\nMy Air Force Tech Sergeant, one of my CUMULOUS GREEN technical support team, watched a row of lights go red on her handheld equipment as the EA-6B Prowler somewhere above us began to \"sing.\" She gave a silent thumbs up, nodding sharply once, her blonde ponytail almost snapping like a whip. I imagine if she were in her actual Air Force uniform all her hair would be up tightly in her cap.\n\nAnother woman. We really are everywhere. Watch out boys.\n\nI looked down the rows of my Dobermans, crouched along the trail. They're fixated on The Sergeant rather than me -- in any other situation I'd be their primary concern, but right now they just watch him. Hyper alert, eager to start, anticipating the rush. All the earlier horseplay and minor arguments about sports or video games ended. Jokes about the two most important things in an infantryman's off-duty life dropped off to nothing.\n\nBeer and pussy could wait til later.\n\nIf there was a later.\n\nThey're not Operators like Pogo and his merry band of sociopaths. My \"boys\" are Infantry. If you want a clean precision strike with minimal mess, SOCOM has the guys for that. SEALs, Delta, the Activity. But when you really, really need to make a point, nothing beats Infantry.\n\nThey kill people and break things. It's what they do. It's what they are.\n\nThe SOCOM Operators are sometimes a bit too clean, a bit too clever, and there are people that just don't understand that level of subtle. I have plenty of \"subtle\" of my own without them. Air Force bombs are too technical, too impersonal; like a natural disaster. People can make excuses to themselves about things like that.\n\nSometimes you have make a mess, and nothing beats Infantry for creative mayhem.\n\nIf they were in their dress blues, there'd be a lot of Ranger tabs and Airborne wings, some Pathfinder badges. But that's not why they're chosen. They've been pulled from the best of the light infantry out of the 82<sup>nd</sup>, the 101<sup>st</sup> and the 25<sup>th</sup> Infantry Divisions, a few from other places. I've made it very much in the interest of the Infantry Branch Managers to find them for me. Finding the best is almost a religious ritual for them.\n\nThey're quick thinking and experienced. By their nature, they're wiry and almost rabidly aggressive -- the essence of light infantry. They run like gazelles and can live on a diet of mud and scorched tree bark. They lack the polish, and most of the clean edges of the Operators, but that's why I want them.\n\nGetting them assigned to me wasn't easy, and in the end I got tired of bureaucratic bullshit and just blackmailed a few of the right people to get it done. Sometimes people need encouragement to do the right thing. And it was a good lesson learned for some of them; integrity is doing the right thing when nobody is looking. After all, it's the right thing to do. Besides, sometimes somebody really is looking.\n\nUsually me.\n\nOn the record, they work for Army Testing and Evaluation Command, testing new versions of high tech combat weapons. We certainly do have some of those. On their redacted record, they're part of a classified personal protection detail, with specialized training. And most of the time, they do that for me. Alliteration and the typical light fighter's obvious physical resemblances have led to them being called Donna's Dobermans.\n\nBut in the end, the reason my Dobermans are here is because sometimes, when something isn't right, you have to hit it with a fucking hammer.\n\nThe Sergeant and his men ran through their comms checks -- if Mockingbird was doing her job right up there, there was one tiny notch in the barrage of white noise where their radios worked. It didn't really matter all that much, they mostly communicated with hand signals anyway.\n\nThey're not wearing their normal uniforms, of course; they're wearing Russian airborne uniforms and patrol caps. In fact, all of their equipment is either Russian or commercial European stuff. The infantry rifles are AK-74s, the sniper rifles are SV-98s and the machine gunners carry PKPs. All of them have been very carefully upgraded by the armorers at a small unmarked building over at Aberdeen Proving Grounds. Even the ammunition has been specially made.\n\nMy Dobermans' counterparts in Russia tend to wear American combat uniforms and use American equipment. It's a something of a running joke in our world. It's what passes for humor out here on the darker edge.\n\nThe Sergeant scanned them one more time and issued his customary warning, \"stay focused, heads on a swivel.\" He looked up at me, an easy, predatory smile of anticipation on his face. \"On your word, Ma'am.\"\n\nI paused for a second, feeling their electric tension. \"Go.\"\n\nHe gave a hand signal and twin lines of men uncoiled silently, moving out along the path smoothly, accelerating, then loping with deceptive speed.\n\nThe sniper teams had already slid forward to lay eyes on target. To watch for any sign, any variation that could be a problem.\n\nI watched them disappear into the green wall along with my Air Force Tech Sergeant, then began to walk back up the path to the gravel road to wait for my ride.\n\nTechnically I should have had four of them stay with me as a protective detail, but I didn't have the heart to make any of them sit this out on babysitting duty. Besides, this wasn't going to take that long.\n\nI listened as I walked back up to the road; it started with several single rifle shots. Definitely the snipers. Then began the odd popping sounds of assault rifles with heavier bursts from the machine guns as the main force swept into the compound. There are a couple of soft \"crumping\" sounds I assumed were wall breaching charges, at least if they were still following the plan. Which they almost always do.\n\nGood Infantry prefers to make their own doorways when they can. It's much safer that way.\n\nOnce they're loose, I don't worry about them -- it's too late for that. Besides, there isn't much they can't handle.\n\nI watched a black SUV slide up along the road, slowly coming to stop behind a couple of flashy tour buses, off the side of the road. Two men seemingly worked to change a tire on one of the buses.\n\nTrace got out of the driver's seat of the SUV and walked around to open the passenger door for me. Like me, he listened to a last scattering of shots and checked his watch, then handed me a cold can of Coke out of a cooler.\n\n\"We should give them five more minutes.\"\n\nI nodded, sipping the soda. It was about 2 degrees away from an ice cream headache.\n\n\"Any trouble?\"\n\nHe smiled slightly, shaking his head. \"No. Went by the numbers. He sent his security detail off when he met her.\"\n\nI glanced into the back seat where a very naked man sat handcuffed and hooded between Spooky and a very self-satisfied Candy. As if there was any doubt she'd have been able to pull it off.\n\nDuring the short ride down the road to the compound Candy, Spooky and Trace were quite deliberately talkative. Comisario Mayor Matias Acosta spoke English very well and I wanted him to understand. Needed him to understand. Or there would be no point to this.\n\nOf course knowing and proving are two very different things -- that was the reason for the Russian equipment. Any evidence would point in the wrong direction. We wanted a lesson, not a diplomatic incident.\n\nTwo of my Dobermans opened the main compound gate for us just as we drove up. No doubt the sniper teams had warned them of our approach.\n\nThe firefight had lasted less than 15 minutes all told, and most of that was mop up.\n\nSome soldiers were dragging bodies into the courtyard and heaping them in a pile. Others were bringing various items out to the Tech Sergeant for assessment -- computers, documents. Some she put to the side, some she simply tossed into a growing mound of bodies.\n\nA small huddle of half-naked women cringed in a corner of the main compound, shielding a few small children with their own bodies, despite their own obvious terror.\n\nThe Sergeant walked over, still scanning the area reflexively.\n\n\"No casualties on our side. All targets eliminated. The one you wanted alive is in custody. I don't think he has long, though, he tried to shoot it out.\" He grimaced but didn't apologize. His first concern was his men. As it should be. \"Civilian count is eight women and four kids. All unharmed.\"\n\nThere was a series of odd, soft thumps in the ground somewhere below us. He smiled slightly. \"Quarter block C4 charges on time fuse, flushing them down the toilets into the septic system.\"\n\nI couldn't completely suppress my own smile at that. God bless the Infantry and their propensity for thorough destruction. We were making a point.\n\n\"How much longer do you need?\"\n\n\"Another ten minutes. We're burning all the vehicles except one truck.\" He gestured to the knot of women, who reflexively flinched. \"I don't know if any of them can drive it.\"\n\n\"They'll figure it out.\" I glanced back toward the SUV.\n\nI outlined what I needed done and turned back to the SUV to let him get back to work.\n\nAfter a few minutes, I signaled Trace; he had Spooky and Candy pull our captive out of the SUV and march him over.\n\nI nodded to Candy and she pulled the hood off.\n\n\"Mister Acosta. I trust you've had an interesting ride?\"\n\nHe looked wildly around and I could see realization dawn as he understood where we were. His eyes flickered from the flames starting to lick up from the buildings to the soldiers now pouring diesel fuel on the heap of dead bodies. He stopped looking around as his gaze fixed on Spooky with horrified fascination.\n\n\"Please pay attention, Matias. I don't want to have to do this again. Do you understand?\"\n\nHe pulled his stare from her and managed to focus on me. He started to say something, but I cut him off.\n\n\"These people murdered four American federal agents, with your help.\"\n\nHe started to shake his head and protest.\n\n\"Please let me finish, Matias. This is not a discussion. I am simply making things clear. Things you need to understand.\"\n\nI glanced up and saw Trace nod sadly, then turn away and walk over to the SUV, looking away. He knew what had to be done. He even agreed that it had to. But he didn't have to watch. I didn't blame him.\n\nBut I'm the one that does what has to be done.\n\nI moved aside and pointed so he could see the The Sergeant and one of his men holding a badly wounded, mostly unconscious man on his knees next to the pile of bodies. He had that peculiar ashen pallor of imminent death and I idly wondered if he was even going to survive long enough for this next act to play out. Not that it really mattered.\n\n\"That man, the one you made a deal with, is Aldrich Cunningham. An illegal arms trader. His net worth is about 45 million Euros. The money he paid you for the information he used to murder those agents, and the protection you provided afterwards is less than he would have spent on a suit. He has connections with governments all over Europe, and would almost certainly never end up in front of a court for what he's done. And if he ever did he could hire the best lawyers imaginable to keep him free.\"\n\nI turned and walked over behind the kneeling man, and I could hear Acosta stumbling behind me, forced along by Spooky and Candy.",
        "I looked up at Acosta as I pulled my vintage Beretta out and levelled it at the base of Cunningham's skull, just at the hairline above the rapidly greying skin of his neck. \"And none of that means anything to me.\"\n\nThe snap of the little Beretta was almost like a cap gun compared to the rifles and machine guns that had been going off. But it was so oddly loud in the compound.\n\nA moment of dead silence hung in the air before one of the women began wailing. The others closed on her, trying to quiet her, instinctively trying to keep attention off of them.\n\nI walked over to Acosta while The Sergeant and his man pitched Cunningham's corpse onto the pile.\n\nHe stared at me wide-eyed. From his expression, Spooky and Candy were the only reasons he was still standing.\n\n\"Comisario Mayor Matias Acosta. You will do the right thing from now on. You will not take pay-offs from men like this. I am not asking you to betray your country. You will be a loyal Argentinian police officer, nothing more, nothing less. You will be as incorruptible as it is possible to be. You do not want me to visit again. Do you understand?\"\n\nHe nodded, but couldn't seem to find words. That was fine. He kept looking between me and Spooky.\n\nI turned and watched for second as flames began to creep up the mound of bodies from a road flare one of the soldiers had dropped onto it.\n\nI waved Spooky over with me to the women. A couple of them stood defiantly and moved between us and the rest. Brave women. They deserved more than life was giving them.\n\nI gave Spooky the keys to the remaining truck and the handcuffs.\n\n\"Give them the keys. Tell them to wait one hour after we leave, then drive into town. They can only take the handcuffs off of Acosta there, but do not mistreat him. Tell them this has nothing to do with them. And let Mister Acosta know I would be very unhappy if anything were to happen to these women.\"\n\nCandy walked Acosta over to them as I headed back to the SUV where Trace and my Tech Sergeant were loading her treasures into the trunk.\n\nWhen the snipers signaled that everything was still clear, we headed out. I looked back at the ruined compound as we left the gate and watched the last soldier, The Sergeant, slip out through one of the breached walls.\n\nOn the short drive down to the buses, I had to ask Spooky what she'd done to our captive, as he seemed singularly focused on her much of the time.\n\n\"I showed him some family pictures. I took them the last time I came down.\" She handed me a small tablet with pictures cued up.\n\nAcosta's wife. His son. His little girls. Even a picture of him. All soundly asleep in their beds. Each one with a surgical scalpel resting delicately on their neck.\n\nCandy smiled softly. \"Cute kids.\"\n\nThey really were cute kids. Even Spooky's expression softened curiously when she looked at them. Spooky with kids. That's a really bizarre thought. Stranger things have happened, I suppose.\n\nTrace seemed a little more comfortable with the pictures than I'd have expected, probably because he's convinced that as anti-social as Spooky is, she has limits. They have a rapport that comes from visiting the same corners of hell. Spooky always treats him with a level of respect, although she inevitably addresses him as \"Mister Jackson\" for some reason only the two of them understand. I've never bothered to ask.\n\nBy the time our two tourist buses reached a remote airfield, it was clear that Matias Acosta had not raised an alarm. I didn't really expect him that he would.\n\n***\n\nAnother symphony.\n\nDuring intermission, Trace lifted two flutes from one of the tables -- one water and one champagne. He very carefully handed me the champagne. I normally choose not to drink in front of him, but sometimes he does things like this. It's a ritual, a reminder of our pact, of the relationship we have. A reminder that he depends on me to keep him sober, and I depend on him to keep me human. As human as I can be anyway, with everything that has to be done.\n\nThe weight of the Beretta in my clutch always seems more noticeable when he does it.\n\nMaria had to learn of the outcome of the mission through press and the normal intelligence reports; we wouldn't risk another meeting over this. It wasn't difficult for her; a suddenly cooperative Argentinian police Comisario Mayor granted full access to a small mostly-destroyed compound when evidence was found that the men in the compound were involved in the unsolved murder of four FBI agents.\n\nMatias Acosta is reportedly very, very family oriented these days and even takes his family with him on official visits. He doesn't seem to like the idea of being away from them at all. And he is rapidly gaining a reputation for incorruptibility.\n\nThere's a story circulating that when he was recently approached with a bribe, he put his gun to his own head and informed them with tears in his eyes that he would rather pull the trigger than accept a single peso. Integrity is important.\n\nThe official report on the compound states that it is likely that the compound was wiped out by a rival organization in the same business.\n\nUnofficially, of course, everybody understands.\n\nSomebody is out there, somebody willing to do what they have to do.\n\nWhatever they have to do.\n\n//////\n\nPost Production Notes:\n\nNot too much to say here.\n\nThe EA6-B Prowler was the electronic warfare version of the venerable Intruder. Some remained in service until 2015 when they were replaced with the EA-18 Growler, having flown their last actual mission in 2014. Pods could be swapped out for very specific capabilities.\n\nA Swallow is an agent who specializes in using sex to compromise or entrap their target.\n\nAnd, of course, God Bless the Infantry. "
    ],
    "authorname": "Todd172",
    "tags": [
        "the shack",
        "espionage",
        "action adventure",
        "romance",
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shack-necessary-evil"
}