{
    "title": "Lady in Red Pt. 02 Ch. 05",
    "pages": [
        "The two men immediately froze when Steve pointed the handgun at them. Steve risked a few quick glances around to determine if the two had any companions somewhere close. He saw no one else. By this time the girls were awake. Roxie was struggling to pull her shirt on while Sam clung to her.\n\nSteve carefully stood as he studied the two men. They didn't look like cartel men. They were very poorly dressed and one was much older than the other. Both men were heavily armed, however, and Steve was concerned about them trying to collect the bounty placed on his head.\n\n\"Mr. Hammer,\" began the younger man in excellent English. \"We are here to help you. My father and I have brought you some very good weapons which we have accumulated over the past twenty months. We hope you'll consider us for the reward when you safely return to the United States.\"\n\n\"What? The reward? What am I missing? You two have to help the cartel catch me to collect that money. I hate to disappoint you, but that isn't going to happen!\" stated Steve emphatically as he raised his gun higher in a threatening manner.\n\n\"Not that reward!\" explained the younger man quickly. \"No one believes Juan Flores would ever pay that money. I'm talking about the million dollars American if we help you escape. That's what it says on this paper.\"\n\nThe young man carefully extended his hand and showed a flyer to Steve. Watching the man closely, Steve took the paper from his hand and passed it to Roxie.\n\n\"Read that to me while I keep my eyes on these guys. I want to hear every word exactly as it's written,\" instructed Steve to the teen.\n\nRoxie looked at the paper for a few second before she broke into a huge smile and began reading. \"Lady in Red Productions is offering the sum of one million American dollars to anyone who actively helps Steve Hammer, Samantha Thompson, and Roxanne Thompson return to the United States in good health. This payment is personally promised, and guaranteed, by Gwen Anderson, Jordan Quick, and the Lady in Red Production Company. It's signed By Gwen Anderson and Jordan Quick! It looks like the same message is written in Spanish, too.\"\n\nSteve briefly considered the information Roxie had just given him. He had to admit that it sounded like something Gwen would do.\n\n\"Do you really believe that they would pay you all of this money, if you help us?\" asked Steve of the two men. \n\n\"With all due respect, we totally trust Gwen Anderson and Jordan Quick. We know they're extremely wealthy and donate large sums to charity. Everyone knows about the hospital in Kiev, the new one in your home town, and the many things you all have done to help others. They'll keep their promise. It's also very well known that they're both extremely fond of you, to say the least,\" responded the younger man with a smile.\n\n\"So you'll help us for money? You want to be the richest guy in this part of Colombia? Is that your goal,\" asked Steve suspiciously. \"You don't look greedy enough, or crazy enough, to risk your lives for any amount of dinero. It's no good if you're dead.\" \n\n\"It isn't for us,\" replied the son evenly. \"My sister's son is very ill. He needs much better care than we can afford to give him. If we earn the reward, we'll take him to America, to the new hospital in your town. We'll have enough money for the best care possible.\"\n\n\"I see,\" responded Steve slowly as he considered the man's words. \"Why isn't the boy's father here helping, too? It seems like he'd be the first one to risk his life for his son.\"\n\n\"The cartel men caught him hiding a girl they were searching for. She came to my brother-in-law along the road and begged for his help. He tried to hide her in his small home, but someone saw her with him and reported it to the cartel. Flores himself, along with his son, came to my sister's home with many men. They dragged the girl out and raped her repeatedly in front of my sister, her son, and her husband. Then they laughed as Flores shot the girl in the head. Then his son shot my brother-in-law, while my sister and her boy watched. Flores told them he was a merciful leader and would allow my sister and her child live. Then he and his men drove away.\" \n\n\"That explains a few things,\" conceded Steve. \"You want to save your nephew, and you can make some money at the same time. And you don't trust Flores. Now I understand your motivation. So what's with all of those rifles? Do you want to fight Flores army? That would get you killed pretty fast,\" predicted Steve.\n\n\"No, we're not trained soldiers. The rifles are for you. They're very powerful and shoot a great distance. Tomorrow you'll need them when the cartel catches you by the river.\"\n\n\"Why don't I like the sound of that? Why do you think the cartel will catch us anyplace, let alone by the river?\" questioned Steve.\n\n\"I have been listening to their communications. Cell phones are useless here, so they use radios. I happen to have one that allows me to listen to everything they say. They have been told by someone that you are in the area. They've determined that you'll try to reach the river and possibly travel down it. They expect to intercept you with a hundred men or more.\"\n\nSteve did his best to conceal his surprise. The man had just described his plan, more or less! He was under the impression that no one had seen him and the girls and their whereabouts was unknown.\n\n\"Are they at the river now, waiting for us to walk into a trap?\" demanded Steve as he forced himself to remain calm and consider his situation carefully. The two girls needed him to make the right decisions. \n\n\"There are a few dozen there watching for you. Flores and his son expect to join them tomorrow. They are a couple hours north, but will be driving down to meet them.\"\n\nSteve considered his predicament for a few minutes as the girls sat in the shade and waited. The two men watched Steve as he thought over the information they had given him.\n\n\"Even if we go another way, we'll still need to find transportation to get out of this part of the world. Otherwise, we'll be in this jungle for months. Maybe we can find a car, or a motorcycle, so we can travel faster. If you guys are going to wring a million bucks out of me, you'd better have some ideas. You won't get paid if we don't make it,\" reminded Steve. \"Do you know where we can get some sort of transportation?\"\n\n\"My cousin has a friend that flies a helicopter. He has flown into this area a few times. Flores thought he was transporting drugs for a rival, so he put the word out that he'd kill my cousin's friend if he came back. He'd be willing to pick you up and fly you and the girls to safety,\" suggested the young Colombian.\n\n\"Well great! Have him pick us up in ten minutes. We'll be out of here, and you'll be a lot richer,\" responded Steve sarcastically. \n\n\"There's just one problem,\" replied the young man, ignoring Steve's obvious disbelief. \"He won't fly in until you kill Flores and his son. His fear of them exceeds his desire for money.\"\n\n\"I see,\" nodded Steve. \"All I have to do is survive the ambush Flores has set up for me, kill him and his worthless son, and then give you, your father, and some friend of a cousin of yours each a million dollars, and I'll be homeward bound. Does that pretty well cover it?\" \n\n\"Not quite,\" admitted the young Colombian sheepishly. \"My father asks for no money. He only wants you to take my sister and her son with you to America, and get him into your hospital.\"\n\n\"That's all?\" replied Steve with sarcasm. \"I'm committed to getting these two girls back home. Now you want to add a sick child and her mother? I don't even know who, or where they are, or how to get them to the helicopter, if I manage to get the guy to fly here. Wait! Let me guess. You've got that figured out, too?\"\n\n\"Within half an hour of the deaths of Flores and his son, the helicopter will arrive to pick you and the girls up. It will then fly to my father's house, where my sister and her son will join you for the trip to an undetermined location. From there, you will be flown back to your home town, in a somewhat covert manner, but the final result will see you reaching Sparta,\" promised the man. \"You will owe me, the helicopter pilot, the plane pilot, and possibly one more pilot one million dollars each.\n\n\"It sounds like you've given this some thought,\" admitted Steve. \"Do you have any ideas on how to, ... ah, terminate those two? When we reach Sparta, I'll see that everyone is paid.\"\n\n\"That, Mr. Hammer, is your field of expertise. These weapons should be a great help. My father will return home now and have my sister prepare to leave for the U.S. She and her son have passports and visas, although you will most definitely not be passing through customs,\" chuckled the man grimly. \"It's better to ask forgiveness than permission.\" \n\n\"Let me have a look at those rifles,\" insisted Steve. \"I need to know what I'm dealing with here.\" \n\nThe man placed the boxes on the ground and handed Steve the rifles. Steve checked the first rifle. Steve's eyes lit up when he realized that it was a Remington M24A3SWS chambered for the .338 Lapua Magnum with a Leupold scope. The second rifle was simply a standard Remington .300 Magnum hunting rifle. While not likely to be as accurate at greater distances, it would be very effective within four hundred yards. Steve looked in the boxes the men had placed on the ground to find magazines and ammunition for the weapons.\n\n\"You'll have to help us carry these weapons to the ridge we passed a few miles back. Then you can sit back and watch, and be ready to call in that helicopter,\" predicted Steve. \"Come on, girls. We've got some ground to cover.\"\n\nSteve recalled how the road had snaked its way through a ravine in the mountains a few miles back. He decided that it would be the best place to make his stand against the cartel forces. They would be expecting him to be by the river, thus never anticipating any trouble in the mountains.\n\nThe sisters never complained as they backtracked. They circled around away from the road and steadily climbed up the rocky terrain above the small highway. Steve finally signaled for the group to stop. He surveyed the road below and nodded. \n\nThe road from the north entered the cut in the mountains to Steve's left and made a sharp turn, almost directly north. It ran that way for a few hundred yards then looped back south again, passing almost directly below Steve's vantage point.\n\n\"I'll need your name, or you'll never get your money,\" stated Steve to the Colombian as he was preparing to leave. \n\n\"My sister will give you all the information you need,\" assured the man. \"You have to stay alive; that and kill the father and son Flores. If you make it to the states, I'll be watching my bank account.\" \n\n\"Do you think we'll ever make it out of here?\" asked a worried Roxie. \"I was starting to think that if we walked long and far enough, we'd make it. Now it looks like we're in for a fight. I'm just glad that you're on our side.\"\n\n\"I'm sorry you girls have to be involved in this. I want you both to stay down in this little ravine and keep these magazines loaded with shells. Think you can do that?\" asked Steve somewhat gently. \"I'm going to be busy doing my best to keep those men from catching us and I'll need your help.\"\n\n\"Sure, we can do that! I watched you put the bullets in two of them and it looked pretty simple. Maybe we should practice some before things start getting hot,\" suggested Roxie. \"We don't want to let you down.\"\n\nSteve emptied two magazines and had the girls practice filling them. It was a relatively simple task and the girls had no trouble performing it.\n\n\"We have two different calibers, so you each will have your own box of shells to fill your own magazines. These black ones will be the ones you fill, Sam. You use shells from that box. Roxie, you have the gray ones and will use this box. That's all you have to remember, along with keeping your heads down. We'll be home in a couple days or so and this'll just be a memory,\" promised Steve with considerably more confidence than he felt.\n\nHe was extremely worried about getting the girls home. He saw it as his duty and he hated the idea of failing, and of harm coming to the girls. He knew the risks he could face when he joined the military, but the two girls never signed up for any of this. He'd do his best and hope it was be good enough.\n\nIt was a couple hours before dusk when he saw the procession headed toward him. There were six trucks with about ten men in each. A large Mercedes limo followed a half mile behind them. The windows were darkly tinted, but Steve felt it was likely that the two Flores were riding in the luxury car.\n\n\"Aren't you going to shoot them?\" asked Roxie as she peered over the rock ledge next to Steve. \"There's getting really close.\"\n\n\"We have to wait until we can inflict the most casualties,\" replied Steve as he watched the procession start through the mountain cut. \n\nThe trucks were spaced rather far apart, so the lead truck was almost out of the ravine as the last truck was headed into it. \"You girls get down now, and stay down.\"\n\nSteve had already lined up the dozen old grenades he had appropriated the day he found the girls. They were sitting on a rock bench a foot below the top of the ledge. As he picked one up, he considered what he was about to do. It was apparent to him now that the cartel was able to keep up with his general location. They were determined to catch him and the girls. \n\nTheir hiding and traveling mostly at night had not gotten them very far in the rough terrain. The girls were losing weight and showing signs of anxiety. It had become obvious to Steve that what he had been doing wasn't working very well. They were still alive, but in constant danger.\n\nSteve had attended classes on war and strategy. He knew he had to shake his enemy to the core, destroy its morale, and kill the leadership, if possible. If he didn't, it was unlikely that he and the girls would survive the ordeal. Knowing that he would have a way out of the country if he was successful had been the deciding factor.\n\nOnce he decided on a course of action, Steve made his preparations. He forced himself to consider how he would inflict maximum pain and suffering on his enemy. He had to think of them as the enemy and be ruthless in his plans. His safety and the safety of the two sisters required it.\n\nSteve watched the trucks as they moved along the road through the narrow ravine . The road was winding and rough, thus limiting the speed the vehicles could travel. He took a quick breath and stood. He began throwing the grenades at the moving vehicles below him. He threw three as quickly as he could at the first three trucks.\n\nWithout taking the time to see where his throws landed, he turned and threw two more grenades at the last two trucks as they entered the ravine to his left. As he let go of those grenades, he heard the first concussion. He turned back to look at the lead vehicle. It was smashed against the side of the ravine with fire and smoke billowing from it. Several bodies were littered along the road behind it. The second vehicle was jammed against the rock with smoke pouring out from under the hood. Armed men were awkwardly climbing off the back of the truck. The third vehicle was stopped, but appeared to have avoided any direct damage. Men were looking over the back of the vehicle, pointing their weapons in various directions. That had not yet located Steve's position.\n\nSteve quickly glanced at the last two trucks he had targeted. The last truck in the convoy had apparently taken a direct hit. It sat in the road engulfed in flames with no movement from within. The truck directly in front of it was on its side. Men were scurrying from it like rats from a sinking ship.\n\n\"Okay, girls, keep your heads down and be ready to reload. Steve hefted the .300 Magnum and took aim. He looked for men that carried weapons and seemed intent on locating him. Knowing the shocking power of the big caliber, Steve aimed for shoulders and knees when possible. No man would have any desire to carry on the battle after being struck by the lead projectile Steve was sending their way.\n\nHe steeled himself against feeling empathy for the men he shot. They were trying to capture and/or kill him. The atrocities they had committed over the past few years were well known. Still, Steve felt conflicted as he quickly went from target to target, maiming most and killing some. He put the empty rifle down near Roxie and picked up the .338.\n\nThis time he concentrated on the men that were further away. They were seeking shelter in the large rocks along the road. They had determined Steve's position and were firing their assault rifles at him. The distance where most of the men had taken refuge was over three hundred yards.\n\nSteve doubted many of the men had been properly trained with their weapons. With open sights, the fear of being shot, and the limitations of their weapons, Steve felt that he was relatively safe as long as he presented a very small target. He methodically began picking off the men shooting at him. He simply waited for one to look around or over a rock and quickly squeezed off a shot. He found two brave souls attempting to climb up a rock wall off to his left. Two quick shots brought them down.\n\nBy this time bullets were spraying around his hiding place. He put the .338 next to Sam and picked the loaded .300 up again. He worked a round into the chamber and resumed firing. Targets were harder to find, but Steve was patient. He shot only at men indicating they wanted to continue the fight. He ignored the wounded men, as well as those helping them as they crawled or staggered to hiding spots.\n\nThe sun was beginning to set when Steve saw the opportunity he had hoped for. There were only a hand full of fighting men left, and they had pretty much lost their appetite for the battle. They seemed content to sit behind large boulders and wait for dark.\n\nUp the road, less than a mile away, Steve saw two figures standing by the Mercedes. One was obviously Flores. He was said to weigh almost four hundred pounds. A man fitting that description stood next to a tall, much thinner man. There were several other men moving back and forth, apparently following various orders from their boss.\n\nSteve picked up the .338 and carefully adjusted the scope. He judged the distance to be about 1000 meters, well within the killing range of the rifle in his hands. He carefully cradled the weapon and took slow measured breaths. Steve decided to go for the son first as he would likely be quicker to react to a bullet hitting his father. Roxie had seen Steve change from the direction he had been aiming and peeked over the rocks to see what he was doing. She barely sighted the two men by the car, when the rifle in Steve's arms barked.\n\nSteve quickly worked the bolt, sliding a fresh cartridge into the chamber and took aim. He saw the tall men slump to the ground and the obese one turn to look at what Steve assumed was his son. Once again, the rifle in Steve's arms erupted. Roxie watched spellbound as the larger man staggered and slowly collapsed.\n\nSomething struck the rock next to Steve's head and sent shards into the side of his face. Steve pulled his hand gun from his waist as he turned to face his attackers. Two men were taking aim at him with their handguns as Steve felt the gun in his hand buck against his palm. Both men fell over backwards, but not before getting off several more shots.\n\n\"Damn it!\" cursed Steve as he brought his hand to his left shoulder. Blood was already running down his arm. He walked over to the two dead men and roughly ripped a handful of one man's shirt from his dead body. Steve folded the strip into a square bandage. Then he reached down and yanked most of the remaining shirt from the dead man's torso. He wrapped it over his shoulder and around his arm. Then he turned to look at Roxie.",
        "\"Take your jacket off and I'll tie it around your chest. This is the way Gwen Anderson wrapped up your bullet wound when those terrorists attacked your school. I saw the TV movie,\" prattled Roxie as she brought the ends together and tied them. \n\n\"Do you think the guy will come with the helicopter? You killed both of those bastards,\" stated Roxie quite calmly. \"You took the fight out of the cartel guys down in the road, but I'd feel a lot better if we were flying home right now.\"\n\n\"Let's gather up what we can carry and start for the pickup point. We'll know within the next hour if the guy's coming for us. If he doesn't we have to be ready to keep walking. It might be a little hot around here for a few days,\" replied Steve as he carefully slung the rifles over his good shoulder. That's when he noticed the pain in his leg.\n\n\"You've been hit in the leg!\" worried Roxie. \"Does it hurt much? Can you walk? Want me to put a bandage on it?\"\n\n\"I can walk and it isn't bleeding very much, so let's get moving. We don't want to be late if that helicopter shows up,\" reasoned Steve as he ushered the girls down a nearly invisible path.\n\nGwen had managed to regain her poise as her mother and friends offered encouragement to her. Steve was in a tight spot, but from the news reports, it sounded like he was more than holding his own. Dark was falling on the area and the cable news channel reported that the shooting seemed to have abated. \n\nGwen was drinking some water and listening to the news cast when a familiar face walked onto the stage. \n\n\"Nadiya! I didn't know you were coming! It's great to see you again. I'm glad you're here. It's great to have friends at a time like this,\" admitted Gwen as she warmly embraced her friend form the Ukraine.\n\n\"I am sorry I couldn't make it sooner. By the time I got to Washington, you had returned to Sparta. I had to come. I will not let my best friends suffer so without me. You, Jordan, and Steve have done so much for my country, I could not live with myself if I did not stand by your side in such a difficult time,\" stated the blonde Ukrainian with considerable emotion. \"My father sends his love, and told me to tell you that Steve Hammer is too much man for outlaws to bring down. Father says he will come home to you, to all of us.\"\n\n\"Your dad is a pretty sharp guy. I hope he's right on this one. Steve will make it home to us,\" asserted Gwen.\n\n\"The people of my country are watching this situation with great interest,\" assured Nadiya. \"They still speak of the week Kiev was home to the famous, generous Americans. It was one of those moments to which all other things are compared. Everyone knows where they were the night of the Freedom Concert. It was a defining point in our nation's history. You, Jordan, and Steve are now legend.\" \n\n\"That was an amazing trip,\" offered Jordan. \"Your country treated us so well. We fell in love with Kiev and its people. Gwen has been talking about a trip back, once she finishes med school. We'd love to play there again.\"\n\nGwen couldn't hold back the smile that crossed her lips as she thought back to the day she learned the president wanted her, Jordan, Steve, and Charlie's band to travel to the Ukraine and perform.\n\nIt was in the spring of her second year at Stanford. She had taken a current events history course as an elective. It was supposed to be an interesting class with a very well known professor. It was late April and she was sitting in her seat taking notes as the professor gave his lecture.\n\nGwen's phone vibrated, so she quickly glanced at it to see who was calling. There was a strictly enforced rule against allowing phones to ring, talking on phones, or even texting in class. When Gwen saw the caller I.D., she quickly stood and left the lecture hall. \n\nFive minutes later, she quietly returned to her seat and picked up her note book. \"Perhaps you can explain to the rest of us just what was so important that you felt you had to leave class to use your phone,\" suggested Professor Yurchenko sarcastically. \"We're on the edge of our seats, Ms. Anderson.\"\n\nAt first, Gwen felt her face go warm as everyone turned to watch her. Then she felt annoyed at the man's obvious sarcasm directed at her.\n\n\"If you insist, Sir,\" replied Gwen with more than a little of her own sarcasm. \"The White House just requested that I, along with some of my friends, travel to Kiev next week. We are going to help represent the United States at the ceremony swearing in the new Prime Minister and cabinet. As you've been pointing out to us students, the Ukraine is undergoing a lot of changes as it struggles toward democracy, and free trade with the West. I am expected to answer my phone when the White house calls.\" \n\n\"Really? President Hanson has asked you and your friends to attend the ceremonies next week? That's a great honor! As you all know, I emigrated from the Ukraine many years ago, when it was part of the Soviet Union. I grew up in, and went to school in Kiev. This is extremely exciting.\n\n\"You'll miss several classes, at the very least, but you'll be allowed to make them up with video reports to the class while you're in Kiev, and a detailed discussion of the events that transpired upon your return. See me after class to work out the details,\" stated Yurchenko, leaving no room for discussion. \n\nLater that day, Gwen received a call from Nadiya. \"Hello, Gwen? I know that you and Steve and Jordan are coming to Kiev for the inauguration of our new government. My father wanted me to ask if you would bring your band and give a concert like you did in Sochi. You know that we are at odds with the Russians at this time. It would be a huge public relations success if you would entertain for the people of a small, poor country like ours.\"\n\n\"Nadiya, don't start 'poor little me' routine with me. I know you have a master's degree, and have appeared in a couple of very successful movies, as well as have a father very high up in the Ukraine government. You're beautiful, smart, and talented. Don't try to play me like you do most of the men you come across,\" laughed Gwen. \"Just play to our friendship and you'll get about anything we have to give. You've become a very close friend.\"\n\n\"You say that now, but when I was kissing your big, strong American boyfriend, maybe you weren't thinking such friendly thoughts,\" teased Nadiya.\n\n\"Truthfully, I never blamed you for kissing him. You'd be crazy to not kiss him when you get the chance. That was my fault for creating that situation, which you so skillfully helped me defuse. I know it was a sacrifice and you did it for me. I never thanked you properly. How about I try to talk Steve and Jordan and the band into putting on a show in Kiev to show my appreciation for kissing Steve for me?\" \n\n\"You would do that for me over a little kiss? What would you do for me if I slept with the guy to save your romance?\" questioned Nadiya. \"Buy me a castle?\"\n\n\"More like scratch your eyes out,\" responded Gwen quickly. \"I won't be making that mistake again, so don't entertain the idea that you'll have to sleep with Steve to help me out. That isn't going to happen!\"\n\n\"Okay, be ungrateful,\" replied Nadiya with a sigh. \"But you'll be very grateful when you see where you'll be playing if you do talk your friends into performing in Kiev. We will have a stage built in Independence Square for the political speeches. The very next day, you will be on it, performing for Kiev and the entire Ukraine. \n\n\"The unrest that forced the old government from office was centered in the square. It was badly damaged, but it has been repaired and will be ready for the festivities next week. There will many thousands coming to see the famous American singers and movie stars!\" predicted Nadiya. \"It will be a real boost to my father's position in the government, as well as among our countrymen. No one else in Kiev can claim the friendship of such important world citizens.\"\n\nWhen Steve made his nightly call to Gwen, she wasted no time explaining Nadiya's request. \"So her dad asked her to ask us to perform while we're there. They'll have a big stage built in Independence Square, so there'll be room for a lot of people to watch us.\"\n\n\"Do you realize how many people can fit into that square?\" asked Steve. \"If it's half full, we'll be playing to a hundred thousand people! We don't even know if they like our music. It'd be pretty embarrassing if there are only a couple hundred fans watching.\"\n\n\"I don't think that'll happen from the way Nadiya talked. She thinks they'll come for miles to hear us. So, what do you think? Jordan said she and Charlie are up for it. The band will go since it's another big payday for them. I think Mom can get some cash from a few outlets to broadcast the show, or buy the video to show some other time. They're about seven to ten hours ahead of the US, as far as time zones are concerned. Night there will be afternoon here.\"\n\n\"Count me in!\" responded Steve enthusiastically. \"You need to let the state department know what we plan before we agree, so we don't make them look bad if they decide against it. You also need to talk to your mom about being certain that our people get to set up a good sound system. That's a huge area to cover and we'll need a lot of speakers, or no one will hear us.\n\n\"What about the money? We can't seem to stop making it. Your mom is doing a super job, but I think we need to start spending more on charities. We have to get together with Jordan and embrace some good causes. That'll be an important thing to discuss on the trip. We agreed when we began all of this that we'd do what we could to help the less fortunate. We need to do exactly that.\"\n\n\"You're right,\" agreed Gwen. \"The hospital in Sparta is well under way and it's completely funded. I really believe that our success came because we weren't doing it for ourselves. We need to keep that in mind. If we make many more movies like the 'Sparta' trilogy, we won't be able to spend enough money to keep up with the income. You had a brilliant idea with that project.\"\n\n\"What I had was some beautiful and talented ladies, some great screen writers, and very good directors. If someone else besides you, Jordan, Lisa, Kate and the rest had been the stars, it never would have had the success. We both know where the credit for the success lies,\" insisted Steve.\n\n\"We never agree when we have this discussion, but I've come to realize that's a good thing. Modesty becomes you. I'll start the ball rolling for this concert once the state department gives us the go ahead. Our people will find a suitable place to practice while we're there. We'll turn that town upside down!\" \n\nThe following Sunday, Gwen, Steve, Jordan, Charlie, Ashley, Paula, Ted, and Kate, along with the band members, landed in Kiev. As soon as they cleared customs, Steve found himself catching a blonde bombshell as she threw herself into his arms.\n\n\"Thank you all so much!\" squealed Nadiya before giving Steve a long kiss on the lips. \"We are being watched and filmed for our news programs. I wanted everyone in the Ukraine to know that Steve and I are still very good friends, even though he dumped me for Gwen in New York after just a couple of kisses.\n\n\"Gwen! You look gorgeous!\" gushed Nadiya as she hugged Gwen tightly before turning to Jordan and embracing her. \"Every time I see you, Jordan, I'm awe struck by your beauty.\" \n\nNadiya hugged Charlie, Paula, Ted, Kate and Ashley. \"I see the beautiful teacher is a permanent fixture around Steve. I don't blame you but wonder how you managed to sneak in under Gwen's nose. She won't let me even get close to her handsome boyfriend.\"\n\n\"You had me fooled a minute ago when you were kissing him,\" replied Ashley with a smile. \"I left teaching and I'm the go-to girl for Lady in Red Productions. I assist Paula, Gwen, Jordan, and Steve when I can. Please don't let Gwen know how I feel about Steve, and I won't say anything about how much you like him. She's very jealous. \"\n\n\"Yeah! If I was the jealous type, I never would've survived Jordan, Lisa, Kate, Ashley, Becky... well, you get the idea. It's great to finally make a trip to the Ukraine. We're anxious to see the sights and help your country celebrate its progress toward free trade and reformed government. Look how excited everyone is!\"\n\n\"This is huge for my country,\" insisted Nadiya. \"We've had a very dark period with a lot of protests, damage, and injuries. Now we are forming a new government and the most famous Americans in the world are here to celebrate with us! I'm so proud to be considered one of your friends. As you all know, I'm just a little girl from the Ukraine.\"\n\n\"Sure, we've heard all of that crap before,\" laughed Kate. \"The fact that you have a few college degrees, are beautiful, have a famous father, travel all over the world, and even had a big role in a blockbuster movie kind of ruins your 'little girl from the Ukraine' shtick.\"\n\nNadiya escorted the group to the best hotel in the city and made certain everything was to their liking. \"I know you want to have a nice lunch and take a nap with me after that long trip. I have a room reserved for you.\"\n\n\"Is that a room to dine in, or for you and Steve to 'nap' in?\" asked Kate quickly.\n\n\"You're not going to let me forget that I asked you to join Gwen and me for lunch and a nap, are you?\" chuckled Steve. \"I thought I misspoke at the time, but I've learned since that it was merely a Freudian slip.\" \n\n\"Oh, really?\" asked Gwen with arched eyebrows. \"You're saying that you'd like to sleep with this little nymph?\"\n\n\"Is that a trick question?\" replied Steve with a grin. \"Look at her! I'd have to be gay to answer that any way but in the positive. She's so darn cute, I could just...\"\n\n\"Never mind! We'd love to have you join us for a nice lunch, Nadiya. It would be really great if you joined us after our nap to show us your beautiful city. I hope that makes everything very clear,\" stated Gwen as she wrapped her arms around Steve's arm and smiled. \n\nLater that evening, as Steve and Gwen were preparing for bed, Gwen questioned Steve. \"You certainly paid a lot of attention to Nadiya today. You must have asked her a thousand questions. It's all suspiciously like our trip to Moscow. Mom and Dad noticed it. Dad even said you appeared extremely interested in the politics of the regions and wondered if you had an agenda other than creating good will with a concert and a lot of hand shaking.\"\n\n\"I'm that obvious? I'll have to curb my question asking,\" replied Steve. \"I had a little tete a tete with President Hanson a few days back. The Ukraine is embracing western trade and culture a little too strongly as far as Russia is concerned. Russia was very strong interest in what transpires here. They pipe natural gas across the country and use the ports in the Crimea, which is populated mostly by Russian speaking people.\n\n\"The U.S. would dearly love to bump Russia out of the Ukraine, but I don't think it's possible. Russia has so much at stake that it would fight before it could allow that to happen. The U.S. needs to be realistic, and so does the Ukraine. Russia will not roll over on this issue. That's how I see it.\"\n\n\"Uh, oh! Does this mean you may be doing diplomacy while you're here? Are you representing President Hanson?\" asked Gwen with some amazement.\n\n\"No, I'm not. He made it clear that I cannot speak for the United States government. I can, however, learn as much as possible about the various forces at play and see if I can see any way out of this impending international crises. Secretary of State Rosen is shuttling back and forth between Moscow and Kiev, trying to reach a solution. President Hanson feels that Rosen is very capable, but lacks imagination. He doesn't think outside the box, so he wants our perspective on the situation here.\"\n\n\"All of this international intrigue makes me all wet and horny,\" revealed Gwen as she removed her bra and panties. \"Can you think of any solutions for my current situation, Secret Agent Man?\"\n\nSteve stepped in close behind Gwen and gently cupped her breasts in his big hands. He rolled her nipples between his thumb and fingers as he kissed her neck and shoulders. \n\n\"Hmmmm,\" groaned Gwen as Steve explored her body with his hands. \"You know what I like, and you do it so well. Make love to me. Remind again why I love you so much.\"\n\nThe next morning was spent rehearsing songs for the Friday night concert. The afternoon saw the Americans walking the streets of Kiev with Nadiya acting as tour guide. At one point, they passed near a well worn playground. Several parents were there with quite a few kids. When the children saw Gwen and Jordan, they immediately ran to the pretty Americans.\n\nGwen and Jordan were delighted and squatted down to receive the children. Gwen noticed that a couple of the small children had scars and one even had a deformed arm.\n\n\"What's happened to these children?\" asked Gwen as she hugged the ones that would come close. \"They have scars and a couple seem to have had broken bones that never healed properly.\"\n\n\"This is the poorer part of a relatively poor city. The children do not receive medical care for the most part. If they are injured in an accident or fire, they are lucky to receive even minimum care. It's just how it is in this part of the world. I'm sorry you had to see it, but it exists. I cannot just show you all beauty and light and avoid the rest,\" replied a somber Nadiya.\n\n\"These children are wearing old and badly worn clothing. We can help with that, at the very least,\" insisted Jordan as she stood back up. \"Please ask the ladies caring for the kids to bring them with us to that store we saw a couple blocks back.\"\n\n\"That's a great idea!\" beamed Gwen as she watched and listened to Nadiya speak to the women. It took some back and forth, but the women finally nodded as Nadiya led then back down the street. \n\nWhen they reached what appeared to be a department store, Nadiya turned the group into the building. They had barely made it inside when a well dressed, but obviously agitated man hurried up to Nadiya. He was talking rapidly and pointing to the door. Steve's knowledge of Russian enabled to get the gist of the man's rant. \n\nSteve stepped in front of Nadiya and spoke sternly to the man in Russian. It was readily apparent that the man knew what Steve was saying. Understanding swept over his face. He suddenly smiled and gestured for everyone to enter and shop. \n\n\"Tell the children, and the women with them that they should get anything, and everything they need. We'll pay for it. Tell them not to hold back,\" insisted Gwen to Nadiya. \n\nSteve, Charlie, and Ted found seats and watched in wonder as the women spread out and began helping the children find clothes that fit. Two hours and almost 12,000 Hryvnia later, the shopping was finally over.\n\n\"That was so much fun!\" laughed Kate. \"That sour faced guy sure changed his tune when Steve got in his face. Did you see how big his smile was when he rang up all the charges? Those kids were so sweet. How many times did they thank us? It's sure better being rich, or having a rich sister anyway, than being poor.\"\n\n\"Kate, whatever Steve and I have, we'll always share with you. We're family. We have each other, and always will,\" promised Gwen.\n\nWord spread of the generous Americans visiting the city. After each morning's practice, the group would spend the afternoons walking the city. Soon they'd find dozens of children, along with a fair number of parental figures, crowding around them. Then it was off to nearby stores to shop for the children.\n\n\"Steve, there's so many children without proper clothes here. I wonder about food. Then there's the fact that they receive practically no health care,\" stated Gwen sadly as they prepared for bed Wednesday evening. \"We're helping a very small percentage, for a short time, but I'd like to do something longer lasting. I'd like to help the kids of Kiev have a better life than they do. Would you mind if I called Jordan and asked her and Charlie to join us for awhile. I'd like to run something by the three of you, if you aren't too tired.\"",
        "Steve instantly knew that Gwen was extremely serious and needed his support. He picked up his cell and hit a number. \"Charlie? Gwen's got something she'd like to talk to Jordan, you, and me about. Could you come over to our suite? We'll use the hot tub, and have what I'm guessing, will be an important conversation.\" \n\n\"I should invite Mom and Dad, but you went and mentioned the hot tub, so they won't be comfortable coming over. But that's okay. We can talk to mom later,\" conceded Gwen. \n\nSteve hit another number on his phone. \"Paula? I hope I didn't wake you. Gwen has something important she wants to discuss with Jordan and Charlie and you and Ted. We're going to be naked in our hot tub, having a deep conversation. You and Ted are invited. You can wear suits if you like. We're easy. The door will be unlocked if you get here after we're already in the tub.\"\n\nGwen just stared at Steve for a minute. \"We'd better unlock the door and climb into the tub. It's going to be pretty embarrassing if Dad comes, Smart-ass!\"\n\nA short while later, Jordan and Charlie walked into the huge bathroom to find Gwen and Steve sitting together in the tub. Jordan dropped the robe off her shoulders and climbed in, sitting next to Gwen. Charlie shrugged, dropped his robe and took a seat next to Jordan.\n\n\"We have to wait a few minutes to see if my parents are coming. This wise guy sitting naked next to me invited them over. He told them we'd be naked in the hot tub and they could join us for a serious conversation.\"\n\n\"Your dad?\" grinned Jordan. \"Cool. He's a good looking guy, if you don't mind my saying so. I'd love to see him climb in and join us. We know that Charlie, and especially Steve, would love to have your mom join us. This could be quite interesting.\"\n\nJust a short time later, the group in the tub heard the door open and close and soon two figures walked into the room. \"Kate? Ashley? What are you doing here? Where are Mom and Dad?\"\n\n\"I heard Mom talking to Dad about a meeting in a hot tub. I figured out was going on. I told them I wanted to go with them, but Dad said he couldn't get into a tub naked with his daughters, so he and Mom are sitting this one out. I asked Ashley if she wanted in on a big pow-wow. As much as she hates to have Steve see her naked, her curiosity won out,\" smirked Kate as she dropped her robe and looked at Steve as she posed directly in front of him. \n\nSteve struggled to remain calm as he slowly looked Kate over from head to toe. He could see Gwen looking from Kate to him, and back to Kate. Both girls were watching him closely for his reaction. He knew that it meant a lot to Kate to be appreciated, but he didn't want to upset Gwen. Considering the situation, Steve determined his course of action.\n\n\"You're absolutely stunning, Kate. Your figure is very much like Gwen's and that's an excellent way to look. You've become a beautiful woman.\"\n\nKate broke into a huge smile as she stepped into the water and sat down on Steve's lap. \"I've wanted to do this for almost three years! I hated being the only woman in the family that never got to show you my boobs. The good thing about waiting is that they're bigger now than they were a couple years ago. Do you think they're big enough?\"\n\nEveryone broke into laughter at Kate's question. Her breasts were full and firm and no one would think they were too small. Ashley quietly dropped her robe and sat down next to Steve while everyone was still chuckling at Kate. \n\n\"You're absolutely perfect. I can't believe that you could doubt it. Women would kill to have your looks and figure,\" suggested Steve as his eyes showed Kate his appreciation of her charms.\n\n\"You don't know what it's like having Lisa and Gwen for big sisters. They're beautiful and famous. Gwen has you and Lisa has Jason. You're two of the best guys on the planet. It's all pretty daunting,\" admitted Kate. \"I can't wait to tell Stephanie that I beat her to the punch. She'll be so jealous.\"\n\n\"If it were with anyone but Steve, I'd say you girls had a pretty weird competition going,\" laughed Ashley. \"As it is, I understand perfectly. We need to always thank Gwen, and Jordan, for being so secure and generous with their guys. Being friends with all of you is the best thing that ever could have happened for me. Now, why are we here, not that I'm complaining.\"\n\n\"Yeah, let's focus on my reasons for asking you all here, rather than on my little sister's incredible body,\" began Gwen as she winked at Kate perched on Steve's lap. \"Our movie trilogy from last summer has been a huge money maker. We have almost a billion dollars at our disposal after our movies, TV shows, recordings, and concerts. These numbers are mind boggling. \n\n\"What are we doing with the money? Are we helping people as much as we should, as much as we could? I've been thinking about it lately. A lot of the money comes from international sales and rentals of our music, movies... everything.\n\n\"I hope you don't get upset with me, but was thinking that we could fund a children's hospital here in Kiev. We could promise around two hundred million to build it and maybe another hundred million to keep it running. I didn't crunch any numbers or anything. I just made them up, so it could be less, but probably more.\n\n\"I know it isn't the U.S., but should we limit ourselves to America, or try to help where it's needed most? It's just an idea. If you don't like it, just say so. I won't be upset,\" finished Gwen.\n\n\"Let me get this straight,\" responded Jordan. \"You're asking if I'd go along with spending a crap load of money helping the kids in this country, and in this part of the world? Money that we worked for and earned for Lady in Red Productions?\"\n\n\"Yes, that pretty well covers it. I know it's a lot of money to spend, but it doesn't do anyone much good sitting in the bank. Maybe it's too much to spend in one place, especially in a foreign country,\" replied a downcast Gwen.\n\n\"I wish your mom was able to hear this,\" chuckled Jordan. \"Besides Steve ogling her, she'd also be very proud of you. Gwen, the money doesn't mean anything to me. I have enough income from my records and investments to live comfortably even in there were no Lady in Red Productions. It's the honor of living and working with you, Steve, Charlie, and everyone else that makes my life so great. I'm in, with no qualms or reservations.\"\n\n\"Oh, Jordan! You're a wonderful sister and friend! Thanks for that support,\" gushed Gwen as she hugged Jordan before turning to Steve. \"What do you think? Is it too much money, or too hard to do, or something?\"\n\n\"Do you have any idea how difficult it is to refuse you anything right now? You're incredible. You're sitting here naked with me, your amazing sister is naked on my lap, another bombshell is next to me naked, and Jordan Quick is across from me naked! There's no blood at all reaching my brain. I'll go along with anything you want,\" replied Steve with a crooked grin.\n\n\"Wow! Are you telling me that anytime I want you to do something for me, all I have to do is get these three blondes naked, with us naked, and you'll go along with anything?\" asked Gwen with a straight face.\n\n\"Yes, that's pretty much what I'm saying. What do you think, Charlie? Am I being foolish?\" asked Steve of his friend.\n\n\"Not even a little. I understand completely and would like to include myself in that situation. If Jordan wants anything...\"\n\n\"Okay! I get it! You men are so pathetic. All it takes is a few beautiful, naked women and you're putty in our hands. You should be ashamed for being so easy, so shallow, so male,\" scolded Jordan before breaking into laughter. \"But that's one of the things that I love about you guys. If we all waved our girls in your faces, we could take a hundred million dollars from you and you wouldn't even care. God, I love having men this easy to control!\"\n\n\"I hate to disagree with you, Jordan, but Steve sure doesn't feel like putty in my hands!\" groaned Kate as she opened her eyes as wide as she could. Then she placed an arm around Steve's neck while rubbing her breasts against his chest. She looked at Steve as he closed his eyes and moaned softly.\n\n\"Anytime you need me to help you persuade Steve about something, just let me know. He always acted so big and tough, but now I know that a few little girls can make him weak in the knees. This is as good as I dreamed it would be. Thanks, Gwen!\"\n\n\"I think you'd better get off his lap pretty soon,\" observed Gwen as she watched Steve's face turn red. \"He's not as young as he used to be and you're obviously causing a lot of stress for him. Besides, Ashley's waiting for her turn.\"\n\n\"Do you realize what just happened here?' asked Ashley as she stood and tapped Kate on the shoulder. \"You were discussing spending two or three hundred million dollars and you got sidetracked about nude women and how they control these two horny guys. We need to stay on topic with this idea. Kate, slide off Steve's lap so I can see if my feminine guiles have any effect on him.\"\n\nKate grinned as she got off Steve's lap and forced her ass between Gwen and Steve. Gwen sighed as she slid a foot to her right to make room for Kate. Ashley sat sideways on Steve's lap so her right breast was against his chest. She squirmed around a little and then let out a contented sigh.\n\n\"Seriously, are you really going along with this idea, or do you think I'm crazy, Steve? If we're going to do this, we need Mom's approval. Are we all together on this?\" asked Gwen.\n\n\"You must be a little crazy to let Kate and Ashley sit on my lap naked, but I like that kind of crazy,\" responded Steve as he carefully placed an arm around Ashley. \"Seriously? You make me proud, and humble, at the same time. Nothing of that magnitude ever occurred to me. I think in smaller numbers, like helping a family, or a group. You're talking about building a new hospital. The construction will mean jobs for the area. The hospital will attract professionals. It'll also save hundreds and probably thousands of lives over the years. \n\n\"Your generosity and concern for children is awe inspiring. I've never known two better people than you and Jordan. It would have to be something pretty stupid or damaging, for me to ever go against the something the two of you want to do, even when you're fully clothed.\"\n\n\"I have the two best partners, and friends, anyone has ever had. I need to include you, Charlie. You and Jordan are together and that makes you part of everything we do. How do you feel about this idea?\" asked Gwen.\n\n\"It's flattering that you ask,\" responded Charlie. \"You guys have made my career. You've taken me with you on this amazing journey. I'll always back Jordan and the rest of you on anything you attempt. This is amazing to me. Like Steve said, it's humbling. You girls are the kindest, most beautiful women in the world and I'm proud as hell to be associated with you. Build that hospital and help those kids!\"\n\n\"Ted fell asleep, but I couldn't stop thinking about you having some big meeting. I was wondering what it's about,\" came a voice from the doorway. \"What hospital are you talking about?\"\n\n\"Hey, Mom! Come on in. The water's fine!\" greeted Kate to her mother. \"You won't believe what Sis and her friends want to do. Tell her, Gwen.\"\n\n\"We want to build a hospital much like the one being built in Sparta, but here in Kiev. These kids don't have proper care, and we can change that. We're guessing two or three hundred million should do the job,\" finished Gwen as she watched her mother for her reaction. \n\n\"That's a lot of money. We do have it, as you all know. I'll have to discuss this with some of our advisors and money people,\" responded Paula as her attention focused on Ashley with her bare breasts pressed against Steve's chest. \"Are you sure that this is what you want? I'm quite certain we can make it happen.\"\n\n\"We are, Mom. Please convince whomever, that we really want to do this. We make a lot of money from international business, and this is the right thing to do,\" insisted Gwen.\n\n\"Okay, as long as you kids are certain, I'll get on it tomorrow morning. Steve, I hope you were appreciative of Kate's figure. She's been after me since the day she turned eighteen to fly her to the Academy so she could flaunt her assets in front of you. I hope she's gotten it out of her system. It appears that Ashley's been harboring a few dreams as well. Good night, and don't stay up too late,\" cautioned Paula, as Ashley remained snuggled against Steve.\n\n\"Paula, I can move if you want to take a turn on Steve's lap,\" offered Ashley. \"Consider it one of the perks of the job. Since you're the Boss Lady, you could be spending a lot of time here. I'm going to be here as much as Gwen will allow. He's very comfortable.\"\n\n\"I'm sure he is, but the 'Boss Lady' will not be indulging in antics unbecoming a married woman, and mother, especially with her daughters watching,\" added Paula as she left the room.\n\nThe next morning, the group had just finished rehearsing for the concert when Steve received a call from Nadiya's father. He spoke to the man for a few minutes and then put his phone back in his pocket. \n\n\"Gwen, Mr. Misko wants us to travel to Russia with him this afternoon. The new Prime Minister and his advisors are meeting with Novokov in Sochi. Things are a bit tense between the two nations right now. It seems like Crimea is once again smack in the middle of a power struggle. We need to get back to the hotel and get ready. We should be back later tonight.\"\n\n\"Why do they want us, or maybe I should ask why they want me?\" questioned Gwen. \"I know you like to 'dabble' in international affairs, but I won't even understand most of what's going on.\"\n\n\"They consider us a pair and they don't get one without the other. They respect your instincts, and I want you with me. We do this stuff together. Men plot wars and women work for peace. Believe me, you're important for this process,\" assured Steve.\n\nAn hour later, Gwen and Steve boarded a small jet for a flight to a small airport in Sochi. Later that afternoon, Steve and Gwen were introduced to President Novokov, along with the delegation from the Ukraine. As he entered the room, Steve was surprised to see the US Secretary of State, Vincent Rosen.\n\nFor his part, Rosen seemed shocked to see Steve and Gwen enter the room. He quickly made his feelings known.\n\n\"You two have no business here! This is a delicate situation between heads of state. It isn't a football game or a movie. This is real!\"\n\nGwen hesitated at the surprise outburst from the Secretary, but Steve showed no emotion as he continued to lead her into the room. Novokov approached Steve and Gwen with a smile. He took Gwen's hand and kissed the back of it and then shook Steve's.\n\n\"It's interesting that the only person not wanting you two Americans in the room is your American Secretary of State,\" observed Novokov in Russian. Steve simply nodded as he shook Novokov's hand. Then he led Gwen to a chair and helped her be seated. \n\n\"Didn't you understand me?\" demanded Rosen. \"You're not a part of these talks and you need to leave.\"\n\nSteve remained calm as he surveyed the room. Translators were filling in the Ukrainian and Russian leaders on Rosen's demands. Steve ignored Rosen and waited for the ball to begin. The Ukrainian prime minister spoke to his translator, who in turn spoke to Rosen loudly enough so everyone could hear.\n\n\"Ms. Anderson and Mr. Hammer are here at the request of the Ukraine government. It seems like the fact that they are American would please you. They will remain. Now let's discuss this situation.\n\nRosen was almost purple with rage for a few seconds, but he gradually calmed down and discussions began. Steve and Gwen sat quietly and listened to the sometimes heated exchanges. Everything was translated into English, so Gwen easily followed the interaction.\n\nGradually, it became obvious that there would be no agreement. Rosen demanded that Russia leave Crimea to the Ukraine and respect the sovereignty of the nation. The Ukraine followed his lead and insisted on the same. Novokov refused to even consider that option. Frustration was everywhere.\n\n\"Mr. Hammer and Ms. Anderson, do you feel that Russia is being unreasonable?\" asked Novokov. Steve remained silent as the translator repeated the question in English. Before he could respond, Gwen spoke.\n\n\"I think you've been very patient, Mr. Novokov. I understand The Ukraine's desire to keep control of Crimea, but Mr. Rosen has not stated any good reason why the U.S. is so determined to prevent Russia from having influence in the area.\"\n\n\"You've got no business here and that statement proves it!\" shouted Rosen before Gwen's statement could be translated into Ukrainian and Russian. \"The fact that we have an actress and pop singer sitting here with world leaders is ludicrous! Why don't you go do what you do best? Take your clothes off for some photographers and stay out of world affairs.\"\n\nBefore Rosen had finished his statement, Steve was on his feet and leaning across the table with his face inches from Rosen's. He spoke in a very low voice. It sounded like a growl more than actual speech. Even Gwen was unable to make out Steve's comment, but Rosen obviously understood every word. He turned beet red and pushed back from the table. \n\n\"This isn't high school!\" shouted Rosen as he stood and backed up farther. \"You forget who you're talking to, Hammer. I'll have you drummed out of the Naval Academy so fast your head will spin! The United States is withdrawing from these talks until these two amateurs are removed from the room.\"\n\nWith his speech, Rosen looked around as translators repeat his words to the rest of the room. Once the translations were complete, the representatives from Russia and the Ukraine remained silent, watching Rosen to see his next move.\n\nWhen no one made an effort to placate him, Rosen angrily turned and led his entourage from the meeting. After Rosen left, Novokov turned his attention to Steve and Gwen.\n\n\"He can make things very difficult for you, can he not?\" asked Novokov in broken English. \"What did you say to him?\"\n\n\"Sir, as you well know, a man must insist that he be treated with respect or there can be no meaningful dialogue. As long as I live, no man will disrespect Gwen in my presence. That is more important to me than any trouble he can make,\" replied Steve.\n\nThe heads of both nations nodded their heads in agreement. They had just seen the young American make a very strong stand against a powerful member of his nation's government. They knew the possible consequences of such an action and the nerve that it required.\n\n\"What would you think might end this impasse?\" asked Nadiya's father to Steve.\n\nSteve outlined what he had observed and what he felt the issues were. He reminded everyone that no one won when there was war and that each side needed to yield on some points, or innocent children as well as others, would be killed, injured, or starve to death in any sort of conflict. As fathers, these men needed to see the wisdom in avoiding conflict at all costs. Gwen added that she had already seen far too much hunger and insufficient health care in the Ukraine, and urged the men to find a reasonable solution.\n\nMore discussion followed. Gwen could see the men had become more conciliatory after Rosen left the room. After another hour, the two nations had come to a tentative agreement on Crimea and how to proceed. The people of Crimea would decide their own fate at the polls. Russia and the Ukraine would continue to trade and allow products and resources to move freely through the Ukraine. It was a fragile agreement, but it was a start.\n\nFinally, the dialogue came to an end. President Novokov personally approached Steve and Gwen and thanked them for their input, as well as for adding some excitement to the proceedings.",
        "The trip back to Kiev was relaxed. The Ukrainians felt they had an agreement that they could live with. They chuckled when they recalled Rosen's anger, his indignant tirade against Steve and Gwen, and his look when Steve got in his face. To a man, they approved of Steve's response to Rosen's crude comments directed at Gwen. If Steve had not reacted as he did, they would have thought less of him.\n\nWhen Gwen and Steve returned to the hotel, there was a message from Paula for them at the desk. Gwen read it over before speaking to Steve. \"No surprise here. Mom wants us to stop in her suite before we go to our room. She's received a few testy phone calls from the state department and wants to know what's going on.\"\n\n\"Maybe you two can explain exactly what happened in Russia today that has the state department so irritated,\" began Paula as Gwen and Steve entered her suite. \"I've received several calls asking if you were available, and insisting that you call them immediately.\"\n\n\"It wasn't such a big deal, Mom. The Secretary of State made the mistake of insulting me in front of Steve. Steve explained to him how unhealthy that sort of behavior was, so he got all huffy and left the meeting. Once he left, things went much smoother. He did threaten to get Steve booted from the Academy.\"\n\n\"Oh, dear! I'm so sorry, Steve. You really need to learn to control your temper. Everyone knows that Rosen is a proud, pompous man. He'll ruin your career if he can. What did you say to him?\" asked a concerned Paula.\n\n\"It was just between to two of us. I won't repeat it, especially to a lady,\" stated Steve. \"I will not stand idly by when anyone shows disrespect for Gwen. I love being at the Academy, but it won't be the end of the world if they determine that they no longer want me.\"\n\n\"You kids had a busy day but you're supposed to call the state department when you get in. They said your cell phones are turned off. I imagine that wasn't an oversight on your part. What are you going to do now?\" questioned Paula.\n\n\"Since you ask, I'm going to take this handsome man back to our room and have my way with him. Then, once he's rested and ready again...\"\n\n\"That's enough information!\" interrupted Paula. \"It's great to be young and in love. The Secretary of State is pissed at you two, and all you're thinking about is making love. That's probably the best way to handle this situation. These things have a way of sorting themselves out. There'd be a lot of angry Navy football fans if Steve doesn't quarterback for them the next couple years. You kids go relax, or whatever, and we'll see how it shakes out in the morning,\" concluded Paula as Gwen and Steve headed for the door. \n\nOnce Steve and Gwen finished making love, they lay cuddling. As Steve caressed her breasts, Gwen asked, \"Are you worried about Rosen ruining your career? You didn't have to defend me so strongly when he made those snide remarks.\"\n\nSteve leaned over and kissed Gwen gently before responding. \"No one can speak to you, or about you, like that in front of me. You're the best person I've ever met. All the things you are, and all you do, are great, but Gwen Anderson, the human being, is amazing. All the rest is icing on the cake, which I would love to slowly lick off!\" \n\n\"You sure have a way with words. That silver tongue of yours should be registered as a friendly weapon, along with this not-so-little guy. He seems to be waking up again. I can't even express how much I love you,\" moaned Gwen as Steve increased his attention on her nether regions.\n\nThe next morning, the Americans were enjoying a casual breakfast when a man in a suit strode up to their table. \"Mr. Hammer. Ms. Anderson, you are to come with me. They want you at the American embassy immediately.\"\n\nSteve stood up, placed his hand on the man's shoulders and steered him away from the table. They went out the door together as Paula and Gwen exchanged nods. Steve returned to the table a short time later.\n\n\"Excuse me for leaving the table. I explained to that gentleman that we were enjoying our breakfast and that he should be more considerate of others. If we have the time, we'll stop in at the embassy later today, or maybe tomorrow,\" grinned Steve as he dug into his steak and eggs. \n\n\"I don't believe the state department will cause you any problems while we're here,\" declared Jordan. \"Have you seen how busy the city is getting? When we take the stage Saturday, there'll be at least fifty thousand people in the square. We're invited guests of the new Ukrainian government. Rosen having his nose bent out of shape won't be enough to make them screw up such a good thing.\" \n\n\"I agree. If he managed to get me tossed out of the Academy, the government would lose its ability to use me when they wanted. I'd be able to refuse, although I probably wouldn't if they felt I could help. They just need to learn some common etiquette and consideration. We'll stop in at the embassy tomorrow, if they still want us. I may circumvent that issue later today,\" added Steve.\n\n\"What do you have in mind now?\" asked Paula sarcastically. \"Pissing off the vice president?\" \n\n\"Actually, Mother, Steve will be speaking to President Hanson later today. He doesn't waste time with the vice president. We expect Hanson to rein in Rosen. He knows that Steve is better at diplomacy than Rosen ever was. He should fire Rosen and give Steve the job, except of course, Steve is way too busy,\" boasted Gwen as she gently rubbed Steve's back.\n\nLater that day, Steve, with Gwen listening, had a brief phone conversation with President Hanson. \"Rosen tells me you really screwed the pooch, Steve. He wants a court marital, a hanging, and maybe a public flogging. What the hell happened?\"\n\n\"He resented Gwen and me attending the discussions between Russia and The Ukraine. He didn't get that we were there at the behest of the new prime minister and not as his loyal subjects. He suggested that Gwen should spend her time being photographed naked rather than at a diplomatic gathering. I took offense and explained to him just what would happen if he made that mistake again. He got all huffy and left.\"\n\n\"I thought it might be something like that, although his version differed from yours in key areas,\" confirmed Hanson. \"You've made a serious foe. Don't underestimate Rosen. He expects to have my job in a few years. I'd advise you to retire from the service before he takes office if he gets elected.\n\n\"How did the talks go? I've been given the laundered version from both ambassadors, but what did you think?\" asked Hanson.\n\n\"I'd say that they went as well as you could hope. Russia has far too much to lose to allow the area to get too far from its grip. I suspect Crimea will join Russia and The Ukraine is going to have a long road in front of it. They need to walk the line. They have to make every effort to remain neutral and not align with the U.S. too much. Russia can't allow it, and they won't. Rosen seemed to think he could convince everyone that the U.S. would have a dominant position and everyone should accept it. It's not going to happen. It's like us allowing Russia control of Mexico. We simply couldn't accept that threat.\"\n\n\"So you think we need to be supportive, but not expect to be able to exert too much influence? Try to keep the area neutral and avoid stirring things up?\"\n\n\"Pretty much, Sir. Rome wasn't built in a day. This has to be very gradual, so it isn't even noticed. The Ukraine will work its way to toward the west, but in small steps. We should be helpful and generous but not ask for anything they cannot, or dare not give us,\" summed up Steve.\n\nThe Americans spent the rest of the day touring the city and shopping with more children. Jordan, Gwen, Kate, and Ashley had a great time helping the kids pick out clothes and toys. Charlie, Ted, and Steve were coaxed into helping some of the older boys find a few suitable outfits and some sport equipment. \n\n\"It's a good thing we're going home this weekend,\" laughed Kate that night at dinner. \"Lady in Red Productions is spending a few thousand every day, not to mention a few hundred million on a hospital. In another ten years, you'd all be broke. Have you told anyone about the hospital, yet?\"\n\n\"Our people just made a deal on the property. We didn't want word to get out and have everyone jack up the prices for the property to build the hospital. We managed to enter into a contract to buy the two block stretch of old warehouses just three blocks from the square. Now we can let the cat out of the bag,\" concluded Paula.\n\n\"Tomorrow is the big day. The new government will be sworn in and we'll be on the stage as special guests,\" pointed out Gwen. \"Maybe we could make the announcement then and help make it a joyous occasion. Any suggestions?\" \n\n\"I know I'm just the help, but I would suggest that Rosen and the state department encouraged this decision and were party to it. You guys stung him pretty good and he's a very powerful man. If you say some nice things about him in public, he'll be less likely to have your head on a platter,\" suggested Ashley.\n\n\"Hired help? You're far more than that to us, Ashley! That's an excellent suggestion,\" praised Gwen. \"Navy needs their quarterback, we'll schmooze Rosen tomorrow.\"\n\n\"I think this announcement should be made by Gwen,\" insisted Jordan. \"It's her idea and she's pretty much known for her desire to help children. I bet the city will love it.\" \n\nFriday afternoon found the American delegation with Gwen, Jordan, Steve, and Charlie seated not far from the Ukrainian prime minister. Secretary Rosen was leading the delegation and he studious ignored Steve and Gwen when they were ushered to their seats. As is common in Eastern Europe, speeches seemed to last forever as members of the government were introduced and allowed to speak.\n\nGwen had asked Nadiya to allow her a few minutes to address the crowd before the prime minister spoke. Nadiya assured her that she would be given an opportunity. \n\nThey had been on the stage for a couple of hours when Gwen heard saw Nadiya approach the microphone and speak in Ukrainian. \"As you know, Gwen Anderson, Jordan Quick, and Steve Hammer, along with their band, will be performing right here tomorrow evening. They want to help Kiev celebrate by sharing their talent right here in Freedom Square.\"\n\nNadiya waited for the cheering to abate before she continued. \"She has asked for the opportunity to address us this afternoon. I give to you my very good friend, Gwen Anderson!\"\n\nGwen went to Nadiya and hugged her before stepping to the microphone. \"Ladies and gentlemen, I won't take much of your time. My friends and I are having a great time in your beautiful city. We especially love the children and how open and friendly they are.\n\n\"The United States has been great to us and given us some amazing opportunities. We appreciate that. Our success has come because we are a free society. Secretary Rosen has been actively encouraging corporations to come to Kiev and invest, to open businesses and to hire locals. My friends and I believe that Secretary Rosen is absolutely right. This is a great city and international companies should invest in its future.\n\n\"To that end, and to help this wonderful city grow and its children receive the health care they deserve, Lady in Red Productions pledges to built a state-of-the-art children's hospital here in Kiev. We are dedicating two hundred million dollars for constructing and equipping this hospital. We will then fund the hospital to ensure that it remains a viable source of health care for this great city for decades to come. No child will be turned away, regardless of financial status!\"\n\nThe crowd was estimated around fifty thousand and every single person roared his or her approval of Gwen's announcement. Nadiya rushed to Gwen in tears and hugged her dearly as the crowd made its approval known. It took several minutes for the excited crowd to quiet enough for the next speaker to continue. When Rosen was given the stage, he praised Lady in Red Productions and prevailed upon other international companies to join in building the economy of the Ukraine. He seemed to claim some of the credit for Lady in Red Productions being so generous. Gwen squeezed Steve's hand and smiled as Rosen spoke.\n\nAfter a very long and somewhat anticlimactic speech by the new prime minister, an inaugural ball was held in very hotel where the Americans were staying. Steve wore his Navy dress uniform, while Gwen looked stunning in a red gown. Paula stood with Ted and watched as Gwen and Steve entered the room.\n\n\"Ted, your daughter and her boyfriend have become world figures. They have more influence than many heads of state. I'm having trouble believing what my mind is telling me. Look at them. They're holding court here tonight and they pretty much do that whenever they're together. There's no telling where they'll be in ten years.\n\n\"He's so masculine and decisive, while Gwen is so beautiful and compassionate. They don't even realize how much impact they have on those around them. I'm so proud of them; I can't even find the words to describe it.\" \n\nSteve and Gwen chatted with other guests between dances, but remained together for the first few dances. Reluctantly, they separated to dance with other guests.\n\nWhen Steve took Nadiya into his arms for a slow dance, her affection for Steve was obvious as she clung to him and stayed close with every step. \"You are the finest man I have ever met, and Gwen is the luckiest woman in the world. To have the devotion and love of a man like you is a great gift, and Gwen knows it.\"\n\nAs the dance ended, Nadiya pulled Steve down for a kiss before turning and walking away. Kate was in his arms before he had time to look around. \"She's beautiful and she loves you. But then, so do Ashley, Naomi, Becky, and several others, including me. \n\n\"Did you see how the crowd reacted when Gwen told them about the hospital? You guys are making a difference and it's so great to be along for the ride. I hope we're always close like this. You make my life better, and when I'm going to college at Georgetown, I'll be able to visit you now and then. You can come to visit me and make all the other girls jealous, okay?\"\n\nThe respect and interest shown to Steve and Gwen did not go unnoticed by the Secretary of State and his wife. \"You'd better make an effort to apologize to that woman,\" advised Rosen's wife as she danced with her husband. \"I know you were upset, but complaining to the president didn't get you very far. You need to choose your battles. I'm beginning to wonder if a person can get elected president if they're not on good terms with those two. You're Secretary of State of the United States, but that couple is like royalty. Look how people flock to them. Make it work for you, and not against you.\"\n\nGwen was not totally surprised when Rosen requested a dance with her. She graciously accepted and glided across the floor in his arms. \"I owe you an apology, Ms. Anderson. What I said was totally inappropriate. Your boyfriend had every right to speak to me as he did. His words to me were between men, not between a superior and an underling. He handled it as a man should. Please allow me a second chance.\" \n\n\"Secretary Rosen, you're a very successful, intelligent man. You never would've made it this far if you weren't. We want this country to succeed, to be a beacon of light in the world. We'll help any way we can to make that happen. But, as you've found out, Steve's weakness is me. He'll risk anything and everything for me. Never doubt it, and please, never force him to demonstrate it again. Be honest and open in your dealings with him, gain his trust and respect, and he'll be your friend for life. If you're his friend, you'll be mine. He takes the lead when it comes to judging men. He's very good at it, and I have complete confidence in that ability.\"\n\nMeanwhile, Rosen's wife was dancing with Steve. \"My husband told me what you said to him at that meeting. He was stunned that you'd dare speak to him that way. He actually wanted to run you out of the Academy, he was so angry. He misjudged you, as well as your young lady.\n\n\"That was a bad mistake and one he needs to correct. He has a good chance of becoming president in five years, but I realize that he could have trouble if you came out against him. Please consider all of the good things he's accomplished for our country and allow him the opportunity to right the wrong he did to you and Ms. Anderson at that meeting. We'd love to be able to have you both as regular guests, if we should be fortunate enough to make it to the White House.\"\n\n\"I have no intention of becoming involved in politics, so there's no need for you to worry about that. As far as your husband's conduct toward Gwen, it's a concern. A man in such a high position should not become angry, petulant, or insulting over a difference in opinion. If I had demeaned you, I would expect him to show anger, but not over a difference on some issue. I strongly suggest that you have him work on his presidential demeanor, and his temper, between now and the campaign,\" concluded Steve as the song ended.\n\nSteve sought out Gwen and escorted her around the room, chatting with various dignitaries from around the world. Without exception, everyone they spoke with was flattered that the two famous Americans took the time to speak to them. The Ukrainian officials were extremely pleased that their new government managed to attract what many felt was the most famous couple in the world. \n\nThe next day began warm with plenty of sunshine. People began filling Independence Square by noon in anticipation of the concert that was still eight hours away. By six o'clock, the crowd was estimated to be over a hundred and fifty thousand people. \n\nLady in Red productions had placed several giant screens on various buildings around the square, and the sound system covered well beyond them. When the band began playing at eight o'clock sharp, officials estimated over a quarter million people were jammed into the square and surrounding streets.\n\nIf they were nervous about the size of the audience, it never showed. Gwen went right into their opening number with gusto as the band fed off the energy of the huge crowd. They had a lot of material to draw on from their hit records and movie soundtracks. Halfway through the evening, Jordan sang her 'Stand By Me' song that had become a huge hit the previous fall. A short time later the crowd roared its approval when Steve and Charlie led with guitars as Gwen pranced around the stage singing her latest hit. It was a remake of the Joan Jett song 'I Hate Myself for Loving You' that was such a success at the July 4th bike ride for American pride. \n\nThe kids sang all of their hits, as well as the songs they had relied on before doing so well with their own material. The crowd remained until the last number was finished and Steve, Jordan, and Gwen all thanked the fans repeatedly. The people of Kiev would long remember the night that the famous Americans helped them celebrate their new position in world trade and politics. It was an extremely proud evening for the citizens of the Ukraine.\n\nThe following Monday afternoon, Gwen walked into her current events class and took her seat. As soon as the bell rang, Professor Yurchenko asked her to come forward. \"You were quite busy making history last week, Ms. Anderson. The reports you sent back were enlightening, but there is a lot more to tell and we all have questions. Your concert was absolutely incredible!\"\n\nGwen answered questions the rest of that class and the following two. News clips of shopping with the children, the trip to Sochi, the inauguration, the ball and the concert were shown and Gwen gave her observations about what she was feeling and thinking as they happened. The students enjoyed it and her professor was delighted.",
        "Gwen's reverie was suddenly broken and she was jolted back to the present when Mr. and Mrs. Thompson approached her. \"I had no idea you were coming to Sparta! Are you going to attend the hospital ceremonies and the concert tomorrow?\" asked Gwen as she embraced the couple.\n\n\"We had to do something,\" replied Mrs. Thompson. \"The waiting and wondering is taking its toll. When we landed, we saw reports that the cartel has Steve Hammer pinned down in the mountains and the fighting was intense. How long can he hold off an army, and what about our girls?\"\n\nGwen realized that she wasn't the only person suffering as she listened to the cries of a very worried mother. She knew that the Thompson's would take their lead from her reaction to the situation.\n\n\"That was the worst thing those idiots could have done,\" stated Gwen flatly and with conviction. \"You heard that there are a lot of casualties? Steve's fighting for his life, and for your daughters' lives. He's a very dangerous man on a good day. Right now, he's their worst nightmare. Your girls will be okay. I guarantee it.\" \n\nAfter a fitful night, Gwen was up early to listen for any news from Colombia. With nothing new to report, the cable news channels were looping the same stories over and over. Gwen went with her family for an early breakfast at Marsh's Landing. Laura, Ashley, Charlotte, Becky, Jordan and Charlie were there waiting for them. Gwen's grandparents as well as Steve's joined them shortly after they arrived. The Thompsons were also guests at the table.\n\nMs. Walker came into the dining area and was invited to join them. \"This is the day we've worked for. I wish Steve could be here, but I have no doubt that he'll get back as soon as possible. I'm filled with pride and humility at this accomplishment. I never dreamed it would turn out so well, and it's largely because of the effort s of Lady in Red Productions. Thank you, everyone!\"\n\nAs they ate, it became apparent that Gwen was becoming agitated. She was pushing her food around and constantly looking around the room. Laura noticed it and tried to calm her.\n\n\"Gwen, would you like me to prescribe something to help you relax? I know you're under a great deal of stress. You look tired and anxious.\"\n\n\"No, I'm fine. I just feel out of sorts. Something feels different. I'll be fine as...\"\n\n\"Look!\" shouted Kate as she pointed to the TV playing across the room. \"They're dead! Not Steve and the kids, but that fat bastard Flores and his son! I knew it! They pushed Steve until he got mad. They're saying they don't know exactly how the two died, but it might have been some stray gunfire. Ha! I bet they both have bullets through the heart!\"\n\nJust then, Laura's phone chimed. \"It's the hospital. I have to take this.\"\n\nLaura listened for a few minutes and then disconnected. \"There's a helicopter bringing in some injured people. It isn't even a trauma chopper, just a regular privately owned helicopter, which is unusual. Well, we're open for business and our new landing pad will see its first use. And there are a lot of people in town to see it.\"\n\nGwen suddenly pushed her chair back. As she stood, she cried out. \"It's Steve!\" \n\n\"Sweetheart, it can't be,\" responded Paula with concern for her daughter's odd behavior. \"He's in Colombia. Please sit down and...\"\n\n\"Mom! I know it's Steve!\" insisted Gwen as she turned and ran from the restaurant.\n\n\"Mom, she's acting really weird,\" worried Kate as she stood. \"I'll go with her.\"\n\nGwen left the building and looked for her car before realizing that she had ridden with her family. She turned toward the hospital and began to run up the sidewalk. When Kate emerged form the restaurant, Gwen was already a couple hundred feet up the street. Kate put her head down and took out after her sister.\n\nThat was when Kate realized how hard Gwen was running. Kate had all she could do to gradually catch her. She heard the loud drone of the helicopter overhead as they came within sight of the landing pad. By this time two cars loaded with Gwen's family and friends pulled into the parking lot. Laura pulled into her reserved parking spot and parked. She raced to intercept Gwen before she reached the landing pad. She just made it.\n\n\"Gwen! Stop! Even if it was Steve, it isn't safe to get any closer! Wait here with me and we'll see who's on board. I have to warn you that there's no reason whatsoever to think it might be Steve,\" insisted Laura forcefully as she held Gwen's arm.\n\nA large number of people had seen Gwen running up the street, with Kate hot in pursuit. Word had spread through the town that Gwen Anderson was running toward the hospital and now a helicopter was settling down on the landing pad. People were hurrying up the street toward the hospital.\n\nGwen's hair blew behind her as she watched the helicopter slowly descend. Her anxiety was at an extremely high level as she strained to see who was in the machine. \n\nPaula had tears running down her cheeks as she stood with Ted, her parents, and Steve's grandparents watching the scene unfold. \"She's so upset about Steve; she thinks he'll show up any second. I don't know what to do for her. When she sees he isn't on this chopper, it'll crush her,\" sobbed Paula.\n\nThe chopper landed and slowly a door swung open. A heavy boot hit the pavement, followed by another. Then a pair of smaller feet attached to very brown legs gently hit the pavement next to the larger ones. They stepped away from the chopper and Mrs. Thompson gasped loudly.\n\n\"It's Roxie! And there's Sam!\" sobbed the woman as a second girl was carried into sight by a darkly tanned man with no shirt, and red stains smeared across his shoulder, arm, pants, and face.\n\nGwen broke free from a stunned Laura and raced to the trio. The man gently placed the smaller girl on the ground and enveloped Gwen in a fierce hug as the girls trotted toward their sobbing mother.\n\n\"Dear God!\" cried Paula as she watched her daughter in the man's arms. \"It's Steve!\"\n\nBy this time, Kate was next to her mother and asked the question on everyone's mind. \"How did Gwen know that Steve was on that chopper? That's not even possible!\"\n\nGwen was appalled at Steve's appearance. His shoulder was enflamed and crusted with blood that had run the length of his arm. His face was a series of scratches with blood clotted around them. He was unshaven, sweaty, dirty, and tanned beyond anything she thought possible. As he stepped to take her into his arms, he limped noticeably.\n\nWithout hesitation, Gwen threw her arms around him and hugged him as hard as she could. They were like that for almost a minute when Gwen felt Steve shake and then heard a sob catch in his throat. She suddenly realized that he was crying into her neck as he clutched her desperately. Gwen patted his back and ran her hand through his hair as she whispered soothingly to him. She began to realize the toll the past week had taken on him and marveled at his strength and determination to make it back to her.\n\nGwen heard Laura speak after she and Steve had shared the embrace for a very long time. \"Gwen, he needs to be examined. Let's get him inside and take care of him. I see some bullet wounds and numerous scratches. He's dehydrated, exhausted, and extremely emotional. Let's put him on a gurney and get him into the emergency room.\"\n\n\"I'll walk, Laura,\" replied Steve as he wiped his cheeks and straightened up. \"It's only a few scratches. I don't know what happened there. The last few hours have been like a bad dream. We switched planes a couple times and then the helicopter. I just lost it for a minute. I'm sorry about that.\"\n\nGwen slid her arm around his waist as Steve placed his good arm over her shoulder. Together they slowly made their way inside the hospital. Meanwhile, the Thompsons were enjoying a reunion of their own. After lots of kisses and hugs, the girls were ushered into the children's wing for evaluation, accompanied by their parents. Right behind them was a gurney with a small boy followed closely by his worried mother. \n\nThe crowd that had witnessed the scene was buzzing. Phones were out as folks called friends and relatives to give them the news. Steve Hammer had survived and made it home! Channel 5 had a camera man on site for the dedication later in the day. He had recorded the entire scene.\n\nWilliam Patterson and his wife turned to face Paula and her family. \"I can't believe what just happened. Our grandson was in a gun battle with dozens of cartel men in Colombia just a few hours ago. Now he's back in Sparta, and in Gwen's arms. It's exactly where he belongs.\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "colombia",
        "drug lords",
        "rifles",
        "snipers",
        "kiev",
        "hospital"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-05"
}