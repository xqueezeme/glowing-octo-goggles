{
    "title": "Hypnotic Ch. 07",
    "pages": [
        "\"So I can go home now?\" I looked from the doctors watching me with pleased expressions to my mate. I couldn't get enough of looking at him. His yellow eyes with the black slit pupil that I thought were so sexy and the tips of his fangs dropping down when he smiled at me made me shiver. He hadn't left my sight since we realized I could see again.\n\nHe'd cleaned me up, and then held me for a little while as the effects of the venom wore off. When I could, I lifted my hand and caressed his face, tracing one eyebrow and then sliding my fingers down to cup his cheek. I was quietly euphoric; amazed at the simple pleasure I'd taken for granted as to see the soft skin I was touching as I'd traced his soft lips. His pupils had widened, and I'd felt his pleasure with an echo of our earlier need.\n\nI'd called for the doctors as soon as he was ready; I'd wanted to get the sensors off and finish the tests the doctors were sure to run before they would let me leave. I was still full of the energy the venom pulsed through my body, a weird mix that made me feel as if I could run miles in an eye blink yet made my limbs almost too heavy to move. The tests had taken almost six more hours. Six hours of drinking in the sight of my mate was barely a taste of what I wanted, what I needed. I knew that life outside the hospital would have some serious complications before we could just relax, mainly having to do with my brother.\n\nIn order for me to tell Dav about Isiah, I needed some privacy. If he was going to freak out I didn't want him to do it where there were any witnesses. It felt like I was running out of time to tell him, which led me to bugging my doctors to release me every time they entered the room.\n\n\"We're going to need you to come to my office on Monday, Ellis,\" Dr. Bakier said. \"We'll have some more results, and if you're going to be intimate again and involve more venom,\" he ignored Dav's snort, \"we'll need to test the levels in your blood again. You aren't cured, and there are still a lot of questions about your own genetic make-up.\"\n\nHe consulted my chart and frowned. \"You know, I don't think you have really spoken of him, but it says here you have a twin brother. Is that right?\"\n\nDav hissed and Dr. Bakier jumped, his eyes widening as he stared at my mate with wide eyes.\n\nI squeezed Dav's hand. \"Stop that.\" Turning to the doctor, I gave him a shaky smile as I tried to hide the way my heart was racing. I hadn't expected him to bring up Isiah.\n\n\"I do.\"\n\n\"You know, he could be carrying these same genetic anomalies that you have. Perhaps you could convince him to come and have a few tests run himself.\"\n\nI could see Dr. Pannar's slight shake of his head when I opened my mouth; Dav was rigid beside me. I shrugged. It wasn't like Isiah would be a good candidate to study against my changes anyway since he had made a few of his own after mating with Ahsran.\n\n\"He might come but,\" I kept my voice as non-committal voice as possible, \"he can be tough to get in touch with.\"\n\nDr. Bakier sighed. \"Well do what you can. That could be an invaluable resource to create a benchmark. You are identical twins, correct?\"\n\n\"We were.\"\n\nShit! I caught that slip of the tongue as soon as I said it. Dav's head cranked around and he stared at me, his eyes narrowed. I thought fast.\n\n\"You said I seem to have changed so much that my tests were showing a strong presence of Snake characteristics. I hardly doubt we'd both be mated to Snakes no matter how many people go on and on about the supposed twin bond and how they have identical lives too.\"\n\nI wasn't sure if I had convinced Dav with my comment or not, but he didn't say anything.\n\n\"Very true,\" Dr. Pannar agreed \"We'll just have to do our best without him for now.\"\n\n\"But I can go home?\"\n\nDr. Pannar nodded. \"But no working. I'll do without you for a few days.\"\n\nI smiled, happy and excited to get out of the hospital and back on familiar ground. Besides, to my new enhanced senses the hospital not only smelled bad; it tasted bad too.\n\n\"And we want you to have someone with you around the clock, just in case,\" Dr. Bakier added.\n\n\"That will be done anyway,\" Dav said. \"I'm not going to let him out of my sight for more than a minute.\"\n\n\"Good,\" Dr. Pannar smiled. \"Good.\"\n\n\"Can I get my release paperwork now and my clothes? If you're going to get me go, I don't want to waste any more of the day.\"\n\nIt was Thursday; I had only one more day until Velaku and everyone expected Isiah to get to town. I had to talk to Dav as soon as possible.\n\nThe trip out of the hospital was awful; everything had a strong smell and so many of them were disgusting enough to make me gag. I looked up at Dav and almost laughed at the grimace on his face. He smiled at me, and I sobered. Would this balance and harmony we had found disappear when I told him the secret I was keeping?\n\nDav kept glancing over at me on the drive home. I hadn't heard back from Matthew, but I was sure that if there had been a problem with him getting in touch with Isiah that he would have come back or at least called me at the hospital. I still wish I had been able to speak with him. All I had to do was break the news of my twin's innocence and his presence in town to my mate, and then track him down so we could figure out a plan on how to approach Velaku.\n\n'That's all'. I snorted at that thought.\n\n\"What?\" Dav asked.\n\nI shook my head. \"Nothing important,\" I sighed, \"just glad to be out of there. And a little tired.\" I was still a bit lethargic from all the venom he'd pumped into me. It was like the peaceful heaviness after a great workout.\n\nHe reached over and took my hand, rubbing his thumb across my knuckles. \"I'll have you home so you can rest soon.\"\n\nRest.\n\nRight. I tried to hide my anxiety, pushing it down so that Dav wouldn't sense it.\n\n\"Do you mind if we stop by the bar? I need to talk to Benny; he sent me a text before we left the hospital.\"\n\nImmediately I felt my heart begin to race. I couldn't help but wonder what Benny wanted that was so important Dav had to speak with him in person. Did he know? Had someone seen Isiah or Ahsran? My hands started to shake, and I pulled away from Dav. Curling them into fists, I pressed them hard to my thighs to hide the tremors.\n\n\"Hey . . . hey,\" Dav's voice washed over me, penetrating the overwhelming panic, \"What's the matter?\"\n\nI shook my head, my mouth too dry to say anything.\n\nWe stopped at a light and he turned his head to look at me. \"I can feel your fear,\" he said. \"Are you still afraid of Benny? He is sorry for hurting you.\"\n\nI shrugged one shoulder and looked away from his intense stare. He sighed.\n\n\"How about you stay in the car? I really need to check in with Benny; he said that the liquor distributor is two days late with our delivery and our supplies of rum and tequila are getting low. I need to authorize a temporary purchase and he needs my signature before the new supplier will send over the cases. It won't take long, and if you're too afraid to come in to the bar you can wait in the car.\"\n\nMy breath left me in a whoosh. They didn't know. While I was still a little afraid of Benny, I knew that Dav wouldn't let him hurt me. But . . . if Dav thought I was too nervous to go into the bar that would give me some time to myself.\n\nI could call Isiah.\n\n\"Thank you.\" My hands stopped shaking as I calmed, and I leaned my head back against the head rest. Closing my eyes, I wondered if my life with Dav would always be as stressful and crazy as the last few weeks. I shivered.\n\n\"Here.\" Dav turned up the heat and I felt a vent begin to blow warm air on me. It felt good, and while I didn't fall asleep, I could feel myself just basking quietly as the heat soaked into my body. I smiled when I realized exactly what I was doing.\n\n\"These little traits I'm picking up from you are interesting,\" I said in a lazy voice.\n\n\"Hmm?\" Dav asked. The car stopped and I opened my eyes as I turned my head to look at him.\n\n\"Well, I was stressed. You turned up the heat, and I could almost feel the tension leaving my body as I relaxed. Just like a snake basking on a hot rock in the sun.\"\n\nDav tilted his head as he searched my eyes. \"Does that bother you?\"\n\nI shook my head. \"I told you before. I'm not going to get upset about becoming more like you. I've never had any bias against your kind, and I'm not about to start now that we've become mates.\" I smiled at him. \"Frankly, I've always thought you were sexy with your fangs and your slit pupils. And we both know I'll never complain about your venom when you bite me.\" I shivered at the thought of him biting me again so soon.\n\nI was half-hard just from the rubbing of my clothes and the leftover venom that hadn't burned off yet. If he bit me again. . .\n\nDav smirked when I shivered again and I knew he could feel the pleasure the thought brought me. He leaned over and kissed me, his forked tongue caressing the inside of my mouth, stroking my tongue and dancing along the roof. It tickled a little but in the best way, making me lean forward and deepen the kiss. Our tongues thrust back and forth, teasing each other until he pulled back with a moan.\n\nOne hand gripped his door handle. \"Now I have to go in there with a hard on.\" He looked fierce, giving me a mock scowl.\n\nI grinned at him. \"Hey, you kissed me!\"\n\n\"Can't help but want to do it again either.\" He leaned forward and gave me a brief kiss, sucking a little on my bottom lip. \"Hmm . . . you taste good.\"\n\nI nipped him in return and he jerked back. \"So do you. But you need to go inside.\"\n\nDav sighed, running his hand through his hair. \"I know. I'll be right back. Just stay here, okay?\"\n\nI nodded.\n\nThe door clicked softly as he shut it and the locks reengaged. I watched him as he walked away, my eyes zeroed in on his ass as he walked. His slacks cupped the curves of his body in a way that screamed custom tailoring. I never really thought about it but he was always so well dressed, so neat and tidy.\n\nIt made me want to muss him.\n\nPreferably in bed.\n\nI shook my head when the back door to the bar closed behind him. Clearly our bond was doing its' job. We were closer than ever and I couldn't imagine not having him in my life. I wanted him too much to deny the rightness of our being mates. Even with everything that had happened, I knew inside Dav was a good man and the right one for me.\n\nBesides, that tongue of his could make a man forget a laundry list of his sins.\n\nI waited another minute so I could be sure that he wasn't going to come back for something, and then pulled my phone out of my pocket. Turning it on, several messages dinged at me on the screen. I ignored them and dialed Isiah's number.\n\nIt went straight to voicemail.\n\nThere could be a lot of good reasons for that; I refused to panic, yet. I dialed Matthew's number. It rang several times, and then went to his voicemail too.\n\nDamn it! Why wasn't anyone picking up? I tried Isiah's again.\n\n\"Come on, come on.\" This time the phone rang eight times, but he still didn't answer.\n\nNot good, not good at all.\n\nI stared at my phone, one foot tapping nervously as I chewed on my lip. I couldn't think of anyone else to call, I'd told them to check out of the hotel, so I couldn't call there and ask for a message to be sent to the room. I had no idea where my brother or my best friend were and no way to find out.\n\nThen I remembered the messages. My hands trembled as I tapped the voicemail option, and then held the phone to my ear, listening to the automated voicemail spiel before my messages began. There were two of them. One was Matthew saying that he'd gotten my message to Isiah. The second was from a telemarketer, and I almost threw my phone in frustration.\n\nI'd hoped there would be a message telling me where they were and why they weren't answering their phones. I hung up and then shoved my phone in my pocket. I brooded, staring out the window until I saw Dav come back out, a small brown bag over his shoulder. The car beeped as he unlocked the doors.\n\nHe opened up the back and slung his bag onto the seat before he got into the car. \"I thought I'd grab some clothes. It's been a bit since I showered.\"\n\nHe'd been by my side every minute in the hospital. He was a bit pungent, but since it was his scent I actually enjoyed it. I wasn't much better; a wet washcloth wasn't that effective for a full body clean up and I just hadn't been able to stomach the idea of the hospital's soap on my body. It reeked.\n\n\"We can take one when we get home,\" I said with a yawn.\n\n\"Then you can eat something and take a nap,\" he said, looking both ways as he pulled out of the parking lot.\n\nI just went along with his plans. I knew that we needed to talk, but maybe if I got him relaxed in a hot shower and he ate with me, we could talk in bed. I seriously doubted he would take what I had to say well, but I was willing to be a little sneaky if it would help keep him calm.\n\nI looked at Matthew's apartment as we drove by and his car was there, but his curtains were closed. When he was home his curtains were always open. I wondered where he was, but the thought slipped my mind as Dav pulled into my guest space and turned off the car.\n\nI sighed heavily.\n\nHome. I didn't get out of the car immediately.\n\n\"Do you need some help?\" Dav asked, already getting his bag out of the backseat.\n\nI snorted and shook my head as I opened my door. \"No. I went blind and could have died; I didn't become a cripple.\"\n\nDav hissed a little as his eyes narrowed. \"Yeah, let's not talk about that, okay?\" He took the small bag of stuff the hospital gave me out of my hand and followed me up the sidewalk.\n\nI rolled my eyes but fell silent. My key slid easily into the lock and I turned the handle. My apartment was dark when I walked in; all the shades and curtains were closed. I frowned. I never closed the curtains, but maybe Dav did before he took me to the hospital. I headed for the hall.\n\nI spun around when I heard scuffling at the door before it slammed shut.\n\n\"What the fuck,\" I yelled, lunging for the light switch in the hallway. I spun around just in time to see my twin's mate snarl at Dav and wrestle him to the floor so that my twin could slap a pair of cuffs around his wrists. I stared at them in shock as they continued to bind him, shoving his feet together and slipping a flex cuff around his ankles before drawing them up and linking the wrist and ankle cuffs together.\n\nI rushed toward them when they slapped a tape gag over Dav's mouth. His rage flooded our bond.\n\nI jerked back when Ahsran turned his head and snarled at me. My heart was racing and I sank to the floor at the hard look Isiah gave me when he stood up and turned around. He loomed over me, his thick fangs bared.\n\n\"What is going on? Why are you doing this?\"\n\n\"Velaku's men tracked us at the hotel room,\" he said with snarl. \"We barely got away. They were shooting at us, Ellis!\"\n\n\"I didn't know!\" I stammered. \"I've been trying to call you since I left the hospital. I asked Matthew to get a message to you, to tell you what happened and to leave.\"\n\nThe disbelief on his face was like a blow.\n\n\"I'm supposed to just believe you?\" The sneer on his face was too much. I snapped, everything catching up with me at once.\n\nI jerked to my feet and got in his face. He was a bit bulkier than I was now, but we stood eye to eye as I stabbed my finger into his chest.\n\n\"Yes,\" I snapped, \"like I believed you weren't a heartless murderer because you said so! Because I'm your brother, and I've never done anything but try to have your back no matter what you were off doing. I wasn't planning any attack on you; I was lying in a hospital bed for the last day, and I only left the hospital because of a small miracle. The doctors told me that I could die! The only reason why I didn't was because my mate,\" I stressed the word, \"was willing to do whatever it took to save my life.\"\n\nHis mouth dropped open, but I didn't give him a moment to speak.\n\n\"I lay there in that bed right after my doctors told me there was something weird in my blood and that they had no cure. There was a chance Dav could keep me from dying, if I was lucky, but instead of worrying about me, I worried that something could happen to you because I wasn't here to help you. I sent my best friend away when I needed comfort from those I cared about most around me because I wanted you to be safe.\"\n\nI stabbed my finger into his chest when my voice broke. \"I needed you there. But you're caught up in some grand conspiracy; working undercover and doing gods know what while you leave me behind. Like always. I'm here to help fix your mistakes and cover your ass and god damn it the one time I needed you, really needed my family, I couldn't even call you!\n\n\"When are you going to grow the hell up and stop playing these games? I'm tired of being the good twin that's always stuck cleaning up the mess.\" I blinked back tears, my throat tight. \"Now either untie my mate and talk to us, or get the hell out of my apartment and don't come back.\"\n\nIsiah looked pained, glancing between me and where his mate still hovered over mine. I didn't look at Dav's face; I could feel several emotions roiling through our bond.\n\nThis was not how I wanted to break the news of Isiah's innocence to him. Fat chance he'd believe me now that he knew I had been keeping secrets from him.\n\nIsiah bit at his lip, clearly undecided.\n\n\"I mean it Isiah,\" I said, my voice suddenly devoid of emotion. \"Do it or leave. I'm not doing this anymore, and I won't let you tie up my mate because you fucked up and are afraid he's going to kick your ass.\"\n\nAhsran snarled. \"You're mated to Davis Retic; he's The Snake. He wouldn't kick our ass; he'd kill us. I won't let you do it, Isiah. I won't let you put yourself at risk.\"\n\nI sighed. \"Dav, nod if you promise not to attack until you hear what we have to say. Isiah's innocent, and he can explain. I wanted to tell you but I couldn't, not at the hospital.\"\n\nDav practically vibrated as he fought his bonds, but he didn't nod. I pinched the bridge of my nose and groaned as the stress began to get to me. His eyes flicked to my face and I could hear his hiss from behind the gag, but he nodded. Grudgingly.\n\nAhsran snarled when Isiah nodded too.\n\n\"No!\"\n\nIt was my twin's turn to talk sternly to his mate.\n\n\"Ellis is right, Ahsran. I never agreed with you that he was the one who sent Velaku's men to the hotel. That just made no sense; he could have had us ambushed when we first got there, or during the night. If we want them to trust us, we have to trust them.\"\n\nI could see the Tiger's protective instincts practically screaming at him as he slowly began to undo the cuffs and bands holding Dav captive. Isiah stepped away from me and away from Dav, backing away toward the couch. I barely caught the keys Ahsran tossed at me before he went to stand protectively in front of Isiah; his knees bent a little as he prepared to tackle my mate if Dav attacked. His eyes were locked onto my mate as they both waited to see what he would do.\n\nI shook my head as I bent over to unlock Dav's cuffs, but I understood his caution when Dav sort of rippled to his feet in the space of an eye blink, yanking the gag off his face as he glared at the large Tiger. He shifted until he stood partially in front of me.\n\nI could sense his anger and could see his hands flexing and releasing at his sides as he let out a long hiss. I bent my head around his arm and looked at his face. The tip of his forked tongue was just visible and his pupils had expanded. He was still vibrating, and I could sense his need to strike.\n\nI wrapped my hands around his arm and slipped underneath it, leaning into his side and shifting one foot between his. His entire body was practically vibrating and his muscles were rigid; this way he couldn't rush forward without tripping up with me. I concentrated on sending him waves of love; my only hope that I hadn't damaged the trust between us irrevocably was the bond still open between us.",
        "\"Dav, calm down. Please, let's sit down. Ahsran is Isiah's mate. He was only trying to protect him, just like you'd protect me.\"\n\nDav glanced at me.\n\nI knew there were tears in my eyes; I could feel the sting as I blinked trying to keep them from falling. \"I'm sorry I didn't tell you before. But you . . . you tried to kill me. I couldn't risk that you would try to kill Isiah or call Velaku.\n\n\"You promised that you would trust me. I'm asking for you to keep that promise and listen to what they have to say.\"\n\nMy stomach twisted, and I felt my heart pounding as I waited to see what he would say. I struggled for calm, knowing a migraine would be the worst thing that could happen even as I could feel the pressure building from the stress.\n\nDav looked down at me, his yellow eyes almost glowing in the dim light.\n\n\"Please,\" I said brokenly.\n\n\"That's not fair!\" Dav's voice was low, hissing as he spoke. Ahsran took a step forward, and Dav's head snapped up, glaring. \"Don't even think about it!\"\n\nHis fangs were flexed, the slender points gleaming deadly white in the light. I could hear the promise of violence in his voice and really hoped that Ahsran would heed Dav's warning; his anger was swamping our bond, and I knew he was on the edge.\n\n\"They won't hurt me or you,\" I said, \"so please calm down. We need to figure this out once and for all.\" The stress was overwhelming me, and it was too soon after the hospital. I did the one thing guaranteed to take Dav's focus off the threat my brother and his mate posed.\n\n\"Shit, Ellis!\" Isiah said as Dav caught me.\n\nMy head was swimming as he pulled me over to a chair. He sat down and pulled me into his lap. I didn't resist him, curling into his warmth easily. The six inches between us weren't that big of a difference but he was tall enough for me to snuggle comfortably against as he held me. I buried my face into his neck, my tongue flicking out to taste his skin. I was unable to control the urge; he smelled so good.\n\nI didn't really want to anyway.\n\n\"Are you getting another headache?\" Dav's anger disappeared under a surge of worry. He smoothed my hair back from my face. \"I can call Dr. Pannar.\"\n\n\"No calling anyone,\" Ahsran said with a growl. He exposed his own thick set of canines when Dav hissed at him. \"We don't have time for this.\"\n\n\"We will make time. You're not leaving, and if he's getting another headache I sure as hell will call, the last one blinded him and could have killed him. My mate's health is more important to me than your fucking wishes. I won't let him die.\"\n\nIsiah's face paled and he went rigid on the couch. He then leaned forward.\n\n\"What the hell did you mean by that? Why would Ellis die?\"\n\n\"I'm fine,\" I said before he could start freaking out. \"You need to be checked out though. Dr. Pannar said they think some genetic anomaly has been causing my headaches. You might have trouble.\"\n\n\"I've never had migraines like you do though. And I'm not mated to a Snake,\" Isiah pointed out.\n\n\"You changed physically. More than a mating mark like most humans get. There is something different about us, something like maybe a Carthera ancestor. Being mated to Dav is what saved me. His venom actually has healing properties for me.\" I blushed. \"My doctors think it might actually make my headaches go away forever.\"\n\nIsiah's eyebrow rose, and he relaxed a little. \"So . . . sex really can cure all your ills?\"\n\nI groaned. \"That's a horrible pun.\" Isiah always had an irreverent sense of humor.\n\nAhsran growled. \"None of this has anything to do with the attack on our lives. Damn it, we have to get out of here and stop this! We have to find out how they found out where we were, and if plans have already been set in motion.\"\n\nIsiah put a hand on his arm. \"I told you; Ellis wouldn't do that. I'm guessing Davis has been with him since his migraine so it wasn't him either. We need their help and Velaku's. He won't meet us any other way.\"\n\n\"There were Falcons, my mate, and they tried to kill you. Retic is Velaku's pet assassin, and you expect me to trust him to help us because he's your brother's mate? Your trust could get you killed, and I won't be able to do anything about it!\" His voice was close to a roar.\n\nI felt Davis tense when he said my mate was Velaku's pet assassin, but I tightened my arms around him, and he didn't say anything.\n\n\"The attack might not have been ordered by Velaku,\" Isiah said heatedly, \"and we haven't had a chance to tell them yet! They don't know!\"\n\nThey sounded like they were having an argument they'd had before. The tiger's ears were twitching as he took deep breaths.\n\n\"Tell us what?\" Dav asked. His anger hadn't left him, but his hands began stroking my hair again when I tensed yet again. \"If things are so damn bad, tell us so we can move.\"\n\n\"We found out who was behind all the attacks on Velaku's territory.\" An explosion of shock rippled through my bond as Isiah just dropped that little bomb right out there without any warning.\n\nI gasped. \"What? Who?\"\n\nDav shushed me. \"First tell us how you know this information? We mistook Ellis for you on a video where you killed a man along with a strange Carthera. Why should we trust you?\"\n\n\"He's not dead. That's my partner. We were both undercover military intelligence, and while he did get a bit banged up, his death was staged.\"\n\nDav raised an eyebrow. \"You expect us to just believe you based on your word? It was on video.\"\n\n\"Look,\" Isiah said with a growl, \"I can't exactly whip James out and show you he's breathing, now can I? I'm shocked the Falcons haven't rushed in here after us yet. You can listen to what we have to say with an open mind, or you can go with the attitude that your mind is already made up that we're liars and killers.\"\n\n\"They're not,\" I said softly to Dav. \"Listen to them, please. I told you I never thought Isiah could be capable of hurting people like it showed in the video. They might be able to help you guys figure out what is really going on. He told me some stuff before, and I believe him.\"\n\nDav sighed. \"Fine. I'll try not to judge before I know everything.\"\n\nI hugged him, nuzzling into his warmth. \"Thank you.\"\n\nAhsran finally sat down next to Isiah on the couch, but he didn't relax, his back staying ramrod straight.\n\n\"You need to stop,\" Isiah said putting a hand on his arm. \"Your aggression is affecting everyone in here. The Snake is not about to attack you while he holds my brother on his lap.\"\n\n\"Davis,\" my mate said a tad grudgingly. \"You may call me Davis.\"\n\n\"Davis,\" Isiah repeated.\n\nIsiah stared at Ahsran until the Tiger uncrossed his arms and leaned back on the couch. \"Okay, okay. I just get--\"\n\n\"Touchy, aggressive, paranoid?\" Dav raised an eyebrow at the tiger.\n\nI pinched his nipple, twisting it a little.\n\n\"OW!\"\n\n\"You're not helping.\" I rolled my eyes when he rubbed his chest and gave me a reproachful look. \"Talk Isiah. Tell us what you know.\"\n\nIsiah took a deep breath. \"Just before Velaku's men found us we got a call from my contact in the Supremacist group. He told me there is going to be an all-out offensive against Velaku, and I was to be ready.\"\n\n\"They know you're here?\" Dav asked incredulously. \"This is the group behind the smuggling and the plague that nearly killed all the kitlings in the Cavel's jaguar clan? The murder of Velaku's father?\"\n\n\"Yes. Someone close to Velaku is leading them. We knew that; we just didn't know who. My cell in the supremacist group watched me constantly. I had to tell them something, some strategic reason for coming so close to the stronghold of the Falcons. I told them we were gathering intel, using my brother as an excuse, but we left days before they knew we were supposed to come. We changed our tickets at the airport, got a flight a few days earlier. It was a risk, but things had led us to believe that an all-out attack was coming soon.\"\n\n\"So you think Velaku found out where you were?\"\n\nAhsran spoke up, \"We don't know. We were at the hotel, waiting for Isiah and--\"\n\nThat wasn't right. I interrupted him, \"Didn't Matthew come to you? I asked him to go tell you to leave, and he said he would. He left me a message on my phone that he had talked to you and everything was fine.\"\n\nIsiah shook his head. \"Matthew never came to our hotel room.\"\n\n\"Shit!\" I sat up on Dav's lap, cursing. \"We have to go see if he's okay, if he's in his apartment or not. Dav, what if something happened to him?\"\n\n\"You have to stay here. You can't go over there. I'll go. He lives a few doors down, right?\"\n\n\"Yes, he lives in four fifteen.\"\n\nHe stood up and then turned, placing me in the chair. \"Stay here, Ellis,\" he said sternly. \"Don't get out of that chair, and I mean it.\" He looked at Isiah. \"I am trusting you with my mate.\"\n\n\"I would not allow anything to harm my brother.\" His oval pupils gleamed as he stared at my mate. I knew Isiah would never hurt me. Dav didn't seem to be quite as sure, but I was reassured when he nodded once and then left.\n\nI wanted to get up and pace, but I couldn't. I was still weak and knew too much physical activity wouldn't be helpful.\n\n\"So, nice mate you have there.\" Isiah raised an eyebrow at me.\n\n\"Stop that. It's no different than how your mate threatened me when I said Velaku wanted to talk to you.\"\n\nAhsran snarled. \"Those men did not want to talk. They came in ready to kill.\"\n\n\"You weren't hurt were you?\"\n\nAhsran shrugged. \"Isiah already took care of it. He raided your medicine cabinet, said you always had a huge first aid kit.\"\n\n\"Mr. Nurse would of course.\" The words were sardonic, but I knew Isiah didn't mean anything by them. I'd always been the prepared one; the twin that planned and made sure everything was in place.\n\n\"Do you need me to look at it? Were you shot?\" My tongue flicked out and I tasted the air, testing for blood. I could scent it, but just barely. I would have been able to sense it if he was bleeding through the bandage he showed me high on his shoulder. His left shoulder.\n\nThey'd been aiming for his heart.\n\n\"No, I heal quickly. It was just a flesh wound.\"\n\n\"You're sure the attackers were Velaku's Falcons?\"\n\n\"Yes. But they were led by the man that my contact told me was in charge of the whole thing.\"\n\nI was just about to ask who it was when Dav burst into the room. \"There's been a struggle at Matthew's apartment. He's not there, but I could taste his blood in the air.\"\n\n\"Oh my god! What is going on? Why would someone hurt him?\"\n\nIsiah stood up. \"It's Mishtar. He's behind this, all of this.\"\n\nMy jaw dropped. \"What! Mishtar? He's the leader of the Falcons! He was Keserem's right hand man; he even killed the leopard that . . . .\" I trailed off just then remembering that the leopard who had been responsible for killing Keserem, Velaku's father, and torturing his son in order to kill Velaku had been Ahsran's father as well.\n\n\"My father,\" Ahsran spit out bitterly.\n\n\"You hold a grudge for his death?\" Dav's eyes were narrow as he practically pounced on Ahsran's comment.\n\nThe Tiger's eyes gleamed as he snarled, his muscles bunching as his hands curled into huge fists. \"Fuck no. That man was a sadist and more than halfway to insane. Natham wasn't the only one growing up that got hurt. I tried to protect him, but I couldn't always do it. I had to pretend to go along with that bastard's schemes. I had already been approached by your government to spy on the Supremacist group he was a part of. I couldn't blow my cover.\"\n\n\"You were a teenager!\" Isiah bit out. \"It wasn't right; you should never have had to live like that.\"\n\nAhsran's hands uncurled, and he rubbed his mate's shaking back. It looked like my twin's mate had a childhood to rival Dav's for violence. I knew how Isiah felt; I felt the same urge, wanting to turn back time and erase the horrors they had faced, but we couldn't go back.\n\nWe had to go forward, figure out exactly what was going on, and stop it.\n\nSo we could all be happy.\n\n\"Mishtar led the Falcon's who stormed the hotel. That's why we were caught by surprise and Ahsran got shot. My contact called and said that I was finally in; the big takeover was coming sooner than I had known and the leader wanted to meet with me since we were in town. He told me it was Mishtar.\"\n\nDav began to pace, his lean muscles working as he wound around the furniture in the room in a sinuous pattern. \"How reliable is your contact? Do you think your identities have been compromised? Either of yours?\"\n\nAhsran just shrugged. Isiah tugged at his hair. \"Shit. Fuck. I don't know unless changing our flight and coming here made them suspicious. I've been deep cover for over a year now, since just before Keserem was killed. Besides, why else would they attack us?\"\n\nI sighed. I hated it when he was away and I especially hated finding out why he sometimes couldn't contact me for months on end.\n\n\"It's why I haven't been around. I would have, if it had been safe, I swear.\"\n\n\"This is insane, Isiah. How can you like doing this? My best friend is hurt and missing, someone tried to kill you and your mate, and we're facing a disaster of epic proportions if Velaku is killed. You guys couldn't even warn him, they think you're killers.\"\n\n\"The government won't stand for Carthera trying to take over and rule humans,\" Isiah said simply. \"If Velaku is killed and Mishtar's supremacist group has their way the bloodshed would explode exponentially. Fighting would break out, the military against the might of the Carthera clans, and it would happen right in the middle of a mass of innocent lives. I think that's one of the reasons they recruited me. You're close to Velaku's mate; they'll believe us once they see our proof. We just need you to get us a meeting.\"\n\nI could see it in my mind, first the fighting and death of the rightful leader, and then Mishtar declaring war on the humans and the innocent people who could die. Dr. Bakiers, Mrs. Sheldy from the bookstore I loved that was just a block from the Carthera clinic, even cranky old Mr. Gundry.\n\n\"We have to stop this.\" I turned to Dav. \"Can you get in touch with Velaku directly?\"\n\nHe nodded.\n\n\"Good. Do that. Tell him to meet us somewhere. Not here.\"\n\n\"Leave that to me,\" Dav said. \"We can go to the club for now. I have a safe room built in the basement.\"\n\nAhsran's claws came out. \"We all go,\" he said with a rumbling growl.\n\n\"Agreed. I'll call from the car. Let's go.\"\n\nDav and Ahsran sandwiched Isiah and me between them as we walked out of my apartment. I couldn't help but look toward Matthew's apartment, and I swallowed hard. Whatever happened to him was my fault. I'd involved him, asked him to go to my brother. I'd given him information that someone obviously wanted.\n\n\"Matthew had to have been kidnapped so they could find out where you were. It's the only thing that makes any sense.\"\n\n\"When did he call you?\"\n\nI fumbled for my phone, yanking it out of my pocket and pulling up my caller list. \"Uh, he called at eight this morning.\"\n\n\"When you were getting tested.\" Dav's tongue flicked out as he thought, his eyes constantly scanning the area as he hustled us over to his SUV. \"When were you attacked?\" he asked Ahsran.\n\n\"Close to noon.\"\n\n\"So, it's possible he was intercepted on his way to go see you. They took him on the chance that Ellis told him where you were, so they could get that information out of him.\"\n\nHe slid the key in the ignition as we all buckled in. He pushed a button and a small compartment between the seats opened up. \"Slide that back,\" he said to Ahsran and Isiah. They pulled the panel and a hidden area in the floorboards of the car was exposed, filled with weapons.\n\n\"Holy hell,\" I said in a breathy voice, staring wide eyed at all the guns.\n\n\"Nice,\" Isiah said.\n\n\"Take what you need. Extra ammo is along the driver side of the compartment.\"\n\nI watched as my twin and his mate both grabbed three guns each, loading them quickly. I shifted hard in my seat when Dav took an unexpected left turn, taking us away from his club.\n\n\"Where are you going?\" I asked in confusion. My hands were clenched together.\n\n\"We've got a tail,\" he said.\n\n\"Where?\" I began to turn and look out the windows.\n\n\"Stop it,\" Isiah hissed, \"look straight ahead.\" I jerked around in my seat.\n\n\"Where?\" Ahsran asked again, his hands busy stuffing bullets into his pockets.\n\n\"Above us. It's a Falcon. I just don't know whose, Mishtar's or Velaku's. Not that it really matters at this point; they both think you're the bad guys.\" Dav smoothly shifted over two lanes and made a right. \"Do me a favor and load up the H&K, and get one of the rifles loaded and put it on the floor.\"\n\nHe pressed a button on the radio. \"Call two, two, five, seven, eight, nine, nine.\"\n\n\"You have some cool toys,\" Isiah said as he handed Dav a pistol.\n\n\"They help out sometimes.\"\n\nThe ringing echoed through the car radio. \"Who is this?\"\n\n\"Davis. I need to speak to Velaku, now.\"\n\n\"Hold on.\"\n\n\"That was Natham,\" I whispered to Ahsran and Isiah. They nodded. I looked at Ahsran to see if hearing his younger brother's voice affected him, but his face was a mask.\n\n\"Davis? Why are you calling? Dr. Pannar informed us of your mate's situation; we figured you'd be taking care of him.\"\n\n\"I am, but I need to speak with you and your mate as well.\"\n\nAnother turn, a left this time.\n\n\"So come to the eyrie. Things are going crazy here. I just got a call from Cavel; he and his mate are here. They just landed, said they'd received a message that I'd summoned them. They're not the only alpha pair apparently coming either.\"\n\n\"Shit! It's already started,\" Isiah said.\n\n\"Who was that?\" Velaku asked. \"Was that Ellis?\"\n\n\"I have information you need. I need you to redirect all the incoming alphas. Tell them to go to one oh four Piedmont. Do this yourself; don't tell anyone but Natham and your mother. Then get there yourself, now.\"\n\n\"Excuse me?\" Velaku sounded enraged. \"What in the hell is going on?\"\n\n\"Your enemies are closer than you think, and I'm trying to save everyone here. I need you to trust me.\"\n\n\"Does this safe house have a computer?\" Ahsran asked in a whisper.\n\nDav nodded his head.\n\n\"Good. Tell him we'll have proof when he gets there.\"\n\nIsiah and Ahsran began whispering in the backseat. I kept looking between them and Davis. How could they enjoy this, want to do this kind of work? My stomach was churning, and my head hurt just trying to follow what was going on. My anxiety was spiking through the roof.\n\nDav reached out a hand and squeezed my shoulder, rubbing it. \"We'll have proof for you when you get there.\"\n\nVelaku's voice was strained. \"I'm not very happy about your unwillingness to share information with me. This is a secure line.\"\n\nDav grimaced. \"There might be someone listening who shouldn't be. This is something we must tell you in person.\"\n\n\"Fine. We'll see you within the hour.\" Velaku hung up the phone, ending the call. Dav looked over at me.\n\n\"It'll all be fine, Ellis. You'll be safe and we'll stop them. Mishtar won't get away with starting a war with the humans.\"\n\n\"If you were so worried about someone overhearing the conversation why did you tell them exactly where to meet us? If Mishtar had the line bugged he'll know exactly where to strike; everyone will be together!\" Isiah said hotly. \"You have to call Velaku back and we'll figure out another plan.\"\n\nDav shook his head, looking in his mirrors and making a sudden left turn that slammed me into my door.\n\nI grunted.\n\n\"Sorry,\" he said to me. \"As for the address, that was code. I have different safe houses. The one we are going to isn't at the address that I told Velaku; that just told him which one to look up to get the correct address. They're numbered.\"\n\nMy eyes widened. \"You have over a hundred safe houses?\"\n\n\"What if Mishtar knows about this code too? He is Velaku's right hand man and the leader of the Falcons.\"",
        "\"Safe houses aren't very safe if everyone knows about them. Velaku knows exactly what kind of life I lived before I met your brother. You can never be too careful. He didn't tell Mishtar. I only allowed him to tell Natham because,\" Dav looked at me, \"mates shouldn't keep secrets.\"\n\nI blushed. \"We all make mistakes.\"\n\nIt was his turn to blush. He nodded, repeatedly checking his mirrors. Suddenly he pulled into a parking structure for a local grocery and shopping center. He drove down a level underground then slid into an interior parking spot.\n\n\"Get out of the car,\" he ordered.\n\nHe reached under the blue van next to us and pulled out keys. \"Grab the extra guns, just pull up the sides of the bag and yank them out.\"\n\nAhsran reached back into the vehicle and pulled out the bag of guns and ammo. He placed it under the first set of backseats in the van, and then climbed in after Isiah.\n\n\"Ellis, let's go before the Falcon finds us.\"\n\nI hurried around the car and slid into the front passenger seat, buckling my seat belt with clumsy fingers. I had thought I knew what Dav did, how dangerous his job was, but I was realizing that my mate was extremely paranoid and had back-up plans for back-up plans. It was impressive and not just a little bit scary.\n\nEven my brother and Ahsran seemed a little weirded out by what Dav seemed to consider normal. He really did too; the only time I felt any tension coming from him was when he looked at me and asked about my head.\n\nOtherwise he was cool, completely in charge, and totally collected.\n\nThose fuckers who raised him really did a number on him. My hands clenched in fists when I realized just how much for the first time. He had told me the way he was raised not to show any weakness; I was just coming to understand what that meant. Other than situations involving me, he seemed to have no strong emotions.\n\n\"Dav?\" The strain in my voice had to be obvious to more than just him.\n\nDav gave me a smile. \"Don't worry Ellis. I've dealt with trackers before. You need to stop stressing out, you're going to give yourself another migraine and that's the last thing we need.\"\n\nI knew he was right, but I couldn't just shut myself down like that.\n\n\"Velaku didn't mention having a guard on us; he must be one of Mishtar's.\" Isiah reached up from his seat behind me and began kneading my shoulders. I tensed for a moment, then sighed and leaned into the seat, tilting my head back against the headrest.\n\nHis strong fingers felt so good rubbing the kinks out, knots I didn't even feel until his thumbs dug into them and rubbed them away. Between that and the reassurance and love Dav was giving me through our bond I couldn't help but sort of float away.\n\nI listened to them talk about the tracker as Dav pulled in between a couple of cars pulling out the garage, but I didn't join in. He made sure to split apart from them quickly as the other two went different directions at the first light. He drove carefully, his eyes on the mirrors and the sky.\n\n\"So far so good,\" he said. \"He must have followed one of the other cars.\"\n\n\"You've done this before.\" Ahsran's tone made it clear it wasn't a question, merely an observation.\n\n\"Yes.\" Dav didn't go into specifics; his secretive nature was natural given his clan. I could see him watching Isiah frequently, but he didn't say anything about my twin's massage.\n\nThe loss of our tracker and the comfort I was being bombarded with combined with the fatigue of all I had been going through the past two weeks. I fell asleep in the midst of their plans of what we would do once we got to the safe house and the alphas showed up.\n\n*\n\nDav carried me into the house, rousing me briefly as he set me down on a soft couch at one side of a huge room. \"Hey,\" I said sleepily. I reached out and grabbed his hand when he turned away, giving him a soft smile. I was so tired I could barely keep my eyes open. It was like sleep was pulling me back, not letting me wake up.\n\n\"Hey,\" he said softly. His eyes gleamed at me as he returned my smile. \"You have only been asleep about fifteen minutes. They won't be here for at least another half hour. Get some more rest; you might need it.\"\n\nI felt bad that they were preparing for this huge offensive and I wasn't helping. Dav must have caught part of my feelings. He sat down on the edge of the couch, pulling a thick, soft blanket off the back and laying it over me. His hands smoothed it over my chest.\n\n\"Hey now, what's with the guilt?\"\n\n\"I'm not like you guys. I'm useless.\"\n\n\"Never say that.\" Dav was abrupt, his spine stiffening. I caught a hint of anger from him. \"I never want you to be like me. Keeping you who you are, a healer, is my job. You are not a killer, Ellis, and I don't want you to be. The fates, or god, or random chance, whatever you want to call it, picked you for me. You are exactly who I need to keep me from losing myself completely; I've been waiting for you a long time.\n\n\"Let me do the bad things. You be my good thing to come back to, the one thing that tells me I'm better than those I have to fight. I wouldn't deserve you as a mate if I wasn't. I don't know if I could keep from losing myself in the hate if I didn't have you anymore.\" Dav's voice was fierce, his hands on my shoulders as he stared in my eyes.\n\nI let out the breath I'd been holding in a sharp exhale. \"Oh Dav . . . .\" My hand came up to his cheek and I stroked his smooth skin. \"You are a good man.\"\n\nHe shook his head. \"No one thinks that but you.\"\n\n\"I know you better than anyone else. I'm right; they're wrong.\"\n\nHis eyes closed and he leaned down and kissed me. His lips pressed against mine and then his tongue stroked across them. I opened for him, letting the forks of his tongue tickle inside my mouth as he tasted me. He pulled back with a sigh.\n\n\"Thank you,\" he tucked the blanket around my shoulders a little tighter. \"but you need to rest now. I'll wake you up before anything important is discussed.\""
    ],
    "authorname": "Cia81",
    "tags": [
        "gay drama",
        "gay romance",
        "non-human",
        "carthera"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/hypnotic-ch-07"
}