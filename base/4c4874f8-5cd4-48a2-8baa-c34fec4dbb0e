{
    "title": "Aztec Treasure Ch. 51-60",
    "pages": [
        "Frank Grimes' POV<br >Arrowhead Pack House\n\nI had one hand wrapped around her baby bump from behind while the other hand was working away below. \"Oh yeah, baby, right there,\" Colletta moaned as my fingers worked inside her. Pregnancy made her tired, so we took a nap after lunch. It also made her horny, which I figured out when she started moving her ass against my dick when he woke up and wanted attention. I'd started warming her up while I hardened fully between her cheeks. She raised her top leg to give me better access, and I added a second finger to her steamy core. I hooked my fingers as my thumb started flicking her clit, and she went off. \"FRANK!\"\n\nShe squeezed against my fingers as she came, and I held her as she trembled through it. I moved my hand to her thigh, holding her leg up as I shifted my hips and replaced my hand with my throbbing member. She was hot and ready as I slowly stuffed her from behind. \"So sexy,\" I whispered to her.\n\n\"So fat,\" she countered.\n\n\"Our pup needs space,\" I responded as I finished pushing into her depths. I didn't feel any discomfort or pain over the bond, so I pulled back and filled her again. \"So good.\"\n\n\"Yes,\" she said as I started making leisurely love to her. \"By Luna, I needed this.\"\n\n\"The nap?\"\n\nShe giggled as she angled her hips back to me, urging me to go faster. \"That too.\"\n\nI continued to make love to her until we both exploded in our mutual pleasure. When she relaxed, I let her leg down and pulled out, my seed spilling out of her onto the sheets. \"Wait here,\" I said. I came back with a warm washcloth and cleaned her up while she linked with her assistant. \"What did you miss?\"\n\n\"Russia started releasing the imprisoned Pack members,\" she responded. \"The Council is arranging visa papers and flights for them. The Ambassador did his part, so now I have to go to Montana and British Colombia to speak directly with the Russian Alphas.\" When President Kettering heard about the Russian offer, she'd insisted that Colletta return home to take care of Council business instead of staying with her. Colletta had flown up after the burial service but would be flying out to Washington, DC again when Laura resumed her Presidential duties.\n\nThat was good news. \"Are you going to visit Coral while you are there?\"\n\nShe nodded. \"I hope to find time to see Sawyer and Carson, even if just for a short time. It will be a while before we all get together. You should come with.\" With Coral, Heather, and Ashley all pregnant, travel wasn't happening. It didn't help that Heather, like Rori, was stuck in wolf form. I didn't like Colletta being gone so much, but she was the Werewolf Council Chair. She had to travel, even with Julio still at large.\n\nOur conversation was interrupted by Rori's send. \"Mom, Dad, you're needed in Spider's computer room. She says she's found something.\"\n\n\"Ten minutes,\" Frank sent back. \"Come on, love. We'll get you cleaned up first.\" I bundled her into the shower, where we washed each other while forcing back the urges for Round Two. We quickly dressed and headed through the tunnel to the Beta House, next door to the Alpha Mansion where our guest quarters were.\n\nSpider Monkey saw us walk in. \"Good nap?\"\n\nThe werewolves in the room all laughed as the shower couldn't remove all evidence of our recent activities. \"I feel much better, thank you.\" She smacked Chase in the back of the head as she sat on the couch, and I sat on the other side. \"What did you find?\"\n\nSpider Monkey pulled up a photograph of Leonis Woodley. \"We know Julio has help from the missile attack, plus it explains how he has been able to stay out of sight this whole time. Leonis here was an inactive member of the Sons while he was in prison. Because he'd been inside the entire time of the RICO investigation, no one bothered to include him on the member lists.\"\n\n\"He's out now,\" I asked.\n\n\"Yes, and he promptly disappeared. He never checked in with his probation officer, so his probation is voided. There is a bench warrant out for him.\"\n\nIt wasn't much to go on. \"Can we connect the two? Is there anything that puts them together?\"\n\n\"Not that I've found,\" Spider Monkey said. \"I didn't find any bank accounts, credit cards, or other records from after he left prison. He sold his motorcycle before going inside and hasn't purchased a new ride or applied for a new driver's license. He just disappeared.\"\n\n\"Without a Club to support him,\" Chase said. \"Maybe an associated club or an unaffiliated friend? Somebody is helping him out.\"\n\n\"I'll keep looking,\" Spider Monkey said. She went through everything she'd found on him. He was a true outlaw biker, but I didn't see anything tying him to Julio or the assassination attempt.\n\nStill, there was a way to find him. \"If you are right, if Leonis is hiding Julio and moving him around, he'd need money, a vehicle, and a driver's license. Since it isn't under his name, he's got a new identity.\"\n\nSpider nodded. \"I'll start looking at the DMV database for licenses issued in the last two months. Maybe I can find a match with facial recognition.\"\n\n\"Meanwhile, email me everything you have. I'll pass it on to Homeland Security and the Secret Service. If nothing else, he's got an open warrant.\"\n\nChase nodded at that. \"Send the photo and description to everyone in our Pack, plus the Council and Alphas. Any remaining members of the Sons of Tezcatlipoca are a threat. And Vic? Talk to Maria when she wakes up. See if she knows anything that might help. Chase nodded at that. \"Send the photo and description to everyone in our Pack, plus the Council and Alphas. Any remaining members of the Sons of Tezcatlipoca are a threat. Vic, talk to Maria when she wakes up. See if she knows anything that might help. And Mom? Can you get me drawings of Coral's new pool house?\"\n\nColletta laughed and shook her head, no. \"I'm not getting in the middle of a pool war.\"\n\nThe meeting broke up, and we returned to our room to pack for the flight out west. I took the information Spider emailed me and pasted it into a message to the FBI and Secret Service. I followed it with a phone call to my boss. After talking about Leonis and the Russian Packs, I told him I'd be gone for a few days out west. An hour later, we were wheels-up from the airport in Two Harbors.\n\nJulio's POV<br >Sparta, Wisconsin\n\nCinnamon rolls and burgers didn't cut it for me, so when we got to Tomah, I had Leonis cut through town and stop at BP Smokehouse Barbecue. I finished the rack of ribs before we reached Interstate 90 west, and the sides and a pound of the beef brisket by the time we hit Sparta. I was still eating the pound of pulled pork when he parked in the outer lot of a Wal-Mart. \"I'm going to check the meeting place out while it is still light,\" he said.\n\n\"Take a video,\" I told him. He exited the side door and went around to the back, lowering the ramp for the toy hauler portion. A few minutes later, I heard the ramp close back up before he started his Harley and drove off.\n\nI used the time to watch the local news and surf the Internet using the store wi-fi, finding nothing new. Leonis returned an hour later, stowing his bike in the RV again before coming inside. \"What is it like?\"\n\n\"No places to hide, that's for sure,\" he said as he showed me the video on his phone. \"It looks exactly like the satellite photo. The only places you could sneak up on us are the treeline and the shed.\"\n\n\"Get a nap in. I need you alert for the transfer.\" He hauled himself into the over-cab bunk and was soon snoring away as I started looking at information on Arrowhead. Using satellite images, I went over multiple scenarios looking for answers. Aerial bombardment and an attack from the water would both work to kill them but would not make them suffer the way they deserved. I needed to wait until they left their land or find a way to draw them out.\n\nThere was also Maria and Maritza to consider. I needed them to give me sons and daughters so they couldn't be collateral damage of the attack. It would be best to get them out first somehow.\n\nSoon enough, it was time to leave. I woke Leonis up, and we got going. There was no one visible as we drove into the graveyard, and I scented no one near. \"Stay here,\" I said as he parked.\n\nI got out of the RV, pistol at the ready. A quick circuit of the house and the treeline showed no threats. \"We're clear,\" I told him. \"Stay in the driver's seat and be ready to leave if I tell you.\"\n\nWe didn't wait long before a panel van pulled into the graveyard, passing the RV and stopping behind it. A man in his forties got out, wearing jeans and a flannel shirt with a worn John Deere hat. \"Good to see you, Julio.\"\n\n\"I don't know you,\" I told him.\n\n\"You don't have to. Here.\" He handed me a manila envelope. \"It's all the information we can gather on the President's schedule for the next two weeks, along with Secret Service protective strategies. You'll need this as well, so open up your cargo compartment.\"\n\nI stayed alert as he went to the back door of the van and opened it up. Inside was a wooden crate about five feet long, three feet wide, and eighteen inches tall, with a smaller bag on top of it. \"What is this shit?\"\n\n\"It's how you can take her out and get away,\" he said. He tossed me the bag. \"It's an FGM-148 Javelin anti-tank missile. It has an effective range of more than two miles with fire-and-forget technology. It can easily take out her helicopter on the ground or her limousine. In the bag are the manuals and videos used to train people to fire it. You'll need it.\"\n\n\"The Presidential limousine is armored,\" I said.\n\nThe man just laughed. \"This baby will penetrate three inches of tank armor. It will go through that limousine like hot butter. Now load this thing before anyone starts wondering what we are doing here.\" I had Leonis lower the ramp, and we loaded the weapon onboard. The bag I kept with me to look at on the road. \"Don't fucking miss this time, Julio. We're risking a lot by giving you this stuff, and we can't afford another failure.\"\n\n\"I didn't miss; that fighter got in the way,\" I said. \"Get out of here.\" He was moving before I hit the button to close the ramp again. We left a minute later.\n\nCh. 52\n\nFrank Grimes' POV<br >Blue River Pack, British Colombia, Canada\n\nWe arrived at Coral's pack in time for a late dinner. Their Pack House was bursting at the seams, with most of the Beloretsk Pack staying there while they searched for a permanent home. It was great seeing everyone, even if it meant Colletta had Council work to do. We met with Alpha Ivan and Luna Svetlana Boronsky and their leadership, passing along the Russian Ambassador's offer. \"I can't tell you what to do, but their Ambassador approached me. Your Pack members have been freed and should arrive in the next day or two.\"\n\nIvan was happy, but he was Russian and didn't trust easily. \"Putin doesn't give away snow unless he's getting something back. He's got another play going on.\"\n\n\"Perhaps,\" I said. \"No one is going to force you to go back. Until you tell us differently, we will continue working on legal refugee status here in Canada and a permanent home for your people.\"\n\n\"Is that the play? By releasing our people and offering to take us back, are they trying to sabotage our asylum claim?\"\n\nI hadn't thought about that. \"I'm not sure the Canadian Government will believe their good intentions more than I do,\" Coral said. \"It changes nothing between us.\"\n\nWe came back out of the conference room, and Colletta and I walked to where Timor was talking with Mykayla under the supervision of his mother. Mykayla and Timor were mates, but Mykayla was only fourteen and was afraid of males. Timor was a rather large male, which made her nervous. He'd also pulled her attacker off and beat the crap out of him. Now that Timor's Pack was with Blue River, Rori asked me to bring Mykayla here to see if a permanent transfer would work. I remained on the other side of the table while Colletta sat next to her. \"How are you doing, Mykayla?\"\n\n\"All right,\" she said nervously. I noticed she'd picked a table near the wall and away from the others. Everyone knew about her upbringing and was giving her space to work through things. \"I like the mountains.\"\n\n\"You should go on the Pack Run tonight,\" Colletta said. \"Timor and his family will keep you safe.\"\n\n\"I'll think about it.\" Her wolf was more confident than her human side around her mate.\n\n\"I wish I could go with you.\" She couldn't shift, and I didn't want to risk her falling off while riding on my back, so we'd stay behind. We ended up retiring early, planning to leave for Montana after lunch.\n\nI got the call as our car drove to the Bitterroot territory that the Murmansk Pack was looking to take over. I hung up, closing my eyes as I processed what they said.\n\nFor a man who can kill without regret, other crimes are of far less importance. The criminal's ego gets in the way; after all, if you can get away with murder, grand theft auto is no big deal. This psychological effect blinds them to minor offenses or simple mistakes, many of which have been the downfall of the biggest killers in American history.\n\nTed Bundy? The serial killer's arrest came after being pulled over for driving with his lights out. He escaped once, only to get pulled over and captured for weaving in traffic. He lasted 46 days after his second escape until a cop found him driving a stolen vehicle.\n\nThe Oklahoma City bomber, Timothy McVeigh? He got pulled over for driving a vehicle without a license plate. During the stop, the trooper arrested him for carrying a pistol without a permit. He was in jail for this when the FBI linked him to the bombing.\n\nJoel Rifkin, who killed 17 people, was caught driving without a license plate.\n\nA witness saw the Son of Sam serial killer drive off in a car with a parking ticket under the wiper. That tip led police to David Berkowitz.\n\nDetectives and US Marshals who are honest about it would admit top-flight police investigations or forensic miracles don't catch most fugitives. That stuff makes for good television because reality doesn't fit well into their shows. No, most criminals get caught because a) they do something stupid, b) someone snitches them out, or c) a cop gets lucky and catches them.\n\nJulio Salazar was done in by a blizzard. A Dairy Queen blizzard.\n\nJulio Salazar's POV<br >Ohio Turnpike (I-76)\n\nI woke up as we came to a stop, and I felt the motorhome go into PARK. Looking at the clock, it was four in the afternoon, and I'd been asleep for almost five hours. \"Where are we?\"\n\n\"The last oasis before the Pennsylvania turnpike,\" Leonis said. \"We need gas.\" He climbed out as I stumbled to the tiny bathroom. The curtains were all drawn around the living compartment, so no one would be able to see me. I grabbed a bottle of juice out of the refrigerator and heated the last Cinnabon as Leonis filled the tanks. As soon as we picked up the load from our contact in Sparta, we'd kept going east until we got through Chicago. We couldn't risk me driving, so he stopped at a rest area in Indiana and slept for six hours. I kept up the watch while Leonis was sleeping, reviewing the material on the President's movements. I didn't know who these people were, but they were CONNECTED. The documents weren't for public distribution.\n\nWhen I'd made my escape from the oil platform, I knew I'd need help. The Oracle was my lifeline. I told her what I planned to do and what I needed, and she took care of the rest. Leonis was the first one she sent; his van and help allowed me to move about despite being America's Most Wanted Fugitive. Through her, I got the sniper rifle and the intelligence about the former CIA Director's movements. She passed along the intelligence about the First Husband's golf round. And through her, I got the Stinger missiles and now the Javelin.\n\nThe Oracle had been around for over a decade, and I still didn't know anything about her. The Club used her to pass messages, but she was far more than that. The quality of the intelligence and the access to military weaponry pointed to the Cartel, but why would they help? The Cartel killed the Sons leadership. The CIA? The FBI had them bent over their desks right now, stuffing their fat asses with warrants and subpoenas. It might take decades for them to recover from the current scandal. Maybe it was another agency, like the DEA, or a foreign intelligence service?\n\nWhoever it was, they wanted President Laura Kettering dead at my hand.\n\nLeonis had been gone longer than I expected for paying at the pump. I snuck a peek out the window, and the nozzle was stored back on the pump. \"Fuck, did he decide to pay cash?\"\n\nI looked out the other side, not seeing him, so he was in that big travel plaza. I nervously waited until he came back out, two big Dairy Queen cups in his hands. He climbed back into the driver's seat, setting the cups in the holders before driving off. \"You got fucking ice cream?\"\n\n\"Yep. Do you want the mint chip or the M&amp;M?\"\n\nIt was too late now. \"The less time we spend with people and cops around, the better,\" I said. \"I'll take the mint.\" He handed it back through the curtain, and I sat back at the table with it. A Cinnabon and sixteen ounces of ice cream; I was going to be on a sugar high.\n\nI opened up the Javelin Operator's Manual and started studying.\n\nAnita Lay's POV<br >Service Plaza, Ohio Turnpike\n\n\"I tell you, Mom, that's HIM,\" I whispered as we stood in line at the Dairy Queen. \"The one on the news this morning at the hotel!\"\n\n\"Are you sure?\"\n\n\"The tattoo on his neck is a giveaway. No, don't look at him! Just walk away and dial 911. Tell them Leonis is here!\"\n\n\"I can't leave you here alone.\"\n\n\"Mom, GO! Head to the Ladies Room and call from there. I'm going to get some photos of him and whatever he is driving. There's a big reward, Mom.\"\n\n\"Fine. Be careful.\" She left the line and headed towards the restroom. I took out my phone and started recording, leaving it in my pocket with the camera out. I walked past the line to the front, grabbing some napkins, then pretending I recognized the woman in front of Leonis so I could get a good shot of his face. I walked away, turning off the video, then headed into the restroom.\n\n\"My daughter swears it's him. He's in the line at the freaking Dairy Queen! Get someone out here?\"\n\nMy Mom was frustrated that the operator wasn't taking her seriously. I asked for the phone. \"Look, I've got video of the guy. Give me a number I can text it to, and you can see for yourself!\" She finally gave me a number, and I sent the text before I led my mom back out. We followed the guy at a distance, staying on the line with the 911 operator until he drove away in a Class C Forest River Sunseeker. I made sure they had our contact information before Mom hung up.\n\nThe news said he might be traveling with Julio Salazar, and that guy had a ten-million-dollar reward out from the President herself. That would be fucking SWEET.\n\nCh. 53\n\nJulio Salazar's POV<br >Ohio Turnpike\n\nAt least the trip was almost over. All we had to do was make it through the hills of Western Pennsylvania and Maryland. We were going to stay at the Cherry Hill RV Park in College Park. It was close enough to the DC metro area to minimize our exposure after we make our move. I'd finished about half of the Blizzard when I felt the brakes slow us down.\n\n\"Shit,\" Leonis said from the other side of the curtain. \"State Patrol just lit us up.\"\n\n\"Were you speeding?\"\n\n\"Maybe seven or eight over, no big deal.\"\n\n\"In a fucking CAR, but not a truck!\" It wasn't over. \"Stop on the shoulder while I get back in the hiding place.\"\n\nHe started to slow down. \"Goddamn it! Two just crossed the median to get behind us! They are coming up fast!\"",
        "Three units for a speeding ticket? I heard a thump-thump in the distance. A fucking HELICOPTER? \"They made us, you idiot!\"\n\n\"What do I do?\"\n\nI opened the hiding place and pulled out a pistol and an AR-15 with three magazines. \"Don't fucking stop for anything.\" I could hear the sirens and the officer ordering us to pull over. I snuck a look through the curtain; we were in the lead for the parade. \"We're sitting ducks here on the freeway. Find a place, anywhere, that you can get off the road.\"\n\n\"Too late,\" Leonis said. \"Roadblock.\" We were almost to the State Line, and Pennsylvania didn't want us visiting. I could see four cruisers blocking the freeway. Officers with rifles were taking cover behind them. \"What do we do?\"\n\n\"I told you, don't fucking stop! Slow to about thirty, downshift and power through.\" I leaned the AR next to his seat and tossed the extra magazines into the map pocket on the console. \"Good luck.\"\n\nI put the pistol in my belt near the front right pocket for a cross-draw and ran back towards the door leading to the toy hauler. I had to get away, and I'd never do that on a thirty-one-foot recreational vehicle. I felt it as we slowed down, then heard the motor rev as he downshifted. I had just enough time to remove the tie-downs on the Harley, unlock the rear door, and get on the bike before we hit.\n\nThe whole vehicle shuddered, and I could hear the rapid-fire shooting as the troopers tried to stop us. They didn't kill Leonis yet, because I could feel us accelerate. They had hit the tires and were shooting holes into the big vehicle. I started the Harley and hit the 'emergency release' button on the ramp. It dropped down in seconds until it was scraping the road.\n\nIgnoring the gunfire, I walked the Harley back until it caught the ramp. I barely stayed upright when the rear wheel hit and started to spin. I was still holding the clutch as the front wheel hit the freeway. I felt a bullet hit me just above my left hip, but I ignored it. I popped the clutch and twisted the throttle, accelerating as I steered into the left lane. The cracks of bullets passing close echoed in my ears as I accelerated. I could see blood on the driver's side window, and his front wheel was riding on the rim, so Leonis was not long for this world.\n\nI passed him without a second look. I knew he would die in a pile of brass; it was better than a needle.\n\nI wasn't out of the woods yet, not that I wanted to be. I could see at least four cruisers in pursuit, the helicopter was above me, and a trooper just pulled something across the road about a quarter-mile up. That would be the spike strip, and a motorcycle wouldn't make it through either. I looked off to the right; there wasn't a ditch here, just guard rails. Beyond that, it dropped off quickly into pine and hardwood forest.\n\nI made a decision. It wasn't a great option; if it didn't kill me, it would hurt a LOT. It was crazy as hell, but nobody would follow me.\n\nI moved over to the left side shoulder, braking hard as I picked my spot, then turned sharply right before jumping up to put my feet on the seat. When the front hit the guardrail, I leaped off and shifted in midair.\n\nMy clothes ripped and tore with the change, my shoes falling off as I sailed through the air. I finished my shift before reaching the treeline, reaching out with my claws. I crashed through branches before smashing into a young tree, snapping it as I kept going. I finally dropped to the forest floor, bloodied from dozens of cuts. I shook off the wooziness and used my teeth to pull a chunk of wood out of my left foreleg as the cops stopped up by my crash.\n\nI could hear gunfire, but not aimed at me. I got myself up and started to move, heading deeper into the woods. I ignored the pain as I ran away as quickly as I could. If I could evade capture until darkness fell, I might get out of this mess.\n\nIt was a great plan, right up to the point I reached the back edge of the woods and looked out over open farm fields. Fuck! Couldn't I get ONE break?\n\nA quick look showed nothing that would help. I ran east, staying just inside the trees so the circling helicopter wouldn't see me. I'd almost reached the road when I heard the sirens approaching fast. Skidding to a halt just in time, I saw the police cars stopping along the road. They got out and pointed their rifles my way.\n\nThe helicopter must have guided them in.\n\nCops to the left of me, troopers to the right? Here I am, back in the middle and screwed.\n\nI turned and ran back west, heading deeper into the woods so the helicopter wouldn't find me. There wasn't a lot of room, only a few acres. Anything to the north was a no-go with the Turnpike right there. More units were pouring into the area, cutting off escape across the fields. I could outrun a lot of things, but bullets weren't among them.\n\nI was running out of energy and blood. I needed to rest and hide until darkness fell. Finding a large tree, I extended my claws and climbed up forty feet, finding a spot under the thick leaves where I could rest on a wide branch. The canopy would cover me from above, and my spotted camouflage would make me almost impossible to see from below, even if the cops bothered to look up.\n\nI heard more helicopters and police arrive as I rested with my head on my paws. Another two hours, and it would be dark.\n\nThat's when I heard the howls.\n\nNot the barks. No, police dogs I could handle; they weren't a threat to me with my strength and claws. No, this was something far worse.\n\nWerewolves.\n\nThe call of an Alpha to hunt.\n\nI started to move down the tree. I wouldn't escape, but I'd go down fighting.\n\nMonongahela Pack Alpha Ron Carlson's POV<br >Pennsylvania Turnpike\n\nThe helicopter bringing me and nine of my Betas and Warriors landed in the median between the shutdown East and Westbound lanes of Interstate 76. I was the only one still in human form, the others choosing to travel as wolves. I hopped out and jogged to the command post as my Pack followed. \"Ron Carlson,\" I said as a woman in an FBI jacket came out to greet us.\n\n\"Senior Agent Pamela Jergens, FBI Pittsburgh Field Office,\" she said. \"Thanks for coming.\"\n\n\"You did the right thing bringing us here. Is Julio still hiding in the forest?\"\n\nShe nodded as she pulled out a map. \"This is the section of woods he's hiding in. We've got officers stationed along these roads and snipers covering these open fields. Nobody has seen him in the last hour.\"\n\n\"Do you have something with his scent?\"\n\nShe walked to a table and grabbed a sealed evidence bag containing a torn shirt. \"Julio was wearing this when he shifted.\"\n\nI opened it up and tossed it on the ground so my warriors could get a good scent. \"Here's what we're going to do. Make sure your people don't fire on anything that doesn't have spots. We'll start at this corner and sweep to the east. If he runs, it will drive him to your people along Bukey Road. If he hides, we'll surround him. I need a team of shooters to follow me as my warriors do the sweep.\"\n\nTen minutes later, I had a five-person tactical team and an FBI radio with me as my wolves spread out in a picket line along the west side of the wolves. \"Starting the sweep. Stay alert in case he makes a break for it,\" I said into the radio.\n\nWe'd gone a quarter-mile when the first warrior picked up the scent. I told the center of the line to slow as the wings kept going until they also scented him. It didn't take long before we were surrounding the tree with Julio in it. I could see him on a branch about twenty feet up; the scent of his blood was heavy, but he remained defiant. \"This is Alpha Ron Carlson. My warriors have surrounded you. Climb down and surrender immediately, or we will open fire.\" I had my wolves on the other side take cover behind trees as the FBI agents took up firing positions.\n\nLife is full of choices.\n\nJulio chose poorly. Letting out a roar, he leaped to the ground and ran towards me. The FBI team opened fire, shredding him with high-powered rifle rounds. He never had a chance.\n\nCh. 54\n\nMaria Meztli's POV<br >Arrowhead Pack Pool\n\n\"Oh, yeah, that feels fantastic,\" I said to Spider Monkey as I lowered myself into the hot tub. I moved until one of the powerful jets was right on my lower back, wiggling around to loosen my sore muscles.\n\n\"It feels good on my ankles and feet,\" Spider Monkey agreed. She'd been a big help since I got back, helping me with my treatments and getting me moving again. \"I can't believe you made our sex-filled honeymoon weekend look like amateur hour in comparison. I wear Vic out all the time, but I've never worn him down until he needed medical attention.\"\n\n\"I didn't realize how bad it was until it was over. When you're in the middle of it, your mind is in a haze. You don't pay attention to anything except sex.\"\n\n\"I guess so. Look who's here.\"\n\nI looked back to the entrance to see Lance walking in. He was walking stiffly, his package still red and irritated, but he smiled when he saw me. He made his way over to me, and all I could think about was how strong and dominant his wolf was and how loving and tender he was in between sessions. \"Good afternoon, Lance,\" I said with a shy smile.\n\n\"Room for one more?\"\n\n\"Of course.\" He slid in next to me, letting out a grunt as he sank into the water. \"I know Doc said to ice my junk, but my whole body aches.\"\n\n\"Me too. Every time I woke up, I felt like I'd taken a beating.\" His hand dropped into the water, taking hold of mine where no one could see. I squeezed his hand, moving his hand onto my lap. My cat felt better when we were in physical contact, and I liked it too.\n\nI heard a shout, then an order to turn the television up. It wasn't crowded here in mid-afternoon, but there were still a few dozen wolves around. The Omega running the snack bar grabbed the remote and turned the volume up. 'MANHUNT FOR JULIO SALAZAR' was the crawl on the news channel.\n\n\"Law enforcement sources are confirming that Julio Salazar, suspect in the brazen attack on Air Force One, was spotted on the Pennsylvania Turnpike an hour ago. Officers stopped the recreational vehicle driven by his associate after a brief chase. Unconfirmed reports are that this associate, yet unnamed, was killed in a shootout. Julio Salazar escaped into the woods along the Turnpike. The State Police and FBI are confident they have Julio contained and are bringing in more resources by the minute to deal with this dangerous criminal.\"\n\n\"Holy shit,\" I said. The coverage shifted to show a news helicopter circling the area.\n\n\"Alpha is talking with the Monongahela Pack and the FBI right now,\" Lance told me. \"He told them to bottle Julio up and let the wolves surround him. Otherwise, people will get hurt.\"\n\n\"We don't need a bunch of officers dying like the First Husband,\" I agreed. \"Julio is smart. He might find a way out.\"\n\n\"He'd have to do it soon. Once the sun goes down, they'll bring out the National Guard helicopters with infrared cameras. Those guys will blast the shit out of him.\"\n\nWe got out and had some pizza while watching the coverage. \"I can't see Julio getting out of this alive,\" Lance said. \"How do you feel about that?\"\n\n\"He was family, but that didn't mean much. Dad didn't want me anywhere near him, and Dad didn't fear anyone. I'll be sad because it will only be Maritza and I left. On the other hand, I didn't want him forcing me to bear his children.\"\n\n\"I would never let that happen,\" Lance promised.\n\n\"I know. I guess I'm hoping things will get back to normal? I love it here, but I'd like to go back to school, go to the mall, or go riding. It seems like it's been one thing after another without a chance to catch my breath.\"\n\nWe talked, swam, and soaked until the news confirmed that FBI agents shot Julio Salazar dead when he tried to attack them. \"It's over.\" The pent-up emotion started to come out, and I began to cry.\n\n\"Come here.\" He pulled me into his lap as I cried onto his chest. I finally stopped crying ten minutes later, but I didn't move off of his chest, and he didn't take his strong arms from around me. Lance suddenly stood up, setting me on my feet on the pool deck. \"The Alphas want to talk to you,\" he told me.\n\nI showered and dressed in the locker room, meeting Lance on the other side. He held his hand out for me, and I smiled and took it. Alpha Chase noticed it when we walked in, and Rori had the 'tilted head' thing going. The Arrowhead Pack leadership was all present, and Chase gestured for us to sit at the opposite end of the table from where he and Rori sat in chairs. I sat in Lance's lap so I could see better. \"Thank you for coming,\" Chase said. \"I know you've been watching the coverage, so you know about Julio.\"\n\n\"Yes, Alpha,\" I said. \"You've confirmed he is dead?\"\n\n\"I spoke to Alpha Carlson a few minutes ago. He verified it personally.\"\n\nThat was good. \"As Julio's only living relative, I'd like to handle his funeral arrangements.\"\n\n\"I'll make the call. It may be a week or two until the authorities release the body.\"\n\n\"Thank you.\" I looked around the room, and the group didn't look happy. \"Now that Julio is gone, I was hoping my security restrictions would change. I plan to buy a Harley and go riding again.\"\n\n\"That is why you are here, Maria. The Pack will no longer be under lockdown, as the threat from Julio is gone. Everyone will be able to move about outside, and our security posture will go back to normal.\"\n\nHe wasn't saying something. \"What about me?\"\n\nVic was the one who answered. \"Julio wanted the Alpha and his family dead, but he wanted to keep you alive. He wasn't the only one who wanted you.\"\n\n\"The CIA prison is gone, and everyone involved is dead,\" I said.\n\n\"Maybe,\" Chase said. \"The FBI is digging into the CIA operations around you, but we don't know if they still have a program to try and use jaguars as covert operatives. Julio was older and set in his ways; we believe the multiple attempts to get you and Maritza were attempts to get a werejaguar they could train and mold. They also had no leverage on him.\"\n\n\"I'd never work with them,\" I said.\n\n\"You say that now, but what if they hurt Maritza if you refused?\" I looked down, knowing he was right. \"I have to make sure you are safe, and that means taking precautions.\"\n\nHere it came. \"Like what?\"\n\n\"I don't want you alone on Pack land outside the Pack House and associated homes,\" Chase said. \"When you leave the Pack grounds, you'll need at least two guards, four if Maritza is along.\"\n\nI wasn't getting rid of minders. \"What about school?\"\n\n\"There are only a few months left in this school year, so I'd prefer you did it online. When you start college in the fall, we can see what threats remain. Lance has volunteered to be your primary guard if you want him.\"\n\n\"I trust him to keep me safe,\" I said. \"Can I go shopping? I don't have clothes or a bike, and I need a phone and computer.\"\n\n\"I'll take you to Duluth tomorrow,\" Lance said. \"You could ride on my motorcycle with me.\"\n\n\"Or you could check out a bike from the Pack motor pool,\" Roadkill said. \"We've got an 883 Sportster that's your size.\"\n\n\"I'll ride with you in case I buy a ride of my own,\" I said to Lance with a smile. \"We'll need a car for the bags.\"\n\n\"Oh, I'll get Roadkill to drive us in one of the Pack vans,\" Possum said. \"He'll put up with us shopping all day if he gets to visit the Harley-Davidson Sports Center and eat lunch at Grandma's.\" She looked over at Chase. \"Two of us plus Lance should be enough. We'll all be packing.\"\n\n\"Bring a female warrior as well, Lance. I don't want Maria vulnerable in a changing room or something.\"\n\n\"Yes, Alpha.\"\n\nChase looked over at me and smiled. \"I promised to keep you safe, and that's what I'm doing. If there are any issues, please let me know.\"\n\nI was relieved that I'd be able to go out again. After months on the run and weeks hiding here, I needed some retail therapy! I had enough money to pay cash for everything, thanks to Spider Monkey and my late lawyer.\n\nI couldn't wait to feel the wind in my hair again.\n\nCh. 55\n\nFrank Grimes' POV<br >Bitterroot Pack Grounds\n\nI got the news that Julio was trapped in the woods next to the Pennsylvania Turnpike about twenty minutes before my phone rang again. It was Alexander Strickland, the Director of Homeland Security. \"Frank Grimes, sir,\" I answered.\n\n\"I need you in the office as soon as possible,\" Strickland said. \"We've got a break in the Salazar case, and the President wants you involved.\"\n\n\"Is Julio dead?\"\n\n\"He'll be dead or captured soon. The Monongahela Pack is coming up to assist.\"\n\n\"Good idea.\" I looked at my watch; it would be an hour before I could get to the airport, but would I have a crew to fly? \"I'm in Montana now. I'll fly as soon as I can.\"\n\nColletta looked at me and rolled her eyes. \"Don't you have a mate who needs your help with Council stuff?\"\n\n\"I know. I'll let the Director know I need to focus on recruiting wolves instead of actual law enforcement.\" I told him I'd call when I had an arrival time, then hung up.\n\nWe pulled into the driveway outside the big Pack House. I could see Alpha Boris and Luna Nikita Serada standing outside. \"We'll make this quick and head back. I'll need to be there when the President takes back her office anyway.\"\n\n\"I'll call the pilots as soon as the greetings finish.\" Since they were Russian Alphas, the greetings involved hugging, kissing cheeks, and vodka. Boris was a bear of a man, both friendly and dangerous. When Colletta went into the office to talk about the Russian Government's offer, I stepped outside and called the pilots.\n\nRefueling the plane wasn't the issue; FAA-required crew rest periods were. \"Earliest we can depart is 0600 when the airport opens,\" he said.\n\nA little checking on my phone showed I'd never make it to Washington flying commercial, not after the time we'd have to spend here. \"That's fine. We'll be there by five-thirty.\" I linked to Colletta with the update and headed back inside. We were the guests of honor at dinner, and despite the language barriers, I could see how happy the Pack was to be free.\n\nAs expected, they were hesitant about the Russian offer. \"We like it here,\" Luna Nikita said as she summed it up. \"The Pack lands are extensive, the mountains remind us of home, and we have the opportunities that come with being in America. Having the infrastructure already established saves us time and money.\" The existing facilities were a big deal; the Beloretsk Pack would need a year to build everything up in British Colombia.\n\n\"How are the talks with the Governor going,\" I asked.\n\n\"It helps that we weren't here until a few months ago,\" Alpha Boris said. \"The cadaver dogs and search teams are still out there recovering bodies. Thank Luna that only some of them were human.\" The previous Alpha had kidnapped and bred humans to build Pack numbers, giving up only when he found the resulting wolves were all weak Omegas. The missing people went back seventy years, and the Montana State Police and FBI were both involved in the exhumations and testing.\n\n\"And that everyone involved in the kidnappings is already dead at our hands,\" I said.\n\nColletta nodded. \"The wisdom of the Council in abolishing the previous Pack helped. When we confiscated the wealth of the old leadership, it allowed us to establish a restitution fund for the victims. That has gone a long way towards defusing public anger.\"\n\nThe rest of the evening went well. The big topic was, of course, mates. \"We used to tell ourselves that our isolation was the reason we didn't find our mates,\" Nikita said. \"Now, we've had several gatherings of all the unmated around the world, and still we have people who are alone. I'm curious about the two of you. I understand you found Frank shortly after you lost your previous mate.\"",
        "Colletta smiled and reached for my hand. \"I did, though I wasn't looking for it. Frank and I just clicked from the first time we met. By the time my wolf figured out he was more than a fling, my human side was already in love.\"\n\n\"Could you talk to our unmated? They need hope, both for those who lost a mate and those whose mate might not be a wolf.\"\n\n\"Of course.\" That was a fun meeting, with seven females and six males joining us for a frank (pun intended) discussion. We went to bed early, rising at four to return to the airport. We slept most of the way, punching another ticket on the Mile High Club as we passed over Ohio. I loved flying in private aircraft!\n\nA limo met us at the airport to take us downtown. It dropped me off at the FBI Building; Colletta would continue to the White House. \"I'll see you tonight,\" I told her.\n\n\"I'll have a car sent for you.\"\n\nI went through Security and got an escort to the Salazar task force area. The briefing was an eye-opener, as the RV they were driving was a treasure trove of clues. The Javelin missile was very concerning, as the warhead could take out a vehicle or grounded aircraft. The worst part was that it was fire-and-forget from up to two miles away, well outside of the Secret Service protective zone. By the time they reacted, the shooters could already be gone. \"How the hell did they get ahold of this?\"\n\n\"Probably the same pipeline as the Stinger missiles,\" one of the agents said. \"This particular launcher was reported destroyed in Afghanistan during an IED strike.\"\n\n\"Afghanistan? That doesn't sound like a cartel source.\"\n\n\"That's what concerns us, Frank,\" Director Strickland said as he walked in with the FBI Director, Hugh Patterson. \"I can't think of why the missile would be back in the States without the CIA.\"\n\n\"We've been digging through the CIA's operations without much success,\" Hugh continued. \"Everything is compartmentalized, and the leadership is dead or lawyering up. We don't know how far down the rot goes. The CIA could have obtained the missiles, but that isn't the most concerning thing we found.\"\n\nThat didn't sound good. \"What else?\"\n\n\"Detailed information on the President's schedule, movements, and protection strategies over the next two weeks,\" Hugh replied. \"Stuff they only could have gotten from the Secret Service, which has Valerie Grunwald shitting bricks.\" I could bet; such information was the Holy Grail for anyone targeting the President. \"Julio had everything he needed to plan and carry out an assassination of the President.\"\n\nThat wasn't good. \"Is there a mole, or is it a security breach?\"\n\n\"We don't know yet. We've got a team working with the Secret Service to pin down where the information came from and who had access to it. If we can pull the string, we're closer to the conspiracy.\"\n\n\"And it's a big one,\" I said. \"You'd need high-level people and money to do this.\" I looked around at the people from multiple agencies who were part of the investigation. \"You said you needed me, Director. How can I help?\"\n\nDirector Strickland met my eyes. \"You're an expert on the Cartels, Frank. We know Julio and the Sons worked with the Sinaloa Cartel.\"\n\n\"And the Cartel turned on the Sons leadership and killed them,\" I replied.\n\n\"Yes. That doesn't mean Julio didn't have contacts with them or with other Cartels from his time. We both know that they have the money to get anything. A Cartel probably took the Stinger from the Mexican military. The Javelin might be a black market acquisition.\"\n\n\"Mexico hasn't purchased any Javelins,\" Hugh said.\n\nIt was a lot to take at once. \"It could be both, you know. The CIA has a long history of working with drug cartels and arms dealers since before Iran-Contra. I've made a few Cartel busts only to have the CIA claim their asset.\"\n\nHugh gestured to a cubicle near the office by the window. \"Your desk is over here. I'll have Agent Thompson introduce you around.\" The two directors walked out, probably to a high-level meeting. I turned to shake hands with my new office mates.\n\nThis investigation was a shitstorm of epic proportions. At a minimum, senior elements of the Secret Service and other agencies are working with a Cartel.\n\nWorst case? The CIA was actively plotting to kill the President.\n\nCould the Task Force find the people responsible? I wasn't so sure. Hugh was frustrated with the pace of the CIA probe, and there might be compromised agents within the investigation.\n\nIt was time to talk to Colletta; we needed to use Spider Monkey, Claire Bennington, Frank Donovan, and other Pack resources to do an independent investigation. We had to find these people before they succeeded in taking out our President.\n\nCh. 56\n\nMaria Meztli's POV<br >Hermantown, Minnesota\n\n\"Relax, we'll be there in a few minutes,\" Lance said as I fidgeted behind him on his Harley. His bright red Road King was rumbling under me as I shifted on the seat. It wasn't all nervousness; being so close to Lance and breathing in his scent had me horny, and a Harley is the word's most expensive vibrator when you lean forward enough. I'd orgasmed once on the drive down despite the lingering soreness, and I was close to another. The acceleration from this stoplight might do it.\n\n\"I know, I'm just excited to be riding again. I really, REALLY missed this.\" I hadn't gone this long without being on a Harley since I was five years old. All that time holed up at the cabin or driving a minivan, was torture. I was thankful the nannies at Arrowhead were happy to watch Maritza so often, and she loved being with the other children in their care.\n\nThe light changed, Lance gunned the engine, and I got the release I craved. I would have to change my underwear, maybe even my jeans, by the time we got to the dealership. Luckily, I had both in the backpack I wore. Planning is the key, right? I just hoped Roadkill, Possum, and Monica didn't notice how I was shifting my hips to get off. THAT would be embarrassing.\n\nWe came to a stop at the next red light. \"Monica is going to smell it as soon as you get off the bike, but the old people won't pick up on it unless you've soaked through,\" Lance said.\n\n\"What?\"\n\n\"How many times have you cum on the ride down? I can smell it over the exhaust.\" Oh, God, I was surrounded by wolves with zero boundaries.\n\n\"Twice,\" I confessed. \"Not a word.\"\n\nFinally, we arrived at the Harley-Davidson Sports Center. I made an excuse that I needed to use the restroom, putting up with the amused smile from Monica as she volunteered to go along. She started laughing as soon as the Ladies' Room door was closed. \"You've got it bad, don't you, girl,\" she said as I went into a stall. \"I can't blame you. Lance is all kinds of yummy.\"\n\nMy cat didn't like how she talked about him and let out a subsonic growl. \"He's with ME,\" I said as I stripped off my jeans before using the toilet.\n\n\"I knew it! There's a pool going on for when you two realize you are mates,\" she teased. \"I've got sixteen days from now, so you need to cool it a bit to give me a chance.\"\n\n\"My kind doesn't have mates. We have arranged marriages,\" I said. \"Or we did. I guess since I'm the only adult left, I can do what I want.\"\n\n\"Lance is a good wolf, and I've seen how he looks at you.\"\n\n\"We're just friends with benefits. He's got a mate out there, and I can't be that woman who takes that away from him.\" I pulled on my new clothing and stuffed the soaked stuff in my backpack.\n\n\"There's no wolf of age out there for him, or he'd already be mated. I suppose he might be waiting for a female who hasn't shifted yet, but I think it's you. He just has to figure it out.\"\n\nI came out and washed my hands. \"I guess we'll find out someday, but right now? I want to buy a new ride.\"\n\nWe came back out to find Roadkill talking with the guy at the desk, while Lance had a salesman ready to pounce. \"I understand you're looking for a new Harley,\" he said with a smile. \"Are you an experienced rider?\"\n\n\"Yes,\" I said. \"I plan to do a lot of cruising, so I need a bike with power that is short enough for my legs and light enough for me to handle. I need storage too.\" I knew what I wanted, but I was testing the salesman. Many salespeople would assume Lance was the bike guy and I was his ditzy girlfriend. His reaction to me would tell.\n\n\"For a rider your size with experience, we have a few options with low seats that can work. Most of them do not have hard saddlebags, though.\"\n\n\"I prefer hard bags for security and protection,\" I said.\n\n\"That narrows it down. I have two in stock that could meet your needs.\" He led me to a Street Glide. \"This is the biggest cruiser I'd recommend for a woman your size. The seat height is good for you, just over twenty-six inches, but the weight is at the high end at eight hundred and thirty pounds. It's got plenty of power and storage and is very comfortable on long rides.\" I got on, making sure I could comfortably get both feet down flat while sitting. He held the bike upright while I checked the seating position. I didn't like the short windshield that ended in my line of sight. It was workable, but I was worried about the weight as I got off.\n\n\"The other option in stock is this one.\" He led us to a gloss-white cruiser with a batwing fairing, full-height windshield, and lots of chrome. \"This is a Sport Glide. It's got one of the lower seat heights at under twenty-six inches, and it's a hundred and thirty pounds lighter than the Street Glide. Anything smaller and lighter than this wouldn't be in the cruiser class and wouldn't have the power or storage.\" I straddled this one, noticing the weight difference. I wouldn't have picked a white bike, but Rori said it was the best base for one of her custom paint jobs. She promised to get to it next winter when she wasn't in wolf form. I'd seen her work, and it was worth waiting on. \"Same 107 engine, and already set up for North Shore riding.\"\n\n\"Do you have one I can test ride?\"\n\n\"I have a demo 2020 model, but it has a bullet fairing and no windshield.\"\n\n\"I'll survive.\" I had to leave a credit card, and they made a copy of my license to do the test drive. Lance would ride with me, and the others slipped out to get into the Pack van. Thirty minutes later, I was convinced. \"How soon can you have that one ready to go?\"\n\n\"Our mechanic will have it ready by the time you sign the paperwork,\" he said. \"We can register it in Minnesota, but you need to get a Minnesota license within 30 days of moving here.\"\n\n\"We'll stop by the license bureau,\" Lance promised. It was another thing to do now that I'd moved here. We filled out the paperwork using the address of the Pack House, and then I did some shopping for custom Harley leather. I used the discount they offered to buy a pair of boots, a set of chaps, a new helmet, and a reinforced Harley motorcycle jacket. Minnesota didn't require helmets, but I'd been to too many biker funerals to go without.\n\nLance was waiting for me as I pulled around from the back, and we quickly synced our Bluetooth systems so we could talk. \"I love your bike, but I wish you had to wait a few weeks for it to show up,\" he said. \"I liked having you back there.\"\n\n\"Only the lead dog on the sled team gets fresh air and a good view,\" I answered. \"You have no idea how good this feels to be on my ride again.\" He pulled out, and I followed with the van behind us as we headed to the mall to look for clothes. \"You're lucky,\" I told Lance ninety minutes later as he carried a half-dozen shopping bags out to the van, with Roadkill carrying the rest. \"I'm not one of those shop-till-you-drop girls. I'm more like 'get in, get out, and nobody gets hurt.'\"\n\n\"Yeah, well, we're hungry,\" Lance said. \"Possum wants to go to Grandma's in the Harbor. We'll be following them.\"\n\nThe drive down the hills and through the city to Canal Park was pretty cool. Duluth was a medium-sized city on the west end of Lake Superior, with steep hills from the top to the water. I didn't see anything the first time through, stuck in the back of the van as I snuck into Arrowhead. \"Canal Park has lots of shops and restaurants, plus the Lake Superior Marine Museum,\" Lance said through our helmet link.\n\n\"It's freezing,\" I said as we got closer.\n\n\"Yeah, if you don't like the weather in Duluth, wait a few minutes. The Lake is probably thirty-six degrees right now. One wind shift can drop the temperature forty degrees. It's why I had you dress so warm.\" I was glad I had my new leathers on over my flannel and hoodie.\n\nWe pulled into the lot at Grandma's, a famous saloon a block from the canal, which hosted the namesake marathon race each year through Duluth. \"Monica will get our name on the list. Come on; you need to see this.\" He walked me through the paths to the canal, past the tugboat and the museum, until we joined the crowd on the west pier. \"Check that out.\" A mile or two out, a big ship was heading our way. \"Both oceangoing vessels called 'Salties' and Great Lakes-only ships called 'Lakers' come through here into Duluth harbor. Ore, cement, grain, it all goes in and out through this canal.\"\n\nI looked at the imposing ship, then at the narrow canal. \"This thing is what, seventy-five yards wide?\"\n\n\"Seventy-five meters wide and five hundred and twenty meters long,\" Lance replied. \"The ship coming in is the James R. Barker, over three hundred meters long and thirty-three meters wide. Not a lot of room for error.\"\n\n\"No shit.\" I looked up at him. \"Now, are you some kind of savant, or did you have help?\"\n\n\"Busted. Monica linked me with the information.\" He pulled me into his chest and wrapped his arms around me, keeping the breeze off as we watched the ship enter the harbor. I'd never been so close to a big vessel; Denver wasn't exactly a port city.\n\nWe got back to Grandma's in time to get our table, and we pigged out. Wings, a large tray of famous onion rings, and a cheesesteak made Grandma's style. I finished it off with a turtle brownie sundae, finally leaning back and rubbing my food belly. \"That was good,\" I said.\n\nPossum laughed, having watched me vacuum up twice as much food as she ate. \"Are we going to have to load you and the bike in the van so you can sleep it off?\"\n\nMy eyes got wide. \"Nope. I'll be fine.\" I bought two sweatshirts, one for Maritza to grow into, on the way out. \"Time for electronics!\"\n\nBy the time we finished shopping, my debit card had scorch marks on it. It took three trips to get everything up to my room at Vic's house, but Maritza and I had clothes for a while. I flopped down on the bed with Lance after we finished de-tagging. \"I've got so much laundry to do,\" I said.\n\n\"Yep.\" He reached out his hand for mine, and our fingers slid together. \"I hate shopping, but I had fun today.\"\n\n\"I did too. When can we ride again?\"\n\n\"Next weekend is a border run. We usually get a few dozen for those.\"\n\nThat didn't sound good. \"Taco Bell? Yuck.\"\n\nHe laughed. \"No, to the Canadian Border. It's about three hours riding each way, and there are waterfalls and cool things to see along the way. With stops and meals, it's an all-day run. It's cold, but the summer traffic isn't here yet.\"\n\nI hadn't ridden in formation since last fall. \"I'm in. Help me with laundry?\"\n\n\"I'd love to.\" I stood up, and he peeled off my clothes and tossed them on the pile. We fell back onto the bed and started to kiss. An hour later, the first load was in.\n\nThe laundry waited until the morning.\n\nCh. 57\n\nColletta Grimes' POV<br >Rose Garden, White House\n\nI stood about twenty feet from Madam President, one of the honored guests but not her Cabinet or Congressional VIPs. The President of the Senate and the House Speaker were at the lectern, addressing the nation and the world before the six PM news. The Speaker of the House was talking. \"Exactly four days ago, President Laura Kettering, under Section Four of the Twenty-Fifth Amendment to the Constitution, notified our offices that her temporary inability to perform the duties of her office no longer existed. As the Vice President and the Cabinet have not challenged this declaration in the allotted four days, Congress accepts her declaration as final.\"\n\nThe Senate President took over the microphone. \"Welcome back, President Laura Kettering!\" The crowd erupted in applause; the shock over the murder of her husband and Air Force One transcended party politics. Polls gave her an approval rating near eighty percent.\n\nPresident Kettering waved to the crowd and shook the hands of the Congressional leadership before finally taking the microphone. \"I would first like to thank Vice President Cartwright and his staff for stepping up when I needed them the most. You have been a true friend and patriot in our time of need.\" She paused until the applause died down. \"The past weeks have been traumatic for me and the country as a whole. Neither of us will ever be the same, nor should we be. The White House will be a bleaker, lonelier place without my husband. I thank you all for your support, your encouragement, and your words of sympathy in my time of grief.\" She wiped away a tear as the cameras clicked away. \"Life is fragile; it can change in a moment, yet we must go on. I took an oath to execute the Office of President and preserve, protect and defend the Constitution of the United States. I now accept the duties of the Presidency, effective immediately.\"\n\nShe stepped back and waved as the crowd cheered, then turned to greet the assembled dignitaries. I watched from a distance, observing the hyper-vigilant Secret Service agents doing their work. One of the working dogs in their service was a werewolf from the Adirondack Pack, and she was circling the perimeter with her werewolf handler. The crowd moved inside, but I remained as the press packed up and left. A few reporters tried to get a statement, but this event wasn't about me or my kind.\n\nI'd spoken a few hours earlier at a ceremony honoring the teen girl whose tip led authorities to Julio Salazar. She's chosen the check rather than five bags of cash, which was a disappointment to the press. I'd kept calm as hostile reporters challenged if werewolves and werecats were inherently violent or criminal. We still had a long way to go to gain general acceptance. It reminded me how critical it was for us to keep the President's support.\n\nThe car had just picked Frank up from the FBI building, and we talked over the link as I waited for him near the White House gates with two off-duty werewolf Secret Service trainees. I gave him my observations from the day while he updated me on the status of the investigation. When he told me his suspicions, I had to agree, as much as it frightened me. \"What are we going to do?\"\n\n\"It depends on how far the President is willing to go, plus how much cooperation we can get from our people. We are asking a lot of them, and we would be putting them in grave danger. These people kill like some people curse.\"\n\n\"Reflexively and without thinking.\" They had resources and reach far beyond the biker gang we'd been dealing with thus far. In that, the authority and scope of the US Government had been in our favor.\n\n\"Yes. This conspiracy is so much bigger than the Sons. As good as Spider Monkey and her team is, this is a whole other level. The smart play is to walk away.\"\n\n\"What about Maria? If we stop, is she still in danger?\"\n\nFrank didn't answer for a bit. \"We won't know for sure. The primaries involved with the black site are dead, but who knows how deep that project went? If they still want to train and breed werecat agents, Maria and Maritza are the only remaining targets in the world. It would be safest to stay defensive and let the FBI and Secret Service do the heavy lifting.\"\n\n\"Unless the FBI and Secret Service are compromised.\" His limousine stopped at the entrance, and we joined him in the back. Since he had the scrambled cellphone, we took a minute to call Arrowhead while we were in traffic. \"Hi, Chase,\" I said when my son picked up.",
        "\"Hi, Mom,\" he replied. \"How is your trip going?\"\n\n\"Busy. We're heading to dinner; Frank spent the day with the Task Force, and I spent it at the White House.\"\n\n\"I saw you on television, and I'm glad she's back in charge now. We can use allies.\"\n\nIndeed. \"How are things back home?\"\n\n\"Quiet. I spent time working the phones today with the politicians and law enforcement. We're all taking a deep breath of relief now that Julio's gone.\"\n\n\"And Maria?\"\n\n\"We may have a problem there. Maria and Lance are sleeping together.\"\n\n\"Does his wolf recognize her as his mate?\"\n\n\"Not yet, but Lance is falling in love with her.\"\n\nWonderful. I had to hope the Goddess knew what she was doing, or there was heartache headed their way. \"The heart wants what it does,\" I told him.\n\n\"We warned them both, and they are adults,\" Chase agreed. I had to hang up a few minutes later as we arrived at the Georgetown restaurant we'd chosen.\n\nAfter a relaxing dinner and drinks, we returned to the White House just after nine. Laura's regimented daily schedule was over, and the Secret Service escorted us to her while our bags went to another bedroom. \"Drink?\"\n\n\"Water for me, thank you,\" I said.\n\n\"I'll have some of what you're pouring,\" Frank said, noticing the label on the whiskey bottle. \"Neat.\"\n\nThe President had her double on ice, and we sat down in the comfortable chairs. \"How are you doing,\" I asked her.\n\n\"It's good to keep busy,\" she said. \"Thank you for coming. What I need right now is honest advice, and you're the only person in Washington who doesn't care about party or Presidential politics.\"\n\n\"I support your Presidency because you've been a friend to me and our people,\" I replied. \"Honesty is the only way I operate.\"\n\nShe took a drink, closing her eyes as the single malt burned at her throat. \"I don't know who to trust anymore,\" she finally said. \"My CIA Director, a man I've known for decades, was operating secret prisons and running agents inside the United States in violation of the law and my direction. The FBI is getting nowhere with the investigations, and the Secret Service might be compromised. I'm ready to take a chainsaw to the whole tree to get rid of the rot, but I know good people will get hurt if I do.\"\n\n\"Madam President, is this the hill you're willing to die on?\" She looked at me quizzically.\n\nFrank answered. \"It's a question the military uses. Taking an occupied hill is one of the costliest decisions a military leader can make, as the defenders have all the advantages. It's another way of asking if the objective is important enough to risk your life. If not, maybe you should do something else instead.\"\n\n\"You think it's that bad?\"\n\nFrank nodded. \"The conspiracy to assassinate you goes far beyond a criminal biker jaguar or a CIA Director of Operations. The Sinaloa Cartel may have provided support, but they would never risk this on their own.\"\n\n\"You don't think the Cartel is capable of it? They have billions in assets and buy whatever they need.\"\n\n\"It's not good business for them; killing a President risks open warfare with the US military. The cartel is being used as much as Julio was. The people behind it are powerful, connected, and well-hidden. Your chainsaw analogy isn't far off the mark. It's going to be very difficult to identify and prosecute them.\"\n\n\"Can the FBI do it?\"\n\nFrank let out a breath. \"You've heard of the Deep State?\"\n\nShe laughed. \"The idea that unelected bureaucrats hold the real power in Washington?\"\n\n\"It's true,\" I said. \"The politically-appointed leadership is window dressing; true power lies within the system of hiring and promotion. As I've heard people say, 'I was here when you got the job, and I'll be here when they walk your ass out of here.' A few appointees in the CIA can't affect real change during a four-year term; they'll wait you out if they don't like what you are doing. It takes decades of consistent leadership to change the culture of something as big as the FBI and CIA, and you don't have enough time left in your first term.\"\n\n\"My poll numbers are through the roof. A second term is mine to lose,\" she insisted.\n\n\"You won't make it to the election if you keep this up because they won't stop coming after you,\" Frank said. \"They already killed your husband, an Air Force pilot, and nearly a hundred people on Air Force One. They took their shot and missed, and now you're trying to clean up a CIA that doesn't WANT to clean up. They have connections and influence you can't imagine, and they won't sit back and let you take them down. John F. Kennedy found that out.\"\n\nShe looked at him in shock. \"JFK got killed by a crazed gunman,\" she said.\n\n\"And Jeffrey Epstein killed himself,\" Frank replied. \"If you keep digging, they will fight back. Add in that you don't know if you can trust the Secret Service, and it's a real problem. There's one other thing to consider.\"\n\n\"What's that?\"\n\n\"It does them no good to kill you if Vice President Cartwright goes after them even harder in revenge. They wouldn't do it without having at least an understanding with him, if not his outright support.\"\n\nPresident Kettering sat back in her chair, the immensity of the conspiracy hitting her like a left hook to the temple. \"Robert? Jesus Christ.\"\n\nTime to get the discussion back on track. \"So we come back to, 'Is this the hill you want to die on?' If not, then you accept the obvious fall guys and go back to campaigning.\"\n\nShe tossed back the rest of her drink as she thought about it. \"So much for being the most powerful person in the world,\" she said.\n\n\"You asked,\" I said.\n\n\"Let's say that I decided I was going to root out the corruption, no matter the cost. What then?\"\n\n\"You're not going to like it,\" I said. Laura got up to pour herself another. \"The Task Force is easily compromised. You need a shadow investigation to monitor the official one, and the shadow can't be in government. The shadow needs access to everything without the Task Force knowing they are under surveillance. They watch the information coming in and look for deception, deletion, and diversion. Tracing that back will lead you to the ones pulling strings.\"\n\n\"And you would know outsiders who could be these shadows?\"\n\n\"I have some ideas,\" Frank said.\n\n\"What other choices do I have?\"\n\nFrank REALLY didn't want to say this next part. I could tell by his expression. \"It all started with the CIA trying to use werecats in their programs. The only other idea I have is to let them have a jaguar and see what they do with her.\"\n\n\"Oh, HELL to the no,\" I said.\n\n\"Maria would have to volunteer,\" Frank said.\n\n\"I have to agree with Colletta on this one. Come back to me with a shadow proposal, and we'll go from there.\" She set the drink down. \"The agent outside will take you to your room.\"\n\nWe both stood and said our goodnights, then left her residence. When the door closed behind us, I smacked Frank hard across the chest. \"Don't even THINK of suggesting that to Chase or Maria,\" I told him.\n\n\"I won't. I will arrange to have a tracking device implanted into Maria and Maritza. Just because she doesn't volunteer doesn't mean they won't be successful the next time they try to take them.\" I knew he was right as soon as he said it.\n\nDifficult conversations were coming soon.\n\nCh. 58\n\nMaria Meztli's POV<br >Arrowhead Pack House\n\n\"You want us to get tracking devices implanted in us?\" I looked around the table at the Pack leadership, along with Colletta Grimes, who had just returned from Washington. Her husband Frank was remaining there indefinitely to assist in uncovering the conspiracy behind Julio's attacks on the President.\n\n\"You would wear a tracking device while the implant would be a distress beacon,\" Chase replied as he passed two bracelets down the table to me. \"These necklaces are the latest technology. It transmits your location to nearby cellphone towers every fifteen minutes. With no tower in range, it sends a pulse detectable by satellites. Since they aren't active all the time, typical scanners won't pick them up unless they are lucky enough to be nearby during a pulse. The battery can operate for over a week without recharging.\"\n\nI looked at the larger ring as it came to me. It was brushed silver, as thick as a straw, and hinged in the middle. I put it around my neck and closed it, but it opened back up. I looked for a latch but found nothing. Lance took a tool out of his pocket, and I noticed he was wearing a matching necklace. The resemblance to a collar was a little offensive. \"The latch is magnetic. Place this over the female end, and press the 'L' to lock, 'U' to unlock.\" I pressed the button and could feel something moving; when it stopped, the ring locked tight. It was tight around my throat, enough to stay in place without being uncomfortable. \"Unlock it and remove the tracker, then change to your jaguar form so we can make sure it won't be a problem if you shift.\"\n\nI took it off before I shifted. Lance put it back on as I sat in front of him, and since it fit, he locked it in place. I changed back and pulled on my dress. \"Anyone who takes me will cut this off in a heartbeat.\"\n\n\"It's made of titanium. If you don't pick the right place to cut, it won't be easy,\" Chase replied. \"Maritza would get an ankle bracelet. You can remove them every three to five days, placing them on a charger to top off the battery.\"\n\n\"Pretty cool,\" I said. \"Who else is getting these?\"\n\n\"Rori and the girls already have them. As you said, they're an obvious place for a tracking device. By giving up the obvious, we're hoping they miss the implanted distress device.\" Lance took out a small plastic bag from his pocket; inside was a quarter-sized metal disc. \"We would implant this on your hip, over the bone above your left buttock. In an emergency, you activate the distress signal by pressing hard onto the center of the disk. It will buzz to tell you it is activated; press hard again to stop transmitting. The signal pulses out every five minutes for six hours and is strong enough to be picked up by satellites.\"\n\n\"Why there?\"\n\n\"You can activate it even if your hands get cuffed behind your back, and it will stay in place when you shift,\" Lance replied. \"It also transmits the distress signal if your body temperature drops below eighty degrees.\" My eyes got wide as I realized why; at that temperature, I'd be dead. \"This is only for adults; it's too big for Maritza.\"\n\nIf it gave me a longer leash, I was up for it. \"Fine,\" I said. \"When do you put this thing in?\"\n\n\"Doc Olson is waiting now. It's a simple surgery, a local anesthetic, and a small incision with a few stitches. He'll put them all in.\"\n\nIt turned out I wasn't the only one; Chase purchased six dozen of these devices, and almost all the adults in his Pack volunteered to have the implant. It made sense; we were still under threat, and it was a simple way to protect ourselves from kidnapping or worse. I didn't have the Pack Link, so it was even more critical for me to have a way to raise the alarm. It only took a few minutes for it to go in.\n\nThat was six days ago, and my skin had nearly healed under the bandage. The road by the Pack House was full of motorcycles, thanks to an invitation Possum and Roadkill had sent out to the Steel Brotherhood. It was early May, before the peak riding season, but our Pack had more to offer than just scenic motorcycle rides. This weekend was to honor the men and women who helped us defend the Pack after the Great Unveiling.\n\nI was in my leathers with warm clothes underneath. I'd taken Lance's advice, packing a wide range of clothing in my bags and dressing in layers. I played with my cut, feeling the stiff leather. I'd been shocked when Three Tequila and Howler pulled me to the head table on Friday night and presented me with a Steel Ladies cut. \"Welcome to the club, Murder Mittens,\" Possum told me.\n\n\"I didn't apply, and I didn't prospect,\" I protested.\n\n\"The Ladies recognize one of their own. We're not the Brotherhood, so we can do what we want. You don't have to put it on if you don't want to,\" Three Tequila told me.\n\n\"No, I want the cut,\" I said as I put it on while everyone applauded. I wiped away tears as I embraced the ladies who ran the Ladies in the Orlando and Manchester chapters.\n\nWhen I finally sat down, I looked down at the cut. Such a thing was unimaginable in the Sons of Tezcatlipoca. They had vests for their women with the Club logo, with \"Property Of xxx\" around it, and they did THAT primarily to prevent fights from breaking out at parties. Even as the Old Lady of a Club President, I was property to the Club, just like his motorcycle.\n\nNow I was wearing it for a Club run and not as a seat decoration behind a member. Hell, I had a higher status than Lance did! He'd ride farther back in the formation since he wasn't even a Prospect. I smiled at my boyfriend as Lance walked to his Harley. \"It looks great on you,\" he said. \"You're lucky. A few Presidents pulled me aside and asked if I was interested in prospecting, but there isn't a chapter up here.\"\n\n\"Yet,\" Chase said as he walked up in his Steel Brotherhood cut. \"If we can get enough members to meet the Chapter minimums, I'll get the support to start a chapter here. I've got a few leads, mostly members who are retiring or looking for a change in scenery.\"\n\n\"Does membership include access to the pool?\"\n\nChase laughed at Lance. \"Access to our facilities is a big draw, and not just for werewolves. The short season is a bigger problem. I tell them we double as a snowmobile club, so it's a two-for-one deal.\"\n\nChase was at the front, riding next to Roadkill and Possum. Roadkill had the front left spot as the Road Captain for this run. The visiting Presidents and their old ladies were behind him, followed by the lower-ranked members of the Brotherhood and the Ladies. The guests rode in the back of the formation, which had almost fifty motorcycles in it.\n\nI screamed in joy as we headed out the front gate and accelerated onto the road. There was something primal about riding at high speed in close formation. You felt invincible, the roar of the engines and the sight of traffic moving aside to let you pass.\n\nWe headed east to Two Harbors, then headed north along Lake Superior on Highway 61. We'd lucked out on the weather; it was sunny and warm, with a breeze out of the west that kept the lake chill at bay. My new ride was sweet, and I enjoyed every part of the ninety-minute ride north to our first stop in Grand Marais.\n\nOur group parked along the road before going into the famous Sven and Ole's Pizza. Roadkill rented the entire dining room for us, set up in one long table with overflow in the booths. Three Tequila waved Lance and me over to sit with her and Mongo near the head of the table.\n\nThe tables were ready for us, with pizzas and pitchers already out. I took a few pieces of sausage and mushroom, then tossed them on Lance's plate. That was my favorite pizza, but now the mushrooms were making me a little nauseous. I ended up eating pepperoni pizza while trying to keep my hands clear of Mongo and his appetites.\n\nI had a great time hearing about Rori and her time in the Orlando clubhouse while answering questions about my upbringing in the Sons. Three Tequila was a riot and had me laughing the whole time. I don't know how many pizzas disappeared in the forty-five minutes we were there, but it was a lot.\n\nI felt better as we continued north, stopping at the rest area and visitor's center just before the Canadian border. Most of the group went through the checkpoint, headed to a biker bar in Thunder Bay, Ontario. Chase didn't want me out of the country, and my guards couldn't carry pistols into Canada. Others without a passport or enhanced driver's license, or those with DUI's on their record, stayed on this side too. Two dozen of us were going to hike in to see the falls on the Pigeon River.\n\nI packed away my chaps, wool sweater, and leather jacket, keeping my jeans, T-shirt, hoodie, and the Ladies cut. The hike to the High Falls was pretty easy, with paved trails or decking the whole way. I took lots of photos with my phone from the different observation decks, most of them with Lance's arm around me. The High Falls are the biggest in Minnesota at a hundred-and-twenty-foot drop.\n\nWe had plenty of time before the rest of the group returned, so we continued on the trail another two miles upriver to the Middle Falls. The river was wild up here, with some channels narrow enough I thought I could leap into Canada if my jaguar had a running start. The waterfall was much smaller at a thirty-foot drop, but the volume of water and the proximity made it even more exciting. There were no other people around, so the werewolves and I stripped and shifted rather than get our clothes soaked. It felt great to be sniffing around and playing near the rushing rapids.\n\nI didn't want to change back, so when it was time to go, I let one of the guys carry my clothes in his backpack. I wasn't the only one to stay in animal form as wolves raced around in the trees and played. We were nearly back to the trailhead by the High Falls when I heard a woman screaming for help.\n\nWe took off running, although the wolves were much faster. The mom was screaming for her young boy as the river carried him downstream towards the falls. The poor kid couldn't swim, and the rocks in the river might kill him before the falls had a chance to finish the job.\n\n\"GET BELOW HIM AND GET READY TO GRAB ME,\" I screamed in my head to Lance as I ran full-speed for the river. With a graceful leap, I splashed into the river and started swimming towards the helpless child. I reached him quickly, my teeth grabbing onto the collar of his jacket as I turned back to shore.\n\nThe fast spring currents swept me farther downstream as I fought to get us back to the riverbank. I looked around frantically for a fallen tree, a flat rock, or ANYTHING to get out of this current. I didn't see anything, and my paddling wasn't getting me anywhere.\n\nThis was going to hurt.\n\nCh. 59\n\nSpider Monkey's POV<br >Arrowhead Pack House<br >Six Days Earlier\n\nVic woke me up from my nap, spoiling a hot dream about us on a deserted island. \"Frank and Colletta are just pulling in, and they want to talk you your team right away.\"\n\nVic woke me up for work? Dang it, the dream was just getting good! I blinked my eyes as I checked the time, groaning because it had only been an hour. \"Don't they need to relax and eat for a while first?\"\n\n\"No, they slept on the plane. Come on.\" He helped me up, and I went to the bathroom right away. Bathroom trips were frequent as my pregnancy advanced, and I rarely slept more than four hours straight. If I didn't wake for the bathroom, my back was aching. I did my business, washed the sleep out of my eyes, and came back out. \"I don't know what they want, but Chase asked me to keep an open mind.\"\n\n\"That doesn't sound good,\" I said.\n\n\"It usually isn't. Come on.\" It was nice enough to go outside, and we weren't under lockdown anymore. The breeze off the cold lake helped wake me up as we went up the hill to the Pack House. We were among the last to arrive at the Alpha's conference room. Our entire computer team was here; Brian, Rick, Teri, and Claire. Frank Donovan was standing behind Claire's wheelchair.\n\nVic and I took our seats near the Alphas and the Pack leadership. Frank and Colletta Grimes sat at the head of the table, along with Councilman Nehemiah Pensky and Council IT Specialist Lisa Funk. Colletta looked around the room; she didn't look happy. \"I'm sorry to ask you here on such short notice, but a decision is required. I can't make it for you.\" Over the next twenty minutes, she and Frank laid out what was going on in Washington. I wasn't shocked at the scope of the rot, not after all the government computers I'd hacked. Every time I kicked over a rock, the bugs would scurry away and hide somewhere else.",
        "The Sons Task Force was a recent example of how out of control the Federal government could be. Even though the Steel Brotherhood was the victim, the FBI's Task Force went after Chase and his family. 'Warrants? We don't need no stinking warrants!' They used the CIA to listen to our phone calls, obtained our bank records, hacked our medical records, and intentionally failed to warn us of an upcoming attack on our Pack. It only stopped because Chase and Colletta used the information I'd found to reach a deal with the Justice Department, giving us recognition and immunity.\n\nThe table was a little shellshocked by the time they finished describing what happened on their trip. \"The President is determined to root out this conspiracy, wherever it leads. She doesn't know who to trust outside of us; anyone who has been in the Washington machine was suspect. The President wants our assistance in the investigation. If we are to help, we will need everyone in this room to do it.\"\n\nWow. \"You want us to go to Washington?\"\n\nFrank nodded. \"There are multiple options I want to put on the table. The President would get you credentials, clearance, and access to the personnel and computer systems used by the Secret Service, CIA, and FBI. In the first option, we form our own Task Force and perform an independent investigation, using resources here and borrowed from American Packs.\"\n\nVic was shaking mad. \"Frank, you just said the Deep State would not hesitate to take out anyone in their way. Are you seriously thinking about placing our Packs in the crosshairs of the US Government machine? What happens to us if they kill the President or she loses the next election? You've put all our chips on one number.\"\n\n\"Yes. It is the most straightforward option but the one with the highest chance of success.\"\n\nI was not too fond of the idea, and I wasn't shy about saying it. \"I'm not putting our child in danger by openly going after these people. What other ideas do you have?\"\n\n\"We send a team to Washington to operate in secret. We monitor the workings of the Task Force, supplementing their information with our own. Like we did with the Sons task force, we look for actions or inactions that point towards members being part of the conspiracy. If we find anything, I pass it on to the President or someone she trusts.\"\n\nI shook my head. \"These people don't take a dump without scanning the bathroom for bugs, and they have aggressive computer technicians. We'd have to work from inside the building, probably from the computer rooms. It might be obvious if a bunch of us show up.\"\n\n\"And you'd need people in the Secret Service and CIA Headquarters, not just the Task Force,\" Claire Bennington said. \"The Task Force will only have the data they've brought from the other computers. They won't know what was left behind. You need to crawl through those computers from the inside if you're going to uncover anything.\"\n\n\"And that means putting undercover agents into the agencies at great personal risk,\" Frank Donovan said. \"That rules out Claire and Spider; they can't leave Arrowhead. It's too dangerous.\"\n\n\"I agree,\" Vic said. \"We've got a great team here, but they need to STAY here and stay undetected. We still have enemies in the Cartels and the FBI. I don't want us adding more.\"\n\nColletta looked around the table. \"Are you all in agreement?\"\n\n\"Rori agrees as well,\" Chase said. \"They stay.\"\n\nFrank's shoulders relaxed. \"I'll inform the President that the investigation the Task Force does will be the only one. The next question is this; should we get involved from here, or stay clear of the whole mess?\"\n\nChase leaned back in his chair. \"If they succeed in killing the President, we lose our best ally in the government. It's not possible to go back in hiding anymore. It is in our best interest to help her.\"\n\n\"I agree,\" Frank Donovan said. \"I swore to support and defend the Constitution against all enemies, foreign and domestic. This conspiracy is the biggest domestic threat of our lifetimes.\"\n\n\"What can we do?\"\n\n\"We work from the outside in,\" I said. \"The Cartels, the CIA agents who tried to take Maria, the black site workers, and the weapons. If we uncover something, we act on it ourselves or pass it on. Either way, we aren't working for anyone but ourselves.\"\n\n\"If you can get us data Spider can't hack, we can do independent analysis,\" Claire said. \"We can be a check on the official investigation.\"\n\n\"What would you need,\" Frank asked.\n\nThis part was easy. \"Lots of people. I need more hackers, data analysts, investigators, forensic accountants, former field agents? They need to be discreet and trusted, though. It does no good if we get infiltrated.\"\n\nFrank Donovan perked up. \"Frank, you and I both know people with extensive knowledge of the Cartels. Good people, now retired, who know how to keep their mouths shut.\"\n\n\"A budget,\" Claire said. \"The people we need won't be cheap, and they'll have to live and work here at the Pack, preferably in the Beta House.\"\n\n\"Money is the least of our worries,\" Chase said. \"If I know our Spider Monkey, she'll turn a Cartel investigation into a moneymaking venture.\"\n\nI had to smile at that; I was good at making other people's money disappear. \"You do need a bigger pool,\" I said to laughs.\n\nIt didn't take that long to bring the team together. The Pack did a quick repurposing of the basement and my office, turning it into office space. We filled up our guest rooms, and others stayed in the Pack House or with other members. My team now numbered twenty-seven people, from young hackers I knew to retired agents.\n\nFrank shuttled back and forth to Washington, bringing us updated information from the Task Force and carrying back our suggestions. He was the only person we dealt with directly; since he was still a senior agent in Homeland Security, there wasn't much he couldn't get.\n\nIt was a race for time, and I liked our odds.\n\nCh. 60\n\nLance Skollson's POV<br >Pigeon River, US/Candian Border\n\nI took off running with the other wolves when we heard the frantic screams from downriver. \"Keep an eye on Maria in case this is a trap,\" I sent to the other Pack members as we ran.\n\nIt was no false alarm. A frantic mother was working her way along the rocks, trying in vain to keep her son in view as the swift currents swept him downstream.\n\nFive of us ran past her at full speed, staying to the trail well back from the river's edge. Suddenly, a voice pushed into my head, a voice I recognized. \"GET BELOW HIM AND GET READY TO GRAB ME,\" Maria shouted into my mind.\n\nI almost stumbled from the shock, as Maria didn't have a Pack link. It was her, though, and I glanced back to see her leap from a rock and into the river. \"Maria went after the boy. We're only getting one chance at this, so keep going until we find a good spot to fish them out,\" I sent to everyone.\n\n\"We will get her back,\" Tony promised. We had to run almost a quarter-mile down the trail to get far enough ahead of them and find a good place. The river widened, with large boulders in the stream forming chutes between them. We shifted back, needing our arms and legs for this next part.\n\n\"Keep swimming towards our side. We're going out into the river now,\" I sent to Maria, hoping she'd hear. I could see her coming towards us with the boy held in front of her as she swam frantically across the current.\n\n\"I'm so tired,\" she said. \"I don't know if I can make it.\"\n\nMy wolf didn't like this a bit. \"My mate can do anything. I'll catch you, my love. Keep going a little longer.\" Mate? My wolf chuffed in agreement. She was OURS, and we would get her safe or die trying.\n\nWe formed a human chain stretching from the shore across the first stretch of water to the car-sized boulder. I was standing as close as I could to the fast water with my left arm held tight to the human chain. I could see Maria's brightly colored fur as she bobbed her way downstream, and I could feel the pain as she hit rocks. \"Almost there, baby. Swim with everything you have, and I'll catch you.\"\n\n\"I'm sorry, Lance. I love you.\"\n\n\"Swim with everything you have.\" She was coming towards me quickly; I reached out as she shot by, grabbing at the fur on her neck. I caught the tracking necklace with two fingers, and I gripped that tight as their weight pulled me off the back of the boulder and into the water.\n\nI ignored everything except the grips on my two hands. I could feel the others pulling us towards the shoreline, and I started swallowing water as I struggled to keep my head above water. I kept my grip as they hauled me up on the rocks. \"We've got them,\" I heard, and that was when I finally let go.\n\nI was on my hands and knees, catching my breath, as I watched the others carry the boy and my mate up onto the grassy riverbank. \"Maria?\"\n\n\"She's unconscious but breathing,\" Colleen said. \"The kid isn't.\" I moved up next to Maria, cuddling up to her fur. The river was barely above freezing, and I knew she'd exhausted herself. I held her in my arms, trying to warm her as best I could.\n\n\"Starting compressions,\" I heard from farther up the bank. Glancing that way, I could see Monica starting CPR on the boy. He looked half dead; his face was blue except where the blood dripped down from his hair. I could hear another Pack member on a cellphone, passing information on the victims to the 911 operator.\n\n\"Timmy!\" A frantic voice was coming from upstream, and I saw his mother running as fast as she could, with the human members of our group surrounding her. \"Oh, GOD! TIMMY!\"\n\nThe boy started coughing during the rescue breaths, spitting the cold river water out of his lungs. Monica rolled him on his side so the water could come out and verified he was breathing again. He started crying, and his Mom pulled him into her lap. \"He's bleeding,\" she said as she checked him over.\n\nMonica handed him a shirt as our people started handing out shirts to the naked werewolves. A crowd was forming, mainly tourists, and almost all of them had their cellphones out. \"Hold that over the cut,\" she said soothingly. \"An ambulance is on the way. We need to get him down the trail to the parking area.\"\n\n\"Thank you,\" she said. \"You people, you are werewolves?\"\n\n\"Yes, from the Arrowhead Pack,\" Monica said.\n\n\"That big cat saved my boy!\" She looked over at Maria in cat form as one of the tourists helped wrap her son in a blanket. \"Is she all right? Why didn't she shift back like you did?\"\n\nI answered as I pulled my clothes on behind a towel held by another Pack member. \"She can't change until she wakes up,\" I said. \"You should get going. Let Monica and the others help carry him down the trail to the ambulance.\"\n\nShe wasn't willing to let her boy go yet, but at least she started moving. Three of our people went with her, along with some of the tourists.\n\nTony was drying Maria with the towel as I finished dressing. \"What do we do with Maria?\"\n\n\"Take the blanket, we'll carry her down on that,\" I said. We set the picnic blanket next to her, carefully lifting her into the center. One of us took each corner, and we took off at a jog down the trail. I was getting more worried with each passing moment she didn't wake up. My wolf was going nuts, and I had to force him down to stay in human form.\n\n\"We're at the visitor's center now,\" Monica sent me a few minutes later. \"There's a car from Customs/Border Patrol here, plus a Park Ranger. The ambulance is still twenty minutes away, so they are talking about putting him in the cruiser and heading south to meet them.\"\n\n\"That sounds like a good idea. What about Doc Olson?\"\n\n\"Alpha Michael is arranging a helicopter to bring him up here.\" That was a better solution; I could just imagine the reaction if we brought a hundred-pound jaguar into an emergency room. \"We've also contacted the group in Thunder Bay; they are on their way back with the van.\"\n\nWe finally got to the trailhead, running across the grass to the Visitor's Center. We brought Maria inside, setting the blanket down on the carpeting in the heated building. She was still breathing, but her pulse was weak, and she wasn't waking up.\n\nMonica came in with her cellphone, which had Doc Olson on speakerphone. He guided her through doing the basic checks; we didn't find any broken bones, but there was a bump on the left side of her face where she must have hit a rock. It was a miracle she held onto the kid's jacket while getting banged around on the river. \"Get me more towels,\" I barked.\n\nOne of the Brothers handed over a stack of souvenir Grand Portage State Park beach towels. We used them to dry Maria off as best we could, then covered her up with dry ones.\n\nShe still hadn't woken when I heard the helicopter landing on the grass next to the building. Doc Olson got out with his emergency bag while one of the warriors carried a stretcher. The rest of our group was here, and Chase had done what he could. Maria likely had a severe concussion, perhaps a broken skull.\n\nIt took them less than five minutes to get an IV going and load her into the helicopter. \"I have to go with my mate,\" I told Chase.\n\n\"Give me your keys,\" he said. He tossed them to the Oxbow Lake warrior. \"Go. We'll see you in a few hours.\"\n\n\"Don't mess up Maria's new ride,\" I told him. I ran to the helicopter, taking the co-pilot seat since Doc had the back with Maria. We lifted off, and I barely looked out at the spectacular scenery from my first helicopter ride. All I could do was look back at Maria and worry.\n\nShe woke up just before landing. \"Don't move, and don't shift yet,\" Doc told her. \"You're safe. We're in a helicopter heading to Oxbow Lake.\"\n\n\"Lance?\"\n\n\"I'm here, love. You did it. You saved that boy.\" I smiled as I looked back at my mate. MY mate.\n\nDoc talked to me over the headset. \"Talk to her, Lance. I need her to stay awake.\"\n\n\"I am. I'm mind linking with her right now.\"\n\n\"Don't be silly. Jaguars don't have a mind link.\"\n\n\"Mates do,\" I said with a big smile. \"You were so brave, Maria. You scared the hell out of me today.\"\n\n\"Sorry, not sorry,\" she replied. \"You wolves can't swim like me.\"\n\nWe kept talking for the rest of the flight. Maria was lucky; her body was a mass of bruises from hitting the rocks, but x-rays were clear. Doc let her shift but put her on bed rest and concussion watch. I happily tended to my mate overnight and the next day until Doc said she could return home. She was disappointed not to be riding but understood why. She was still having headaches and dizzy spells, though the double vision had stopped.\n\nThe entire Arrowhead Pack turned out to welcome their hero home. As is so common these days, ten people started recording videos for every brave person who helped out. The videos went viral, although the broadcast versions blurred out our naked parts after the shift. The boy we saved and his mother was interviewed on television, thanking the \"werewolves and werecat\" who bravely went after her boy after he slipped off the rock into the roaring water. The news report even went back to the river, talking with them about what happened. Since I wasn't available, Chase talked about how proud he was of his Pack members and Maria for what they had done.\n\n\"Welcome back, Maria,\" Chase said as he embraced her.\n\nI could sense something shifting, then Rori spoke over the link. \"Welcome to the Arrowhead Pack, Maria,\" she sent.\n\n\"Thank you!\" From the looks on everyone's faces, they'd heard her too.\n\n \n"
    ],
    "authorname": "partwolf",
    "tags": [
        "pack",
        "werewolf",
        "werecat",
        "jaguar",
        "werejaguar",
        "alpha",
        "luna"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/aztec-treasure-ch-51-60"
}