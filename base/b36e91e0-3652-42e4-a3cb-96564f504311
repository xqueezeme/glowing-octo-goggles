{
    "title": "Once you go Black.. Pt. 02",
    "pages": [
        "--\n\nThis story will make more sense if you read The first part, there are important items there that tie things together.\n\nAlso, thank all of you for the likes and wonderful feedback on the first part of my 'Once you go Black' story. I had fully intended to end the story there, but that has turned out to be my most popular story so far and I felt like there was so much more that could be added, so here we are.\n\nAlso, please note this is *not* a cuckold story.\n\n--\n\nAmy gasped and closed her eyes. I knelt next to her and watched as Ray's thick black cock continued to disappear into her sopping wet pussy. I'd be lying if I didn't admit there was a part of me that felt jealous, Amy moaned, and then Ray's balls were resting against her swollen pussy lips.\n\n'Oh fuck, that cock is stretching me out..' she sighed, then opening her eyes, she looked at me and asked 'How does it look Baby?'\n\nYeah, I was feeling jealous, but I didn't have any right to. It was my choice to start hormone replacement therapy, the Doctor made it clear that achieving orgasm may become increasingly difficult, and that is exactly what happened. It had been several months since I'd been able to have an orgasm, it'd been longer than that since I'd penetrated my girlfriend Amy. We'd tried using a dildo on me to see if I could have a 'prostate orgasm' and while it felt like I'd been close to having something happen, it felt like the stimulation had always come up a bit short. After several tries, I felt like the more we tried, the further I came to getting off.\n\nAmy suggested that we find a guy to fuck me, that maybe a real live dick would be what I needed to finally have a 'P-Gasm', we watched some videos and one in particular of a dark-skinned Black man fucking a cute blonde crossdresser really excited both of us, if I'm honest, I think it excited Amy more than myself, as she suggested that we find a Black man to fuck me.\n\nRay fit the bill perfectly, he was older than either of us, solidly built, smart, respectful, he has a big cock, and definitely knows how to use it. I struggled to accept his size, but his patience, and my determination to 'cum like a woman' paid off, and less than an hour ago, he brought me to the most powerful orgasm I'd ever experienced. I knew just as soon as I'd caught my breath, and he emptied his balls into my ass, that I'd want to see more of Ray.\n\nThis complicated things, you see I don't really have any desire to have a relationship with a man. I love Amy, I suppose you could say I'm a Trans Lesbian. The whole idea of introducing a man into the picture was a means to an end. It was just an experiment to see if I could cum.\n\nThe experiment was successful.\n\nBut while Ray was fucking me, Amy had heard my moaning, and came to our bedroom doorway and watched. Seeing Ray fucking me must have reminded her of the Black guy in the video fucking that blonde crossdresser, although I'm neither blonde, nor a crossdresser. Still, it excited her to watch her girlfriend getting fucked for the very first time, and now she was straddling my Lover and had his wonderful cock buried in her pussy.\n\n'It looks..' I paused, I had a lot of conflicting emotions. 'It looks sexy..' I managed to say.\n\nWhy should I be jealous? This wasn't one of those cuckold situations you see so many videos and stories about. Amy didn't have any fantasies about making me watch her fuck Black Bulls, at least I didn't think she did. I'd have to ask her about that later, but right now, I just watched as she slowly rose up on Ray's cock, and then sank back on it, as she began fucking him.\n\nI could have stopped taking the hormones, and my own penis would have begun functioning normally once again, but I chose not to. I just had a mind-blowing orgasm, so why was I jealous that Amy would soon be having one of her own shortly?\n\nThe truth is, they looked incredibly sexy fucking. Ray was thrusting up into Amy's pussy, and she was making these hot little noises, I watched her sliding up and down his big cock, which was now glistening with her juices. It excited me, although my girl-cock remained soft, I think that made it all easier to accept. If I would have looked down and seen my own cock at full mast, it probably would have caused an entirely different set of confusing emotions.\n\nI looked back at Amy and she was gazing at me, her eyes looked half-closed, and she had a lazy smile on her face. Again, more fucked up emotions, I was trying to get to terms with this unexpected development.\n\n'Baby, his cock feels soo good, It's going deeper than any I've ever had before, he's stretching me out more than any other cock. It's sooo good.'\n\nGreat.. Ray was clearly hung better than I ever was, but now I felt like she was having better sex with Ray, than she ever had with me, even back when my penis was working normally.\n\nTheir sex noises became more frequent, and I could tell they were going to both orgasm soon. I wondered if Amy would be getting off as powerfully as I had just a while ago, I suppose I hoped she wouldn't.\n\nI was wrong.\n\nI watched as she started to cum, and her legs began shaking uncontrollably, She froze her movements as her orgasm tore through her body, but Ray took that as his cue to powerfuck my girlfriend until he got his nut. He grabbed her hips and slammed upward into her, and a few moments later thrust upward, and let out a deep growl. I was close enough that I could see his heavy balls tighten up, and knew that he was filling her pussy with his cum.\n\nMore jealousy, although I wasn't sure if it was because he came in her, and not me, or if it was because he got her off as violently as her orgasm had appeared. Amy and I didn't fuck, we had 'lovemaking', it had largely been kissing, sucking each other's breasts, and finally me getting her off with my mouth, when she came from that, it was beautiful, the orgasm she just had was animalistic.\n\nAmy rolled off of Rays softening cock, and lay on our bed next to him, she let out a contented sigh, and then giggled 'That was incredible Ray..'\n\n'Baby, I couldn't have imagined how lucky I've been tonight, you two beautiful, sexy women have just absolutely rocked my world.' Ray said.\n\n'Oh, I think you did a little rocking of our worlds too.' Amy said.\n\nI didn't know what to say, and decided I would just thank Ray for making my hopes of having an orgasm a reality when Amy continued 'Kim Sweetheart, would you like to clean us up a little, we're kind of a mess...' she had pressed a couple of fingers into her gaping pussy, and lifted them, covered in Ray's cum.\n\n'Oh shiiit!' Ray said, and lifted himself onto his elbows, and looked at me with a huge grin on his face. 'Kim, you're my kind of woman!'\n\nI wasn't interested in licking Ray's cock, or sucking his cum out of Amy's abused pussy, but what was I going to say 'Yeah, um, remember that whole thing about me telling you I wasn't interested in guys?'\n\nWe'd definitely be having a discussion later.\n\nI got up, and knelt on the bed, and took Ray's cock in my hand, then gave Amy a look that should have made it clear this was all outside of any expected play. I opened my mouth and sucked his sticky cock into my mouth. I could taste Amy's juices, but the more powerful taste was Ray's cum, salty, and something else, I couldn't place it.\n\nI felt Ray's fingers move into my hair, and he encouraged me 'That feels wonderful Kim. Christ, you're so sexy doing this.'\n\nSurprisingly, that made this seem not so.. well, it wasn't so bad anymore. I looked over at Kim as I continued to clean Ray's cock, and she watched me, her expression seemed as if she was quite content.\n\n'Baby, as good as your mouth feels, I think it's a bit too soon for me to go for another round.' Ray said.\n\nI was half disappointed, I'd already started thinking of how nice it'd be to have him fuck my ass and cum inside me a second time that night, only this time, I'd be damned sure to have Amy suck his cum out of my ass.\n\n'That's too bad Ray..' Amy purred 'Baby, do you think you could clean me now?' she said to me.\n\nI didn't say a word, instead, I moved between Amy's legs, and watched as she dipped her fingers back into her pussy, and came away with Ray's cum coating them. She slowly brought her fingers to her mouth, and licked them clean while watching me 'He tastes delicious..' she said.\n\nI moved my face to her pussy, and noticed it still looked a mess. I began to lick her pussy, and all of Ray's cum that had dribbled out of her, Amy began making familiar noises as my mouth closed around her clit and sucked gently. she similarly grabbed my hair and held me to her crotch. I could feel Ray moving around, and positioning himself behind me. I wiggled my ass for him, in invitation. I wanted Amy to watch him fuck me while I at his cum out of her pussy. But instead, he put his hands on my hips and then began to softly kiss my asscheeks.\n\nI lifted my cum covered mouth from Amy's pussy and said 'Oh Ray Baby, that feels nice..' then grinned at Kim, intending on making her jealous.\n\n'As I said, Baby, I think you stole this ass off a Black girl.' then suddenly he slapped my ass and moved off the bed. 'Ladies, tonight has been incredible, but I've got an early day tomorrow. Kim, you have my number, I hope you'll call me, I'd love to see you again.'\n\nI got up off the bed, and walked to him, he held his arms out, I wiped any traces of his cum from my face and pulled me into a close embrace. His hands moved to either side of my face, and his gaze settled on me. 'You're an incredibly beautiful, sexy woman, and I can't tell you how happy I am that I was able to give you that orgasm tonight.'\n\nI don't know why, but I started to cry. He didn't have to say any of that. He could have simply said thanks for the fun and left, but those few words, him telling me that he was happy he gave me my first anal orgasm. Something changed inside for me, and I knew I'd want to see him again. I knew I'd want him to fuck me again.\n\n'Amy, that was incredible, Kim's damned lucky to have you girl!' Ray said and got dressed. I threw on an oversized t-shirt and walked him to the door, opening it, he turned to me and smiled 'I really hope you'll call me again. It can be just the two of us if you'd like.' he grinned.\n\nI pulled him into another embrace and a lingering kiss. I heard the neighbors fidgeting next door, but I couldn't give a damned, in fact, I wanted the world to know that my Black Lover had just fucked my brains out, and made me cum like a woman.\n\nRay walked down the drive, and I called after him 'I'll call you soon Lover..'\n\nHe turned and grinned 'You better.'\n\nThe next day, I got home from work before Kim. I thought about all the things I wanted to discuss with her. The truth is, things were uncomfortable when I came back into the bedroom after saying goodnight to Ray. We didn't talk about what had happened, and I think maybe Amy realized both her fucking Ray and putting me on the spot after they'd finished fucking was out of line.\n\nI started dinner and considered calling Ray, now that I knew I could cum, I wanted to, a lot. This caused me to do a bit of reflection though. I enjoyed the sex, I loved the sex. I hadn't ever had any desire to fuck a guy previous to all of this, but I had to admit, I had a great time with Ray, after I adjusted to the size of his big cock, it felt incredible, and was nothing at all like the dildo we had been playing with. So what did this mean? It certainly wasn't gay to want to have a man fuck me, but it was surreal. I still loved Amy, but I was pissed at her. Still, Ray pushed all the right buttons, and another item that made us fucking seem even hotter, is that he's a Black guy, I mean, he fits the stereotype right? A big, strong Black guy with a big black cock. I liked that, I liked that he was fucking ME with that big black cock of his. I particularly enjoyed the fact that this was really, entirely Amy's idea. She had the stronger desire to find a Black guy to fuck me than I did, but now that I'd been with Ray, I knew it wasn't a mistake. I liked the fact that he came deep inside of me last night, and that when I woke this morning, my ass was hurting, it made going to work feel sexy, I wanted to tell all the women there 'Guess who's getting the BBC now?' Fuck, he was in my head..\n\nAmy got home, and we ate without talking much, when we finished, she gathered up the dishes and began cleaning up.\n\n'So, umm.. we probably should talk about last night.' I finally said.\n\n'Yeah.' she answered without turning towards me.\n\n'I wasn't expecting some of that.' I was trying to pick my words carefully.\n\n'You mean, me fucking him? Amy said, turning to face me.\n\n'That's definitely one of the things I wasn't expecting.' I said.\n\n'I didn't expect to do that, I didn't plan that at all, I hope you know that.' Amy said she didn't seem nearly as upset about this as I would have expected.\n\n'And yet...' I didn't finish.\n\n'You weren't seeing what I was seeing, you two looked so fucking hot, and you started crying because his dick was bigger than you expected..' she shook her head 'I just wanted him to slow down, I wanted you to be able to enjoy it, I knew that if last night didn't go to plan, you'd probably stop taking the hormones, and I know you don't want to stop.'\n\n'He did slow down tho, but you were suddenly there, and you were kissing him, and I know it's fucked up to think that it's okay for me to fuck some guy and that you cant, but Jesus Amy!' I figured it'd be best to just get it all out in the open. 'If you would have talked to me about maybe fucking him before you did, it just felt like you ambushed me more than once last night, and I thought we communicated better than that..' I shook my head 'Oh, I've never been stretched out like this, I've never felt anybody so deep inside me like this..' what the fuck is that all about?' now mad, I may as well get it all out in the open 'Kim Sweety, could you come over here and suck Rays cock and clean our cum off of it? Oh and then can you suck his cum out of my pussy, that's never been fucked so good??!!' I was livid.\n\n'I'm sorry.' Kim said.\n\n'You're fucking sorry..You fucked me up last night, and the part that I still don't understand is why you had to do all of that, just spur of the moment shit that's feels like it was pretty damned selfish to me.' I was still mad, but not ready to scream anymore.\n\n'I know, I fucked up. I don't want to make excuses, I fucked up.' Amy said, and I could see her eyes begin to water.\n\n'If you would have said 'Hey if things get really exciting, how would you feel about me joining you guys?' I wouldn't have known what to think. I was so jealous while you two were fucking. I was so jealous hearing you tell him how his dick was so big, and how it stretched you out more than anyone or went deeper than anyone.' I can't believe you said that!' now I was crying.\n\n'Kim, it's true. Ray has a bigger dick than anybody I've ever been with, and it was fucked up for me to say that last night. But we... we're.. look, I know you'd agree that we're girlfriends.. you aren't my boyfriend anymore, right? So, why are you mad Ray's dick is bigger than yours was?' she asked.\n\nI hated that she was being honest, and speaking the truth. My dick hadn't worked for months, and I know it wasn't fair that any orgasms she had in that time happened either from my mouth or my fingers. I know it wasn't fair that because I chose to disable my own penis, it also prevented her from having intercourse, and why should I get upset that she would admit Ray had the biggest cock she's ever experienced? I don't know, but it hurt to hear that, and even if I stopped the hormones, and a few months from now fucked her brains out all night long, it wouldn't make my dick bigger than Ray's. Now that she got fucked again, after all this time, maybe she wanted more of that..\n\n'It felt like you wanted me to watch him fuck you up close like you wanted me to just sit there, and be your cuckold. It feels like ever since we watched that video with that Black guy fucking that crossdresser..' I shook my head, I hated this, I hated everything that was happening at that moment. I hated what she might say next.\n\n'NO!' she cried. 'I would never want that. I just felt so happy, and it turned me on so much watching Ray fuck you, and how you were so into it. We didn't think you liked guys, but last night, it felt like you were definitely liking Ray, at least. When he made you cum, when he made you cum like a girl, my pussy was dripping, I loved watching you, my girlfriend getting fucked, really, for the first time in her life, and yeah, that video was fucking with me. When Ray put you on your side and was fucking you from behind, and your penis was flopping around, like in that video, and then when you were cumming all over, like in that video.. My God, it was so hot. I just wanted to know what that cock felt like. I was afraid because he's really big, but I knew I wanted it inside me. I promise you Kim, I won't let that happen again, I got it out of my system, and I won't do that again. I know you and Ray are going to keep getting together, and I'm so happy for you two, but you mean so much more to me than he does than, well than his cock does..' she finished, and wiped her tears away.\n\n'That's not fair.' I said.\n\n'I know, and I'm so sorry, I won't ever..' she started.\n\n'No, it's not fair that I can get fucked, and you cant.' I said, my heart was still twisted up in a knot, but it was the truth.\n\n'I don't want to get fucked, I got it out of my system, I'm good now.' Amy sniffled, and I wondered if she really felt that way. Before I transitioned, we had an active sex life. Back then, I didn't have a 'penis', Amy would call it my dick, or my cock, but now I had a 'penis', it stung, but it was true, I had a penis that was useless for sex, but since I became her girlfriend, could she just suddenly swear off having intercourse? I wished I could still do that, but it wasn't a reality.\n\n'I love you Amy, more than anything, but please, all sexxed up or not, please, no more surprises like that.' I pleaded.\n\n'I love you to Kim, and I'm soo sorry!' she apologized again.\n\nWe hugged, and kissed, and soon after we were both naked. I had licked her pussy into a wet mess and pulled the black dildo she'd bought for me out of the nightstand. I slipped it inside her, it seemed to fit more easily now, it may have been my imagination, but we both knew Ray's cock was a bit bigger than the dildo. I sawed it back and forth into her pussy, and her juices turned to a frothy coating that covered the toy. I had to admit, Amy looked extra sexy with a big black cock fucking her. I started to think about a plan, just in case she changed her mind about wanting to get fucked anymore.\n\n'So, are you going to call Ray?' Amy asked as we lay next to each other, she must have expected I would, we'd played around, and I got her off, and then playtime was over. She knew I still strongly wanted to have my own orgasms.\n\n'I won't call him if it'd upset you.' I said.\n\n'It won't upset me, I want you to call him.' she said and began softly sucking one of my nipples.\n\n'I've got a bunch of mixed emotions, I mean, it was incredible to finally cum again.. But I don't know how I feel about being with a guy for that to happen.' I babbled without making a lot of sense.\n\n'You're just fucking him Babe, it's not like you're in a relationship, right?' Amy asked.\n\n'Well..' I paused, wondering what it really was. When Ray complimented me and told me how sexy I was, when he kissed me goodnight and asked me to call him, there was a part of me that wanted to be his girl. When we were outside of the coffee shop, and that older couple came past and gave us the stinkeye, it felt good to kiss him, the same when our neighbors saw me say goodnight. I wanted the world to see us together as a couple, I wanted the world to know that a sexy Black man was fucking me so good that he could make me cum from anal sex. I wanted to shout it out to the world and piss off as many people that would get pissed off in the process, God, this was exciting me..",
        "'ummm right???' Amy asked.\n\n'I love YOU, Amy.. A week ago, the thought of giving a guy a blowjob would have turned my stomach. But last night, not only did I have a guy's cock in my mouth, I cleaned all of his cum off of it, and then I sucked all of his cum out of your freshly fucked pussy, and while I was doing it, it freaked me out..' I said.\n\n'And now?' Amy asked, her eyes were wide open and staring at me.\n\n'I liked it, and I think I'd like to actually give a proper blowjob, and feel what it's like to have a cock blow its load in my mouth.' I said with a grin.\n\n'What it's like to have a big, black cock blow its load in your mouth Baby?' Amy grinned back at me.\n\nI nodded at her and licked my lips.\n\n'You definitely need to call Ray girl.' she said, and circled my nipple with her tongue, and then closed her lips around it and began sucking once again.\n\nI called Ray during lunch the following day.\n\n'Hi Ray, it's Kim..' I said I wondered, did he have a bunch of girls calling him, anxious to arrange a time to have him fuck them.\n\n'Baby, I've been hoping you'd call, I've been thinking about you.' his voice was deep and so smooth.\n\nI wanted him inside me immediately.\n\n'I've been thinking about you too, do you think we could get together again sometime?' I asked.\n\n'Just you, or Amy too?' he asked.\n\nI felt the jealousy building up again, I guess I felt like less of a woman than Amy, naturally, he'd want her to join us, I remember fucking her when my 'penis' functioned normally, and she was an excellent partner, but I wanted Ray to myself.\n\n'I was hoping, it would just be me and you.' I admitted.\n\n'I'm glad to hear you say that Baby, Amy is a wonderful woman, but, I don't want to upset you, but that night, I wasn't expecting her to join us, and while I'll admit I enjoyed being with her, I really want to be with you, more.' he finished and there was a pause.\n\nI figured either Ray was just more into Trans Women, or maybe, would it be too conceited to think that he just enjoyed me more than Amy?\n\n'It was, complicated for me to watch you two together, we talked it out, but I'm happy to hear that you want to spend more time, with, just me.' I said and felt like how I'd imagine a schoolgirl must feel with her first crush.\n\nI realized then, that I still truly loved Amy, but I was really looking forward to Ray fucking me again, I wondered if that would change things between me and Amy.\n\n'Can you come to my place tonight?' Ray asked.\n\n'Yes, I'd love to..' I answered automatically, there it was, it would be happening again, tonight Ray would work his wonderful black cock into me, and the magic would happen all over again.\n\n'I'll text you my address, and Kim, you can pack an overnight bag if you'd like.' Ray said.\n\n'Pack an overnight bag?' he wanted me to spend the night? I didn't know what to say to that.\n\n'Okay Ray, I'm looking forward to it, is 8 tonight okay?' I asked.\n\n'Anytime you want will be perfect, I'll see you then Baby.' he said, and disconnected.\n\nWell, I decided I'd pack a bag, the thought of being with Ray, for as long as we'd like, not sharing him, and wondering how things would go, yeah, definitely packing a bag, but I'd need to stop at Victorias Secret after work, I had a few ideas for some special girly things I wanted to wear for Ray tonight.\n\nI arrived at Ray's apartment complex, a large, high-rise downtown, it was a beautiful building, and seemed very nice. He rang me up, and as I stepped out of the elevator, he was waiting for me.\n\n'God damned girl, you always look so fine!' he complimented me, and pulled me into an embrace, then moved his lips over mine, and slipped his tongue into my mouth. I felt so naughty, making out with Ray, anybody could walk by, the elevator may open once again, and cause its occupants to avert their gaze at the two passionately kissing.\n\nHe broke the kiss and took my hand, then paused and turned my hand and admired my nails.\n\n'Are these new? You didn't have this color last night.' he said.\n\nI looked at my long nails, with the high gloss black polish and grinned at Ray, 'I like this color, they remind me of someone.' I grinned and winked at him.\n\n'Anybody I know?' he grinned back at me.\n\nI nodded and followed him to his apartment.\n\nRay had a tastefully decorated apartment, from what I could tell, he lived alone and had far more room than any single person would need, still, everything felt expensive, it seemed as if a Decorator had been given a blank check and told to make the place shine.\n\nRay led me to the balcony and slid the drapes to the side, the view was fantastic, the only detractor was a similar hi-rise apartment just across the way, and slightly to the side. From the balcony, you could easily observe at least a dozen apartments and their occupants. I felt like if I lived there, I'd be spending plenty of time on the balcony 'reading a book.'\n\n'Something to drink Beautiful?' Ray asked.\n\n'Sure, umm, whatever you're having.' I answered and gazed across the way, watching the people in their apartments, it excited me.\n\n'Do they ever watch across the street too?' I wondered to myself.\n\nRay came back into the living room, and set the two glasses on a glass-top coffee table, then beckoned me to his beautiful dark brown leather couch.\n\n'Vodka rocks okay baby?' he asked.\n\nI nodded and sat next to him, actually, I was sitting against him.\n\n'So, the other night, that got a bit turned around.' he said. 'I know you and Amy are real close, and I don't want to mess with that, but Baby, I want our time together to be us, you and me. I hope you understand?' he was telling me he wasn't interested in pussy, he was trying to be gentle and tell me he didn't want to fuck Amy again.\n\nI liked that, it made me feel good, not just because I wouldn't have to worry about jealousy, but it made me feel special. I sipped my drink, and then leaned close, and looked at his full lips. Ray took the hint, and pulled me closer, kissing me passionately once again, I felt his hands move to my breasts, and begin softly squeezing them, and pushing them together.\n\n'Will they get bigger?' he asked softly.\n\nI nodded 'I think so, it takes time.'\n\n'Are you going to get the surgery?' he asked as he continued to play with my breasts.\n\n'I don't know, I guess I haven't thought too much about it. We just thought we'd wait and see how large they got, and decide from there.' I answered, a bit self-consciously.\n\n'Whatever you do, they'll be perfect.' he said, which made me feel better, and he kissed me again.\n\nI was seriously worked up, I wanted him, but I knew I had all the time in the world, I'd told Amy I wouldn't be home tonight, and I'd see her after work tomorrow. She smiled, knowing I'd be seeing Ray once again. I don't know how this wasn't making her insane with jealousy, but I couldn't worry about that right now.\n\n'Ray Honey, I want to do something for you.' I tried to sound as sexy as I could.\n\n'Baby, you ARE doing something for me right now.' he said with a grin.\n\n'What I mean is, I'd like to suck your cock.' I said and licked my lips.\n\nRay stood, and reached for my hand, he grinned at me and led me into the bedroom, where a huge (king sized) bed demanded attention. I wasn't sure when kind of wood the headboard featured, possibly teak, ornate carvings of dragons could be seen throughout. This wasn't something you'd find at IKEA. He led me to the bed and began unbuttoning my white satin blouse. I closed my eyes and did my best to remain calm. I was more scared of giving him a bad blowjob than I was of my poor ass getting wrecked by his big cock again.\n\n'Nice..' he said, admiring the white lace top shelf bra, it pushed my tits up and made them seem larger than they actually were, so far, so good. Next, he spun me around, and unzipped the black pencil skirt I wore, it fell to the floor and exposed the white lace garter belt, nude stockings, a white lace panty, and my favorite 4\" black pumps. I turned to face Ray, and he let out one of his low whistles as he looked me up and down. That made me feel good and gave me a bit more confidence, I told myself I knew what I enjoyed about blowjobs, I'd just do to Ray, what I used to like done to me.\n\nRay pulled me close again and said he wanted to eat me up, but before he could get any more ideas, I sank to my knees and began unbuckling his belt and getting his slacks pulled down. His cock was straining against his slacks until they hit the floor. I was now staring directly into the instrument of my salvation. As badly as I wanted to give Ray an incredible blowjob, at that same moment, I just wanted to bend over and let him use me. At the moment, I didn't even care if he caused me to orgasm again, I just wanted to feel him inside me. I inhaled deeply, and took in his scent, no, I had all night, there was no rush. Right now, I just wanted to give him my mouth, this would be the first time I'd ever actually given a blowjob, I've cleaned Ray and Amy's cum off his cock a few nights ago, but that wasn't a blowjob. If this went the way I was hoping it would, I'd be swallowing Ray's load soon enough.\n\nI looked up at Ray, and his eyes were glued to mine, he unbuttoned his shirt, and tossed it on the bed, then looked back down at me and said 'I want to feel those lips on my cock Kim..' I nodded, opened my mouth, and felt the head of his stiffened cock move past my lips.\n\nIt was happening. I don't know what happened to the woman that had zero interest in men a week ago, but as Ray eased more of his thick black cock into my mouth, all I could think of was how right it felt. Sure, I felt like a dirty whore at the same time, and I had a girlfriend I loved very much sitting alone in our home at that very moment. But there was something about kneeling in front of him, in my new lingerie, trying hard not to gag as his hands pressed on the back of my head, urging me to take more of him into my mouth. I looked up at him, his smile told me he was enjoying what I was doing so far. I accepted the fact that I couldn't, no, I wouldn't go without this in the future. Was this the moment I allowed my feminine core to accept that I needed cock, to complete who I was? I sucked noisily on Ray's cock, I felt empowered by his moans and his continued pressing of my head to his crotch. I wanted all of him in my mouth, in my throat, but the harder I tried the more I gagged, and tears began to run down my cheeks, making a mess of my mascara..\n\n'I want more of it, but I don't think any more is going to fit.' I confessed, with a frown.\n\n'It's okay Baby, come up here and lay on the bed.' Ray suggested. He held his hands out to help me up.\n\nI lay on the bed, and he moved me around, I was laying on my back, and he positioned me so my head was hanging from the edge of his mattress, it felt weird looking at Ray's crotch from an inverted perspective.\n\n'Just fight your gag reflex Baby, if you can do that, you'll be able to fit more of me in your mouth like this.' he reassured me.\n\nI nodded and watched as he stepped forward and fed his glistening cock back into my mouth. It felt different like this, almost like it was someone else's cock. I felt him pressing forward and I began to gag. He stopped, and I tried to get used to him at the back of my mouth, I reached out and grabbed the back of Ray's thighs and controlled how much pressure, and how deep he was in my mouth, I quickly found exactly where too much was too much and felt like gagging, but I held my ground and fought the urge. Soon, I was able to take more of him, I felt his cock moving to the entrance of my throat, but no matter how badly I wanted him completely inside, this was as much as I could manage for now. I began pulling and pushing on Ray's thighs, encouraging him to begin fucking my mouth.\n\nHe understood this was still new for me, so he fucked my mouth gently, he kept giving me little compliments as his cock slipped in and out of my mouth.\n\n'Baby, this feels fantastic, you look so sexy like this, I have to go easy, I don't wanna cum yet.' he groaned.\n\nBut that's exactly what I wanted him to do. I needed him to cum in my mouth, and I needed to swallow all of his load, I wanted him to know that I'd do whatever I could to satisfy him. I owed him. He woke this part of me, his cock had the ability to make me cum, so I wanted him to know, I'd do whatever I could, to make him feel as good as his cock made me feel. I encouraged him to continue, and I made the same kind of noises I'd heard so many porn actresses make while the administered sloppy blowjobs. Ray leaned forward and began fondling my tits once again, he slipped them out of the top of my bra and squeezed my nipples between his fingers, I wanted to beg him to keep that up, but there was this matter of his thick cock thrusting into my mouth. I was swirling around the head of his cock, but in this position, I couldn't easily get to the sensitive part on the underside of the head, Ray didn't seem to mind, because a few seconds later, he began grunting, and thrusting a bit harder.\n\n'Oh fuck.. gonna cum.. shit... oh fuck, where do you want it Baby?' he gasped.\n\nI didn't say a word, I just kept sucking his cock, and pulling him into me.\n\n'Shit, I'm gonna.. fuuuck!!' and he pressed in as deeply as my mouth would allow, the first blast hit the back of my throat and was hot, certainly hotter than I expected, and then it was in my stomach, each additional blast followed the first, I left a good bit of his load in my mouth as he pulled his cock from my mouth and collapsed in bed next to me. I rolled over and smiled at him.\n\n'Goddamned baby, that was incredible!' he panted.\n\nI opened my mouth, so he could see his cum pooled on my tongue, I closed my mouth and swallowed, and grinned wickedly at him.\n\nRay could only groan.\n\nWe lay in bed for a while talking, he asked me how long I'd been transitioning for, and confessed he had a major thing for Transgirls. He had been in a relationship with one while he lived in LA, she'd gotten the porn star tits, the bimbo lips, and the obligatory tattoos all over, by the time he'd accepted a company transfer here, she'd already started doing porn. He didn't seem particularly put off that she'd started doing porn, he just explained that the woman he'd met, and the one he left were two entirely different people. He wasn't seeing anyone at the moment, and had answered my ad, I'd been the first TransGirl he'd been with since moving here. He said he didn't know how to explain it, and that he wasn't interested in sucking dick, or anything like that, but he felt like Transgirls were just sexier, he repeatedly complimented me on my dedication, and courage to change my exterior to match my interior. He told me how sexy he thought I was several times, and I just felt so comfortable with him, I didn't feel ashamed of what was between my legs, I didn't feel like 'almost' female with Ray. I was trying hard not to fall for him, but I was failing.\n\n'Baby, I have an idea, it's pretty naughty tho..' I purred to my Lover.\n\n'mmm, I like naughty, what did you have in mind sexy lady?' he asked.\n\n'So, the view you have, all those people across the street, I was thinking..'\n\nFive minutes later, I was leaning up against the balcony window, wearing nothing but my new lingerie, and Ray began working his cock into my ass from behind. All of the lights were on in his living room, and anyone across the street living in that hi-rise could easily see the white woman getting fucked by the big, strong black man behind her. I had never felt naughtier in my entire life.\n\nI scanned through all of the apartments that had their lights on, hoping someone could see us, but they were all going about their lives, watching TV, doing their dishes, reading a book on the couch, but then I saw a woman standing in front of the sliding door of her balcony, with the light behind her, I couldn't be sure if she was watching us, and at that moment, I felt Ray's cock slip past my sphincter. I winced in pain, but it was nothing like the first time that brought tears to my eyes. I liked that it hurt, that he was opening me up. I knew that the more we did this, and there would definitely be more of this, the easier t would be for him to work that wonderful cock into me. That appealed to me, I wanted to be stretched out, it felt like that would somehow further establish my femininity, but at that moment, I felt Ray's heavy balls come to rest against my own, considerably smaller scrotum as I bent over and relished the full feeling.\n\n'How's that feeling Baby?' Ray asked.\n\n'It feels incredible, I love the way you fill me up.' I purred at him, and wiggled my ass, encouraging him to start fucking me.\n\nI hoped that he'd be able to do whatever magic he'd managed the other night, and put me over the edge, with another prostate orgasm, but as he began fucking me, I just relaxed and enjoyed the sensations.\n\n'Damned, your pussy feels so good, I could fuck you every day, all day..' he groaned as he thrust deep inside of me.\n\nDid he mean that? Every day? Was he feeling what I was feeling? I hated the thought of maybe, Amy, playing less of a role in my life, maybe not playing a role, fuck, that was so selfish of me, but Ray made me feel like a different person, with Ray I felt a bit wicked, I attributed that to him being Black and the old taboos. Pretty White girls avoided big scary Black men. But here I was, bent over against his balcony window, getting properly fucked by a Black man. I couldn't think of anything I've ever experienced that felt more right.\n\nI glanced back to the apartment across the street, and saw the woman that I'd thought may have been watching us, had moved to a loveseat and had removed her jeans, she was very clearly rubbing her pussy, and also very clearly watching us intently.\n\n'Ray Baby, there's a woman in the apartment across the street watching us..' I moaned.\n\n'Uh huh, playing with her pussy..' he said as he continued to fuck me.\n\n'My God, I feel so dirty right now, so naughty..' I was panting.\n\n'Are you my naughty girl?' he asked in a sex-fueled voice.\n\n'Yes, I'm your naughty girl..' I said and wiggled my ass more.\n\nI felt his hand slap my ass cheek, and I jumped. A moment later, he pulled his amazing cock out of me.\n\n'Don't move, stay exactly where you are..' he told me.\n\nI stayed bent over, watching the woman masturbate, it was empowering. Some completely anonymous woman thought our fucking was exciting enough that she had actually begun masturbating while watching us. I felt like a porn starlet getting fucked on a stage that an entire apartment building could see.\n\n'Alright Baby, it's time to get your freak on..' I heard Ray chuckle and took his position behind me once again, and easily slipped his cock back into my hole, and sank forward, until his cock was once again, balls-deep inside me.\n\n'Who is my naughty girl?' he asked.\n\n'I am Daddy..' I cooed.\n\n'That' right Baby, and who likes Daddy's big black cock deep in her pussy?' he kept going.\n\n'I do Daddy, I love your big black cock in my pussy, so deep in my pussy..' I gasped as he began fucking me more urgently.\n\n'Who sucked Daddy's cock real good and swallowed all of his cum just a bit ago?' his voice was becoming more urgent now.\n\nI thought he might be close to cumming, it felt like maybe I was getting close too, I kept my eyes on the woman watching us and grinned as she thrust her hips upward while she rubbed her pussy. In a way I felt bad for her, the poor thing, having to masturbate while she watched us, while I had Ray's wonderful cock inside me. I wondered for a moment what she'd be doing right now if I were sitting on Ray's leather couch, and watched him fuck her. I knew she'd be enjoying it as much as I was.\n\n'I ate your cum Daddy, I'll always eat your cum like a naughty girl.' I answered in a lust-filled voice, I felt the tingling, and pressure building behind my penis, it was about to happen again.",
        "'Who is gonna cum from Daddy's big black cock?' Ray already knew the answer.\n\n'I am Daddy, oh fuuck, I'm cumming, fuuuck!!' I slammed my ass back on Ray's cock and felt spurts of cum shooting from my soft, small penis. My body felt like I'd lost control of it, I was jerking back and forth, and crying out.\n\n'That's right Baby, and now Daddy has something for that hot pussy of yours..' Ray's voice had changed, it sounded more primal, darker perhaps.\n\n'Fill my pussy up Daddy.' I cried out.\n\nThat put Ray over the edge, and he slammed his cock into me violently, I met his thrusts and felt a warmth deep inside, I knew he was cumming in me, I felt complete, I had been able to give him enough pleasure with my body, that he could cum, I felt -very- womanly all over again. I looked back across the street to the window the woman had been masturbating in. She was standing in front of her glass balcony door once again, and I felt Ray's softening cock slip out of my ass. I was gaping back there, although I couldn't know it, I felt his cum leaking down one of my inner thighs. He walked to the couch and collapsed on it, breathing heavily. I watched the woman and saw her begin to slowly clap.\n\nA wide grin spread across my face, I reached down with a finger and scooped up a bit of Ray's cum from my thigh and licked it clean, then I curtsied for the anonymous woman, and turned to join Ray on the couch. He was messing with his phone, and I was just about to ask him what gives and then I heard\n\n'I do Daddy, I love your big black cock in my pussy, so deep in my pussy..'\n\nMy eyes went wide and Ray grinned at me 'Baby, you are definitely a freak, you want me to send you a copy?'\n\n'You.. recorded us?' I knew the answer, I wasn't mad, surprised, but not mad. In fact, the thought that he recorded us fucking turned me on.\n\nRay nodded 'You just seemed damned determined to be Daddy's naughty girl, I figured a little video..' he grinned again.\n\nI jumped on the couch next to him and watched as the video played, and what we had been saying while he fucked me. It looked like a porno film, it was definitely turning me on.\n\n'So, send you a copy?' he asked again.\n\nI nodded then said 'I'm going to give you Amy's number, send her a copy too..'\n\nRay shook his head and said 'Wicked woman, that girl is gonna cut your balls off if you play those games with her..'\n\n'Actually, I think it's going to turn her on, more than you think..' I giggled.\n\nRay shrugged, then said 'So, is my naughty little freaky girl cool with having someone actually film us next time?' his grin seemed more like a challenge than a threat.\n\n'You mean, like, another person, with a camera, in the same room as us, when we?..' I asked.\n\nHe nodded 'I've got a friend, he does film stuff, he could edit something real professional, you and me, maybe doing some more of that dirty talking too. he's a solid guy, you wouldn't have to worry about us ending up on the net, all over the tube sites. It'd be strictly private, the only copies going to you and me..' he paused a moment 'is that something you think you might be interested in?'\n\nI thought about that, I watched his phone video of my ass thrusting back and seeing his thick cock disappearing into me, fuck, that looked hot.\n\n'So, it wouldn't end up on the net?' I asked to be sure.\n\n'Nope, strictly private.' he seemed sincere.\n\n'What would I have to do, if.. umm.. if I wanted something like that to end up on the net?' now my own grin had spread across my face.\n\n--- Author's Note:\n\nWow, this one is starting to take on a life of its own. Writing this was such a turn-on, I'm a big fan of interracial, but not into the whole cuckold, humiliation stuff, I think there's plenty of erotic possibilities without needing to resort to that. I've already started part 3, I won't give away too much, but you already have an idea what's next for Kim and Ray, the teaser will be what happens with Amy, let's just say she ends up wanting more after that video gets sent to her phone.\n\nFinally, if you enjoyed this installment, please take a moment to vote, I'm always very interested in reading your comments and constructive criticism, please understand, I'm still very new to writing, so I'm trying hard to improve with each new story."
    ],
    "authorname": "SilkeeSmooth",
    "tags": [
        "transgender",
        "prostate orgasm",
        "interracial",
        "anal",
        "exhibitionism",
        "lingerie",
        "big black cock"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/once-you-go-black-pt-02"
}