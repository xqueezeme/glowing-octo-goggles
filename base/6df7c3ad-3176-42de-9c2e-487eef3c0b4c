{
    "title": "Poison Ivy Ch. 03",
    "pages": [
        "ETA: This is the revised version of Chapter 3. If you read ahead before I've uploaded the revised versions of subsequent chapters, a few details may not line up with the first 3 revisions. It's taking me a bit longer than I expected to work through these chapters, but I'm working hard to get them done so I can post the final. Thanks for sticking with me! \n\nI really wasn't sure about this story, so thank you for all your feedback and encouragement. I really hope I don't disappoint you all!\n\nDisclaimer for those just joining the story: This is an Omegaverse story, with Alpha/Beta/Omega dynamics. If you're unfamiliar, you may want to do a quick google search. Also, this is set on a military base. I have a military background and the tongue of a sailor, so there's lots of cursing and dirty language. If that offends you, please skip this one.\n\nThanks for sticking with me, I hope this one doesn't disappoint!\n\n.......................................\n\nIt wasn't difficult to have Richard Emmerson brought to the main military base in the hostile country of Torrin. A well-established Alpha officer of Hunter's size and intelligence rarely had to do more than lift a finger to make others bend to his will. Besides that, deference was always given to an officer with a fresh pair-bond. Even if he hadn't held the influence necessary to arrange the arrest and transportation of his Omega's uncle, his status as a newly mated Alpha would have allowed him to make the same demands.\n\nRegardless, the Beta who had been feeding his Omega heat suppressants without her knowledge now sat before him, his thin shoulders hunched and resigned to the fate awaiting him. The man was pathetic. An unkept, grey beard hid the lower half of his face, the hair on top of his head of a matching color reaching almost down to his shoulders. A red, bulbous nose betrayed the man's tendencies toward overindulgence. Even now, the creature reeked of whisky and cigars. Fresh from the rut, Hunter tried not to gag as he stalked toward the man, his shoulders thrown back to display his superior size. It irritated him that the Beta did not even look up at him as he approached. He felt the need to flaunt his prowess, to exhibit his worthiness of the mate he had just claimed.\n\nHunter growled once, the sound shaking the metal table the man's bony elbows were rested on, his blue eyes staring vacantly at the Styrofoam cup of stale coffee in front of him. The Beta slowly brought his gaze up to the towering Alpha, and Hunter found satisfaction in the fear he saw there. Good. He was smart to be scared.\n\nStorm cloud eyes narrowed at the older Beta shrinking back into his chair, his throat exposed to display his submission. \"Richard Emmerson,\" Hunter drawled, dragging a manila folder closer to him as he sat down lazily in the chair opposite the stinking, trembling figure. \"Brother to Vincent Emmerson, Command Sergeant Major, retired. Died approximately two months ago. Unknown cause. No marriage or mate on record. It's curious, how the single Beta male ended up caring for your niece when he never claimed a mate, is it not?\" Hunter was silent, allowing the man time to absorb his words before speaking again, but there was a constant reverberation of an angry growl that permeated the tense air between them. Even if he could have stopped himself from projecting his obvious displeasure to the inferior man, he wouldn't have. He wanted the Beta to know how fucked he was.\n\nThe man refused to speak, opting instead to stare at his hands in silent defiance. Fine. He would talk soon enough.\n\n\"You will tell me why you and your brother have been feeding her fucking poison and lying to her about her dynamic. We found her in time to save her from a fate almost as horrible as the one you face, but had we not, I would have dragged you here and poured her blood down your fucking throat until you choked on it. So tell me, Beta scum. Why were you hiding her?\"\n\nSteely blue irises stared out from wide, bloodshot orbs as the man looked up at the seething Alpha. \"Her mother,\" he said simply. Hunter glared at him, waiting for him to continue.\n\n\"Vinny was in love with her mother.\" The man's voice was the sound of nails on a chalkboard. Somehow, the Beta had dug up the courage to speak freely. \"And Aurora was in love with him. That Alpha fuck who claimed her ruined both their lives. She didn't want Ivy to suffer the same fate she had.\"\n\n\"Aurora Tivan. Mated to Trevor Tivan. That doesn't tell me how my mate ended up in your brother's hands.\" Hunter's ever-present growl deepened.\n\nThe Beta's suddenly lucid eyes shot up again, shock and fear clearing the stuporous, drunken look from his features. \"Mate? You claimed Ivy?\" The man scoffed. \"My God. You have no fucking idea what you've just gotten yourself into, do you, Alpha?\"\n\nIn a flash, Hunter had grabbed the front of the Beta's shirt and pulled him up until their faces were just inches apart. Black, bitter coffee splashed across the table between them. Hunter snarled, tempest eyes swirling as he stared threateningly at the visibly shaking man at his complete mercy. \"I think you are the one confused about your current situation, Mr. Emmerson,\" he mocked, his nostrils flaring like an enraged bull readying to charge.\n\nHis fury was abated slightly when he smelled the faint odor of urine beginning to saturate the man hanging from his fist. With a menacing growl, he violently shoved the creature back into his chair, the slob of a man nearly tipping back entirely before he found a shaky balance. \"You will tell me everything. Perhaps I will consider sparing your life if you appease me. I don't want to explain to Ivy why her uncle was found torn to bloody shreds, but don't think for a second it will stop me from doing just that if I feel you are hiding anything from me.\" He leaned forward on his elbows and narrowed his eyes. \"Speak.\"\n\nLike a trained dog, the Beta started talking.\n\n............................................................\n\nIvy sat huddled against the wall, knees brought up to her chest, surrounded by a semi-circle formed of dozens of pairs of shoes and expensive bottles of toiletries. When she had woken up less than an hour ago to find the room empty, she had scrambled to her feet and gone about preparing herself for the Alpha's inevitable return. She had driven her shoulder into the massive armoire to shove it in front of the door to the ridiculously opulent fucking hallway. She clutched a heeled leather boot in her right hand, a glass bottle of perfume in her left, and stared hard at the door, waiting.\n\nThe tray of half-eaten food had been taken away. She had stripped the soiled pillows and blankets that had made up her nest, replacing them with new linens found in the walk-in closet that gave off none of the Alpha's heady scent. Their discarded clothes were missing, and to her utter horror, a second blanket and more pillows had been placed over and beside her on the couch she preferred to the oversized bed.\n\nHad he made some poor Beta soldier come and clean up after her? Or had the beast himself come in and interrupted her isolation while she slept?\n\nWhile she waited, she absently rubbed the space beneath her sternum where the fresh pair-bond was still slicing its way into her. She could feel him through it, like a movie in the background, sometimes drawing her attention during a particularly exciting scene, but mostly just half-listened to. She knew he was coming for her. The pair-bond thrummed and tightened with his approaching presence.\n\nDamn him.\n\nHer thoughts drifted to the four days they had spent locked together almost constantly, his cock buried deep inside her with that horrible bulge hooked firmly behind her pelvic bone. When her head had finally cleared, she had tried to figure out some of what the fuck had actually happened without having to rely on his promise to explain everything to her when he returned. She wanted to talk to Officer Muscles as little as possible.\n\nShe contemplated how hard it would be to kill him with one of the butter knives that had been present on the tray of food left for her, ultimately deciding it would be a lesson in futility. The knife would probably bend and warp against the rock wall of his chest before it would get through all the layers of muscle and sinew to pierce any vital organs.\n\nAs devastating as it was, she had been knotted and claimed, a pair-bond forced on her by a massive Alpha she barely knew. Her fingers flew to the swollen half-crescent marks his teeth had made. His claiming marks.\n\nThat motherfucking, cock sucking Alpha fucking fuck. \n\nShe was slowly losing herself to her panic again. Her breath came in ragged gasps as the levity of her situation settled deep into her bones. She wanted to scream and cry and throw every loose item in the room at the Alpha fuck who was so close to barging in through that goddamn door.\n\nShe heard the sound of a key turning, a bolt unlocking.\n\nThat fucker locked me in?! \n\nShe scrambled to her feet and braced herself, hoping that the armoire would give her at least a few extra minutes of safety before the brute was upon her. The knob turned, and the door slowly opened.\n\nOutward.\n\nGod fucking damnit, Ivy, what in the fuck is the matter with you?\n\nShe heard the Alpha chuckle when he saw the armoire blocking his path and easily slid it back into place beside the door. She readied herself for war. With a battle cry that would have made the toughest grunts in her old battalion jealous, she chucked the leather boot in his direction. He deflected the attack and took three giant strides toward her before she had a chance to throw the perfume, locking her wrists in his impossibly strong grip and shaking the glass bottle from her hand.\n\nShe bared her teeth and snarled at him as he pushed her against the wall, pressing his oversized body against her significantly smaller frame. It wasn't fair, how easily he was able to overpower her. She used to spend countless hours in the small weight room at Chid Forward Operating Base, back when she had just been a normal Beta field medic. Her daily runs had made her faster than any Beta male in the battalion. Her time in the weight room had made it possible for her to lift the heavy med packs in full gear, the butt of a rifle pressed against her shoulder as her unit came up against enemy Torrin forces.\n\nOr, at least they had been enemy Torrin forces. Before General Nelson had run out of ways to waste Betas for his own gain and had conspired with the hostile country's military leaders to create fake raids that had cost them dear, precious lives. The how and why of it were things she hadn't been able to puzzle over quite yet. Something was still so wrong about the whole situation, but it would have to simmer on the backburner for the time being.\n\nAnd now, it seemed like all her hard work had been for nothing, the growling Alpha pressing her into the wall slowly tearing the person she thought she had been to shreds.\n\nLt. General jerk face backed up a little and looked around at her fortress of shoes and toiletries, amusement dancing in his eyes as his growl faded away and he turned back to face her. \"What exactly was your plan, precious one?\" his rumbling voice vibrating through to her core as he continued to hold her wrists in his oversized palm above her head. \"Pelt me to death with your little collection?\" Another soft chuckle had the Omega snarling threateningly at a man easily twice her size.\n\nMaybe more. Probably more.\n\nDamnit.\n\n\"My plan was to keep you the fuck away from me.\" The anger in her seethed words only amused him further, and her face darkened with his growing smile.\n\nSuddenly his deep, rumbling purr permeated the air between and around them, and she felt instantly, obnoxiously comforted. Her tense muscles relaxed beneath his weight as he pressed her into the wall once again, his growing erection pushing against her stomach. She squirmed and scowled up at him, straining her neck to maintain eye contact, furious the motherfucker had the ability to both mentally and physically render her completely useless. His storm cloud eyes took in her displeased expression and the purr deepened.\n\nHe released her wrists and, with very little resistance from the now melting Omega who was slowly losing her scowl, slipped the silken shift she wore over her slim, athletic body. It wasn't until then that she realized she had woken up in different clothes than she had fallen asleep in. She groaned inwardly. Was there no end to this bullshit?\n\nDistantly, she registered the sound of a buckle and zipper being undone, and suddenly his intoxicating scent surrounded her like a warm blanket. She let out a little moan as he smeared a drop of his precum against her lower lip with his thumb, her mouth closing around it to bite and suck without conscious intention. He growled, the sound coating her thighs with a sudden gush of slick in response. Gripping her waist, he lifted her up and slipped into her in a singularly fluid movement. Her legs circled his thick waist as she nuzzled into his nape, breathing in the heady scent of the Alpha, drunk and drugged.\n\nBurying himself in her tight, wet pussy, he groaned and gripped her hips, his fingers digging into her still-tender flesh. She wriggled against him at the sound and his eyes rolled to the back of his head at the feel of his female writhing on his cock. Holding her steady against the wall, he thrust into her, slow at first to allow her still too tight walls adjust, then more quickly. He basked in the little sounds he drew from her lips, the little moans and mewls and gasps he recognized from their days spent locked together, as he swirled his thumb over her throbbing clit and fell into her. He felt her walls tightening, knew she was close to climax, and rutted her with an intensity that was almost violent as his knot began to swell. She sobbed as she came, and his knot hooked behind her pelvic bone as he washed her cervix with thick spurts of come, grunting and groaning against her slender neck. She fell limp, subdued and calmed by their coupling and his emanating purr. He cradled her against his chest as he walked her over to the bed, his knot still locking them together, and laid them both down, her naked body pressed to the rough fabric of his uniform as she lay sprawled on top of him.\n\nShe stared blankly at the wall, her breathing slow and even, her frantic, worrying thoughts replaced by the comforting sounds rumbling beneath her cheek. The pair-bond hummed pleasantly, delighted with her submission.\n\nHis fingers stroked her chocolate colored locks, swiping away loose strands from her damp forehead. His deep voice interrupted the pleasing timbre of his purr. \"Now that you are calm, precious one, you may ask me questions. What would you like to know?\"\n\nShe closed her eyes as his rumbling purr resumed and tried to think. What did she want to know? She had so many questions, she didn't know where to start. She felt a part of herself rallying desperately beneath layers of enforced serenity, begging her to wake the fuck up, get a grip, push herself off this fucker who had swooped in to destroy her life, but it was all too buried, too far away to get her full attention and pull her from his soothing presence.\n\nIn the end, the first question she could think of was all-inclusive, the word needing no full sentence following it, as she wanted to know everything that could possibly come after the simple, three lettered inquiry.\n\n\"Why?\" she croaked, her voice rasping and sore from days of screaming in pain mixed inextricably with ecstasy.\n\nHe chuckled. \"You will have to narrow it down.\"\n\n\"Why did you take me? Why claim me?\" To her horror and dismay, her voice squeaked out the last question.\n\n\"Because you are my mate,\" he said simply.\n\nBeneath the layers of calm, she bristled. \"I am not your mate. You don't even know me. You know nothing about me.\"\n\nHis fingers trailed along her spine, pinching the delicate bones poking out beneath silken skin. \"I recognized your scent the moment I stepped into your little tent. You were so close to entering estrous in the middle of a Beta outpost, with no protection. No Alpha. Do you realize what that would have meant?\n\n\"It's rare for an Alpha to recognize the scent of his mate right away. We were both lucky I found you when I did, for many reasons. Your heat suppressants prevented many cycles of estrous. You are past the age when you should have been paired with an Alpha. General Nelson gave his blessing for the pair-bond when I explained.\" His purr resumed while the words settled over her like a weighted blanket. Her mind lulled lazily over the significance of what he had said. Eventually she plucked a question out of the swirling thoughts dominating her consciousness.\n\n\"How did you...?\" she left the thought unfinished, unable to form the words. She knew from the thrum in the bond that he understood. She felt tranquil at the almost perfect connection, the way the spot where the bond connected them pressed together with glorious symmetry. The feel of his knot locking them together, the way his cock twitched occasionally at her still-tightening walls... it was all humiliatingly relaxing.\n\n\"Incoming packages are inspected randomly. A box of your unlabeled supplements drew suspicion and was chemically analyzed for drugs. Crystalized heat suppressants were found to be mixed with the iron in the capsules. Your background was investigated, and a sample of your DNA, collected from your initial processing, was analyzed. The man you knew as your uncle was questioned. We learned of your true Dynamic and the fact that you were ignorant to it, and I went to Chid to collect you.\"\n\nHer heart sped up at the mention of her uncle. \"You questioned him?\" Everyone knew about the merciless forms of torture the Alphas often used to extract answers from their enemies. No worse than what the Torrins did to their rebels, but no better either.\n\nShe thought sometimes that her family was cursed. Tragic events plagued the few relatives she had left. Her uncle had lost his beautiful wife and daughter in a car accident almost a decade ago and had been slowly drinking himself into oblivion ever since. Watching the Beta ruin himself had been one of her first lessons in heartbreak, but he had always been fierce in his love and adoration of her.\n\nIf these Alpha fucks had so much as handled him roughly...\n\n\"He was gently questioned in Lostra before we collected you and was then brought here for further interrogation. He was not seriously harmed, precious one. He was forthright with his answers, and was punished mildly for his crimes, but he will recover with no lasting injuries.\"\n\nAnger bubbled up to the surface, cool and refreshing, interrupting the serenity he was projecting. She felt the sting of betrayal by her father, and a powerful flash of fury as she thought of her sweet uncle being punished by a group of angry Alphas. No lasting injuries.\n\nWhat fucking bullshit. \n\nA feminine growl erupted from her lungs. She pushed angrily away from him, snarling when she realized she remained knotted. She sat up, straddling his hips, and scowled down at him. \"Just so I have all of the facts. You go through my mail, drag my harmless uncle from his home, question and punish him, barge into my life and steal me away from my Battalion, sexually assault me, then wait until I'm out of my mind so you can fuck me for four days straight and force a pair-bond on me. Did I forget anything?\" She wiggled her hips and felt his knot still hooked firmly inside her core. She snarled, furious and devastated, needing to break their connection. Needing to regain her own sense of self, independent of him.",
        "\"You're upset.\" His voice was calm and matter of fact.\n\nShe rolled her eyes. \"You fucking think so, jackass?\"\n\nA loud growl easily drowned out her own. The world spun, and she was on her back, the Alpha glaring down at her threateningly as he covered her body with his. \"Call it what you want, Ivy, but you are my mate. There was no reason to wait. The sooner you accept the pair-bond and your place as a mated Omega, the sooner you will feel settled and fulfilled.\" He pinned her with his stormy grey-blue eyes, his massive hands dwarfing her wrists and palms. \"And I will say this again, for the last time. Had you been left with the Betas you harbor such fondness for, you would have died a terrible death at their hands.\"\n\nShe was silent, watching the heaving giant above her as he finished his little tirade. She traced his features with suddenly curious eyes. There was something almost familiar about him. Before now, she had never been closer than ten yards from an Alpha. Her father, a man braver than she could ever hope to be, had always been skittish around the primary Dynamic, and she had fostered her own fears as she'd grown older and joined the enlisted ranks. They were easy to avoid. Officers very rarely interfered with the lowly Beta troops.\n\nShe'd heard rumors of rare Alphas who took an interest in their troops enough to visit more than once or twice a year, some whom went so far as to work directly with the enlisted leaders in the command of their units, but Rico battalion had never had to endure such interference. Only once in her five years as a medic had she experienced an Alpha inspection, and she had been \"forced\" to sit that one out, her unit leaders not wanting her to ruin the uniformity of their formation with her short stature.\n\nSo how was it that the man staring down at her looked so familiar? Surely, she would have remembered seeing eyes like that. They were the icy eyes of a predator, and even had he not been crushing her like an overgrown gorilla, she would have felt the cool fingers of his gaze running up and down her spine. It was a look that would have terrified her, had she not felt such fury at what he had done, what he had taken from her.\n\nSo maybe he had saved her from death, the details of which she didn't really want to explore. Was the future she faced now, as a submissive Omega pair-bonded with an Alpha that could very likely kill her with one of his pinkies, really worth it?\n\n\"You locked me in,\" she finally said, her eyes narrowing. He cocked his head, confused by the sudden change of topic. \"I did,\" he answered, irritatingly calm. \"Given the events the last time you were left alone with an unlocked door, you can't truly be that surprised.\"\n\nHer escape back to Chid FOB had ended in somewhat of a disaster, but that was entirely beside the point.\n\n\"So I'm a prisoner now?\" She bared her teeth at the man, squirming as much as he allowed underneath him, grateful to feel that the knot locking them together was finally abating.\n\n\"Of course not. Once you are calm, we will walk around the base, and I will show you the places you may be allowed to frequent. Tonight, we will be presented as a newly mated couple at a celebratory dinner. Going forward, you will be allowed to leave the room during established times accompanied by a chaperone.\"\n\nShe scoffed. \"So I'm a prisoner now,\" she repeated, not a question this time. He cocked his head again, the confusion warping his features almost comical. He truly didn't realize how fucked up it was, the way he was treating her like a...\n\nLike an Omega.\n\nShe shuddered. \"I don't even think you realize how insane you sound, Lieutenant General. It doesn't really matter, because we both know that I'll find a way around your ridiculous rules. But while we're on the topic, I have a few of my own.\"\n\nShe took a deep breath, ignoring the way his lips curled up in an amused grin. \"I want a job. I haven't missed a day of work since I turned 14 and got my labor card. You can't just expect me to sit back and do... well... whatever it is you expect me to do all fucking day. I want to work in medical. I'm sure you've already stripped me of my rank, but I can still be useful. I want to see my uncle, and I want him taken back to Lostra unharmed. Also, under no fucking circumstances will I allow myself to be presented to your Alpha buddies like some kind of new pet.\" She held his gaze as he took in her words. His grin widened.\n\nBastard.\n\n\"You --\"\n\nBefore he could get another word out, a sound like thunder shook the room around them, rattling the various landscape oil paintings in their gilded frames. His tempest grey eyes narrowed and shot up, looking around. What he expected to see was beyond her. The windowless walls, painted navy blue with gold-tinted swirling embellishments, could have given him no hint of what was happening outside unless he had x-ray vision. Which, at this point, wouldn't have surprised her.\n\nHe gently pulled out of her, pressing her shoulders into the mattress at her back. \"Stay,\" he growled, as if giving a command to a trained dog. She rolled her eyes. Like that was going to work.\n\nShe sat up and scrambled off the bed as soon as his weight lifted off her, watching as he fixed his uniform and strode to the door. \"What is that?\" she asked, cocking her head to listen as another series of booms resonated from outside the room. He reached the door, swinging it open without looking back at her. Panic rose up out of insidious depths, threatening to choke and strangle her. He couldn't leave her like this!\n\n\"Hunter!\" she cried out. She clapped a hand over her mouth. She had used his name. Like he was a fucking person! He looked back, his storm cloud eyes filled with impatience and apprehension. \"Don't lock me in,\" she pleaded, hating herself for the hint of desperation that crept into her voice. He hesitated, just for a moment, then shook his head. \"You'll be safe here,\" he said softly. \"You'll forgive me later. I can't lose you, not when I've just found you.\" She rushed toward the door as he shut it, screaming in frustration as it slammed in front of her and the sound of the bolt locking into place echoed like a funeral dirge in the too-large room. Her luxurious prison.\n\n\"Fuck you, you fucking psycho!\" she screamed, knowing he couldn't hear her. She spun around and ran across the polished marble floor to the dressing room that was bigger than the med tent back at Chid base. Rifling through the ridiculous selection of skin-tight clothing, she pulled out a pair of jeans and a white cropped, v-neck shirt. They were both shamelessly revealing, but it was the best she could do, under the circumstances. She looked around, trying to find something she could use to un-bolt the door to the outside world. She refused to be locked in like some kind of petulant child. Maybe a wire hanger would work?\n\nAnother series of booms sounded outside as she ran across to the locked door. The polished gold knob was immovable, and the door was bolted from the outside. There was no room to slide the metal hanger through. She dropped to the floor, furious to find not even a gap between the swirling marble and the heavy wooden slab keeping her locked in.\n\nShe slammed her fist to the ground, tears of frustration streaming down her face. That fucking bastard.\n\n.......................................\n\nThe Alpha was furious. The cameras lining the base perimeter revealed a ground littered with uniformed bodies. How had this happened? Main base had never been attacked before. They had been tricked into complacency, arrogant and overconfident in their immunity from invasion. He looked around the crowded office for Romer, the second in command and his immediate supervisor. The administrative building at the end of the main road was filled with agitated Alphas, all of them gathered in an office polished with luxurious dark wood. The rest of the building was tidy, but cheaply made and not reinforced in any way. A massive mahogany desk dominated the room, the place where General Nelson made his weekly broadcasts to rally the troops with stories of heroism and sacrifice. Hunter had his suspicions about the validity of such battles, but he had given the aging officer the benefit of the doubt.\n\nIt seemed his suspicions had been correct, and he had waited too long to act on them.\n\nRomer's dark eyes met his, the Alpha's ebony skin beaded with sweat. The look of indignation and shock mirrored his own. Hunter strode over to the superior officer, his fury fueling his need for action.\n\n\"What the fuck happened, Romer?\" he seethed, hands the size of small boulders clenched into tight fists. The slightly smaller Alpha growled. \"I have no fucking idea. Torrin troops ambushed the guards placed at the perimeters. Somehow, they locked down a number of buildings before we could react. Several Alphas were captured or killed.\"\n\n\"How many?\" Hunter asked from behind clenched teeth. Romer hesitated. \"Twelve Alphas were captured. Seventeen killed. All but the Alpha barracks and this building were overtaken from the north side, but we've recovered buildings 14 and 18,\" he said, referring to two of the helo hangers surrounding the command building they were currently in. Hunter cursed under his breath.\n\n\"And the captured Alphas?\" His voice was dangerously soft. He was third in command, directly underneath the officer in front of him, but that didn't stop the warning from rumbling beneath his voice. He would push the older Alphas out of his way if he had to. There was no way he would risk the life of his Omega by allowing enemy Torrins to take over the base. He would rip them all to unrecognizable bits with his bare hands if he had to.\n\n\"We've had no word,\" Romer said, looking away. Hunter flicked his eyes behind him to the first in command. General Nelson was pacing, his brow furrowed in a confused frown. He spoke to Romer while keeping his eyes on the nervous leader. \"How many troops do we have on hand?\"\n\n\"562 Betas, 89 Alphas. All spaced out between the two hangers.\" Romer was curt, his answers quick and precise. Hunter grunted approvingly. \"There should be no difficulty recovering the base, then,\" he said.\n\nRomer frowned.\n\n\"Nelson hasn't given the command yet,\" he said darkly. \"I don't know why.\"\n\nHunter snarled. \"If he will not act, then you will have to.\" His eyes flew back to Romer, fixing the older Alpha with a cutting glare. Romer nodded once and moved to the door. Hunter watched from the bulletproof window as he ran toward building 14.\n\nHe swore violently as a bullet tore through the head of the second in command, Romer's body crumpling to the ground in a bloody heap.\n\nHe turned back to the shocked Alphas lining the walls of the polished office, cursing under his breath. \"General Nelson,\" he barked, drawing the attention of the older man. \"We are under attack. Your second-in-command was just assassinated. Give the order to kill on sight and recover the base.\"\n\nNelson just stared at him blankly, the vacant eyes of a confused and lost man staring back at him.\n\nHunter was losing patience.\n\n....................................\n\nIvy's voice was sore from screaming. Her fists ached and bled from pounding against the locked door. She had cursed Hunter to hell a thousand times over for leaving her trapped in this fucking room while the base was under attack. You'll forgive me later, he had told her. I can't lose you. \n\nIn a very fucked up way, buried below her anger, she knew he meant well. Intentions didn't mean shit to her right now, though. Pulling her from her battalion was one thing. Keeping her locked in while the base was under attack was another thing entirely. She needed gear and body armor, a gun in her hands and a knife in her pocket, a way to defend herself. She needed a med pack, to help treat fallen soldiers. Tears of frustration streamed down her face as she shoved her shoulder into the door repeatedly.\n\nIt was an exercise in futility. She knew the door would never open. But just standing there, waiting for someone to eventually come find and kill her, was an insanity she couldn't stomach. What if the Torrins who came knew what happened in Chid forest? What if they decided to take her to a Factory, instead of killing her on sight? She had to do something, even if that something was pointless.\n\nAs if in answer to her thoughts, she heard the lock turn and watched as the knob started twisting. She backed up and crouched, grabbing a glass bottle of perfume, ready to hit whoever came through the door in the head. Slowly, it slid open.\n\nIt was Kentucky.\n\n\"Kentucky! What in the fuck are you doing here?!\" She threw her arms around her friend, confused but ecstatic to see him.\n\n\"We got called back to help recover the base. I looked all over for you, then remembered what you said about being in a room in a mansion.\" His deep amber eyes took in the room around her. \"You weren't kidding,\" he said. He looked back to her and searched her face. The soft palm of his hand curled around her cheek, his thumb rubbing her tears away. \"I missed you,\" he whispered.\n\nAnd then suddenly, his lips were on hers. They were soft and warm, exactly as she had imagined they would be, but she felt a painful twang below her sternum and pulled away before she could kiss him back. \"Brad,\" she breathed, looking at him with sad, pleading eyes. \"I can't.\" she touched the place where the pair-bond had hooked and searched his eyes for understanding. Instead, she found disappointment, and even worse, anger. She looked down at her feet, not wanting to see the unsettling expression on his face anymore.\n\nThere was a long pause, both of them unable to look at the other, regret and longing and sorrow filling the thick air between them. \"Let's go, Poison,\" he said softly, taking her hand and tugging gently. He pulled his rifle up to his shoulder and holstered the sidearm on his thigh. Together, they walked down the hallway, tense and armed. Kentucky with actual weapons, and Ivy with a bare midriff and lots of rage. Not always a great combination. When they reached the door at the end of the hall, Kentucky peered out and, after a moment, pulled her through.\n\nThen they were running, racing down the main road to the part of the base that Brad told her had been secured. Ivy hadn't spent much time on main base before this, just about an hour or two while her command waited for the armored transport vehicles that brought them to Chid after their initial arrival in Torrin. But she knew the basic layout from the initial briefings all Lostran troops deployed to Torrin were required to attend, and the cursory glimpses she got during her (ultimately unsuccessful) escape in the dinky supply truck.\n\nThe main road was shaped like a giant U, each side about a mile long. Aviation claimed most of the northern arm, with six massive hangar bays housing multiple helo and fighter jet squadrons hugging the black-top pavement, and two parallel airstrips framing each side and extending a mile or so past the last massive structure. The middle, connecting road was where the Alpha barracks were located. Also, an enlisted mess hall, main medical, central supply and administrative buildings. Laundry, barracks, a gym, and vehicle maintenance lined the southern arm, along with the vehicles themselves.\n\nIt was the northern arm Kentucky was now leading her toward, where several small fires burned up fuel from about half a dozen aircraft. Her heart pounded in her chest, and it wasn't just adrenaline from the threat of enemy contact. Kentucky had come for her, had more than likely saved her from an awful fate and given her at least a chance to defend herself. And when he tried to return the sentiment she had started back in Chid, what had she done? She'd turned him down instantly. All because of the unpleasant strum of some invisible thread, plucked like an out of tune guitar string. If the guitar was a giant douchebag named Hunter, who'd tethered her to him without a second thought to what she wanted, or rather, didn't want. She felt like a horrible person. She wanted to smash her fist into something destructible. Like, say, a guitar.\n\nNamed Hunter.\n\nThey reached the end of the crossroad and he directed her to the right, toward where corroded hangar doors framed a small opening about 3 feet wide. Inside was cool and dark, the soles of Kentucky's boots and the heels of her flats echoing off the whitewashed walls, where paintings of faded squadron logos stared down at them like half-finished thoughts. They stopped to rest, their own hard breathing the only sounds in the wide-open space. Ivy looked around, confused. There was no sign of anyone, no huddled mass of rallying soldiers or circle of Alpha officers quietly strategizing. \"Is this right?\" she whispered, her fingers grazing Kentucky's arm as she continued searching the shadows. \"Where is everyone?\"\n\nThe whine of screeching gears pulling open the hangar doors answered her before he did. She spun around and froze. At least a dozen soldiers poured through the widening gap and stalked toward them confidently. Dull sunlight infiltrated the vast space as the doors on the opposite end began to open as well, and she didn't need to turn to know that more troops had entered from behind. Adrenaline, heady and toxic, pumped through constricting veins, heightening her senses and readying her for a fight. She reached blindly, gripping Kentucky's forearm to pull herself closer. Her other hand slipped around the grip of the sidearm strapped to his thigh.\n\nShe was prepared to run. She was prepared to fight. She was even prepared to die, if that's what it came down to. But nothing could have prepared her for the suffocating dread that settled like a dead weight in her stomach when Kentucky shook off her grip and stepped away from her. Slowly, she turned to face him.\n\nThey were surrounded by Torrin soldiers, their exits completely blocked off. And her friend's rifle hung relaxed at his side, his darkening eyes appraising her with cool detachment.\n\n\"Brad... No...\" she whispered, trying unsuccessfully to still the tremors sweeping through muscles tight with frigid tension.\n\n\"Come on, Poison,\" he said softly, breaking the news as if a relative had died, taking in her shocked and hurt expression. The corner of his mouth twisted up into a smile that could have been a sneer. \"You can't be that surprised. All the conversations we had about the war, how pointless it all is, how many people are dying for reasons no one can even remember anymore. It just turns out, we're not the only ones to feel that way.\" He stepped toward her, and instinctively, she twisted and brought her arms up, aiming the gun she'd swiped from him moments before between his narrowing eyes. She heard the distinctive clicks of rifles being lifted and cocked. Kentucky stiffened, looking from her to the now empty holster strapped to his thigh and back, baring his teeth in an ugly snarl.\n\n\"Brad, what the fuck did you do?\" Her voice sounded hollow, filled with both hurt and resignation.\n\n\"What, you're going to shoot me, Ivy?\" He took a step toward her, grinning when she matched it with a shaky step back. \"We both know you won't. Come on now, don't make this harder than it has to be.\" Slowly, lazily, he raised his rifle and aimed it at her heart. She tried to blink away the burning tears threatening to obscure her vision, her teeth biting into her lower lip until she tasted blood. He chuckled cruelly. \"Drop the gun, sweetheart,\" he whispered.\n\nThe gun rattled in her shaking grip as she scowled at him, her brain too muddled by the impossibility of what was happening to come up with even a single useful, coherent thought. A long, dangerous moment passed, her index finger grazing the trigger with considering strokes. But he was right.",
        "She had killed before, when it had been necessary, when not killing would have put herself or her peers in immediate, mortal danger. Those deaths had weighed heavily on her conscience, even though she knew, logically, that the men she'd put down would have done the same to her, and not lost a moment of sleep for it. In the heat of battle, she hadn't hesitated, allowing her training and instincts to take over and do what needed to be done.\n\nBut this was Kentucky. This was the cute boy with the warm amber eyes who'd stayed up late into the night with her when they'd first arrived, when the sounds of Chid forest and the adrenaline of her first patrol had kept her up hours after taps. This was the boy she'd stayed up with after he'd received a particularly devastating Dear John letter from his high school sweetheart. The only one of her medics who hadn't rebelled or lashed out at her when she'd been promoted to Team Leader, and the single person who'd defended her against the dickwads who said she'd only gotten the position by asking for it on her knees.\n\nShe had killed, and she had a feeling she would kill again.\n\nBut not here. Not today.\n\nNot him.\n\nSlowly, her thumb found the magazine release and the clip dropped to the ground. Looking into eyes so darkened with malice, they'd become unrecognizable, she pulled the slide back and released the round. The gun fell to her feet with an echoing clatter. \"Good girl,\" he crooned. His rifle dropped as he stepped forward and brought his hand up, dragging dirt-stained knuckles down the side of her face. She stood her ground, refusing to step back. She wasn't afraid. She was just fucking pissed.\n\nHe leaned down, close enough to brush his lips against her ear, his warm breath curling tendrils of unease around her neck like a pet snake. \"I would have protected you, Ivy,\" he whispered with mock sadness. He straightened, peering down at her with a calculated, clinical look that chilled her.\n\n\"How much do you think your Alpha will pay to make sure his Omega isn't gang raped by Torrin Betas during her next estrous?\" he asked her, loud enough for the group of men surrounding them to hear, rifles still raised and aimed at her. How fucking dangerous did they think she was, anyway? She was a little flattered, truth be told. A few snickers and lewd comments peppered through the crowd.\n\n\"So that's what this is all about? Fucking money? Come on, Kentucky, you're better than this.\"\n\nHis hand shot out to wrap around her neck as he snarled, walking her back with angry, stomping strides until her back hit the side of a corrugated shipping container. \"Such an easy thing for a newly mated Omega to say as she lives in luxury, while the Beta scum risk their lives for a fraction of what the big, bad Alphas feel entitled to. How fucking convenient that you don't care about money now that you have more than you even know what to fucking do with.\" His fingers tightened around her neck, a knee between her legs keeping her pinned in place. His next quiet words were low and menacing, and obviously meant just for her. \"How much would he pay to keep you out of a Factory? Hmm? I'm going to milk you for every fucking thing you're worth, Omega.\" He smirked. The whole speech, she was sure, was supposed to be intimidating.\n\nShe was not intimidated.\n\n\"Fuck you, Kentucky,\" she seethed through clenched teeth. The threatened Factory was a particularly low blow. Torrin was infamous for its abhorrent treatment of the female gender, who were so oppressed and tightly controlled that many risked their lives trying to reach a Lostran base, and the promise of a new life in a more progressive country. Factories had been established years ago to handle the growing problem of renegade women, and to serve as a deterrent to any who might dream of a life of more than servitude. Sometimes, small groups of runaways were found by Lostran patrols, their starved and bruised bodies mapping out the sad reality of their lives. Often, those groups were intercepted by Torrin forces and brought to one of several Factories around the country, to be beaten, raped, tortured, and ultimately murdered. Ivy had gotten sick the first time she'd seen pictures of the inside of one of these Factories, taken by an undercover operative and distributed to Lostran troops as a way to dehumanize their enemies. Indeed, even Ivy, a medic trained to save lives instead of taking them, felt the metamorphosis of Torrin soldiers that turned men into monsters. For her, and for many of her peers, including Kentucky, the perpetual campaign against Torrin was justifiable only because of the extrication and deliverance of the women and children, and occasionally men who wanted a better life for their families, who were intercepted during patrols.\n\nKentucky was posturing, and she was calling his bluff. \"Just do what you're going to do and get it over with.\"\n\nHe laughed. \"Isn't that the whole point, Poison? I can do anything I want!\" he gestured to the men in Torrin uniforms around them. \"For once, those Alpha fucks can take a seat and feel what it's like to have things decided for them. Hmm? Sure, he can pay for you, treat you like the little whore that you are. But that doesn't mean I have to give you back exactly how I found you.\" His fingers trailed down her neck, dipping into the deep V of her (admittedly quite risqu\u00e9) dirtied white shirt. His thumb curled into a hook, tugging the fabric down lower to expose her (also admittedly quite risqu\u00e9) black lace bra. The knee between her legs climbed higher, lifting her onto her toes.\n\nShe raised her chin defiantly, refusing to be rattled by his gross behavior.\n\n\"And when things inevitably go wrong, Kentucky? What happens then?\" Somehow, her words came out steady and calm, masking the rage that was slowly replacing the painful sting of his betrayal. She fought to keep her hands loose at her side instead of lashing out to break his nose. \"You think you have what it takes to follow through? Can you live with yourself after you do this, Brad? Do you have the strength to bury the recoil?\" She lowered her voice and leaned in, her eyes firmly locked on his. \"Do you have the strength to bury me?\"\n\nThe flash of apprehension and remorse that briefly twisted his features back into a face she recognized, there one moment and gone the next, should have brought her a measure of satisfaction or hope. Instead, she felt heartbroken. Her Kentucky was still in there somewhere, trapped inside this insane, bitter villain, and she wasn't sure she'd be able to reach him in time.\n\n\"Enough.\" He said gruffly, grabbing her arm and turning her back toward the massive hangar doors. \"We've got a video to make.\"\n\n..................\n\nThe insufferable General had taken to pacing again. Hunter wanted to punch the older Alpha in the face, put him out of his misery. Perhaps he had been a strong, capable officer at one point, but that time had passed. The nervous, sulking creature he now observed, his beady eyes darting anxiously around the room as the slack, ashen skin of his double chin warbled with murmured gibberish, bore no resemblance to a man worthy of his position. And if he didn't start making some fast decisions, Hunter was going to have to step in. The death of Romer had automatically raised his status to second in command. The responsibility, and obligation, of ensuring the successful recapture of the base now rested solely on his shoulders. If the General refused to act, he'd be forced to take command.\n\n\"Sir,\" he started, unable to temper his impatience and frustration. \"There are currently seven confirmed recoveries, not including this building. Casualties are minimal, and we have the manpower and the ammunition to make this quick and easy. But we must move now. Give the order, Sir,\" he encouraged, like an adult providing direction to an errant child. Bloodshot brown eyes the color of mud flew to his. Nelson's jaw trembled, his mouth opening and closing like a fish. Hunter was on the verge of losing his shit.\n\nFinally, Nelson snapped his jaw shut and nodded briskly. \"I - \"\n\nThe projector behind them beeped and flipped on, and they both spun to the screen, along with the seven other officers who were strategizing over maps and blueprints scattered across the room. Hunter froze. The temperature in the room dropped several degrees, and the air shifted, charged with potent energy. Recognizing the lethal danger of an enraged and aggressive Alpha in close proximity, the seven officers, along with General Nelson, began inching toward the exit.\n\nIvy's chocolate-colored hair was mussed and wild, like it had been grabbed and yanked. Her lip was split, and her right cheek was swollen and stained crimson. Fingerprint bruises circled her slender throat. Someone had struck her. Someone had choked her. Her wrists were bound in front of her, lengths of thin rope biting into the silken skin he had, just hours before, stroked and suckled as she lay sprawled on top of him, well fucked and knotted. Her eyes were narrowed as she looked to the side, tracking someone offscreen.\n\nShow me your face, motherfucker. \n\n\"I am not saying that, ass hole.\"\n\nHe sucked in a breath at the scratchy, raw sound of her voice. She'd been screaming, probably for hours, after he'd locked her in. He hadn't wanted to part with her at all. The anguish of her plea not to leave her nearly broke him, but what choice did he have? Taking her with him was unacceptable. And she had a track record of running away, straight into the line of fire. Turning that lock had been the only way to keep her safe, from the enemy, and from herself. He had left her under heavy guard in the most secure building on base. His mind raced. How had this happened? How the fuck had they gotten to her?\n\nHunter watched as Ivy rolled her eyes. Her low, feminine growl began rumbling under her breath. If he hadn't been ready to shred the world apart, he would have smiled at the sound. She looked directly into the screen. \"I'm being told to say that I'm afraid for my life, and they will kill me or take me to a Factory and please help.\" Her voice was monotone and decidedly unimpressed. Hunter watched, enraptured, as his Omega smiled. Smiled!\n\n\"They also want me to cry, but so far, they haven't been able to figure out how to get me to do it.\" She snickered and looked to the side again. \"Maybe I can get you to cry first, Kentucky. Want to make a bet?\"\n\nSomeone cursed off screen and the camera tilted. Kentucky. He knew that name. The little Beta fucker who had dared to touch her back when he had collected her from Chid FOB for a second time. He should have killed him right then and there. The Beta would be hanged by his toenails, his appendages hacked off one by one.\n\nHe heard a soft thud and a muffled, pained grunt. The camera was righted, and Ivy was there again, white hot fury igniting a fire in her eyes as she twisted and fought the arm holding her flush against a masked Torrin's chest. The barrel of a gun was aimed at her temple, and a strip of duct tape covered her mouth. The low, rumbling growl that had been emanating from the throat of the agitated Alpha since the scene began broadcasting turned into a roar that shook the foundation of the polished office. He fought to control the volume of his rage, so he could hear the rest of what the Beta fucks on screen were saying.\n\n\"... time to see how much an Omega bitch is worth. Either way we win. Surrender the base, deliver the money, and you get the female back. Or, we get to take the little whore through her next estrous, and you can pick up her body when we're done with her. Building 22, one hour. Send General Nelson.\"\n\nThe video transmission flickered out. Hunter thought his teeth might shatter from the intensity of his clenched jaw. His palms were marred with bloody crescents from digging his nails into the curled fist. He turned slowly to the eight men now standing close to the door. When he spoke, his words were low and soft, and laced with venomous danger. Every man in the room, fierce Alphas, some with their own mated Omegas, shrank back a little. \"This ends now. I don't care what you have to do, or who you have to kill. She will be recovered within the hour, or I will know the reason why.\" He narrowed storm cloud eyes at General Nelson. \"And you. You will man the fuck up and release the order to start shooting on sight. They lost their chance at negotiations when they took my defenseless Omega.\"\n\nGeneral Nelson nodded and walked to the phone. Hunter didn't stay to hear him give the order. He was already striding to the artillery room. He needed bullets. Lots, and lots, of bullets.\n\n....................................\n\nIvy's heart galloped. Her hands were going numb. Fucking Kentucky had purposefully cut off circulation as he tied them together behind her chair. He had definitely not been amused by her little stunt back in the cramped office where they had recorded their video. They had taken her to an administrative building across the way where a video projector was set up, she assumed to send messages to loved ones back home. They had a similar set up at Chid FOB, although it was much smaller and rarely worked right. Now they were back in building 22, in a small supply room crowded with wooden crates and ammo cans, screen windows lining the dingy green walls.\n\nThe tape covering her mouth was burning her skin. The tight shirt and jeans she had put on this morning felt confining and uncomfortable, and she was furious with how the white cropped v-neck tee and the angle her arms were tied behind her put her breasts on display. The Torrins were circling her, like sharks in chummed waters. One had actually winked at her.What a fuckhead.\n\nWere they actually Torrins? Or had renegade Lostran soldiers somehow procured the enemy's uniforms to invade the main base in a guise of a hostile takeover? Was her ransom the only motivation for all of this death and destruction?\n\nThere were so many things wrong with this situation, not the least of which was the lack of actual, sensible clothing in her new wardrobe.\n\nShe looked hard at the faces of the men holding her hostage, trying to remember if she had seen them before. Which was pointless, and useless. What did it matter if they were Torrins or Lostrans? At the moment, it didn't matter at all. The various aches and pains from where she'd been struck, manhandled, tied and trussed up turned her thoughts sticky and sluggish. And then there was the constant anger and heartache of Kentucky's betrayal. She couldn't think. She couldn't breathe. How she was going to get out of this fucking mess?\n\nWhat had happened to him? Her sweet, compassionate friend had turned almost evil in his treatment of her. How had he become so bitter and just so fucking mean? Had there always been this darkness in him, hiding just below the surface? Had she been so na\u00efve, so blind as to miss his capacity for this kind of fuckery? Whatever. None of that really made a difference. The fact of the matter was, she'd been betrayed, handed over to the enemy by her best friend.\n\nAnd where was the asshole, anyway? Aside from that initial burst of violence back in the hangar, and tying the too-tight bonds around her wrists, he hadn't touched her. After escorting her to the video conference room, he'd disappeared, leaving his buddies behind to rough her up. By the time he came back, she'd been backhanded, kicked, groped, and tossed back and forth between two especially nasty soldiers who continued to manhandle and taunt her. She had planned those dickhead's painful, messy death in her head as Kentucky pulled her out of their groping, greasy hands and prepared her for that disaster of a ransom call.\n\nShe kept getting little glimpses of the Brad she knew. Like when he'd tucked her mussed up hair behind her ear with a sad little smile, or when he'd cupped her cheek and gently ran his thumb over her split lip, compliments of the dickhead twins. It would have been easier if he'd been a pureblooded asshole. Those little gestures were like tiny glass shards digging into her skin. She was furious. She was defiant. She was even a little bit scared.\n\nBut mostly, she was just sad.\n\nShe shook her head to rid it of complicated and painful cobwebs. She needed a plan, and she needed it quick. Her hour was almost up.\n\nThere was almost no chance of getting out of this unscathed, but she couldn't just not try. Kentucky knew her well, and she had no doubt that he'd anticipated her need to act, and would have prepared accordingly. All of the obvious exits were either blocked off by supply containers or heavily guarded by leering Torrins. The room was crowded with 10 or so heavily armed soldiers. There was no way she'd be able to untie herself, cross the room, evade the guards standing watch in front of the exits and dart out through one of them without being followed. Obviously impossible. Which just left...\n\nThe bathroom.\n\nThe plan was so basic, such an obviously idiotic idea, that they might have immediately dismissed the possibility of escape-by-toilet. But that was exactly what she intended to do. If she was fast enough, it was worth a shot. It might be useless, and she might be punished for trying, but punishment or ill treatment did not frighten her at the moment. Her rage kept her sheltered from the fear a healthy sense of self-preservation surely would have given her.\n\nShe began grunting and yelling behind the tape covering her mouth, trying to get attention from one of the Betas around her, locked and loaded rifles slung over their shoulders. After what felt like a full twenty minutes, one of them finally took notice and walked toward her, yanking the strip of tape to the side and freeing her mouth. She worked her jaw a few times and peered up at him. He looked so young, his light brown eyes betraying the fear and unease he felt. Good. The little fucker should be scared. What they were doing was moronic and could not possibly end well.\n\n\"I have to use the bathroom,\" she said quietly, playing the part of the docile, frightened damsel in distress. His eyes darted around the room, looking to his companions for instruction, but no one else offered to step in, and no one seemed concerned about a simple bathroom break. They were all busy casting nervous glances out the one window letting in dingy light.\n\nThe clock was ticking. Their hour was approaching, and so far, there had been no sign of the General or the cash they'd demanded.\n\nAfter a long moment of consideration, the kid walked to the back of her chair and untied her wrists, looping them around to her front and retying the knot, loosening them slightly to give her hands more circulation. In a few minutes, she was going to hurt him, but she was grateful for the nearly-kind act.\n\nWould have been better if he'd untied her altogether, but whatever.\n\nHe grabbed her arm and led her to the back of the shabby building where a shabby washroom hid in a shabby corner behind shabby hazmat gear. She climbed over boxes of gear to get to the tiny space and walked in, spinning around to look beseechingly at the young Beta. \"You don't have to watch me, do you?\" she asked softly, doing her best to give him the widest doe eyed look possible.\n\nHe shook his head, giving her a small smile. \"No miss, I'll trust you. Just...\" he turned to look at the impossibly small window at the top of the cramped wash room. \"Don't try anything stupid.\"\n\nShe nodded, smiling wide for the kid. Maybe she wouldn't have to hurt him. How did such a sweet pup get mixed up in this whole disaster?\n\nShe shut the door behind her. Her eyes darted around the narrow space, taking in the very, very small window, soiled with rain splatter, bug guts and spider webs. Lovely. The lock on the door presented a dilemma. It may give her an extra few seconds, but the pup would get suspicious immediately, and it wouldn't hold up to more than one or two decent kicks. She turned away from it. The rusty metal sink was very utilitarian and provided, conveniently, a decent foothold on its long, flat surface.",
        "She climbed up onto the sink, her bound hands doing their best to hold on to whatever she could grip. The window taunted her. Even standing on the sink with her arms stretched, the bottom of the sill was out of her reach. Her skills at getting through tiny spaces might be put to good use, but it was contingent upon two factors: A) The window had to be unlocked, and B) She must be able to reach it to hoist herself up and over. She looked back at the door.\n\nJust don't start getting suspicious, kid. \n\nThis was it, her best, and perhaps only, chance to get away. No doubts, no overthinking. She just had to act. With a deep breath, she crouched, then swung her arms up as her legs pushed off the corroded metal sink with an awkward, decidedly ungraceful move she could really only call a hop. But it was enough!\n\nFuckin A. \n\nHer fingers clutched the small, concrete ledge just below the window sill, and her breathing sped up. Slowly, carefully, she walked her legs up, folding her body like a caterpillar climbing a tree, clutching the ledge for dear life. Once she had her knees high enough, she pushed off the wall with all of her remaining strength and threw her head against the window.\n\nIt flew outwards, opening to the outside of the building. Thank fuck. With a little cry of victory, she began maneuvering the rest of her body out the window, just as she heard a commotion outside and a pounding on the door.\n\nNo time. Get the fuck up there.\n\nHer feet scrambled up the wall, struggling to find purchase against the flat concrete siding. An especially large Beta broke through the door and lunged. He caught her ankle in his bruising grip and began to pull her down. Panicked, she kicked out with her free foot, connecting with his jaw. He grunted and fell back just long enough for her to squirm the rest of the way out and tumble to the wet pavement below. She cried out at the quick flash of pain that shot through her injured shoulder, but forced herself to straighten and take a quick inventory of her multiple injuries. No broken bones aside from a possible fractured rib, and legs that still worked.\n\nTime to go.\n\nShe heard boots running toward her and scrambled to her feet. Running with her hands bound would slow her down, but she was still fast, and might be faster than these fucks. She took off, finding the main road and sticking close to the side, hoping to see some Lostran uniforms. She didn't know where to go, didn't know which buildings were captured and which were friendly, but anything was worth a chance. She just needed to get to one of the further buildings and --\n\nA hand grabbed the stupid, thin as fuck shirt and yanked her backwards, tearing some of the fabric at the shoulders. A body slammed into her and she was sent sprawling over the hard pavement, her cheek slamming into the concrete with a grim smack.\n\nWell, fuck me sideways.\n\nA knee pressed into her back and fingers crept over her scalp, someone yanking back hard and pulling her face up and around.\n\nOf course, it would be Kentucky. Who else would have caught up with her? His face was mutilated by whatever dark rage had corrupted him enough to bring him to this desperate point. She watched his warm hazel eyes darken as he appraised her coldly. She knew what was about to happen.\n\nThis was going to hurt.\n\n\"Brad. Stop. Look at what you're doing! You can't win!\" She was pleading, and she hated herself for it. A part of her hoped she could still get through to the boy she had stayed up late with, watching the fireflies from the wooden picnic tables that had given her more than one splinter, talking about everything from music to philosophy to their plans and dreams for the future. He was in there somewhere, she had seen it, and she was desperate to get through to him.\n\nIt was no use. His grip on her hair tightened, and he yanked her to her feet and drove his fist hard into her gut. She grunted and doubled over, trying to catch her breath. He didn't wait. He jerked her upright and began dragging her back to the supply building. She peeked around as he pulled her forward, struggling to breathe. There were two Betas flanking them, both holding guns that were pointed toward the ground. She didn't think they would actually shoot her if she managed to get away. She was their ticket to riches, their way to draw out Nelson.\n\nHer head spun, both from lack of oxygen and a desperation to end this while there was still time. She refused to let her giant Alpha friend come and play the valiant hero again. She had to get away from these assholes, and soon, before they got a chance to play out their little scene. Even if they did shoot her, it was better than giving in. Alphas or Betas, she didn't cave to bullies.\n\nShe scowled up at Kentucky. \"What about Toad, Brad? What about Prescott, and Markus, and everyone else who lost their lives to the men you're now playing toy soldiers with? You'd turn your back on them so easily?\"\n\nHis jaw tightened. He kept his eyes forward, but she could feel his anger coming off him in waves. \"Chid base was left untouched,\" he growled. \"They remain unaware of what's happening here. No one else in Rico will lose their lives for this shit.\" He looked at her out of the corner of his eye. \"You were right, you know,\" he said, smirking. \"The war is bullshit, it could have been over years ago. Nelson profits from the spoils of war. Incentives gleaned from companies shipping weapons and supplies line his personal pockets. He'd rather waste Beta lives than surrender the money flowing in from fat men in Lostra who turn a blind eye to all this bullshit.\" He gestured to the base around them with the hand that wasn't gripping her arm so tight, it was sure to leave bruises.\n\nShe was silent for a moment, letting herself be dragged along. What could she say to that? He was right to be pissed off. But this wasn't the answer.\n\nThey reached the screen door to the supply building, and she dug her heels into the pavement, trying to prevent him from dragging her through. It worked for half a second before he overpowered her and pushed her inside. \"How is any of this my fault, Brad? How can you justify what you're doing to me? Will you kill me if Nelson doesn't show his face? You know leaving Chid wasn't my choice.\" Her voice was steady. She was careful not to betray the panic she felt simmering just beneath the surface. She would find a way out of this, but she risked her life in the process. The Kentucky she thought she had known wouldn't be able to hurt her, but she was unsure about this darker version that had taken over the friend she loved.\n\nHe turned to face her fully, gripping her other arm and leaning down to bring his face to hers. His rich brown eyes bore into her with an intensity that singed her like a flame. \"You don't get it, Omega,\" he seethed, the fury in his voice catching her completely off guard. \"You're not one of us, you never were. You were always a stuck-up bitch. I wasted my time on you, when I should have just fucked you and taken your job.\" He raked his gaze down her body and licked his lips. \"It's not too late, you know. If Nelson doesn't show...\"\n\nShe bit her lip, willing her tears to stay back. His words had cut her to her core. The comradery she had thought they had all fostered for one another, was all of it a lie? Had she been fooling herself into thinking she had successfully gained her medics' respect? Was that all she was to them, a stuck-up bitch they were forced to work under?\n\nHer eyes flicked back to the screen door, mentally measuring the distance she would have to run before she could get through it. She knew she was faster than Kentucky, but not by much, and possibly not at all, considering some of her recently acquired injuries. The Torrin soldiers were behind them, apparently trusting Brad to settle the situation, and resuming their places seated on wooden supply crates filled with gods knew how many weapons. Weapons paid for with Beta blood. She was angry, too. She wanted revenge just as much as he did. But she didn't agree with this. \n\nEspecially considering she was being used as bait.\n\nEnough was enough. She waited until his grip loosened. He dragged a finger down her cheek, along her neck, and onto her chest, drawing a circle around the lace-covered nipple exposed by her tiny, torn shirt. She scowled up at him. \"You know what, Kentucky?\" she growled, pulling herself to her full height, refusing to back down. \"Hmm?\" he said, distractedly, as he started fondling her breast.\n\n\"You're a real fucking asshole,\" she seethed, and kneed him hard in the groin.\n\nHe grunted and doubled over. She didn't skip a beat. Darting out the screen door, she ran full speed down the main drag, willing herself to push down the pain, to go faster, faster...\n\nA bullet skimmed past her arm and Ivy cursed. They were going to kill her. They were really going to kill her! It was still better than being used for some misguided ransom. A bullet in the head was cleaner than a trip to the Factory. If that's what it came down to...\n\nShe ran harder, ducking as another bullet flew past her head. How far away was the Alpha barracks? She didn't know if it had been overtaken or not, but if she could get to it, maybe she could --\n\nA familiar, oversized arm reached out from behind a building and hooked around her waist, spinning her around to nearly slam into the side of the wall. Dizzy, she looked up to see four Alphas towering over her, Officer Muscles among them. None of them were looking at her. All of them were armed to the fucking teeth and were taking aim at the Betas who were approaching, rifles raised, looking for her.\n\nShe was furious at Kentucky and what he'd done, what he'd said. Furious at herself for being so well and thoroughly fucking duped. And she knew, logically, that it was always going to come down to this. Even if they'd gotten exactly what they'd asked for, and even if they'd upheld their end of the bargain and returned her safely, the Torrins, or treasonous Lostrans, or whoever they were, would never have been allowed to walk away from this unscathed.\n\nAnd yet... Despite her ripped and dirty outfit, despite her split lip and aching torso and bruised... well, everything... Despite the sting of Kentucky's betrayal and his threats and taunts...\n\nShe didn't want it to end this way.\n\n\"Stop!\" she cried, pounding her bound fists against the nearest Alpha's torso. He looked down at her, his head cocked in confusion. She hit him again. \"You're the ones that brought them to this! They're desperate, can't you see that?!\" A second Alpha was looking at her now, concern clouding his features.\n\n\"You're safe now,\" he said gruffly. She bristled.\n\n\"No fucking thanks to you!\" she snarled. She staggered over to her Alpha and kicked his ankle, the bond beneath her sternum thrumming unpleasantly at her obstinance. He glanced briefly down at her, as if he barely registered the fact that she was still there. \"If you kill him,\" she warned, \"I will never forgive you.\"\n\nHe flicked his eyes to hers, then back at the rapidly approaching Betas, oblivious to the danger they were walking toward. \"They threatened your life,\" he growled. \"That cannot be forgiven.\"\n\nShe wanted to scream. This was all too much. So much had happened in such a short amount of time. She felt like a leaf caught in the wind, unable to control the direction of her own movements. \"Please,\" she begged, tugging on the fabric of his shirt. \"They're just boys. Boys you helped bring to this point. I know,\" she said, scowling up at the giant. \"I know about Nelson's deals with the Torrins. I know he feeds them information and orchestrates deaths on both fucking sides of this stupid, made-up war! This is his fault!\"\n\nFinally, he looked at her fully, searching her face with his wild storm-grey eyes. There was confusion there, she saw, and an unease that deeply troubled her. Didn't he know?\n\nAfter a long, tense moment, he lowered the weapons he held in both hands, stepping back and ushering her away from his three companions. He dropped his rifle and holstered his sidearm, crouching down to cradle her face, inspecting her for damage. \"You're confused, precious one. You --\"\n\nA shot rang out behind him, and then a blanket of bullets fell upon the Betas across the way. \"NOOO!\" she screamed, struggling against the arms that were suddenly secure around her, pulling her further back, away from the fighting.\n\nSoon, much too soon, silence fell over the base, stifling and terrible. She felt the arms around her relax as the three unfamiliar Alphas walked back to them, entirely unscathed, like they'd just come from Sunday Brunch. She yanked herself sharply out of his grip and darted around them all, faster than he had time to react.\n\nA graveyard of scattered bodies littered the ground, blood painting grotesque patterns on the side of the closest hangar. And there, in the middle of it all, Brad's lifeless body lay splayed out like an open wound.\n\nHer knees gave out, and she crumpled beside him. He had threatened her, tried to use her as a hostage, was even ready to kill her.\n\nSo why did she feel a part of herself die at the sight of his dull, blank eyes?\n\nHer vision blurred, and she closed her eyes and curled over, resting her forehead against Brad's. Someone released a terrible cry, animalistic and full of despair, and it took her full moments to realize it was coming from her. She choked on a sob, just as an arm hooked around her waisted and lifted her up. She was pulled away into warm strength, cradled like a child against a massive chest. She went limp, lost to the numbing sound of the Alpha's strong purr and the comforting thrum of the bond.\n\n..............................\n\nHis brave Omega hadn't stirred since the death of her renegade friend. Her reaction had puzzled him, her words even more so. Naturally, he'd heard the rumors. It would have been na\u00efve of him to believe that Nelson's attitude and actions of late did not indicate a measure of corruption and subsequent fear of exposure. But he'd assumed Nelson was merely using his position to benefit financially. Had he taken his corruption to this next, unforgivable level? Had he been feeding information to Lostra, orchestrating battles to justify staying in the hostile country? The old man had many things to answer for, but it could all wait. Most of the base had been recovered, and he left it up to the rest of the Alphas to finish the job. He had an injured, desolate mate to tend to.\n\nHe gently laid her down on the velvety couch she seemed to prefer over the bed. Her eyes stared ahead blankly. \"Ivy,\" he purred, stroking her cheek. She looked at him, her green eyes glistening.\n\n\"He was just confused,\" she whispered. \"It wasn't really him.\"\n\nHe shushed her, sliding his hands up her dirt ridden body, taking the torn fabric of her shirt from her torso. She winced and hissed as he raised her arms. Storm-cloud eyes grew dark as he took inventory of the marks and bruises that marred her perfect skin. She needed to be checked out, and she would be, just as soon as he'd given her what instincts and the discordant thrum of the bond told him she needed most.\n\nHe stripped them both until their naked bodies pressed together. He growled once, low and severe, drawing slick from her shuddering frame. His brow pressed to hers, he slipped into her, groaning at the feel of her tightening walls gripping him. She sighed and closed her eyes, arching her back to meet his slow and gentle thrusts. He nuzzled into her nape, drinking in the scent of her to assure himself that she was truly safe in his arms. He wanted to fuck her, wanted to throw himself into her with all the urgency his body demanded, but injured as she was, he held back. She needed the quiet tranquility that came from being taken, filled up and knotted by her mate. This was about her, not him.\n\nShe gasped and clutched him as she came, and like a command, his body responded, his knot firmly locking her in place beneath him. He stroked her forehead and hushed her as she cried.\n\nHe would hold his mate together as her world fell apart."
    ],
    "authorname": "ReckingBall",
    "tags": [
        "alpha",
        "omega",
        "omegaverse",
        "military",
        "noncon",
        "nonhuman"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/poison-ivy-ch-03-1"
}