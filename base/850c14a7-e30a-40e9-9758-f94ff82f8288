{
    "title": "Cat Burglar",
    "pages": [
        "I'll start with a confession. My name is Sarah, and I'm a masturba-holic. I know that's not a word, but you get the idea. My motto is you should have sex on a regular basis with the person you love the most, and for me, I'm it.\n\nI've been hooked on masturbation ever since having my first orgasm, brought on by my own fingers in the bath. And later, when my college roommate and I started doing it together and watching each other, I found out how hot it was to bring another person into the mix. \n\nBut now, thanks to my new friend, Lisa, I am not only a masturbation addict, but a cat burglar, as well. Let me explain how a fairly normal married woman of 35 found herself sneaking into an occupied house in the middle of the night. In order to understand that, you must first get to know my Lisa.\n\nLisa and I met online through a mutual friend. The first time I chatted with her, I knew that there was a sexual fire smoldering inside her that just needed some fanning. She is smart, funny and sexy, and once she shared her picture with me, I found out she is damn cute, as well.\n\nAt 5-6, Lisa is three inches taller than I. Her lithe, willowy figure makes her 36-C breasts attract even more than their share of attention. They stand out as only the breasts of someone 25 years old can. I know that for certain, as I am ten years older and have to work much harder now to keep my body in condition. But I make the effort and have been rewarded with a figure that still gets ogled regularly by a fair number of both men and women.\n\nLisa has lovely blonde hair that barely touches her shoulders, in contrast to my own dark brown curls. Her eyes are dark brown like mine. Yes, those wonderful eyes. When I first saw them, I knew for certain that there was some mischief, some daring and some steamy sexual energy inside that pretty head of hers.\n\nWe exchanged a lot of e-mails, shared details of early sexual experiences and basically got to know each other over a month's time. But it was when we began to tell each other about some of our current escapades that things really began to get interesting.\n\nIn one of my e-mails, I told Lisa how I get really turned on by masturbating in bed late at night right next to my sleeping husband. It's not that David isn't a good lover. He really is, but our opportunities for sex seem so few and far between, primarily because of his demanding work schedule that gets him up at 4:00 in the morning and sends him off to bed by 9 p.m.\n\nBut I have to confess, even if I were getting all the marital (or even extramarital) sex that I could handle, I would still be pleasuring myself on a regular basis. After all, I am a masturba-holic. \n\nAnyway, I shared my late night masturbation technique with Lisa and she was, shall we say, intrigued. So intrigued, in fact, that her e-mail the following day advised me that she had tried it as her live-in boyfriend, Richard, lay sleeping next to her. She described how she had slipped a finger inside her pussy very quietly and carefully, then cupped her mound with the palm of her hand. That position allowed her to put pressure on her clit as she gently massaged herself. I believe she termed her orgasm \"spectacular,\" and she was hooked.\n\nLisa found, as I have, that it's so much more than the physical feelings that arouse us as we lie next to our partners and fuck ourselves. It's really the naughtiness factor, the feeling of keeping a special secret that makes us just want to explode. And explode we do now on a regular basis.\n\nBut as the weeks passed and our late night diddling continued, we began to talk about how to take our little game to a whole new level. I knew by the look in her eyes in the photo, that with Lisa, anything was possible. So we decided to meet in person for the first time and figure out how we could add a little spice to our fun.\n\nSince we both live in the same large city, getting together was not a problem, once we got past the usual trust issues that are a part of all online relationships. But we were able to navigate those, and decided to meet at a quiet restaurant in the mall where Lisa works.\n\nI recognized her immediately as she glided across the restaurant toward our table. We hugged each other like old friends and I could feel that she was not wearing a bra, as she was often inclined to do. She was lovely in her yellow sun dress with spaghetti straps and she smelled of perfume. Her cotton dress had a full skirt that flared and flounced as she walked and hit her shapely legs about three inches above the knee. Her T-strap sandals with three-inch heels gave her a graceful, sexy walk and displayed her tanned legs to their best advantage. I could tell she dressed herself carefully for our meeting, as did I.\n\nMy dress was longer, hitting me just below the knee. It was a black, green and yellow summer print with a halter top that fastened at the back of my neck. Like Lisa, I was braless, and my 34-C breasts bounced a little as I walked, stimulating my nipples to an unusual hardness. Of course, some of that hardness must also be attributed to Lisa.\n\nAs soon as we were seated at our table in a quiet corner of the restaurant, Lisa had to know if I had kept my promise not to wear panties to our first meeting. Going bare, as she termed it, is a big turn on for her, and she wanted to initiate me into that sisterhood. She promised to do the same.\n\nBlushing a little bit at her directness so soon after our first meeting, I confessed that I had, indeed kept my part of the bargain.\n\n\"Show me,\" she commanded playfully, as I looked at her with my eyes and mouth wide open.\n\n\"What do you mean?\" I asked, knowing very well what she meant.\n\n\"I want to see your pussy,\" Lisa replied in the same tone she might have used in asking to see a photograph of my pet German Shepherd.\n\n\"I'll show you mine, if you show me yours,\" she giggled.\n\nNot wanting to be intimidated or put on the defensive by this pretty young girl ten years my junior, I began to seriously consider how I might \"show her my pussy,\" as she so delicately put it. I surveyed the restaurant and found it to be fairly empty at this late afternoon hour. That gave me some hope that I might be able to prove my adherence to our bargain without getting thrown out of this fine establishment.\n\nI turned sideways in my chair so that my knees were pointed only at Lisa (and possibly the bartender on the far end of the room), raised the hem of my dress to about mid-thigh and parted my legs as much as I dared. They were far enough apart that I could feel a sudden draft of air play over my pussy, which was growing damper by the minute.\n\nLisa leaned back in her chair to get a better view of my little show, and smiled that mischievous smile of hers, apparently satisfied that I had, indeed, kept our bargain.\n\n\"I'm glad you're not shaved,\" she said bluntly. \"I just love the way it feels when my hand moves from soft, smooth skin to the coarse texture of pubic hair.\"\n\nI knew right then that Lisa was planning to do more than look at me. And the thought made me even wetter.\n\n\"Okay,\" I said as I looked directly at her, trying to regain control of the situation. \"Now it's your turn.\"\n\nApparently, showing her pussy was not nearly as new to Lisa as it was to me. Without even looking around to see who could be watching, she parted her legs much wider than I'd dared to and offered her lovely mound as evidence that she, too, knew how to keep a bargain.\n\nBut Lisa didn't hurry as I did to close her legs before someone saw. She wanted me to have the chance to admire her. And, of course, I wanted that, too. Very much.\n\nI now knew for sure now that Lisa is a natural blonde. Her bush was trimmed neatly into a triangle and her little wispy curls played over her outer lips. The lighting was not great, but I am sure I saw little droplets of her nectar that had collected on the flaxen curls near her slit.\n\nI blushed again, but this time not from embarrassment. Instead, from the realization of how turned on I was by this beautiful girl whom I'd met less than 10 minutes ago. Of course, we had talked about all sorts of intimate things online, but seeing her and her pussy in the flesh, so to speak, was an entirely different experience.\n\nI thought I had been ready for it, but I wasn't. Lisa was much more formidable in person, and I'd better get used to it.\n\nThe next hour just flew by as we got to know each other better. We marveled at how similar we are sexually, despite the difference in our ages and backgrounds. We giggled like schoolgirls as we shared again many of our sexual secrets, this time in person. It's amazing how much more intimate these conversations become when you can look in the eyes of the person you're confiding in, see her reaction, feel her understanding.\n\nFinally, we got around to the topic of our favorite common interest\u2014that of lying in bed next to our partners and getting ourselves off while they're asleep. But we had not come just to rehash our past adventures in surreptitious masturbation. We were here because we had decided to take it to a whole new level. A level that is so daring and naughty that we both got incredibly wet as we dared to speak about it out loud.\n\nYou see, a couple of weeks ago, while chatting online, we decided that one of us would enter the other's house one night, sneak into the bedroom, and bring the other to orgasm\u2014all without waking the unsuspecting man sleeping in the same bed. We were here today to decide who would sneak into the house and who would be the one lying in bed receiving the pleasure. \n\nThe whole idea just sounded so daring and scary and erotic, that neither one of us really wanted to volunteer for either role in our little game. On the one hand, how would it feel to be lying in bed beside your partner, when all of a sudden, a familiar female hand reaches up and very quietly begins playing with your pussy? You would know that you could not make a sound or any kind of sudden movement. Otherwise, your naughty little game would be discovered and both of you badly embarrassed.\n\nOn the other hand, how would it feel to actually sneak into another person's house, creep very quietly into their most private room, then begin to invade the pussy that the man lying very close in the bed thinks belongs to him? If you are discovered, you might actually end up in jail, branded as some kind of sexual deviant.\n\nThe whole thing was just so dangerous and delicious that neither of us could decide which role we wanted to play, dared to play. Each one scared us. But at the same time, each one made us nearly cum from just the thought of it. Finally, we decided to flip a coin. The one who makes the correct call must be the one who enters the house. \n\nI took out a shiny new quarter and tossed it into the air. Lisa called \"heads\" and we both held our breath as it fell toward the plush carpet of the restaurant--seemingly in slow motion. Our hearts pounded as we waited for the result--to find out which of us will be the cat burglar and which one will be ravaged in her bed next to her partner. Finally, the coin landed . . . with \"tails\" looking up at us.\n\nI am the cat burglar. Lisa will lie next to Richard while I make her cum.\n\nNow knowing our roles, we discussed the details of this depraved adventure. I will call Lisa before bedtime on the night I plan to enter her house to give her just a few hours warning. Even though the idea of complete surprise was appealing, we agreed that a totally unexpected hand on her pussy in the middle of the night could create a reaction that would wake Richard, and perhaps the neighbors, too. \n\nLisa's assignment was to make sure that Richard is asleep when I arrive and that the drapes are closed tight so the bedroom is as dark as possible. I wanted the greatest amount of concealment.\n\nOur roles defined and detail mapped out, Lisa handed me a spare house key. As I reached for it, she pulled me tight to her, kissing me deeply, her tongue exploring every inch of my mouth. Ignoring the fact that we were in a very public place, I pressed my breasts to hers and our pussies rubbed sensuously together. \n\nWe held our embrace for a few moments, the feelings of what we were doing right then intensified by the knowledge of what we were about to do. We were both literally panting by the time we broke our kiss.\n\nI pulled her ear close to my mouth, caressed it with my tongue and whispered, \"I'll see you one night very soon.\"\n\nWe'd already agreed that we would have no more contact until \"the night,\" just to intensify our desire and heighten the sensations further, if that is even possible. We said our goodbyes and left the restaurant as we came\u2014separately. But Lisa and I both knew that things between us would never be the same again.\n\n************************\n\nFor most of the next week, Lisa was unable to relax at home in the evening. She paced around, fidgeted, and experienced this general feeling of unease every time she entered her house. She knew what was going to happen and who was going to do it. But still she had this feeling of dread, knowing that if the little game she and Sarah were playing was discovered, all hell would break loose. But at the same time, she couldn't wait for the night to arrive, whenever that might be.\n\nSarah and Lisa had agreed not to allow themselves an orgasm until \"the night,\" just to intensify the sensations further. Lisa had already put Richard off a couple of times when he wanted to have sex, before finally letting him fuck her missionary style, just to shut him up. She knew there would be no chance of having an orgasm like that, anyway, so it wasn't really cheating.\n\nAnd in Sarah's case, a sexual drought lasting a week or more was not at all unusual, so no one even noticed at her house.\n\nFinally, six nights after they flipped the coin, Lisa's cell phone rang. In her state of heightened sensitivity, she jumped and goose bumps sprang up on her arms. She grabbed the phone quickly to answer but already knew from the caller ID who it was. Sarah.\n\nOn the other end, Sarah spoke only one word, \"Tonight.\"\n\nLisa was startled by her reaction to that one word. Her heart started to race, her nipples hardened, her breathing quickened, and she felt that tingling deep inside that signals the beginning of extreme arousal. Already her pussy was growing wet, without any stimulation other than Sarah's single word.\n\nShe looked at her watch--10 p.m.--too early for bedtime really, but she must get Richard in bed and asleep as soon as possible so he won't be awake to discover Sarah upon her arrival. He was watching television, and hadn't even seen Sports Center, so it was going to take a little \"persuading\" to get him in bed and ready for sleep.\n\nLisa decided to fix him a drink--a strong one--to relax him a little bit. Richard was surprised as she offered him a Jack and Coke, mixed very strong, but he accepted it gratefully and leaned back in his chair to enjoy a little more television with the drink in his hand.\n\n\"Shit,\" she thought. \"It's not going to do me much good if he sits there and nurses it for an hour.\"\n\nSo she tried another approach. She moved over to him and sat on the arm of his chair, leaning to him to run her tongue over his ear and dip it inside a little. That always makes the hair stand up on the back of his neck and lets him know she's ready to fool around. Richard looked up at those lovely dark eyes and smiled, as Lisa noticed a bulge developing in his blue jeans.\n\nAnother ear lick, this time accompanied by her hand just inside his denim shirt, tickling the coarse brown hair on his chest, and giving her the opportunity to caress his nipples a little. Lisa's aggressiveness was a pleasant surprise because Richard was used to being the one who initiated sex. But he was pleased with her newfound lust for him.\n\nNext, Lisa reached down and rubbed her open palm over the bulge that was snaking its way down Richard's left leg. She could tell by the look and feel of his cock that he was almost fully hard and was just waiting to be released from his tight jeans. So that's just what she decided to do.\n\nBut first, Lisa reached over to the table where he had set his drink and offered him another taste. Richard tried to refuse and return to the more enjoyable activity that she has initiated. \n\nBut Lisa insisted, \"I went to the trouble to make that drink. Now finish it if you want me to finish you.\"\n\nNo further convincing was necessary. Richard took one large gulp, then another until his eyes began to water, and his face flushed from the strength of the drink. But he'd downed it now, just as Lisa demanded, and he was waiting for his reward. She didn't hesitate to reward him.\n\nLisa's long, graceful fingers reached to unbuckle his belt and unzip his jeans, giving her access to Richard's cock, which had popped out from its downward position and was now pointing straight toward his belly button. She could barely see the head of it sticking out of the waistband of his boxers. It was actually a quite serviceable organ, as cocks go. About seven inches long with a large head and thick shaft. Looking closely, she could see the large vein running the length of it. She always enjoyed watching it pulse with excitement each time he got hard.\n\nShe reached down and took the rigid cock full in her hand, lifted him out of the chair using it like a handle, and led him into the bedroom. Being in control of Richard this way gave Lisa a sense of power that she'd like to enjoy a little more. \n\nBut for now the main idea was to get him off to bed, get him off, then get him off to sleep. In that order and about that fast.\n\nRichard was a little unsteady on his feet as she led him to their bedroom--the one where she knew Sarah would soon be joining her. She thought to herself that the liquor was having the desired effect. And she knew that the combination of a good blow job and the Jack and Coke would soon have him just where she wanted him--snoozing away beside her in bed.\n\nAt this point, Richard needed no further encouragement. He was shedding his clothes like they were on fire. When he finally tried to get himself out of the jeans, his balance was so unsure from the drink that he stumbled and fell face-first onto the bed. \n\nLisa smiled to herself, \"Men are so fucking easy.\"\n\nAs Richard lay naked on the bed, Lisa began removing her clothes, too. Not for him, but for Sarah later. But if Richard wanted to think it was for him, and if it helped him get off quicker, then that was okay, too. Just to make sure he was good and ready, Lisa cupped both her hands underneath her round, firm breasts and lifted them toward her mouth. She used her tongue to trace the outline of each nipple, leaving a visible wet trail on her pink areola. She looked Richard in the eye as she massaged her magnificent globes and traced her tongue over her full lips.\n\nThen, just for effect, Lisa used one finger to part the wispy curls on her mound and traced the outline of her outer lips. Up, down and around very slowly, over and over, while Richard's eyes followed her movements as if hypnotized. She took the finger, now wet with her nectar, and raised it sensuously to her mouth, spreading her juices over her lips like lipstick. Finally, she reached down, grabbed Richard by the back of his head and pulled him to her mouth for a long, wet kiss, well-lubricated by her own pussy.\n\nRichard was literally panting by now. Lisa knelt beside him on the bed and went to work, first sliding her hand up and down his shaft very lightly, knowing how this would increase his arousal. She gathered some of the pre-cum that was already oozing from him and used it to lubricate the shaft as her stroking gained speed and intensity.\n\nRichard tried to reach for her pussy, to return some of the pleasure that he was receiving, but Lisa shifted her position further down his body so he couldn't reach her. She certainly didn't want to risk having an orgasm now and violating the \"rule\" she and Sarah had agreed to. ",
        "Her face was even with his cock now and she leaned to him and took the purple head in her mouth. It was an act she'd performed many times before, but always it was for Richard. This time, it was actually for Lisa . . . and Sarah. She remembered the beautiful vision of Sarah opening her pussy to her in the restaurant as she moved her mouth up and down, gripping the base of the shaft and cupping his balls in her other hand. She used all the little tricks she'd learned in her time with Richard to get him off--and off to sleep--as soon as possible.\n\nLisa removed her mouth for a minute and started pumping his cock faster, as she squeezed his balls gently. Richard reacted immediately, stiffening his legs and raising and lowering his hips in rhythm with her strokes. His shaft began to tense and the head swelled even larger as he moved closer to his climax. Knowing he was right on the verge, Lisa pulled down firmly on the foreskin, holding it tight in her hand and at the same time took him back in her mouth, sucking hard and steadily.\n\nRichard moaned with pleasure, his body tensed even more, and Lisa could feel the throbbing begin in her hand. And at almost the same time, she felt the first spurt of his cum hit the back of her throat. Quickly, she removed her mouth, but continued to fuck him hard and fast with her hand, now lubricated by the first of his cum. He shot two, then three more times as she milked the jism from him, knowing that as the semen left his body, his desire to stay awake was leaving with it.\n\nAs his cock began to go limp in her hand, Lisa studied Richard and saw that his eyes were already half-closed. The combination of the orgasm and the liquor was about to turn the lights out on poor Richard for the night. Although, \"poor Richard\" isn't actually an appropriate title for a man who had just received the blow job of his life.\n\nAt any rate, Lisa took some tissues from a box on her night stand, cleaned him up a little bit, and allowed Richard to drift off to dreamland. Then she took another tissue, and spit all of his semen that she could into it. She never really liked to swallow all that much.\n\nNow, with Richard already breathing deeply and regularly on his side of the bed, Lisa slid naked under the sheet, lay very still, and waited to see what would happen next.\n\nWith Richard asleep, Lisa could now begin to concentrate on her own senses again, and she was amazed by what she felt. She lay very still, almost holding her breath. Every sense was heightened. She could hear dogs barking outside, the routine creaks and groans of the house, and not surprisingly, the beating of her heart, pounding hard and fast in her chest.\n\n\"I've got to get myself under control before I have a heart attack,\" she thought to herself.\n\nHer nipples were like little bullets atop those beautiful rounded breasts. Her skin tingled all over. Her nectar was beginning to collect in her pussy and ooze out just a little between her swollen lips. Although Lisa was tempted to reach down and enjoy her arousal more fully, as she had done on so many other nights as Richard lay sleeping, she refrained. She knew that one touch there would electrify her and push her right over the edge to the orgasm she had been forbidden to enjoy before Sarah's arrival. \n\nSo she lay in their bed, listening to Richard breathe and listening for Sarah to make her entrance and begin the next stage of their game. She glanced at the clock--11:05. \n\n\"Shit, what time is Sarah going to get here?\"\n\nIn time, Lisa finally relaxed just a little. Her eyelids began to droop, and without realizing it, she entered that dim world between consciousness and sleep.\n\nThe front door opening jolted Lisa from her half-slumber. The sound was really quite faint, but in her heightened state of awareness, it sounded like someone had dropped a brick on the tile entryway. Her entire body tensed again as she knew Sarah was making her way to the bedroom. To her bed. Where Richard lay sleeping only inches away.\n\nShe glanced at the clock, trying to not even move her head--12:47.\n\nThe bedroom door was open. Lisa intentionally had left it that way when she led Richard to bed by his cock. She didn't want even the possibility of a squeak as Sarah entered. Her eyes were open wide, pupils dilated in the dark and locked on the doorway across the room, about 15 feet away from where she lay, tense, aroused, and scared.\n\n\"Shit!\" she thought to herself. \"What in the fuck were we thinking when we decided to do this?\"\n\nLisa knew there was really no way to stop it from happening now, even though her head told her that's what she should do. But that tingling deep inside told her to lie very still and wait for Sarah. And that little tingling feeling won out, as usual.\n\n****************************\n\nIn a moment, my silhouette is at the bedroom door. I'm certain Lisa can't make out my features in the darkness of the room, but she must sense my movement in her direction. Her eyes are undoubtedly straining to make out my form.\n\nFinally, when I am right beside the bed, Lisa sees me for the first time, my body illuminated dimly by the glow of the red numbers on the alarm cock. That is the brightest--and only--light in the room. Her eyes strain to make out details and I hear her gasp quietly when she realizes that I have removed all my clothes before entering the bedroom.\n\nMy nakedness signals that we are both fully committed to this dangerous game. There is no way I can make a quick escape if Richard awakens unexpectedly. \n\nDespite her apprehension, Lisa smiles to herself, \"This chick is fucking nuts.\"\n\nThen she can't help but add, \"I must be, too.\" I am right beside the bed now, my bare thighs almost pressing against the mattress where Lisa lies with Richard. I hear his regular breathing and take some comfort in the fact that he is deeply asleep . . . at least for now. I look down and see Lisa lying on her back under the sheet, her body ramrod straight, unmoving. The sheet barely moves with each breath, and if I didn't know better, I'd think Richard was sleeping with a corpse. The sick bastard! I can't help but smile at my stupid little joke.\n\nBut this is no time for joking. The adrenaline is shooting through my body now. My heart is pounding in my chest and I struggle hard to regulate my breathing, trying to take in enough oxygen to keep me conscious, while not gasping for air as every ounce of my being wants to do right now.\n\n\"Get yourself under control,\" I say to myself firmly. \"There's no margin for error here.\"\n\nSuddenly, every muscle in my body tenses, as I feel a hand moving up my inner thighs. But I relax a little when I realize it is Lisa's. She has slipped it out from under the sheet and started using it to caress me lightly. I can't help but close my eyes just a bit to savor the sensation as I feel her fingers move higher still.\n\nI understand what she is doing now, and I move my feet farther apart to give her better access to my pussy. I feel her now, tickling my pubic hair, which has already collected little droplets of my juices. I know from the proximity of my wet cunt to her face that Lisa not only feels my arousal, but smells it, as well. I wonder how keen Richard's sense of smell is.\n\nI reach down with my two hands and use them to part my swollen outer lips, and Lisa's finger slides effortlessly inside. She curls her finger to locate my magic spot and with the same motion, presses her thumb to my enflamed clit and begins massaging it. She slowly fucks me with her hand, probing, pressing, massaging, but being very careful not to move her hand or arm enough to disturb the sleeping Richard. \n\nThe combination of fear and the sense of daring that I feel, along with the magical work being performed so quietly by Lisa's hand, has me right on the brink of orgasm. I know that just a few more times with her thumb against my clit will send me over the edge.\n\nBut suddenly, we both freeze as Richard stirs and changes positions, rolling from his back to his side, facing away from us. The sudden start triggers a throbbing inside me like I have never felt before. My contractions grip Lisa's finger tightly, actually pulling it deeper inside me as I cum. Instinctively, I press my thighs together to lock her hand against me for as long as possible. I bite my lip to keep from groaning or crying out.\n\nI know she realizes what has happened because the finger inside me begins to press harder on my G-spot, trying to intensify this magnificent orgasm even further. And it does. The stimulation of my magic place, and the strength of my contractions cause my cum to literally shoot from my cunt, coating Lisa's hand and arm with my juices.\n\nI've never \"ejaculated\" like that before, and I know Lisa must be as surprised as I am. I wish we could talk about it as we cuddle later, but this is not exactly the venue for gentle sex and loving conversation. This is a time for quick, naughty fucking.\n\nAs my spasms subside, I collapse on the floor beside the bed and lie there panting (as quietly as I can). Careful not to move too quickly, Lisa has left her hand hanging over the side of the bed, where only minutes before it was madly fucking me to the best orgasm of my life. I touch that magical hand tenderly and realize it is soaked with my cum.\n\nMoving closer still, I begin to lick myself from Lisa's hand, taking her fingers in my mouth one at a time, and loving them as I would a cock. Next, I lick her palm, which must tickle, as she involuntarily jerks just a little. Finally, I wash the back of her hand with my tongue and remove the final traces of myself from it.\n\n\"Now,\" I think to myself, \"it's your turn, sweet Lisa.\"\n\nRichard is now lying on his side, his back to us, making it just a little less likely that he'll awake suddenly and find me fucking his girl friend. His breathing is again steady and deep, signifying very sound sleep. But I realize we must not be careless, as he could awake and discover us at any moment.\n\nLisa is still on her back, covered by the soft cotton sheet. I know it is soft because I am now sliding my hand underneath it, reaching slowly and carefully for Lisa's naked body. She tenses a little as she feels my hand nearing her, and I feel an involuntary shudder when I finally touch her bare skin for the first time.\n\nMy hand glides quietly and slowly up the side of her hip, moves past her pelvic bone, across her flat stomach and to her mound. When I feel her pubic hair, I pause for a moment to fully enjoy the sensation. From her display in the restaurant, I remember fondly how her cute little pussy is covered by soft wisps of flaxen curls.\n\nAs I visualize her mound, a soft moan escapes my lips, which I quickly clamp together . . . tightly. I freeze in position until Richard's regular breathing allows me to relax and begin again.\n\nLisa's pubic hair is wet with her arousal, and I move my hand lower still and run my finger along the length of her slit. I can feel the swelling of her outer lips, and I know they are also pink, if only I could see them. I part them gently and carefully with my finger and immediately feel the hardness of her clit. Lisa's hips move involuntarily as if to encourage my finger to explore her further.\n\nI look up to see her reaction to my touch, and notice that she has moved one hand to her right breast and appears to be pinching the nipple under the sheet. I can see from the glow of the clock's LED display that her eyes are closed and her lips parted. Though she is lying very still, it is clear that Lisa is fully participating in our little game . . . and enjoying every minute of it.\n\nThough the slight thrusting of her hips has tried to encourage me to enter her with my finger, I resist, choosing instead to take some of her nectar and use it to lubricate her hard, swollen clit. Her juices allow my finger to slide easily around and around the hard nub. When I stop for a minute and rest my finger on it, I can feel it throb just a little with each beat of her heart.\n\nI take the clit between my thumb and finger and move up and down as if jacking it off, squeezing just a bit each time I pause. Lisa is beginning to squirm with the sensations that are surely shooting through her body by now, but she struggles to keep her movement to a minimum so as not to disturb Richard.\n\nI can tell from the juices that are now flowing from her cunt and the increased pulsing of her clit, that Lisa is quite near her orgasm. Her hips are rising ever so slightly from the bed, yet trying not to move too much. I know just a few more strokes will take her over the edge, and I pray that she can protect us both by controlling her reaction as much as possible.\n\nBut there is one more thing I must do before allowing Lisa to find release.\n\nI move my hand from her pussy and reach carefully for her right hand, which I know is at work on her breast. When I reach her hand, I take it in mine and slowly move it down to her mound. My hand is now resting on top of Lisa's and hers is resting atop her pussy. I find her middle finger with my own and press both digits\u2014hers and mine\u2014inside her. Her wetness makes this a very easy task indeed.\n\nOur fingers begin to move inside her in unison, and once again I feel her hips buck a little and the first hint of contraction begin. I know I must work fast or she will cum prematurely. I slowly remove my finger from Lisa's pussy, leaving hers behind. But almost immediately she thrusts two more of her own inside, probing herself and pressing hard against her clit with the heel of her hand. Her hand is locked down tight on her pussy and moving as much as she dares.\n\nNow comes the most delicate and dangerous part of our adventure. But I must try it or forever wonder how much better it could have been had we only had the nerve. I move my lips close against Lisa's ear and whisper, \"On your stomach.\"\n\nI can feel her whole body tense with the words, and I know her mind is racing, considering what could happen when she shifts to this new position. We both know the danger of waking Richard is very real this time. To help her make her decision, I press my mouth to her ear again.\n\n\"I want to fuck you in the ass.\"\n\nHer intake of air is not quite a gasp, but close, as her mind digests my words. I watch her face from just a few inches away to get a hint about what she might do next. When I see her head nod almost imperceptibly, my heart starts racing again as it did when I first entered the house.\n\nNot knowing exactly how Lisa is going to effect her transition from back to front or what the result might be, I lie flat on the floor, very close to the bed, hoping to make myself as close to invisible as possible should Richard rouse when she moves. I hold my breath and wait.\n\nSuddenly, I hear the sound of her body shifting on the mattress, followed almost immediately by the sound of Richard's voice! His words are unintelligible, but he is definitely talking, mumbling the way we all do sometimes as we try to fight our way out of a deep sleep.\n\nThere is no more movement on the mattress, so I assume Lisa is now lying on her stomach. The only question is Richard. What if he has to pee? What if he gets up for a drink of water? What if he pulls a gun from his nightstand and blows my head off?\n\nFor just a few moments I completely understand what is meant by \"sheer terror.\" I roll all the possibilities around in my mind, and none of them are good. I flatten myself to the floor, trying to will myself into some non-existent hole. I watch as five, then ten agonizing minutes tick off the digital clock\u20142:05, it now reads.\n\nFinally, I hear a most welcome sound\u2014Richard's deep, regular breathing. He is sound asleep once more and I am now going to fuck his girlfriend in the ass! The sense of elation I feel is quite out or proportion to my circumstances, but the extreme terror, followed so closely by profound relief, have totally screwed up my emotions.\n\nAs I raise my head very carefully to mattress level, I see that my sweet Lisa is actually quite resourceful. First, she has made the transition to her stomach. Second, she appears to have managed to keep her fingers in her pussy as she now lies on top of her hand. Finally, she has somehow managed to shed the sheet in the process, and I now have a full view of her magnificent naked backside.\n\nI pause a moment to admire her firm, rounded hips that look so good whenever she wears tight jeans or a snug little skirt that just barely coves her ass. I also notice that her legs are slightly separated, providing better access to her virgin hole.\n\nAs I admire those beautiful hips, I note that they are moving almost imperceptibly, as Lisa slowly but deliberately fucks the three fingers in her pussy and grinds her clit against the heel of her hand. And as I watch, her movements appear to be getting faster and more forceful. It is clear that if I don't make her cum very soon, Lisa will take care of it without me.\n\nSo I quickly reach down to her pussy and feel the three fingers she has inserted almost all the way to her third knuckle. Her hand is slick with her juices, and I dip my own fingers in her nectar, slide them up her crack and use the moisture to lubricate her rosebud. As Lisa feels this, she begins to fuck her hand harder\u2014so hard, in fact, that I really start to worry about Richard again.\n\nI know the time is growing short, so I quickly ease the tip of my middle finger inside her ass and wait. She grips it tightly, as if to prevent this invasion, but her hips betray her arousal by grinding harder still on her hand.\n\nI feel her relax a little and use the opportunity to ease inside just a bit more, deciding to stop at the second knuckle. She is much too tight and I don't want to hurt her.\n\nBut hurting is not what I'm doing to Lisa, apparently, as her movements continue to demonstrate genuine arousal, pleasure. The fucking movement of her hips comes faster now, causing both me and the bed to shake a bit.\n\nFinally, I feel her rectum tighten around my invading finger and see Lisa's entire body grow stiff. She lies very still now, but I know that her insides are exploding. Her contractions tighten again and again around my finger, and I know that the three fingers locked in her pussy are feeling the same sensations.\n\nHer hips grind her hand and she thrusts backward on mine as she apparently attempts to draw my finger even deeper inside her ass.\n\nFinally, I feel her pulsing slow and then stop. With that one final contraction, I slide my finger from her no-longer virgin hole and savor the variety of sensations I'm feeling right now. Elation, control, total decadence, and still that hint of fear.\n\nI quickly move my face close to Lisa's and feel the tears of release and relief that are trickling down her cheeks. I kiss them softly and whisper as quietly as I can in her ear, \"I love you sweet Lisa.\"\n\nWith that, I creep quietly through the bedroom door and into the dark of the living room. I quickly pull on my clothes, and open the front door. Just before I pull it shut behind me, I hear Richard's voice.\n\n\"What the fuck was that?\"\n\nAs I hurry toward my car, which is parked just down the street, I answer him. \"That, my friend, was the best sex your girlfriend ever had.\""
    ],
    "authorname": "pixie2002",
    "tags": [
        "masturbation",
        "first time anal",
        "blonde pussy hair",
        "online friends meet to fuck",
        "masturbate in bed next to sleeping partner",
        "blonde woman is finger fucked in bed next to sleep",
        "woman sneaks into bedroom to finger fuck another w"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/cat-burglar-2"
}