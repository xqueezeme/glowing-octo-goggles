{
    "title": "All Things Come... Vol. 2 Ch. 08",
    "pages": [
        "The new format has settled down. Luke is still a first person voice, but I now present him from the point of view of others as well. The section headings tell the reader who the narrator is. Thus, 'MAGDA, LUKE', with Magda as the first name, is written from Magda's point of view, (in the third person), with Luke as another third person character whose actions are seen and felt through Magda's eyes. 'LUKE, ULI' on the other hand, with Luke's name first, shows that Luke is the narrative voice and will speak in the first person, while Uli will be seen through Luke's eyes... etc. One of the side effects is that I can get inside the other characters' heads more easily and there's lots more dialogue. I've tried the system with a couple of readers and they say they weren't confused... let's hope they weren't just being polite.\n\nRegards, Satyricon\n\n*\n\nBRUSSELS, MUNICH, SPAIN: APRIL\n\nMAGDA, LUKE\n\n'Don't you dare stop, you bastard, or I'll get off and bite it!' Magda pushed herself hard down onto Luke's cock and hooked her hands under his shoulders. Her head was resting on his chest and she heard his heart pounding as he arched his back and drove upwards into her. Her pussy was stretched impossibly wide to accept all of him, and a muffled gasp was forced out of her. His chest shook as he laughed softly at her response and fresh sparkles of desire chased through her. \n\n'I wouldn't dare,' he murmured into the top of her head. 'You might actually do it, and then you'd be really cross with yourself, and Elena and Anita would have to go into full mourning, and...' Magda slid forward, losing a precious centimeter of his length, and clamped her lips over his. She'd fully intended to kiss him till they ran out of breath but she felt a bubble of sheer joy rising in her and started laughing into his mouth. He grasped her hips, hauling her back and resettling her with his cock deep inside her. She felt it swell and the walls of her pussy were stretched again. His hand snaked down and the ball of his thumb brushed against her clit, rolling across the tip with delicate precision. She dug her fingers into his flesh and moaned helplessly. She was impossibly sensitive after the long, tender ministrations of his mouth, and groaned again as a warning quiver in her belly signaled another orgasm creeping up on her. He sensed the change in her and his fingertips stroked her again, his hips twisting and rising gently, drilling her and sliding the ridge of his glans across her G spot, raising her need another notch.\n\n'I'm going to fill your cunt so full and so hard you'll be spitting my cum for a week, you sexy diplomat, you,' he whispered, and the coarse words crackled through her as he rolled their bodies over with gentle force and lodged himself between her legs. She was hopelessly spreadeagled, completely exposed to him, and he thrust hard, rolling his pubic bone over her mound and crushing her clit gently between their bodies. Their climaxes were gathering and he began to drive steadily into her, stoking their fires and pushing release closer and closer to the surface. She was being filled with unbearable need and she bit his shoulder hard as he accelerated again. Her body began to tremble helplessly as it readied itself for orgasm. A subtle change in his breathing told her that his balls had been dragged tight against the base of his cock and she strained to open herself even wider. A spasm of pure lust overtook her, and her cunt clamped down hard on his engorged cock. His breath was hot on her neck and he thrust twice, and then again, pushing her to the brink and then over it. She flailed beneath him, betrayed by her need, surrendering to the bolts of orgasm that pierced her, connecting every part of her in a web of agonizing fulfillment. Through the haze she felt the hot, powerful gouts of his seed forcing themselves into her, flooding her until she couldn't bear it, and she came again triumphantly, clenching herself round his cock and reveling in her power as he groaned helplessly. For a moment she hovered on the brink of Nirvana, and then the pinnacle was gone and she spiraled down, landing safely in his arms, she thought fancifully, her body relaxing, her heart hammering, her breath whistling through her as she gasped for air.\n\nWhen his weight became too much she opened her eyes and gazed at his relaxed face, his familiar features only inches away, his eyes half-closed and his mouth half-open as he recovered. Sweat trickled down his temple and a drop gathered and splashed onto her cheek. I did that to him, she thought exultantly: he's the best fuck ever and I can wipe him out completely. She twisted and nibbled his chin tenderly.\n\n'Off you get, Luke, or you'll crush me to death and poor Jurgen will be desolated.' His lips twitched in a half-smile at her confident request and he did as he was told, his cock sliding out of her, leaving a feeling of emptiness and need. She felt his semen dribbling out of her and wriggled round and wormed into the crook of his arm, holding the feeling of strength and desirability that he'd ignited. He caught her mood and lay quietly, letting her experience her victory.\n\n'Alright then, missus,' he muttered finally. 'What do you want to do next? Please can it be something calm and stress-free? I haven't got the energy I used to.' She idly tugged at his chest hair.\n\n'I feel all warm and yummy. Can we have a shower, and then I half-promised Anita we'd meet her for a drink at that bar she likes near the Grande Place.' \n\n'Good plan. I need refreshment and Laura's let supplies run down. I don't think there's even any wine left.'\n\n'That's because you're off tomorrow morning,' she said reasonably, 'and no-one wants stuff rotting in the fridge; anyway, poor Laura looked exhausted when I arrived. You must have screwed her right through the mattress.'\n\n'Wine doesn't rot, and she was probably faking it to scare you.' he grumbled, and swung himself off the bed. 'Come on then, sweetheart. Let's have that shower, and try not to drip on the carpet when you get up.' She giggled.\n\n'Rude bastard. I should have bitten it off when I had the chance. You'd better carry me.' \n\nANITA, ELENA\n\n'Why don't you come too?' asked Anita. 'We're only going to have a Friday night drink and say goodbye. He's on a late flight tonight. That's why he's been going through us like a chain saw, making sure we don't have anything to complain about. Four in three days. It's almost showing off. I hope Magda's having fun and that's he's not too tired. I made him sweat last night.' She stretched and then flinched as Elena's tongue slid over her labia. 'Don't do that again yet, or I'll explode. What with him and you, I'm as sensitive as a soap bubble down there.' Elena lifted her head from Anita's strong thigh.\n\n'Don't boast. He left me wasted too, so there's no need to pretend. I saw you when you limped in this morning. And I can't help licking you: it's your tattoos. I can't keep away from them, and your body's so hard and soft at the same time, and you taste so good... Anita, if I come with you he'll know in a flash what ... I mean he picks up on things like that straight away. It doesn't matter to me, but you're...' Her voice tailed off and then she started again. 'I mean, I genuinely never thought we'd end up like this. It's so strange: you're the last person in the world I'd have imagined going down on me.' Her tongue snaked out again and Anita wriggled.\n\n'First real time for me and I can't quite believe it. It was talking about him that got me going. Whatever possessed us to start telling each other all the details?'\n\n'It's his attitude rubbing off on us,' said her boss seriously. 'He's so upfront about what he likes and wants and is planning to do, that being furtive and ashamed just seems silly after a while. You're the one he's affected most though. I've never seen such a change in a person.' Anita ran her finger down the other woman's back.\n\n'I know. For ages now, when I've been going on to him about how I want to be more like you or Magda, and manage to be confident, and seductive, and innocent, and knowing, at the same time, he's said that would be silly, because trying to turn myself into someone else would be like rejecting who I am, and I ought to go looking for that first. I've been thinking about that. You must have noticed that I've been pushing myself a little, trying to be more open about my physical side.' Her hand slipped round Elena's torso and cupped one soft breast. 'So I can say that your body's so different from mine, and that's exciting for me too. Anyway, I was talking to Magda the other night, and I know she's bi, because we've played games in the shower once or twice, but nothing serious, and she was talking about the differences, and saying that she hadn't been exercising that bit of her recently, and did I fancy a little session, and I was embarrassed and said no, but then I realized that part of me was turned on by the idea. And then when you and I were comparing Luke-notes this afternoon I started getting hotter and hotter, and you didn't seem to mind, and then, when you actually encouraged me, I thought, who better to experiment with? I know you won't laugh at me or gossip. I don't mind Magda knowing, but not anyone else, please. There's still a bit of small-town girl in me.' Elena chuckled.\n\n'And in me, I promise. Bi isn't a huge part of me, but it's nice occasionally. I'll blackmail you into bed when I need seeing to and he isn't around. There's only three or four months left, you know, and then he'll be gone.' Anita didn't reply, and they lay quietly for a while, wrapped in their own thoughts, stroking each others' bodies absently.\n\n'When he's not here it'll be different,' said Anita eventually. 'Magda will be with Jurgen until they get tired of each other, and then she'll move on. She used to be so shy and now... well, she's changed a lot too; but we're more alike, I think. There's part of you that doesn't want to be distracted by a traditional type relationship, and I'm that way too. Luke's helped me realize that, and now I know about it it's just a part of what I am, and not a bubble of scared ignorance choking me and making me think I'm abnormal. I owe him.'\n\n'We all owe him. We've discovered something about ourselves as well as each other, and since we don't go out on the pull, we'll have this with each other, once in a while, till one of us meets a guy who's worth taking a chance with. There aren't many men who'd have been able to show us that. Sometimes I think he's a manipulator, and sometimes a mindreader. What time's this drink then? It's four-thirty now.'\n\n'He's a mixture of both, but he's not cynical and he'd die rather than hurt anyone,' said Anita, 'and the drinks aren't until sevenish. There's plenty of time. Tell me again how he took you in the shower. He did that to me once, and I thought I was going to die.' She squeezed Elena's nipple gently and the older woman squirmed as it stiffened.\n\n'Only if you eat me out between sentences, and let me do the same.' Anita wriggled round and ran her tongue over Elena's scarlet, swollen pussy lips. \n\n'Deal. So he'd fucked you once, you said, and you were in the shower rinsing off, and he was washing you, the way he does, and then you felt his finger sliding round your ring and into your ass, and then what...?'\n\nULI, LOTTIE\n\n'No, Dieter, not tonight.' Uli twisted a strand of hair round her fingers and listened sadly. 'I told you this morning, it's an early flight and I've still got stuff to clean up after the show. This place is a tip, and I can't leave everything for Lottie to do, and I haven't even thought about packing. Last night was fun, and I'm only going to be away for ten days...' The voice in her ear spoke again and she frowned. \n\n'I'm not rejecting you, Dieter, and I'm not deliberately hurting you. You know that perfectly well. I've been completely honest with you, and told you exactly what we can have together and how good it could be if you'd only let it. You can't force me to love you just by being devoted.' Her voice softened. \n\n'Dieter, you're driving me away from something I value, and you're hurting yourself at the same time. Please, please, try to accept that I've got my own mind, and I've made my own decisions, and that you're an important part of them but not everything. It's not just Luke, it's my career, and everything else in my life, and...' The voice squawked and she stiffened angrily. 'That's not so! You know very well I could go to... to Australia by myself for Easter if I wanted to, and stay in a ten star hotel too, and eat caviar every night... Yes, he does know about you, and he has done since before Christmas, and he knows why I don't want to end it with you, and he doesn't ask me to sacrifice anything for him. You could learn from him, the same as I have...' Her eyes were hot now, anger and sadness swirling in them. \n\n'No, Dieter, what I'm saying does not make me a whore.... Don't insult me, Dieter: it's childish and it reduces you, and I want to believe you're better than that.... No. I'm going to hang up now and let you think. I'll be back on Wednesday week and we'll talk again then, if you're not still full of self-pity.' She put the receiver down and ran her hands through her hair unhappily. The phone rang again and she glanced at the caller ID, then sighed and ignored it. She looked round the untidy room and groaned. She might as well start the cleaning.\n\nThe German spring had surprised everyone and it was unseasonably hot: even though the sun was setting, the flat was stifling. Uli opened the windows and let the breeze flush the day's stale air away. It was still too warm, but at least she felt she could breathe. She shook herself angrily, then stripped off her T-shirt and shorts and let the current of air caress her hot skin. She looked down at her body, then took off her panties and ran the palm of her hand over the slender wedge of pubic hair that decorated her mound. She stood motionless for a little while, thinking, then walked slowly to the bathroom and looked for the razor and skin gel.\n\nShe was working obsessively, still naked, her slender body glistening with sweat, trying to lose herself in the therapy of physical effort, when Lottie arrived. \n\n'Uli, for heaven's sake!' She looked round the room, now almost back to normal, her freckled face a study in pleased surprise. Her red hair was tied back and her broad face creased into a shamefaced grin. 'I was half afraid you were going to leave it for me to do, and now I feel like a bitch. Thanks, sweetie.' Her eyes flickered over her friend's body and her eyebrows rose when she noticed Uli's smooth pubis. 'You've gone bald again: does that mean ...?' Uli nodded tiredly, and dropped onto the sofa.\n\n'He called and was going on and on, saying that I was killing him, and I was trying to be reassuring, and then he started calling me a slut and saying that I was just going screwing for a free holiday, so I had to remind him that money's not a problem for me. I hate doing that, and then he lost it, so I lost it and told him not to be stupid and childish, and hung up. I thought about it for a bit and then I decided I wasn't going to take that from him. So the stripe came off.' She sniffed. 'Symbolic something, I suppose. It was inevitable, and I know that, but I didn't want it to be with such bad feelings.' Her voice trembled and her eyes filled with tears. Lottie shot over to the sofa and sat next to her, pulling her into an embrace. Uli put her head on her friend's generous, soft breasts and began to sob silently. After a while her body quietened and she sat up.\n\n'Thanks. That was reaction, not unhappiness, and I'm glad you were here to catch it.' She gave Lottie a kiss and stood up. 'There's beer in the fridge. Do you want one?' Lottie nodded vigorously.\n\n'Catching tension is what friends are for, and cold beer completes the cure. You fetch it while I get naked too. I've sweated right through everything. We'll finish the room afterwards.' They sat on the sofa relaxedly, their bodies cooling, talking about their triumph in the Spring Show, and letting the emotion seep away. Diametrical opposites physically, Uli's tall slimness contrasting sharply with Lottie's rounded, fuller body, they had nevertheless become close friends since deciding to live together. Lottie put her bottle down and looked curiously at the blonde girl.\n\n'So when am I going to meet this mysterious Luke? Twice this year you've sneaked off to see him, and you come back glowing like a lighthouse and with enough energy for three people. You don't have to hide him, you know: I won't try to steal him, and I don't think I'm much competition.' She looked down at her plump body and chuckled. 'I like myself like this, and there are plenty of guys who are hot for big girls once you get them to admit it.' Uli smiled.\n\n'It's nothing to do with that. I'd be up for a threesome in a flash, if you wanted to and it felt right, and he cares more about people than bodies, which is another reason I love him. But I'm scared of letting him into all the parts of my life. There's so much of him, and I'm almost totally crazy about him, but there's a part of me that's scared he'll take me over. Not deliberately, but just by being who he is. I think he knows that, and that's why he hasn't invited himself here. He's never put me in a position where I can't say no, but I need to be surer of myself before I let myself love him completely: surer that I can be complete without him, I mean. And then I wonder who I'm kidding, and I start getting frightened that I won't be able to do without him and that I couldn't manage by myself if anything happened to us....' She ran her hands down her body. 'Look at me: I'm upset about Dieter, I'm worried about the holiday and how we'll be when we're together, but my nipples are like rocks, and I'm dribbling like a leaky tap just from talking about him. It's pathetic. I'm going to have to shower and dress or I'll be staining the upholstery. I'm a hopeless case.' She leaned over and kissed Lottie. 'Thanks for listening. Your reward is to do the last bits and pieces in here. I'm going to get clean, and pack, and count the minutes till I get to Alicante.' \n\nLUKE, ULI\n\nI was at the arrival gate when she appeared, her eyes darting round. She was thinner than usual, and looked nervous and tense. \n\n'Hello, pretty lady. Want a hand with your luggage?' She squealed and let go of both cases and flung herself at me.\n\n'Luke, darling, Ohmygod, it's so good to see you.' Her arms twined round my neck and I wrapped mine round her body and let her bury her head in my shoulder. After a moment she raised her face to mine and we kissed. Time stopped as her rich scent made my head spin, then the kiss broke as we were startled by a round of applause from the other passengers. I realized we'd been blocking the exit, and moved her to one side before hauling her cases out of the way.\n\nCome on, sweetheart. You look knackered.' She nodded.\n\n'Can't fool you, can I? I'm tired, and yesterday was horrible, and what with being upset and excited at the same time I didn't sleep much, so I'm a bit weepy and a bit delicate, and I'm so glad I'm here.' Her eyes were filling with tears and I scooped her into my arms again.\n\n'Forty minutes to the house, shower, hold you while you fall asleep, eat and talk when you wake up, go to bed again properly. How does that sound?' She leaned into me tiredly and nuzzled my neck again.\n\n'As if I've died and gone to heaven.'\n\nIn the car she sat quietly, and when I glanced at her after ten minutes she was dozing. I turned off the Autovia and drove slowly along back roads to the village. As I pulled up she opened her eyes.\n\n'Where are we?' I turned off the engine.\n\n'Home.'\n\nShe was dead on her feet and showed no curiosity as I led her into the cool interior and up the narrow stairs. She made no protest as I slipped her travel-creased clothes off her body and then shed my own T-shirt and shorts and ushered her into the shower. She stood quietly, swaying with exhaustion, as I soaped and rinsed her, not reacting even when I parted her buttocks to clean her ass and pussy. The little racing stripe had gone and I got an inkling of where some of the unhappiness was coming from. She stood still while I dried her, and then followed me like a little girl to the bedroom. When she saw the bed she sighed and started blindly forward.",
        "'Hold me till I fall asleep, Luke. You've washed all the shit away and now there's only the tiredness left. I love you so much.' The words blurred as I helped her into bed. I didn't need to hold her: within five seconds her body had relaxed and her breathing had slowed and deepened. I arranged the mosquito-net carefully, lowered the blinds as quietly as possible, and tip-toed out, closing the door. \n\nI was preparing salad and wondering whether to risk a touch more garlic in the fish marinade when I heard sounds from upstairs. I had orange juice in the fridge and was on my way up when the toilet flushed, and she emerged from the bathroom, still looking sleep-rumpled. I followed her back into the bedroom and handed her the glass. She drank thirstily and passed it back, then pushed her hair back off her face.\n\n'I'm here, and you're wonderful and whatever you're cooking smells delicious, and I want a proper kiss and the guided tour, please. Kiss first.' She melted into my arms and we lay for a long time, our tongues dancing together, our noses brushing, looking into each others' eyes. Her nipples hardened and pressed against mine, but I knew that this wasn't the time for anything more. She broke the silence.\n\n'How long was I asleep and where am I? Geographically, I mean'.\n\n'Nearly six hours, and it's early evening, and you're about thirty kilometers from the sea and fifty from Alicante, in a little village whose name you won't remember for ten seconds, because it's quite long and complicated, on the top floor of a two-storey house which used to be a cow-shed till I bought it twelve years ago. Do you want to see it?' She nipped my ear lightly. \n\n'I want to get used to being with you again before I start spilling all my woes. Anyway, they seem smaller already and I need to put them in order. Maybe if I put some clothes on we could go and look at the village. I bet there's a bar where you know everybody.' \n\n'There's only one bar here, and one shop, and one hairdressers and one everything,' I said, 'and they're all in the same place. Come and have a look at the house and then get dressed while I put supper on hold.'\n\nIt didn't take long. Two bedrooms, a shower and toilet; one large room and a kitchen downstairs. Air-conditioning, which is a necessary curse for half the year. A small patio with wisteria and vines competing for space. A tumbledown stone shed that would be a garage one day when I lived here more and needed to buy a car instead of renting one, but which meanwhile was a riot of flowering plants that I'd put there to hide the ruins. She was entranced, and I glowed with vicarious pride.\n\n'Did you do all the work yourself?' I threw my hands up in horror and came clean.\n\n'Hell, no. Everything was done by local people, as and when I had the money to pay them. I made a point of never going outside the village for help. It took longer of course: in fact this is only the second year it's been properly habitable, but everyone knows someone who's worked on it: I could probably leave the doors open when I'm away. I'm their pet English guy and they're proud of me. We're off the tourist track here, and I've become an honorary local. It's quite fun most of the time. Going to church is dull, but I try to make the effort or there'd be rumors flying around that I'm a practising Satanist.' She laughed whole-heartedly.\n\n'I'd never have imagined it in a million years. What will they think when they realize you've got a woman here? Won't your reputation suffer?' I smiled at her.\n\n'The whole village knows already, so you'd better be prepared for a lot of curiosity. There'll be sighs of relief all round that I've managed to find someone at last. They probably thought I was a chronic masturbator at best, and a child molesting necrophiliac at worst.' She hugged me cheerfully and I ran my fingers down her naked back and buttocks, feeling a tingle of desire. She stuck her ass out and wiggled it against my hand \n\n'I'm your woman and I've got a right to be inspected. Oh, Luke, you were so gentle with me and I feel so much better. How can I thank you?' I put a finger to her mouth.\n\n'Don't ask silly questions. Go and get dressed, you hussy. I unpacked your stuff while you were snoring.' She thundered up the stairs and I slid food back into the fridge. God only knew what time we'd stagger back. They keep late hours in Spain.\n\nI love my village. The only thing it hasn't got is my kind of work. So I visit when I can, and pay the mortgage faithfully, and make plans, and stay on good terms with the local power structure. And now I was bringing a woman into my private place. I'd thought it through in an objective kind of way, but the reality was different. \n\nThe reality reappeared in the doorway and my doubts swirled away like used dishwater.\n\n'Do I look OK?' she asked. 'I don't really know what to wear when I'm being inspected. Will a skirt and blouse do? I don't want to shock people.'\n\n'You're perfect.' I said, and discovered that I meant it.\n\nShe held my hand as we walked the two hundred meters to the main square, her eyes everywhere, gobbling up the new sights and storing them for examination later.\n\n'There's a stream running down the side of the road,' she said wonderingly.\n\n'Used to be the water for the whole village. It's about the only one round here that doesn't dry up in summer.' She dipped a hand in the water and flicked the drops at me.\n\n'Why?' she asked suddenly.\n\n'Why what?'\n\n'Why me?' she said simply. 'Mum says you've never brought anyone here, and last year I had to drag the fact that you even had a house out of you with pliers, and now you casually invite me to come into your private world, and you don't seem to have thought twice about it. Though I know you must have,' she added, 'because you think about everything. But my question stands. Why me, why now?' I shrugged.\n\n'Have you been reading my mind? I thought about it more than twice, I promise you, and I was nervous as a kitten till I saw you. It seemed the right time, and don't insult yourself by saying \"why me?\" No-one else comes close.' She didn't press me any further, but she squeezed my hand hard.\n\nThis place is out of a history book,' she said after a moment. 'Is everything as old as it looks?' \n\n'Most of it. The Civil War managed to miss them and they didn't get a proper road in here till the seventies, and you might have noticed it's a bit steep, so there's not much space for development. There's a castle about a kilometer down that lane. I'll show you tomorrow.' We turned the corner into the square and I stopped suddenly. The little terrace outside Manuel's bar had more tables than usual, and was full of people. As far as I could see the interior was full too. To my horror I saw that a table by the entrance was conspicuously empty. 'Oh, shit.' I said.\n\n'What?' \n\n'Take a look. You're going to have to kiss a lot of total strangers tonight. It looks as if it's going to turn into a memorable evening.' She gave a little skip.\n\n'Let's do it then. When it's us we can do anything.'\n\n* * * *\n\n'Memorable was right,' she mumbled through a mouthful of toothpaste. 'Do they party like that all the time?' I shook my head.\n\n'Usually only during fiesta week. But it's Saturday, and there was a new person to be curious about, and they like me, and they loved you. I didn't expect dancing though. You looked good when the Mayor was whirling you round.' She rinsed and spat.\n\n'He must be seventy if he's a day and he was feeling me up like a randy teenager. I couldn't believe it. Good job I put a bra on or he'd have had a stroke. The kids were sweet too, staring at me as if I was from Mars.'\n\nYou're the first natural blonde they've seen. You must have kissed the whole population of the place twice. Thanks for putting up with it.' She blew me a kiss.\n\n'I was with you, so it was alright.' She yawned and stretched. 'I can't believe I'm still tired. I might fall asleep on you unless you're very forceful.' I put my arms round her and pressed myself against her buttocks, looking at our reflections in the little mirror over the basin. \n\n'We'll take it as it comes. Look at us: are we conventional?' She caught my eye in the mirror and we smiled at each other.\n\n'Well, we'll go to bed and see what comes up,' she murmured, 'and if it doesn't there's always the morning.'\n\n'Warm enough for no sheets and a mosquito net to be romantic under,' she sighed happily as we spooned peacefully against each other. 'I could drift off like this, no problem. There's something happening behind me though.' I groaned.\n\n'Not my fault. I can smell you and feel you and I react. It'll go away in a while.' I felt her silent laughter.\n\n'Don't you dare apologize. Anyway, it's a two-way street.' I felt her hand move to her crotch and she wriggled slightly, then a finger nudged my lips. The rich scent of fresh woman filled my nostrils and I suckled her finger greedily. My cock throbbed and she pushed her ass against it.\n\n'If you just slide it in gently and leave it there, then we'll either fall asleep or we won't, and it doesn't matter which.' She raised her thigh a little and I guided myself along the valley between her labia till the tip of my cock was nudging the entrance to her pussy. She squirmed and I slipped into her moist depths. I was aroused, but curiously I felt no sense of urgency, nor any need to do more than let my cock nestle in the warm cavern that seemed to have been designed for it. She pushed her rump against me and squeezed briefly once, then relaxed again. We sighed simultaneously as the comfort of union filled us, and she gave a soft mumble of appreciation. Her body relaxed and after the shortest time she was asleep. Within minutes I had followed her lead.\n\nWhen I woke I was alone. The sun was filtering through the blinds and dappling the opposite wall with a tiger-striped pattern of light and shade. I needed to piss so badly that I could hardly contain myself.\n\nMission accomplished, I rinsed my cock and balls with the showerhead, cleaned my teeth, and went back to bed. There were breakfast type noises floating up the stairs and I wouldn't spoil her fun. I raised the blind halfway so the room was swamped in morning freshness, then lay and counted my blessings till footsteps sounded on the stairs. When she saw I was awake she looked disappointed, but put the tray down and slid through the mosquito net.\n\n'I'd hoped I could wake you up gently and seduce you. I didn't bring the coffee up, because I didn't want it to get cold while I was doing that.' I flaunted my body at her and growled.\n\n'Think positive, please,' I said. 'I've had a piss and cleaned my bits, and my teeth too, and your wish is my command: I can go back to sleep in a flash if that's what you want.' Her eyes sparkled.\n\n'Do it.' I closed my eyes obediently, my cock beginning to stir already. After a very few seconds the familiar sensation of her loving mouth sliding over my glans and down my cockshaft forced a long exhalation from me. I swiftly converted it into a snore and felt her muffled giggle vibrating through my groin. Her tongue slid over the head and my hips lifted reflexively.\n\n'I think I woke up,' I said, 'and I notice you're wearing panties and a T-shirt. That seems unfair.' She raised her mouth from me.\n\n'I'll take the T-shirt off, but the panties are your problem.' She kneeled up and pulled the T-shirt over her head, then dropped her mouth to my cock again. I tapped the nearest thigh.\n\n'Cooperation, please, or I'll nod off again.' She ran her teeth lightly along my shaft and straddled me, pushing her rump back into my face. The tips of her breasts were brushing my belly, and I could feel the taut nipples sliding across my skin. The tight gusset of the panties was darkened by a growing patch of moisture and I blew softly against the material, then raised my head and ran my tongue along it. The outline of her pussy lips showed very clearly through the thin silk and I could taste her sweetness. She shivered and attacked my cock again, and as she laved me, drawing me to full erection, I lapped at her masked pussy. She grunted softly round my shaft and pushed back again, forcing the sodden scrap of fabric against my nose and face. Frustrated, I hooked a thumb into the edge of the panties and pulled them to one side, exposing her completely to my mouth, and slid my tongue along her slit, releasing a flood of musky syrup. She gasped out loud and jerked upright.\n\n'No fair! You're meant to be sleepy, not violating my underwear and taking over.' I pulled her back and rubbed my lips over her engorged folds, inhaling her scent and flicking my tongue round her labia.\n\n'You said the underwear was my problem. Let me deal with it my way.' I flexed my cock so that it stood clear of my stomach. 'Back to your work woman, and give me a chance to figure this out. I bet you can't distract me.' She sank back over my shaft, laughing softly.\n\n'I'll take that bet, Mr. Smartass.' I sighed involuntarily as her lips closed over me again, and she snorted triumphantly. I held the panties away from her body and lapped her soft entrance again, then reached out and fumbled for the drawer of the bedside table. Thank God for Ikea and silent runners. The nail scissors were at the front of the drawer and I palmed them and brought my hand back. Gathering the material of her panties in one hand I raised my head and attacked her clit with lips and tongue, and as she gasped and twisted I snipped the gusset and the tiny garment was suddenly a scrap of elasticated material round her waist. Her head whipped round. \n\n'Luke Lancer, I don't believe it! You're cutting my clothes off me as if I was an accident victim. You're outrageous!' I pulled her rump back down and spoke round her clitoris.\n\n'Lateral thinking, sweetheart, and I've had enough of this. I want to screw you slowly and then again, and then think about a third helping. Do you want to argue?' She had been struggling as I spoke.\n\n'When you do that it makes my whole pussy vibrate and I can't control myself. Can we do it fast first? I won't be able to manage slow the first time.' She turned smoothly and balanced precariously on me, her mouth inches from mine and her body trapping my prick between us. She spread her arms and stared down at me. 'Look, no hands.'\n\n'Glad to see you're still feeling positive.' I rolled her over gently and propped myself on one elbow, tracing the clean line of her cheek and neck with one finger. Her lashes fluttered and she gazed up at me, her eyes huge, as enticing as water in the desert, so that a man could drown in them, choking with pleasure as he sank. She reached down and squeezed my rigid cock. \n\n'Why isn't this fat thing doing its job? I want to be stretched open and fucked.' She wriggled and kneeled up. 'In fact I want to be stretched open and fucked from behind, right now, so if you would be so kind...' She snickered at her own mock-formality and stuck her tongue out, then turned and presented her ass to me and I scrambled to my knees. The perfect twin globes framed her pink lips, her posture separating them and displaying the darker, blood-swollen petals of tissue between them. The mouth of her pussy was fluttering visibly, and the musk of urgent need caught in my nostrils. My cockhead was glistening with pre-cum.. I leaned forward and ran my tongue over the pucker of her anus, and she shivered.\n\n'Don't tease, Luke. I'm like a bitch in heat here...' She spread her legs wider as she spoke and I slid my mouth over her parted labia, then straightened and moved towards her. My cock lodged itself in the crease of her ass and she leaned forward, letting it find its way down. The tip grazed the pursed ring of her sphincter, still wet with my saliva, and I leaned into her, sliding the head forward. As I did so she raised her body and my glans was forced through the mouth of her vagina and she was gripping me hard. She exhaled with pleasure and I ran my hands over her buttocks, rocking gently as she relaxed and accepted the full length of my shaft. My whole person was gathering in my groin and I felt the rhythm that she wanted beginning to sound in my brain. I closed my hands on her asscheeks and began to move slowly.\n\nThe Ancient Greeks defined \"catharsis\" as the expulsion of repressed, negative, and unwanted emotion through acts of drama and dance. Generally speaking, they defined a lot of things wrong, but this one has always rung true to me. Underneath the surface, half-hidden by her teasing arousal, I could hear her whole body begging for the purging and cleansing that physical release can offer, and what is sexual union if it's not drama and dance and releasing emotion?.\n\nI began to stroke her more steadily, dragging the top of my shaft along the back wall of her pussy as I withdrew, massaging her G spot with my glans as I drove back into her. She began to pant and her body trembled. I could see her slender arms tightening and relaxing as she thrust frantically back at me, forcing me harder into her. The panting changed in tone and began to mingle with sobs as the charge built. I felt anger and hurt and frustration and doubt hovering round her like an aura, and I met her rolling hips with my own instinctive response, wanting only to drive them away. She was sobbing out loud now, and I slipped one hand round to her clit. As I rolled my thumb over the tip the crackle of desire seemed to sting my hand like a static charge and her body spasmed, bucking under me. I realized that my voice was muttering to her.\n\n'Drive it out, darling, push it out where we can get rid of it, come now and blow it away in the explosion, darling, burn it up so we can...' I didn't know what I was saying, and the mantra hung in the air as I pinched her clit gently and the pressure cooker of stress exploded. A growing shudder enveloped her and she collapsed beneath me, thrashing in the grip of her orgasm. \n\nShe screamed, a long scream of pain and recovery, and I imagined I saw the dark aura brighten and flare momentarily before shredding like smoke in the wind. The scream turned into a dying fall of pleasure and her body convulsed violently over my cock, and then again, drawing me to the brink and then tugging pleadingly. A flash of something coursed through me like a hot blade of joy, and with little warning I swelled in readiness, straining deep within her, trying to force the last remnants of poison from her. She lifted her hips to take me more completely, and my vision blurred as my balls contracted again and I spurted hard into her, helplessly thrusting as my own doubts and fears were burnt out of me. She remained still for long moments, then collapsed again, and I sank onto her, unable to do more than nuzzle the salty drops on her sweat-covered back; although my eyes were closed I knew the room was full of sunlight.\n\nTime passed, and we rolled round each other until we were entwined, face to tear-stained face. Uli looked at me, then dropped her eyes.\n\n'I had no idea I had so much shit in me. You felt it, didn't you?' I nodded.\n\n'Better out than in. Don't talk about it for a bit.' I slid out of her embrace and sat up. 'Two minutes in the shower, because it's a bloody tight fit, and then some breakfast. What did you fix? Juice, fruit, yoghurt, Yum..' She looked down at herself.\n\n'I've still got the remains of my underwear round my waist, you beast. You actually ripped my clothes off me and took me by force. How did you know that was what I wanted?' I stared at her and felt laughter welling up inside me\n\n'Because your body told me of course, blondie. Come and get clean and we'll pretend it never happened.' Her face was creased in a wide grin and she rolled to the edge of the bed, then raised one leg delicately.\n\n'No way. Clean me down there and then let me taste it or I'll scream rape. Then I'll clean you, and make you scream rape, and then we'll have a boring old shower.'",
        "* * * *\n\nLater we went out into the world. She was quiet, and I didn't feel too communicative either, and we walked aimlessly along the narrow paths that separated the little plots of olives and vines.\n\n'I feel different now,' she said finally. 'You know why I was so twisted up and everything, don't you?'\n\nI can guess some of it. You're smooth again, and that means something. Something happened to make you do it, and you're the persevering type, and it wasn't me, so it must have been him, and it must have been pretty negative or you wouldn't have been so upset..' She took my hand and raised it to her lips, then bit my knuckle gently.\n\n'Am I that obvious? You make me feel like Doctor Watson listening to Sherlock Holmes. Dieter was angry and I knew it was probably the end. He said things that he shouldn't have said, things we'd talked about before, and I thought we'd laid them to rest, and he said them to try and hurt me and it worked.' Her face was calm as she talked, and I felt a rush of relief that she was handling it. 'So I shaved him away, and cried on Lottie's shoulder, and I'll call him when I get back, but only to say that we shouldn't try to repair it. It's too broken for that. I hadn't realized how much it had affected me.' She lapsed into silence again.\n\n'When people are hurt and angry they say unforgivable things, but you didn't make him say them and you can't pretend they weren't said; you're not willing to fake it, so there's nothing you can do.'\n\n'How do you know?'\n\n'Been there, done that, got the scars. Come and see the castle.'\n\nAt the top of one of the crumbling towers we sat with our backs against sun-warmed stone and watched an early lizard basking on the wall below us. She shifted and stripped off her T-shirt, and stretched out along the top of the battlement, putting her head in my lap. I ran a finger down her ribs.\n\n'You need to be browner, and I can see these bones way too clearly. You haven't fretted away three or four kilos in just forty-eight hours, kid. Let me guess: you'd been working on the relationship as hard as you could, and doing all your other work as well, but nothing you did made any difference and it all kept getting worse, and you couldn't make him happy with what you had to offer, so you started wondering if it was you, and whether you were doing something wrong, and if it was going to affect your college work next year, since he's there in the same department, so for the last couple of months at least, you've very cleverly forgotten to eat properly. Say it ain't so, Joe.' She nodded mutely.\n\n'You see way too much, and way too clearly. Lying about emotions is a sin, though. You taught me that. I won't do it, and he wouldn't let me be who I am, so the only thing I did wrong was love you, and that's not his fault or mine. What am I going to do?' \n\n'Nothing. The work's done, mostly; I mean, you've done most of the work. Now it's just a matter of getting some resilience back and deciding what happens between now and the summer. A day at a time is the way to handle this sort of stuff. So it's going to be three meals a day for the next week, my girl, and if I don't see clean plates, there'll be no sex for you.' \n\n'I bet I don't leave a single crumb.'\n\n'We'll go and test that now. Breakfast was a long time ago, and then it'll be time for a siesta. Put your T-shirt on though, or you'll attract a crowd.'\n\n* * * * * *\n\nThe days fell into a rhythm. We woke late and breakfasted, and went out: to the beach, to the mountains, to small town markets, to Alicante for a spot of urban chic. We had aperitivos at Manuel's when we arrived home, then ate and went back to bed. We talked a lot, but when the silence lengthened there was no pressing need to break it. On the Saturday before Easter I loaded food and beer into a daypack and we walked up the valley, climbing gently, and quickly leaving the village behind. A narrow path followed the course of the stream, and the walls of the little arroyo were too steep for cultivation. The water chuckled beside us and Uli slipped her sandals off and waded along the bed, slipping on the water-smooth stones. \n\nThree kilometers from the village the valley broadened and then closed, the stream arching down over a lip of rock and cascading into a small pool. I watched her take the setting in, and a delighted gurgle rose from her. \n\n'It's a fairytale clich\u00e9, Luke. I feel as if I've wandered into a remake of The Lost Unicorn or something. There isn't even a coke can anywhere. We can't be the only people who've ever been here.'\n\nYou can't cultivate it, and there's no bright lights or phone cover, so the kids don't come up. I'm the only person I've ever seen here.' She stared round some more.\n\n'If anyone painted this it'd be pure chocolate box and nobody would believe it.' She slipped out of her tank top and shorts, folding them carefully, then eased her panties down, and dropped them on the pile. 'Give me the beer.' I shrugged out of the daypack and handed her the cans. She took them and walked across the soft turf, flexed her knees and jumped into the pool, then surfaced, shrieking. 'Christ, it's freezing. Why didn't you tell me?' I was laughing too hard to answer, and she leapt out as quickly as she'd leapt in. 'I left the beer in there, Mr. Cleverdick, and if you want any you can fetch it yourself.' There was gooseflesh on her skin and her nipples were shriveled berries, jutting from her shivering body like organ stops.\n\n'Come here, sweetheart, and I'll warm you up again.' She smiled reluctantly, and then genuinely, and flung herself at me.\n\n'You're such a bastard. Why didn't you warn me, and why don't I hate you, and your bloody English sense of humor too?'\n\nBecause I love you, you daft woman, and we both know it.' There was a sudden silence. The words had taken us both by surprise.\n\n'I didn't know it.' Her arms were strong and determined round my neck and her eyes were gazing steadily into mine,\n\n'Neither did I, I don't think.' My voice was a little shaky. I took a deep breath and pulled the lid down over me. 'But I seem to have told you, and I'm not a liar, so it must be true.' She closed her eyes and leaned into me, her cheek on my chest, her water-dappled body dampening my clothes. After long minutes, she raised her head. \n\n'That's settled then.'\n\n'I suppose.' I was still rolling the syllables round my tongue, tasting them, and wondering where they had come from. 'What happens next?' She snorted and squeezed me till my ears rang.\n\n'Nothing, silly. Everything's the same, except now I need to worry a bit more about whether I'll be able to handle it.'\n\n'I'm glad that's all. What the hell are you talking about?' She smiled up at me.\n\n'You've got too many clothes on and the beer should be cold by now, and I've had a bit of a shock, and I'm thirsty, so...' \n\n'Oh, that's what you're talking about.'\n\nI rescued the beer without compromising my masculinity, and we sprawled on the grass, not saying much. She looked up as I put my can down and lifted one long leg temptingly.\n\n'Want to slip in between these, big boy?' she asked lightly. I stretched out and pulled her ear.\n\n'Only if it involves getting between these as well. I need to know stuff.' She opened her thighs wider and rolled onto her back.\n\n'You always say the right thing. Just put yourself here till I get properly wet and you can slide in and we can be quiet together. Nothing frantic.' I did as I was told and we lay, barely touching, feeling shared desire rising slowly. 'Don't expect more than we've got,' she murmured. 'Words don't change anything: all they do is confirm things. We've got a lot of time to get the details right.'\n\n'What about practical stuff though?' I asked, hating the anxiety in my voice. I was stiffening gradually, and I nudged her pussy with the swollen head of my prick. 'There's my work, which I love and which involves moving about a lot, and there's college and the career you're going to have, which is going to tie you down somewhere else, and there are the other people in our lives, and the money thing, and... Ow! What are you doing?'\n\n'Shutting you up.' Somehow, without appearing to have moved, she had drawn me into her, and now the strong muscles of her pussy were clamped over the head of my cock, holding me fast. She squeezed me again, hard. 'What happened to the guy who told me that the way to handle this sort of stuff is one day at a time? You said once that life's not about closing things down, but letting more in. Everything you've said so far has been you secretly saying \"what am I going to have to give up?\" The real question is what we're going to do with the extra.' I thought about that while her pussy rolled over my glans and I reached full erection.\n\n'OK. But if we pretend that a day at a time is going to last till the end of our summer terms, how are we going to work round what we're already committed to? You said once that long-range relationships were sad and doomed, and I sort of agree with you.' I slid deeper into her as she thought, and she twisted and gasped.\n\n'Don't distract me. Listen, you mumbled something ages ago about the world being full of ex-couples who loved each other, and had believed that love gave them the right to demand things, and that's why you're all nervous. But we know about that pitfall, and we've got lots of practice at not demanding. What I said about handling this wasn't a joke. You're a dominant male and you're used to getting your own way, and I'm not one to be ordered about, except by you in bed, so we're going to take a lot of care. I've wanted you to say those three words for ages, but now you've said them I'm not sure what to do with them. So we'll think and digest, and you carry on with your coven in Brussels, because what you've got with them is important too in its own way, and... I won't exactly go looking for a Luke substitute, or a Dieter substitute, come to that, but if anyone tickles my fancy I might have a little adventure, and then when summer comes and we've got some time, we'll go and lie on a beach somewhere and talk and think and decide about next year. And now I'll shut up and you can fuck me. How does that sound?' I lowered my mouth to hers and spoke round her lips.\n\n'Like a good plan.' Her muscles relaxed and the full length of me glided into her. I knew that she wanted stillness, and so did I, and it was what we offered each other. Her pussy was firm and warm round me and I could feel myself filling her completely. Gymnastics and contortions are fine, but what we needed to share that afternoon was different. To my surprise my erection didn't flag, and her own movements around my cock were the soft contractions of comfortable acceptance rather than demands for action. The sun moved across the clearing and pressure began to build slowly between us. Her eyes sparkled and she squeezed down on me hard; my prick jerked and swelled reflexively and she shuddered gently.\n\n'Just like that, darling: squeeze and push back and take us where wherever we're going.' She closed over me again and the rhythm built inexorably. Our bodies began to tremble with the strain of resisting the shared urge to plunge into each other, and sweat beaded our skin. Flickers of electricity danced between the joined parts of our bodies, and I shifted so that my nipples brushed against hers, and her breathing caught and quickened. My heart was pounding, and I felt the familiar surge as my balance shifted and my body prepared itself. She felt the change and twisted to nip my ear.\n\n'About time too. I've been holding back for ages.' I closed my eyes, letting my body take over, and quivered helplessly in her arms as my seed boiled through me and jetted into her. At the moment of my release she whimpered and her pussy convulsed round me, her own climax rolling irresistibly through her. My vision contracted till all I could see was her face under me, twisted in concentration as she drank the last drop of sensation. There was something hovering round her, just out of my reach, but now it didn't worry me. She was right: it would come in its own time.\n\nAfter a while, when time had restarted, I swiveled round and we sat, propped against each others' knees. She reached out and tugged my ear, then slid a finger down to her pussy. \n\n'We were completely between both of these that time. We're so clever. Is it a bit cheeky to say well done for not grabbing? I know you felt it, but you didn't get all desperate like you did in February.' \n\n'Very cheeky, but sometimes you're worth listening to.' She pulled my ear harder and blew me an exaggerated kiss.\n\n'I've got sweat all over my front, and bits of grass and God knows what all over my back, and ants exploring my nooks and crannies by the feel of it. Shall we be really brave and have a dip?'\n\n'Is this what love means?' She giggled\n\n'I just feel like celebrating.'\n\n* * * * * *\n\n'I don't want to leave', she said as we left the village on Tuesday. Our bags were on the back seat and an end of holiday feeling was crouched over them, sneering at us.\n\n'If you were looking forward to it that would be worse.' She smiled and punched my knee.\n\n'You're obsessive about looking on the bright side. Promise me you're not still scared? I've managed to get it down to mere apprehension. I've never been properly loved before: Mum loves me now, and I love her, but that's different. It's going to take some getting used to.'\n\n'I'm a dominant male so I'm not scared either. I'll need to cling to you for comfort once in a while, but that's all.' She ruffled my hair.\n\n'That's my brave Luke.' A faint ringing sounded, and she jumped. 'That's my phone!' She scrabbled in her bag. 'Hello?... Lottie? What on earth... no, we're on our way to the airport... what's happened...' As she listened her face fell, and when she spoke again her voice was heavy. 'Oh, Jesus ... No, of course you couldn't... Every day?... And phone messages too?... He said WHAT?... Oh, shit, exactly what I need...OK, Lottie, thanks for warning me. I'll be careful. See you this evening... Thanks, Lottie, Bye.' She disconnected and sat staring at the phone as if it were a rattlesnake.\n\n'What the hell's happening?' I asked. She leaned back in the seat and closed her eyes.\n\n'That was Lottie. Dieter's been sending flowers to the flat every day and leaving messages on the answering machine, and the reason she called was to say that when she listened last night he'd said that he knew I wouldn't hear the message till afterwards, but that he'd forgiven me, and that he'd meet me at the airport and we could celebrate my return, and God knows what else. He must have gone loopy.' I glanced at her and wondered what to say. No dominant male stuff, I told myself sternly.\n\n'Do you want to go ahead and handle it by yourself, or change your flight, or call Lottie back and ask her to meet you, or another friend...?' She didn't reply, but her fingers were twisting and pleating the hem of her skirt, and I stumbled on. 'I won't offer, because it might be exactly what you don't want, but if you asked, I'd say yes.' She opened her eyes and looked at me for a long time.\n\n'Really? Just like that?' I nodded. She took a deep breath.\n\n'I didn't think I'd be needing you so soon, and it's exactly the sort of thing I'm scared of, but I think I could do it better if you were there. Please, Luke, will you come back to Munich with me?'\n\n'Yes.'\n\n* * * * *\n\nULI, LUKE, DIETER, LOTTIE\n\nAs the plane turned and began its approach path Uli glanced across at his face. He was sitting quietly, inside his head, like he often was, but he sensed her movement and squeezed the hand he'd been holding since they took off. Warm and dry and reassuring. The knot in the pit of her stomach loosened, then tightened again as she imagined the coming encounter. She hadn't believed he was completely serious till they'd arrived at the ticket desk to be told the flight was full. She'd thought amusedly that Spanish sounded like a good language to argue in.\n\n'First class then, Se\u00f1ora, if there's no room in economy, and you can upgrade this lady's ticket at the same time. Please have no doubts that we're both going to travel on this flight.' His voice had been unhesitating and confident and the desk attendant had finally nodded and turned to her computer terminal. She'd tugged at his hand.\n\n'Can we put it on my card?' He'd looked at her and smiled.\n\n'I'm glad you said that. They're not going to give me a refund on my Brussels ticket, and you're ten million times richer than me, after all. I'll buy supper tonight though, and if you don't let me I'll sulk.' She'd wondered again what it was that let him be so relaxed about money. Most men who knew she was the daughter of wealthy parents either sponged and pretended they hadn't, or insisted on ostentatiously paying for her, as if expecting a prize. The plane's nose dipped and she leaned across the seats and kissed his cheek.\n\n'If he really is there, what will you do?' He turned and looked at her closely, his features reflecting concentration.\n\n'Stay out of the way as much as possible and let you do what you have to, I guess, and be prepared to jump in if things get too silly. But I won't do the job for you, because that's not why I came, and I don't want you to have to feel grateful.' He looked uncertain for a moment and her heart splintered with love. 'Does that make sense?' he asked. 'I truly don't want to screw anything up.' Her face must have said \"yes\", because he looked relieved for a split second before the gentle irony filtered back.\n\nHe dropped back and let her precede him as they approached the entrance gate. The usual sea of faces was waiting, peering for friends and relatives, and her heart pounded as she scanned the crowd. Then she gasped, and behind her she sensed Luke stiffen. She hardly knew whether to laugh or cry.\n\n\"WELCOME HOME, ULRIKE FISCHER, LOVE IS MY GIFT TO YOU\". The words were clear and uncompromising, and he held the sign aloft in one hand. The other cradled an enormous bouquet of roses. Sadness overwhelmed her as she understood how desperate he had become, and how wretched she was going to make him, but beneath the sadness she felt a flash of annoyance that he should assume that his love was a gift. He saw her and dropped the placard, opening his arms to receive her. She stopped two paces away.\n\n'Hello, Dieter. Lottie warned me that you might be here.' She looked at him steadily, waiting for his response, and his arms fell slowly to his sides. She couldn't help comparing him with Luke. Both tall and lean, both around the same age and of the same physical type: that had been part of the initial attraction; but where Luke was calm and thoughtful, Dieter was a bundle of nervous energy, his spirits soaring and sinking from moment to moment, exhilarating and exasperating a dozen times in the same day. It was what made him good at his work, sharpening his creative edge, and she knew it was what had driven him to meet her. \"But there's no comparison between them at all, really\" The thought flashed through her and she felt the door marked 'Dieter' finally close completely. It must have showed in her eyes, because he flinched. \n\n'Come and stand out of the way,' she said. 'We might as well talk now as later.' She swung on her heel and wheeled her case rapidly into a corner of the arrival hall. He followed her, clutching the flowers. She knew without looking that Luke was a little way behind them, outside their space, and she felt grateful for the knowledge and irritated by the fact that she was grateful.\n\n'I bought these for you,' he said, offering the bouquet, aware that something had happened, but not sure what. 'Ulrike, we need to be together and find each other again.' She parked the case and turned to face him.\n\n'I'm sorry, Dieter, but we can't, not any more. It was fading away before Easter, and now it's gone, and I think it's mostly been my fault. I've been asking for something you can't offer, and you need more from me than I'm willing to give. We'd spend more and more time fighting and hurting each other, and I won't do that.' She looked at the flowers and shook her head. 'I can't accept roses from you, Dieter.' He looked at the bouquet as if wondering what it was and then hurled it against the wall.",
        "'Ulrike, you mustn't do this, you can't do it... I won't let you do this...' He grasped her arm roughly and pulled her against him. 'I'm not angry with you, I promise, I was upset, hurt by your behavior, but that's over now.' She tried to pull back but he put his other arm round her and caught her in a clumsy hug, his breath hot on her neck, and she caught a whiff of alcohol. He was trembling with emotion and she had no idea what to do. She looked round wildly, tears blurring her vision..\n\nThe pressure disappeared and he spun away from her, almost losing his balance as a strong hand forced an arm behind his back and jerked him away. Luke was between them, and his free hand rose to her cheek and stroked it lightly for a second.\n\n'Maybe you need a referee here.' He pursed his lips momentarily and blew her a kiss, then spun and faced Dieter.\n\n'No physical stuff, please, and especially no force. She's not to be manhandled like a doll.' His voice was sharp and cold, and Uli's breath caught in her throat. She'd never heard him speak like that. 'If you touch her again,' he went on, 'I will put you on the floor and she will file charges.' He stopped and stepped back, not looking at her, his body focused and waiting. Dieter recovered his balance and looked at Uli.\n\n'Is this the Easter gigolo? Or just a thug you picked up in the departure lounge? The mile-high club, maybe? A bit of rough?' She heard Luke's indrawn breath, but he didn't react. He was serious when he said he'd let me do what I had to, she thought in surprise; love can be holding back as well as reaching out. She faced Dieter and spoke carefully and precisely, her language formal, her voice crackling with anger. \n\n'Dieter, this is Luke Lancer, and yes, he was my host at Easter, and yes, he is my lover and my beloved friend, and yes, I've already told you that I love him beyond redemption. I decided before I left that our relationship was damaged beyond repair, and that I would tell you that when I returned. I'm sorry that it has to be in public, and that you've been hurt enough to behave like this, but I never lied to you, Dieter, not once, not ever, and I won't allow you to pretend that I did or that I'm at fault.' He looked at her and his shoulders slumped as her words sank home. His eyes narrowed.\n\n'Your choice. I don't think you and that fat redheaded bitch you live with will do so well this term.' He looked at Luke, then back at her. 'And your boyfriend won't be a lot of help either. Ungrateful slut.' His words twisted through the space between them, alive with venom, and the force of them made her flinch. Luke stepped forward.\n\n'Enough.' He took Dieter's arm, apparently gently, but the other's face winced suddenly. 'You go off and cool down a bit, and I'll take her home. Be glad that I promised I wouldn't intervene more actively, and be glad that I keep my promises. And I promise you this, Dieter, if I hear you talk like that to her again I will hurt you badly. Come.' His wrist turned slightly and Dieter winced again. Uli watched as he moved the other man effortlessly away, guiding him to the door. She saw his head bending towards Dieter's as they went, and through the glass panels she watched as he ushered him into a cab and stood as it pulled away. As he came back reaction gripped her and she started shaking. He covered the last few meters rapidly and folded her into an embrace. She grasped at his lapels and buried her head in his chest.\n\n'When we wanted the same thing he was lovely,' she whispered. 'And when I needed his talent and his guidance everything was such fun. What happened? Luke, you sounded so hard. I never realized...' She felt him shrug.\n\n'He annoyed me a little. You want me to guess what's happening? I think he knows that you're moving beyond what he can teach you, maybe you're past him already, and he can't bear it. I've known teachers like that.' His voice changed. 'I didn't like that last crack of his, though. There's a lot of loose anger bubbling about in there, and I probably made it worse. Too late to change that, I'm afraid. You did all you could. Let's find a taxi and get you home.' \n\nAs they entered the flat Lottie appeared in the lounge doorway and Uli almost laughed through the haze of emotional overload that still gripped her. Her friend was half-naked, wearing only her underwear, holding a slice of thickly buttered bread in one hand and a can of Coke in the other. When she saw Luke hauling cases in behind Uli she yelped in horror and disappeared. Uli turned to look at Luke, who was showing no surprise at all.\n\n'That was Lottie,' she managed to say. He smiled.\n\n'That was my guess. Cute as a button, isn't she? Where shall I put the bags?' Uli managed to point to her bedroom door, and he leaned over and kissed her before turning back to the luggage.\n\n'Have you got any of that English tea I sent you at Christmas?' he asked plaintively. 'It's very good for nerves, and if I don't get some soon I'm going to scream. Tell me you haven't drunk it all.' She felt her spirits lifting at his matter of factness. I don't want him to believe he's overwhelming me, she told herself.\n\n'Of course I haven't, because it's absolutely horrible. No wonder the English are strange. Good job you're here to drink it, really.' She moved into the kitchen and missed the look of satisfaction that crossed his face as he heard her voice returning to normal. Uli heard him push the last case into the room and tap on the lounge door, and smiled to herself. He'll charm the pants off her in two minutes, she thought, and strained to listen\n\n'Are you decent in there?' A voice mumbled something and he stepped in. She darted across the corridor, hugging herself with anticipation, and peeped round the door. Lottie was wrapped from neck to toe in an oversized robe, hastily swallowing the last of her coke. He stepped towards her.\n\n'Luke Lancer. Please don't get up.' He put his hand out politely. 'We should have warned you that I was visiting, but events overtook us and it slipped my mind. I'm so sorry.' Lottie shook his hand automatically.\n\n'No, please, don't apologize, it was nothing, nothing at all. It's so nice to meet you at last. Uli said you were a bit reluctant to visit.' Humor flickered across his face.\n\n'Ah, well, that stage is over, I'm glad to say, but I'll let Uli tell you all about it. It would be mean to spoil her fun.' He smiled again and sat opposite her. 'She's making tea,' he said, 'and then I'll ask what she wants to do. It had better involve food though,' he added, 'or I'll kill her slowly and bury her body outside a MacDonald's. That'll teach her to ignore my needs. You can help me if you like.' Uli heard the kettle switch off and went back to the kitchen, smiling.\n\nWhen she entered the lounge, laden with the tea-tray, they were sitting quietly, the atmosphere comfortable. She put the tray down and bent to hug her friend. \n\n'God, Lottie, I'm so glad you called.' Lottie was squirming with repressed curiosity.\n\n'You didn't tell me he spoke German. He says he's going to kill you unless he gets fed and he won't say a word about anything except to grumble about his hunger pangs. Are you going to tell me?' Uli glanced at Luke. He winked at her and her heart skipped a beat.\n\n'Tell the woman what she wants to know,' he said. I'm going to fetch my laptop and do a little thinking and drink my tea.' He stood up and ambled out of the room and returned in a minute with the computer. 'Thank God for wi-fi,' he muttered, and switched it on. Lottie looked at Uli expectantly.\n\n'The short version is that the holiday was wonderful and we love each other, and the airport was awful, and Dieter tried to grab me, and Luke had to stop him.' She turned to him. 'What did you do anyway? I was terrified you'd end up brawling on the floor.' He looked up briefly.\n\n'Pressure points. If you know where they are it can save a lot of argument.' He glanced at Lottie and grinned. 'For God's sake, sweetheart, tell her properly or she'll explode. I'm going to be here a little while, and I don't mind hearing your version. Try not to make me blush.' He bent his head to the screen again. Uli turned back to her friend.\n\n'Some of it I'll leave till later, or I'll blush too.' She moved to the sofa and began her tale. Lottie listened, entranced, and when Uli had finished she rolled her eyes.\n\n'No fair. All I did was visit my parents, and meet a guy who turned out to want me to talk dirty to him while he rubbed his face with my panties. You have all the fun.'\n\n'Nothing wrong with panties,' murmured Luke. He sat up. 'Uli, can I use your phone? One call to Brussels to tell Elena I'll be back a later than I said, and then a local one.' Uli handed him the phone, puzzled.\n\n'I didn't know you knew anyone in Munich,' she said. He shrugged.\n\n'No such thing as strangers, only friends you haven't met. I think I can get Dieter off our backs.' Lottie suddenly looked nervous.\n\n'What do you mean \"backs\"? I haven't upset him.' Luke was dialing.\n\n'You know about his \"failure\", and he's insecure and impulsive and busy hating everyone. Tell her about the airport again, Uli,' he said, 'and don't skip the dialogue this time. Ignoring nasty doesn't usually work...' The receiver was at his ear and he broke off. 'Elena?... Hi, kid, it's Luke... no, fine, but I'm busy being delayed... Can you bear it if I'm away for a couple more days? We can reschedule the classes when I get back, or you can knock the money off the next paycheck or something... No, nothing serious, but if I don't do something about the vermin here I'll never be able to visit again... I'm calling people who might give me a hand...' He listened for a moment and then chuckled. 'Well, you'll just have to dig out the hairbrush or see if Anita's available... of course I sympathize, and of course I'll make it up to you... Yes, she's fine and it was great... she flew to Munich this morning and that's when I discovered the infestation... OK, babe. Definitely by the weekend unless everything goes south... Bye.' He put the phone down, looking pleased. Uli had been listening carefully to his words. She looked at him hard and he looked back calmly.\n\n'No, I didn't lie to her; in fact every word I said was true, but I didn't want a lot of questions, and yes, I'll tell her the story later as long as you don't mind, but probably not the details, and yes, I'll tell her and the others that I love you. OK?' She felt her heart twist with relief and nodded mutely, then cleared her throat.\n\n'Listening to you schmoozing her was odd. Sorry for doubting. Must try harder. What next?' He looked at his watch.\n\n'One more quick call and then I insist on eating something, you if necessary. I don't think I can do anything else before tomorrow.' He looked at the computer screen and punched numbers. Uli listened as he began to speak, his German suddenly more formal, his voice smooth and professional. Chameleon, she thought, remembering a conversation with her mother.\n\n'Herr Steiner's secretary, please.... Good Afternoon Fr\u00e4ulein. My name is Lancer. I tutored Herr Steiner's son four years ago, when Herr Steiner was seconded to the Italian ministry as Liaison Chief. Is he available? The matter is of some urgency. There is a possibility that the Fine Arts College here will be exposed to some unwelcome publicity.... Yes, I'll hold.' He looked up at the girls. 'After this I'm going to shower and change and go and get something to eat. Anyone who wants to join me had better get clean and suitably dressed now or they'll be left behind. Lottie too, unless she wants to hurt my feelings.' He winked at Uli. 'Better persuade her, or you'll never find out what I'm up to.' Lottie's eyes were huge and she turned to Uli.\n\n'Who's he talking to?' Uli felt laughter rising in her.\n\n'Us, and we'd better go do what he says. He's perfectly capable of carrying out his threats. I don't know who he's on the phone to, but he'll tell us, and he's planning to pull something out of the hat and we'll have to congratulate him and tell him how clever he is. You're clean and I'm not, but you can sit on the toilet while I'm showering and I'll tell you the bits I left out.' As they left she heard Luke speaking again.\n\n'Herr Steiner?... Manfred, it's Luke Lancer, Emil's tutor in Rome...how nice to speak with you again... Fine thanks, and you?... Good.... No, no, I'm in Munich as it happens... Listen, Manfred, I think you should be made aware of a little problem before it turns into a big one and makes the Ministry a target for criticism and unkind laughter... Harassment of a student by her supervisor, threats of failing grades, stuff like that... No, the normal channels won't work, that's why I'm calling. The student is the daughter of Heinrich Fischer... yes, the engineering guy with the big legal team. I thought that'd make you sit up...' \n\n* * * * * *\n\nUli watched him as he loaded his plate. \n\n'Bratwurst and potato salad and pickles and... everything,' he enthused. 'Lottie, you're a dream. I thought places like this went off the map years ago. Uli, you're on a promise to eat regularly, remember? I'm going to make Lottie responsible for bringing you here twice a week. Where's the beer? We ordered it ages ago...' Uli put her hand delicately over his mouth. He's being deliberately tantalizing, she thought, so he thinks it's going to be alright, whatever it is. She tried to sound stern.\n\n'Listen Mr. Cleverdick, or I'll pour your beer all over your head. You're going to tell Lottie and me what that phone call was about, and what you're planning to do, otherwise I'll sleep with her tonight.' Lottie panted realistically and Uli's mouth twitched in a half-smile. 'Honestly, Luke: you can't start doing stuff that affects us without telling us what it is. Remember the dominant male syndrome.' He kissed the palm of her hand and she lowered it, closing her fist to hold the kiss tight.\n\n'Good point,' he said, 'and I do get carried away a bit. The guy I called is Manfred Steiner, and he's a big wheel in Educational Coordination, or Ethical Pedagogy or something, and he's based here, which is a stroke of luck. That's why I was surfing cyberspace looking for his current post and phone number. He's got a lot of clout, and he could be in Berlin if he wanted. Anyway, I got his deadbeat son through a couple of exams a few years ago, and he and I got on well, and he's pushed a couple of other queries my way since then. He's serious and conscientious and devoted to the Ministry's good name, so I'm going to go and see him tomorrow and tell him our troubles and see what he suggests. That's all. He knows about your father's reputation, and when I said that you were the apple of his eye he sounded quite jumpy. I expect he'll be able to think of something.' He looked round. 'Where the dickens is that nice waitress with the beer?' Uli looked at Lottie helplessly.\n\n'Well, what do we do? I saw Dieter and you didn't, and he really was a bit peculiar. He was always a bit unpredictable, and that's one reason why I fancied him, but...' Lottie glanced at Luke, who was still looking for the waitress, and Uli shook her head. 'Don't worry, I'm not saying anything I haven't already told him. But even if he calms down, he can easily affect our grades, and he specifically mentioned you as well.' Luke sighed with pleasure as the drinks arrived, then looked at Lottie.\n\n'What he actually said was \"I don't think you and that fat redheaded bitch you live with will do so well this term\", and he sounded quite serious. I don't know too much about dominant male theory, but Dieter wants to be one. I just want to make sure his claws are pulled so that my sweetie-pie doesn't have a bad time, and you don't end up as collateral damage.' He turned to Uli and she felt the weight of his love and wondered why she'd never noticed it before. His eyes were soft and mocking, but behind them was a look that sent sparks through her. He sighed again.\n\n'I think I have to say it, and say why as well. Dieter was sort of muttering to himself when I was taking him to the taxi: I couldn't hear very well, and I was hurting him a bit I suppose, and he'd been drinking, and he was upset, and all the rest, but still... it wasn't nice at all. Quite creepy some of it ... I don't think I should leave till we're both sure that this balls-up is sorted. What I mean really is I won't leave till I'm sure. It's the downside of being loved, sweetheart: I won't walk away from this for the sake of an abstract principle, even one that says I mustn't try and take decisions for you. Most guys are sort of hardwired to look out for the woman they love, and my hardwiring's on its hind legs and boogying right now.' He shrugged. 'If I hadn't been there you might have managed better...' He stopped as Uli raised her hand. She rose from her chair and walked round the table to where he sat and squatted down next to him. She felt her eyes stinging, and her voice shook slightly.\n\n'Don't start apologizing. I've never been as relieved in my life as I was that you were there this afternoon, and I won't let you talk yourself into doubting your own instincts. And I don't feel overwhelmed or grateful. Thankful, definitely, but that's different. I could get used to this being loved business.' She leaned forward and kissed him on the cheek. 'Now have some more bratwurst. You're going to need your strength later.' \n\n* * * * *\n\nMuch later she leaned on one elbow and watched his sleeping face in the unsteady light of the candle he'd insisting on placing on the bedside table. Her body felt sated and completely filled, and she wondered if she was going to start spontaneously purring. She stretched carefully, aware of his seed dribbling slowly out of her, and slipped a finger into herself to scoop out a little. She licked the finger clean and looked at him again. When they'd returned from the restaurant he'd been the same as usual, relaxed and assured, cracking small jokes: being completely Luke, she'd thought. But when she'd finished in the bathroom and closed the bedroom door he'd reached for her with an edge of need that he didn't normally show. She'd held him gently, feeling the tension in his lean form. I may not have caused this, but I'm sure as hell at the heart of it, she thought guiltily, and smiled wryly to herself. They'd agreed a thousand times in the past ten days that love wouldn't be easy, and she hoped they weren't going to be forced to test the theory to destruction. \n\n'You're like a bowstring,' she'd murmured softly. 'Wound up like a spring. I meant what I said in the restaurant, you know: I wouldn't have you any other way. Not wanting to be overwhelmed by you is for everyday problems, not lunatic ex-lovers. I need you to be who you are. Being looked after is fine too.' He'd relaxed slightly, and she'd let him slide off her body till he was prone. 'I'll sort you out a little,' she'd said as she leaned over him and ran her tongue across his nipples, 'and then if you want to sort me out that'll be good as well.'\n\nHis cock, her first cock, the cock she knew best in the world, was lying across his thigh, and she lapped her way down to it and took it gently into her mouth, bathing him with her tongue and lips, her eyes closed, letting the familiar taste of him wash through her. Her hand slipped round his scrotum and lifted it delicately and he quivered. Rolling his balls gently in the palm of her hand, she pursed her lips over his shaft and slid her mouth further down it, coaxing it to life. She loved the way she recognized his responses, able to offer what he wanted almost before he knew it himself, and the knowledge of her own powers reinforced them. His hand caressed the back of her head and his prick began to swell and lengthen, forcing her to withdraw a little. He'd never made her take more than she wanted, she thought as his hand relaxed its pressure. He's never, ever forced me to do anything: maybe that's why I always want to do more. A sense of joy coursed through her as she realized for the twentieth time that day that he really and truly loved her. ",
        "She sank down on him again till the bulk of his glans was almost filling her throat and her breathing snuffled through her nose, then drew back gasping. He made a noise of protest and her heart sang as she tightened her lips again, feeling the hard pulse vibrating from his shaft, through her mouth, and filling her with his need. The tingle in her pussy had grown to a glowing ember, and she wriggled as her body released the juices that stoked the fire. His balls were heavy in her hand and his cock was velvet over sponge over steel, stretching her lips and sending bolts of fire from her mouth to her nipples, from her nipples to her pussy, from her pussy direct to he head... She grasped the base of his shaft, unable to close her fingers round it, and lifted her head, pumping him tenderly as her lips and tongue danced over his glans, and shivering with anticipation as he began to thrust into her, responding to her love. \n\nHe began to caress her buttocks lazily, letting his hand trail down the crease of her ass, just avoiding her tight little ring, and she pushed back against the feather-light touch, willing him to explore. A finger slid along her pussy lips and a sharp pang of desire forced more lubricant from her. She felt a warm drop trickling down the inside of her thigh and the sensation became too much, too quickly. She lifted her head from his cock, her breasts flushed, her nipples bursting from the smooth flesh.\n\n'Can I sort us both out?' she whispered, and without waiting for a reply lifted herself over him. His rigid prick was hard against his belly and she lowered her sodden pussy onto it, sliding the length of her slit along it, feeling the engorged vein that ran along the underside pulsing between her labia. The tip brushed her clit as she rubbed him softly and a spasm of pleasure made her muscles clench involuntarily. The hot ember blazed and she gasped out loud, then lifted herself and groped for him, setting the tip of his glans to the greedy mouth hidden between the petals of her sex and letting the head nudge the entrance. Her whole being was begging to be filled and she deliberately tortured herself by holding herself still, refusing to surrender to her need to be penetrated. His hips moved slightly and her resolve gave way and she sank onto him, feeling the longed for invasion stretch her as her body accepted him. His breath hissed as he inhaled sharply and the wave of power rolled over her again. She knew that her lips were drawn back in a foolish grin and didn't care. \n\nSlowly, straining to keep herself in check, she rode him, her hips rocking smoothly, drawing the tension from his body with gentle coaxing. His eyes were closed as he surrendered to her ministrations, and only the slightest reactive thrusts of his pelvis betrayed his growing need. She tightened herself over his swollen cock and a cry was forced from her as her G spot was assaulted by the ridge of his helmet. It was too much and she sank forward, panting.\n\n'I'm sorry, darling, it's no good, you'll have to do it for me; please, Luke, please, turn me over and finish me, finish us both.'\n\nUli shuddered as she relived his reaction to her words. She dipped her hand into her pussy again, rejoicing in the slight tenderness, and managed to find another drop of semen. He was lying facing her, his body slack, with no trace of the smooth strength with which he'd lifted and turned her before swooping over her and burying himself ball-deep in her hot depths until she was so full that she cried out again in helpless joy. His weight had crushed her and his hips moved hard and fast as he forced the tension out of himself, his harsh panting filling her ears. She thrust back against his strength, surrendering to his urgency, helpless and unable to resist. Love and lust and the relentless approach of her climax swirled through her, and the bass note that held the chords in their places, perfectly balanced against each other, was a deep soothing harmony that sang of the complete safety that he gave her and the complete faith she could have in him. The ecstasy that filled her boiled over as the image crossed her mind and she gave in to her orgasm, crying out as her body convulsed round him, knowing that he would hold her and help through the storm. She took him with her and his muscles tensed in the way she loved, then he grunted softly and she felt the contractions rippling the length of his shaft and his hot fluid flooding into her. A white haze broken by flashes of intense color blurred her vision and her overloaded body thrashed and bucked under him again.\n\nHis sleeping form stirred, as if sensing her remembered excitement and she froze, willing him not to wake. It was the first time that he had fallen asleep before her, she thought, and realized again how difficult the day must have been for him. She knew that nine men out of ten would have attacked Dieter when they'd heard his words, and she marveled at the depths of self-control that he'd displayed. Much more than just a dominant male, she decided happily, and climbed carefully out of the bed. Bathroom stop, and a drink of water, and then sleep, she told herself.\n\nWashed and fresh, the sensitivity in her pussy soothed, she opened the kitchen door and jumped to see Lottie sitting at the table.\n\n'Hi,' she whispered 'Couldn't you sleep?' Lottie grinned at her.\n\n'Of course not. Jesus, girl, when you screw you him you don't hold back, do you? I thought the pictures would come off the walls.' Uli blushed.\n\n'Sorry. I should have thought. We've been in a house with no neighbors for ten days and noise didn't seem to matter.' Lottie chuckled.\n\n'Don't be sorry. Confession time, sweetie. I actually stood outside the door and listened. Didn't you notice the puddle? We all came together, as far as I could tell.' Uli stared at her friend and began to smile.\n\n'You perverted slut. Next time I'll invite you in and you can join the party properly.' Her smile deepened. 'Tonight was a bit special though. I hadn't realized how the day had affected him. It was like defusing a bomb, and thank God it was a controlled explosion, or I don't know how much fallout there would have been.' The two friends caught each others' eye and began to giggle.\n\n* * * * *\n\n'I don't want you to go,' she said as they left the check-in desk. 'Can we have a coffee before you go through the gate?' He smiled and squeezed her hand.\n\n'Sure. What happened to all the \"one-day-at-a-time\" and \"I'll-work-really-hard-this-term\" resolutions you were telling me about?' She pouted exaggeratedly and pretended to stamp her foot.\n\n'I'll do them, but I don't have to like them totally. I want a weekend before the end of term, for you to visit, and maybe go to the Black Forest or something. Something to look forward to and keep me focused.'\n\n'Sounds like a plan. Can you get the coffee? I haven't got any cash on me at all. I blew it last night at that bar in town.' \n\n'Extravagant bastard.' She knew he was testing her a little, and didn't offer to lend him any money, but went off to fetch the coffee. When she came back he was grinning. 'What's funny?' He shrugged.\n\nYou know, and I know you know, and so on. We're managing each other pretty well.' He took her hand again. 'Thanks for the holiday, and the lessons, and the practicals and everything. You've got a nice way of calming my worries.' She raised his hand to her mouth and bit the knuckle gently. \n\n'Your home, your work, your openness... I owe you, Luke Lancer.' \n\n'There'll be no bill,' he murmured, and she leaned over and kissed his cheek.\n\n'Last time we were here was only three days ago and it was horrible, and now it's horrible again, but because you're going. Tell me again what you worked out with that political guy.' She knew what he would do and stifled a smile as he shrugged.\n\n'Civil servant, not politician. He's a pragmatic type. Screwing you, even though you cooperated enthusiastically, was a black mark for Dieter, so Manfred started there, and gave him the choice of a disciplinary hearing and twenty thousand kilos of shit landing on him and his pension rights, or a sideways promotion to be deputy head of a new college somewhere east of Berlin. Apparently he took about ten seconds to decide. The Director's been told the reason, and she's a heavy-duty feminist, and thinks that keeping an eye on her new deputy will earn her brownie points. It probably will: Manfred's a pretty fair guy. I told him off the record that you were shocked and upset, but glad that the matter wasn't going to be taken any further, and he wiped his brow and offered me a schnapps. Problem solved. It's not what you know, it's who you know.' He looked at her quizzically. 'Is that OK for you? I didn't ask, but I had the feeling you didn't want the guy to be totally crushed. If I were in your shoes I wouldn't have either.' Uli lunged across the table and caught him in a hug. \n\n'Bloody mindreader. The day you walked into my parents' house was the luckiest day of my life.'\n\n'Mine too. You've spilt both our coffees but I love you so I won't say anything.' "
    ],
    "authorname": "satyricon.21",
    "tags": [
        "europe",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/all-things-come-vol-2-ch-08"
}