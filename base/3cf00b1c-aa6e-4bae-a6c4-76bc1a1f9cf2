{
    "title": "The New Principal Ch. 16",
    "pages": [
        "\n\n16.\n\n\n\nThe cleanup for the theater went fairly well. We broke for lunch when the pizzas that Kimberly ordered arrived. I thought a bit about how Jennifer might be rewarding her when she returned having finished her quest. With that happy thought, I walked around to check on all the various groups as they ate.\n\nThe clubs that would be using the theater were all very excited about the prospects. The Dance Club was already blocking out possible routines and doing exaggerated kick lines while holding slices pizza in their hands. They knew the other students were watching, so they really went overboard until one fell and they all collapsed on each other, laughing with pure joy.\n\nThe Journalism Club was everywhere, taking pictures and even doing a quick interview with me and some of the club presidents. I said was looking forward to their first issue. They were going to have a dry-run issue zero on Monday. The president said that it would be mostly mini biographies of the club who would be writing for the paper and introductions, but they hoped they could have an article on the theater renovations too.\n\nThe members of the cooking club were the most active. They had the kitchen spotless faster than I had hoped, and were already testing out the equipment. It was all old, but well-made, and still functional. Their advisor from the cafeteria was thrilled. She called it all 'vintage' and said there were places that would give anything to have what they had in such good condition. They would need some basic updates, but most of that could be coopted from the old caf\u00e9. They had the old espresso machine up and running, and once they moved the register and other supplies over, they could be up and running hopefully by Monday. They would need to do some experiments with the oven and stoves, but they reported that they would be able to provide basic breads and snacks in a week or so.\n\nThen there was the club that the Xu sisters were wanting to put together. The members of the club were there and had been doing a bulk of the cleaning of the house area, but the twins showed up late, earning a bit of side-eye from the other clubs. I knew, however, that they had been on time, but they had been spying on Kimberly and me. I could only guess what they had gotten up to after that.\n\nAt the end the time scheduled for our lunch break, I called out, \"Alright, everybody, back to work! Everyone should have plenty to take care of, but if you run out of tasks on your sheet, come find me and I'll get you something else to handle. Let's really make this place shine!\"\n\nThere wasn't any cheer this time, but I was more than pleased to see that everyone just nodded and went right to work.\n\nI went over to where the twins were getting their troops organized to try to get a better idea of what exactly their club was. It still hadn't been approved, and yet here they were working as hard as anyone.\n\nDeborah was delegating, so I turned to Cynthia.\n\n\"Cynthia, can I talk to you for a moment?\"\n\n\"Oh, Principal Lee, of course!\"\n\n\"I went over your club application, and I have several questions. I was hoping you could fill me in on what exactly you are looking to put together.\"\n\n\"Oh. Sure. Uh... It might be better if I get Deborah to join us. It's... well, it's not just a drama club, but... Lemme go get her.\"\n\nShe jogged over to pull her sister from the group. They stopped to discuss something, then Deborah called over another girl to join them as they came back over to me.\n\n\"Principal Lee, this is Penny.\" Deborah introduced the new girl, a rather mousey blonde who looked overwhelmed at the proceedings. \"If we can get our club approved, she'll be our secretary and treasurer. She'll help us explain what the club is about. Could we go backstage to talk?\"\n\nShe asked that last question with a serious tone. Neither of the twins were as reticent or concerned with the rules as the other students, but for they were both acting differently. It was like they wanted everyone in the theater to see them being obedient. I started to get an idea of what their reputation was like among the other students.\n\n\"Sure, let's go back to the prop room. There's a table where we could all sit down so we could talk this out.\"\n\nDeborah looked at Cynthia who nodded. Neither girl looked at Penny.\n\n\"Ok.\" Cynthia grabbed Penny's arm as if she wasn't sure she would follow, and the three of them slipped behind the curtain. I noted that Penny wasn't resisting at all, if fact, she was moving faster than the sisters.\n\nI followed, full of curiosity.\n\nThe prop room hadn't been cleaned yet, so it was still a mess, but there was a big wooden table near the entrance. It must have been for some kind of castle scene, because there was one chair that looked more like a throne, and the other sides of the table only had benches. The three girls sat on the benches, one on each of three sides, leaving me no choice but to sit in the throne.\n\n\"Ok, what's so difficult about this club that you couldn't fill out the application?\"\n\nCynthia piped up. \"The application was kind of a mess, I know. We were still figuring things out. We didn't know what to write. But we've got it all figured out now.\"\n\nHer sister followed on without a pause. \"The Dionysian Club, oh, that's the name. In Miss Lashgari's class, we're learning about mythology, and Dionysus is the god of theater, so we thought that name would be better than just Drama Club, classier.\"\n\n\"The god of theater among other things, if I remember correctly.\"\n\nThey ignored my comment and started going back and forth, nearly talking over each other.\n\n\"It's fine for the theater side of thing, but we're not just about theater.\"\n\n\"Right, it's perfect now that Bright Hall Academy is going women-only. We want this to be kind of like a sorority, too.\"\n\n\"We know there aren't any Greek organizations on campus and we don't want to be like that.\"\n\n\"We just want to have sisterhood at the core of what we do, you know? Like, building up women who can rely on each other, and reach out to make things better for women on campus, and teaching women how to go out and get what they want.\"\n\nI finally broke in. \"So, kind of a drama sisterhood?\"\n\n\"Yes!\" Cynthia's eyes shined. \"But there's one other side to the club that we're not sure how to put in the application.\"\n\n\"Right.\" Deborah became more serious and deliberate. \"Actually, you helped us decide to make sure this was a part of the club.\"\n\n\"I did? What is it?\"\n\n\"We knew we wanted to, but this morning, after we saw you in the dressing room, we decided to move ahead right away.\"\n\nI froze, suddenly remembering all the compromising information these girls had on me. And there were those unknown people who applauded my blindfolded performance with them...\n\nDeborah seemed to be following my train of thought. \"Don't worry. Remember, nothing that happens in the theater is real, right?\" She smiled. \"You will have to trust us though. We haven't done anything to damage you and we won't. Quite the opposite, really.\"\n\nCynthia added, \"we really like the direction you are moving the school. We think we can help you. You really should trust us. Do you trust us?\"\n\nI tried to take a quick glance into the eyes of the girls. I couldn't see anything clearly, but I didn't see any malicious intent.\n\nSlowly, but honestly, I said, \"Yes. I think I do trust you two. I don't know Penny, though, do I?\"\n\nCynthia smiled wide. \"Well, let's say that she has seen you before.\"\n\n \"She's seen all three of us,\" Deborah said meaningfully. Then she laughed lightly. \"So, you do trust us?\"\n\n\"Yes, I trust you. Now what is this all about?\"\n\nCynthia nodded at Penny, whose eyes widened.\n\n\"Go ahead. We talked about this. Now's your chance.\"\n\nPenny swallowed hard, then slipped off the bench under the table.\n\n\"What the hell?\"\n\nThe twins laughed and watched my expression as I quickly felt Penny's hands rub my thighs up to my crotch.\n\nCynthia ducked her head under the table. \"Penny, you'll have to be quick. Someone probably is scheduled to clean this room pretty soon, right?\"\n\nDeborah's smile stayed on her face as she leaned forward. \"Don't worry. Trust us. The other part of the Dionysian Club is educational. There are a lot of women on campus who grew up in really conservative families.\"\n\nPenny's hands had moved to my belt and zipper. It took her a while to get everything open, but eventually she had me pulled out. I felt nearly stunned, trying to focus on Deborah as she calmed me down.\n\n\"Now, some of these girls really want to explore their desires, but don't really know how. They've been told their entire life to be ashamed of their bodies and their desires. Of course, we can help them with a lot of things. Penny has improved so much since we got to know her, but it would really help if we had a man on hand. We've all agreed that you are the perfect option. You happen to be available and, well... discrete, so...\"\n\nCynthia dropped all the way down under the table, and I could hear her giving muffled instructions to Penny. Soon after, I felt a tongue running up the underside of my rapidly hardening cock.\n\nI moaned out loud and Deborah smiled, continuing her pitch. \"When we saw you fucking Ms Adams this morning, we figured out who we needed as an advisor. Ms Adams seems to be very good at getting what she wants. With her as advisor and you as a... teaching aide... I think we could really help these girls discover themselves. And I imagine that you would enjoy the teaching duties.\"\n\nRight then Penny switched over to sucking in the tip of my penis into her mouth. Cynthia was still coaching her. Her mouth was hot and wet and wonderful, even if she was inexperienced.\n\nI tried to keep things together above the table.\n\n\"I see, Miss Xu. What you are... anghh... What you are imaging the club to beeeeeee... is a drama club that focuses on.... Oh god...\"\n\nFrom under the table, I heard a delighted squeal. I can only assume Cynthia was celebrating the effectiveness of her advice. I had to admit, Penny was a talented amateur. The eroticism of the entire situation was getting me worked up faster than normal.\n\n\"...that focuses on guiding young women toward their own self...ugmmm... self-discovery. Does that sound about right?\"\n\n\"Exactly! I didn't suppose we should be completely... explicit in our club application, so I wasn't sure how to phrase it. I like the way you put it.\"\n\nI was taking advantage of Deborah talking to focus on the sloppy wet blowjob I was receiving. Penny was maybe a bit too enthusiastic. She was licking and sucking and pumping almost without rhythm or plan, but it was having a wonderful effect. I could still hear Cynthia mumbling to her, but I was too far lost to try to focus on that.\n\nWhile I was lost in my erotic reverie, I hadn't noticed that Deborah had slid closer to me. Now I watched her stand up and move over to my throne. She came even closer and lifted her long uniform skirt up to her waist so she could straddle the cushioned armrest. I looked down to see her plain white panties were already darkened with wetness. She settled down and sighed deeply as she started to rock back and forth on the edge of the cushion.\n\n\"We all have a lot to learn. Didn't someone once say the best way to learn is to teach?\"\n\nStill in a haze of lust from everything Penny was trying out on me under the table, I looked up into Deborah's eyes as she gave herself over to lust.\n\nI slipped into her mind and tried to channel the feeling of Penny's tongue to her. Licking up the side, around the edge of the tip, a light sucking and a deep push into her mouth, I focused on each slight motion and pushed them out into Deborah's gaze.\n\nShe lowered her head slightly and her long straight hair almost curtained her eyes off from me, but she brushed it away over her ear so she could still keep my gaze. Then without a warning she dipped down and kissed me hard.\n\nLust was never far from her conscious mind, but my trick really pushed her over. She was rocking hard on the armrest in a way that couldn't have been entirely comfortable, but her need was beyond such considerations. Her mouth was ravenous, seeking and pulling on my lips as I returned her desire while I wrapped my arms around her to pull her body closer to me.\n\nAs we kissed, the lust that I had been pushing to her seemed to spread out now that I wasn't looking her in the eyes. I heard both girls under the table groan with desire. Penny's groan vibrated long and deep through my cock, and I suddenly found myself on the brink of orgasm.\n\nI tried to free one hand so I could tap Penny on the shoulder, to let her know I was about to blow, but my own moans couldn't be mistaken.\n\nI heard Cynthia nearly shout out. \"Oh god! Here he goes! You've got to take it all. Don't swallow, but don't lose any!\"\n\nPenny took me deep within her mouth and sucked hard, pulling nearly off then back deep again, then nearly off, then she kept the tip in her mouth while she ran her tongue all over.\n\n\"Awwggnnnn fuck!\" I cried out, squeezing Deborah even closer to me, pulling her off the armrest, and shooting off deep into Penny's mouth.\n\nDeborah's weight on top of mine nearly tipped the throne over as I felt Penny's mouth come off of my cock. Deborah fell into my lap.\n\n\"Fuckfuckfuck, I was so close, dammit. Oh god you're still hard? I need this.\"\n\nAnd with that, she pushed her panties to the side and slid all the way down on my cock, which was still slippery with Penny's saliva.\n\n\"OHgod... Deborah... fuck... you're so good...\"\n\nIn just a second, she got her legs arranged so she could ride me in the chair, pumping down as far as she could go while groaning lustily.\n\n\"Principal... Lee... look at me... Look at me.. mhhhhgh... riding your cock... look me in the eyes... it's so much better... ohfuckfuck... when you look at me... annnnghhhhh...\"\n\nAfter that, she was lost in incomprehensibility, but I did keep my gaze locked on her, doing what I could to get her to a spectacular cum.\n\nSuddenly, out of nowhere, her sister popped up and grabbed her by the shoulders, pushing her down even deeper on my cock. At the same time, she leaned in to kiss the impaled girl, finally breaking our gaze.\n\nThen I saw trails of white spunk leaking out from where their lips met. My cum?\n\nDeborah shuddered hard and her sister and I held her together as she shook herself though an earth-shaking orgasm. Her cries were muffled into her twin's mouth as her cream flowed out over into my lap. Her vigorous shaking had caused my cock to slip out of her and slide between our stomachs.\n\n\"Ohmygod... girls...\" I was still panting. \"I think your Dionysian Club... is going to be very successful.\"\n\nI looked down to see Penny crawling out from under the table. She had some of my cum spattered over her cheek, and while the was still wearing her blazer jacket, her blouse was halfway open, and one beautiful pale breast was exposed to the room. I could just see the red marks where Cynthia must have squeezed her hard.\n\nPenny's expression was one of surprise and triumph.\n\nI realized I had never heard her speak even one word when she finally said, in a small timid voice, \"Was I okay? Did I do that to you?\"\n\n\"Oh god, Penny, you were fabulous. You are going to be a world-class cocksucker one day.\" I immediately thought I had gone too far. I certainly wasn't supposed to call my students cock-suckers.\n\nBut Penny's face lit up like a child on Christmas. Her voice was still squeaky and nervous, but she was clearly proud of her effect on me.\n\n\"Thank you, sir! I hope I have a chance to practice and get even better!\"\n\nThe twins were both perched on my lap and had been lazily kissing and licking each other, cooing their lust to each other.\n\nWith a deep sigh, I finally caught my breath and took stock of the situation.\n\n\"Ladies, we are going to need to get moving. We still have a lot of cleaning to do. And don't think you will be allowed to get away with less work. In fact, I'll need to see more out of you if you want your club approved.\"\n\nI smiled, and they tried to stifle giggles, everyone knowing that I could never turn down what they were offering me. But we all held to the delusion.\n\nPenny got up from the ground and tried to straighten her uniform, and the twins stood up, Cynthia supporting her sister.\n\nThey huddled together, arranging clothes and stroking each other gently.\n\n\"Penny, you did so well. Could you feel him right before he came?\"\n\n\"I did! It was so cool! It felt like I made him cum.\"\n\n\"You did make him cum. With your sexy little mouth... He didn't stand a chance!\"\n\nI decided I should leave them to their debriefing.\n\n\"So, you still need to get Ms Adams on board. I think you are right that she's the best choice for an advisor. No Ms Adams, no Dionysian Club. Okay?\"\n\nThe twins chimed out in sing-song unison, \"Yes, sir,\" while Penny giggled. Then they went back to their huddle.\n\nI left them in the prop room, and as I walked back to the main stage area, I realized the sound proofing was quite good, much better than the dressing room. Something to remember for next time.\n\nI laughed to myself. I was sure there would be a next time. What a bizarre turn my life had made. I continued laughing and shaking my head.\n\nThe rest of the day was uneventful. The clubs worked quite well together, and the theater ended up in beautiful shape. The only club that didn't finish all of their tasks was the new Dionysian Club, but they were going to come in on Sunday afternoon to remedy that. Fittingly, one of their big tasks was to clean and reorganize the prop room. I imagine that might become their headquarters.\n\nAs for the facilities, we still needed to refit all the cables, and the electric system was fine for regular lights, but stage lighting was going to need some more work in addition to the lights themselves. But overall, the theater was in surprisingly good shape. We might even be ready to do a talent night by the end of the semester.\n\nBy the end of the day everyone was tired but pleased at the effects of their efforts. As the students filed out chatting excitedly about the opportunities of the new space, I sat at one of the tables brought over from the old caf\u00e9, drinking a very respectable coffee from the 'vintage' machine and watching the sunset.\n\nIt really was a lovely day.\n\nAnd on Sunday, all had was some grading and class prep, so I could take things easy.\n\nIn the morning I decided to go swimming instead of my regular run and was quickly reminded that even though I had been getting in better shape, swimming uses muscles that you always forget you had. After an embarrassingly slow workout, I slunk off to the weight room in hopes of feeling a little bit better about myself.\n\nThe weight room was pretty full, but I guess some people go to church on Sunday, and some people go to the gym. Also, I had read in the handbook that we had an exercise uniform, and a school swim uniform, if you can believe it, but I didn't understand how ugly they were. It was something close to a plastic-looking track suit, and after a quick public poll, I discovered to no surprise that it was universally disliked. The swimsuit options were even more disliked, which accounted for the lack of company I had found in the pool.\n\nSomething else to ask Kimberly about, I suppose.\n\nAfter getting suitably sweaty, I went off to the shower. Now that the remodel was done, I found that there was a line for the men's single shower. I was a bit miffed, but that was the way things would be until our numbers stabilized. I was going to use the time for a little more stretching when I noticed there was a man standing outside. He wasn't in uniform, but he didn't look like any of our faculty either.\n\nThinking he was probably staff, and it would be a good idea to meet him, I headed out toward the rocky area next to the gym and pool area.",
        "\"Hello there! Taking in the scenery? It is awfully nice out here, isn't it?\"\n\n\"Ah! Hello. It's good to meet you.\"\n\nThe man turned around. He was an older Asian man, fairly chubby, but not exactly fat. He had most of his hair, but it was dyed an unnaturally pitch black. He looked at me appraisingly.\n\n\"I don't think we have met. I'm Ben Lee. I'm the new principal here.\"\n\n\"You look too young. Huh. Well, who knows. I'm Hiroshi Takashima.\" He reached out to shake my hand. \"My son Ken spoke to you recently. He works with Clandon's team, the folks who did the renovations on your dorms up there.\"\n\n\"Oh, right. Clandon's men really did some outstanding work over there. You should be proud of Ken if he's on that team.\"\n\nHiroshi looked at me with wrinkled brows.\n\n\"I am.\"\n\nHe kept looking at me for a while. I felt like I was being sized up.\n\n\"But you let Sandle do the gym and pool buildings.\"\n\n\"Yes, we did. They did good work too.\" I didn't know which direction this was going. I remember Ken saying his dad was suspicious of Sandle, but I didn't think it was good to say as much.\n\n\"They didn't screw it up much anyway. I would take a close look at everything they touched though. Sandle's an asshole.\"\n\nI worked hard not to smile.\n\n\"Well, we needed the work done solid and on a quick schedule, and they came in ahead of time and on budget.\" I wasn't sure how I ended up defending them.\n\n\"Fuck it. He doesn't matter. You do though. My son says you're not an asshole. The last principal was a colossal asshole.\"\n\nIt was clear that he was enjoying playing with me and seeing how I would respond.\n\n\"Ok. I'm sorry, but I'm not really sure what's going on here. I've got more than my share of faults, but I try to treat folks fairly. That's not what this is about, is it? Ken said you might want to talk to me, so what is all this about?\"\n\n\"Well, one in your favor anyway. You don't play games. Ok. Fair's fair. Did my son tell you what I did for a living?\"\n\n\"No, I don't think he did.\"\n\n\"But you heard about me. Small town, right?\"\n\n\"I heard you came here a good while back. You've got a wife and a daughter who was planning to enroll here, but I'll be honest I didn't check to see if she did.\"\n\n\"Mari started classes this summer. She likes things so far, except the uniform.\"\n\nThat got a genuine laugh from me. \"No one likes the uniform. We're working on that.\"\n\n\"You are making a lot of changes, aren't you?\" He looked hard at me again.\n\nI was starting to get frustrated. \"Can I help you with something?\"\n\nHe sighed and turned away.\n\n\"Ah, what the hell. You do have a great spot here. I remember seeing it when I first got here. It wouldn't take anything to fix this up. I used to think about how I would do it. Crack open the spring there. He started drawing with a stick in the dirt. The pools would be here, there, and there, and one extra over there if you wanted to do segregated gender. That's a bad idea, but it's an option. This one over there against the rock face open to the air, then the rest over here indoors.\"\n\nI stood there dumbfounded as he laid everything out. Every detail and image was clear in his mind.\n\n\"If it's like the rest of the springs right around here, the water you've got ought to be very high quality, sodium bicarbonate, and plenty hot. It's very good for the skin, makes it silky smooth. It's not magic or anything, but some people think it is. Women travel all over to find that water. I thought it would be smart to open it up and build up the tourist trade. It would be good for the town, bring in some more than we already get... Entrance over there, changing room, and showers, we could use your new pool room temporarily, but we would need the real ones eventually... they'd go over here.\"\n\n\"Hiroshi, I mean... this is beautiful... this is a beautiful image... I would love to do that. I'm sure your son told you that we have been kind of dreaming to put something like that in, but we just don't have the funding, and even then, we were thinking about something much more modest.\"\n\nHe turned back to look at me, still unsmiling.\n\n\"You're not going to build it.\"\n\nI wasn't sure if that was a question or a statement.\n\n\"I want to. If things go well, maybe in a few years we'll be able to start planning. I've been told we would need stonemasons, and specialty carpenters, and the town planning would be a nightmare. I am still going to try to move forward, but right now it's just not an option.\"\n\nAt that, he finally grinned slightly.\n\n\"Ok.\" There was a long pause. \"Ok.\" Another pause. \"Do you like beer?\"\n\nI laughed, more at the non sequitur than anything else. \"Yeah. I like beer.\"\n\n\"Ok. I'll be back. Be in your office this afternoon. Say, three o'clock.\"\n\n\"I'm still not sure what you are getting at.\"\n\n\"Well, then you'll want to be in your office, so I can tell you what I'm getting at, won't you? Can't you see? I'm an old Japanese man. We're all mysterious and inscrutable and all that bullshit. Would it help if my English were worse? I could fake an accent if you think it would help. Didn't you watch any of those Karate Kid movies?\"\n\nWith a gravely cackle he turned away and walked off, not going through the pool room, but off through the wooded area.\n\nI didn't know exactly what variety of crackpot he was, but I admitted he had my curiosity piqued. I would be there at three.\n\nWhen I went back inside the pool house, the shower was open. While I cleaned up, I thought about the spa again. It really would be wonderful to put it together. But I was also thinking of what he said about the work Sandle did on the gym. Maybe it would be a good idea to do a detailed look over everything they did. And the dorms too, just to be safe.\n\n If I was going to have my desk cleared off by three, I needed to get to work quickly, so I went directly to the office and got started.\n\nAnd soon enough, my classes were planned and most of the grading was finished. I was partway through an essay that smelled half of Wikipedia and half of late-night caffeine and desperation when I heard the main door open.\n\nI walked out to the reception room to see Hiroshi walking in, carrying something like one of those old doctor's bags, but larger.\n\n\"Well, you're here and I'm here. Let's figure out what we can do.\"\n\n\"Welcome. Come on in.\" I gestured to my office, but he moved to the reception room with the large meeting table and set down his bag.\n\nWithout a word, he started digging around in the bag. First came two brown liter bottles with no labels. Then he pulled out several folders packed thick with papers.\n\nI walked over to get a better look.\n\n\"Sit down, Lee.\" He pulled out a bottle opener and uncapped the bottles before sliding one over to my side of the table.\n\nI sat down and pulled one of the folders over to me, but he stopped me.\n\n\"First, have a sip.\" He tilted his bottle toward me, so I did the same, clinking the necks together.\n\nI took a swig. \"I've never been a connoisseur, but this is really nice. No label?\" I took another deeper drink.\n\nHe followed me, but his drink was much deeper.\n\n\"It's my own brew. That's what retired people do right? So, I don't think you're an asshole.\"\n\n\"Thanks?\"\n\n\"I think this is worth trying. Drink with me. Here's the story. Back in Japan, my family used to run a traditional onsen up in the mountains, for generations we had it open. Almost all of them closed up after the war, but ours survived, just barely. We made it through the war, but we couldn't fight property values. Long story short, by the time I was running it, we had to sell. We ended up well-off, but homeless. I had a falling out with the rest of the family, and so I moved out here to the middle of nowhere.\n\n\"I saw how good the conditions were here, but for a long time, I didn't want anything to do with spas. I'm still bitter about all that, but I couldn't get it totally out of my head.\"\n\nHe took a good long slug.\n\n\"Now, I know my son is a bit dim. He's not an idiot or anything, and he's a good person, and a good carpenter, but he's... ah... well, he's more than shy, he's just about the most awkward thing you've ever seen. And with that stutter, there's no chance he's going to be able to get out there and make much of himself or start a family.\n\n\"I'm not disappointed in him at all.\" He looked me in the eye as if to challenge me. \"I started thinking about a way to give him something to live on. Clandon's a good man, but his whole team is older than dirt, and they aren't going to be around forever. Money's one thing, but I want to make sure Ken's got something, a life, you know? Anyway, I can only do what I know, and I know spas. I started putting together plans, but the previous principal was, as I mentioned, a class-A asshole, so I wasn't going to work with him, but you. You might not be an asshole. Maybe a class-C asshole if anything.\"\n\nWhile I considered that compliment, he had already drained his first bottle and dug around in the bag to bring up two more. I was only about half done with mine, but he pushed a second bottle to me.\n\n\"You need to catch up. Drink!\"\n\n\"I'm still not sure what...\"\n\n\"Hush, Lee... Lemme finish what I've got to lay out here. You drink, I talk, that's how this works right now.\"\n\nHe pulled out a couple of blueprints and charts from the folders and spread them out on the table, anchoring them down at the corners with his empty bottle and some other random things from the bag.\n\n\"Here's the pitch. It's a traditional style Japanese spa, everything in wood and paper sliding doors and all that bullshit. Tourists will eat that crap up. We'll need to work with the town to advertise and get the right kind of high-class guests coming in. We'll have that bicarbonate spa outdoors, and then an indoor complex of pools at different temperatures...\"\n\nHe went on in good detail, totally unhindered by the beer. His plan was honestly quite beautiful and comprehensive. It was obvious that he had been putting in a serious amount of time to get all this arranged. It wasn't exactly what I had imagined, but the Japanese style really did elevate the entire concept. He kept dismissing the Japanese details as useless, just empty frills to pull in tourists, but based on the care he put into them, it all was very meaningful to him.\n\n\"Hiroshi, again, this is amazing. I wish we could put this together, but none of this changes our finances. If you are willing, I would be happy to put you in charge of the long-term planning, but we're looking at years, maybe a decade even before we could actually start.\"\n\n\"Well, see that's the thing. I said that money wasn't really a problem for my family. I was doing okay myself, but a couple years back I received a share of my brother's inheritance. It's more than I need, frankly. So, here's what I want to do. I want to build this spa.\" He pounded his bottle down on the main blueprint of the spa complex.\n\n\"That would be incredible! The land belongs to the school, but I'm sure we could arrange a sale...\"\n\n\"No, no, no... It needs to stay with the school. I want to... what do you call it, donate? Endow? Whatever, rich assholes do to get buildings named after themselves. I'm a rich asshole, so I want to give you the money to build the spa based on my plans. You'll have to call it the Takashima Onsen, or Spa, or whatever. One more thing. My wife and I run it until we kick off, and my son can take over if he wants to. That's a non-negotiable condition.\"\n\nThe beer was strong, and I felt even slower than normal. \"You want to fund it and give it to the Academy?\"\n\n\"See! There you go. You're dim, but not an asshole. Maybe. That's exactly what I mean. And I'll sweeten the deal even more. Like I said, I've been planning this for... god... years, now. The town won't be a problem. I know who to talk to and how to pitch it, tourism and all that. And I know the right people to bring in. We actually don't need as much stone work as you might think, because we want natural pools, not some swimming-pool-looking shit. We'll use Clandon for the structures, plus a couple of people I'll bring in to manage things and make sure the style's consistent and correct. It's really not a lot of work, but it needs to be done right. No place for Sandle and his goons.\n\n\"We can have the first pool open in a couple of weeks, and the whole shebang open by the end of the summer.\"\n\nWith that, he leaned back in the chair and worked on finishing off his second big bottle.\n\nI stared at the plans, imagining what I thought would be years in the future coming so soon. And with my growing excitement, I was nearly half finished with my second bottle.\n\n\"This is big. I'll need to clear it with the Board. I mean, this is big. And another thing that we'll have to do... When this was a going to be a small pool for the athletes and muscle recovery, it was education adjacent. But this it huge. This is something else... an entire new enterprise. But we can make weave it into the curriculum, too. Would you be willing to take on students as interns? Maybe run some classes on hospitality skills?\"\n\n\"Fuck, me? I can put on the mask and be a good host, but you don't want me in charge of a passel of nubile flesh. I know my weaknesses, Lee. I'll stick to booze and keep my wife happy. But, actually, she might be the person to ask. She ran a bed and breakfast for years. Maybe we could make that work. It would be good to have attendants, we could train them up in all that service stuff, put 'em in traditional uniforms and... Yeah, that would really bring in the customers. We'd even pay them. Paid interns? We could do that, yeah?\"\n\n\"That would be ideal. And I know you would have plenty of applicants.\"\n\n\"Ok, then we're good? We're moving ahead with this?\"\n\nI tried to think of reasons to say no. Kimberly said Hiroshi was a good man, but could I really trust him? I didn't have any good reason not to. I'm fairly certain that the beer helped me decide.\n\n\"I say, yes. Let's do it.\" Having said that out loud, I got more excited. \"We still have to get the lawyers to write out the contracts and paperwork, and we've got to get town permission, but I say yes!\"\n\n\"Good. Good man. Now that that's done... finish off that bottle.\"\n\nSomehow, Hiroshi had gotten most of the way through a third bottle. I hadn't even seen him pull that out. But now he brought out another bottle, this one was ceramic and did have a label, but it was covered in what I assumed was Japanese writing. Then he pulled out two little cups that were a bit smaller than shot glasses.\n\n\"We'll do this right.\" He smiled another of his rare smiles. I imagined I could finally see a bit of the effects of the alcohol on him as he poured from the bottle into the cups.\n\nHe handed one to me.\n\n\"Thank you for giving me this opportunity.\"\n\nHe lifted his own cup.\n\n\"I wish I had a way to repay your generosity.\" I nearly slurred through the five-syllable word.\n\nWe both drank. It was fiery, but had a nice rich flavor, and I could feel it flow down my throat.\n\nHe refilled.\n\nWe drank.\n\nI vaguely do remember leaving the office leaning on Hiroshi's shoulder, lights flashing in my eyes. He walked me back to the Green House and waited while I stumbled indoors, even leaving me three of those big liter bottles of his home brew.\n\nHe teased me as he left. \"Principal Ben Lee, you are a lousy drinker, but I don't think you're an asshole.\" He laughed loud enough that I was glad I didn't have neighbors.\n\nHe also nearly took a header into the pillar on the front porch, but that only made him laugh more.\n\nI leaned against the door frame watching him fade off into the night. Soon I heard the laughter turn into song, and then it faded into the night.\n\nI turned around slowly and crawled hands and knees up the stairs to the bedroom. A quick stop in the bathroom to pee and get a tall glass of water and I crawled into bed.\n\nMy phone buzzed. I was going to ignore it but as I took my pants off, I saw it was a text from Kimberly. I really did need to talk to her about the spa, but I was in no shape to make any kind of sense. I looked at the notification and only saw the first part of her message:\n\n\"Principal Lee, there's something about the Journalism...\"\n\nProbably drama with the club president or something.\n\nThe last thing I remember was the room spinning slowly and nauseatingly even after I closed my eyes.\n\nI woke up late and groggy. Not a great way to start a Monday. No time for a run, but an icy shower got me more or less moving. It would have been a great day to have a long lingering breakfast at the new caf\u00e9, but they weren't ready for food. They said they would have coffee running though, so I decided to walk straight there then to my first class of the day.\n\nThe side of the classroom building that had the newly-opened theater entrance looked beautiful. The members of the cooking club had brought out tables onto the lawn and draped them with tablecloths from who-knows-where. They had the cash register outside and were calling back into the kitchen to make the drinks.\n\nAll the students running the show looked bright-eyed and happy, which seemed cruel to my hungover brain, but I couldn't resent their happiness. They were rushing everywhere to take care of the rather large crowd. In fact, there were many more customers there then I had ever seen at the old location. Not just students, but staff, faculty, and even some locals.\n\nThe line moved quickly, and I ordered a large boring black coffee with the hopes that it could shake me into consciousness.\n\nI tried to be pleasant though.\n\n\"Looks like the caf\u00e9 is a great success. How has everything been going this morning?\"\n\nThe girl at the register took my order stoically.\n\n\"It's going well, sir.\" She was almost being dismissive.\n\nAs I paid, I took a quick look into her mind, but I couldn't see any of her deeper thoughts. It seemed like all her defenses were up. It was like she was actively trying to block me. Finally, one strong thought floated to the surface that I could read: \"FUCKING PERVERT.\"\n\nI took a hasty step back and nearly stumbled over the man behind me in line. The hairs on the back of my neck raised up. Did she know what was going on? Why was she so defensive? I mean, I was a pervert, but how did she know, did she?\n\nI slowly looked around the tables and the people loitering around. There wasn't much conversation. Had it ended when I walked up? I noticed a few students that I recognized. Some were looking at me with confused expressions. Then there were several students I didn't recognize looking at me with open disgust.\n\n\"Principal Lee? Your coffee.\"\n\nI thanked the student who brought me the coffee, happy to leave the area. I had to get to class anyway.\n\nClass was a disaster. It was only the second week of classes, but no one seemed interested in talking about the readings at all. It was like they had all actively decided to chill the temperature of the room. Almost no one would even meet my eyes, and no one volunteered to answer questions. I ended up basically just lecturing, but I could tell they weren't paying attention, and no one was taking notes. And when the class ended, the students quietly stood and left in near total silence. It was eerie.\n\nWalking across campus was disturbing. I was already getting paranoid, but it really did seem like everyone I passed was giving me a dirty look, and people further away were pointing me out to each other. I wasn't imagining that.\n\nWhen I got to the office, Kimberly was waiting for me.\n\n\"What happened to you? Why didn't you reply to my text?\"\n\nWe walked together into my office.\n\n\"I'm really sorry. Yesterday was very strange. Today is even stranger. I do have some good news though.\"\n\n\"Have you even read the Beacon?\"\n\n\"The what?\"\n\n\"Oh, god. You haven't. The Beacon is the newspaper website that the Journalism Club started up. The started publishing last night. You haven't seen it?\"",
        "\"No. What is this all about, Kimberly?\"\n\nShe sighed. \"Ok, sit down and pull up their site. It's The Bright Hall Academy Beacon. They used the name of the old paper.\"\n\nMy headache was coming back, but I sat down and hunted down the website. The landing page looked really nice. They used the campus colors and our new logo alongside their masthead. There was an article about the theater renovation and cleaning event, with lots of pictures of happy club members working and eating pizza. There were also a few articles with biographies of the editorial staff.\n\n\"This looks fine. Good, even. It's basically what they said they were going to do.\"\n\n\"No, no. Click here.\" She pointed at a link labeled \"Reader Submissions.\" There was only one article posted there, but the title made things clear.\n\n\"Pervert Principal Also a Drunk\"\n\nOh, fuck.\n\nMy headache started to get worse. It was throbbing in my head, but it was strange. It was like my entire head was throbbing, not just my brain. I wasn't a good drinker, but I usually didn't get really bad hangovers. This felt different.\n\nI clicked through and read. The article wasn't long. It started out with the most purple of prose, explaining how I was a danger to all of the women on campus and probably the men as well. I was the worst kind of example to serve at the head of the school.\n\nThen it got to specifics. I was apparently luring students from the beach into the forest to have my way with them. There were anonymous quotes claiming that I had hidden behind trees to grope women as they passed by on the running trail. This was accompanied by a photo of me in my running gear on the beach trail. It was captioned, \"Principal Perv.\"\n\nIn the photo, I was stretching out a cramp, but there was a huge erection tenting out my shorts. The photo seemed plausible. I had stretched out cramps in that exact place before, but I honestly didn't think that could be real. I enjoyed the women on the trails, but who could run with a boner like that, and I was a healthily endowed man, but that bulge was... comically large. My face looked darker and my eyes seemed more sinister somehow. It had to be photoshopped.\n\nThere were a few more paragraphs explaining my sexual perversions. Luckily, they were so bizarre that I couldn't think anyone would believe them. Seriously, the likelihood that I was keeping a team of students locked in my attic in gimp suits was laughable. Again, I certainly had my kinks, who didn't, but this was all super creepy stuff.\n\nThen the article went on to talk about how I was deliberately trying to destroy the school that Principal Billanson had spent so much time and effort to put together. That at least started to make sense. This had to be a hit piece from the supporters of the old principal, or maybe from the principal himself.\n\nAt the end of the article was a final paragraph marked, \"UPDATE: SUNDAY NIGHT.\" There was an animated gif of me leaning on Hiroshi, stumbling down the sidewalk to the Green House. The caption was \"Principal Lush.\"\n\nThe text simply read: \"Is this what we want our beloved school to be known for? Is this alcoholic the man we want leading our young women?\"\n\nI turned to Kimberly.\n\nShe was flustered. \"Well?!\"\n\n\"What? Kimberly, no! It's not true!\"\n\nMy headache seemed to spread. I felt slightly queasy. It was like my head, neck and shoulders were all throbbing in time to my heartbeat.\n\n\"Ugh. I KNOW. I mean, I don't care about getting drunk with Hiroshi, but that stuff about the girls?\"\n\n\"I don't lurk in the forest to pounce on students. Ok, I mean, I understand why you might... Ah, fuck... We need to get everyone together. Set up a meeting. You, Veronica, Jennifer. We've got to get all this straight, and figure out a plan.\"\n\nShe stood there, not moving.\n\n\"How bad is this?\" I rubbed my temples, trying to massage down what was quickly turning into a full body queasiness. The urge to vomit became less urgent. I still felt uncomfortable, but it felt like the worst of it was over. My entire body was pulsing though. It felt like my skin was throbbing. Kimberly couldn't see that, could she?\n\n\"It's bad. You know things have been weird around here since you got here. I'm not saying anyone is going to believe this stuff completely, but it's going to make people look for any little speck of dirt.\"\n\n\"Ok. You're right. We'll treat this seriously. Meeting this afternoon, okay?\"\n\n\"Okay.\"\n\nOnly a minute or two after Kimberly went back to her office, there was a knock on my doorframe. It was a student, but I wasn't sure I recognized her.\n\nShe was in the school uniform, but it was rumpled and ill-fitting. Her dirty blonde hair was up in an untidy ponytail. She was thin and pale, the image of bookish introvert, even to the thick glasses in tortoiseshell frames.\n\n\"Principal Lee, sir?\"\n\nHer voice shook, nearly pleading.\n\n\"Yes?\"\n\nShe walked in, then paused.\n\n\"Can I... Can I close the door?\"\n\nI stood up. \"Sure. What's wrong? Are you okay?\"\n\nShe closed the door and turned around before crumpling to the ground. It had clearly been a massive effort of will to get this far.\n\nI rushed over to her. \"Oh my god. Do you need help?\" The urgency of the situation exacerbated whatever this whole-body throbbing was, but fortunately the nausea had completely passed.\n\nHer sobs shook her shoulders, but she choked out, \"NO... no... I'm okay.\"\n\n\"You are clearly not okay. Can you come over here and sit up there at the table?\" I knelt down next to her and held out my hand to her.\n\nHer sobs slowed, and she turned her face to me. Her eyes were red with crying and her cheeks were splotchy. She nodded, and reached out to grab my hand as she stood up.\n\nAs soon as her hand touched mine, I felt something I hadn't felt in a long time... since my first night with Veronica? An electric shock arced between our hands.\n\nI saw her eyes snap open wide and she basically collapsed into my arms.\n\n\"Oooph. Come on... You're okay... come on over here.\"\n\nI pulled her over to the chair, but I was starting to worry. Not about her, but about me. I knew what that shock would do, but I didn't know if I could stop it.\n\nThe throbbing that had been pulsing through my body reacted with that shock, and now it felt like I was pushing out little electric shocks in time with my pulse. It felt something like having your foot go asleep, but all over my entire body. And it didn't feel painful. It felt... incredibly good. It was pure sex.\n\nWorse yet, it wasn't just me. I could see her reacting in time to the rhythm of the shocks. She twitched slightly with each heartbeat. Her sobs had stopped, but she was still clinging to me even after I fell into the chair.\n\nI forced myself to stand back up and put her in another chair. Maybe getting out of skin-to-skin touch would help. She unconsciously resisted, holding on to my arms as I sat her down. But even after I moved away from her, I could feel the waves of electricity flowing off of me and crashing over her like waves.\n\nI tried to shift focus and start over.\n\n\"I'm sorry, but I don't remember your name. Have we met?\"\n\nShe shook her head, as if to try to clear her head. Her glasses were slightly askew and there were still streaks where tears had run down her face, but she wasn't sobbing or crying anymore.\n\n\"I'm Anne. We met at the cleanup this weekend, but we didn't talk. I'm the president of the Journalism Club.\"\n\n\"Oh, so you run the Beacon?\" I couldn't help but blurt out.\n\nHer eyes got watery again, but she held herself together.\n\n\"That's what I can to tell you about. I'm so sorry. I'm so so sorry. We didn't even turn on the reader submissions. There's no way anyone could have posted that. It was locked down! And now we can't even delete it.\"\n\n\"Who wrote it?\"\n\n\"We don't even know!\" Her eyes started flicking away from me. It seemed like the waves were hitting her harder. She started fiddling with her neckerchief unconsciously. \"I know it's all lies. Ms Lashgari told me all about you, that you're a good man. I know you aren't... mmph... I know you aren't a creep like that. I'm friends with Deborah Xu, too...\" Her eyes went down to the floor. She seemed surprised to find that her neckerchief was undone and that she was rubbing her neck.\n\nI didn't think I needed to hear the rest of that. I stood up, trying to work through of a way to defuse the situation. I found myself standing next to the phone. Then I had an idea.\n\n\"I'm going to call Ms Rai. She'll be able to figure out the technical side of this.\"\n\nAs I called Veronica, I watched Anne squirming in her chair. Her eyes darted around the room, almost like a cornered animal. She didn't look like she wanted to leave, but she didn't seem at ease at all.\n\nVeronica said she would be over immediately.\n\nAs I hung up the phone, Anne found something to focus on. Me.\n\nHer eyes locked on mine, and I couldn't look away.\n\nHer mind opened up to me naturally. It suddenly made sense. I could enter into minds of people that were open to me. The student at the register was able to shut me down because she didn't want to have anything to do with me. Anne... was just about the opposite.\n\nHer mind pulsed with the force and echo of those waves that were flowing off me. I could feel her entire body resonating to the pulses. But everything else was entirely her. Uppermost in her mind were the stories that Deborah had told her. And apparently Deborah hadn't left much out. Anne's mind was focused in on the most explicit parts for the stories. I could see a mental image of how she imagined that first encounter in the theater played out.\n\nHer memory of us seemed to change the way they looked. Deborah and her sister were clear and crisp. Interestingly, even their nude bodies were very detailed. My image was hazier. My face was fairly clear, but the rest was just a blur. Every so often, usually in time with those erotic pulses, a speculative image of my cock became clearly visible. Based on the size she imagined for me, she seemed to have been inspired by that photoshopped picture.\n\nThat scene played out in fits and starts, like a porn video scrubbing back and forth to the best parts. She was especially interested in the moment of penetration, but also lingered with a deep yearning at images of her friends and their expressions of joy. There was one orgasm of Deborah's that Anne came back to, over and over.\n\nI tried to pull back to get a better idea of who Anne was, but her mind was so lust-soaked that I couldn't see anything other than her sexual self. She was no virgin, but only barely. A couple of bad experiences in high school, and a very active friendship with a powerful vibrator were her only real sexual histories. There was another quick flash of a memory: Deborah inviting her to join the Dionysian Club. Anne understood that was an offer of a sexual nature, and she wanted to accept. She wanted to be with Deborah, and Cynthia would be fun to play with, too, but she was driven to run the Journalism Club. When I got to those feelings that were not sexual, they were washed away in the tide of lust.\n\nAs I pulled back from her mind, I was left with the clear impression that she came here just to apologize and make things right, but now she was going to do anything she could to fulfil a fantasy of hers. A fantasy that involved her principal fucking her silly in his office.\n\nIt was also getting harder for me to keep my control. I most certainly did not need to be schtupping anyone right now, especially right now, and especially not the president of the club that just published an article about me being a pervert. That said, my blood was up, and that pulsing in my body, I could feel it flowing through me, and flowing out to her, echoing back off of her with intoxicating force.\n\nI stepped out from behind my desk. Her gaze stayed locked on me.\n\n\"I'm not in trouble... mmhhuu... Am I, sir?\"\n\n\"No, Anne. You aren't in trouble. I don't blame you for the article.\"\n\nI kept walking toward her, but managed to stop before getting right up next to her.\n\n\"I... I don't want you to think... I'm... ohh... I'm not sure I fell well...\"\n\nShe still didn't break eye contact. She licked her lips, and again, her hand brushed up her neck. When she brought her hand down, it pulled the collar of her blouse down, popping open two buttons.\n\nShe stood up, well into my personal space. She was a good deal shorter than me, so she looked up into my eyes, and I looked down, seeing her eyes and the cleavage she had just uncovered. She wasn't a big girl, but the rise in her chest was lovely, as her breath quickened and she understood I was looking at her.\n\n\"Do... Do I look... mmmgh... Do I look okay, sir?\" She eyes were pleading.\n\n\"You look... incredible...\"\n\nBefore I could finish, she literally jumped me. She hopped up and wrapped her arms around my shoulders, and thrust her mouth up to mine. It was more of an attack than a kiss. Her lips were fever-hot. She tried to suck in my lips and thrust her tongue into my mouth like a probe.\n\nI stumbled back, then went down on my knees, so she could support herself and I could still have access to her.\n\n\"It's okay... we can go slow, Anne...\"\n\nShe pulled back and looked at me like I had insulted her.\n\n\"NO... Sir... I need you... Oh, god... I'm a slut, aren't I? What does this mean... I'm so hot right now. I... ooohhhhmmmgggg... So hot...\"\n\nI tried to solve her problem by kissing her back, more slowly, more sensually.\n\nShe moaned into my mouth while her hands tore at her blouse. Before I knew it, her jacket and blouse were thrown over on the table and her bra was hanging off one arm.\n\nI wasn't as lost in lust as she was, but I was well past any point of restraint. She was rubbing her crotch against my hardness, and I knew then that I wasn't going to stand in the way of her fantasy.\n\nI pulled us down and over onto our sides, so I could explore her body more. I ran my hands up and down, feeling her butt through her skirt, then up to enjoy her now unencumbered breasts. With every new inch of skin exposed and rubbed and squeezed and tickled, her moaned louder.\n\n\"Hggnnnn, sir... Principal Lee...\" She shuddered hard when she called me that. \"I want everything... I want you... I want to suck you... Hmmm... I want you inside... nggghhh... inside me... in my pussy... I want everything... all of it now.\"\n\n\"Shhh... shhh... we'll go slow...\"\n\nI was trying to slow her down so that she could enjoy things more, but the pulses and little electric shocks seemed to be getting stronger and more powerful. I knew she was feeling them as strongly as I was, and I was only barely holding myself back.\n\nAs I was trying to keep her together, she dove down and nearly ripped my pants off. She struggled with the belt for a second, but then had me in her hands in a flash.\n\n\"Oh mygod... this is as big as she said it was... it's wonderful... fuck... I need it...\"\n\nShe started licking my cock up and down, and I flopped back on the ground in ecstatic agony. But I could tell she was doing something else with her other hand. I understood when I felt her pussy descend gently on my hairy leg. Who knows where her panties went, but I could tell she was already incredibly wet.\n\n\"Ooohh... that is... so good... How is this so much better?\" She started rocking on my leg, then went back to worshiping my cock. In rhythm, she pushed down my leg and licked up my cock, then up my leg and down my cock.\n\nThen without warning, she popped her mouth over me and sucked down as far as she could, choking as she pushed to the back of her throat. Two or three pumps and she popped off, and looked up at me.\n\nThrough her glasses, her eyes were dazzling with sparkles and wild with lust. Saliva mixed with precum dripped down her chin, and her mouth was broken into a primeval hungry smile.\n\n\"Principal... Oohhfuck... Principal Lee... I don't understand... I need you now... I'm so sorry... fuckfuck... I'll give you a blowjob later... but... hgggmmm... I need to feel you in me now...\"\n\nWithout waiting for any reply, she gave a couple more good hard rocks on my leg, then dragged her pussy all the way up my hip to my penis. She was still wearing her long uniform skirt, but didn't want to waste time taking it off, so she just hiked it up and arranged herself above me. She rubbed back and forth, coating me with her wetness.\n\nThen she lifted me up and angled my cock into her and pushed back onto me.\n\nHer eyes got wider and wider as she slid further onto me, and her smile turned almost frenzied.\n\n\"Oh... yeah... that's go big... Hhmmph... oh... oh... yeah... lemme pull back...\"\n\nHer running commentary lasted until she dropped down a second time, nearly taking all of me deep into her. I felt the pulse consume her. Now she wasn't echoing my pulse, it was more like the two of us were pulsing together. Then she just grunted and moaned as she worked herself up and down.\n\nWhen I started thrusting up in time, she immediately tripped over into orgasm.\n\n\"Nooooo... it's too.. oohgod... too fast... I want to... I need to keep... ughh... keep...\"\n\nShe did keep fucking me through her orgasm. Rising and pushing herself down on me in a more frantic uneven tempo than before. I reached up and grabbed hold of her tits, causing her to whimper out a cry of overwhelmed erotic exhaustion.\n\nWe had only been fucking for a few minutes, but it seemed like forever. It was like all of my energy was tied up in those erotic waves and they were draining me. And Anne was already a mess. She looked borderline inhuman, pounding herself down again and again on my cock. Her hair, still mostly in her that ponytail, swung around like a whip. And her face, which still had traces of the tears that were flowing only minutes ago was a taut mask, wracked in ecstasy, and there was no telling how her glasses were still hanging on.\n\nI was starting to feel my cum rising in me. There was no possibility of holding back, and I didn't even consider trying. I matched her wild pace and thrust back up into her, pushing deep into her pussy, feeling every nerve ending sparkle with an electric buzz.\n\nAnd that's when Veronica opened the door.\n\nNothing could stop our raw fucking. I'm not even sure that Anne noticed the door open.\n\nI saw her though. She walked in and immediately shut the door behind her. Her face was livid as she stormed over to where we were rutting on the carpet.\n\nBut halfway to us, she slowed. It was like falling into a trance. I could feel the lust roiling off Anne and me in whips of erotic energy. I could almost smell it, layered over and stronger than the musk of cum and sweat that hung heavy in the room already. Veronica heard us, breathed it in, and took it in in every pore of her body, and it staggered her. Her face softened, then shifted to hunger.\n\nShe was almost to us when she fell to her knees. Her eyes wide. Anne's skirt hid our coupling, but Veronica seemed hypnotized by Anne's boobs. Not big enough to really sag or bounce wild, they were perky and diamond hard in my hands. I saw Veronica staring and I pinched a nipple, causing both women to moan.\n\nAnne heard Veronica's reaction and her head snapped to the side.\n\n\"Ohgod... Ms. Rai? Ohfuck... I can't stop... his cock...Ughhnnn... it's too good! I'm still cumming... I've never... awwwshitshitshit shit... So good...\"\n\n\"That's okay honey. I understand... Mmm... May I... May I touch you?\"\n\nAnne slowed down her bucking, and looked directly at her, nodding solemnly.\n\nWith that permission Veronica shot over and wrapped her arms around the thin girl. As soon as Veronica's lips reached Anne's nipples, Anne shot off into a harder crest of her epic orgasm, rocking her off her saddle and toppling both women to the side.\n\nAfter a couple of hard sucks, Veronica moved up to kiss Anne on the lips and hold her tight through her orgasmic trembling.",
        "I was left on the edge of a massive orgasm and groaned out in frustration.\n\nVeronica must have heard and took pity on me.\n\n\"Let's both suck him off, okay?\"\n\n\"Oh god, Ms Rai, yes!\"\n\nIn a flash, I had both women down there working my cock. Veronica's skilled hand worked my cock up and down while Anne sucked the tip.\n\nThen both of them came together to kiss each other over the very tip of my cock.\n\nVeronica dipped down, sucking me hard into her mouth, and I lost it.\n\nWith a shuddering animal grunt, I tried to warn them. My eyes clamped shut and I shot off right then and there. Shot after shot punched out of me, while I could feel the two women still working me over.\n\nWhen I opened my eyes, I saw them both still hovering over my still hard cock. They were kissing each other with passion, and my cum hung in ropes all over their faces and between their greedy lips. Anne's glasses were pasted and dripping with cream.\n\nI felt the pulse that had been running through my body the entire day weaken and fade. With the trailing of my orgasm it pushed out into the room and left me empty, a sexual husk. I nearly passed out from pleasure. I closed my eyes and felt Anne collapse on my left side. Then I sensed Veronica wobbling to her feet on my right side.\n\nThen I heard Kimberly shout out, \"YOU FUCKED ANNE, NOW?!\"\n\nMy eyes shot open and I saw the door was open. Kimberly was in the doorway. Behind her was Jennifer. Both looked shocked and horrified.\n\nVeronica was on her feet looking dumbfounded, with my cum still hanging in her hair and on her face.\n\nAnne's eyes were still closed. Did she pass out?"
    ],
    "authorname": "shudai",
    "tags": [
        "mff",
        "school",
        "under the table",
        "blowjob",
        "partially clothed",
        "students",
        "out of control",
        "office"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-16"
}