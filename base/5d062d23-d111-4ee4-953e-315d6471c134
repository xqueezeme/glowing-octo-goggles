{
    "title": "Art of Erotica",
    "pages": [
        "You and I are here for a reason: smut. I write it, you read it; maybe you write some of your own as well, you poor masochist. Smut is a good thing: it lets us live our naughtiest fantasies without fear, effort, or the money it would take to get a girl to let us do THAT to her. It makes us happy. And, of course, it makes us horny and hopefully aids in the relieving of that horniness. Smut is a very good thing.\n\nIt can usually be a lot better.\n\nDon\u2019t misunderstand me\u2014I\u2019m not about to imply that there is one Holy Code of Erotic Fiction. Quite the opposite! There are as many styles of writing as there are ways of thinking and speaking, and that is what makes this such a wonderful place. The words I use are too esoteric for many people\u2014and if you had to look that up, you\u2019re probably one of them\u2014but my writing appeals to many others. I tend to avoid authors whose keyboards apparently were not built with the comma key, but judging by their stories\u2019 high ratings, I\u2019m not always in the majority. Fiction is like language: we\u2019re all capable of creating our own personalized type of it.\n\nHowever\u2014ah yes, you knew it was coming\u2014, just as there is the language howled maniacally at the television when Notre Dame makes yet another incomplete pass and there is the language forced out in painfully-precise dribbles onto a college essay, there are different languages of writing. Each serves a purpose, but some serve them better than others. A story devoid of punctuation may be the hottest thing ever conceived of, but eventually most readers will simply get exasperated and at the very least, the story will be rated lower than it could have been. All because of one flaw that ruined the reader\u2019s viewing pleasure. There are tips and tricks to counter those fatal flaws and help to make your story that much more enjoyable, and here are the ones I find most helpful.\n\nCharacterization. I can\u2019t stress this enough without resorting to the dreaded caps. One thing I\u2019m sure you\u2019ve noticed about reading short erotic stories is that they tend to follow one of a not-very-long list of formulas: naughty schoolgirl gets punished by her stern teacher after class, sexy young wife moves in next door, a couple gets stranded on an island/by the side of the road/in the rougher part of town, and so on. These are scenarios that generally turn people on; they keep getting recycled simply because they are effective. That\u2019s fine. However, how many times can you read them without your interest flagging? Well, it all depends on what the author does to spice it up. Characterization is the best way to do this.\n\nConsider this well-used plot: an attractive woman has just started a new job. She is extremely eager to do the job well and please her new boss, and of course this inevitably leads to all sorts of improper situations. We\u2019ve all read this one. How can you the author make it new? Where can you add your own personal touch, the creativity that makes the story yours as opposed to the 5,000 other stories with the same plot? Add something shocking, something unexpected, something that is random and almost insignificant but definitely unique. Are you a martial arts enthusiast? Let your businesswoman go straight from work to her weekly Judo class to relieve some of that tension she built up over the course of the day. And when she is in the expected \u201cJust as I\u2019m starting to fit into this lifestyle of work and sexual favors, here comes this frustrated coworker to rape me\u201d scene, have her throw him over her shoulder! Who the hell needs a hero? The reader will go \u201cHuh. That was unexpected,\u201d and you\u2019ll have yourself a novel idea. Novel ideas are good because they keep the reader alert and interested. That\u2019s good, right? Damn skippy it\u2019s good.\n\nTry to take an action or a dream or a trait of yours and stick it into a character. I personally look at a problem that I\u2019m currently having, isolate and magnify it, and let my main female character deal with it. This has two benefits: one, I have a realistic dilemma to work with, and two, if SHE has fixed the problem by the end of the story, then I know how to fix it for myself. (The fact that I rarely finish my own stories makes this trick not so helpful.) Your technique of course may and probably will differ. However, using yourself as the test model has the advantage of \u201cI don\u2019t have to look up anything new to make the story realistic. Yay!\u201d And it does hold the reader\u2019s attention\u2014I guarantee it.\n\nSo you have yourself a character, full of genuine, realistic qualities. Maybe you even have two! Now you can take a stab at the story. I like to look at a story that I\u2019m writing as a sexual experience, and one a little more thorough than a typical teen misadventure. The story has to build in intensity and sexual tension from the very beginning. You can\u2019t have 20 paragraphs of the most average, uninteresting, nondescriptive, nonsexual events, and then BAM! He\u2019s fucking the girl he was just sipping coffee with. The reader just isn\u2019t ready for that. Most people don\u2019t open a story and immediately get wet/hard. You have to work for it. Toldja you were a masochist!\n\nHow to remedy this situation? Drop an innuendo here, a little shiver of excitement there, a stray thought that really shouldn\u2019t be there because she\u2019s in a meeting and ought to be paying attention, eye contact maintained a second longer than was comfortable, and so on. You get it. Use the introduction as foreplay: you are getting to know the characters, to become familiar with them and develop some sort of connection with them. This is when you\u2019ll need to really show who the characters are, so that the reader too will know and relate to them and thus have an interest in what happens to them. Show them to be fascinating and sexual beings, people that we in our dream world would like to have lots and lots of sex with. I don\u2019t just mean make all the women 38-DD and the men hung like a mastiff on steroids. Give them fuckable personalities, too! After that, take the heat up a notch and start increasing the amount of sexual dialogue and actions. Easy there, tiger\u2014I don\u2019t mean leap right into the bedroom yet. You want the reader to want the characters to fuck. You want the reader to be practically begging for the characters to finally get to it. You want the reader to be gnashing his teeth in frustration that the characters are taking so damned long and then, finally, you will give the reader what he wants and he\u2019ll come all over the keyboard. Mission accomplished.\n\nDo you have the patience as an author to draw the story out this long? Is it even necessary? The answer to the second one is no. Like I said, look at a story like a sexual experience. It can be tantric; it can be a quickie. However, even quickies require some heated words and furtive gropings that make your partner not even care that it\u2019s going to be short, because it\u2019s also going to be sweet. Likewise with the story. You can make the plot nonexistent and not hurt the sexual tension in the least. However, take the tension away and you might as well stick the story in Non-Erotic. Coax the arousal out of the reader. Seduce them. Make them yearn for satisfaction\u2014and, of course, make sure you give it to them.\n\nSo now you\u2019re down to the sex. About friggin\u2019 time. If you mess it up here, there\u2019s no hope for the story. Don\u2019t be timid about leaping in and giving every sordid detail; the reader really won\u2019t mind. They\u2019re kind of hoping for it. Now is not the time for evasion and euphemism\u2014tell the reader what they want to hear! Think about it yourself: what sort of thing do you pay attention to in sex? What particularly turns you on? Is it the sight of your wife straddling you and riding your cock? What exactly about that? Her breasts bouncing up and down? The way she closes her eyes but her mouth always falls open in an O of pleasure? The way her hands claw at your chest when she comes? Dammit, write exactly that! What\u2019s so erotic about giving a blowjob? Is it his sudden inhale of breath as your mouth first envelops his cock? The heavy soft heat of him against your tongue? His fingers twisting in your hair, coaxing you to go down farther, take him deeper? The moans he can\u2019t hold back as he\u2019s coming deep down your throat? Say all of that. Don\u2019t limit yourself to mere actions\u2014give the setting, the sounds, the taste, the little details. Even more importantly, give the reactions. Compare these two paragraphs:\n\nThey were surrounding her now. The first man pushed her to her knees and shoved his dick in her mouth. He pumped in and out for a few minutes, came, and stepped away to let the second man take his place. This one had a bigger cock. He made her take it all, cutting off her air as it pushed down into her throat. She gagged and held on to his thighs as he fucked her face, pulling out at the end to come all over her face and breasts.\n\nThey were surrounding her now, she noticed with a whimper. The first man pushed her to her knees roughly and shoved his dick into her mouth. \u201cYeah, bitch, take it all. Take every fucking inch of it.\u201d He pumped in and out, enjoying the tears streaming down her face, until with a groan of pleasure he came in her mouth and stepped away to let the second man take his place. This one had a much bigger cock. She squealed in fear and tried to move away but he grabbed her head and shoved it down on his enormous cock. He made her take it all, cutting off her air as it pushed down into her throat. Panic flooded her mind, erasing all ability to think, erasing everything except for fear and the humiliation at being so totally used by these men. She gagged and held on to his thighs as he fucked her face brutally, pulling out at the end to come all over her face and breasts. With each pulse of semen that hit her, she moaned weakly.\n\nThe first paragraph reads like a shopping list: this happened, then this happened, then this happened. There\u2019s no reflection on what any of it means to the characters and so it feels empty and unsatisfying. You don\u2019t really know much of anything about what the characters are feeling, if they\u2019re enjoying themselves, what emotions are going through their heads, and so on. The second paragraph takes the same sentences and fills them out with more details. I find \u201csound\u201d descriptions particularly arousing and so I pay special attention to dialogue and moans, whimpers, squeals, and so on. If you\u2019re more visually-oriented, give lots of details about the look of disgust and terror on her face as she is forced to suck these men off. There are an infinite variety of ways to play with description and make it unique to you. It just takes a little self-reflection and patience. The end result is more than worth it.\n\nSo, to summarize, focus your attention on building realistic, unique characters. If your characters want to fuck each other, we ought to want to as well. So make \u2018em live, and make \u2018em love. (Making \u2018em love more than once probably won\u2019t hurt your rating, either.) But don\u2019t get to it too soon! Let them simmer in the stewpot of lust\u2014and don\u2019t ever, ever use that phrase in an erotic context. And finally, lock them in the bedroom and give the reader all the dirty details they could ever want. You\u2019ve just written a lovely, quality piece of erotic fiction, my friend. Enjoy."
    ],
    "authorname": "Quint",
    "tags": [
        "air pushed",
        "make em",
        "stepped man",
        "make story",
        "held thighs",
        "cutting air",
        "erotic fiction",
        "pushed throat",
        "man place",
        "bigger cock"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/art-of-erotica"
}