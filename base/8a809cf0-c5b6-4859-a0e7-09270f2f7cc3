{
    "title": "The Twelve Vitali Ch. 04",
    "pages": [
        "Authors note: Hello everyone. This story is a spinoff of the Twelve Tables series I wrote a while ago. I hope you enjoy this series despite its differences to the original story. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\nThe Twelve Vitalis\n\nChapter 4\n\n*****\n\nCat had found it impossible to avoid the Vitalis' and seeing Ricco over the following weeks. He hadn't made a secret of the fact that he still wanted her in his life, but she remained steadfast in her refusal to be intimate with him again. After the last time she lost control with him, she had begun having strange dreams, some of them nightmares, but most reminding her that no one would ever love her the way she wanted and needed to be loved. Dreams where Ned and Ricco morphed into one being and called her a whore made her wake up gasping. Better dreams, where Ricco realised that she was worth putting his commitments at risk made her wake up crying knowing that would never be true.\n\nHer emotions were a rollercoaster on a daily basis from lack of sleep and a form of depression she hadn't realised she had until Doctor Peter Donati had walked into her home with David one day. \"Hi,\" he had said easily. \"I was in town visiting Maryanne and thought I would check up on my patient,\" he had smiled warmly at her and accepted the offer of coffee. He'd been so easy to talk to, and relating stories of other patients who had dealt with similar, if not worse, trauma made her feel almost normal again.\n\nHe made her realise that, rather than being almost normal, she had been a basket case for the last month and had made David, Ricco, and even Vanessa worry about her. He asked her if she would mind talking to his cousin, Lucia, who had a similar traumatic experience at the hands of criminals, and the book she had written with Peri to read, hoping it would help to know she wasn't alone and that people healed given time. Lucia had written a note to go with it that was heartfelt and listed her contact details. \n\nCat had devoured the book and sent an email thanking Lucia for writing a story that resonated so much with her and her own life. The emails became a daily thing, and after a few days, at Lucia's request, Cat called her. They became strangely close friends rapidly, and Lucia invited her to Brisbane for the launch of her second book in the new year. She'd worked hard for Vanessa, and for the first time in her life had some savings. She spoke to Mick and David about taking over the small loan she had on the properties as a form of rent and decided to pack up her life and put some distance between herself and the cause of her neurotic mood swings.\n\nDavid and Mick had encouraged her, and, after seeking some advice, he had taken over the loan in the form of a mortgage on the townhouse she had bought for him. Mick would rent her townhouse and had set up an account to pay rent into for her in case she needed to supplement her savings. They'd had a quiet Christmas together, and on the thirtieth of December she had boarded a plane with her life packed into one large suitcase and a duffel bag.\n\nLucia had set up a meeting for her with her sister-in-law, Peri Donati, who wanted to talk to her about a project she was working on that might turn into a commission for Cat. She looked out of the small window of the plane at the night sky, she was hopeful that the new year would bring her new beginnings and she could leave the past where it belonged. This was what she needed, to put everything and, more importantly, everyone behind her. Everyone except David, she thought with a smile. The only man who had never let her down, the only man she would ever trust fully.\"\n\n*****\n\nDante Donate looked up from his desk with a wide smile. He watched the tall, muscular man he had known most of his life walking toward him. Standing, he came out from behind his desk and embraced his friend.\n\n\"Hey, D!\" Matteo Vitali's face mirrored Dante's wide smile as they embraced.\n\n\"Seems like I only saw you a few weeks ago,\" Dante greeted him with a warm chuckle.\n\n\"I know, right?\" Matteo said with a shake of his head. \"You'll have to bring Peri and stay longer than twenty-four hours next time. So much for being the confirmed bachelor who was my role model.\"\n\n\"What can I say, love hits you when you least expect it,\" Dante smirked. \"Seriously, mate, when it happens to you I will be first in line to congratulate you. You're not here to ask me to be your best man, are you?\" He chuckled as Matteo looked horrified by the idea. \"I guess it's hard to find a girl like Peri. So hard, in fact, that I had to settle for sharing her love.\"\n\n\"Yeah, okay, I agree, she's amazing. I doubt there are two Peri's in the world though,\" Matteo lamented. \"On top of being an amazing person, she just had twins to add to your growing family!\" Matteo whistled. \"You'd think you and Josh would have given her a little more time to enjoy the first few years of motherhood with the three you already had.\"\n\n\"Don't tell Josh, but I am sure the twins are mine,\" Dante grinned and winked as he poked a finger at the photo on his desk of Peri and her five children.\n\n\"You Donatis' breed like rabbits,\" Matteo chuckled. \"I hear even Carlo has a little bundle heading his way. Now that's a surprise,\" he chuckled.\n\n\"What about you?\" Dante asked. \"Will we hear wedding bells soon? You're not getting any younger.\"\n\n\"That's part of the reason I am here, I guess. I'm having dinner with Josh, ostensibly on family business, but I was hoping to talk to you guys about, well, about Nik,\" he looked at Dante nervously. He'd proposed to Nik and found himself on the receiving end of a humiliating tirade that left him shattered and firm in the belief that love was a fallacy. \n\n\"Time heals all wounds,\" Dante nodded. \"Josh still doesn't like to talk about the betrayal he felt, so tread carefully there. How much do you know about what happened to her before she died?\" Dante considered his friend carefully.\n\n\"Almost nothing. Or, at least, nothing I believe to be the truth. I think the little we were told after seeing the news reports was a cautionary tale for any of the more free-spirited young women of the family,\" Matteo said.\n\n\"Geez, mate, it's a long and sordid story, and if we're going to have this conversation, I'm going to need a beer,\" Dante let out a large breath. He knew Josh wouldn't have the heart for this conversation, even now, almost two years later. That meant he would have to go over the whole story yet again. He didn't want to, but he knew why Matteo was here and asking this particular question, so he grabbed his coat and suggested a nearby bar.\n\nThe two men sat quietly at a small booth in the shadowy rear of the small boutique beer house. As he went through the story, starting from the time Josh started dating Peri to including her attempts on Peri's life, the threats to various people and her dealings with the Suebi, he watched a myriad of emotions cross his friends face.\n\nMatteo's emotions rolled from anger to disappointment to sadness. Everything he heard made him feel sick and made him realise that he had not been the only one she had used and abused. What he had felt after their breakup was nothing compared to how her family must be feeling, and explained Maryanne's obsession with having him like her and becoming his friend. He had been lucky to escape from the madness that had enveloped Nik's life after their break-up. Just as he had been lucky to escape his mother's scheming when she had eventually crossed the line into insanity, and his older brother had borne the brunt of her fury.\n\n\"She made me believe that it was Josh who held her back from committing to our relationship. Our parents wanted it, I wanted, I thought she wanted it,\" he raked his hand through his hair. \"I knew after six months of excuses that it would never happen, but she continued to claim that when Josh found a wife, she too would settle down.\" He had loved Nik wholeheartedly at the time, and wished more than anything to believe her, but the last time he had seen her he pushed her to make a commitment to him by proposing, and she had flown into a nasty tirade and walked away, never looking back. His heart had been badly broken, and he wondered how he could have been so stupid. Had his mother's behaviour not taught him how selfish and cruel women could be?\n\n\"She lied to everyone, Matt,\" Dante said sympathetically. \"You weren't the only one to believe there was still a part of her that could be loving and true. Josh still hasn't recovered, not properly.\"\n\n\"I understand that, and thanks for the truth. I'm glad I came to you rather than bringing this up with Josh. No wonder he still doesn't like to talk about her,\" he said before covering his own feelings by picking up his beer and taking a long sip. Love was for suckers. He'd never met a woman he could trust fully. The depth of Nik's betrayal made him realise that finding a love match was something he couldn't do, even to appease his fathers. Luckily, he'd come up with another plan to ensure his future, he'd just needed proper closure where Nik was concerned first. He had that now, and he felt that finally having all of the pieces to that puzzle he could move on.\n\n\"So, you're meeting Josh for dinner tonight?\" Dante changed the topic now that Matteo had seemed to have run out of questions. \"Mind if I tag along?\"\n\n\"I won't bring her up at all,\" Matteo said. \"You needn't worry.\"\n\n\"It's not that,\" Dante said seriously. \"Peri has invited Louisa and Lucia over tonight, so I'll be at a bit of a loose end, plus this way I can make Josh drive home and have another beer or two with you,\" he grinned. \"It really has been far too long since you made it up here to visit us for a change. The trips down to Melbourne are always so rushed we never have a chance to catch up and have some fun.\"\n\n\"Well, you did request my expert advice on one of your construction projects,\" Mateo said thoughtfully. \"I just finished a big project of my own, so I had some free time to consult and catch up with you. I'd wanted some answers about Nik for a while now, and I knew you were probably the only one who would tell me the truth. I'm sorry to put you through that again,\" he said genuinely.\n\n\"Yeah, well, it comes at a price, buy me another beer and I'll tell you about this project and all the family events you will be expected at while you're in town,\" he chuckled as Matteo's face fell and he swore under his breath. \"Don't panic, Pete is still clinging to bachelorhood like the last man in a lifeboat.\" He laughed out loud, slapping his friend on the back.\n\n*****\n\nCat stepped out of the plane and sighed. 'Of course, it would be raining,' she thought, and pulled her shoulders up with the collar of her new leather jacket as she ducked her head and trudged down the stairs to the tarmac and the short walk into the terminal. She stood at the baggage carousel and pulled her bag from the conveyor belt, praying the cheap, squeaky wheeled old suitcase would hold together just a little while longer until she could get herself settled in this town. She picked up her duffel bag and went out into the rain to find how to catch the air train into the city. She couldn't afford to waste any of her savings on a taxi, no matter how inviting and dry they looked.\n\nShe'd spent all of her settlement, plus a little more, on the two townhouses. Vanessa had bought all of the paintings she had done for her, and she had her savings, but she wasn't sure if she would be able to find work, and she needed to make those savings stretch as far as she could. She looked longingly at the taxi rank where the black and white cars shone wetly underneath fluorescent lights and made her way toward the ramp to the station to catch the air train, when she turned back toward the rows of taxies. A man in a dark suit held a card with her name on it, and she frowned. Seriously, how many other Catriona Leone's are there likely to be in the world. Curiosity got the better of her, and she approached the man with a smile.\n\n\"Hi, I know it's probably just a coincidence, but you're not waiting for me, are you?\" she asked sticking out her hand in greeting. \"I'm a Cat Leone. Catriona! I mean, I'm Catriona Leone. I'm just not sure I'm the Catriona Leone you're waiting for.\"\n\n\"Are you here to meet with Mrs. Battaglia and Mrs. Donati tomorrow?\" he asked politely as he took in her wet, bedraggled appearance.\n\n\"I am, but she didn't say anything about having a car waiting for me at the airport,\" Cat said, reaching for her phone and turning it on to check her messages. Lucia was lovely and had offered accommodation for the time she would be in town to discuss the commission she was offering. The telephone calls they had were the reason Cat had finally gathered the courage to pack up her belongings and leave her brother and Melbourne. It would be safer this way; she had put both David and Mick in enough danger already. When Ned got out of jail he would probably torment her life again. That wouldn't be for quite a few years yet though, she hoped.\n\nThe message that must have come after she had turned off her phone for the flight sat waiting for her. She read it quickly before looking up at the man with a lop-sided smile. \"I guess you are here for me.\"\n\nShe handed over her luggage and allowed him to put the single bag that held all her belongings that hadn't been destroyed by Ned, and the ones bought to replace some that had been, into the boot of the car. Then she pulled open the rear door thinking that she may as well milk it for what she could. As the car pulled away, she imagined she was one of those women who lived the life of the Vitali family, a woman, more importantly, that they would approve of including attending the charity functions for pitiful cases like she was in reality.\n\nThe car pulled up outside a trendy apartment building in the Southbank area. Lucia had told her that this apartment was across the road from the gallery of modern art, as well as the museum and state art gallery. Cat couldn't wait to explore them all. While her meeting with the overly generous Lucia and Mrs. Donati shouldn't take long, she had offered Cat the use of the apartment for a week, and had encouraged her to see the sights on her first visit to Brisbane.\n\n\"Here are the keys to the apartment. You should find everything you need there. I will pick you up for your meeting with Mrs. Donati at ten tomorrow,\" the driver said stiffly.\n\n\"Roger that,\" she said with a grin in the face of his stiff formality, and saw his eyes crinkle at the corners, even though he didn't smile back. Feeling better for not having to try and find this place using public transport in a town she had never been to before, Cat took the handle of her luggage from the driver. She hoped she got the job Mrs. Donati wanted to talk to her about. Family portraits weren't normally her thing, but a job was a job, and if she did well who knew what else she might pick up along the way. She watched as the car pulled away and turned to walk into the building.\n\nShe swore under her breath and looked after the car. The keys didn't have the apartment number on them, and she frowned, stepping inside the foyer out of the light rain. She went through her phone and couldn't find the details in a text message or email, so she dug into the duffle she had used as carry-on luggage and came up with her diary, which she flicked through until she found the notes she made during the telephone conversation and found the room number.\n\nShoving the book back into the bag, she stood up quickly and made her way to the lift, brushing the hair back from her face. She was wet and cold and just needed to find a place where she could stop and take stock of what a momentous day this had been in finally doing something for herself after years of looking after everyone else.\n\nReaching the door, she fumbled with the key card, but finally pushed the door open, letting it sail free on its hinges as she reached down to gather her luggage again.\n\n\"Why is your face blue?\" a very male voice asked a moment after the door flew open, making Cat stop in her tracks.\n\nCat blinked at the half-naked man sitting on the couch and did a double take. She hadn't known what to expect exactly, but a half-naked man sitting with an iPad tablet in his hands wasn't it. She had assumed the apartment would be empty, completely empty. \n\n\"What are you doing here?\" she stuttered.\n\n\"I should ask you the same question,\" he said in a low, menacing tone.\n\n\"Mrs. Donati offered me the use of the apartment during my time here in Brisbane. I was expected,\" she held up the keycard she had just used to open the door in front of her like a small shield.\n\n\"Well, obviously you can't stay here, you'll have to find a hotel or something,\" he dismissed her. \"Surely you know someone else in this town.\"\n\n\"I'm not leaving! You're the one who is not supposed to be here,\" Cat stepped into the room, closing the door behind her. He looked her up and down, amused by the spitfire attitude as she rummaged through her bag and came up with her diary. \"Besides, I can't afford a hotel in this part of town,\" she admitted. \"It's late, it's cold, and it's raining, and if you think that I would willingly leave and try to find another place to stay you can think again, Mister...\" she let the question hang so as to find out who he was.\n\n\"Why is your face blue?\" He repeated the question he asked earlier.\n\n\"What?\" she asked in frustration, then let out a groan as she saw the deep blue paint streaking the back of her hand and realised she must have rubbed her face. Cat began dumping out the contents of the duffel, putting paint affected items into a plastic bag before reloading the duffel and standing to look at the man who looked so comfortable in this apartment that she knew she would probably have to be the one to leave.\n\n\"Perhaps you'd like to use the bathroom. It's back there, on the left,\" Matteo jerked his head in the general direction seeing her predicament. The last thing he needed right now was a damsel in distress, he had other things to consider. More important, and on a much grander scale than why she was here and claiming the apartment Dante had assured him was his for his time in Queensland.\n\n\"Thank you,\" Cat stood, being careful not to touch anything, and made her way to the bathroom. \"By the way, I'm not leaving,\" she said as if it was the truth. The apartment was small, compact, if she considered the dimensions. Behind the couch where the shirtless man sat was a small glass table with bright green chairs, which gave it a much-needed pop of colour, and beyond that a tiny kitchen area.\n\nThis apartment, she realised would have been perfect for her to start her new life, whether she got the job Peri Donati was offering or if she had to move on. She made her way into the beautiful gilt and marble tiled bathroom, tapping the door closed with her foot, essentially shutting out the half-naked man with his dark good looks and broad shoulders from her sight.\n\nCat gasped when she caught sight of her reflection. She looked much worse than she had thought, and she had just been in a room with one of the most attractive men she had ever seen. He reminded her in some ways of Ricco, but this man seemed darker, broader across the shoulders, and had strong facial features that made her think of ruggedness over beauty. She sighed. Well, fate was still having a laugh at her expense, she sighed as she took in the drowned rat with a blue streak of paint in wonky horizontal lines across her face. If they hadn't been so wonky, she could have passed them off as tribal paint.\n\nAdded to the scary tribal paint was her long rain soaked fringe that was plastered to her forehead in strange spikes. Her long hair fell in dull, damp strands from a messy ponytail that more than just the usual wisps of hair had escaped from to hang over the shoulders of her leather jacket. She was a mess. Not just any mess, but a scary mess, what must Mr. tall dark and handsome have thought of her. No wonder he immediately asked her to leave. Not wanting to get anything dirty, she used her elbows to turn on the faucet. She scrubbed until most of the paint was off her hands before adding a little hot water to the stream, making the removal of the paint far more efficient.",
        "Once her hands were clean, she shrugged off her jacket. It was the one extravagance she had allowed herself out of her savings. She'd gone shopping for an outfit to wear when she met Mrs. Donati and had blown most of her budget on the jacket, but she knew as soon as she saw it that it was perfect for her. It hadn't taken much convincing from the salesperson for her to buy it, and she had gone bargain basement shopping for an outfit instead of sticking to her original plan of finding a designer outfit on sale.\n\nWith her face scrubbed clean, she towel-dried the long fringe of hair that angled across her forehead and pulled the band from her ponytail. She ran her fingers through her hair, settling for the shaggy look as the hair flowed well past her shoulders now. She'd been growing it for a while now, but, with her ever-present ponytail, she hadn't realised just how long it was until she had a friend trim it for her before she left. She fluffed it out, raking her fingers through it once more. New hair, jacket, town, new life, she had thought at the time. Had she been stupid to pack up her life so completely and quit her job with Vanessa? She wondered, and took a deep breath.\n\nShe pulled her jacket back on and tugged at her T-shirt and jeans, wondering how she would look to the man in the next room. It was a completely ridiculous thought, she scolded herself. She didn't even know him, and he had made no secret of the fact that he wasn't pleased that she had barged into his quiet evening. It wasn't as if she wanted or needed a man in her life, but a night of fun couldn't hurt, one of them would be moving out in the morning, and she need never see him again. He was very good looking, after all.\n\nShe opened the door and walked back out into the compact apartment. It would have been nice to stay here, if only for a week. Still, there was no way she was leaving tonight, so there was that. It was cold and rainy, not to mention late, and she couldn't believe that this man would make her leave with nowhere else to go, but then she'd never had any luck where men were concerned. The lateness was one of the reasons she wasn't keen to call and disturb Lucia or her benefactor Mrs. Donati, that and the fact that she didn't want to seem ungrateful. She walked back out into the living room with compromise in mind.\n\nThe man was no longer shirtless, and he was on the phone, so she wandered around looking at the apartment. She found she was suddenly hungry and, aside of a snack on the plane, really hadn't eaten anything since breakfast. She picked up an apple from the fruit bowl and took a bite. It was sweet and juicy, and she made a contented sound as the juice ran down her throat.\n\nMatteo watched her walk out of the bathroom and back toward the living room while he listened to Dante's explanation of why she was here in the apartment with him. 'Well, well, well, didn't she clean up well,' he thought to himself. With the paint as a distraction, he hadn't noticed the other blue. The crystal blue of her eyes, and how they played against the raven blue of her black hair. She brought energy and movement to the room, and his eyes followed her as he tried to concentrate on the voice at the other end of his phone call.\n\nGlad he had nabbed a T-shirt for himself before making the call, Matteo didn't think he had been in a room with someone who held that sort of aura about them before. True, he preferred docile, submissive types since Nik left him, but she seemed somehow different to the women he usually met. His eyes continued to follow her, and, when she caught him looking at her and raised an eyebrow, he mouthed the word, \"Better?\" to which she smiled and nodded.\n\nThe call to Dante was necessary, of course. With all of the upheaval and untoward happenings in the tables over the last couple of years, he knew that no matter how innocent someone seemed, there were many scammers and people who would do harm to him or his extended family. He was here to help Josh and Dante, as well as attempt to put his own life on track. He didn't have time for the distraction of an unusual young woman who had an incredible smile and aura about her.\n\n\"D. said he hadn't realised Peri had promised the place to you when he offered this place to me,\" he said as he ended the phone call. \"I'll sleep on the couch tonight, it's too late to be booking into a hotel,\" he shrugged. \"Did you eat already?\" he asked, watching her take another bite of the apple. \"I was thinking of ordering something.\"\n\n\"Who's D.?\" she asked curiously. She had done a quick google search and thought Peri's husband's name was Joshua.\n\n\"Dante Donati,\" he said without further explanation.\n\n\"I thought this place belonged to Peri and her husband?\" she frowned.\n\n\"It's complicated,\" he sidestepped the question. \"So? food?\"\n\n\"Food. Yes! Fabulous,\" she nodded, letting the question go. She went to where her bags still sat beside the door. It was too hot for the jacket now, and she reluctantly shrugged it off. Who was she kidding anyway; this guy was way out of her league, just like Ricco had always been. She tossed the jacket on the coat rack near the door and sat on the floor to tug off her boots and socks, trying to rid herself of thought of Ricco at the same time. This was her new beginning, her new life, and time to do something for herself. She smiled as she curled her toes into the plush carpet and sighed with pleasure. This really was a nice apartment, it was a shame she couldn't stay here after all.\n\n\"I'm Cat. Catriona Leone,\" she corrected herself. \"And you would be?\" she asked.\n\n\"Matt,\" he answered, opting for an easy answer, not wanting the connotations that came with his name, in case she knew it, to flavour their evening. He realised that he had been rude in not introducing himself when she had first walked into the apartment, but he hadn't been expecting someone like her to walk through the door. Or anyone, for that matter.\n\n\"Matt,\" she repeated. \"Matt with no last name, I guess that could come in handy. Are you into the music scene like Madonna, Prince, Pink, Cher?\" she laughed, trying to list as many people as she could that were known by one name only. \"Or are you hiding out and don't want me to tell anyone where you're hiding? Witness protection program? Are you in some sort of danger I should be aware of?\"\n\n\"Not that I know of,\" he shrugged chuckling. \"Pizza good with you?\" he asked, changing the subject abruptly and picking up his tablet again. He watched her nod enthusiastically as she chewed another bite of her apple. \"Preferred toppings?\" he flicked pages on his tablet intending to order sooner rather than later.\n\n\"Everything!\" she said unequivocally. \"Get one with everything!\"\n\n\"Everything it is then,\" he chuckled, unable to help himself indulge her adorable enthusiasm. He tended toward mushroom with maybe sausage on it. He wasn't inclined to everything, but he uncharacteristically made the order. He guessed he owed her that much after being so rude, she had been invited here by Peri, after all.\n\n\"You're an artist, I take it?\" he asked, finding an excuse to keep talking to her. \"Come to the city to pursue fame and fortune?\"\n\n\"Ha! Who wouldn't want fame and fortune,\" she laughed. \"Who wouldn't want their work hanging in a gallery or museum...\"\n\n\"I sense there's a but at the end of that,\" he prompted her to keep talking.\n\n\"What money I have made as an artist has been doing large scale corporate pieces that hang where no one sees them or takes much notice of them. The point of corporate art is to enhance the d\u00e9cor, not stand apart from it,\" she recited as if from a manual.\n\n\"Office art, lobby art, art for furnished apartments?\" he asked, and again she nodded. Matteo was well acquainted with that kind of work; he'd spent hours upon hours with interior designers, mainly his sister, on the corporate buildings his company built. \"The right pieces are vitally important to a unified decor, they announce the mood.\"\n\n\"A point of view,\" Cat agreed. \"They tend to be safe and designed to pull elements of the room together. Few people actually notice them, let alone look at them.\"\n\n\"It sets the tone,\" he countered. \"Those, for example,\" he pointed to two black and white nature shots on the wall they were near.\n\n\"Dull,\" she commented.\n\n\"Safe,\" he countered.\n\n\"Yawn,\" she giggled.\n\nThey both laughed in agreement and their eyes locked for a fraction too long, sending a spark between them before they looked away.\n\n'How alive was this woman?' Matteo thought. He wasn't sure he'd ever met anyone like her. She was almost nothing like any of the women he knew. She said what she thought when she thought it without trying to curry favour. He considered her through surreptitious glances as she moved across the room carrying her luggage to the bedroom. She had been right, she wasn't leaving, he chuckled to himself. That thought was far less disturbing than he had believed it would be when she had first walked in looking like a stray puppy caught in the rain.\n\nMatteo considered the young woman that he was sharing the apartment with for the night. The pressure was mounting for him to find a wife. He knew that his family, like the Donatis', were starting to ready themselves for the changing over of chairs to the next generation, and each of his brothers and cousins who were destined for a place at the table was beginning to settle down in their personal lives, except him. He knew that while he was still jetting around the country and the world, it seemed recently, that the changes he needed to make wouldn't happen. His brothers and fathers had both tried to gently prod him in the direction of finding a partner, a nice tabled woman who would bear him children and toe the family line. He had no intention of ever falling in love again, however, or putting his heart out there to be crushed by yet another woman, especially from the tables where their treachery seemed to know no bounds.\n\nHe had planned to find an actress to play the part of the doting fianc\u00e9, to have a long engagement during the changeover of chairs and eventually find some excuse to call it off when the time was right. He'd been planning on checking out some of the local talent agencies while he was here to find such an actress who could play the part. He could afford to be generous; his personal interests had gone from strength to strength as he had committed to his career rather than a relationship. He just needed to make sure that, even though any woman who would take his offer of a business partnership would be a gold digger, they would have to be to take up his offer, they would also need the skills to fool his family into believing it was love, not money that bound them together. Or the whole fake engagement would never make it off the ground.\n\n\"Do you mind if I take a shower while we wait for the pizza?\" Cat finally broke into his thoughts, shattering the awkward silence that had enveloped them. \"I got drenched on the way here, and I'd like to warm up a bit quicker with a shower.\"\n\nHe wasn't sure why she had asked, seeing as she was well on her way to doing just that, and his eyes followed her across the room until she disappeared into the short hallway. The words, 'If I can take it with you,' ran through his head before he quickly shut that thought down. Matteo ran his hands through his hair and frowned. It was as if the room had become dull and shadowed with the rain still pelting against the windows. He dismissed her from his mind and picked up the tablet again. He'd been thumbing through a talent agency website trying to make a decision about a suitable looking fiance when she'd arrived, and he reopened the web page.\n\nSierra Starr was a willowy red-head with green eyes that had the girl next door look. He knew his family would never buy that she was his type. He had a definite type, tall, sophisticated looking blondes, with big breasts and long legs who were seen with him but rarely heard to say anything of substance. He dated them and then discarded them before they could attempt to attach a relationship status to him. Cat was definitely not his type. He shook his head as the adorable image of her sitting on the floor and pulling off oddly mismatched socks came back to his mind. She was tall, he mused. Her gangly limbs had seemed to twist around her as she had removed both her boots and socks. She had dark hair, but it suited those big crystal blue eyes, her breasts, while not big, could not be discounted as small either.\n\nHe shook his head to dislodge the vision and concentrated on the tablet again. Mandy Perkins, a barracuda who looked like she could eat him alive stared back at him with cool blue eyes. Cat's crystal blue eyes hovered in his mind again for a second before he berated himself. 'You have known her for all of one minute. What are you doing?' He looked back down at the tablet and swiped across the screen considering several more actresses, and seemed unable to help comparing them to the woman who had unexpectedly waltzed into this apartment and his life with an energy and appeal that he couldn't deny.\n\nIt had been a long somewhat emotional day for him, and he was tired after talking with Dante, he told himself. He'd been working too hard lately. There was a myriad of excuses he gave himself as he tried to rid his mind of the images of Cat in the shower that kept spinning in and out of his mind.\n\nHis phone buzzed to life, and he grabbed it up quickly, thankful for the distraction.\n\n*****\n\nCat stepped out of the shower and wrapped herself in a fluffy towel. It felt strange to be showering with a man she didn't know in the next room. She probably should have been afraid when she'd opened the door to find a total stranger in the apartment. She'd felt annoyed, maybe, or maybe something else entirely. It might have something to do with the fact that Matt looked like a bronzed Greek God. With his imposing height, lean muscles and his wavy brown hair that had just a few red flecks through it. He was the first man she looked at in that way in the two months since ending her relationship with Ricco. Maybe this change of scenery was the right thing, as Lucia had predicted.\n\nHis tone was bossy, but she guessed it was an even bigger surprise for him to have a drowned rat with blue war paint on her face barge into the room with a tattered duffel bag and an old suitcase with squeaky wheels. Now she was trapped here with him for the night. At least he had offered to take the couch instead of assuming she would take it, or thought she was an easy target for seduction. Would she have minded being seduced by the man who held those dark, soulful eyes? she wondered.\n\nStill not completely comfortable with the man in the next room, despite her heated thoughts, Cat dressed quickly into comfortable yoga pants and a loose, lightweight sweater. She brushed out her hair and picked up the towel again, squeezing a little more water from the ends before walking into the next room to see if the pizza had arrived.\n\nMatteo looked up as she walked in and considered her once again. If anything, she looked even better freshly scrubbed with a pink polish to her skin. He was tired, he told himself. She had surprised him here when he'd just discovered the horrific truth about the woman who had used and betrayed him for their own selfish reasons. His thoughts about Nik were closely followed by the two other women he had loved and been hurt by. 'Never again,' he vowed. Never again would he be tempted to fall in love, despite the attraction he felt. What he needed was a business agreement, nothing more.\n\n\"Pizza isn't here yet?\" Cat asked, sitting on the couch near him but not close enough to crowd him.\n\n\"Not yet,\" he shrugged. \"They said half an hour, and that was one of the quickest showers I've ever seen a woman have,\" he commented.\n\n\"I just needed to freshen up, really, the flight wasn't that long, but I feel like I was travelling all day,\" she continued to rub at the ends of her wet hair. \"Plus, I was wet and cold from the storm,\" she added after a lightning bolt lit the sky outside. \"A shower always helps when you've been stuck in the rain.\"\n\n\"It's definitely bucketing down out there now,\" Matteo agreed. \"I'm glad you feel better.\" His phone buzzed to life and he grabbed it up, pulling his eyes away from Cat. \"Let him up,\" he said curtly into the phone, and stood walking to the door. \"Pizza is here,\" he announced, and opened the door, even though the delivery guy had not quite made it that far yet. Heat radiated from Cat's body, stirring sensations in him he hoped to deny... Fierce urgent sensations.\n\nNormally he maintained a controlled world without surprises. A world that allowed him to keep the upper hand and manoeuvre as he saw fit because he was usually right about what needed to be done. He accepted the pizza from the delivery guy and signed the credit slip. Closing the door, he walked back to the living room to place the pizza on the table, lifting the lid. He grimaced, he was a thirty-five-year-old man who knew he liked a simpler mushroom and sausage pizza, this woman had barged into his life and spun his world off its axis. He looked at the pizza with everything and wondered if he had lost his mind. She had to be stopped!\n\nThrowing the towel over the back of a green dining chair, Cat went to the kitchen to look for plates and napkins. Matteo joined her in the tiny kitchen, pulling two bottles of beer from the refrigerator. He could feel the heat from her again in the small space and moved away, quickly heading back to the table.\n\n\"Hope beer is okay,\" he opened the bottle and passed it to her. He wasn't about to open a bottle wine or make this dinner anymore awkward than it already felt. She was a stranger; she would be gone from his life tomorrow. He just needed to be civil for one night. Eat, send her to bed, and then he could rest and get on with his life.\n\n\"Beer's great,\" she said, and took the bottle from him. After taking a sip, she looked at him, wondering if he would think her ill-mannered if she dug into the pizza, and then deliberated why she cared what he thought of her. A man like him had no business with a girl from welfare alley. Not that she lived there anymore. She could create a new life and a new past for herself here where no one knew her. No one had to know she came from a place full of the long-term unemployed, drugs and crime. It wasn't a place you'd find a Greek God who was obviously very comfortable in the plush surroundings of this inner-city apartment.\n\n\"So how do you know the Donatis'?\" Cat asked, as she helped herself to a slice of pizza. Her thoughts made her curious about the man with no last name that she found herself marooned with tonight.\n\n\"They are cousins, in a roundabout way,\" he said easily, watching her take a large bite of her slice of pizza. \"I'm here to see Josh, but he got called away from the dinner we were supposed to have tonight. I will meet with him tomorrow. What about you?\"\n\n\"I'm here for Lucia Battaglia's book launch, mostly, but I'm hoping that Mrs. Donati wants to offer me a job, because she has asked me to meet with her as well while I am here. I am meeting with her tomorrow,\" she said, and bit into the pizza again before he could ask her to continue.\n\n\"A job? Like a commission for a piece of art?\" He asked, and when she nodded her head, having her mouth full of pizza he asked, \"How did she know it was worth bringing you up here for a meeting then?\"\n\n\"I'm not sure, to tell you the truth,\" Cat shrugged. \"I doubt she's seen any of my installations,\" she frowned. \"Maybe she liked my website, it has a lot of examples of my work and style.\"\n\n\"Right, a website. What is it? I'd like to see,\" he found himself genuinely interested.\n\n\"Catriona Leone dot com dot a-u,\" she said. Even if there was little else in her life to be proud of, her art was the thing that sustained her through a harsh childhood and an even harsher entry into adult life. It was her solace and her happy place, and she shared it with as many people as she thought might appreciate it. She was beyond grateful to Mick for creating the website for her and his constant updating from the newer pieces she had created during her time working for Vanessa, as well as the short lived affair and tough break up with Ricco.",
        "The breakup had remained amicable, of course. Ricco admitted he couldn't offer her a secure future, or any possibility of something beyond what they had now. For her part, she had told him that she understood that girls like her didn't belong in mansions and ballrooms, no matter how hard he argued with her that she did. She told him how uncomfortable she was with his large family and at black tie events. They would always be friends, they had promised, but she knew it would never happen, and, after a few awkward meetings at public events, they stopped making an effort to see each other even as friends. She had thrown herself into her art then too, as she always did when feeling emotional and vulnerable, time had moved on, and so, it seemed, had they.\n\nWiping his hands on a napkin, Matteo reached for the tablet and quickly navigated to the website. He swiped through the first few pages quickly, slowing down as some of the bigger artworks took his eye. She was good, he admitted. He could see how her style could compliment a range of different purposes. For himself, he imagined that her work could quite easily be used in a few of the projects he was currently working on.\n\n\"Impressive,\" he said at last. \"I can see why Peri wanted to meet with you.\" He let his eyes scrutinise her as she ate.\n\n\"Thanks,\" she mumbled around another mouthful of pizza. She felt uncomfortable with the way Matteo seemed to be scrutinising her now. It felt as if she was an object he was considering purchasing. Even if she had been open to meeting the right man, which she wasn't, she reminded herself it couldn't be a man like Matt. She could never fit into the world he and the Donati's came from, just as she couldn't have fit into the world of the Vitali's. She knew he would never date a woman from welfare alley seriously, let alone a girl who had lived most of her life there. She pulled herself up short. She's known him all of an hour; he probably had the same one night stand thoughts she had considered when she was in the shower. One night she could possibly do with that intense gaze, she felt a quiver run through her.\n\n\"Is there something on my face again?\" she asked, finally unable to take his scrutiny any longer.\n\n\"I have to admit I have never been with a woman who could eat half a pizza in one sitting,\" he admitted with a small chuckle.\n\n\"Of course not, you probably only keep company with women who eat one canape and tell you how full they are,\" she laughed with him as she let her thoughts be known about her impression of him.\n\n\"You are absolutely right!\" he relaxed into a full belly laugh. \"If they eat anything at all. You are definitely not like the women I tend to meet.\"\n\n\"I think I will take that as a compliment, so don't disillusion me if it's not,\" she grinned.\n\n\"Why did you travel here alone?\" he asked. A funny, attractive woman like her shouldn't be travelling alone and wandering into apartments and being friendly with men she didn't know. He could have been a low-life who could have done anything to her.\n\n\"Who would I have come with if not alone? My parents aren't around. My brother finally has a job that is turning into a career, and I have no other ties,\" she said honestly. There was no need to mention the dismal failures of her ex-boyfriends. She'd grown up compensating and strategising for her unreliable mother, looking out for her brother and working around her ex-boyfriends wants and needs. She'd juggled two part-time jobs with her painting, kept house, fed people, paid bills, and was basically the only responsible person in her family for years and years. Now that her brother was settled and on his way to a real career it was her time, and she knew she had to leave all that behind if she ever wanted to live a life that included doing what she wanted and enjoyed.\n\n\"I'm through with taking the safe road and being cautious,\" she blurted. \"Yes, I came all this way on a hope and a prayer. No job, no permanent place to live, I don't even know if I belong here or if Mrs. Donati will offer me the commission. I planned to stay in this apartment for the week it was offered to me for and figure it all out on my own, but I guess that's out of the question now,\" she huffed. She couldn't believe she was saying all of this to a perfect stranger, and closed her eyes, shaking her head. \"I'm sure I sound like a crazy woman to you.\"\n\n\"You sound very brave,\" he said softly. Every previous experience he'd had with women had led him to believe that they were never as they seemed, but something about her outburst touched him as being the truth. It could have been a made-up story to evoke sympathy and make him leave the apartment in the morning, allowing her to stay for the week alone and unhindered. The way she had confided that she wasn't in contact with her parents made him believe she had been through more than her fair share of trials. He'd learned his lessons the hard way though, and pulled himself up short knowing that he couldn't trust anything a woman said at face value.\n\nEvery woman he'd ever met wanted something from him. With his scheme to concoct a fake fianc\u00e9 and engagement, he could give them what they wanted while getting what he needed in return without having to take any risks. It was a win-win situation. Everyone would get what they wanted, clean and upfront, with clear expectations and no disappointment.\n\nThey both remained quiet with their inner dialogue, and, out of habit when the pizza was finished, Cat got up and cleared the table, loading their plates into the small compact dishwasher and disposing of the beer bottles and napkins.\n\n\"You don't have to do that,\" Matteo said suddenly looming over her in the tiny kitchen. \"Housekeeping comes in every day to clean up the place.\"\n\n\"Oh, sorry, I didn't know. It only took a minute,\" Cat shrugged and looked up into Matteo's handsome face. A look passed between them again, and heat flared, colouring Cat's cheeks. She was quite tall for a woman, and she wasn't used to men towering over her, and it gave her a strange sensation making her uncomfortable as she looked into the dark pools of his eyes. \"It's late, I think, I'll head to bed if you're sure about taking the couch. I don't mind, either way, I've slept on worse than a couch before,\" she tried to smile, and he stepped back, letting her pass with an equally strange expression on his face.\n\n\"You can stay and watch television, if you like, I have some work to do anyway, so I won't disturb you,\" he said, easily taking a second bottle of beer from the refrigerator and twisting the cap off. \"Would you like another beer?\" He asked, tilting the open bottle toward her.\n\n\"I can get my own,\" she said, feeling strangely over-whelmed by his closeness. She took a tentative step forward and was pleased when he stepped back and made room for her to get to the refrigerator. When she closed the door again holding the bottle, he had retreated to the couch once again.\n\n\"I should warn you that if you're planning on getting me drunk to take advantage of me, you're shit out of luck, I've given up on men entirely,\" she laughed lightly. \"Before you ask, no, I'm not a lesbian, I've just had my quota of assholes for one lifetime.\" Putting her beer on the coffee table, Matteo offered her the remote, and she shook her head, walking away.\n\n\"That's a good thing, because I feel the same way. About women, I mean. I've had my fill of cold-hearted bitches!\" he raised his voice as she left the room, then shrugged and placed the remote next to her beer, assuming she had gone to the bathroom.\n\n\"Was that meant to be a jibe at my attitude?\" she asked in a strangely pleasant voice. She had come back with a sketchbook and some pencils. \"There is one man in this world that I love and trust, and that's my brother. So, let's just agree to be friends tonight. I appreciate that you offered to take the couch, and I don't believe you're an asshole, just most men.\" She picked up her beer, and he watched as she wedged herself into a window sill on the opposite wall to where he sat and rested the sketchbook on her bent knees before taking a sip of her beer.\n\nMatteo tried to concentrate on the tablet he held, but his eyes continued to be drawn to the woman who swung her head between the window and her sketch pad, making the strands of her still drying hair brush over the soft hills her breasts made under the soft shirt she wore. There was no denying she was attractive. While not usually his type, he could imagine with the right clothes and a little polish she could pass quite easily for someone who he could have met and started dating while visiting the Dante.\n\nHe began listing off the qualities he needed in the partnership he was looking for. Cat didn't want a romantic entanglement. Cat was talented and could use exposure he could give her art through his contacts and the projects his company had coming up. She could obviously use the money she would have access to, and he could afford to offer a very generous package for her, including allowances for clothes and other things she would need to play the part. He narrowed his eyes considering her again. She would need to be able to fool his fathers into believing they were a couple in love rather than a gold digger trying to get her hands on the power and prestige that went with their family name.\n\nHe toyed with the label of his beer bottle, peeling it off slowly and rolling it between his fingers as he realised she was perfect for his needs. He just had to work out what she needed the most, because he didn't think money alone would be enough to sway a girl like Catriona Leone into a loveless relationship based solely on a business partnership.\n\nShe would be gone from here tomorrow and possibly his life; and he was never one to pass up a golden opportunity when it sat right before his eyes like she did. He debated with himself over the fact that he knew nothing about her. He'd known her for a matter of hours, and she could be worse than the other women he had dismissed so easily. His thoughts continued to rage back and forth as he pretended to work on his tablet while watching her.\n\n*****\n\n\"Cat, can we talk?\" Matteo asked. \"Seeing as we're friends and all,\" he chuckled, making her look over at him suspiciously.\n\n\"Isn't that what we're doing right now?\" she asked in a rare show of sarcasm, but tempered it with a smile.\n\n\"I was hoping we could talk without you being on the other side of the room, and as there is no room for me in your windowsill,\" he patted the couch and raised a questioning eyebrow at her.\n\n\"Okay, I'm sorry I came on a little strong before,\" she sighed and went to sit with him, taking a chair opposite him rather than sitting on the couch with him.\n\n\"Don't apologise, I liked it. It's actually refreshing to find a woman so upfront about what she wants. I figure I'd do the same for you,\" he said carefully.\n\n\"It's your show,\" she put her sketchbook and pencils on the table, taking a sip of the beer she had forgotten about until moving from the window sill.\n\n\"For several reasons I can explain later, I need to find a woman willing to marry me for money and the social circles I move in rather than love. I meant what I said earlier. I've had enough manipulative bitches to last me a lifetime. What I'm looking for are a business partnership and, more importantly, honest friendship. There would be a contract drawn up listing what I can do for the woman who accepts my proposal and what I would expect in return. I am a wealthy man with a lot of contacts, particularly in the art world,\" he began to explain.\n\n\"Geez, and you accuse women of being cold-hearted,\" Cat laughed. \"Let me guess, sex would be an optional extra? Or will it be in the contract as a once a week conjugal visit?\" She laughed again at the ridiculousness of what he was saying. \"Or, better yet, a Fifty Shades of Grey arrangement where you take out your hatred of women on the poor girl every weekend in a red room of pain!\"\n\n\"I don't hate women, some of my best friends are women,\" he couldn't help but smile at her laughter or understand the reason for it. \"I could possibly build you a red room of pain and enjoy having you in there if that was what you wanted,\" he shrugged.\n\n\"Wait! What?\" she immediately became serious and blinked.\n\n\"We've become friends, surprisingly, in a matter of hours, and I imagine, in time, we could be the best of friends. Neither one of us is looking for love, so why not a partnership where we both get exactly what we want from the deal?\" he asked reasonably. \"Marry me,\" he said, holding out the paper ring he had fashioned from the label of his beer bottle.\n\n\"Holy shit! You're serious, aren't you!\" she gasped.\n\n\"As a heart attack.\" He said, and winced, regretting his choice of words.\n\n\"Why the face?\" she asked, frowning in concern.\n\n\"One of the reasons I need to give the appearance of marrying and settling down is that my father had a mild heart attack earlier this year,\" he said honestly. \"It means a lot to him to see me settled in a solid relationship.\" He purposely left out any mention of love.\n\n\"Okay,\" she accepted the reason as being true. \"So, tell me exactly how this would work?\" She couldn't believe she was buying into this conversation, but what did she have to lose? She knew she wouldn't trust her heart to steer her on the right path ever again.\n\n\"May I?\" he pointed to her sketch pad and pencil. When she nodded, he pulled it toward himself and drew a line down the middle of the page, labelling one side Matt and the other side Cat. On his side he wrote the word 'Hot Girlfriend', on her side, he wrote the words 'Rich Boyfriend' and ruled a line under each word.\n\n\"We talk about what we would both want as a must have and what we would like that's negotiable in the contract,\" he said. \"To start with, I need and want a girlfriend who would become a fianc\u00e9 in a very short amount of time, say three months. If we have a long enough engagement, we may never have to stand before a priest and say I do, but the possibility is there if, after a period of time to be determined, we both agree that the partnership is working and viable in the long term. In return, you would get the security of never having to worry about money, paying bills or day to day expenses.\"\n\n\"That would be a new and interesting experience for me,\" she admitted.\n\n\"Generally, you are not the type of woman I would normally date,\" he considered her. \"To be able to convince my father that we are in love and marrying for the right reasons, I would need you to adjust your more casual style. That isn't to say you can't keep your personal creative style, just refine it a bit,\" he tackled a tricky subject of having to give her a complete make-over from top to toe. \"I would, of course, pay for the transformation.\"\n\n\"And in exchange for me adjusting my style, you would?\" she prompted, not in the least bit insulted by what he was saying. If he were as rich, as she suspected, then she wouldn't fit into his world wearing what she had in the small suitcase she had brought with her. She had learned that hard truth from Ricco.\n\n\"Set up accounts at preferred stores, spas and beauty therapists for you. Take you shopping several times myself so you can gauge my preferences and continue to shop accordingly. I don't wish to change who you are as an artist, just polish the edges a bit to make our partnership more believable to those that know me,\" he explained, and noted that she seemed to be taking his criticism of her wardrobe well.\n\n\"I assumed that was part and parcel of the change your styling needs. What do I get that want if I submit to your makeover and maintain it?\" she asked. Matteo was impressed, she was shrewd, and he wondered if he had misjudged her, perhaps she was a manipulative bitch like all the other women he knew. It didn't matter in the end; this contract would be designed to protect him. Protect them both, really. It wasn't like he was putting his heart on the line, but he somehow still felt disappointed in her.\n\n\"An art studio and gallery to paint as you wish and sell your works to discerning buyers,\" he finally said after a moment's thought of what he knew about her. \"I can also introduce you to those discerning buyers, along with curators of the state and national galleries in Victoria.\"\n\n\"You're from Melbourne?\" she asked, wondering why she hadn't thought to ask this sooner. She had just assumed he was from Sydney for some reason, and a sickening knot began to form in the pit of her stomach.\n\n\"I am. I have an apartment in the city, but my main residence is a few hours' drive from Melbourne itself,\" he explained, wondering why she suddenly seemed to run out of energy going flat and becoming pale.\n\n\"I would be Mrs. Matt, who, exactly?\" she asked in a stilted voice.\n\n\"Mrs. Matteo Vitali,\" he answered, knowing that she had probably put the pieces together once he mentioned Victoria. Her reaction to finding out who he was, however, was anything but what he had expected.\n\n\"You have got to be fucking kidding me!\" she got to her feet. \"I come thousands of miles across the country, and I'm still...\" she stared at the look of shock on his face. Of course, he didn't know anything about her, Ricco never told anyone about their relationship. This was the most bizarre situation she had ever found herself in! 'What was wrong with this family?'\n\n\"Sorry, Matt, or should I call you Matteo now,\" she said, using his full name and seeing the surprise on his face. \"Either way, this was a fun little game, but you're going to have to find yourself another girl, because there is no way your family would ever believe we were in love and planning to marry, and, honestly, I'd rather not see them again to find out!\" She turned and walked from the room before he could say anything in response. She slammed the door to the bedroom and threw herself on the bed, cursing fate and it's awful sense of timing. Her life was a never-ending black comedy.\n\nShe'd been seriously considering what he was saying; it was win-win, as he had said. As his pretend girlfriend, she wouldn't even have to worry about Ned coming back into her life, the security around that family was phenomenal. She would have never gotten her heart broken again. Fuck! Her mind caught hold of her brother. What if raging at Matt had somehow jeopardised his job? If she took his deal she might be able to help David's career along, and she so desperately wanted a better life for David, a life nowhere near welfare ally or the childhood that had almost killed them both. At the very least she should apologise to Matt for her overreaction to finding out who he was. It could wait a little while longer, she decided, and picked up her phone, needing to touch base with the one person she knew loved her unconditionally.\n\n\"Hey, Dave,\" she smiled into the phone as he answered. \"Yeah, flight was good, and the apartment is amazing. Mrs. Donati even sent a car to pick me up from the airport, so I had no trouble finding it.\" He was happy for her. Told her she was doing the right thing. It was about time she did something good for herself and left all of the crap with Ned behind her.\n\n\"Follow your dream, just don't forget your little brother when you're rich and famous,\" he had joked, and she had hung up feeling better, stronger, able to face the man in the next room and explain why she couldn't be his pretend girlfriend.\n\n*****\n\nMatteo had watched her go, stunned to speechlessness. His name and the prestige that came with it usually had the opposite effect on women, and, once the shock wore off, he considered her words carefully. She had obviously dealt with his family in some way, perhaps she was one of the residents evicted from welfare alley before he bought it. He knew who would know, after such an easy conversation about the business partnership proposal and her obvious consideration of what he was saying, he wasn't ready to give up on her yet. He needed answers, and he needed them now.",
        "\"Zio,\" he said warmly as his Uncle Cosimo answered the phone. He exchanged pleasantries until getting to the reason for his phone call. \"Listen, I met this great girl tonight, everything was going well, getting along like a house on fire until she learned I was a Vitali,\" he explained. He knew that his uncle already knew where he was and who he was with, but he supplied the name anyway, \"Catriona Leone.\"\n\nBefore he'd even hung up the phone an information packet had arrived in his email, and he opened up the summary page and skimmed it, planning on reading it more carefully after he had attempted to talk to her one more time before retiring for the night on the couch. He went through a gamut of emotion as he read of the struggles she'd endured and how she and her brother had managed to rise above their circumstances again and again. The assault had made him see red, and the betrayal of her trust perpetrated by Ricco disappointed him. It was a wonder she hadn't slapped him or scolded him for trying to make her into a paid escort in his own life. Still, since she hadn't done that, he thought it could work and be beneficial for them both. Taking the one leverage point he could find in the quick scan he had done of the summary, he stood and went to the closed bedroom door.\n\n\"Cat,\" he knocked gently, seeing the light shining from under the door. \"Talk to me. Tell me why you think my family wouldn't believe us?\" he heard movement just as he was about to knock a second time and stilled his hand.\n\n\"I'm sorry,\" she said softly in a tired voice as she opened the door. \"I shouldn't have reacted that way. It wasn't anything to do with you, so please don't take it personally.\"\n\n\"Please come back out and talk to me. I'm not nearly as much of an asshole as the rest of my family,\" he gave her a crooked grin.\n\n\"You have it wrong, your family have been nothing but wonderful to me and my brother,\" she smiled and let him take her hand to lead her back out to the small living room. \"It's me; I just don't fit into that world.\"\n\n\"I don't agree,\" he said. \"A few cosmetic touches and no one would believe you weren't born to it.\"\n\n\"Your family knows I wasn't,\" she argued.\n\n\"I want you to listen to what I have to say calmly and let me explain before you react this time,\" he said enigmatically. \"Deal?\"\n\n\"Deal,\" she narrowed her eyes at him but sat back in the armchair she had taken across from where he sat on the couch, trying to remember that this man held David's career in his hands.\n\n\"You know that my family is wealthy and powerful,\" he paused and watched as she nodded, saying nothing. \"It's standard procedure for the head of our security to do a background check on anyone who works for or becomes involved with a member of our family. When you had such a...\" he paused again searching for the right word, \"Strong reaction to my family name, I called and asked for the report.\" He spun his tablet toward her so she could see the summary page with her name at the top. He could have lied, but honesty between them was going to be paramount if a partnership like he wanted was ever going to work.\n\n\"Oh god!\" she gasped and hung her head.\n\n\"We made a deal that you would let me finish my explanation,\" he said quickly and waited until she looked up at him again and saw the fear and sadness in her crystal blue eyes. He hated that her past had made her feel that way.\n\n\"Yes, I know about your mother and brother and the struggles you had. I know Frankie helped you out. I know about Ned and what he put you through. Vanessa, my father, and even Ricco,\" he confirmed her worst fears but went on. \"None of that matters to me. None of it, you are brave and honest and speak your own mind. You are resilient and funny, and, despite everything, you are still kind and gracious when life is cruel. I have never admired someone as much as I do you. Your strength and fortitude are phenomenal.\"\n\n\"I don't think you understand,\" she said in a wavering voice. \"I'm here because I left all of that behind. I don't want to be reminded that I am that girl and not good enough to be anything but who she was, who I am. I want better, I want more. Not just for me, but for David too. My brother,\" she finished lamely.\n\n\"I'm giving you the opportunity to have more, to make yourself into a new person. To go back to Melbourne as someone they barely recognise. To meet all those people as their equal, or better, and as an extra incentive to consider the proposal I am offering, I will do what I can to fast track your brother's career, if, and only if, he shows aptitude.\"\n\n\"You still want the partnership with me? You have barely known me five hours!\" she gasped in shock. \"You may know all my dirty laundry, but nothing about the real me is in that report.\"\n\n\"You have been real and honest since the moment you walked through that door and announced you weren't leaving. That's more than I usually get from anyone I meet. You're not like any woman I have ever met,\" he chuckled. \"I think this arrangement could work out well for both of us if we stay honest with each other,\" he said. \"We go into this with our eyes wide open, no surprises, no revelations, we will put everything out on this table and be sure that what we want and what we need is in the contract before we officially start dating.\"\n\n\"What about Ricco? He's your brother. Won't this,\" she waved her hand at the contract, \"Cause issues between the two of you? I don't want to be dubbed the Yoko Ono of the Vitali brothers. I never did, that's why I left him, because of his commitment to Jacobi.\"\n\n\"As far as he or anyone else in my family are concerned we will be madly in love. He had his shot and blew it. He let you walk away, why would it be a problem?\" Matteo realised at that moment that Ricco was the one that had made her swear off love for good. More fool him then, because, from what he could see, this girl was a catch, not that he wanted her love, he'd never be that vulnerable to the machinations of a woman again, but he could see how amazing she could be in every other way.\n\n\"When you put it like that, I guess it's not,\" she said with an edge to her voice. \"We split up amicably enough, no big messy scenes,\" she admitted burying that one lapse in judgement on her behalf deeply, along with the pain of not being good enough deep within, and looked up at the man who thought she could be more than good enough for his family... With a complete make-over, she reminded herself.\n\nMatteo held his hand out to her and smiled. Once again she saw the paper ring fashioned from the label of his beer bottle and giggled.\n\n\"Promise to think about it, all of it,\" he suggested in an earnest voice. \"And I will promise you I will never let you down like those men have done in the past. I will be there for you whenever you need me. I will be the best friend you could wish for.\"\n\nThere it was, Cat thought and closed her eyes. What he was truly asking her to commit to was a loveless marriage. She would have a friend and a confidante, but she would never be his everything, there would be no romance, no hearts and flowers, and what happened if he or she, given time, wanted kids. Her earlier words about conjugal visits came to mind, closely followed by the simmering passion she had shared with Ricco, and felt her heart contract and threaten to shatter again.\n\n\"I know there will be some kinks to work out, but at least think about it. I want this more than I can tell you right now, but I won't rush you to answer,\" Matteo said into the silence, seeing a range of emotions cross Cat's face.\n\n\"I was supposed to stay in this place for a week, but I expect Mrs. Donati will move me tomorrow knowing the mix-up. Instead of relying on her generosity, find me a place to stay nearby, and we can give this proposal of yours a trial run as we get to know each other this week. If at the end of that week you still feel the same, then we'll deal with the contract, but,\" she hesitated. \"As an act of good will, can you see if there is anything you can do to help my brother's career?\"\n\n\"Done and Done,\" he said. \"Unless you would like to stay here, then I will move,\" he suggested.\n\n\"No, you've obviously unpacked and settled in,\" she said easily. \"Since you know everything there is to know about me and why I would consider a contract marriage. Why don't you tell me how you got so jaded?\" she asked, \"Since we are being so honest with each other.\"\n\nBy the time Matteo had finished the story of how Nik had used him as a distraction for her overprotective parents, and briefly touched on what had occurred after their breakup and her subsequent incarceration for murder and how she died, he felt better about it. It was relatively new information for him too, and saying it out loud had been cathartic, in a way. He wasn't ready to tell her about his mother. He also wondered about when the right time would be to tell her about the strict requirements of joining his family. He didn't think the trial would be so bad, some etiquette and elocution lessons wouldn't go astray, and he knew she was smart. Thankfully the trials around the marital bed had been dispensed with generations ago in his family, even though he knew other tables, like the Donatis', had kept strictly to the old laws. The fate of the Pellegrini table was a testament to what could happen when the laws of the tables were ignored.\n\n\"I get it now, but I get the feeling its more than just that,\" Cat said, looking into the deep warm pools of his eyes and seeing a reticence to discuss it any further. As long as it didn't, or wouldn't affect her, then she wouldn't push him. She had things she'd rather not discuss as well. Her feelings for Ricco, for example, and the knot of dread she felt about seeing him again as his brother's Girlfriend.\n\n\"It's late,\" he said, changing the subject and considering all he had to do to make this week as productive as possible for their possible partnership. \"We both have meetings in the morning. Would you like to have lunch with me? I can pick you up from your meeting if you like.\"\n\n\"I'm not sure how long my meeting will go, but I could call you and see how your day is going when it's done,\" she suggested, not wanting to commit to anything until she'd had time to think. \"I should get some sleep though, so give me your phone,\" she held out her hand. He passed it over and she put her number in his contacts and texted herself before passing it back.\n\n\"Sure, that will work,\" he agreed. \"Good night, Cat,\" he smiled.\n\n\"Good night, Matt,\" she said softly, and went to bed feeling awkward now about making him sleep on the couch.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "brothers",
        "artist"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-04"
}