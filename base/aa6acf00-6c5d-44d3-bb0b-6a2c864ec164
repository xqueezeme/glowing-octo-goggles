{
    "title": "A Big Shiny Blue Marble Ch. 55",
    "pages": [
        "***I hate having to 'splain stuff because it usually means that I didn't make something clear.\n\nBut I hate having to read it in the comments that I've left a reader in the dust over something that is not clear even more, so hopefully without spoiling this for others, there is a small time shift in this chapter.\n\nSmall, in that it involves only one character, but it's there, so if you're wondering how this seems to tie in as you read, keep reading and you'll see what I mean. 0_o\n\n----------------\n\nBook of the Forsaken Part 10\n\nWhile Jerrthi struggled a little over what she felt in Xhan's embrace and whether she wanted it, other little vignettes played themselves out in another system far away.\n\nOff the coast of California, under about four hundred feet of cold Pacific Ocean, Jayne lay on her back with her legs drawn up, smiling as Bronn fucked her slowly.\n\nIn a park in Oakland, Monnie looked up a little helplessly at the powerful demon who was doing the same thing to her, but out of vengeance and the way that he drew from her in it.\n\nShe wasn't smiling at all, though the large demons who watched it from all around them did. \n\nBut it was to the south -- a fair distance - that a different scene entirely played itself out.\n\n-------------------------------\n\nHe raised his head wearily and shook it, partly to see if the action would help in getting clear thoughts to come and partly just to get his hair out of his bleary and tired eyes. He needed sleep and that was apparently what he'd been doing for a while now, but lying in ancient filth was no way to get it- in his book, anyway. All of his limbs ached and every little move seemed to be taken by his appendages as some sort of tacit permission to tell him of each little strain and scrape.\n\nHe suddenly realized that the unexpected little nap that he'd just awoken from had cost him his hold on the passage of time -- he'd fallen asleep from exhaustion and had no real idea about how long he'd been lying here. The torch lying on the floor in front of him still burned but that was no indicator. He'd seen and used several now in his travels through this ages-old subterranean burial heap and it occurred to him that he hadn't seen one of them sputter out yet. They just seemed to burn on indefinitely. Well they seemed to, as long as you didn't drop them down a shaft accidentally.\n\nHe looked around with a groan in response to the aches of his body. The rubble and debris of the cave-in was still there behind him. All that there was for him in terms of travel possibilities was to go forward and that was the trouble.\n\nHe could see down the corridor up ahead. It was clear and even better, it was clean. Well, at least it looked to be cleaner than where he was now. But that was on the other side of the mirror -- or membrane there up ahead. It was like looking at something a little like a vertical puddle. There were ripples visible in that surface sometimes.\n\nHe told himself that he still didn't know what that meant as he sat back against the wall to take stock. He only knew that it likely wasn't a good thing.\n\nDarji.\n\nHe smirked as the sound of it seemed to echo in his mind. Darji Saladin. That was his name, or it had been once. Now? What good was a name anymore? A name was a set of written or printed words or they could be a series of spoken sounds used to indicate the identity of a single person within a group of people. That was when it came to him. That was what he'd lost in all of this. He was no longer one of a group of individuals. He was one. And being only one and aside from the unholy trinity of 'me-myself-and-I', there was no need to have a name anymore, was there?\n\nHe pulled out a crust of hardtack bread and began to chew on it a little thoughtfully, trying to make it last, needing to mislead his stomach into thinking that this was a lot of food when it was little more than a crust. He shook his water bottle. Pretty light for what had been a full canteen a few days ago, part of a set of four. He reached for the cargo pocket on his left pant leg. Still one full plastic canteen there, but he didn't want to drink it unless he couldn't find any more good water. He'd filled it up from a stone trough a ways and a few days back. It had looked ok there, though that didn't mean much down here, he supposed.\n\nHe pulled it out anyway and opened it. Passing it under his nose told him that it couldn't have been too bad after all since it now smelled like the polyethylene of the canteen. That was why he liked the metal ones, he told himself as he fished in his little kit for the tablet pairs which would purify the water. He'd always thought the term 'purifying' sounded just a little hopeful. They were in blister packs in sets of two; the first tablet was tetraglycine hydroperiodide and the second one was a lot tastier -- even though it was just about as bitter to the tongue. \n\nHe dropped the iodine tablet inside and shook it before setting the water bottle down to allow the required thirty minutes for it to work. He sat back a little as he waited, thinking of little more than how miserable he seemed to be able to get these days. When he'd judged the time to have elapsed, he opened the bottle again and added the second part - ascorbic acid -- good old Vitamin C. The iodine killed most of whatever microscopic bugs might have been swimming around in there and the ascorbic acid forced the iodine to settle out as a precipitate. He followed that with the contents of a pouch of drink flavoring. \n\nHe didn't like using the stuff but it got rid of both the plastic taste as well as the bitterness of the iodine, plus, it also contained Vitamin C, so he figured that with a bit of luck, he might starve to death lost down here where he was, but at least his teeth wouldn't fall out from scurvy. \n\nHe screwed the cap back on tightly and shook the thing half-heartedly to mix things up in there before he slid it back into the cargo pocket. He made a silent promise to himself that if he ever got out of this, he'd never touch the 'Goofy Grape' flavor ever again.\n\nThere had been a time, about a year back now, he guessed, when it had been a good thing to be Darji Saladin. He was the sole and very spoiled offspring of a very successful pair of people and he'd grown up with anything and everything that he'd wanted. He realized now that his life had been very jaded and superficial. Cars, clothes, booze, and of course, the women who had just naturally been attracted to him and the trappings of a wealthy young socialite from a rich family.\n\nHis father had been a merchant and his lovely mother was a successful and popular author of archeologically-based historical romances. He supposed that his mother was to blame to some extent for the way that he was. Or perhaps he ought to think of what he'd gotten as a gift. He decided that it was a better way to look at it. \n\nHe knew that back home, he'd been very attractive to the fairer sex. \n\nHe smirked at that thought. To him back then, the fairer sex was about anyone who interested him sexually. \n\nIt had been a while, but there had been a time when he'd seemed to go first one way and then the other in his mating selection process, whatever it was. He'd admit nothing to most people, but in his heart, he'd admitted that he was bisexual and he liked that. He'd actually been surprised when he'd found out as an adolescent that there was a name for it. He'd just always either been attracted to someone or not. Mostly, it was 'not' since by his own admission, you can't fuck everybody. \n\nWell, not at the same time.\n\nAs far as mating was concerned, he only sought females when the mood was on him and he was presented with one of uncommon beauty. He rarely went after other guys. Most of his liaisons that way had been with men who had obviously been attracted to him. So for one gender, he'd hunted a little half-heartedly and for the other he'd let the hopefuls come to him.\n\nYessir, he thought with a smile, it had been a good thing to be Darji.\n\nDarji had sometimes gone either way, but on the whole, with another man, he was a top. In fact, the only relationship that he'd ever had that he'd admit to being deep at all had been with a friend of his, and they'd known each other since childhood. Once that had begun, they'd spent days just fucking. \n\nThe two of them had drifted apart a little after a while, but they'd gotten together on and off for two years when they could -- even while one of them or sometimes both had been in relationships with women. \n\nHe sighed as he remembered the day that Tony had come to him to say that he was getting married and that he and Cindy were moving to the East coast. They'd called each other and texted for a while, but it had finally faded out. He knew Tony so well and wondered how long it would be until the end of that marriage. \n\nThen again, he smirked, who was he to say? Maybe they were going strong and had never looked back. As long as they were happy, he thought.\n\nHe thought back to his mother again. His hair was dark and straight like hers and his even white teeth and his ability to reason in a sort of off-beat way had been gifts from her was well. His education at her hands was still a priceless thing to him even now.\n\nEven as a tot, she'd taken him along on her frequent trips to research her novels. Hell, he'd been inside more tombs than most professors working in the field by the time that he'd turned ten. But those days were gone now. Well, other than the oversized tomb that he was presently in, he supposed.\n\nAll that he could say that he'd gotten from his father was his ability to take a fair bit of punishment and not show the effects of it too much. He sighed as he remembered. There was that other fine quality that he'd been given by his father's DNA donation. He could be a stubborn, tenacious bastard if the mood was on him.\n\nWhen he'd hit his older teens, he'd been more interested in getting pleasantly drunk and laid to want to accompany his mother much for a time and his father didn't really give a rat's ass about anything but the rush of the next huge business deal. After he'd come of age, it all turned around. Darji would have said that he'd just grown up a little. \n\nAfter a very unsuccessful stint at a college, Darji went to work doing something that he was amazingly adept at -- arranging the logistics and travel for his mother's trips. He handled everything from her book tour appearances to her research ventures, making sure that she was where she needed to be along with everything necessary to allow her to do what she'd come for. Her writing output soared as did their income, since they'd formed a company to be able to do it all.\n\nBut there was still some of the closeness of the bond that he'd shared with his mother and they did go on one research trip to Morocco together that spring not long before his National Guard unit went on its summer exercises . \n\nFrom his present vantage point it was one of his most cherished memories of his beautiful mother. They could and did talk about anything together. He remembered sitting with her on the top of a rocky outcropping to await the sundown together one evening. He had his arm around her, holding a light blanket there against the wind which already carried the warning of the chill that it would hold later on that night and she leaned against him. They were talking about the fact that he didn't seem to be interested in any one girl for very long.\n\n\"I'm not saying that you ought to find a steady girl yet,\" she'd said, \"it's just that there seems to be a constant stream of young women in and out of your life. From my viewpoint, it all makes me feel a little uncomfortable to tell you the truth. I never know what to say on the rare occasion when I meet one. Do I just try to look interested when I want to tell her that she shouldn't get too comfortable, or what? Do you see what I mean?\"\n\nHe nodded, chuckling a little to give her the point, \"I dunno, Mom. It's like they're all the same, though they look different. As soon as I really get to know one of them, I can already tell what she's like and they all seem to be reading from the same script. I almost know what they'll say next after a while.\"\n\nShe'd laughed herself then, \"Well I do know that you're having a bit of fun and I'm even able to tell myself that you're being careful, at least.\"\n\nDarji had turned his head then, \"Oh yeah? How would you know?\"\n\n\"Because the maid always complains to me about emptying the wastebaskets in your rooms and the number of condoms that she finds in them, that's how,\" she'd laughed, \"I just tell her to mind her business and do her job. \n\nThe stupid thing is that I almost feel a little proud in a slightly naughty way.\"\n\nShe reached around to the far side of his face to hold it against her own as they looked out at the sun sliding lower over the horizon, \"It's a hell of a thing for a woman like me to realize that the sexiest man that she's ever seen in her life is her own son. If I was more of an alley cat, I'd entertain delicious thoughts of doing something amazing and highly incestuous with you. By the way, is there anyone among the interns who catches your eye or is that a stupid question? Maybe I ought to ask how many out of the six of them you've bedded.\"\n\n\"Four,\" he sighed, looking off into the distance, \"but then we've only been here a fortnight so far. And hey, fair's fair. See any of the male ones that you like?\"\n\nShe'd looked at the horizon then and heaved a sigh of her own, \"Oh, all of them, but I'm not telling you all of my secrets. We can talk about it when I'm in the retirement home and need some cheering up.\"\n\nThere had been a silence between them for a minute or two and then Darji asked something which had been on his mind for a while.\n\n\"Dad's not my father, is he?\"\n\nHis mother didn't blink. That was the way that she was -- the way that they were, he supposed. \"What makes you say that?\" she asked him.\n\n\"Any number of things,\" he replied, knowing now that he'd been correct, \"There isn't one feature in common between us. I'm not built anything like him. I don't sound like him. He hasn't even got fatty remnants of the muscles of his youth in the places where I've got them. You know, just little things. You've both got brown eyes and mine are blue. You and he are Middle Eastern and I look like a coverboy for Caucasian Ladies Home Journal. Inconsequential stuff, mostly.\"\n\n\"Whenever we get back,\" she smiled as she ran her fingertips over the ridges of callouses on his muscular hands, \"you ought to look up the Sexy Son Syndrome.\"\n\nHe blinked then and turned to her, \"They've got a fucking name for it? Holy shit...\"\n\n\"It's an unconscious part of the selection process for most women,\" she said, \"A woman recognizes the features and traits which attracted her to a particular male in the first place. It's natural that she'd want her child to have those same traits -- to be just as successful a male as that one or just as lovely as their genes can make a girl, if that's the case. Can you see that?\"\n\n\"Yeah,\" he nodded, \"Go on.\"\n\n\"Well,\" she smiled, \"we live in a complicated time. Traits which would be sure indicators of a desirable man in the long ago past don't work so well today. For example, the man who fathered you was hard and lean, shaped that way by his hard life. It might have worked to choose him as a protector when all that was needed in a man was a willingness to work on the land to keep his family fed. But I didn't want to be that farm wife on a dustbowl farm. I wanted better -- a home where I could raise my little boy and where I could express myself in my writings while living comfortably.\n\nSo I needed a less masculine male, somebody who would be a good 'dad'. When your father and I began to date, the man who fathered you was already just over the horizon on his way to the next rodeo and looking to make some prize money. As much as I ached to have a man like that, I knew that I'd always be just one of the women that a man like that stops by to see for a place to heal up from his last face-plant in the dust while he fucks me and thinks that it's all that I'd ever need from him.\n\nSo I chose life with a man who gets his biggest chubby when he's making money and I'd let him think that he was the greatest stud in the world so that I could have the life that you and I would need. Happy now?\"\n\nDarji just sat for a moment, thinking. Then he turned and smiled, \"Yeah. Thanks for settling that for me.\"\n\n\"Don't mention it,\" she said, leaning her head against him, \"He got his trophy wife and I got my sexy son and a place to raise him.\"\n\nHis thoughts came back to himself and it caused him to wonder if his mother had known about the side of his sexuality that he'd kept from her. Looking back now, he thought that her question about the interns might well have been a test -- a thin baited line tossed in front of him to either take or let alone. If she'd ever asked him about it as a direct question, he'd have admitted to her that yes, he did sometimes feel attracted to other men and if it was mutual, he'd act on it. She'd never asked him directly and so that time, he'd let it go past when he'd made his remark, but now -- afterward, ...\n\nBy the time that they'd prepared to return to the states, Darji had been to bed with all of the girls and three of the six guys. They'd both laughed themselves to their knees in the kitchen at home one Saturday when it had come up and they'd compared notes. It was almost the same score from the other side of things; Bahira Saladin had made out with all of the men and two of the girls. He didn't mention the men that he'd been to bed with. Again, she hadn't asked.\n\nNot long before Darji left for his summer duty, his mother had come home from the post office one day with an artifact -- a little sealed jar that looked more like a fertility charm, carved out of soft stone which seemed to be strangely lightweight if one held it in one's hand. Darji guessed that it had been the huge and garish hips on the thing along with the protruding breasts that had kept him needing to pick it up whenever he saw it. When he'd asked about it his mother had smirked and told him to stop massaging the thing or it would become polished in a rather obscene way. \n\n\"It was sent to me from Mexico, from a Toltec ruin known as Tula that's mostly a tourist trap these days but once upon a time, it was a serious archeological site,\" his mother said, \"Of course, there's the tourist's entrances for the guided tours, and then there's the ... well, let's call them the secret entrances around the backs of the temples. They're harder to find, but there is still a religious function to the place and so it's still used in this regard. I think I know the woman who sent this, too. She goes by the name Esma and she's one of the local, um, witches, you might say, though I don't know why she'd have sent it to me specifically.\"\n\nDarji had hefted the thing once and noted that it seemed to have something inside it which felt to him as though it was partly filled with water or some liquid. He said nothing as he set it back onto her desk and that had been the end of it to his mind.\n\nHe'd just gotten home a few weeks later from his summer stint with the state National Guard the day that his world had ended. He was only there because his father had told him that a couple of years of duty would look good on his CV. Darji didn't mind it much; it was usually fun in a way and it offered him a way to challenge his body a little. He knew that the real reason that his father had made the suggestion was so that he'd get off his ass once in a while and have a reason to leave the house for more than the time it took to buy more booze or get blasted over at the houses of his friends.\n\nDarji didn't know if it was what his father had intended, but he'd gotten to know other young people there and most of them didn't come from especially affluent homes or lifestyles. In fact, Darji found that his background made it harder to fit in there and be taken seriously. He'd actually found it more difficult to gain the acceptance of those around him. He struggled with it at first until he realized that he was enjoying how it forced him to strive harder. He was taken far more seriously and made friends a lot more easily if he elected to keep his background something of a secret and the friends that he made there seemed to be worth a lot more to him somehow because of it. To him, it felt as though he'd had to earn the respect that he was accorded and that made it more worthwhile. ",
        "He'd taken up fencing a few years before that, and found it too tame for his taste. But with a little research and a lot of asking around, Darji had found a place where he could actually learn to fight with swords in several styles and it wasn't anything much like fencing. He'd liked it far better that way. It gave his shpulders and arms a needed push in their development.\n\nHe'd liked the men that he'd met there far better as well.\n\nHe remembered walking into the house that afternoon and noticing right away how strangely quiet it was. As he'd walked through it, he hadn't seen one member of the usual summer staff in evidence. Finally, he'd walked into his mother's office, the sanctum sanctorum from which she'd unleashed so many best-sellers.\n\nThe place was a mess, with his mother's things, books, and manuscripts, everything looking as though it had been thrown around -- as though someone had been looking for something. When he'd turned around to look at the other side of the room, what he'd seen had stopped his heart.\n\nThe body of his father was there -- more or less, and beyond that there was the first of the membranes that he'd ever seen, stretched vertically over the entrance to his mother's extensive library. He could see through it to some degree, though that seemed to vary somewhat. On the other side of it he could see his mother.\n\nShe was nude and she looked to be asleep. He hoped that was what it was and that there was still life there as he looked from her to the remains of his father and back. He supposed that he ought to feel a bit more for his father, but he found it difficult for some reason. He'd been so much closer to his mother all of his life. They'd always been able to talk frankly with each other. That was the way that she'd raised him.\n\nShe opened her eyes then and he supposed that she saw him, though she also seemed to be almost torpid compared to her usual liveliness. She raised her head and looked around herself carefully before crawling toward him very slowly and beckoning him to come closer. When he did, she began to whisper.\n\n\"I'm sorry that you had to see this,\" she said softly, \"It's been so long since your father and I have had anything physical between us. He's always had his little flings and ... well I guess I've never minded it so much, since they kept him from pestering me at all. I wanted to have a child so that I could tell myself that I was complete as a woman.\"\n\nDarji shook his head, \"What happened here, Mom? Are you alright? You're babbling a little.\"\n\nShe sighed tiredly, \"For the moment, I guess that I'm ok. They bring me things to eat every now and then. I was trying to read up on the little statuette and as I did, I found that I felt a little more um, ... hornier, I guess. I mean even more than I usually am. I found that there is an incantation on the bottom of the statue. I worked out the translation and practised reading it out loud. One time, as I said the last word, there was a flash and this hazy thing was here, stretched over the doorway. As I got up to look at it, three things came running through. They grabbed me and, ... well, ... you might say that they gave me my wish, though it scared the hell out of me at first. Your father came to try to pull me out and they ... they just killed him and dragged me back in here with them again. They all take turns with me and they come back about twice a day for more. It's been going on for a few days now.\"\n\n\"Grab my hand, Mom. I'll get you out of there.\" Darji had said in a determined way, since that was how he felt, but she shook her head emphatically.\n\n\"No you won't,\" she told him, \"They'll come back and kill you as well. I want you to get as far away from here as you can and never come back. I won't lose you to them the way that I lost your father. If you did manage to pull me through, they'd just come after you then. They own me now -- or that's the way that they feel about it. If I wasn't so well-screwed, I might be a little angry with that witch Esma. As it is, I suppose that I ought to thank her if I could.\" \n\nShe smiled with an expression which was a mixture of both a little shame and a lot of admission. \"Besides,\" she said, \"It's not like they're exactly hurting me, is it? And to tell you the truth, each one of them is a lot better in the sack than any man that I've ever had -- and I can say that I've had a good few, so I know what I'm talking about. But still, I think I can even count my blessings here. Now go on and leave, Darji. You can't pull me through without them noticing. That's what your father did and it only made them mad. You can't save me and the truth be told, I like it in here with them. So go now. Maybe we'll meet up again, but I don't want to risk losing you to a foolish male thought. You're no match for one of them and they come in threes, now go, please, before they come back.\"\n\nHe hadn't wanted to leave her there, but her pleas just became more emphatic that he leave her there. Darji left then, very reluctant and confused about it all and he came back the next day armed to the teeth and even more determined to pull his mother out of there, but it did neither of them any good.\n\nThe body of his father was gone by then, dragged back in through the membrane. His mother didn't look so happy now, either. They were eating her dead husband right in front of her, and just as Darji thought that he could stomach it all long enough to start shooting, three more of the things appeared in there and all hell broke loose. \n\nDarji couldn't make any sense of it at the time, he'd just watched dumfounded as the three newcomers -- who were all female - began to beat the crap out of the ones who'd been there when he'd come. That done, they all turned on his mother and tore her apart in an instant before beginning to pound on the first three all over again. Darji didn't even have time to react. \n\nIt all took less than a minute, but the females barked and yelled and drove the males away and then left after them. Not one of them had noticed hin there on his knees. Darji blinked through his tears as he looked at the body of his mother. He was about to run through the membrane, but as he hefted his pump-action shotgun, the membrane quivered and snapped into nothingness. \n\nIt was gone, pure and simple, and in its wake there stood his mother's library. The office looked like a tornado had been through it, but the library nook was just as it had always been and nothing had been disturbed. Darji picked up the 'fertility statue', grabbed a very few articles of clothing from his rooms and he took his favorite curved fighting blades and he left. Two days later, he bought a Chevy Avalanche with his father's Amex card and headed south, stopping to gather more supplies as he went.\n\nIt was stupid, he'd thought to himself as he drove. The things on the other side of that pale layer of ether looked as though they were demons or something. Whatever they'd been, he was sure that there was nothing like them on this side which occurred naturally. It took him days of meandering travel, staying off the major routes in case the local cops thought that he'd had anything to do with the mess back at home, but after a time, he figured out what it had been that he'd seen. \n\nWhatever those things had been, they all belonged in some way to a female of the same kind. Those females were a little smaller than the males, but once they'd figured out that their males were all off fucking somebody else -- his mother -- they'd come loaded for bear.\n\nWell, he thought, he was on his way to Tula now and if nothing else, he was going to settle with this Esma witch, if that was what she was.\n\nIt had happened just about that way, too. He'd found Esma after she'd led him a merry chase deep inside one of the tombs and after cornering her and hearing that she had no real explanation and shown no remorse when he'd informed her that his mother had died because of her 'gift', he'd pushed her back against a wall and it was then that he'd heard it.\n\nEsma was angry about being jilted. Furious that she'd given her heart to the lovely woman who had come to study and research -- and then left, Esma had corked something and sent it on for her vengeance. She railed and Darji had stood with tears in his eyes as he listened to her tortured keening and self-pitying cries. He admitted to himself that he could feel her pain and loss.\n\nBut he also felt his own.\n\nHe blew her away then and walked out.\n\nBut it had led him to find more of whatever sort of witch that she'd been and he almost set up a for-hire witch-slaying business there for a little while.\n\nBut there was only one of him and there were any number of women there who dabbled at least a little in the flavor of witchcraft which was practised there and had been since the ruins were new. It wasn't long before they began to talk to one another about him and the next thing was to lead him on a chase deep inside of one of the pyramids there.\n\nLike a fool, he'd gone after them too and when they'd left him lost and alone down there, he thought about it and after a few days spent making sure that he couldn't find his way out no matter what he did, he retraced as many of his movements as he could in his mind and he found that there had been one direction in which they HADN'T lead him for any distance. So that was the way that he set off.\n\nHe'd been hopeful that it would lead him out of there, but instead it led to more tunnels which went on and on. A day turned into a week and a week turned into a month where he just went farther and farther, on and on, thinking that just a little after he'd run out of supplies, that would be the end of him. \n\nThere sure seemed to be no shortage of others down there, though. He ran across corpses every now and then. Judging by what was left of their apparel, a lot of seekers had come down here since forever, give or take a week. After a while he looked at them with a little selfish hope that they still might have been carrying something useful or edible that was packed in hermetically-sealed containers and in most cases, they had been, so it was like finding free food near a dusty dead thing.\n\nTwo things became apparent after a while. It was amazing to him just how many of these 'explorers' -- if that was what they'd been, had armed themselves with twelve-guage shotguns, not that he minded the free ammunition, but it alarmed him that after passing through three of the membranes, he'd found no more of the bodies.\n\nOne day -- or he supposed that it had been one day, though he wasn't really sure anymore by then, he discovered a main tunnel. Compared to the others, it was a massive thing like a thoroughfare is when compared to a trail through the woods. It just went forever with the barest changes in direction or elevation for miles. Every so often, he'd find an alcove or two and that was where he'd hole up if he needed to rest for a while. Now and then, he saw creatures running or flying along the great corridor, but each time so far, he'd been near enough to one of the alcoves to hide in time. He wondered about it but they hardly ever bothered to look into the alcoves. \n\nThe only ones who did seemed to be the cave rats. He had no idea if they were rats or not, but that was the word that their appearance evoked in him. Some of them were closer to the size of large dogs and could be difficult to kill, but on the whole they left him alone unless he surprised them, and when he was low on food, they didn't taste all that bad if you cooked them well over a fire. There were other, much harder to kill creatures down here and given the chance, he tried to leave them alone and slink away undetected if he could.\n\nIn point of fact, that was how he came to be here in the first place. He'd almost bumped into a herd of some nasty-looking things and as he'd backed away, he'd found an alcove which hadn't just dead-ended a few yards in. He'd followed it for about a mile, he guessed before it fell in behind him. Now, here he was, looking at another one of these membranes.\n\nHe knew that they had something to do with the statue which he still carried but he had no idea what the relationship might be. He just knew that whenever he'd tried to get through one, the results were never all that pleasant. The one time that he'd tried to set the figurine down and walk away, he'd found his way barred by a membrane. As soon as he'd picked up the statue again and put it in his pack, the membrane had snapped out of existence.\n\nHe moved his hair out of his eyes as he thought about it. Then his mind came back to his hair. It marked the passage of time in the outside world in a way. The average rate of hair growth for most human beings is about one thirty-second of an inch per day, or about an inch per month. When he'd seen the mess in his mother's room, he'd just gotten a military cut, 'down to the wood', as the saying went. Stupid short everywhere but for the patch on top. \n\nNow it hung down his neck a little and got in his eyes. How much time had passed, he wasn't at all sure, but he guessed that it must have been at least eight or maybe ten months since that day. He sighed, maybe it had been a year. He could reach around the back of his head and bring forward hair long enough for him to look at.\n\nDarji thought of his mother again and wiped a few tears from his eyes then. He'd once heard it said that a boy's best friend is his mother. Well that had certainly been true. They'd travelled the world together and they'd shared adventures of the sort that he very much doubted could be matched by very many people. She'd been his best friend in so many ways and while she'd been proud of him, she'd never made the important things easy for him. He'd always been just as proud of her too and he wondered if he'd ever get over the lightning-fast way that she'd been taken from him. He doubted that even more.\n\nThe first time that he'd seen his path blocked by one of the membranes, he'd backed away and taken a different route, but one day there had been no alternative -- just like today. That time, he'd looked at the thing for hours and then sat down to eat. Finally, he'd grown frustrated and put on his pack, grabbed his rifle and slung it over his shoulder. He picked up his shotgun in one hand, a torch in the other and walked toward it. \n\nHe hadn't seen the little root growing out of the floor, but it tripped him all the same and he pitched forward, holding out his hands to stop himself. \n\nBut he'd fallen right through and landed on his face. He'd cracked his head against the stone floor and that was all she wrote for a while. When he awoke, the membrane was gone. Looking forward, the hallway looked the same as he'd seen when he'd peered through, but looking back the tunnel looked more like a ruin that was on the verge of collapse.\n\nSo he'd moved on. Now he was faced with another potentially disastrous passage.\n\n\"Oh fuck it,\" he said to himself a little angrily, \"there's no other choice, is there?\" Stepping forward, he saw the flash as he passed through. He stood stone still for a moment, just checking things out. He seemed to be alright and other than the brilliant surge of the brief pain of his passing through, nothing much seemed to have changed. When he looked back, the membrane was gone and so was the hallway where he'd been only seconds before. What was left now was a root-covered wall of rubble. He asked himself how that could have happened. He'd have noticed the cave-in, wouldn't he? He'd have choked on the dust and debris. And where had the roots come from? He stepped back and saw that this cave-in appeared as though it had happened a very long time ago.\n\nWhat was worse was that there was also no way forward. There was rubble from the floor to the ceiling just ahead of him. Fighting off the urge to panic, he looked around and as the ringing in his ears faded away, he heard voices.\n\nAt first they seemed to come from everywhere, but after a few seconds, he had the direction and walked cautiously toward one wall. He wanted to call out, since he was certain that he was hearing words of some kind, but then he threw that idea away. Peering carefully, he could see light coming around the edges of a few of the stones and he brought his face forward against the wall to try for a look. \n\nAs he peered through a few cracks, he wondered if the solitude of his recent life had finally begun to cause his mind to unravel. He saw three ... people of a sort fighting off a half dozen of the demonic-looking creatures who had appeared in his house and killed his parents. Just as he began to wonder if there was some way that he could help and if he ought to try to do that, he saw a shadow growing over his little peephole as one of the beasts backed up against the wall that he was looking through. \n\nHe heard the thing scream and then it fell backwards against the wall. Darji had just enough time to step back and out of the way as the wall crashed apart and the thing was lying at his feet clutching at an arrow in its chest. In a flash, his knives were in his hands and he severed the carotid arteries, starting a spray of blood from the thing's throat. It twitched twice and lay still. \n\nDarji looked up and across a large chamber, straight into the eyes of one of the outnumbered ones in this fight that he now found himself in. He was looking at a horned head with odd-looking ears which hung at a strange angle -- as in, they stuck out sideways. What struck him right away was the broad forehead and the way that the eyes seemed to look out as though from under a bit of an overhang -- shielded a little as they were by edges which came from the structure of the forehead .The nose was long, but it didn't come forward beyond the front edge of -- again, that forehead.\n\nHe suddenly realized why. The front of that head carried a thick skull -- far thicker he guessed than a human one. The reasons for that were numerous and they came to him in an instant. The creature was bipedal, but there was fur in various lengths, depending on where one was looking at the moment. There were two wide horns stemming out of that slightly wide head and they went out to the sides and back a little before curling around and down. The upper lip was split a little and overall, it made him think of a goat. If this creature was patterned that way, Darji reasoned, then it was no great stretch to see that a thick skull could prove useful. The cheekbones were high and a little pronounced, and then there was the mouth and chin which looked fairly human-like.\n\nThe mouth dropped open in surprise and then the moment was past and the being swung a bow to point toward another of the large creatures. The arrow was loosed and there was a scream from the other side of the room. Darji stepped through the opening and sheathed his knives largely by feel so that he could reach over his right shoulder for his shotgun.\n\nThe way that he looked at it, the three in here were talking and shouting warnings to each other while the other, larger things in the room were hulking, slavering beasts. He decided to side with the ones who could talk as a safe bet right out of the gate.\n\nHe jacked a round in and seeing that his presence had been noted by the others, he waded in and shot all five rounds into two of the things and then he set the pump gun down to reach for his rifle. One of the smaller things -- who looked to have some human features - was almost a blur, armed with a sword and a long knife. That one seemed fearless -- or desperate- and slashed and spun, jumping up to ram a blade deep into one of the beasts and then seeming almost to disappear into the attack on the next foe. One of the other ones -- the ones with the horns and the ears -- was unbelievably quick with a bow in the cramped quarters here. He drew back the cocking handle on his semi-automatic Ruger Mini-14 and got to work.",
        "By the time that he was done, he'd used most of the thirty round magazine, but between them, the six beasts lay dead -- well, one still twitched. Darji switched his rifle to his other hand and drawing a long-barrelled Colt from the holster on his hip, he pulled back the hammer and added another opening to its head. He could see that there had been eight, but that the three had killed two before he'd arrived.\n\nThe room was still echoing from the gunfire or so it seemed by the way that his ears rang as he released the half-shot mag and inserted another. Releasing the bolt hold-open, he set the safety and picked up his shotgun to begin reloading it when he noticed that the room had gone still. He looked up.\n\nThe first thing that he noticed was that two of the others here who he'd helped were females. The third one was male -- he guessed and that one looked quite similar to the one with the bow. He stood in some light leather armor with a long dagger in his left hand looking back at Darji. He was horned as well and about the same height as the one with the bow, and just about as slim. The next thing that he noticed was that he'd never seen anyone like these three in his life and for a moment, he wondered if he was hallucinating or something. \n\nBut that wasn't the important thing here, he decided.\n\nThe wet and bloody point of the fast one's sword was near his throat and there wasn't even a little bit of shake to it. The owner stood at the other end of the thing looking at him levelly. Off to the other side, he could see the female horned one looking at him for a moment before she began to walk around the chamber pulling her arrows out of her victims. Darji noticed that at that point, she'd been out of arrows. The next moment was a shock to him as he really looked at her. \n\nShe was thin and fairly tall, coming, he'd have guessed, up to his own height, including her curled horns. Taking her face as the reference point, her forehead was about at the level of his mouth. Her eyes were a tan color and the irises and pupils were horizontal lines, similar to the eyes of a goat. All of that, and she looked to be at least partly covered in fur, and what he could see did not appear to be clothing of any sort. As his gaze went lower, he was astounded to see that her legs were unlike the one with the swords' legs -- or his own. Her thighs were fur covered and below her knees, they seemed to be bent backward, sort of like the legs of a dog.\n\nAnd then there were her long fetlocks and her uh, hooves. He wondered what had been in the water then.\n\nThe fur grew longer the lower he looked and he saw again that those legs ended in large hooves, so he rather doubted then that he'd been hallucinating. The male was the same though he wore that armor. She was walking away from him, looking for more of her arrows and it brought her behind into his view.\n\nThat sight alone seemed to hit him pretty hard. What he saw was a view which stirred something in Darji, deep down. He'd seen quite a few female backsides -- some which might even be termed beyond merely beautiful, and a few had been what might be termed magnificent in their feminine perfection.\n\nBut nothing that he'd seen in his life could compare to the way that this brief sight could captivate him. Her thighs were lovely and her bottom could mesmerize him by only the movements that she made while looking for her arrows. He looked toward her face to see if she was aware of her effect on him, but if she was, he saw no sign of it in her. She seemed intent on looking down. He guessed that to her, the arrows were hard to come by down here, about as difficult to find as 5.56mm full metal jacket ammunition or twelve-guage shells loaded with double-ought buckshot. Any way he looked at it, there was reason enough for her to be searching to retrieve her arrows.\n\nIt was her tail which sort of snapped him out of the enchantment. He almost felt his mouth begin to curl into a smile at the thought. To think that the sight of a little tail like that and the way that it flicked involuntarily could rouse him so. His attention was drawn to the male one as he began to look for something as well. Darji assumed that he was looking for her arrows too, and he found himself looking at another pair of legs and a back end which grabbed his eye for a moment. The male's hair was even lighter, though most of his fur was darker. But then something else pulled him from his reverie completely and rather abruptly.\n\nThe one in front of him with the sword took a half step forward, bringing the point against Darji's throat. He wasn't amused by this and he slowly pushed the hot muzzle of his shotgun against the part of her breastbone that he could see as skin. \n\nShe stepped back instantly to where she'd been and he regarded her for a moment. From her expression and the way that she rubbed the round burn that he'd left on her, he could see that she'd gotten the message that she ought to keep her distance.\n\nShe wore a suit of light mail; tough, lightweight and as dull green as tall summer grass and it ran down to just above her knees. Her feet were shod with boots which looked soft yet substantial. They were fur-lined rough suede and bore laces which ran all the way up the front. Though they looked to be serious travelling boots, the actual shoe portions were more like heavy and thick moccasins. There were guards for her kneecaps and an abbreviated cloak of some sort which was tied back at the moment. \n\nLooking higher up, Darji could see that her arms were bare for the most part, though there were a few leather thongs and her shoulders were protected by ornamented dark green spaulders. What looked at first glance to be wet leaves stuck to the forearms were really just green bracers of some kind. \n\nAs far as weaponry, the female carried a cruel-looking sword in one hand, curiously curved in a way that would make no sense to an observer if it were laid down on a flat surface. It was the same with the long dagger. The shape looked to be fairly useless unless they were in her hands. Held as they were now, they looked wicked and formidable.\n\nHer long hair was a dull sort of dark brown and it blended into the overall appearance well. Her skin was a little pale and she wore tattoos on her determined-looking face. That face was rather angular and at the moment, he could see no warmth there at all. There was beauty there, he decided, but not while this girl's blood was up.\n\nShe said something in a tongue that he took to be rough Spanish. Her yellow-green eyes and her long ears told him that there was no mistaking that it wasn't her mother-tongue. He could handle Spanish, but he decided that he wanted to know more by trying to see if she understood anything else. He waited for her to try again. When she did in a different language, trying to do the half-step forward thing again, he jammed the muzzle of his weapon against her a bit harder and growled, \"Fuck off.\"\n\nHer eyes opened wide at this and she began to curse in another tongue entirely, coming around to some rather heavily-accented English eventually, \"Who are you?\" she demanded as he tried to determine just what sort of accent it was.\n\nHe didn't smile, though he'd wanted to, \"Somebody who just wasted a ton of ammunition on your sorry ass, trying to help you. I see now that it was a mistake, but then, I haven't seen anybody else down here in months -- not alive, anyway, so I thought I'd give you a hand. If I ever get another chance, I'll sit down and watch while those things rip you apart after they...\" He stopped then and shook his head, \"Forget it.\"\n\nJust then, there was a cry and a growl as another of the creatures ran into the chamber. The girl with the swords hadn't even turned before the thing fell dead, a thick feathered rod protruding from the side of its head. Darji looked over and saw the other female looking back. The arrow was obviously not the same as what she'd used earlier. To his mind, she was still wiping off the ones that she'd retrieved. She couldn't have nocked an arrow in time.\n\nShe indicated the male with a movement of her chin and shrugged. \n\n\"Theyl's crossbow,\" she said.\n\nDarji looked over and saw that the male stood, still holding up a small hunting crossbow. He smiled a little as he lowered it.\n\n\"You did not attack that time,\" the one with the blades said, \"You were not prepared?\"\n\n\"I learn quickly,\" Darji repeated, \"I tried to help and you stuck a sword against my neck. I won't waste my time on you again. This mess here was after you, not me. I figured I had a bit of time, you know?\"\n\nShe nodded then and looked at the blood which had sprayed onto her with a grimace.\n\n\"What's your problem, anyway?\" he asked.\n\n\"I have no problem, human,\" she said as she began to wipe off her blades, \"You smell badly, but with luck, you will leave shortly -- or we will.\"\n\nDarji grunted, \"You're no spring flower yourself. I'd say that I'm sorry if I've offended you,\" he nodded looking seriously pleasant, \"but it would be a lie.\"\n\n\"We did not need your aid,\" she said, \"so you can be on your way now if it suits you. I can say that it would suit me if you did.\"\n\nDarji nodded to the other ones, \"What about you? Can you tell me how to get out of here? I've been stuck down here for a long time now. Or do you want me to just bugger off too?\"\n\nThe male plainly didn't understand and he looked to the female. She regarded Darji for a long moment and then she smiled a little, \"You ask me? I think you should stay. And forgive me if I say it wrongly, but my thanks to you for what you did.\"\n\nThat made Darji smile a little and it felt so odd to him to feel the expression on his face. It made him realize that he likely hadn't worn the expression in quite a while. \"Then you're very welcome.\"\n\n\"We did not need you,\" Swordgirl said, testily, \"We were --\"\n\nThere was an exhalation of exasperation from the archer, \"We were losing, Shey Lann . They beset us, eight of the largest at once against three and it took an age to kill the first of them. My shot at the one in front of our helper was the luckiest I have had in a long while and I am not too proud to admit that it was luck to hit that well in the middle of a fight. I know that you hold yourself to be invincible, but I am truthful enough to say that I grew tired. We only began to make headway when he came in with his loud weapons there. Without him, they'd have won and we would be --\"\n\nThe other one spun then and glared, \"It was not over. You cannot say that we would have lost.\"\n\nThe long ears on the archer went backward to lie flat against her blondish hair, \"Are we to have one of our fights now, Shey Lann? Shall we waste the rest of the day with it and attract more of them with the noise? Come down from your high stump and admit that he helped us. It would not cost you a thing to say that you are thankful.\"\n\n\"I have no need to thank a human,\" the other one said.\n\n\"That's fair,\" Darji said, \"Just don't ever look to me for anything again.\"\n\n\"I shall not,\" she threw the words in retort.\n\nHe lowered his weapon and seeing only that there had been movement, Shey Lann raised her sword again and Darji batted the blade away with his shotgun. The Colt was in his hand in a flash and by the time that the hammer came back with a loud click, the muzzle was underneath her jaw as he glowered.\n\n\"Don't do that again. I get that you don't like me and you seem to have something against what I am for some reason. You don't like humans? Fine, but this human -- me - I haven't done anything to you -- yet. You keep up this shit, and I'll get you out of my face for the long term. You want to keep the teeth in your pretty head, then you just leave me alone, got it? And just what the fuck ARE you, anyway?\"\n\nShe glared at him, but she was silent.\n\n\"Shey Lann is an elf, as the word is in your speech,\" the other female one said, \"but her lineage stems from two types, and she is not accepted by either kind.\" \n\nHe looked over then, not really believing what he'd just heard, \"An elf? \n\nReally? What the hell are you doing down here then? From the fairy tales that I was told, elves like to skip along happily in the sunshine.\"\n\n\"I see no sunshine,\" she glared, \"Perhaps that it why I am not skipping - happily or not,\" the elf said,\" Why do you look so surprised?\"\n\nHe shook his head, more to himself, \"It's just that ... \"he looked up, \"as far as I knew, elves were just some legends and stories. From what I read, elves were supposed to have moved out of the path of man a long time ago, but taking the view of human science -- and I already know, so you don't have to tell me -- elves don't exist and never have.\" \n\nHe shrugged, \"Obviously incorrect, looking at you.\"\n\nShey Lann was about to reply in a scathing tone when she just stopped and nodded, accepting what he'd said. \"Well, we do. And my friend and companion Bryth there is a faun, as is Theryl there beside her. I guess that they do not exist either.\" \n\nIt took Darji a second to register what had been said, mostly because the word had been spoken sounding like 'fown'. But he had heard it pronounced in that manner before, mostly by Europeans from the continent. It was only said as 'fawn' by people from the British Isles or from North America. \n\nThere was also a strange and subtle issue at play here. They could understand each other in English, but now and then, he saw by their faces that they didn't understand something that he'd said. He was dumbfounded anyway. \"A faun ...\" He looked over and he saw that for some reason, what had been said had made Bryth uncomfortable and she looked down in a bit of shame, beginning to turn away. The male looked at her questioningly and asked something in another language, to which she shook her head.\n\nDarji stepped toward her, \"Wait, uh, Bryth. I don't understand why you're looking like that all of a sudden. There's nothing to be ashamed about, is there?\" \n\nHe smiled, \"Ok, I can be a bit of an asshole sometimes, but I don't think I've said anything to make you feel badly, have I?\"\n\nBryth shook her head silently and she turned back to face him, \"I have always been ... nervous around humans. The ones that I have met thought me stupid, and --\"\n\n\"Well, I don't,\" he said, holding out his hand, \"My name is Darji and I really am very pleased to meet you all.\"\n\nHe made a very quick surmisal and rather than take her hand, he gently grasped her forearm for a moment, before doing the same with the male, who looked surprised but looked at his face and gave a slight smile again.\n\n\"Since I can't go back the way that I came, can I come with you?\"\n\n\"Yes,\" Bryth said quite softy, unnoticed by Shey Lann for the moment as she shook her head, \"Thank you, but no,\" she said, \"We have no need of another on the road and -- \" She snapped her head around to look at Bryth, \"What did you say?\"\n\n\"I said, yes,\" Bryth smiled a little, \"What is the harm if he comes with us? Maybe another voice would help when we must decide things.\"\n\n\"What is wrong with the way that we were deciding things?\" Shey Lann asked, looking a little annoyed.\n\n\"Well,\" Bryth said without reproach, \"we always do what you say that we should and there have been times ...\"\n\n\"Have there?\" Shey Lann said as she turned, looking actually annoyed now, \"Such as when?\"\n\nBryth looked a little uncomfortable for an instant, but then she rolled her eyes and imitated the sound and mannerisms of the other, \"Oh come on, Bryth. What is the harm of we explore a little of this cave? What could go wrong? Why look, Bryth\", she went on, \"let's use that rope bridge, it does not look to be too badly worn from here. And my very favorite -- wait a moment, I want to try something.\"\n\nShey Lann scowled at her own feet for a moment, \"I give the point to you. But what about food?\"\n\nShe took a step closer to Darji, \"Look at him. He is not as we are. Can you imagine what it would take to keep this fed? \"She reached out and her open hand gently slapped against the bare skin of his shoulder, \"He must eat more than all of us together.\"\n\n\"I'll be sure to keep myself fed,\" he chuckled, \"and if there's not enough for everyone, I'd be happy to share what I have. Come on, give me a chance. You can't know how it feels to be alone down here for this long. Please?\" \n\nHe turned on the charm and for once in his life; he really hoped that the famous Darji Saladin smile didn't fail him. Shey Lann nodded her assent with a grunt, but Bryth and Theyl looked at him, shyly beaming their approval. \n\n\"Then we are four,\" Shey Lann said, \"elf, fauns and human.\"\n\n\"Could we just call me a man?\" Darji asked, \"When you say 'human' it looks like you just found yourself with a mouthful of something unpleasant.\" He walked back to the opening in the wall where he'd come from and hefted his other pack.\n\n\"What is in there, please?\" Shey Lann asked.\n\nDarji shrugged, \"Ammunition, mostly. I've found and picked up a fair bit of it from dead people that I've run across during my time down here.\"\n\nShe looked back at him blankly, \"Ammun .. \"\n\n\"Arrows,\" he smiled back, \"my kind of arrows.\"\n\n\"The loud kind,\" the elf said, \"the ones which tell everyone where you are.\"\n\nHe then had to explain what that was and why he needed it. That began the questions over how his weapons killed his foes and from that Darji realized that these three had never seen anything like firearms before. It took a little time because Bryth tried to translate for Theryl, who seemed very interested. Bryth admitted that the first time that he'd fired the shotgun had cost her an arrow that she'd loosed in surprise at the noise.\n\n\"Can we get back to washing?\" she asked, \"There is the hot spring there waiting and we all smell. I have just fought and battled those things with nothing on.\"\n\nDarji perked up then, \"There's a place to wash here?\"\n\nShey Lann nodded, \"Through there, the air is wet and heavy with steam. We were just about to wash when those beasts came to beset us. If you do not object, I will go first before any more come so that I might at least be partly ready if they do. Please guard me.\" She walked through the opening and began to remove her clothing.\n\n\"Shey Lann,\" Darji said, \"suit yourself, but I think you ought to lay your weapons a little nearby in case more visitors come.\"\n\nShe looked at him for a moment and nodded. As she bathed quickly, Bryth nodded to Theryl and he began to bathe as well while she and Darji stood watch looking outward. When Shey Lann and Theryl returned, it was Bryth's turn, and when she returned to them wearing what looked like light leather armor made up of strips of horizontal bands, (as was Theryl's), it was finally Darji's chance to get the grime of his wandering off of his body. \n\nHe wondered how long it had been since he'd been able to be clean and it came to him that it must have been over a week since he'd found enough icy water for this. The hot water which bubbled up through a fissure from deep below his feet felt incredible. His body told him that it expected him to stay in this heat for at least an hour, but he kept it to about ten minutes of purposeful scrubbing.\n\n\"Do you need help with your back?\" Bryth asked, startling Darji out of his thoughts. He decided that if they traveled together, some rather private things would have to go by the boards. He wasn't completely comfortable with these three yet, but he weighed that against the desire to be clean and her guess had been correct. Without either a backscrubber or a helping hand, the middle of his back wasn't going to get really clean. \n\n\"Sure,\" he nodded quietly as she stepped forward and he turned away and backed up toward the edge of the pool. \n\nShe was quick about it, but she did do what felt like a good job of it. \"Thank you,\" he smiled over his shoulder.\n\nBryth chuckled quietly and grinned, \"It is my pleasure to help and I like to see a little.\" He heard a soft giggle and felt her hand as it quickly grazed his ass once and then he heard her hooves receding. As he put on some cleaner clothing, Darji couldn't help but smile a little. In spite of their rough start, he liked Shey Lann, though he knew that it wouldn't do him a bit of good to tell her. He liked Bryth and Theyl even more, though.",
        "When he rejoined them, they led him off to a different chamber a distance away from the hot spring. \"We will spend the night here, since we know it to be fairly safe,\" the elf said, \"We have slept here before and we can light a fire using some roots to burn. We still must be a little quiet. If you have been here for a long time as you say, you know that it is best to be as still as possible.\"\n\nHe nodded and when they got settled in the chamber, they started a small fire in little time and decided on a simple watch rotation. There were several ways into the large cavern, but only one of them was large enough to allow anything near to the size of one of them to pass through, so it was easy enough to guard against the sort of creatures which had attacked them earlier. One of them would always be a little distance off as overwatch while the others either ate and talked in very hushed tones if the third one was not asleep. Darji asked about water and they told him where there was a clean spring not far away.\n\nHe produced a pot and after filling his bottles, he pulled out some meat and cut it up after washing it as they stared. He threw it in the pot and carefully braised it. He tried not to laugh as they gaped when he added some water and then he took a plastic bag (which amazed them) and removed some dried vegetable pieces to toss them in as well. His companions looked at the pot, at him, and then at each other. \n\nFinally, he carefully opened a little cardboard box and withdrew a cube of foil. Opening it with a flourish, since he liked the way that they seemed mesmerized by his actions, he crushed it and added the powder.\n\n\"What is that?\" Bryth asked and he told her to sniff the pot, \"It's called beef boullion. It's used for flavoring. The meat is what I have left from one of those lumbering rat things that I killed two days ago. With some time and maybe luck, it'll smell and taste like beef stew -- I hope.\"\n\nThey wrinkled their noses at it and Shey Lann announced that she wouldn't eat meat like that. Darji just shrugged, \"More for me then.\"\n\nBut their noses and their hunger got the best of them in the end and they all pronounced it tasty when they'd tried a little. \"I will take a little if you leave us some,\" Bryth said, \"and Theyl says that it smells very good.\"\n\n\"I never thought to eat one of those creatures,\" Shey Lann said quietly.\n\n\"Well if you get hungry enough, you'll find that you can eat most anything,\" Darji said. \"Since you guys all have some kind of bows, I'd suggest that you shoot them either in the inner corner of their left eye or behind and under either ear. You hit them there and they drop down dead right away without a sound. Hit them anywhere else and they shriek the place down before they die.\"\n\n\"But your weapons are so loud,\" the elf commented and he nodded a little sadly.\n\n\"I do it the hard way and I have to get really close to stick them with a blade in the ear.\"\n\nWhen he had the chance of it, Darji paid attention and guessed that he understood Shey Lann's concern over food. He had far more than they did, so he made certain that he was free with it, getting up and walking to where Bryth and Theyl stood watch to give them the warm food that he'd planned to eat himself. They were both appreciative and he saw that they'd gone without a good meal for a while. He was hungry, but he thought that they likely felt it a bit more, but wouldn't have spoken of it to a newcomer. \n\n\"Have you not eaten?\" Bryth asked, \"We have not been guarding here long enough for you to have eaten much of anything and no matter what is said, we do not have enough between the three of us to make up a large meal for even one.\" She looked up at him then, \"This was to be yours, was it not? Why give your food to us?\"\n\nHe smiled a little, \"Maybe I think that it's better used by you guys. I have some hardtack biscuits left. I'll gnaw on those and a little gravy.\" \n\nShe held up the plate that he'd brought her. \"Please eat with us if you would. This is no palace. We want to share it with you. Shey Lann was right. You need more than us.\"\n\nShe stepped closer and before he could shake his head, she smiled, \"I know what you would say. We will eat your magical food Darji, and we are thankful. But let us feel better by sharing at least a little.\" \n\nHe looked over at that point, \"Magical food?\"\n\n\"Yes,\" she smiled, \"We did not think that you could make something so good to eat here where we are.\" \n\nShe backed up carefully then so that her back was to a wall. That was so no one could come at her from that direction. Once there, she beckoned to him and they stood together as she ate and he allowed her to offer him a spoonful now and then. After a couple of minutes, she made a clicking sound with her tongue and switched places with Theyl, who looked friendly but a little uncomfortable right next to Darji.\n\nFor his part, Darji tried to look as though he was trying to encourage Theyl so that shyness was not an issue. He sensed a little of it in the two fauns and though he liked the way that they looked like that, he didn't want it to get in the way. Theyl ate with him for a little while and then bowed a little before he brought Bryth back with the same sort of sound.\n\n\"Why doesn't Theyl speak? Can't he speak English?\"\n\n\"He comes from far to the south and has not been here long. Until now, he had no need to learn your speech. You are the first human that he has been close to. He is from another Faun tribe and there are no humans there.\"\n\n\"I wanted to ask you something,\" Darji said, wondering just how to frame the question. When she nodded in encouragement, he was careful about it. \"Why are you wearing that leather over the top half of you and yet there's really very little lower down? Are you missing the pieces, or ...\"\n\nShe shook her head with a shy smile, \"This is how it is to be worn by us. It covers me, but this piece, this ... \"\n\n\"Strap,\" he volunteered with a smile and she nodded.\n\n\"This is narrow and can be opened right at the bottom as you have seen.\" She shrugged, \"I am a female. To wear something like Shey Lann would mean that I would have trouble in a fight. See Theyl there,\" she pointed at her companion, \"His is the same, but the strap is a little rounded to hold him better.\"\n\nDarji didn't get it and she saw it in his face. \n\n\"Look at our feet,\" she said, \"We can kick, you see?\"\n\nHe got it then and nodded. She thanked him for the thought of the food and he went back to the fire where the elf was muttering to herself a little as she tried to scrub some dried blood from her long knife. When she looked up and saw his face, she shrugged, \"I forgot to clean this when I bathed. Now I want the blood off the blade and I want the blade to eat with. I do not usually forget.\"\n\nDarji reached into his pack and produced a couple of items that he'd retrieved from the body of an unfortunate along the way some months before. \"Here, \"he said, holding one of them up, \"Use this.\"\n\nHe flipped off the retainer and with a few deft motions and a little clicking, he saw Shey Lann's eyes widen as he flipped open the knife. He handed it to her, \"This is clean, except for maybe a bit of dust from being in my pack. You can have it. I found four in the pack of a man a while ago.\" He handed her another pair of them, \"Please give these to Theyl and Bryth for me when you go there.\"\n\nShey Lann took the things with a little awe and she stared at the articles. Setting two down on her thigh, she swivelled the third open and closed, \"What is this for?\"\n\n\"Well if you were up a tree and you needed to cut something, but needed one hand to hold on, you could use this. It's not very long when it's folded and with a little practice, you can get to where you can open that up and use it all with one hand. I know them by three names, but I guess the best one is a balisong. It's also known as a butterfly knife.\"\n\n\"What is a butterfly?\" She asked.\n\nAfter hearing his explanation, she nodded, \"We have them -- outside, but we use another name. My thanks for the gift.\"\n\n\"Don't expect too much from it, Shey Lann,\" he said cautiously, \"I'm afraid these aren't of the best quality. I got them from a corpse and I couldn't even argue with him over it.\"\n\nShe asked him to show her how to open and close it with one hand, flinging it the way that he did. He showed her several times -- slowly, but she failed at it utterly.\n\nHe smiled, \"You have the motions, but you're too fast. Remember that it was made for a human. I think that at our fastest, we're slower than you.\"\n\nWhen she thought about it like that, she met with more success, almost getting it down, but it would still take her time to master the technique and be fluid at it. She stood up and went to give the other ones to Bryth and Theyl. \n\nThe fauns were very pleased and watched carefully as Shey Lann went through the wrist motions with exaggerated slowness. Bryth laughed a little and nodded when she saw how it was to be done. With her own lightning-fast motions, she opened and then closed the knife seemingly without effort. Theyl got it on his very first try and looked at her curiously. The elf stared and then strode away. \n\n\"Bah!\" she muttered.\n\nShe sat with Darji working the knife slowly, \"Why are you here?\"\n\nHe shrugged, \"I came to kill someone, because what she did -- and I don't know what it was exactly -- caused the death of my mother. I came for her and she admitted what she'd done, but never said just what it was. She seemed to have a lot of attitude for somebody facing the son of somebody that she'd harmed, so I listened to her and then I killed her. Anyway, I found out that the people all around there were terrified of all of the witches in those parts and they offered me a lot of money to kill the other ones, so I began to do that. But the witches led me down here and left me once I'd gotten lost.\n\nServes me right, I guess. I should have just called it done when I'd killed the one that I'd come for and gone home. Now I don't know where I am or how to get out.\"\n\n\"Do you hate these witches?\" She asked, \"Elves possess at least a little magic and almost all fauns have it as well.\"\n\nDarji shook his head, \"No, not really. I was just mad and upset over my mother's death. I don't know why it was done, other than maybe bad feelings over a love affair, I think. I just know what was used. What are you three doing here?\"\n\n\"We are searching for something,\" Shey Lann said, \"It is something that is needed by the Chancellor where we came from. I think that we are only chasing a legend. I do not think that it has been seen by anyone for more than a few hundred years.\"\n\n\"My mother was an archeologist, \"Darji said, \"and I used to help her a lot. Tell me about it. Maybe I know a little.\"\n\n\"You must ask Bryth,\" the elf said, \"She knows what it is that we must seek. I am only here so that she did not go alone with her betrothed. They only met a very short time before we were sent. What is an ... archy-?\"\n\nHe grinned, \"Archeologists are people who study old things from long ago. My mother would have been in her glory to see this place -- whatever it is.\"\n\n\"Whatever this is,\" Shey Lann said with a bit of distaste, \"it is a place of sudden death to most travelers.\"\n\n\"So those two are going to be married?\" he asked.\n\nShey Lann shrugged, \"How to explain something like this to --\" she looked at him and then she smiled, \"a human man?\"\n\nHer smile turned into a small grin when she saw Darji's smile. \n\n\"It is mostly politics,\" Shey Lann began, \"Theyl is the youngest son of a Faun king far away. The match was made not long after Theyl was born and Bryth was only small, being a year or so older. It was done as a pledge of peace and aid, should a time and a need arise. It was also a way for a Faun king to be rid of the expense of having to keep a son fed who would never rule.\"\n\n\"What does Bryth have to do with it?\" he asked and Shey Lann smiled.\n\n\"Bryth is the youngest daughter of the king of her tribe of course and as such, will never rule either, it is thought. They are not wed yet and try hard to learn of each other. At first, they did not like each other at all. He was from a less wild place and to the Faun here, he was only a weakling, whereas Bryth needed no guards wherever she went, loving adventure as she does. \n\nTheyl came with two guards and he only knew the kind of fighting ability that is taught to princes who will never need to know how to fight. But after his protectors left to return home, he saw the worthlessness of his poor skills in an instant and has sought to learn things of value, so we both teach him. The only thing that he was good at when he came was the use of that small crossbow of his and with that, he is deadly. But he had no real ability beyond genteel sport with a blade, yet that is changing. Just traveling together and facing what we have faced here has made him into a more formidable fighter, though he still learns. Now, I can say that they like each other very much, but it is only the beginning of love for them. Also, there are other issues.\"\n\nShe rolled her eyes at the cavern ceiling above, \"And those ones, I have no idea how to explain.\" She looked at Darji and saw that he was clearly fascinated and he said so, explaining that other than stories, there was no knowledge of either elves or fauns to humans where he was from.\n\n\"I risk my life to tell of this, \"she said shaking her head, \"but it is clear to me that you are not like most men that I have ever met.\" She drew a deep breath and let it out. \n\n\"Fine. Fauns might be said to be somewhat like goats.\" She looked at him closely for a moment, \"There are goats known to humans where you are from, are there not?\"\n\nWhen he nodded, she went on, \"I say somewhat, but they are also people, being bright and having hearts, after all. But to say that they are just like goats would be wrong. In some ways they are much more like urials or mouflons or, better still, a little like mountain sheep. In fact, their names for males and females are the same as would be used for sheep by them. There are ewes and rams. Their horns are roughly similar to mountain sheep, but there is no real connection between the two, even though fauns oftentimes keep urials and mouflons for their wool and sometimes for a bit of meat. That is another difference,\" Shey Lann said, \"Sheep, goats and urials do not ever eat meat, while fauns can and do, having teeth like you or I and guts which can digest it just as we do.\n\nLike elves -- and humans, \"she looked over a little uncertainly then, but Darji nodded and gestured for her to continue, saying that she wasn't saying the word with distaste anymore so it didn't bother him now.\n\n\"Well, like us, fauns are social creatures and prefer to live together in groups, but they do not flock as sheep do. They live in dwellings and they tend to value their families and as one looks from the lowest to the highest among them, one can see that the families among the higher ones are called houses. Bryth comes from the highest house which rules the land around her settlement. She and I are close; both being females of the same house. We met while journeying and it is through her that I came to live among the Faun people.\"\n\nBefore Darji could ask, she saw the expression on his face and said only, \"I am accepted by them for my skills at scouting and fighting and even better, I am liked -- which is something that I have never had. Bryth and I were almost related by my upcoming marriage into her family. I love her very much and owe her everything.\n\nMuch of the Faun social order is determined by the seasons of the ewes. Faun ewes come into season twice a year for about fifteen days each; once in the spring and once in the fall, almost all of them at once. They go by their hearts very much. A ewe who has no mate can become rather nasty to be around when she is in season, for she will take no mate at all then. I cannot say why, but if they have no mate by the start of their season, they seem to want to be alone and miserable then.\"\n\n\"What happens if a ewe like that is found by a ram who likes her?\" Darji asked.\n\n\"Then he must surely be a fool, for to come near to her would be to ask to have his teeth kicked from his head. I understand your thinking, Darji, but remember that they are not like goats or sheep in this way. To rut with a ewe in season will almost surely produce a kid -- who was conceived in a moment of weakness in a ewe who will then have the burden of raising it alone. Ewes go by their hearts and the kid would be loved - possibly to starve along with its mother who would work herself to death trying to support her little family all alone. A ewe would prefer to be alone and miserable than to go through that.\n\nA ewe who has a mate when she comes into season becomes very affectionate -- even more than usual toward her ram. During this time when all of the ewes are in season, there is no other mating going on in the whole settlement other than the rutting between pairs. There are no feasts until the ewes are out of season. A ewe who comes out of her season late will hide herself away until it is past and not attend any feast or High Days at all. A pair who can produce kids must decide if it is wanted then and if not, then the ram does anything to please his ewe but rut into her- if that is what was decided, and as hard as that can be for them to avoid doing anyway. Fauns love to rut. I do not know if this is in your legends and stories at all.\"\n\nHe shrugged, wishing now that he'd read more about fauns while he'd had the chance.\n\n\"Once the rut is past, ewes mate freely and often just as the rams do,\" the elf said, \"but other than at feasts and celebrations, all fauns rut with their mates only. Remember what was said about their hearts.\" Shey Lann smiled a little then, \"I suppose that it is the same with all females of all kinds,\" she smiled with a shrug, \"once we have given our hearts ...\n\nDuring the rest of the year, there are feasts fairly often -- and that is another thing that fauns love to do.\" \n\nShe grinned a little sheepishly, \"And not only them. Such food and drink! More to eat and more wine to drink than you have ever seen in one place. Fauns might be in love with their mates very deeply, but when it is a High Day and the feasting begins, there is rutting going on for a long time after and they choose their partners on little more than desire and even a whim, though it is acceptable that anyone can refuse the advances of any other. No kids will come of these matings and it is seen as a way to enjoy others while not threatening what one has. Many couples use this to heighten their love, rutting like fiends with many partners until it is time to go home. Then one can appreciate what one has and even if it is not the best, you have had your fun before you went home and it is never long before the next feast.\n\nOh, and I should say that during the High feasts, many fauns can take partners of either sex. Most like or prefer the opposite kind and some prefer the same as they are for the quieter times of the year. During the many feasts, they can enjoy whatever they wish, though some do not take part at all and they are free to do so.\"\n\nShe looked at Darji, who appeared to be struggling a little with it.\n\n\"I don't mean to pry, Shey Lann,\" Darji said very cautiously, \"and it's none of my business, but how does that fit with an elf? I thought that elves found their mates and stayed with them forever.\"\n\n\"You must have read of the high elves,\" she said, \"There are many kinds and each is different. Most pair for life and some are a little looser, like some of your kind, I think. For me, I am the child of a male wood elf and a high elf maiden who let her guard down and drank too much. That is where all of my troubles came from, but that was not your question. Elf-girls are like human ones in their seasons. It comes to us often as it does for your women. If a feast falls at a time when I am not very fertile, I may take part. I usually do not.\"",
        "He was still struggling a little, \"These issues that you spoke of,\" he suggested.\n\nShey Lann looked down and raised her eyebrows in thought, \"Among most of the Faun, a ram takes one ewe for his own and a ewe takes one ram, as it is among most people of any sort. With the lower and poorer ones, it is a simple thing since it can be hard enough to keep each other alive in the world. Better to have the love of another to help with the hardship, I think.\n\nAmong the higher houses, a ewe can seek to have -- \" she smiled then with a little shrug, \"it is a ewe's right to have two mates if she wants, just as it is a ram's by the same standard, if they are all wealthy enough for it. That can lead to a long time of ... selection, since it is best to have one's mates able to, or have the want to love each other as well. For example, I know of several ewes who love a ram and also love another ewe, and all three are happy - from what I can tell, though I obviously do not go into their bedrooms to find out.\n\nBryth's pairing with Theyl is a political one and they are both aware of this. I think that it says much of them both that they each see the other as the secondary mate and yet try for each other anyway. Oh, they do try for each other very much and I can see that love is growing there for them, but ... well, ... let us just say that Bryth has not found her ram yet.\"\n\n\"And that could be the issue?\" Darji asked, so intrigued now.\n\n\"One of them,\" Shey Lann replied, \"but not the largest. Bryth is not a girl to sit in her hall and brush her hair while she dreams of the next dance. She is like me and loves to be on the road. At her father's hall, she is unimportant, not that she minds the way that she goes unnoticed, since it would be her way to be able to slip in and out unannounced as she is wont to do. But she was never happy just being pretty and waiting for life to provide her a ram who would keep her fat with kid in his hall. She is a harder person than that and loves life in the fresh air. You might imagine the way that a girl like that would react to be told by her father that her mate -- whom she had never met or even known of - was coming to take her hand.\"\n\nShey Lann laughed a little at that, \"He arrived with much ceremony and she almost killed him -- right in front of her parents and the whole court. He was in some sort of fine attire from some army or other and she stood waiting for him just as she is now, in light traveling armor and looking like a rogue while the rest of the court looked on. \n\nShe brayed that she would never wed a male like this one and her father shouted back that she would or she would be cast out. I still remember his words -- \"What is the good of having a daughter and raising her if she cannot be used to keep the peace for the people?\" He pointed to the outside and told her that, as who she was, she owed the people this, and to an extent, he was right, I suppose. Bryth looked at her father, who is known to be just as stubborn as his daughter and she looked at her mother, who sat with tears in her eyes, fearing that Bryth was now going to say the words that would see her cast out, never to return.\n\nBut my dear friend was not as foolish as all that,\" Shey Lann said with a smile. \"I was prepared to go to her side and remain there, going with her wherever she went if need be, but it did not come to that. Bryth trembled in her anger, but she fought it down after some moments. Just as her father bellowed that he would wait no longer for her to state her intent, Bryth turned, grabbed Theyl's fancy tunic and then she pulled him so that he could look nowhere else but into her angry eyes. \n\nI will never forget it. She did not say it very directly, but she insulted her father, his father, half of the lords in the hall and all of the lords in his father's hall with her words.\n\n'VERY WELL!' we all heard her shout in They'ls face, 'You are MINE. I do not know what you thought me to be when you set out to come here and claim me, but I will NOT sit and have gowns made while you pretend to be a ram lord. In THIS land, the best ram lords are MADE and not BORN. A real ram lord earns his title. He is not given it by his birth.\n\nTo be clear to you as a courtesy, I will NOT act shy and demure when it is not in me to do so, holding still for you in the making of one kid after the other. I hold still for no fat rams, so what you wear on your belly under this tunic will need to be worn off and I am the girl to do that for you, you may trust in it. \n\nIf I must take you as my ram, then you must take me too and so I think that we had better go to a quiet place to learn what we each have won by the politics of two kings who do not care to know the least of their young ones. So, what is it to be, Prince Theyl?\n\nTell me no right here and now and you will die where you stand. I have no fear of what would come from it. \n\nTell me yes, and you have my word that I will try for you if you would have a girl who cannot often sit still and feels more at home with a bow in her hand than the handle of a pot.'\n\nShe shook him once and said, 'But mark you this: YOU must try for me as well, so that we do this for each other and NOT for a pair of old kings. If we must be wed, then let us see that it is worth something, and if it is not, then let us make it so, since neither of us has a choice at present.\n\nSo what is it to be? Our deaths, one after the other, or will you have a ewe who is brash and bold and has larger stones than most rams?'\n\nShey Lann chuckled as she paused to sip from her waterskin then, \"To say the truth of it, I thought for a moment, by the look on Theyl's face that he might either soil himself or explode. But before anyone could even snicker or laugh, he drew the thin and foppish play-sword that he'd come with and he threw it down. \n\n'If you can but lend me a better blade than this,' he said in a low growl, returning her gaze every bit as hotly, 'then lead me where you will. If we must fight for this, then let it be so, but not here. If you have something to teach me, then I will be your student. I am the son of a king and though I know little of adventuring -- if that is what you crave -- I will try to learn at my ewe's lovely hand of what it takes to make her happy. But I did not come all the way here to be rebuffed, since I had no say in this either. I would make the best of it as would you, I think. So let us begin.'\n\nTheyl was already of interest to many faun girls, those who had seen him arrive, since he is a prince and even as he was then, a little fat, he was thought handsome. But what he'd said earned him much in an instant, not the least of it in the heart of the one that he came to wed sight unseen. There are many rams in that court who have been shamed in the field by Bryth, and not one of them would have had the stones to answer as he did that day. He is only eighteen and she twenty, but a pair of adventurers found each other in that hall then and they became a pair at least in spirit at that moment. \n\nShe drew the second of her own blades and handed it to him then. \n\n\"Take it, the first gift from your betrothed,\" she said, \"It kills a part of me to say it, but you have won at least a little of my respect with your words.\"\n\nThere were sighs and gasps then in that great hall, but there was no word spoken and the two young ones walked out hand in hand, neither looking at the other, but going where Bryth said to go. Of course, I came along after them, since it was given to me to keep them, ... well, at least a little virtuous until they are wed, but I let them be as they sorted things out. Bryth was honest with Theyl and he was just as forthright with her.\n\nI found them in a peasant's barn and I couldn't think of a better place for it. The farmer stood outside with his ewe staring at a piece of gold that he'd been given to allow a young couple to use his place so that they might come to terms. I added a little silver and told them to allow me to do the task of keeping watch for them and to go to town to spend their new wealth a little carefully. \n\nWhen I went inside, the two were laughing a little at least. I told them that I admired what had been done by them and that it was certain to be the talk of the hall for many days, but that Bryth's parents were proud of them both and her father told me that he knew that she would make the right choice. But by then Bryth didn't care what her father had said anyway. \n\nI watched them roll around on the floor, laughing and fighting a little at the same time and I suggested the hayloft for their struggles and that it might go better for them without clothing. Then I walked out to spend a fine afternoon in the sunshine while I waited, for I knew that they would not couple then. There was too much unfamiliar ground there for them both. But they did emerge as a couple, not really lovers yet, but at least not enemies either.\n\nSince that time, Theyl has gone from being an unhappy, soft, and bored prince to a fit and strong adventurer. They both know that much hinges on a successful pairing between them. They are fast friends now and they please each other in many ways, just not in ... well he has not mounted her yet, since she still seeks to find a ram for her. It is forbidden until she takes a first ram, which is why I am here, besides to add another sword to their protection. For most, one finds the first mate and then the second one. It is a bit of poor luck for those two that they have the second one in each other, but not the first.\"\n\n\"Then what's the problem?\" Darji asked, not clear, even yet.\n\nShey Lann sighed, \"Theyl has not found his ram yet, either.\"\n\nWhile Darji sat with his eyebrows very near to his hairline now, Shey Lann moved to get up, \"Fauns mostly want mates of the opposite kind, as I have said. Theyl is a ram who has found a ewe for himself, but he also wants a ram as well. He likes both and his hope is ...\" \n\nShe shook her head a little, \"His hope for them is something which happens seldom, but it comes to me as a good thought that Bryth shares his hope and wants the same for them.\n\nI will go to guard now. You should try to sleep a little.\" She looked back after a few steps, \"And I am sorry for my words when we met. I do not favor humans mostly, but I am coming to see that you are different.\"\n\nDarji nodded and smiled a little, \"No harm done, and I'm sorry too.\"\n\nHe stretched out, preparing to sleep, but a moment later, Bryth was there sitting next to him with Theyl. She showed him how she could work the knife that he'd given her and she thanked him. As she chattered a little, Darji thought that he could see a little of the reason for her words regarding humans. He didn't think her stupid at all, but he thought that someone with a dismissive attitude to begin with might come to that erroneous impression. He thought that there also might have been a trust issue at first and he wondered somehow if she might have been cheated by an unscrupulous merchant somewhere. He didn't much like his next thought, but he figured that his father could talk somebody like her out of her life's savings in a minute and not much more.\n\nBryth wanted to know more about him and where he'd come from. Darji did his best but soon ran out of road. Things that he took for granted in his life held no meaning for Bryth -- cell phones, or phones in general, cars, air travel -- the mention of anything like that earned him an open yet uncomprehending look -- as though she didn't understand what he was talking about but was stuck for the moment and could only look at him for fear of laughing at his outlandish remarks. During one of the times when he'd waited for her to translate for Theyl, he stopped and looked at her for a moment.\n\n\"Have I done something wrong, Darji?\" she asked, suddenly looking concerned that she might have offended him somehow.\n\nHe shook his head, \"No. Not at all. I just had the thought that there's something missing here between me telling you about something and the way that you haven't heard a thing about any of it. Let's try this: \n\nIf we were at your home and you wanted to speak to a relative who lived in another place, how would you do that?\"\n\nBryth blinked at him for a moment and then shrugged, \"If I could, I would go to where they were and talk. If I could not travel then for some reason, I would tell someone what I wished to ask or say and send them in my place. Why? How would you do that? Is it different where you live?\"\n\nHe nodded, explaining that he'd use a telephone and what that was specifically and how it worked and was used. When he saw Bryth's brilliant and humorous smile at what she took to be a story, Darji knew that something was wrong.\n\n\"Let's say that you had the time to travel and it was some distance to where your relative was. How would you travel?\"\n\nShe shrugged, \"I would walk, of course. And you? What would you do, fly?\"\n\nAs he formulated his reply, Darji thought that it wouldn't make any difference. For what he thought her reaction would be, he may as well tell her that he'd fly. He told her about driving a car on a road instead and she laughed a little and clapped her hands quietly, \"I love the way that you tell such tales, Darji.\" She turned to tell Theyl who also enjoyed the 'tale' while Darji grew a bit uncertain about something.\n\nIf he could have risen straight up out of the earth onto the surface where he was now, he'd have thought that no matter where he was, it couldn't be all that far to find a road, and finding a road would have led him to a town or a city, something. He asked about roads and heard about cowpaths. He asked how someone would transport something like sacks of grain and he was told about wagons and horses.\n\n\"That is how I have seen humans do it,\" she nodded to him and he wanted to groan. \n\nHe doubted very much if there was any place on Earth today where people used horsedrawn vehicles much anymore, and yet she was telling him that it was so. There was a mistake here, but he didn't know what it might be. He knew that the circumference of the earth was some twenty-odd thousand miles and more than seventy per cent of the surface is covered by water. That leaves a lot less distance, he thought, and he didn't think that there could possibly be very many places where even the poorest person had lived any part of their life without seeing evidence of some form of mechanized travel or communications. He knew that it was possible, of course.\n\nHe just didn't think it was very likely.\n\nAnd it wasn't just his thoughts out of ignorance, either. He'd been all over the world himself and, though he knew that there had to be places totally devoid of many of the encumbrances of modern life, he couldn't think of one which might be devoid of them all. It was a troubling notion which, if true, concerned him greatly. \n\nShe reclined then, leaning on Theyl's crossed thighs and she pulled his hand to her mouth to kiss it briefly before she moved it so that he could slip it into the space between her leather vest and her breasts, wanting to feel his hand against her. There wasn't much shyness about it and Darji was convinced that if he wasn't there, they'd be doing the same thing anyway. The spoke for a minute, and Bryth looked up at Theyl and shook her head, saying something else in reply. Theyl blinked at her and then he looked at Darji.\n\nWhat came out of him next was horrible, but it was Theyl's honest attempt to ask a question in English. Darji listened but didn't get it at all until Theyl pointed to the old revolver strapped in a holster on Darji's thigh. \"Theyl would like to know about that,\" Bryth said, \"what it is and what it is for. Mostly he wishes to know why it must be tied to your leg.\"\n\nDarji explained a little slowly, to leave Bryth time to translate. \"This, ... well, I've been stuck here for a long time. Where I lived before, I never grew attached to things. I come from rich people and if you can have whatever you want, then after a while, nothing matters to you very much, does it?\"\n\nAfter Theyl had been made to understand it, he tried again to speak, and this time, Darji got that he was agreeing, since he'd come from the same kind of home. But Theyl looked down at Bryth then and then back at Darji, saying that perhaps the best things to have were the ones which hadn't come easily. It took Darji a few seconds to get it and Bryth pieced it together at the same time and smiled up at Theyl.\n\nDarji nodded, \"Yeah. So we understand each other then. Anyway, I found this and another one on the body of a human a while back. It's just another loud weapon, and in fact, it's worse than that. This one's and old-fashioned copy of a Colt Army Model 1860. It's not like my other ones. It fires a lead bullet and uses black powder. That means that loading it is a slow thing and to shoot it means having to lose sight of your target in a cloud of bitter smoke, but, ...\" he waited while Bryth helped Theyl over the parts that he didn't understand, \"I like it a lot. It feels good in my hand, better than the semi-automatic one that I also carry. It's in this holster to carry it and keep it safe where it's strapped in, and the holster is tied to my leg so that it doesn't clap around if I run. I keep the other one in my pack and I guess I'll use it for parts if I need to.\"\n\nDarji reached behind him and dragged out one of his packs. After a brief search, he found the other pistol and handed it to Theyl since it wasn't loaded. Darji checked just to make certain first and then he showed Theyl how it was to be used, drawing back the hammer and then squeezing the trigger. \"They made millions of better ones, and they still do, just like this, but they load a different uh, ... arrow and you can shoot them without pulling back the hammer first. You just pull the trigger and that makes everything else happen.\"\n\nTheyl listened and considered, \"It,\" he said pointing to the one on Darji's leg, \"can throw?\"\n\nBryth said that Theyl was asking if it could shoot, so he nodded, \"But it's loud and we would all be choking on the smoke.\" Theyl handed it back to him and nodded, saying that one day, he'd like to see it shoot.\" \n\nShe raised her eyebrows then, \"He heard it when you used it but he didn't see when you did. He says it looks better than your other weapons.\"\n\nDarji looked at Bryth and asked about Shey Lann, saying that they were a lot friendlier now, but he wanted to understand why she'd been so distrustful at the outset.\n\n\"I see that she must have told you at least something about us,\" Bryth said, \"Shey Lann's mother is an elf from a group that tries to hold themselves apart as though they are ... above the other elves. Her mother met a wood elf one night as she was travelling. The two talked and went to an inn, since it began to rain and they were both strangers there. One drink after another -- and elves can drink quite a lot before they feel it -- they got drunk and then one thing led to another. The pair paid for a room and since they were drunk and it had cost them so much to get drunk, they decided to try to stay that way for a little while.\n\nThey stayed drunk for two days. The girl enjoyed it all, but she was horrified when the bloom of the drink was off on the third day. The wood elf said that he would marry her if she'd have him, but she said no and left, running back home as fast as she could go and wanting to pretend that it hadn't happened. But it did and she was with child from it and Shey Lann was the result.\n\nAs a young elfling, Shey Lann looked different from the high elves and she was never accepted by them. She never had any friends, since I think that high elflings are just as stupid as the parents who teach them. Her mother was the most foolish of all, not for what she'd done, though anyone can see that she'd made a mistake. Shey Lann's mother hung herself, a victim of the stupid notions that she'd been taught and the culture that she'd grown up in. ",
        "Shey Lann was only an elfling, not far past ten, when she met her father, who had come once he'd gotten news of it all. He took her home to live with him. The trouble was that most wood elves will have nothing to do with the high elves for their foolishness and Shey Lann had few friends there, but she did have some, at least. She grew and learned from her father until he was killed one day by a human. Since that day, Shey Lann is a blade for hire and she takes very little in payment if the mark is a human.\"\n\nDarji could relate, he guessed and asked how Shey Lann had come to live among the Faun.\n\n\"I met her while we were both far from anywhere,\" Bryth said, \"both of us were lost and looking for a way back home, well, that was what I was doing. Shey Lann was looking for a place to stay and live. She did not feel at home among the wood elves, any more than she was not welcomed by the high elves. So she travelled, looking for work. Sometimes, she would take a male for a bit of pleasure, but she knew that she had to be careful, always worrying that if she were to find herself with child, there was no way to raise it, having little enough to feed herself with and the road is nowhere to have a little one, since they need to have sheltered places and protection.\n\nWe just fell in together,\" Bryth smiled, \"and it was far better to journey with another than it was to go on alone. I took her to my settlement and though there were some who would not have her there, since she was an outsider, I said that there were other outsiders here and we had welcomed them. There was a warrior there who said that he'd kill her if she did not leave, but Shey Lann only smiled as she stood before my father, the king. She nodded and asked if it would be alright to kill this loud warrior and if she could stay if she won.\n\nMy father nodded and in seconds the warrior was dead. It was a shock to many, for Faun warriors are a little hard to fight for most kinds of creatures. But Shey Lann had seen the way that I fight and she knew what to expect from him, only more and harder, she supposed. Anyway, she had nowhere else to go. I was happy to see her live and in truth the dead one was a loud brute to begin with and no one mourned when he lost.\n\nSo Shey Lann was allowed to live with me in my little part of the hall since I was the one who had spoken for her. We had a lot of laughter, sharing everything. In a little time, a feast day was coming and we went out together that night. Shey Lann had her fun, just as I had mine, but somewhere in it, she met two warriors who appealed to her, though not at the same time. They each said that they remembered her from her test and said that it was not an easy thing to have killed the brute as she did and they liked that about her. \n\nWhen we met again later, she told me of them and she also said that she liked the way that they mated with her, each one. They were, ...\" she searched for the word for a moment and then she smiled, \"very strong and VERY vigorous ,\" she said to me and she liked that. She was actually sad to part with the first one and when the same thing happened with the second one a time later, she asked me why all of the rams were not like that. \n\nI had no answer and said so, but I saw that she really liked them, so I told her that if she could describe them, I would try to learn what I could of them before the next feast so that she might approach her search for one of them with at least a bit of a plan.\"\n\nShe grinned then, remembering it, \"You must try to imagine my shock to hear her descriptions of a pair that I did indeed know and quite well, too. But I had no way to tell her so that she wouldn't just declare that she didn't want them -- on principle, since I already knew her quite well at that point. Shey Lann is a bit of a different breed. She readily takes what might come to her, but she will refuse most things that are given. That she took the knife you gave to her says something, I think.\n\nRegardless, I spoke to the two rams when I met them next, since they were together at a function which related to the town guard and the army. Both of them are leaders there and are very popular and much sought after by many single girls. They both told me about the elf-girl who now haunted their thoughts day and night. I was torn, but after hearing Shey Lann moan about when the next feast would be, since she really wanted to meet at least one of the rams who could please her like no other male that she'd ever been with, I decided to act and try to help things a little. I also hoped that I would not lose a friend out of it all.\n\nA few days later, I watched it all happen,\" she grinned happily. \"Shey Lann and I love each other. There have been times when we were alone on the road and both wanting a male very much when we just looked at each other and laughed a little. After several times like that, we found that we liked to lie together sometimes, though what we did for each other wasn't what we really wanted then. It was just a bit of pleasure and comfort, but we liked it and it must be said that it made us closer.\n\nThat day, Shey Lann was in a fallow field practising with her bow when she saw BOTH of the rams who she liked so much coming to see her. Shey Lann can talk a good game and she really is fearless, but she can have trouble talking to one male sometimes, not wanting to seem too rough and two at the same time made her quail a little. She doubted her ability, so she slung her bow over her shoulder and ran.\n\nNow, elves can run like the wind, but then so can fauns and it is a little different to be running away from someone who you might not wish to talk to than it is to be running for your life. Another thing is that faun rams when they have a want for a certain female and think that there might be more there than only lust can run very fast indeed, and it is an old strategy among rams sometimes to work together. The rams split up and she didn't know which way to turn after a while, because just as she thought that she'd evaded one of them, she saw the other one coming from a different direction. It took an hour, with me far up a high tree watching it all for them to run her down. Shey Lann prepared to fight very reluctantly and when the two came for her and there was nowhere else to go, she asked what they wanted from her, fearing that she might be forced. \n\nThey laughed and said that they wished her no harm at all and had only wanted to talk to the ewe who had come to us as a stranger and seemed to be magical enough to stay in their thoughts for days after the feast. As Shey Lann crawled backward up the hill - still out of breath - one of them threw down a blanket and the other produced a basket of food and a wineskin. \n\nShey Lann stared and asked them if they really only wanted to speak with her that badly that they'd go to these lengths to do it and they both nodded. One of them took off his armor then and sat down, saying that if she really wished to be forced, that they were prepared to do as she wanted and the other one began to disrobe as well. \n\nShey Lann gaped at them and they told her how they felt and hoped that she might search for them during the next feast evening, but that they really hoped that she wouldn't wait that long.\n\nShey Lann looked from one to the other and thought about how many nights she'd been alone and no one had wanted her. Then she thought about the males that she'd had when there was no one else in the middle of the night and she knew that those nights were her lucky ones. She asked the two rams if they only wanted her right then and at the feast and they shook their heads, saying that they'd never had a finer ewe in their lives and hoped to make something a little longer-lived than the odd night sometimes with someone like her.\"\n\nShe said something to Theyl then and he handed her a waterskin so that she could sip a little and then she handed it back and smiled at Darji.\n\nHe looked at her and laughed a little, \"Well? What happened? Bryth? I need to know now. How did that end?\"\n\nBryth smiled a little mischievously, \"Shey Lann is my friend and I know her so well. She is many things, Darji, but Shey Lann is not stupid. She was looking at two of the finest rams out of all of the ones among my clan. Faced with that, she made the only decision that I knew that she could make.\n\nShe threw off her clothing and after a moment where they looked at each other, I watched as Shey Lann ran to them.\n\nI watched it from my tree and then I had to move so that I could rub myself a little. It went on for a long time -- all the afternoon! She rode first one and then the other of them, bucking and calling out their names. She was mounted by one of them while she suckled the other one. Shey Lann surprised even me that day. It grew to be evening and I walked out and brought them all another meal and more wine in another basket. When I reached them, Shey Lann had mounted one ram and then the other one had mounted her from behind. \n\nShe was a mess, as were the rams, but they were all happy, having enjoyed each other for hours and they had already pledged to each other that they wanted this to go on. I listened to them and I asked if this had been like a private feast evening for them, but all three of them said no. This had gone on far longer than any coupling that one might have on a feast evening and they still wanted to go on.\n\nI said that it had gone on long enough to begin to attract the attention of others and so they got up and got dressed. I did the only thing that I could do, really. I took them all to my rooms, where I slept in my bed alone. They went on for four days! Every time that I came home, they were still fucking!\n\nWhen none of them could move anymore, I brought them hot food in the bed and the rams asked if there had been trouble over their duties. I smiled and told them that I had made their excuses for them and stood in for the drilling of the troops, but that the troops would be happier to see them again, since I seem to ask the moon of them, somehow.\n\nThat was when I asked if this would go on and they told me that it would and that they all agreed that this could be built on and was not only lust after so long at it. The two rams left with Shey Lann in the morning. One of them sold his house and they all moved into the house of the other one and that is where they live now -- when Shey Lann is not burdened with watching over my virtue while I settle things with my ram, Theyl.\"\n\n\"She told me that she and you are nearly related by her marriage,\" Darji said, \"Does that mean that one of them is your cousin or something?\"\n\nBryth shook her head with a warm smile as she reached over and laid her hand onto Darji's knee, \"No. Shey Lann was brought before the king where she pled her troth to both of the males right in front of him and the whole court. My father spoke with my mother then and they asked the rams if all of this was so, and they heard that it was. The following month, my friend Shey Lann left with written permission to be married to two of my brothers at a time of her choosing, neither of them the crown prince, mind you, and from what I know, they are all happy with each other, though right now, I think that she must miss her rams as I am certain that they miss their ewe. \n\nThey cannot journey as much as she can and when they have had to part before for a time, she tells them not to miss a single High day's feast and to have their fun. But I can say that when we get back home, it is no good going to call on her for several days after. Shey Lann stays abed then and so do her rams. She is holding back, wanting to be sure about it. For an elf to wed a pair of rams, ... well I can see why she would want to be careful.\"\n\nShe ran the side of her thumb over a seam of the worn denim of his jeans for a moment in curiosity over the feel of the fabric a little thoughtfully, \"Until I brought her to live with me, Shey Lann hardly ever smiled, unless it was at me when we lay together in a dark place on the road. She was always the way that she was to you when we met each other. When she is there, and can lie in the arms of my brothers when she has the want, she laughs and grins very freely, in a way not unlike the way that we saw her here with you earlier, though here, we must all be a little quiet.\" \n\nBryth asked Theyl to move his hand and then she sat up next to him with her arm around him. As he sat with them and saw the way that they hung onto each other while they ate the little of the dinner that was left, Darji decided that he liked them. \n\nHe wasn't sure, but he thought that they were a young couple who were just starting out and like anyone would -- even in a culture as vastly different as theirs was to his own, they seemed to have their share of troubles and were trying hard. He liked that, too, he thought as he closed his eyes and tried to sleep.\n\nThe two fauns sat hugging each other silently; watching him for a long time after they'd heard the change in his breathing. Finally, they just got into their few blankets and caressed each other for a time before they fell asleep.\n\nA few hours later, it was Darji's watch and he walked to the place where Shey Lann stood waiting to be relieved. \n\n\"I am only concerned about the noise when you shoot anything,\" she said.\n\nDarji shrugged, \"At least it ought to wake everybody up if I do.\"\n\nThe watch passed without incident and then he went back to the cold long-out fire and prepared his things for the day's travel.\n\nShey Lann went on as point when they set off though they switched up now and then. Darji heard them all speaking in the language that Theyl spoke but before he could ask about it, Bryth came back to where he walked and explained that it was better that the three understood each other, since they were out ahead of him. If anything came up, he'd know anyway, she told him. \n\nShe stayed walking next to him for maybe an hour then and he asked what it was that they were seeking and she surprised the hell out of him when she said that they were to look for a fallen-in temple to a long-forgotten god. \"There is a small place there, I was told, where a small figure is kept. I saw a drawing and to me, it looked like a very fat woman with no head, wearing no clothes.\"\n\nDarji held his tongue, wanting to know a bit more, but inside, he was in a bit of turmoil, since what she described sounded a lot like the statuette that he carried. It meant little to nothing to him, but he had concerns all the same. Something to do with that thing had played a role in the brutal death of his mother. Did he really want to give it to these innocents?\n\nNot only that, but there was also the way that he didn't seem to be able to be rid of the thing. What was he to do when the only way ahead for him was to go through a membrane -- which had appeared as a direct result of him trying to leave the statue behind?\n\nAll of the other times, the membranes had been there before he'd gotten there. The one time that he'd wanted to walk away, one of them had just appeared to block his way. For some time now, he'd been wondering what would have happened if he had just chosen to walk on, right through one which appeared as he was trying to leave the statue behind. \n\nWould he be outside? \n\nOr would he blink out when the thing snapped into nothingness?\n\n\"Who is this chancellor and what does he want with the figure?\" he asked.\n\n\"What he wants, I do not know,\"Bryth said, \"I know only that the chancellor must have made such an annoyance of himself to the king over it that it was decided to send me for it -- if it can be found. We have been here over a month and I have seen no temple, let alone a small figure. If it was so important, then the chancellor should have gone himself.\"\n\nAt the sound of the title, there was a brief comment from Theyl and Shey Lann laughed along with Bryth who answered quietly that she had no doubt of it. She put her arm around Darji and grinned, \"Theyl said that the chancellor is no traveller, and that from his meeting with him, he decided that he might have been a warrior once, but now he seemed to be an older person who has lost his stones and does not know where to begin his search for them.\"\n\n\"Who is this guy anyway?\" Darji asked and she said that if they were successful, she would take him to her settlement to meet her father and he'd to see the chancellor there. \"He is a human, as you are though,\" she grinned again, \"you are much better to look at, Darji.\"\n\nShe called something out to Theyl, who turned back and nodded with a smile. \"I have just told Theyl that I hold onto you as we walk and if that was alright and he said it was.\"\n\nWhen he looked at her, Bryth looked just a little bit uncomfortable and said, \"Theyl will be my second ram one day. I do not want him to feel left alone. I try to teach him what I can. We did not begin well, but he and I seek to be good for each other. It is a choice that neither of us wanted at first, but it must be, and now we grow to be close friends at least.\"\n\nThere was a cry from the front and they ran ahead. Theyl was caught in a thick web of some sort and Shey Lann was looking off into the distance for its owner as she tried to pull him free.\n\n\"Tell him not to struggle,\" Darji said, \"he'll only get more tangled. We've got to wait until Momma shows up to drag him off. THEN we shoot her or him and then, we get Theyl out. Anything else and we might all get caught up.\"\n\nBryth translated for Theyl and Darji cautioned Shey Lann not to shoot until the spider was close by. \"The closer that the spider gets, the more greed will force it to even defend us against others. If you shoot from far away, you might find yourself facing half a dozen.\"\n\nHe looked as far as he could see, and even looked back the way that they'd come, but he saw nothing for the moment, so he slung his shotgun over his shoulder and told the others not to look at him or Theyl, but to look outward and let him know if they saw anything. He was about to wade in with his knives when he had a thought and looked up.\n\nWhat he saw there made him reach for the shotgun again and he pushed Shey Lann aside while he shot the nearest ones. They landed with soft splashes and then he grabbed his rifle and shot the ones farther away and they scuttled off along the vaulted cavern ceiling out of sight. He pulled out his long knives then and set to work, carefully hacking the sticky webbing away from the nervous faun before he pulled him free.\n\n\"Are you alright, Theyl?\" he asked and the faun nodded with wide eyes after Bryth asked him so that he understood.\n\n\"Come on then, all of you. They'll get over their fear in a minute. I wounded a couple for sure and they'll try to kill those ones first for an easy meal, but they will all remember us in a little while. We'd better be gone when they think of us again.\"\n\nThey ran as fast as they could, but they were hampered by the darkness of the cavern and the uncertainty of the evenness of the floor -- even with the torches. All that it would take now would be a badly sprained ankle and they'd be forced to hold up and then have to defend each other against who knew how many huge spiders. While this ran through Darji's mind, he had a thought that surely something had spawned all of the patio table-sized things. \n\n\"Wait, Shey Lann,\" he called out, \"Stop a second.\"\n\nShe stopped and waited for them to catch up, \"First you say to run, so I ran, since I can see better in the dark than any of you. Now you say to wait,\" she smiled, \"I am learning to like traveling with you, Darji, but please ...\"\n\nHe looked at the three torches that they carried and then he reached back for one of the pockets of his pack. His hand came back with a pale, thin rod after a moment. He looked ahead and held on to Shey Lann for a moment to lean in, \"There must be a fat-assed mother here somewhere.\""
    ],
    "authorname": "TaLtos6",
    "tags": [
        "human",
        "elf",
        "faun",
        "drow",
        "demon",
        "archeology",
        "tomb",
        "adventure"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-55"
}