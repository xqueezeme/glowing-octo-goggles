{
    "title": "Blow Your Mind Pt. 08",
    "pages": [
        "Thanks everyone for the comments and feedback. I am glad everyone is liking the story so far. I will be honest I am running into some delays in getting the next parts out as I want this to be good and not forced. I plan on pushing through to a solid end to the story, but it may take a while. I've had a couple of folks ask that this doesn't end like Contractual Obligation or Wanna Bet. I am planning on going back to Wanna Bet and finish it (writers block hit me hard on that one), but the thing is Contractual Obligation was ended. The final chapter was supposed to be it, but lots of folks seem to think its still not done. Sorry to disappoint but it is done and I am not going to try anymore. The reason is that while lots of people really liked it, I had a LOT of grief over it, the most from any other story I have ever written and the absolute nastiest. It ruined the story for me and honestly, it's now one of my least favorite stories. I just wanted to let everyone know that is the situation on that particular story as I still get asked about it a lot.\n\nBut enough of that, here's the story you have been waiting for.\n\nBlow Your Mind, PART VIII\n\nFOUR MONTHS LATER\n\nBrandi smiled as she watched the lawyer through a remote camera. \"Nice body. He looks good in that suit.\" She made a couple of notes and then looked at another camera. Another person, a very pretty blonde police detective in a business suit strode forward down the street. Brandi looked back and forth between the cameras and snickered.\n\n\"Heading for your \"Lunch Meeting\" are we my dirty little piggy and lawyer? Naughty naughty.\"\n\nBrandi switched over to another camera and continued to watch the two as they entered two separate expensive hotels went upstairs. The man entered a room and shortly thereafter the woman entered another room. Brandi sighed as she waited.\n\n\"Too bad these two are just paranoid enough to have the rooms swept prior to the meeting for bugs. But I should be happy that their hacker isn't as good as Mr. Case's is. Ah ha, here she comes now.\"\n\nAnother woman swayed down the hallway of the woman's hotel. She had long golden blonde hair, was wearing sunglasses and a full-length raincoat and a set of very nice six-inch heels. She carried a large purse that was almost an overnight bag in size and she knocked on the woman's door. After a moment she was let in and Brandi checked her clock.\n\nThe guy and the woman were both top dogs in their professions. The guy was one of the hottest DA's in the Chicago system and noted for some really high profile take downs of supposedly \"connected\" political figures in the Chicago machine. The woman was the youngest Police Captain in the city's history and had some very notable busts of her own, including some major gang leaders and crooked cops. They had officially cooperated a couple of times on some big cases but were never ever seen together except when their jobs crossed paths.\n\nMr. Case had been hired by a client who was running into trouble with an unknown factor. Aside from the difficulty of just doing business in Chicago and its corrupt City Government, he had started running into all kinds of legal and illegal problems. Unions always after him, blackmail attempts on some of his key employees, a kidnapping, problems with permits, investigations by the city's DA for violating work laws, arson, the list went on and on.\n\nHe had initially tried to do the usual and simply find out the source of the trouble and pay it off, but that was the weird thing.\n\nHe couldn't.\n\nThe attacks all seemed to be coordinated to make him NOT want to do business in Chicago, but there was no \"boss\" that he could find behind it. Just pressure to not start up in Chicago. Which made no sense at all as none of his other out of city business elements had any issues at all. Just Chicago.\n\nSo after trying several legal methods (including the FBI), he had contacted Mr. Case and asked him to find out what the hell was going on and why.\n\nMr. Case had done some initial groundwork prior to calling in Brandi. What he had found indicated that what was being done appeared to be a joint venture of some kind, organized crime and crooked politicians and cops, unions and so on. He had let Brandi know what he had and Brandi had arrived under a false ID and had gone to work.\n\nIt had been some serious old-school stuff. She had staked out, wire-tapped, tailed, bribed, asked around and done a lot of old-fashioned leg work, switching out her identities with her new skill several times using hired escorts or one-night stands to convert over into other personas. The people she was after were really serious about countering any attempts to be spied on.\n\nShe had been able to dodge the counter-surveillance using her body switching technique and had foiled a couple of attempts to track her down after she had started with the oldest method in the book which had been asking around. You could find out a lot by just asking some simple questions and even though she was very careful she noticed that she was soon picking up tails or having other questions being asked about her to include sweeps being made in hotels. She could ditch the tails and she was paying cash and moving around to different hotels every few days, but she soon found out that a lot of people were after her, or at least the persons she had been.\n\nShe had walked past a grab team once while leaving a hotel just after changing over. She had been tailed all day by someone who was very good, but she thought she had lost him. Turns out she had not and she left just as they entered. Her left behind bug had shown several men showing Chicago PD badges arresting the mind-blasted escort she had just used to change her profile with. Brandi had noted the car they used (traced back as an unmarked police car) and had discovered that the escort had simply \"disappeared\", no arrest record, no bail, no lawyer called (she did have one on retainer that Brandi discovered), and after a few days, her profile on the escort site were removed.\n\nWhile that made her nervous as hell, it also gave her the clue she needed. She was able to tail one of the cops who had made the \"arrest\" and discovered that he was seeing a stripper once a week after work. Cute Kory.\n\nThat was suspicious because Kory was way too expensive for a regular detective to afford once a week, and she was way to highly connected for him to be blackmailing. Brandi had become curious when he went to the club she worked at and she saw how he was able to get in. He stood out like a sore thumb in his relatively cheap suit and his obviously lower-class attitude compared to the business sharks that normally went there. Brandi had assumed Lucinda's body and had gone in for a job as a waitress. She had landed one easily of course and had staked the place out from the inside for several days until the guy came back and she saw who he hooked up with.\n\nThanks to her heightened alertness and senses Brandi easily kept some tabs on Kory and had determined that Kory was seeing a lot of folks who didn't seem her type. After 10pm she was usually booked solid with high rollers and rich guys, some local and some from out of town. She and a couple of the other really hot strippers usually had one or two nights they were hired out for a big party or a really rich whale wanting some very personal service. But from about 7 to 10 pm, Kory would work the stage and she always seemed to have some folks who didn't quite fit the bill get her attention and time. Brandi would see their faces and then google the hell out of them the next day as they always paid cash and made sure to not ever flash an ID that she could see. Kory always saw them for a dance or two in a private booth, never out in the open, never where she could lip read or overhear.\n\nBrandi thought about bugging the booths, but she was getting very suspicious about how Kory was acting and decided to hold off and observe. She was glad she did when she popped into work early one day and saw one of the bouncers sweeping the booths for bugs. Definitely not regular strip club behavior and Brandi was curious who was really behind it because the club owner didn't come across as that clever or smart.\n\nThe googling had turned up more cops from all over the city, lower ranking members of various Unions, smaller time capos from the mob, more gang leaders, and a lot of city officials and mid-tier business types in all sorts of industries. Some were weekly and some seemed to be much less often. But there were a lot of them.\n\nAfter several weeks of this and getting some offers to come on as a stripper, she had decided to accept the stripper job as it gave her much more access and ability to keep tabs on Kory. She was soon doing well and found herself included in a couple of the \"Whaling\" parties as Kory called them. She did well, giggling along, using her now considerable stock of sexual talent to really wrap some of the guys up, and then using them to scan and feed. Her suspicions about Kory using these guys as a front for somethings else were confirmed when each guy she scanned showed up to be simply some rich, usually married, guy out on a bender looking for some sexy woman to have a fun night with.\n\nAnd boy did they.\n\nBut the others, the ones that seemed out of place? They, while some were obviously interested, never ever took her up on her offer of a dance or to buy her a drink. After a couple of attempts, the owner pulled her aside and told her not to waste her time on them.\n\n\"I let them in because of politics, less hassle even though they don't fit in. But not worth your time, they come to look and they can't afford to touch. See that guy? He's loaded, see if you can get him into the VIP lounge.\"\n\nBrandi did as she was told but did notice that Kory gave the owner a nod after she got talked too.\n\nAfter several weeks, Kory had seemed to take an interest in her. She had commented on how careful she was with the drugs and the booze and how well she could \"play the game\".\n\n\"Well, my mother didn't raise a stupid girl. I went college, but didn't finish thanks to running out of money. I'm trying to save up so I can finish and then do grad school.\"\n\n\"College girl huh? You seem way to clever to waste your time on that.\"\n\n\"Oh? You think I should be a stripper my entire life? Or maybe parlay it into something bigger?\"\n\nKory had given her a very sly smile. \"Every stripper gets old, but the smart ones don't have to worry about it IF they plan ahead. You strike me as smart.\"\n\nBrandi had shrugged. \"I like to think so. So what exactly should I do so I don't have to worry?\"\n\nKory had stood up and smiled again. \"I will let you know, if you are interested that is.\"\n\nBrandi had nodded and Kory had gone on her way.\n\nBrandi's research of Kory had been interesting. Publicly, she was Cute Kory, the hottest Stripper in Chicago. But after that? A whole lot of not a whole lot. Lots of stuff that should be public record or easy to dig up simply didn't seem to exist. Brandi had to call in the Help Desk and found that several years back someone had done a very thorough sweep of Kory's past and had removed a lot of it. She had a police record for drug use and prostitution, it had been deleted from the official records. Her driver's license showed a fake name and address but it would show as clear and clean to anyone running it. Tax records showed a stripper who did well, but nothing out of the ordinary. Other than one of the top tax offices in the city did her returns for the last 3 years.\n\nAside from a couple of minor documents, Kory didn't seem to exist. But she did find one thing that made her pause. While back in High School she had taken one of those IQ tests and she had nearly maxed it. Stripper or not, she was a certified genius. That got Brandi thinking and made her be even more careful.\n\nAfter several weeks of just being an undercover stripper and careful observation, Brandi decided to tail Kory. The various people after her had dropped off since she had been undercover so she decided to risk it.\n\nShe had followed Kory after work and had discovered that Kory was seeing lots of other interesting people, most of whom were involved in the pressure on the client. Higher ranking Mob and gang leaders, crooked politicians, some other cops, and various city officials. Thanks to the Help Desk Brandi had been able to get some very special surveillance equipment and had been able to listen in on a couple of conversations. It had been difficult because they were paranoid about security. Brandi had lucked out in that the first night she had tailed Kory, she had seen her meet up with a mobster in a limo and they had swept her body for bugs prior to her getting in. She had been thinking about planting a bug on her.\n\nWhat Brandi had found out was that everyone Kory was seeing was simply a pawn. \"The Boss\", whomever that was, was only connected to these pawns by Kory. She would bring instructions, orders and get the feedback from the player. It wasn't just the client, but all sorts of people ranging from the Mayor to some community activists in the South Side. All kinds of stuff from blackmail to kick-backs to faking evidence. All sorts of very useful information for someone who wanted to control things by controlling people.\n\nUsing her data scientist skills, Brandi had figured out that \"The Boss\" was setting himself/themselves/herself up to be THE player in the Chicago underworld. Control of the people who were in control of Chicago was the name of the game. Brandi still couldn't quite figure out why the client was being targeted though. He had wanted to play ball, he had tried to pay off, he had offered to make deals, did everything asked, but was still being hammered.\n\nBrandi had determined that she needed to figure out \"The Boss\" and get the answers from them directly.\n\nThat had led Brandi to the DA, David McNeal, and the Cop, Police Captain Megan Grant.\n\nBrandi had done some careful work and determined that based on what she knew, the instructions seemed to come from either the DA, or the Cop, or both. Kory spent the most time with these two, usually a full hour if not two, and saw them both on the same day, usually one after the other. And Kory then usually saw several corrupt politicians and mobsters later that day and gave out some instructions and the whole cycle repeated. Kory didn't have their numbers on her phone (Brandi had it hacked), didn't have anything on land line (Brandi had tapped it), and nothing crazy every came over email other than various requests for her \"services\". Brandi noted that her regular meetings were never set up via email or appeared in her calendar, so it appeared to be all in Kory's head.\n\nBrandi needed to get into their minds. Which given her abilities, shouldn't be too hard to do, if she could get to them.\n\n\"Well, pattern established. Now which one of you should I go after? Hmmmm, I work with Kory and she seems friendly enough and she is fun and she obviously is into hot women. But she is busy and hardly ever alone. Work has no privacy, even in her own dressing room, as she is always getting requests or seeing people. If I work at it as Emerald and get close to her I might be able to get her in a two on one with a trick eventually, but that could take weeks if not months. And once she is off, she is off doing her thing. Cripes, she even does most of her shopping online for clothes and has her food delivered because she is so busy.\"\n\nBrandi looked at Kory's address and shook her head. The condo she lived in was in a very secure location, private security, top of the line stuff, lots of rich folks. And a lot of mobsters. That made Brandi wave off on trying her there. Mobsters meant a lot of security that wasn't really noticeable and was probably a lot more lethal than normal. Too many unknowns to get her there.\n\n\"Nope, Kory's out. The cop? Megan is a hottie, wouldn't mind her in bed. But damn her pattern is all over the place. No place to really get her alone while she is working, which is damn near all the time. Apartment is pretty secure. She knows all sorts of hand to hand fighting which means jumping her is iffy. No, the cop is out.\"\n\n\"Mr. DA David McNeal. Much more organized, much more regular. But too damn paranoid about being alone with women.\" Brandi sighed. \"Of course, the MeToo movement just had to make my job harder by making guys paranoid about being alone with a woman not his wife.\" Brandi leaned back and chewed on a pencil and thought about it. \"Never stays late, usually works more at home, and home is a gated community with heavy security. Happily married, the only iffy thing is when he sees Kory, and I get the feeling that there isn't anything happening there other than information exchange and instructions being given out. Always has at least two people in his office when talking behind closed doors. Cripes, this guy is way to straight. I bet his wife is bored in bed...\"\n\nBrandi blinked.\n\n\"His wife.\"\n\nA smile crept over her face and Brandi pulled up a picture showing the DA and his wife at a formal event smiling for the press. \"Mary McNeal. Daughter of James Lenard, one of the old money families in Chicago. Hmmm, nice looking lady.\"\n\nMary McNeal was a brunette with lovely green eyes, a swimmer's body, and very easy on the eyes. She had been a college swimmer and kept in great shape. She was toned, tanned, and had some nice muscles that gave her a nice tight form. Her ass looked like you could bounce a quarter on it and have it hit you in the eye from the bounce. She was rich, pretty, and had the typical degree in Art History that rich girls get from some expensive college. She was heavily involved in social media and charity and so on, just like the stereotypical trophy wife for some up-and-coming political hotshot.\n\n\"Hmmmm. Kory, Megan and David are all very careful and secure. But David's wife may not be...\"\n\nBrandi spent the next week surveilling Mary. Brandi was pleased to see her hunch was right. David was careful about his security. Mary though breezed around without a care. Other than a driver and sometimes her personal assistant, she presented plenty of opportunities to be gotten alone. Shopping in several high-end shopping areas, lunches and coffees either with or without friends, working out at the Country Club or playing tennis there, Brandi quickly saw she was easy meat.\n\nAfter making some plans and figuring out some timing, she acted. On Tuesdays Mary usually went to the country club for a morning of tennis, lunch, and then either relaxed by the pool or in a private cabana hut which was really a small cottage with a front room, small bedroom and bathroom. She sometimes played cards with some friends and then headed home about six for dinner with David.\n\nUsing the Help Desk, Brandi had herself set up with a reciprocal membership from a club in Philadelphia. She called up an escort and used her to transform into another form (a lovely little blonde number from Miami who had been there on vacation), and then headed into the club. Brandi blended easily and easily found Mary playing tennis with one of her friends. Another friend was waiting by the side swinging her racket.\n\nBrandi moved up next to her and nodded.\n\n\"Waiting for your partner?\"\n\n\"Actually, just waiting for my turn. We had a fourth but something came up. Normally we play doubles.\"\n\n\"Oh? Well, if you wouldn't mind trusting a stranger, I would play with you.\"\n\n\"Nice offer, thank you. But I don't recall seeing you before.\"\n\n\"I'm Dawn. I'm here from Philadelphia for some business. My club has a reciprocal membership with this one.\"\n\n\"Ah, I see.\" The woman gave her a quick glance. Anyone else would have seen her just looking her over but Brandi could tell she was very suspicious of her.\n\n\"I'm sorry, I didn't catch the club you were with.\"",
        "\"Low Hills Country Club.\"\n\n\"Lovely club. The lake is very pretty.\"\n\nBrandi had to keep from snickering at the obvious attempt to trick her up. She kept her face straight as replied. \"Lake? Low Hills doesn't have a lake. I think you have the wrong club.\"\n\n\"Of course, my mistake. Mr. Smith decided against putting one in last year didn't he.\"\n\n\"That would have been difficult to do considering he died three years ago. I am getting the impression you don't trust me.\"\n\nThe woman smiled and extended her hand. \"Diane, pleased to meet you Dawn. Sorry about the questions, but we have been hassled by reporters who slip in and try to coax information or gossip out of some of us.\"\n\nBrandi smiled and laughed. \"I fully understand. You can never be too careful. Diane? Oh of course, Diane Atems, you and your husband own TechKnight. I heard about your gala a week ago from Janet Rogers.\"\n\nDiane beamed and she and Brandi babbled away for a bit. \"Lord, this is too damn easy. Maybe I should just marry Steve and be the queen bee in Miami if THIS is what counts for \"elite\" ladies.\" Brandi thought to herself.\n\nAfter a bit Diane introduced her to the other players, Mary and a friend named Staci (another trophy wife). Brandi made sure to not show any more interest in Mary than the others and they played several sets of tennis. Brandi made sure to be good, but not so good as to show anyone up. They invited her along for lunch by the pool and they babbled on about various things while eating. Brandi easily fit in, thanks to her research and background build she faked being a Philly socialite with ease. After lunch, she stood up and stretched.\n\n\"Well everyone, this was much more enjoyable than I thought my morning would be. But I need to hit the showers and get cleaned up. Business calls. I do wish I had a nicer place to fix my hair though. I ran a bit late here and need to go directly to my meeting.\"\n\n\"I just happen to have a cabana cabin for today. Why don't you come and use it?\" Mary offered up.\n\nBrandi made the usual protestations about not wanting to impose and so on, and then got up and followed Mary over to the cabana. It was one of the one in the far back and was very out of the way.\n\n\"Perfect.\" Brandi thought with a smile as she nodded at Mary's babble about how busy life was for a young professional woman these days. Mary unlocked the door and let her in. Brandi headed back to the bedroom and Mary followed her.\n\n\"So here is the shower and I will let...muprrrrrrrrmmmmpph!\"\n\nBrandi spun, pushed her against the wall and locked lips. Mary's eyes widened and she made some confused noises for about two seconds and then her eyes rolled up as Brandi scrambled her mind into jelly. Holding it for just a bit, Brandi broke her kiss and then took the mind blasted woman by the hand and led her over to the bed and sat her down.\n\n\"Mary? Can you hear me?\"\n\n\"Yessss.\"\n\n\"Good. Now listen Mary, I need you to just enjoy what is about to happen. You are going to get some nice sleep and have some lovely dreams for a while. You will have a wonderful time Mary, so just lay back and enjoy it.\"\n\n\"Kayyyyy.\"\n\nBrandi leaned in and kissed her again. Mary's eyes rolled up with sigh and she flopped back onto the bed with a dopey contented smile.\n\n\"Feeding time.\" Brandi purred. She quickly ran to the front door, put a do not disturb sign on the handle, locked it and then drew the shades. Brandi stripped naked and then stripped Mary.\n\n\"Nice body Mary, very nice. Nice muscle, shaved pussy, mmm, your tits a bit too flat for my tastes, but that's fine, It's not like I am going to be you forever.\" Brandi said as she leaned down and spread Mary's legs.\n\nBrandi swirled her tongue around Mary's clit and she giggled at the babbling moan Mary gave out. Brandi could feel her getting wet fast as she worked her clit and then slowly licked down to her lovely tight pussy lips. She eased her tongue inside her pussy and she felt Mary's body just melt with a bubbly cooing sound coming from Mary's mouth before dying out.\n\nBrandi felt the link and enjoyed the waves of pleasure as they began to course through her body. \"Uhhhhhhhh, yeah...Mmmmmm, God, I can never, ssssss, never get enough of this feeling.\" Brandi moaned out as she began to finger herself with one hand while licking and sucking with her mouth.\n\nBrandi scanned through Mary's mind and moaned again. \"Damnnnnn, what a bland sex life! Your hubby needssssssss, uhhhhhhhhh, needs to fuck you more!\"\n\nBrandi mentally shook her head at Mary's memories. She did love her hubby, but he was not exactly a firecracker in bed. In fact, it appeared to have been several months since sex. Mary appeared to usually get herself off in the cabana once a week using some hidden toys or her fingers.\n\nBrandi sucked and then shoved two of her fingers into Mary's slit. Mary gasped and let out a loud mewl and squirted all over Brandi's face. Brandi giggled and licked her fingers.\n\n\"Nice squirt Mary. But we are just getting started. Time to have some real fun.\"\n\nBrandi started to position Mary's body.\n\n\"KNOCK! KNOCK!\"\n\nBrandi spun and looked towards the front.\n\n\"Fuck me. Go away.\" Brandi whispered.\n\n\"KNOCK! KNOCK!\"\n\n\"Mary? Its Diane. I need your help on something, can you spare a minute?\"\n\nBrandi prayed that Diane would simply go away.\"\n\n\"KNOCK! KNOCK!\"\n\n\"Mary! I just need a minute!\"\n\n\"Damn it bitch just go away!\" Brandi hissed. She got up and peeked out the door into the front room. Brandi could see by how the shadow stood against the blinds that Diane was trying to peak in.\n\n\"KNOCK! KNOCK!\"\n\n\"Mary! Open this door NOW!\"\n\nBrandi growled and put on a bathrobe. \"Guess there is no helping it.\" She muttered as she strode forward. She positioned herself behind the door and unlocked it. She pulled it open and stood behind it as Diane strode in.\n\n\"About time! What took yo...\"\n\nBrandi shoved the door shut, pinned Diane up against it and locked lips. Brandi wasn't nice about it, and she simply blasted Diane's mind into paste with her kiss. She held it and held it until the kiss broke because Diane simply dropped to the floor in a heap.\n\nBrandi scowled at Diane's comatose form. Her eyes were rolled up into her head so far only whites could be seen and her face had a massive grin plastered across it. She was still dressed for tennis.\n\n\"Damn it, I did not need this complication. I can't chance that she will stay out after I transform long enough for me to wake up and leave. My kisses work, but not quite as long sometimes. Fuck. What can I do?\"\n\nBrandi thought for a moment. She had come prepared for moving Mary secretly to her car and getting her to her house where she would dump her in bed with her husband once Brandi had scanned him and figured out if he was the sole boss or not. \"I could tie you up and leave you. But that will raise questions. I guess I will have to eat you out and rip out your memories.\"\n\nBrandi grabbed Diane by her wrists and started to drag her towards the couch when she stopped and giggled. \"Hmmm, never had a threesome before. That might be fun.\"\n\nBrandi dragged her into the bedroom and dumped her on the bed. Brandi moved Mary around and eased her legs apart. \"I wish I didn't always knock people out because this is going to be a bit crazy. Okay, Mary here like this, and Diane over here, yeah, this works. I can plug in with Mary and eat out Diane at the same time, that should fry both of them long enough for me to recover and get out of here with Mary in the bag.\" Brandi said to herself as she stripped down Diane.\n\nBrandi pursed her lips and smiled. Diane was about thirty and had a very nice body. Brunette with a lovely sheen to her hair, a bigger bust, maybe a 34 BB and a more hourglasses figure. In shape, but not that hard athletic shape Mary was in. Diane had the \"hot trophy wife\" bod, and Brandi could appreciate it.\n\nBrandi giggled. \"Well girls, this is a first. Let's all have fun hm? Silence is consent so okay here we go!\"\n\nBrandi gave Mary another kiss and then licked her clit and pussy. She eased between her legs but didn't quite connect yet. She then turned her upper body and lowered her face down between Diane's legs and gave her clitty a kiss.\n\nDiane tensed, gasped and then let out a long sigh and Brandi felt her victim go limp. The initial wave of pleasure hit Brandi and she gasped and then sighed as it washed over her. She pushed her face deep into Diane's pussy and as the pulse of pleasure washed over her she ground down into Mary.\n\n\"HHHHHUUUUUUUUUUHHHHHHHHHHHHHH!\"\n\nBrandi hardly recognized the sound coming out of her throat as she got plastered by the double wave of pleasure. Brandi just stopping thinking for a bit and she felt like she was floating in a lovely soft cloud which enveloped her and just took away all her cares. It felt so wonderful and peaceful and she felt her body simply go limp as a massive orgasm washed over her and she blacked out.\n\nBrandi blinked and lifted her head. \"Oof. Wow. THAT was intense. Damn, knocked me out.\" Brandi looked over at the clock on the bedstand and let out a relieved sigh. \"Whew, only about ten minutes. Good Lord, What a mess.\"\n\nBrandi looked and giggled. Diane's pussy was soaking wet and it looked like she had wet the bed, her legs were coated in juices and cum and she was snoring soundly with a look of complete bliss. Brandi looked at Mary and both of them were soaked from the waist down and the wet actually squished as Brandi moved a bit.\n\n\"Wow. Okay, well that probably knocked them out for a long time, but I still need to do this. Let's try again.\"\n\nBrandi repositioned everyone and started again. This time Brandi started with Mary.\n\n\"Uhhhhh, mmmm, 'kay, here we are, mmmmmmm, soooooo good. Now for Diane.\" Brandi gasped out.\n\n\"HhhhhhhhhUuuuuuuuuAAAAAA!\" Brandi nearly passed out again but she forced her mind to function and after the initial wave passed she found herself able to focus.\n\n\"Ooooooo, focus bitch! Hnnnnn, waves, coming in patterns, here is the nexttttttttttttttttlllooooooooo, WHOA! Yeah! Okay, I got this. Focus Brandi, FOCUS!\"\n\nBrandi found that as she worked her pussy and her mouth she had somehow linked everyone. She had been able to get the waves of pleasure synchronized so instead of a constant blast of pleasure it was like a timed pulse. She could work a bit, brace for the pulse, ride it and then continue. Not a quick job, but it was working.\n\nBrandi started by scanning Diane to see if she had anything useful to take. After seeing that she had nothing that really stood out she started to identify which memories to pull out. She decided to leave the tennis and lunch memories as there was another witness that she might not be able to get to. As she was preparing to pull out the memories of going to the cabana she noted something.\n\n\"What is this? This seems, uhhhhhh, strange. It's like the memory isn't solid? Malleable?\" Brandi hissed out. She was seeing the folder with Diane's memories of that day, but when she reached into it and began to scan it, it seemed to be less permanent. When she backed off, it seemed to revert to solid.\n\n\"What is, uhhhhhhhhgggggggg, mmmmmmmm, this is so fucking good! What is happening here? It's like I am making this soft, changeable. How the hell am I doing this? Hhhhhhhhhh, ssssssssss, hold it!\"\n\nBrandi had reached into the memory right as a pleasure wave hit her and the memory seemed to almost melt. It was like the pleasure waves were boosting her.\n\n\"Boosting. Hang on, let's see, ahhhhhhhhhhhuuuhhhhhhhhhh, GOD! So amazing! Focus Brandi, FOCUS! Boosting, boosting, boosting. Let's see \"grunt\" how this looks with Mary!\"\n\nBrandi was able to pull out of Diane's mind and dove into Mary's mind. Brandi scanned around and Mary's mind seemed just like the others she had dived into, but she noticed something she hadn't before. Mary's mind seemed to be \"running\" for a lack of a better term like it was in neutral, idling almost. Brandi had full access and full control and it seemed easier that before.\n\n\"Huh, maybe, ahhhhhhhhhhhh, ssssssss, FUCK! How about both of them at once?\" Brandi hissed and then focused. Brandi felt a jolt go through her, not a wave or jolt of pleasure, but almost like she had forced a car gear to shift and it popped into place. Brandi mentally blinked and then giggled.\n\nBrandi was \"seeing\" two tables, neatly labeled as \"Mary\" and \"Diane\" and she saw her own table above them and linked by what seemed to be a line or cable or something. \"Probably just my mind putting this in terms I can understand\" Brandi thought. But the cable from Mary to her table was bright blue and pulsing. Brandi looked at it and then realized that her table and Mary's table seemed to be pulsing together like they were synchronized. Diane's cable was much dimmer and when Brandi and Mary's tables pulsed Brandi could see a blue light seem to snake partially down the cable towards Diane's table.\n\n\"Wow. Uhhhh, okay, I seem to be linked with Mary right now. Ooooooooo, sssssssss, God this is so fucking amazing! Focus! Let's check out Diane here. Uhhhhh, alright, there, uuuuuu, there is her memories of today, and they seem almost like dough or clay or something. Like I can manipulate themmmmmmm, uggggggggggg! SO fine! Focus bitch!\"\n\nBrandi hissed and moaned for a bit and let the pleasure course through her as she examined Diane's memories. After a bit Brandi decided to try something.\n\n\"Okay, here, aaaaaaaaaammmmmmmmmm, so lovely, so here is Diane's memory, she knocks on the door, uhhhhh, I grab her, jumbled.\" Brandi focused on the door and thought \"No, the door didn't open.\"\n\nBrandi jerked and nearly broke the connections as Diane's memory seemed to blink and then change!\n\n\"Fuck me! I did it! Uhhhhhhhhhh, God Damn! I DID IT! I changed her memory to what I wanted it to be!\"\n\nBrandi laughed and rode the next wave with loud moan as she surrendered herself to the pleasure. Her head swam and she felt her whole body shudder with pleasure. She nearly blacked out but she was able to focus after the wave passed.\n\n\"Focus girl! You can enjoy this later! Fix things now! How do I want this to be fixed? Let's do some scanning.\" Brandi carefully dove into Diane's deeper memories and found something that would help.\n\n\"Nnnnnnn, there we are! A little side action Diane? Bad girl. Hhhhhhhhhh, oh man so good! About every four weeks, uggggghhhhhh, no one knows? Wrong. Mary knows.\" Brandi focused and suddenly Diane's memory showed that she had confided in Mary about her affair. \"And Mary loves to live vicariously through you.\" Brandi focused again and Diane now thought that Brandi had loved to help her get away with it, enjoying helping her best friend to sneak around and fuck her lover silly.\n\n\"And that is why you are here Diane. You, ahhhhhhhhhhssssssssss, Damn it, damn it, damn it! So wonderful! You came by to meet your lover in Mary's cabin. And you did and he bonked you silly and you will wake up knowing he fucked your society brains into the floor!\" Brandi hissed and then jerked as she orgasmed again.\n\nBrandi nearly passed out again. She could feel her energy waning so with one last look to make sure the changes took, she pulled her head to the side and broke the connection.\n\nBrandi gasped for air and hear a loud moan from Diane and then heard a loud thump. Brandi was able to make out one of Diane's legs on the bed, but it appeared that she had orgasmed so hard she had fallen out of bed.\n\n\"Hhhhhhhhh, well, better you than me. Okay Mary, time to become you!\" Brandi scanned herself, found Mary's file (right next to Diane's) and activated it. Brandi let out a ear-splitting scream and her eyes rolled up into her head and everything went black.\n\nBrandi felt like shit.\n\nBrandi could feel the sheets, sticky, wet, and gross. Her whole back side seemed to be covered in nastiness. She opened her eyes and after several tries was able to roll over. Diane's leg was still lying there and Brandi would have giggled if she had the energy.\n\n\"Uh, I thought I had this figured out with the extra food and pep pills and so on. I guess a threesome is way more taxing. Lord, I have all these great powers, but it takes so damn much energy and sex to use them. Uh, time to get clean.\" Brandi thought.\n\nBrandi rolled over and sat up. Mary was still completely out. Brandi pried open on of her eyes and it was still rolled up into her socket. \"Well, she won't be up anytime soon.\" Brandi muttered. She rolled off the bed and checked Diane who was just as out of it. Brandi straightened and checked herself out in the mirror. Mary smiled back at her.\n\n\"Ok Mary, time to get to work.\" Brandi glanced at the clock which showed just after five. \"Good. Glad I took those pep pills and that glucose prior to this. I am pretty beat but not completely wasted. If I am going to threesome and memory change I need to take more prior.\" She said as she went into the shower. She cleaned up, changed into Mary's clothes, put on her wedding ring (and admired the large diamond in it), and blew a kiss into the mirror.\n\nShe then tied Mary up with some special padded zip ties (they didn't leave a mark on the wrists), gagged her, blindfolded her, and gave her a sedative shot that would keep her out for at least 8 hours. She dragged Diane up into the bed and pulled the covers over her. She would wake up thinking she had just spent the afternoon with her lover having some wild sex.\n\nBrandi pulled out a large, folded duffle bag from her gym bag and stuffed Mary into it. She then dialed up the desk and asked for her car to be pulled up front and for a luggage cart. A bellhop quickly showed up and Brandi eased the bag with Mary (padded with some towels) onto it.\n\n\"Please don't disturb the room until tomorrow. My dear friend Diane had a bit too much wine and she is sleeping it off. Just let her rest.\"\n\nThe bellhop nodded and made sure to leave the \"Do Not Disturb\" sign on the front door. Brandi smiled as she strode down the path, past the pool, saying hello to several friends, and then to her nice sports car. She assisted the bellhop in loading her bag into the truck (\"It has some fragile items I just purchased this morning, wrapped in towels, but you can never be too careful\") and then with a smile and a wave she zipped off towards Mary's home.\n\nShe pulled in just as David was getting out of his car. He smiled at her and she walked over and gave him a nice peck on the cheek.\n\n\"Good evening Dear. How was work?\"\n\nDavid smiled and shrugged. \"Oh, same old. Digging some more dirt on Counselman Jones, I should be able to bring charges in a couple of weeks once I sort this latest batch of taps.\"\n\nBrandi checked her memories and then nodded. \"Good. That man has no manners and is just a loud jerk. Of course he would win in his district though, no class there at all. No respect for proper society.\" She said with a smile.\n\nDavid chuckled and took her hand. \"Well, let's eat. I see you are a bit late today. Something wrong?\"\n\n\"Oh no, Diane stopped by at the club and we ended up having a long girls stuff talk, ran late. Diane had a bit too much wine and, well...\"\n\nDavid laughed. \"Yeah, I can see that. Not that it's a bad thing, sometimes you need to let off some steam.\"\n\nThey went into the kitchen and Brandi set out the dishes as David heated up some leftovers from the night before. Brandi popped a bottle of wine and they ate. Brandi was glad she had stopped by a fast-food joint on the way home and eaten a lot more otherwise she would have probably devoured the entire meal by herself.\n\nThey made light talk and then Brandi went upstairs to her drawing room while David went into his study and started to do some more work. After a few minutes to let things settle, Brandi quietly changed into some sexy lingerie, slipped out and made sure the doors were locked, the house was clear, shades were drawn, and things were ready. She snuck into the garage and made sure that Mary was still sleeping peacefully and could breath and then she slipped upstairs and knocked on David's study door.",
        "She moved in, wearing a lovely lace see-through robe and smiled broadly. David looked up and did a double take. \"Mary? Uh, wow...you look lovely.\"\n\nBrandi smiled and giggled. \"Glad you like it. I was thinking it's been a bit, and maybe I could spice things up a bit.\" Brandi put some sway into her hips, not her elite escort level sway, but the \"I'm wanting my hubby turned on\" sway.\n\nDavid pushed back away from his desk and smiled. \"It has been awhile.\"\n\nBrandi glided around the desk and moved up to him. She put a hand on his shoulder and said \"I think that all work and no play is a boring evening. Can't this stuff wait for a night?\"\n\nDavid eased up and took her in his arms. \"You know what? I think so...\"\n\nThey kissed and Brandi buzzed him a bit. He staggered back a bit and then grinned. \"Wow. It HAS been a while. That was... nice.\"\n\nBrandi turned slowly and looked over her shoulder. \"Well then, if you want more, follow me.\"\n\nBrandi giggled as she heard David swallow and follow her to the bedroom. She took his hand and led him to the bed and sat him down. She leaned down and kissed him. She could feel his body start to relax and then she grabbed his head and let him have a mind melter kiss. He was already pretty dopey so he didn't even really stiffen in surprise. After a few moments she broke the kiss and David's eyes rolled up and he fell back onto the bed.\n\nBrandi went to the door and locked it. She then pulled out her bug sweeper and her noise generator and checked the room over, and then the closet and the bathroom. No bugs detected so she got to work.\n\nBrandi stripped David naked, pulled him up into the bed and then stripped naked herself. She grinned at the passed-out man.\n\n\"Time to wake up a bit baby. Mary needs some love.\" Brandi waved some smelling salts under David's nose and after a few passes he opened his eyes. He looked stoned and confused. Brandi leaned over and kissed him.\n\n\"Baby, let's have some fun. Here, suck on my nipples, it turns me on. I promise you do this for me and you will love what happens next.\"\n\nDavid looked a bit confused but started to suck when Brandi shoved her nipple into his mouth. She immediately started to produce some milk and David gagged a bit. \"Swallow baby. Do it for me.\" She cooed and David swallowed a mouthful. Once he had his eyes got even more glassy and he was soon sucking away and swallowing in obedience to Brandi's commands.\n\nAfter several mouthfuls, Brandi pulled her tits back and then kissed him. She scanned him and found him completely doped and out of it. Brandi kissed slowly down his body and then licked his cock. She felt the jolt of pleasure course through her and felt David's body completely relax. She kissed and licked and sucked a bit and then when he was nice and hard she moved up and straddled him.\n\nBrandi moaned as David's cock slid into her and her head rolled back as the connection was made and pleasure flowed through her.\n\n\"Ooooooooooo, yes! That's the stuff baby. Yeahhhhhhh.\" Brandi moaned out as she enjoyed the wave rippling through her. She shuddered and she moaned again. \"Sooooo gooooddd.\"\n\nBrandi took a breath and concentrated. David's mind opened before her and she began to scan his mental desktop. He was very organized and Brandi quickly found the file labeled \"Kory\".\n\n\"There we are baby. Let's see what we have here. Uhhhhhhhhhhh, yeahhhhh. Okay, huhhhhhh, what is this? Fuckkkkkkk.\"\n\nBrandi felt some anger as she dug through the folder. \"Damn it! He's just a patsy too! Kory is giving him instructions just like the rest. Wait up.\" Brandi hissed. She scanned some more and then jerked as she felt Davis cum inside her which triggered her own orgasm. She rode the wave and then focused again.\n\n\"Fuck me! This is crazy! Damn it!\" Brandi hissed as she confirmed what she had seen.\n\n\"UhhhhhhhhHHHHHHHHHH!\" Brandi began to bounce up and down on David's cock and quickly got him hard again and then let the pleasure blast through her.\n\n\"YESSSSSS!\" Brandi howled as David came again and she did as well. Brandi jerked and shuddered broke the connection as her body thrashed. Brandi flopped back on her back and lay there for a bit enjoying the rush. After catching her breath she sighed.\n\n\"Crap. Well, the bitch is a genius after all.\" Brandi said softly. She got up and went into the shower and cleaned up. She put on some workout clothes and went into the garage. She opened the truck again and untied Mary. She was able to fireman's carry her still comatose body into the bedroom and flopped her down next to her husband. Brandi kissed her and scanned her and then did the same to David.\n\nShe sat down and thought a moment.\n\n\"I got what I needed, sort of. Mary's mind is completely jumbled from about the lunch on. She remembers lots of crazy sex and so much pleasure it overloaded her. David's mind is blitzed from dinner on. I can chance that they won't be able to connect the dots in any meaningful way and just go on my way, and I think I will. If anything, they will likely be too embarrassed to bring it up with one another.\"\n\nBrandi regarded the now snoring David. \"Damn, for all your education and hotshot lawyer stuff you are just a front man for a fucking stripper!\"\n\nBrandi shook her head. \"I can't believe this. KORY is the boss! Why in God's name is she still stripping with all that she has going on? Smart set up though. Really clever. Anyone who connects the dots is going to think she is just the go-between and that one of the other players is the real boss.\"\n\nBrandi got up and headed out the backdoor after turning off the lights and waiting a bit to see if there was anyone out there watching the McLean's place. Her discovery made her a lot more nervous than she had been as she started putting the pieces together.\n\nBrandi ducked out and hopped the back fence into another backyard. She moved down to the side and then over into another backyard. She moved carefully and slowly always checking to see if there was a dog before leaping over. It wasn't really late yet, so she took her time until she got out of the housing area. She quickly walked down the street a bit and then took a bus to the end of the line. After getting off she hiked a couple of miles to a random location and called up an Uber which she took back to a hotel room she had rented.\n\nOnce in the room Brandi changed and dumped Mary's clothes down the trash chute. She then swept the room for bugs, and not finding any she dialed up an escort she had reserved for a very late night and as soon as she was on her way, Brandi sat back and thought some more.\n\nThe DA was owned by Kory. Kory had found out that David had taken some payoffs early on as an Assistant DA. The guy who paid him off was dead in a car accident, but Kory had the proof. She had not let David know how she had gotten it, but she had used it to put him under her control. They went back nearly five years. Kory had helped him along the way, providing all sorts of information and informants and had helped build his reputation as \"The\" DA who could take on corrupt politicians and win.\n\nIt was all bullshit though. Kory had been using him to go after others she couldn't get leverage over. From what Brandi could tell Kory was controlling or using dozens of politicians, union leaders, managers, city officials and police to keep tabs on everyone. Some were willing pawns out for money, revenge, or for power as Kory got them moved up by either having their bosses removed or by feeding them information that allowed them to shine and get promoted.\n\nThe DA was one of her key players and Kory spent so much time with him not because they were fucking but because she always had lots of instructions for him and he had lots of information for her. Brandi was pretty sure that the cop Megan was the other half of Kory's power set up in this aspect. At least, based on what the DA knew that is what it appeared to be.\n\nAnd Kory was ruthless. Although the DA didn't know for a fact, he suspected that Kory was responsible for at least a dozen hits on some mob figures, cops, and a couple of politicians using information he provided. Kory had hinted that so long as he was a \"good little puppet\" he and his wife would be just fine.\n\n\"I didn't hear you bitch when I gave you that information about Big Jimmy. That case MADE you. Which means I made you. Which means I OWN you. So you do as you are told little man, and remember Kory has your balls on her wall and knows where you and your wife live.\"\n\nBrandi frowned at that memory. \"Damn. He was, is, terrified of her. But now what? I know who the boss is, but still don't know why she is doing this. David didn't know about that.\"\n\nBrandi glanced at the clock and then shrugged. \"My little playmate is coming, so I had better get ready.\" Brandi poured herself a drink, dimmed the lights a bit and waited. Her escort, a cute looking Chinese girl named May, arrived and after having a drink, Brandi scrambled her mind. Brandi then drank a bunch of glucose laced drink (the emergency stuff for dehydration) and ate a lot of power bars.\n\nBrandi stripped the escort and eased into position. She was well fucked from her day's efforts so she just linked up and focused. She activated her Lucinda file.\n\n\"That's it! Euuuuuuuuggggghhhhhhhhh!\" Brandi cried out as she felt the change hit her. She concentrated and felt her body morph and change. Her head rolled as the wave seemed to crest and begin to go back down.\n\n\"BAM!\"\n\nBrandi's head whipped around and she had just enough time to see a large man stride in and stop dead with a surprised look on his face before the wave of change knocked her out.\n\n \n"
    ],
    "authorname": "Moosetales",
    "tags": [
        "mind control",
        "girl or girl",
        "girl on guy",
        "threesome",
        "brain washing",
        "transformation",
        "drugs"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/blow-your-mind-pt-08"
}