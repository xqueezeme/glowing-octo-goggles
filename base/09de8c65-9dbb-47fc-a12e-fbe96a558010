{
    "title": "Boss Nanny Ch. 22",
    "pages": [
        "\"Dad! Dad! Daaaaaaad!\" Aidan shouted from the pool. All the waving and yelling would've sent the kid straight to the bottom if Kase wasn't standing there, making sure he stayed on his back.\n\nAidan wouldn't stop hollering until Seamus acknowledged him, so Seamus paused his conversation with Will and Scott and waved. It doesn't matter how many times a parent says 'can't you see I'm talking?'. Yes, they can see you. No, they don't care. At some point it becomes easier to just give the kid what he wants.\n\nSeamus grinned at Aidan's too tight goggles and hilariously adorable nose clip. Could the poor kiddo even breathe? Must have because he smiled just fine, waved enthusiastically, and went back to learning to swim like he hadn't just made a scene just for a little attention.\n\nThe proud dad couldn't help but watch as Aidan mastered his swim skill. The kid was a natural. That wasn't a statement made lightly or out of bias. Kase, who might have played football in college but he had been swimming competitively since he was eight, agreed. So much so, he was spending his entire vacation in the water with Aidan because he knew Aidan had a gift that needed nurturing.\n\nAidan switched to the front stroke, and Seamus was all but forgotten. He made his way to the other side of the pool where Jay was lounging, waiting for him to return with his refill.\n\n\"Thanks!\" he said as he took his iced coffee and offered his knuckles for a bro tap. \"Where's Matt? I haven't seen him for a while.\"\n\nSeamus took a sip of his iced tea and settled into the lounge chair. It was hot. Really hot. Lucky for them it wasn't too humid, making it the best time of year to vacation.\n\n\"He's napping. I imagine he'll be up soon.\"\n\nJay grinned and made some weird grabbing motion with his hands. He looked like a gremlin plotting to steal something valuable. Seamus laughed. \"What the fuck are you doing? You look like an idiot.\"\n\n\"I'm getting ready.\"\n\n\"He won't want to be around you if you're weird.\"\n\n\"Whatever,\" the giant scoffed. \"He loves me. I'm his favorite.\"\n\n\"Not in those shorts you're not.\"\n\nJay looked at his neon floral shorts, then at Seamus, totally offended. \"These are amazing.\"\n\n\"They're terrible.\"\n\n\"Loren likes them,\" he rationalized.\n\n\"Loren gets paid to show the world he's wearing them. Extra points if his famous boyfriend is matchy matchy.\"\n\nJay eyed Seamus, then smirked. \"You're jealous.\"\n\n\"Of what?\"\n\n\"Of how cute Loren and I are in our matchy matchy outfits. You want to be matchy matchy with Matt. Don't deny it.\"\n\n\"Did you call me over here to annoy me? If so, I'll go back to Will and Scott. They were being nice.\"\n\n\"Don't be lame. I actually wanted to talk to you about something important.\" Jay conveniently paused and took a drink of his iced coffee just to annoy Seamus. But Seamus didn't give in, which annoyed Jay. \"We've decided to move here,\" he finally said. A bit bummed at that lack of want from his friend. Where was the joy in holding juicy information if the person would not beg?\n\n\"What! Really?\" Seamus couldn't hold back his grin.\n\n\"Don't seem so surprised. With the business getting ready to launch, it was a no brainer. I need to be here. And more than that, I want to be here.\" There was nothing but conviction in his voice. He had made up his mind and there was no changing it.\n\n\"What about Loe? Is he onboard?\"\n\nJay's eyes flashed over to his lover. \"Yeah, he sees the advantages. It makes sense from a business perspective.\"\n\n\"And from a personal perspective. Did he turn you down again?\"\n\nJay shot him a look that said 'stop'. Seamus couldn't let it go. Jay was his best friend. \"Is he really so against marriage?\"\n\n\"You've seen him turn me down more than once.\"\n\n\"It's not like you were serious when you asked him.\"\n\nJay turned his head and looked at Seamus, one brow reaching the sky. \"I've been dead serious since day one. You know it, he knows it, everyone knows it.\"\n\nIt was crazy to Seamus. Why would anyone be hesitant when it came to Jay? The guy was the platinum package. Seamus sometimes wondered if Loren was even good enough. Matt seemed to think so, but Seamus wasn't convinced.\n\n\"Loe and I talked a lot about the future and what that looks like. It doesn't involve kids of our own and that was hard for me. It was also a willing sacrifice for the man I love. But I need to be an uncle. I want sleepovers and car rides and ice cream trips. So, as much as moving closer to you is for the business, it's for me. It's for us.\"\n\n\"And Loren's okay with that?\" he asked. \"I know he was pretty set on staying.\"\n\nJay grinned. It was cocky, a little smug, like he had the most desirable secret. \"He has a hard time admitting it, but Loren loves being an uncle. He loves being part of a family.\"\n\n\"Why would that be hard to admit?\"\n\n\"Because foster care can mess with a kid. He might not want a kid of his own, but you should see him every time you drop the boys off. He transforms. He wants what I want. He wants nephews to love on. So we're both putting our houses on market in Washington and looking for something here.\"\n\nSeamus reached over and squeezed Jay's hand. His friend had always wanted the American dream with the spouse, the picket fence, and the two-and-a-half kids. Giving up a big part of that had to be devastating, but it was no surprise he'd do it for the man he loved.\n\nTruth be told, Seamus couldn't be happier. He wanted his friend near. And since Matt and Loren had become close friends, the proximity could only enrich their lives.\n\n\"Well, you won't find me trying to talk you out of it. We'd love having babysitters that live right down the street.\"\n\n\"Speaking of--\" Jay nodded toward the house with a larger-than-life grin.\n\nMatt was standing behind the wall-to-floor glass door, holding Carson. The pair had deep creased lines from the hard afternoon nap and were rocking the same not-quite-awake look.\n\nMatt caught his eye and smiled. It was lazy and sleepy and did all sorts of things to Seamus's stomach. Matt pointed to Seamus and said something to Carson. He grabbed the one-year-old's hand and made him wave at his dad. Having barely been awake for two minutes, Seamus's little doppelganger couldn't handle the attention and bashfully burrowed his face into Matt's chest, making all three men smile.\n\nSeamus rubbed his chest. His heart was beating funny as Matt brought their newest addition over.\n\nJay was doing that creepy-gremlin-hand-grabbing thing again. It looked less creepy now that Carson was in view. The way the retired football player looked at his nephew was akin to hero-worship. Strange how roles can change so easily. He couldn't take his eyes off the tiniest redhead.\n\n\"C'mere my sleepy tater tot,\" he cooed. Like he couldn't bear to look away, he kept watching the incoming duo as he spoke to Seamus. \"I still can't get over how much he looks like you. It's freaky. Did you pay extra for a carbon copy?\"\n\nSeamus laughed. \"That's not how it works, dumbass.\"\n\nCarson grinned and leaned toward Jay with gusto. The move was so swift that Matt almost lost his grip. Jay lunged forward, just in case. Even though he was safe, Jay still took him. As happy as Carson was to be with his uncle, he had just woken up and was still sleepy and not ready to people. Carson was quick to lay across Jay's chest and watched everyone.\n\nThere was certainly plenty to watch. Vacation had transformed drastically over the years. It went from just the boys to a whole out-of-control situation. It started with the addition of Matt and Aidan, then Will's girlfriend. It tumbled downhill after that. They were at the point where they stopped keeping track of how many people were there, but Kase was in the pool with Aidan, Hilary was in the house prepping dinner, Brad was on his third round of volleyball, Jay's closest friends/teammates were scattered with their kids, and Loren's friends were milling around with theirs.\n\n\"If you guys are set, I'm going to sneak off. I need a break,\" Matt said. \"I'm exhausted.\"\n\n\"You just woke up.\"\n\nOh Jay. Seamus leaned back with a grin and sipped his iced tea. He loved his front row tickets to the Jay and Matt show.\n\n\"Don't start. Last time you took the boys, you had bags under your eyes that rivaled the Kardashian's luggage,\" Matt deadpanned, trying to drop Jay with a look as well.\n\n\"Carson was six-weeks old and Aidan had allergies. He was up all night snoring!\"\n\nMatt made a face, mocking Jay for his line of excuses. Blah blah blah, kids are so hard, blah blah blah.\n\nWhen the two got together, they acted like twelve-year-olds. Seamus lived for it.\n\nCarson smiled. The banter was not new. He and Aidan found it funny. Mostly Aidan. He loved it when Matt and Jay battled it out.\n\nSince Jay was bickering with Matt, Seamus stole Carson and laid him across his chest. Matt was quick to notice the change and, without breaking from their back-and-forth, rolled the giant umbrella from Jay to Seamus.\n\n\"Are you serious?\" Jay whined. \"There's five other yardbrellas and you steal mine? Right there!\" he pointed to an umbrella that sat less than ten feet away. \"There's one right there and you took mine?\"\n\n\"These two are redheads, they obviously need it more than you. Don't be selfish, Jay. It's not cute.\"\n\n\"Hello, I'm blonde. Blondes have fair skin. Just ask Shawn. Where's Shawn?\" He looked around for his uber smart teammate that had stats on literally everything. \"He'll back me up.\"\n\nMatt adjusted the umbrella so Seamus and Carson were protected from the sun. \"Sure, some blondes have fair skin but you don't. Just a fair personality that needs protecting.\"\n\nSeamus burst out laughing and Jay's mouth dropped at the betrayal.\n\n\"What? That was funny.\"\n\nJay grumbled his displeasure as he settled back in the chair. Matt kissed Seamus and Carson then left for his alone time. He didn't go far, just the other side of the pool where Kase would end up when he finished with Aidan.\n\nSpeaking of, Aidan looked up at that moment and spotted his dad and brother. He was quick to break away from Kase to the pool ladder. He climbed out quickly, water rushing off his shorts and onto the hot concrete.\n\nSeamus braced himself for impact. When Aidan came at him, he came hard. No consideration for things like his baby-maker. Heaven forbid they want a third or a fourth down the road. He shifted Carson out of the danger zone. Sure enough, Aidan flew onto Seamus' lap, making him double over with a loud 'ooofph'.\n\nCarson started whining. Not only had he been jostled from his rest, but his older brother was wet and cold. Not something he wants to deal with after a leisurely afternoon nap.\n\n\"Hi Brother!\" He said with a pinch too much enthusiasm. He wrapped one arm around his little brother and peppered his face with kisses. Aidan had been waiting hours for Carson to wake up. \"You want to go swimming with me? I can teach you. I can back swim and hold my bwef!\"\n\nAidan kept talking to his brother and touching his face and his cheeks and his nose. Carson's grumpies instantly disappeared and he smiled and giggled at the affection.\n\nSometimes, Aidan lacked the Midas touch but Carson never seemed to mind, not even when Aidan wanted to carry him around like a sack of potatoes. Where Aidan was in the ninetieth percentile, Carson was in the tenth. The kid was tiny. Perfect life-size toy for Aidan.\n\nWill and Scott pulled their chairs over and joined in. They were both married but Seamus was the only one of the board members with kids. It was quiet for a few minutes as the boys settled into a cute snuggle ball as everyone watched with great fondness.\n\nEventually, Will broke the calm silence. \"Aren't you glad you never gave up?\"\n\nSeamus chuckled to himself as he looked at the mop of wet brown hair and the mop of messy red sleep-tousled hair. Was he glad he hadn't given up?\n\nIt wasn't that he'd given up, he just knew the legal system wasn't likely to favor him. Not when the Jacobson's had so much money and clout.\n\nIt was Matt who pushed the issue. It was Matt who had fought when Seamus wasn't sure if it was worth it. When things kept dragging on and the first year passed and then the next, and things still were in turmoil, it was Matt who made Seamus want to fight.\n\nWas he glad he had Matt by his side? Was he glad he trusted Matt after being burned so hard? Was he glad that Matt knew how to push without making Seamus feel like a failure?\n\n\"So glad,\" he responded.\n\n\"I still think Mike got off easy,\" he said, then growled something that sounded like pansy ass under his breath.\n\nScott shrugged. He wasn't a lawyer but he worked at a law firm and had helped Matt and Seamus flesh out the options when it was time to discuss the dreaded plea deals. \"Here's the thing, as I've told you before, Mike could've gotten fifteen years but likely would've been out in half that. In the meantime, Seamus wouldn't have seen much, if any, restitution. Once Mike got out and found a job, not making nearly what he was before because he's a felon, he'd have his wages garnished and Seamus would get four to six hundred dollars a month if he was lucky. Basically, Seamus would never see the money that was stolen. Especially if Mike decided to file bankruptcy, which is likely. Does it suck that Mike is only serving seven? Yes. But in exchange for a reduced sentence, he had to liquidate literally everything within a year to pay Seamus back.\"\n\nWill stood up. It was his turn. He carefully snatched Carson from Seamus's chest then sat back down. Carson was more awake now, sitting up and smiling. \"Yeah, but Mike stole over $1 million and Seamus only got back $750,000. That doesn't seem fair.\"\n\n\"Would you rather Mike be in jail for fifteen but Seamus only gets back $6k a year with the possibility of nothing? Not only that, Mike would never fully be out of his life because the restitution would go on forever? At least Seamus got a bulk of the money back and he doesn't have to think of Mike again because everything is done.\"\n\nJay held out his phone and smiled when Aidan was quick to ditch his dad. \"I agree with Scott,\" he said as Aidan settled on his lap and effortlessly opened the phone, quickly finding his favorite app. \"A perfect situation is one where none of this happened. But it did. I think if you factor in all the outcomes, Seamus came out ahead.\"\n\n\"And if you go one step further,\" Scott added. \"The $1.1 million that he's owed, includes what was stolen with the help of Gale and Richard. I think I speak on behalf of every law firm in the country when I say we were shocked when the judge made the Jacobson's transfer their business and all related assets to Seamus.\"\n\n\"The business was started and funded directly from the money they stole from him. Therefore it should be his,\" Will huffed, rather indignantly.\n\nScott lifted his hands to calm his friend. Will had been, by far, the most emotional one during the whole ordeal. He was quick to react and slow to reason. \"I don't disagree. It was just a unique verdict. I'm not sure I've ever seen a judge make a call like that. And I'm not complaining, it's in Seamus's favor. It's an established business that will grow quickly now that he and Jay have a plan for it.\"\n\nGale and Richard used the stolen money to start a wholesale coffee business. The ironic part was, they managed to sell the product back to Seamus. The grounds he used at Coffee|Bar was their product.\n\nOnly now it was Seamus's. Well, Seamus, Matt, Jay, and Loren. They were converting the Coffee|Bar into the flagship of what would become a popular coffee house franchise.\n\nLoelife Cafe\n\nThe grand opening was slated in three weeks time and was already generating an insane amount of publicity. It was going to be big. Epic. Seven more locations were already in the planning stages. Some further along than others.\n\nWith Loren and Jay's branding fame, Seamus's business degree, and Matt's eye for finances, they would be unstoppable.\n\nGale and Richard were sentenced to four years but would probably serve two. Not only had they suffered a public trial where they had to give the business back to the ex-son-in-law that they loathed, but several businesses, including their coveted country club, cut ties with them. Turned out, very few of the elite wanted to rub elbows with sleazy felons.\n\n\"It turned out the way it turned out,\" Seamus finally said. It seemed everyone else had more opinions on the outcome than he did. \"All I care about is building something so big that when they get out of jail, they lose sleep knowing that everything I have--everything I built--is a direct result of what they tried to take away.\"\n\n****\n\nDinner was a grand affair. A surprise grand affair that had thrown Seamus off guard. He was pretty sure Matt was behind it, but really, it could've been anyone.\n\nThey celebrated their victory over evil and rejoiced that everything was finished. After years, things were finally resolved and moving forward in a big way.\n\nAfterward, everyone migrated to the patio. It was late but not dark. Giant tiki torches were stationed around the patio and pool area. Loren set up a large table for drinks which he personally made while his friend filmed.\n\nToffee nugget martini, a peach sour whiskey bomb, and a mexican coffee with a twist. Don't ask Seamus what the twist was but people were loving it. Maybe it was coconut. That could be good.\n\nAidan was carrying Carson the way a kid carries a cat--seconds from slipping out of his arms.\n\nMatt was milling around the group, talking to everyone, smiling. Oh god was he smiling. He had a killer smile that never got boring. Matt was clueless as Seamus watched him; his eyes tracking every move.\n\nMatt spotted Aidan holding Carson and quickly made his way over and rescued his youngest. Aidan pouted and followed his dad, stomping. He loved his brother so much it was a problem sometimes. One that had gotten Aidan into a lot of trouble, especially when Carson was much smaller and oh so fragile. Aidan fancied himself a strong and capable brother.\n\nNow that everyone had drinks and Loren could relax, Matt was quick to give Loren a gift in return. Carson. The once reluctant-to-hold-babies had really come into his role as an uncle. And thanks to him, the kids were semi famous. They even had their own hashtags #aidopotato and #littlecarsontot because he was their little tater tot.\n\nAidan crossed his arms and hrmp'd when Carson got handed off. \"Uncle Lowen! I want to be held too!\" And so Loren picked him up. A kid on each hip was a move Seamus was very familiar with. Aiden was almost too big to be carried, but Seamus treasured every strained muscle. Kids grew up too fast.\n\nSeamus was happy. Things were good. Great. There was nothing he would change if he could. He had a great husband, two happy kids, a wonderful father-in-law, and the best group of friends anyone could ask for. If only he could freeze time and keep it right where it was.\n\nHe watched his perfect life. His husband, his kids, his friends. He watched as Aidan ran and jumped into Jay's arms while Matt bopped Carson's nose. He and Loren talked for a minute before the pair took the kids and disappeared. Then Matt looked at Seamus and smiled. He crooked his finger, summoning Seamus. The look was one Seamus was familiar with, one he lived for, one that turned his bones to liquid.\n\nIt absolutely did not matter that he was mid conversation with his friends. He'd been in Mexico for a week, sharing a room with their two kids.\n\nSharing a room. With two kids.\n\nHis friends would understand. In fact, they'd insist. They'd kick his ass towards his husband in a heartbeat.\n\n\"What did you do?\" Seamus asked as he neared his husband.",
        "Matt was grinning. Proud of his handy work. He pulled Seamus away from the group and toward their room. \"We have until eight tomorrow morning.\"\n\nHe followed willingly. Eagerly. Excitedly. Hornily. \"How'd you convince them?\"\n\n\"Jay needed very little convincing and Loren owes me.\"\n\n\"For what?\"\n\nMatt looked back and smirked. \"You'll find out.\"\n\nThey might've had ten hours to themselves but they undressed like they had ten minutes. Matt whipped Seamus's shirt off and then pushed his pants down like a man starving. The heat in his eyes set a fire in Seamus.\n\nTo be needed, wanted, and desired by Matt was an all consuming experience. When he was focused, there was nothing you could do to stop it. Not that Seamus wanted to stop Matt when he was the aggressor. It was hot.\n\nMatt shoved him on the bed then quickly undressed. \"I know I don't need to tell you this but I want to give you a courtesy warning. I'm not going to last long. Maybe if you weren't such a hot dad being all cute with the kids, but you were, and now I need to cum.\"\n\nThe years had definitely softened the fucks given. Not the actual fucking fucks, but the romance leading to the fucking. Matt dropped his clothes and walked to the duffle bag where he packed the lube. He dug through it, mumbling as he went. Seamus laughed. Good thing he didn't need to be wined and dined...just sixty-nined.\n\nMatt stood, victoriously. \"Found it!\" He hustled back to the bed, tossing the lube and jumping on the bed sideways. Seamus flinched, then sighed, then moaned when Matt took him all the way down. He was good like that. Very generous.\n\nWhen Seamus tried to move Matt's hips so he could have some of his own, Matt growled. \"Don't do that. I won't last.\"\n\nToo bad. Seamus wanted him in his mouth. They had nine hours and fifty-five minutes left. They could cum three times by then. Maybe four. Probably four.\n\nDefinitely four.\n\nThe first round was over embarrassingly fast. But the second round was better. The third round happened at dawn and the last round was at seven thirty-five, leaving them no time to shower before rushing to breakfast.\n\n\"Fuck, you made me late. I needed to be there five minutes ago. That was the deal. Loe's gonna be pissed.\"\n\nSeamus was hot on Matt's tail, speed walking down the hall and sliding around the corners.\n\n\"What do you need to do?\" he asked. \"It's not like Loren's not on breakfast duty today.\"\n\nSeamus knew his husband heard him but was suspiciously quiet in reply. As they neared the dining room, Matt glanced back. It was an apology look. A sorry-not-sorry kind of look. Him and Loren were famous for those.\n\n\"Go sit with Jay.\"\n\nThere was no point in arguing so he went and found a spot by Jay. He was about to ask Jay if he wanted coffee or something to drink but Loren beat him to it.\n\n\"Do you want a red velvet latte?\"\n\nJay eyed Loren then Seamus. It wasn't that Loren didn't do special things for Jay, but the way he was doing it, so publicly, was a little out of character.\n\nIt was hard to explain.\n\n\"Do you want one or not?\" he asked, not impatiently. Teasingly.\n\nThere was a regular and ongoing joke between them that started the first day they met. Jay had essentially announced that Loren would marry him. It was just a matter of time. Loren had rolled his eyes, of course. But then Jay was being all sweet and, after bringing him a speciality drink, Loren had looked at Jay with a humorous expression and asked, \"Are you proposing to me?\"\n\n\"Are you saying yes?\" It was the answer that would become his standard, each and every time this scenario played out.\n\nLoren simply shook his head and laughed at the crazy guy he'd just met.\n\nAnd that's how it went. Here and there, now and again, whenever Jay was especially sweet, Loren would tease him, asking Jay if he was proposing. Jay would ask if Loren was saying yes and Loren would laugh it off.\n\nBut now the tables were turned and it was Loren who was being ridiculously attentive. To the point where everyone was taking notice.\n\nJay smiled. \"Sure, I'd love one.\"\n\nLoren wasn't gone for two minutes before he came back with the drink--for which Jay was the one and only recipient. Jay looked at Loe and smirked, enjoying the way their long running joke was now playing out. It was rare, afterall, that the tables turned.\n\nHe took the drink and eyed it with intent, then at Loren. \"Are you proposing to me?\"\n\nLoren grinned. \"Are you saying yes?\"\n\nCopyright \u00a9 2021 Mrsgnomie; All Rights Reserved."
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "gay male"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/boss-nanny-ch-22"
}