{
    "title": "Battle Scars Ch. 04",
    "pages": [
        "I am very sorry it took so long to continue this saga. The demons took control for a while there, and it just wasn't possible for me to be in the world these characters inhabit. The bad things have been banished for now, so here is the latest in the \"Battle Scars\" series. Thanks for waiting. OGB.\n\n\n\nI awoke from a rare dreamless sleep to the sound of a telephone ringing, and then heard my Annie speaking in hushed tones. She took down a number, reciting it softly as it was given to her, and then disconnected the call. I heard her bare footsteps coming down the hall from the kitchen. \n\nThe morning light was beginning to seep through the small bamboo grove surrounding the meditation center outside our bedroom, the leaves tinting the light to a soft green, and breaking the silhouettes on the bedroom wall into indistinct waves of dancing light and shadow. The open glass doors admitted the warm smell of the star jasmine and wisteria near the Koi pond and I couldn't help but smile. The hiss of blowing leaves overrode the sound of the waterfall, and the sounds of fall entered the bedroom to join the smell of approaching coffee.\n\nI rubbed the sleep out of my eyes with the backs of my hands, the left one missing all but the index finger and thumb, thanks to an IED in Iraq. As I sat up in the huge bed, my Piglet came into the room. As had become my custom, I swung my feet over the edge and began to speak as soon as I saw her enter the room. Although I loved to talk with her, the sound helped to guide her to me. \n\n\"It makes my day to see you walk in here. It's like having a dream come true every single morning.\" \n\nShe walked into the room four measured steps, put her left elbow out and slid slowly forward until she felt the foot-post of the bed with her forearm, not even spilling the huge mug of black coffee in her hand, a near twin to the smaller mug in her right hand. She stepped two steps to the left and then three forward, coming to a stop within a foot of my legs. Her wonderful pendulous breasts swung to a stop shortly after she did. \"That looks hot, be careful not to drop in, okay?\" \"Why would I drop it, Pooh, the dangerous part was just getting it here...oh!\"\n\nI had snuck my hands under the tray with the coffee mugs on it and was currently pulling down gently on Piglet's small brown nipples. I rolled them between my thumbs and index fingers, and the hot coffee on the tray held her captive, helpless to escape my friendly assault, although the look on her face made it seem that the last thing she wanted to do was escape. Her mouth dropped open as I worked her nips, and already her pussy had begun to make happy wet noises. \n\n\"Take the tray, Pooh, I want your cock in my hands, okay? Honey, I really need you to take the tray form me. Please take the tray...? DAVID! TAKE THIS FUCKING TRAY BEFORE I THROW IT ON YOU!\"\n\nI took the tray, and when she heard it hit the bedside table, she launched her little body onto mine, grabbed my cock in both hands and stuffed it into her petite little mouth. Her cheeks went concave as she sucked and licked, and as one of her hands slid sown to her crotch, I slid mine over it. Her mouth popped off my dick, and she turned her face to me with a smile.\n\n\"Hands off, mister! This is MY show.\" She growled at me.Her mouth returned to its happy work and took up a tempo to match her hand, and within a few minutes, I was ready to blow and so was she. In seconds, I exploded into her mouth, and she growled some more as she swallowed me, and then collapsed onto the floor as she came. \n\nI pulled her gently but urgently off the floor and simultaneously lay back against the pillows and plugged her onto my still hard cock. Her pussy was still in spasm from her orgasm, and just as she stopped moaning in ecstasy I began to rocket up into her. Her moaning became an urgent keening as her cunt rippled on me, and my eyes locked on her tits, which had taken on a life all their own, jumping and slapping against each other, her tummy and my chest. The slapping noises we made filled the room, and her voice changed again, this time into an open-mouthed whine. \n\n\"uuuuuhhh, uuuhhh, ooohhhh, ooohhhhhhhhhfuuuuuuuccckkkkkmmeeeeee! Gonnacumagain, gonna cummm, gonnacumgonnacumgonnacumNOWWWWWW!\" My balls felt like they were trying to either explode or crawl up my ass as I filled her completely with cum. She fell onto my chest with a wet noise and we both panted like dogs for a couple of minutes. \n\nWhen we finally got our breath back, Annie pushed up a little and 'looked' into my face. \"Oh, you sweet, wonderful stud! I think I entered another dimension. That was so truly fine!\" I just nodded, and after I caressed her face and hair for a while, she laid her head down on my chest and we both drifted off.\n\nWe awoke about an hour and a half after she had walked into our bedroom naked, bearing joy and coffee. I was stroking her face and smiling like an idiot when she woke up. \n\n\"Ack! My thighs are stuck together! Do you always produce so much cum, Pooh? I feel like you've been after me with a fire hose. I think we're going to have to put a vinyl liner on the bed.\"\n\n\"Are you complaining about our sex life? After all, we don't always use the bed. But if it bothers you, we can always stop...\" Like lightning, her hand flew out and groped around on me until it found my mouth and covered it to silence me. \n\nWith a very stern look on her beautiful face, she said, \"This is not a complaint, mister, it's a comment! And if you ever pass on an opportunity to fuck me, I will beat your ass ragged, do you understand me? Honestly, I never knew it would be like this, Pooh.\" She smiled and kissed me passionately for just a second. \n\n\"I think about you and your cock all the time; it's a good thing I'm blind, or I'd be looking around for things to stick up my cunt constantly. If these bedposts weren't so tall, you'd come in one day and find me stuck on one like a hood ornament on a car.\"\n\nI laughed out loud at her. \"That produces all kinds of wonderful images in my mind, Piglet, but none as hot as you.\"\n\n\"You, sir, are a suck up. And that is just fine with me. So... seeing me with a zucchini in my pussy wouldn't disappoint you, then?\" she said, her head cocked to the side. \n\n\"Darlin' you just let me know what you want for toys, and we'll go get them.\"\n\n\"Well, all rightey then,\" she said, not much like Jim Carrey.\n\nI headed for the shower, one of our favorite places, and she came along, holding my damaged hand lovingly. During the soaping up and rinsing down, I remembered that she had taken a phone call in the morning.\n\n\"Hey, sweetness,\" I asked. \"Who was on the phone this morning?\"\n\n\"Oh! I'm sorry Pooh, I totally forgot about it. I was bringing coffee, and then you were playing with my tits, and, well, you know... It was a Doctor Hanson up at the VA in Portland. She was going into surgery, and she asked if you would call her around lunchtime. I wrote down the number on the pad by the phone.\"\n\n\"You are amazing, Annie.\"\n\n\"Bullshit! Any fool can take a phone message. Besides, it good for me to write, so I don't forget how, ya know? Help me pick out some clothes and you can call while I'm getting dressed, okay?\"\n\nAnnie made her way into our closet, her movement guided by subtle tilts of her head to hear reflected sound and by reaching ahead to find landmarks. There was no way I was going to miss out on her getting dressed. I was infatuated with this little woman; I just couldn't get enough of her. I had promised to take her on a bike ride out into the Cascade Mountains today, and so we would be looking for warmish clothes to go under the riding leathers I'd had a friend make for her as a surprise. \n\nFall had already begun to descend on our little valley, and I expected temperatures in the 70's, which meant 50's in the mountains. A great time of year in the Rogue River valley, but cool on a motorcycle. It was a good thing she'd gone shopping.\n\nI had learned a lot about clothes since Annie had come to me, in fact, I'd added a second walk in closet off the master bedroom for my clothes and moved hers into my old one. The closest I'd come to frustration since she'd arrived had been the process of moving her clothes into the closet. I had no idea there were so many colors, and names of colors, and textures, and styles. \n\nMy original plan was just to take the stuff out of her old closet at her old house (now sold off and gone, by the way) and put it roughly into the same place in the new one. What was I thinking? I finally had to back away and call in a friend.\n\nRandy is one of my best friends, and makes an impressive living as the costume shop manager for the local mega-theatre complex we call OSF, the largest Shakespearean festival outside of England. So say the very least, the man knows colors, fabrics and can tell you measurements by looking at you as you turn in a circle. He is also a charter member of the precious circle of my gay friends. \n\nI called him to ask for his help, and I could tell by his voice that by the time I'd finished telling him about Annie, that, one, he was weeping, and two, zombie hordes could not have kept him from organizing Annie's closet, even after what I thought was a clever joke about how hard it would be to get him out of it. \n\nThe next afternoon, Randy arrived with his partner Eric, and after fussing about, treating Piglet like a china doll and getting a new one ripped by her, they got down to business. And business meant that most of the clothing I had so carefully put away ended up flying out of the closet door and going to Goodwill. This, of course, meant shopping, the one thing I dreaded more than overwhelming numbers of armed enemy combatants. And what is so wrong about wire coat hangers? You'd have thought that I had skinned kittens alive from the looks I got from the two amigos.\n\nOne of the things Randy knows about me is my bank balance, so he knows I wouldn't miss the money that I was absolutely sure he intended to spend on Annie. And for some reason, Medford wouldn't do; in fact, I thought Randy's eyebrows were going to fly off his face when I suggested it. Fortunate for me, I had a security job lined up that would take me out of the country for a couple of days, so I didn't have to go to San Francisco with the Wonder Twins and Piglet. \n\nIt had been six months since I first saw Annie at the Medford Airport, and we hadn't been separated since. Randy assured me that Annie was safe with he and Eric, and I believed him, since he was retired from the British SAS, and was possibly more deadly than I was.  \n\nRandy made the arrangements, including a private jet and two nights at the Mandarin Oriental. Thankfully, he had to explain the jet and posh lodgings to her, and not me. She wouldn't hit him, at least I didn't think she would. So I kissed her goodbye and waved at the Citation 7 as it scalded down the runway at MFR, then turned and boarded the more mundane CRJ700 bound for Denver, and then sites offshore. It didn't occur to me until later that she couldn't see me wave.\n\nMy body guarding gig was uneventful, and I returned unkilled from overseas, walking through the door at 11:15 on a Tuesday night. I'd left a voice message on our phone when I got on the plane in Denver three hours before, and Annie stood at the far end of the hallway waiting for me. Except for the automatic light on the porch, it was totally dark in the house. \n\n\"Be a good boy and do exactly as you're told, is that understood?\" she whispered.\n\n\"As You Wish.\" My favorite quote from our favorite movie, \"The Princess Bride\". \n\n\"Follow me.\" She said. She turned exactly 180 degrees and walked away from me into the house. As she passed the wall into the living room, I slid the light switch on silently. She stopped, just out of my view around the corner in the bedroom. \n\n\"Can't you wait to see me by candle-light? I can hear the elements sing as they warm up, Pooh. Please turn them off.\"\n\nI turned the lights off and followed as she walked away from me. Her four-inch heels made her just a foot shorter than I was, but they did amazing things to the way she walked. I heard the soft tinkle of bells, but I couldn't locate them. Later, I asked Randy where he had gotten seamed silk hose and a garter belt tiny enough to fit Annie. He told me that I did not want to know, and I believed him.\n\nI followed her beautiful swaying ass into the bedroom, which had been transformed into a palace of delight. There must have been a hundred candles in the room, the scent they gave off was intense, and they gave off a wonderful glow. Annie stood before me, her shaking hands betraying the fact that she was extremely nervous. Her black gloved hands swept up her body, which was encased in black leather from her little feet to the middle of her breasts, except for a glimpse of thigh where her boots stopped and her corset began. And I do mean corset, by the way. \n\nHer waist is normally tiny, but encased in the rigid embrace of the delightful device she wore it could not have been more than 16 inches around. The corset enhanced her hips and ass, but the biggest focal point was her pubic mound. The corset was cut away from her out-thrust clit and labia, framing them tightly and pushing them even more to the front of her body. The tender flesh framed in the opening of the leather was engorged with blood, deep pink and literally dripping with shiny fluid. Annie's clit looked like a cock, and it strained toward me with a quivering urgency. \n\nNot far above it, her tits were presented on two black leather half-cones for me to stare open-mouthed at. Her nipples extended over the end of the custom-fitted holder, each of them dark, rigid and enclosed tightly in a golden band, from which hung a tiny golden bell. Playing the part, Piglet spread her black boots a little more and as she shook her shoulders, her bells rang softly. A strand of silver mucous stretched toward the ground from her pussy, her large brown labia engorged and two inches long. \n\nHer hips pumped slowly, erotically, as she attempted to contain her passion. A black silk sash covered her empty eye sockets, tied at the side of her face like a pirate headband, and ringlets of her soft hair hung down over her shoulder.\n\nThe effect was absolutely stunning, and I said so.\n\n\"I have never seen, and I will never see, a more beautiful, erotic woman than I see before me now, Ann. You have taken my heart and my soul, and I think that I am happy for the first time since we drifted apart so many years ago. You are so beautiful that I am nearly afraid to touch you. Fortunately you are also so very sexy that I have to take the chance.\" \n\nAnnie smiled and held her arms up to me. I closed the distance between us and took her hands in mine. I placed them on my shoulders and put my hands completely around her waist on the stiff warm leather. I lifted her, as light as a child, and placed her on the edge of the bed, where I knelt between her legs, placing her boots on my shoulders. Her clit stared up obscenely at me, and I took it between my lips and sucked gently. Annie came almost instantly, her body shuddering with release, the little gold nipple bells making a lovely sound. \n\nAs she caught her breath, I retrieved her breasts, which had fallen to drape across her upper arms, and played absently with the nipple clamps. She moaned and frowned in extreme pleasure as I pulled on them one at a time.\n\n\"I could get used to these, love. Very sexy.\" \n\n\"I'm glad you like them, Pooh. I was thinking about having them pierced for you, would you enjoy that?\"\n\n\"I have a hard time imagining you any sexier, but I think that would be very hot.\"\n\n\"So do I; now come up here and lay down on the bed. It's time for me to play with my favorite toy.\"\n\n\"What is your favorite toy, Annie\" I asked. She \"looked\" at me as she climbed up my body. \"My favorite toy, David, is your amazing. Big. Fat. Fucking. COCK!\" She hissed as she slid it inside her fiery cunt and dropped. Her tits followed her down a fraction of a second later, and they spent the next few minutes trying to catch up. \n\nFortunately for me, they never did. The night went on and on, and we made love and just plain fucked until dawn, and then took a long shower and slept nearly until dark again. We both walked like cowboys for a couple of days after that, but the smiles never left out faces...\n\nI followed Annie into her closet and turned on the light so I could see her. She swept her left hand along the clothes on that side until she came to the short-sleeved blouses. \n\n\"Pick out the cropped red Kauai Harley tee for me, okay? And then the Seven Jeans with the wide legs; they should be in the drawer on the top left. And then the Engineer boots with the 4 inch heels. I'll need some tall socks for them, probably the SmartWool ones, and the color doesn't matter. I think a thong to please my man, and you can pick the color. Which bra do you like, Pooh?\"\n\n\"I like the red Bombshell, if that's okay.\"\n\n\"But that makes me a DD and the t-shirt will get stretched.\"\n\n\"You say that like it's a bad thing, Piglet,\" I smiled.\n\n\"Men! If I had eyes, they would be rolling right now. Seriously, Pooh, would you want me to get implant to make my tits bigger? I'd do it if you wanted me to.\"\n\nBoy, talk about a sentence some men would pay good money to hear! \n\n\"You know, Annie, a lot of men would jump at that, but not me. I wouldn't change anything about your boobs at all. If they were bigger, they wouldn't move like they do now; it's also possible that your nipples would be numb, and I don't think that's right.\"\n\nAs I spoke, she started to smile, and when I was done, she inhaled deeply, throwing her chest back and shaking her shoulders an almost imperceptible amount. The combination of movements set her breasts in motion, bobbing and swaying, her dark nipples surging erect. \n\n\"Like I said, they're perfect, just like the rest of you. Now, if you got an urge to have them pierced, I wouldn't mind that at all.\"\n\n\"I've made an appointment over at SouthSide Tattoo to have them done next week, Pooh. I feel so very lucky to have you, darling.\" She said this while she was bending over, loading her breasts into the Vic's Bombshell bra. I barely heard her because my attention was, as always, elsewhere.\n\n\"Why's that?\" I said. \n\nShe straightened up, and while pulling her boobs into place, 'looked' straight at me, suddenly serious.\n\n\"I came off a plane as damaged goods, emotionally and physically wrecked. No job, no prospects, no caretaker, no real means of making my way through this world. You picked me up, both literally and metaphorically, and just by being you, you fixed everything. You accepted me, took me into your home and into your heart, and did everything you could do and much, much more to ensure that I was all right. I hate to bust your bubble, hoss, but people just don't do things like that in this world anymore. I just want you to know that I think about you all the time; I know how lucky I am that you were, and are there for me, and I will never, ever forget it. I owe you my life and everything in it, and I love you more than I thought it possible to love anyone.\"\n\n\"Wow,\" I said softly.\n\nShe chuckled softly. \"That was a carefully rehearsed speech, and all you have to say is, 'Wow?\"\n\n\"Not exactly, darlin'. Come with me, okay?\" I started out of the bedroom, and led her to our Zen Garden. I sat her down on our meditation bench and knelt before her. Her hand went to her mouth, and she inhaled quickly. \n\n\"My original plan was to do this in a more beautiful place, but then I realized that you couldn't see it, and that it's you that brings the beauty to a place anyway. I listened very carefully to what you just said, and you're right, you do owe me for all the time and effort I have expended in your care lately, and I have decided on a way that you can repay me.\"",
        "Her brows had begun to come together as soon as I knelt, and I decided I had to move quickly if I was to pull this off before she misunderstood.\" When I went to pick you up, I didn't know what to expect; you're right about that. The minute I saw you again none of that made a bit of difference, because I have loved you all of my life, but I never felt that I was good enough to be with you.\" \n\nHer head began to shake in denial, and as the tears started to fall, she whispered, \"It was always you, David.\"\n\n\"And it was always you, Ann. I can't obligate myself to marry you when I am running off around the world to potentially get killed every month...\" \n\nShe inhaled and began to cry in earnest. It was now or never.\n\n\"So I have retired. Anne Marie Taylor...\"\n\n\"YES!\" She shrieked.\n\n\"I'm not done yet,\" I whined. \"How do you know what I was going to say?\"\n\n\"Okay, I'll be quiet.\" She smiled, wiping her nose with the back of her hand.\n\n\"Anne Marie Taylor, will you...\"\n\n\"YES! I lied, Pooh I can't be quiet! Oh Pooh, yesyesyesyesyesyesyes, I'll marry you!\"\n\nShe was bouncing up and down on the bench, and her cleavage was doing flip-flops in the bra, but her face was, for once, the winner in the 'where do my eyes want to look' contest. It was radiant, her eyebrows high, her face beaming in a smile that lit up the garden and my very world. I remembered the beautiful eyes that used to live in the dark hollows before me, and I decided that she was every bit as beautiful without them as with them.\n\nAfter a few minutes of cuddling, she got cold, so we went inside. Well, she was mostly naked after all. I helped her dress after she asked if we could still go for a ride. I gave her the package of leathers that Randy had custom built for her, and typical of his designs, they fit her like a second skin. The vest presented her cleavage very, very nicely and was longer in the back to eliminate cold breezes and prevented her showing her gorgeous ass to anyone but me. The chaps fit snugly at the tops of her hips, and zipped down the back of each leg, with a leather cover Velcro secured over each zipper. I mentioned that they would be quite spectacular worn by themselves, and got a playful swat on the arm for my comment.\n\nJust as I started to the garage, she reminded me that I was supposed to call the Doctor up at the V.A. in Portland, so I wandered into the kitchen and dialed the speaker-phone as Annie began to breeze sightlessly through the refrigerator, making sandwiches appear as if by magic. It was important that everything in the fridge be put in its own place, and I tried hard to be good about it. The results were delicious meals that I really loved.\n\nMy call was transferred to a Dr. Jennings in the orthopedic rehab unit.\n\n\"This is Dr. Jennings,\" an alto woman's voice stated. \n\n\"Dr. Jennings, This is David in Ashland. You left a message with my fianc\u00e9 this morning?\" Anne smiled at the use of the term and put her hands over her mouth to stifle a happy giggle. \"Excellent, Gunny! Thanks for calling back. I have a former Company member of yours here in the ortho ward, Corporal Gabby Jackson.\" \n\nAnnie's hands flew to her face again, this time in shock; we'd both gone to school with Gabby, and she'd once been Piglet's best friend. Unfortunately, I'd only had contact with her a couple of times; a Company is a large number of soldiers.\n\n\"Brief me in, Doc. What do you need from me? Whatever it is, it's yours.\"\n\n\"Corporal Jackson has been stateside for five months and she's due to be separated in a couple of weeks, Gunny. She won't tell us anything about her destination, her family, where she intends to live, etc. We intend to send her to VA Camp White near you, but after that, she's adrift unless we can find her a billet.\"\n\n\"Roger that, Doc. Consider it found. Can you give me a SitRep on her injury?\"\n\n\"Jackson has lost both of her legs at the hip, and has sustained some notable other injuries, including partial paralysis of her left arm and some nerve damage in her neck. She is coping as well as I could expect under the circumstances, but as I am sure you know from personal experience, a lot of the damage is deep inside. I have approved Total Disability for her, as well as lifetime palliative care and hardware, but that's pretty much going to consist of a wheelchair and driving aids, am I clear? This is going to be a long term relationship if you decide to commit to it, Gunny.\"\n\nI looked at Annie, and was not a bit surprised to see her nod once, very decisively.\n\n\"Consider it done, Doc. What is her departure ETA?\"\n\n\"Two weeks from today, Gunny.\"\n\n\"Oh, Doc?\"\n\n\"Yes?\"\n\n\"Don't billet her at Camp White. She'll be staying here.\"\n\n\"Roger that. Well Done, Gunny.\"\n\n\"Semper Fi, Doc.\"\n\n'Oorah!\"\n\nAnnie held on tightly to my waist as we thundered down the highway toward Howard Prairie Lake. The trees flashed by us as we swept through the gentle curves, surrounded by primordial forest. Her head lay against my shoulder, the helmet turned to the right, since she had no need to look at the scenery. The visor was open, and I could hear her inhaling deeply through the intercom.\n\n\"It smells so great, here, Pooh! I'd forgotten how wonderful it is in the forest. The smells, the feel of the wind, even the sun coming and going as we move into the cool shadows, it's all just amazing!\"\n\n\"I was hoping you'd like it, Annie; before you arrived, this bike kept me sane.\"\n\n\"I really like the sounds and the feeling of the power it has. It's like flying, and what's with the seat vibrating?\"\n\n\"Just an extra added benefit women have discovered, and Milwaukee has refined, I guess. If there's a particular rpm you need, just let me know and we'll try to find it, OK?\" She laughed out loud; what a wonderful sound.\n\nWe pulled off the road at Howard Prairie Resort and parked the Harley by the dock. Annie took my elbow and we walked into the resort and got an ice cream cone. Sitting on the top of a picnic table by the lake, I gazed at my Piglet as she turned her eyeless face into the sun and let the breeze blow her hair. \n\n\"It's hard for me to imagine what it's like to not see the light of the sun through my eyelids. Can you describe it for me, or would you rather not?\" I asked.\n\n\"I don't mind at all, Davey. It's who I am now, and I think I can say with total honesty that I'm okay with it now. I don't find myself trying to turn toward sounds anymore like I used to, trying to look for the source. The muscles in my eye sockets stopped twitching a couple of months ago, probably since my brain stopped trying to control non-existent eyeballs. I still feel my eyelids twitch all the time, and I don't really understand that. When I turn my face to the sun, I just feel heat. You might think that my world is completely black, but it's really not. I think that the loss of my sight has engaged different types of awareness instead, and I think I sense things almost as colors now.\" \n\n\"Let me give you an example. Close your eyes and listen with me, okay?\"\n\n\"Okay,\" I said, and moved to sit on the bench between her knees, facing away from her. She put her hands on my cheeks from behind and turned my head to the right and down a little.\n\n\"There's a small animal over there, probably a squirrel. He's chewing on something hard, stopping every once in a while to chew and look around. Open your eyes and tell me what you see. I see the color brown in my mind, probably because I remember squirrels being brown.\"\n\nSure enough, a Golden Mantled Ground Squirrel sat on his haunches about ten feet from us, exactly in the direction Annie had my head pointing. \"Got it in one.\" I said. \"Tell me this, Piglet. Do you ever think you'd like prosthetic eyes? They wouldn't turn or anything, but I just wondered.\"\n\n\"Actually, Pooh, I have called around to see what my options might be, and they come down to this: One, doctors cut off my lashes, and graft my eyelids to the back of my eye sockets. Then I could get a set of eyes with eyelashes and lids that pop into the holes. Or, they permanently implant filler balls into the sockets and sew the eyelids closed, so it looks like I am sleeping all the time. The thing is that I don't seem to have any of the problems that most people in my circumstances have, like eyelashes turning in and growing into the lids. I don't really find that I want to do any of those things, Pooh. If you would rather I did one or the other, I'd do it for you, but we haven't talked about it. Do my empty eye sockets gross you out? I try to wear big sunglasses in public.\"\n\n\"You know, Annie, they don't bother me at all, but then I love every little bit of you anyway.. I think that they're expressive, and somehow kind of sexy, probably because they are so different. I like it when you try to blink; please don't get me wrong, but it's so erotic, kind of like your eyes are in bondage, that it really gets me hot. I guess it seems so natural to me now that I wish you wouldn't change it. And I think the Stevie Wonder glasses need to go. All the girls are wearing smaller ones now, and I just happen to have gotten you a set. \"\n\n\"So the message is to go without the glasses when we're among friends or alone and wink at you frequently, right? Well then, I think that's settled. Let me check out those glasses, okay?\"\n\nI went to the Harley and got the glasses out of their case and handed them to her. The lenses are quite dark, round, and about the diameter of quarters. She put them on and immediately looked even more sexy to me\n\n\"Wow, those make you look even hotter! Give me a kiss, little one?\" S\n\nhe puckered and I matched my lips to hers seamlessly, just as her tongue slipped out and licked my teeth. \n\n\"Oh, wow, they're so light! I love them already, but do you think they will show too much socket?\"\n\n\"Oooh, you know how I love you to talk dirty, baby!\"\n\n\"Oh, for Christ's sake, Davey! Do you ever think of anything other than sex?\" She laughed. \n\n\"Not since I've been around you, love.\" I answered.\n\n\"Good answer, big guy.\"\n\n\"You know, I proposed to you a little out of the timeline I'd decided on, and I didn't have anything to put on your finger. Hold out your hand, Piglet.\"\n\n\"Oh, David! Describe it for me, will you?\"\n\n\"I don't think I need to, Annie. You know what it looks like.\" \n\nHer head tilted and she frowned a little.\n\n\"After your mom passed away, your Dad came to me. He told me, and this is a direct quote. 'Son, I don't know what is wrong with you and why you haven't married my Annie, but I know in my heart that someday you are gonna come to your God-damned senses. When you do I want you to have this. If you don't marry her, then I don't give a fuck what you do with it.' And then he gave me your mother's emerald wedding ring. And now I am giving it to you, if you'll have it. The omly regret I have in this is that he never jnew we were going to go through with this before he passed.\"\n\nShe held out a tiny shaking hand, and I slid the ring on her finger. It was a perfect fit. She held it out in front of her face and turned it as if she could see it. \"Is it beautiful like I remember it, Pooh?\"\n\n\"Yes it is, Darlin'.\"\n\n\"This day just gets better and better, Pooh. I look back on the night the witchdoctor took my eyes out, and it's suddenly the greatest thing that ever happened to me because it brought us together. I am absolutely the happiest woman in the world.\"\n\n\"I'm just sorry it took that to get the job done, I guess.\"\n\n\"It would have happened eventually. Nothing can stop True Love.\"\n\nWe sat in the sunshine for a while, just enjoying each other's company. Talk eventually turned to Gabby, and the changes we'd have to make in our lives when she came to live with us. The facts were that we didn't know very much; the Doctor had just filled us in as best she could and there was no way to tell what Gabby's state of mind was. I thought that the only way to see was to go to Portland, and I said as much. We agreed to go north to Portland at the beginning of the week, and rode home on a different road after a short walk along the shore. Rough ground was hard for my girl, so we stayed on a nice pathway. She described everything she heard, which was really quite amazing to me, especially when she told me that she can hear when I smile, since apparently my teeth make noise...weird.\n\nInterstate 5 bisects Oregon north to south, and it's about a five hour drive from our house to the Portland VA Hospital, which is just off Terwilliger Boulevard, overlooking the Willamette. \n\nIt took us closer to seven hours, partially due to me having to pump off bilges (Pee), and partially because there is an unwritten law in girl-land that says that you have to stop for ice cream every so many hours. We stopped at a little place in a town called Rice Hill, where a small ice cream cone is about a foot tall.\n\nI had called ahead and reserved a hotel room at a nice older hotel called The Benson, and we took a nice bath together in the evening, and then slept like the dead until 0700. We ate quickly and then headed to the hospital. \n\nWhen the sliding doors opened and the smell hit my nose, I stopped like I'd hit a wall, and Annie almost walked in without me.\n\n\"Geez Pooh, you could warn a blind girl when you're gonna stop! I nearly...what's wrong, David?\"\n\nIn an eye blink, my skin had gone clammy, my heart was banging in my chest, and I was certain that I was going to pass out. Within seconds, Piglet was yelling and a pair of large black hands had me by the shoulders and had guided me back out the door and sat me on the bench outside. The hands fished down my shirt and had my dog tags out and read.\n\n\"Stand Easy, Gunny!\" a basso profundo voice rumbled in my ear. \"First time in a hospital since your injuries, I'm bettin'. Ain't no big thing brother, it happens to most of us. Places like this have nothin' but bad memories for us, and your brain is throwin' up flags and telling you to evac not only now, but Right Now. It'll be better if you have a chance to breathe and set your jaw against it. You let Master Chief Phillips know when you're good to go, and we'll take a run at this together, you copy?\"\n\n\"Roger that, Chief. I don't know what that was all about, but I have a soldier to see, and I'll be damned if bullshit like this is gonna stop me.\"\n\n\"Miss, turn to your right 90 degrees and walk 20 feet. You have no obstacles,\" rumbled the Master Chief. Shit! I'd forgotten all about Annie!\n\n\"I'm sorry, Piglet! I forgot about you for a second, there.\"\n\n\"No worries, Pooh, it was pretty obvious the Master Chief had your back. If you don't mind my asking, is it that obvious that I am blind?\" Her cool hands slid over my neck and the world regained a good part of its focus.\n\n\"No Ma'am, not unless you stand at these doors for a long time, as I have. I've seen a lot and when your man went down and you started feeling for him with your hands, it became somewhat obvious. Pooh...Piglet, well I have heard it all now,\" the Master Chief grunted, and began to laugh. \n\n\"Thank you for your help. Buy you a cup of coffee after I've seen the Corporal, Chief?\" I asked.\n\n\"Very well, Gunny. I am on duty here until 1700 hours.\"\n\nI looked at the Chief as I stood. A handsome black man, the Master Chief looked to be about 250 pounds of Navy stuffed into a six foot block of dusty black granite. His wrinkled face wore a trimmed salt and pepper beard under a shiny shaved head, and his powerful arms and shoulders held sway over a pair of artificial legs that appeared to begin about mid-thigh. I shook his hand and thanked him again as Annie and I headed through the doors of the hospital once more. He was right, it was better if you were expecting it; not fine, but better.\n\nWe were met right away by an intern to Doctor Jennings. \"Corporal Jackson is in the lounge at the end of the hallway, Gunny.\" She offered.\n\n\"What is her state of mind, Doctor?\"\n\n\"I would say she is guardedly optimistic, but frankly, by the time most soldiers have been in the hospital as long as she has, they'll act like a duck if they think it will get them out of here. Having said that, I think she's pretty much accepted the loss of her legs, possibly because that's a given. Her hand and wrist are another thing for her. We don't know how much of that function will return, and we don't have a lot of confidence that very much will. We have her in a brace that keeps her hand from curling up, but it is probably futile, and I think she knows that. It could be a year before we would consider her medically stable, which means that improvement is unlikely. She caught some shrapnel in her neck and it has damaged the nerves that control her vocal cords. Today she's just hoarse sounding, but sometimes she can't speak at all. It comes and goes, and we all know that it could go and not come back. We don't know very much about the regeneration of nerves, and they are totally unpredictable. She has agreed to return to Southern Oregon with you, and I actually think she's looking forward to it pretty seriously. I'll have her paperwork done very shortly, and you can take her around 0900 hrs.\"\n\n\"Really? We were led to believe that it would be another week.\"\n\n\"Well, Gunny, when a Senior Gunnery Sergeant who is a recipient of a Navy Cross and three purple hearts says he has the situation in hand, we tend to believe him.\"\n\n\"What's that all about, Pooh?\"\n\n\"It's nothing, really Annie; we can talk about it later if you want.\"\n\n\"It's hardly nothing, Gunny, if you will excuse my presumption,\" Said the Doctor, looking at Annie. \"The Navy Cross is the highest award for heroism the Navy can bestow, and there are only a handful of recipients in the history of the Navy.\" \n\n\"So my Pooh is a hero to somebody besides me, then Doctor?\"\n\n\"Your 'Pooh', as you have so strangely named him, is a hero to more people than you can imagine, Ma'am.\" said the Doctor with a smile.\n\n\"Thanks for the compliment, Doc,\" I said, embarrassed by the attention, \"but in my opinion, every bed in this hospital has a hero in it, and I'd like to go see one in particular, so if you don't mind...\"\n\n\"Understood, Gunny. She's at the end of the hall, room 2644. Carry on.\"\n\n\"You know that we will be talking about this later, right?\" Piglet said.\n\n\"Never doubted it, friend.\"\n\nAs we neared the end of the hallway, I pulled Annie into a hug and spoke softly over her head so that she could hear me.\n\n\"I'm glad we are setting out to do this thing, Annie, but I don't have any misconceptions either. This is going to be really hard, and I want to make it clear that I am going to do my best to see this through, but I am not willing for it to affect ourrelationship. You are my first priority, now and always, so let's keep the communication going and we'll get through this, okay? I don't know what to expect, but I'm pretty sure that she's going to be deeply depressed and in denial over a lot of stuff. I have lined up a VA psychologist just in case.\"\n\n\"Thanks, my love. I'm ready to do battle for Gabby, and I couldn't if you weren't beside me. Let's do this.\"\n\nAs much as we had steeled ourselves to prepare for it, when we pushed open the door on room 2644, we were not prepared for the sounds that echoed off the walls.\n\nLaughter. Not giggling or a little chuckle, but roaring belly laughs that would have made a demon smile. Gabby sat on her bed in a NAVY sweatshirt and a pair of grey running shorts, her arms wrapped around her belly basically laughing her ass off. Tears were rolling down her cheeks, and her face was red from exertion. From the small screen hung from the gantry arm extending from the wall came the unmistakable sounds of Patrick Warburton's voice from \"Family Guy\". \n\nI stepped around the door and said. \"Is this a good time, Gabby?\"\n\n\"Holy shit, it's...you!\" She croaked. The doctor was right, her voice was screwed up, the sound grating and soft, the words halting as her brain tried to fix things. Her smile got even broader and she held out her hands to me. Well. Her right hand, anyway. Her left arm moved out, but her hand just flopped at the end of in. The hand was in some sort of glove with springs holding the fingers outstretched, and it dangled at the end of her arm like a rag. I slid onto the bed, trying not to get close enough to touch anything sore or tender. She appeared to have no legs whatever, and she was propped up with pillows at each hip. She held me fiercely and buried her face in my neck. Soon I felt her shoulders start to shake and the tears began. ",
        "I snapped my fingers softly so that Annie knew where I was, and she joined me on the bed. She slid her hands down Gabby's left arm and lifted it onto her shoulder, then slid in beside me to hug her friend. \n\nAfter a while, Gabby loosened up a little and I let her shift her hug to Ann alone. \"Oh, how I have looked forward to... this,\" she said as she looked past Annie's shoulder at me. \"Oh crap, David, what happened to your face?\"\n\n\"IED, Gabs.\" I held up my damaged hand.\" No more guitar solos for me, either.\"\n\n\"You don't play the guitar, Gunny.\" She said with a puzzled look.\"\n\n\"I know; I'm just sayin'...\" I smiled. She smiled back, which was a good thing in my book. Annie sat back a little and 'looked' at Gabby. \n\n\"So, don't you think this is a pitiful way to finally make it into the insurance company height to weight chart limits?\" she said. \n\nGabby smiled, and said, \"And is your future so bright, you have to wear shades?\"\n\nAnnie 'looked' over her shoulder at me and said, \"She doesn't know?\"\n\nAnnie took Gabby's right hand in hers, partially to have a hand to hold, and partially to keep her from grabbing the sunglasses away. Gabby looked at Annie's hand and cried out, \"NO way! You guys got hooked up? It's about time!\" \n\nYou're right about that Gabby. But there's something else you need to know, okay?\"\n\n\"Okaaay?\" she said guardedly.\n\n\"When I was in Africa, I got a parasite in my eyes which caused what is called River Blindness.\"\n\nGabby's hand broke free and pulled Annie into a hug. She looked over her shoulder at me and asked, \"It's treatable, isn't it, Annie?\"\n\nPiglet shook her head and said, \"I'm afraid not, Gabs. They had to take my eyes out because I couldn't stand the pain anymore.\" \n\nGabby leaned back and snatched Annie's glasses off and looked at her eyeless face, stunned. \"No. no. no. Annie, my poor Annie; who's gonna tell me I look like a fucking clown when I ...dress wrong ...now?\" The tears began again, and this time Piglet and I joined in for a little while.\n\n\"I guess that would be me, now, Gabs.\" Are you ready to get out of here?\"\n\n\"Only you could imagine how much I want out of here. When can we go?\"\n\n\"I have a feeling the Doc we talked to this morning has probably already checked in with Dr. Jennings. Where's your gear?\" \n\n\"Well, all I have here is what's in the locker there and the wheelchair by the door. It's a nice little Quickie\u2122, but I can't use it by myself very well yet. It'll be fine if one of you wants to push, though.\" Her voice fell to a barely perceptible whisper by the end of the sentence.\n\n\"Me, pick me!\" Piglet burst out, bouncing up and down on the bed to the point that Gabby had to grab the side rail to keep from falling over. \"You can sit, and I can push you and I can finally work off some of the weight I've gained since I got back from Africa.\"\n\n\"Well, maybe after your arm gets better, Gabs...\"\n\n\"They like to tell us stuff like that, Dave, but you and I know better. You want to see?\"\n\n\"Might as well get acquainted with it, since I'm gonna be taking care of your sorry ass for a while,\" I said, daring her to flinch. She didn't.\n\n\"Damn straight, Gunny.\" She grabbed her sweatshirt and worked it up over her head, then drug her withered arm out of the sleeve. She wore a wife beater underneath the sweatshirt and her nipples were apparently very hard. It wasn't pretty; her lower arm appeared to be nearly devoid of muscle tissue. There was a mass of scar tissue just above her elbow, which to my experienced eyes was certainly a gunshot wound. \n\n\"The nerves are mostly gone, gunny, so I don't expect it will ever work again, and only one little part of my biceps is still working, so there's not much strength. Look, I want to thank you for giving me a place to go until I get back on my f... Well that was gonna sound stupid, huh? I just don't want to fuck up your lives any more than I have to.\"\n\nAnnie found Gabby's face and held it in her hands. \"You are our dear friend, and right now you need us. We are thrilled to be there for you.\"\n\n\"Thank you, both of you, it means a lot to me Annie. I've missed you both, but especially you,\" she whispered.\n\nI had my head in the closet when Dr. Jennings walked in.\n\n\"Are you ready to get going with this group?\" she said.\n\n\"Nothing personal, Doc, but I won't miss this place at all.\"\n\n\"And we hope to never see you again unless you come in the front door, either. Well, you're signed out, and the packet I have put on the bed has all the contacts you'll need for the Domiciliary in White City. Good luck to you Corporal.\"\n\n\"Aye aye, Captain.\" She saluted, and the Doctor snapped one back at her. The room was quiet for a minute after the Doctor departed, and then I said, \"Let's get out of here!\"\n\n\"Roger that!\" agreed Gabby. \n\n\"Where's my new toy?\" said Piglet. I brought her to the wheelchair and directed it to the bedside. \n\nShe reached down and locked the wheels and I looked at Gabby.\n\n\"Do you need to pee first?\" I asked. She was pulling her sweatshirt on and threading her lifeless hand down the sleeve.\n\n\"I'm okay for now Dad,\" she smiled. \"And I brought my special seat so I don't fall through and get wet.\"\n\n\"So how do we get you into the chair?\n\n\"We don't, I do this...\" she put her limp left hand on the bed and grabbed the seat of the wheel chair and flipped around, planting her butt firmly on the seat.\n\nThe trip down the hall to the front desk was exciting, what with a blind woman pushing and the passenger giving less than adequate instructions. I only had to prevent collisions three times, and Gabby only tried to fall out of the chair twice.\n\nWe made a stop to see the Master Chief, but he was occupied with a vet and her family, so I took down his info and promised to catch up with him the next time I was in Portland.\n\nI got Gabby loaded into the Range Rover, along with Annie, who wanted to sit in the back seat with her friend, and we got on I-5 southbound. They chattered for quite a while, until Gabby got so hoarse she had to stop talking. I stopped for gas at Albany, and they were both asleep, Annie with her head against the right window and Gabby sideways in the seat, her shoulders against the seat back and her head on Annie's lap. \n\nThere was a lot of room for Gabby without legs, and I was surprised to see that Piglet was holding Gabby's left hand in her own. Just before I turned into my drive and the electric gate swung open, I looked in the mirror at my precious cargo, and they were both smiling in their sleep.\n\nAnd so it begins. "
    ],
    "authorname": "owengreybeard",
    "tags": [
        "blind",
        "veteran",
        "amputee",
        "leather",
        "piercing",
        "romance"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/battle-scars-ch-04"
}