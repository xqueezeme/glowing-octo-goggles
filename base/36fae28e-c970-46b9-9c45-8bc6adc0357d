{
    "title": "Carwash",
    "pages": [
        "\"I believe that's everything, Dad. Every penny.\"\n\n\"Yes, it is. I gotta tell you, I always believed you could do it, but I'm still very impressed.\"\n\n\"Are you still mad at me for not going to college?\"\n\n\"I was never mad, Chandler. I just honestly believed it was the best thing for you at the time. I mean, when you've got a 3.87GPA in high school it only seems natural to go on to college. I'll admit I was disappointed for a few months, but your mom and I raised you to follow your dreams and you did that. How could we be upset with you for doing what we asked you to do and doing it so well at that?\"\n\n\"I still remember the way you looked at me when I presented you with my business plan,\" his son said with a smile.\n\n\"Okay. You got me there. I had my doubts at first\u2014but only at first.\"\n\n\"A hundred grand is a whole lot of reason to have those kinds of doubts, Dad.\"\n\n\"Yes, but we'd have invested roughly that much had you gone to an Ivy League school for four years which would have likely turned into five, so maybe we got off easy,\" his father said with a grin.\n\n\"So...you want to take a chance on me and bankroll one more?\" \n\n\"Whoa! Slow down there, cowboy. Are you serious?\" his dad asked.\n\n\"Very,\" his son replied. \"I just paid you back everything you loaned me with interest and all in just 33 months. Not bad for a kid with no education, wouldn't you say, Dad?\"\n\nHis dad ran his hand through his hair, exhaled loudly then said, \"No, not bad at all. All right. Let's sit down and talk about it.\"\n\nNearly three years ago, Chandler Caulfield didn't just mildly surprise his parents when he told them he wasn't going to Princeton even after having been accepted; they were blown out of the water. His mother cried and his father pleaded with him not to throw away his future. And that's when he turned the tables on them on reminded them how they'd always told him each person needed to do what made him or her or happy for society to function optimally. If you like to paint then paint. If I enjoy repairing cars let me do that. By doing what we most love we maximize our own happiness, and the end result is a better society even though that's not the goal of following ones dreams. It's just a very nice by-product.\n\nThat reminder was followed a few days later with a detailed business plan that also floored his father, Gil Caulfield, a successful real estate developer in the Seattle area. He'd purchased a carwash he planned to demolish and use the space for retail stores until his son convinced him he could make it profitable again. \n\nGil had presented many business plans himself to various investors, but his then 18-year old son's was as detailed and thorough as anything he'd ever produced, and after examining it for several days, he took a huge risk and bankrolled the project which began with renovation and included advertising and marketing which had all paid off rather nicely.\n\nNow, less than three years later, his soon-to-be-21-year old son, had just paid back the money he'd loaned him, in full and with interest. That too, stunned the older Caulfield.\n\n\"So before you dive into your second venture, do you ever do anything other than work, Chandler?\" his dad asked him.\n\n\"I run. I work out. I bicycle when the weather's nice. I read when I can. Why?\"\n\nHis dad smiled then said, \"I'm talking about making time for relationships. With the fairer sex, of course. You know...girls.\"\n\nChandler laughed then said, \"Yeah. I know what the fairer sex is, Dad. And I do go out. Sometimes.\"\n\nHis mother wasn't there so he smiled and said, \"Occasionally I hook up. I just don't talk about it much.\"\n\n\"I know you're still young,\" his dad said. \"Shoot, you'd be in your junior year of college if you'd taken that path, and I'm sure you'd be doing your fair share of 'hooking up' there, too. Just don't tell your mom that, okay? She's no prude, but she's kind of got her heart set on a big wedding for her only child someday so if you ever feel like actually dating someone, I'm sure you'd make her very happy.\"\n\nAgain, his son laughed and told his father, \"Dating's not exactly my thing, Dad. I don't find going out with girls my age exactly stimulating anyway. Well, physically, they're just fine in that respect, but when it comes to discussing anything beyond reality TV it gets pretty dicy. It's got an upside and a downside to it. The upside is I know all about the Kardashians. The downside is I know all about the Kardashians.\"\n\nHis dad laughed as he fully understood the obsession with and the absurdity of reality TV. \n\n\"No, I get it. Having the kind of mind you do, and frankly, being as good looking as you are, can make that a real challenge. Not the hooking up part, of course. That's easy. Finding an attractive, interesting, intelligent woman is a lot more difficult. I don't envy you, but I do know you're smart enough to figure out how to make that work to your advantage. Just think it about it, okay?\"\n\n\"For Mom, right?\" Chandler said with a grin of his own.\n\n\"Okay, fine. I surrender!\" his dad said holding up his hands. \"Let's look at those plans, shall we?\"\n\nThirty days later, Chandler Caulfield was closing on his second carwash just six weeks before his 21st birthday, and he was ready to attack this next challenge with as much energy as he had the first. \n\nThat would be no small task considering how he'd spent an average of 14 hours a day at his first location seven days a week personally drying and waxing cars after his customers spent between $5 and $10 to go through his carwash. \n\nIn addition, he also ran the administrative and managerial ends of the business. He'd unfailingly introduce himself to each new customer and speak to the repeats calling them by name even after not seeing them for days or even weeks. The harder he worked the more business came his way, and the more customers that showed up, the more they told their friends about the happy young owner of the most successful carwash in town. Which, of course, resulted in more business and more money and more customers and....\n\nAfter a long, grueling first day at the new location, Chandler had to ask himself if maybe his dad had a point. It was beginning to feel like all work and no play really was making Johnny a dull boy. Or at least a guy named Chandler Caulfield. And yet he knew there would be time to play later on. Later on as in after he'd opened several more locations and could afford to play. For now, his life was work and more work with his only diversion a run or a bike ride and every other day, some time in a gym lifting some light-to-medium weights.\n\nThe only real issue with a new location was having to trust someone to run the first carwash. Yes, Chandler could divide his time between them, but the first location was well-established while the new location needed him there full time. So for the time being, his best employee, a man of about 40 named Carl, was in charge at the first place while Chandler sought to build clientele at the second. \n\nCarl was friendly and conscientious, but not exactly the best manager as he really hated telling other people what to do and he wasn't exactly 'top shelf' when it came to paperwork. For now, Carl was the best he had, and finding the time to interview and hire someone better would have to wait while he hoped the first location didn't start losing customers.\n\nThe next three days were every bit as long, and as luck would have it, the change machine into which his customers fed bills was on the blink. Rather than turn away customers, he gave everyone who wanted to stay a wash and wax for just $5 as he made change manually from the petty cash box he kept on hand. If he couldn't make change or if they didn't have cash with them, he let them go through for nothing or for whatever they could pay. Yes, it was costing him a few dollars per car, but he knew that turning them away meant zero dollars and angry customers who might never come back which was far worse.\n\nHe got someone out to repair it the next day and things seemed to be back on track until around 11am when Chandler heard a bloodcurdling scream from inside the carwash. He was at the far end drying a vehicle when everyone froze.\n\n\"What the hell?\" he said as he ran to his end of the wash itself where he could see inside.\n\nIt took him a second to make sense of what he was seeing, but after a quick look around, he knew he wasn't imagining it. There was a woman outside of her vehicle, standing there soaking wet, her face and body mostly covered in a soapy goo screaming and trying to look around as the large brushes spun as soap and water sprayed everywhere.\n\nChandler ran to the side of the building and hit the emergency cutoff switch bringing everything to an immediate stop. He then went in through the side door and found the woman still screaming hysterically.\n\n\"Ma'am? Are you okay?\" he called out.\n\nAs soon as she saw him she shrieked, \"My baby! I can't find my baby!\"\n\nChandler couldn't see anything but white soap and suds, but he could hear her quite clearly. Trying not to slip and fall, he quickly walked around the woman's SUV and saw the back rear door was slightly open. He could see an empty carseat inside then got very concerned.\n\nHe walked the length of the carwash checking every nook and cranny all to no avail. And then he saw her\u2014quietly sitting at the start all by herself. The woman's 'baby' was a little girl who looked to be three or maybe four years old at most.\n\n\"Hey there! Is that your mommy's car?\" Chandler asked as he knelt beside her and pointed to the vehicle halfway through the carwash cycle.\n\n\"Yes. It is,\" she told him matter of factly. \n\n\"Well...aren't you supposed to be inside it? he asked as he heard the woman still screaming.\n\n\"I wanted to do the slidy thing,\" she said.\n\n\"What slidy thing is that?\" he asked.\n\n\"Where you put the money in. I wanted to put the dollar in but the car drove away.\"\n\n\"Listen, can I take you back to your mom?\" he asked still not sure what she was telling him.\n\n\"Yes. You may,\" she said politely with a nod. \n\nThe little girl reached up and took his hand and said, \"I don't have a daddy anymore. He went to heaven with the anjuls. Mommy says they have wings so that means they can fly.\"\n\n\"I'm so sorry,\" Chandler said.\n\n\"No, it's okay 'cuz my daddy has wings now, too. Mommy says he watches over us so I knew he would send someone to find me,\" she informed him. \n\nAs they carefully walked through the soapy mess, she asked, \"Do you wanna be my daddy?\"\n\nHe ignored her question and in his kindest tone of voice said, \"My name is Chandler. What's yours?\"\n\n\"I'm Avery,\" she told him. \n\nShe pointed to a moving mess of suds and said, \"That's my mommy. Why is she's laying down and why is she all soapy?\"\n\n\"Oh, no,\" Chandler said when he realized she slipped and fallen down. He could see one spike from a pair of high heeled shoes and was pretty sure he knew what happened.\n\n\"Are you okay?\" he asked as he bent to down to help her up.\n\nClearly she wasn't as she was now crying out in pain until the little girl said, \"Why are you taking a bath in here, Mommy?\"\n\nThe woman sat up and tried to wipe away the suds covering her face then shrieked, \"My baby!\" reaching out for her.\n\nThe little girl stood back and shook her head. \n\n\"Uh-uh. You're wet,\" she told her mother. \"I don't want to be all soapy like you.\"\n\n\"Where did you go Miss Avery Marie? You scared me to death!\"\n\n\"When you got out to put money in the slidy thing, I got out, too, cuz you always let me do it. Then the car drove away so I just sat down and waited like you teached me do do. And then Daddy sent this nice man to come and find me, and I told him he could be my new daddy. He doesn't think you would like that, but I think he's really nice so...could he be? Pleeease?\"\n\nChandler's first concern was their safety. The second was calling his attorney because this had 'lawsuit' written all over it.\n\n\"Ma'am? Before you try and stand up, let's get you out of those shoes,\" Chandler offered.\n\n\"Oh, right. That's why I slipped. I was trying to move around and everything was so wet and slick.\"\n\n\"Did you get hurt?\" he asked afraid to find out the answer.\n\n\"My knee hit the ground pretty hard, but I think I'm okay,\" she said as he helped her stand up. \"As long as my daughter's okay, I'll be fine.\"\n\nHe offered his shoulder as stability and noticed she was limping heavily as they walked. He hadn't been sued yet, but knew it was only a matter of time.\n\n\"Come on, let's get you hosed down and dried off, and then we'll get your car through the wash. Everything is on me, of course.\"\n\nTwo of his guys used water hoses on the human ball of suds until it slowly turned into a person and then into a woman who looked almost ridiculously funny. Except that there was nothing funny about it from an owner's point of view.\n\nChandler had someone else go get into the vehicle before he started up the conveyer system again then told his guys to dry it and wax it while he asked the woman to come to his office.\n\n\"No, I just need to get going,\" she said. \"I was taking my daughter to register for school, but my car needed to be washed so badly I decided to run through the carwash real quick. I use the other one over on 14th street because it's near my house, but this one is closer to where I work. Or used to anyway.\"\n\nThat was Chandler's other location, but he wasn't going to bring that up. For now making sure she was okay was priority one.\n\nHis guys handed her some towels, and she did her best to dry her hair a little and soak up the rest of the wetness, but it was a losing cause.\n\n\"Can I do anything?\" Chandler asked. \"I could take you somewhere if you need a ride. Or we can put a bunch of towels in your vehicle to at least keep most of the water off the seats.\"\n\n\"No. That won't be necessary. This was all my fault. I still have no idea how my daughter even got out. Even worse, how could I not have noticed?\" she said looking at Avery every few seconds now to make sure she was still there.\n\n\"Well, I'm still very sorry this happened. I'm the owner, by the way, so if your attorney needs to get in touch with me, he or she can....\"\n\n\"My attorney? Oh, no. Definitely not. I'm the one who created the mess. It's certainly not your fault,\" she assured. \"I was thinking you'd probably call child services on me for negligence, and then I freaked out about losing custody because I... I lost my child, for heaven's sakes.\"\n\nThe woman was shaking from the cold as she said, \"She's all I've got. If anything happened to her I'd....\"\n\n\"Don't cry, Mommy. Everything will be fine, okay? Daddy has wings now so he can watch over us, memmer?\"\n\nShe looked at Chandler and said, \"But he's invisdibul. Only the other anjuls can see him. Oh, and so can Jee-zahs.\"\n\n\"I didn't know how else to explain her father's death last year so I...improvised,\" she said quietly, now shaking like a leaf.\n\nAn employee handed Chandler three of the largest terrycloth towels they had, and he draped one of them over the woman's shoulder and handed her another while he held onto the the third.\n\nChandler grabbed a couple more just in case then asked, \"Won't you please come into the office where it's warm? I can get you a cup of coffee or hot chocolate, and I really will take you anywhere you need to go. I'll pay for a taxi, as well.\"\n\n\"I love hot chock-uh-lot!\" the girl said. \"Do you have marshamallows, too?\"\n\n\"Avery,\" he mother said. \n\n\"But I like them, Mommy,\" she replied.\n\n\"Won't you please come in and sit down for a minute or two while we finish your vehicle?\"\n\n\"I really need to get going. But please don't worry. I'm not going to sue you or anything. I hate when people do that when they either caused the problem or didn't get seriously injured.\"\n\n\"I have really good coffee inside,\" Chandler said smiling at the woman.\n\n\"Please, Mommy? Can we please get some hot chock-uh-lot and marshamallows? Pleeeese???\"\n\n\"I hate spoiling her and I never did before...my husband...you know...but now I have trouble saying 'no' to her.\"\n\nShe looked at Chandler and said, \"Are you sure you don't mind? I mean, I'm still very wet.\"\n\n\"We have tons of towels, and we kind of deal with lots of water for a living around here so, yes, I'm sure,\" he told her with a polite smile.\n\n\"Well, I could use a cup of hot coffee,\" she said.\n\n\"All right! Then follow me, please,\" Chandler said.\n\n\"We're staying?\" the little girl said with a big gasp. \"Yaaaay!!!\"\n\n\"Can I have lots of marshamallows?\" Avery asked. \n\nShe looked at her mother then added, \"Please?\"\n\nChandler opened the door then set a towel down on the floor and another one on a chair before inviting her to sit down.\n\n\"Cream and sugar?\" he asked after pouring her a cup.\n\n\"Just a splash of cream, please,\" she replied.\n\n\"And lots and lots of marshmallows for you, right?\" he said to the little girl.\n\n\"Yes, please!\" she back now very excited.\n\nChandler poured himself a cup then sat next to the woman who'd finally stopped shivering.\n\n\"Your daughter told me her name, but I haven't caught yours yet,\" Chandler said.\n\n\"Oh, sorry. I'm still a little rattled. I honestly have no idea how my daughter got out of her carseat and the door without me noticing. I can't even think about what might have happened had she gone in front of the vehicle of if someone other than you had found her.\"\n\nThe woman tried to smile then said, \"You were concerned I might sue you. I'm still a little concerned you might call child services.\"\n\n\"No. Not a chance. I can already tell how close you two are. It won't make you feel any better, but accidents really do happen.\"\n\nThe woman shook her head then remembered she still hadn't introduced herself.\n\n\"Sorry. I'm Hadley. Hadley Kimball,\" she said. \"And you know my daughter Avery already.\"\n\n\"Why yes, I do,\" he said. \"She's a very grownup little lady.\"\n\n\"I'm this many now,\" Avery said holding up four tiny fingers.\n\n\"Yesterday was her birthday, and I was taking her to register her for school,\" Hadley said.\n\n\"It's only pre-school, Mommy? Memmer?\" she said as she blew on her drink only to reach for a marshmallow with her fingers.\n\n\"She doesn't miss a thing,\" her mother said. \"If you told me, please forgive me, but I don't believe I caught your name.\"\n\n\"It's Chandler,\" he told her.\n\n\"It's a pleasure, Mr. Chandler. Thank you for being so kind.\"\n\nChandler smiled then explained.\n\n\"My first name is Chandler. My last name is Caulfield.\"\n\n\"Sorry, Mr. Caulfield,\" she said apologetically. \"I guess I was thinking of Friends. You know...Chandler Bing?\"\n\nChandler did indeed know. He'd heard that so many times he'd lost count. Rather than mention it he just said, \"Yes, I've heard the name. I'm just one of those lucky people with two last names like Anthony James or Terry Thomas or....\"\n\n\"Hadley Kimball?\" she offered with a warm smile of her own.\n\n\"Well, okay. Yes,\" he willingly agreed with a smile.\n\n\"Listen, I really should get going. I'll have to go home and start all over and then head back to the county office and try this again,\" she told him. \"But thank you so much for the coffee.\"\n\n\"And the hot chock-uh-lot with marshamallows! Can I take it in the car with me, Mommy? Pleeease?\"\n\n\"I can give her a lid if that would help,\" Chandler offered.\n\n\"Well, I guess that would be okay,\" her mother said. \n\nShe looked at Avery then said to her, \"Heaven forbid I tell you you can't do something, right?\" \n\n\"Have you warmed up at all?\" Chandler asked.\n\n\"Oh, yes. I feel much better, thank you,\" she told him.\n\n\"My guys will have your car waxed, vacuumed out, and all ready to go when we get back outside. And your next carwash is free.\"\n\n\"No, I can't do that,\" Hadley told him. \"I don't take something for nothing from anyone, especially when I caused the problem. And I can promise you I will be back, Mr. Caulfield. I really like having a clean car, but I hate washing it.\"",
        "\"I'll look forward that, Mrs. Kimball, and I'd like it if you'd call me Chandler.\"\n\nShe smiled and in spite of looking like a wet doll, it was obvious she was a very pretty woman.\n\n\"I will if you'll call me Hadley,\" she said with a smile.\n\n\"And you can call me Avery,\" Avery let him know.\n\n\"Oh, I can, can I?\" Chandler said as he took her chocolate and put a lid on it for her.\n\n\"Yes. Because that's my name. Avery Marie Kimball,\" she informed him.\n\nHe handed her the cup then bent down and said, \"How do you know that's your name? Do you have a drivers license or something with your name on it?\"\n\nAvery giggled then said, \"I'm only four years old. I can't drive a car, silly!\"\n\n\"I see,\" Chandler said. \"Would you please promise me you won't ever get out of the car again unless you ask your mom?\"\n\nShe nodded her head several times and said, \"I promise!\"\n\nThe SUV was ready to go when they got outside, and Hadley thanked him profusely again for everything.\n\n\"It was my pleasure,\" he assured her.\n\nHe took the wet towels from her then said, \"Here. Let me put a couple more in your seat and all around and hopefully that'll help until you can get home and dried off.\"\n\nHe noticed she was still shaking so he grabbed another large terrycloth towel and replaced the one that had been draped over her shoulders.\n\n\"Okay. Now if I can just get home without losing my d....\"\n\nShe looked around and Avery wasn't there and Hadley nearly panicked.\n\nChandler bent down and looked under the SUV. He saw her tiny feet on the other side of the car and said, \"There she is!\"\n\n\"Be still my beating heart,\" Hadley said. \"I'll just go put her in her seat and....\"\n\n\"I'll get her,\" Chandler said.\n\n\"No, you don't need to....\"\n\n\"It's fine,\" he assured he as he walked around back.\n\n\"There's the marshmallow lover!\" he said.\n\nHe opened her door then asked, \"Are you ready?\"\n\n\"Yes, I am,\" she told him clutching her cup with both hands.\n\nHe scooped her up and zoomed her high over his head then lowered her into the seat making airplane noises. \n\nAvery laughed loudly and said, \"Do that again, please!\"\n\n\"Oh, sorry. One ride per customer,\" he said very seriously.\n\n\"You're funny!\" she said as he buckled her in.\n\nOnce Avery was set he called out, \"Okay. You're all set Mrs.... Hadley.\"\n\n\"Thank you so much, Chandler!\" she called back just before he closed Avery's door.\n\nShe waved as she pulled out, and Chandler waved back. He smiled when he saw Avery opening and closing her tiny hand as she tried to wave, too.\n\n\"Cute kid,\" he said to the man standing next to him.\n\n\"Si, senor. Y la mujer es muy bonita,\" the other man said.\n\nChandler had picked up a quite a bit of Spanish from his employees, and knew he'd said, \"Yes, she is, and the woman is very pretty.\"\n\nChandler smiled then said, \"Si, es la verdad, Jorge,\" which means roughly, \"Yeah, that's the truth, George.\"\n\nThankful both the woman and her daughter were okay\u2014and that she wouldn't be suing him\u2014he went back to work and largely forgot about the incident for the next two weeks until she pulled back into the carwash.\n\n\"Hey! How are you Mrs...sorry...Hadley? It's good to see you again.\"\n\nChandler peeked behind her shoulder and said, \"And isn't that Miss Avery McMarshmallow back there?\"\n\nShe was playing with a doll and didn't look up, but she did giggle at his silliness before saying, \"Yes, it is.\"\n\n\"Do you remember me?\" Chandler asked. \"Hot chocolate, marshmallows.\"\n\nSuddenly she looked up and said, \"Mommy? Can we please....\"\n\n\"Not today, honey. We just need to get the car all nice and clean. Do you want to come around and put the money in the machine for me?\"\n\nThen she looked at Chandler and said, \"I almost forgot. I have your towels with me. All washed, dried, and neatly folded.\"\n\n\"You didn't need to do that,\" he told her knowing a few towels was a small price to pay to avoid a lawsuit.\n\n\"I just feel bad for hanging onto them so long,\" she said dismissing his comment. \"I've never owned a business, but I have managed a couple, and I understand inventory and the like.\"\n\nHer comments weren't lost on Chandler as he helped her out and told her, \"I'm upgrading both locations to take credit cards next month so you won't have to get out and get change for a ten or twenty anymore.\"\n\n\"Don't tell Avery that! She loves this thing.\"\n\n\"May I?\" Chandler asked when Avery came around.\n\n\"Um, sure,\" she said.\n\n\"Chandler is going to pick you up this time, okay, honey? Here's the money. Just set in the tray and....\"\n\n\"I know, Mommy,\" she assured her mother as Chandler raised her up.\n\n\"And we lay it in the tray just like this with George Washingmaton's picture like that!\" Avery said as she laid the twenty-dollar bill with Andrew Jackson's face on in the tray. \n\n\"And then we push the slidy thing just...like...this.\"\n\nIt made a noise then spit out four five-dollar bills and Avery clapped.\n\n\"All right! You did it,\" Chandler said as he lowered her down.\n\n\"Yes. I always do the slidy thing,\" she informed him. \n\n\"Now you get the new dollars, Mommy,\" she told Hadley just in case she forgot.\n\nShe and Chandler chuckled at the tutorial before he told Hadley, \"Remember, you have a freebie coming.\" \n\n\"And you please remember, I never take something for nothing,\" she reminded him with a smile.\n\nHe'd been so surprised to see her he hadn't even noticed how nice she looked. Jorge was absolutely right. Hadley was muy bonita. She was as attractive as any woman over 30 he'd ever seen, and that was saying something as Chandler noticed pretty much every good-looking woman over 30. \n\nHe'd lost interest in girls his age several years back and had no desire to date anyone who cared what Kim Kardashian said or thought about anything. He understood that just being 30 or even 40 was no guarantee of maturity or intelligence, but being 18 or 19 was a near-certain guarantee those very important qualities he valued so highly in a woman would be severely lacking and in too many cases, missing altogether. \n\nChandler wasn't sure why he asked but he did ask.\n\n\"Any chance I could talk you into coming inside for another cup of coffee?\"\n\nHe smiled at Avery and said, \"Or hot chocolate?\"\n\n\"Well, I do have to return your towels, and we're not in too big a hurry today, so...sure. We could do that,\" Hadley told him with another bright smile.\n\n\"Can I have lots and lots of marshamallows again?\" Avery asked immediately.\n\n\"You can have as many as your mom says you can. How's that?\" Chandler told her.\n\n\"A little splash of cream, right?\" he said as he poured her coffee.\n\n\"Wow. And you remembered my name. I'm impressed,\" she told him as she set his towels on the cheap leather couch with metal arms.\n\n\"Good customer service means customer satisfaction,\" he told her with a smile. \"I didn't mention it last time, but I also own the carwash on 14th street you said you normally use.\"\n\n\"Oh, right. I completely forgot. Yes, that's more convenient, but this one is also on my way when I'm in this part of town,\" she told him as he handed her the cup before getting some hot chocolate for little Miss Avery.\n\n\"I have to say, you're by far the youngest owner of any business I've ever been associated with,\" she told him in a way that wasn't condescending.\n\nHe handed Avery her cup then sat down across from her and explained how he got into the carwash business.\n\n\"Ah, so you're an entrepreneur then,\" she said as a compliment.\n\n\"I'm working on it,\" he told her modestly. \n\nRemembering what she'd said earlier he asked, \"You mentioned having managed a business or two. Are you currently working anywhere?\"\n\n\"Oh. No. I um...I quit after my husband passed away,\" she said. \"I really enjoyed my job, but the stress level was very high and after losing James it was just too much. Why do you ask?\"\n\n\"I've been looking for a manager of my other location, but I've been so busy over here getting this one up and running, I haven't had time to interview anyone. The guy who's in charge is okay, but I really need someone with managerial experience who can take care of the administrative and logistical side of things.\"\n\nHe smiled at Hadley then said, \"You wouldn't by any chance be interested in a job, would you?\"\n\n\"Honestly? I'm at a point where I think I'm ready to go back to work. I'm just not ready to work 60-hour weeks in an intense, very high-stress environment. I'm not sure I ever will be again, but I do miss working, and to be honest, the money would be very nice.\"\n\n\"I'd only ask for around 30 hours a week, and you could choose the hours if you need to drop Avery off or pick her up from school. I can't offer you full benefits, but I can offer all the free coffee you can drink. The pay won't be anywhere what you're used to, I'm sure, but I can pay $25 an hour. Even if you only did admin and logistics, that would be fantastic. But if you could maybe flash that beautiful smile of yours to our customers....\"\n\nHadley laughed and said, \"For a minute I thought you were going to say my 'legs' and my first thought was scaring them away!\"\n\n\"Um...not hardly,\" Chandler told her with a smile.\n\n\"You know...that's very close to my home, and if I could come in after dropping off my daughter....\"\n\n\"Sure or leave early to go get her,\" Chandler filled in. \"If you think you might be interested, just bring me a resume at your convenience, and if everything checks out, I'd love to have you on the team.\"\n\n\"You know what? I may just take you up on that. You're right, it's nowhere near what I was making, but it sounds like the right level of pace. With Avery gone for a half day, I don't want to sit and do nothing, and I don't think I'm ready to handle constant high pressure yet, but this might be perfect. I'd just have to figure out how to take care of childcare once I pick Avery up.\"\n\n\"You could bring her back to the carwash. The office is the same size as this one, and we could create a little play area in the corner by your desk,\" Chandler offered.\n\n\"You'd let me do that?\" Hadley said not sure she heard him correctly.\n\n\"Yes. Definitely. The current manager makes quite a few administrative errors. Fixing them costs far more than I'd pay you to keep from letting them get made. And that frees him back up to detail cars, the one thing he's really good at. So if letting your daughter stay with you incentivizes you to take the job, then that's a no brainer,\" he told her sincerely.\n\nHadley, who'd been listening intently and occasionally smiling suddenly got very quiet. When Chandler saw her eyes glistening with tears he stopped talking.\n\n\"Are you okay?\" he asked kindly.\n\nHadley blinked twice then said, \"Since I lost my husband, I haven't experienced much in the way of kindness. We moved out here from Ohio a year before James got sick and all of our family is back there. They came out for the funeral and my mom stayed for a month, but other than that, it's been pretty....\"\n\nShe stopped talking then said, \"Sorry. I don't take something for nothing, and I try not to complain. It's just that you've been extraordinarily kind to me and my daughter, and I think it just all hit me at once. I promise you I'm not an emotional basket case, Chandler.\"\n\n\"I never thought that,\" he said in a soft tone. \"In fact, I've thought just the opposite since I met you. I see you as incredibly strong, very brave, and a totally devoted mother. My gut tells me you're going to be perfect for the job, so I'm the one who's grateful.\"\n\nChandler went on to give her a fairly good rundown on what she'd be doing and Hadley said, \"Then I'll get you that resume ASAP. Oh, and you mentioned Carl not being so good at telling others what to do. Please know I have no problem at with that I believe in the honey/vinegar thing and I'm definitely a honey.\"\n\nChandler smiled and only then did Hadley realized what she'd just said.\n\n\"Oh, my gosh. I can't believe I just said that! No wonder you're laughing. At my age, who wouldn't!\" she said cheerfully.\n\n\"No, it wasn't that,\" Chandler told her. \"In fact, I was thinking just the opposite again. I was thinking how accurate that statement was.\"\n\nHadley laughed for the first time and Chandler thought she was...gorgeous.\n\n\"Now that is funny!\" she said. \"Me? A honey? Please!\"\n\n\"I'm not your boss yet, so it isn't harassment for me to tell you are a very beautiful woman, Hadley. You're either being polite or you're just very unaware if you try telling me otherwise. Either way, you are most definitely a honey. Or I guess the better word is\u2014hottie.\"\n\nHadley smiled in a way that told him she was flattered if not touched by his words.\n\n\"Well, thank you. You have no idea how good you just made me feel. My husband always told me I was beautiful, but we were the same age and grew older together so I always believed him.\"\n\nChandler smiled before saying, \"So...you don't believe me when I say it?\"\n\n\"It's not that I don't believe you. It's just that you're...well, you're a very handsome young man, and it doesn't make sense that you would think of a woman my age as....\"\n\nShe looked away for a second then said reluctantly, \"Hot.\"\n\nShe laughed again then said, \"I don't think anyone has ever used that word to describe me. Well, except for James.\"\n\n\"What can I say? I just call 'em like I see 'em and you really are a very attractive...hot... woman.\"\n\nThere was an uncomfortable moment of silence were no one spoke when Avery said, \"May I have some more marshamallows, please?\"\n\n\"We need to get going, Pooter Poot,\" Hadley said.\n\n\"Ahhh!\" the little girl said putting on a pout. \n\n\"I can't believe she's sat here drinking her chocolate with nothing else to do. At home, she's got five things going at once and runs me ragged.\"\n\nHadley laughed again then said, \"Maybe that's why I want a job. You know, to um...get a break from Miss Precocious over here. Except that if she's with me half the time....\"\n\n\"What does preekoshot mean, Mommy?\" Avery asked knowing it had something to do with her.\n\n\"It means...I love you very much, sweetie,\" she said smiling at Chandler.\n\n\"She really is a sweetie,\" Chandler agreed.\n\n\"Yeah, I think I'll keep her,\" Hadley said as she gently brushed back her daughter's long, blonde hair that looked a lot like her mother's.\n\nChandler laughed too, then said, \"She's gonna be a honey or a hottie or whatever someday, too.\"\n\nHadley smiled warmly at him then said, \"I guess it's a good thing I'll be working several miles away from you and your smooth-talking, silver tongue.\"\n\n\"And don't forget my dashingly good looks,\" he said in a clearly joking way.\n\n\"I...I don't think I will,\" she said in a way that made Chandler wonder if there might ever be any possibility of maybe one day....\n\n\"I have to go potty, Mommy!\" Avery announced snapping him out of his fantasy.\n\n\"Right over there,\" Chandler said pointing to the restroom.\n\n\"Are the restrooms gender compliant?\" Hadley asked, a hot topic in Washington State the last few years.\n\n\"We only have one at each location so I just put up the sign that lets people know it's first-come, first-served.\"\n\nWhen Avery came out her mom asked her if she washed her hands then told her to tell Mr. Caulfield goodbye.\n\n\"Bye nice man!\" she said with a pretty smile.\n\n\"Bye, Marshmallow Girl!\" he told her.\n\n\"May I walk you out?\" he asked Hadley.\n\n\"Um...sure. That would be nice. Thank you, Chandler,\" she said sweetly.\n\nHe opened her car door and she promised she'd drop off a resume in the next day or so.\n\n\"I'll look forward to it,\" he told her with a smile. \"You know, I'm sorry about what happened here a couple of weeks ago, but I'm not sorry it gave me the opportunity to meet you.\"\n\nShe smiled back then said, \"Yeah. Me, too. Sometimes life surprises us just when we least expect it.\"\n\n\"Well, it was a very pleasant surprise, at least from my perspective,\" he told her sincerely.\n\nShe sat down then looked up at him while he held the door open for her and said, \"You're a very unusual young man, Chandler Caulfield.\"\n\nHe laughed quietly then said, \"Don't forget you said a very handsome young man, okay?\"\n\n\"Yes. I did say that, didn't I? Perhaps I was briefly delusional or something. I did inhale a lot of soap suds here, you know,\" she replied trying hard not to laugh.\n\n\"Bring me that resume, okay?\" he said before closing the door.\n\n\"Will do. Bye, Chandler,\" she said still smiling.\n\n\"Bye, Marshmallow Girl!\" he said to Avery.\n\n\"Bye Mr. Nice Man!\" she said loudly before giggling again.\n\nAs she drove off, Jorge walked up beside him again and said, \"Jefe, you like her, no?\"\n\nChandler didn't know he was there this time, and he was thinking about Hadley to the point where he was startled by the other man's voice.\n\n\"Oh, hey there, Jorge. Um, yeah. She's very nice.\"\n\n\"Si. And she is very nice looking, no?\"\n\n\"Yes, she is. She lost her husband a year or so ago, but I don't think she's into guys my age. But yes, she's muy bonita.\"\n\n\"You never know, jefe. Maybe someday you ask her out, no?\"\n\nChandler laughed then said, \"Si, es posible. I guess that's possible. Come on, mi amigo. We've got work to do.\"\n\nTrue to her word Hadley came by two days later and asked Chandler if this was a good time to give him her resume. He couldn't help but notice her hair and makeup were perfect and she was wearing a very nice-looking dress.\n\nShe saw him notice and smiled.\n\n\"I thought I should be ready for an interview just in case,\" she told him.\n\n\"Wow. You look great,\" he told her.\n\n\"Thank you. I didn't mean to interrupt, but I did promise I'd drop my resume off.\"\n\n\"You did,\" Chandler said. \"Look, I was just getting ready to have lunch. Is there any chance I could talk you into joining me? It's on me, of course.\"\n\nShe smiled then asked, \"Is this...a business lunch?\"\n\nHe smiled back and asked, \"Would that affect your decision?\"\n\n\"No, I don't think it would,\" she told him truthfully with a pretty smile.\n\n\"Then let me take you to lunch. I can look over your resume, and we can better acquainted.\"\n\nChandler didn't tell her he always brown-bagged it and had his lunch in the little refrigerator in his office nor that he almost always ate at his desk while he took care of paperwork. But after seeing Hadley and how beautiful she looked, going to a decent restaurant suddenly seemed like a very good idea.\n\n\"Let me just change shirts real quick, okay?\" he said. He didn't typically get too dirty or wet, but he always kept a couple of nice shirts on hand just in case.\n\nShe thanked him when he opened the door for her and asked if she'd like some coffee and this time she declined.\n\n\"Okay, I'll just be a sec,\" he said. \n\nHe didn't really have a private area, but he did have a partition that went up to about chest level. Hadley pretended not to look as he quickly stripped off his shirt and threw on something a little nicer.\n\nIn those brief seconds she was aware he was even taller than she'd remembered and although she could tell he had an athletic body she didn't know he looked like that until she saw his chest, shoulders, and upper arms. \n\nShe felt somewhere between embarrassed and downright silly for even noticing, but together with his very handsome face, that perfect smile, and his great-looking, very thick, dark hair, he was really quite good attractive. When she factored in his maturity, work ethic, and amazing personality she couldn't help but think how lucky some young girl would be one day.\n\nHe turned his back to her and she even noticed his lats, something she just never did. She'd been happily married for eight years and had never so much as looked at another man\u2014any man\u2014since the day she fell in love with James Kimball some ten years ago. But as much as she hated to admit it, she was no longer married and she also had to admit, at least to herself, that Chandler Caulfield was different from most men of any age in many ways. And from what she knew so far, all of them were positive. ",
        "Before he turned around she couldn't help but wonder how she might react were he to...what? Ask her out? 'Make a move?' It had been so long since she'd thought about such things she wasn't even sure how to refer to them.\n\nAgain she felt rather silly for even thinking about it, and when Chandler finished tucking in the very nice, button-down shirt he'd just thrown on, she forgot all about it.\n\n\"Okay, if you're ready to go,\" he said with a smile.\n\n\"It must be nice being able to look so good without having to do your hair and makeup,\" she teased as they walked out.\n\n\"Well, I could do my makeup first next time if you'd like,\" he teased.\n\nHadley tried to imagine his handsome, masculine face in drag and tried not to laugh but couldn't.\n\n\"Sorry,\" she said. \"I was just picturing you like that.\"\n\n\"And?\" he said with a smile as he opened his car's passenger door for her.\n\n\"Oh, you don't want to know,\" she told him. \"It...it wasn't...pretty.\"\n\nHe went around and started the car then looked over at her and said, \"Speaking of pretty...you really do look amazing, Hadley.\"\n\n\"Thank you!\" she told him sincerely. \"That's twice you've made me smile.\"\n\n\"Oh, okay. You're counting how I made you laugh thinking about me in drag, right?\" he teased as he backed out.\n\n\"Oh, right. In that case then make that three times,\" she said smiling back at him.\n\nAs they ate Chandler asked her about the places she'd worked before and the kinds of things she'd been responsible for doing as a manager. Her first two jobs out of college were impressive in their own right, but the one she'd held until they moved to Seattle was incredible.\n\n\"You're clearly overqualified for this job and yes, I am paying you far below what you're worth, but if you want the job it's yours,\" he let her know after setting her resume aside.\n\n\"I do,\" she told him, \"so I accept. I think this will be really good for me, too.\"\n\n\"Listen, I know how talented you are so if you grow tired of not having enough...what did you call it\u2014pace? If that's ever the case, I'll understand. You could easily be making six figures working for a power player. Are you really sure you want to take such a...mundane job?\"\n\n\"It's funny but I'd just started to seriously think about going back to work when you offered me this job. I've found myself wondering if it was more than just coincidence that I didn't notice Avery getting out of the car that day,\" she told him.\n\n\"Do you believe in that kind of thing, Chandler?\" she asked.\n\n\"Fate?\"\n\n\"Well, yes. Fate or whatever you care to call it. I never have, but this all seems so...I don't know...designed or something.\"\n\n\"Hmmm. Design implies a designer who imbues things with purpose, right?\" he said pleasantly.\n\n\"Yeah, I guess so,\" she told him, again impressed with his intellect. \"I really never have thought about any of this, but I mean, what are the odds Avery would get out of the car at that particular time, and that doing would so would lead us to meet, and for you to offer me a job just when I'd been thinking about it?\"\n\n\"I'm afraid I can't answer that,\" he told her honestly. \"The notion of a designer raises more questions for me than it answers. I suppose I've always just assumed things happen more or less at random and we attribute something more to it for various reasons. I admit I simply don't know, but that's my take on things. Does that even make sense?\"\n\n\"Yes, it does. It takes the mystery out of it, though, and maybe I'm guilty of wanting a little mystery in my life,\" she admitted.\n\n\"Mystery?\"\n\n\"Well, yeah. I mean, I'm a hopeless romantic at heart. James could make me so happy by just leaving me a sweet note or calling me during lunch. I didn't need flowers or a weekend getaway. The simple stuff was more than enough. I guess maybe I'm hoping to find that those kinds of feelings are still possible. Perhaps I want that so much that I'm inventing something that doesn't exist.\"\n\n\"Even if it doesn't, believing it does seems pretty harmless to me,\" Chandler told her.\n\n\"I suppose,\" she mostly agreed. \"Still, it seems comforting to think we have a guardian angel or something similar.\"\n\n\"Yes. Like your husband, right?\" he said politely remembering what Avery had told him.\n\n\"Exactly,\" she said smiling happily. \"I know James would want me to be happy, and if he can look out for us, then who knows? Maybe there was a reason Avery got out of her carseat that day. And scared me half to death.\"\n\n\"So you could get a crappy job working for peanuts?\" Chandler teased.\n\n\"Or...or....\"\n\n\"Or what?\" he asked.\n\n\"Oh, never mind. That's okay. Just the fanciful musings of a middle-aged woman,\" she said when she realized she was doing the 'what if' thing again.\n\nChandler smiled at her then said, \"You really don't get it, do you?\"\n\n\"Get it?\" she asked with a shake of her head.\n\n\"You say 'middle-aged'. I say\u2014beautiful.\"\n\nHadley smiled and said, \"That's four.\"\n\n\"You are, you know. Beautiful, that is. Sorry, but facts are facts,\" he told her not saying these things to make her feel good but because he believed them to be true.\n\n\"Five and counting?\" she said sweetly.\n\nChandler laughed politely then asked her, \"When would you like to start?\"\n\n\"Now that childcare isn't an issue, I see no reason I can't start tomorrow,\" Hadley offered.\n\n\"No rush, Hadley. If tomorrow works best, that's fine. If you need more time, by all means, take it.\"\n\n\"You know, I had some concerns about working for someone so young, and someone who isn't a parent, but after getting to know you a little better, I think I'm really going to enjoy this.\"\n\n\"I'm sure someone could point out at least one area of political correctness you just violated there, but since I despise political correctness....\" Chandler said smiling at her.\n\n\"Sorry. No offense intended about the age or your um...lack of offspring. Age is kind of out of our control, and if you want children, there's no doubt in my mind you'll have them one day.\"\n\n\"I do. And whenever fate or this...designer or whatever, brings the right woman to me or me to her, I'm very much looking forward to getting married and starting a family. And maybe then my mom will quit asking my dad why I'm not dating more often.\"\n\n\"Ah! Your mom has big plans for grandchildren,\" Hadley said but not in the form of a question.\n\n\"No kidding. I'm not even 21 yet and she's already marrying me off,\" Chandler said with a laugh.\n\n\"It'll happen soon enough,\" Hadley said. \"I have to say, though, I envy the lucky girl.\"\n\nChandler smiled then said, \"Okay. That's one.\"\n\nHadley understood the reference to her counting the times he'd made her feel good and laughed.\n\n\"Turnabout is fair play,\" she said still smiling.\n\nChandler asked for the check then said, \"Whenever you're ready, I'll spend the entire first day with you at our...legacy location. Sorry, I just had to say that as though we have dozens of them.\"\n\nHis smile made her smile.\n\n\"Anyway, I'll introduce you to everyone then get you started. After that I'll try and spend of couple of hours a day with you for a week or so. Once you've got it, I won't bother you at all unless you call me,\" he told her.\n\n\"You won't ever be bothering me,\" she told him in a very sweet way.\n\n\"You say that now,\" he teased before thanking her again.\n\n\"No, seriously. I'm so owe you a sincere 'thank you'. This really does seem like the perfect job.\"\n\nShe paused then smiled and said, \"And maybe even the perfect boss.\"\n\n\"You say that now,\" he repeated drawing another small-but-genuine laugh.\n\nChandler drove her back to the carwash then walked her to her car and opened the door. Just before she got in, she saw all of the employees standing around looking their way.\n\n\"What's going on?\" she asked. When she looked their way everyone smiled and Jorge waved.\n\n\"Oh. They think you're...muy bonita,\" Chandler said.\n\nHe could tell she understood by the way she rolled her eyes and looked at him in that 'you gotta be kidding' kind of way.\n\n\"I agree with them, you know,\" he told her as she got in.\n\n\"I think we're up to six now,\" she said with a smile.\n\n\"I'll meet you there tomorrow morning, okay?\"\n\n\"At the legacy location, right?\"\n\nChandler laughed then said, \"One of these days that won't be quite as funny. Well, I hope so anyway. What time will you be in?\"\n\n\"I'm not used to my boss asking me that question,\" she replied. \"I'll drop Avery off at 7:30 and the there by 7:45\u2014traffic permitting.\"\n\n\"Traffic rarely permits around here, so I'll you around eight, okay?\"\n\n\"Eight it is,\" she said. \"Bye Chandler and again, thank you for this opportunity...and for being so friendly and kind.\"\n\n\"We please to aim,\" he said using a line his dad often did.\n\n\"Oh, brother!\" she said with a laugh and a shake of her head before driving off.\n\nWhen Chandler pulled up to the 'legacy' location, Carl was there to meet him. Chandler had called him and let him know he would be moving back 'out on the line' and Carl couldn't have been happier.\n\n\"I hear the new boss is a looker,\" Carl said as he opened the door his new boss's boss.\n\n\"She's a very attractive woman,\" Chandler agreed.\n\n\"I heard that and that's number seven,\" they heard a female voice say in a friendly tone.\n\n\"You ain't kiddin',\" Carl said as he turned around and saw her.\n\n\"You must be Carl. I'm Hadley and it's a pleasure to meet you,\" she said extending her hand.\n\nCarl wiped his hand on a clean rag he was carrying and said, \"Likewise\u2014boss.\"\n\nHadley smiled then said, \"I'll be outside working with you once the big boss shows me around.\"\n\n\"I'll be looking forward to that,\" Carl said with a smile. He wasn't what anyone would call a good-looking man, but he was hardworking and as honest as the day is long.\n\n\"I was wondering what the shorts and tee-shirt were all about. I can tell you you'll be a big hit with the crew. And not just because you're easy on the eyes.\"\n\nHadley laughed then told him, \"I'm gonna stop counting at nine. So...where do we start?\"\n\nHaving never worked around a carwash, Hadley needed to learn terms specific to the business but otherwise understood everything Chandler started explaining. \n\n\"We really need a better inventory-tracking program,\" she offered. \"This one is adequate but just barely. If you're willing to spend a hundred dollars, I know one that will recoup your investment in no time. Oh, and for another fifty, their payroll program is superb.\"\n\n\"I understand that means per location and even so\u2014done and done,\" Chandler told her.\n\n\"A boss that listens. Now I know I'm going to like working here,\" she said with a smile.\n\nShe may have been in shorts and a blue tee shirt, but she still looked amazing. Her hair was pulled back into a ponytail making her look even younger than normal. Hadley was 33 but looked closer to 25 or so. With her hair like that she could easily be mistaken for at least five years younger.\n\n\"Is Avery doing okay at school?\" Chandler asked once they'd covered all the basics. \"Sorry, I meant pre-school.\"\n\n\"Yeah, and don't you forget it,\" Hadley said. \"Because if you do, Avery will remind you.\"\n\n\"She's got to be the sweetest little thing ever.\"\n\n\"I'm kind of fond of her,\" Hadley said. \"She's been such a trooper through it all. I suppose the only redeeming thing about losing her father is she was so young she didn't go through the kind of heartache an older child would. And sadly or maybe not, she'll barely remember him in a few more years. I guess that's a mixed blessing of sorts.\"\n\nChandler nodded then asked, \"Is it too personal to ask how you're doing, Hadley?\"\n\n\"Well, I guess most of the time I've felt pretty strong these last three or four months. Before that, there were times I just wanted to stay in bed and make the world go away. But Avery gave me the motivation to get up and get going every day, so overall, I'd say I'm doing rather well considering it's only been 15 months. And I have to say, having this job is really going to help. I know I keep saying it but...thank you.\"\n\n\"And if I may say so again, I'm the lucky one here. I can't believe I found someone with your experience willing to take a job so far beneath her skill level.\"\n\n\"Then I guess we can feel lucky together.\"\n\nChandler thought about saying something along the lines of their being together and 'feeling' but didn't. Even so, Hadley picked up on it.\n\n\"What? What was that look all about?\" she asked with a bright, happy smile.\n\n\"Oh, nothing. At least nothing you'd want to hear,\" he told her in a way that only helped to confirm her suspicions.\n\nShe smiled in a way that told him she got the drift then said, \"You might be surprised at the things I wouldn't mind hearing.\"\n\nChandler sat there for a moment thinking before he looked at her and said, \"Even something like me telling you I'd like to ask you to have dinner with me sometime?\"\n\nHadley was a little surprised to actually hear him say what she'd been thinking he meant. It took her a second to get her bearing before saying, \"It's funny, but that's what I assumed you were alluding to.\"\n\n\"Well, I'm happy to know I was able to amuse you,\" Chandler said in a way that was playful rather than having been hurt.\n\nEven so, Hadley said, \"It wasn't amusing, Chandler. It was very sweet of you.\"\n\n\"I think 'sweet' is a step up from amusement,\" he said still keeping it light. \"It's not exactly a resounding endorsement, but I can live with that.\"\n\nHadley looked at him for several seconds before saying, \"Do you really want to go out with me?\"\n\nChandler gave her a funny look then said, \"Yes. I really do. Is it so hard to imagine I do or is it just hard to imagine you actually going out with me?\"\n\n\"The truth is I hadn't really thought about it\u2014until just now. I just sort of assumed you were being nice when you said so many kind things about me because that's who you are\u2014a nice person. I don't hear things like that anymore from anyone so I'll admit it was well...nice to hear.\"\n\nShe smiled then said, \"Very nice, in fact. I guess I just never imagined you'd want to ask me out knowing I'm, you know, a wee bit older than you. Oh, and I also have a daughter so....\"\n\nChandler smiled at her then said, \"Hadley? I don't have much time to date these days, and for the most part, that's fine. I know there will be plenty of time for that after I get a few more locations up and running.\"\n\n\"In addition to the legacy location, right?\" she teased in a polite way.\n\n\"Yes. The legacy location. This place right here. The place where it all began. One day, people will read about the Chandler Caulfield empire and realize this is where it all began.\"\n\nHe was pretending to be narrating the story of his life which had been made into a movie and several books and his 'acting' was so over the top, Hadley couldn't help but laugh.\n\n\"You're the first person who's really made me laugh or feel good about myself since my husband died, Chandler. I can't tell you how good that feels. I will also tell you I'm not blind, so I've noticed...a time or two...that you're a rather nice-looking guy. But I really don't understand the attraction you see in me.\"\n\n\"Evidently, I haven't been very clear about how I see you, even though I've hinted and complimented you, etc. So...I'll try and make it more clear. I don't find dating girls my age interesting or fun. I don't mean to sound egotistical or condescending, but most of them can't carry on a conversation that's deeper than the headlines from TMZ. I don't know if I'm some kind of weirdo or...to be a little less hard on myself...some kind of anachronism, but I am very attracted to intelligent women, and most of them tend to be older than me.\"\n\nHe sat there hoping she wouldn't think he was some kind of smug, sanctimonious jerk after being as open and honest with her as he could.\n\n\"Wow. I have to also admit I didn't see that coming,\" she replied. \"As to you being weird, I'd say just the opposite. You're smart, funny, well-grounded, confident without being cocky\u2014something I despise in men, and mature. So the 'fish out of water' description seems a lot more applicable than 'weird'.\"\n\n\"So...was that a 'yes'?\" Chandler said with a huge smile.\n\n\"You don't give up, do you?\" Hadley said sweetly.\n\n\"Not really. I tend to be pretty tenacious when I set my mind to something.\"\n\n\"If I say 'no' will you fire me?\" she asked. She kept a straight face making Chandler wonder if she could possibly be serious.\n\n\"No. I won't fire you. I might mope around and act like some kind of sad sack for a while, but I would never cut off my nose to spite my face,\" he told her.\n\n\"Then I suppose if you're desperate enough to want to go out with someone my age...I suppose one date wouldn't be all that bad,\" she said with a smile. \n\n\"Hmmm. Another ringing endorsement. Looks like I have my work cut out for me,\" Chandler said pretending to be very serious.\n\n\"I should warn you, though, I haven't been on a date since I was dating James back when you were...oh, never mind.\"\n\n\"No worries. The good news is they got rid of those stone tablets and print the menu on paper these days in most restaurants. Also they no longer....\"\n\nHadley looked for the first thing to throw at him and had to settle for a pad of paper.\n\n\"Okay, okay. I get it,\" she said. \"Kids these days. Sheesh!\"\n\nHer smile was so sweet Chandler wanted to kiss her in the worst way. Instead he promised to give her a call once he'd had some time to think about where to take her.\n\n\"Just don't spend a lot of money, okay?\" she said. \"It doesn't take much to impress me.\"\n\n\"Interesting,\" he said.\n\nHadley raised her eyebrows not sure what he meant.\n\n\"Well, you just said it doesn't take much to impress you, and you did mention a little early you were impressed with me so...taking that to its logical conclusion I'm not...much.\"\n\n\"Oh! Okay. You are so in trouble!\" she said looking for something else to throw. \n\nFinding nothing but a stapler she narrowed her eyes and said, \"You are so lucky this is the only thing I can lay my hands on right now.\"\n\nChandler put his up as he stood and said, \"Okay. I think I'm gonna leave before I get injured.\"\n\n\"Oh, good call,\" Hadley said. \"Because if you stick around any longer, you might just get hurt!\"\n\nShe was very aware this was 'high-school' banter and didn't care. It was just so nice to feel happy again, and she'd also just been asked out by someone she found very attractive. No, she'd have never given him a second look had she not gotten to know him, but now that she had, he had an appeal about him she couldn't really explain.\n\n\"Speaking of calls, I will call you later,\" Chandler said. \"Are you okay with running things for now?\"\n\n\"I feel very comfortable, and I can always ask Carl if I get stuck. I won't hesitate to call you, but I promise I won't be bothering you every few minutes with something trivial,\" Hadley told him.\n\n\"You'd never be bothering me,\" Chandler replied with a smile. \"Call anytime.\"\n\n\"Yeah. You, too,\" she said in her politest voice. \"Anytime.\"\n\nAs he walked out, Hadley found herself staring at his butt, something she just never did. When he turned to wave goodbye as he opened the door she felt like a schoolgirl who'd just been caught doing something wrong. When he smiled at her 'like that' she knew he knew and for the first time in many, many years, she blushed.\n\n\"Oh, my gosh!\" she said to herself after he stopped looking and walked off. \n\nShe waited for the color to drain from her face before going outside and pitching in on the line. More than once she caught one of the guys staring at her butt and could only smile and pretend she hadn't notice. \n\n\"Turnabout really is fair play,\" she told herself flattered by the attention and enjoying being part of a team again.\n\nWhen Chandler called back, Hadley realized the one and only babysitter she'd ever used was out of town.",
        "\"I'm so sorry, Chandler. I really was looking forward to this,\" she said apologetically.\n\n\"Then bring her with you,\" he said cheerfully. \"I love kids and Avery is about as sweet as they get. So bring her along\u2014unless, of course, this is your way of backing out of being seen with me in public.\"\n\nHadley was genuinely touched by his offer and his humor.\n\n\"I'm definitely not trying to back out, Chandler. I just wanted to be honest with you like you were with me,\" she told him.\n\n\"Well, not exactly like I was with you,\" he said playfully. \"After all, I told you I was attracted to older women, and you didn't say a thing about being attracted to younger men.\"\n\nThere was a quiet moment before Hadley started laughing.\n\n\"What you actually said was you were attracted to intelligent woman and that most of them just happened to be older than you,\" she reminded him.\n\n\"Busted!\" he said. \"Note to self. Hadley listens to every word.\"\n\nThat drew another laugh before she got serious again.\n\n\"Are you really sure? About bringing Avery? She can be a little...chatty.\"\n\n\"Well, the more she talks the less opportunity there'll be for me to say something foolish and totally blow it with you,\" he told her.\n\nFor the first time since James got sick, Hadley felt that giddy feeling people get when they like someone. \n\n\"You won't blow it with me, Chandler,\" she said very sweetly. \"I really am easy to please.\"\n\n\"Hmmm. I'm not quite sure how to take that one, either, since you are going out with me. Does that mean I'm really not impressive so you're being kind to me or....\"\n\n\"Chandler? You can stop talking now and pick me up at seven,\" she said unable to stop smiling.\n\n\"And Miss Avery, right?\"\n\n\"Yes, Miss Avery, too. She is going to be thrilled when I tell her.\"\n\n\"I'm glad. And...I'm really looking forward to this,\" Chandler added.\n\n\"Yeah. Me, too,\" she said back. \"So...I'll see you later tonight then.\"\n\n\"You will. Bye, Hadley.\"\n\n\"Bye, Chandler.\"\n\nWhen Hadley picked Avery up from pre-school, she did her 'jabber-jaws' thing all the way back to the carwash before her mom had a chance to talk.\n\n\"How would you like to go out tonight?\" she asked.\n\n\"For pizza?\" she said excitedly.\n\n\"No, for a real, grownup meal. At a restaurant.\"\n\n\"Ahhh! Do I have to eat veggibles?\" she asked making a face.\n\n\"I should say 'yes' but...no, you don't have to eat...vegetables,\" she said stressing the proper pronunciation.\n\n\"Do I have to wear a dress?\" Avery asked as though that would be just awful.\n\n\"No, but you would look very pretty in a dress. And since we're going with someone, I think that might be nice.\"\n\nAvery sucked her breath in the way she did whenever she was excited and said, \"Who, Mommy?\"\n\n\"Chandler. You know, Mr. Hot Chocolate and Marshmallow Man.\"\n\n\"I love him!\" Avery said happily. \"Okay! I'll wear a dress. Mommy? Are you gonna wear a dress, too? You should so you'll be very pretty and then Mr. Marshamallow man will want to marry you.\"\n\n\"Avery Marie! What are you talking about? We're not getting married. We're just going out to dinner. That's all,\" her mom explained.\n\n\"Oh, okay. But I'm gonna ask Daddy to help you get married because I really like Mr. Marshamallow Man,\" she informed her mother. \"But if you don't want to marry him, then I will, okay?\"\n\nHadley didn't reply to her daughter's question. For the first time, she regretted telling her daughter such a tall tale. The thought of her getting her heart broken after losing her father was too much, and when she not only didn't marry the marshmallow man but didn't even go out with him again, how could she explain it wasn't her daddy's fault?\n\n\"Just remember, honey. Angels are very busy and not even they can make all of our wishes come true, okay?\"\n\n\"Okay. But they can make some wishes come true, right?\" she asked hopefully.\n\nHadley sighed, smiled, then said, \"Yes. I'm sure they can, sweetie.\"\n\nAnd that's when Hadley realized Avery had almost certainly outgrown anything decent she had to wear. Yes, she had school clothes, but they consisted of black skirts and white blouses which was the uniform for pre-schoolers. Next year, she'd need a different color skirt, but she'd still be wearing a uniform.\n\nFortunately, there was a mall on the way home and in spite of traffic, Hadley was able to get in and find a very pretty dress for her daughter that didn't cost a lot of money. She was tempted to buy something for herself, but as the money left from James's insurance was running low, another important reason she needed a job, she decided to hold off knowing she had plenty of things to wear at home.\n\nAvery couldn't wait to wear her new dress, and just had to change into it as soon as they got back. She looked adorable in the long-sleeved Bonnie Jean black and white dress with a pair of white tights and black shoes. Hadley put a white bow in the back of her hair and Avery asked if she was beautiful.\n\n\"Why, yes you are!\" she told her daughter.\n\n\"Oh, good. So if you don't want to marry Mr. Marshamallow Man, then he can marry me!\" she said again.\n\nHadley covered her mouth and tried not to laugh, but this time she did reply.\n\n\"Maybe in a few more years, okay?\" she said.\n\nAvery turned around and said, \"Can you wear black and white just like me?\"\n\n\"Oh. Well, I guess we could look,\" Hadley said.\n\n\"This one, Mommy! Pleeeease?\" Avery said pointing at the only black and white dress her mom owned.\n\nShe'd bought it before James got sick and had never worn it. It was black except for the cuffs at the half sleeves and the hem which was very short on the left side but longer the right. The two-inch white border went around the entire dress then ran diagonally back up the its front. It was very cute and even a bit sexy. Now that she'd really looked at it, it seemed too young for a woman her age making Hadley feel it was inappropriate for a first date.\n\nShe held it up to herself but after turning left then right thought, \"Then again, how could it hurt to look as young as possible, right?\"\n\n\"Okay. I'll wear this one,\" she told Avery who clapped and hugged her mother making the decision seem even more right.\n\nWith the start of another school year came the cooler weather and that meant breaking out the coats and sweaters again. It wasn't cold enough for a coat yet, but it was definitely cool enough for a sweater so Hadley grabbed the prettiest black cardigan she had and laid it on her purse as she finished getting ready.\n\nThe last time she'd been this dressed up, she was also wearing black\u2014all black. She tried not to think about that day when Avery had been so small and unable to understand death. Hadley wasn't sure she wanted her to see her father for the last time like that, but he'd looked so much like he was sleeping, she'd raised her up to look at his handsome face that had been thinned by the ravages of cancer.\n\n\"Will Daddy ever wake up again?\" was the only question she'd asked.\n\n\"Well, no one really knows for sure, honey,\" was the best she could offer. That's when she'd made up the angel story, and it had satisfied her daughter's curiosity for the time being.\n\nWhen she was finished getting ready, she tried not be overly critical knowing she was her own worst enemy when it came to her appearance. She'd always loved the way her long, blonde hair looked when she wore black, and with the gold necklace and earrings, she actually felt pretty good about the way she looked for once. The dress really was cute and yes, it was definitely a little bit sexy.\n\n\"Mommy! You look like a princess!\" Avery said when she came in and saw her mom looking at herself in the mirror.\n\n\"And that's why I love you so much!\" Hadley said as she scooped her daughter up to shrieks of laughter.\n\nJust as she was twirling her around, the doorbell rang and Avery hollered, \"I'll get it!\"\n\nHadley sat her down and off she went. Her mother quickly walked behind her just in case it wasn't Chandler.\n\n\"Can you reach it?\" Hadley asked as Avery got her tippy toes.\n\n\"Yes!\" she said as she tried to turn the knob.\n\nHadley helped just enough to avoid being told she didn't need help then stepped back.\n\n\"Mr. Marshamallow Man!\" Avery happily called out.\n\nChandler handed her a whole bag of 'marshamallows' and said, \"Will that last you for a while?\"\n\n\"Mommy? Look! A whole bag of marshamallows!\"\n\nAs Hadley was saying, \"I see that,\" Chandler handed her a bouquet of flowers.\n\n\"Oh, my goodness! Chandler, they're beautiful. Thank you!\"\n\nHadley was so touched she leaned over and kissed him on the cheek just as he said, \"Speaking of beautiful. Wow!\"\n\n\"My mommy's a princess!\" Avery informed him before he mom could reply.\n\n\"Yes, she is,\" he agreed. \"Both of you are just as pretty as can be!\"\n\n\"Do you like my new dress?\" she asked.\n\n\"Well...let me see!\" he said before he reached under her arms and lifted her up.\n\nAvery laughed again and Chandler told her, \"Oh, yes. That is a very pretty dress. And I really like this bow in back. Did you put that there?\"\n\nHe looked at her very seriously and got another laugh.\n\n\"No. I can't reach back there. My mommy did that.\"\n\nShe looked at her mother then said, \"Mommy? Why don't you wear a bow, too?\"\n\nThis time, Hadley drew the line and said, \"Not tonight, honey. One bow in our family is enough, okay?\"\n\n\"O...kay,\" Avery said as Chandler held her.\n\n\"So are you ladies ready to go eat?\" he asked.\n\n\"Yes!\" Avery answered for both of them. \"And I don't have to eat any veggietables.\"\n\nShe was closer to the correct pronunciation but not quite there yet.\n\n\"I still need to get my shoes on,\" Hadley said. \"Can you give me just a minute?\"\n\n\"Sure. Take all the time you need. That'll let me spend more time with the other beautiful girl in this house,\" he said while smiling at Avery.\n\nHer mom wasn't even out of sight when she said, \"Are you gonna marry my mommy?\"\n\nHadley stopped, spun around, opened her mouth in disbelief then didn't know what to say.\n\nChandler laughed and said, \"Out of the mouth of babes, right?\"\n\n\"I'm not a baby!\" Avery informed him.\n\n\"Oh. No, you most definitely are not a baby.\"\n\nHadley was still watching and shaking her head when Chandler said, \"But your mom is a babe.\"\n\nHadley felt her face turn red\u2014again\u2014even as Avery laughed and pointed at her saying, \"Mommy is a bay-by, Mommy is a bay-by!\"\n\n\"I'll um...be right back,\" she said pointing toward the bedroom.\n\nWhen she came back out, Chandler was laughing and playing with Avery but stopped when he saw her. Just the addition of the heels made her even more beautiful.\n\n\"Wow! You look...amazing,\" he told her as he tried not to stare.\n\n\"I wasn't sure about the dress. Is it...okay?\" she asked with a wrinkled nose.\n\n\"It's perfect,\" he assured her. \"Both of you are just perfect. You look like twins.\"\n\nThat comment drew a smile from Hadley and another comment from Avery who talked all the way to the restaurant.\n\n\"This place is very fancy!\" Avery announced when they arrived.\n\n\"Yes, it is,\" Hadley agreed. \n\nShe leaned toward Chandler and said, \"Someone didn't pay any attention to my request not to spend a lot of money.\"\n\n\"It's okay,\" he told her quietly. \"I have 20% off coupons for the buffet.\"\n\nHadley couldn't help but laugh as this was anything but the kind of place that offered discounts or served buffet-style meals.\n\n\"I believe that's number ten,\" she said with a smile that was even more beautiful set off by the dark-red lipstick.\n\n\"I thought you stopped counting,\" Chandler said.\n\n\"I'm a woman, Chandler. I can change my mind if I want to,\" she said as she threw her head back slightly before both of them laughed.\n\n\"Tell me! Tell me!\" Avery said wondering what the joke is.\n\n\"Nothing, honey. Mr. Marshmallow Man just knows how to make me laugh. That's all,\" she said to Avery while looking at Chandler.\n\n\"Like this!\" Chandler said as he made silly faces at Avery.\n\nShe giggled loudly then said, \"He makes me laugh, too, Mommy!\"\n\nBy the time they finished dinner, Hadley saw Chandler in a very different light. She'd been impressed with him since the first time they'd met, but she had no idea he was such an interesting, complex, and fun person to be around. She found herself having a wonderful time made even better by the way Avery not only took to him but by the way he seemed to genuinely care about her, as well. \n\nAnd yet she couldn't seem to get beyond the fact that he wasn't yet 21 years old. He wasn't even able to order a drink with dinner, so after ordering a glass of wine, Hadley canceled the order as she didn't like drinking alone.\n\nWas it wise of her to have such strong second thoughts over just one issue or was she being foolish? On the plus side, he didn't look like a 20-year old boy but rather more like a 25-year old man. But at 33, it wasn't so much how he looked as it was that he'd been just five years old when she'd graduated from high school that kept playing over and over in her mind.\n\nBy the time they got back to her place, Hadley gave up thinking about it knowing this was just a date and nothing more. She did let him walk them to the door and was almost relieved when he didn't ask to come in. \n\nWhat she couldn't figure out was whether she was relieved because he was so young or because she knew if she did let him in, she might do something she'd later regret. No, she'd never sleep with him, but he really was adorable, and it wasn't out of the realm of possibilities she might just let him kiss her.\n\n\"No, this was definitely much better,\" she thought as he got ready to leave.\n\n\"Good night, ladies,\" Chandler said as he bent down for Avery.\n\n\"Can you come inside and play with me?\" she asked innocently.\n\n\"Oh, I don't think so, sweetheart. You're mom is probably tired of seeing me by now. But maybe some other time, okay?\"\n\n\"Ahhh!\" she said pouting again.\n\n\"No, I'm not tired of seeing you,\" Hadley told him. \"I had a very nice time tonight.\"\n\n\"I'm glad. Me, too,\" Chandler told her. \"I'd very much like to do this again some time.\"\n\n\"Can we? Pleeeese???\" Avery begged.\n\n\"Honey!\" Hadley said knowing she shouldn't continue letting her daughter act like that.\n\n\"Well, let's see how things go, okay?\" Hadley said, her eyebrows slightly raised.\n\n\"Fair enough,\" Chandler said. \n\nHe smiled then told her, \"You only get one chance to make a good impression, and I gave it my best shot.\"\n\nNow Hadley felt bad for making such a big deal out of the age thing and told him, \"Honestly? You made a very good impression on me.\"\n\n\"It's my age, isn't it?\" he said somehow sensing that was the problem.\n\n\"I...I don't know, Chandler. Maybe. I mean, the difference between you and Avery is pretty close to the difference between you and me. I hate that it bothers me, but....\"\n\n\"That's okay,\" he told her in a very upbeat way. \"I really am aggressive when it comes to getting what I want, but I'm not pushy. Just know I like you\u2014a lot\u2014and I'd love to go out with you again sometime.\"\n\n\"Can I have some time to think about it?\" she asked politely.\n\n\"Of course. And regardless of what you decide, I couldn't be happier to have you managing the....\"\n\n\"Legacy location,\" Hadley said before they both laughed.\n\nNot sure if he should press his luck or not, Chandler gently put a hand on her shoulder and leaned over and kissed her on the cheek.\n\n\"Me, too!\" Avery said as she watched him kiss her mother.\n\n\"Oh, right!\" Chandler said as he leaned down and pecked her on the cheek. He then did it several time real fast causing Avery to giggle loudly.\n\n\"Goodnight, ladies,\" he said quietly.\n\n\"G'night Mr. Marshamallow Man!\" Avery said as her mom thanked Chandler again.\n\n\"I'll see you bright and early again tomorrow, I guess,\" she said.\n\n\"You will,\" he told her before he waved to Avery again and walked away.\n\nEven though Chandler was positive and professional the next morning, she could tell he was acting differently. It was very subtle, but she wasn't imagining it. He smiled, he laughed, he joked around, but it was the way one person acts once they get the impression the other person isn't interested in them in the same way.\n\nShe couldn't blame him as he'd been a perfect gentleman and had paid well over $100 for the three meals and left a $20 tip. Hadley couldn't remember the last time she'd enjoyed herself so much and yet he was only twenty years old!\n\nFor the rest of the week, he spent a couple of hours with her each morning just as he'd said he would, and when she told him she was ready to 'fly solo' he backed off and stopped coming to the 'legacy' location.\n\nThe following Monday morning, after taking care of paperwork, Hadley was outside helping the crew when someone got of their car and called her by name.\n\n\"Hadley? Hadley Simpson?\" the man said.\n\n\"That was my maiden name. It's Kimball now,\" she said as her brain scrambled to make sense of it.\n\n\"It's me. Mark Levinson. From high school. In Ohio.\"\n\nHadley dropped the towel she was holding as she finally recognized the man who looked vaguely familiar to her.\n\n\"Oh...my...gosh! Mark! What in the world are you doing here?\" she asked as they hugged.\n\n\"I moved out here a couple of years ago. I work for a new software development company,\" he told her. \"How about you?\"\n\n\"My husband and I did the same thing only he was in marketing. He got a job working for Boeing Aircraft and spent most of his time promoting their brand.\"\n\n\"Lucky guy. I'm actually envious. You know I had a huge crush on you back then, right?\"\n\n\"Get out of here!\" she said. \"You had a crush on me? You were the best looking guy in the senior class.\"\n\n\"And you were the prettiest girl,\" he told her. \"And even though you're pretty much soaking wet right now, I'd say you still are. I'd like to meet your husband sometime so I can hate him in person.\"\n\nMark was smiling and being playful making it even harder for Hadley to tell him the truth.\n\n\"Jesus. Hadley, I'm so sorry. I feel like a total ass. Please forgive me,\" he said sincerely.\n\n\"You were just being friendly, Mark. It's okay. Really,\" she assured him.\n\nOnce that was behind them, Hadley couldn't stop smiling as she and Mark reminisced. He eventually asked for her number and gave her his in return.\n\n\"How would you like to get together sometime?\" he asked just before leaving.\n\n\"I'd like that very much,\" she told him having forgotten all about her younger boss. \n\n\"I'll give you a call then. And Hadley? I can't believe we bumped into each other at a carwash in Seattle, Washington of all places after all these years.\"\n\n\"Yeah. Talk about 'small world', right?\" she said still smiling happily.\n\nThat evening, Mark did call and asked her out. Hadley still hadn't found a replacement babysitter and was thrilled when the girl she normally used answered the phone.\n\n\"I'm so sorry, Mrs. Kimball. I just got back today and I missed a few days of school and I'm spending all my time studying and catching up. Anytime after that and I'm happy to watch Avery, but I just can't right now,\" she told her.\n\nShe called Mark back and explained the situation. She could tell he wasn't happy about it.\n\n\"There's gotta be someone to watch your kid, right?\" he said after she'd explained she didn't know anyone else to ask.\n\n\"Unfortunately, no, but I'll do some checking if we can hold off for another day or two,\" Hadley offered.\n\n\"Yeah, sure. I mean, it's been what? Fifteen years or so? What's another couple of days, right?\" Mark told her. He wasn't 'cold' but he certainly wasn't warm, either.\n\nThe following morning, Chandler stopped by just to see how things were going and was very impressed at how well organized everything was.\n\n\"You're worth every dollar I'm paying, Hadley. If we get that second location turning a profit, one of the first things I'm doing is giving you a raise,\" he told her.\n\nShe'd installed the new software programs at both locations and they were already saving money as a result.",
        "Just before he left, Chandler asked how Avery was doing.\n\n\"She's fine. I just need to find a babysitter for her. Well, I have one, but she's currently unavailable and I....\"\n\n\"I'll watch her. Anytime. Just let me know,\" Chandler told her in a way that said he wasn't joking.\n\n\"Oh, I...I couldn't,\" Hadley said unable to look at him knowing it was so she could go out with another man\u2014one her own age who was still very good looking.\n\n\"I'm happy to do it. Even if it's because you're...going on a date.\"\n\n\"How did you know that was the reason?\" she asked amazed yet again at his insight.\n\n\"I didn't know,\" he told her. \"But I do know you're a beautiful woman, and men are going to ask you out. It didn't take much to put two and two together. When do you need me?\"\n\n\"Chandler, I can't,\" she said feeling incredibly guilty.\n\n\"Nonsense! I love that little kid. We can toast marshmallows using your natural gas fireplace so it sounds perfect to me.\"\n\n\"Are you sure? I mean, you have no idea how awkward this seems to me or how guilty I feel that you even offered.\"\n\n\"Come on, Hadley. We're friends, too, right? Friends help each other out so just tell me when.\"\n\nShe winced then said, \"Tonight?\"\n\n\"Sure. What time?\"\n\n\"Um...can I call you?\" she asked still wincing.\n\n\"Yes, and please relax about this. It's no big deal. I'd rather see you going out and being happy than sitting around alone.\"\n\nHe paused then said, \"Of course I'd rather see you going out with me, but if that's not going to happen, then I'd still prefer you to have someone else in your life.\"\n\nHadley sighed then said, \"You are such an amazing guy, Chandler Caulfield.\"\n\n\"Just not amazing enough right?\" he said in a way that didn't sound pathetic or make her feel guilty.\n\nThat evening, Chandler arrived a few minutes early to make sure he had all the info Hadley needed him to have.\n\nAvery was asking to roast marshamallows as soon as he walked in and she was still bugging him about it ten minutes later as he and her mother went over the list she'd made.\n\nHadley looked even more amazing than she had when she'd gone out with Chandler and he told her so. She thanked him and felt even worse about the whole situation and wondered how she could have agreed to let him come over and babysit her daughter when she knew the way he felt about her. Even worse, Hadley still wasn't sure how she felt about him. No, that wasn't true. She knew exactly how she felt about him as long as she could pretend he was at least thirty. But he wasn't so....\n\n\"I'll get it!\" Avery called out again when the doorbell rang.\n\n\"Are you going to marry my mommy?\" she asked when Mark stepped inside.\n\n\"I just might,\" he said as he looked at her mother.\n\n\"No, he is not going to marry me, honey,\" she said sweetly.\n\n\"Because you wanna marry Mr. Marshamallow Man?\" she asked naively.\n\n\"Who's that?\" Mark asked as he looked around.\n\n\"Him! Right over there!\" Avery said pointing to Chandler who waved rather sheepishly.\n\n\"Who's that?\" Mark asked again only this time he asked Hadley directly.\n\n\"Mark? This is my...boss...Chandler Caulfield. Chandler, this is someone I went to high school with about a million years ago,\" she said introducing them.\n\nMark shook his hand then said, \"This kid is your...boss?\"\n\nSlightly annoyed, Hadley said, \"Yes. He is. He owns two car washes in town, and the way things are going, he'll own several more very soon.\"\n\n\"Yeah, okay. Whatever. You ready to go? You look really hot, by the way,\" he said completely ignoring the 'kid' in the room.\n\nHadley looked at Mark then at Chandler then said, \"Thank you again so much for watching Avery for me.\"\n\n\"I wouldn't miss it,\" he told her with a smile.\n\nHe went to shake Mark's hand and wish him a good evening, but the older man ignored it and said to Hadley, \"We need get a move on. We don't want to be late. This place is very exclusive and it wasn't easy getting reservations.\"\n\nChandler didn't say anything, but he saw the distressed look in Hadley's eyes as she grabbed her purse.\n\n\"We're all set,\" Chandler told her. \"Just go and have a good time, okay?\"\n\n\"Bye, Mommy!\" Avery called out as she pulled Chandler's hand to come with her to start their marshmallow roast.\n\nHadley wanted to be impressed by the limousine waiting for them outside, but she never had the chance as Mark talked about himself non-stop from the time they got in it until it dropped her off three hours later.\n\nIt was bad enough when he started in on how he was 'in the gym' for a couple of hours every day, but when he moved on to his 'half-mil-plus-bonuses compensation package' or the exclusive area he lived in with a maid and other staff, she couldn't believe this was the same kind, sweet boy she'd known back in high school.\n\nShe'd barely said anything the entire evening, and when she finally managed to get a word in edgewise about her daughter, the one thing that came through loud and clear was his complete lack of desire to have children.\n\n\"Don't get me wrong. Kids are great. Hell, I'd even be willing to put up with having one around\u2014for the right woman,\" he'd told her.\n\nAs the limo came to a stop, Mark said, \"This doesn't have to end this yearly, you know. We could go back to my place and the driver could bring you home in the morning. After all, you've got the Boy Wonder upstairs watching your rugrat, right?\"\n\nWhen he reached over to brush her hair back, Hadley's skin crawled.\n\n\"I had a really nice time tonight, Mark. I've just got a bit of a headache so I think I'll pass,\" she told him trying to remain polite.\n\n\"It's your loss, babe,\" he said in a way that indicated he wasn't kidding. \"I've changed a lot since high school, let me assure you.\"\n\n\"Yes you have,\" she said forcing a smile.\n\n\"So what do you say?\" he said as he moved closer and tried putting his arms around her and kiss her.\n\n\"I say get your paws off of me. Now!\" Hadley told him in no uncertain terms.\n\nHe reached over and opened her door then said, \"Like I said, it's your loss.\"\n\n\"No doubt,\" Hadley said as she got out.\n\n\"If you change you mind, I'm up most of the night,\" he called to her.\n\nThe driver had jumped out and closed the door for her after Hadley refused to answer Mark. She rarely got angry, but she was very close right now, and had to take several deep breaths and remind herself the two people inside had no knowledge of what happened or why she was so upset before going inside.\n\n\"Mommy!\" Avery called out as soon as she heard the door.\n\n\"What are you still doing up?\" she asked after hugging her daughter.\n\n\"She wasn't feeling so well,\" Chandler told her. \"Right after you left she said her stomach was bothering her. I took her temperature and it's up just a tad. I didn't want to ruin your evening as it doesn't seem serious.\"\n\nHadley put her hand on her daughter's forehead and asked how she was feeling.\n\n\"My tummy hurts,\" she told her mother.\n\n\"Let's get you to bed and I'll get some Tylenol for your fever, okay?\"\n\nIt was a little after 11pm when she finally fell asleep, her red cheeks a sign the Tylenol hadn't yet kicked in.\n\nHadley had told Chandler he was welcome to go home as soon as she got there, but he wanted to make sure Avery was okay first.\n\n\"I'm sure she'll be fine. It's probably just a bug or a cold. Kids are always getting something,\" she told him.\n\n\"So how was your date? If you don't mind me asking?\"\n\n\"Don't ask,\" she said in a way that answered his question.\n\n\"That bad, huh?\"\n\n\"Worse,\" she said. \"I can't stand arrogant people and arrogant narcissists are the worst or the worst.\"\n\n\"Ouch. He seemed okay from what little I saw,\" Chandler said omitting the snide comments and his unwillingness to shake hands.\n\n\"That's what I thought, too,\" she told him. \"As they say, 'looks can be deceiving'.\"\n\n\"Don't give up, okay? There's some guy out there who's perfect for you. Just keep looking, and one of these days he'll walk right into your life,\" Chandler told her with a smile.\n\n\"I'm sure you're right,\" she told him. \"As much as I don't like living alone, I'd rather live by myself than be in a relationship with someone who's in love with himself.\"\n\n\"I consider myself to be a Libertarian, but I totally disagree with Ayn Rand on at least one thing,\" Chandler said out of nowhere.\n\nHadley wasn't an authority on Rand or her philosophy of Objectivism, but she was familiar with it.\n\n\"Rand says altruism is a fault. I think it's a virtue. How can you possibly care about someone and not be willing to sacrifice for them? How can you not put their needs ahead of your own?\"\n\nHadley and James had always put Avery's needs above their own and the needs of each ahead of themselves. Just hearing Chandler say that out loud touched her deeply and reinforced whatever it was she'd been feeling before.\n\n\"Yes! I agree completely,\" she told him. \"I put selfishness right up there with narcissism.\"\n\n\"Yeah, those aren't traits I find desirable in anyone,\" Chandler agreed. \"It's one thing to tell someone you love them. Anyone can do that. It's quite another to show them. And if you don't show them, do you even really love them?\"\n\nHadley just stood there looking at him without saying a word.\n\n\"Is something wrong?\" he finally asked when she didn't speak.\n\n\"No. Nothing's wrong. Except possibly with me for thinking age was such a big deal,\" she said quietly.\n\n\"I'm not pushy, Hadley, but I am here anytime you need me,\" he said just as quietly.\n\n\"Yes, you are, aren't you?\" she told him as she looked into his eyes now not only impressed with him the way she'd been before but seeing, for the first time, a man who was wise, kind and caring well beyond his years.\n\n\"Well, I guess I should be going,\" he said. \"Please let me know how Avery's doing in the morning, okay?\"\n\n\"I will. I definitely will,\" she promised as she walked him to the door.\n\n\"If you need to take her to the doctor tomorrow, by all means, just go, okay?\" he said as they stood at the door.\n\n\"Thank you, Chandler,\" she told him. \n\nShe looked down then said, \"I think tonight helped me see things a lot more clearly.\"\n\n\"I won't ask you to elaborate,\" he said quietly with a bit of a smile.\n\n\"Thank you,\" she said as she looked back up at him. \"And thank you so much for watching my baby tonight. She really loves you, Chandler.\"\n\n\"Well, I love her, too,\" he told her.\n\nChandler told her goodnight then as he turned to leave, Hadley gently grabbed his forearm then kissed him on the cheek.\n\n\"I should babysit for you more often,\" he told her as his body ached to hold her and actually kiss her.\n\n\"Chandler?\" she said without replying to his comment.\n\n\"Yes?\"\n\n\"If...if, you know, if you still wanted to maybe...get together sometime....\"\n\n\"I would. I'd like that very much,\" he told her as he turned back around to face her.\n\n\"Me, too,\" she said sweetly as she looked back up at him.\n\n\"Well, goodnight then,\" he said again and turned to leave.\n\nAgain, she gently grabbed his arm.\n\n\"Chandler?\" she said again.\n\n\"Uh-huh?\"\n\n\"I...I wish I'd...gone out with you tonight,\" she told him her eyes locked with his before looking down again.\n\n\"Me, too,\" he said.\n\nThe third time he turned away and she took his arm he knew something was different.\n\n\"Chandler?\"\n\nHe didn't answer this time. He just looked into her eyes.\n\n\"Would you...would you...kiss me?\"\n\nHer voice was soft and gentle and full of emotion as she stared into his eyes.\n\nHe put his hand on her shoulder and for the first time, softly pressed his lips to hers as she put an arm around his neck and kissed him back.\n\n\"Like that?\" he asked quietly when it ended.\n\n\"Uh-huh. Just like that,\" she said with a warm smile.\n\n\"I really should go,\" he told her.\n\n\"Okay. Goodnight and...thank you. Thank you for keeping an eye on Avery so I could open my own eyes to...to something I might have otherwise missed.\"\n\nHe could tell by her eyes she wanted him to kiss her again so he again kissed her one more time before leaving without saying another word.\n\nWhen he left, Hadley stood there for some time thinking about what had happened that night. She started with the kiss and worked backwards to the time Mark arrived and realized she'd been making way too much out of their age difference. Chandler was far more mature and a much better man than Mark could ever hope to be with his money and his gated home and the gym he had inside it.\n\nShe couldn't say she was in love with this much-younger man, but she knew she had feelings for him and that she'd never let age alone stand in the way of her finding out. And if it turned out he wasn't this perfect guy Chandler mentioned who'd one day just up and walk into her life, she knew she'd be better off for having gotten to know him. \n\nFor the first time since James passed away, Hadley felt very hopeful about her romantic future.\n\nShe was up at 5:30am and just as she was finishing a cup of coffee she heard Avery call out for her. She ran into her room and knelt beside the bed and asked what was wrong.\n\n\"My tummy hurts really bad!\" she said before she started crying.\n\n\"Okay. We're gonna take you to the doctor,\" her mom said as she scooped her up.\n\nHadley could tell her fever was way up, and the way Avery was crying told her this was serious. She threw a few things in a bag, grabbed her purse and slung it over her shoulder, then carried her daughter to the SUV.\n\nThey got to the ER of the nearest hospital in just ten minutes as there was mercifully no traffic on the roads yet. Hadley checked them in, and a few minutes later a nurse took them back and checked Avery's vitals.\n\n\"Her temperature is 104.2,\" the nurse said. \"I'll let the doctor know right away.\"\n\nShe wasn't aware that anything over 104 for a child moved the patient up the triage list, and within ten minutes a doctor showed up and began asking questions as he poked and prodded.\n\n\"I'm going to run a blood test while we do a CT scan real quick, but I'm pretty sure this is appendicitis,\" he told her. \"Her abdomen is distended leading me to believe she's getting close to rupturing so we need to move quickly.\"\n\nHadley stayed next to her daughter trying to soothe her (and her own nerves) as a nurse drew blood so the lab could check her white cell count.\n\nIt was now 6:30am and Hadley knew who to call.\n\n\"Chandler? It's me. I'm at the hospital with Avery and....\"\n\n\"I'll be right there,\" he said, cutting her off, as he was getting dressed. \n\nHe flew out of the house and drove straight to the hospital and found her just as the blood results were coming back.\n\n\"I'm now 100% certain it's appendicitis,\" the doctor told her just as Chandler came in.\n\nHadley threw her arms around him and told him what was happening.\n\n\"She'll be fine,\" Chandler assured her. \"They do this all the time, okay?\"\n\n\"Okay,\" she said trying not to cry.\n\nChandler let go of her then bent over and let Avery see him.\n\nShe was still crying but reached up to hug him.\n\n\"My tummy hurts really bad, Mr. Marshamallow Man,\" she said through her tears.\n\n\"They're gonna fix you all up and make it feel better,\" he assured her.\n\n\"Will you be here when I'm all better?\" she managed to choke out.\n\n\"Yes. Of course I will,\" he told her. \n\nShe hugged him tight before the nurse said to Chandler, \"We need to take your daughter down to the OR now.\"\n\n\"Oh, she's not my....\" he began saying as he felt Hadley's hand slip into his.\n\n\"Thank you,\" she told the nurse who promised they'd take good care of her.\n\nShe kissed Avery on the forehead and told her how much she loved her as they wheeled the gurney out.\n\nAs they turned around, a hospital administrator was standing there with a clipboard.\n\n\"Mrs. Kimball? Good morning. I've Athea Pinknay. We need to have you sign a release and discuss payment options. Can you and your husband please follow me?\"\n\n\"Oh, I'm not her....\"\n\n\"Yes. We'll come with you,\" Hadley told her as she squeezed Chandler's hand.\n\nHadley signed the release immediately then braced for the bad news knowing she didn't have any insurance.\n\nThe ER visit alone was just over a thousand dollars and when she saw the bottom line for the entire procedure, she felt ill. The CT scan cost was nearly $4,000 and the total for the surgery, the OR, and everything...so far...was a staggering $30,752.\n\n\"Now this doesn't include post-operative care,\" Ms. Pinknay told her. \"Since you don't have insurance, we need to work out some kind of payment plan. How would you like to take care of this?\"\n\nHadley knew she had about $12,000 left in savings and there was maybe another $22,000 left from her husband's $50,000 life insurance policy. She could pay for the hospital visit but would be wiped out financially. Payments were her only real option so she said she'd divide the cost into as many monthly payments as the hospital would allow and signed an agreement to that effect with her first payment due in just thirty days.\n\nChandler didn't say a word as he watched Hadley fighting back tears from the stress of her daughter needing surgery and compounded by the additional stress of having to pay for it all herself.\n\nShe never once complained, though, and several times she leaned on Chandler's shoulder or just held his hand.\n\n\"Thank you for being here,\" Hadley said after they left the administrator's office.\n\n\"You couldn't keep me away,\" he told her as they walked hand in hand.\n\n\"Chandler? I...I loved what you said about loving and giving last night,\" she told him out of nowhere.\n\n\"I meant that,\" he told her sincerely.\n\n\"I know you did. And....\"\n\nShe turned toward him and tried to smile as she said, \"And you're proving it by being here for me. For Avery, too, of course.\"\n\n\"As I said, you couldn't possibly keep me from being here for you,\" he told her again. \"Both of you.\"\n\nAs he did, she fell into his arms and cried, the stress finally demanding a release.\n\nChandler stood there and held her until she was strong enough to go sit in the waiting room. Neither of them had eaten, and yet neither of them felt like they could.\n\nTwo hours later the same doctor came out and told them the operation went perfectly and that Avery was being taken to a recovery room where they could go see her in a few minutes.\n\nHadley cried again with sheer relief and thanked the doctor several times before he moved on to his next patient.\n\n\"Come on. Let's go see our little girl,\" Hadley said as she again took Chandler's hand.\n\nThere were tubes and beeping sounds, and Hadley was shaking when she saw her baby laying there so small and helpless.\n\nShe waited patiently until she opened her eyes.\n\n\"Avery? Honey? Can you hear me?\" her mom asked.\n\nShe nodded but didn't speak.\n\n\"You're gonna be all better,\" her mom said forcing herself to be strong.\n\n\"Did Daddy watch over me?\" she asked very quietly.\n\n\"Yes, he did,\" Chandler said answering for Hadley. \"And he always will, sweetie.\"\n\n\"I still want you to be my new daddy,\" Avery said barely able to talk.\n\n\"You just try and rest and get better, okay,\" he told her before kissing her forehead.\n\nThey sat there for another hour before Hadley finally said, \"You don't need to stay any longer. I'll be fine now.\"\n\n\"Are you sure?\" he asked.\n\n\"Yes. I'm sure,\" she told him.\n\n\"If I leave, you have to promise to keep me updated whenever anything changes.\"\n\n\"I will. I promise,\" she told him.\n\n\"Okay then. I have some things I need to take care of. Can I get you anything before I go?\"\n\n\"No. As long as you promise you'll come back then no, I don't need anything...else,\" she said her eyes staring into his.\n\n\"We'll get through this. I promise,\" he told her as he put a hand on her face.\n\nHadley nodded then said, \"Yes we will. Together, right?\"\n\n\"Yes. Together,\" he told her.\n\nBy noon, Chandler had the funds he needed. He'd explained it all to his father who'd agreed to loan him the money after Chandler said he'd sell both locations if necessary.",
        "\"Wow. This woman must be pretty special,\" his dad said as he wrote out the check for the full amount owed.\n\n\"She is, Dad. She really is. And her daughter is just as special to me.\"\n\n\"Do you love her?\" he asked as he handed his son the check.\n\n\"I do,\" he told him. \"I haven't told her yet, though. She's needed time to decide what she's feeling, but yes. I do love her.\"\n\n\"For pretty much anyone else your age, I'd try and talk them out of getting involved with anyone that much older, but knowing you like I do, I know first of all it wouldn't help and second, I know you have good judgment. If she's this important to you, then she's that important to me, too.\"\n\n\"Thanks, Dad. I can't tell you how much it means knowing you're always there for me.\"\n\nHis dad smiled then said, \"You did hear me say this was a loan, right?\"\n\nChandler laughed then hugged his father and thanked him again.\n\nAn hour later, the hospital was paid in full and Chandler made sure Mrs. Pinknay knew this was to be kept anonymous.\n\n\"You are one very generous...friend, Mr. Caulfield,\" she told him when he explained things. \"Okay, my lips are sealed!\"\n\nHe found Hadley right where he'd left her only this time she was asleep in the chair. He sat down as quietly as he could then just sat there watching her and then Avery as they slept. \n\n\"My two 'anjuls',\" he said to himself.\n\nHadley's neck was bent over in what looked like a very painful position and when she finally woke up she reached for it unaware Chandler was there.\n\n\"Oh, my heavens! I had no idea you were here,\" she told him as she rubbed her neck.\n\n\"Here, let me,\" he told her as he got up and stood behind her.\n\n\"That feels so good!\" she told him as he massaged her neck.\n\nShe reached up for his hand as he continued to work and said, \"I had a dream while you were out.\"\n\n\"What kind of dream?\" he asked.\n\n\"Don't laugh, okay?\"\n\n\"I won't.\"\n\n\"I dreamed my husband...James...was right there, above Avery's bed,\" she explained pointing to the area above the bed. \"He looked down and told me everything was going to be fine because he was watching over us.\"\n\n\"That must have been have very comforting,\" Chandler told her.\n\n\"It was,\" she admitted. \"He said something else, too.\"\n\n\"Oh?\"\n\n\"Yeah, he told me he wanted me to be happy, and that he'd sent the perfect man for me and all I had to do was look for him. I tried talking to him, but he couldn't hear me. I could only hear him. I wanted to know who it was and what his name was.\"\n\n\"Did he tell you?\" Chandler asked.\n\n\"No. He didn't give me a name. He just said, 'I can't be there anymore, but I'll always be right here watching over both of you. And then he was gone. Chandler, it seemed so real to me!\"\n\n\"Maybe it's a sign,\" Chandler said knowing he didn't believe in such things.\n\nShe wanted to tell him that's when she woke up and saw him sitting there. The 'perfect' man her husband had sent her way. And that's when Avery woke up.\n\nShe was feeling much better and asked for something to drink. Chandler handed a cup of water with a straw in it and realized he was finally hungry and asked Hadley if she'd like anything.\n\n\"I'm actually starving,\" she said as she reached into her purse.\n\n\"You've got to be kidding, right?\" Chandler said telling her with his eyes to put that away.\n\n\"Sorry,\" she said. \"I forgot who I was with for a moment.\"\n\n\"Don't let that happen again, young lady,\" he told her with a smile.\n\n\"I won't,\" she said sweetly. \"How could I when you're so sweet to me?\"\n\nWhile he was out, the doctor stopped in to check on Avery and said everything was right on track.\n\nHe turned to Hadley and said, \"I hear you have a guardian angel.\"\n\nShe sat up straight and asked, \"What did you just say?\"\n\n\"Mrs. Pinknay told me someone came and paid your bill in full. I was just making a joke about the guardian angel,\" he said wondering if he'd done something wrong.\n\n\"That's not possible,\" Hadley said. \"No one even knows I'm here.\"\n\nShe sat quietly for a moment then said, \"Except for one person.\"\n\n\"If I just let the cat out of the bag, I'm really sorry. I don't know why I assumed you knew,\" the doctor said just as Chandler came back with sandwiches and coffee.\n\n\"Hey, doc! Is everything okay?\" he asked as he handed a cup of coffee to Hadley.\n\n\"Yes. With Avery anyway,\" he said while looking at Hadley.\n\n\"What am I missing?\" he asked looking around.\n\nThe doctor put his hands up and said, \"I'm probably already in deep with Mrs. Pinknay. I don't think I should say anything else other than that I'll be back to check on Avery in another six hour or so.\"\n\nAnd with that he was gone.\n\n\"What was all that about?\" Chandler said as he unwrapped a questionable-looking sandwich from the hospital cafeteria and handed it to Hadley who didn't answer because she had tears in her eyes again and was having trouble speaking.\n\n\"Hey, are you okay?\" Chandler asked now very concerned. \"Did the doctor just tell you something I should know about? Is Avery okay?\"\n\n\"Nothing you don't already know about,\" she said reaching for his hand as the tears fell.\n\n\"I'm getting very concerned,\" he said as he took her hand. \"Can you please explain what just happened?\"\n\n\"It's...you,\" Hadley said as the tears streamed down her face. \"You're my guardian angel, aren't you?\"\n\n\"I...I don't know what you're talking about,\" he said, not sure whether or not he did. There was no way she could know unless that sweet little woman had told her after promising she wouldn't.\n\n\"Did Mrs. Pinknay stop by while I was out?\" he asked trying to sound unconcerned.\n\n\"No. She didn't,\" Hadley said as she stared into his eyes through her tears.\n\nHadley half stood up then sat down on his lap and put her arms around him.\n\n\"Okay, as much as I'm enjoying this...what in the world is going on?\" Chandler asked.\n\n\"A miracle,\" Hadley told him. \n\nShe wiped her eyes then sat up to look at him. \"You. You happened, Chandler Caulfield. You are my miracle.\"\n\n\"By hiring you?\" he said. \"Or is it the cheap sandwich I just brought?\"\n\nShe put her hand on his face and said, \"I know. I know it was you. And now I know who James meant.\"\n\nShe pulled back a bit more then said, \"He meant you, Chandler. You're the man who's perfect for me.\"\n\n\"I have no idea what you're talking about, but if it gets you to sit on my lap, I'll take credit for it,\" he told her with a smile.\n\n\"You knew I'd never let you because I don't take something for nothing. So you just did it anyway because....\"\n\n\"Because?\" he asked.\n\n\"Because...you needed to show me that you love me without saying a word,\" she said as tears began to fall again. \"And...and I love you, too, Chandler.\"\n\nBefore he could reply, Hadley leaned down and kissed him. This kiss wasn't like the kisses at her door when she only wondered if she might love him. This was a very real, very meaningful kiss that said she did know; that she was sure and that she was beyond grateful. Not just for his generosity but for his love for her, too.\n\n\"Wow. Whatever I did, I'm gonna keep doing it,\" he said when the kiss ended.\n\n\"I know you will,\" she told him. \"Because that's who you are and that's why I'm falling in love with you.\"\n\nAvery's eyes had just opened and she'd heard what her mom had said.\n\n\"So you are going to marry Mr. Marshamallow Man?\" she asked, her voice still tiny and frail.\n\n\"Not unless he asks me, honey,\" she said without taking her eyes off the man she loved.\n\nA month later, he did ask her, and she said 'yes' without the slightest hesitation. Chandler had introduced her and Avery to his parents the day after she was released from the hospital, his father having filled his mother in on the rather unusual situation.\n\nInitially concerned, his mother's fears melted away when she met this beautiful, kind, sweet woman and her gorgeous little girl. She and Hadley became friends immediately and she couldn't wait to babysit for this precious little child who had quickly and fully recovered for her appendectomy.\n\nWhen Chandler brought Hadley to his parents' home to pick up Avery after proposing, Hadley told her daughter what happened and showed her the beautiful new diamond ring on her finger.\n\n\"So now you're going to marry Mr. Marshamallow Man?\" she asked with hopeful excitement.\n\n\"Yes I am,\" she told her. \"And if it's okay, he'll be your new daddy.\n\n\"Well, of course it's okay,\" she said precociously. \"My other daddy already told me he would marry you so why wouldn't I want him to be my new daddy?\"\n\nChandler bent over and picked her up and held her in her arms.\n\n\"You can call me Daddy if you'd like to,\" he told her.\n\n\"I will. Sometimes,\" she said. \"But can I still call you Mr. Marshamellow Man, too?\"\n\n\"You can call me anything you like, sweetheart,\" he told his daughter-to-be as Hadley moved over and put her arms around both of them.\n\n\"I guess there was a reason Avery got out of her carseat that day,\" she said quietly. \"I just had no idea something that seemed so traumatic at the time would lead to something so wonderful.\"\n\n\"I guess that's why they call them miracles, right, honey?\" he told her.\n\n\"I guess so, sweetheart,\" she told him as the three of them held each other close.\n\nChandler's mother got the big wedding she'd always dreamed of after informing her husband he was going to pay for it and be happy about it. Truth be told, Gil Caulfield was as happy as his wife, as he'd grown to love Hadley like the daughter they'd never had and he was gaga over little Miss Avery whom he spoiled horribly even as Hadley started enforcing boundaries and rules again.\n\nBoth grandparents love their new granddaughter dearly, and had she been the only one they ever had, they'd have been thrilled. But when Hadley told them a year later she was two months pregnant, Chandler's mother nearly passed out with joy and Gil was passing out cigars the next day and then again when when their grandson was born seven months later.\n\nHadley continued helping out at the legacy location until she was unable to work then helped Chandler get their third location up and running two years later.\n\nChandler Caulfield still found it very hard to believe in the supernatural or in miracles, but when he thought about the odds of all that had happened and the way it had happened, he was at least open to the possibility. \n\nAnd when he held his son for the first time he actually looked up and said, \"James? I never had the privilege of meeting you, but if you're there and looking over your wife and daughter...thank you from the bottom of my heart.\""
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older man",
        "younger woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/carwash"
}