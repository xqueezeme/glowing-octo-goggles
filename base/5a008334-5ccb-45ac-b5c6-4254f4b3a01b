{
    "title": "I Will Love You Forever Pt. 2 Ch. 04",
    "pages": [
        "I would like to take a moment to thank all of you who have been following the lives of Patricia, Kenji and the rest of their family. I thank you for continuing follow them on their journey. I would also like to thank you all for your encouragement and kind comments and emails; they are all very much appreciated. Thank you to Donalde for reading not just this story but also all of my others and pointing out the \"holes\" and to Iread2relax for her support. Once again, thanks to all of you, all of you are awesome! \n\n**********************\n\nKenji drove Abby home while Joel followed them in the other car. Abby was in a fog, she had known that there was something wrong with Ralph but hadn't pushed. Tears ran down her face as she thought about him lying in the hospital bed so helpless. She also knew that when she kissed him goodnight and spoke to him that he was awake and chose not to respond.\n\n\"Abby, you could not have known.\" Kenji said softly.\n\n\"I knew that something was wrong, I felt it.\" Abby replied tearfully, \"I should have made him go to the doctor or called one to the house.\"\n\n\"It wouldn't have made a difference.\" Kenji replied gently.\n\nHe was right and Abby knew it but she still believed that there was something that she could have done. \n\n\"Would you like for me to stay with you?\" Kenji asked already knowing the answer.\n\n\"No, you go home to Patricia and the children, I'll be fine.\" she replied.\n\n\"You should not be here alone, Nick and my mother would be happy to come over.\" Kenji offered.\n\n\"I'll think about it.\" Abby replied.\n\nThe fact of the matter was she wanted to be alone. When she kissed Ralph and told him that she loved him, she didn't know exactly how she meant it and she had to deal with the possibility that he could very well die. She had to wonder if it was possible to change one's sexual preference and it was what it meant for her and Ralph if he survived.\n\nShe wiped the tears away; there would be time to sort out her feelings for Ralph later, once they got him back home. She looked at Kenji and knew that if she didn't call Nick, he would.\n\n\"I'll call Nick.\" she said softly.\n\n\"Good because I was going to.\" Kenji replied as he pulled into the driveway. He got out of the car, helped Abby out and held his hand out for the house keys. \n\n\"You don't....\" and then she stopped herself, this was Kenji and he wouldn't leave until he knew that she was safely inside. \n\nShe handed him the keys and followed him in. She sat her purse on the table, headed for the phone, and called Nick. When she was ended the call, she turned to Kenji, \"they're coming, why don't you go home? Patricia has got to be getting worried.\"\n\n\"I'll wait.\" Kenji replied and headed to the telephone.\n\nAbby heard him talking to Patricia in the soft tones that he used whenever she was upset, she was taking the news hard. \n\n\"May I come in?\" Joel asked.\n\n\"Of Course you may!\" Abby exclaimed ashamed of herself that she had forgotten about him.\n\nJoel stood by the door unsure of what to say. Ralph wasn't dead yet so he couldn't give condolences, he didn't know her well enough to give her a hug or to give assurances so he said nothing as he listened to Kenji talk to Patricia.\n\n\"Would you like a cup of tea?\" Abby asked. \"Kenji is staying until Nick and Hana get here.\"\n\nHere was something that he could do, \"Please allow me to make the tea, just tell me where things are.\" Joel said.\n\n\"Thank you but I need to be busy, but why don't you help?\" Abby asked.\n\nKenji came back into the kitchen, \"Patricia is upset but she is fine with me waiting with you until Nick and my mother get here.\"\n\n\"I can stay.\" Joel said, \"That way you can go home and be with Patricia and the children.\"\n\n\"Good idea.\" Abby said. \"He can sleep on the couch or in the extra room if Nick and Hana don't use it.\"\n\nA few minutes later, Kenji was gone leaving Abby alone with Joel.\n\n********\n\nOn the way back to the house, Kenji stopped at Hattie and John's house to give them the news.\n\n\"How's Patricia?\" John asked.\n\n\"She is upset but otherwise fine, you can come back with me if you wish.\" Kenji replied.\n\n\"Give us a minute.\" Hattie said before John could speak.\n\n\"Well have a seat.\" John said, \"It'll take her a few minutes to get herself around.\n\nJohn looked at the man that at one time he hated simply because of his race. He found it hard to believe that he had changed his mind about him, this man he now considered a son. That he loved and protected his baby girl and their children went a long way toward changing his mind about him. He couldn't have picked a better man for his baby himself.\n\nHe was about to tell Kenji that when Hattie called down, \"John pack up the eggs and whatever else we might need for breakfast and lunch!\"\n\n\"Allow me to help you.\" Kenji said as he stood up.\n\n\"Kenji, I know we had a bad start and all but I want to let you know that I think you a good man and I'm glad that you and my baby are together.\"\n\nKenji didn't know what to say. While he knew that Patricia's father had accepted him and their marriage, he never expected to hear him say it.\n\n\"Thank you.\" Kenji said with a bow. \"I am pleased and honored to be considered a member of your family.\"\n\n\"You're welcome but we'd better get those things packed up before Hattie gets down those stairs.\"\n\n*********\n\nThe children were in bed by the time Kenji made it back with Patricia's parents and she was cried out or so she thought. As soon as she saw Kenji walk through the door, she ran to him, wrapped her arms around him and cried. She thought that she was ready to let Ralph go if that is what he wanted. Now she wasn't so sure.\n\n\"How was he?\" she asked even though Kenji had already told her on the phone.\n\n\"He is doing as well as can be expected.\" Kenji replied, \"And Abby is doing the same.\"\n\n\"He's going to die isn't he?\"\n\n\"I don't know how to answer that.\" Kenji replied, \"Part of his survival is in his hands and if he does survive the chances are good that he will not be able to walk or talk. He will need total care.\"\n\n\"He won't want to live like that.\" Patricia murmured, \"He would rather die first.\"\n\nKenji didn't reply, what Patricia said was true.\n\nShe stepped out of Kenji's embrace to hug her parents. \n\n\"You can have our room and we'll go downstairs.\" she told Hattie as she hugged her and then her father.\n\nThe thought about which of her parents would die first crossed her mind as she hugged her father and she shoved it away. She didn't want to think about how much that would hurt. Losing Ralph was painful enough.\n\nLater when the food was put away, John and Hattie were in their room, Kenji, and Patricia sat on the sofa. Kenji had his arms around Patricia holding her tight against him, this wasn't the first time that he had lost a loved one. Several had died when the bombs fell on Hiroshima and Nagasaki and those deaths included friends. This was a first for her; he knew that Ralph was going to die. Patricia was right; he wouldn't want to live as an invalid. He kissed her forehead and closed his eyes to rest. Eventually they fell into an exhausted sleep.\n\n*******\n\nRalph laid awake his mind sifting through memories, some good and some bad. The bad ones he pushed away the good ones he lingered on. Among those that he lingered on was the first time that he met Kenji. That one day changed his life in ways that he had never imagined and then there was Patty and then the babies. He had become a part of the most unorthodox family that he could think of and he loved each one of them with the exception of Kenji's father. He would never forget what had almost happened to Patricia because of him, that he didn't know Patricia then didn't matter. However, He knew her now and she had become like a daughter to him and she had been threatened. \n\nHe wondered if he could make himself forgive Hiroshi Takeda, it would make Patricia happy if he did but if he died, how would she know? His mind wandered to Abby, she was one hell of a woman and he meant it when he said that he loved her and not as a friend. \n\n\"Your timing is off.\" he chastised himself. He wondered why he had never told her how he felt about her and now here he was too helpless to take care of his own basic needs. The smell of urine his nostrils before it registered that it was his urine that he smelled. With his good eye, he watched the wetness spread through the thin blanket and then felt it as it hit his right leg.\n\nTears of shame ran down his face as he felt the urine soak his gown. He wanted to die; he couldn't and wouldn't live like this. He couldn't live with having to have someone feed him or having to clean his dirty ass when he shit or clean him up when he pissed. It didn't matter that all of them were and would be willing to care for him, he simply couldn't let them live like that.\n\n\"Hello Mr. Goodman.\" The male aide said greeting him. \"I see that you've made a mess, we'll get you cleaned up right away.\"\n\nAs the aide cleaned him and changed the linens and his gown, Ralph wondered how he could make himself die.\n\n*********\n\nSally took the news hard. She and Ralph had their moments but she had come to love and respect the old man. The children had come to love him as well and it fell to her to tell them that he could possibly die. The next question was did she call the prison to tell Lawrence. She was almost certain that he wouldn't care but still he deserved to know.\n\nShe told the children first and was surprised that they took it as well as they did. The next thing she did was to call the prison. She hoped that they would just take a message; she had no desire to hear Lawrence's voice again.\n\n\"This is Sally Goodman.\" she said when someone answered the phone, \"Could you get a message to Lawrence Goodman?\"\n\n\"Hold please.\"\n\nA few minutes later, Lawrence's voice filled her ear.\n\n\"Hello Darlin' couldn't wait until I called you again?\" he asked clearly amused.\n\n\"Your father had a stroke.\" she blurted out wanting the phone call to end.\n\nThere was a moment of silence before Lawrence replied.\n\n\"Well isn't that just too bad.\" he said without a trace of sorrow or worry in his voice.\n\n\"He could die! Don't you care?\" Sally asked.\n\n\"I could lie to you and say that I did but I won't do that.\" Lawrence said.\n\n\"This is your father!\" Sally exclaimed.\n\n\"Is that supposed to mean something?\" Lawrence asked, \"And he stopped being my father when he chose the Japs and the niggers over his own flesh and blood.\"\n\nSally couldn't believe the callousness that she heard in Lawrence's voice. She had been married to the man that voice belonged to; she had loved him enough to follow him even though she didn't hold to all of his beliefs, and she had borne him three children....\n\n\"He's partly responsible for what happened to Kenny.\" Lawrence was saying.\n\n\"No he wasn't.\" Sally said interrupting him. \"We were. You and I are what killed Kenny! It was my fault because I could see what was happening and did nothing to stop it! I knew what Doc was teaching him but I looked the other way. You killed him too, you and your precious Klan! Your father tried to help him and Kenny was going to kill him! Do you understand that we and no one else are responsible for what happened to Kenny?\"\n\nShe was screaming into the phone not realizing that Lawrence had hung up.\n\n*******\n\nLawrence hung up as soon as Sally began to accuse him and the Klan of being responsible for Kenny's death. He conveniently forgot that Sally also took part of the blame. He hadn't lied when he said that it was too bad that the old man was dying, it was... he had wanted to be the one to kill him. It would have been the one time that he wouldn't have minded getting his hands dirty.\n\nFor just a brief moment, he felt sadness that things had turned out the way they had but the moment was gone before it took root. Mentally, he crossed his father off his list of people to visit. Even if the old man lived, Lawrence no longer considered him worthy of his time and effort.\n\n*******\n\nSally placed the phone back in its cradle and sat down. She had to decide what she was going to do. At some point, she was going to have to start thinking about the future. Home was out of the question and she had no doubts that if Lawrence wanted to find her, he would no matter where she went. The only option that she had left was to stay where she was and to trust that Nick and the others would keep their word and try to protect her and the children.\n\n*******\n\nAbby was at the hospital early with a bouquet of freshly cut flowers. She found Ralph propped up in bed being fed by a male attendant.\n\n\"Open wide Mr. Goodman.\" the attendant crooned as if he were talking to a two year old as opposed to an adult.\n\n\"Just who do you think you're talking to?\" Abby snapped. \"He's not two he's a grown man! If you talked to me like that I wouldn't eat either!\" she added as she approached the bed, set the flowers on the table and physically pushed the attendant out of the way.\n\n\"You can't....\"\n\n\"I can and I will! This man happens to be my husband and I'll take care of feeding him now go baby talk someone else!\" she snapped.\n\n\"Look....\"\n\n\"I wouldn't argue with her if I were you.\" A voice said from the doorway.\n\n\"Paul!\" Abby exclaimed.\n\n\"Good morning Abby, I thought I'd stop in and check on Ralph.\"\n\nThe attendant waited for another moment before disappearing while cursing under his breath. He hated this job with a passion but it was a job, he had hungry mouths to feed.\n\nAbby sat on the bed next to Ralph and offered him a spoonful of what looked like thin oatmeal. Ralph clamped his mouth shut and refused to eat it.\n\n\"Come on you old coot! Stop being so damned stubborn!\" Abby said as she tried to feed him.\n\n\"No! Damn it!\" Ralph screamed in his mind willing Abby to understand that he wasn't going to eat now or later.\n\nPaul watched and knew what was happening; Ralph didn't want to live and would refuse food to starve himself to death.\n\n\"Abby, let it go for now.\" he said gently.\n\n\"But he hasn't eaten anything!\"\n\n\"I know, you can try later.\" Paul replied not missing the grateful look in Ralph's right eye.\n\n\"Alright, you win this time.\" Abby said to Ralph, \"but you will eat lunch.\" she added.\n\nRalph didn't respond one way or another as he closed his eyes.\n\n\"And don't think that you're fooling me with that possum act either!\" she snapped making Ralph's one good eye snap open.\n\n\"Abby, could I have a moment with him?\" Paul asked.\n\nWhen Abby was gone, Paul sat in the chair next to the bed and looked at Ralph. The left facial droop didn't seem to be as pronounced which was a good thing. He took Ralph's left hand in his and gave it a gentle squeeze.\n\n\"Squeeze.\" he commanded.\n\nRalph looked at him and looked away; he didn't even want to try.\n\n\"Come on Ralph, try!\" Paul said.\n\n\"N...no.\" Ralph whispered.\n\n******* Hattie agreed to watch the children so that Kenji and Patricia could go see Ralph.\n\n\"Give him our love and tell him that we're thinking bout him.\" Hattie said as they headed out of the door. When they were in the car, Patricia asked the question that had kept her awake.\n\n\"Kenji, Ralph doesn't want to live does he?\"\n\n\"I would have to say at this point that he does not want to live but that could change. It is as I said last night, it is up to him.\"\n\nPatricia didn't reply for several minutes before she spoke, \"I don't want him to die, if need be, I'll quit school to help take care of him.\"\n\n\"Kirei that is the last thing that he would want you to do so don't even think about it.\" Kenji said gently.\n\n\"I know.\" Patricia conceded, \"It's just that he's done so much for us and this isn't fair! Why couldn't it have been Lawrence?\" she asked suddenly angry. \"He spreads hatred while Ralph.... \"\n\n\"Ralph is not dead yet.\" Kenji reminded her, \"and if he chooses to live, we will work out a way to care for him but giving up school is not an option.\"\n\nThey found Ralph still in bed with Abby at his side trying to get him to eat.\n\n\"Good morning!\" Patricia said with a smile while her heart was breaking on the inside.\n\n\"Thank god you're here!\" Abby exclaimed, \"The old fool won't eat!\"\n\n\"Let me try.\" Patricia said as she approached the cot and kidded Ralph on the cheek when she reached him. She looked at the food and crinkled her nose. \"No wonder you don't want to eat.\" she said as she swirled a spoon through what looked like watery mashed potatoes. \"How about we ask the doctor if it's alright if we bring food from home?\" Patricia asked.\n\n\"No.\" Ralph said softly.\n\n\"No? What do you mean no?\" Patricia asked\n\n\"No...ood. Die!\" Ralph said softly his right eye begging her to understand.\n\nAbby looked as if she had been slapped, she had never taken into account that Ralph would want to die. Patricia put the tray aside and took Ralph's hands in hers.\n\n\"We love you, you know that don't you?\" she asked.\n\n\"U...uv oo t... too.\" Ralph said slowly as tears ran down his face.\n\n\"Then don't leave us! Stay with us to so that you can watch Kenji graduate and then me.\" she begged\n\n\"Kirei,\" Kenji said from behind her and put his hands on her shoulders.\n\nRalph pulled his good hand from Patricia's and raised it to gently cup her cheek, it was his way of telling her that he had made up his mind. Of the three of them present, only Kenji saw the resolve in Ralph's eyes. For just a moment, his eyes met Ralph's and he nodded. Ralph nodded back relieved that someone understood.\n\nPatricia finally saw it too although she fought it. Before they left, she hugged Ralph as tightly as she could, \"I love you papa Ralph.\" she whispered in his ear. She was rewarded with a tight one-armed hug. She fought not to argue with him and to beg him to reconsider. She wasn't ready to let him go.\n\nThe day was spent with all of them taking turns visiting him. Paul got permission for the children to see Ralph for just a few minutes providing that none of them were ill. That finalized it for all of them. Ralph wasn't coming home.\n\nNiko sat with Ralph first and said nothing. After several minutes, he stretched out next to Ralph and laid his head on Ralph's shoulder staying there until Kenji took him away. Marie was next. She sat on the bed and did her favorite thing, playing with Ralph's fingers. She would touch a finger but another would pop up or jerk making her squeal and then jump. \n\nAll of them watched the scene with tears in their eyes and wondered if Marie understood on some level what was happening. No one doubted that Niko did, he had the intuition of both of his parents and he remembered the morning when he found his parents saddened. This felt much like that. \n\n\"I'm sorry but you all have to go now.\" A nurse said.\n\n\"Please, just a few more minutes?\" Abby asked.\n\nThe nurse nodded and walked away before they saw the tears in her eyes. That she might get into trouble for extending the visiting hours didn't bother her. In her opinion, family should be allowed to stay with a dying family member as long as they wanted and Mr. Goodman was dying.\n\nThey all took turns saying good night starting with Kenji and Patricia, then Hattie and John who were both openly crying. It occurred to John that he had never cried over a white man before but then, he had stopped thinking of Ralph as a white man a long time ago. Nick and Hana were next with Nick understanding as Kenji did that Ralph wanted to die. He wouldn't want Hana to have to care for him if he were in Ralph's shoes. He would want her to find someone else to make her happy. Joel was next, his hands shook as he lightly touched the old man who sometimes intimidated him but was a hell of a chess player. \"Good bye sir.\" Joel said and walked away. Sally and the children were crying softly while William stood back. He had only met Ralph a handful of times and felt like an intruder, he only came to support Sally, the children and his friends.",
        "The last person was Abby. There was no denying what Ralph wanted but that didn't stop her from trying to get him to rally.\n\n\"Come on you old coot! We're supposed to watch those two kids graduate! They've finally gotten a break and you want to leave?\" she asked sobbing. It dawned on her then that she did love him; it was a deep friendship kind of love but something deeper as well. They had been happy together all that had been missing was the physical part of it. Ralph Goodman was her husband. They had shared more than couples married for years and only now could she admit that she loved him.\n\n\"Ralph, I love you, don't leave us.\" \n\nRalph touched her face with a shaking hand and struggled to make his mouth say the words that he was thinking.\n\n\"I.... lo... love.. You.\" The right side of his face lifted in a smile as he touched the face that he had longed to touch for a long time.\n\nAbby grabbed his hand, kissed it, and then kissed his cheek.\n\n'I'm sorry.\" the nurse said, \"but you really have to go.\"\n\nAbby pulled away but not before kissing Ralph again, \"fight you stubborn old man.\" she whispered in his ear.\n\nRalph patted her back and then watched as she walked away.\n\nAt two am Ralph lay awake waiting for someone to come. When the attendant finally came, Ralph was relieved to see that it wasn't the one from the night before. This one actually seemed to care about the people in his charge. \n\nHe tried to tell the young man that he wanted to shave and ended up using his good hand to pantomime what he wanted.\n\n\"Oh!\" the attendant exclaimed happily, \"A shave!\"\n\nRalph sagged back in relief.\n\n\"Sure! I have time to do that, I'll be right back.\"\n\nThirty minutes later, Ralph was shaved, clean and dry. He grabbed the attendant's arm with his good hand and gave it a hard squeeze of thanks.\n\n\"You're welcome.\" the attendant replied patting Ralph's hand.\n\nAfter he was gone, Ralph closed his eyes and thought about his family. Not his son Lawrence but the all of the people that were closer to him than any blood family could ever be. He drifted off to sleep thinking about Abby wishing he had told her how he felt about her before now.\n\nHe fell asleep, his soft snores indicating that he was at peace.\n\nThe attendant made his rounds an hour later and found that Ralph Elmer Goodman had slipped away in his sleep.\n\n**********\n\nThe call came around four am. Everyone was at Patricia and Kenji's house all of them wide awake with the exception of the children who were asleep on the floor in the living room. Patricia began to cry softly, the rest of the family soon joined her. \n\n\"What now?\" Patricia asked.\n\n\"There is no point to going to the hospital unless we wish to see him once more.\" Kenji said. \"And we need to make arrangements, Abby, has he spoken to you about his wishes?\" Kenji asked.\n\n\"Yes... he told me and if you don't mind, I would like to see him again.\" Abby replied.\n\n\"Of course, I will take you.\" Kenji replied, \"Nick will you call the hospital and tell them that we are coming?\" A few minutes later, Abby was standing by the bed that held Ralph's lifeless body. She kissed him gently on his cheek, patted his hand and walked away.\n\nHana and Hattie were in the kitchen making fresh coffee and tea for those who wanted when Abby and Kenji returned. Joel was setting out a plate of freshly made toast for people to nibble on; no one had an appetite for anything more.\n\n\"Would you like me to take care of the arrangements?\" Nick asked hugging Abby.\n\n\"He was my husband so I'll do it. If I need help I'll ask.\" she replied.\n\nBy the end of the day, the arrangements had been made. It didn't take long, there was no other family to notify other than Lawrence and Abby refused to call him. The services were set for December 22 at a funeral home not far from where Ralph and Abby lived. There would be no programs or anything fancy, Ralph would have wanted it that way and the only ones in attendance would be them.\n\nDecember 22 had arrived faster than they thought possible. Joel stayed at the house with Abby to keep her company and to do any errands that she needed done. The repast was going to be held at Abby's house at her insistence even though Patricia begged to have it at their house.\n\n\"I need and want to have it here.\" Abby replied.\n\n\"What do you want us to bring?\" Patricia asked.\n\n\"Nothing and before you say anything, I'm sure.\"\n\nThe service was short, to the point and over in an hour. It was how Ralph would have wanted it. Each of them, Joel included told of some remembrance that they had of their time with Ralph. Some of the stories were humorous, some of them not but to anyone who would have been listening, they would have known that Ralph was loved and was going to be sorely missed.\n\nThe repast meal consisted of all of Ralph's favorite foods prepared by Abby with Joel's help. After the meal, they sat around and talked about Ralph sometimes laughing and sometimes crying until late into the night. Patricia, Hanna and Hattie offered to come back to help Abby pack up Ralph's things.\n\n\"I would like that.\" she replied.\n\n\"Why don't you stay with us?\" Hana asked, \"Paul is leaving for San Diego in the morning ....\"\n\n\"Thank you but no, I'll be alright and if I need anything I'll call.\"\n\nThat night when everyone was gone, Abby sat on Ralph's bed and cried. Twice she had lost love, the first one, Lorena; she knew that she loved, the second one, Ralph; she realized that she loved him too late. She jumped when there was a tap on the door. Cautiously she went to the door and peeked through the curtains to see Joel standing on the porch.\n\n\"Joel? What's wrong? Why are you here?\"\n\n\"After my parents died, I was alone and I would have given my right arm to have had someone stay with me.\" he explained. \"And I know that you said that you would be alright and I believe you but I just don't think that anyone should be alone after the loss of a loved one.\"\n\n\"How did you get here?\" Abby asked ready to send him home if he drove.\n\n\"I walked.\"\n\n\"Did Kenji send you?\"\n\nJoel's hesitation told her what she needed to know.\n\n\"It was my idea too.\" he replied. \"He wanted to come but I volunteered, Patricia needs him.\"\n\n\"Well, come on in.\" Abby said as she walked away from the door. It wasn't long before she found herself glad that he had come back. Between the two of them, they packed up Ralph's things that were going to be given charity. The only things that she kept were the chessboard and pieces and a photograph of a very young Ralph with a mischievous grin on his face.\n\nAbby touched the picture with her fingertips and whispered a final farewell.\n\n*********\n\nKenji and Patricia tucked two exhausted children into bed and went to their own room.\n\n\"I can't believe he's gone.\" Patricia said softly as Kenji held her.\n\n\"He is not gone Kirei.\" Kenji said kissing the top of her head, \"he lives in our hearts and in our memories.\"\n\n\"My parents aren't so young anymore, they could die too.\"\n\n\"Yes Kirei this is true, but they are still here with us and we need to enjoy that time.\" \n\nPatricia nodded and blinked back tears, there had to have been a way to know that something was wrong with Ralph other than vague suspicions and there had to have been a way to stop it. What that way was, she didn't know but she was going to find out.\n\nKenji felt her stiffen and then relax as if she had come to some kind of decision, he would ask about it later right now they needed to comfort each other. He reached for the zipper of her dress and slowly eased it down watching as the dress slid off her shoulders. He loved the contrast of the white bra against her dark skin combined his lightly yellow tinged skin against hers. \n\nPatricia pulled his shirt out from his slacks, slid her hands underneath and massaged his muscled back starting at his waist and moving up as far as she could go before his shirt got in the way. Kenji stepped back long enough to remove his shirt and immediately pulled Patricia back into him and held her so tightly that she could hardly move. \n\nShe turned her head so that her ear lay over Kenji's rapidly beating heart listening to it trying not to imagine what it would be like not to ever hear it's normally slow, steady rhythm again. She squeezed her eyes shut and forced the thought out of her mind as she hugged Kenji even closer.\n\nThey stood like that for a long time, each of them trying not to think about the unthinkable, life without the other and saying a private good bye to a man that had meant so much to them.\n\n\"I love you kirei, I will always love you in this life and in the next.\" Kenji said his voice choked with emotion as he gently pushed her back so that he could look at her.\n\n\"I love you too,\" Patricia said softly and stood on her tiptoes so that she could kiss his chin. \"Make love with me.\" she whispered as tears ran down her face. She needed to feel his warm body naked against hers and feel his warm breath blowing into her mouth as they kissed.\n\nKenji didn't need to be asked twice, he was already moving them toward the bed undressing as they went even before she had completed the request. By the time they reached the bed, they were naked; their clothes lay on the floor where they fell.\n\nKenji eased Patricia onto the bed and positioned himself between her legs and was about to enter her when she stopped him. For just a second, he didn't understand why and then he realized that they hadn't inserted the device to prevent pregnancy.\n\nAs quickly as he could, he inserted the device and was soon buried deep within the warmth of her body. Within moments, it was over and both of them fell into a physically and emotionally exhausted sleep.\n\n*********\n\nChristmas was celebrated at Abby's house per her request. Joel for the moment had moved in with her, keeping her company and helping with the meal preparations.\n\n\"You're a nice young man.\" Abby said as they made the final changes on the decorations, \"Why don't you have a girlfriend?\"\n\nJoel didn't know how to respond and blushed.\n\n\"Joel, may I speak frankly?\" Abby asked when he didn't reply.\n\n\"Of course.\" \n\n\"I don't quite know how to say this so I'm just going to say it, Kenji and Patricia love each other with a love that the poets write about....\"\n\n\"I know that.\" Joel replied.\n\n\"Let me finish.\" Abby said. \"I also know that you have feelings for her and don't bother denying it, I'm not blind and neither is Kenji.\"\n\nJoel blushed but kept his silence.\n\n\"He hasn't said anything because he's very secure in Patricia's love for him and to some degree he understands how you could have feelings for her. What man wouldn't want someone like her? She's beautiful, intelligent and compassionate but Joel, she's very married and she loves her husband.\"\n\n\"I know.....\"\n\n\"So I'm going to make a suggestion.\" Abby said interrupting him. \"When you get back to school, you start looking for a woman who's available. I'm not telling you to settle for the first one that comes along but I am telling you that there is a woman out there that will see you for who and what you are, a good man with much to offer.\"\n\nJoel was silent for a moment, had he been that obvious? He wondered.\n\n\"I would never do anything to come between Kenji and Patricia.\" he said softly. \"They became my friends when I had none and made me family when they didn't have to and I wouldn't do anything to jeopardize that no matter what my feelings for Patricia are.\"\n\n\"Glad to hear it.\" Abby replied, \"Because if I had sensed anything else you would be gone. Now, hand me those silver ornaments will you?\"\n\n*******\n\nThe days after Ralph's service were difficult for everyone especially Niko. He missed his Uncle Ralph so deeply that on Christmas morning he made an announcement.\n\nPatricia had just finished making breakfast when Niko came into the kitchen followed by Kenji and Marie.\n\n\"Niko, did you wash your hands?\" Patricia asked.\n\n\"Yes mama and my name isn't Niko.\"\n\nKenji and Patricia looked at each other and then at Niko.\n\n\"It isn't?\" Patricia asked confused.\n\n\"No.\"\n\n\"Ummm okay, then what is it?\" she asked.\n\n\"Ralph.\" Niko replied.\n\n\"That is a fine name.\" Kenji said without missing a beat, \"you honor your uncle.\"\n\nFrom that day forward, Niko was called Ralph quickly but politely correcting anyone who called him Niko.\n\n********\n\nEveryone including Sally, the children, William, Hiroshi, Dai and baby Hiro was at Abby's house by noon. Christmas music was playing softly and the smell of roasted turkey filled the air. It was quiet at first until Abby had had enough.\n\n\"I miss him too!\" she exclaimed, \"but he wouldn't want us to sit around like sad sacks. He would want us to laugh and have a good time in his memory so please....\"\n\n\"Do you remember when Ralph tried to create this dish made from.....?\" someone asked.\n\nThe mood lightened as they realized that Abby was right. The announcement that Niko now wanted to be called Ralph brought tears of happiness to Abby's eyes.\n\n\"He would have loved that!\" Abby exclaimed as she hugged Niko and kissed his cheek.\n\nAfter dinner, as they cleaned up the dishes, Patricia pulled Abby aside.\n\n\"How are you holding up?\" she asked.\n\n\"As well as can be expected I guess, I'm glad that Joel was here which reminds me, I need to thank Kenji for sending him.\"\n\n\"We didn't want you to be alone and we knew that you would have tried to make Kenji come home and Joel volunteered.\" Patricia replied.\n\nAbby looked at Patricia and wondered if she knew how Joel felt about her and decided that she didn't. It was either that or she was choosing not to acknowledge it but it really didn't matter either way Abby decided, Kenji and Patricia's marriage was strong enough to weather any storm.\n\n***** \n\nJoel watched Kenji and Patricia together and decided that Abby was right; he needed to start looking at someone other than the wife of his best friend. He could only hope that when he found someone that she had just an iota of the qualities that Patricia did.\n\n*******\n\nAndrew was bored. All of his friends were busy with their own families leaving him with much too much time to think. As per usual, his thoughts were about Kenji and Patricia Takeda and the Jew. As of yet he hadn't planned anything specific and hadn't found out where they lived. Part of the reason being that he hadn't looked into it was that he was afraid that he wouldn't be able to stop himself from doing anything rash.\n\nHe tried to get ahead on his reading for school but couldn't concentrate. For some reason he couldn't get the little group out of his mind. He wondered what it would be like to have real friends, not friends like he had... they weren't' really friends. They hung with him because of his father and because they were afraid of him. Would they lay themselves on the line for him like the Jap did for the Jew? Hell no! and he knew it.\n\nMaybe that was part of it. The more he thought about it, the more he realized that while he hated the Japanese and Jews in general, half of what he was feeling was jealousy. Then there was the Jap's wife... He stopped his line of thinking, it could only lead to trouble that he wasn't prepared to deal with. \n\nHe slammed the book shut and thought about calling Becca but changed his mind. He wasn't in the mood for her and hadn't been for quite some time. He ran through his options and soon figured out that he really didn't have any except for Becca who he knew would drop whatever she was doing to go for a \"ride\".\n\nHe went downstairs to the kitchen, picked up the phone and dialed her number.\n\n\"Fifteen minutes.\" was all he said and hung up.\n\n*******\n\nBecca's heart began to race as soon as she heard Andrew's deep voice on the phone. She was actually beginning to wonder about him and their relationship. Clearly, something was bothering him and although he hadn't said anything, she thought she knew what it was... the Jap and she reluctantly admitted, his wife.\n\nShe saw the way he looked at the black woman when he thought no one was looking. It wasn't lust or even desire really but more a curiosity. The curiosity she could understand as long as it didn't go beyond that and interfere with her goal of making Andrew fall so in love with her and marry her.\n\n\"Becca Kelley\" was written in a notebook that she kept under her bed. The notebook was her wedding planner and contained everything from the wedding date and the guest list that she updated weekly. Part of her plan included being available whenever Andrew called and giving him the best blowjobs that he ever had. But lately, he hadn't been interested and deep in her gut she knew that Patricia Takeda was the reason. \n\nAs far as Becca could tell, Patricia didn't know that Andrew existed. Whenever she saw her, she was either studying or having lunch with that handsome husband of hers. Even so, she was jealous. Patricia Takeda was a threat to her and Andrew's future whether she was aware of it or not.\n\n\"Shit!\" she cursed when she realized that five of the fifteen minutes had passed. She ran up the stairs to her room, stripped and quickly but thoroughly washed under her arms and between her legs making sure to reach all of the nooks and crannies in case Andrew decided to eat her out.\n\nShe frowned as she tried to remember the last time that he had done that... it had been weeks but maybe tonight that would change she thought as she dried herself off and sprayed a little perfume on her mound. She rummaged through her closet and picked a dress that she could get off and on easily forgoing the bra and panties.\n\nShe had just finished dressing when she heard the impatient beep of Andrew's car horn. She grabbed her jacket and ran down the stairs without saying anything to her parents.\n\nAndrew drove to their usual spot and parked. Without hesitating, Becca was out of her dress and reaching for Andrew's flaccid cock, which by now would normally be rock hard and throbbing in anticipation of her mouth.\n\n\"What's the matter baby?\" she cooed as she tried to coax his cock into becoming hard by massaging it through his jeans. When that failed, she unzipped his jeans, reached in and pulled it out. Without asking, she took Andrew's still soft member into her mouth and began to suck and lick at it until finally, it began to respond. When he was finally hard, she began to nurse on him in earnest. Within minutes, Andrew came with a loud groan as he filled her mouth.\n\n\"How was it baby?\" she asked as she wiped the corners of her mouth with her discarded dress.\n\n\"It was good, thanks.\" Andrew replied.\n\n\"Just good?\" she teased.\n\n\"What is it that you want to hear?\" Andrew asked sarcastically, \"That is was fantastic?\"\n\n\"No, I was....\"\n\n\"Get dressed.\" Andrew snapped as he tucked his now flaccid cock back into his jeans and started the car.\n\nWhen Becca hesitated, he looked at her, \"Well? What are you waiting for?\"\n\nAs he drove her home, Becca wondered what was wrong with him. Patricia Takeda's name popped into her head and she quickly discarded it. Andrew hated anyone who wasn't white and some of the races who looked white as well. When he was in a better mood, she would ask him what was bothering him. Until then, she would just have to bide her time.\n\n********\n\nBy the end of January 1946, Emperor Hirohito announced to his subjects that he was not descended from the Shinto Sun goddess Amaterasu Omikami and that the emperor was not a living god, George Woolf the Jockey who rode both Seabiscuit and Bold Venture to victory was thrown off a horse at the Santa Anita Park during a race- he died the following day at the age of 35. General Douglas MacArthur, Supreme Commander of the Allied Powers began a purge of the Japanese government. Over a two and a half year period, 210,287 people were either barred or removed from public office, Robby Krieger-American rock musician and songwriter for the group 'The Doors' is born, The United Nations General Assembly meets for the first time, 22 year old Malcolm Little was arrested in Boston for breaking and entering. While in prison, he joined the Nation of Islam and changed his name to Malcolm X.",
        "The \"two-way wrist radio\" was first introduced in the comic strip Dick Tracy, fourteen coal miners were killed in an explosion in Havaco, West Virginia, Charles De Gaulle resigned as President of France, the United Steel Workers of America staged a nationwide walkout- it was the largest strike in American history, 750, 000 workers walked out and the \"Roosevelt dime\" was introduced on the birthday of the late President Franklin D. Roosevelt replacing the \"mercury dime\"\n\n********\n\nSlowly everyone began to adjust to Ralph's absence although he was still missed and always would be. Kenji, Patricia and Joel began to prepare for returning to school and its challenges. They spent extra time with \"Ralph\" making sure that he understood that they would be returning home at the end of the day.\n\n\"It is time for us to begin school again.\" Kenji explained.\n\n\"I know papa.\" Ralph replied.\n\n\"It is no different than before.\" Kenji continued as he handed the embroidered handkerchief to him.\n\nRalph took the handkerchief, clutched it tightly in his hands, and tried to be stoic.\n\n\"What frightens you?\" Kenji asked.\n\n\"What if you and mama don't come back?\" he asked.\n\n\"Do you mean like Uncle Ralph?\" Kenji asked.\n\n\"Yes.\" Ralph said softly looking away.\n\n\"Niko,\" Kenji said softly forgetting to use the boy's chosen name, \"Death is a part of life and cannot be predicted. I cannot promise you with one hundred percent certainty that nothing will happen that will keep us from returning home to you and your sister but I can promise you that we will do everything possible to be here.\"\n\nRalph looked up at Kenji with tears in his eyes and hugged him.\n\n\"And,\" Kenji continued, \"If something should happen, know that you and Marie will be loved from wherever our souls go just as Uncle Ralph still loves you and is watching us as we speak. Do you understand?\"\n\nRalph frowned and then his face lit up.\n\n\"Yes papa.\"\n\n\"You do?\" Kenji asked surprised.\n\n\"Yes papa.\" Ralph replied. If asked he couldn't have verbalized what he understood but all he knew was that he felt better.\n\n********\n\nAbby took baby-sitting duty that week.\n\n\"I need to hear the laughter of children.\" she said when she volunteered.\n\nAfter the usual admonishments to behave and to help with Marie, the trio headed for the car and to school. Kenji parked the car, helped Patricia out and grabbed their bags. As they walked to class, he had a slight sense of foreboding and felt led to caution Patricia.\n\n\"Kirei, please be careful and wait for me to come for you.\"\n\n\"Alright but do you really think that there's going to be a problem?\" she asked.\n\n\"I do not know but I would rather be overly cautious than not cautious enough.\" Kenji replied.\n\nHe left Patricia in her classroom with a smile and a touch of her hand before going to his own class. Joel was already seated and to his credit looked relatively calm although Andrew and his friends were already there and staring at him. The feeling of unease in Kenji's stomach grew slightly and then diminished as the class began. Instead of feeling relieved, he was more on guard.\n\nHe glanced over at Joel who glanced back and nodded before facing forward again, he was on guard too. Whatever was happening with Andrew, both men knew that it wasn't going to be good. The class passed without incident and without a word from Andrew or his friends increasing the feeling that something wasn't right.\n\nJoel and Kenji stayed seated for a few minutes after the class was over. Patricia had a few minutes of class left so there was no rush.\n\n\"What are you thinking?\" Joel asked.\n\n\"I don't know.\" Kenji replied, \"but Andrew Kelley isn't done with us.\" he added.\n\n********\n\nPatricia doodled in her notebook while she waited for class to begin. She knew that someone was staring at her and she even knew who it was. Becca Cartwright. Why, she had no idea and she didn't particularly care but this was a new thing. Until a several weeks ago, Becca had ignored her and Patricia had to wonder what had changed. She knew that Becca and Andrew were supposedly an item but from what she saw, it looked one sided with the side tilted toward Becca. \n\nPatricia forgot about Becca when Professor Hathaway walked in. She noticed that he was back to what she considered normal as he glanced at her and then looked away, when he called roll; he was back to using the deliberate mispronunciation of her name. \n\n\"Surprise quiz!\" he announced ignoring the groans and exclamations of how it wasn't fair. \"It isn't my fault if you didn't prepare!\" he snapped.\n\nAs per usual, he gave Patricia her quiz last but this time he had a nasty sneer on his face as he slapped the paper down on her desk. He walked up to the front of the class, sat down and said \"Begin!\"\n\nPatricia scanned the quiz and then looked up to see Professor Hathaway looking at her with a smug look on his face.\n\n\"Bastard!\" she hissed under her breath as she picked up her pencil and began to take the quiz. Usually she was one of the first to complete a quiz but not this time. She finished the quiz just before the allotted time was up. She felt all eyes on her as she took her quiz up front to be graded.\n\n\"Well Mrs. Takeeda, how did you do?\" \n\n\"I don't know but I suppose you'll tell me.\" Patricia said her tone terse.\n\nHathaway glared at her and then started to grade her quiz. Patricia waited anxiously, she knew that she hadn't gotten her usual one hundred percent but she was almost sure that she had passed.\n\n\"Fail!\" Hathaway exclaimed, his joy evident.\n\n\"What?\" Patricia asked shocked. \"Which ones did I miss?\"\n\n\"It doesn't matter, you failed.\" Hathaway replied.\n\n\"The hell it doesn't! Which ones did I miss?\" she demanded.\n\n\"Sit down.\" Hathaway said firmly.\n\n\"Not until you tell me which questions I missed and what the correct answers are.\" Patricia replied. She knew that she should let it go but she couldn't. One failed quiz wouldn't matter to her overall grade but it was a matter of principal. If he could altar one quiz grade, what else would he do?\n\n\"I said....\"\n\n\"Excuse me?\" a male voice said from the back of the room, \"But I would also like to know which questions I missed.\"\n\nAnother voice soon followed until several of the students were asking. Hathaway was furious at the turn of events. He really hadn't expected to challenged.\n\nBy the end of class, Patricia and some of the others had actually passed the quiz. Patricia got the feeling that Hathaway didn't care that the others passed, but he definitely cared that she did. She didn't miss the murderous glances that he gave her when he thought that she wasn't looking.\n\nAs soon as class was over, she gathered her things and headed for the door. On her way out, the first student to side with her stopped her.\n\n\"You're one gutsy lady but be careful... he isn't someone that you want to fuck with.\"\n\n\"What do you mean?\" Patricia asked.\n\n\"Just be careful okay?\" the student whose name she didn't know said and walked away.\n\n*******\n\nKenji was waiting for Patricia outside of her classroom.\n\n\"Kirei? What happened?\"\n\n\"Who says anything did?\" she asked.\n\n\"Being married to you for a few years does.\" Kenji replied, \"tell me.\"\n\nBy the time she finished telling him what happened, Kenji was concerned.\n\n\"Kirei, listen to me, you must be careful. If this man requests that you stay after class, do not do it no matter the reason that he gives.\"\n\n\"You don't have to tell me twice.\" she replied as she laid her head on his shoulder.\n\n********\n\nAndrew and his friends were sitting across from Kenji and Patricia, a fact not missed by Becca. She watched Andrew as he tried to pretend that he wasn't paying any attention to them. In an attempt to direct his attention to her, she leaned into him and nibbled on his ear.\n\n\"Damn it Becca!\" Andrew swore as he moved away from her.\n\nBecca gasped at the outburst, looked at Andrew confused and then looked over at Patricia who was paying them no mind but was talking with Kenji.\n\n\"Bitch!\" Becca thought as she watched Patricia lean over and kiss Kenji on the cheek noting that instead of pulling away as Andrew had done, he leaned into Patricia to accept the kiss.\n\n\"Bitch.\" she murmured under her breath and began to plan. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese",
        "racism",
        "katrina",
        "kenji",
        "ralph",
        "joel",
        "andrew"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-04"
}