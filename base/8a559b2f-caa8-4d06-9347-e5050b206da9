{
    "title": "There and Back Again Ch. 155",
    "pages": [
        "Chapter One Hundred Fifty-Five: Post-Awakening \n\nSolona and I got some strange, concerned looks from Avanna as we left my office, but I ignored them. I asked Avanna to accompany Solona to her new quarters after they dropped me off at mine, and she agreed politely enough. Two guards who I vaguely recognised stood attentively outside my suite, and I shut the door and locked it after bidding them all goodnight. Solona shot me a slight smile as she turned to walk away, and I returned it thankfully. Maybe I didn't screw up completely. It seemed like...maybe she needed that. \n\nI was exhausted. Between holding the Architect's mana for hours, the long day, the prolonged period of stress as we completed the ritual to bind and hide the Architect, and then my emotional discussion with Solona, I could barely keep my eyes open. I stumbled through our bedroom door, dismayed to realise I was still filthy and covered in dust; I would have to do something about that before bed, and I wasn't sure I'd be able to stay awake long enough. \n\nI looked around, only to discover that my husband, now clean with slightly damp hair, wearing only his sleeping trousers and holding a towel, had run me a bath and was waiting to help me. I fumbled with the buckles desperately and dropped my armour where it landed, leaving it strewn across the floor; I'd pick it up and send it to be cleaned in the morning, but didn't have even enough energy for that at that moment. I wanted to throw myself into Alistair's arms, once I was naked, but I didn't want to get him covered in the dust that clung to my skin. Instead I took his proffered hand and climbed into the tub, watching the dirt flush off my skin in little eddies in the warm water. And Alistair, after encouraging me to lay back, knelt on the floor behind me and washed my hair. \n\nBy the time I'd finished scrubbing and he'd helped me rinse conditioner out of my hair, I was barely conscious; I climbed out of the tub, rolled the towel around myself once until I was only damp instead of soaked, wrapped it around my head like a turban, and collapsed into bed naked. Alistair joined me, and I curled up against his broad, warm back, falling asleep before he'd even pulled the covers over us. \n\nI slept deeply, sheer exhaustion ensuring I didn't have the chance to dream. I had to be up early to see Greagoir and his templars off, and as I climbed out of bed in the morning in response to a firm knock from Maeve, my maid, I grumbled irritably. I'd been incredibly comfortable, warm and cozy in the great big beg with my husband, and it was barely morning, the room dim despite opening the shutters. Alistair wasn't in much better shape, only reluctantly leaving the warmth of our little cocoon. I had the worst of it, though; I'd fallen asleep with the towel on my head, and by morning my hair was an unholy mess, tangled into large knots and curling crazily. Resigned to having to repeat the bath later, I scooped the whole mop into an untidy bun and swore at my tired reflection in my little mirror. \n\nI found Greagoir and his templars, mages, and Tranquil eating breakfast in the main dining room. Aedan and Zevran were there as well, but the other Wardens were nowhere to be seen \u2013 not that I could blame them. I'd have slept in too, given the choice. \n\nGreagoir nodded at me, and I returned the gesture. I hugged my brothers \u2013 Zevran counts, especially given he calls me mia sorella and I call him mio fratello half the time \u2013 and found myself a plate of food to appease the Warden appetite. I sat down with the four men \u2013 my brothers, my husband, and Greagoir \u2013 and once I had taken a few bites to quell the rumbling in my stomach, I turned to the Knight Commander. \n\n\"Everything set? Do you need supplies, food, anything for the journey?\" \n\nHe swallowed his own bite, shaking his head. \"Thank you, no. Your seneschal has been helpful in acquiring what little we needed \u2013 but with fewer mouths to feed, we require fewer supplies.\" \n\nI must have looked puzzled, because he gestured towards Aedan with his head. I turned, and my brother and husband both flushed. \"I, uh, guess we forgot to tell you. The Knight-Commander allowed us to recruit two of his templars \u2013 as well as one of the mages and one of the Tranquil.\" I shuddered slightly; the deadpan voices and emotionless expressions of the few Tranquil Greagoir had brought with him creeped me out entirely. Aedan smiled sympathetically, but went on, \"I thought we could use another healer once Anders and Solona are transferred, and having an assistant for Jowan would be useful as well.\" \n\nGreagoir scowled at the mention of the blood mage, but when Aedan raised one eyebrow, he smoothed his expression and took another mouthful of food without comment. I'm guessing this isn't the first time they've talked about Jowan. I nodded thoughtfully; we'd talked about trying to recruit a scholar of sorts to organise Avernus' library, someone to read all of the books and journals, and help us determine what other secrets might be hiding in the numerous volumes lying around. It hadn't occurred to me that a Tranquil could do an admirable job of it \u2013 but I did have a concern. \n\n\"You're going to make them Wardens?\" I worried about the chances of a Tranquil surviving the Joining. No one knew what made for a successful recruit, of course, but Duncan had always said he thought willpower, or perhaps will to live, was part of it. How much will could a Tranquil have? Though I suppose at least most Tranquil won't be missed by friends and family if they don't survive the Joining. I shuddered again. \n\nAedan nodded slowly. He didn't reply, but his gaze strayed to Greagoir's face, and I got the hint \u2013 we couldn't discuss it with the Knight-Commander eavesdropping on the conversation. Time for a change of subject \u2013 but this conversation isn't over, brother. Aedan nodded again as though he knew what I was thinking. \n\nI turned back to Greagoir. \"With everything that's been going on, I forgot to ask about Cullen. How's he doing?\" \n\nGreagoir cleared his throat and grimaced. \"He's...well. You saw. He's rather...angry. Still.\" \n\nI nodded; I'd known that would be the case. \"Where is he now?\" \n\n\"After what you told me about Kirkwall, I was nervous about sending him there. I wanted to send him to Greenfell, a nice calm, isolated monastery, to try to recover, but then I got orders from the Grand Cleric.\" He scowled at me. \n\nMy eyebrows flew up, and I raised my hands defensively. \"Hey, I told her about Meredith, but I didn't say anything to her about Cullen!\" \n\nHe looked at me another minute before snorting and popping a piece of cheese in his mouth and chewing thoughtfully. \"Regardless, he's been transferred to Kirkwall. I'd been working with him, as much as I could before he left, and he understands what he's to look for \u2013 mages made Tranquil inappropriately, mages or Tranquil being abused, anything like that. I'm not sure he's really in the right frame of mind to care about those sorts of things, but I think he will follow orders, at least. And I've asked a...friend in Kirkwall to take him under his wing and see if there's anything he can do to help.\" \n\nI sat back, surprised. \"Friend?\" \n\nGreagoir nodded. \"I went through my training with him. He's far more sympathetic to mages than I ever was. If there's anyone who might be able to blunt Cullen's anger, Thrask can.\" \n\nI smiled broadly. \"Thrask is a good man.\" I remembered the unfortunate templar from the second game; his daughter was a mage, and he'd protected her \u2013 as he would Feynriel and the escapees from Starkhaven \u2013 only to be killed by one of the ones he had helped. I wonder if I can help him. \"You should tell him...tell him to send Olivia here \u2013 either to you, or to us. And never to trust mages named Grace.\" \n\nGreagoir was looking at me with a furrowed brow. \"Olivia?\" \n\nI flushed. \"Just tell him. It's not my place, okay? But Olivia here, as soon as possible, and don't trust Grace.\" \n\nThe templar shook his head, smiling tolerantly. \"You're mad, you know that?\" \n\nAedan finally cut in, tugging on an escaped lock of my hair, which caused the bun to come tumbling down as I swore at him. \"You've no idea, Knight-Commander.\" \n\nI stuck my tongue out at Aedan and mussed his hair with my hand. \"You love me anyway.\" \n\nHe rolled his eyes good-naturedly. \"Of course I do!\" \n\nOnce breakfast was finished, Greagoir and his remaining entourage got underway. A patrol had been assigned to escort them through the tunnels, and after goodbyes and promises to keep in touch, they went. \n\nWe held an announcement in the main hall mid-morning for the Wardens and those soldiers not on patrol, announcing Avernus' passing and reminding everyone of the areas that were restricted: the tower, which was now Jowan's, and the basement \u2013 much of which still hadn't been cleared, but the parts that had were either off-limits, like the room with the eluvian, or needed guarding, like the Deep Roads entrance. We also announced training schedules, the new security protocols that had been established, and the fact that we were recruiting \u2013 both for more staff and more soldiers. \n\n\"Anyone who has family that would like to apply, please see Seneschal Dryden. We will consider immediate family members of current residents before anyone else, and family quarters may be available for those who qualify. \n\n\"One last thing, just to reiterate: this place, Soldier's Keep, is going to be a shining example for the rest of Thedas for how things should be. There is a zero-tolerance policy for discrimination or harassment of any type. All races and genders are considered equal \u2013 and will be treated as such by everyone. We will prove to the world that humans, elves, and dwarves, mages and templars, Wardens and soldiers, men and women, can live together, can work together, without discrimination or violence. Anyone found to be violating these rules will be immediately dismissed. \n\n\"Anyone can bring concerns or complaints to Seneschal Dryden or directly to me, and I will be the final arbiter. You do not want to find out what punishments I will assign if I find you guilty, believe me.\" \n\nI gave the crowd my sternest look. There was some smiling and chattering at the back; I saw someone \u2013 one of the soldiers who'd been there when I'd dismissed the unfortunate drunk who'd harassed Avanna, I presumed \u2013 whisper something urgently, and the laughing stopped. They'll learn eventually \u2013 the easy way, or the hard way. Knowing my luck, probably the hard way. \n\nAnd then Aedan announced that he \u2013 along with Zevran, Seranni, Alim, Bel, and the new Warden recruits including Velanna \u2013 would be leaving in seven days for an expedition into the deep roads under the Keep, for mapping purposes, he said. Everyone familiar with the Joining ritual understood that each recruit would come home with a vial of blood as well, but knew better than to say anything about it. He said they didn't know how long they'd be gone, but were preparing for a month \u2013 just in case. \n\nI pulled my brother aside after we finished. \"You're taking a Tranquil into the Deep Roads?\" I hissed, appalled. \"And not just one, but three women?\" \n\nHe winced. \"I need to. I wasn't lying \u2013 we need to map out the Roads under the Keep and see if we can figure out where they lead. And she's the only one who might have the ability to create a useful map.\" He sighed. \"I don't like taking women into the Deep Roads, but with the Blight over...well, there's no avoiding it. Not much point in being a Warden if you can't go where the darkspawn are. It's why I'm taking so many others with us instead of just the recruits. They'll be well-protected. Even if we're just going to be taking advantage of her as a scholar, I'd like to have Lana trained in some form of combat \u2013 crossbow, maybe. And we'll start on that before we leave. I won't have helpless Wardens. But for now, we need her down there, even barely trained.\" \n\n\"Has anyone ever done a Joining on a Tranquil? I know Avernus improved the formula, but...can a Tranquil even survive?\" \n\nHe shrugged helplessly. \"No one here knows, and I'm not exactly spoiled for choices on who to ask. But I did explain it, Sierra. I told all of them the risk. All of the recruits volunteered, even knowing the danger. Greagoir didn't even make a fuss. And frankly, it makes me worry about what was happening to her back at the Circle that a Tranquil would choose this. She's quite pretty. Most of the others said they 'would prefer not to be Wardens.'\" \n\nI hadn't considered that, and I shuddered at the implication. Can a Tranquil even make a choice? Informed consent feels like it requires...more. Can they be coerced? But certainly there'd been plenty of speculation in the fan community on Earth that the Tranquil were abused \u2013 who knew what the poor thing had been through? It still felt wrong, but I didn't see much other choice. \n\n\"Do you have to put her through the Joining? Greagoir would never know...\" I offered weakly. \n\n\"I thought about that \u2013 but if she isn't truly a Warden, there's nothing to stop the Chantry from taking her back if they ever figure it out. You know they see the Tranquil as property! And we can't risk it especially if she's going to be combing through Warden documents and journals. If they ever took her back, she'd tell them everything. She wouldn't have a choice.\" \n\nI sighed, wondering if I should try to talk to the woman. But in the end, it's Warden business, and I trust Aedan. He's doing the best he can, and I'm in no position to know more about it than he is. \"Just...try to keep her safe, alright?\"  \n\nAedan nodded, the worried frown never leaving his face. As I looked closer, I realised that his worry lines were becoming permanent, etching themselves into his skin with time. He's aged since the beginning of the Blight \u2013 and there's nothing anyone can do to help him. I hugged him, hoping he could tell that I supported him, believed in him, that I trusted him. \"I love you, Aedan.\" \n\nHe squeezed me back, and then excused himself to go deal with the recruits and prepare for their trip. \n\nI went upstairs to rewash my hair \u2013 and Maeve helped me braid it up and out of my face \u2013 and then spent the rest of the morning visiting with my Wardens and former companions. Jowan was sad, but accepting, and he seemed to have settled in to the Tower, taking Avernus' old room and planning some reorganization. He didn't seem upset at the idea of an assistant \u2013 I'd have been creeped out by working with a Tranquil, but I supposed he'd be somewhat used to it from the Tower. \n\nSigrun was feeding Faren, her expression hard to read. She seemed to both be anticipating and fearing Anders' potential cure. I wondered what would happen between them \u2013 but couldn't bring myself to care that much. If Anders could bring my friend back \u2013 and stop me from being a murderer, no matter the situation that led to it \u2013 I was all for it. I refuse to make Sigrun's complicated love life my problem! \n\nMost of the other Wardens were on patrols \u2013 Conrad had organised them \u2013 but Seranni was up working in Avernus' little rooftop garden. She seemed happy amongst the herbs and vegetables, weeding and watering enthusiastically. She spent a few minutes showing me the various plants and describing their uses; it went right over my head, but apparently Avernus had managed to grow some rare, highly-sought after species. She offered to show me how to make more potions someday, when I mentioned that I'd become somewhat capable at turning plain elfroot into small healing potions. Velanna, on the other hand, was nowhere to be seen \u2013 Seranni told me she'd discovered that Avernus' library had several volumes of obscure Dalish lore, and we probably wouldn't see her until they were to leave for the Deep Roads. \n\nI made arrangements to spar with the elf the next day \u2013 she had tried a variety of styles and was working on dual-wielding daggers, like me. I needed to get back into my routine, and I wasn't about to let my combat skills fade \u2013 and I figured Seranni could probably use a sparring partner not quite as excessively talented as most of our friends. \n\nMy last stop for the morning was Solona's room down in the servant's quarters. I found her and Anders both hanging out \u2013 the two of them lying on the bed together, reading and chatting comfortably. I was relieved to see them laughing together, and even some casual touching \u2013 Solona didn't shrink away, and Anders wasn't quite so hesitant to reach out for her. The cot beside her bed was mussed \u2013 clearly they weren't up to sleeping together yet, or perhaps Anders was still just nervous, but it seemed like some progress had been made. \n\nBut I had something completely different I wanted to talk about. \"So can you tell me what you've learned about Faren's condition?\" \n\nAnders smiled broadly, gesturing to a large stack of books against the wall near the foot of his cot. \"I should just have come here \u2013 all the books I needed are in the library here too. Though it was nice to be able to discuss it with other healers. But what it comes down to...\" \n\nHe launched into a complicated explanation \u2013 the poison affected not only Faren's body and mind, but also his spirit. Somehow his spirit \u2013 his soul, the energy specific to him that separated him from any other living being \u2013 had been cut off from his body. So while the damage to Faren's body had been extensive, and Anders had been forced to repair his stomach, his kidneys, and his liver as the toxin burned through his system, it hadn't returned the connection between his essence and his physical body. Or so I gathered \u2013 as a mundane who knew nothing about magic or healing, the explanation went entirely over my head. \n\n\"So the healing required is going to be equally complicated, involving not only energy-intensive healing magic, but also a ritual for anchoring his spirit back to his physical body. I've already repaired the damage to his body, but I'm going to need help for the ritual. I must do the necessary healing from the Fade. It's fascinating \u2013 it's sort of like seeking a particular spirit in the Fade if you were stuck on this side of the veil, but in reverse. And being a dwarf, it's going to be even more difficult.\" \n\nI must have looked completely lost, and Solona's bemused expression told me she had no idea what he was talking about either. He just laughed. \"I'll need Lyrium \u2013 I brought enough from Kinloch, though it turns out Avernus had quite a store as well \u2013 and I'm going to need two mages to help me cross into the Fade. I'll set up the ritual, and I can manage once I cross over, with a little planning. Jowan can't be involved \u2013 a blood mage is going to attract too much of the wrong sort of attention in the Fade.\" He frowned. \"I don't want Alim to help; too much...tension. I'll have to ask Donal, he's a spirit healer so that will be useful, but I'm not certain-\" \n\nSolona cut in, rolling her eyes. \"I'll be the other.\" \n\n\"Are you sure?\" Anders asked. \"You don't have to force yourself to do this. I know it'll make you uncomfortable.\" He reached out and took her hand, squeezing gently. \n\nI nodded. \"We can ask Velanna instead. Honestly.\" \n\nShe bit her lip, appearing torn, but finally shook her head, blonde hair rippling like Prince after a bath. \"No! He's my friend too. I'm not leaving it entirely up to strangers, especially when they're going to have to protect Anders in the Fade,\" she insisted. \"I can have a panic attack later. After.\" \n\n\"I'll be there too,\" I promised, \"and I won't let anything happen to you. Any of you.\" \n\nShe nodded gratefully, and Anders shot me a small smile which I returned. \"So. When are we going to do this?\" \n\n\"We need a couple of days to get things ready \u2013 there's a potion that will help, and it's going to take time to distill. Jowan's working on it in the lab. And I'll have to get Donal to practice with Sol so everyone is confident when the time comes. I'm thinking...day after tomorrow?\" ",
        "I agreed, and made a mental note to make sure everyone who needed to know was informed. \n\nI couldn't help the little spark of hope that had blossomed in my gut, but there was a lot of fear there too. I didn't want to get my hopes too far up, just in case. \"Is it going to work?\" I asked, looking for a little reassurance. \"Really?\" \n\nAnders stood up and patted my shoulder sympathetically. \"I think so. But he's also going to need some time to recover, even once he's awake. There's never any certainty when it comes to rituals like this, but...I think so.\" \n\nI nodded and looked away, rubbing my eyes irritably before they could betray me and loose the tears that were never far from the surface when I thought about Faren. \"Okay.\" I took a deep shuddering breath and squared my shoulders. \"Okay. Now look, we have some other things to talk about, and Rolan too. When do you have time? I hear you're going to be leaving soon.\" \n\nWe agreed to spend the afternoon in my personal sitting room; I'd ask Alistair, Aedan, and Zevran to stay away so the only Wardens Solona had to deal with where the two who'd be going to Kirkwall with her. I got myself some lunch, and took it up to my quarters to eat while I tried to organise my thoughts. \n\nI'd only played the second game once; I didn't remember the details about it that I did about Origins or even Awakening, and I wasn't sure I wanted to change too many of them anyway, given I wouldn't be there to help manage if things went wrong. I'd already made some changes \u2013 I'd done everything I could through the Chantry to mitigate Meredith's madness, and I was sure Varric would have received my letter, though I wondered what the storyteller thought about it \u2013 not to mention how much would change due to the ripples I'd started in Ferelden and during the Blight. \n\nThat said, there were definitely some events I wanted to alter, given the chance. I wasn't sure I could resolve the Corypheus situation \u2013 unlike us, they didn't have a convenient, powerful, ancient blood mage to sacrifice himself to recapture the magister \u2013 and as much as I'd considered it, I wasn't sure warning the Vaels about their upcoming betrayal wouldn't backfire. I didn't know the major players the way I did in Origins, couldn't see the little opportunities that might improve the situation instead of making things worse. But I was finding it harder than I'd thought to let go of the control, to allow events to play out as they would. \n\nSo I pulled out one of my old half-filled notebooks, the ones I'd used to record the events of the Blight for Aedan, and started making myself a list. \n\nI began with Karl. I wasn't sure how Anders could communicate with his friend without putting him at risk of being caught, but I knew he needed to get Karl out of the Circle as soon as possible. I wrote down what little I remembered about the Mage Underground, the tunnels that lead underneath the Gallows, and the trap in the Chantry laid with the help of a Tranquil Karl. I was sure to emphasize that there was a cure for Tranquility \u2013 so if they were still too late, if they were unable to rescue him soon enough, Anders should definitely not kill him. \n\nThen I moved onto suggestions for Anders' clinic. As much as Darktown was a disgusting hole, it was where the worst of the need would be for supplies and healing. The refugees and poverty-stricken would not go to Hightown for healing, if the guards would even let them, and even Lowtown was questionable. I added a note about Lirene, the woman I vaguely remembered trying to help the homeless Fereldans. Hopefully, between whoever Cailan was sending and Anders, they'd manage to encourage some of the refugees to come back, and be able to provide some aid to the others. Not that Ferelden had an abundance of resources to send to Kirkwall, but Cailan was determined to try, and I couldn't blame him even a little. \n\nI made notes about those I could remember within the Chantry \u2013 those to steer clear of, like Sister Petrice; those to recruit for aid, like Sebastian and Thrask; and those that they would assume would help, and wouldn't, like the Grand Cleric. I made notes about the Red Lyrium idol Varric would find in the Deep Roads; though I'd warned him not to touch the thing, I couldn't be sure he'd heed my advice. I explained how Bartrand would sell it to Meredith \u2013 and how her sword needed to be taken from her, and somehow destroyed. \n\nI spent quite a bit of time detailing the problems in the Circle \u2013 the \"Tranquil Solution\" (and I still wondered if Alrik was the bastard who abused Anders' friend Danielle in Kinloch, and cursed myself for neglecting to ask Greagoir), Meredith constantly cracking down and tightening control over the mages, Orsino ineffectively fighting her and making it worse, apostates kidnapping templar recruits and forcing them to become abominations. In the end all of them could be traced back to Meredith in some form \u2013 and I couldn't be sure the Chantry would heed my warning about her. \n\nI also pointed out that Orsino wasn't as innocent as he seemed \u2013 whether he was a blood mage all along or just desperate at the end wasn't clear to me, but he needed watching. I didn't think a mage could become a Harvester without significant advanced knowledge of blood magic. And hadn't he been helping the insane blood mage who would target Leandra? \n\nI gave as much information as I could remember about the blood mage \u2013 the flowers he sent his victims, the fact that he was stealing body parts for disgusting purposes, how they would initially suspect someone else \u2013 who was also a blood mage, a former student in fact \u2013 that was not directly responsible for the murders. I cursed myself angrily as I worked \u2013 I couldn't remember any of their names, and it might cost someone their life. The other guy was Orlesian, with some high-falutin' French name, but the guilty one...Clinton? No. Gah, how could I have forgotten? However, the more I thought about it, the more certain I was that Orsino knew the murderer \u2013 and perhaps Anders could use that information to catch the bastard before more women shared that horrible fate. \n\nI made non-specific notes about the Qunari \u2013 that they were searching for an artifact that had been stolen, that they would eventually lose patience with the delay in finding it and attack the city; so many things had changed already that I couldn't predict with any certainty what would happen anymore. Maybe Isabela never stole the tome. Maybe the Qunari caught her! Maker only knows how they would take a human with too much knowledge on the subject \u2013 I can't tell Hawke too many details, or knowing my luck they'll abduct her thinking she had something to do with it. \n\nI didn't go into detail for each of the companions or Hawke's family members. I'd already made a note that Anders should insist on going with them to the Deep Roads when they went, and should take Joining supplies; we'd decided that the Wardens were not to tell Varric \u2013 or Hawke, or anyone in Kirkwall \u2013 about my abilities. Anders would refer to me as a seer, and that was all he'd say. I had made a few vague references in my letter to Varric about major events in their lives. But I still believed that in the end, they had to make their own choices. I knew what I thought was best for each of them \u2013 but it wasn't my place to impose my beliefs on people I didn't know, and remembered poorly from the game. It had been different with the Origins characters \u2013 I knew them better, and got the opportunity to know them intimately during the Blight. Besides, without me there to answer questions, there was no way for me to impart the amount of information Anders would need to be actually helpful."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas",
        "celebrities",
        "romantic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-155"
}