{
    "title": "Ebb Tide Ch. 03",
    "pages": [
        "Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells.\n\nFlood tide: The period between the low tide and rising of the water to high tide.\n\nThis tale is an espionage fantasy under assault by reality.\n\nThe 'hero' of this tale might be considered a Libertarian, though the label means nothing to him. He is not completely sane (by some people's definition of the term).\n\nFYI, two of my long-time readers get their cameos at lunch with Vance.\n\n *A List of the Principal Characters is provided at the end of the chapter* \n\n*****\n\n{Vance begins to screw over Lloyd and goes to lunch}\n\nG had both Wednesday and Thursday nights off. This gave us - Dabney and me - enough time to patch G back together. Whoever Mr. Rogers was, he scared the crap out of G. That was okay, he scared me as well. I knew the type. He had been a detached amoral intellectual who had graduated to being an immoral social cynic.\n\nThe CIA agents that dealt with 'covert operations' were part of the Special Activities Division (SAD). They were the ones that converted vaguely worded suggestions such as 'disrupt an Al Qaeda group operating in Lahore, Pakistan' into lists of people to compromise, have arrested, and kill. It was easy for SAD people to feel God-like when deploying that power.\n\nGood SAD members didn't give a crap about the lives in the balance. They worked for 'minimal intrusion', which meant leaving the smallest 'footprint' by removing the fewest people. Bad SAD operators weren't into mass murder. No, that would cost them their jobs and lead to 'extreme sanction'. No, the bad ones reveled in the lives they ruined and were masters of making scumbag group 'A' attack scumbag group 'B'.\n\nThat sounds neat in theory. It is too often a disaster in practice. Once A and B get into a shooting war, the Agency lost all control over the collateral damage. We thought those people were scumbags for a reason, notably for their complete disregard for human life. The bad CIA types liked to sit back and watch the chaos ensue.\n\nSOG operators like me and my old family removed the people we were told to take out, by either blackmail, setting them up for the local law enforcement to arrest, or assassination. We also could look at the news and figure out the long term implications of what we'd done. No one on the CIA SAD end of things made that kind of mistake twice.\n\nIf the pattern repeated itself, competent team leaders would start asking the CIA analysts what had gone wrong. 9/11 had made the oversight tighter, not weaker. Sure, the politicians wanted us to be more active, but they were also more knowledgeable of the risk of cascading damage ... things like the Taliban growing out of the Soviet-Afghan conflict.\n\nAccording to a few of the old timers I interacted with - I didn't join the SOG until 2011 - we were killing far many more people. We were simply killing the right people with an eye out for avoiding that kind of blowback. Mr. Rogers was from the Old School; the kind of men my mentors warned me about.\n\n\"V, he's frightening,\" she confided in me. \"He was terribly...chilling. I don't think he was sadistic. It was something else.\"\n\n\"I'm not going to tell you 'now that I'm here, everything will be okay,\" I said. \"If he is the type of person who I think he is, Rogers is going to be difficult to deal with.\"\n\n\"We are here for you, G,\" Dabney hugged her from the right side. \"V can be pretty scary too.\"\n\n\"Are you sure we are doing the right thing V - Vance?\" G searched my eyes.\n\n\"As opposed to what?\" I then kissed her gently on the lips. \"Consider me your tax dollars at work, G. The US government went to great expense to make me what I am today.\"\n\n\"Tell, me; what is that again, V?\" G sniffed.\n\n\"I'm a paramedic,\" I joked. \"Why doesn't anyone believe me?\" The women looked at one another.\n\n\"The pile of dead bodies you made yesterday,\" Dabney smiled. \"I don't know much about paramedics, but aren't they supposed to spare lives, not take them?\"\n\n\"Wise ass,\" I chided her. Dabney responded by uncoiling from her kneeling position beside G until she was lying on her chest, squishing her breast down while arching her back and knees so that her pristine glut\u00e6us maximus was elevated. Her Brazilian-cut, diaphanous black panties only made the act all that more enticing.\n\n\"This wise ass?\" she giggled. She was hamming it up for G's benefit...mostly.\n\n\"Thank you too,\" G stroked Dabney's bottled blonde-streaked wavy hair. Neither G nor Dabney were lesbians, or even all that bi-sexual. Both had been required by circumstances to sexually entertain women - Dabney because she had been a high-priced escort and G because her ex-husband was one sick fuck.\n\nHe wasn't a sick fuck because he liked to see his wife with another woman. He was a sick fuck because he did it knowing neither woman wanted to do it yet weren't strong enough to defy him. Lloyd Pharris, G's ex, got off on humiliating people that came under his power.\n\n\"That's okay, G,\" Dabney kissed G's stroking hand. \"You waited fifteen years to have sex with Vance just like I did. If you two had a history, I might have been jealous.\"\n\nDabney was teasing us over me being G's pool boy in the two years before I graduated High School and then joined the US Navy. We hadn't slept together. She was loyal to her bastard of a husband and I knew to steer clear. That didn't stop G from being nice to me, even kind.\n\n\"V was always polite and pleasant to me, a friend to my step-son,\" she gave a slight sob.\n\nFord Pharris, her step-son, had been forced by his father to testify that he and G had an affair. He'd been my age and a friend of sorts. Me and another of his friends, Kristoff Declan, had worked at bolstering Ford's self-esteem. Lloyd enjoyed mentally grinding his family down and that was the original source of his dislike for me. I'd hated the monster within a week of knowing him.\n\n\"Wynn kept hoping you would hit on her,\" G looked back to me. \"I 'suggested' that she should leave you alone. I always thought you were too smart to fall for her tricks.\" Wynn was the step-daughter. She'd rebelled against her father in defense of G and paid for it several times since then. That was another reason for me to want him to suffer.\n\nAt the moment, I didn't want to drag G down a painful Memory Lane. I reached past her and gave Dabney's closest buttocks a good spank.\n\n\"Ow!\" Dabney exclaimed. \"Why did you do that?\" she pouted. Oh, she knew precisely why I did it. Role-playing is a skill a girl in her profession had to cultivate.\n\nG snapped herself out of her funk. She launched herself over Dabney's exposed posterior. G's bountiful bosom protected Dabney's buttock. She was giving me a stern look over her shoulder, but she'd left her exposed butt facing me. G should have recalled that she was in a very tight, white men's undershirt which barely reached her hips and no underwear. I took a bite - of her butt and I was downright carnivorous.\n\n\"Yow!\" she squalled. \"That hurt!\" her look became overly-aggrieved.\n\n\"Oh...well, I've been dreaming about doing that for seventeen years,\" I reminded her. \"Let me make it up to you.\" She watched me cautiously. I leaned for and planted a kiss beside my faint teeth marks. She made an exaggerated cooing noise.\n\nA few more kisses surrounded the offended tissue with her letting her cooing transform to aroused sniffling and a slow rocking of her hips.\n\n\"Hey,\" Dabney protested. She pushed her butt up against G's stomach. \"Don't forget me.\"\n\n\"What are you...Ah,\" G exhaled happily as I let my kisses gradually work their way down to her ass cleft.\n\n\"I'm protecting you. Hush,\" G chastised Dabney. I tenderly opened G's legs so that I could part her labia with my right, middle finger lavished nuzzling kisses on her tailbone. My phone buzzed. Crap, we had work to do today before the Sun set our world ablaze.\n\n\"Time to get moving ladies,\" I groaned. Both women shot me evil looks. I shrugged. A time table was a time table.\n\n{Screwing Lloyd is so much fun to do}\n\nOur first stop was at Dabney's old place. For the amount of money she brought in, she should have been able to afford something better. Pablo and her other 'creditors' had been giving her a pittance of what she earned. What the place lacked in location, footage and security, it made up for in closet space.\n\nHer clothing was rather expensive (and extensive in number, if not material), yet wasn't High Society chic. Virtually everything she owned was flattering; more 'mistress' than 'upfront girlfriend/wife' wear. She didn't have enough luggage for her lingerie, much less her dresses. I introduced her to the concept of 'using sheets for looting'.\n\nShe and G were aghast at all the 'damage' I would cause her outfits. I promised to pay for all the dry cleaning, which mollified them. They still viewed me as a fashion Philistine. As we were preparing to leave, it dawned on the two ladies that they were essentially destitute. G's salary was heavily docked ~ paying off the financial burden she'd accumulated divorcing her demonic Ex, Lloyd Pharris.\n\nHe feigned poverty by cleverly hiding all his assets in off-shore corporations. I had a friend working on that. I had a trick up my sleeve that I was sure old Lloyd hadn't considered: I was going to have my old SOG rob the accounts at the source - whatever country the computer servers were based out of.\n\nHaving all sorts of shell companies was made to obscure money and property ownership from legal entities. The list of countries the IRS and Treasury couldn't get access to was rather small. Combined with the high level of computer security Lloyd would insist on narrowed the list down even further.\n\nDutch girl had the data for me in under twelve hours. This time she wanted a small percentage, not a fee, so I knew the information was a gem. If Lloyd thought that the Cook Islands were secure, he didn't take into account that the official police force was rather provincial. Private security was understated and not up to high tech International banking standards.\n\nOh, their computer software was equal to the financial security of Qatar, or the UAE (arguably the best). I'd put in a call into Sylas and his team with the appropriate data. The beauty of the plan was that the information wasn't being stolen ~ the ownership was being transferred. We'd done this before. It was the source of my current wealth.\n\nSylas wasn't going to hack the system, he was going straight for the hardware. Yes, we were altering the code form inside the bank which negated all that expensive cyber-security. Why wasn't Lloyd worried? It was the fucking Cook Islands, protected by New Zealand, in a part of the Pacific that didn't tend to attract secret agents bent on corporate espionage.\n\nWhile I was out in the breezeway talking with Dutch girl via satellite encryption, Dabney played with her answering machine. Sometimes I swear, people don't have the common sense to always check all their surveillance cameras before leaving the house, or not having your answering service match your address. A half-dozen people wanted to talk with her. One was an old threat from a credit agency.\n\nFour were from co-workers and the last one was from her new pimp. So, what did she do? She called her working buddies to get the 4-1-1 on the new, 'other' man in her life. I walked in on the last third of those discussions. She was bragging about me in uncertain yet positive terms. I might be 'The One', the mythical White Knight who would whisk her away to the good life.\n\nThen she asked about the new pimp. What was he like, how had he showed up and was he good-looking? G thumped her for that last question. The guy was 'classy' (he didn't dress like a pimp) and low-intensity (he used verbal threats instead of physical ones). He had muscle too ~ some ex-football defensive line guy - big - not likely to be terribly fast, or overly bright. Smart football guys didn't work for pimps, even pimps who ran real escorts.\n\nHe had showed up with a Little Black Book that had all of Pablo's information in it. He looked like Carmine Giovinazzo ~ Det. Danny Messer from CSI: NY. He went by the handle of Kip Churchill. After she finished with her friend she gave me a hopeful look.\n\n\"I'll just call him to tell him I'm out of the business,\" she promised. Yeah, right.\n\nHer call woke him up. That was no surprise. It was 9 a.m. and the bastard had probably hit the sack maybe two hours ago; once he had all the girls accounted for and collected his cut of tips and credit card receipts. I put him on speaker.\n\n\"Hi, this is Dabney \"Care-Free\" Curtiss,\" she began. \"I've heard you wanted to talk to me.\"\n\n\"What ... huh? Oh, yeah. You were a major earner for Pablo. You owe some serious back taxes, 'Care',\" he mumbled. \"You need to get off your ass and get back to work - for me.\"\n\n\"I do?\" Dabney proved she had learned something from hanging out with me. \"How much?\"\n\n\"What?\" Kip got grouchy.\n\n\"Hang on,\" followed by some rustling noises then, \"You owe forty-three large ($43,000).\" Dabney studied me. I nodded.\n\n\"No I don't,\" Dabney chirped happily. \"I don't have any credit card debt either.\"\n\n\"What? Listen bitch... wait, is a guy called 'V' with you?\"\n\n\"I'm not saying he is, or he isn't,\" Dabney winked at me. \"Why do you want to know?\"\n\n\"I've got a message for him. Where is he?\"\n\n\"Tell me what it is and I'll make sure he'll get it,\" Dabney grinned.\n\n\"Listen Care-Free and listen good; you don't want to ...\" he began.\n\n\"Have they found Pablo yet?\" Dabney chortled. Pause.\n\n\"No.\"\n\n\"Then you might want to consider who you threaten, Kip,\" she got all spirited and feisty.\n\n\"Are we going to have an issue?\" he groused. \"If so, pay what you owe and find someplace else to work,\" he threatened her.\n\n\"Yeah. Whatever,\" she faked a yawn. \"What's the message?\" Another pause.\n\n\"Give me his phone number and someone is going to give him a call,\" Kip told her. Dabney looked at me for instruction. I typed out the order on my phone's screen for her to relay.\n\n\"Call them. Have them give you a number and when I call you back ... in say an hour, you'll give it to me and he'll get in touch with them,\" she repeated my message.\n\n\"Who do you think you are?\" he got angry.\n\n\"I think I'm the new girlfriend of the man who made the news yesterday. My boyfriend is - was a paramedic with MedicWest. Did you see him?\"\n\n\"You're shitting me,\" he grumbled.\n\n\"Nope. Did you see him kill all those people? What do you think he's going to do with you if he thinks you are screwing around with me - Kip?\" Dabney beamed joy my way. That I was opposed to all acts of bravado and boasting didn't occur to her.\n\n\"If you are lying to me Care Free, I'll give you something to care about,\" he attempted to intimidate Dabney.\n\n\"If you think that is a wise life decision, you go right ahead,\" Dabney challenged him right back.\n\n\"Fine,\" he yawned. \"We'll talk later.\" He hung up.\n\n\"Dabney!\" G lit into her. \"You can't use V like that. He is not your personal bully-boy. He's not bulletproof, or immortal.\"\n\n\"Hey ... I,\" Dabney hesitated. \"V, did I screw up?\"\n\n\"Yes,\" I went straight for the jugular Truth. \"Now he's going to be overly cautious and he can point other people at me over Pablo's disappearance. Not good.\"\n\n\"I ... I'm sorry V,\" she moped. \"I didn't think ... I'm just so tired of being under their thumb.\"\n\n\"We live and learn,\" I very lightly thumped her forehead. \"I think I know what this is about.\" I waited until we finished loading the car. She wanted me to tell her what I thought the message might be about. I didn't give in.\n\nI let Dabney drive while I sat up front and G took the back seat and much of Dabney's stuff. We'd taken the Corvette because Dabney assured G and me that she only had 'a few things to pick up. Ugh. After we pulled away, I made the call. The person I was calling didn't have a listed phone number, but she did have an unlisted one.\n\n\"Hello? Who is this?\" she answered.\n\n\"This is V,\" I informed her. \"I have the impression you wanted to talk with me.\"\n\n\"You did? I didn't, but,\" she hesitated. \"Why do you think I wanted to talk with you?\"\n\n\"Kip.\"\n\n\"Ah ... maybe I do want to talk with you after all,\" she said. That meant she wanted to talk with her mom, Circe, Vice Lady of Lust ~ the Mistress of all the sex trade in Las Vegas. \"I'll call you back.\"\n\n\"Well, my number is as useful as it was last time,\" I pointed out. \"I'll call you back in ten (minutes).\"\n\n\"You remain inquisitively annoying, Vance,\" she sounded amused. \"Nice job yesterday. I'm glad we didn't have a disagreement last Monday night. You say CAM trained you?\"\n\n\"In macram\u00e9, needle point and cross-stitch mainly,\" I lied. CAM - Christ All Mighty was one of my SEAL instructors, an exceptional human being and a man I didn't want to cross.\n\nHe was a physical conditioning expert - an ace at training men to regularly perform at inhuman levels of stamina, physical training, and overcoming your previous physiological limitations. He was also a dive instructor. CAM hadn't trained me in the 'lethal arts'. He had trained me how to tone my body so I could be far more dangerous than I would have ever been without him.\n\n\"Can't you ever tell me the truth - about trivial shit? I know you are as good as your word when it counts,\" she joked.\n\n\"I always thought you were very pretty and totally beyond my means when we hung out together,\" I told her. Dabney hit me. \"You go make that call. I need to deal with Dabney. She's slapping me around.\"\n\n\"I'm sure she is,\" Reagan laughed. \"I'll hear from you in ten.\" She hung up.\n\n\"Who was that?\" Dabney asked. G looked at me intently too.\n\n\"It has to do with that matter Sunday night that I'm deciding how much I want to get G involved with,\" I reminded Dabney. She put her hand over G's eyes and mouthed 'Circe'?\n\nI nodded. Keeping G in the dark was worse than letting her know she knew who 'Circe was.\n\n\"Oh shit,\" Dabney mumbled. G pulled the hand away.\n\n\"What is it?\" G looked at me. \"How bad is this? Is this 'why we don't talk about Pablo' crap?\"\n\n\"Pretty much,\" I confided. \"So, where are we going to eat?\"\n\n\"Oh, let's try the Lagoon Bar and Grill,\" Dabney perked up. \"I've been there twice - on dates - and it has great food and excellent service.\"\n\n\"You're driving,\" I reminded Dabney.\n\n\"I loved going there ... with some of my old friends,\" G went from happy to less than happy. G possessed a level of emotional self-assurance that Dabney hadn't cultivated - yet.\n\n\"You can either look at it as if they weren't really your friends because they didn't stand by you when you needed them,\" I offered, \"or that they wisely avoided Lloyd and you can forgive that.\"\n\nG reached around and hugged me. I HATED people grappling with me like that. It was so ... unnatural.\n\n\"Thanks Vance Vardanyan,\" she breathed into my ear. \"Thank you for everything.\"\n\n\"Thank me when we are done,\" I advised her. \"Don't count your victories until you've garnered them. It is a rule I live by.\"\n\nI took the drive time to call Sylas. We discussed my info and possible plans. Since Dabney and G didn't speak Arabic, that was our language of choice. He loved the poetic justice of the mission. Self-important American corporate types, including arrogant lawyer-types, held a special place in SOG operators' hearts.\n\nToo often, our political assignments were fueled by these bastards. If someone abroad was causing them business difficulties, we were duped into risking our lives so they could tack on another $10,000,000 to their portfolio. Considering we could die helping these douches meant we weren't hunting down real threats to our nation's well-being truly chapped our asses.",
        "Don't get me wrong, I didn't hate any profession, in the same way I didn't hate any ethnic group (try growing up Armenian and NOT hating Turks and Azerbaijanis), religion, nationality, or gender. There were good lawyers I could rely on and doctors I wouldn't trust to tie my shoes. I had a Shia Imam hide me in the basement of his Mosque when being found would have been uncomfortable.\n\nWhy? The Koran directed him to protect those who sought shelter from the lawless. He hated the Secular West, yet he refused to compromise his faith in what he saw as combating its pernicious influence. Not a single member of the team had been Islamic, but we obeyed his strictures and discussed the Koran with him late into the night. His house - his rules. You will find how much easier life is if you follow a few simple guidelines like that.\n\nI'd even met a lawyer from the International Criminal Court who wasn't a totally arrogant douche. He was mildly curious why a salesman of hybridized coffee beans (my cover) beat up (made them utilize their long-term care insurance) some thugs (really contract killers out to collect the bounty on his head). Not every assignment I had with the SOG involved us killing people ~ explicitly.\n\nSylas's team strategy was pretty straight forward. If we moved the accounts out of the Cook Islands, they'd track the transactions. That would amount to a massive post-Cooks Island investigation and tons of world-wide fraud charges. To get around this, we were going to have Lloyd sell everything at that bank through manually entered business dealings (from inside the bank at night) ~ selling off his assets ~ to another account in the same bank.\n\nSeveral transactions later, as the price of Lloyd's belongings were consistently devalued, we'd eventually put them in Georgianna 'G' Norquist's name. By the time Lloyd's people ran down the trail of sales, G could legally transfer the accounts to other banks. The Cook Island banks hadn't lost any money or assets up until that point.\n\nOne group of internal accounts was making a series of transactions with other accounts inside the bank. That way nothing would tip them off to the break-in. G would end up'buying' everything with the money in the accounts I was currently setting up for her in the Cook Islands. According to their records, all were legitimate sales (the banks firewalls hadn't been breached).\n\nThe bank got their minimal fees for each transaction, so they'd be happy ~ with their share of Lloyd's money. In the final tally, G wasn't stealing anything. She was merely transferring assets the bank 'knew' (and could prove) to be hers to elsewhere. Lloyd had chosen the Cook Islands because they consistently fended of other global economic and legal interests in favor of their patrons.\n\nThat was about to come back at him in reverse. Lloyd could complain to the Cook Islands, who would then complain to - who? I was sure the IMF, the Treasury Departments& Finance Ministries of a dozen countries and Interpol would LOVE to fly to the islands and crawl through their records to verify Lloyd's claims of malfeasance. The Cook Islands would decline the assistance. Lloyd's millions were not worth the bank's billions.\n\nBesides, they'd been paid and if Lloyd was proven right, they'd have to give up the thousands in fees the bank had (fraudulently charged him). Plus, they'd look like idiots ~ idiots with an unsecured banking system. Where were we sending all those accounts to? She'd register all the bank accounts and properties in ... Las Vegas, Nevada; the Good Ole US of A. Why?\n\nHow was Lloyd going to get back the things he had declared to the Nevada Court system that he didn't own when he screwed G over in their divorce? Everyone acknowledged said entities existed. Lloyd claimed not to own, or control them and they had all been out of US's legal jurisdiction anyway.\n\nAll those shell companies were still legal entities in the global financial markets. It had been their internal records that had been shielded. As an example: South Pacifica Reality Investments (SPRI) still existed. The shadowy board of directors who owned all the stock in SPRI had devalued their shares in a series of purchases then they unloaded those depreciated shares to G.\n\nG, as sole stockholder then took over the SPRI, all legal-like. All of those transactions were manually entered into the Cook Islands accounts by Sylas's team (actually by a device the CIA created a few years back ~ it was way faster than any typist). Lloyd had a dozen such entities. They controlled all his properties on four continents as well as most of his tax shelters and illicit off-shore accounts. We were going to take them all.\n\nThe only way to attempt to retrieve his wealth was to admit he owned the Cook Islands-based institutions at the end of the shell corporation trail. Having failed to disclose these resources during his divorce trial, I was damn sure he'd never paid taxes on them either. That equated to about 150 years in the penitentiary for federal, state and municipal tax evasion, plus multiple counts of fraud, all on the public record.\n\nG would have to fork out a gratuity (aka taxes) to the biggest extortion racket on the North American continent - the US Federal government - but it would be worth it. I knew G wouldn't get every penny Lloyd had. Dutch Girl would get paid as would Sylas and his crew.\n\nLloyd would still have his legitimate accounts based on his above board partnership in the richest law firm in the state of Nevada, plus some properties he legitimately owned and charities he controlled (for money laundering purposes). That equated to upwards of $2 million - a pittance compared to his hundreds of millions that he was going to lose.\n\nWas I worried about his legal avenues of attack? No. Lest we forget, thanks to the shootout yesterday, I had the FBI interested in me (but not G). Their attention was an unlooked for complication, yet I'd been trained to improvise and adapt in order to overcome obstacles and turn deficits into strengths. I'd used IAB Detective Lieutenant Trixie Crowe Buchannan to hammer away at Lloyd's police assets.\n\nI hadn't aimed for seriously impairing his influence. I didn't have to because, while I had meant to aim TC at Lloyd, she'd aimed herself at me. I was going to use that. The LVMPD would look incredibly vindictive and venal coming after me now, especially based on such chicanery as anonymous tips, hearsay and questionable evidence. When my name came up on any law enforcement proceedings, the Federal government would want to know why.\n\nG was going to get her vengeance for two decades of humiliation and abuse. Without her knowing the whole game plan, I was going to let her gut Lloyd like a Big Mouth Bass to the tune of over $400 million - after fees and taxes. Georgianna was even going to get her house back and also Lloyd's firm's current office building.\n\nI still had to worry about Mr. Rogers and his nefarious capabilities. Letting Lloyd spiral down into mediocrity probably wasn't his Plan A. He'd think of a way to go after G and I was going to have to be there to counter him. My next hurdle was keeping us in play until Sylas pulled all of this off - which looked like it would be on Saturday night - 10 pm CIT(Cook Islands Time) aka 1 am PDT (Sunday) in Las Vegas.\n\nBefore 6 am CIT Sunday morning, Lloyd's assets would start their long journey to the US, chasing the Sun, heading through a host of non-Western banking systems. (Numerous Islamic and Hindi financial institutions did business on Sundays.) When that happened, the first automatic international transactions would take place and it would be out of Lloyd's hands.\n\nIt wasn't until the start of business Monday morning ~ 9 am PDT~ that Lloyd would have his first chance to clue in that he'd been financially ass-raped. By then, he would already be in a terrible jam. See, if we did this to drug cartels, evil sheiks, Somali warlords and euro-trash syndicates, they still possessed a criminal organization that could come after us.\n\nWe hadn't stolen their guns, minions, or their outrage. Lloyd didn't have the option of using the first two. Oh, he had plenty of people still under his thumb, but coming after us would be a whole hell of a lot harder. He had to play by the rules of the US legal and criminal system. That meant he couldn't torture G to make her give back what she'd stolen.\n\nThe US banking system didn't work that way. As a yet another 'fuck you', G was filling out her new 'Last Will and Testament' with one of those on-line legal firms. It would take two business days, thus the need for her to finish it before 1 pm EDT. That meant we could pick it up here on Friday afternoon.\n\nThen we'd file it at 4:55 pm (PDT) at the 8th District's (Las Vegas) Civil Clerk of the Court. G's attorney wouldn't find out about it until he received the certified notice by mail around 1:30 pm, or so, Monday afternoon. Since we all knew he was yet another one of Lloyd's stooges, he would also get the 'You are no longer my Attorney of Record' notice.\n\nThat would be seven and a half hours too late for Lloyd to do anything. Banks on the American East Coast began officially processing orders at 9 am EDT. The assets were now (electronically) on US soil. For a few seconds they'd stay in two dozen banks from Bangor, Maine to Miami, Florida.\n\nThen that fortune would make the final trip to pre-screened banks and property management firms in Nevada, which would be completed in about ~ two minutes. I had pre-screened them before I began putting my legal assets under their care. By then it would be too late for anyone to stop G's return to Las Vegas prominence.\n\nThe new Will would pretty much guarantee G's life for the time being. If she died, she was leaving it all to twenty of G's favorite 'LOCAL' charities. The locals would fight Lloyd tooth and claw for their 'fair share' of her estate if she mysteriously perished. (She added the Wounded Warrior's Project just for me.) Lloyd was about to learn a lot had changed in the intervening fifteen years since we'd last met face to face.\n\nI took personal satisfaction knowing that Lloyd had dodged all the taxes that other people had contributed to the government that paid for the training that allowed me to fuck him over. I was cautiously happy and optimistic. I felt I was making the world a better place by screwing an evil, monstrous sadist to the wall. That didn't mean I'd let my guard down.\n\nTons of bad shit could happen to us between now and Monday. I felt I needed some extra insurance, so I called Regan back. She wanted to meet me for lunch and I agreed. I told her where she could find me. It was a very public place and outside of Las Vegas city limits, so less likelihood of any stupid law enforcement malfeasance. 'Stupid' didn't mean it wouldn't happen.\n\n\"So, what's with the phone?\" G inquired after all the business was dealt with and the Hilton Lake Las Vegas Resort & Spa came into view. The Lagoon Bar and Grill was part of the Hilton complex.\n\n\"It turns my mobile phone into a satellite phone,\" I explained.\n\n\"It makes it much harder to track, trace and intercept. It comes highly recommended and it's from South Korea so no one can pressure US firms to cough up information on me.\"\n\n\"Oh wow,\" Dabney rejoiced. \"You've got to get me one of those.\"\n\n\"Why would you need one?\" I asked.\n\n\"Oh don't know. Because it's cool?\"\n\nI sighed. G patted me on the shoulder in sympathy. Dabney was taking to her newfound liberty with a tad too much vigor and too little financial sense. I was familiar with the symptoms. It was something shared with anyone facing a long prison sentence that suddenly was granted freedom.\n\n{Who is shooting at whom?}\n\nThe two clerks at front desk of the Hilton gave the three of us the 'hairy eyeball'. I was dressed the way I always was ... like I expected trouble to jump out of every potted fern and air vent. Dabney was apparently recognized from previous visits. G's divorce humiliation had been a media circus. I walked up to the front desk.\n\n\"We are going to the Lagoon Bar and Grill then lounge around the pool for a bit,\" I told them.\n\n\"Sir,\" the word dripped with sarcasm, \"poolside service is for guests only.\"\n\n\"Okay,\" I shrugged. I handed them that black card I always carried.\n\n\"What's this?\" the assistant manager (the female clerk with pretentions of authority) asked.\n\n\"Swipe it and find out,\" I directed her. She looked terribly put out. Her minion was about to put in that call for security since Dabney was a call girl. She swiped it. Her mouth fell open.\n\n\"Yes Mr. Vardanyan. Right away sir. Which room would you like?\" her words come out honey-sweet.\n\n\"I want the one on the third or fourth floor which provides the best view of the Parking Lot.\"\n\n\"Not a lake view, or a penthouse suite?\" she tried to correct me. \"The lake is quiet beautiful.\" It probably cost more too.\n\n\"No. People don't tend to come after me from an artificial lake. Like normal folks, they park their cars and come through the front door.\"\n\n\"Huh?\" she was clearly confused.\n\n\"Your next question is going to drop your tip form 15% to 12%. Food for thought.\"\n\n\"Yes sir. We have a suite on the fourth floor that overlooks both the Parking Lot and Montelago Boulevard. Does that ... I will log you in right away,\" she blathered.\n\nI retrieved my card and room key then off we went. Did I plan to use the room? I didn't know, but if I needed one I didn't have to break in. Always a plus.\n\n\"What kind of credit card is that?\" G whispered. \"What is the credit limit?\"\n\n\"Hmmm ... it is September 11th, 10:45 am PDT (Pacific Daylight-savings Time), so it is drawing from the Foreign Minister of Paraguay's illegal slush fund,\" I answered.\n\n\"In fifteen minutes it will be some cock-sucking sheik who thinks smuggling funds to Hamas is a wise course of action,\" I added. \"At noon it becomes the Swiss account of some Russian arms dealer's mistress.\" That's right. Not only did I have my own secret accounts, I had a host of dirt scumbags' ill-gotten wealth to pillage as well.\n\nThe principle was that if I only took a little bit of money, they wouldn't notice. Even if they did, they wouldn't know who to come after (barring a super-good hacker)? Otherwise, the worst that could happen was they would empty that account. For that eventuality, I walked around with $5000 in cash. If someone could beat me up and rob me, losing that amount of small change was the least of my worries.\n\n\"How do you remember all of that?\" Dabney wondered. \"I have trouble remembering to take my birth control pill.\"\n\n\"Dabney, I know a hundred thousand plants by sight, smell, texture and/or taste. Recalling 24 twelve digit bank codes is child's play in comparison,\" I enlightened her.\n\n\"Whoa,\" Dabney tugged on my arm to get my attention. \"I didn't know you were that smart.\"\n\nI stared at her until the magnitude of her insult took hold.\n\n\"Thanks Dabney ... ,\" I trailed off. I was looking into to the abyssal depths of a seasoned professional killer's eyes. To add to the bizarre, 'it' had three kids sitting across the booth from her (?).\n\nThe owner of those eyes was also sitting in MY seat. I wanted to be perched there because it had a clear view of all the exits, including the one that led to the kitchen. It was a perfect vantage point. It took me a second to put all the facial clues together to figure out the killer definitely was a she.\n\nShe had very small 'A-cup' breasts and I had some experience with effeminate guys. Looking like a sissy didn't make you one. Unfortunately, the second best booth was the one next to hers and that vantage point would put me with my back to her ~ not something I was looking forward to.\n\n\"Take a seat, ladies,\" I directed my women. I made an elliptical approach to the killer so she could keep a constant watch over me. Spooking her would be BAD.\n\n\"Hi,\" I said to the lithe woman. She had one hand I couldn't see. She had shocking white hair and thin eyebrows that made her reddish-brown irises stand out.\n\nHer skin was pale (she wasn't an albino), she was slight of build, yet wiry like a coiled serpent. Her nearly alabaster skin and hair contrasted with her black tank top nicely. Her red leather jacket had to be hellish in this heat. But it did an adequate job at hiding her two hand cannons in shoulder holsters. My bet was .50 caliber custom jobs. She was slouching slightly, so I couldn't make out her pants.\n\n\"Hi,\" she cautiously replied.\n\n\"I'd like to sit in that seat,\" I motioned with my head toward the booth seat I intended to use.\n\nShe thought it over.\n\n\"You are the guy from the TV yesterday,\" she remarked. Then the kids got into it.\n\n\"Hey!\" the closest squealed - a girl in her mid-teens. The middle kid was on the cusp of puberty and of different genetic stock than the girl. The second boy who was ten, or so, was clearly related to the teenage girl.\n\nGirl: \"You kill people.\"\n\nMiddle kid: \"You saved that pregnant woman.\"\n\nYoungest kid: \"You blew that guy's head off.\"\n\n\"Yes, I am that guy from yesterday, I don't like shooting reasonable people, and I didn't blow anyone's head off. I shot him in the head and blew off the back part of his skull.\"\n\n\"Wow\", \"What qualifies as reasonable,\" and \"Cool.\"\n\n\"You shoot a HK45 Compact Tactical,\" the adult stated. I nodded in response.\n\n\"You are pretty good,\" she started to lose her silent menacing composure. \"Can I see it?\" Now normally I don't do that, but I had two friends close by.\n\nI raised up my gun hand then carefully withdrew my piece. If she drew down on me, I was close enough to grapple.\n\n\"Nice,\" she weighed my firearm. \"Off the shelf. A good buy.\" She handed it back.\n\nI made double sure she hadn't done something tricky with it. She approved of my caution.\n\n\"Jo.\"\n\n\"Nice to meet you, Jo. Are we okay?\"\n\n\"Yes.\" That was a statement of fact, not a gift. She thought she could kill me. I backed up to my seat. \"I'm babysitting a friend's children and their friend.\" That was a courtesy.\n\n\"I'm expecting someone else. They may, or may not have company,\" I told her. Like me, she probably loathed surprises. She nodded. It wasn't like she could gracefully exit the situation. They had just received their meals and corralling the kids at this juncture would be the equivalent of herding chickens.\n\nI didn't like children. I especially didn't like it when they turn around in their seat at my back and start talking to me. It made it hard for me to keep a steady watch on my surroundings.\n\n\"Are you a police officer?\" the youngest one asked me. He was inches away from my ear.\n\n\"I'm a paramedic.\"\n\n\"I thought they saved people.\"\n\n\"I save some people and hurt others. I'm multi-talented.\"\n\n\"Can I see your gun?\"\n\n\"No.\"\n\nG and Dabney were starting to snicker at me.\n\n\"You showed it to Aunt Jo,\" the tyke countered.\n\n\"Does your Aunt Jo let you handle her guns?\"\n\n\"No...\" he moped.\n\n\"I think I'll follow Jo's example and not give you a deadly weapon.\"\n\n\"Wise course of action. Benji, leave the man who kills people alone,\" Jo intervened. The kid obeyed, the waiter took our order and then Reagan showed up alone. That was a whole new level of badness because the second Reagan saw Jo, she blanched. She still made her approach.\n\n\"So, you know the woman behind me?\" I remarked to Reagan.\n\n\"Do you know her?\"\n\n\"We just met. Her name is Jo and she's on an outing with some children she hasn't introduced me to,\" I explained.\n\n\"I'm Leigh,\" the fourteen chimed in. \"My brother is Benji and Mark is our friend.\"\n\nI didn't want to know their names. For the same reason I hadn't named G and Dabney. I valued my ladies' lives; giving their names to someone like Jo could rarely end well for either of us.\n\n\"Hi Jo,\" Reagan gave a weak smile.\n\n\"What are you doing here?\" Jo was far from civil.",
        "\"I'm having an early lunch with friends,\" she replied. \"Unlike you, I have a social life.\"\n\nWhoa Nelly. Why was Reagan getting pissy? Why did Reagan have the impression Jo wouldn't flip and end her life ... and mine and G's and Dabney's?\n\n\"Chill, Reagan,\" I intervened. \"This is an ugly fu...\" damn kids, \"fuggly situation. This is four coincidences too many for me in one week.\" Hell, three was enemy action.\n\n\"Hello Reagan,\" G spoke up. Dabney remained silent. I got the feeling she was under the misconception I wouldn't keep Reagan at bay if the shit got bad. Of course G and Reagan knew each other. Back in the day, she hung out with Ford, her stepson, and me. Dabney's relationship with Reagan was a more recent situation.\n\nIn hindsight, when Reagan had spared Dabney's life a year ago, she hadn't made my life any easier. But it was good sex, plus a feeling of belonging I hadn't had since I was a teen. I stood up so Reagan could slide in, leaving me the immediate exit if needed.\n\n\"Hello Ms. Norquist,\" Reagan was downright disrespectful. She slid in so I could resume my seat.\n\n\"Dabney, Vance tells me you are behaving yourself,\" Reagan turned her mob boss persona on my younger lover. She wanted to remind Dabney who had the power at our table.\n\n\"So, you wanted to see me,\" I began. \"I want...\"\n\n\"Let's not discuss business now,\" Reagan interrupted. That could only mean ...\n\n\"Oh shit,\" I mumbled.\n\n\"I heard that,\" Leigh giggled. At that point a lesser man would have banged his head against the table in frustration and maligned the very nature of the universe until he was unconscious, or babbling like a madman. Me and my fucked up existence.\n\n\"Who is she with?\" I looked at Reagan.\n\n\"What makes you ...\" Reagan began to lie to me. \"Do you really want to know?\"\n\n\"As opposed to the possible psycho sitting behind me with two hand cannons remaining one of life's Great Unknown? Yeah, I'd like to know.\"\n\nReagan looked over her shoulder at Jo. Jo was playing the cipher.\n\n\"She's the chief assassin for the Lord of Wrath, Thulsa Doom,\" Reagan whispered in my ear. Too many people were getting in my physical space. It was an irritant I didn't need.\n\nOnly three words of those words were critical to my survival. Assassin and Thulsa Doom. In my time, I'd know three people who deserved the title of 'assassin' and I'd help kill two of them. The third ... I'd tried and failed. I was sure one of these days that Scandinavian witch was going to show back up in my life ... or put a bullet through my heart at 500 meters. She was an exceptional shot.\n\nThulsa Doom was Las Vegas' own Merchant of Death. If you sold anything that ended up killing people, wielded the lethal blade, or pulled the trigger, you paid tribute to that black-hearted soul ... or so the legends said. I hadn't wanted to believe in that fairy tale - until that moment.\n\nIt was time to work on removing my ignorance. Jo wore two shoulder holsters while my sole gun was on my hip. It allowed me to do this ~ draw my gun and point it against the back rest so I could put a hole in Leigh. I am that guy who would shoot kids to get the job done.\n\n\"Jo, I think it would be wise if we cleared some things up,\" I stared at Jo's chest.\n\nEye contact was pointless since the danger lay with her arm/hand movements.\n\n\"What's going on?\" Leigh asked.\n\n\"I'm inviting your Aunt Jo to have a little private chat over there,\" I indicated the restroom's recessed area while keeping my eyes on Jo's chest.\n\n\"Why do you want to do that when I'm right here?\" Leigh teased me. Jo slowly complied with my wishes.\n\n\"Leigh, do you make a habit of walking around armed?\" I kept my aim steady.\n\n\"Jo does because she's ...\" Leigh stopped herself from blabbing family secrets to a near-total stranger.\n\nJo slid slowly out of her seat then took two steps away from the table, her hands clear from her weapons. I slid out, holstered my .45 and motioned her toward the bathrooms. Oh, she could probably whip out some fancy martial art's move. I might not get my gun out. If I did, I was also the type of man who wouldn't hesitated to kill people no matter what their age out of a sense of revenge.\n\nWe migrated toward the privacy of the bathroom antechamber. Jo put her back against the wall.\n\n\"Okay,\" I met her gaze. She was still being a cipher. I had experience with this type of situation. Jo wasn't someone you fucked with without a God damn good reason. I moved to the wall on her left. Odds were if she wasn't born ambidextrous, she'd trained herself to be.\n\nI put my back to the wall about a foot away from her. Jo kept staring forward.\n\n\"I find myself needing Reagan right now. You are causing her concern and it would be nice if someone clued me in on what's going on between you two,\" I said. Jo kept quiet.\n\n\"Fine,\" I shrugged. \"Let's go sit back down.\" Very slowly Jo's head turned to look at me.\n\n\"You are the one who drew down on me,\" she pointed out.\n\n\"That is correct,\" I confirmed. \"I've got a basic understanding with Ms. Cho. I can't say the same thing about you. That means you are a complication and my life has too many already.\"\n\nJo mulled that over.\n\n\"You speak your mind,\" she stated. \"I'm not sure I like that.\"\n\n\"Making you like me isn't one of my immediate goals.\"\n\n\"What is going on between you and Ms. Cho?\"\n\n\"Not something I can talk about.\"\n\n\"That's not helpful,\" she looked forward again.\n\n\"Would you rather me be the kind of person who would break my agreement with Reagan?\"\n\n\"The Lord of Wrath controls the arms trade in the region in the same way Circe controls the sex industry,\" she volunteered. \"Do you work for Circe?\"\n\n\"No, but I owe her for not killing my younger friend.\"\n\n\"Very well. Just so you know what you are getting into, The Lady of Lust is not someone you want to be indebted to.\"\n\n\"Thank you for that piece of advice. I appreciate it,\" I replied honestly.\n\n\"We both know you are the type of man who kills anyone who gets in your way,\" Jo meant she knew my threat wasn't totally empty, \"and that you had your safety on. That was a serious risk you took. I'd kill anyone without hesitation who threatened those kids. As it is, I feel you owe me now as well.\"\n\n\"That's Peachy. Still, I'm good with owing you now that I have some idea who you are. Besides, you weren't likely to murder someone in front of the children,\" I added.\n\nJo conceded the point with a nod.\n\n\"I think we've kept our associate dependents waiting long enough,\" I suggested. Jo nodded.\n\nI was of the opinion Jo grudgingly gave up every word she spoke. We walked back to our respective tables.\n\n\"Did you ask Aunt Jo out on a date?\" Mark asked. I hated kids.\n\n\"I did, but she only dates men of high moral character,\" I replied deadpan.\n\n\"Jo doesn't date at all,\" Leigh point out while not so subtly hinting she did. What could possibly possess that teenager to think I wanted to commit suicide by underage pussy?\n\n\"Having high standards isn't a character flaw, Leigh,\" I related.\n\n\"But you are a hero?\" Benji piped up. \"She'd like to date a hero.\"\n\nWhy? Why would Jo want to date me and why would I want to date her? I was barely adjusting to the two women I liked, had a history with and even their constant proximity was wearing on my patience.\n\n\"Vance asked me out and I said 'yes',\" Jo enlightened us all. I hid my horror well.\n\nDabney and G were not so gifted, or restrained.\n\n\"Why would you date her?\" Dabney grumbled. \"She's not even pretty.\" That's right Dabney. Go out of your way to irritate someone I was cautious around ... you know, lethal.\n\n\"I'm attracted to her constant silence, Dabney. Her ability to keep her mouth shut before saying something rude, uncalled for and possibly personally unfortunate,\" I grimaced.\n\n\"She looks like a boy,\" Dabney muttered.\n\n\"Dabney, there is clearly something going on here that we don't understand yet,\" G warned the younger woman. No one was corralling Leigh.\n\n\"Dabney,\" Leigh turned in her seat, knees on the cushions, \"how old are you?\" Ugh.\n\n\"Twenty-six,\" Dabney replied. \"Vance looked after me when I was just a kid. I've loved him for a long, long time,\" which was aimed at me. Fuck, was I being sized up for a nose ring?\n\n\"Do you love Dabney?\" Leigh kept coming. I came here for a meal and a chat with Reagan so we could delineate Dabney's future, not satisfy a teenager's curiosity.\n\n\"Six hours in the past two days,\" I responded. Leigh didn't get it right off the bat. Dabney sighed happily while G blushed.\n\n\"Enough,\" Jo quietly compelled Leigh to turn around and attend to her lunch. Our own meals arrived. The Lagoon Bar and Grill was filling up which didn't make my job easier.\n\nWhile I was eating my steak (I don't really like steak, but with steak comes a steak knife), I saw another historical landmark reappearing in my life. I recognized him. He may not have remembered me. I had been a lot younger when we last crossed paths. His look remained unperturbed and his reactions, if any, were guarded ~ which was normal for him.\n\nAnother worrisome couple arrived ten minutes later. I saw the bulge that strongly suggested a concealed firearm. He gave Jo, me and the other newcomer a scan I would have missed if I as a more trusting soul. The depth of our companionship must have put him at ease. The hot young lady with a dark complexion and long, luxurious black hair with him certainly helped. He held her chair while she chatted amicably. There were too many distractions for my comfort.\n\n\"Let's go poolside,\" G suggested. \"Vance reserved a room as well.\"\n\n\"Good idea,\" Reagan nodded. It was a good idea, just ten seconds too late. Out by the pool, eight men (Group A) who didn't belong there were coming our way. Their two duffels were out of place and menacing.\n\nTwo more groups inside the restaurant - the first six (Group B) in the middle of the room (one duffel held by the fifth man) the other seven (Group C) closer to the bar (no duffel) -were winding their way through the tables toward me, as well. All the duffels were big enough for combat shotguns and carbines.\n\nInstead of going for the serious hardware, they had out pistols mainly, pointed down and pretending they weren't obviously here to bungle an attempt on someone's life. It hadn't escaped me they could be coming for Jo. Both assassins and rambunctious paramedics could accumulate their fair share of enemies. A quick analysis indicated they weren't brain surgeons, or even good hitmen.\n\nThey were blocking themselves in and were ignoring the solidity of the booths we reclined in. The inner wall of the booths was against the restaurant dividing wall. Between the thickness of the booth structure and the depth of a wall meant to support the hotel above us (filled with heat resistant insulation) we had a miniature, pistol-proof, fortress.\n\n\"Everyone down,\" I hissed.\n\n\"Get under the table,\" Jo quietly commanded her wards. As for our attackers, it was their fatal, final exam time with a steep grading curve and they clearly hadn't studied ... or even attended classes. They were staring right at us. Their attentiveness indicated my table was the target.\n\nI wasn't sure if it was Reagan, or me, but legality meant I had to wait until they went from stupid to stupid-killable. 'Me' moving to the very edge of the booth was all the 'provocation' they needed. I wasn't absolutely sure yet, but I suspected Jo was mirroring my move. Drawing first was the smart thing to do. It was what my military training had honed my instincts to do.\n\nIt was also the reaction that would land you in jail for multiple counts of Manslaughter (if you were lucky) or 2nd degree Murder (if you weren't). Reagan was already sliding under the table. Dabney and G weren't as fast. The first guy, a medium sized black man with a white dew rag in group B, revealed his S&W Model 629 .44 Magnum - good at intimidation - a bit too heavy for waving around.\n\nIt was the 'Hunter' type with the nifty little scope on top. I counted off the milliseconds until civilian 'Rules of Engagement' turned me from aggressor to victim. His intent was to shoot with his right hand while he was shifting to a side-facing position. Since I was between Jo and the attackers, I was obliged to quick-draw while going to a kneeling stance.\n\nI felt constrained to let him get first crack. He was adding to his list of insults to shootists everywhere by make his first pull of the trigger while he was still holding his Magnum sideways. That bullet passed through the spot Reagan's head had just vacated. The gun kicked and he'd be almost two seconds drawing a bead on me. I didn't have to wait any longer. Bang!\n\nI caught him in the Manubrium ~ that's the top of the sternum. The bullet shattered his fifth cervical vertebrae. The second and third people in group B had been shielded by the lead man's body.\n\nThe fourth person, an overly-bulked out woman with a pink Mohawk, was raising up a mini-Uzi from under her short leather jacket where she'd been (theoretically) concealing it. She was slow and too bunched up with her teammates between two tables to get a clear shot. I didn't have her problems. My .45 hit her in the jugular notch and exited her trapezius, blowing off a third of her neck.\n\nI planned on the arterial spray from Mohawk woman to have a demoralizing effect. Even as the recoils was passing up my arm, Jo fired twice with remarkably rapidity - not a single action. Before that moment, I'd only seen people fire two guns in the movies. Jo was behind me, but my ears were keeping me abreast of her movements.\n\nThe physics of a 5' 8\" woman roughly 115 lbs. (she was wiry, tight with dense muscles) absorbing the recoil of TWO alternate-firing .50 caliber custom-made handguns was a technique my mind would analyze later. All I knew was I felt more comfortable using a two hand grip with my sole HK45 Compact Tactical.\n\nBy unspoken plan, we were taking out the leaders in the two (B&C) groups inside first. I was kneeling and by the sound of her fire, she was moving to the left toward the bar. She was also mowing down seven men approaching us from that way. Seriously, they should have had body armor. Jo and I didn't because we had come here to get a bite to eat with people we cared for.\n\nIt was reasonable to assume they had come here expecting a firefight. In a peripheral manner, I was aware that Jo's first two shots were lethal. The lead player in C, a forty-something, greying white guy, was raising up a .38. He had spent too much of his life smoking, drinking and poor living. Jo's .50 caliber slug took him left of center chest - heart shot.\n\nThat bullet, having passed through him between the ribs, proceeded to fatally wound the man behind him, a big, white dufus whose vacuous stare spoke to borderline retardation. A third man in the line-up, a white guy, painfully over-weight with thinning, slick-backed hair - was partially shielded by his companions. Jo's other gun caught him just above the left elbow, severing the flabby limb.\n\nJo and I shared a problem. The dying men in front of us weren't falling down fast enough. Seamlessly, I pivoted and shot the sixth and seventh men in Group C's line-up; two black men who looked closely related and strung out on meth. The sixth man's sawed off shotgun, triggered by his body spasm, blasted the fifth man, a short, wiry Hispanic, in the back.\n\nShe killed the fifth and sixth shooters in my group; a stocky, older Hispanic male and a tall, thin, Amerindian looking fucker. Jo's movement allowed her to flank my group. Her group (C) had been trying to catch us in a crossfire with group (A) by moving along the bar. It should be noted there were six civilians in the kill zone. None of them had started to react yet.\n\n\"Moving forward,\" I called out as I went into a slightly crouched stance and closed the distance. I was quick-stepping it in their direction. Three tables back and straight ahead, I saw that older gentleman I'd recognized earlier drawing a Colt 1911 .45 ACP. In that split second, three tragic accidents were avoided - Jo didn't shoot him and he didn't shoot her.\n\nThe second, unexpected ally, the guy in the far corner of the room, drew down on the moron hit squad instead of deciding to shoot any of us. I was moving toward the remnants of group B, so that when the four of us turned on Group A, I wouldn't be in her line of fire. The four surviving enemy combatants in the dining area were finally getting into the fight.\n\nBy shifting to get clean shots at Jo and I, they were unmasked by their dead companions. The last two on my group (B) broke left and right. The guy to the right tried to use an older (spectator) woman as a shield. I put a slug through his right eye with the accompanying brain and skull splatter to the tables behind him. I continued moving forward.\n\nThe last guy in 'B' - the one going left - pitched forward as the elder ex-serviceman shot the bastard in the back. In the left corner, another 'hero' was coming into play. He'd been pushing his date to the ground as he drew his Sigma series S&W40. He had run out of immediate targets as Jo cut through the last two in her group. He didn't even bother tracking me, Jo, or the third man.\n\nHe pointed his pistol poolside, pulled the trigger and began shattering glass and bodies. That was the cue for the rest of us to unleash hell in that direction. Eight men meant we all got two would-be killers in our target zone. The new guy took the far left, the third shooter took the center-left, Jo aimed for the right center duo and I took down the remaining two on the right.\n\nIt was common knowledge that shooting though glass can really screw with your bullet's trajectory. Manifestly, none of us heeded that principle of physics. We got off eleven shots, re-categorizing seven bodies to their new, deceased status. The eighth? He was already running for his life by the time we began shooting and barely edged out of our fourth (our second ally) irate citizen's view.\n\nDue to tactical considerations, I shot the big, black man who had the look of a prize-fighter-muscular, but clearly having taken a great deal of fists to the face over his career. He was acting in a leadership role without exhibiting any real talent for it. His S&W MP40 barked twice. The first shot whizzed past my left ear. The second spun past closer to the old man.\n\nOur temporary allies put multiple rounds into the women holding the duffels. Both targets went down in quick succession before they could access any of their heavy weapons. Both had been pulling out AR-14's.They had been two hillbilly-looking fuckers. In this city, despite their superior sizes, they were probably degenerate gamblers, not killers.\n\nThe remaining four sheep - I couldn't consider them true combatants -began to scramble for cover. The fifth one was turning out to be a rabbit. The furniture outside was designed for easy rearrangement, not a gunfight. All of our firearms could easily penetrate the light aluminum circular tables.\n\nThe chairs were even worse - hollow aluminum frames with cotton straps providing the seats for the occupant. Of the two non-combatants out there, one, a boy in his late teens, was already diving back into the pool. The older woman, maybe his mother, rolled off her fully-reclined lounger onto the cement surface.\n\nA huge Hispanic man, was distracted by her scantily clad movement. That was the last mistake of his life. I put a bullet in his right ear. An overly tanned woman in her later thirties / early forties crouched down and got off two quick shots. Her 9 mm impacted the dividing wall without enough force to punch through.\n\nShe realized that and began raising her aim. Inside the restaurant, a bullet passed by my right ear, outward bound. Joe's guns had thundered twice more. The woman aiming at me pitched over backwards; the first .50 caliber slug hit her in the chest, showering body-bits into the pool. Two of the remaining four scrambled for the duffels; a heavy-set black woman and a smartass, a black man who was attempting to look slick.",
        "The black woman turned her back on us as she bent over; pulling up a shotgun. Jo decided to pick off the other smartass, the black guy. He was presenting a side-view. She obliged his stupidity by putting a bullet between his fourth and fifth ribs so that it traversed his chest cavity and went sailing over the pool, then Lake Las Vegas and, if it missed a random golfer, off into the desert.\n\nThe black woman had enough sense to try and flip over a table to use as cover. Our third shooter's next bullet (he'd killed the duffel-carrying hillbilly that had been to our right) passed through her nasal cavity, out the back of her skull and went chasing after the Jo's round. The eighth and last man, white - in his early twenties, had already turned away and was running for his life.\n\nThe police frowned on shooting fleeing people in the back, so we reined in our instincts and let him go. I changed magazines in one smooth, rapid process. I would collect the spent mag when / if things were finally over. The situation was that three men and one woman, none of which truly knew one another let our eyes flicker about.\n\nThe fourth guy went first; holstering his S&W as he knelt by his date. She was muttering something in a language I didn't know. That was when normal reality kicked in. People began screaming, crying and running for exits. Idiots. They had no clue that the shootout ~ as much as it was ~ had concluded.\n\nThere was one person moaning. That was the guy whose arm Jo had blown off. Jo spared me a moment.\n\n\"Are you okay?\" she asked, her voice calm and emotionless. I nodded. We both looked to the older guy.\n\n\"Do you have any idea who they were?\" I asked him as I holstered my piece.\n\n\"No idea,\" he shook his head. His gun went back home as well. That made Jo comfortable enough to put her hand cannons away. In real combat, you make sure the people you shot are dead. In this case, it had been a slaughter.\n\nWhomever sent these people our way had been moronic and incredibly tactically inept.\n\n\"Dabney, G, Reagan - call out,\" I was in my own state of combat-calm. Panic wasn't something a man like me could afford.\n\n\"I'm okay,\" G sung out.\n\n\"V, are you okay?\" Dabney was starting to tear up. She'd been pressed down on the seat. G crawled out from under the table on all fours. Reagan slithered up on the far side of our table.\n\n\"Benji, Leigh Mark; time to go,\" Jo's voice was more insistent. I could understand that. Hotel cameras had record the events and I was way too recognizable. Jo and company were in a different situation. She was likely unknown. Successful assassins prized their anonymity. It made little things, like moving through airport security, less of a hassle.\n\n\"Reagan, can you get the ladies out of here?\" It wasn't really a request.\n\n\"Sure thing,\" she responded nervously. \"This way, I know we'll talk later.\"\n\nReagan saw more than her fair share of misery and death, but that didn't make her a killer, or a combatant. People had been trying to kill her ~ maybe.\n\nBullets had been flying, Jo and I had dealt with the threat and it was time for her to not be a witness to multiple murder.\n\n\"Vance, I don't want to leave you,\" Dabney came up and hugged me. G wrapped her up and began pulling her away.\n\n\"Dabney, you don't want to be here when the cops arrive. We'll talk later. Now go!\" I insisted forcefully.\n\nJo was already rounding up her mini-squad and herding them out. She spared me a quick glance, then was hurrying for the exit. It was time for me to do some damage control. The second ally was calming down his 'date'. Her voice had an odd, heavy accent.\n\n\"Is this what America is like?\" she asked her companion in halting English.\n\n\"Only on Saturday nights and the occasional, random Thursday,\" he joked. \"Let's go to the lobby,\" he coaxed her loud enough so that rest of us knew he wasn't running away - like Jo. I noticed G and Dabney shooting me worried looks out of the corner of my eye. That left me and the old guy.\n\n\"Brigand, are you somehow involved with this?\" the man, 'Gunrunner', asked me. Brigand had been my SEAL call sign. I hadn't trained with this man. He was from before my time, but he'd trained several of my instructors and they thought he walked on water. Worse, he was a sniper.\n\nSnipers are their own breed and it didn't take long for me to decide I didn't have what it took to be one. I had cross-trained as a spotter though ... which only reinforced my desire to not be a sniper. In a way it was career affirming that he'd remembered my name.\n\n\"If I say 'no', will you believe me,\" I replied, \"Gunrunner?\"\n\n\"You are a Naval Corpsman,\" he chuckled in a completely relaxed manner; as if killing three stooges before lunch was a perfectly normal thing to do. \"You are expected to lie upon occasion.\"\n\n\"In that case, 'I've never seen any of these people before and I don't care to speculate on their intentions,\" I grinned.\n\nIt was the classic 'what you tell the civilians' response. If they kept up the delusional thinking that one of us would tell them the truth, it was JAG time. He was about to say something else, except the carnage of human frailty was all around. It was time for me to play paramedic. I was already heading for task #1 on my damage control plan.\n\n\"Ma'am?\" I went to the mature woman poolside who had thrown herself on the ground.\n\n\"Ah ...\" she squinted up at me fearfully. I crouched down and handed her the sunglasses that had flipped away when she made her roll. The noontime Sun was beating down on us. The few wispy clouds provided no shade.\n\nThe woman's fear became confusion then blossomed into recognition.\n\n\"Mom?\" the young man from the pool called out.\n\n\"Ma'am, are you okay?\" She was collecting herself. A white band on her ring finger suggested a recent divorce.\n\n\"Yes ... yes I am,\" she smiled as I helped her up. \"Are you the ...\"\n\n\"Yes, I am. I need to go check on the others now,\" I calmed her. \"Why don't you move over there?\" I pointed away from the carnage close by. \"Wait for the Police to arrive.\" I returned inside. Public relations exposure was the proper ploy for me at the moment.\n\nI needed eyewitnesses telling the cops good things about me. Outside was easy. I didn't have to walk over the dead to help the woman. It was an easy twenty seconds for maximum reward. Inside would be tougher. There were staff and patrons surrounded by the slain. The armless man had quieted down.\n\nHe'd been too shocky to do anything useful with his stump and I was willing to let him bleed to death. I went to a screaming waitress who was doused in fountaining blood from the Mohawk woman I'd shot. I snatched up an unused cloth napkin, dipped it in water and then gently began cleaning the blood off her face.\n\n\"Miss, you are not wounded,\" I soothed her. Dealing with physical and emotional trauma was my chosen profession. Even Marines got freaked out from time to time. A tap on the nose brought eye-to-eye contact. She became lost in my gaze, her breathing grew steady and her pulse stopped imitating that of a race horse down the final stretch.\n\n\"I ... dead people,\" she mumbled. \"Is it over?\"\n\n\"The shooting - yes. The police will have questions,\" her name tag read, \"Jennifer, you need to start asking the patrons what they want to drink, keep them here and help me keep things calm. \"Can you do that?\" I continued. Jennifer nodded.\n\n\"Alcohol is okay. Nothing to eat because post-stress nerves might cause vomiting. Let's get started,\" I spoke with quiet authority. In a crisis, people responded best to quiet, decisive voices. Give a person sensible directions and a job to take their minds off the horrors they just witnessed. I pulled her up by the arm. She could take it from there.\n\nI did the same while moving through the rest of the room until the first member of the LVMPD - the Hilton was outside of the city, but the LVMPD had inherited most of Clark County's unincorporated areas as well as many of the smaller municipalities ~ like Paradise, which was the 'municipality' of the Las Vegas Strip. It was of no surprise that they both had their standard issue Smith & Wesson Model 659 9mm's out.\n\nI stood up, raising my hands over my head.\n\n\"I'm Vance Vardanyan. I have a pistol and a Concealed Carry Permit. It is on my left hip,\" I announced clearly. I'd hate to have them try to shoot me and have to kill them as well. They started a careful approach, one pointing his sidearm at me while the other scanned for other threats. The armless guy had thankfully shed this mortal coil.\n\nI would rely on Reagan to figure out why this crazy shit happened.\n\n\"Hey, you are that guy from yesterday,\" he relaxed slightly. His accent was Bostonian. \"The paramedic MedicWest canned.\"\n\n\"That'd be me,\" I confessed. They identified themselves as Officers L. Galloway and A. Sanchez.\n\nThat turned out to be Liam and Alonzo. Liam didn't care. Alonzo had a stick up his ass so I ended up letting Liam do all the talking.\n\n\"That was fucked up,\" Galloway continued. \"I hear you saved Sgt. Dunston's life. Thanks.\"\n\n\"At this point obsessing on the past seems irrelevant,\" I shrugged. I still had my hands up.\n\n\"Oh,\" Galloway noticed. \"You can put your hands down. What happened here?\" I went over the fire-fight without hinting that I knew who any of the other gun-wielders on my side, or the name of any of Jo's children. I did identify Dabney and Georgianna, though I didn't know their current location. Witnesses were not required to stick around, or make statements to the police.\n\n'Reagan' was an unknown and unnamed acquaintance of Dabney, which was okay since Dabney had a criminal record. Why had they left? They weren't accustomed to all the blood and death. Sane people ran from such things. Standard hotel surveillance was visual only - no audio - which meant no evidence what we talked about at the table and the bathroom cove was a visual dead zone.\n\nI walked the two officers through the fight as seen from my vantage point. When asked if I could have saved the guy missing part of his arm, I said 'Yes. I decided to check for possible victims first.' By the time I'd finished, six more officers had arrived. Two had the presence of mind to bring their Model 870 shotguns.\n\nWhen the homicide detectives showed up, I was sipping on a tall glass of freshly squeezed orange juice, courtesy of Jennifer, and chatting it up with Officer Galloway. One of the Sgt.'s directed him to make sure I didn't vanish along with half of the survivors involved.\n\n\"Mr. Vardanyan,\" the lead Detective greeted me with a smirk. \"Are you on a one-man crusade to rid Las Vegas of our criminal element?\"\n\n\"If I was, you wouldn't be finding the bodies so easily,\" I bantered back. \"ID's.\"\n\n\"Still hate cops, Vardanyan?\" the second officer said as they both brandished their ID. For a man who wanted to live below the radar, casual law enforcement comradery was the opposite of what I wanted. Today I had Det. Sgt.'s M. Griffin and L. Sabatini. \n\n\"With a passion,\" I grinned. \"Liam here is trying to convince me that you guys are actual terrestrial entities, but I'm still looking for the zipper on his 'human' suit.\"\n\n\"Do you really hate cops?\" Galloway thought the two were joking with him.\n\n\"Yes he does,\" Sabatini answered.\n\n\"Yeah, Liam,\" I sighed, \"because they act like assholes and answer questions aimed at other people without fear of being taken to task by Ms. Manners.\" Galloway still thought a joke was being played on him.\n\n\"I am going to see if the other two shooters are more cooperative,\" Griffin spoke up.\n\nHe headed Gunrunner's way. I would have wished him luck with the 'Old Man', except that would have been disingenuous. Gunrunner had killed three people in under eight seconds. Like ... well, the other three of us hit what we were shooting at and killed everyone we hit ~ just like me.\n\n\"So, Vardanyan ...\" Sabatini began.\n\n\"Call me Vance,\" I huffed. \"I have a feeling we are going to be seeing a lot more of each other.\"\n\n\"Fine Vince ... Officer Galloway, you can leave now,\" Griffin continued. Reluctantly the patrolman left.\n\n\"Vince ...\"\n\n\"It is Vance, Dick-tic-tac Suppository,\" I corrected him. \"You can be 'like that', or you can accept that I've been interrogated by people who had the power of life and death over me. Your primitive annoyance tactics merely make me want to be as helpful as you are polite.\"\n\n\"Vance, let's start with how many people did you kill today? By the ambulance people hanging around the front entrance I figure no one lived,\" Sabatini inquired.\n\n\"Today, or only today - here?\" I snorted in derision.\n\n\"How about we start on the past hour and work our way back?\" he answered.\n\n\"Seven. Those two,\" I pointed to two of the corpses by the bar, \"those three,\" the three corpses I'd killed initially, \"and two of the seven outside. One ran away. His face is on the cameras and he should be easy enough to hunt down. He's the guy in his early twenties who has pissed on himself and dumped a serious load in his shorts (underwear).\"\n\n\"Who killed the other fourteen?\"\n\n\"Good Samaritans,\" I said. \"Apparently Good Samaritans who practice with firearms regularly.\"\n\n\"What did that one hit them with?\" Griffin looked over one of Jo's kills.\n\n\"Bullets,\" I answered completely deadpan. \"I'm sure if she'd thrown table wear, I would have noticed.\"\n\nThe rest of the Q&A processes was as productive ~ which is to say I was as little of help as possible. They took my current pistol, making it a grand total of two now in the Police Evidence Locker. I only had twenty-two registered ones left, which was barely acceptable in my cautionary opinion. That was twenty-two pistols, not total number of firearms.\n\nAfter the official on-sight interrogation and collection of all the supporting testimony, plus the physical and video evidence, they let the three of us go. I finally got to talk to the second guy who'd stepped up and helped. His name was Brent Black. He was a private security specialist, neither military nor mercenary. That meant he was a professional bodyguard.\n\nThis was his first date with the woman he was with. Her name was Tamari Bolkvadze, from Georgia (the country) who currently worked at a software design firm in Hong Kong. Gunrunner and I wished him luck. Her waiting in the front lobby and not being in her room, packing up and heading back to the airport, was a good sign.\n\nGunrunner and I were kind enough to wait with the lady while Brent went to his car for his 'back-up' main firearm. He had once possessed a back-up .32, but the cops had taken that too. After the couple went off to her room ~ he'd driven up from Arizona ~ me and the 'Old Man' went out to the parking lot. By unspoken consensus we went to his car first, so he could rearm.\n\nSince the bad guys were definitely not after him, that was the safer move.\n\n\"The police appear to know you well,\" Gunrunner commented. If there was any doubt, that was not a positive accusation.\n\n\"I retired two months ago and I'm trying to keep a low profile,\" I replied. Gunrunner snorted.\n\n\"If this is your best effort, Brigand, you might want to re-enlist. The US will be safer that way.\"\n\n\"I retired from the 'Teams' three years ago. I was otherwise employed,\" I said. That meant the SOG (aka CIA) 90% of the time.\n\n\"I thought you were smarter than that,\" he taunted me.\n\nI was busy retrieving my next .45 Compact Tactical from the gun safe in my trunk.\n\n\"Apparently not.\" Pause. \"I ran across CAM a few days back, here in Vegas. He's working private security now (a bodyguard). He's looking good - better.\"\n\n\"Tell him to call me sometime,\" Gunrunner allowed.\n\nEx-SEAL, or not; hanging around an out-of-control junkie who happened to be a trained killer was never a safe thing. If I thought CAM was in control of himself, there wouldn't be a problem. I was a corpsman so my opinion mattered a smidge more. The LVMPD had cordoned off all the entrances to the Hilton, keeping the press at bay as the coroners came and went.\n\nOne of the two remaining ambulances retained a lone vigil. The first one had taken away a female patron complaining of chest pains. The newshounds were using their cameras to sweep the parking lot. I was in a spot covered by two service vans, so 'Old Man' and I weren't visible. He didn't need the scrutiny.\n\n\"Take care,\" Gunrunner grinned as he turned to leave. \"You seem to have attracted the wrong kind of friends.\"\n\n\"I'll keep that in mind,\" I joked back. There was no 'thank you - you're welcome' passing between us. Not helping one another would have been the oddity.\n\nHad the attackers identified themselves as law enforcement, or had I not engaged them, Gunrunner would have let events unfold without intervening. Once those stupid sons of bitches brought their guns out (which they had done in the lobby), Gunrunner was going to get involved. I would have done the same thing.\n\nMr. Black was undoubtedly upstairs right now, getting some victory pussy. I wished him luck making the second date better than the first one. For me, the next hurdle was exiting the parking lot. The reporters didn't stampede, so I slowed down and answered a few non-specific questions.\n\n#1 \"Why was I there?\"\n\n\"The Lagoon Bar & Grill had great food.\"\n\nI didn't tell the reporters the truth. I hadn't been rating the LB&G cuisine. My mind had been pre-occupied the entire time and I hadn't had a chance to order dessert. Throwing the place a bone (they would need a week remodeling) felt like the community-conscious thing to do since Las Vegas was my home town once again.\n\n#2 \"Did I know the people involved?\"\n\n\"The ones trying to kill me? No.\"\n\n#3 \"What about the people that weren't trying to kill me? \"\n\n\"I was concentrating on the ones who were trying to kill me. It seemed the prudent thing to do at the time.\"\n\n#4 \"Was this the Playboy Bloods, \"Florencia 13\"s, or another group of the Sure\u00f1os?\"\n\n\"No comment.\"\n\n#5 \"Were there any survivors?\"\n\n\"No comment.\"\n\n#6 \"Would I consent for an interview?\"\n\n\"Not yet. I'll let the police make their announcements.\" I knew my attitude was fucking with the LVMPD's mind. Yeah, I vocally hated them, but I also was being an excellent witness by not yammering critical details to the media. I'd let their 'unnamed source' do that.\n\n#7 \"Didn't I hate cops?\"\n\n\"Yes. That doesn't mean I think the whole department is incompetent. This is their job and I plan to let them do it.\"\n\n#8 \"Did I hate the free press?\"\n\n\"Journalists were people ~ both good, hard-working, honest souls and utter scumbags who gave bottom-feeders a bad name. As for 'free'. If I found a member of the 'free press', I wouldn't expose them out of common courtesy from one endanger species to another.\" I would let them figure out which group I didn't like.\n\n#9 \"I was an ex-SEAL. Had I killed people before?\"\n\n\"Did they mean full-formed human beings, pets with rights, or sperm cells?\" That went over well. A few female reporters blushed. Yeah - right.\n\n#10 \"Did I think something like this would happen again?\"\n\n\"Since I don't know what has just happened today at the Hilton, I don't believe I have enough data to make a proper prognostication.\" I didn't use big words to stump less intelligent people. I used them because that was what language skills were for - to adequately define what you meant. I had little doubt more than one of the reports thought I followed the zodiac, or something else equally inane.\n\n#11 \"It was reported that I was meeting someone and/or on a date?\"\n\n\"Are you suggesting I'm seeing someone, or insinuating I might be lonely and you are asking me out?\"\n\n#12 \"If they took me to dinner, would I grant them an interview?\"\n\n\"No. That would make one of us a prostitute.\"\n\n#13 \"Did this...\"\n\n\"Nope. Sorry. No more questions. I'm way past my limit for socialization for the moment. Thank you and good-bye - and if one of you think that jumping in front of my car in order to keep me from leaving is prudent, you might want to consider that I accidently sent some people to the Medical Examiner yesterday and odds were I've done something similar today ... and today isn't over yet.\"",
        "{Origins of the Disloyalists}\n\nStunningly, they got out of my way and I hurried off ~ at the speed limit. I knew the principles of public relations. I simply hated using them. Besides ... I was trying to evade justice. My only regular path of egress was the Las Vegas Parkway south to Route 564. From there, I should have headed west into Henderson.\n\nA man living a sin-free life would have headed that way, because it was the fastest way home. The only way to deviate from that was to head east when I hit 564, then headed up Route 147 north where it turned into Lake Meade Rd. That would circle around near Nellis Air Force Base and Sunrise Manor (another suburb).\n\nI was the opposite of angelic and never much into trusting others, or not making contingencies. There was a service road for maintaining the power lines running N-S and I could reach it. The speed limit in such areas was ... questionable. I'd been looking forward to test my upgraded suspension on my Corvette anyway, so off I went.\n\nIt was the eastern branch of Lake Butte Rd. and wasn't designed for anything but 4X4 and dirt bike traffic. No one would be expecting me to take a sports car that way. The only downside to it was the dust cloud my passage was making. I had to wind my way north until I hit Route 147 ... the same road I'd met Reagan and CAM on, last Monday night, just farther to the southeast.\n\nThe net result of this was that it allowed me to scoot around the City of Las Vegas. 147 circled north, then into North Las Vegas due south of Nellis Air Force. North Las Vegas had its own law enforcement jurisdiction - not part of the LVMPD. Rumor had it the two weren't married to the concept of helping one another. Considering my personal problems to date, that was a benefit I'd be a fool to ignore at the moment.\n\nWhen I reached Route 147 (aka Lake Meade Blvd.), I tapped my messaging service to check on Dabney, G and Reagan. They were good ... at my place ... they had taken Reagan into my home. Was I the only fucking person in Las Vegas who knew what Operational Security meant? Sigh. To be fair, I was the public owner of record.\n\nI'd bought it in my own name, mainly because it discouraged people from thinking to look for my other properties. I owned a dozen places (mostly rattraps) under assumed names, scattered about the quad-state area ~ Southeastern California, South and Central Nevada, Southwestern Utah and Northern Arizona. Anyway, the girls were fine. I also had a message from TC (IAB Detective Lieutenant T. [Trixie] Crowe Buchannan).\n\n\"Where the fuck are you!\" was how she answered the phone. I guess I was the only one without a Caller ID to give her a ring in some time, or maybe she was terribly rude.\n\n\"Why do you want to know?\"\n\n\"Because you were involved in a shoot-out, Stupid,\" she growled.\n\n\"I didn't shoot any cops. No cops shot at me. What's your problem?\" I answered.\n\n\"I want to talk with you,\" she insisted.\n\n\"I'm now at the point where I am wondering why I would want to talk with you,\" I told her. \"Care to help me out here?\" There was a long pause.\n\n\"What happened?\" she broke the silence. That gave me a chance to study the background noises from her end. She was driving a car and not alone. Someone with her was trying to figure out what the hell was going on.\n\n\"Why don't the five of us do dinner?\" I suggested.\n\n\"Five?\"\n\n\"You are on speaker, not Blue Tooth, which suggests you are driving and someone else is listening in. I'm not clairvoyant, so I don't know who it is. I imagine there is a reason they are with you and it's not likely you are on official business. I know you were taken off the case, remember?\"\n\n\"It is Detect ... Soledad,\" the other person identified themselves.\n\n\"This is awkward,\" I replied, \"since I've already dealt with Detectives Griffon and Sabatini. They refused to give me their first names so I refused to be of any help beyond the minimum required by law.\" To do less could be misconstrued as Obstruction of Justice.\n\n\"I gave Sabatini all the relevant - to me - details,\" I responded. \"Since you don't know what's going on, I have to conjecture you two have become Rogue Crusaders for Justice. That fusion of morality, professionalism and pragmatism elevate you both in my eyes. What can I do for you?\"\n\n\"Are you mocking me?\" TC accused me.\n\n\"No. Mocking either of you doesn't help me,\" I related. \"I am genuine in my willingness to look past your badges and recognize you as something more than liabilities to my desire to live free.\"\n\n\"You are an asshole,\" Soledad remarked.\n\n\"I'll challenge that opinion over dinner,\" I offered. \"I'll attempt to be as useful to you as you are to me.\"\n\n\"Are you okay?\" TC repeated. Oh, damn it.\n\n\"Why do you like me, or even care? As Soledad said, I'm an asshole.\"\n\n\"I don't care about you,\" TC evaded. \"I don't have much of a case without you.\"\n\n\"The case you are no longer on?\" I pointed out.\n\n\"The case has been 'set aside' pending further information, or complaints,\" TC quoted the official spiel.\n\n\"Pretty much what I expected,\" I shrugged.\n\n\"Then why did you drop this turd in my lap?\" TC snapped.\n\n\"TC, keep in mind that I hit everything I shoot at and I kill everything I hit,\" I reminded her. \"You are not now, nor have you ever been, the person I'm after.\"\n\n\"Are you really going after Lloyd Pharris?\" Soledad murmured.\n\n\"We'll discuss your utter lack of communication security when you stop my place tonight,\" I countered. \"Pick up something for six. Surprise us.\"\n\n\"You are assuming a great deal,\" TC responded.\n\n\"Not really. You have two things in your favor. You expect me to do something for you,\" I said. I let that hang there.\n\n\"What's the other thing?\" Soledad broke down because TC wouldn't.\n\n\"I don't want you in my life. Since that desire has completely backfired during the past week, I feel a certain sense of foreboding just talking to you two,\" I confessed.\n\n\"I concur with Soledad; you ARE an asshole.\"\n\n\"Okay.\"\n\n\"Okay?\" TC sounded suspicious.\n\n\"Okay. We are back to Tuesday afternoon with you and yesterday afternoon with Soledad,\" I explained.\n\n\"Your opinions of my personality don't matter to me. What matters is that you find me useful, without the need to regurgitate your most recent meal or shower in scalding water after we part ways.\"\n\nTC was about to get incredibly defensive.\n\n\"Do you think we find your assessment of us anymore credible?\" Soledad stepped in.\n\n\"Yes, because I base my attitude and judgment of you two as being driven professionals who have an ounce of consideration for your oaths of office,\" I countered. \"I don't care if you fart, pick your noses and think Rosie O'Donnell is the greatest comedic talent of the 20th century.\"\n\n\"My opinions are based on your skills and willingness to use them, nothing more.\"\n\n\"We'll be there in an hour,\" TC spoke. \"Bye.\" She was gone and I was left wondering ... I'd actually gotten some serious tail in High School. I was a 'bad boy' and never much thought about it. I nailed chicks that dated jocks yet wanted to take a walk on the wild side.\n\nI was fearless about it. In the service, I had never struck out at a bar. I didn't make a habit of going to one without comrades. I hadn't been a horn-dog and I'd never use my dangerous career to get laid. I certainly wasn't a Casanova. I had to re-examine my relationship with Dabney and G. Could they have been drawn to me sexually? The idea seemed rather far-fetched.\n\nReagan was waiting for me. The dynamics inside my beloved bunker had to be an Estrogen Inferno by now. I almost fell on my knees and thanked the Supreme Being when I discovered they had locked my doors - BOTH of them! As I unlocked the screen door, the front main door swung open. Dabney was improving her aerodynamic assaults.\n\nI receive a face full of cleavage as she leapt upon me. She'd changed clothes. Why? It was a woman thing that I didn't understand. She'd also been very liberal with the perfume she'd figured out I liked (found the least offensive) and dabbed it between her bountiful mounds ... that she'd incased a 'push up' bra. I didn't knew they made them in her size.\n\nI needed my right hand free, so I put my left hand on her ass and held her in place.\n\n\"Oh God, I thought you'd been arrested!\" she exclaimed. Replying wasn't physically possible so I finished walking her in, locked the screen door then the main door. All the while, I was holding my breath. Her bra was purposely shoving her boobs into my mouth.\n\nAir wasn't a problem. SEALs are divers and have great breath control. I also knew my house layout and could walk the entire thing blindfolded ~ which I did regularly. Bumping my shin into the coffee table was an unwelcome surprise. Mother-fucker! They had moved my stuff. Playfully hurling Dabney in the direction my sofa was supposed to be stopped being an option.\n\nI could peel her off, but there were easier ways to do things rather than applying brute force. I walked my right hand up to her underarm while Dabney rained kisses down the top of my head, or tried to - face full of cleavage. She gasped, giggled and then rocked backwards while wrapping her legs around my waist. Her crotch was humping my belt buckle.\n\nNow she was at a thirty degree angle leaning away from me. I could see she wasn't worried one bit. She was using her concern as an excuse to molest me in front of company.\n\n\"Dabney, would you like to go back to the bedroom and fuck?\" I asked the question I already knew the answer to. Dabney was obsessed with scent marking me around other women.\n\n\"Sure!\" she smiled like the Cheshire Cat. \"I'd like that.\"\n\n\"It is not going to happen because we have company and two more are on the way,\" I glowered. \"Dabney, I'm not going to vanish one day, like I did 15 years ago. I'm not leaving you. I want you, but I also want you to become a team player.\"\n\nShe was mulling that over.\n\n\"Hi Reagan. Thanks for hanging around. If you keep looking at G like she's a washed up has-been, I'm going to start thinking you don't value my opinion and insight. If you keep disrespecting me, I'm going to go tell your mother and we both know that's not going to end well.\"\n\nI was basing my verbal interactions on some visual clues and regular psychology. There was no ring on Reagan's finger. She didn't act overly divorced. That implied that she wasn't adjusting to a double-life the way her mother, Sandra Cho had. Either she kept a man outside her life and he got irritated that she was sneaking around behind his back ...\n\nOr, she told him what she did. That meant he was already a man of questionable moral character for her to confess her numerous crimes to. Reagan was the Madam of All Madams in Sin City. He likely couldn't avoid sampling the goodies. It was the nature of males to let their testosterone overwhelm their common sense.\n\nReagan had access to people who hurt people and followed her instructions. So that type of jerk would always end up treating her badly, then get to spend some time in a body cast contemplating the reality that Reagan really was temperamental, criminally connected and very smart. That's why she dated Kristoff Declan back in high school; he was just as bright as she was.\n\nNow she had me as her man-toy. I didn't think she loved me. I doubted she was nostalgic for what we never shared in our youth. I was a man she could communicate with who: didn't give a damn about what she did for a living, wasn't judgmental of her style of human exploitation and was turning out to be both capable and reliable.\n\nThat Dabney didn't understand and I did, was Dabney was making herself an obstacle to Reagan's plans for 'us' ~ Reagan and me. She was treating G like that because she was Lloyd's cast-off, thus dangerous to me, plus Reagan harbored a secret desire to punish G for being better looking and for being an emotional punching bag for Lloyd's perversions.\n\nIt didn't make sense. Beyond the rough mental framework, I didn't understand women and I'd never really made the effort to learn. Since I was not likely to find myself living alone anytime soon, I was going to have to remedy that. Reagan carefully mustered her response to my observation.\n\n\"You are annoying,\" she grinned. \"Also, who is coming over? I didn't think you had any friends.\"\n\n\"IAB Lieutenant Trixie Crowe Buchannan and Homicide Detective Soledad Moreno. I am going to help them commit criminal acts in the pursuit of their personal agendas. These agendas are something the normal LVMPD hierarchy has being foiling for internal reasons to the point they are getting desperate,\" I added.\n\n\"Oh shit. You can't do that,\" Reagan informed me with authority. \"At least I can't be a party to that.\"\n\nDabney was back to wiggling her hips against my belt buckle and licking her lips while giving me a seductive 'O'-face. I was made of sterner stuff ... which was another aspect Dabney found appealing. I wasn't lost in her sensuality which meant I liked her for her personality while not being a metro-sexual.\n\n\"I believe you have a very good reason for backing out at this juncture. I'm not going to be deterred from my current course of actions. G doesn't have the luxury of running and I'm not going to let Lloyd Pharris break her. I'll have a talk with Kip and work out a series of loan payments. You'll get your money. Dabney?\" \n\n\"I'm out of the escort business, Reagan. I'll find another way to make a living,\" Dabney's sexy aura turned into one of immense compassionate vulnerability. Reagan looked at G.\n\n\"Hey, I've told Vance repeatedly he's lost his mind by sticking with me. He's convinced he can make Lloyd back off ...and I believe him,\" G's voice rose in confidence.\n\nReagan's mind was a whirl of dire onuses and competing fortunes, ... resulting in some personal capitalization ~ redemption. She was making her final calculations. I didn't know what factors she was weighing. I knew she was enticed by the possibilities. She stood.\n\n\"V, we need to talk in private,\" she motioned me toward the kitchen.\n\nI released Dabney, letting her slide languidly down my body. I kissed her on the nose. That was the affection she craved more than lustful passions. Reagan led the way and I followed. I pulled out my larger sugar jar. I pulled out a low frequency sound generator to discourage eavesdropping.\n\n\"Okay,\" I indicated she could safely begin.\n\n\"You don't want to mess with Lloyd Pharris. I can't say I understand your loyalty to Ms. Norquist. You are on a Fool's Errand. You cannot beat Mr. Pharris with all the assets at his disposal. I'm giving you and Dabney an out. I can't save Ms. Norquist,\" Reagan reasoned.\n\n\"Do you know what resources Lloyd Pharris has at his disposal and what he'll do to win?\"\n\n\"Yes, Vance. Yes I do,\" Reagan insisted.\n\n\"Do you know what resources I have at my disposal and what I am capable of?\"\n\n\"I ... you are one man. I know Mr. (Jessup) Alexander pretty well and I know he wouldn't have a prayer against Pharris. Not a hope in hell,\" Reagan tried to explain to me.\n\n\"Why do you think I'm only one man? You think that because I'm the only person you see. You are not looking at the sum total of my assets and abilities, Reagan,\" I said. \"I'm not CAM. He's great man, a great instructor and a great warrior. I'm not him. I don't think like him. I would have left the SEALs instead of turning to drugs to attempt doing what I was no longer capable of.\"\n\n\"I don't know the extent of Lloyd's power, but I am aware of his numerous vulnerabilities.\"\n\nReagan paused. I didn't knew her peculiarities yet. I knew her type though and I could see her face transform.\n\n\"You've got a plan,\" she gave a sliver a cunning grin.\n\n\"That's the first stupid thing you've said since I've come back home,\" I studied. Ego driven people were of no use to me and I had to prod her a bit more to be sure.\n\n\"Ah... ouch,\" her grin become full-blown. \"You are right. You took down Pablo and engineered a peace with Circe inside of five hours.\"\n\n\"We are used to thinking of things like structures and profit margins,\" Reagan weighed her words carefully. I had already won her over. Reagan would be jealous of her mother's success, but wanted to prove she could expand in ways her mentor hadn't. She was smart, and considered herself smart, which raised my deviousness in her mind. \n\nDespite the apparent disparity in power between Lloyd and me, if I had out-maneuvered her, thus, by her logical progression, I could defeat Lloyd as well.\n\n\"Outside of a public attack on you, you've bought time against Lloyd's possible means of aggression,\" she added.\n\n\"Okay.\"\n\n\"Okay?\"\n\n\"You are going to give me information as you think I need it and I'll read you into my plan when I feel it is prudent,\" I told her. \"You aren't helping us out of any sense of affection, or devotion. You have your own selfish reasons for helping me and I'm good with that. I haven't told anyone here my plans because, like you, I have a realistic expectation of what the people around me can contribute to our success.\"\n\n\"Dabney and G are worthless to us,\" Reagan tried to point out. 'Us?'.\n\nReagan had created an 'us' and had dropped hints about a 'we' on me earlier. Jo wasn't with Lloyd, or Circe. She was with some character whose code name was Thulsa Doom. Circe was a witch who turned men into pigs, which was somewhat appropriate to the sex trade.\n\nI needed some immediate information and an internet search wasn't something that I could safely do at this very second with Reagan in front of me. So ... I made a call to Dutch Girl.\n\n*Me - simple search - Thulsa Doom. I will stay online*, I relayed to my best friend in Europe. My words and tones expressed to her I had an audience.\n\nThe text she sent: \n\n'Robert E. Howard - author 1906-1936 (suicide - depression)' \n\n'Thulsa Doom - fictional character - no legendary/historical basis - necromancer - invulnerable - sense of immortality' \n\n'Key words: undead - evil -wizard - Weird Tales - King Krull'\n\n'Antagonist to fictional protagonists - Krull - Conan the Barbarian'\n\n'Hope this helps'\n\nWhat could I make of that? Circe was a witch, as was Thulsa Doom. That strongly suggested that other 'magically-themed' underworld king/queen-pins had a basis in reality. To the best of my recollection, that meant there were five other Vice Lords out there who weren't underworld fables. Shit. In turn, that equated to other Reagan's and Jo's - those who have mastered the art of sin - and were waiting in the wings for someone to drop dead. Few criminal masterminds ever really retired. Al Capone only succeeded in that because his brain had been rotted out by Syphilis.\n\n\"Thulsa Doom is the arms merchant of Las Vegas ... so there are five others still out there I haven't pissed off yet?\" I studied Reagan. She gave me a silent applause. \"Let's rejoin the others.\" I put up my toy before we returned to the main room. The resulting conversation was stilted and awkward. Dabney kept crawling into my lap which had a whole new level of danger because I had strategically decided to stand the coffee table against the wall and put my collapsible bed in its place.\n\nI was 240 lbs. and Dabney was a healthy, lush 140 lbs. This bed was rated at 300 lbs. capacity and it was protesting the violation of its specifications. I didn't chastise Dabney because she wanted proximity. G and Reagan were adjusting to that. I could remain focused on the conversation and lovingly stroking Dabney like a prized thoroughbred.\n\nSeconds after Dabney's horniness overcame her decorum (she had a great deal of coolness under pressure when she chose to exercise it) and began tonguing my ear, the doorbell rang. For an instant, fear flashed across Reagan's face. She was contemplated some level of treason, no doubt. I manually cut on the 72\" TV (none of this remote control crap) and punched in the code for an eight screen split view.",
        "\"Dinner is here,\" I struggled to keep the relief from my voice. It was TC and Soledad. The takeout bags weren't takeout bags, they were grocery bags from the India Fiji Market. Either we were going to eat the ingredients, or someone planned on cooking. I examined and discarded the possibility that I'd been poisoned earlier, making my instructions slurred without me realizing it.\n\nIt was far more likely that the two cops were stamping their independence on our first meeting by relegating my suggestions to the ash heap. I opened the door, pistol in my left hand hidden behind my back. The cops had guns after all.\n\n\"TC - Soledad, welcome,\" I greeted them in a neutral voice.\n\n\"TC knows where the kitchen is,\" I stepped, back to the opened door with my gun still concealed. Of course the cops would have to be idiots to not realize I had something in my left hand. They didn't press the point.\n\n\"Still freeloading, Dabney?\" TC sniped.\n\n\"Still crying tears of loneliness while humping your vibrator?\" Dabney volleyed right back. I wasn't going to let TC call Dabney a whore and I wasn't going to force Dabney be equally creative in her insults.\n\n\"Nympho.\"\n\n\"Ice Queen.\"\n\nSoledad watched the exchange with veiled amusement over TC's expression of emotion.\n\n\"Okay, who knows how to cook ... besides TC?\" I intervened. No one said anything.\n\n\"I always eat out,\" Dabney bragged.\n\n\"I only eat pre-packaged goods,\" G volunteered.\n\n\"I've set fire to a microwave dinner,\" Soledad stated. \"What about you, Vance?\"\n\n\"I'm an awesome chef, but I'm not leaving you here to interrogate my guests without me,\" I countered.\n\n\"What about you?\" Soledad looked to Reagan.\n\n\"I employ a cook,\" Reagan regarded the Homicide Detective.\n\n\"What's your name?\"\n\n\"Li Zhangsun,\" Reagan lied. I had no idea who 'Li Zhangsun' was. At least she hadn't used her previous false identity of Virginia Hill.\n\nSoledad was too good at her job ~ also a good thing to know.\n\n\"Do you have an ID I can see? I like exotic names,\" Soledad matched lie with lie.\n\n\"Enough, Soledad,\" I interrupted. I also pulled Dabney to a standing position. \"Dabney, why don't you go help TC in the kitchen making dinner.\"\n\n\"What?\" she scowled my way. \"Why me? Why not ...\" I spanked her ass.\n\n\"You'll do it because I asked nicely and since you, G and I are roommates, we share in household chores,\" I stared her down. \"I didn't ask G to go because G and TC don't have a problem. You and TC do and you two need to agree to some kind of truce before we can proceed.\"\n\nDabney frowned, and spun so fast her hair whipped against my neck and chest before strutting off to the kitchen. Soledad and G held off from speaking until she was gone.\n\n\"V, I don't mind,\" G looked at me speculatively. She'd always tried to be a moderator between Lloyd and her two step-children and now she was taking on that role in my house.\n\n\"G, if this grouping is going to function, then Dabney and TC need to figure out - on their own - how to deal civilly with one another. If they can't, I can't work with Soledad and TC. I feel that would be a mistake. Forcing them to put aside their differences won't work. At any point Dabney, TC, LZ and Soledad can walk away.\n\nNow that's wonderful for freedom of choice. Lousy for creating a coherent strategy. Sure, I can create tactic on the fly, but that's a highly flawed and ultimately doomed means of conduction an operation. Off-the-cuff plans have a higher chance of failure and those chances stack up. We might be able to survive one colossal screw-up - not two.\"\n\n\"Hold on,\" Soledad raised her hand. \"How did you know I'd come here with Crowe (TC)? We aren't exactly the closest of friends ... which means I'm her only friend. We came up through the Academy together. I came to truly admire her, though she's more than a bit obsessive.\"\n\n\"You are TC's friend and you are obsessed with Special Forces operators,\" I stated, \"as you consider us all borderline sociopaths.\"\n\n\"You think so?\" she clearly believed I was bull-shitting her, acting on my own delusional world view and my over-inflated sense of my place in things.\n\n\"A cop who doesn't like to exercise their authority doesn't remain a cop for along. A cop who isn't interested in solving crimes doesn't become a detective,\" I laid it out for her.\n\n\"A good cop goes beyond the facts and looks for the motivations behind the crime. A basically decent person can't understand how trained killers can do what they do and don't want to accept that people who chose that lifestyle aren't somehow compensating for something.\"\n\n\"In my experience, they are compensating for something,\" she studied me.\n\n\"That is an incorrect assessment based on skewed data.\"\n\n\"How so?\" Soledad gave me some leeway.\n\n\"You only talked to the ones who were caught screwing up.\"\n\n\"And you don't screw up?\" she scoffed.\n\n\"No. People like me screw up, but you never hear about it. Either we fix the problem, or our family gets 'the Secretary of Defense regrets to inform you ...' letters. My kind deal with the problem until it is no longer a problem. Now, before you start trolling down the retarded social empathy route, Soledad, I brought every trooper under my care home alive,\" I said.\n\n\"Every last one, and I did it because I have never cared what people like you ~ you 'everyone must play by the rules' types ~ thought of me. In your prejudiced view, something must be wrong with me. What you don't understand is that you 'the authority' not mattering is not the same as no one mattering.\"\n\n\"You and your 'teams',\" Soledad cut me off. She said 'team's in the same way mainstream religious aficionados would say 'cult'.\n\n\"Except you haven't examined how I operated in a team,\" I pointed out. \"I never picked my mission commander or Chief Petty Officer. I never picked a teammate.\"\n\n\"That's not how I worked. This was my vocation and, to me, placing an artificially high value on all human life was counter-intuitive because no one not aiming for sainthood does that. They lie. They have to because in too many places violence happens, everyone is rating the worth of the lives around them at all times. You are as much an oddity as I am, Soledad.\"\n\n\"How do you see that?\" she was back to being less than certain I was a con artist.\n\n\"I am completely honest about the way I rate people's worth. You are honest in that you don't rate the value of people's lives. You are honest in your concern,\" I studied her right back.\n\n\"And you figured all that out from less than two hours talking to me?\" she wouldn't back off.\n\n\"You are TC's friend, she's got zero-tolerance for deception and she's a good judge of character. Like you, she's good at her job,\" I kept at her. \"We both know you can't rely on information gathered from one source. You build profiles from as many snippets as you can get.\"\n\n\"It helped you that TC and I didn't know we were being interrogated,\" Soledad gave me her first 'official' brownie point.\n\n\"What did you do in the service again?\" she asked.\n\n\"Don't insult me,\" I grew cold. \"TC didn't feel bound to honor my request for secrecy because she considers me to be a criminal - just like you do.\"\n\n\"You aren't?\"\n\n\"Oh God!\" G snapped. \"You are such a condescending cunt - you and TC both. I always assumed that it was my ex-husband who corrupted the police. Now I see you are all the equivalent of sleazy, scum-sucking strippers and Lloyd was one of many slipping dollars into your willing orifices. You are a bunch of God-damn whores!\" she finished on her feet and screaming. \n\nSoledad hammed up her surprise for dramatic effect. \"Where did that come from?\" she turned on her emotional probes.\n\n\"For two years I've lived in fear everywhere I go. I've woken up with strange men in my house. Someone gave them my house keys. I've filed three police reports. Two were 'misfiled' and the last one was flipped on me and I was charged with filing a 'false' police report,\" G glared. The judge gave me two weeks in jail and 500 hours of community service.\"\n\n\"I had nothing to ...\" \n\n\"Shut the fuck up, Pig,\" G shot back. \"I tried to hire a lawyer except whenever the Pharris name came up, they dropped me like a glowing hot rock. I finally found a man willing to take my case. Two filing later and he was KILLED in a traffic accident. He rear-ended a car in an intersection then was T-ed by a dump truck.\"\n\n\"As far as I know it was ruled a traffic accident and that was that. While you cops had your heads up your collective asses, the legal community got the message loud and clear. No one would help me. I put up with abusive act after abusive act until I was thrown out on the street. They repossessed my car. I have no checking or savings accounts.\"\n\n\"The court REQUIRES me to pay my husband's court fees to the tune of $1,800 a month while he lives in a 9,000 sq. ft. house sitting on 4 acres of prime Clark County real estate. I have been living through Hell, you bitch. I felt safer today with V defending me, even with bullets flying every which way than any time in the past two years I've spent under your protection, Officer Useless Tin Man,\" G finished erupting with her fear, despair and rage.\n\n\"Listen,\" Soledad tried to placate G as she stood up, \"I had no idea. If I had, I would have gone after the people harassing you.\" G looked from her, to me then back to Soledad with a look of incredulity.\n\n\"Are you deaf?\" G mocked her. \"You can't touch Lloyd Pharris. Your whole justice system can't touch him.\"\n\n\"I would find a way,\" Soledad's face hardened. Rogue Crusader of Justice.\n\n\"Ha,\" Reagan laughed. \"Who would you trust, Cop? Whose information could you trust? Which superior could be relied on to keep your investigation hush-hush? What would you do when they found a half-kilo of heroin in your house after two reliable drug dealers told some narcotics guys that you were shaking them down?\"\n\n\"That case would never stand,\" Soledad responded. \"I have friends on the force too. They know I'm not that kind of cop.\"\n\n\"It wouldn't matter,\" I shook my head. \"Now you are playing defense instead of offense, plus you would be suspended. A few PI's would watch over you all the time.\"\n\n\"A citizen's accountability group would start making accusations about your actions, dragging your name publically through the mud,\" G added, \"and Lloyd would be in the background pulling all the strings.\"\n\n\"You three sound pretty convinced that Mr. Pharris is unstoppable and untouchable,\" Soledad hardly sounded convinced with our cautionary warnings.\n\n\"That's what I've done before,\" I looked her up and down. \"Ruin someone as a credible source is insanely easy. Personally, I'd set you up as a phantom drug persona ~ convince rival drug dealers that you are a corrupt cop horning in on their turf. Then all I would have to do is lure you down to a meeting, tip them off and then let criminal nature take its course.\"\n\n\"Even if you survive the shoot-out, you have to explain why they were trying to kill you, there would be an investigation, a lab tech would be paid off to put trace drug evidence on your clothing and you've lost your job = threat ended,\" I explained.\n\n\"Are you speaking from experience?\"\n\n\"I'll let you figure that out,\" I shrugged. \"You owe G an apology.\"\n\n\"For what?\"\n\n\"For being stupidly arrogant, for assuming that you being right means you will eventually win, and most of all for thinking you are somehow better than she is,\" I said.\n\nSoledad didn't see herself as arrogant - she felt she had the best grip on reality of anyone in this house. She did think that she would always solve the case, and she was sure that she was better than some washed-up, bitter ex-trophy wife who had allowed herself to be victimized.\n\n\"Why is she here again?\" Reagan chided me.\n\n\"When bodies go missing, we are going to need someone on the inside that Lloyd's people aren't crawling all over to feed us Intel,\" I replied to Reagan while studying Soledad.\n\n\"Bullshit,\" Soledad snorted. \"In my experience, those leery of law enforcement have something to hide. Who are you again?\" was directed back at Reagan.\n\n\"Vance and I are childhood friends,\" Reagan didn't lie to Soledad for once. \"The only man I ever truly cared about considered him a valuable and loyal friend and until very recently, I didn't believe it. I now consider myself properly educated on the matter of Vance's integrity.\"\n\n\"He said that about me?\" I was a tiny bit surprised.\n\n\"Yeah. I wondered if he wasn't a bit 'gay' about you,\" she snickered. \"He thought you were the one guy he could always count on to not only move, but ...\"\n\n\"...move a body,\" I chuckled. Memories of 'Grosse Pointe Blank'.\n\n\"Oh my God!\" Reagan laughed. \"That's you. You are John Cusack's character, Martin Blank.\"\n\n\"No, I'm not,\" I disagreed. \"I never detonated some rich guy's poodle. I am also retired from the 'People Killing' business ... well, I was.\"\n\n\"That doesn't seem to be working out for you?\" Soledad pointed out.\n\n\"I'm not doing it as a business anymore,\" I countered. \"All of these people dropping dead around me has been purely coincidental.\"\n\n\"Why am I having dinner with you?\" Soledad joked. \"With all those \"coincidental\" homicides you are starting to rack up.\"\n\n\"He probably invited you because he knows you are not very good at your job, so he's going to keep you around for the next set of accidents, just so you can see for yourself how things play out,\" Reagan chided her.\n\n\"So, are you Debi Newberry?\" Soledad smirked. Blank's unrequited love interest.\n\n\"No, I'm Grocer,\" Reagan snickered. \"Though I'm in far better shape.\"\n\n\"Workers of the World, Unite,\" G finally took a non-ragged breath after her rant. \"I mean, is this the birth of an Assassin's Union?\"\n\n\"How about a Misfits Union?\" I suggested as a bit of levity. There was a break in the barbs.\n\n\"That I could endorse,\" Soledad confessed.\n\n\"Endorse what?\" TC said as she came back down the hall with Dabney walking silently behind her.\n\n\"A Misfits Union - mission unknown,\" Soledad joked.\n\n\"Count me in,\" Dabney perked up. Her talk with TC must have not gone abysmally as both women were unmarked. \"I'm an ex-escort with nothing but a high school diploma and very few promising prospects.\"\n\n\"I'm a dead-broke Casino Hostess,\" G jibed. \"Options haven't been an option for some time.\"\n\n\"I don't like the term misfit,\" TC resisted. \"It makes it sound like there is something wrong with us.\" Where we really sitting around talking about something as ridiculous as a team name? What was next? A motto? A billboard maybe? I hated amateurs. \n\n\"Well, Disestablishmentarians is more than a mouthful,\" G said.\n\n\"Not for this one,\" TC tossed a thumb over her shoulder, indicating Dabney. \"I don't think she's met more than a mouthful in some time.\"\n\n\"Not until I met Vance, anyway,\" Dabney rapidly retorted. I was about to intervene.\n\n\"Play nice, children,\" G shook a finger at those two. \"TC, I'll show you the door,\" she glared at the cop - Dabney snorted in amusement. \"And Dabney, I'll give you a blanket and let you sleep in the backyard tonight.\" TC returned the insult to Dabney.\n\n\"It is V's house,\" Dabney protested.\n\n\"And V wants some domestic tranquility,\" I stated firmly.\n\n\"Considering the paranoid comforts of Fort Vegas, I have the feeling you were hoping for a domestic bliss for one,\" Soledad.\n\n\"I may have wished for a solitary existence, but I'm not someone who whines about the world not being the same today as it was yesterday,\" I stated.\n\n\"V is a true and loyal friend,\" G smiled my way.\n\n\"Kind of like you and Trixie here,\" Dabney said.\n\n\"Stop calling me Trixie,\" to Dabney, \"Or TC. I'm Officer Buchanan to you three.\"\n\n\"Let's put it to a vote,\" I countered. \"Trixie is off the table.\"\n\n\"Who wants to call Officer Buchanan - Officer Buchanan?\" No one raised their hand. Soledad had a wait and see attitude and TC refused to let us vote on her name. Tough luck for her.\n\n\"Who votes for TC?\" Dabney and I quickly raised our hands. G reluctantly followed.\n\n\"TC it is then,\" Soledad conceded.\n\n\"Not you too?\" TC grumbled at Soledad.\n\n\"This is the only time I've met you at a stranger's house that wasn't a crime scene - ever. I have only been to your house twice in the seven years we've known one another enough for a visit to be even a remote possibility for you. Let him call you TC.\" \n\n\"He's an asshole,\" TC griped.\n\n\"So?\"\n\n\"I don't even like him.\"\n\n\"So why did you drag me over here so that you could cook him and his friends dinner?\" Soledad skewered her.\n\n\"I'm researching an investigation off the clock,\" she snapped. Her hair whipped about as she turned, shouldered past Dabney and returned to the kitchen.\n\n\"Dinner will be up in twenty,\" Dabney sang out. She traipsed after TC and went out of sight.\n\n\"We could be the Loyalists?\" Soledad revived the 'team nickname' idea. \"Loyal to one another? Loyal to the city and what it could be?\"\n\n\"We aren't loyal to this city, or this system of justice. If anything we are being 'opposing' to the oppressors and the creeps who think they run this city,\" G pointed out.\n\n\"Disloyalists then?\" Reagan suggested.\n\n\"I like that. Vance?\" Soledad looked my way. The other two women found themselves looking at me.\n\n\"Whatever,\" I shrugged. \"Anyone paints a sign proclaiming that on my front door is going to have a serious discussion with me about not advertising a subversive conspiracy. Then they will help me move to another house, because damn if I would remain here like a bug waiting to be squashed.\"\n\n\"The 'aye's have it. The Disloyalists we are. Now let's discuss our agenda,\" Soledad kept on rolling. It was going to be a long, fucking night.\n\n{Epilogue One}\n\n{The first meeting in months}\n\nIt was a little past midnight when the sixth and final member of the Vice Lords arrived at the Fontainebleau Las Vegas, the city's (current) largest flop. It was also the second largest building in the Las Vegas Valley. It was unfinished, hovering in limbo as her masters decided her fate.\n\nIt also an excellent place for the Vice Lords to meet as it was no one's home ground, gaining an advantage was very difficult and the chances of detection were small. No one resisted the call to meet and they all knew the issue to be discussed, though only three knew the specifics.\n\nThe last group to arrive looked out of place, compared to the other finely-tailored twenty (each Vice Lord was allowed one assistant and two bodyguards). This group looked shabby, scruffy and unwashed. Even their leader looked like a 'homeless bum'. The bound, hooded man they were dragging along with them was positively middle class in comparison.\n\n\"Jareth, what is the meaning of this?\" Sycorax, the Gluttonous Lady motioned to the captive. She was too wise to be rude. Jareth was the last of the original Vice Lords, having disposed of all internal challengers and external threats in his twenty-five years at the top of his own garbage heap.\n\n\"Since I am not impartial in this matter, I have asked Jareth to look into this internal Vice Lords investigation,\" Thulsa Doom spoke up. Mimicking his 'vice' title, he let anger boil threateningly just beneath the surface.\n\n\"Why are we just now hearing about this matter?\" Archimago, Lord of Avarice grumbled.\n\n\"Someone tried to assassinate Jo at lunch today ...\" Thulsa Doom spat.\n\n\"And my daughter, Reagan -my designated successor,\" Circe added.\n\n\"Was this the fiasco at the Lake Vegas Hilton?\" Baphomet spoke up, \"And, if so, what were your two lieutenants talking about?\"\n\n\"I've asked Jo that very question. Circe has done the same thing with her 'designate',\"Thulsa Doom answered. \"I'd like to ask Reagan a few questions myself except she is lying low for the time being. I can't say I blame her, since Jo insists she arrived unarmed and alone to the altercation.\"",
        "\"Who was the target, or were they both the focus of the assassination attempt?\" Sycorax inquired nervously. She relished in her luxury and perversions; anyone rocking her pleasure craft was aiming below the waterline.\n\n\"I can answer that,\" Jareth snorted with amusement. \n\n\"Or, I can have our friend here tell us what is going on,\" he chuckled. He yanked the prisoner's hood off. He had an extra blindfold on underneath the hood, cotton stuffed in his ears and duct tape over his mouth. His nose was flaring with terror.\n\nJareth waited for permission from the other Vice Lords to 'expose' them to an outsider. One by one they nodded, essentially agreeing that this man was to be questioned then disposed of. The tape, cotton and blindfold were removed. The guy was overweight and showed signs of substance abuse.\n\nHe was a balding black man, his body dank with sweat and his breathes came in ragged gulps. As his eyes attempted to adjust to the low light, his head turned this way and that, like a cornered rat.\n\n\"Let me introduce Phillip Boswell, private investigator ... and former Detective Sgt. of the LVMPD's Organized Crime task force.\"\n\n\"Whatever it is, I didn't do it,\" the man gulped.\n\n\"I know you,\" Archimago murmured. \"You were always shaking down small time rackets and off-track betting operations until one day you were caught shaking down an out-of-towner big-shot's son.\"\n\n\"It wasn't me. I didn't ...\" Phil got out before one of Jareth's guardians smacked him on the back of the head.\n\n\"Phil here received and made a few interesting calls today,\" Jareth continued. \"One he received remarkably close to the address of a one of the people being shot at - a Dabney Curtiss. A former constituent of Circe whose 'far more'-former pimp seems to have gone missing last Monday night - around the same time Vegas Fantasies blew up.\"\n\nThe other Vice Lords looked her way. Circe didn't feel the need to respond to what was clearly an internal matter of hers.\n\n\"Who would send twenty people to kill one hooker?\" Sycorax huffed. \"She must be one hell of a fuck. Circe, was Reagan there to reel her back in?\"\n\n\"Not quite,\" Circe replied. \"She was there to balance some financial accounts that were disrupted when Ms. Curtiss left my employment.\" That was her polite way of saying 'I'm not going to tell you what she was doing there'.\n\n\"They weren't there to kill the hooker ... or your ex-wife, Baphomet, or your favorite pet assassin, Thulsa Doom,\" Jareth played out the suspense. \"Those twenty-one men were sent to kill - one escaped - I have him too -a Vance 'V' Vardanyan.\"\n\n\"The hero from Wednesday's shootout?\" Sycorax's breath perked up. \"He's yummy. Circe, is he with you?\"\n\n\"That has yet to be determined,\" Circe remarked while shooting a steady gaze Baphomet's way.\n\n\"So, Phillip ... do you mind if I call you Phil, Phil?\" Sycorax cooed. \"Who hired you, of all people, to murder Mr. Vardanyan?\"\n\n\"Don't kill me,\" Phil waited. \"I'll tell you everything I know?\"\n\n\"It was Hathaway,\" Baphomet preempted the revelation.\n\n\"I sent him to tidy up some business and he went far beyond his mandate. I'm in the process of dealing with him as we speak.\"\n\n\"I hope you don't mind if I don't take your word for it,\" Thulsa Doom threatened. \n\n{The Lord of Wrath}\n\nHe had been born Barabbas Raman; half-Congolese and half-Mexican and 100% pure ruthlessness. He'd grown up the product of rape, trying to shield his immigrant mother with the only tools he had at his disposal - a natural talent for violence and the ability to use it without conscience. By the time he was 16, he had become an enforcer in Houston, Texas for a succession of Mexican Cartels' 'fronts'.\n\nHe'd never spent a day in any official military, but he'd pushed himself mentally and physically to be the most lethal killer in a bloody, dangerous business. One night, several gangsters caught his mother coming home from her job, brutalized then murdered her. They'd even urinated on her dying body.\n\nSo, he hunted them down. All of them and their bosses too. When the men south of the border got angry, Barabbas crossed into Mexico. He left scores of widows and orphans in his wake. His one man vendetta against the Zeta Cartel (his last employer) found him washed up, bleeding and battered in a Las Vegas dive. He fully expected the next knock on his door to be the fatal harbinger of his doom.\n\nA different man got to him first. He came calling with a proposition. For aid against the Sinaloa Cartel in the Southwestern United States, this man's backers would give him safe haven and bank-roll his efforts. He was partnered up with another newcomer with a past she didn't talk about - Jo.\n\nTogether they murdered nearly 500 people before the Sinaloa Cartel cried 'uncle' and agreed to get out of the arms and murder-for-hire business in theVice Lord's domain. On that day, he and Jo were introduced to their mutual benefactor, Thulsa Doom - the second man to bear that title. He and Jo began directly working for the most powerful gun trafficker in the Southwest.\n\nIt was good work, yet dangerous. Five years ago, one of Thulsa Doom's other lieutenants murdered the man and attempted to take the top spot. Barabbas was not a sentimental man, but the previous Thulsa Doom had taken care of him and kept him alive, so he and Jo buried 13 people out in the Arizona desert, including the rebellious lieutenant.\n\nA few days later, Circe and Jareth invited him to a very public lunch where he was offeredThulsa Doom's spot at the Vice Lords's table. He asked for 24 hours during which he asked Jo for her opinion. To Jo, the location and perks didn't matter. Safety mattered. She asked Barabbas if he felt this was the safest option.\n\nThe next night he met with Xaltotun, swore himself to secrecy and received his dead mentor's Book of Secrets. That leger allowed the new Thulsa Doom to pick up the pieces of the old order and forge his own network. It also let the other Vice Lords get a good measure who they were messing with. None had dared to cross him since - until today.\n\n{No more excuses}\n\n\"Mr. Vardanyan has chosen to interfere with my business. Then he decided to wage war on this city's infrastructure. Hathaway was told to separate Vardanyan from my interests. It is clear he couldn't interpret my intentions as well as I might have liked,\" Baphomet explained to the gathering. There was a moment of silence as each member contemplated the news.\n\n\"Oh my God,\" Sycorax laughed. \"What kind of bozos did you send to kill a former SEAL corpsman? Don't you have access to a fucking sniper?\" Sycorax was the ultimate evil party girl, but that didn't mean she was stupid. Far from it as her imagination kept her profits soaring.\n\n\"Stop using designer drug cocktails as eye-drops,\"Baphomet sneered, \"and listen for once. It was Hathaway. I sent him to deal with 'one' man, former Special Forces yet hardly a superman.\"\n\n\"Let's not forget he is also your 'former' pool boy, Lloyd,\" Circe purred. He glared hate back.\n\n\"Phil, can you verify for us that it was Mr. Hathaway who hired you to murder Mr. Vardanyan with extreme prejudice?\" Thulsa Doom asked the PI former-cop. He walked over to Phil.\n\n\"I'll tell you everything,\" he sobbed. \"Just let me live ... I can help you find Hathaway ... I can point you at the other people responsible ...\" he sobbed some more.\n\n\"For every correct, useful answer,\" Thulsa Doom offered, \"we'll take you down one story. Lie, we throw you off whatever floor we are on. The same goes for 'I don't know'. We are currently on the 38th floor. Okay?\"\n\n\"Ummm ... okay,\" he blubbered.\n\n\"What possessed you to assemble that group of losers to go after a professional killer?\"\n\n\"What ...\" Phil gulped, \"I mean against Vardanyan? I had some guys with military experience. It was a rush job. Hathaway said it had to be done by sunset.\"\n\n\"Why didn't you hire some people who knew what they were doing?\" Thulsa Doom rumbled. \"You know, people who work for me.\"\n\n\"He wanted it to be low profile ...\" he mumbled. Jareth guffawed. Sycorax was less constrained. Her laughter rang out musically, reminding the rest that she'd gotten her start in Vegas as semi-successful performer.\n\n\"Baphomet, who hired this idiot? You are responsible for the carnage at the Hilton, not this moron,\" Archimagoturned on his fellow Vice Lords. \n\n\"I'll take care of it,\" Baphomet shot back defensively. \"I have Rogers working on that right now. It will be resolved by Sunday - all nice and quiet.\"\n\n\"No you won't,\" Circe shook her head. \"You shot at my daughter ...\"\n\n\"And my Summa (lieutenant),\" Thulsa Doom snarled. Baphomet couldn't dodge responsibility by hiding behind Hathaway's incompetence. That wasn't how the Vice Lords worked. Your domain was yours, but you were responsible for you're the actions of your minions.\n\nThe colossal screw up by Hathaway was a downturn he didn't need. Baphomet had to bite back his bile and mend fences while tacking on even more insults he'd payback with interest. Circe had always made it a point to stay out of his way. He and Thulsa Doom had worked well together.\n\nWhat had mattered most to Lloyd was that both Circe and Thulsa Doom had shown no inclination to take over the top spot. He'd never mistaken that for weakness though. They were people of limited ambition. Jareth and Archimago were the opposite and despite Rogers best efforts, Jareth had remained annoyingly untouchable.\n\nArchimago was less cautious, so when the time came ...\n\n\"Oh, you screwed the pooch on this one, Baphomet,\" Sycorax mocked him. Lloyd considered the Gluttonous Bitch more of a persistent thorn in his side that a threat to his rise to power.\n\nThey had bad blood dating back before either one was a Vice Lord - an issue of her being stupidly trusting of a righteous scumbag. He'd helped that third party rake her over the coals for that both financially and physically.\n\n\"I always thought your true sexual predilections went toward bestiality. Lord Knows, you don't want a partner that talks back,\" she denigrated him.\n\nSycorax ... Baphomet wanted to kill her personally. She mirrored his hatred and loathing. He contemplated forgoing his normal level of detachment and caution and being there as she begged for her life.\n\n\"Is Vardanyan your responsibility from this point forth?\" Baphomet pressured the Lady of Lust. Circe balked at the commitment, just like he thought she would.\n\n\"I think we can agree that the resourceful Mr. Vardanyan is none of our responsibilities yet. I think we can also agree that he is no longer your concern, Lloyd,\" Jareth sounded conciliatory while twisting the dagger in Lloyd's guts.\n\n\"We are going to back down because of one man?\" Baphomet countered. \"Jareth, it is not your place to dictate the actions of any of us outside the purview of our domains.\"\n\n\"We are allowed to protect the foundation of theRetiariian Forum (the Vice Lords' underworld's presence ~ The Vice Lords were just legends after all),\" Sycorax sneered. \"I think twenty dead bodies in a public venue qualify as being 'bad for business' and suggests we are not doing our jobs.\"\n\n\"Then we should use extreme censor on the cause of the problem, Mr. Vardanyan. We never take the cause of an outsider over one of our own,\" Baphomet reminded his colleagues.\n\n\"Making something mysteriously fatal happen to Mr. Vardanyan would be the height of folly at this juncture,\" Sycorax purred. \"Perhaps I can distract him for the weekend. Give him something else besides mass murder to occupy his time?\"\n\n\"Are you promising to take him under your wing?\" Jareth requested clarification.\n\n\"I'm sure with the help of Reagan, something can be arranged, right Circe?\" the Lady of Gluttony turned to her 'sister in sin'.\n\n\"You might want to consider that he is a man of his own mind and manipulating him in one of your games might not turn out the way you have planned, Sycorax, Circe responded. \"I know you have some vicious, sadistic creatures under your command. I don't believe you have someone that can deal with 'V' ~ his nickname ~ if he becomes irate.\"\n\n\"If Sycorax is willing to 'guard' this troublemaker until something besides more ham-handed tactics can be worked out, I suggest we go with her proposal,\" Jareth was maneuvering the meeting to a conclusion ... and a vote. Lloyd ground his teeth, but held his rage in check.\n\nThe reality was that there was no way for him to cancel out Vardanyan with the man's current notoriety and the others watching him for such a mishap. No, Lloyd had to reposition himself for the next round. The Press would meander to another target of opportunity, the fool would fade into the background and then there would be a reckoning on Baphomet terms.\n\n\"Anyone opposed?\" \n\nNo one spoke up so the motion carried.\n\n\"I will keep an interest in this matter, London,\" Barabbas warned Sycorax aka London Villiers aka Rachel Stone, retired super-racy porn star.\n\n\"You are welcome to come along?\" she tried to entice the man she knew she needed in order to either rise to the top spot, or deny it to Lloyd ... the relative priority of which changed with her moods. The Lord of Wrath glowered. \"Very well,\" she ran a fingernail under his chin.\n\n\"Sandra (Cho aka Circe), any suggestions?\" she graced the Lust Queen with her own sultry smile.\n\n\"Try something new for you, London. Tell him the truth,\" Circe smirked at the transparent ploy. \"Lying to him has led to all kinds of disappointment up until this point.\"\n\n\"Truth?\" London toyed with the word. \"I may do just that,\" London allowed. This Vardanyan character probably considered himself some pure warrior of the American Way. It had been a while since she played the mature, burned out woman, trapped with a past she couldn't shed and desperate for one last touch of purity. That would do nicely.\n\n\"This meeting is adjourned,\" Baphomet proclaimed. He motioned to his assistant and two bodyguards who stood well away on this gutted building level.\n\n\"What ... what about me? Can I go?\" Phil whimpered. Jareth looked to Barabbas who nodded.\n\n\"Okay Phil,\" Jareth assured the PI. \"Don't leave town. I may have need of you before this matter blows over.\" Phil sighed with relief. \"Wrap him up,\" he motioned to one of his loyal Morlocks ~ his own, private militia few knew anything about. Morlocks usually went without weapons, mastering a variety of martial arts instead.\n\nThis allowed Jareth to kill from unexpected angles. Each Morlock he'd personally saved, physically or spiritually and all he demanded was undying loyalty in return. He was fair that way. The man and woman reapplied Phil's blindfold, gag and cotton balls in the ears. Lastly the hood went on.\n\nAll of that made the final stage sinfully easy. The two Morlocks walked Phil right off the edge of the level and watched him plummet to the large construction dumpster at the bottom. They were good marksmen at this sort of thing. This way scrubbing out the remains would be easy. No one said a thing. Phil wasn't their problem.\n\n{Epilogue Two}\n\n(Costa Real Suites, Caracas Venezuela)\n\n\"Hathaway, this place is beautiful,\" Portia Prior, twirled around the room on bare feet, her silky, transparent sarong floating in the night breeze. Her breasts were a small 30 C. Hathaway had been meaning to have her augmented. \"I thought we'd never take a vacation.\"\n\n\"Yeah ... whatever,\" Hathaway murmured. The second he saw the bad news on the television, he knew he had to activate his exit strategy. Portia had been a nice diversion to calm his nerves. Once the heat cooled down ... he'd change her in for some teenage, uneducated local girl. Portia was racing toward 20 already and he was rapidly working his way through her innocence.\n\nStill, a good fuck tonight and another in the morning. She handled his morning wood so easily. He gulped down his second gin & tonic.\n\n\"Portia, make me another,\" he commanded as he looked over the white waves crash over the darkened beach. He wanted another drink to drive off the chill.\n\nHathaway thought tropical Venezuela would be warmer.\n\n\"I think you've had enough,\" Portia's voice was titillating happy. Anger flushed his body over the lack of her immediate compliance.\n\n\"I'll decide when I've had enough,\" he turned and barked at her. The look on her face was ... different.\n\n\"Oh, I think you've had enough poison,\" her grin grew downright evil. \"It is 85 F degrees yet you are shivering, Hathaway. I bet your extremities are starting to feel numb.\" He voice had lost all its giggly, vapid qualities and became down right condescending and hate-filled.\n\n\"What?\" he babbled. His glass slipped out of his numb hands. Portia walked over to him from the mini-bar. \"No ...\" he tried to back away. She grabbed his elbow and steered him toward the king-sized bed. She laid him out, face up then made a call.\n\n\"He's ready, Mr. Rogers,\" he heard her say. A heavy jolt of fear allowed him to prop himself up on his elbows.\n\n\"Wait ...\" he gasped. \"Don't do this ... I can pay you.\"\n\n\"So I can end up just like you, Hathaway?\" she snorted. \"I don't think so.\"\n\n\"Working for Rogers has normally been fulfilling work. I must admit, pretending to be your live-in 'barely 18' slut has been fairly odious. I'm sure my next assignment will make up for it,\" she gleefully informed him. She went out to the balcony while Hathaway slumped back on the bed.\n\nThe door opening was one last reprieve from his crippling fear and toxic paralysis. He was able to twist his head to see Mr. Rogers, and some cruel looking, stocky local walk into the bedroom.\n\n\"Will there be anything else, Sir?\" Portia came in from the cooling outdoor breeze.\n\n\"No. You've done yet another exceptional job. There is a medium blue Mercedes C-Class Sedan. I'll be there soon enough. Hathaway and I have one final piece of business to discuss.\"\n\n\"Yes sir,\" she nodded. Rogers handed her some car keys before she picked up her tote bag and exited the room.\n\n\"Officer, please wait in the hallway. I'll let you know when Mr. Cord has unfortunately expired from natural causes,\" Rogers told the local man.\n\nThe man must have been a local police investigator paid to cover up his true cause of death.\n\nHathaway would disappear and Mr. Cord would remain an unknown body filling some pauper's grave in some Venezuelan Potter's field. Rogers handed the man a thick envelope. The man sneered at Hathaway and then left the room, humming a happy tune.",
        "\"Now Hathaway, let's discuss your 'Rain Day' funds and what information you've been holding back from Baphomet. Talk away. This poison is an excellent muscle relaxant that focuses on the extremities, leaving your core and head relatively functional. How painful your final moments on this Earth are is totally dependent on how truthful you are.\n\n\"You have no idea what secrets I've already ferretted out, I am well versed in a variety of torture techniques and I have all night to work on you,\" Rogers laid out the situation. Half an hour later, Rogers left the Costa Real Suites. The drive to the private airstrip was an hour long, so he was able to give Portia a great many details on her next assignment.\n\nPrincipal Characters\n\nVance (Vardan) 'V' Vardanyan  - A stocky, six foot tall, 240 lbs., 33 year old former Navy Medic who grew up in Las Vegas before serving for 12 years with the Seals and then 3 more in the field with the CIA\n\n Dabney Curtiss  - Attractive 26 year old Las Vegas prostitute who idolized Vance 15 years ago when he befriended her like an older brother while dating her much older sister in HS.\n\n Georgianna 'G' Norquist  - Attractive 40 year old blonde, former trophy wife of Lloyd Pharris, currently being harassed by him for divorcing him..\n\nLloyd Pharris - Powerful corrupt lawyer, former husband of Giorgianna, currently a member of The Lords of Vice (as Baphomet Vice Lord of Envy who runs criminal corruption in Las Vegas); he employed Vance as a pool boy during Vance's last 2 years of HS.\n\n Detective Lieutenant Trixie Crowe 'TC' Buchannan (LVMPD Internal Affairs Bureau [IAB]  - A compulsively hardworking, honest police woman perceived as a classic over-achieving misanthrope, who is blocked by her managers from investigating serious corruption in the police force.\n\n Detective Sgt. Soledad Moreno (LVMPD Robbery/Homicide - Homicide)  - Hispanic female, detective who is only close friend of TC Buchan.\n\n Reagan Cho, daughter and intended successor for Circe , Vice Lady of Lust  - Tall, fit, dark tanned skin Asian-American. Long black hair and black-rimmed glasses. Very serious and intense most of the time; taut in mind and body, but has a witty sense of humor about her when in good company. If she has a flaw, it is her willingness to let less gifted people know she is smarter than they are.\n\nThe Vice Lords are: \n\nCirce - The Lady of Lust who controlled all forms of the sex trade including phone-sex operations, brothels, escort service, gentlemen's clubs and street prostitution.\n\nSycorax - The Gluttonous Lady who controlled trade in the exotic from importing endangered animals, non-human blood sports rings, human trafficking and slavery. If a sex group involved enslaved people, it was her purview, not Circe's.\n\nArchimago - The Lord of Greed who controlled all gambling-related matters. He watched the casinos and dealt with any criminals muscling in. All illegal betting, such as the extensive underground human blood-sports matches, was also his domain.\n\nJareth - The Lord of Sloth controlled the homeless, panhandling and non-violent street crime. Jareth may have seemed weak compared to the others, except all the runaways, homeless and street criminals gave him eyes and ears all over the city.\n\nThulsa Doom - The Lord of Rage controlled all major arms deals and professional murders in the Vice Lords' domain. Gang violence was okay. If it crossed the line into hurting the tourist industry, he would make an example of the perpetrators with extreme prejudice.\n\nBaphomet - The Lord of Envy handled the political/governmental side of things as the corruptor. Anyone could control an entry level civil servant, including beat cops. Once a person became a manager-equivalent in any municipal, or state governmental office, they fell into Baphomet's exclusive domain. (In the LVMPD that meant lieutenants on up.) If another Vice Lord, wanted something done about legal issues, they paid Baphomet to make the problem go away. \n\nXaltotun - The Lord of Pride who kept everyone working together and took tribute from the other six. Currently unoccupied position. He adjudicated disputes, handled the over-all banking and money-laundering operations, and coordinated efforts against foreign interlopers if they became too much for one of the others to combat."
    ],
    "authorname": "FinalStand",
    "tags": [
        "policewomen",
        "guns",
        "assassin",
        "espionage",
        "mature",
        "vice lords"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/ebb-tide-ch-03"
}