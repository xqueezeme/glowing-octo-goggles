{
    "title": "Office Submission Ch. 04",
    "pages": [
        "Wednesday\n\n\"I know Jack, I know. I was looking forward to it too,\" Anna explained.\n\nJack looked down at the lasagne he had ordered and sighed heavily.\n\nThe two of them had decided on eating out tonight. Tomorrow they were due to travel up to York for a conference together. Jack was looking forward to a weekend of naughtiness, nakedness and hard fucking whilst being paid by the company. But, of course, things never seem to be smooth. Anna had been informed by her manager that she was needed for the rest of the week in the office to help prepare information for Monday's big meeting.\n\n\"We'll just have to spend quality time together when you return.\" Anna smiled as she spoke. They both fully understood what quality time together meant.\n\nJack looked across at the sexiest woman he had ever known. A strand of her brown hair had swept across her tanned, pretty face. Her big brown eyes flickered at the strand before she lifted a petite hand to flick the hair away.\n\n\"I know,\" Jack replied, \"I was just really looking forward to being with you at the conference.\" \n\nShe looked into his eyes and it was her turn to sigh. Her breasts swelled in her tight jumper as she breathed heavily. Her body was beautiful. She kept fit and her shape always left Jack in a constant state of mid-arousal.\n\n\"Jack! Eyes up here.\" Anna scorned him playfully. \"You'll get to see them properly later.\" Anna winked and he felt her foot rub up and down his calf under the table.\n\nHe smiled as his cock pulsed at the thought of her naked.\n\n\"So who's going in your place then?\" Jack enquired.\n\n\"Well,\" Anna looked at him, \"he's decided to send Zoey instead of little old me,\" Anna pouted playfully.\n\n\"Zoey?\" Jack looked confused. He knew the name but couldn't quite place her face.\n\n\"She works with Michael on the 12th floor.\" Anna said whilst sipping her wine. \"She's older than us, around 40ish maybe. Er...dark brown hair, pretty eyes. Always wears a pencil skirt.\"\n\nAnna was spouting information about Zoey and Jack still had no clue as to who she was.\n\n\"No,\" he said, \"no idea, sorry.\"\n\n\"Well you will after this weekend,\" Anna joked, \"you two will be spending all of the days together. You'll be best friends by the end of the weekend. Not that I'm jealous!\" Anna joked.\n\nHer foot continued to stroke his calf under the table and now it had snaked up his leg to the top of his thigh.\n\nHe looked across at her and she just looked down at her meal whilst smiling to herself.\n\nJack's cock grew in his tight trousers as her foot made its way towards his crotch.\n\n\"What time are you going tomorrow?\" Anna enquired innocently.\n\n\"Er...well,\" Jack shifted in his seat to allow his erection to grow properly in his trousers, \"I'll leave around 5am as the first talk starts at 10:00 - long journey.\"\n\nHer foot had now rested on the seat in between his legs and she was deftly placing pressure on his engorged cock. She moved her foot and Jack shifted again so that her foot rested along the shaft of his now fully erect cock.\n\nHe looked up at her. She looked at him and licked her lips. \"What? You're very hard Jack!\"\n\nHe nodded and groaned quietly as he started to shift his hips against her foot. She added more pressure and moved her foot along the top of his cock. He groaned a little louder this time. \n\n\"Shhh,\" she whispered, \"people will look at you.\"\n\nHe looked around quickly and everyone else in the restaurant was deep in their own conversations.\n\nShe pressed again and moved her foot faster. Jack ground his cock against her foot and thrust up and back down quickly.\n\nAnna leaned forward on the table and and used her arms to push her pert breasts together. Jack looked down at them at then back at her. He groaned again and felt his balls starting to tighten. He imagined cumming on those breasts and it dribbling down her body.\n\nShe concentrated her attention on the head of his cock. She knew he liked that.\n\n\"You're close aren't you Jack? Want me to make you cum?\" she whispered, \"fuck, you're going to cum in front of all these people. Ready...\"\n\nSuddenly her phone rang on the table next to her. She exhaled and looked down at it. \"Sorry, it's my mum, got to take it. Stay right here and don't move.\"\n\nAnna grabbed the phone, stood quickly and paced out of the room.\n\nJack was close to cumming and he placed hand down beneath the table to give his rock hard cock a squeeze. He knew he would cum hard tonight and he was starting to ache for it. Anna was incredible and his orgasms were long and intense. She knew the things to say to tease him and to get him off too. She was a goddess to him.\n\n\"Sorry,\" she suddenly sat down as quickly as she had left, \"I'm so sorry. I've got to go. It's my mum. Dad's had a fall. Fixing the garden shed or something (silly old sod) and she wants me to come up to the hospital.\" As she was speaking she was putting her coat on. \"I'll call you later. If I'm not back, have a great conference and...\" she lowered herself and whispered into his ear \"...keep your hand off that cock. I want it rock hard and full of cum when you get home next week.\"\n\nWith that, she left. She left Jack feeling very aroused and frustrated. He looked around the room, a little shocked and then stared down at his dinner. Half a plate of food, hardly any wine and a full erection. 'No touching,' she had said. Jack sighed and asked for the bill.\n\nSaturday\n\nJack was tired of driving and was glad to have arrived. The conference was held in a huge country hotel. The grounds were well kept and vast.\n\nHe turned the engine off and stepped out of the car. He stretched, grabbed his suitcase and closed the doors. There were people replicating his actions all over the car park, like an army of businessmen and women, preparing to wage war on the PowerPoint.\n\nJack arrived at the reception and checked in. His room was 824 and he made his way up to the eighth floor in the lift.\n\nThe room was a generous size with a king sized bed in the centre and a desk and a leather office chair near the window. There was a TV with a small leather two seater sofa pointing at the screen. The en-suite has a shower and a bath and was tastefully decorated with white and black tiles. Jack dropped his suitcase on the bed and unpacked his clothes for the next few days. He moved over to the desk and saw a post-it note with a hand written message. It said:\n\nMr Fraser, meet me in the bar at 9:50. See you then. Zoey\n\nHe read the message twice and looked down at his watch. Five minutes. He shuffled into the bathroom and freshened up with a quick wash. Making sure he had his paperwork and room key, Jack left for the bar.\n\nHe entered the room and there were people everywhere. They were chatting with one another, buying drinks and checking out the rest of the room. Jack moved over to the bar and bustled his way to the front. He ordered a black coffee and, whilst it was being made, he surveyed the area in search of Zoey. He had no idea who she was or what she looked like either. Anna had said Zoey was around 40, pretty eyes and dark brown hair. There were a few women. All wearing heels and skirts, Jack was struggling to lift his eyes any higher. \n\n\"Mr Fraser, over here, Mr Fraser.\"\n\nJack turned to the direction the voice was coming from at the opposite end of the bar. He assumed it was Zoey. She had her hand up, waving. He waved back and made his way over.\n\nHe joined her at the end of the bar. He noticed how great she smelled first. Fresh, intoxicating. She had big brown eyes and, Anna was correct, they were strikingly beautiful. They flashed as he joined her.\n\n\"Mr Fraser,\" Zoey said, \"glad you're here. I was starting to worry I'd be the only one here from the company. I don't know anyone else.\"\n\n\"Me neither,\" Jack replied.\n\nShe was older than he was but you wouldn't guess it from afar. She was shorter than Jack and wore a white silk blouse. She had the top two buttons undone and the blouse fit her tightly. Jack flashed a look down her body and could clearly see that she kept in shape. Her breasts pushed against the blouse and Jack could just see a trail of cleavage leading down into her white silk blouse. He looked up back at her eyes before she noticed.\n\n\"The first talk is at 10:15. We're in the Radwick suite. I've brought the information Mr Fraser. Are you ready to go and find some seats?\"\n\nJack sipped his coffee and he watched her lips as she spoke. She had a pretty face and her teeth flashed through her lips as she spoke. \n\n\"Yes, I suppose we had better show some willingness.\" Jack finished his coffee and opened his left arm as a request for her to lead the way. Zoey smiled and stepped away from the bar.\n\nJack walked closely behind her and, once they were through the crowd, Jack looked at her body from behind. She wore a tight pencil skirt that hugged her thighs and was cut just above her knees. She wore dark sheen tights and black stiletto high heels. She had a nice arse. The material on her skirt was pulled tightly around her arse cheeks and Jack watched her cheeks move as she strutted. Not just a nice arse, a great arse. He gazed at her arse as she lead the way into a big room full of people in theatre style chairs all pointing at a stage. He watched her toned calves as they moved to a space next to an older gentleman. She motioned for Jack to sit down and he dropped down next to her in the folding seat. \n\nJack looked up and there were three big TV screens above the stage where the conference speakers would be shown for those further in the back. There was a hum of noise, as it was so busy.\n\n\"It's supposed to be delegates from Morganite speaking first Mr Fraser,\" Zoey spoke to him directly, \"I have their portfolio here.\" She bent over in her seated position to rifle through a large briefcase. Jack's eyes instantly went to her cleavage. He could make out a deeper cleavage now and the the soft material of a white bra keeping her plump breasts in place. He felt a slight twinge in his cock. Again, not to be caught, he looked away before she came back up.\n\nJack took the paperwork and began reading. It was going to be a long two days.\n\n\"I've highlighted the key points for you, Mr Fraser,\" Zoey added close to his ear, \"I hope you don't mind.\"\n\nJack shook his head and inhaled her scent deeply...god she smelled good. He took the paperwork from her and rifled through the document whilst the first conference speaker started driving on through his PowerPoint.\n\nJack looked down at Zoey's legs. She had them crossed and her skirt had ridden up to the middle of her thigh. She had shapely calves and the sheer black tights really showed them off. He followed the trail up her body and saw her chest again. Because she was sat leaning forwards, the top of her blouse had come to reveal the swell of her breasts. He saw the outline of her white bra again. Jack quickly looked away, hoping to not have been caught. He attempted to focus on the conference speaker for the duration of the morning.\n\nThey finished at 1:00pm and trundled off into lunch. Zoey and Jack found an table alone in the busy hotel restaurant and ate and chatted.\n\nDuring lunch, Jack discovered that this older beauty was married. Her and her husband had been together for 15 years. He worked in IT in the city and was hardly home in the week. She filled her time with going to the gym, meeting with friends and regularly playing tennis and golf for her local clubs. She was quite a good tennis player, with trophies to show for successful competitions. She had worked at Jack's company for eight years now and enjoyed the job. \n\nJack watched her mouth as she spoke over lunch and found he was engrossed with every facial movement that she made. His mind also wandered back to last night where Anna had almost made him cum in the packed restaurant. He thought about Zoey doing that now and the feel of her sheer tights would push him over the edge. His cock grew more towards the end of their lunch and he shifted in his seat to make himself more comfortable. He would love to cum over her arse, or just over her. His cock started to make him uncomfortable.\n\nHe wondered whether she knew how aroused he had become.\n\n\"There's one last talk today Mr Fraser,\" Zoey clarifies. \"It's upstairs in the smaller conference room. It starts in five minutes, we should go.\"\n\nJack was enjoying being called Mr Fraser. It made her seem even sexier. He watched her gather her things and, once again, he stared down her blouse as she picked things up from the floor. He stood and swiftly adjusted his now rock-hard cock to the front of his trousers so his shaft pointed up towards the ceiling.\n\nThey both made their way over to the lift. Jack walked ahead this time and briefly glanced back to see Zoey closely following him behind. They stood and waited at the lifts with around thirty or forty other people.\n\nOne lift door opened and a huge throng scrambled inside. They packed in tight like sardines and the doors slid shut behind them. Jack and Zoey waited for the next lift.\n\nWhen it arrived, Jack stepped in first, moved to the back and turned to face the doors (as one does when travelling in a lift). Zoey stood in front of him and faced him. She started to speak but suddenly more people arrived in the lift and she was forced toward into Jack's chest. He felt her soft breasts against his chest and her smell overwhelmed him again. \n\n\"Sorry, Mr Fraser,\" Zoey apologised. She turned around to face the doors as more people got in the lift. Jack watched as people looked in and shook their heads as if to say 'we'll wait for the next one'. Zoey was pushed backwards into Jack again and he was forced against the mirror on the back of the lift.\n\nHe could smell her again. He saw the soft skin on her neck and had a sudden desire to kiss the soft part where her neck met her shoulders. She shuffled back again and suddenly Jack felt her tight arse against his hard cock.\n\nHe held his breath desperate for his cock not to pulse. \n\nShe scratched her nose.\n\nHe saw her dark brown hair glistening just centimetres in front of him. He imagined holding her hips and grinding his rock hard cock against the tight arse, against the soft material of her pencil skirt.\n\nHis hard cock pulsed.\n\nThere was a slight reaction from Zoey, or was that nothing? She briefly went to turn her head but stopped and pushed a strand of hair behind her ear.\n\nJack wanted to kiss her neck desperately now because of the closeness of the two of them.\n\nThe lift was silent other than the background music playing softly.\n\nJack tried to move further back but was confined between the glass wall and the throng of people. 'Distraction,' he thought, 'let's try that.'\n\n\"Did you...er...prepare the file for the next talk?\" he whispered quietly into her ear.\n\n\"Yes,\" she whispered back and lifted the document case higher to rummage around inside it. She inadvertently moved her hips during the process and Jack felt her soft arse rub across the head of his cock twice.\n\nJack held his breath and prayed for his cock not to pulse from the attention.\n\nZoey finally found the paperwork and pulled it out of the case. She turned and handed it to him without looking at him. Her hips spun away at that point and Jack's cock strained in his tight pants. She then spun back around and instantly placed her sexy arse back against Jack's cock. 'Was that on purpose?' Jack thought.\n\nShe shuffled backwards again against Jack's hard cock. Once again, Jack tried to move his hips back but, again, he had nowhere to move to. He felt the material of her skirt right against the head of his cock. It strained again, he couldn't stop it. \n\nZoey never said anything. \n\nJack wanted to grab those hips more than ever and just grind against her arse. It wouldn't take long for him to find release. 'God she smelled good,' Jack thought. He held his breath and tried to stay still.\n\nThe lift pinged and arrived on the seventh floor. People started pouring out and Zoey moved away with the crowd. Jack was a little disappointed that the pressure on his cock was no longer there. He breathed out and moved with the throng out of the lift. After ensuring no-one was looking, he reached down and squeezed his cock and tried to move into a position that wasn't so obvious. He stepped out of the lift and followed the group to the small lecture hall. \n\nZoey was already in there waiting by the door. She smiled and waved. Jack made his way over to her. Did her eyes just flash down to his crotch? Or was he imagining that?\n\n\"We're near the back, Mr Fraser,\" Zoey clarified, \"just this way.\"\n\nShe moved away and Jack followed. Once again, he watched her sexy arse. He was starting to feel the familiar ache and need to cum. He silently blamed Anna getting him so aroused last night and leaving him on the edge of orgasm. He knew he should have masturbated last night to take the edge off. Here he was now - walking around with a full-strength hard on, lusting after another woman and wanting to rub himself against her.\n\nThey both sat down and Jack tried to focus on the information from the speaker. 'Try to forget it,' he thought, 'it will pass.'\n\nAfter an hour of listening, Jack's erection had subsided. The talk, however, lasted three hours in total. It finished with a rousing applause for the speaker.\n\nJack got up and Zoey joined him. \"I'm going to relax and freshen up before dinner Mr Fraser. Shall I meet you at the bar later?\" She looked directly up at Jack, into his eyes.\n\nHe felt his cock spark to attention again. \n\n\"Yes,\" he mustered, \"Shall we say 7:30pm for dinner?\"\n\nShe looked up at him again, her eyes wide, \"Yes Mr Fraser.\"\n\nJack thought instantly about those eyes looking up at him whilst her soft lips were wrapped around his cock. The spark that had started a slight erection was now fully flowing and his cock was up and aching for attention again. It was the Mr Fraser thing too, he wondered if she was doing it on purpose.\n\nShe picked up the last of her things and made her way out of the small auditorium. He watched her leave and thought about what she would look like in one of her short tennis skirts. He would watch flashes of her sexy arse from under her skirt for the entire match. \n\n'Stop Jack.' He told himself. He left the auditorium and hurried to his bedroom. He stepped inside and had a cold shower to calm himself down. He then sat on the bed and flicked through the TV channels. \n\nAfter twenty minutes of searching, Jack decided to do something useful before dinner. He stood up, threw on his gym clothes and headed out to the gym.\n\nThe gym was down in the basement of the building and there must have been a swimming pool there too as Jack could smell the chlorine. He stepped inside and the gym was average size. There were eight cross trainers and six treadmills with the usual weight machines and, over in the left hand side of the room, free weights with benches. Floor to ceiling mirrors covered the walls - making the room seem bigger. \n\nThe gym was quite busy because of the conference. Jack stood and looked at the machines available. There was a cross trainer free at the back of the row.\n\nHe stepped on, chose a program and slowly started moving. He plugged his earphones in and started to speed up.\n\nJack looked around at the other gym members and then his eyes strayed to the runner in front of him. He saw long Lycra black leggings with a fine fishnet material up the side of her legs so you could see her skin through the material there. She had an unbelievably sexy arse. The leggings were very tight and Jack made out each pert arse clearly in the tight material. He looked up and saw the back of a loose white t-shirt with a black Lycra crop top underneath. \n\nHe smiled. It was Zoey. He'd always recognise the back of her head after today, very easily. Her body was stunning, irregardless of her age. His eyes drifted down to her arse again; he was mesmerised. He stared directly at it for around twelve minutes and his program ended.",
        "Jack finished, stretched off and moved onto one of the upper body machines. Zoey still hadn't seen him. He didn't want it to be any more awkward than it needed to be. He set himself up on the machine and started his workout.\n\nHe was halfway through his reps when there was a tap on his shoulder. He removed his earphones and turned to see Zoey standing in front of him. She was flushed and a little red-faced from the running but she looked hot and sexy.\n\n\"I never knew you'd be coming down here,\" she said breathlessly. Her chest heaved in and out and the loose fitting t-shirt dipped down to her naval with the Lycra crop top underneath. She showed off her ample breasts and her cleavage was clearly on show too. Dressed like this, she was a real head turner.\n\nJack smiled at her, \"I thought I'd pop down for an hour before dinner.\"\n\n\"To let off some steam?\"\n\nJack felt his face reddening, \"Sorry?\"\n\nZoey blushed, \"Oh, I just meant after today's conferences, that's all Mr Fraser.\"\n\nJack stifled a snigger, \"Yes. They were certainly a little...er...dull.\"\n\nZoey looked relieved, \"Yes, they were. Sorry, sir, I'll let you get on.\"\n\n\"Thanks. Think I'll be done soon. You must work out quite regularly.\"\n\n\"Yes,\" she replied, \"I try to work out around three times a week. I enjoy it.\"\n\n\"Well, then I should let you get back to your workout,\" he added.\n\n\"Yes,\" Zoey moved a strand of hair from her face, \"see you in about forty minutes then?\"\n\nJack nodded and watched her move to a workout mat opposite the machine he was working on. She got down on all fours and, facing away from him into one of the big mirrors, she started stretching her back out.\n\nJack couldn't believe it. He was fascinated with her arse in those Lycra leggings and now she was about 10 feet away from him on all fours with her perfect arse pouting directly at him. 'Is she doing this on purpose?' Jack thought to himself.\n\nHe watched her stretch her back and hold her position. He stared directly at her arse. He could see each cheek through the material. He re-started his reps and tried not to look in her direction.\n\nShe lowered her head and her chest down on the floor and stretched her back upwards. Her arse was forced higher in the air. Jack slowed his reps and sat wide-eyed. He could now make our she had a red or pink g-string on underneath her Lycra. He could clearly see the triangular material just attached to the string that covered her arsehole. \n\nJack's cock stirred again. He was wishing he hadn't worn his rugby sized shorts now.\n\nShe stretched her arse further up, parted her legs slightly and Jack's eyes focused on her pussy. He just made out the red material that covered her pussy from where he sat.\n\nJack watched as Zoey sat up and turned around to face him. She sat with her legs spread out wide and her crotch pointing directly at Jack. She straightened her knees and her legs were at almost 180 degrees now.\n\nJack's cock was now growing to a full erection and he was starting to worry about how he would get out of this situation now.\n\nZoey lifted her head up and stretched her arms high towards the ceiling. With her arms tight together, it forced her breasts together and created two plump globes in her tight Lycra crop top. It created a very deep and obvious cleavage. Zoey was looking up at the ceiling, stretching up.\n\nJack's eyes wandered down her body to her crotch. He could make out the red or pink material again. He stared intently at her crotch, desperate to see more. His thought he could make out her pussy lips but it may have been the light. He found himself desperate to see more. Without realising it, he had stopped his reps and was just holding the handles and staring. His erection was clearly pulsing against his shorts now. His eyes travelled back up to her body and then he froze.\n\nShe was watching him.\n\nZoey smiled and resumed her stretch, looking away from him.\n\nJack stood and covertly moved his erect cock away to point up so to hide it as he walked. He left quickly and made his way to his room for his second cold shower in two hours.\n\nJack had changed for dinner and made his way down to the bar. He ordered a straight whiskey and thought he would enjoy a few drinks tonight before an early night. He needed it after his day. His phone vibrated in his pocket. It was Anna: \n\nHey, Dad is ok. Bit bruised, but got out earlier. Just finishing dinner with them. Hope the conference is fun without me. Say hi to Zoey. REMEMBER: hands off that cock!xxx\n\nHe smiled at the message. His balls were starting to ache from the need to cum today and the constant erections. He placed his phone away and sipped his drink.\n\nHe waited at the bar and then Zoey arrived. \n\nShe had her hair tied up and wore a black tightly fitted dress. She wore black high stiletto heels again and her shapely legs were covered with black tights. Her dress was cut shorter than her pencil skirt from this morning: midway up her toned thigh. Her dress had a deep v-neck cut and showed her ample breasts. Her cleavage was clear for all to see. She looked incredible. Jack cursed silently to himself as he realised this evening was going to even harder now.\n\n\"Mr Fraser,\" she said when she arrived, \"on the whiskey already?\"\n\nJack nodded, \"That's a fantastic dress, you look beautiful.\"\n\n\"Thank you Mr Fraser.\"\n\n\"Please, call me Jack,\" he smiled warmly at her.\n\n\"Ok...Jack,\" she smiled back at him, \"shall we order wine with the table? I could definitely do with a drink tonight\"\n\n\"Yes, let's find a table,\" he drank the last of his whiskey, \"after you.\"\n\nHe walked behind her and watched her arse again. He had spent the whole day staring at it and it still fascinated him. He watched her toned, shapely legs guide them to a table for two in the corner. \n\nThey sat opposite each other and ordered wine and food. They chatted about the conference and then work. They ordered more wine and ate their starters. Conversation moved onto their own lives and they ordered another bottle of wine. \n\nJack had felt his cock in a semi-state of arousal through the entire evening. She sat chatting and eating and Jack's eyes constantly wandered down to her breasts. He watched her cleavage carefully and the beginning of each breast. He tried to look to see her nipples through the soft material but he couldn't make them out.\n\nThey continued chatting to each other. She knew that he and Anna were together and she spoke about her husband (Ian) being away so much again. The conversation flowed easily and the wine helped. After the main meal, they finished their wine and the conversation naturally came to a silence.\n\nThey looked at each other and smiled.\n\n\"I'm going to have a night-cap in bar,\" Jack said, \"care to join me?\"\n\nZoey didn't answer straight away, almost like she needed to think about something else, but she nodded. \"Yes,\" she replied, \"that would be good, maybe just one.\"\n\nThey moved to the bar, ordered drinks and found a leather sofa free in the busy bar. The sat down next to each other and sipped their way through another bottle of wine.\n\nWhen she sat down, the dress rode up a little higher so he could see the majority of her thigh. She crossed her leg over towards him and he looked down to see her calves. The black nylon tights she wore really accentuated her sexy legs. His cock grew harder as he looked.\n\nJack could feel the heat from her body against his arm. It started to make his cock stand to full attention. He shifted in his seat but couldn't do anything to make it less obvious. He realised he was tipsy enough to chat but not drunk enough to make himself look silly. \n\nHe had to come clean, it made sense after the alcohol. Everything made sense after more alcohol, it loosened the tongue.\n\nJack felt guilty about staring at her in the gym and wanted to say sorry. \"Zoey,\" he spoke in her ear because of the noise, \"I wanted to apologise about earlier.\"\n\n\"Jack, don't worry,\" she interrupted, \"it's fine. Honestly. There was no room in the lift and I should have just tried to move away from your...er...lower area.\"\n\nJack blushed and struggled to speak. He opened his mouth but no words came out.\n\n\"I just had nowhere to move to and I could feel your...er...erection against me.\" She blushed when she said erection and her eyes flashed down to his crotch but then back up to meet his eyes, \"Plus, it kinda felt good.\" She giggled to break the tension and sipped her wine.\n\n\"I was talking about the gym,\" Jack said through stifled laughter, \"when you caught me watching you.\"\n\nZoey stopped giggling and looked directly up at Jack. \"I've seen you watching me all day Jack. Why do you think I decided to work out opposite you at the gym?\"\n\nJack looked confused.\n\n\"Well,\" Zoey replied, \"I thought I'd try and get you hard again. I wanted to see if you would get an erection from just watching me. It felt good when you were hard in the lift and it made me feel good about myself.\"\n\nJack looked down at her breasts and, because he was as taller, he could see down her dress. He saw the starting material of a silk black bra. His eyes darted back up to hers. Zoey had seen him, again. She smiled and raised her wine glass once more to her lips.\n\n\"Ian is away a lot,\" she changed the subject, \"and he never really notices me anymore. It's felt nice today to have someone checking me out.\"\n\n\"So, you're home alone a lot then?\" Jack asked.\n\n\"Yes,\" she looked up at him, \"he's away all week and, sometimes, he stays out there the weekends too. I feel like a lonely, old widow at times.\"\n\n\"You're not old Zoey,\" Jack reassured her.\n\n\"I still have...needs, you know?\" she looked away and her face flushed red.\n\nJack's cock reacted to the words and strained again in his pants.\n\n\"I have to take care of myself, a lot,\" she continued, \"you know what I mean Jack?\"\n\nShe looked up at him again and smiled, cheekily biting her bottom lip.\n\n\"Really?\" Jack asked innocently. His cock was rock hard like a steel shaft.\n\n\"Yes.\" She continued, \"Women have needs too. Like men do. I regularly touch myself Jack...I have to.\"\n\nJack was trying his hardest to stop his heart from pounding so loudly in his chest. He was sure she would hear it. He gulped, \"how?\" The alcohol had forced the question out.\n\nZoey smiled and held up her right hand. She made two fingers straight on her hand and hid the rest of her fingers my her palm. \"I use these a lot,\" she gestured. She looked up at Jack and half whispered, \"I use them on my clit.\"\n\nJack raised both eyebrows whilst looking down at her. \n\nZoey giggled. \"I like to tease my pussy lips first and that gets me nice and wet. Then I stroke around the edge of my clit.\" Zoey looked between Jack and her fingers whilst she spoke. \n\nAs Zoey described each of the movements, she slowly circled her fingers around in front of Jack.\n\n\"When I'm really wet, I use my other hand and place one finger around the entrance to my wet pussy. I tease the edges of the entrance, whilst still rubbing my clit and then after teasing myself I slide my finger deep inside.\"\n\nJack's throat went dry and he barely breathed to ensure he never missed a word. \n\nZoey continued whispering into his ear, \"That's when I really start to move my hips and start to fuck my fingers.\"\n\nJack groaned to himself when he heard her say the word fuck. He tried shifting in his chair to better position his hard cock.\n\n\"I have toys too,\" she continued, \"my rabbit is my favourite. I tease myself and get my pussy really wet and then slide the length of it inside. After sliding it in and out a few times, I turn on the vibrations. Sometimes I still have to use my finger s though as well. It doesn't take me long to cum hard like that.\" Zoey finished and drank the last of her wine. She didn't look at Jack. She must have known he was aroused, but she never looked at him.\n\nHe turned, picked up his wine glass and finished his glass. He suddenly thought of Anna and her message about not touching his cock. There was no way he was going to get through the night without some sort of release. He wanted to get to his room and just stroke his cock to a nice well-earned orgasm.\n\nZoey sat silently staring out at the bar. Then suddenly she spoke, her tone had changed.\n\n\"Sorry Mr Fraser, I shouldn't have said all that. It was really inappropriate and unprofessional, sorry. Look, I'm going to go up to my room.\"\n\n\"Stop, Zoey.\" Jack responded, \"I really enjoyed it. Really! Don't apologise, I'm to blame too. I shouldn't have asked. Look, let's just go to our rooms and put it down to just us having too much wine and too much fun. Yes?\"\n\nShe smiled and instantly felt relieved. \"Thank you, Mr Fraser. I just got carried away. Anyway, I think I need an early night now!\"\n\n\"What does that mean?\" Jack smiled whilst asking.\n\n\"Oh Mr Fraser,\" she teased, \"I think you know...\"\n\nHe smiled and stood up before her, taking the moment to adjust his hard cock.\n\nHe turned back around to help her up from the sofa. He looked down at her. Her eyes were level with his cock and he saw her looking directly at his crotch. He held his hand out and she stood up.\n\nThey stumbled towards the lifts in their tipsy state and she pressed the button.\n\nHe once again surveyed her arse and legs. He thought she was so sexy and his mind drifted to earlier when he felt his cock grow against her arse. It pulsed in his pants again. He couldn't wait to get to his room.\n\nThe lift doors opened and they both stepped in. There were four others in there, making their way up to their rooms. Jack asked for the eight floor. \n\nZoey smiled, \"Me too. What number? I'm 827.\"\n\n\"824,\" he replied, \"I think you're just across from me.\"\n\nThey both turned and stood side by side this time whilst facing the doors as the slid shut.\n\nThe lift stopped two floors later and the four other people exited. The doors closed once again and Zoey stifled a giggle.\n\n\"What?\" Jack questioned.\n\n\"Sorry,\" she said whilst smiling, \"I was thinking about earlier in here.\"\n\n\"Me too.\" \n\n\"Really? About what?\"\n\nJack smiled, \"About how hard I was then.\"\n\n\"Then?\" she cheekily questioned, \"What about now?\"\n\nZoey stepped in front of Jack and continued to look at the lift doors. She took a step back and he felt her soft arse against his rock hard cock again. She wiggled her pert cheeks and pushed back again harder. Jack felt his cock rest between her two cheeks in the cleft of her dress.\n\n\"You were there,\" she continued, \"and I was about...\" she wiggled her arse again \"...here.\"\n\nJack had to stop himself from rubbing up against her. He gripped the rail at the back of the lift tightly to stop himself from grabbing her hips. 'She is a married woman' Jack thought.\n\n\"Hmmm...yes you are hard now,\" Zoey said without looking back at him, \"was it the way I told you how I fuck myself and make myself cum?\n\nJack gulped as she moved her hips once more.\n\n\"Or from looking at my breasts all night? Wow,\" she continued, \"I can feel it. It is rock hard! I think we both know what's happening in our rooms tonight, don't we Jack?\"\n\nAt that, she pushed back and rubbed her arse up the shaft of Jack's cock. He breathed out heavily.\n\n\"Yes,\" he murmured.\n\nThe doors pinged for the eight floor and she instantly stepped away into the corridor. She stopped at the lift doors and looked back at Jack. Zoey then continued to walk slowly down the corridor.\n\nJack followed her out and watched her from behind. Her short dress had ridden up her legs a little and Jack could see the beginnings of a suspender line at the top of her shapely thigh.\n\nZoey stopped at her door (it was across from Jack's room) and she fished her room key card out of her clutch bag. She looked up at Jack just behind her, whilst holding her key card. \"Well, Mr Fraser,\" she teased, \"what are you doing now?\"\n\nEvery time she said 'Mr Fraser', it made his cock harden even more. \"Well,\" he responded, \"as you know, I have a huge erection that won't go away now unless...\" He waved his hand away as if that signalled his intention. \"What about you?\"\n\nShe smiled at him. \"Well, I'm going to go in my room and do exactly what I described earlier.\"\n\nJack looked at her and her breasts as if to make a mental memory that would feed his masturbation session. He was very blatant about it now and cared little if she saw him. 'I'd love to watch,' he thought through his hungry eyes.\n\n\"Mr Fraser?\" she started, \"can I see it?\"\n\nJack stopped. The pounding in his chest started again.\n\n\"Pardon?\" he queried.\n\n\"Can I see you hard cock please Mr Fraser? You've looked at my breasts enough times tonight and I want something to help me in there. So...can I see it? Please?\" \n\nThe pounding in Jack's chest filled his ears and it felt like time slowed. He thought instantly of Anna. Then his thoughts turned to Zoey's husband, Ian. Then he looked at Zoey and her pleading eyes. He knew it was wrong but he knew he needed release tonight.\n\n\"Come on in,\" Zoey turned towards the door, put the key card in and entered, \"you can show me in here.\"\n\nJack waited a beat but then automatically followed behind her and let the door shut behind him.\n\nHer room was very tidy. It was the exact replica of his own room with the desk and the small sofa aimed at the TV.\n\nZoey stopped in the centre and spun around. She looked at Jack and placed both hands on her hips. \"Will you show it me, please?\"\n\nJack looked at her and, once again, his cock strained up. It was rock hard at the moment and not going anywhere.\n\n\"What's in it for me?\" he questioned.\n\nZoey looked at him and the placed her hands at the bottom of her dress and slowly dragged the hem up to her waist. The skirt trailed slowly across her legs and Jack could hear the nylon material as it gripped the cotton of the dress. She kept going and Jack saw she was wearing a pair of pull-ups and then he saw her black silk panties. They were cut quite high up to her pussy. Jack saw the flesh of the tops of her thighs between the pull-ups and where her panties began. Zoey stopped, waited a beat and then placed her dress back down over her crotch.\n\n\"Your turn,\" she said, smiling.\n\nJack unbuttoned his shirt slowly and then pulled it off his body and onto the floor between them. He then unbuttoned his tight trousers and unzipped his fly. He unclasped his trouser button and slid them down his legs. He slipped his socks and shoes off in one quick sweep and stepped out of his trousers.\n\nHe stood in front of Zoey in just his pants. His erection was now very obvious. He heard Zoey moan. Jack always kept in shape and knew he had a good body.\n\n\"Mr Fraser,\" she whispered whilst looking directly at Jack's engorged cock in his pants, \"that cock looks so hard.\"\n\nJack nodded and looked at Zoey's legs once more. 'Fuck,' he thought, 'I need to cum.'\n\n\"Your turn now,\" he said.\n\nZoey smiled and slowly turned around. She untied her hair and let it fall down her back. Zoey then lifted the hem of her dress again. This time, Jack was looking at her arse. She continued to pull it up over her hips and again the noise of the two materials brushing against each other filled the room.\n\nShe lifted the dress over her arse and Jack saw the flesh on the cheeks that he had so longed to see all day. The material on her black thong furrowed in between the two perfect globes.\n\nZoey continued to lift her dress up and over her head. She tossed it to the floor and turned around, giggling nervously.\n\nHer breasts were big. Jack knew that after ogling her all day. But now he saw them trapped inside a black matching bra. They were close to spilling up and out of the bra. Jack just stared at her. She was beautiful. The need to pleasure himself was starting to grow.\n\n\"What do you think Jack?\" \n\nJack looked at her again and swallowed, \"I think Ian is an idiot!\"\n\nZoey laughed aloud and walked up close to Jack. She stopped just in front of him and looked up into his eyes. \"Jack, I'm married and you're happily with Anna. But I want to cum and,\" she glanced down at his hard cock, \" and I think you do too. So I propose this...\"",
        "Jack gulped. He could feel the heat from her body as they both stood there. They were inches from one another but not touching anywhere.\n\n\"...I propose,\" she continued, \"we watch each other cum. But, we don't touch or kiss each other at all. I want to watch you stroke that cock for me. Call it a mutual agreement. I need to cum, you need to cum...you know? How does that sound Mr Fraser?\"\n\nShe accentuated the Mr Fraser. 'She knew it had aroused him all day' he thought. Jack would have probably done anything she asked for right then. He just needed some pleasure and release.\n\n\"It sounds,\" he spoke with barely a whisper, \"it sounds a good idea.\"\n\n\"Good,\" Zoey smiled, \"now, can I see it?\" Zoey looked up at Jack with those pleading eyes again.\n\nHe nodded.\n\nShe smiled, moved backwards and wheeled the desk chair over. She sat very close to Jack. She looked up at him again, this time her face was level with his crotch. He placed his thumbs into the elastic of his pants. He slowly eased them down. He had to unhook them over the head of his hard cock. But slowly his cock was revealed to her. The elastic rubbed against his shaft as he pulled the pants down. It made his shaft spring back off his toned stomach. He let them drop to the floor and then stood out of them. He stood naked and fully aroused in front of her.\n\nZoey gasped when she saw his cock. She looked at it very closely. Jack could feel her hot breath on his shaft as she looked wide-eyed at his erect cock.\n\nZoey looked up at Jack, \"You look almost as aroused as I am right now Mr Fraser. Look\"\n\nZoey kept looking up at Jack and lifted her hand. She stroked it up her suspender and softly towards her silk panties. Zoey slid her hand down inside her panties whilst she never breaking eye contact with Jack. She gasped and her eyes closed briefly as her hand reached inside her panties. She then lifted her hand out and her two fingers were wet with her pussy juices. She brought them to her lips and, still looking directly at Jack, placed them into her mouth and sucked them clean.\n\nJack's cock was ready to burst and constantly pulsed without his control at the sight.\n\n\"Show me how you stroke it, please?\"\n\nJack didn't need asking twice. He gripped his shaft and slowly created the comfortable loop with his finger and thumb. He then stroked his shaft all the way down and then back up. He exhaled loudly. He needed this. It had been a long day of teasing.\n\nZoey was transfixed with the motion and she leaned forward for a better look. Her nose was almost brushing against his shaft as he slowly stroked his cock.\n\n\"Does that feel good Mr Fraser?\" she questioned.\n\nHe nodded, watching her.\n\n\"Is the tip the most sensitive part?\"\n\nJack nodded again and used his finger to circle around the tip of his cock, \"hmmm,\" he groaned.\n\n\"Have you ever tried cumming from just stroking the tip. I know how to make you cum without stroking you at all.\"\n\nHe groaned and was desperate to cum.\n\nShe giggled. \"Do you like having your balls stroked to Jack?\" she asked.\n\nJack stopped teasing the top of his cock and used one hand to stroke around his balls. With no attention on his cock, he started to feel that familiar ache for pleasure again. His cock twitched and bulged again.\n\nZoey's eyes flashed back towards it and smiled as it moved involuntarily. She reached behind her back and unhooked her bra. She caught it around the front before it fell and Jack watched as her breasts spilled out of the tight material.\n\nHer breasts were bigger than Anna's. He knew they were from watching them all day today. They were at least D cups, maybe even DD cups, and looked a little more than a handful. Her nipples were erect and pointing out. She stroked both hands down over them and pinched her nipples, ensuring they remained erect. She breathed out as she tweaked them. \"I like playing with my breasts too. But sometimes I don't have enough hands.\"\n\nSitting back in the chair and looking up at Jack, Zoey slowly slid her right hand over her toned stomach and down into her panties. Her hand found her clit and Jack watched as her hand started circling around it. \n\nShe groaned, \"Hmmmmm. Yes. That's it. I'm so wet down here. I've been so aroused all day after feeling your hard cock against my arse in the lift. God, that feels good.\"\n\nShe was looking up at Jack and closing her eyes every now and then as she rubbed her clit underneath her panties. Her other hand was stroking her breasts and tweaking her erect nipples.\n\n\"Goddd! Jack, do you like to watch? It's making me hornier knowing you're watching. That cock looks like it needs some attention too.\" She slid her hand out of her panties and placed it on her breasts again.\n\n\"I've never seen a man masturbate to an orgasm, Mr Fraser,\" she whispered, \"your turn.\"\n\nJack placed his hand around the shaft of his cock and pointed it towards Zoey. Keeping his grip very tight, he stroked over the engorged head of his cock. He felt the ridge of the head as his fist passed over it and he sighed aloud. He then moved his hand back down over his shaft. Using a slow and steady movement, Jack repeated this movement.\n\n\"That looks so sexy Mr Fraser,\" Zoey whispered without taking her eyes from his hard shaft.\n\nJack groaned when he heard Mr Fraser again.\n\nShe suddenly looked up at him, \"Do you like it when I say that? Mr Fraser?\"\n\nJack nodded and slowed his stroking even more as he started to feel pre-cum gather at the top of his cock.\n\n\"Well,\" she said, \"look at that pre-cum Mr Fraser. I bet your bursting to cum now aren't you? Cum all over my legs and my breasts. Oh Mr Fraser.\"\n\nShe got up out of the seat and their bodies nearly touched as she did so. She continued to look at him as she stood. Then, she turned around and made her way to the bed. Zoey climbed onto the bed onto all fours. She looked back at Jack teasingly and slid her hand underneath her body. She again placed her hand into her panties and moaned as her fingers found the spot.\n\n\"Ooooh,\" she moaned aloud, \"Mr Fraser.\"\n\nJack shuffled over closer to the bed. He stood directly behind her sexy arse. He held his cock still in a tight grip. He was so close to her sexy arse right now and he wanted to reach out and stroke it. Jack slid his hand down and then back up his hard shaft. The view of this sexy woman bent over in all fours in front of him was becoming too much to bear.\n\n\"Ffffuck, I'm starting to get close. I neeeeed to cum so hard.\" Zoey was starting to gyrate against her hand and her hips were moving in time with the rhythm of her hand.\n\nJack gripped his cock and stroked back again. The skin in the head of his cock pulled back and Jack stopped, he had to.\n\nZoey flipped over onto her back. Jack could see her body in all its glory as she lay flat on her back on the bed. She continued with the speedy stroking in her clit under her panties.\n\n\"Oh god, Mr Fraser. P-p-p-please get up here...oh fffffuuuck!\" She groaned.\n\nBeing careful not to touch her, Jack got up onto the bed.\n\n\"Ohhhhh...by my head...I want to see you cummmmn...quickly...pleeeease?\"\n\nJack shuffled on his knees up near her head. He gripped his cock and it now hovered near her face. The pre-cum that had gathered on his cock was starting to dribble down his cock head.\n\nZoey's eyes widened when she saw how close his cock was to her face. She moved her other hand down to her pussy and slid the silk material aside. She then slid two fingers straight into her wet pussy. There was no need for teasing right now, she just needed release.\n\n\"Ohhhh myyyy godddd!\" Zoey moaned aloud when her fingers entered her pussy. She was close now.\n\nJack started stroking again, he was close too. The pre-cum started to dribble from his cock and down towards Zoey's cheek. Zoey watched it and sped up her masturbation.\n\n\"Ffffuccck! Pleeease cum with me...Mr Fraser... cum on my face,\" she moaned loudly. \"Oh god,\" her breath shortened and she started breathing in deeply.\n\nJack slowly started stroking again. He felt the cum building up from his balls and making its journey up the shaft of his cock.\n\n\"OH FFFFUCCKKK,\" she screamed.\n\nJack felt himself cumming. He felt it spurt out from his cock across her beautiful face.\n\nIt pushed Zoey over the edge and she held her breath as she started cumming. She rubbed her clit furiously whilst leaving her fingers deep inside her pussy. \n\nJack kept stroking and another spurt landed across her nose and dribbled down into her open mouth.\n\n\"NNNNNGGGGG! OHHHHHH...\" she groaned.\n\nMore cum spurted from Jack's cock across her cheek and down her neck. He milked his cock one more time and the last of his cum dribbled down past her head and onto the bedsheet.\n\n\"Ohhhhh...god. Fuck,\" she said between shortened breaths, \"Oh wow. Phew. I haven't cum that hard in a LONG time. Thank you Jack.\"\n\nHe looked down at her cum covered face and smiled. He had become so desperate to cum but the two of them had not touched each other, as promised.\n\n\"No, thank you,\" he said, \"I need another shower.\"\n\n\"Me too,\" Zoey smiled, \"we have an early start tomorrow. Shall I see you downstairs at breakfast for 7:00?\"\n\nJack nodded, smiled down at her and moved over towards his pile of clothes. He scooped them up, once again smiled at Zoey and turned towards her door.\n\n\"See you tomorrow...Mr Fraser,\" she giggled as he left."
    ],
    "authorname": "EnglishTongue",
    "tags": [
        "teasing",
        "tease",
        "mutual masturbation",
        "grinding",
        "cum on face",
        "dirty talk",
        "older woman",
        "milf",
        "orgasm",
        "female orgasm"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/office-submission-ch-04"
}