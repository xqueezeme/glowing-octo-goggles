{
    "title": "Anjali's Red Scarf Ch. 12",
    "pages": [
        "Chapter 12: Change Is Bad\n\nIt took us several weeks to put the plan together. There were calls to make, flights to book, and certain other arrangements to make. I would have loved to involve Lucy in it all, but she'd made it very clear that that would be a bad idea, so I settled for smiling enigmatically during our lunches and telling her \"you don't want to know\". Meanwhile, until we were ready to act, Anjali carried the bugged phone around with her and acted as if nothing was wrong.\n\nThen, early in October, she let her parents know that she'd be coming up to Sydney for Diwali, and could they please meet her at the airport on Saturday morning? \n\nThey drove up and waited in the pickup zone at the agreed time, but Anjali didn't show. They called her phone\u2014it rang, but didn't answer\u2014and texted. Ten minutes later, they received a reply:\n\nCome meet me inside the airport.\n\nThere was no more information, no further reply to their messages. By that point, I expect Mr. Kapadia would have checked the tracker and confirmed that the phone was inside the airport. After parking the car they would have made their way into the Virgin terminal, following the tracker through the building until they reached the back corner of an airport cafe where a woman sat alone at a table.\n\nThat was when I looked up from Anjali's phone, smiled my very best smile at them, and said \"Good morning. Anjali can't be here, but she asked me to tell you a few things. Please do sit down.\"\n\nI had the advantage of surprise, and I did what I could with it. I explained that Anjali had taken her phone in for service, and that the technician had detected some unauthorised apps on it. (This was all true, though somewhat misleading; we'd seen no point in letting them know just how much we knew.) When Mr. Kapadia tried to bluster, I pointed out that he'd known just where to find me. \n\nI told them that she was deeply hurt by this betrayal, and I waxed rhapsodic about her qualities as a friend: her kindness, her generosity, her trustworthiness. I reminded them that she was a grown adult, very nearly a doctor, and quite a sensible one who could perhaps be trusted to talk to boys now and then (another little piece of misdirection) without getting into trouble.\n\nI told them that Anjali had asked me to convey her request that they not make any further attempts to contact her or surveil her, and that she would be in contact if and when she felt ready, and I suggested that if and when she did an apology on their part might be in order.\n\nI did my best. I'd taken some days scripting what I had to say, and learning my script so I could move through it as fluently as if all this talk came naturally to me. I used everything I'd learned about them from our years of acquaintance; I leant on all the goodwill I'd ever earned with them.\n\nWhen I was younger I used to believe that a good enough argument could win anybody over, if only I could find the right words. Nowadays I'm far less optimistic; life is not a video game and sometimes there isn't a winning strategy. \n\nSo it was, for all my best efforts. They heard me out, mostly because I didn't leave them room to get a word in. But when at last I stopped, the two of them replied, cold and angry. It was none of my business, and Anjali was their daughter, and she didn't know what was good for her, and I ought to know far better than to presume upon them like this. They said far more than that, moderated only by their desire to avoid a public spectacle in front of airport security, and I expect it would have hurt my feelings if I'd thought about their words closely.\n\nInstead, I just marked time. I watched their mouths move, and I nodded or shook my head as the occasion required it, and now and then I seized on one of their remarks and argued it for a while without any real expectation of changing their minds. \n\nEventually, I held up my hand and told them, \"I've said what I came here to say. It's up to you what you choose to do with that information. I'm afraid I can't stay and talk, because my flight is boarding soon. I wish you the very best, but now I have to leave.\"\n\nThen I walked back through security screening, switched off the tracker phone, and flew back to Melbourne from the same gate I'd arrived at just a few hours earlier. I hadn't even left the airport.\n\nAt the other end of my flight I walked across to the Qantas terminal and settled myself down with a good book. I had just finished it when the screens announced the arrival of another Sydney-to-Melbourne flight, and I was standing at the gate to meet Anjali as she walked off with a spring in her step that I hadn't seen in some time.\n\n\"How'd it go?\" \n\n\"As planned.\" She hugged me and we walked out towards the taxi stand. \"And you?\"\n\n\"I said my piece. Don't think they bought it though. Sorry, I tried.\"\n\n\"Not your fault. It's a pity, but I am not responsible for their choices, and neither are you.\" She sighed. \"I shall keep on telling myself that until I start believing it. The important thing is that you took plenty of time saying it to them.\"\n\nShe had flown up the night before and stayed in a hotel. In the morning she'd caught an Uber and waited down the road from her parents' house until she saw them both leave, then let herself in; in response to an entirely hypothetical question, Salwa had confirmed that it's not housebreaking if they've given you a key. Her father's password was still \"tendulkar34357\" and once logged on, she had no difficulty in finding the archive. \n\nThe next part was my idea. Anjali's thought had been simply to delete the archive, but we'd both recognised that that might do more harm than good. It would be a very obvious sign of tampering, and if Mr. Kapadia kept backups\u2014which both Anjali and Mahesh had advised him to do, after the virus incident\u2014we couldn't guarantee finding them. Far better to sabotage it.\n\nWe'd made a copy of the archive from Anjali's account, and then gone through it editing the incriminating parts. (\"Like the school library,\" Anjali had said. \"We had editions of Catullus and James Joyce with all the naughty bits bowdlerised.\") Her \"checklist, as discussed\" was now a list of things to think about when planning a PhD thesis. We'd left the conversations about \"Lily\" mostly unedited, but changed the dates so that they no longer matched Anjali's visits to my place, and in some cases coincided with times when Anjali had an alibi.\n\nAnjali had copied the doctored archive over the original, changed the \"last modified\" date to cover her traces, and run a script to check for any other copies on her father's computer. Satisfied that there were none, she'd cleaned up after herself and let herself out, texting me to let her know she was done. Even if there were still backups of the original version, her parents would have no reason to go look for them, and eventually they'd be overwritten with our edited version.\n\n\"How are you feeling?\" I asked her.\n\n\"Sad. Relieved. I don't know. I've blocked their numbers and I've let Mahesh know the situation.\" I saw her shoulders slump. \"I really was looking forward to his wedding. I don't suppose I'm going now.\"\n\n\"I'm sorry.\" I'd never been to a Hindu wedding, but Anjali had attended many during our acquaintance, and through her I'd picked up an idea of their significance. I also knew she'd been taking a keen interest in Mahesh's arrangements.\n\n\"Can't be helped.\" I felt her fingers slide into the crook of my elbow. \"Is it okay if I stay over at yours for the weekend?\" She didn't need to tell me why. \n\n\"Sure. Though, will you be right for clothes?\" She'd packed light for Sydney, just an overnight bag with one change.\n\n\"I will be if I don't wear any.\" She laughed at my startled expression. \"I'm full of nerves and I very much need a distraction. If you don't mind?\"\n\n\"Not in the slightest.\"\n\n* * * * *\n\n\"So, what did you have in mind?\" I asked her, some hours later. I was on my sofa; she'd just returned from a post-travel shower, having thrown her clothes in the wash and now wearing nothing but a towel, and the red scarf woven into her hair.\n\n\"I don't know. It's so loud in my head. Half of me wants some serious pain so I can switch off, and the other half really wants comfort. I can't decide if I want you to spank me or cuddle me. And I'm sore.\"\n\n\"Hmm.\" I scratched my head. \"You know, I might have an idea, but I'll need to call in some help.\"\n\n\"What do you have in mind?\"\n\n\"Do you trust me?\"\n\n\"Always.\"\n\n\"Wait and see.\" I looked through a directory, made a decision, picked up the phone. \"Hello there? Yes, I was looking to make a booking for this evening. You do outcalls, right? Yes, I'd like to book the two-hour deluxe package, if it's not too late...it's not? Great.\" I gave the lady my card details and directions to my apartment. \"See you soon!\"\n\nAnjali looked at me dubiously. \"Did you just dial a dominatrix?\"\n\n\"Wait and see,\" I told her. \n\n\"Ought I to dress for the occasion?\"\n\nI looked her over. \"Underwear maybe. But don't hurry on my account.\"\n\nHowever, it was a little chilly for just underwear, so she'd added an old bathrobe of mine by the time the buzzer sounded and I admitted a motherly-looking lady with a wheeled duffle bag. \n\n\"Hello, I'm Jean. Are you\u2014\"\n\n\"Yes, I'm Sarah, this is Anjali. You'll be doing her tonight.\"\n\n\"No problem.\" She wheeled her bag in and surveyed my lounge room. \n\n\"We can do it here, or there's a bed upstairs if you like?\"\n\n\"Here is fine.\" She unzipped the bag and pulled out a contraption of padded surfaces and locking metal struts. I stole a glance at Anjali's face, and was gratified to see the sudden smile as she recognised it for what it was: a massage table. \n\nA couple of minutes later and she was lying face down, wearing only her underpants. I'd dimmed the lights and put on something quiet while Jean got to work.\n\n\"Let me know if the pressure's too much,\" she told Anjali. I pulled up a chair near the table and took Anjali's outstretched hand in mine. \n\n\"Just let yourself go,\" I told her. \"You don't have to think about anything for the next two hours.\"\n\nJean began. She squirted a palmful of oil into her hand, and started to work it into Anjali's back and legs. It took a while for me to place the sweet smell, and I had to suppress a chuckle when I did: lilies. As Jean worked, I held Anjali's hand; I switched sides as needed to keep out of Jean's way; now and then I swept Anjali's hair out of the way. If Jean thought it was odd for me to be holding her client's hand, she said nothing about it.\n\nTalking is hard but touch is magic. Through Anjali's grip I could feel her restlessness at first, the nervousness of being touched by a stranger, squeezing my hand now and then for the return-squeeze that says: I am here, I am protecting you, you are safe. Slowly she settled into it, became comfortable with Jean's touch, drifted into that zone of sensuality that lies just outside sexuality, and her grip on my hand steadied.\n\nThen Jean began to work in earnest, probing the knotted spots in Anjali's body with fingertips, knuckles, elbows. I felt Anjali's body tense, breath held, until she had absorbed the pressure and accepted it, then she eased again. Over and over, tensing again with each new touch on muscles strained by worry and long hours at the computer, then opening herself to it, softening again, and each time sinking a little deeper into that peaceful empty space of acceptance. Her grip on my hand was light now, no longer seeking reassurance, just presence.\n\nOn impulse I leaned forward and rested my head against hers, closing my eyes. I hadn't realised how much I was still carrying from that morning\u2014the argument with Anjali's parents, the uncertainty about whether she'd be able to carry out her mission, the awareness of all the myriad ways it could go wrong\u2014but now, as I felt the tension ebb in Anjali's body, I could feel it ebbing also in mine.\n\nI was very nearly asleep when I felt Jean's hands tapping quickly and lightly on Anjali's back, signalling that the end of the massage was drawing near. She ran a warm cloth over Anjali's back and limbs to clean up the oil\u2014I very vaguely remembered her borrowing my sink\u2014and then said very softly, \"All done.\"\n\n\"Mmm.\" Anjali made no attempt to move until I whispered in her ear, \"We need to give the nice lady her table back.\" Then she sat up groggily and eased herself off the table.\n\n\"How do you feel?\" asked Jean.\n\n\"So good. Thank you,\" replied Anjali, as I handed her my bathrobe.\n\nJean packed up her gear as quickly as she'd unpacked it, and I led a happy and half-dazed Anjali up the stairs to bed.\n\n* * * * *\n\nIn the morning we fooled around lazily in bed. I'd missed her these past weeks: the sex obviously, but also the warmth of her and the scent of her, the waking up half wrapped around one another. For a long time I nibbled at the nape of her neck\u2014I could still smell the massage oil on her\u2014and she squirmed in my embrace. Eventually we moved on to more carnal activities, culminating in several panting orgasms for her on my fingers and tongue before she returned the favour for me. \n\nAnd yet, as good as it was, sometimes it felt as if her mind was elsewhere. I couldn't say I was completely surprised; yesterday had been a big day, and it still remained to be seen just how things would shake out.\n\n\"So are we resuming this,\" I asked, \"or is today a one-off?\"\n\n\"Just a one-off,\" she said. \"I still have so much to do. Seven and a half chapters to write, and I'm not happy with the structure. And so much paperwork for postdoc applications. Be proud of me, Sarah, I have some backup applications in case the Bern thing falls through.\"\n\n\"Is that likely?\"\n\n\"I hope not. But I'm trying not to put all my eggs in one basket. It's hard, though.\"\n\nI gave her a gentle squeeze. \"I hope they see how talented you are. I've been brushing up on my Schweitzerdeutsch.\"\n\nShe stiffened. Ever so slightly, but I knew her body like nobody else.\n\n\"Sarah...\"\n\n\"Yes?\" I said, though I had a sudden feeling I didn't want this conversation.\n\n\"Please don't make those plans. I am so grateful for what you've given me, and I hope you'll always be part of my life. But...\"\n\n\"But,\" I echoed.\n\n\"I've been orbiting around my parents most of my life. If I hadn't met you...I'd probably still be living with them. God. I'd be driving myself mad trying to scrape through med and not even knowing what I was missing. But you have...\" She paused. \"I apologise for the metaphor, but you have quite a gravity well of your own. The longer we're together the more I feel myself spiralling into your orbit. I don't want to be anybody's satellite, not even yours. I want to be your friend, and that requires...\"\n\nI'm no astronomer, but I knew enough of celestial mechanics to see where this metaphor was going. \"Distance.\"\n\n\"Distance. Yes. I've never really had the chance to find out what sort of person I am when I'm on my own. Do I want to get married and settle down with somebody, or be a celibate astronomy professor, or\u2014I don't know. I think I need to find that out. But as long as I'm with you it's much too easy just to fall into being what you need me to be.\"\n\nShe rolled over to face me, and I could see the anxiety in her face. \"I don't know how to say this. I don't want to hurt you. But I can't be in your debt more than I already am. You'd be moving away from your home, your family, your friends. From Lucy. I can't replace all of them. I loved being your once-a-fortnight but I don't think I can be your everyday. We made a finite commitment and I want to keep it finite.\"\n\nBut this is less than what we agreed on, I wanted to say. It was supposed to be until you finished your doctorate, but we've been on hiatus since August. Wanted to say, but didn't, because occasionally I remember there's a difference between what's true and what's helpful, and because neither of us could have anticipated what a shit-show these last months would be.\n\nAfter a long silence she added, \"I'm sorry.\"\n\n\"Don't be,\" I said reflexively. The part of me that was Miriam wanted her to be, wanted control, wanted dependency. But most of me was frozen in that long moment of shock that comes after an injury, before the pain has reached the brain. In lieu of an emotional response I couldn't yet marshal, I channelled the received wisdom of a hundred and one advice columns I'd read over the years. \"It's...it's your choice to make.\"\n\nYes, that sounded like what a mature adult would say.\n\n\"I didn't want to have this discussion today.\" She sounded weary. \"I was trying to work out when to tell you and how.\"\n\n\"It doesn't matter,\" I said. Did it? I couldn't tell.\n\nLater, she said, \"I think perhaps I should go now.\" \n\nI didn't argue. I saw her out, telling her \"I'll be okay\", and then sat down trying to understand whether I actually was okay.\n\n* * * * *\n\nI was sad, and I wasn't sure why.\n\nObviously it was to do with Anjali, I'm not that obtuse. But I was having trouble unpacking it. I was still trying to figure it out a few days later when Trev tapped me on the shoulder, late one afternoon after my minions had gone home, and asked, \"Talked to Lucy lately?\"\n\n\"Uh, no.\" Come to think of it, I didn't recall seeing her since the previous week.\n\n\"Might be an idea.\" He was gone before I could ask more questions.\n\nI took the hint and phoned her. The phone rang and rang, and I was about to hang up when she finally picked up.\n\n\"Yeah?\"\n\n\"Hi, Lucy?\"\n\n\"Yeah.\"\n\n\"It's Sarah.\"\n\n\"Yes, I know.\" A pause. \"What's up?\"\n\n\"Uh...are you okay?\"\n\nA longer pause. \"Been better.\"\n\n\"Have you been sick? I'm sorry, I've been caught up in things the last few days, didn't\u2014\" I was about to say didn't even notice you weren't around but some instinct of caution suggested that maybe that wasn't the right thing. \"Lucy, what's up?\"\n\n\"I've been a bit...under the weather.\"\n\n\"Oh, I'm sorry. Is there anything I can do for you?\"\n\n\"No, I...\" She trailed off, and I thought one of us had lost signal, before she spoke again. \"Actually, you could come over. If you liked?\"\n\n\"Is that...I don't quite understand. Are you asking me to come over?\"\n\n\"Yes?\"\n\nShe sounded small and sad, not the Lucy I was used to. When she opened the door to me an hour or so later she seemed somehow shrunken. \n\n\"Come in,\" she said. \"Sorry about the mess.\" It wasn't that bad overall\u2014a couple of mostly-empty take-away containers here, a coat on the floor there, several unopened newspapers on the table\u2014but what I did notice was a lot of empty bottles, more than seemed healthy.\n\nI wanted to ask \"So what's up?\" But I wasn't altogether sure if Lucy was ready to answer that question openly and I felt that by asking too soon I might push her into evasions that she couldn't back out of.\n\nSo I said nothing. I accepted her offer of a water, and sat down opposite her in the lounge room, and waited until she filled the silence.\n\n\"Problem with this place,\" she said eventually, \"is that Vic and Jeremy keep the liquor cabinet rather too well stocked.\"\n\n\"Ah.\" \n\n\"I was doing so well, and then...bunch of stupid little things. Couldn't get to sleep, had a glass of red to take the edge off, and...here I am.\" She waved her hand at the empties.\n\n\"Oh dear. I'm sorry to hear it. If you need somebody to talk to, you're always welcome to ping me.\"\n\nShe gave me a hard stare, and said, \"I did.\"\n\n\"What?\"\n\n\"Friday night. I messaged you.\"\n\n\"Did you\u2014\" I looked at my phone. \"Oh shit, you did. So sorry. There was a lot going on.\" I'd been going over last-minute stuff, preparing for my talk with the Kapadias. I faintly remembered seeing the message notification, thinking I'll check that later. I never had done.\n\n\"Yeah.\"\n\n\"I really am sorry. I was hyperfocusing on...stuff. Uh, stuff you asked me not to involve you in.\"",
        "\"Mmm-hmm.\"\n\n\"And then, uh, Anjali and I had a talk. She told me...I can't remember if I discussed this with you before. A while back I offered to go to Switzerland with her for a while, maybe share a place. She said no.\"\n\nLucy nodded. \"She called me last week. She was worried about how you'd take it. How are you taking it?\"\n\n\"Not sure. Feeling sad but I'm not sure exactly what part I'm sad about. I don't know if it's about losing what we had or about...I guess it was a bit of a fantasy, the Switzerland thing, not having to deal with her parents and not having to hide. Or maybe ego.\"\n\n\"I wouldn't be upset if you told me you were a little bit in love with her.\"\n\n\"Maybe a little?\" I remembered, belatedly, that going to Switzerland would have meant not being with Lucy. Somehow I had never joined those dots; I had worked out a solution for me-and-Anjali without ever considering what it would have meant for me-and-Lucy. Tunnel vision. \"Shit, I'm sorry, I came here to listen to you, not to dump my stuff on you.\"\n\n\"It's okay.\" She sighed. \"Better than me gabbling about things I fucked up years ago. Look, I don't know if it's any comfort, but maybe you should be a little proud that she said no to you.\"\n\n\"What? Proud?\"\n\n\"Easiest way to hang onto somebody,\" she said, refilling her glass from the tap, \"is to make them think they can't live without you. I think you have enough sway over Anjali that if you'd told her that, she'd have believed you. But you helped build her up into the kind of girl who's able to say no when she needs to. Even to somebody she admires. Isn't that something to be proud of?\"\n\nI frowned, trying to make sense of this unexpected paradox. \"I can't tell if you're serious or messing with my head.\"\n\n\"Not something I'd joke about. I know what she means to you. Well, a bit of it, anyway.\" She was fidgeting in her chair. \"Hey, can we go for a walk? I need to get out of here, I think.\"\n\n\"Sure?\"\n\nSo we went for a stroll around the neighbourhood, down to an old children's park. It was just beginning to drizzle, cold spring rain, but we were dressed for it.\n\n\"I broke up with Pippa three years ago last Thursday,\" she said. \"Or was it four? I remember the date, right now I'm fuzzy on the year. Anyway.\" A loud sigh. \"Took her years to forgive me. Sometimes it still feels like I made the wrong call. But I just couldn't go on the way I was. Needed to go do something with my life, even if it meant leaving her behind. Sarah, listen, Anjali asked me what to do, I told her that if she needed to go then she should do that. I swear I wasn't trying to break you two up but...I had to tell her. I'm not going to lie to you about it.\"\n\n\"It's okay,\" I said.\n\nShe peered at me. \"I can't tell if you're mad at me. I'm not bad at reading people but sometimes you're a tough one, Sarah.\"\n\n\"I'm not mad,\" I said. \"And I promise if you want to know, you can ask and I will tell you. No, I'm sad. Still working through it. Don't blame you though.\"\n\n\"Promise?\"\n\n\"Promise.\" I took her elbow, pulled her close as we stood to the side of the path letting a cyclist zoom past. \"And Lucy, if it happens again, if you message me and you don't hear back from me...please please call, or whatever it takes to get my attention. I swear it's not because I mean to ignore you, just sometimes I get tunnel vision and it takes a lot to get through. But you have permission to nag me if I need to.\"\n\n\"I'll try to remember that.\" She smiled sourly. \"I'm not great at asking for help. Feels like I'm imposing, and I don't want to wear out my welcome.\" I started to argue, but she cut me off. \"I know it's irrational, but sometimes the feelings are louder than the facts.\"\n\n\"Anything I can do?\"\n\n\"Maybe, uh...it feels like it's always me making contact, arranging to hang out, asking if you want lunch. Then the insecurity starts feeling like you're just saying yes to spare my feelings.\"\n\n\"Oh! So if I initiated that more? I can do that.\" I took out my phone. \n\n\"Yes, that\u2014\" She stared at me. \"Sarah, are you setting a calendar reminder for talking to me?\"\n\n\"Yes? Is that bad?\"\n\n\"No, I\u2014well, I guess, whatever works.\" \n\nI nodded. We were at the park now and without consciously thinking about it we'd slowed down, just ambling around the creaky swings and slippery-slide, wet tanbark underfoot. \"Lucy, how serious is the drinking?\"\n\n\"I've been worse. Could be better. Running low on sick days for work. Usually it's fine, just sometimes something catches me, and I tell myself I'll just have one this time, and it's never just one. If I was staying in a place of my own, I'd just keep it dry and reduce the temptation, but this one came pre-stocked.\"\n\n\"I have\u2014\" I was about to say room in my apartment and I can keep it dry easily enough but that would have been a terrible idea, rushing from one thing into another before the dust had even settled. Instead I stopped for a moment, unsure what to do with the sentence, until my brain supplied something else. \"I feel like you're the sort of person who's better at keeping promises to other people than to herself.\"\n\n\"Fair, I guess.\"\n\n\"Here's an idea, tell me if it's stupid. I come around once a week, I take a count of all the alcohol in the house, I see whether it's changed since last time. If it hasn't, that will be great. And if it has, well, I'll keep an eye on things and I'll nag you if it looks like it's getting out of hand.\"\n\n\"You'd do that?\"\n\n\"Uh huh.\"\n\n\"You're trusting that I wouldn't go out and buy stuff to replace what I've had.\"\n\n\"I'll ask you then.\"\n\n\"How will you know if I'm lying?\" \n\nI shrugged. \"I trust you. And, tell you what, when do your aunt and uncle get back?\"\n\n\"Just after Christmas.\"\n\n\"If you make it that far without slipping...you get a reward. Your choice, within reason.\" \n\nShe looked at me for a while, eyes narrowed, and then grinned. \"I know exactly what I'm asking for.\"\n\n* * * * *\n\nThe last few months of 2017 were a peculiar time, one of those times in life where everything in flux and you can only wonder what it's all going to look like when the music stops. \n\nThe marriage survey went on. I couldn't walk down the street or switch on the TV without being smacked in the face with somebody's opinion about whether people like me were a threat to the fabric of \"the family\". I very nearly invited one of my co-workers to fuck off when he started making cracks about trans people, but settled for just playing dumb and saying \"I don't get the joke, can you explain?\" until he got uncomfortable and fucked off of his own accord. Since I wasn't seeing her any more, I redirected my Anjali money to the equality campaign. I felt sick to my stomach on the day the results were announced, and then elated when I heard we'd won, and then I got maudlin thinking about all the people who'd been waiting decades for that right and the ones I'd known who hadn't quite made it. \n\nI made the effort to check in with Lucy most days, and once a week on Tuesday nights I'd drop over to audit her aunt and uncle's liquor supplies. She slipped more than once, but each time she fell off the wagon she'd tell me about it before I could even ask, and these setbacks were shorter and shallower than before. We'd take turns to make dinner, and sit and watch movies and talk about work or her or me, and it didn't feel at all the same as spending time with Anjali. \n\nWhen I was eight I went through a big Superman phase. It wasn't that I wanted super-strength and x-ray vision, and I wasn't yet ready to appreciate his quiet implacable goodness. Rather, he felt a kindred spirit to my own sense of alienation, growing up so far from a home that no longer existed. \n\nAt eleven I discovered Doctor Who, starting with the telemovie and then working my way through novelisations from the school library. I was fascinated by the Cybermen, humans become machines, and equally so by the Doctor, last of his kind.\n\nAt twenty-one I found it once more in Bowie as The Man Who Fell To Earth, yet another alien whose disguise as a human becomes a prison. \n\nThen came Anjali, and from our first meeting I knew she was one of my kind. For all the differences in our backgrounds, speaking with her came naturally and easily in a way it seldom did with others. With her, I never felt like I was translating myself in order to be understood.\n\nI was intensely fond of Lucy, but there was no doubt that she and I were made of different stuff. When I was with her, I knew I was in the presence of one of the locals. It took me quite some time to realise what this particular local was about.\n\nLucy would share her favourite music and movies with me, and watch my reactions, then ask me afterwards what I'd thought about them. Or we'd play a board game, and afterwards she'd ask me why I'd chosen one particular gambit instead of another. Or, on those occasional days when her work had intersected with mine, she'd ask me what I made of the discussions we'd had with others. \n\nEventually I realised what the point of all these questions was: to learn my language.\n\n\"I had so much difficulty reading your expressions,\" she said. \"Normally I'm good at it, but I kept misreading you badly. For a while I thought it was just a matter of learning your tells, but instead, the longer I knew you, the harder it got. Instead, I thought, maybe I should just ask you.\"\n\nAt the time I just nodded. But a week later in the middle of some other, unrelated conversation, I replied: \"I think I know why it got harder to read me.\"\n\n\"Oh?\"\n\n\"Trust. When somebody's a stranger, I put a lot of work into remembering to smile and manage my tone of voice and all the rest of it. But the more I trust you, the less I think about what I need to project to you, and the more I can just focus on what you're saying and what I think about it.\"\n\n\"Huh. Okay, that makes sense...\"\n\nAnd over time, she got better at it, not by learning how to interpret my face, but by hearing how I thought. It still didn't come as naturally to me as hanging out with Anjali. But some things have to be worked for. \n\nHad it been almost anybody else, that level of attention might have been creepy, being studied like some rare beetle. But from Lucy it felt like a compliment: You are worth learning. And perhaps the reason it took me so long to recognise what she was doing, learning my ways, how to communicate with me, was that I'd only ever seen it from the other side.\n\nI'd spent a lifetime learning hacks for social situations. Training myself to make eye contact, but not too much. Reading books on body language to understand what others might assume if I happened to fold my arms or stimmed with a pen while somebody was talking to me. Memorising scripts for sending an email (always begin and end with a salutation) and for a good-bye and for all the other occasions where you can't say what you actually want to say. \n\nLike almost every autistic woman, I'd taken it for granted that it was my eternal duty to bridge the chasm between me and my neurotypical fellows. I'd never expected to find somebody willing to put in the work from the other side to meet me halfway. Still nowhere near as easy as being with somebody who was born on the same side of things as me; it's not the kind of thing you can take a crash course in, and the self-examination required to answer Lucy's questions was challenging in itself.\n\nBut some things feel more valuable for having worked for them, and it is such a feeling to learn that somebody considers you worth working for.\n\nWe were cautious. We were friends, and we were co-workers, and we didn't want to prejudice either of those things. Moreover, Lucy had her own work to do. During one of our deep-and-meaningful chats, she told me that a lot of her issues with alcohol came down to self-medication: she had difficulty sometimes keeping her emotions in balance, and when they got too loud for her to deal with, alcohol was a way of blunting things. From my own experience with stimming I knew all too well that taking away somebody's coping mechanisms, without addressing the reasons why they need a coping mechanism, is a recipe for disaster. So Lucy needed to navigate that, getting to grips with the situations that made her need that self-medication, and figure out other ways for dealing with that. \n\nIt was a tough enough time for her without further messing with her emotional equilibrium. So we took things very slowly, and didn't talk about how our regular Tuesday evenings were beginning to feel more and more like dates. But we were slowly drifting closer together, and I was starting to think I might like that. \n\nAnd yet, and yet, and yet.\n\nI missed Anjali. I liked Lucy more and more with every time we talked, but it didn't make me miss Anjali any less. \n\nWe weren't dating and she'd had to give up the evenings at Games Pixie, but we were still in touch online. We'd chat regularly about German separable verbs, about how she was structuring her thesis, about anything other than us. I found myself missing the smell of her hair and the warm presence of her body against mine. I wrote a lot of ill-advised flirtations and deleted them all unsent. Whatever it was that I felt for her, I couldn't quite let it go.\n\n* * * * *\n\nLucy and I bailed early on the office Christmas party that year. It was too loud to talk comfortably and well-meaning people kept offering us drinks; I could see Lucy getting antsy, so I made excuses for the both of us.\n\nThe night was still young. I didn't want to ditch Lucy but I didn't fancy our chances of finding anywhere quiet and non-boozy, not in party season, so without thinking I asked her, \"Want to see my place?\"\n\nShe took a moment to respond, which gave me just enough time to belatedly recall that this was a standard form for a pickup line but not enough to do anything about that before she said, \"Sure!\" By the time I could think of the right words to clarify that I'd just meant it literally, the moment had passed.\n\nI gave her the tour and then we sat by the window, devouring a couple of ice creams and looking out over the city. \n\n\"Well,\" she said, \"you've been at P-K a year. What do you think?\"\n\n\"Starting to settle in. It was all a bit terrifying at first\"\u2014she knew how I felt about change\u2014\"but I'm getting the hang of it. With your help.\"\n\n\"It's been nice having you around,\" she said. \"And full of surprises.\"\n\n\"You're telling me. Thanks for being there for me.\"\n\n\"Likewise\u2014oh, look!\" \n\nOut at Docklands, over the water, purple-blue-green fireworks were blossoming in the sky.\n\n\"One of the restaurants does them,\" I said. \"Gotta lure people to Docklands somehow. I get a nice view of the New Year's fireworks from here too. If you're not doing anything\"\u2014or if you're avoiding parties, I didn't say\u2014\"you could come by for that.\"\n\n\"Oh! You know, I'd love that.\" She touched my hand, just for a moment, and it was nothing she hadn't done a dozen times before during our lunches, but this time it felt different. \"This is a lovely place you've got here.\"\n\n\"I'm fond of it. Hey, your aunt and uncle get back some time soon, right?\n\n\"Yes, on the twenty-eighth.\"\n\n\"So you're moving on? How's the house-hunting going?\"\n\nShe made a face. \"I hate real estate agents so much. Everybody talks shit about lawyers, but we're not as bad as real estate. Nowhere near as bad.\"\n\n\"That good, eh?\"\n\n\"Don't get me started. And it's a bad time of year for it.\"\n\nMaybe I shouldn't have offered, but I did. \"If you need a place to crash for a while, while you're looking...\"\n\nShe took her time answering. \"That's so kind of you, but I'm sure they'll let me stay on for a couple more weeks until I can find somewhere.\" And then, she added, \"Also, Sarah, if I were to move in with you, I don't think I'd want it to be as a temporary thing.\"\n\n\"I understand\u2014\"\n\n\"And even if you were offering that\"\u2014which saved me having to decide whether I was offering\u2014\"I'm not quite at the place to be making that kind of long-term decision yet.\"\n\n\"Fair.\" I felt relieved. \"Honestly I still need to get my head straight about some stuff myself.\"\n\n\"Anjali?\" she said.\n\n\"Yeah. I still...I always knew it had to end at some point, but it was sooner than I was counting on, and that still hurts. She's going away in a few months and I still can't let go of it.\"\n\nLucy let me babble on for some time, and when I was done, she leant in and said gently, \"What do you think she feels about it?\"\n\n\"I...I don't think she does?\"\n\nLucy shook her head. \"Sarah, Sarah. I've told you before, that girl adores you, and from what she told me, she was quite enjoying your arrangement too. Not just for the money. What makes you think she wouldn't be sad about it too?\"\n\n\"She's never said anything about it\u2014\"\n\n\"To you, maybe. I talk to her now and then, and she asked after you. Wanted to know how you're going, if you were okay. Doesn't mean she wants to marry you, but Sarah, I don't think you're the only one there who's sad about how things ended.\"\n\n\"Okay.\" I absorbed that information. \"I'm sorry, Lucy, I know it's weird for you being dragged into this\u2014\"\n\n\"I don't mind weird. It's not bad weird.\" She patted my hand again. \"Let's get this straight, Sarah. I don't do jealousy. Anjali's not my rival, and you liking her, that's just good taste. Wouldn't bother me if the two of you were still sleeping together. Where it becomes an issue is when you get so wrapped up in moping over her that you can't be present for me\u2014\"\n\n\"Okay.\"\n\n\"\u2014and that's how I feel things are at the moment. Would that be a fair comment?\"\n\n\"Yeah. Yeah, it is. I'm sorry. I just haven't figured out how to quite get past it.\"\n\n\"Mmm-hmm. Actually, I had an idea about that. I don't know if it's what you need, but...\"\n\n\"Okay?\"\n\n\"You've got some leave saved up, right? You transferred it over when we merged.\"\n\n\"Yeah. Couple of months worth.\"\n\n\"And Anjali submits her thesis in February, so that the referees have time to review it before she starts in Bern in April, right?\" A couple of months was a short turn-around for a review, but I gathered one of Anjali's reviewers was part of the same group in Bern she'd be working with, so we weren't expecting too much trouble on that front.\n\n\"Yes, she\u2014oh, I think I see where you're going with this.\" \n\n\"Take a holiday. Spend some money, go somewhere nice with her. God knows the poor kid deserves it. Say good-bye properly.\"\n\n\"Really? You think she, she'd go for that?\"\n\nLucy shrugged. \"Maybe. Guess you'll never know if you don't ask.\"\n\n\"I think...\" I tried to come up with reasons why it wouldn't work, but in the end I realised it wasn't actually my job to reject the idea. \"That really would be lovely, if she's up for it. But Lucy, are you sure you're okay with it?\"\n\n\"Told you, I don't do jealousy. But, look, if you want to make it up to me, I'll settle for the same thing I was going to ask for if I hadn't fucked up...you know...staying on the wagon.\"\n\n\"I wish you wouldn't beat yourself up about that. Everybody gets to fuck up now and then. Give yourself some credit for all the days when you didn't. But okay, I'm curious to know what you were going to ask for.\"\n\n\"I guess you'll find out when you get back.\"\n\n\"Deal.\" \n\n* * * * *\n\nI phoned Anjali the next day. After recent experiences, I still had qualms about committing certain things to email, and besides I knew if I tried to write an email I'd get stalled trying to find the perfect words. Better to get the words out. Heart in my stomach, I told her what Lucy had suggested, finishing with, \"but only if that's something you'd want to do.\"\n\n\"Hmm,\" said Anjali. \"I need to think about that. Can I let you know?\"\n\n\"Sure,\" I said weakly, and then, \"well, I'd better go and leave you with it.\"\n\nI was braced for the worst. One of those long silences that stretches out for weeks while I try to guess whether they've forgotten, or if they've already decided no and are just waiting for me to lose interest so they don't have to say it.",
        "But it was only half an hour later that my phone chimed with her reply. Yes. If the timing works, I would very much like to do that. \n\n* * * * *\n\nAt the end of a PhD, it's customary to do a presentation on one's work. In some countries that happens as part of a viva voce, an oral examination where a panel of expert reviewers interrogates one\u2014sometimes for hours\u2014aiming to identify every possible flaw in the work. That kind of peer review is important, but for those who don't think well on their feet (like me) it can be a terrifying prospect.\n\nIn Australia, the process is a little gentler. The real peer review is commonly done by correspondence, so the candidate gets to answer criticisms without the pressure of time and a live audience. But it's still expected that we'll give a lecture. For Anjali that meant presenting to an audience of approximately a hundred of her colleagues, fellow students, juniors, and anybody else who happened to show up. Like me, for instance.\n\nThrough truly heroic efforts and some ruthless editing she'd managed to submit a draft on her thesis on the afternoon of the last day of February. The seminar was a week after that, just enough time for her to put a presentation together. \n\nI'd taken the morning off work and showed up a little early to give her moral support. It shouldn't have surprised me to find that she'd made herself a new dress. This one was less ornate than some of her creations, a simple cut in canary yellow, but it framed her perfectly and set a cheerful tone for the occasion without being distracting. After wishing her well, I found myself a seat up near the back of the auditorium and waited for the coordinator to introduce her.\n\nAnjali had long ago passed the point where I could keep up with her research, and it wasn't the most polished of presentations; she was nervous and spoke too softly and too quickly. But as she went on, flipping through slide after slide of algebra and simulation plots, I could see her beginning to forget the audience and hear the joy creeping back into her voice. \n\nAnjali spoke about stars almost massive enough to collapse into black holes, and about their atoms being crushed together into iron nuclei and then crushed further into a gigantic ball of neutronium. She talked about how she'd measured the spin of her dead stars to detect quakes as their material settled, and from there how she'd estimated where the border lay between the iron zone and the core. \n\nI only understood about a tenth of it, but there was no missing the rhapsody in her words as she spoke. I stole a glance around the auditorium to see if anybody else was moved by it as I was. Many of the listeners wore a politely glazed expression, but a few of them were nodding enthusiastically. I recognised her advisor Professor Cheng, and a couple of her friends who I'd seen on her Facebook at one time or another. \n\nHalfway through, the door bumped open behind me and a late arrival snuck in. He'd picked my row so I wriggled over a couple of seats to make space for him. He was a handsome young Indian man, and he nodded thank-you to me then did a double-take, just at the same time I was thinking he looked familiar. But I couldn't quite place him; just as with Lucy a year earlier, I didn't have the right context.\n\n\"Sarah?\" he whispered.\n\n\"I'm terribly sorry, I'm bad with faces...\"\n\n\"I was a lot younger last time we met.\"\n\n\"Oh! Mahesh!\" Anjali's brother! He would have been a gangly fifteen-year-old when I'd seen him last. \"She'll be so glad you could make it\u2014hey, aren't you getting married soon?\"\n\n\"Next week.\" Then somebody shushed us and we watched the rest of it in silence, Mahesh filming the talk on his phone. But after the talk, while one of the emeritus professors up the front was offering an unnecessarily long \"this is more of a comment than a question\", Mahesh leaned over to me. \"I'm just up for the day, the parents don't know I'm here.\"\n\n\"Well, they're not going to find out about it from me. I'm kind of persona non grata with them for the moment.\" For a very long moment. \n\n\"So I heard.\"\n\nTo everybody's relief, the emeritus professor eventually finished his not-a-question and the host congratulated Anjali. As most of the audience started to leave we worked our way against the flow to where she stood at the podium packing up her laptop.\n\nAnjali caught sight of me first. \"Hello S\u2014MAHESH!\" She pounced on him and hugged him hard enough to lift him off his feet. \"You came! You didn't tell me you were coming!\"\n\n\"I didn't want to let you down if I couldn't make it. But I owe you for all the times you helped me with my physics homework. So proud of you, big sister. Or is it Doctor Anjali now?\"\n\nShe hugged him again, and when she pulled back her eyes were suspiciously wet. \"You're my favourite brother.\" An in-joke; he was her only brother.\n\nThe three of us went to lunch together. Anjali peppered Mahesh with questions about his wedding arrangements, and he promised to send her photos of everything. Then he asked, \"So you're really going?\"\n\n\"I am, baby brother. Five days to pack everything up and then we're flying out.\"\n\n\"Both of you?\" He looked between me and Anjali, and she nodded.\n\n\"Sarah has work stuff to do in Amsterdam and she wanted a holiday anyway. So we're visiting Iceland for a couple of weeks, and then she goes on to the Netherlands and home, and I go on to Switzerland. With luck, my things will have arrived by then.\"\n\nThis was all true, although the idea of visiting our Schiphol partners had been very much an afterthought. I had originally suggested Germany, but Anjali had balked: \"You speak the language much better than I do, and you've lived there. If we're doing this I want to do it together, not you as the host and me as the guest.\" So we'd settled on somewhere equally foreign to both of us.\n\n\"Not that it's any of my business,\" Mahesh said, \"but are you...\" He trailed off, then shook his head. \"You know what, never mind.\"\n\n\"Hmm?\" said Anjali.\n\n\"I just remembered that what I don't know can't be tortured out of me. So I'm not going to ask. But I hope you have a terrific time. Any idea when you'll be back?\"\n\n\"Probably not for years,\" Anjali said. \"I'm sorry. I'll miss you, baby brother, but\u2014you know how they are.\"\n\n\"Then maybe I'll come visit you some time...\"\n\n\"Oh, I would love th\u2014\"\n\n\"...like next time I have a physics problem.\"\n\n\"Brat.\" She swatted the air in front of his face.\n\n* * * * *\n\nWe flew economy, because work wasn't paying for this one. Anjali, who had been flat out for days getting her stuff moved and her flat cleaned for final inspection, fell asleep on my shoulder before we'd even taken off and slept through most of the first leg. We changed flights in a country where kissing one another could have had us jailed\u2014hooray for travelling while queer\u2014and then it was my turn to sleep cuddled up to Anjali. \n\nWe had another change in Copenhagen, where we learned that our flight onwards to Keflavik was to be delayed by a massive storm, leaving us with eight hours to explore the airport. While I hopped online to let our B&B know we were delayed, Anjali explored the airport's Lego shop to find a souvenir for Mahesh, which left us about seven hours to kill.\n\nAnjali had been wearing her scarf all along; I'd registered the fact but not really noticed it until we were browsing through a chocolate shop together, and then I suddenly thought: I can do this. I am allowed. Nobody here knows us. I took a deep breath, reached down, and clasped her hand in mine. Just for a moment she stopped what she was doing\u2014surprised, I guess\u2014and then she slid her fingers between mine and squeezed, and I felt my heart jump a little. \n\nI spent the next few hours with what I assume was a stupid grin on my face. We were holding hands in public, where anybody could see, and it was okay! Later, while we were sitting at a cafe, she rested her hand on my knee, and I felt giddy. It had been a very long time since I'd been able to tune out that voice that says what if somebody saw you? \n\nWe flew in through the remnants of the storm, and the last few hours were alarmingly bumpy. Anjali and I held hands again through the worst of the weather, and I couldn't tell you whether it was for her sake or mine. But we made it to Keflavik in one piece, as did our luggage, and after one last shuttle ride to Reykjavik we made it to our B&B somewhere around eleven at night. A kindly old lady showed us up two flights of stairs to a small but cozy room and there we crawled into a double bed to sleep the disordered sleep of the badly jet lagged.\n\nWe spent the first couple of days exploring Reykjavik, taking it easy while our body clocks adjusted, clomping around town seeing the sights and getting a feel for the weather. We visited the Icelandic Punk Museum (yes, that's a thing), and the Parliament building (it's a Thing), and the Phallological Museum (lots of things), and at that point I had to tell Anjali that there would be severe penalties for any further \"thing\" jokes. For some reason this did nothing at all to dissuade her, and I was regretfully obliged to deliver several spankings once we were back in our lodgings.\n\nOnce we'd settled in a little and our body clocks had adjusted, we began to explore further afield, taking a coach tour of the Golden Circle and then hiring a car to drive east through gravel and lava fields to J\u00f6kuls\u00e1rl\u00f3n where ice floats and cracks unquietly in a glacial lagoon.\n\nYou'll find better descriptions of Iceland elsewhere; I'm a mathematician, not a travel writer. But what I remember most about it (the thing I remember most about it, Anjali would have said) was contrasts. The black rock and the white snow; the pure glacial water that ran from the cold taps, and the sulfur-stink from the hot; warm and welcoming people, descended from murderous raiders and their slaves. I come from an old continent where the earth fell asleep long ago; in Iceland, the land is still growing, sometimes violently so. \n\nThe sweetness of having Anjali-Lily with me, all day and every day. We discovered new things together, we marvelled at waterfalls and geothermal plants and handcrafts, we huddled together against the wind. In the nights, and occasionally in the mornings, we\u2014made love? Fucked? I am not sure what to call it. I could not remember being happier.\n\nAnd as the days ticked by, and I counted down our remaining time, I could feel my heart hurting with the anticipation of losing her: verlustangst, the Germans call it. Every now and then as we lay together, or as we talked, it would sneak up on me, and I would try to hide that sudden twinge from Anjali.\n\nBut she noticed. \n\nTwo days before the end, we visited the Blue Lagoon. It is a cunning piece of work: a large pool in the rock where silica dissolved in heated water colours it blue, and for a sum of money you can bathe there. From reading the brochures, it would be easy to come away with the impression that it is some miracle of nature, but the truth is rather more prosaic. \n\nNearby is a power station, which draws up superheated steam from deep in the rock and uses it to spin turbines. In the process, the water cools to a modest eighty-odd degrees Celsius, and some of that is piped down to Reykjavik to provide hot water and to de-ice the roads. But the rest needs to go back into the water table, so what do you do? You dig a big pool, and fill it with the waste water, now cooled to human-friendly temperatures, and let it soak back into the ground. \n\nAnd if you are a very shrewd businessman, you charge tourists to soak in the pool and sell beauty products based on the silica. The advertising doesn't lie, but it doesn't exactly emphasise that one is paying to bathe in power station runoff.\n\nI knew, but didn't mind at all. The water was no less warm and relaxing for that, and I admired the efficiency of it all. We soaked in it for hours, soothing muscles tired from a hard drive the day before\u2014not a long distance, but it had been snowing hard and I'd had to slow to a crawl. The snow was still falling, and we had flakes in our hair, so we sat there with just our heads sticking out, averaging a very pleasant temperature indeed.\n\nThere was a poolside bar, where one could buy drinks without leaving the water, and at one stage Anjali went off to get cocktails for us both, returning to catch me in a pensive moment.\n\n\"You're sad,\" she said, handing me my glass and then slipping her arm around my waist.\n\n\"I am. Just thinking that it's almost over. I keep wanting to do stupid things. Ask you to marry me and stay with me. I know that's not the answer, I know that's not what you want, I don't think it's even what I want. And there's Lucy. But...god, I'm going to miss you, Anjali.\"\n\n\"I will miss you too.\" She pulled me in close, head on my shoulder, and after a few seconds I felt a wetness on my skin that was neither snow nor volcano-water but something of more human origin. \"I hate that things have to end. But...\"\n\n\"I know they do.\" I settled my drink on a rock by the poolside, but it was uneven and more slippery than I'd allowed for; the glass toppled and spilled. \"Shit. I don't...I'm not asking you to stay. I know it can't happen. But I do love you, Anjali. You'll always be important to me.\"\n\nShe set her own drink aside, with more success than I had achieved, and hugged me tight as she kissed me on the lips. \"You too,\" she murmured. \"I don't\u2014I don't love you like Valentines and wedding rings, not that kind of love. But I love you, Sarah. I hope you know that.\"\n\n\"I do.\" We held one another as the volcanic heat seeped through our bones, and the tangled ball of all the incompatible things I wanted and the ones I couldn't have...well, it was still a tangled ball of complications that I might never fully unravel. But I started to feel that perhaps it was something I could lift, and take with me to wherever I was going next.\n\nFor now, though...I was tired, and verklempt, and vaguely aware that people were probably staring at us. \"Is it okay if we go soon?\"\n\n\"Of course.\"\n\nThat evening, back in our room after dinner, I was still moody and down. I'd stripped off and crawled under the quilt; returning from her evening shower, Anjali slipped in behind me and cuddled up against my back. \n\n\"Once upon a time,\" she whispered, \"there was a fairy named Lilabel, daughter of the Dandelion King, who was perhaps not as sweet and innocent as people thought her to be. And there was another fairy, Lady Tanglespine, who was perhaps not quite the villain that people thought her to be.\"\n\n\"Oh?\"\n\n\"One day it happened by accident that Lilabel fell into Lady Tanglespine's clutches. Or, who knows, perhaps she allowed herself to be ensnared? Perhaps she had grown tired of her father's court and wanted to see the world beyond his realm? Perhaps she was curious enough and bold enough to wonder just what Lady Tanglespine would do to her?\"\n\nHer hand was a light presence on my hip.\n\n\"However it may have happened, she found herself bound to Lady Tanglespine's service for seven years, during which time she learned a number of very interesting things, and I hope I may say that Lady Tanglespine was satisfied with my\u2014with her service.\"\n\nShe paused, and I felt her lips brush the back of my neck. Her fingers were circling slowly at my hip. \n\n\"Sometimes that seven years felt like an eternity, and sometimes it felt like the blink of an eye. But eventually it came to an end.\" \n\nHer fingers slid over my back, coming to pause at the base of my spine; if I'd been a cat, she would have been stroking me just above the tail. \n\n\"At the end of the seven years, Lady Tanglespine told her, 'You have served me obediently, and you have acquitted your debt to me. You are free to go.' She led Lilabel to the border of her land, and the great thorn-bushes parted in front of her, and Lilabel stepped out towards the daylight. But when she had one foot across the threshold she looked back, and she saw Lady Tanglespine was weeping. So she turned, and said, 'If you wish it, I will stay one day more. Not as your servant, not as the Dandelion King's daughter, but as the one who has shared your bed these seven years.' Then she walked back into Lady Tanglespine's keep and the thorns closed behind her.\"\n\nHer fingers were stroking my arse and she broke off talking to nuzzle at my shoulders, her lips warm and alive and mine, not forever but for now. I reached back with my foot to nudge hers, bending one knee to allow her better access. She accepted the invitation and began to caress the sensitive skin at the inside of my thighs, and then she slipped her other hand under me and around to stroke my face. Her fingertips traced my forehead, my cheekbones, dallied on the tip of my nose, circled my lips. \n\nI didn't know whether I wanted to reciprocate or just to lie there and be pampered. I settled for stroking her hands as they moved over me and wriggling backwards to snuggle myself against her body. Her fingers pressed against my mouth, inviting my kisses, and her other hand now brushed through the fuzz of my mons in an exploratory pattern that gradually shifted downward. By the time she reached my vulva I was eager; I squeezed her hand tight against me and arched my head back to nip at her fingertips. \n\nShe stroked me slowly and gently, gradually increasing the pressure. It was very pleasant and moderately arousing, but it was only taking me so far; she was working left-handed and the rhythm wasn't quite right. Or perhaps my head was too full. After some time she noticed that we weren't getting anywhere\u2014not that we were in a hurry, mind\u2014and she paused, and said, \"What would you like, my darling Tanglespine?\"\n\nI rolled over to face her. \"What would you like, Miss Lilabel?\"\n\n\"I'd like to make you happy.\" She swept the hair out of my face. \"A girl could get used to taking orders from you.\"\n\n\"A girl could get used to bossing you around.\" I slid one hand around the back of her neck, like scrumming a kitten, and her eyes rolled back as I took charge. \"Show me that you know your place.\"\n\n\"Yes, Mistress.\" She gave me a quick peck on the lips and slid off the bed to kneel beside it, gazing up at me, ready. I swung my legs around to bracket her, ruffled her hair, and then pulled her into me. Her tongue was first, swirling, worshipping, and the warmth of her cheeks between my thighs, and the tickle of her hair over my knees; she'd tied it back but now I pulled it loose, teasing it out to spread like a blanket. \n\nI think perhaps that was always the magic of it for me: not just the feeling of taking her, but the knowledge that she'd given this to me, that no matter how far down I took her, I'd always bring her back again.\n\n\"Good girl...ah...good girl.\" Her fingers were in me now, curling gently, rhythmically, and she had her other hand on my thigh. I took it in my right, lacing my fingers between hers, and with my left I began to stroke my own breast, pinching my nipple, letting those little twinges of pain run down my body and collide with the slow lapping ripples of pleasure Anjali was giving me, merging together to form something that filled my body to bursting point. I squeezed her hand, and she squeezed mine, and the closer I got the slower and the gentler she went, bringing me to the edge and backing away, again and again, until I muttered \"please?\" and she wriggled her fingers and her tongue gave a little squirmy twist that brought me over the edge. I threw back my head and stuffed the back of my hand in my mouth to muffle the sound. \n\nAt length, when I'd regained some semblance of composure...I made her do it again. And when she was done, I pulled her up to me, all rumpled and sticky-faced and smelling of me, and I kissed her and threw her on her back and paid her back, biting at her breasts, leaving toothmarks on her skin as my fingers jerked her to a series of little paroxysms, and this time it was her turn to shove her hand in her mouth.",
        "We kept on, teasing and stroking and occasionally wrestling one another, until eventually fatigue caught up with us and we subsided into a slow-moving cuddle session drifting gradually towards sleep, murmuring affectionate and not entirely coherent things to one another. I was almost out when Anjali said, \"And afterwards, Lady Tanglespine showed Princess Lilabel to a different gateway, at the opposite end of her domain, and when Lilabel left for the second time she did not return to her father's kingdom.\"\n\nThat wasn't quite our last time\u2014we still had a day left, and we made the most of it\u2014but it's the one I remember.\n\n* * * * *\n\nMy flight left from a different gate to hers, and half an hour before. We scouted the two gates together, and then stayed together at mine until the last possible moment, and hugged one another goodbye. It hurt. like. fuck.\n\n* * * * *\n\nWhen I opened my suitcase in Amsterdam, I found a small parcel that hadn't been there when I packed it, addressed to me in Anjali's tidy handwriting. \n\nInside were two Lego figures, one a white woman (well, Default Yellow) in trousers, whose hair looked something like mine, the other a darker-skinned woman in a dress and, for some reason, a blue superhero mask. There was also a note.\n\nDear Sarah,\n\nI never quite knew what to call our relationship. There are so many different words and none of them quite fit. But then, words are just boxes we make up to put things in. If we don't fit in a box, that is a fault of the boxes and not of us. Pluto is Pluto, and strange and wonderful, no matter what we call it. I would not be the person I am without you, and I hope I have left my mark on you too. Just to say that you mattered to me, and you still do matter to me. Just because we can't be everything to one another doesn't mean we're nothing; just because it wasn't forever doesn't mean it doesn't matter.\n\nTake care, and don't be a stranger.\n\nI was going to give you the scarf back to remember me by, but I have decided that I want to keep it. I got you these instead.\n\nLove, Anjali.\n\nP.S. Ignore the mask, my options were limited so I had to cannibalise a Kamala Khan figure.\n\nI laughed, and then I cried.\n\n* * * * *\n\nI had four days of work time in Amsterdam. It had been two and a half years since my previous visit, and most of the people I'd met with last time had moved on to other projects, but Miep was still there, in a new and larger office.\n\n\"They were very happy with how I managed the project,\" she told me, \"and now I'm chief operations manager here. I understand you also have been promoted.\"\n\n\"I suppose I have.\"\n\n\"This worked out well for both of us, then. Shall we drink to that, after your presentation?\"\n\n\"Why not?\"\n\nI gave a talk to Miep's team, explaining how the facility management system worked\u2014at least, the bits it was useful for them to know\u2014and what its limitations were. From them I picked up several suggestions for future improvements and learned a few useful things about how the reality of the place compared to our mathematical model.\n\nI'd expected the drinks afterward to be a team event, but it turned out to be just me and Miep. Sitting in a booth in a brewhouse that was pleasantly quiet (by brewhouse standards) and dimly-lit, we chatted about our careers and then gradually the conversation drifted to life outside work, and family. She'd broken up with her partner a year ago\u2014I noticed her carefully skirting around any mention of gender\u2014and I said something vague about \"being at a transition point\". \n\n\"Where are you staying?\" she asked.\n\n\"Airport Sheraton.\"\n\n\"What's that like?\"\n\n\"Not bad. Standard hotel.\"\n\n\"I always find hotels are a little bit soulless.\" She finished her drink. \"You would be quite welcome to stay over at my place instead, if you prefer.\"\n\n\"Are you...\" I reran the conversation in my head. \"Miep, is that a come-on?\"\n\n\"It most certainly is.\"\n\nI had to think through my answer. I liked Miep, and Lucy had told me she wasn't the jealous type, and I was a long way from home. And yet...\n\n\"That is a very lovely offer, Miep, but unfortunately I cannot take you up on it. Things are complicated right now, but there's somebody waiting for me at home.\" Which was easier than trying to articulate: I find you attractive, and nobody would object if I did, but I am busy processing the end of one thing and the beginning of another, and there is nothing left over for this. \n\nBut I didn't want to hurt her feelings, so I said, \"I think I can do this much, though.\" I leaned in and kissed her, briefly but firmly. \"I hope that's better than nothing.\" And then I went back to my hotel room, which was clean and felt too large for one.\n\n* * * * *\n\nLucy was waiting for me when I cleared Customs. We hugged, and she ruffled my hair, and then drove me back to my place even though I could easily have taken the airport shuttle. On the way she asked me how the trip had gone, and I told her, and she nodded as I talked.\n\nAt the end, she said, \"Was it what you needed?\"\n\n\"I think so, yes. Thank you for...well, you know.\"\n\n\"I am glad. Now get some sleep.\"\n\nTwo days later, once I was a little less jet lagged, she dropped round for dinner at my place. After the meal, I said, \"So I believe I owe you a thing.\"\n\n\"I haven't forgotten. You said anything, within reason?\"\n\n\"Anything.\"\n\nShe studied me for a little while, then nodded. \"Sarah, would you tell me about your tattoo?\"\n\nTHE END\n\n* * * * *\n\nThis is an imperfect story. \n\nLast time I wrote a novel-length story for Literotica it took a little over a year. This one took more than three. Writing requires a lot of mental focus for me, and that's been in short supply even before the shit-show that was 2020. Plus, although this is about the same length as \"Stringed Instrument\", the structure is more complex and took a lot more thought.\n\nSarah isn't me, but there's a lot of me in her, and I'm not the same person I was three years ago. Some of the things I meant to do with this story didn't end up happening, either because they no longer fit the characters in my head, or because I thought of something better. There are parts of this that are rougher than I'd like, but an imperfect story completed is better than a perfect story that will never be finished. So here it is.\n\nSelf-censorship is a big part of the autistic experience. We get absolutely enthralled by something, be it Renaissance costuming or lizards or model railways, and we love to talk about the things we love...but we quickly learn that we have to choke that back or risk being seen as weird.\n\nIt didn't feel right to do that in this story. I needed to let Sarah be her authentic self. So I gave myself permission to let her talk about her passions for as long as she wanted. I'm sure that decision (not to mention my erratic posting schedule) has lost me some readers along the way. But for those of you who stayed to the end\u2014I appreciate you very much. Thank you for listening to Sarah's monologuing. I hope you've learned something useful about graph theory, container management, and/or German goth music.\n\nOne part of this story that's not based on personal experience is the sex-work aspect. Here I have benefited greatly from reading first-hand accounts from RL sex workers, and I'd recommend doing the same if you'd like to learn more about the complexities of the industry. This story sticks very much to the safe and non-confronting end of that industry, but all sex workers deserve to be safe and respected.\n\nThanks to everybody who beta-read, contributed advice, and pointed out problems in the story, including but not limited to AwkwardMD, LaRascasse, LesbianChickLit, stickygirl, Vix Giovanni, BrokenSpokes, Omenainen, Blind Justice, and my partner. Please check out their stories! And thanks to A. for vital Lego fact-checking. Details matter.\n\nLast of all, thanks to those of you who've read, voted, and/or commented on this series (please do vote!) and love to any of my fellow aliens who may have recognised a little bit of themselves in this."
    ],
    "authorname": "Bramblethorn",
    "tags": [
        "lesbian bdsm",
        "sex work",
        "lesbian",
        "lesbian sex",
        "bdsm"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/anjalis-red-scarf-ch-12"
}