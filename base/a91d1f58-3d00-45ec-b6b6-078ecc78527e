{
    "title": "Unity and Destiny Pt. 09",
    "pages": [
        "They met Lukas in Reno again, this time in some sort of warehouse set at the ragged edge of the city. Lukas didn't have many people with him, and Esther explained it was just as well. \n\n\"You are very stealthy,\" she said. \"But your men are not, not in the way they think they are. Not enough to help me very much when I must conceal them from the Mexican.\"\n\nBut of the four men with him, all were well-trained in combat, and Oscar and Frederick had modest Changes to help them. Better yet, Oscar and Felipe could pass for Mexican, something they might sorely need. Javier spoke only Spanish with Esther for the day, and she gritted her teeth, trying to make the words come out without her sounding like an idiot tourist, or someone who'd dropped out of the nineteenth century. Javier said her accent was impeccable, so at least there was that. Grace and Selena couldn't pass for Mexican any better than she could, but their Spanish was a lot more idiomatic.\n\nNicola knew Oscar, from the time she'd been with Lukas. Of Lukas's men he was the only one who didn't seem initially disdainful of their group. There were some padded mats that Oscar and the others had been using for training, and it gave Esther a guilty satisfaction to see Mark handle all of them with ease, even Lukas, who as Nicola indicated was a much better fighter than appearances suggested. Even Nicola fared acceptably against Lukas's men. Javier didn't bother to try, though, and Esther appreciated that decision. No one expected Grace and Kat to fight, or Raj, but she was learning it wasn't so easy for most men to be realistic like that.\n\nThen it was time for Nicola to test her subsonic disorientation, and finally for Esther to practice freezing them. She was so much better at it now, after all the practice the others had made her go through. She could hold the entire group of them frozen for nearly a minute, and she could have managed much longer if not for Mark and Selena. Those two required more focused effort.\n\nAfter that demonstration, there were no more smirks from the men.\n\nIt was when talk turned to the actual plan that they hit their first major argument.\n\n\"There are no commercial flights allowed except to a few designated cities,\" Lukas said. \"Mexico City is not one of them. This is why I asked Jackson for help.\"\n\n\"You told her where the Mexican is?\" Esther asked, her voice rising.\n\nHe frowned. \"I told her what I know, which as I said is very vague. Somewhere south or east of Mexico City, but not all the way to the Yucatan. It's still a vast area. Half of California in size, I suppose. It will aid planning tremendously if you would give a more precise location.\"\n\n\"I won't be precise until we're in Mexico. And we're not working with Jackson.\"\n\nLukas stared at her in his blank fashion. But she wasn't backing down on this.\n\n\"Jackson trusts me,\" he said finally. \"After Black Christmas, I began feeding her intelligence again. And she trusts you. Of course she is dangerous, as the incident with Mark showed, but she has resources and power that I no longer have access to. It will be much harder to operate in Mexico without tacit approval of at least some part of the American government.\"\n\n\"Virtually impossible,\" Oscar added. \"I'm not sure it's even worth trying, if we'll be dodging American military the whole way there, along with the Mexican's supporters and all the other factions.\"\n\n\"I hesitate to bring up our previous raid,\" Selena said. \"But remember, we found a way to collaborate without giving up control of the mission. Esther, keep those separate in your head: how we worked during the mission, versus how she used what we gave her. There may be a compromise here.\"\n\n\"We get her to authorize us somehow,\" Javier said, nodding. \"We fly commercially, or just cross the border on foot. Then we rent generic Mexican vehicles. We move stealthily and tell her only the general area we'll be operating in.\"\n\nLukas looked off in the distance. \"We could ask her for identification documents beforehand, and a way to contact her in the event the identification proves insufficient. Yes, there are some advantages to that approach. It would limit the risk of interference from Jackson, and especially other elements of the government who may be under the Mexican's influence.\"\n\n\"It will be much slower,\" Oscar argued. \"And we were thinking of asking for other military aid. I understand you won't allow a bombing run, or even heavy weaponry, but what about updated tactical equipment? What we have is a mishmash.\"\n\n\"I'll see what I can do,\" Lukas said. \"But I agree, this crisis is moving too fast for delay. Has Geoff given you all updated documents?\"\n\nEsther started. How did Lukas know about that? She supposed it was easy to guess, if he knew where Geoff had landed. \"Yes,\" she replied. \"And we have unused anonymous cellular phones, though I don't know how much good they'll where we're going.\"\n\n\"The radios will be more useful,\" said Oscar. \"And Raj already knows how they work better than any of us. You all need to practice proper signals.\"\n\nEsther nodded, accepting these men's expertise. The rest of them were amateurs, after all, reinventing the wheel. And she'd already taught them her own simple signals, the same ones she'd taught Grace and Kat. The men had been stunned when she said it worked easily over many miles. She knew Javier hated that she was giving away so much, but it all followed from the stakes of this mission. \n\nFor that matter, Oscar was also right to worry about their speed. She hoped it wasn't a mistake to refuse more direct help from Jackson. Even now she could distantly sense the efforts of the Mexican, more furious than ever. \n\nWhen their meeting broke up, Lukas asked to speak to Esther in private. Nervously, she followed him to his office, closing the door behind her, and taking a moment to compose herself before turning back. No doubt Lukas noticed every detail, nonetheless. However his perception worked, it seemed more subtle than Selena's abilities, and she wasn't sure what it would take to hide herself fully from him.\n\nLukas sat at his desk, watching the information flash by on his computer screen, seeming to pay little attention to her. But she'd spent enough time with him to know he was considering what to say.\n\n\"How did you become aware of the Mexican?\"\n\nEsther blinked in surprise. It wasn't what she'd expected. Surely he knew about Tanaka\u2014and if he didn't, she didn't like the idea of telling him. If nothing else, Tomiko deserved privacy from Lukas's scrutiny. And he must know about Castillo, via whatever channels he still had with Myra Jackson and her group.\n\n\"I\u2014well, it was no one thing,\" Esther stammered. \"I sensed the strangeness in Mexico, where he hides himself. But that was just one piece of evidence. I assume it was something like with you.\"\n\n\"And you did not direct my attention towards him.\"\n\nEsther gaped. What exactly was he suggesting? That she'd manipulated him? Or was he annoyed that she hadn't shared her information earlier? That didn't make sense.\n\nLukas nodded, and then looked at her more directly, something like resignation briefly flashing on his face. \"We have not been entirely open with each other about our strengths, and perhaps that has led you to believe I understand more than I do about the upcoming confrontation. Your sensitivity astonishes me, and I cannot believe there are more than a handful in the world who share it. As you have gathered, my abilities involve synthesis of vast quantities of knowledge, rather than extracting detail with anything like your sensitivity. But much of this synthesis happens beneath the level of conscious thought, and this leaves me particularly wary of a danger you may be able to guess.\"\n\nEsther thought about that. \"If the processing is happening outside your conscious control, you wonder if someone very subtle could be influencing you. The way Franklin did.\"\n\nLukas frowned in distaste. \"Franklin was powerful, but not subtle. For years I had assumed he was among the most dangerous of our kind, and he certainly was dangerous. But I suspect the woman you studied under was more dangerous in her own way. And you yourself are far more subtle than Franklin ever was. I do not have your gifts to perceive other Changed easily. Despite all my precautions, I know full well how vulnerable I could be to a sufficiently cautious adversary.\"\n\nEsther shook her head unhappily. \"I am not manipulating you,\" she said. \"I did not want to confront the Mexican, not after\u2014well, it was as it seemed. You convinced me that we needed to do this.\"\n\nLukas watched her a moment longer, and then his eyes focused somewhere past her. \"Yes, it seems I did,\" he agreed. \"And once again I have been tracing my own pattern of discovery. You see, I did not truly understand your capabilities for a long while, and I am sure I only know a portion of them now. This is because you hide yourself well from scrutiny, but in this regard you are not unique. I have learned to identify a certain pattern of absences: webs of effect without obvious cause. In a few instances I have inferred the existence of a powerful Changed person who is otherwise invisible from my scrutiny, their influence like a black hole, detectable solely from its effects on matter around it.\"\n\n\"And that is how you found the Mexican,\" said Esther, nodding.\n\n\"No. His influence was too wide-ranging, both too omnipresent and too subtle, at least until his recent behavior. And that is what discomfits me. For years, I have had a nagging sense that I was missing something in Mexico. Yet if the Mexican is as skilled in deception as you believe, I should not have been able to localize him in that fashion.\"\n\nEsther swallowed. \"You think someone else was pointing you in his direction.\"\n\n\"Yes. And is it such a surprise? There are other powers in this world. Any who have lived long enough would have learned caution in their overt actions. The Mexican has become a threat to all, no matter their agendas. I could easily have come to their attention over the years when I was narrow-mindedly focused on defeating Franklin. And perhaps you did, as well, after that confrontation. We would be obvious tools to defeat the Mexican: powerful, and reckless enough to act directly. I detest the thought of being manipulated in such a fashion.\"\n\nIt was no wonder that he would, after his experience with Franklin. Esther felt a sudden sympathy for Lukas. And he deserved a certain reassurance.\n\n\"I first learned of the Mexican by that name from a man named Tanaka,\" she said. \"He was the one who sent the disabling vision of nuclear holocaust. He was attacked by the Mexican immediately afterwards, and he had lost much of his memory, but he was able to remember enough. But he was killed by an assassin named Castillo. Those circumstances are what led me to understand the Mexican's power.\"\n\nLukas nodded slowly. \"Ah. That is a link I did not understand. Tanaka must have been very powerful, indeed, to have done what he did. I did not know his name, but he was the one I most suspected of pointing me at the Mexican.\"\n\n\"I doubt it was him. He was extremely cautious, and I don't believe he ever did more than listen, until Black Christmas.\"\n\n\"He must have learned a great deal,\" Lukas said blandly.\n\n\"As I said, he'd lost most of his memory,\" Esther said uncomfortably. \"In any case, I don't believe I was manipulated into looking at the Mexican. I had resolved not to do anything more about him.\"\n\nLukas nodded. \"Well, your story allays my worries slightly. In truth my greatest fear was not Tanaka, but that perhaps the Mexican himself was already expecting me, and that this was a trap of some sort.\"\n\nEsther's mouth fell open. A trap? She hadn't even considered that possibility. Selena was right. She was far too naive in so many ways. But the more she thought about it, the less it made sense.\n\n\"I don't think it's a trap,\" she said. \"Maybe someone else did point you towards the Mexican. Maybe that means they're helping, from afar.\"\n\nShe felt like an idiot even as she said it. But she couldn't help thinking of the anonymous person who'd cautioned her about her direct intervention in the bombings. There were others who understood the dangers they were facing, and at least sympathized.\n\n\"I suppose it makes little difference,\" Lukas said eventually. \"The Mexican needs to be stopped. Perhaps we will have help, or perhaps not. But in any event, we need to pool what strength we have. It may be that our abilities complement each other's more than we have realized.\"\n\nIt was a clear opening, for Esther to tell him about what else she could do. Her manipulation of matter, her subtle changes at a distance. But she couldn't bring himself to trust him with that. Lukas didn't say any more, and eventually she stood up, awkwardly excusing herself to leave the office. Outside, Frederick gave her a suspicious look. Maybe he was annoyed she'd prevented him from eavesdropping.\n\nPerhaps she didn't trust Lukas entirely, and his men even less. But it was past time to share her burden with her loved ones. \n\n Javier,  she sent silently.  We are going to Oaxaca. In the mountains north of the city. I will let the others know, but I want us to keep this among our family for now. \n\n* * *\n\nIt was almost time. Javier hadn't slept well, but he when he walked by the little warehouse office, he saw Lukas doing exactly what he'd done last night: watching information fly past on his computer screen, and occasionally sending a message. Esther said he'd made a few phone calls overnight, speaking perfect Spanish. Arranging certain things in advance, he'd said.\n\nFinally Lukas came out of the office.\n\n\"I need to make a decision,\" he told Esther. \"Will you at least tell me if our destination is more than two hours from Mexico City? We need to pick an available airport, and I'm arranging to have cars ready with our equipment, so we can enter the country with the least suspicion.\"\n\nEsther nodded, considering.\n\n\"Yes, it is more than two hours,\" she said. \n\n\"Very well.\" Lukas walked back into his office.\n\nRaj was asking Oscar something about his childhood. Apparently he'd lived near Mexico City until he was six. It didn't sound like he remembered it much, but he was being polite, at least. Felipe and Berthold were more subdued, talking to each other or lost in their own thoughts. On the other hand, Frederick had briefly tried to flirt with Nicola. She'd been impeccably polite by her standards, simply glaring and then ignoring him. Frederick did seem to have taken the hint, at least.\n\nWhen it was finally time, they gathered up their small personal bags. Javier wondered if Lukas was going to give a speech of some sort.\n\n\"It is important that we decide now who is in command, during the mission itself,\" said Lukas. \"We can't have more than one.\"\n\n\"I will,\" said Esther. \"I have to be able to make my own decisions and react to what I sense immediately. I have done this before, but I am not experienced, and I may make mistakes or overlook the obvious. I expect to be corrected, but *only* when it is necessary.\"\n\nThe other men looked uncomfortable, but Lukas nodded. \"I trust that is acceptable to everyone,\" he said. \"We would do well to remember this mission is impossible without Esther's skills, both in hiding us and in neutralizing the Mexican so we may capture him. And capturing him alive is Esther's condition for proceeding at all.\"\n\n\"We all agreed to these terms,\" Oscar said. \"We all know how to shut up and do our jobs, don't we?\"\n\nThe others nodded, looking serious. \n\n\"Our tickets are waiting for us,\" Lukas said. \"It is time.\"\n\n* * *\n\n\"Guatemala?\" Kat blurted. \"Look, we're not even on the same planes.\"\n\n\"He did it for a reason,\" Javier said, willing Kat to keep her voice lower. \"He asked us to trust the arrangements he'd made. If it surprised us, it will surprise others, right?\"\n\nJavier thought it made sense. He was embarrassingly vague on his southern Mexican geography, though he'd tried to stuff a lot of maps into his head overnight. Oaxaca was pretty safe from American bombings and ground troops, but there were a lot of Zapatistas around there. Not to mention they'd be going right through Chiapas, if they were coming from Guatemala. But it was a lot closer than the airports in northern Mexico, or coming over the US border. \n\nTo his relief, he'd be on the plane with Esther. To lower their profile, Lukas had split them across three itineraries, all arriving within an hour of each other in Guatemala. It was neatly done, but he shouldn't have expected any less.\n\nThey said their brief goodbyes, and then the groups separated. They split again on the way, and at the gate he sat with Esther, letting Oscar, Raj, and Selena form their own group.\n\nEsther told him silently that she sensed no obvious surveillance. Of course, they knew it wasn't so easy as that. Someone could watch video footage from the airport and identify them that way. But Lukas had explained that evading surveillance was all about taking enough independent precautions. Make every step take enough extra work, and eventually you would exhaust the resources of whoever was looking for you.\n\nLukas would be an unstoppable criminal, Javier realized. It was lucky they were on the same side, or close enough. As Raj said, there were always more sides than you think.\n\nThey had a short first leg, and then a long wait in Houston. All to get the landing times right. Javier supposed Lukas had already worked out all the contingencies if something got delayed.\n\nHe fell asleep several times during the final flight, but they were stuck without a view in the middle of a big plane anyway. Lots of people who looked like tourists, or college kids going on spring break or something. What a different world he'd fallen into, that he was doing this rather than getting drunk on a beach somewhere.\n\nMaybe some were even going to Mexico, like them. The Yucatan was pretty safe as far as the war went, and probably cheap now, especially with the airports up there closed. He realized that he and Esther blended in more than he'd expected. Another point in favor of Lukas's plan.\n\nWhen he finally spilled out of the plane in Guatemala City, bleary-eyed, he saw Mark and Nicola waiting for them. They smiled, but as planned, they wandered off. They wouldn't join up as a group until they were near the border.\n\n\"Everyone's safe,\" Esther said softly. \"The last plane's only twenty minutes off.\"\n\n\"I'll never get used to the way you do that,\" Javier said, smiling.\n\nShe giggled. \"Javier, I read it off the board behind you. Have to be efficient, like Mark always says.\"\n\nHe kissed her, because they were in an airport, in Guatemala, and it was after midnight local time, and he couldn't even remember if the time zone made that worse or better. But it was so ridiculous. Saving the whole world should be a lot more glamorous than this. If they failed, no one would understand what the fuck they were doing anyway. If they succeeded, hardly anyone would even know.\n\nSo he kissed her again. And again, until even the vacationing students looked at them with amusement. Let them have their spring break. He had everything he needed.\n\n* * *\n\nEsther breathed a sigh of relief when the last plane landed. But then Lukas gave her the warning signal, and she watched in otherspace while he entered the men's room, feeling odd about the whole thing.\n\nOf course Lukas wasn't actually using the toilet. When he sat in the stall, he began tapping out on his palm the binary encrypted code that they'd agreed on with Raj. It was too much calculation for the others, but a lot safer than Morse code, and clearly Lukas took no unnecessary chances.\n\n Have to adjust plans. Americans are being aggressive at road border crossings and our drivers won't cross for any money. Fastest alternative is to cross on foot. I have a few places in mind. Agents inside will pick us up, if you can make sure we avoid Americans. ",
        "Esther nodded, sending him her agreement. She hadn't asked too carefully who these drivers were, but she suspected they were involved in smuggling of one sort or another. Lukas had told them to give away absolutely nothing.\n\nWhen the first unmarked vehicle pulled up, she piled in with Mark, Nicola, Lukas, Oscar, and Frederick. They were much closer to the Mexican now, and Esther needed to be very cautious in shielding their group of Changed from his gaze. She'd prefer Lukas as well, but he was good enough at evasion that she considered him probably safe at this distance, along with Selena.\n\nThe strange non-place shimmered in her head, and she resisted the urge to look closer. It would be just like the last time. She would wait until she was closer to get a proper look.\n\nIt was humid here, almost sticky despite the comfortable night temperature. They drove in silence, their driver obviously uncomfortable with this trip. They weren't carrying much luggage, so maybe he assumed they had drugs hidden. 'Mules', Javier called them. That would put them on the side of the cartels, and on the wrong side of the Americans.\n\nThey highway twisted and climbed into the hills, humid forest alternated with broader cultivated areas and small cities. The driver sped up, and the old van rocked uncomfortably around the curves. Soon they would have to decide among the alternative crossing points. Esther closed her eyes, sending her vision into her structured simplification of otherspace, flying through the geography along the Mexican border.\n\nAs expected, there were Americans at the easier bridge crossings farther south, and the major crossings up here in the highlands. But there were other routes, and Esther chose one of the ones Lukas had suggested. It would mean driving through some rural villages who would certainly notice their presence. But Javier had told her the Guatemalans weren't feeling very kind towards American actions in Mexico, and they were used to looking away when various smuggling organizations came through. She messaged Lukas, a mile behind in the second van, and then began to instruct the driver. \n\nIf he was surprised by getting directions in stilted Spanish from a young woman, he didn't show it particularly. Maybe it was no stranger than the rest of this assignment. Lukas must be paying him very well. In any case, he knew these hills well enough to suggest alternate routes a few times. The roads were much worse than she'd expected, so it was just as well they had a local driver.\n\nShe finally located the vehicles on the other side of the border, rushing to catch them. She told the driver he could slow, but he shook his head, grimly racing towards the drop-off point. Finally he pulled over, hopping out of the van and opening doors, helping them unnecessarily with their bags.\n\n\"Vaya con Dios,\" he muttered to her quietly. \n\nBefore she could think of a reply, he was back in the van, speeding off the way they'd come.\n\nOscar and Frederick herded them off the road, to hide behind some vegetation on the steep hillside. They'd have to scramble down that to the valley, then up to the road on the other side. Just a half mile or so, but not a particularly easy path. It was chilly enough that some of the others were pulling extra layers from their bags.\n\n\"The other van is just a few minutes away,\" Esther said quietly. \"But we will have a longer wait for the ones meeting us.\"\n\nOscar nodded. \"The plan never goes as easily as you expect. But Lukas is a master at staying flexible.\"\n\nSure enough, when the others arrived and unloaded, Lukas didn't seem discomfited.\n\n\"About an hour's wait?\" he asked, and Esther nodded. Maybe he'd been able to reach them again by phone or radio, though these mountains made it unlikely. More probably he'd just guessed well in his particular fashion.\n\n\"We will go in two groups,\" he said. \"This side is a safer place to wait, but there is a difficult scramble, down and back up. About a half mile, but it may take a good part of an hour for the slowest, so the first group should go soon. Listen to your radio in case anything changes.\"\n\n\"Glad I packed light,\" Kat said, squinting into the darkness. Probably she couldn't see the path they were taking at all. \n\n\"Mark, Nicola, Kat, Raj, Grace, and me,\" said Esther. \"Mark, can you see the spot we're going to? That place the road dips briefly below the ridge?\"\n\nHe nodded, and they slowly started down. It was a black night, stars twinkling through a few hazy clouds. Mark knew exactly what to do, of course, choosing the path carefully, winding back and forth to avoid the thickest vegetation and the steepest slides, keeping right with Kat and taking her arm for the harder portions. He was already carrying two extra bags, slung carefully across his back.\n\nEsther and Nicola did what they could for the others, who would be nearly blind. Though the scramble was physically challenging for Esther, she could see every detail perfectly, and copy Mark's footsteps. Kat and Raj were both having difficulty by the last stretch up. Neither complained, even when Raj missed a step and slid dangerously backwards, until Nicola grabbed him and helped him upright. He was scratched and bleeding.\n\n\"I'm all right,\" he said quietly, wincing as he continued on. \n\nThe other group caught up to them near the top, and they spread out below the road, hidden as best as they could, sitting on the rocky slope. Javier checked on Raj, but the mathematician was all right, and anyway there wasn't much they could do. Their luggage was just a few changes of clothes and other essentials.\n\nEsther motioned to Lukas and his men to come closer. \"I might as well tell you all now where we're going. It is in the mountains north of Oaxaca, only about fifteen miles from the city. Near nine thousand feet elevation. When we are closer I will be able to tell more. The danger of him detecting my probes is larger, but I am increasingly sure that despite his other strengths, I greatly exceed him in sensitivity.\"\n\nLukas looked at her, puzzled. \"That close to Oaxaca? No, that can't be right. While I wasn't absolutely certain, everything about the pattern has been pointing farther east, to Chiapas. And I have also looked at satellite photos of that entire region. I remember every large structure, and there are only a few isolated missions in those hills. Are you saying he's using one of them for cover?\"\n\n\"No,\" Esther said. \"I don't think so. I do think the structure is large, but it is well hidden by the dense forest. And I'm afraid you may have been influenced by the Mexican, in the way I warned before. Not in a personal fashion, but as part of his very subtle efforts to hide his base. We will likely all feel the effects of it by the time we reach Oaxaca. I may even have to remind you of his location.\"\n\nLukas nodded slowly. \"It is a remarkable power, if he is capable of fooling me in such a fashion. We will need to watch each other for signs of his influence. Are you positive you will remain free of it?\"\n\n\"Nearly so,\" said Esther. \"I can't replicate it myself, though perhaps I could with enough practice. But I do understand how he does it, and I will attempt to mitigate it for the rest of you.\"\n\nOscar spoke up. \"If what you're saying is true, I suppose I understand why you said it wouldn't work to tell the military about him. I thought, if he's capable of distracting pilots, just send a cruise missile from a great distance. Nothing for a missile to get confused about. But you're saying that the order would get lost somewhere along the line. That it would never actually happen.\"\n\n\"That's my suspicion,\" said Esther. In truth, she wasn't sure he was as powerful as that. But she would never allow such a thing. She decided to change the subject, as the vehicles were approaching.\n\n\"A large white cargo van and a small car,\" she said. \"Those are what you expected?\"\n\nHe nodded, and walked up to the road with Oscar and Felipe.\n\nThere was a brief conversation, which didn't go as Lukas intended. Apparently these men were also spooked, and they refused to travel further with the group. They would take the small car, leaving them only the single cargo van, which already contained all the supplies and equipment Lukas had arranged.\n\nThey piled into the big van, which fortunately had more than enough seating. Frederick took the wheel, turning the vehicle around cautiously on the narrow road while the other little car sped off. Esther found herself squeezed between Javier and Mark. A nice spot to be. She sighed, letting herself linger just a moment on a particularly erotic memory. But it was short-lived.\n\n\"They say the Zapatistas are very active the last day or two,\" said Lukas. \"And the Americans are probably here in part as a result. Interacting with the Americans would slow us, but the Zapatistas could be deadly. Far better to avoid both.\"\n\nFrederick drove quickly, faster than Esther would have dared. The van was old enough that it didn't handle this treatment well, and her seat belt was broken. She held on to Mark and Javier, listening carefully, looking for anyone else on the road, while Lukas directed.\n\nWhen they turned onto a slightly better dirt road, there was a bit more traffic. Esther sensed a pickup truck some miles behind them. Perhaps a farmer out early. She looked more carefully, and saw three men. But in the bed of the truck\u2014\n\n\"There are rebels behind us,\" she said quickly. \"But we are moving faster.\" Carefully she described the truck, along with the weapons in back. Lukas and his men nodded.\n\n\"Probably Zapatistas,\" he said. \"Or perhaps another local militia. Be on the lookout for any others they may be meeting ahead. Is there anyone else on the road before the highway?\"\n\nShe spread her vision farther. She should have done this already, but it was challenging while she was working so hard to hide them from the Mexican.\n\n\"No vehicles on this road,\" she said. \"But there is a pair of American military trucks coming south on the highway we're aiming for. We'll beat them to the intersection, but I believe the truck behind us would, as well. I'm afraid they're speeding up. And there are other vehicles on the highway, heading north. I don't see any obvious signs they are Zapatista. No heavy weapons. But I don't know what to look for.\"\n\nLukas was silent, gaze distant. Finally he focused again. \"I'm afraid there is a high probability the northbound vehicles are also Zapatistas. We don't want to be trapped between them, but there aren't any detours. What about places to hide off the road?\"\n\nShe shook her head. There was a guard rail on one side, a steep forested hill above. There were a few spots ahead that were just off the road, but nowhere to drive a van like this any farther into the forest. It was no better on the small section of highway they would have available, and the dawn twilight was already making the sides of the road easy to see.\n\n\"Nowhere far enough off road,\" she said. \"I could try to hide us, but with cars passing so close, I can't be very confident.\"\n\nLukas nodded. \"Very well. The best option is the Americans, then. The earlier we catch them, the better, so we can be away before they encounter the locals.\"\n\n\"Then we need to hurry,\" Esther said. \"The truck behind us is starting to close the distance as well.\"\n\nFrederick nodded, gripping the wheel and speeding up, but just seconds later he hit a pothole, hard enough to throw her against the seat. The van seemed all right, though.\n\n\"For God's sake, let me drive,\" Nicola said.\n\n\"Are you kidding?\" Frederick asked, gunning the truck faster. \"We can't stop.\"\n\n\"Better than going off the fucking road,\" Nicola said.\n\nLukas glanced at Esther, and she nodded. She'd never seen anyone drive the way Nicola could.\n\n\"Frederick, switch off with her,\" Lukas said. \"As fast as you can.\"\n\nTo his credit, Frederick accepted this, screeching to a halt and squeezing aside to let Nicola take over. Before he'd gotten settled behind, she roared ahead.\n\n\"Get ready to meet the Americans,\" Lukas said. Esther didn't know what that meant, but in the back seat, Felipe and Berthold began pulling open packages, handing equipment and clothing forward. Esther reached for an impressive-looking nylon vest, but Oscar shook his head.\n\n\"Let us handle the military,\" he said. \"Best if the rest of you stay out of sight.\"\n\nThey hit the highway with time to spare, and Esther began to breathe more easily. It was narrow, winding, and poorly paved, but Nicola increased her speed further, using the whole road, tires squealing around turns. But Esther was distracted by something odd, between them and the Americans. She should have seen it before, but she was so focused on the road. \n\n\"Lukas,\" she said quickly, \"There are some men in the forest above the road, four miles ahead. Well hidden.\"\n\nHe went blank, even more than usual.\n\n\"An ambush,\" he said. \"Not meant for us, but it won't matter. Watch the road, Esther. There may be a mine or a bomb hidden. Is there truly no chance of hiding us?\"\n\n\"No,\" she admitted. \"Not a good enough one, with all the vehicles coming.\"\n\n\"Can we slow enough to let the Americans trigger the ambush?\"\n\nShe shook her head miserably. \"I thought so. They're just a mile beyond the ambush, but now they're slowing down for some reason.\"\n\nThere was a sudden hush.\n\n\"Esther,\" Oscar said, voice strained. \"Check the sky. Can you eavesdrop on the Americans from here?\"\n\nShe closed her eyes and launched into otherspace, feeling Javier's grip on her hand. And it all came together too quickly in her head, what she should have looked for in the first place, if she hadn't been so willfully ignorant about warfare. Her mind raced through the possibilities.\n\n\"Spy plane far overhead,\" she said. \"And two fighters very low, at high speed. How is the roadside bomb triggered?\"\n\nLukas didn't hesitate. \"Either a simple pressure plate mine, or more likely a radio control from those on the hill. Esther, you understand we're in danger of being targeted from above? Are you suggesting we drive through the ambush?\"\n\n\"As fast as you can, Nicola,\" she said, because she'd found the bomb, and now it was all a question of time and concentration.\n\n* * *\n\nJavier held on to Esther, trying to keep her from being jostled too badly. He imagined he could hear the fighters screaming overhead, but of course it was nothing. They weren't here yet. \n\n\"Get the sidearms, Felipe,\" said Frederick nervously. \"Maybe we can ambush the truck behind us. It's safer than risking that ambush.\"\n\n\"We are in extreme danger from the American fighters unless we reach those on the ground sooner,\" said Lukas. \"And the Zapatistas are now convinced we are working with the Americans. If we stop, they will open fire on us, attempting to kill or take hostages.\"\n\nJavier stared at Lukas, but no one could argue when he made a pronouncement like that.\n\n\"Quiet, everyone,\" said Selena. \"Esther is our only chance, and she is capable of solving this.\"\n\nThe others went quiet. Lukas's men got themselves ready to get out of the van fast. Javier hoped they knew how to calm the American military down quickly.\n\nThe back of the van was windowless, and right now it was giving Javier a terrible sense of claustrophobia. He'd been trying to keep track of distances, and surely at this breakneck pace they must be nearly to the ambush. Suddenly he heard an immense crashing boom, and he flinched. But it was from behind them. An instant later, the roar of the aircraft rumbled over them. But then\u2014nothing. No bombs, or missiles, or whatever had struck the vehicles following them. He heard what sounded like gunfire closer by, and then a small explosion on the road behind them. But then silence.\n\nEsther suddenly relaxed, and took a breath.\n\n\"We're past,\" she said. \"Americans a half mile ahead.\"\n\n\"I see them,\" Nicola said an instant later. \"Can I slow?\"\n\n\"Yes,\" Esther said. \"The men in the hills are scattering now. The fighter planes are coming back, but not for another three minutes.\"\n\n\"By God,\" Berthold said, letting out a huge breath. \"So there wasn't a bomb, after all? Or was that it, after we passed\"\n\n\"I thought it was an RPG,\" said Felipe.\n\n\"I don't know what that is, but maybe. I worked hard to distract the rebels as we went by, hoping they wouldn't trigger the bomb. And I distracted the pilots as well, enough to leave them confused by the directions from the spy plane, when it came to our van. I wish I could have done more.\"\n\nJavier winced, knowing that Esther was upset she hadn't been able to do anything about those who had probably been killed behind them. It didn't matter to her which side they were on. \n\n\"Jesus,\" Frederick said, but that was all he had time for. Nicola rolled to a stop, shutting off the van and raising her arms from the steering wheel. Javier crouched down with Esther and the others, letting Lukas, Frederick, and Oscar step out of the vehicle together. The start of the conversation was loud enough for him to hear just fine.\n\n\"Identify yourselves!\"\n\nLukas gave his fake name and some title that sounded vaguely like a CIA thing. Probably that was exactly what it sounded like to the scared guys holding the guns out there. Guys who might be even younger than him.\n\nPresumably they were examining Lukas's credentials now. \"I don't recognize any of this,\" said a second man. \"What the hell are you doing here? Who else is in the truck?\"\n\n\"Sergeant? Is there a Captain John Riverton with you?\"\n\nAfter that the conversation drifted further away, and Javier couldn't make it out.\n\n\"Lukas is convincing the Captain that they met briefly during the Gulf War,\" Esther whispered in his ear. \"I think it's working.\"\n\nFinally he heard them coming back. This time the conversation was more jovial.\n\n\"I don't know how the fuck you guys got in the middle of that shitstorm, but it's a miracle you didn't get taken out by the friendlies. Not to mention the fucking Zaps.\"\n\n\"It's a hazard,\" Frederick said. \"You'd think they could pay us more than the guys back in Virginia. At least it looks good on the r\u00e9sum\u00e9.\"\n\nAll the men laughed. \"Godspeed, then,\" said one. \"Tell your driver that she's a lot better looking than Alfie.\"\n\n\"I wouldn't say that too loud,\" said Frederick. \"I think she can disable strong men with her glare.\"\n\nThen they all squeezed in, and somehow they were moving again, past the trucks. Javier and the others sat back up, while Frederick apologized to Nicola. \"It just popped out of my mouth.\"\n\n\"No problem, really. I like to think I'm pretty good at glaring.\"\n\nLukas ignored their banter. \"I don't believe the Captain will report the incident up in the chain of command. It's likely that all parties will be grateful for a reason to ignore the mishap.\"\n\n\"Did they know about the ambush?\"\n\n\"No,\" said Lukas. \"I said I didn't know where the RPG came from, and they weren't intending to search the woods. The vehicles were the target of the air strike.\"\n\n\"I'm so sorry,\" Esther said. \"I should have looked for an ambush like that. I was too focused on the road. And it never occurred to me to look for planes. It should have.\"\n\n\"How about instead we thank you for saving all our lives?\" Oscar said. \"I could never hope to understand how you did what you just did.\"\n\n\"Yeah,\" said Felipe. \"I'm starting to feel a lot better about our chances against the Mexican.\"\n\n* * *\n\nEsther was relieved when they began to see more ordinary traffic, and she tried to get a little sleep. But she kept waking with a start, trying to forget the images of burned skin and severed limbs. And all the while, the Mexican's oppressive presence loomed.\n\nOther Changed weren't likely to perceive it that way. The patterns were simply part of the environment here, shaping one's attention naturally away from a particularly difficult-to-reach mountain valley, which was private land anyway. It was almost like an ancient place, and Esther had to admit that would explain part of the Mexican's strength. But it didn't feel like that in otherspace. Each ancient place was different, but the three she'd sensed had a similar class of convoluted geometry in otherspace, one that she was almost able to understand now.",
        "And then there was the endless grind of maintaining their protection. Oaxaca was large enough to have a number of Changed, more than she would expect for a city its size. But the Mexican would certainly be watchful for newcomers this close to him.\n\nLukas was on his cellular phone as soon as they got a signal outside the city, and by the time they arrived he had arranged four rooms in a hotel downtown.\n\nWhile the others unloaded the van, Lukas pulled Esther aside, walking some distance down the block.\n\n\"Esther, you didn't successfully distract the men in the hills,\" he said quietly. \"I heard a fragment of their dismay when the bomb malfunctioned. The gunfire and the grenade were a last attempt to hit our van. Surely you knew all of this. Were you hoping to impress my men by allowing them to misunderstand you? If so, it was well done. As were the rest of your efforts.\"\n\nShe swallowed. She hadn't wanted Lukas to know this, but what if it was important? What if this was what she needed to defeat the Mexican?\n\n\"I'm afraid it was the opposite of trying to impress them,\" she said. \"I did distract the men in the ambush, though not as perfectly as I'd hoped. But I also deactivated the bomb in time. Multiple failsafes, as best I could.\"\n\nFor a long time Lukas stood still, his eyes distant.\n\n\"I hardly believed it possible,\" he said. \"Is this a refinement of our ability to distract others' senses by hiding? I have always imagined that there was a physical mechanism underlying it, just as with Franklin's methods, or the way you and your teacher could call people with your minds.\"\n\n\"That is what Nicola believes,\" she said. \"Something like her infrasound capabilities. I don't know for sure, and I warn you that this ability has been very difficult to make use of. I will reach for it in desperation, but it is time-consuming and not something to rely upon.\"\n\nLukas nodded. \"I understand, and I will not tell my men. But some time, when things are simpler, I would love to discuss these questions with you. Or mathematics, for that matter.\"\n\nEsther nodded. \"Lukas, it seemed like more than good luck that you knew so much about that captain's background. How much information about the soldiers here did you memorize?\"\n\n\"All I could find,\" he said. \"As soon as I suspected I might have to travel to southern Mexico. Multiple failsafes.\"\n\nShe nodded. \"One last question. Suppose we succeed here, defeating the Mexican and turning him over to the government alive. What will you do after that? Return to Europe, saving individual Changed people? Try again to break down and rebuild the Internet properly? Go back to the Chosen?\"\n\n\"Never the Chosen,\" Lukas said. \"Perhaps I will begin to extricate my former companions, and attempt to understand Unity, from a safe distance. As to the rest, it will be as always. I will find a way to keep the Changed safe, as best I can see. Perhaps that is not as reassuring an answer as you would like, but it is what you already assume, and it is true.\"\n\nEsther nodded, and the two of them walked back to the hotel. But she was pretty sure they would never have that conversation about mathematics.\n\n* * *\n\nJavier watched Esther wake up. He loved that brief moment, when she was technically awake, but not quite aware yet. Her subconscious brain was working, but the rest of her had forgotten for a minute that the entire world rested on her shoulders.\n\nSomeday, maybe she'd look like that more often. For now, he had to settle for these glimpses. He kissed her and she sat up.\n\n\"Everything's set,\" he said. \"The extra cars, the shopping, all of it. We could go tonight if you think it's safe.\"\n\nBut a few minutes later, there was a knock on the door. Grace hurriedly pulled her shirt on, then went to answer it.\n\nLukas was there, with an unhappy-looking Oscar. They came in and closed the door.\n\n\"Oscar, tell Esther what happened.\"\n\n\"I woke up feeling a little off,\" he said. \"I asked Felipe when we were going to find out what the mission was. I knew we were in Oaxaca, but I'd forgotten where we were going. I thought it was maybe somewhere well to the east, in Chiapas. Just like Lukas.\"\n\nEsther nodded, closing her eyes.\n\n\"I'm protecting you as much as the others,\" she said. \"But last time we found this effect was much stronger for some people, regardless of basic sensitivity. This might turn into a problem. If it takes me too much concentration to protect you, that makes other tasks harder.\"\n\nOscar sighed and exchanged a look with Lukas.\n\n\"It is decided, then,\" said Lukas. \"I had asked Felipe to stay here in the city with the rest of the support team. Oscar will stay instead. And we must be prepared to make more difficult decisions if they arise. Whatever else, you must get safely near the Mexican, with enough support to immobilize him. That means Nicola and Mark must accompany you, and perhaps my skills will be of use up to the end. But Esther must weigh how many are appropriate, and whether their extra skills outweigh the disadvantages.\"\n\nEsther nodded. \"I need to make my true surveillance effort shortly. It will take some time, and as I meditate, I will intentionally reduce how I shield you from the Mexican's illusions. I will however keep my own illusions hiding us. But you should prepare for some odd sensations.\"\n\nLukas nodded, leaving with Oscar to join the others. And without further ado, Esther closed her eyes.\n\n\"Kat, run and get the others,\" said Javier nervously. \"I don't want us walking out of here in confusion.\"\n\nShe returned shortly with Raj, Nicola, and Mark. Selena had apparently gone to babysit Lukas and his men, which was smart. If any of them could resist the Mexican, it would be Selena.\n\nJavier felt something buzzing, like bees in his skull. But it was just his nervous hallucinations. He still remembered where the Mexican was. Up in the mountain, fifteen miles. Maybe he'd be better off, now that he'd gotten through the experience at the farm on the border. A kind of immunity.\n\nHe looked at the others, who also seemed nervous. Well, it was just for these moments that he'd picked up a couple decks of cards at a touristy shop.\n\n* * *\n\n\"Hah!\" Kat said. \"Pay up, Grace. Oh, wait, you're out of crackers. How about your shirt?\"\n\nGrace rolled her eyes, smiling. \"I swear, you have barely even a one-track mind. More like zero-track, your locomotive just stopped in one admittedly pleasant spot. You were right, by the way. This was a romantic vacation.\"\n\n\"What?\" Kat blurted.\n\nJavier nodded. \"Yeah. I always wanted to see the rest of Mexico. What should we do tomorrow?\"\n\n\"OK, guys, that's not funny,\" said Kat. \"Please don't tell me you're actually serious.\"\n\nJavier squinted at her. She was right: there was something he was forgetting, something he'd been telling himself was vital to remember. But his thoughts kept sliding off it, focusing on irrelevant things. The pretty designs on the back of the cards in Kat's hand. A strand of hair sticking to Grace's forehead. The outline of a hard nipple under Grace's shirt. She wasn't wearing a bra. His dick stirred, and he guiltily looked around for Esther. She was lying on the bed, deep in meditation, and she looked exhausted, as though carrying an even heavier weight than usual. \n\n\"Tonight,\" he said slowly. \"We were going out tonight. Something important, like we did up on the border. We've been planning it.\"\n\nGrace looked confused, but she nodded as well.\n\nFive minutes later, Javier remembered it all, but only after Nicola had explained it several times. Kat and Raj admitted they'd forgotten some details, too, though far less than he and Grace had. Nicola and Mark were fine, in part because they both felt the effects consciously.\n\n\"It's incredibly distracting,\" said Nicola. \"Esther's right, it's reminiscent of the ancient places. Maybe there really is one, hidden inside. Wouldn't that just take the cake, having to deal with that on top of the rest.\"\n\n\"If there is an ancient place, Javier will be particularly valuable,\" said Mark. \"And Lukas's men, the ones without Changes.\"\n\n\"Berthold and Felipe,\" Nicola said. \"Well, good thing we've practiced so much resisting the effects of those places. I guess Selena wins on all accounts. And she'll be a menace with that tranquilizer gun. We should have found her something like that before.\"\n\n\"Thanks for the pep talk,\" said Javier. \"I'm feeling pretty useless right now, but at least I still remember what we're doing. I forgot when my mind wasn't focused on it, the same as with Oscar when he was asleep.\"\n\n\"Makes sense,\" said Kat. \"Luckily, I think we'll all be pretty focused when the time comes.\"\n\n* * *\n\nAn hour and a half later, everyone gathered around Esther's bed to hear what she had to say.\n\n\"The facility is smaller than I thought,\" said Esther. \"An old stone building, maybe as much as two hundred years old, covered in moss, with trees growing out of the courtyard. It is in otherwise good repair, with a single grand chamber and about a dozen other rooms. It has electricity but doesn't seem very modern, with a phone line but no computers that I saw. The Mexican is alone in the large chamber, and I avoided looking closely. There are only seven other people. Two are in a room in the back, an older man and woman who seem to be servants. But three of the remaining are powerful Changed. One of them is Janelle, and of them I think she is the least dangerous.\"\n\nJavier nodded seriously. Honestly, it wasn't as bad as he expected. It didn't sound like wonderful odds, but they were a very strong group themselves. Well, the others were. He shouldn't give himself too much credit. \n\n\"Janelle,\" Kat said, making a face. \"Of course this is where she'd wind up, with the biggest asshole on the planet. Mark, could you handle her all right?\"\n\n\"Yes,\" he said. \"And we have other means as well.\"\n\n\"Exactly,\" said Nicola. \"Esther could stop someone more dangerous than Castillo now. Is that how dangerous the other ones are, Esther?\"\n\n\"Possibly,\" Esther said. \"They are stronger and more sensitive than Janelle, but none of them is in Castillo's class when it comes to stealth.\"\n\n\"Aside from the Mexican himself,\" said Lukas. \"Remember the plan. If we are subduing these others first, we've already made a serious mistake. We must focus on complete stealth followed by an overwhelming assault. What Esther describes sounds promising. A small facility, likely no electronic surveillance. I imagine he relies heavily on his own abilities, and perhaps he has sent other powerful associates on missions during this war.\"\n\n\"Yes,\" Esther said. \"But there is something else about that place. The stone building is not truly ancient, but underneath and surrounding it are other stone remnants. Many are hidden underground, almost like a small city. I'm still not sure if this is an ancient place for the Changed, but it has certainly been important in the past.\"\n\nGrace opened her mouth in astonishment.\n\n\"An unknown pre-Columbian site? But that's extraordinary. Around here it could be Zapotec, or Mixtec, or even Aztec. The Triple Alliance made it this far south late in their empire-building. And the Mexican's just squatting there, keeping it all to himself?\"\n\n\"Sounds exactly like what someone calling himself 'the Mexican' would do,\" Javier said. \"It could even be, what, two thousand years old then?\"\n\nSelena interrupted. \"It doesn't matter much, except that as Esther said it raises the chance that this is an ancient place for the Changed. That would slow our escape, and make it less likely we could do so while bypassing the Mexican's associates.\"\n\n\"And it cements my decision,\" said Esther. \"We will take everyone who was planning to go. Javier, Felipe, and Berthold may have difficulties on the way in, but I will do what I need to shield them. They might be necessary on the way out. And we will go tonight. I am somewhat tired, but the longer we are near him, the more tired I will get protecting us. I'll sleep now, if I may.\"\n\n* * *\n\nTheir cars crept slowly along the winding road. It was torture for Javier, who just wanted to get to the dangerous part. But of course, this was already the dangerous part. Esther needed them to move slowly so she could more easily hide the noise from the vehicles.\n\nThere was an old Spanish mission way up at the end of this road, and apparently it did get a reasonable amount of traffic, enough to disguise the road's use by the Mexican's people. When they suddenly stopped, Javier looked out, wondering what was going on.\n\nNicola hopped out of the driver's seat, and he squinted after her. They'd been driving without headlights, so his eyes were adjusted to the dark, but he was having trouble looking in the direction Nicola had gone. That meant something. This must be the start of the Mexican's road. Something about a gate. Suddenly he remembered his night vision goggles, and he quickly got them on. It was pretty cool to see Nicola pop into view so clearly. This was how the others could see even without aid.\n\nShortly afterwards, Nicola returned, and the cars turned off the road. A heavy chain and padlock hung loose on the gate.\n\n\"You opened that lock?\" Frederick whispered. \"I would love to learn how you did that.\"\n\n\"I doubt I could teach you,\" Nicola whispered. \"Ssh.\" \n\nThe air was cool up here, filled with the smell of pines. Not so different from the Sierras. Javier found himself daydreaming of the Shack, the cozy fire, his friends and loved ones around. He couldn't wait to get back down.\n\nHe caught himself, repeating what he'd already repeated so many times. The Mexican. Aside from Esther, this mission was the most important thing in the world right now. And Esther was right next to him, the fate of this mission and maybe all of humanity on her shoulders. \n\nThe radio in his ear buzzed. He listened to Lukas's quiet instructions.\n\n The relay spot is just ahead. Park as far off the road as you can, ready for a quick getaway. \n\nNicola backed the car carefully between two trees, far enough that it should be invisible to a casual glance. Anything that could help Esther with her concealments. Then they got out as quietly as they could. Javier concentrated on walking silently, the way Mark had been trying to teach him. The night vision helped, as he'd hoped. \n\n Good luck,  said Grace over the radio.  Grace out.  She and Kat would stay here with the cars, providing a radio link with Raj and Oscar back at the hotel. They were also the emergency getaway drivers.\n\n Come back safe,  Raj's voice came, clear despite the distance.  Raj out. \n\nThey moved at a fast walk down the road. It seemed crazy to Javier that they were walking right in the front door, but Esther and Lukas had agreed that any other approach would take so much longer that she'd be physically and mentally exhausted upon their arrival. For now Javier stuck close to Esther, focused on silent footsteps, concentrating on the mission. It seemed a little easier now, like at the border farm, where the illusion weakened as they moved inside its layers. It wasn't far now to the compound. \n\nJavier touched the big bear spray canister, ready in a pouch at his side. It was the only weapon that would be useful for him, and even then, it probably couldn't spray far enough to help in the blitz against the Mexican. Javier had to be ready for the aftermath. He could help against an ordinary person, or maybe he'd even get to bear-spray Janelle. He smiled a little, but he kept his eyes on the ground. Quiet, quiet, quiet. It was their only chance.\n\n* * *\n\nThe Mexican's power was breathtaking. Even now, he was attacking someone in Moscow, battering at their mind. She had hoped he'd be asleep already, and something told her he would be soon. Even for him, these brutal attacks took their toll, which meant he'd be most tired just after he fell asleep. So far their timing seemed pretty good.\n\nThe attacks also meant he was devoting less attention to his immediate surroundings, which was all for the better, because now Esther had to hide their group from the substantial sensitivity of another man, one of the Mexican's powerful lieutenants. He and Janelle were awake and alert, along with one of the non-Changed guards and both of the servants in the back. \n\nShe relayed these facts by mental voice to all her friends, and also to Lukas. When they were this close to her, it hardly took any effort.\n\nEsther had a tentative plan. There was a side approach that led onto the broken old courtyard. From there it was a single locked door, and then a stretch of hallway leading to the great chamber. It was quite possible they could manage it without getting very close to any of the others. \n\nThe Mexican's chamber was a throne room. In fact, it was the room she'd seen in one of Diana's visions from many years ago, and the Mexican was surely the one she'd seen on the throne in that vision. He was a large man, dressed in some kind of ceremonial outfit. But none of those facts was very important. She only needed to know his mental state, and his exact location. \n\nThe Mexican finally stopped his barrage, slumping in his throne. She stopped the group just before the final turn, waiting, listening to the Mexican while she poured her skill into their concealment. \n\nSure enough, in just ten minutes he was asleep. She carefully began the techniques she'd used with Amelia, the patterns that helped a sleeping person stay asleep. This was the right time. She gave the signal.\n\nThey moved faster now, still trying to stay quiet, though she had to work harder, particularly with Javier and Frederick. Their path skirted a parking lot, the modern vehicles a jarring interruption among the trees and stone. The most sensitive of the Mexican's people was sitting in the frontmost room, very alert. She breathed a little more easily once they'd sidled around his position.\n\nThe side entrance to the courtyard was ahead, and she led them slowly, waiting to see which direction one of the men inside would move. But Lukas nodded, seeming to already know, and of course he was correct. She briskly walked to the door, the others following.\n\nNicola slipped to the front, her hands near the lock, listening and pushing. Esther had helped a bit with the other lock, but she didn't have the attention to do that now. Still, Nicola had it in just a minute, flipping the tumbler with a dull click and silencing the noise herself.\n\nMark took the handle, and Esther nodded. He opened it silently and they all filed in, following her down the hall. No one had noticed. It was going exactly as she'd hoped. There was no lock on the heavy, ornate door to the Mexican's chamber, and they gathered in order: Mark and Lukas in front, Selena and Nicola just behind, the others to the side of Esther. She made a final careful check of the Mexican. He was fast asleep, his subconscious working to maintain his general protection with a well-practiced ease despite his exhaustion. There was no mistake. He had not noticed them.\n\nShe swallowed, raising her hand silently. Mark took hold of the handle, and she gathered her concentration for an overwhelming attack.\n\nAnd then the Mexican opened his eyes, and Esther felt nothing but white noise.\n\n* * *\n\nShe had lost some time. Her mind had fled to otherspace, hiding herself from the Mexican's onslaught, maintaining her defense and at least some protection of the others. But it hadn't been enough. Janelle and the man from the front of the house were already there, guns trained on Mark and Lukas, and the rest of the guards arrived mere seconds later. Esther had her wits back, and she was still capable of attack. But this was the wrong moment. She had to risk waiting. The Mexican was not directing much of his attention at her, which meant he still didn't know her power. She saw the looks of horror on the others' faces, and she hoped they understood it wasn't over yet, and that they wouldn't do anything foolhardy.",
        "While their captors herded them into the throne room, she lightly tapped each of their minds in succession, with the prearranged signal.  WAIT. Only Mark's expression changed slightly, but she knew they'd all understood.\n\nThe Mexican was standing now in his sandals, leaning on a feathered ornamental spear. He was an imposing figure of indeterminate age. His hair was jet black, and his smooth skin and distant eyes made him seem ageless. He wore only a loincloth and colorful robe, leaving his chest and legs bare, showing his hairless brown skin, his muscled chest. Splashed across the exposed skin were overlapping freckled spirals of many colors, even jet black. The Mexican had more Changes than anyone Esther had ever seen, more even than Abuela. He wore some heavy ornaments: a gold armband, and large earrings. He looked every bit an emperor, and Esther knew it was intentional. There was that famous portrait of Moctezuma, dressed much the same. As Selena had said so many times, this was a man who understood theater. And she reminded herself that despite appearances, he was still tired.\n\n\"I dreamed of this days ago,\" the Mexican said in perfect English. His gaze looked at all of them, and no one. \"One of my true dreams. I knew my mind would wake me at the anointed time, and so it did. Quetzalcoatl appeared and spoke to me of this challenge, and a powerful challenge it was, but I have overcome it as well.\"\n\nEsther couldn't move, and she knew the Mexican was holding some of the others even more tightly.\n\n\"Those two,\" muttered Janelle, pointing at Mark and Lukas. \"Get them secured first.\"\n\nThey had handcuffs, heavy metal ones, and soon Mark was cuffed, hand and foot, shoved roughly onto the floor. The Mexican pointed at the others in the order she expected: Selena, Nicola, Frederick. He ignored the rest of them, and they'd run out of handcuffs anyway. But all their captors were relaxing now, their weapons lowered slightly. The Mexican walked closer, examining his prisoners. \n\n\"You have more power than I had realized,\" the Mexican said, looking at each of them in turn. Esther's heart pounded when his piercing gaze focused on her, and she breathed more easily when he moved past, to linger on her Changed friends. \"But now we return closer to balance. In time, the harm that you have caused will be more than compensated by your help. It is the story of old. Always, the outsiders come, claiming to know better. And always, they nonetheless serve the Way.\"\n\nHis control was weakening, though it was still enough to hold them immobile. Esther needed to wait a little longer. As she'd hoped, Nicola was already working silently on her own cuffs. Esther concealed her friend's efforts, and attempted to work on Mark's restraints at the same time. But she was so much slower than Nicola.\n\nThe Mexican continued babbling on about prophecy, and she finally got Mark's cuffs unlocked. Mark had felt it, but their captors hadn't noticed. She moved on to Lukas, now with Nicola's help as well. Esther felt a rising hope. They could still do this. \n\nSuddenly, the Mexican paused, looking at Javier. \"Another child of the colonizers,\" he said, nodding sadly.\n\nShe felt him gather his strength, and with a sick certainly Esther suddenly knew what was coming. Her time was up, and there was no chance to warn the others.\n\nThe Mexican was without a doubt more powerful than she was. But as Mark had shown, brute strength wasn't all there was to a fight. As with other Changed, the Mexican's perceptions were limited to a flat, tiny projection of otherspace. When she hit him and the rest of his people, it was from a direction none of them could even conceive.\n\nThe Mexican's eyes bulged, and he froze mid-gesture. At the same instant, Mark and Lukas pulled their handcuffs apart, and Nicola opened her mouth.\n\nAnd then everything went utterly quiet. Esther slowly stood up, walking back out the open door, moving in a dream along the rounded wall of the throne room, towards the back, where the servants waited patiently for her.\n\n* * *\n\nIt all happened at once. Javier's head was still ringing from whatever the Mexican had done to them, but the others were already in motion. Somehow they'd regained surprise, and he couldn't waste this time. Their captors had never gotten around to handcuffing him, so he reached for his bear canister, but he was too slow. Janelle kicked him so hard that he slumped against the wall, just before Frederick tackled her. She broke Frederick's hold easily, and Javier turned over, gasping, crawling to reclaim the spray canister. Dimly he could see Mark holding the Mexican in a chokehold, the would-be emperor flailing as he lost consciousness, three of Selena's darts already in his chest. But then there was a gunshot, and the Mexican slumped. Mark looked shocked, but he dropped the body. More gunshots rang out, and Mark was already attacking someone else. Javier finally reached the bear spray, and just as Janelle threw Frederick bodily across the room, he hit the trigger.\n\nThe edge of it caused him to cough, but he thought he'd hit her, and she staggered a bit before falling heavily. But it was the two tranquilizer darts that had done that. There were still more gunshots now.\n\nSomeone staggered across in front of him, and he didn't recognize the guy, so he caught him on the head with the heavy metal cylinder. Down he went. Javier coughed again, and suddenly he realized it was over. The Mexican lay on the floor, probably dead from the bullets through his head and chest. Nicola had her hands on his face, checking if he was dead perhaps. Or making sure of it. Javier didn't care at this point, though they'd wanted him alive, hadn't they?\n\nMark had subdued the other most dangerous of the Changed, and Berthold had him fully handcuffed shortly. Javier stumbled over to start doing the same with Janelle. Ankles first, and then he cuffed her to a wrought-iron bench for good measure. \n\nThe other Changed guard was dead of multiple gunshots, and there were more casualties. Felipe lay still, and when Javier approached he knew the other man was dead. Also shot repeatedly.\n\nNicola was kneeling next to Frederick now, crying.\n\n\"I'm sorry,\" she said to him, though Frederick couldn't hear it. His head was smashed on the floor, blood spattered everywhere. \"I'm so sorry, Frederick. I can't fix this.\"\n\n\"Is that all of them?\" Lukas asked, apparently unmoved by the death around him. His ankles were still handcuffed, but it hadn't prevented him using his gun. He'd said he wasn't going to do that, hadn't he?Another guard lay dead near his feet. Javier shook his head, trying to count.\n\n\"Yeah,\" Selena said. She was sitting, holding a rag against her thigh. Javier hurried over to check on her. His mind was clearing quickly, now that the Mexican was dead. \"The Mexican, and five others. All here. Mark, you don't sense anyone else?\"\n\nMark shook his head. \"It is quiet. Shall we radio Grace and Kat?\"\n\nThey all looked at Lukas, who nodded and then made the call. He heard Kat's relieved voice in reply, and he relaxed a little. It was really over. Selena's bullet wound was messy, but she said the bullet had gone through the edge of the muscle. She wouldn't want him to touch her to find more, even under these circumstances, and he trusted her. There would be time to clean it back at the hotel. They'd done it. They'd actually beat the Mexican, and maybe saved the world. It was impossible to wrap his head around the idea.\n\n\"Lukas, why did you shoot?\" Selena asked. \"I thought we agreed, no guns unless absolutely necessary.\"\n\nLukas looked puzzled for a moment. \"I think this was necessary, don't you? And truth be told, I was never convinced we or anyone else could keep the Mexican prisoner. He was far too dangerous.\"\n\nSelena nodded, but her eyes were on the other man crumpled at Lukas's feet. And there was the second dead guard, the Changed one that Berthold had shot repeatedly.\n\nBerthold was sitting by Felipe's body, shaking his head.\n\n\"A heavy price,\" he said miserably. \"Yes, the guns were necessary, or it would have been even worse.\"\n\nJavier had the sense he was missing something important, but it kept slipping away. When he mentioned it to Selena, she agreed. \"I think it was the Mexican's attack. We know how he can damage memories. We might never remember exactly how we distracted him long enough for the attack to work. Maybe it was Nicola, or even some trick up Lukas's sleeve. But we did what we needed to do. And now we have three prisoners who know a lot. It was a high cost, but it still was worth it. We won, Javier. Let's take our dead and leave.\"\n\nWhen Grace arrived in the first car, she jumped out and gave Javier a kiss on the lips, startling him. But he was damned glad to see her, and Kat, and all of them alive. It was over, truly over, at least his part in this. Who knew what would happen with the war now, but the danger to the whole world would subside, as Lukas had said. It was time to go home, wasn't it?\n\nSelena said this wasn't an ancient place of the type that could trap the Changed. But as the car took him away, he felt something trying desperately to pull him back. And no matter how hard he tried, he couldn't remember what it was.\n\n* * *\n\n\"Sit,\" the woman said. Or was it a woman? The voice was strange, distant. Esther blinked in confusion, trying to remember where she was. But her body sat in the chair all on its own.\n\nThe room was dark, but Esther was getting her senses back, at least somewhat. There was a modest desk, a simple bed against a wall. Massive bookshelves filled with eclectic titles in several languages. Through the wide glass window she could see a perfectly tended small garden, and trees outlined against the night sky.\n\nThis was the servant's room, but not as she remembered. And one of these people was nothing like what she'd sensed.\n\n\"Edgar, please bring our guest some food.\"\n\nThe stooped man silently shuffled off, closing the door behind him. Esther shrank away from the other person, cloaking herself as best she could, trying to make sense of what she was feeling. \n\n\"You just as I hoped,\" the voice said. A woman, Esther was pretty sure now. She couldn't seem to look directly at her. \"In truth, far more powerful than I had realized. These precautions are necessary, but they will be temporary.\"\n\nThe woman picked her up, chair and all, without any apparent strain. Esther ended up against a stone wall, with the woman holding her arm up behind her shoulder. The skin of the woman's hand was strange, smooth. Featureless. Esther's arm rested in place despite all of her efforts to move it. Desperately, she tried to escape to otherspace, to look for a weakness, but the woman clicked her tongue.\n\n\"So powerful,\" she said. \"I cannot allow you to run away like that. It is something new and beautiful, and we will explore it together.\"\n\nThe woman closed her eyes, and Esther's hand pressed painfully back against cold metal. It was a heavy iron railing, set into the wall. Slowly, impossibly, the railing bent around Esther's wrist, more solidly than any shackle. When it was finished, the section of railing had become a seamless loop, fitting her wrist perfectly with no sign of its original shape. \n\nThe woman seemed to relax. \n\n\"It has been a long time since I had someone to show off to,\" she said. \"I had forgotten that sometimes such things can bring joy. Ah, you are interested in me, then?\"\n\nHer vision was returning. The woman's face was smoother than ivory, and as dark as the Mexican's. She had a bright, unnerving smile, showing perfect white teeth. There was a faint pattern crossing her face, presumably Changes, but they evaded Esther's gaze. Her black hair alternated with white streaks, a beautiful pattern on its own, independent of braid or ornament. She wore a simple sashed shirt and long skirt, both of fine cloth. When Esther's gaze tried to probe underneath, the woman laughed. It was an alien sound, as though it hadn't been used in a long while.\n\n\"Now, I suppose I should be flattered,\" she said. \"Very well, then.\"\n\nEsther's vision returned more completely, and the woman undid the sash, stepping out of her skirt and pulling the shirt over her head. She turned around with an ironic flourish, letting Esther stare at her.\n\nShe was like Abuela, or the Mexican, but so much more. Her skin was a tapestry, covered in so many overlapping Changes that they almost appeared to form a larger structure, like a fragment from otherspace. Some of the freckles glowed, pulsing faintly.\n\nShe did seem to be a woman, with small patterned breasts and something like a woman's genitalia, more so than Esther in any case. She had no body hair at all, not even the fine fur that Esther did.\n\n\"You like women as well as men, don't you?\" the woman said, looking delighted. \"That could be enjoyable. It's been a long time since I've found pleasures of the body interesting. Oh, far too long with that arrogant peacock. But he was interesting once. Not so powerful as you, but he had his novelties, until I learned them. And he was a more satisfying lover than most. Still, he went the way of most such men, consumed by his complicated schemes and his own power.\"\n\nShe retrieved her skirt, but didn't bother with the shirt. \"I even let him borrow my name, because it was amusing to see him strut in that outfit. And then through all the decades after I had him forget me, he maintained the role, never using a hint of his great intelligence and power to understand the cultural mantle he was claiming. Powerful as a hurricane and as shallow as a puddle.\"\n\nShe smiled, her eyes glowing with a terrible intensity. \"Perhaps I should have you continue his charade, but I think not. It can be your name for me, then. The young mathematician and the last of the Mexica. We women have always been the ones to endure, and you are the one who will bring me into this new age.\"\n\n* * *\n\nThey were gathered in Javier's room, and all eyes were on him.\n\n\"I can't explain it,\" he said. \"The Mexican did something to our memory, and we're forgetting something back there. We need to go and find what it is.\"\n\n\"All the way back to Chiapas?\" Oscar asked. \"After we barely got through the first time? No, we should take Jackson's offer and get on the plane. She has no reason to harm any of us. Look how useful we've all turned out to be. And if not Jackson, at least let's plan a more careful route back. We're not in a hurry anymore.\"\n\n\"Exactly,\" said Javier. \"We can wait for a bit, try to figure out what he did to us.\"\n\n\"You're not talking about Chiapas, are you?\" Selena said, wincing as she tried to get her injured leg comfortable. \"It's somewhere else, closer by.\"\n\nHe nodded, grateful. He'd forgotten that bit. They all seemed to be forgetting, almost as if they'd never killed the Mexican at all.\n\nLukas's eyes were distant. Surely he would find it, if any of them did. With his immense memory, he'd see the hole that had been punched in it somewhere.\n\n\"No,\" he finally said. \"Everything connects. There is the mystery of the missing seconds, but we've come up with enough plausible theories. Perhaps we will never know exactly, but we know all the important contours. This mission accomplished just what we hoped, despite our terrible losses. Janelle probably won't be a very cooperative prisoner, and I have doubts about the other Changed man. But the third prisoner seems to have been some kind of messenger, and without the Mexican to fear, I believe he will give up enough information to convince Myra Jackson and her team that the Mexican truly was the mastermind of Black Christmas. The Changed will have more breathing room, and the nuclear powers will have a chance to step away from the brink.\"\n\nJavier nodded with the others. Everything Lukas said made sense, and they should be celebrating. There shouldn't be anything left holding him here, and yet there it was. Lukas looked at Javier, and Javier flinched as always, because sometimes it seemed like Lukas could read your mind. Frankly right now he wished Lukas could actually do that. Find what was missing in Javier's mind.\n\nLukas walked towards the door. \"I will leave in twenty minutes along with any who wish to join. As agreed, we are independent now. Perhaps our goals will overlap again.\"\n\nHe gave a single last glance to Raj, and then walked out. Oscar and Berthold were the only ones who followed him. \n\n\"I agree about Jackson,\" Nicola said shortly. \"She's a snake. She'll take care of Frederick and Felipe's bodies, and maybe those prisoners are better with her than anyone else, but we should find our own way out of Mexico.\"\n\n\"Do none of you believe me?\" Javier asked desperately. He wasn't even sure he believed himself. He knew he'd been among the most affected by the Mexican's illusions. Maybe his mind had been damaged, and he was hallucinating.\n\n\"I don't disbelieve you,\" Selena said. \"Something's not right. I can feel it gnawing at me.\"\n\n\"Like the thing about Chiapas,\" he said. Selena slowly nodded, but the others looked confused.\n\n\"What she just said,\" Javier said. \"Three minutes ago. I'm thinking about something closer than Chiapas. We were there, and that's where we need to go back.\"\n\nMark and Nicola nodded hesitantly, and Javier had a flash of inspiration.\n\n\"Everyone, start writing,\" he said. \"Write everything down you remember, starting with this conversation, and going back to the mission we just did. Even irrelevant details. I feel like there's some aftereffect of what the Mexican did, as though we're still confused.\"\n\nThey looked at him skeptically, but Grace went looking for paper.\n\nMark seemed irritated. Of course, he couldn't write, so they needed someone to write for him. But Kat had a better idea.\n\n\"Hey, Mark, you can just talk to my laptop. It can record you.\"\n\nMark nodded, following Kat to the corner and talking quietly into the microphone while the rest of them wrote.\n\nSelena took a long time to finish, but Nicola was interminable, filling page after page with notes. He sometimes forgot how good her memory was. She always seemed defensive about it, for some reason. \n\nThe others all seemed a bit annoyed by this game, but they passed around what they'd written, and everyone went up to listen to Mark's jumbled account.\n\n\"These don't match nearly as well as they should,\" Selena said at the end. \"I know eyewitness accounts can vary remarkably, but some of us have excellent memories. The discrepancies look random, though. I don't know what it means.\"\n\n\"It's probably what Javier said,\" said Nicola. \"A lingering effect of what the Mexican did to us. It scrambled our memories for a longer period, and we're still having trouble. I'm glad Javier made us do this. We should probably do it periodically, to make sure the effect is subsiding.\"\n\nJavier shook his head in frustration. \"It's not just that,\" he said. \"Can we at least stay here, in Oaxaca? All of us, for a while?\"\n\nThey looked at each other, and Javier. \n\n\"I don't see why not,\" Grace finally said. \"It's a beautiful city, and they're saying it's still pretty safe. Kat and I could use a vacation. And however we get out of Mexico, we should probably do it together for safety.\"\n\nWhen the others had left, aside from Kat and Grace, he flopped on his bed. There was a small shirt lying on top of his discarded pants from yesterday. He tossed it at the other bed, where the two women were making out in a pretty distracting fashion.\n\n\"Hey, Grace, you lost something,\" he said.\n\nShe picked up the shirt and laughed, holding it in front of her chest.\n\n\"Extra-extra-small? What size do you think I am, anyway, Javier?\"\n\nHe blinked, confused. Kat was egging Grace on to try the tiny thing on anyway.\n\n\"Weird,\" he muttered, glancing around the room. There was a second bag next to his, one he didn't recognize. Had they accidentally stolen someone's luggage getting off the plane? No, that made no sense. Why would they have lugged it all this way?",
        "\"Hey, guys, do you recognize that bag?\"\n\nKat sat up, looking. She shook her head in confusion. Grace didn't recognize it either.\n\nHe went ahead and unzipped it. It was mostly clothes inside, same as all their bags. Everything seemed as small as the shirt. He dumped it out on the floor, and the others came to join him. There was a small pad with some strange abstract drawings that seemed vaguely familiar, but he didn't see anything identifying. Just clothes, including some dirty ones. Some of them had actual dirt on them, as though this woman or girl had been scrabbling around outside like they had.\n\nHe felt weird pawing through these clothes, especially after Kat held up a tiny bra.\n\n\"I forgot they even came in this size,\" Kat said. \"What a cutie she must be. Do we have a stowaway pixie in here? That could be all kinds of fun.\"\n\n\"Kat!\" Grace said. \"These might be a girl's clothes. Don't talk that way.\"\n\n\"No, it's a woman,\" said Kat. \"Look at that sexy pair of panties. She meant business wearing something like that. What's your expert opinion, Javier?\"\n\nShe tossed them at him, and Javier had a sudden bizarre flash. Underwear in his teeth, just like this. Strangely smooth skin, the taste of a woman he loved more than\u2014\n\nHe brought the underwear up to his nose, hardly noticing Kat's cackles, and the smell was so achingly familiar, but it kept slipping away.\n\n\"Goddamn, you're selling it, Javier,\" Kat said. \"I hope you have a chance to return those to the lucky woman.\"\n\nWhat the hell was he thinking?\n\nGrace noticed something in his expression. \"Kat, stop teasing him. Is everything OK, Javier?\"\n\nHe shook his head. \"I'm still rattled, I think. And I guess these clothes remind me of someone, but I can't quite place it.\"\n\nGrace nodded sympathetically. \"I can't understand how they got here. Maybe someone left them behind, and we were so busy with preparations that we never noticed.\"\n\nJavier nodded, though that didn't seem right. And on a hunch, he pulled out his paper and jotted down what he remembered about the clothes, what they reminded him of. \n\n\"Don't read this,\" he said, shoving the paper back in his luggage. \"It's personal.\"\n\nKat nodded seriously, and then she attacked Grace, who started giggling. Soon Grace's perfect brown breasts we exposed, and she lay back, smiling contentedly. Javier couldn't help but look, and Kat knew he was looking. She took great care to give him an unobstructed view as she nibbled gently along Grace's torso, up the side of her breast, flicking her tongue lightly across her lover's nipple before briefly locking eyes with Javier.\n\nHis dick was rock-hard, but he looked away nervously, knowing Grace wasn't as comfortable with this sort of display as Kat was. But it was more than that. There was something missing, and it related to whatever was wrong with his memory. He'd just been thinking about it. He heard Kat and Grace whispering, but he kept looking for something. There were random clothes strewn on the floor near him for some reason. Small underwear, way too small for Kat. But Grace wasn't usually so messy.\n\n\"Do you want to watch?\" Grace asked nervously, interrupting his thoughts. \n\nJavier jerked, looking over at the couple. Kat had taken off her shirt as well, and Grace was down to just her panties. All of a sudden he just wanted everything to be over. Wasn't it over? They'd done what they needed, and saved the world. Didn't that merit some celebrating? And Christ, he wanted them both. Kat was kneeling on the bed in front of Grace. When she suddenly slipped a hand under Grace's underwear, Grace made a noise somewhere between a surprised cough and a moan.\n\nJavier found himself walking towards the other bed in a daze, and he felt a warm relief wash over him. Things were complicated with Kat and Grace, as they always were. He knew he had to give Grace her space. But being a third wheel wasn't so bad, not if he got to be at least part of the action, from time to time anyway.\n\nWhatever Kat was doing under Grace's panties was driving her lover crazy, and Grace sat up higher, pulled Kat into an unexpectedly aggressive kiss. Kat unsnapped her jeans with her free hand, waggling her ass at Javier. Then Grace's hands were all over Kat, pulling at her pants, finally getting them down far enough to slip her fingers into Kat's bald pussy.\n\n\"Fuck,\" Kat murmured, squeezing her legs around Grace's hand. She pulled away from Grace's kiss and put a hand roughly behind her neck. \"You like Javier watching? You want to see more of him?\"\n\nGrace coughed again, rocking against Kat's hand, not quite looking at Javier.\n\nKat pulled her hand out of Grace's underwear, licking her fingers and gripping Grace harder by the back of the neck. Grace's eyes were locked on Kat's, the need obvious.\n\n\"Tell him, then,\" Kat said.\n\n\"Kat,\" Grace said uncomfortably, trying to pull Kat closer again.\n\n\"Tell him, and I promise you won't regret it.\"\n\nGrace finally glanced at Javier, but Javier was distracted now. Something he was forgetting. It was like a phantom pain behind his eyes.\n\n\"I like it when you watch,\" Grace whispered, her fingers sliding along Kat's wet pussy. Javier nodded, smiling vaguely in a way he hoped was reassuring. Was he going to do more than watch this time? Why couldn't he focus on this fantasy scene, playing out right in front of him? He didn't really expect anything with Grace, not after that one failure, but Kat was another story, if things worked out right. He moved closer, right next to their bed.\n\nKat's fingers found Grace's underwear, pulling, exposing the thick black bush that Javier secretly loved so much. Grace groaned when Kat's fingers brushed through the hair, touching her once, twice, and then pulling away again. She licked Grace's juices from her fingertips, then plunged a finger inside Grace. Her lover gasped.\n\nAnd then Kat pulled out, reaching to Javier's mouth. Without thinking, he opened his lips, tasting Grace on her finger. He stared into her brown eyes, heart pounding, thinking about that day, the feeling of thrusting inside Grace, the brief moment they'd shared their bodies. He didn't know what was going to happen this time, and it didn't look like Grace knew either. He felt Kat's hands on his stomach, and suddenly Kat was pulling off his pants, leaning over to take his hard cock in her mouth. \n\nGrace was staring lower now, watching as Kat took inch after inch, until there was no more, her lower lip brushing his balls.\n\n\"Holy fuck,\" he muttered, because no one had ever done this. He'd only vaguely known it was possible. Kat massaged his ass and breathed deeply, squeezing his whole cock with her mouth and\u2014throat? \n\n\"She's been practicing,\" Grace said, laughing nervously, glancing back up at him, her hand drifting lower on her stomach. \"It\u2014oh, God, this is so fucking hot. Do you mind?\"\n\n\"Are you kidding?\" Javier asked, managing a nervous smile. Grace nodded quickly, slipping her fingers into her bush, managing to look embarrassed as she masturbated, despite everything. God, this was what he needed. Get all the stress out. He didn't even care if he and Grace did anything directly, not when Kat was doing this magic. Maybe he could return the favor for Kat. Or maybe even Grace.\n\nHe put that out of mind before his body betrayed him. He was going to make this last, to forget about all the stress. Grace's other hand found Kat again, and Kat moaned into the base of his dick. He was suddenly reminded of Nicola, and he guiltily looked that direction. Well, if she and Mark wanted to watch, there was nothing stopping them. His dick twinged harder, and Kat finally began to move, slowly letting his cock out before taking it all in again. Maybe they'd even come join him. Like that night before they went on the mission, when he'd been fucking Nicola, and Mark had been with\u2014Kat, that was it. God, what a crazy night that'd been.\n\nSuddenly Grace gasped, and he locked eyes with her as she shuddered through an orgasm, legs closed tight around her hand. When it was all over, she looked almost embarrassed.\n\n\"Uh, sorry, I didn't realize\u2014well, never mind. There's probably more,\" she mumbled.\n\nKat started to shake, and when she pulled completely off Javier's cock, she burst out laughing. \"Damn right there's more. God, how many times did you come, that one night?\"\n\nGrace looked all the more embarrassed. But she'd opened her legs again, and now she reached to stroke Kat's ass. \n\nKat nonchalantly took Javier's cock in hand, stroking it with an easy expertise. \"You need some attention, Grace? Maybe an extra hand, or three?\"\n\nGrace looked at Kat, then Javier, knowing what she was asking. \"Uh, I'd rather keep watching. If you don't mind.\"\n\nKat laughed, standing up to finish undressing. Javier did the same, staring at her huge breasts, her slightly rounded stomach, her eager eyes, not knowing what she wanted. Wanting both of them, and Nicola too. He felt so fucking greedy, but there was an aching need, something he just couldn't seem to fill. He'd settle for his friends. Grace was masturbating again, using her other hand to brush one of her nipples, and Javier's hand found his own cock. Watching each other. Grace looked almost as desperate as he felt.\n\nAnd then Kat was pushing something in his hand: a small bottle.\n\n\"Forgot the condoms,\" she said. \"More's the pity. But I'd really, really love to feel that fat cock in my ass.\"\n\nThen she was on all fours, eyes closed, waggling her butt gently. And Javier certainly knew how all this worked. He loved anal sex. He thought about all the times\u2014but he was having trouble remembering. What the hell? Well, he'd worry about that later. For now, he got himself behind Kat, spreading the lube generously on his dick, on her. He wiped his hand on the sheets, and he felt a gentle hand on his back. Grace, behind him. There was the lightest touch, her lips on his shoulder, and he stiffened.\n\n\"This OK?\" she asked, breathing heavily.\n\n\"Fuck, yeah,\" Javier said, and he leaned closer to Kat. Hands on her hips, dick just so, savoring the anticipation another few moments. He wished they could do it the other way, but next time. Everything was oddly familiar, and not familiar. Grace's hand was on his ass, and he shivered, reaching to stroke Kat's back, low, where she had the rough patches of skin\u2014\n\nJavier's mind was gone, flying somewhere else entirely. Something was horribly wrong. There was a hole in his memory. This wasn't\u2014\n\nHe backed away suddenly, pushing Grace more roughly than he meant. His lube-coated dick bounced like it was mocking him, and he shook his head, trying to clear the dizziness, the strange sense of dislocation. Even as Kat turned to see what was wrong, Javier lurched off to the bathroom, wiping off quickly, splashing water on his face and staring in the mirror. What was he missing? What the fuck was wrong with him?\n\nThe pair in the other room were sitting together now, touching casually and looking concerned.\n\n\"Sorry,\" he muttered, to them, or to himself. \"I'm forgetting something. You guys keep going.\" Javier pulled on his clothes and then fled the room.\n\n* * *\n\nNicola answered the door, and she smiled at him. Javier didn't know why he'd come over here, and now Nicola might have the wrong idea.\n\n\"Too much?\" she asked softly. There was more than a glimmer of hope in her expression, and he saw her glance guiltily back toward Mark. Raj was ignoring them, and Selena was presumably in the bathroom.\n\nJavier tried to capture whatever he was missing, but it slipped away again, because Nicola was so beautiful. The two of them always gotten along so well, though it'd been something else again after that time in Oregon. And then that night, with all of them together in the bed. He even thought he remembered Nicola between another woman's legs, but surely she hadn't actually done anything with Kat or Grace. He'd have remembered that for sure. Nicola didn't like women, did she? It was all connected somehow, to the hole in his brain.\n\n\"How's Selena doing?\" he blurted, trying to stop thinking about Nicola that way. He was getting distracted again. Like before, with the Mexican. And the after-effects? There had been something in his room. Luggage, that was it. He had to remember about that.\n\nMark sighed, glancing towards the bathroom. \"She won't let anyone look at her,\" he said. \"But she still says she'll recover fine.\"\n\nJavier nodded vaguely, looking back at Nicola, grasping for something. The luggage. It was starting to come back, a little. If anyone understood not trusting their own mind, it was Nicola.\n\n\"Can we take a walk?\" he asked her. \"Just the two of us. I need to talk.\"\n\nNicola looked surprised, but she nodded. \n\nJavier talked quickly when they reached a busier section of street. \"Nicola, I'm going insane. There's a strange woman's luggage in my room, and I'm having trouble even remembering it's there. Everything's distracting me. The thing is, I have this crazy sense that I knew her well. That I even might have been in love with her. Could I have forgotten someone? Could we all have forgotten someone like that?\"\n\nNicola wrinkled her nose, but she didn't laugh it off. \n\n\"All of us?\" she said. \"Like, someone we all knew? Someone who was actually with us on the trip?\"\n\n\"There was something about the clothes,\" he said. \"Shit, I've forgotten it again. Remind me when we get back. But she was very small, whoever she is. And, please don't laugh, but I recognized her smell. Isn't that the strongest sense connection to memory?\"\n\nNicola nodded again, looking baffled. \"This doesn't make any sense, Javier. But you're right. Other things don't make sense, either. I was just talking with Raj, asking him when he's going back to Stanford, and I suddenly realized I couldn't remember how he got involved with us at all. He's brilliant and all, but it just seems so strange. I didn't ask him, because that seemed incredibly rude. I hate to think the Mexican took away something as important as that memory, but it looks like you're worried about something worse.\"\n\nJavier nodded. \"Raj was working with Kat and me on breaking cryptography. Remember those number theory breakthroughs he made? I have to admit I didn't expect he'd join us, though.\"\n\nNicola squinted. \"That's it. Of course. God, I'm all fucked up if I can't even remember basic stuff like that. I hope this goes away. What were you asking me about, again?\"\n\nJavier stopped. They'd gotten off track somehow. It was about something really important he'd forgotten. He suddenly remembered a weirdly familiar smell, a tiny pair of panties. Some ludicrous fantasy about Nicola.\n\nHe swallowed and plunged ahead. \"Nicola, this is a serious question, not me being a pervert. Have you ever made love to a woman? Maybe a really small woman, someone we both knew somehow?\"\n\nShe nearly tripped, staring at him.\n\n\"All right,\" she said unhappily. \"How could you be thinking about that too? I understand guys fantasize like that all the time, but why would you have brought it up now? Yeah, a very small woman. Could she have had Changes? Beautiful ones?\"\n\nJavier's mouth dropped open, and he imagined a perfect blue nipple in his mouth. A spectacular, unworldly woman. This was it. This was what they'd forgotten.\n\n* * *\n\n\"Your friends are trying remarkably hard to hold on to you,\" Abuela said. \"It would be so much easier to do as the peacock would, and simply excise you from their minds.\"\n\nNot Abuela. Never that. This was the Mexican, confusing her again. But she had to play along. She suspected even these little internal rebellions were something the Mexican found amusing.\n\n\"Why don't you, then?\" Esther asked. \"Since it would be easier.\"\n\nThe Mexican smiled her too-wide grin.\n\n\"Easier in the short run,\" said the Mexican. \"Doing it the blunt way creates more problems to fix, problems that could take a very long time to resolve perfectly. But brains like to make sense of things, and pushed more subtly, your friends will find a way to explain the loose ends much more completely than I ever could. Thus I spend the extra effort now, to save much more later. I don't want to be distracted from all the work we have ahead of us. That peacock was becoming a fool, but at least he let me pursue my own studies without interruption.\"\n\nShe stood in front of Esther's chair, and this time Esther whimpered unintentionally, hating herself for it, hating the way the Mexican smiled.\n\n\"We will explore this otherspace of yours together, and I will extend my own vision so much farther. But first, I must break you of this tiresome resistance.\"\n\nThe attack shocked her as always, a horrible violation so much worse than anything she'd felt when Abuela had tried to break down her walls. Abuela had detested the necessary action, and had apologized profusely. But the Mexican was cruel, and perhaps not entirely human anymore.\n\nEsther endured the attack, as she always endured, a tiny sliver of her awareness lodged in otherspace, weeping to see the pain the Mexican was causing her, the worse things she imagined the ancient woman was attempting to do to her friends. And subconsciously, from this tiny stronghold in otherspace, she pulled desperately, hoping to keep a few delicate threads alive. \n\nJavier. She couldn't feel him, wasn't even sure he was near anymore. There was nothing but an empty room and Abuela's terrible strength. But she would hold on to him until the end.\n\n* * *\n\n\"What the fuck do you mean, someone picked them up?\"\n\nGrace shrank back against Kat, pulling the sheet up higher. \n\n\"Javier,\" Kat said, \"Sit the fuck down and stop terrorizing Grace. What's wrong with you?\"\n\nNicola pressed down on his shoulder, and he got the hint.\n\n\"Javier's going nuts about these memory problems,\" Nicola said. \"And I think he's onto something. Those clothes, he was going to tell me something about them. Do you remember, Javier?\"\n\nHe shook his head miserably. \"They were a woman's clothes,\" he said. \"Can't you guys remember? Like, the underwear? A small woman? Maybe someone we knew?\"\n\nKat and Grace shook their heads nervously. \n\nGrace swallowed. \"All I can say is, some guy knocked on the door a couple times. I only answered because he wouldn't shut up. He described the bag pretty well, so we gave it to him. We'd almost forgotten someone left it there.\"\n\nJavier sighed and took a deep breath.\n\n\"I'm so sorry, both of you. For some reason that bag was really important to me, but I can't even remember now. Everything's all fucked up. I should never have yelled at you, Grace.\"\n\n\"It's OK,\" Grace said. \"It's just, you never do it.\"\n\n\"She's saying, if it was me, she could blow it off easier,\" said Nicola. \"Why don't we go talk to the others.\"\n\n\"Wait,\" Javier said, retrieving a piece of paper from his luggage.\n\n\"What's that?\" Nicola asked. But Javier was reading it carefully.\n\n\"I remember doing this,\" he said. \"Remember, I said we should write everything we remembered? I've already forgotten some of what I wrote. And look at this last page, all the stuff I wrote about the clothes.\"\n\nNicola read over his shoulder, and suddenly he wished he'd read to the end first. Some of it was pretty explicit, like a familiar fantasy of his. But Nicola didn't comment on that. Instead she pointed at something he'd skimmed over.\n\n\"Look,\" she said. \"You said a shirt was already out of the bag, and it was *on top* of something you'd worn. I bet that was what you were going to tell me.\"\n\nHe nodded.\n\n\"Right,\" he said. \"It wasn't just that they smelled familiar. This is evidence she was actually here, with us, the way I thought. Nicola, you must have written one of these. Where is it?\"\n\nShe shrugged unhappily. \"Can't remember. Half of what you wrote here doesn't sound familiar. Like, the stuff about mountains somewhere near here. I should go find what I wrote.\"",
        "\"My computer,\" said Kat suddenly.\n\nJavier stared at her, and she clarified.\n\n\"Suppose this memory problem is some after-effect of the Mexican's attack. I think someone suggested that. Well, he didn't attack your handwritten note, did he? He's dead, after all. And his mental attack won't have done anything to our E-mails, secure messages, all of that.\"\n\nJavier nodded excitedly, and Kat got up, wearing only her panties. She opened up her laptop, plugging the modem into the wall. She'd worked out a way to get on the internet free here, some sneaky thing the way she usually managed. \n\n\"Wait a sec,\" he said. \"That guy who picked up the luggage. That wasn't some lingering effect of the Mexican's attack. Either I'm dead wrong about all this, or someone is still pushing on us, the way the Mexican did. Could he have had a partner, trying to cover something up now?\"\n\n\"How would anyone even have known about the luggage, though?\" Grace asked. She joined them, dressed fully now.\n\n\"So either I'm crazy, or\u2014\"\n\n\"You know, honestly, that makes the most sense,\" said Kat suddenly, closing her laptop. \"Let's forget about the luggage. You should go see if Selena's OK. You know how she gets when you don't pay her enough attention.\"\n\nHe stared at Kat, wondering what the hell was wrong with her now. But Nicola figured it out a second before he did, and she took his hand. Javier heard the other pair whispering, and Kat giggling. But it was an act. Kat was always a bit paranoid, and maybe this time she was right. How could they all remember to stay paranoid, though?\n\nWhen they were in the hall, Nicola pulled him into a kiss. Even though he knew it was an act, like in Oregon, he returned it gratefully. Then she kissed his forehead, speaking in that piercing direct-to-skull fashion.\n\n We've played this game before, haven't we? .\n\n Yeah,  he silently replied.  If we're not crazy, those messages are vital. We can't let anyone realize how important they are, not before we protect them. Even from ourselves. \n\nNicola kissed him again, then opened her own room.\n\nSelena was lying on the bed, looking uncomfortable, one leg bandaged and elevated. Javier lay down next to her, much closer than she wanted. \n\n\"Hey,\" he said, blinking his eyes quickly, using their signal for danger. He repeated it a few times, and she nodded slightly, face alert. He shifted away to give her more space, then began arduously tapping out Morse code on his palm. It would have been difficult for him to talk at the same time, but Selena seemed to understand, and began filling the time with random observations about Oaxaca.\n\n Worried someone is still messing with our memories,  he sent.  You are the best at blocking, if you concentrate. Can you do that? \n\nShe nodded slightly, and then Javier joined her pointless conversation. After a few minutes she rubbed her head.\n\n\"You know how exhausted I get from all the noise, and this wound is making it a lot harder. I think I have to meditate for a while in the corner.\"\n\nJavier nodded, heading back to his room. His stomach sank when he saw Kat on her laptop now, modem plugged in. He hoped she hadn't forgotten, or everything might be lost.\n\n\"Hey, want to check E-mail?\" she asked. \"I still have a lot to catch up on, but I know you wanted to see if your Mam\u00e1 replied.\"\n\nShe smiled, and he pulled up to the screen. On it was a single message she'd sent to their own account.\n\n Everything is backed up, she'd written.  I made the backup drives read-only in a way even I can't undo. Only physically destroying them will do it, and the drives are physically scattered all over America. And Javier, you were right. \n\nHe smiled, squeezing her hand before settling in.\n\nTen minutes later he wiped his eye. She was there, scattered randomly across the messages. Central to everything their group did, and most especially everything Javier did. He was starting to remember, now. She was the reason he even knew most of the others. \n\nEsther. He would repeat her name until he could never forget it again.\n\n* * *\n\n\"This Abuela is quite a figure in your memory,\" the woman said, the one who wasn't Abuela. \"But do you see how it makes sense? You and Abuela are probably both granddaughters of mine, many times removed. Most of the strongest children are.\"\n\nEsther liked these times, when the woman told her things, in between the pain. She was hungry, but Edgar hadn't brought her any more food. She remembered. She'd begged and begged, and he'd gone out to tend the garden, as though she wasn't even there. She'd soiled her underwear at some point, and she didn't even know how much time had passed. There was something wrapped tightly around her chest, something she didn't remember.\n\n Forty hours, eleven minutes,  came the voice in her head.  It is rope around your chest. The Mexican has seen things in your memory that leave her more nervous about your strength than she wants you to believe. \n\nThe voice was so clear she nearly cried, and the woman looked at her sharply. But she hadn't heard it. It was Esther's own voice, the fragment of her still in otherspace. Her soul, watching over her like an angel. Something didn't make sense in that, but she smiled blearily.\n\nThe woman sighed, looking at Esther as though she were a particularly troublesome child.\n\n\"You're making this harder on yourself,\" she said. \"And I have to say this struggle is losing its novelty. You know why they called me the Mexican?\"\n\nThe Mexican. That was who she was. Esther smiled and shook her head.\n\n\"I was a novelty,\" she said. \"I was the outsider, abandoned down in that valley below, with no memory, speaking only Nahuatl. In a child, it was amusing. As I grew in such a strangely slow fashion, it became an insult. By the time I was a young shaman, it had circled about into a sort of respect. And then Cort\u00e9s came, and I was nearly killed by his local allies, for being the Mexican. To them I represented Aztec colonial power, even as that empire was eclipsed by a second. And why did Cort\u00e9s beat all of us?\"\n\n\"Disease?\" Esther mumbled. She'd read an article for class arguing that hypothesis.\n\nThe Mexican began laughing, an awful sound as always.\n\n\"Oh, I will enjoy having intelligent conversation again,\" she said. \"Knowledge, I was going to say. The knowledge of better weapons, ships, political manipulation, and more. But of course I saw the disease firsthand, and perhaps you have the better answer. At the time, I recognized the knowledge the Spanish brought with them, and I identified it with power. I was not wrong in that, Esther. And you have such precious knowledge already: the paths of the world, what everything is made of. The knowledge that true power rests upon. I am patient, but I will have it in the end.\"\n\nWithout warning, she slapped Esther's mind, so hard that a part of her cracked, the part that was trying to hide otherspace from her. And now she stared in horror, as the Mexican's face lit up, sensing the great realm that Esther had begun to straddle. \n\n\"Now we are making progress,\" the Mexican said, and suddenly she was inside otherspace with Esther, looking around in awe, her ancient mind attempting to make sense of the disorienting landscape of shape and connection.\n\nEsther shook in terror, but a part of her exulted, because the Mexican had no reference at all in here. Esther couldn't afford to give her any clues, but even within the confines of this fortified room, there was an immensity of conceptual space. Room to think, to consult with the tiny portion of her still fortified in a more distant part of otherspace. Part of her was still fighting, and that part was forming a plan.\n\n* * *\n\n\"Mam\u00e1?\" Javier said, heart rising. He should have called her already.\n\n\"Mijo,\" her voice came, shakily. \"Is it all over? Are you back?\"\n\n\"I'm safe,\" he said. \"It's over, and we were successful, Mam\u00e1! Everyone's safe, but we're still down here. A few things to finish up.\"\n\n\"That's wonderful, but don't tell me you're safe, mijo,\" Mam\u00e1 said. \"Not until you walk through the front door and let me kiss you. What things? Or is it the usual?\"\n\nMeaning, stuff he couldn't talk about over the phone. He sighed. \"The usual. Mam\u00e1, remember that girl I was crazy about first year in college?\"\n\nThere was a pause.\n\n\"Kat? Is she there too? I hope she and Grace are still\u2014\"\n\n\"Yeah, they're fine,\" he said. \"I guess you saw them last when you were staying after Black Christmas. Seems like ages ago. You remember how upset Raj was?\"\n\n\"How could I forget,\" Mam\u00e1 said unhappily. \"Javier, are you trying to get at something?\"\n\nHe cursed silently. Mam\u00e1 was always much too perceptive.\n\n\"Not really,\" he said. \"My memory's a little weird right now. A side effect of something that happened during the fight. Random things keep popping into my head, but it's getting better.\"\n\n\"You should come home, mijo,\" she said. \"You need some time to rest, after everything you've done. And I know you love all your friends, but they mostly have other people. You're the type who needs someone to love, to give your heart to.\"\n\n\"Is this your way of saying you've got someone in mind?\" he asked.\n\nMam\u00e1 laughed happily. \"No, silly. Just that you seemed lonely when I visited.\"\n\nThey talked a while longer, and then Javier hung up. Some time later he casually went over to check his E-mail, on the laptop Kat left open for everyone now. He read the new messages the others had written, and he tried to make them fit a pattern. Then, before he forgot anything, he began typing.\n\n Mam\u00e1 forgot about Esther, too.  Javier imagined the words burning themselves into bits on a hard drive thousands of miles away. Unchangeable, like a CD-ROM. It was strange to think of this as more permanent than paper. They'd all written things on paper, and somehow they'd all disappeared. Thrown away in a moment's inattention, probably.\n\nWhoever was behind this had terrifying power. Changing memories or altering behaviors at such a distance was on the level of the Mexican himself, but even more subtle. More like Franklin, but he'd needed his victims in close proximity to reinforce his illusions. And there were only two things that seemed to be under attack: Esther, and the true location of their raid against the Mexican. The conclusion was all too obvious. That's where Esther still was, and someone didn't want them to know that. She'd come with them on the raid, and then somehow disappeared, maybe during the seconds none of them could account for. Whoever had her might be as dangerous as the Mexican. A hidden ally of his.\n\nHe quickly wrote all those thoughts down as well, then closed the laptop. He had to remember to keep checking his messages. They all did. He scribbled a note to that effect, leaving it on the stand next to his bed. But he might throw it out.\n\n\"Javier?\" Kat said. The other two women were still naked, partly covered by the sheets. He knew they had a lot of sex, but this seemed even more than normal.\n\nShe and Grace had shifted in their bed, and Grace was patting the spot between them. All of a sudden he needed something familiar, someone he could hold on to, even while his memories slipped away again overnight. He took off his shoes, then all the rest of his clothes. And when he'd turned the light off, he found his place, held firm between the two of them, breasts and hips and lips and thighs. Tomorrow he would have to remember again, but just for a while, it felt wonderful to lay down the burden.\n\n* * *\n\n\"There is a map hidden in here,\" Abuela said. \"It will take time to understand, but I begin to see how you developed your remarkable sensitivity so quickly. This is a more efficient way to organize information than any I have seen.\"\n\nAbuela had a fearsome intellect, and Esther was eager to show her these secrets, but the older woman's mind was slow to adapt. She quietly suspected that the Abuela would never be able to understand the underlying structure of otherspace, and part of her took satisfaction in this. It was an uncomfortable feeling, and she tried to make it go away.\n\n\"That's right,\" Abuela said. \"You're doing so well, my child. Have no worries. I have finally solved the problem that was distracting both of us. Though I should not be so hasty, I suppose. I may have to begin a different approach. If they are convinced of your death, it will be easier to reconcile their stubborn memories, along with any records that have not been expunged.\"\n\nAbuela sighed. \"That approach leads to other problems I hoped to avoid. Your abilities are too unusual, and there is power in the mere knowledge that something is possible. That will mean still more effort on my part, to alter that knowledge. Still, one way or the other, they will move on, as you already are. Soon I will be able to make your body comfortable again. And perhaps we can make each other more than comfortable.\"\n\nShe had a sudden vision of lying comfortably on Abuela's bed, while a soft tongue explored her, moving with the sure artistry of vast experience. Someone who had made love countless times, even if not recently. And the thought was utterly repulsive for some reason, despite her body's interest.\n\n\"Well, there will be time enough for that,\" Abuela said, kind and patient as always. \"Perhaps you can help me explore this geometry once more.\"\n\n* * *\n\n\"Fuck!\" Kat said. \"Fucking shit. Grace, was this you?\"\n\nJavier came out of the shower, towel wrapped around himself, wondering what the commotion was. Kat was holding her laptop, or what remained of it. It was as though someone had dropped it, and then stomped repeatedly on it. He couldn't imagine how it'd been damaged so badly.\n\nGrace was staring, equally horrified.\n\n\"Of course not, Kat,\" she said. \"Why would I ever do that?\"\n\nKat glared at Javier, but he just shook his head. There was something he'd been intending to do this morning, but he didn't really remember. Probably it was just the usual pre-travel jitters. They had a difficult path ahead of them. All yesterday they'd been arguing how best to get out of Mexico.\n\nThere was a knock at the door, and Javier looked through the peephole: Nicola. He let her in.\n\n\"Hey,\" she said. \"Everything OK here? I heard a commotion.\"\n\n\"Look at my fucking laptop,\" Kat said, gesturing in frustration. \"Could someone have broken in last night? But my wallet's still right there.\"\n\nNicola shook her head. \"No, Mark would have sensed that. Though neither of us slept well last night. Mark found me sitting confused in the bathroom at some point. I'm happy we're getting away from here.\"\n\n\"Kat, it's not so important,\" said Javier. \"We have plenty of money, and we can replace it when we get back. That laptop was empty, anyway. You were too worried about it getting damaged, or someone taking it. Why don't you just rip out the drive, in case anything was left on it, and we can finish packing.\"\n\nKat shook her head angrily, but she pulled out her multitool and started prying open the mangled case. As he finished packing, Javier kept looking for something. A note, a reminder of something. But there was nothing. Just a bunch of clothes. He didn't know why they'd stuck around this dingy hotel for days, since they hadn't even done much tourist stuff. Probably it was a kind of post-stress lethargy they'd all had. Defeating the Mexican had been such an accomplishment, and now they had to go back to their more mundane lives, with no one even knowing they were the big heroes. It was depressing to realize how little was waiting for him back in California. Probably he should go visit Mam\u00e1 for a while, until he got out of this funk.\n\n* * *\n\nGeometry was the key, Esther remembered suddenly. Geometry, and topology, a grand new connection she'd finally understood. She wanted to tell someone, but the Mexican couldn't possibly understand. Very few probably ever could, no matter how much time they spent trying.\n\nThe Mexican. Esther held the name in her mind another minute, and the Mexican didn't seem to notice. Esther had been doing this more and more, segregating her thoughts, like facets of geometry in otherspace. Presenting only a projection of herself into the shallowest reaches, where the Mexican wallowed. Esther looked at the Mexican's presence in otherspace, from above and below, from directions without names, and the pieces came together like a beautiful puzzle.\n\nShe finally understood the geometry of the ancient places, and the reason they reflected the senses of the Changed. It was beautiful, beyond anything she'd ever seen. None of the worldly examples was perfect; each was its own flawed crystal, the impurities giving its particular properties. But here in otherspace itself, Esther could construct a perfect crystal. And so she began, touching strand to strand, shifting planes and n-spaces just so. All centered on the pitifully small region where the Mexican groped, oblivious.\n\nEven as she worked, the shallow projection of Esther's mind groveled to the Mexican. It called her Abuela, begging her to follow farther into otherspace, teaching her elementary geometry, praising her. And the Mexican in her arrogance ate all of it up, until virtually all her senses were drawn into a tiny portion of otherspace. Esther finished most of the first crystal, and then she began the second. A nested structure, each layer helping strengthen the others, forming something Esther hadn't even realized was possible until now. From the inside the fractal crystals seemed to extend out to infinity, yet from the outside they were bounded within a tiny volume of otherspace. Finally, Esther closed the outermost gap, and every other gap snapped shut in quick succession, leaving only the perfect crystals. Exhausted, Esther withdrew completely from otherspace.\n\nA beam of sunlight lit the Mexican's desk. Outside, pine trees waved gently in the wind. The Mexican was slumped against Esther's chair, her presence gone. The woman was utterly trapped in otherspace, and only Esther possessed the key.\n\nEsther began to laugh, or cry. Her body felt wretched. Starved, dirty, muscles bruised and strained from her struggles. Her wrist was raw and bleeding in its shackle, and the ropes around her torso constricted her breathing. But she was alive, and she'd won, for what it was worth. \n\n\"I'm sorry,\" she said to the Mexican, and she meant it. It was a terrible prison Esther had built, and yet she could think of no alternative. It had to be better than death.\n\nSurely it was. The Mexican would hear her words, filtering through the infinite layers of crystal surrounding her. She would likely hear much of what happened around her, more than most humans, even if far less than what she was used to. But only Esther would be able to hear anything she had to say in response, and that would take an effort she couldn't manage right now.\n\nShe reached out weakly for Javier, Nicola, anyone to take her out of this awful place, but she felt nothing beyond the walls. This wasn't an ancient place as Esther understood them, and yet the Mexican had done something, or perhaps adapted something from the truly ancient stones beneath them. After decades or centuries of her presence, the room was attuned only to the Mexican's senses, and Esther doubted she could do anything to alter that. \n\nEdgar came in, staring at the Mexican.\n\n\"Edgar,\" Esther pleaded, voice cracking. \"Edgar, please. We both need your help. The food here will run out. You need to find someone to help you take care of her.\"\n\nEdgar didn't even seem to notice her. After a long time he left the room again, intending to bring the Mexican food, as he had for so many years.\n\nShe called desperately again, but it was no use. When Edgar returned, she squashed her disgust and prepared to compel him, to break through the haze in his mind. It was for the sake of all of them, and she would find a way to make it up to him.",
        "He didn't react in the slightest to her attempts. Within the confines of this room, she thought her abilities functioned, but it seemed the Mexican had safeguarded her slave against others' attempts. Of course she had.\n\nEsther would die in this room, and perhaps the Mexican would as well. It wasn't the ending Esther wanted for either of them, but she had to believe it was better than what the Mexican had planned. \n\n* * *\n\nJavier and the others crept along the strangely familiar corridor. Selena had been sure this was where it had happened, ever since they'd reached the open gate on the road below. And now it was confirmed. There were bodies in the main chamber ahead, and Mark said that one was a man with unbelievable numbers of Changes: the Mexican. Each detail unlocked another memory, and Javier already remembered what the terrible man looked like. Whoever had been monkeying with their minds had finally stopped making them forget. Maybe Esther had beaten them, just like she must have defeated the Mexican, during those seconds none of them could remember. \n\nMark also confirmed there was no one alive here. Javier was trying to maintain hope, because it made sense that the Mexican's associate would have fled with Esther. Mark hadn't sensed any bodies that could match Esther, from the memories they'd been able to scrape together. The dead bodies bothered Javier, though. It was a messy detail, for someone who'd tampered so subtly with their minds. They'd have to examine the bodies, and hope there was a clue there. \n\nMark suddenly held up his hand, and everyone froze. After a few seconds, Selena and Nicola joined him to edge silently forward. Javier followed at a distance, with Grace, Kat, and Raj trailing. They moved right past the ornate doors to the main chamber. Javier could hear something now, indistinct noises from a doorway just around the corner, and he tensed with frustration. The three ahead would have to handle this danger.\n\nTogether, they dashed into the room. He felt the faint rumbling of Nicola's subsonic cry, and a second later Selena called.\n\n\"It's all right, everyone. He's not a threat.\"\n\nIt was a kitchen, of all things. Mark was holding an old man, who looked confused and angry, but wasn't struggling.\n\n\"Where did you come from? Where is she?\" Nicola gripped his chin, forcing him to look at her, but he didn't say anything. He kept trying to look back towards a plate of food. An apple, a sad-looking sandwich, a cup of something dark and hot.\n\n\"He's just a servant, isn't he?\" Javier said. He repeated Nicola's questions in Spanish, more gently, but the man didn't say anything to him, either.\n\n\"There's a door,\" Selena said. \"I didn't sense it before. There must be a room concealed back there. Mark?\"\n\nHe nodded. \"Perhaps it's an ancient place after all. I still sense nothing beyond the door.\"\n\n\"Go,\" said Javier. \"We can handle this man. We'll retrieve you if you become trapped. It doesn't feel like a trap though, does it? This place feels abandoned.\"\n\nSelena nodded. Javier took hold of the man's wrists, but he still pulled towards the platter. Perplexed, Javier let him pick it up with a free hand, and he followed the others back out to the hall, letting the man carry the plate with him as they shuffled along towards the open doorway ahead. There must be something wrong with the man's mind. A disability, perhaps.\n\nMark and Nicola burst through the doorway together, ready to fight, but almost immediately Selena gestured for the others to enter. There was a terrible smell in the room, like an outhouse.\n\nJavier let go of the man's hand, mind reeling. The man walked slowly forward with the plate, but Javier found himself rushing to the wretched-looking young woman tied to the chair, her arm restrained barbarically behind her shoulder in an immense manacle.\n\nThe memories blossomed in his mind. Esther, hiding in the back seat of his station wagon. Esther, looking even worse than she did now, lying unconscious in a spectacular canyon somewhere in Utah. Esther in bed with him, Esther laughing at a joke, or sitting on a log playing with sticks, or in a strange owl costume, holding up her hand with the power of an archangel. He touched her face, and she stirred. When she saw him, she started to cry.\n\n\"Javier,\" she said weakly. \"Javier, I thought you'd forgotten.\"\n\n\"Never,\" he said, though he almost had forgotten, and he knew he was still all mixed up. But they would figure it out somehow. They always did.\n\n* * *\n\n\"It was Selena,\" said Javier. \"She was the one who remembered about the messages, who made Kat figure out a way to check them. We eventually found an internet cafe.\"\n\n\"But you were the one who kept delaying, said Selena. \"You still knew there was something we were missing. God, my memory feels like Swiss Cheese. You say it was all this woman here? That she was really the Mexican all along?\"\n\nEsther nodded, trying to ignore the pain. She felt a lot better now with food and water. Mark had sawed through the ropes in quick order, but he and Nicola hadn't made any progress with the manacle. Nicola had driven off with Grace to procure a tool she called an angle grinder.\n\n\"She called herself the last of the Mexica,\" said Esther. \"I think that refers to the Aztec Triple Alliance.\"\n\n\"Holy fuck,\" said Kat. \"She was an honest-to-God Aztec? What does that make her, four hundred years old or something?\"\n\n\"I think well over five hundred,\" said Esther. \"From the way she talked, she was around for decades even before Cort\u00e9s arrived.\"\n\nSelena shook her head. \"You're sure she's safely confined? I can't even imagine the power she must have.\"\n\nEsther nodded. \"Only I can undo what I did to her. I should warn you that she can hear us speak. I could prevent it, but that kind of imprisonment would be even more cruel than what I've done. With care, I will be able to converse with her safely. And perhaps one day, I will find an alternative.\"\n\nJavier nodded, and Esther knew that he understood, even if the others had difficulty. Every human needed a chance of redemption. The Mexican had been more human, once. And perhaps she could be again. Esther had to believe that, because the alternative was too awful.\n\nThe Mexican was Esther's future. One version of Esther, anyway, one that she could never allow to manifest.\n\n* * *\n\nThey spent an extra day at the Mexican's hideout, cleaning up, burying bodies, and most of all listening to Esther. \n\nJavier thought Lukas would never have left such a mess behind if the Mexican hadn't been pushing them all to leave immediately. He wondered briefly what her longer-term plans had been, but he decided it was depressingly obvious. She would have found more people that others wouldn't miss, probably some street kids in Oaxaca, and then brought them here with her mind, enslaving them for life just as she'd done to Edgar.\n\nEdgar's case was horrifying. He could understand English and Spanish, but he paid virtually no attention to anyone except the Mexican. At first he'd violently objected when they'd tried to touch her body, just so they could clean her. But he wasn't stupid, and once he understood what they were doing, he quickly took over the task himself. A servant beyond all reason. Esther said his mind might be too damaged to ever nudge into a more ordinary life, and she refused to even attempt anything more than a nudge. Javier hated how much it hurt Esther to look at Edgar.\n\nThey set Esther up in one of the larger bedrooms, probably where the false Mexican had slept when he wasn't pretending to be emperor. The real Mexican, the old woman, rested more or less comfortably back in her own bed. No one much liked talking with the old woman nearby, knowing she could hear all of it.\n\n\"So how much of the fake Mexican's powers were actually her instead?\" Kat was asking.\n\n\"Less than you might think,\" said Esther. \"I think he was truly one of the most powerful of our kind. He learned from her how to hide this place, and perhaps after that she helped on rare occasions, but I think she only took over again after we defeated him. It was convenient to offload so much on him, because she has been obsessed for decades with understanding the universe. Predicting the future. I think in some ways she already thought she was a god, more even than the younger Mexican, whom she called the peacock.\"\n\n\"Was she so obsessed with her studies that she missed how reckless the younger Mexican was becoming?\" Javier asked. \"Maybe he'd have slipped up and let someone launch a missile at this place. Or he'd have started a full-scale nuclear war. Surely that would've put a damper on her studies.\"\n\nHe'd been sarcastic, but Esther was considering it seriously. He felt his stomach drop.\n\n\"She could have stopped a missile,\" Esther said slowly. \"Deflected it away, at least. I don't think she understood electronics well enough to do anything else. And maybe she was watching just closely enough to prevent too many nuclear bombs from falling. But I think she would have been comfortable with that, too. She'd survive the fallout, and whatever came after. So would I, or any of the Changed who were strong enough. And from her perspective, it would have been an easy fix for the increasingly annoying task of hiding this place.\"\n\nRaj muttered something and walked out. It sure didn't look like he wanted company.\n\n\"All that power,\" Nicola said unhappily. \"And what she wanted most was to predict the future. Obviously she was exploring Unity. Do you think it was her immense strength that made the biggest contribution to Unity? Did she send a lot of the prophetic visions?\"\n\n\"Some of them, most likely,\" Esther said. \"But I suspect she kept most of those to herself. The younger Mexican dreamed others on his own, and some of them he passed along. I believe the older Mexican found it useful to employ others for computation that way.\"\n\n\"So it is a kind of collective unconscious,\" said Grace. \"Like a big distributed computer, the way Kat described.\"\n\n\"Yes and no,\" Esther said, frowning. \"In a way, it was simpler. The entire framework was set by the Mexican's mind. I think she herself was Unity.\"\n\n\"Holy fuck,\" Nicola said. \"All of it? When I was a zombie, that astonishing feeling of something larger than me, that was just the Mexican's mind?\"\n\nEsther nodded unhappily. \"She was using everyone. All the Chosen. I think she even directed their customs around it.\"\n\n\"The elimination of the strongest children,\" said Selena, voice rising in anger. \"That was her doing. All to protect herself from her competitors, going back for hundreds of years no doubt. But then again, some of you escaped. You, Abuela, a few others.\"\n\nEsther shook her head. \"Some were surely out of her control. But my escape wasn't an accident, and I imagine I wasn't the only case. She was winnowing. Weeding us, like a gardener. The younger Mexican wasn't the first in his position, and for years she'd wanted a replacement. She left a few stronger individuals, watching their development carefully, allowing them to grow in novel ways so she could choose the most interesting. Perhaps if we hadn't managed to defeat the younger Mexican, she would have waited for another more powerful to come along. Or maybe she would have let him kill everyone but me.\"\n\n\"The younger Mexican was Herod after all,\" Grace said slowly. \"Somehow understanding that he was going to be replaced. But that woman truly was Cronus, eating her own children. She's been playing God for centuries.\"\n\n\"She's not a god!\" Esther hissed, and had a sudden coughing fit. Eventually she wiped her eyes. \"Leave me alone, everyone.\"\n\nJavier didn't go, though, not until she was finally asleep. \n\nHe ran into Nicola and Raj outside. The professor looked the worse for wear, same as all of them. They needed to get out of this awful place.\n\n\"You were actually the one who helped Esther the most,\" Javier told Raj. \"I didn't understand when she described what she did to the Mexican, but it obviously involved the breakthrough you'd been working on.\"\n\nRaj nodded. \"I still don't understood it either, though I think I may in time. She's passed all of us, in certain ways.\"\n\n\"That's got to be what she's so terrified of,\" Javier said. \"She looks at the Mexican, and she sees a future version of herself.\"\n\nNicola shook her head vehemently. \"She could never become like that,\" she said. \"That's not Esther. She should remember Abuela instead. Look at how Esther tortures herself even now, wondering if she could have found a less oppressive prison for that horrible woman.\"\n\nJavier nodded. \"We'll have to keep reminding her of that.\"\n\nThey thought about it for a while, and Nicola sighed.\n\n\"The Mexican is worse than a nuclear bomb. I have to trust Esther that she's harmless like this, but it gives me the creeps just to be in the room with her. Over five hundred years old, and God knows what powers that even Esther didn't learn about. Mark doesn't see anything physically wrong with the old witch, so who knows how much longer she might still live. What a burden for Esther to take on.\"\n\nThey looked towards Esther's bedroom, wondering, their own minds trying to grasp such a destiny.\n\n\"We won't be with her forever,\" Javier said finally. \"But there will always be others who see her the way we do.\"\n\n\"Yeah,\" Nicola said. \"But that's a lifetime from now. Let's make it count.\"\n\n* * *\n\nEsther poked awkwardly at her noodles. She still hadn't worked out how to use chopsticks quite right, but Jacob and Tomiko politely pretended not to notice. The couple had settled in so well together, as though they'd just been waiting to find each other. They would never have met if not for a sequence of terrible events, and Esther found her mind wandering, trying to construct an alternate version where Castillo hadn't killed Tomiko's great-uncle, where Abuela hadn't been killed horribly, and yet these two still found happiness together somehow\u2014\n\nIt was impossible, and dangerous for her to think along those lines. It smacked of a power she didn't have, and no one should ever have. Her attention flickered towards her friends, and the living room in the Shack, where Edgar and the Mexican sat unmoving. They were safe, of course: part of her Watch now.\n\nShe hadn't wanted to leave the group, even for an evening, but a few days after their return, Javier had pretty much ordered her to make a longer visit to Jacob.\n\n\"You keep telling us the world is safe from the Mexican,\" he'd said. \"If the only thing making that true is your constant vigilance, then it's not really true at all, is it? Because something might happen to you, and anyway you can't live that way.\"\n\nHe was right, of course, and she was glad she'd come. She'd called Jacob from Mexico, along with everyone else: Javier's Mam\u00e1, Jacob, and Professor Kuznetsov and his wife. Even her lawyer. Everyone she could think of who needed to be reminded of her existence. Jacob hadn't forgotten nearly as much as the others, which gave her an interesting clue. Something about the way he'd suppressed his abilities had made him very resistant to this particular type of memory attack.\n\nThe older couple was too polite to say anything, but she knew they were curious. Over the phone, Esther had only given the barest outline of what had happened, and they deserved the truth, as awful as it was. When she was finished with the tale, Tomiko gave a heavy sigh.\n\n\"What a world we live in. And what a gift that we have you and all of your friends to keep watch. You're everything my great-uncle wished he could be. I only wish everyone could understand how close we truly came to the end.\"\n\n\"Tomiko,\" Jacob said, and a look passed between them.\n\n\"I'm sorry,\" Tomiko said. \"What I really should have said is how glad I am you're alive, Esther, after all of it. I have too much of my uncle's hopes and needs rattling around in me. It's time you had some quiet, and let the rest of us take care of the world for a while, as much as we can. Now, I know you need to talk to Jacob.\"\n\nShe quickly cleared the table and retreated to their bedroom, leaving Esther to face Jacob alone.\n\n\"I haven't told anyone the worst of it,\" she finally said. \"I can't bear to. Javier still hopes the visions were all figments of the Mexican's own creation, brought to fruition by her apprentice, or the Chosen, or her own incredible power. But it's not true. I saw so many things in her mind, Jacob. It was just as I expected of Unity: events grand and small, little to link them, difficult to interpret. But it's been over a week now since I've trapped her, and I've identified a few that have already come to pass. They were not predictions I could have calculated, and there are no longer any Chosen assisting. She really was seeing the future.\"\n\nJacob nodded, and she waited for him to say the obvious: that the Mexican hadn't seen her own downfall, despite all her powers. That despite decades of work, she still grasped mostly at fragments, unreliable glimpses that were perhaps restricted to a few nearly-fixed events. That things would surely diverge over time, without constant nudging: the implacable rules of quantum decoherence and chaotic amplification, blurring all paths probabilistically. These were the arguments Esther rehearsed to herself. \n\nBut he was silent, and finally Esther couldn't stand it.\n\n\"Don't you see what that means? If she has that ability, there is some chance I could gain it as well. No one should have that power.\"\n\n\"Only God,\" Jacob said evenly, watching her. She caught herself nodding vigorously, and Jacob sighed. \"Esther, you know as well as I do that her abilities don't make her closer to God, or the Devil for that matter. Whatever the Mexican was capable of, it's another part of the human experience. We didn't know that before, but that was our own ignorance. Once upon a time, people thought forecasting the weather was witchcraft, and now look where we are.\"\n\n\"That's not the same, Jacob. You know that's just probability, careful application of physics-based models, and\u2014\" Esther frowned, considering.\n\n\"Your abilities allow you to forecast the weather a little, don't they?\"\n\nShe conceded the point. \"You're saying I'm falling into a sort of dualist trap, putting the internal workings of my mind in a completely different category from computer models. And maybe you're right, because that's what Nicola thinks. I can predict the weather because I can sense conditions directly, and while the calculations in my mind slip below my conscious understanding, perhaps they aren't really so different from weather models. It's probably true, and after all I'm nowhere near as good as a real weather forecaster. But I didn't expect this argument from you, of all people. Are you saying that's all there is? Just the physical processes within my mind, performing calculations the universe already does all on its own, but organizing them a little better? So I'm a kind of glorified secretary?\"\n\nJacob laughed. \"Maybe that's a healthy way to think of it, though I'm not so sure we'll ever have a physical explanation for the wonderful capabilities of your mind, or anyone else's. But answer this, Esther. Suppose you woke up tomorrow with the Mexican's abilities. You could see glimpses of the future, and you had truly formidable powers of action. What would you do, then?\"\n\nEsther shivered. \"I'd be terrified. I'd probably be paralyzed with indecision, and I'd be miserable to be around, trying to avoid acting, always trying to understand more before I even thought about acting, and then blaming myself for everything after the fact. I hope that never happens.\"\n\n\"I selfishly admit the same hope, so that you're spared that pain,\" said Jacob. \"But I suspect you won't take measures of the sort I did. Instead you'll keep adding to your own burdens, and you'll keep worrying, because something in your soul drives you in that direction. You make that difficult choice each day of your own free will, and that's the miracle that God has given us.\"",
        "**** Epilogue *****\n\nNicola parked the van in their usual spot off the highway, and they waited. This time, Diana came alone.\n\nShe walked to them cautiously, attention focused on the back seat of the van. That was where the Mexican leaned against Edgar, her eyes blinking but gaze focused on nothing. It was the same as always, her senses muted by layer upon layer of crystal. Information entered, but none escaped, except by the complicated loophole that only Esther understood. Nicola had asked if it was like a black hole, and the metaphor was intriguing, or perhaps even more than that. She'd already started talking with Raj about it.\n\nDiana looked tired and defeated. It was over two weeks now since the events in Oaxaca, and the Chosen would still be trying to make sense of the loss of Unity.\n\n\"Who is that?\" Diana finally asked. Esther had allowed her to examine the Mexican with her senses, and surely she was stunned by the Blessings that covered the ageless woman's body.\n\n\"She is Unity,\" said Esther simply. \"She was the vessel for everything you felt in those devotions, though she was not the source of every vision. Some were yours, as you guessed. Some were those of others. But Unity itself was all in service of her own agenda. Diana, she cared for nothing except her own power. She would have let the world burn, if it was useful. And the world nearly did burn.\"\n\nDiana stared at Esther. Her eyes widened in slow recognition. \n\n\"You,\" she said, taking a step back. \"You're the math instructor, the one the others couldn't remember. Esther, that's your name. I thought I was hallucinating. But no, you're so much more than that, aren't you?\"\n\nEsther nodded, and she waited as Diana tried to fit Esther back into her memory properly.\n\nAfter a minute, Diana rubbed her eyes.\n\n\"I was furious with you, though I can't remember all the details. And I know you did us kindnesses as well, you and your friends. For Peter, and the children. But what you just said about this woman makes no sense at all.\"\n\nEsther nodded, and she explained it more fully, going back to help Diana recover memories of their interactions. The older woman was sharp, and Esther knew she would recover most of her memories on her own. But Esther could see Diana didn't really believe what she said about the Mexican. That was all right. Their group had argued about this since they got back. Javier kept reminding her that it was no trivial thing to care for two adults, that they couldn't just go back to school and leave them alone, or expect Nicola and Mark to take care of them. He'd stressed it wasn't Esther's responsibility alone. And he was right, as always.\n\n\"What have you done to her?\" Diana asked, finally.\n\n\"With great difficulty I locked her mind away,\" Esther said. \"She is unspeakably powerful, but only I have the key. She can still hear and sense the world around her, like a person with a limited number of Blessings. But she can only speak to me, and then only with difficulty, when I am nearby and making the effort. So far she has said nothing meaningful. I will visit you as often as I can, and try to speak with her. And one day I hope I can find a less drastic solution, because whatever she's done, she deserves her chance to return to Harmony.\"\n\nDiana nodded, looking surprised and briefly suspicious. \"Yes,\" she said. \"Exactly. That was the argument I used with the other elders, regarding your friends. But you truly believe it, don't you?\"\n\nEsther nodded. \"The man with her is named Edgar. He understands English and Spanish, but we have never heard him speak. He was enslaved many years ago by that woman, and his mind has been so damaged that he will resist any effort to separate him from her. He will insist on taking care of her daily needs, but I hope in time you will find something else to interest him. Gardening, perhaps. He has been cruelly used for so long, and he deserves Harmony of his own.\"\n\nDiana looked more closely at Edgar. \"That certainly seems true. But this is a great burden you ask of us. If this woman is as dangerous as you say, her mere presence may disrupt our attempts to reach Harmony. On a practical level, you must understand how marginal our resources are.\"\n\nNicola spoke up. \"This is not a request, Diana. You claimed you were willing to accept the consequences for your actions, when you believed yourself acting for Unity. This? This is the consequence. If you care so much about Unity, here it is. All packaged up for you thanks to Esther.\"\n\nEsther glared at Nicola, but her friend didn't back down.\n\n\"We will provide you with resources,\" Javier said. \"Money, or materials, and what time we can spare. As Esther said, she'll visit when she can. But Nicola is right: this woman is the responsibility of the Chosen. Maybe it's unfair to dump her on you rather than the group at the lake, but that's because we think you might take the responsibility seriously.\"\n\nDiana frowned, looking at Esther for a long time, until something finally changed in her expression. \"I'll have to bring this to the elders. What story am I supposed to give them?\"\n\n\"Tell them she ventured terribly far from the Way,\" said Esther. \"Tell them she pushed all the Chosen away from Harmony, and that she has warped your visions since before any of us were born, so that you may trust nothing you remember from Unity, nothing except the unity that you built among yourselves. Whatever you believe, what I told you about her is true. You will not regain Unity, and I mourn with you for what that means in your life. But I suspect you'll find other methods to follow the Way, though they afford you less certainty than ever.\"\n\nDiana didn't tell the elders quite that story. But in the end, the Chosen accepted care for Edgar and the Mexican. As Nicola drove back, Javier furrowed his brow in that now-familiar way.\n\n\"You taught math,\" he said uncertainly. \"To the children, when we stayed here. I watched you once, and you were so patient. Am I remembering this, or just making it up?\"\n\nEsther sighed, hugging him. \"I don't know that I was so patient as you remember,\" she said. \"But yes. I can tell you about it, if you like.\"\n\nHis memories had changed somewhat, as with all the others. Their own minds had rapidly reconstructed what had been suppressed, but the process wasn't without error. Still, there was nothing so unusual or tragic about that. Memory was a fragile thing for most people, and easily rewritten. The original memories were always fuzzing, altering, decaying. Even for Esther, every new memory changed all the old memories, if only by changing their context. It was a mystery that everyone proceeded through life believing they were the same person as ever. A beautiful mystery, one that touched the parts of her that believed in the soul.\n\nThere were some unexpected side effects of the Mexican's meddling. Lukas might eventually reconstruct details about her, but he and his men would likely never remember the extent of the powers she'd demonstrated. Esther would practice those powers, slowly, carefully, alongside all her other studies. She would systematically try to understand the astonishing abilities the Mexican displayed. She couldn't afford to take risks, or expect too much too quickly. She had to aspire to Abuela's wisdom.\n\nThe war in Mexico ground forward despite their actions. But to everyone's relief, the Americans and Russians had been shocked into a summit meeting, and there were talks of drastic reductions in nuclear missiles. France was even suggesting it might abandon the weapons altogether. A great ray of hope after all that had happened. And there were still mysteries in the world of the Changed. The one who had sent her the warning message. The subtle manipulations that Lukas had suspected. The maddening hints scattered through Tanaka's notebook.\n\nShe'd finally told Javier about the Mexican's true visions, and the ones yet to come. It turned out he'd already suspected as much. As for Javier's own fears, of precious memories lost: those would fade as they built a lifetime of new experiences together. Thinking that far ahead was more than enough for Esther, and if she ever started thinking another way, she'd have Javier and the others to keep her grounded. \n\nAs the miles of sagebrush and juniper passed, Esther gripped Javier's arm, watching the highway disappear into the horizon ahead. And for once, she didn't need to look away."
    ],
    "authorname": "rockchaser",
    "tags": [
        "sci-fi",
        "science fiction",
        "fantasy",
        "powers",
        "adventure",
        "action",
        "suspense",
        "plot",
        "romance"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/unity-and-destiny-pt-09"
}