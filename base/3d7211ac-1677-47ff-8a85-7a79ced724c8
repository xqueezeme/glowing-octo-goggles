{
    "title": "Past Transgressions",
    "pages": [
        "Copyright (c) 2020 James Miehoff, All Rights Reserved. \n\nThis work may not be published whether for fee or free without this copyright.\n\n---------\n\nThe following is a work of fiction and as such all characters mentioned herein are fictional and any resemblance to any persons living, dead or fictional is coincidental. All characters mentioned herein that participate in sexual activities are adults (18 years of age or older).\n\n---------\n\nThe ping from my phone roused me. I cracked an eye open and saw it was a Messenger message. I almost knocked my drinking buddy Jack Daniels over as I blearily reached for the phone.\n\nIt took three tries to get my phone unlocked. I forgot and tried my index finger the first two times. Remembering I changed it and gave my phone the middle finger and it unlocked. A few miscues later and I finally had Messenger open. I had a message from Liz [name redacted]. \n\n\"Who the fuck are you bitch?\" I growled at the unresponsive hunk of electronics. \"You better not be some Tinder Matchbox Fuck-a-Friend hooker I accidently contacted while drunk.\"\n\nSlowly I realized I could just read the message. Focusing was hard but eventually the blurry spots resolved into words, \"Hi, my name is Liz [name redacted] and I am looking for a Karl [name redacted] who was a chemistry major at [name redacted] thirty years ago. If this is you, please contact me ASAP otherwise, please ignore this message and I apologize for the intrusion.\"\n\nI clicked on the name and was taken to a Facebook page. The face that stared out from the page looked familiar, but I couldn't place her.\n\nWell, I was Karl and I had been a chemistry major at that college thirty years ago. So before my better judgement kicked in, I replied.\n\nA minute later another ping announced that she had replied. It was some really specific and personal questions. Looking at those questions caused a locked box of memory repressed for a long time to become unlocked and come flooding back. Erotic memories filled with regret and embarrassment flooded my brain. Mini-Me apparently filtered the regret and embarrassment out because my dick swelled up like a frightened pufferfish.\n\nI had been engaged to my girlfriend for a couple of years, even though it was a long distance relationship. I was in Chicago going to college; she was in Minneapolis going to college. We travelled back and forth by Greyhound as often as we could. And fucked like bunnies when we got together. We had even set the date for the July after I was scheduled to graduate. \n\nI was living in a frat house and one night about three in the morning my door opened and girl came into my room. She was crying and took all her clothes off and crawled into bed with me. I am a light sleeper so I woke up as soon as my door opened. It was pretty dark but I could tell it was a girl. And I was confused about what is going on but I went with it. I pulled her close and stroked her hair and asked what was wrong. She just cried. So I just held her. After a time, she fell asleep and then so did I. \n\nI woke up as the dawn was just brightening my drapes to the feeling of my cock in somebody's mouth. I looked down and she looked up at me. She was doing an awesome job between her very soft lips and gentle hand motions. I started to say something, but she put a finger to her lips and said, \"Shhhhhhh.\" Her eyes never left mine as I groaned and lifted my hips before exploding into her mouth. She took my load and continued sucking on me until it was pretty apparent that there was nothing left. She pulled her lips off my deflating cock and kissed the tip whispering, \"You are mine now.\" I never asked if she meant me or my cock.\n\nAs she lifted her head and I saw her full face, I realized that the mystery girl that had just so skillfully sucked me off was my old roommate's girlfriend. I was in shock. As she crawled up to snuggle alongside me I asked, \"Liz what the hell are you doing?\"\n\n\"Gary dumped me last night,\" she said softly. \"So I decided I was free and I have wanted to have you for a long time. I actually just started dating him so I could stay close to you. When I saw you at that party last year I decided that I wanted you.\"\n\n\"But I'm engaged,\" I sputtered. \"I can't have a girlfriend.\"\n\nShe just put a finger to my lips and used her other hand to stroke my cock. It sprang back to life immediately with that touch. After a minute, she rolled out of bed and found her purse. When she crawled back into the bed she had torn a condom package in her teeth and put the condom in her mouth. Bending over me she unrolled the condom onto my cock with her mouth and then swinging a leg over me positioned my wrapped up rascal at the entrance to her tunnel of love and slowly sank down on me. We both groaned with pleasure as she slowly engulphed me. When she bottomed out she leaned forward and pulled my head to one of her boobs. \n\nI should probably mention that she had the most amazing rack. Her bra size was a 38F. I was totally amazed. I never even knew there was an F size in bras. They were totally natural. Unlike the only other breasts that big that I had seen to that point, which belonged to a stripper at the downtown club where we took Dave for his bachelor party a few weeks before. And they were sensitive. Liz's breasts had the sensitivity of a girl I dated briefly when my fianc\u00e9 and I were just boyfriend and girlfriend and we had broken up for three months. That girl was a small B cup and her nipples were so sensitive she could come from just having them sucked on. Liz was the same way, there were many times she had impressive orgasms just from me sucking on the nipples of her massive jugs.\n\nShe started squirming and within a minute, I could feel her pussy start to pulse on my cock as she came. \n\nSo started the only the affair I was ever a participant in as I cheated on my fianc\u00e9.\n\nLooking down on my phone, I ignored the questions and just typed, \"Hi Liz. My god it has been forever. Why now?\" Send.\n\nPing. I looked down. \"I need to see you. In person. Your wife can be there if you want.\"\n\nI cried. I couldn't type. I wanted to smash my phone. I mostly wanted to smash myself. I poured myself another drink. I poured it into the sink and ran some water, rinsed the glass and put it in the dishwasher. It was hard to find room because every dish I owned seemed to be in there right now. I grabbed a soap packet and threw it into the little holder, then turned the dishwasher on.\n\nThat little effort of domesticity centered me and I stopped crying. After going into the bathroom and throwing up, I stared at the ugly sonnuvabitch that appeared in my mirror. \"You can't keep this up,\" he said. \"Suicide by alcohol poisoning will not get you to the place your wife has gone. It's time to start living again.\"\n\nStupid sunnuvabitch was right, as usual. Jack Daniels only says he is my friend. Where is he when I wake up in sheets covered in my own vomit or pee? Oh he sounds like a nice guy, but he doesn't cook or clean or help pay for the groceries. And he really isn't helping me forget the hole in my heart. The hole that was torn from my heart three weeks ago when that other motherfucking stupid asshole went drinking with Jack or one of his other buddies and smashed his Maserati headlong into my wife's Honda. The only consolation was that he killed her instantly. Stupid lawyers always talking about money six million dollars won't bring my wife back.\n\nI sighed and splashed water on my face and took a mouthful to get the nasty taste out of my mouth.\n\nWalking back to the kitchen table I picked Jack up by the neck and put him in the cabinet. I sat down heavily in front of my phone. \n\nMy fingers typed what my brain was too numb to recognize. \"Not a problem. Wife was killed by drunk driver 3 weeks ago.\" Send.\n\nPing. I was afraid to look down, but after a deep breath I did anyway. \"I am so sorry. I didn't know. This can't wait. May I see you Thursday?\"\n\nThursday? Looking at my phone, it said it was 2:03am Wednesday. Typing, \"Sure. I got nothing to do. Been just drinking 24-7 for three weeks. Need a break.\" Send.\n\nPing. \"Please pick me up at airport. 11:14am United Airlines baggage. Love Liz.\"\n\n\"No problem.\" Send.\n\nScreen went blank except for a 7% battery warning. Fuck. Need to plug it in and I might as well go crash on the couch. Jack never cleaned up the sheets.\n\nLast thing I remember before darkness took me was my wife's face looking down. I almost felt the kiss before she dissolved.\n\n'Sunlight should be banned' screamed my brain later that morning. Is it really the next day if you didn't go to sleep until after midnight, except that I passed out at the kitchen table before midnight. Fuck, too much thinking. I headed for the bathroom. A couple Excedrin, two Vitamin Bs and a lot of water later, I still felt like shit.\n\nBy the time I ran out of hot water in the shower, I was feeling somewhere between mostly dead and a glimmer of life. \n\nThen it hit me. I had one day to clean this shithole I had dug for myself over the last three weeks. Groaning and turning the too cold water off, I climbed out of the shower. A quick towel dry off and a fast search showed I was out of clean underwear. Commando day!\n\nThe rest of my day went like this, wash clothes, strip the sheets, fresh sheets from the linen closet, breakfast with coffee, more Excedrin, pick up living room, start vacuuming, stop vacuuming because it was too loud, clothes into the dryer, sheets into the washer (I had thought about just throwing them out, but I'm too cheap), pick up the bedroom, lunch, stare at another bottle of Jack Daniels I found under the couch, he blinked first so in the cupboard he went to party with his twin, start the dishwasher, vacuum the living room, vacuum the bedroom, clothes out of the dryer, sheets in the dryer, underwear in the washer, meltdown because there were some of my wife's blouses in the clothes from the dryer.\n\nIt was dark when I finally pulled my shit together. I went around and turned on lights. The place was almost presentable. I guess because for the last three weeks I have only lived in the living room, bedroom, bathroom and kitchen. I had some more clean up in the kitchen and the last of the clothes to get through the wash cycle. \n\nAfter supper I went in and peed. That ugly sunnovabitch was in the mirror again, but this time there was the hint of a smile. \"I'm almost proud of you my boy. It's been over 12 hours without a drink. You have actually eaten three meals today. That is a first. Plus you actually cleaned. But you need to go find your car keys or you will never get to the airport by bus.\"\n\nI blinked and he was gone. It was just me with three weeks' worth of scraggly shit for beard staring back at me. 'That has to go,' I thought. 'And he was right. My car keys are somewhere in the backyard where I threw them when I started drinking.'\n\nSighing heavily I grabbed a flashlight and went to the back door. It was starting to get dark so I needed to go now, but I was frozen. What if I had driven while I was drinking? Could I have ripped someone else's heart out, the way mine had been? I'll never know, but if I didn't want to disappoint Liz I needed to find those keys.\n\nThinking back, I was at the back door when I threw them. I was looking towards the center of the fence, so that would be a good place to start.\n\nLuck, or Fate or Destiny was on my side. I found the keys before it was dark. In fact, I found them as I walked from the house to the fence. There they were, shining in the fading light. Just lying in the grass. Silver flash as I walked near. Bend down to pick them up and walk back to the house.\n\nI was tired. I hadn't had any exercise for the last three weeks except for six ounce curls. I emptied the dishwasher and put everything away, then loaded the dishes from supper. On the way to go to bed, I remembered the last load of clothes and took care of that. Now I was really tired. I crawled into bed, marveling at the delight of sleeping on fresh sheets, sober.\n\nI was worried that my brain would spin out of control, but this night, it was quiet and I drifted soundlessly into a deep slumber. I woke later than I wanted to. I had to shower and scrape my face in a hurry. I had forgotten how much it hurts when you try to shave that much beard off in one shot, so I settled for trimming the sides and making a half assed goatee out of it. Tomorrow I get rid of the rest.\n\nI made it to the airport with 2 minutes to spare, only to find the plane had gotten in fifteen minutes early. I scanned the baggage area and jumped when someone tapped me on the shoulder. I turned and there was Liz.\n\n\"Karl?\" she asked.\n\nI nodded and started to stammer an apology for being late. She waved it off saying, \"It worked out. My bag was one of the first off so it gave me time to go find a bathroom, so we are good. How are you?\"\n\nI tried to think of an answer, gave up and just hugged her. She stiffened for a second then melted into me. \"Surprisingly, now that you are here, I am really good,\" I whispered into her hair. She hugged me harder for a minute then we broke.\n\n\"Let me get your bag,\" I said, \"We are way the fuck, I mean hell, aw shit, we are way out in the parking lot.\" Giggling she surrendered the handle of her bag and we started off. \n\nIt was awkward at first but as we walked and talked it got better. By the time we got to the car we were just two old friends catching up. I opened her door and she collapsed into the seat. I was concerned but held my tongue.\n\n\"I have a reservation at the Hilton somewhere around here,\" she said.\n\n\"Cancel it,\" I said. \"You are staying at my house. It is a four bedroom house, but one of the bedrooms is an office so you can have your choice of the other bedrooms.\"\n\n\"Does that include your bedroom?\" she asked with a mischievous tone.\n\n\"Let me think on that,\" I said.\n\n\"I'm sorry,\" she said with real sorrow in her voice. \"Sometimes I stick my foot in my mouth and wiggle my toes. If you are sure you still want me after that stupid remark, I will be happy to stay with you, wherever you want me to sleep.\"\n\n\"No,\" I said slowly as we approached the cashier booth. \"It's me. I have a lot of tender spots right now and I don't even know what I want. Or what will hurt, until it is too late.\n\n\"I do want you to stay with me. I can't guarantee that I won't melt down on you or suddenly go into the backyard and scream at the stars. But I do want to spend as much time as possible catching up and finding out all about your fabulous life.\"\n\nShe chuckled and repeated the word \"Fabulous\".\n\nConversation dragged a bit as traffic was horrible and I needed to concentrate, but eventually we pulled into the driveway of our house, no, my house. I helped Liz out of the car and got her bag.\n\n\"Wow!\" she said, \"You seem to be doing alright.\"\n\n\"It's a house,\" I said shrugging. \"Three thousand square feet, four bedrooms, a pool and a backyard. It's been home for the last ten years.\"\n\n\"Nice,\" she said as I opened the door. \n\n\"Can I get you something to eat or drink?\" I asked. \"It's getting on towards lunchtime.\"\n\n\"If you have stuff to make sandwiches, that would be lovely,\" Liz said while looking everywhere.\n\n\"Ok. Let's go in the kitchen and see what I've got,\" was my reply.\n\nI dragged out some bread, some mayo and some lunchmeat. \"I only have two kinds of lunchmeat right now,\" I said apologetically. \"Turkey and roast beef.\"\n\n\"Turkey on white bread, with just pepper would be awesome,\" Liz said and she sat down heavily in a chair.\n\n\"Coming right up. And to drink?\" I asked. \"I have some diet soda and flavored waters. Oh and coffee.\"\n\n\"Tea perhaps?\" she asked.\n\n\"Let me check the pantry,\" I said. After a little rummaging I came back with a small box of name brand tea. I held up the box for her inspection.\n\n\"That would be perfect,\" she said.\n\nI threw a cup of water into the microwave and slapped a turkey sandwich together for Liz and a roast beef sandwich for myself. \n\n\"Mayo,\" I asked. \n\n\"No thank you,\" she said. \"I have to keep things pretty plain right now.\"\n\nI set the sandwich down in front of her with the salt and pepper shaker to let her season it herself. I set mine down and turned to get the cup of hot water and put it down next to the sandwich with a teabag. After it was ready, I asked if she needed cream or sugar, she said no. I did see her palm a couple of pills from under her plate and swallow them with some tea. I decided not to make an issue, hell I just crawled out of a bottle less than 36 hours ago.\n\nAfter lunch, I asked if she was ready for a quick tour. Liz agreed and we started. I showed her the pool area first. She 'oohhhed' and 'aahhhed' and then said, \"It's really private back here behind all the foliage, isn't it?\"\n\nI said it was. I hesitated and then continued, \"We used to like to come back out here and get some late afternoon sun au natural occasionally.\"\n\nWe headed back in and I showed her the living room, the dining room, the library and asked if she wanted to go upstairs. She said, \"If it's just bedrooms and bathrooms, I can pass if you don't mind. I have a bad knee and I try not to do stairs.\"\n\n\"Ok,\" I said, \"The only room left is the master bedroom, but if you don't want to see bedrooms, we can go sit in the living room and talk.\"\n\n\"If the master is on this floor, then lead on,\" she said with a smile.\n\n\"It's right this way,\" I said leading the way.\n\nAs we walked into the bedroom, Liz came up and bumped me a little. I staggered back until I was right next to the foot of the bed. Puzzled I looked down at her as she knelt down and undid my belt, unsnapped my pants, pulled the zipper down and tugged everything down to my ankles. Shocked I stood there opening and closing my mouth, but nothing would come out. She tugged on my leg and I lifted it and she took the shoe off and pulled the pants and underwear off. As I set my leg down she tapped on my other leg and I lifted that one and she repeated the process. I was now just standing in my polo shirt, just like Porky Pig.\n\n\"Liz?\" I croaked.\n\nShe put a finger to her lips and went \"Shhhhh\" as she stood up. She pulled my head down and kissed me and then pushed a little and I tumbled onto the bed. She knelt again and after wrapping her hand around my penis, she slipped it into her mouth. At that point, my head exploded and I lost all conscious thought. I immediately flashed back to that first blowjob. But her technique was much, much better this time. In fact, I could feel the tension beginning to build in my balls.\n\n\"If you keep that up,\" I said with herculean effort to keep my voice steady, \"I will be flooding you mouth with my cum any second.\"\n\n\"UmmHmm,\" was her reply.\n\n\"Oh god,\" was mine as I came and flooded her mouth with my first spurt. It was a big one. My beloved wife and I had some afternoon delight the day she was killed, but I hadn't had any release since that day three plus weeks ago. No masturbation, no shower spanking, no wet dreams. So my balls were full to overflowing and so was her mouth. Her eyes got big as that first pulse hit her mouth, but she swallowed it all and was ready for the next one and the next one and the rest. I counted eight spurts and she caught them all and swallowed them all. As my pulsing subsided, she took my cock out of her mouth and ran her thumb along the underside of my cock to milk the last few drops. The swelled up on the tip until she licked them off. Satisfied she kissed the tip of my cock and said, \"Now you are mine.\"\n\nCrawling the length of my body she came up and kissed me. My tongue sought out her lips and they parted. Along with a faded minty taste was the definite salty taste of my cum. I am not sure when it happened, but she had managed to get her dress off and as I reached up to hold her, my fingers only encountered skin. Very nice soft silky skin. ",
        "She reached down and began to stroke my manhood, which had only slightly wilted. As it regained fighting trim Liz swung a leg over me and using her hand to position me, impaling herself on my spear of love. As I slid inside she looked down on me and said, \"Don't worry, you don't need a condom.\"\n\nThis was an obvious reference to our third lovemaking session in college. She had gone on the pill and told me that and said that I didn't need a condom. Hers was the first pussy I ever fucked bareback. It was so awesome that I pressured my fianc\u00e9 (later my wife) into going on the pill.\n\nAs she ground her pussy down on me, she started talking, quietly at first, \"Oh god it feels just as good as it did thirty years ago. Your cock was always the best. It fits my pussy perfectly. You always loved my titties. Do you not like them because they are smaller? I had them reduced about twenty years ago because they were killing my back. You can play with them. They won't break. They are just as sensitive as they were back then. Ohhhh, yessss.\"\n\nThe last was because I had reached up and cupped her tits and flicked my thumb across her nipples the way I remember she used to like. As I did that, I could feel her orgasm rip through her by the way her pussy muscles were pulsing on my cock.\n\nWhen she came down from her climax high, Liz lay across me and began to kiss my cheek and neck. \"You were the first guy to fuck me bareback, did you know?\"\n\nI shook my head and whispered back, \"You were the first woman I ever fucked bareback. As well as the first one that swallowed after making me come with her mouth. You were my first titty fuck. You were also the first woman who told me what to do when I was eating her pussy and the first woman I fucked doggy style.\"\n\n\"I remember that time you fucked me from behind,\" Liz said brightly, \"I thought you were going to fuck my ass. Were you?\"\n\n\"I don't think so,\" I replied slowly. \"I might have tried but you said, 'Not my ass' quite plainly so I wimped out and just slipped myself back into your pussy.\"\n\n\"Well,\" she said coyly, \"Do you have some lube and we can fix that travesty of justice.\"\n\n\"In the top drawer of the nightstand,\" I said while vaguely pointing at it with my hand.\n\nLiz rolled off me and rolled over to the side of the bed. I heard the drawer open and Liz's voice saying, \"You have some anal cream here too. You naughty kids. So you guys had anal sex?\"\n\n\"Sort of,\" I said slightly embarrassed. \"We tried a couple of times. That tube is probably ten years old. I couldn't find a way to do it without hurting her.\"\n\n\"Let me give you some pointers,\" Liz said as she crawled back to me. \"First, you take the anal cream and but a good glob on you.\" As she said this, I could feel her squeezing some of the cool gel onto my still hard cock. I started to feel my cock go numb almost immediately.\n\n\"Guys tend to get too excited and come too fast when they first start ass fucking,\" she said, \"The anal cream numbs your dick and makes you last long enough for us to get past the pain and begin to enjoy the experience. The second part is to make sure you used enough on and just inside the lady's asshole. It will numb the initial penetration which causes the ass muscles to get stretched out.\"\n\nLiz had turned with she returned so I had a good view to see Liz squeeze a generous amount onto her fingertips and reach back to spread it on her tiny butthole. After a few seconds of rubbing it in, she began to slide a finger in and out and then she brought her hand around to the front and squeezed some more anal cream and worked it in. This was followed by a good sized blob of the lube which was first squeezed onto my cock first and then more on Liz's fingers and transferred to her now slightly ajar backdoor.\n\n\"I think I'm ready for you now,\" Liz said in an incredibly sexy voice. I slid myself up onto my knees and positioned myself behind her. \"Slow and gentle,\" she continued. \"Just press your cock against my butthole. If it starts to hurt, I'll say, 'Stop,' please stop if you hear that.\"\n\n\"I will,\" I said as I placed my cockhead at the entrance to her backdoor. As I pressed slowly into her, she pressed back and I popped into her rectum without a lot of histrionics. Which was a first. \n\n\"You can keep going,\" she said. \"Your cock feels so slick and smooth, like a silken dildo. That's it baby, slow and steady. Oh I feel your balls on my cunt.\" She snaked her hand around and found that I was balls deep into her. \"Oh, yes, baby. You are all the way in. If I had known how to do it back then, I would have let you fuck my ass. You are a perfect gentlemen.\"\n\nWith that, I held still and she began to pull away from me and then push back on me. Oh my god the sensations were amazing. I had probably tried fucking my wife's ass less than five times in all the time we were married. The first time was an accident. We had already fucked once and she was a wet sloppy mess and when she climbed onto me, I pushed up at the wrong time and buried myself halfway up her ass. She shrieked and made me pull out. Three of the other times, I was so wound up that I shot my load just as soon as my cock entered her ass. The last time, I used the anal cream and I must have gotten some on my cock as I pushed into my wife because I lasted long enough to get a dozen partial strokes in before I blew my load. The downside is that when I came, I pushed all the way in and it hurt her, so I was banned from her backdoor forever.\n\nReturning to the present, I grabbed Liz's hips and began to follow her rhythm. \n\n\"Oh yeah, baby. That's it. Go deep into my ass. I love it. I can feel your cockhead in my throat you are so far inside me. I knew you would be a good little ass fucker. Oh yeah baby, go faster. Pound my ass. Ohhhhhh. I've got two fingers up my cunt and I can feel your cock stretching my ass. Can we switch positions? I want to look at you while you fuck my ass.\"\n\nWith that, Liz pulled off my ass and lay on her back underneath me. She pulled me down and guided my cock to her back door. It wasn't working, so she rolled over and grabbed both pillows and stacking them up she lay on them under her hips. That brought her ass up off the bed and I was easily able to re-enter her forbidden hole. \n\nThe difference in friction was amazing and being able to see her face and watch the play of expressions as I fucked her ass was highly erotic. I was getting turned on and could feel the tightness of my balls signaling my impending orgasm. I think she could feel it or could see it on my face. Before I got to the point of no return, she looked at me and said, \"Come on my tits, just like you used to do years ago. Wait until you are ready to pop then pull your beautiful cock out and bathe my tits in your sperm. Can you hold out for a minute more? Oh god I'm suddenly about to come. Oh goddddd. Oh goddd. Oh god. Ohhhhhhhhhh! Come on my tits baby. Bathe me in your warm cum. That's it. Oh you hit my mouth. Mmmm, your cum tastes so good. Oh it's so warm on my tits. It's so slippery and slimy. I love pulling my nipples when they have had a cum bath. Oh god, I'm coming again. Rub your cock on my clit, Yes. Like that. Slap it on my clit. Slap that bad nasty clit with your dick. Oh god yes. Oh hhhhhhhhh!\"\n\nAs she slumped back onto the bed, I pulled the pillows from under her and then lay down beside her. She rolled over to me smearing my cum all over my chest from hers. I didn't care, I grabbed her and held her tight. \n\nAfter a little while, she got a wicked little grin and said, \"Are you too tired to come help a poor old lady wash your cum off my body?\"\n\nI roused myself from my almost asleep state to say, \"I think I can manage it. As long as you can wash the cum you shared off my body.\"\n\nShe giggled and said, \"Deal\".\n\nWith that, we got up and headed hand in hand to the bathroom. We didn't fuck in the shower, but she did try to give me a handjob and I was able to make her come twice by soaping her groin while sucking her nipples.\n\nAfter drying off, we fell into bed and were both asleep almost instantly. Tomorrow was going to be another day.\n\nI woke with a start to an empty bed. Was last night just a wet dream and there was no Liz? No. It couldn't have been. Then I saw her suitcase against the wall and relieved, I knew it wasn't a dream. I grabbed a robe from the closet and went in search of Liz. It wasn't too hard to find her. I could hear her singing softly in the kitchen. There was a small stack of waffles next to her as well a pot of coffee just making that hissing spitting noise that signals the end of the brewing. She had her back to me and she looked to be wearing one of my shirts. It almost but didn't quite cover her ass. I snuck up on her and was able to wrap my arms around her and kiss her neck before she screamed. \n\nShe turned and slapped me on the shoulder. \"You scared the shit out of me, you jerk. Oh my god. I am going to have to sit down. The last waffle is almost ready. Don't let it burn.\" \n\nSo I was left to watch the last waffle and pull it out when the waffle maker beeped. I put that one on a plate and slid it in front of Liz. \n\n\"You get the freshest one, since you did all the work,\" I said. \n\n\"Thank you sir,\" she said before she added some butter and a dab of syrup.\n\nI poured two cups of coffee and we sat eating in silence until we were done. \n\n\"Those were really good waffles,\" I said. \"What mix did you use?\"\n\nLiz giggled and said, \"No mix silly. Those were scratch waffles.\"\n\n\"So what did you want to do today?\" I asked. \"You are my guest so your wish is my command.\"\n\n\"Well,\" Liz said slowly, \"Other than fucking your brains out a few more times today. You said nobody can see into your pool area. Could we go skinny dipping? I've always wanted to go to a nude beach but I'm too chicken.\"\n\n\"We can do that,\" I said. \"The plants screen the whole area except way down in the left side of the deep end. One of the fan palms died last year and I haven't replaced it yet. So there is a little area that Bob and Cleo's upper bedroom window can see about three feet of the pool and the some of the deck. As long as we stay out of that area, we are good.\"\n\n\"That is what I was hoping to hear,\" Liz said with a grin. \"Let's take care of these dishes and go skinny dipping.\"\n\nTen minutes later, both of us in robes (I loaned Liz one of my spare robe) were on the back patio. I wrapped my arms around Liz as if to give her a hug and tugged on the sash and pulled the robe off of her. She squeaked and tried to cover herself. Then started laughing and how silly that was. \n\nThat was when I picked up my phone and started taking pictures of her standing naked on my patio. Her face clouded up for a second and I thought she would mad, but that passed and she started posing for me. She struck a pose and then put her hands under her tits and then bent over first showing her ass then grabbing both ass cheeks and pulling them wide to give an unparalleled view of her pussy and the little brown hole I had violated last night. It was slightly puffy and had a little tinge of pink, so I asked Liz if her butt was sore. She said it was a little, but it was totally worth it. She got a sly grin on her face and asked, \"Did you want to go on that ride again big boy? Is that why you were asking?\"\n\nI laughed and said, \"Of course I want to go on that ride again, but only if it doesn't hurt you.\"\n\nLiz looked at me and said, \"Let me tell you a secret. Anal sex always hurts. But if it is done right and it is done gently, the pleasure far outweighs the little bit of pain. What you did last night was perfect. I don't always come with a dick in my ass, but you got me off at least twice and both of them were huge climaxes. Pat yourself on the back. If you do what you did last night, any woman will be more than happy to let you fuck their ass as often as you want.\n\n\"Now since I'm running around naked, It's time for you to join the club.\" With that, she stepped forward and undid my sash and slid my robe off and threw it on a chair. After all the dirty talk and watching Liz pose naked for me, my cock was a little more than half mast. \n\n\"Is that all for me sailor?\" she asked.\n\nI nodded and she gently wrapped her hand around the shaft. Pulling lightly on me I could feel myself getting hard. \n\n\"Hmmmm. Seems a shame to waste a good hardon,\" she said. \"Fortunately for you, my bucket list includes getting fucked in a pool or the ocean. I don't see an ocean, but I do see a pool.\"\n\nI held out my hand and we walked over to the pool. I threw a raft in just before we got there. Liz gave me a look, but I refused to elaborate. \n\nOnce we had walked out into the warm water, I snagged the raft and picked Liz up and put her on it.\n\n\"Hey,\" she said. \"What gives?\"\n\nI didn't say anything. I just spread her legs and applied my lips and tongue to her pussy.\n\n\"Ohhhh. I think I like this,\" she said. \"I'm adding it to my bucket list so I can get it checked off. Getting head while floating in a pool. Oh baby. Oh. You just hit the spot. Keep licking there. Oh, yes. Put a finger or two inside me while you do that. Oh, yes baby. Oh you are hitting that spot inside me. Oh my god. Keep it up. Oh, I'm close baby. Not much longer. Ohhhhh. That finger in my butt. Ohhhhh here I go.\"\n\nWith that, she tried to lift her hips and it was all I could do to keep her from rolling off the raft. And then my face was splashed with this warm liquid that tasted funky but wasn't pee. And then Liz slumped and seemed to go limp. I pulled the raft into the shallow end and lightly touched her face. Her eyes opened but were not focused.\n\n\"Are you ok? Do I need to get the paramedics? How are you feeling?\" I rapid fire rattled off questions.\n\n\"I'm ok,\" she said slowly. \"I don't know what you did, but I went away to a beautiful place for a little while.\"\n\nShe looked at my face and ran a finger over my cheek, then tasted the liquid. \"What is this?\" she asked.\n\n\"I think you squirted,\" I said. \"Right at your peak I saw this stuff gush out of you all over my face.\"\n\n\"Are you sure?\" she asked, \"I've never squirted before that I know of.\"\n\n\"I'm sure,\" I said. \"It definitely came from you. I was right there in the line of fire.\"\n\n\"Can you help me off this raft?\" she asked. \"I think I need to sit down for a few minutes.\"\n\nI picked her up and gently set her feet on the bottom. I helped her to the steps and she sat down. \n\nLooking up at me, she had an impish grin on her face and said, \"I had forgotten how good you are at eating pussy. And that finger up the ass trick really pushed me over the edge. Now, I know I said fucking in a pool was on my bucket list, but if you are up for it, I think I want to add ass fucking in a pool to that list.\"\n\n\"Well,\" I said slowly, \"If you are serious, I guess I better go in and get some supplies. Pool water is not very good for fucking at the best of times. It dilutes your natural moisture and it can get pretty harsh. It is even worse I would imagine for trying to butt fuck since you need some real lubrication. I need to go find a bottle of silicon lube that won't wash off in the pool. If you are going to be ok, I'll be right back.\"\n\n\"I'll stay right here,\" she said. \"Hurry back.\"\n\nI made a dash for the house and hurried into the bedroom, totally ignoring the trail of water I was dripping everywhere.\n\nI found the silicon lube in the \"useless\" toy box in the closet. That was where I consigned toys that did not get a positive reaction from my wife. As I turned to go, I spotted a jeweled butt plug and grabbed it just for grins.\n\nAs I returned to the pool, Liz had not moved from the step. She had slid over a little however and was sunning her tits. \n\n\"Found it,\" I said as I held up the bottle. \n\nLiz took it and looked at the label. \"Cherry flavored anal lube?\" she said with an obvious question.\n\n\"Yeah,\" I said. \"As you can see, it's almost full. It was used on one of my less than successful attempt to fuck her in the ass. The rest was used when we were in the pool or the hot tub. It is silicon based so it doesn't wash off in water. As you can see, that wasn't very often either.\"\n\n\"And what else did you bring me?\" she said pointing at the butt plug. \n\n\"It's a little toy to help stretch your ass out. It's called a butt plug,\" I said holding it up. \n\n\"It's pretty,\" Liz said. \"But it's pretty thick. Are you sure it will go in my ass?\"\n\n\"Flip over,\" I said reaching for the lube.\n\nLiz got on her hands and knees on the steps. Her ass was out of the water, so I shook the bottle of lube and opened the applicator tip and squirted a good sized blob between her ass cheeks. It was really thick so it stayed put until my finger dragged it down and I rubbed it around her little pucker. \n\nWhen she started to moan little 'mmmms', I slipped the tip of my index finger in taking the lube with it. The 'mmmms' turned into 'ooohhhs' and she breathing deepened as my finger began sliding in and out, going deeper each time. I squirted some more lube and added another finger. As I was getting both fingers in past the first knuckle, Liz slipped a hand back and felt my fingers and got some lube on her index finger. She quickly brought it to her mouth and exclaimed, \"Amazing, it does taste like cherry. Why would anyone make cherry flavored anal lube?\"\n\nI pulled my fingers out and brought my head down and stuck my tongue into her asshole. She shrieked and then relaxed as my tongue wiggled in her hole. \"Oh that feels nice. I was not expecting your tongue,\" she said slowly.\n\nI pulled my head back and reinserted my fingers. \"Any other questions?\" I asked.\n\n\"No, but my bucket list is getting longer. I would never have thought to add, shove a tongue up my ass to the list, but I can add it and check it off now,\" she said while grinning at me. \"By the way, those fingers feel amazingly good. I was a little worried that my ass might be too sore after you fucked it so thoroughly last night, but it feels so smooth and slick, I am getting wet.\"\n\n\"Just hold on for a few minutes more and we will go get your fucking in a pool bucket list item checked off.\" I said as I picked up the butt plug. Squirting some lube on it I pressed it into her pucker and pushed. \n\n\"Whoa,\" she said, \"Oh my goodness. That is not your cock, or your fingers. What are you doing? That feels weird. Not bad, but fuller than your cock. Oh, it is suddenly small, but I feel filled up.\"\n\nI started to answer, but her hand came back to explore and it found the jeweled end of the butt plug. \n\n\"You put that thing in my ass,\" she accused.\n\n\"Yep,\" I said, \"Now let's go fuck in the water.\" \n\nWith that I put an arm around her waist and pulled her into the pool. We both splashed around a little until I got my arm under her legs and carried her into deeper water. I stopped when the water was nipple deep on me. She was shrieking and splashing the whole time. Finally when I stopped and let her down onto her feet she stopped. The water was up to her neck.\n\n\"I am not sure I like this -\" she started.\n\n\"You are fine,\" I said. \"Making love in the water is easier in deep water. You float and it is like what I imagine making love in weightless space would be like. Jump up and wrap your legs around my waist.\"\n\nShe looked at me like I had lost my mind but she humored me. As soon as her legs were around me she felt better. That raised her head well above the water.\n\n\"Now what?\" she asked.\n\n\"This,\" I said as I reached down and placed my cock into her pussy. Earlier I had greased up both her pussy hole and my cock with the lube so I was able to penetrate her completely in one smooth motion. \n\n\"Ohhhhh,\" she said. \"That is nice. And for bonus points, I get to rub my tits on your chest.\"\n\n\"And I get to grab your ass,\" I replied.\n\nAs I began to stroke in and out of her, she moaned and arched her back. \"Your cock feels like it is filling and stretching all of me and that butt plug feels like another cock is fucking my ass, but he is just waiting there. Oh god, this is incredible. You got me so horny on the steps that I feel like I am going to just explode again.\"",
        "I reached around and began to tug on the butt plug and let it go in sync with my thrusts. \n\nLiz's eyes rolled back into her head and she was reduced to mumbling \"Oh god,\" and \"oh damn that's good\" until finally she squeezed her legs around my waist and pulled forward and bit my shoulder. I could feel her pussy muscles pulsing on my cock to signal her orgasm had arrived.\n\nIt probably went on for almost a minute with new mini-climaxes every time I thrust deep into her pussy. Finally her legs released their death grip on my waist and her feet tried to touch bottom. She failed because impaled on my cock as she was, her legs just wouldn't reach. After a moment of panic, I hugged her and walked into shallower water. Bending at my knees I let her touch bottom and unsheathed my manhood from her. \n\n\"Wow!\" Liz said finally as she clung to me. \"It did feel like I was floating. Oh my god, and the water. When you moved it rushed past my clit and when you pushed in, the water battered my clit and oh my god. \n\n\"In the last twenty four hours you have made me come so hard and in so many different ways. I don't think I have ever come so hard and I've had a lot of cocks over the years. Ten years ago, I wasn't feeling very pretty so I would go out two, three nights a week and pick up somebody at a bar. Young hard cocks, old fat cocks, business cocks, even a couple of ladies without cocks. But nobody has ever fucked me as good as you did thirty years ago and the way you have in the last day.\"\n\n\"You're welcome,\" I said. \"Are you ready to scratch ass fucking in the pool off your list?\"\n\n\"I am, but I think I need a few minutes to rest up,\" she said.\n\nAs we walked over to the steps, I said, \"Get up on your knees like you did before and I will re-lube you, in case the water washed any of it away.\"\n\nLiz nodded and got on all fours on the steps again. I pulled the butt plug out a little bit and squirted some lube at the juncture of the plug and her pucker. Then let the butt plug go and it slipped in taking the lube with it. I did this several more times. The last few had Liz moaning as I pulled the butt plug almost all the way out.\n\n\"Ok,\" she said firmly. \"Enough teasing. I want that meat missile in my ass now.\"\n\nI stood up, slimed my cock with more lube and held out my hand. This time we went only part way out into the water. I put her hands up on the deck of the pool and reached down to grab the jewel. Twisting it, I pulled it out slowly and then very quickly slid my cock in to fill the void. Because her anal rings had been so stretched and teased, I was able to get my cock about half way in before her muscles clamped down. Reaching past her to put the butt plug up on the deck, I pushed myself the rest of the way in. Dropping my hand, I grabbed her hips with both hands and began to slide my cock in and out of her ass. \n\nLiz started moaning and babbling but there was nothing intelligible in her vocalizations. As I ended up my back stroke, she would begin to push her butt back and we would slam together at the end. After a few minutes of this, she started shaking and thrashing and I could feel her ass muscles clenching and releasing. But I didn't let up. I was bound and determined to come inside her this time. \n\nShe seemed to be on a climax high with new eruptions occurring every few strokes. By this time, her vocalizations seemed to be limited to a barking grunt, 'Oh my god\" and \"fuck, fuck, fuck\". Finally, I was there. I could feel my balls tighten up and then I was blasting my cum inside her. As I started to come, I actually howled and Liz had her biggest orgasm yet. It felt like her ass was trying to tear my cock apart. But my firehose was not to be denied and it spit deep inside her. Finally, she calmed down and I was able to extract my cock from her tush without damage. \n\nLiz spun around and jumped up on me, wrapping her legs around me and her arms around my neck, pulling my face to hers she kissed me and all but screamed, \"I love you\" in my mouth. I grabbed her and walked over to the steps. After exiting the pool, I carefully deposited her on the doublewide lounge chair. I grabbed the beach blanket and covered us with it after I lay down next to her. \n\nLiz snuggled up and placed her head over my heart. \"You have such a strong peaceful heart,\" she said. \"I used to love doing this thirty years ago and it's like there was no time in between.\"\n\nI kissed her forehead and pulled her tight. A few minutes later she was asleep. I guess my heart was boring too. It felt so good to be holding her, I was asleep moments later.\n\nI woke up to see her blue-grey eyes looking into mine. She kissed my nose and grinned. \"Good to see you awake sleepy-head,\" she said still grinning.\n\n\"Oh god, I haven't slept like that in a month,\" I said sitting up. She sat up next to me and I marveled again at the perfection in her breasts. 'Whoever that surgeon was, he or she was a genius,' I thought. Suddenly another idea crowded everything else out and I stood up, stretched and got down on one knee.\n\n\"Liz [name redacted], will you marry me?\" I said.\n\nHer face was shocked for a second or two and then tears began to well up and she said strongly, \"No. No, no, no, no no no no, NO!\"\n\nShe put her hands in her face and said one more time softly, \"No.\"\n\nNow I was shocked. Did she mean 'No I won't marry you' or 'No I can't believe this is happening?'\n\nShe picked her head up and the tears were falling like rain, I am not sure she could see me through them, but she patted the lounge chair next to her. I got up and sat next to her and held her. She cried for a long time and I just held her.\n\nFinally, she sniffed and then tried and failed to talk. She took a deep breath and tried again, \"I have not been honest with you about this visit. I didn't expect what you just did and it is forcing my hand. I had planned on telling you these two things just as we got to the airport so there wasn't time for you to react.\n\n\"Please don't say anything until I am done and then you can say or yell or do anything you want.\n\n\"I have joked about this being my farewell tour and you have politely ignored the comments. But this is my farewell tour. I am dying of pancreatic cancer.\" \n\nShe stopped for a second and my jaw hit the deck. She put a finger on my lips as I was about to protest.\n\n\"The doctors give me a month possibly two before it becomes unbearable and I will be lying in bed screaming in agony as my organs shut down. I was there when my mother died of pancreatic cancer, so I know what is coming.\"\n\nI couldn't stay silent, \"Then it is all the more important to give you some happiness before the end. Marry me and I will fuck you silly morning noon and night.\"\n\nShe smiled and said, \"You have no idea how much happiness you have given me in the last day. But I can't marry you. And I can't stay. It would not be fair to you.\"\n\n\"Fuck being fair to me,\" I said vehemently. \"Nobody and nothing in my life has ever been fair to me. But if I can make your time better -\"\n\nShe put her finger on my lips to shush me. \n\n\"That was the easy part,\" she said and then took another deep breath. \"Do you remember the last time we made love before your wedding?\"\n\n\"Yes,\" I said. \"You came to visit me the day before I took the Greyhound back to Minneapolis. I promised myself I was going to dump you, hard. Instead I ended up eating your pussy for hours and you sucked my cock for almost as long and then we cuddled as you rubbed your wet pussy on me.\"\n\n\"I am surprised you remember it in such detail,\" she said surprised.\n\n\"I can't tell you how many times late at night I pulled up that memory and relived it as I was beating my meat.\" I said blushing.\n\n\"Well, if you remember it in such detail, can you remember what else I told you before we began?\" she asked.\n\nThinking back, I couldn't think of anything, until, \"You said you were not on the pill so we couldn't fuck,\" I said. \"But we didn't.\"\n\n\"Well,\" she said, \"Not quite true. At the very end, when I was sliding my pussy on your cock, you throbbed and you slipped into me just as you came. I was weak and let it happen. The end result of that momentary lapse was a beautiful baby girl nine months later.\"\n\nMy heart started to skip beats or at least that was how it felt. I couldn't form a cogent thought if my life depended on it.\n\nLiz continued, \"So apparently I was pregnant at your wedding. My friend Elaine tried to get us together about five months after the wedding. But-\"\n\n\"But my wife got jealous and threw a fit. I chose not to create an issue and we never saw each other again,\" I finished.\n\n\"I was so ashamed that I didn't want to contact you again and then Adele was born and I had to move back in with my mother while I recovered and then tried to find a job to support us. By the time I was back on my feet, you had moved and changed your telephone number and I couldn't get in touch with you. I'd lost Gary's phone number and had no way to contact him either. Nobody at the frat house knew how to contact you, or they weren't going to give you guys up. And time began to slip away and I made my family with my mother and Adele, until I lost my mother three years later, then it was just Adele and me.\n\n\"In a moment of weakness, I married a co-worker who turned out to be a totally rat bastard. Six months into the marriage he started to beat me. I went to the police when he put me into the hospital after he hit me with a baseball bat. He hit me in the stomach and it ruptured one of my ovaries. On the advice of my doctors, I had it removed and they cauterized both tubes, so Adele was all I was ever going to have.\"\n\n\"Is he still alive?\" I asked grimly.\n\nShe looked at me funny and said, \"No. They don't like child rapists or wife beaters in prison. He got a broom handle shoved up his ass in a bathroom and he bled to death.\"\n\n\"Good,\" I said in all seriousness. \"That saves me the trouble of looking him up.\"\n\nShe stared at me funny for a little while and then continued softly, \"The divorce hadn't been finalized. So technically I was a widow. I tried dating, but was having no luck. I mean who wants a wife that already has a kid and can't produce any more. So I started drinking and picking up men in bars and fucking their brains out and dumping them.\n\n\"Then I met Mark, he was the CEO of a large electronics firm. He was funny and we did a lot of crazy things and when he proposed I accepted. \n\n\"About three months later one night when we were drunk, he confessed that he was gay and that he had married me to provide cover. I knew Mark preferred to fuck me in the ass, but until then I would have never guessed he was gay. Well, technically bi, but he said he preferred dick to pussy, but ass was ass.\n\n\"About a month after that, his lover Julio moved in with us. At first, I just ignored it. But eventually curiosity took over and I asked what they did in bed. Mark took my hand and led Julio and me into our bed and I watched as they made love. After that it seemed like they had carte blanche to have sex whenever and wherever they wanted, although they were good about not doing anything when Adele was around. I started joining in and found out that Julio enjoyed pussy more than Mark and we would sometimes end our nights with Julio in my pussy and Mark in my ass or Julio's ass.\n\n\"A year or so later, Mark and Julio had a big fight and Julio left. Mark started going out to gay bars and bringing random guys home to fuck and I stopped joining in. I told him to get an AIDS test and he laughed. I kept nagging him and he eventually did. He was positive. I had been getting tested all along and I was still negative so I threatened to move out. He decided to divorce me, but since it could be nasty he put up a ton of money in some trusts and annuities to keep me quiet. So I haven't been hurting financially.\n\nAdele and I made a good life for ourselves. She was definitely your daughter. Four years to get a BS in Biochemistry with a Chemistry minor. Two years to get a Masters in Biochemistry and then four years to get her Doctorate. All Magna cum laude. She works as the department head of a research group doing God only knows what. I can't follow it when she tries to explain what she does.\"\n\n\"And she probably hates me with every fiber of her being,\" I said softly.\n\n\"She doesn't know anything about you,\" Liz said. \"She has wanted to know, but since I couldn't find you, I didn't have much I could tell her.\"\n\nNodding, I started to say something and was interrupted by my growling stomach. Liz laughed and I joined in.\n\n\"Should I order something and get it delivered?\" I asked. \n\n\"That would be lovely. Do you have a good steakhouse? I can't eat a lot of pasta and tomato sauce with my condition,\" she said apologetically.\n\n\"I do have a favorite and that sounds like exactly what I need tonight,\" I said.\n\n\"Could you make the arrangements? I am going to switch chairs to that one over there that is getting the sun. I have never taken the girls out in the sun and I think it is about time that I do. Sunbathe naked off my bucket list,\" she said grinning. \"Ooohhh, I feel so naughty.\"\n\nLaughing, I got up and went to the house. As I went inside I looked back and Liz was indeed lying on the lounge chair in the sun. I felt a momentary ache in my heart. That was where my wife used to sunbathe in the nude before.\n\nI shook my head and went to the computer and ordered dinner for the two of us. Paid for it and paid for delivery. The app gave me an approximate time an hour from now.\n\nI went and got my good camera and stood at the doorway taking pictures until Liz noticed me. \n\n\"Hey, what are you doing?\" she called out. \n\n\"Making memories,\" I called back.\n\n\"If you are going to take pictures at least come up closer and I'll pose for you,\" she said with a twinkle in her eye.\n\nI walked over slowly snapping shots as I went. Thank god for digital cameras. No more trying having to send photos out to a \"no questions asked\" mail order photo development shops. No more 20 pictures per roll. It's all just bits on a memory card now.\n\nLiz started posing by holding up her tits, then lying back with her hands above her head. As I got closer, she opened her legs and reached down to play with herself. I could see the moisture glistening on her pussy lips as she began to stroke along the inside edge. She moaned a little when she touched her clit. I just kept snapping and then I said, \"Make me believe you are really masturbating in the sun. Make yourself come.\"\n\nI switched the camera into video mode and focused on her face first and then moved down as she began to stroke her fingers along the inside of her pussy lips. I could see she was getting into it because she was getting very wet. Her clit was swelling and trying to shake off its hood. She was making small whimpering noises as her fingers traveled over her lady parts. \n\n\"Are you ready to insert fingers?\" I asked quietly, hoping the microphone wouldn't pick it up.\n\nShe nodded and slid her fingers down and slipped two fingers into her cunt. She started to rapidly push them in and pull them out making a distinctive squishing sound.\n\n\"Now suck on the middle finger of your other hand and slide it into your ass,\" I suggested softly.\n\nShe complied and turned a little on her side to get the finger down and into her butt. \n\nLooking down, I could see my dick was hard as a rock watching Liz finger fuck for me and the camera. I started to stroke myself and then mentally said to myself, 'Screw this, I am going to fuck that pussy.'\n\nI moved closer and pulled her hand out and wrapped it around my cock. She gave me a puzzled look until I pushed it closer to her pussy and she nodded and aimed my cock with her hand. I slipped the head of my cock inside and it was so hot and wet I just kept going until I was balls deep.\n\n\"That's it baby, fuck my pussy. Give me all of your cock,\" she moaned. I kept the camera focused on the commingling of our genitals as I began to pound her pussy. As I watched, she slid a second finger into her ass. And began to moan, \"Oh yes baby, I can feel you fuck my cunt. My fingers feel your cock stuffing my cunt. It feels so different to feel your cockhead sliding inside me and to feel it with my fingers.\"\n\nNot seeing the bottle of lube, I dribbled some spit onto her fingers and saw that area shine. There must be some of the lube we used in the pool coating her butthole and probably some of my cum for lube. Without thinking, I rolled her a little more onto her side and pulled her fingers out. Pulling back until my cock slide out of her pussy, I aimed for her backdoor and slid myself in. \n\nLiz inhaled sharply at the intrusion, then relaxed back onto the lounge chair. \"Oh yes baby, fuck my ass. Take me any way you want me. I am your cum slut. Let me feel your cock deep in my ass now.\"\n\nI pushed forward until I was fully seated in her butt. Pulling back I began to pound her ass with my cock with deep fast thrusts and slow retreats. She kept up a running commentary on how it felt and exhorting me to fuck her.\n\nI accidently pulled back too far on one stroke and pulled out of her ass. As I tried to reseat myself I pushed into her pussy, which set off a different reaction than I would have expected. \n\n\"Oh god, you're in my pussy again, fuck it baby. Fuck my pussy. Oh your cock feels so good. But my ass feels so empty. Put your dick back in my ass,\" and so on. Liz wanted me to alternate between her pussy and her ass, which is supposed to be a no-no, but if the lady wants, the lady gets.\n\nI found the difference between her ass and her pussy was pushing me to the edge of my control and I hissed out that I was coming and asked where she wanted my load. \n\n\"On my tits. Imagine that they were those F cups monsters that I had 30 years ago and fuck my tits and come on them,\" she said loudly. \"But not just yet please, I'm about to come. Keep fucking my ass while I play with my clit. Oh god here I go. Uuuuhhhhhhggggghhhhh.\"\n\nI stopped and let her ass muscles massage my dick and then when her orgasm was over I pulled out and climbed up and straddled her chest. She squeezed her tits together and I started to fuck my cock between them. It was a different sort of feeling and it didn't take long and I began to come. She dipped her head down and caught my cock between her lips and I began to shoot my load into her mouth. I don't think there was as much cum as before but she didn't seem disappointed. \n\nAs I climbed off of her, she took the camera from me and said, \"Eat my pussy.\"\n\nI positioned myself between her legs and began with a slow tongue exploration of her pussy lips. This was followed by a deep tonguing of the holes my dick had just vacated. I inserted two fingers into her pussy and located her g-spot. A long winding road up to her clit and she started to explode for me. She twitched and shook and squirted my face.\n\nWhen she caught her breath, she handed me the camera and said, \"I think I peed on you. I'm sorry.\"\n\nI laughed and said, \"That wasn't pee. You squirted. Just like the twentysomethings in the porn videos.\"\n\n\"Wow,\" she said. \"I didn't know I had it in me.\"\n\n\"Well, I hate to be a party pooper, but dinner will be delivered soon and one of us needs to be dressed,\" I said.\n\n\"Hmmm. It has been on my bucket list to meet a delivery guy at the door naked,\" she mused.\n\n\"I'm not sure that is such a good idea, but a robe that slips open ...,\" I suggested suggestively.\n\n\"Hmmmm. That sounds like a plan Stan,\" she replied with a big grin. \"Do you have such a robe?\"\n\n\"I think I have just the one, follow me.\"\n\nWe went into the bedroom closet and I pulled out a pink silk robe with embroidered dragons on each side. Liz took one look at it as said, \"Oh my god it's beautiful. Are you sure?\"\n\nI took the robe and held it out to her. I tucked the lapels together and then lightly tied the sash. Showing her that it was presentable I dropped a hairbrush on the floor and told her to pick it up. When she bent down the sash untied and the robe fell open. When she stood up the robe slipped off her shoulders and she was standing there naked with all get asset exposed.",
        "She stood there with her mouth open, finally mustering enough to ask, \"How?\"\n\nI picked the robe up off the floor and said, \"Feel how slippery and silky it is. It is almost friction free. Just bending over will cause your stomach to crunch up and pull the sash loose unless it is in a real tight knot. When you stand up it will slide right off your shoulders. Will that do for your bucket list fantasy?\"\n\nLiz beamed, \"Yes. It will be perfect. Do I have time for a shower? I feel all sticky from our little exercises this afternoon.\"\n\n\"I think so, as long as it's quick. I'll put some shorts on incase it arrives early,\" I offered.\n\nLiz went to the bathroom to shower. I set the camera up on the counter opposite the glass door of the shower to catch the action. \n\n\"Dirty old man,\" she said playfully.\n\n\"Damn straight,\" I retorted.\n\nA few minutes later, Liz came out wearing just the robe. She looked amazing in it.\n\nJust in time as I saw the delivery car pull up and a young man, probably twentyish came bounding up the sidewalk. I told Liz, \"Go out now. There is a small package on the porch. If you get there just in time, you can pick up the package and drop the robe just as he is hitting the porch.\"\n\nShe nodded and took a deep breath. She opened the door and bent down to get the package. The robe worked to perfection, the sash undid and the robe slid right off her shoulders as she stood up. The delivery guy just hit the porch. His face was a study in comedic expressions, shock, delight, lust and finally embarrassment danced across his face. He blushed an extreme crimson as he stammered an apology while staring with laser like focus on her tits. It didn't help him any that Liz stepped forward and took the dinner bag from him and gave him a peck on the cheek before turning and wiggling her butt all the way to the door. She put the food bag just inside the door and then walked back out onto the porch. Turning around she bent down to pick up the original package and flashed him a perfect view of perfect ass, her pussy and lightly reddened rosebud. Just for good measure, she bent down and flashed him again as she picked up her robe. She turned to give him a full frontal again, flashed him a 10,000 megawatt smile and then wiggled her butt into the house and closed the door. The doorbell camera had captured the whole thing in full color and high definition. It was quite a performance. To say that it made that young man's day would be a real understatement. \n\nLiz came over to me giggling like a schoolgirl asked to play spin-the-bottle for the first time. I grabbed her and pulled her down on my lap. \"So how was your first attempt to flash a poor unsuspecting delivery guy?\"\n\nShe had a hard time talking through the giggles, but it came out something like, \"If I had known how much fun that was, I would have been arrested for indecent exposure years ago.\"\n\n\"I'm shocked and appalled at your outrageous behavior young lady,\" I said in mock dismay.\n\n\"Oh bullshit,\" she retorted. \n\n\"Oh well, I'm glad you had fun and made his day. Shall we set up in here for dinner and I can get my laptop and see if I can cast the pictures and movies to the big screen and we can watch more of your scandalous behavior?\"\n\n\"That sounds like a very interesting choice of dinner entertainment, I love it,\" she exclaimed. \"Can I help?\"\n\n\"Why don't you unpack dinner onto the coffee table while I get set up,\" I said.\n\nWhile I retrieved the camera and my laptop, Liz unpacked the dinner, so by the time I got back the smells made me realize how hungry I really was. I set up some TV trays and we divvied up the spoils.\n\nI retrieved the memory card and inserted it into the laptop and set a slide show program to cycle through the pictures. \n\nAs we ate, Liz or I would make some comment on the display on the TV and I could tell it was having an effect on us. My cock was rising to the occasion and Liz was squeezing her thighs together and her nipples were very enlarged. As the photos started cycling a second time, Liz looked over at me and said, \"I never realized how erotic it could be to see yourself in the middle of those types of acts. If I had known, I might have taken pictures or let my partners take pictures when I was in my slut mode days.\"\n\n\"Well you probably will like the videos then, too,\" I said as I queued up the movie clips and pressed play.\n\nI had gotten lucky with setting up the camera and caught us center frame as I ate her pussy on the raft in the pool. Liz was squirming and I finally saw her slide a hand down between her thighs. I was pleased to hear little moans from her as she watched herself get eaten. When she squirted, she exclaimed, \"What was that?\"\n\nI backed up the video several times and we watched as she squirted all over my face. Finally, she said, \"I know you have been watching me. My fingers aren't doing the job. Get your ass over here and eat me before I explode.\"\n\nI left the videos to continue and moved the tray from in front of Liz and knelt down on the carpet. Spreading her thighs I began to slowly lick her pussy as she massaged her titties. It wasn't long before she slid to the edge of the recliner and gave me better access. I began to lick her from her little rosebud, across her taint, and through to valley of her pussy lips until I reached her clit. She was moaning most of the time. \n\n\"Oh god, you are fucking my ass on the TV now. I have seen pornos where other people get their asses fucked but this is the first time I have ever seen anyone stick their dick into MY ass. That is so sexy. Keep doing what you are doing to my clit. Just like that. You have me on the edge now. Don't stop. You went so deep into my ass, I can almost feel it. Now you are pulling all the way out and I can see your cock glistening in the sunlight as you push it back into me. This is when you switched and shoved that hard dick up my cunt and then back into my ass. I can hear me telling you what to do. Keep licking I'm coming. Oh god this is a big one, ohhhhhhhhh gggggoooooddddd. You fucking complete me. I love you Karl, I always have. Oh god, you are making me come again. Ohhhhhhhh ggggoooooodddd. That was so good. Come up and kiss me. I want to taste my pussy on your lips.\"\n\nAs I stood up to kiss her, I leaned my hips in and slid my cock into her pussy. It was so wet I slid in with no effort. Liz inhaled sharply as I penetrated her but she just pulled my head down and began to lick all around my mouth. There was no doubt she was tasting herself on my face. When she was satisfied, she slid her mouth over mine and we kissed while I slid my cock in and out of her oh so wet cunt. \n\nFinally, my breathing ragged as I was getting close, Liz pulled back and said, \"I want you to come in my mouth again. Lay on the floor and I will suck you the rest of the way.\"\n\nI nodded and pulled out of her fuck hole with some reluctance. I lay down on the carpet and she knelt between my knees. Holding my cock at just the right angle she slid me between her lips. She ran her tongue all around my cock, probably licking her flavor off of me. Then she took a deep breath and pushed her mouth onto my cock. I could feel the back of her mouth and she gagged a little as my cock hit the back of her tongue. But she swallowed and I saw her lips reach forward and seemingly pull my cock deeper several times until her lips were wrapped around the base of my cock and I must have been inside her throat. She pulled off and gasped for breath.\n\n\"I've only been able to do that to a couple of guys with real thin dicks,\" Liz said gasping. \"I've never been able to get a big cock like yours down my throat without gagging.\"\n\n\"That was awesome,\" I said. \"I've never been able to get my cock down anyone's throat before. Come up and sit on my face. I read in a book that it is easier for ladies to get a cock in their throats in a sixty nine position. The only other position is on the edge of a bed or a couch where the head hangs down and it is like a sword swallower.\"\n\nLiz nodded and swung herself around. Straddling my head she leaned down and took my cock back into her mouth. While I couldn't see it, I could feel her push my cock past her tongue and I felt her lips wrapped around the shaft of my cock. I lifted my head and began to lick her pussy. Pretty soon, she was sliding back and forth on my cock and it was easily sliding where it had been a struggle before. The novel sensations in my cock along with the stimulation of the smell and taste of her womanhood pervading my tongue and nose, it wasn't as long as I would have liked before I announced that I was coming. Liz pulled my cock out of her throat and sucked on the head and ran her tongue around it while she wrapped her fist around the shaft and pumped up and down.\n\nWith a loud groan, I felt the waves of cum rushing from my balls and out the tip of my cock. The pressure was so strong, it actually hurt each time I ejaculated. But eventually I subsided and Liz rolled off me. I sat up and grabbed her and kissed her. Our tongues intertwined and I could taste myself in her mouth. When we broke Liz apologized, \"I'm sorry, I hadn't finished swallowing all of your cum.\"\n\n\"Relax,\" I said, \"That was not the first time I have ever tasted my own cum. Just like it was probably not the first time you have ever tasted your juices.\"\n\nLiz didn't look so good and her voice quavered as she said, \"Can we just go to bed? I need to take some pain pills. I am starting to hurt and they will take a while to kick in. I just need you to hold me.\"\n\nI nodded and stood up to help her rise. I could see the waves of pain wash across her face, so I said, \"You go get your pain pills. I'll throw this stuff in the fridge. We can have steak and eggs for breakfast tomorrow before I take you to the airport.\"\n\nShe nodded, snagged her purse and headed for the bedroom.\n\nI grabbed the leftovers from dinner and tossed them unceremoniously into the fridge. As an afterthought, I went back to the door and picked up the silk robe and took it with me into the bedroom.\n\nI found Liz sitting on the chair in my bedroom. Her forehead was wrinkled up and I knew she was in pain. I put the robe over her shoulders and she automatically put her arms into the sleeves. A shudder ran through her body as she slid into the robe.\n\n\"This is so soft and silky and comforting,\" she said. \"I don't know why, but I feel so warm in it. It's like a hug. I'm so sorry I ran out on you like that back there. The pain. I missed my pain pills this afternoon and it caught up with me. I don't like the dopy feeling, but I have to have them or the pain just incapacitates me.\"\n\n\"If you need to, we can call the airline and rebook for a day or two later when you feel better,\" I said knowing it wouldn't happen.\n\nShe turned to me and gently put her hand on my cheek. \"If I don't leave tomorrow, I might never leave at all,\" she said. \"And I have so many people to see and so little time to do it.\" \n\nShe got up and walked unsteadily to her suitcase. She pulled something out and walked back to me. As she handed it to me, I saw that it was a plain business size envelope with no address or markings. She looked at me and said, \"Promise me by anything and everything you find holy, that you will give this to my daughter at my funeral. That you won't try to open it or find out what is in it and that you will hand it to her personally. You. No one else.\"\n\nI looked at it for a moment as someone would when being handed a snake. I wanted to deny it. To throw it away. To burn it. But I nodded. It took a couple of tries but I found my voice through my tears, \"I promise. I promise I will hand this to our daughter at your funeral and bear whatever consequences.\"\n\nLiz took my hand and said, \"Thank you. Now go put that somewhere safe and come back to hold me. That's probably all that will happen tonight, and I am sorry.\"\n\nI stood up and put the envelope on the dresser. I came back and helped Liz stand up and then got her tucked in to bed. She patted he bed next to her and said, \"Turn out the lights and come cuddle me. Please?\"\n\nI turned out the lights and crawled into bed and snuggled up to her back. With all the shit flying around in my brain from the last thirty six hours or so, I was sure I wouldn't sleep. But Liz was so warm next to me and she smelled so nice, it was a surprise when I woke up at six thirty the next morning.\n\nI nudged her and said, \"Hey sleepy head, if we are going to get you to the airport, we need to get started now.\"\n\nShe yawned and stretched and rolled up on top of me. She grabbed my morning wood and went \"Hmm, somebody is happy to see me,\" and held it upright before plunging into her pussy. \n\n\"One last fuck,\" she said panting. \"Just a quickie and I'll go shower.\"\n\nWell, it wasn't that quick, but it was satisfying for both of us. Liz went to shower. I threw on a robe and started the steak and eggs for breakfast.\n\nWe didn't talk much. Both of us knew that it was probably the last time we would see each other again. I tried on the ride to the airport, but the words turned to ashes in my mouth. We hugged at the passenger drop off and she waved just as she got to the doors and then she was gone. All the way home I berated myself for not having the courage to find the words to keep her here.\n\nAs I walked into the house, it suddenly felt empty like it never had before. I decided I should get some work done so I started with the kitchen. Dishes cleaned and in the dishwasher. Scraps thrown out. Last thing was to put the cutting board away. I must have subconsciously known what I was going to see when I opened the cabinet. There was Jack and his friend Jack. My body ached for the oblivion they promised. With great reluctance, I put the cutting board away and closed the door.\n\nI puttered with the pool and cleaned the deck. I found things to do. That night when I made supper for myself, I could hear the Jacks calling me from the cupboard. I ignored them. Instead I went out into the living room with my laptop. It was 1 in the morning when I finally finished putting the final touches on the DVD for Liz. It had all of the pictures and the videos laid out in a nice menu with a soundtrack. I decided I would burn it and mail it to her tomorrow. It was time for bed.\n\nBy having tasks I was able to get through the next week and the next week and the next week until I couldn't hear the bottles of Jack Daniels talking in the cupboard anymore.\n\nThen came the email I didn't even know I was dreading. It was from Adele. It simply announced the passing of her mother and gave the funeral details. I stared at it dumbly for a long, long time. I brought up my browser and made plane, car and hotel reservations. It was hard to read the screen because my eyes kept getting blurry and the front of my shirt was soaking wet.\n\nOn my way to bed, I heard Jack and Jack again. Flipping them off I went to take a shower and crawled into bed. The next day I boarded the plane and went back to Chicago.\n\nI should have just used a ride share. All my landmarks were gone or changed almost beyond recognition. Thank god for GPS systems.\n\nI was only 10 minutes late and the priest had only begun as I slipped into the back of the room. The chairs were spaced out except where a few families had grouped chairs together. Finally the priest was done and Adele stood up to say a few things. She had a very beautiful voice. I was proud of her. Her voice only cracked and faltered three times. If I had to do that, I wouldn't have been able to find my voice. I know. It was exactly seven weeks ago I was in her spot trying to say something coherent about my wife.\n\nAfter Adele was done, a couple of Liz's co-workers got up and her sister got up to speak. God, I haven't seen her sister since that time at Liz's mother's house where I accidently walked in on her while she was taking a bath. She didn't look any different. She was still tall and thin, with long black hair and dangerous curves. \n\nI must have zoned out. The next thing I was aware of was a pair of black shoes and black nylons leading up to a black dress and Adele's face. I looked around covertly and realized that she and I were the only ones left. \n\n\"I'm very sorry to disturb you, but the chapel is going to need to be rearranged for the next service,\" said that voice of an angel.\n\nI nodded and got up. Damn she was tall. She was almost as tall as I was and she was wearing flats. I took a deep breath and sucked up all my courage. Not for the first time on this trip did I wish for some liquid courage from Jack Daniels.\n\n\"You are Adele?\" I asked my voice cracking and I hated myself for it. Dumbass, of course it was Adele.\n\nShe nodded and got a concerned look on her face. I reached into my coat and she flinched. I pulled out the envelope. She relaxed but only a little. She was on edge.\n\n\"Your mother entrusted this to me to deliver to you at her funeral. I don't know what, if anything, is in it. She made me promise to get it to you at her funeral without looking inside,\" I rushed through the explanation I had rehearsed a thousand times in my head.\n\nI held the envelope out to her and she looked at it like anyone would if you tried handing them a dead skunk. Finally, she took it. She was going to put it into her purse when I interrupted, \"Your mother also made me promise that you would open it in front of me. I don't know why, but she seemed to feel that it was very, very important.\"\n\nShe looked at me and asked, \"And you are?\"\n\n\"I'm sorry,\" I said. \"My name is Karl and I was a friend of your mother's.\"\n\nShe looked at me for a long moment and then set her purse down and opened the envelope. She pulled out a single piece of paper with Liz's handwriting on it. She scanned the letter, then stopped. I could tell she was trying to reread it but it was difficult with the tears running down her face like twin waterfalls. I located a nearby box of tissues (what funeral home doesn't have them handy?) and held the box out to her. She mouthed 'thank you' and took a couple. \n\nAfter wiping her eyes she was finally able to reread the letter. She looked at me and said, \"I think you should read this too,\" as she handed the letter to me.\n\nThe letter was short and to the point. The contents were burned into my brain.\n\n'My Dearest Adele,\n\nThe gentleman who handed you this letter is Karl [name redacted]. He is your biological father. I am sorry you are finding out this way, but your mother is a coward. \n\nI lost touch with Karl before you were born and although I tried to find him several times, it was only recently that I reconnected with him. I didn't know how he would react to the knowledge of your existence, so I went to see him by myself.\n\nHe is a good man. Please don't judge him harshly. He did not know of you or your existence until I told him. I asked him not to contact you, but to let you decide if you wanted to let him into your life. If you don't want to ever see him again, just walk away. He has no way to contact you. He doesn't even know your last name.\n\nKnow that I will always love you,\n\nYour Loving Mother'\n\nI handed the letter back to Adele and took advantage of the box of tissues.\n\nWe stared at each other for an eternity, which was finally broken when I asked, \"We can't stay here. Can I buy you a cup of coffee?\"\n\nShe nodded and then unexpectedly threw herself into my arms and hugged me so hard I thought I heard ribs cracking. I could faintly hear her whispering to herself, \"I have a Daddy.\"\n\nI put my arms around her and we cried together for a long time. I finally said softly, \"I think the funeral director is getting pissed.\"\n\nAdele released me and nodded. She picked up her purse, sniffed and said, \"There is a coffee shop just down from my condo. Do I need to call a taxi?\"\n\n\"No,\" I said, \"I picked up a car from the airport when I flew in. I was planning on seeing what has changed in the years since I last lived here.\"",
        "We headed out to my rental car and she navigated while we chatted. The coffee shop was a local one that had a good selection of very nice brews. Thank god it was not the chain that burns the shit out of their beans. We got a quiet corner and started talking. I explained what had happened thirty years ago from my point of view. I held nothing back. I was brutally honest about why I never saw her mother again. She listened and asked a few questions. \n\nOne of those questions was, \"Why did you get in touch with my mother again after all these years?\"\n\nMy answer was just as brutally honest. I told her about the death of my wife. Her eyes grew very big and she put her hand on mine when she heard how suddenly she died. I explained that I handled it for about a week and then crawled into a bottle of Jack Daniels. OK, lots of bottles of Jack Daniels. I explained how the message from her mother forced me to look at myself in the mirror and make a decision. Was I going to continue to drink myself to death or was I going to try and live? \n\nI chose to live. I explained that it was her mother that pulled me up and forced me to live again. I even told her that I proposed to her, several times over those two days. She asked and I was honest and I said that I had indeed had sex with her mother over the course of her visit. I told her about the hole in my heart and although her mother had not healed it completely, she had gone a long way towards healing it.\n\nFor her part, Adele was honest in explaining how hard it was to grow up without a father. She had finally started just telling people that her father was dead. That was why she made a stupid mistake in getting married too young and then getting pregnant right away. She was now divorced and was just looking forward to being all she could be to her son.\n\nThe coffee shop was closing, so we walked back to her condo and talked until the wee hours of the morning. She said I was too tired to drive back to the hotel so she fixed up the pull out bed in the couch and I slept there. In the morning, she fixed breakfast and I headed back to the hotel.\n\nWe have stayed in touch, phone calls, emails, text messages. She has sent pictures of my grandson. I have shared pictures of my son, his wife and my granddaughter. Next week she is coming with my grandson to visit. I haven't told her yet, but we are going to take a drive to see my son and his family so that he can meet his formerly unknown sister and his equally unknown nephew. I hope this works out."
    ],
    "authorname": "JamesMiehoff",
    "tags": [
        "anal",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/past-transgressions"
}