{
    "title": "Lucille and Mrs. Miller Pt. 04",
    "pages": [
        "The Next Day (Part 04)\n\nThis story is a total fantasy and there is no underage sex or cruelty involved.\n\n*****\n\nWhen I woke up the next day I felt very apprehensive. When Mrs Miller had returned to the house the previous evening she was in a great rush. She had explained \"I have had a phone call from Father Flynn and there are some surprise visitors there and he needs me urgently.\"\n\nAlthough I had really wanted to talk to her about what I had happened with Brian, I had no alternative but to agree. She called into the shed on her way out and picked up Brian and left immediately.\n\nWhen Bruce came in for his tea, he was full of the joys of spring. I made tea and later on in the evening we settled down with a glass of wine. We both wanted to talk but didn't know how to start.\n\nI knew Bruce would always wait for me to lead and I simply said \"Bruce, you know he fucked me?\"\n\nHe looked at me and said \"Yes Lucille, I was watching.\" He wasn't angry.\n\nBefore I could say anything else he murmured \"Lucille, I love you very much.\"\n\nHe was such a lovely man. I kissed him on the forehead \"I felt guilty. Did you mind Love?\"\n\nHe seemed anxious to tell me and shook his head \"Don't feel guilty, Lucille. I was very excited.\"\n\nI was relieved he wasn't upset and asked \"Did your little cock get stiff?\"\n\nHe sighed and sounded proud of himself \"Very stiff. I even had 2 dribbles.\"\n\nI realised how excited he was and said \"Brian didn't dribble.\"\n\nHe agreed. \"I know I took the pictures from the CCTV. He spunked over you when he was giving you dessert.\" We didn't have to explain. The dessert took place after the fucking. He handed me some pictures. It was terribly wanton but very exciting.\n\nIt was all over my face and hair. Apart from that, the semen was still spouting out of the eye of his penis. \n\nBrucie panted \"I thought you looked like a Birthday Cake.\"\n\nI looked puzzled and Bruce muttered \"It looked as if he was decorating your face with icing.\" There was a similarity. His penis even looked like an icing gadget.\n\nI giggled \"It was even more when he had it between my legs. My pussy was like a bucket of spunk.\"\n\nHe sighed \"Was it warm spunk, Lucille?\"\n\nWe were both enjoying the conversation now and neither of us wanted to stop.\n\nHe sighed \"When he had it up you he was holding your buttocks, Lucille?\"\n\n\"Yes Bruce. It was nice, as it gave him something to grip as he filled me up. I felt I was like a little car and he was filling me up with petrol.\"\n\n\"Your tank was full?\"\n\n\"Overflowing.\"\n\nBruce spoke a little quieter \"I was surprised he only fucked you once, Lucille? I could see he liked being up you.\"\n\nI explained to him \"We both knew I was a married woman and he knows I love you very much Bruce, so we thought we shouldn't do it any more out of respect for you. He knows I love you and he has such great admiration for you.\"\n\nMy explanation was genuine and Bruce appreciated it. He kissed me gently and I squeezed his cock for him. It was still tiny but quite stiff.\n\nHe asked me \"What did Mrs Miller say when she came back?\"\n\nI was worried and told Bruce \"She was in a hurry to see Father Flynn and said we could talk more tomorrow morning.\" \n\nI still felt guilty and my worry must have shown as Bruce tried to cheer me up \"It will be OK Love. She is such a nice woman.\"\n\nSo that was yesterday.\n\nNow it was morning and in the cold light of day, I was worried about how Mrs Miller would react. \n\nBruce on the other hand was really happy and after breakfast went straight down the shed saying he wanted to show Brian some things on the computer.\n\nAs I busied myself in the kitchen I heard Mrs Miller come in through the back door. When she saw me she smiled \"Brian had gone straight to the shed Maam. Apparently Mr Ross is going to show him some more technical things on the computer. He admires your husband so much and wants to learn.\"\n\nI nodded. I didn't know here to start. I mumbled \"Will you be able to give me Confession Mrs Miller. I really feel I need absolution.\"\n\nShe smiled \"I have some good news Mrs Ross. Father Flynn has said I can give you Confession this afternoon if you wish.\" The relief I felt was incredible. I knew she must know by now all of the events of yesterday with her son and probably Father Flynn knew as well. She didn't seem upset. I was desperate to know what she thought about it and whether I would be forgiven.\n\nI asked \"Would it be possible to give me Confession now, Mrs Miller? I feel that with my behaviour yesterday, I should have it as soon as possible.\"\n\nShe smiled \"Brian has told me everything, Lucille. You are feeling guilty aren't you? You think you are a naughty little girl?\" I nodded. I really did feel a naughty girl.\n\nShe chuckled and squeezed my breasts and patted my bottom affectionately \"Alright then Lucille. I will give my naughty little girl, Confession.\"\n\nI felt so happy she was calling me Lucille that I squeaked \"Thank you Mrs Grace.\" I knew I had used the wrong name again but she smiled and patted my bottom again. I felt wonderful.\n\nI could see that she was pleased with me. She was sitting on a low chair and I was standing in front of her nervously as she teased me \"And was Brian nice to my little girl yesterday afternoon?\"\n\nI squeaked again \"He was lovely Mrs Miller.\"\n\nShe looked at my short clothes and said \"He told you he liked you in your short little skirt, didn't he?\"\n\nI wanted to please her and mumbled \"He thought it was my little school skirt. He asked if I was wearing school knickers.\" \n\nShe laughed and reached out and lifted my pleated skirt up to show my underwear saying \"And tell me Lucille, are you wearing little school knickers today?\"\n\nI gasped. She seemed to know everything. I had bought some school panties that morning. \n\nShe was still pleased with me as my skirt went right up displaying my small yellow panties and she teased \"They really are nice knickers Mrs Ross. Ideal for Confession.\" \n\nI just stood there in front of her and murmured \"Thank you Mrs Miller.\" \n\nShe turned more serious and told me to bring a chair and sit in front of her and tell her my sins.\n\nI said the usual introductory words about wanting to confess my sins and she listened intently and nodded approval. \n\nThen she said \"Ands tell me my child. Tell me everything.\"\n\nI had already told her all my past misdemeanours and about my family fantasy fetishes and Bruce's so I knew I had to go through all of yesterday's actions with Brian and then all about Bruce.\n\nI knew she was already aware of everything from Brian so I made sure I told her every little detail. I came to the difficult part and said directly \"He fucked me, Mrs Miller and my husband watched me being fucked.\" There was no expression on her face as she just listened.\n\nAt the end of it all she asked me \"And how did you feel about it all Mrs Ross. Did you feel guilty and did your husband feel guilty?\"\n\nI nodded. I had enjoyed it but felt very guilty for both of us. I explained that I didn't think that Bruce felt as guilty as he was really aroused. \n\nShe seemed to very understanding and said it was clear that Bruce became very excited about watching me being fucked. She was right, especially as she went on to say \"If you remember, Lucille, he loved the fantasy about watching you being fucked by your father.\" She added \"As you know my son is not your husband so that sort of thing cannot be permitted. Or at least not permitted to happen very often.\"\n\nShe was right again and I wanted to show my honesty and said \"That fantasy makes me squishy as well Mrs Miller.\"\n\nShe explained again. \"What really excites you Lucille is the thoughts of your family involvement? They makes it even more exciting for you and probably most other people as well. When you were with Brian yesterday, it would have probably been even nicer if you thought you were being fucked by your young brother.\"\n\nI gasped. I hadn't thought about that but it would have made it even squishier if I had and I confessed it to her. \n\nAs I was telling her everything she was reaching out and squeezing my breasts in an encouraging squishy way which made me want to say more. \n\nI knew that with my short skirt she could see my underwear but it all seemed exciting. \n\nI confessed that my feelings confused me very much but I was afraid in case I was committing some serious sins. She shook her head \"No, Mrs Ross, you can rest assured there are no serious sins involved as no one is being hurt. You like the family fantasies so much you would probably like to think of me as your mother.\"\n\nI blushed and felt my tummy go whoopsie and muttered \"That would be wonderful, Mrs Miller.\"\n\nShe smiled lowered my bra cup and squeezed my breasts again and murmured \"Would you like to be my little girl when I give you Confession, Lucy. Would you like to be Mummy's little Juicy Lucy?\" \n\nI could feel myself surging between my legs and I gasped \"Yes please Mummy.\"\n\nShe sat back and studied me with both my breasts out and said \"I think I would like that as well Lucy but we have to set out some ground rules.\"\n\nI was so excited as I said \"I will do anything you say Mummy.\" I couldn't explain it to myself but I really wanted to be her little girl and be her Juicy Lucy.\n\nShe spoke firmly \"In Confession I will be your mother, but afterwards we must both remember that you are the lady of the house and I am your Cleaning Lady and my son works for your husband. Do you understand?\"\n\nI didn't really want to talk about that now but I managed \"Yes Mummy, I understand.\" \n\nShe smiled \"That's lovely Lucy. Now tell me again how your brother fucked you and what he said.\"\n\nI giggled and told her about Brian's knob and how he liked my short skirt and underclothes.\"\n\nShe was really enjoying my Confession as much as I was and said \"When we have Confession, Lucy, I want you to wear your very shortest school skirt.\"\n\nI giggled \"And shall I wear my school knickers for you as well, Mummy?\"\n\n\"Yes Love, and I would like you to do something else as well for me.\"\n\nI could hardly wait to please her \"Just tell me Mummy. I will do whatever you want me to.\"\n\nShe reached across and placed one hand on each of my knees and slowly separated my knees as she said \"I want you to make sure your legs are wide open for me, so that I can see your cotton gusset all the time.\"\n\nIt was so surreal. I knew I was married woman in my mid-thirties and yet I wanted to behave like a young girl. I was even speaking in a childish manner.\n\n\"Oh Mummy, that's lovely. I want to show you my drawers.\" \n\nAs I spoke she dropped her hand down between my legs and stroked the cotton gusset with her middle finger. It was glorious.\n\nWe were both in a juicy heaven as she as told me nicely \"Carry on with your confession Lucy. Tell me about Brian's prick.\"\n\nI giggled as I whispered \"Oh Mummy, you ought to have seen his big knob. As I rubbed his cock, his big knob swelled up and the slitty eye at the top got wider and little droplets of cream were forming.\"\n\nI was sighing and so was Mrs Miller. She murmured \"Lucille?\"\n\n\"Yes Mummy?\"\n\n\"That was his spunk, Lucille. He was getting ready to spunk over you.\n\n\"I know, Mummy. He did.\"\n\nI knew she was making my panties wet now and so did she as she said \"I expect he came all over your face. He likes that.\"\n\n\"He did, Mummy.\"\n\n\"What about your mouth, Lucille?\"\n\n\"Well some did run down my face and onto my lips.\"\n\nShe chuckled. \"The next time Lucille, make him put it in your mouth. You will like that. You will be able to suck him off.\"\n\nIt was a lovely thought and I imagined the scene of me fully dressed squatting in front of him with his big knob in my mouth. \n\nIt was so strange and erotic. Basically Mrs Miller worked for me. She was a middle aged Cleaning Woman. I was her boss and yet in these circumstances I did exactly as I was told. Not only did I obey her. I really wanted to obey her.\n\nDuring my Confession she would sometimes revert to more formal terminology. At one stage he said to me \"Mrs Ross?\"\n\nI didn't want to use those words so I replied \"Yes Mummy?\"\n\n\"Show me your Tits.\"\n\n\"Yes Mummy.\" and I slipped my blouse and bra right off. She eased me back on the chair to look at me. \n\nI was conscious that I was supposed to be her little girl but I also knew I had large breasts. I wanted to make some sort of excuse \"I know I am your little girl Mummy, but I am 37.\"\n\nShe chuckled \"I know Lucille, but that is even better. I want my little girl to have nice big Tits for me.\"\n\nI giggled. Her friendly manner encouraged me and I tentatively said \"I like your Tits as well Mummy.\"\n\nShe laughed \"Of course, Love. I will show you my Tits.\" With that she pulled the top of her dress down and her bra cups displaying her magnificent breasts with very large pinkie brown nipples. \n\nShe knew I was thinking about the age thing but was so sure of herself as she told me \"I am 55, Lucille.\"\n\n\"I know that Mummy.\"\n\nShe laughed \"At my age Lucy, I have really big Tits for my little girl to play with.\"\n\nI surged again. I had cum about 4 times already. I hoped she had. I was so excited as I asked \"Can I really play with them, Mummy?\"\n\nBetter than that Little Lucy.\"\n\nI was squishing again as I queried \"Better, Mummy?\"\n\n\"Yes Love. I want you to suck Mummy's Tits.\"\n\nIt was so wonderful as I moved my face forward and opened my mouth.\n\nAs I clamped my lips around her breast she whispered \"That's right Lucy. Around Mummy's Nipple. Suck Mummy's nipple.\" It was wonderful and the taste was exquisite especially as she whispered in my ear \"There's a good girl. All mothers likes being milked.\"\n\nThe next few minutes were very quiet except from the slurping noises I was making. She was looking down at me fondly and I knew it was pleasing her.\n\nThe only thing she did was, after a few minutes she gently withdrew my face off her left breast and moved me onto her right breast whispering \"You really are a good little girl Lucy.\"\n\nActually I could taste her liquids so much now and it was really lovely.\n\nI was still clutching around her back now as she reached around me to grip my buttocks strongly and I felt myself being drawn into her body and pulled even tighter.\n\nI wasn't sure what was happening but then I realised her knee was separating my thighs. I willingly opened my legs wide and found myself practically riding astride her big thigh.\n\nShe then started to rock me on her thigh. It was strange as we were two women together but as I pressed my crotch down onto her big meaty thigh and he rocked me and made me slide up and down I honestly felt I was being fucked. I started to rock myself. It was wonderful.\n\nThis was so wonderful. We spent ages doing it. \n\nI realised that I had forgotten about my husband and Brian. I had left the CCTV switch open but in this room, there was no little monitor to check if he had been watching. I wasn't worried about it.\n\nShe started to pull my skirt up again and then her mobile phone rang. She released me and answered \"Mrs Miller speaking.\"\n\nThen I had a shock with her next words \"Yes Father Flynn. I understand Father. I will come to the Church House as soon as I have finished.\"\n\nThere was a silence and then she said \"Yes, I have given Mrs Ross, her Confession. I will report back with all information including any pictures.\"\n\nAgain after a silence she answered \"Yes I have explained things, although I haven't told her about the additional penance yet.\"\n\nThere were more silences and then she told him about other church duties she had carried out and he seemed to be very satisfied and she finished with \"Thank you so much Father. You are very kind to say that but I will always do my duty for Mother Church.\"\n\nShe put the phone down and looked quite pleased with herself as she told me \"Father Flynn is such a good man. Our Parish is so fortunate to have such an honourable man to look after us.\"\n\nI nodded. He was a nice old man and so respected by everyone. Never the less I was still worried to death about him knowing about my Confession and all the things and fantasies that I had told Mrs Miller. I knew that Bruce was worried on this aspect as well.\n\nIt was clear that our naughties had finished for today. I was reluctant to stop but I knew that it was Mrs Miller who decided these things. She simply said \"Time for Penance now Mrs Ross.\" I nodded as she formally declared \"As this is your first Confession I shall only impose 3 Hail Marys as Penance.\"\n\nI told her \"I have been practising the words Mrs Miller, but I am not word perfect.\"\n\nShe smiled \"Don't worry Mrs Ross, it is surprising how many lifelong Catholics get it mixed up. It can easily be managed. For now though we will say the words together, so kneel down at the settee with me.\"\n\nShe really was understanding as we knelt on the carpet with our hands clasped and our elbows on the settee and recited \"Hail Mary, full of grace ...\" Until we had said the full prayer completely 3 times.\n\nShe then crossed my forehead and granted me absolution and we stood up.\n\nShe looked at her watch saying \"It is late for me to start anything now Maam, but I still have half an hour to spare. Shall I make us a cup of tea?\"\n\nI felt relieved that she was not leaving immediately as I really wanted to ask some delicate questions. Over a cup of tea would be ideal. I said \"I am glad you are staying for a while Mrs Miller. In fact, you sit down. I will make the tea and get us some nice chocolate biscuits.\"\n\nShe laughed \"Certainly not Mrs Ross. I work for you and it is my job to make tea. I know my place and so does Brian. We are so lucky to have such lovely people to work for.\"\n\nI smiled and sat down as she went into the kitchen to return with the tea and biscuit. We sat down and made ourselves comfortable. \n\nShe had started to talk about which rooms she was going to concentrate on tomorrow but I nervously interrupted and said \"I know we are not in the Confessional, Mrs Miller, but would it be possible to discuss some of those special things?\"\n\nShe smiled \"If course Maam. You know of course that I cannot give you absolution but you have already told me quite a lot outside of the Confessional and Father Flynn has said it's acceptable. If I can help in any way, you know I will.\"\n\nI understood what she meant. But I needed to know what was acceptable.\n\nI took a deep breath and said \"You remember me telling you that Brian fucked me yesterday, Mrs Miller?\n\n\"Yes of course Lucille and I thought I had made it plain that I have already granted you absolution for that.\"\n\n\"Yes, I understand that, but you also said that that can't be permitted again.\"\n\nShe looked quizzical \"I didn't say that exactly Lucille. I said that it can't happen very often.\"\n\nI breathed a sigh of relief. There was an opening and I asked \"So how often would it be permitted Mrs Miller?\"\n\nShe could see where I was coming from and half smiled \"I hadn't thought that deeply about it Lucille but I think Father Flynn wouldn't mind it happening say about once a month. From what you are saying I assume you would like Brian to fuck you again?\"\n\nI couldn't help myself. \"Yes I would Mrs Miller and I know Bruce would like to watch again.\"\n\nShe nodded her head in understanding \"So would once a month be satisfactory Mrs Ross or were you thinking of more often?\"\n\nI had a mental image of lying on the bed once a month with Brian kneeling between my open legs ready to shove his lovely prick up me. I wanted to be honest and said \"I think my husband and I would both like it to be more often.\"\n\nShe said \"That would be difficult, Mrs Ross. As you know you are a married woman and for you to be fucked very regularly by a young lad outside your marriage vows would be a serious sin.\"\n\nI could see she was telling me what Father Flynn had already instructed. I must have looked a bit down in the mouth as she added with an encouraging smile \"You can still have your fantasies though Mrs Ross and these can involve my Brian and your Brucie.\"",
        "I realized that this was the best I could get and said in a rather low voice \"Yes Mrs Miller, I understand. It's OK as long as its fantasy.\"\n\nShe could see I was looking depressed and tried to cheer me up \"But there are other things you can do Lucy without going to the full mounting.\"\n\nI couldn't see what she meant. She had told me fantasy was OK but I that Brian could only fuck me once a month. I asked \"What else can I do then Mrs Miller?\"\n\nShe smiled and spoke to me as if I was a child. \"Well you did say you liked the little things you did in the shed with Brian with your husband watching. I assume you enjoyed those?\"\n\nI wasn't quite sure but some of the things were very exciting.\n\nI must have looked uncertain as she asked \"Did you like wearing the very short skirt out in the shed so that Brian could see up?\" I had and I nodded. \n\nShe asked \"And did you like squatting for him?\" I nodded again. Not only did I like young Brian looking up my skirt but the physical movement of squatting with my knees apart made my panties tighten between my thighs and pull into me. It was an exquisite feeling. \n\nShe chuckled \"Brian told me he liked you doing those things as well. It made him very big.\n\nI tittered \"He is very big anyway Mrs Miller.\"\n\nShe laughed with me \"I suppose I should have said Lucy, you made him even bigger.\"\n\nI was feeling more relaxed now and thought I may as well push things as far as possible and asked \"What about the time I had to squeeze past him, in the shed.\"\n\nI had told her all about that in my Confession. I was also fairly sure that Brian had told her as well. She smiled \"Are you talking about the time when you felt Brian's prick rubbing into your belly?\"\n\n\"Yes Mrs Miller, I could feel the shape of his knob. Just thinking about it made my panties wet. Bruce couldn't see everything but he knew something was happening and it made his little penis stiff.\"\n\n\"So you both enjoyed it. Brian has told me he liked it as well.\"\n\nI could see an opening now and asked \"So if I did that again, would that be a serious sin or would Father Flynn say it was acceptable?\"\n\nShe laughed \"Well, as both you and Bruce liked it and my Brian certainly enjoyed himself, then it is obviously acceptable.\"\n\nI felt great relief and joy. \"That is wonderful, Mrs Miller.\"\n\nShe was clearly in a helpful mood and said \"Actually Mrs Ross, you could make it nicer by wearing even shorter and thinner clothes if you have them.\"\n\nI had loads of short skirts and I had another idea as well \"Would it be OK if I wore thin little panties, Mrs Miller?\"\n\nShe knew what I was thinking now. It made her chuckle and she encouraged me \"Yes of course but if you also wore ones with a narrow gusset, it would make his penis feel even nicer.\"\n\nThis was wonderful and my mind was working overtime \"Oh God, that would be gorgeous, Mrs Miller.\"\n\nI knew she wanted to help me and looked a bit pensive and asked \"Would you like him to undo the front of his trousers as you squeezed past him, Mrs Ross.\"\n\nI was lost for breath and simply nodded my head up and down.\n\nShe said \"It could get a little rude Mrs Ross if his penis popped out and your husband would not be just looking in the camera. He would be watching close up from a few feet.\"\n\nI mumbled \"Bruce would be embarrassed Mrs Miller but he would be wonderfully excited.\"\n\nShe smiled \"That seems reasonable Mrs Ross. Of course if you also pulled your little skirt up as you squeezed past him, it could end up between your thighs rubbing into your panties.\"\n\n\"The ones with the very narrow gusset?\"\n\nThe possibility of something serious happening was very obvious to both of us.\n\nI spoke almost automatically as the thought occurred to me \"If it slipped up the side, he may fuck me. Would that be acceptable Mrs Miller?\" \n\nShe smiled \"Well, he wouldn't be actually fucking you deliberately, would he?\"\n\n\"No Mrs Miller. Not deliberately anyway.\"\n\nShe laughed \"Are you saying you would like Brian to fuck you accidentally Mrs Ross?\"\n\nI felt encouraged. \"My panties do have small gussets Mrs Miller.\"\n\nShe nodded. She understood what I implying. She looked very pensive as if she was making up her mind.\n\nThen she said \"If he fucks you by accident like that I don't think that is a very serious sin.\"\n\nI must have looked pleased with myself as she said very pointedly \"If you happen to get fucked like that Mrs Ross are you sure your husband won't mind?\"\n\nI knew that although Bruce would be humiliated he would want to watch.\n\nI told her \"I think it will make him very stiff Mrs Miller.\"\n\nShe again looked serious and said \"So you and Little Brucie would like it. Brian would obviously like it and as far as I am concerned it is an accident.\"\n\nI gasped in gratitude \"That would be wonderful, Mrs Miller.\"\n\nShe was still being nice but had to say \"That just leaves Father Flynn.\"\n\nMy heart sank. I had forgotten about the old priest. I knew that if he didn't accept it then Mrs Miller wouldn't allow it.\n\nI blubbed \"But you said, it wasn't a serious sin if it was by accident.\"\n\nShe corrected me \"It would be serious but nor very serious. I think I could persuade Father Flynn but he would probably impose the penance himself.\"\n\nWe had talked about special penance before but I had ignored it. I didn't really care what it was.\n\n\"What sort of penance would he impose on me Mrs Miller?\"\n\nShe explained \"Well you would still have to say your prayers to him but he would indubitably have to spank you.\"\n\nI looked shocked as I muttered \"Spank me, Mrs Miller. Do you mean smack my bottom? I couldn't allow an old man to pull my skirt up and see my panties.\" She nodded thoughtfully.\n\nMrs Miller said \"I can quite see your point of view Mrs Ross. What you are really saying is that you don't think Brian should fuck you by accident.\"\n\nI panicked \"No Mrs Miller. I am not saying that. It was just the shock of thinking about Father Flynn seeing my knickers.\"\n\nShe spoke again \"It is quite reasonable for you to be shocked Mrs Ross and it is important you realise, he wouldn't just see your panties he would pull them down. He would spank you on your bare bottom.\" \n\n\"My bum?\"\n\n\"Yes Mrs Ross. He would spank you on your bare buttocks. But if you are unable to accept that, then we should forget it.\"\n\nI panicked \"I can accept it Mrs Miller, and I want to accept it.\"\n\n\"Are you sure?\"\n\n\"Yes, I am very sure, Mrs Miller.\"\n\nShe smiled \"That's settled then Mrs Ross. I will explain to Father Flynn your full acceptance and that you want to be a good girl for him.\"\n\nThe thought of being a good girl for the old man sent little flushes through me. There was also the fear of being very embarrassed. I told Mrs Miller of my fears.\n\nShe laughed \"You must remember Mrs Ross that Father Flynn is a very mature man and has helped many women exactly like you get over their problems including their deep embarrassments.\"\n\nI explained \"But in my case Mrs Miller, it is a little different as I go to regular meetings with Father Flynn and we discuss problems as equals with other Committee members. I am unsure how to handle this sort of situation.\"\n\nShe nodded. I could tell from her manner she knew exactly how to sort this difficulty out.\n\nShe explained \"But your fears all stem from the fact that when you are in your meetings on the Committee you are all equals with Father Flynn.\"\n\nIt seemed fairly obvious as that is what I had just said, but I nodded.\n\nShe went on \"But when you are in the Confessional with Father Flynn, you are not equal. He is much senior to you. Much older. Much wiser, almost like a parent.\"\n\nI could see what she was saying and murmured \"So he would be almost like my mother or father.\"\n\nShe chuckled \"Hardly your mother Mrs Ross, but certainly like your father.\"\n\nI gasped \"My Daddy.\"\n\n\"Exactly like your Daddy, Mrs Ross. I know in these circumstances he would be happy if you called him Daddy.\"\n\nIt was getting clearer now \"So in Confession, I would be his daughter?\"\n\nShe nodded \"Yes but not so formal. You would be his little girl and sit on his lap.\"\n\nI remembered what she had said earlier and asked \"So, when I am his little girl and sitting on his lap, would he have my knickers off?\"\n\nShe thought for a moment and then said \"I am not sure when he would take your panties off Mrs Ross, but when are sitting on Daddy's lap he will probably give you a little feel up your skirt.\" \n\n\"Between my legs. He would feel my panties?\"\n\n\"Yes of course. That is providing you are still wearing them.\"\n\nI nodded my head. As usual Mrs Miller had answered all my questions honestly.\n\nShe looked at me and said \"You have to make your mind up Mrs Ross if you want to go to Confession with Daddy and have your bottom smacked and any other penance he may impose.\"\n\nI knew what I wanted. I wanted to be fucked by Brian. I also knew they my husband wanted to watch me being fucked by Brian.\n\nShe had been so honest with me, I wanted to be equally honest with her. I looked at her and said \"I want to go to Confession with Father Flynn, Mrs Miller and I want him to take my knickers off and I want to sit on Daddy's knee and have my penance, whatever it may be.\""
    ],
    "authorname": "MaryGrangerx",
    "tags": [
        "fetish",
        "incest",
        "knickers",
        "panties",
        "cross dressing",
        "lesbian",
        "spanking",
        "cuckold"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lucille-and-mrs-miller-pt-04"
}