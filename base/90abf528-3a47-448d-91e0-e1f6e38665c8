{
    "title": "Operation: Final Fantasy Ch. 06",
    "pages": [
        "Here is my final submission of Operation: Final Fantasy.\n\nEdited by Wolf Vixen, with much thanks. And again, thanks to HLD for inspiration through his masterpiece \"Impersonating Brianne\". Also thanks to Sidney43; because of his insightful comments left in earlier chapters, I actually changed quite a bit of this chapter in an attempt to capture the characters more clearly. Hopefully I succeeded.\n\n<p align=\"center\">XIII</p>\n\nNo luck, Ryan thought to himself as he opened his cell phone, immediately snapping it closed out of frustration. Only yesterday Ryan left her a message asking her to call him back in the hopes that they could get together that weekend -- just as friends of course, nothing more. The return phone call he was expecting -- or at least hoping for -- wasn't there. Not even a single text, either. He'd been getting a lot of that lately.\n\nSince his phone was on vibrate, he already knew she hadn't called him, but he still held a small amount of hope that she may have called, and that maybe he simply didn't feel it ring.\n\nHe walked away from the restroom trying to hide the irritation on his face from the rest of the public as he walked back to the table. He slid into the booth, joining the other guys while trying to tune out the blaring noise of countless college football games playing on the surrounding televisions.\n\n\"Took long enough,\" Charlie said, taking a swig of beer. \"We were wondering if you fell in.\" Ryan gave a fake chuckle at his skinny brown-haired firefighting buddy.\n\n\"Nope,\" Ryan said with a straight face. \"The only falling today was you. Off the ladder.\"\n\nJeff laughed wildly, slapping his rookie teammate on the back. Ryan snickered and winced at the same time as the slap on Charlie's back was hard enough to echo; Jeff was a big man and sometimes seemed to forget his own strength.\n\n\"Hey, I slipped a couple rungs, but I didn't fall,\" Charlie said in protest, pushing Jeff off of him.\n\nJeff continued to poke fun at him.\n\n\"Too much weight from the gear. Just because you aren't getting paid doesn't mean they won't fire a volunteer fireman. You need to replace those bb guns with howitzers like mine,\" Jeff said, pointing to his bicep and flexing his arm.\n\n\"Genetics didn't make me a freaking six-foot-seven grizzly bear like you, Jeff,\" Charlie said, defending himself.\n\nRyan told Charlie, \"It's not all genetics; a lot of it is because he hits the gym like I do. You should join us sometime.\"\n\n\"It's true. Sure, I look like a Greek god now, but until I hit the gym a few years back, I used to be scrawny like you. Soft and gooey and stuff...\" Jeff and Ryan both started cracking up.\n\nCharlie shoved the large hulk of a man. \"Alright bastards, you both can eat me.\"\n\nThe waitress came by, dropping off the check. Jeff had been flirting with her all night, trying to get a phone number out of her, but he had come up empty every time.\n\nAfter she walked away, Ryan said, \"I'll get this one, guys. Mostly because you keep getting rejected and I feel bad for you, Jeff. Next time, though, you're still paying. Even if the next waitress turns you down. I won't feel sorry for you, either. You've had enough chances.\"\n\n\"Yea, right. Like you're doing much better than me in the chick department?\"\n\nRyan gave a slight smile and an indiscriminant shrug.\n\nWell, not anymore, he thought to himself. If only you saw me when Jessica was on my arm.\n\n\"Touch\u00e9. I'm off to class, fellas. Jeff, make sure you're driving Charlie. He's a lightweight.\"\n\nCharlie gave him the finger. \"I'll beat you both up the ladder next time, Patton. You wait and see.\"\n\n\"You're on. See you guys tomorrow.\"\n\n---\n\nRyan pulled out the keys to his car while walking across the parking lot. Since he had to park out in the sticks, he had a little bit of a hike ahead of him. It wasn't a surprise; he expected it even before he pulled into the parking lot because this area of town was always busy this time of night.\n\nAs he walked by the new French restaurant Chez Fleur, twirling his keys in hand, he wondered if Jessica had been there yet. He wanted to take her to the grand opening back when she was with him, but the timing didn't work out; Chez Fleur didn't open until just a few days after his time with her was up.\n\nOut of the corner of his eye, Ryan noticed a Mustang pull into one of the valet parking spots at Chez Fleur. It was a familiar looking red Mustang -- a Race Red color, to be exact.\n\nThe first thing he noticed that stepped out of the car was the long legs all the way down to her firm calf muscles, ending in a pair of four inch black stilettos. His vision shifted to the rest of her; she looked gorgeous in her little black evening dress. Her blonde hair had been styled with her trademark beautiful ringlets and her makeup was perfect. Jessica had never looked so good.\n\nRyan was stunned. He quickly changed his path and started walking towards her when it became apparent that two men were waiting for her. One of men was the valet; she dropped the keys in his hand, allowing him to drive her car despite an obvious reservation. He didn't blame her; it was a nice car.\n\nThe other man was a little older. He stood there waiting for Jessica, adjusting his fancy suit and tie. Ryan didn't recognize the man, but the man clearly recognized Jessica; with a large pearly-white smile, he opened his arms and gave her a hug. Leaning in, the man gave Jessica a kiss on each cheek. She turned her head each time, accepting the man's kiss.\n\nRyan felt his face turn flush. Instinctively he gritted his teeth and clenched his jaw. He wanted to run over and deck the guy, and just might have, until he remembered Jessica wasn't really his girl.\n\nHe sighed. That was the problem with the fantasy he set up; eventually it had to end and now he was stuck in the world of reality. To make matters worse, Jessica as of late made it clear she wasn't even interested in friendship. Anything more than that was out of the question, obviously, but losing her friendship hurt.\n\nRyan put on his sunglasses despite the sunset, ducked his head, and kept walking towards his Challenger. He made it all the way to his car, even had his hand on the door handle, when he heard someone behind him.\n\n\"You're looking good.\"\n\nHe quietly sighed out of frustration; he didn't need this. Turning around, trying to keep his eyes above her neckline, Ryan took off his sunglasses and told Jessica, \"You're looking good, too.\"\n\nShe gave him a playful smile. \"I was talking to Charlene. You, on the other hand, are looking absolutely astonishing.\"\n\nHe couldn't avoid a small smile creeping up on his face.\n\n\"Oh, Ryan, I've missed you. How are you, really?\"\n\nShe had a genuine look of concern on her face as she stepped forward to reach out and touch his arm.\n\nEven though the smile looked genuine, he knew better. She was amazing at her job and specialized in making men melt; with her beauty and acting skills, it was a wonder she wasn't on television. Still, the touch on his arm felt electric. He was far from being immune to her.\n\n\"I've been fine, same old stuff like the last time when we talked.\" His eyes darted from Jessica to the guy she was just with, who seemed to be patiently waiting at the entrance to Chez Fleur, and back to Jessica within a split second. But it was long enough for Jessica to realize what he was thinking.\n\n\"I should probably go Jessi...\"\n\nBefore he could finish, she interrupted him. \"No, wait. Oh, Ryan, I am so sorry.\" Nodding her head in the direction of the older guy in the suit and tie, she meekly told Ryan, \"It's not what it looks like. It's not what you're thinking.\"\n\nRyan opened his car door and said, \"I don't think you have any idea what I'm thinking right now. Besides, you're a big girl and can do whatever you want. It was good seeing you again; I'll see you around.\"\n\nAngrily, Jessica moved forward and slammed the car door shut before he could get in. Ryan had moved his fingers out of the way just in time before getting them smashed in the car door. \"Jessica! Are you crazy?\"\n\nShe looked frustrated, \"Ryan, will you listen to me for a moment?\"\n\nJessica completely lost her train of thought -- she was distracted by the picture she saw through the driver side window of Ryan's Challenger attached to the visor. At first she thought it was a picture of Amanda, but it wasn't. It was Jessica's profile picture from the agency. How did Ryan get that? Did Madeline have something to do with it? She quickly went from frustrated to flustered. Why did he have her up on the visor, and not Amanda?\n\n\"Just... just, don't go. I...\"\n\n<br> It was clear she wasn't going to say anything, so Ryan took the initiative to speak. \"Look, Jessica, I promised you I wasn't going to lie to you anymore, and since I'm already pouring my guts out to a counselor I might as well tell you how I'm feeling. I owe you that, at least. Then I'm out of here.\"\n\nJessica flinched at the way he announced his inevitable dismissal, but remained quiet.\n\nRyan took a deep breath, \"When you promised me you'd be by my side, I guess I took it a little too literal. I thought I'd be seeing you more. Obviously that didn't happen, not even through phone calls and texts.\"\n\nJessica looked guilty when he said that.\n\nRyan continued, \"I'm sure you were busy with important things, so I don't blame you for that. And,\" he sighed, trying as hard as he could to admit the next part, \"I guess I forgot that you weren't mine.\" He nodded over to the old guy, still patiently waiting for Jessica. \"That was my fault.\"\n\nShe quietly said, \"You mean you forgot that Amanda wasn't yours -- at least, that she's not anymore?\"\n\nRyan shook his head, \"No, Jessi. I meant you.\"\n\nJessica blinked. His honesty didn't surprise her nearly as much as the fact that she melted so easily.\n\n\"Let me explain,\" Ryan said while crossing his legs and leaning back against his Challenger.\n\n\"Operation Final Fantasy.\"\n\n\"What?\"\n\n\"You said you wanted to know what 'Off -- Complete' meant, right?\"\n\nShe suddenly remembered that stupid napkin. What he wrote on it, 'Off -- Complete', had caused so much turmoil between them back in Hawaii and almost ruined their entire trip. As is, it cost them a few days together.\n\nRyan continued, \"It meant Operation Final Fantasy would be complete once I... pulled the trigger. You were my final fantasy -- the most amazing, and the very last fantasy I would ever have. I mean, it was like you were an actress playing a character. You played Amanda.\"\n\nJessica nodded for him to continue.\n\n\"It was my last fantasy, and then...,\" his voice trailed off. Calmly, she put her hand back on his arm.\n\n<br> He gave her a weak smile, as if to let her know he was ok.\n\nWith a soft chuckle, he shook his head and told her, \"I can't believe I'm telling you all of this.\"\n\nHer smile in response looked innocent, like that of a young girl. It encouraged him to continue.\n\nTaking a deep breath, he said, \"You were supposed to play Amanda. But somewhere along the way, you became completely separate from her. That scared me. I won't lie; it still scares me. So you can see the fantasy that was supposed to be about Amanda turned into a reality... no, what I mean to say, is it turned into a fantasy with you.\" He shrugged, giving a bittersweet smile at the same time.\n\nHe bit his lip, but told her, \"I do say fantasy of you because; well...\" he nodded over to the suit. \"Let's face it; I'm just another guy to you, no different than any of the others.\"\n\nJessica started to speak, \"That's not...\"\n\nRyan cut her off. \"I'm not saying it like it's a bad thing, it's just the way it is. In fact, it's my own fault. I set up the fantasy. I wasn't counting on this awkward post-fantasy life between me and you. I wasn't supposed to have a post-fantasy life. I built up something with you that I shouldn't have, and now,\" he nodded over towards the suit again, \"I'm paying for it. Like I said, my own fault.\" Ryan shifted awkwardly.\n\n\"Ryan, please let me explain a few things.\"\n\nHer heart was heavy, she felt like she was going to explode if she didn't tell Ryan everything.\n\nRyan dispassionately said, \"He's probably getting tired of waiting for you.\"\n\n\"Tough shit,\" she snapped at him. Realizing she was being too snippy, she took a deep breath and looked down, embarrassed. \"Ryan, first of all, you're not just any guy.\" Jessica was hurt that she even had to explain it. \"You are different than anyone else that I've ever been with. You are amazing, in so many ways.\"\n\n\"Second,\" she said with great hesitation, \"Madeline suggested I shouldn't see you.\"\n\nHe looked at her blankly. His neutral face was quickly turning into anger, \"She what?\"\n\nShe could tell that anger was starting to surface on his face, so she talked quickly, \"She meant well; in fact, I agreed with her. Reluctantly, anyway. I'm so sorry I dropped you from my life. I didn't want to, please believe me.\"\n\nHe crossed his arms, \"Go on.\"\n\nShe sighed, \"We both know I look like Amanda. We were both worried you would still be hung up on her, and I didn't want to push you back down to rock bottom. You didn't need to see someone during your time of healing that reminded you of your beautiful wife.\"\n\nHe let her words sink in slowly, nodding his head, \"Ok, I suppose I can see that.\"\n\nJessica giggled, \"Third, and most importantly, I quit my job.\"\n\n\"Wait... what?\"\n\nJessica took his hand, \"Well, sort of.\" She sighed, \"Of all nights to run into you, I can't believe it was tonight. Madeline asked me if I would take one last job. I told her no, but she assured me there would be no sex involved. I agreed only as a favor to her. It's all about impressing his clients tonight -- at the restaurant only. I'm simply to be arm candy for Phil over there. No touching other than hand-holding to sell an image and a simple European kiss on the cheek.\"\n\nIt was obvious to Ryan that she was feeling guilty by the way she hung her head and avoided looking into his eyes. \"Even before I met you, I was seriously thinking of getting out of... this business. It never set right with me, to be honest. Taking money for sex. Every time I thought about getting out, it would scare me, knowing I couldn't find an honest job that I was as good at or made anywhere near as much as I made working for Madeline.\"\n\nHis eyebrow rose, \"Phil, huh?\"\n\nShe giggled again, \"He's gay. I'm pretty sure you don't have anything to worry about.\"\n\nAn unknowing smile surfaced on his face, \"Wait... why are you telling me this?\"\n\nJessica leaned in and kissed his lips, \"I do have to go, but I want to see you tonight. If you'll let me.\" She lowered her head and raised her big blue eyes, trying her hardest to reel him in, \"If you can forgive me.\"\n\nShe turned her lips downward making a pouting face, running her fingers up and down his chest. Ryan held her waist and brought her closer to him. He scolded her, \"Why do you make it impossible for me to resist you?\"\n\nJessica snickered deviously.\n\nHe gulped, \"You said you loved me once. Did you mean it, or did you just say it in the heat of the moment?\"\n\nRemembering that fateful night, she suddenly recalled those words she spoke, as she tried to scream through the door, afraid she would never see him again. Her eyes started to water. Noticing her emotions, Ryan pulled her into his chest tightly.\n\n\"Yes. I meant it then, and I meant it now.\n\n\"I love you, Ryan.\"\n\nHis heart skipped a beat. Leaning down, he kissed her. \"You shouldn't. I'm so sorry, Jessi. So, so sorry. Everything I've done to drag you into my messed up dysfunctional life, you deserve better than a guy like me.\"\n\nA bashful look of a little girl crossed her face, \"Is that really what you think? Is that why you never chased me?\"\n\nHe looked guilty, trying to form his words carefully, \"Well, part of it was the nature of our relationship in the first place, even once I saw you for who you were. I didn't think we could cross that line, or at least I didn't think you'd want to. But, yes. I also didn't pursue you because you shouldn't be with someone like me. I have more baggage than Paris Hilton's bellboy.\"\n\nHe bit his lip and tightened his jaw, admitting, \"You saw me with a gun in my hand when I was at a place lower than rock bottom. Who could want someone like that?\" As hard as it was for him to admit it, Ryan said, \"I was embarrassed.\"\n\nHer face gave off the biggest smile, \"You have it backwards; it's me who doesn't deserve you. So please, don't apologize to me again. It should be the other way around, after the way I've treated you. After the times I ran from you. I didn't think men like you existed. You're better than any prince in any fairytale.\"\n\nHer lip trembled as she sniffed, trying desperately to hold back her tears, \"You've had it backwards. You really are Prince Charming. Me? I-I'm, just... just a common call girl. Not even that; let's call it what it is. I'm a hooker.\" Still wrapped up in his arms, Jessica crossed her arms together tightly against her chest, feeling insecure with her very own words.\n\nShe continued, \"Or at least, I have been up until I met you and quit my job. I'm not even a good hooker, especially since I've met you. My head's not on straight; I can't think right, I can't sleep at night.\"\n\nShe shook her head, and put one hand gently on the side of his face, \"But tell me, Ryan, how does a girl recover from that? How does she expect to find love when she doesn't even know what love looks like or feels like? Our view of love is distorted. At least it was for me, until I met you. And I know that whatever I feel, even if you reject me, there's no way I can work for Madeline again. Ever. Trixie is gone.\"\n\nSnickering through her tears, she added, \"You ruined that for me. But I'm glad you did.\"\n\nRyan chuckled. Jessica continued, \"Maybe I don't even know what love is, but what I do know is this: What I feel when I'm around you... It's absolutely amazing. I want that. Whatever you call it, I want that for the rest of my life.\"\n\nHer big baby blue eyes sparkled through her tears. She looked up at him softly, like a puppy that only wanted to be loved yet was afraid of rejection.\n\nPassionately, his eyes searched her gorgeous blue eyes, as if he couldn't believe her words and instead was searching for the truth. He was skeptical for a brief moment, but whatever he found in her eyes, it made him believe her.\n\nRyan kissed her again; his tongue wrestled with her tongue, his hands caressed her face. Jessica tried not to cry, holding him tightly and kissing him back, but her tears poured, causing her black mascara to run down her cheeks.\n\nThe only time Ryan came up for air was to tell her, \"I love you too, baby. More than you know.\"\n\n<p align=\"center\">XIV</p>\n\nIt had been years since anyone had seen snowfall in their part of Northern California, but the thick white snow permeated the ground outside on Christmas morning. Jessica was in the kitchen making hot chocolate and Bing Crosby was playing in the background. Ryan couldn't help but smile watching through the window as the cold flakes fell slowly while he remained warm inside. Soft footsteps snuck up from behind bringing him back to reality. Jessica held out a steaming cup of hot chocolate for him. \"I hope you like the smaller marshmallows; I couldn't find any of the big ones at the grocery store. I could hardly find anything; everyone was probably preparing for the winter storm.\"\n\nRyan took the cup and gave her a kiss and a thank-you. She cinched up her teal and silver robe and sat down on the couch next to him.\n\n\"Merry Christmas, Jessica,\" he whispered, rubbing her feet as she propped herself back and rested her legs on top of his.\n\n\"Merry Christmas, baby,\" she told him as she snuggled in.\n\nRyan snickered quietly out of the blue.",
        "Amused, Jessica asked him, \"What are you giggling about?\"\n\nRyan couldn't help laughing, \"I was just thinking something you said recently. You're like the complete opposite of Forrest Gump. You're a smart woman, but you don't know what love is.\"\n\nJessica rolled her eyes. \"Ok, funny man, keep laughing.\"\n\nFor good measure, he added, \"Now that I think about it, you're not really good at football or ping pong, either.\"\n\nJessica raised her eyebrow at him, \"This coming from a guy who came up with a master plan and called it an \"Operation\"? It figures you'd name it after a video game.\"\n\nShe snickered, \"You're such a male.\"\n\nRyan smirked while looking at her inquisitively, \"How did you know Final Fantasy was a video game?\"\n\nLaughing and shaking her head, Jessica told him, \"Ok, so you caught me. Maybe some of your nerdiness has rubbed off on me. I remember vividly playing the first Final Fantasy back when it first came out. Final Fantasy three or four, I think?\"\n\n\"What were you, like two when it came out? I didn't know you played video games.\"\n\nHer eyes opened wide, \"Hey! I'm not that much younger than you. And it was my older brother's. He loved that game. I mostly just played it to bother him. He would get so mad.\"\n\n\"It sounds like you were a little terror.\"\n\nShe shook her head, \"Not hardly; it was the other way around. He was merciless to me. Did you know that once, he tied my hands up, tied the rope off to his motorcycle, and tried to drag me along behind him?\"\n\nRyan bit his lip, trying not to laugh, \"That's awful!\"\n\nNarrowing her eyes at him, she said, \"Yea, I can tell it's tearing you up inside, you jerk.\"\n\n\"How old were you when he did that?\"\n\n\"Fourteen.\"<br> <br> Ryan busted up laughing, \"Fourteen? I thought you were going to say five or six. How did he even pull that off?\"\n\nShe crossed her arms, trying not to spill her own hot chocolate, while pouting, \"He was always doing stuff like that to me.\"\n\nHe slid closer to her, resting his hand carefully on the inside of her thigh, \"Well, presents will make you feel better. Are you ready to open yours?\"\n\nJessica smiled. He was just like a big kid. It was actually breathtaking to see this side of him after the near-disastrous event that happened only a few weeks earlier. His smile seemed to light up the room day after day; he was slowly starting to embrace life again. Most of all, his love for life was infectious and she always found herself drawn to him like a moth around a bonfire.\n\nIt wasn't just the way that he treated her, but it was the way he treated everyone, even those who didn't deserve it. Only a few days ago, she had just found a shirt that really looked good on him and she wanted to purchase it. The line was slow, the store was crowded, the people were pushy, and most of all, the checkout girl was a snot. After she made a snide comment about Ryan to his face, Jessica was ready to tear her head off. Ryan calmly took Jessica by the arm and kissed her cheek, breaking down her defenses. When she looked at Ryan, he simply smiled at her and whispered that it wasn't a big deal. After they bought his shirt, Ryan told the cashier thank you, took Jessica by the hand and tranquilly walked out of the store.\n\nAt first, she thought Ryan was being a pushover. Eventually she realized he simply had a peaceful nature and only wanted to make people happy. He would avoid a confrontation if he could; not because he was weak, but because he was strong enough to know it was a waste of time. Once they were out of the store, he told her that most people who walk through life angry and irritable are hurting from something, and there's no point in making them feel worse.\n\nShe loved that about him.\n\n\"Open mine first,\" she said, grabbing his present from underneath the tree and handing it to him.\n\nCarefully, Ryan tore off the sunny beach wrapping paper and opened it. His eyes misted as he saw a small wooden photo album with a picture of him, Amanda, and Adam on the front, titled \"Ryan's Memories\". A single pewter cross sat underneath the title and above the picture.\n\nJessica sat on the floor with her legs tucked underneath, carefully watching him with darting eyes while nervously wondering if he would like it or if her gift would set him back. She couldn't tell which, but it had a huge emotional impact on him. Opening the album, the very first picture was a worn down photograph of Amanda and Adam, the same one he held in his hands on the beaches of Hawaii. He smiled and gave her a inquisitive look, as if to ask where she got the picture from. \"I knew where you kept it; it was getting ratty, so I thought we'd give that picture a new home.\"\n\nSlowly, he turned page after page, looking at each photo and reading the hand-written comments accompanying each one. Unable to remain quiet, she had to break the silence. \"It's not just for the past, but the present and future. I made sure there were many blank pages in the back that w-we... I mean you, can fill out. This book is all about you, Ryan.\"\n\nHe turned to her with tears streaming down his face. Without a word, he dragged her closer to him and tenderly kissed her. Setting down the book, he took her into his arms and squeezed her tightly.\n\nShe sniffed and asked, \"I take it you like it, then?\"\n\nRyan chuckled.\n\nJessica told him, \"Well, I wasn't sure how to top The Avengers #1. I guess I did ok, though, if I left my tiger speechless.\" She leaned in to kiss him on the lips.\n\nShe wondered if Ryan would put at least one picture of them in his memory book. After all, she was a small part of his life, too. Even if he didn't, the feeling of knowing she had given him something he had liked so much was exhilarating. Much more than if she had bought something ten times as expensive for herself. Gently reaching up, she stroked his face.\n\nRyan touched her hand, \"You have no idea, baby. Thank you.\n\n\"Well, I'm hoping I can top both the comic book and the photo album, but you've set the bar pretty high.\" He grabbed the large box wrapped in shiny green paper and a red bow with both hands and set it on her lap.\n\n\"I'm sure I'll love it, no matter what it is,\" she told him reassuringly.\n\nHe shrugged, but the smile he gave her was quite devious. Ryan wasn't good at bluffing; he had the look of a man holding a straight flush. Ryan winked, \"Here you go. Mine's bigger than yours.\"\n\n\"It's not about the size, you perv,\" she snickered, tearing into the wrapping paper. \"At least in this case.\" She looked puzzled after she opened the large box, finding nothing inside except a tiny, palm-sized box wrapped in red paper with a green bow. Carefully she removed the bow and unwrapped the paper, revealing a black velvet box.\n\nHer mouth opened as she simply stared at it, trying to mentally process the gift.\n\nRyan scooted closer. He placed one hand underneath hers while his other hand opened the box. Already on his knees, he looked Jessica in the eyes and pulled the diamond ring out of the box.\n\nShe placed her hand on her chest, looking at Ryan, then back to the ring, then at Ryan again.\n\nRyan took a moment to think and carefully choose his words. He was worried it was too early, but he knew what he wanted, and finally, he knew Amanda would understand. \"Jessica, before you say anything, I...,\"\n\nJessica pounced on him and he was on his back before he knew it.\n\n\"Yes, yes, yes!\"\n\nStraddling her lover and holding his face in her hands, she kissed him over and over and over again, saturating him with her tears.\n\nRyan laughed and held her as tightly as he ever had. He quietly asked her a belated \"Will you marry me?\" but her string of yes's was already flowing out. Throughout all of her overwhelming kisses, he skillfully managed to slide the ring on her finger.\n\nThey held each other for hours during that Christmas morning. Except to make dinner -- although even then he was with her in the kitchen the entire time, offering his assistance as she prepared their ham dinner -- she never left his side the entire day. Ryan wouldn't have let her even if she tried. The snow kept falling slowly and the music still played while the two lovers consummated their love and commitment to each other by the glowing Christmas tree, not thinking for a second about tomorrow, nor the future. There would be time for that later.\n\n<p align=\"center\">XV</p>\n\nShe left him speechless as he stood tall in his tux that spring day on the sands of Maui. He adored how Jessica gracefully flowed down the sandy isle while the soft wind gently blew against her white wedding dress.\n\nShe looked gorgeous. Ryan felt like the luckiest man in the world. The sunbeams gently fell down upon her like a spotlight, highlighting her as if she was the most important thing in the world at that moment in time. The beautiful white flower on the left side of her hair completed the vision of her beauty. The only thing that could possibly make her look any better, Ryan thought, was the golden band itself around her left ring finger.\n\nJessica loved the way he looked at her; it seemed that the desire in his eyes became a little stronger with each step she took. She hoped that he had noticed the location of the white flower in her golden mane; as long as it took her to put on her wedding dress and makeup, it took just as long to get the flower just right.\n\nThey said their vows, dedicating their lives and pledging their faithfulness to each other. For better or worse, for richer or poorer, and in sickness and in health, Ryan and Jessica became one, by the grace of God.\n\nEven though she would never work for her again, Jessica thought Madeline was still a good friend, even if she still had serious reservations about her business; Madeline stood by her side as the maid of honor. Jeff, Ryan's firefighting buddy, was the best man. It was fitting since Jeff had been with Ryan from the beginning dating back to when they joined the fire department at the same time, paired up together as training partners.\n\nThere were many others in the crowd, mostly from either Jessica's family or from the fire department. Everyone erupted with cheers and applause as the groom kissed the bride. The passion he kissed her with was as if he had never kissed her before.\n\nWhile everyone flew back to the states the day after the wedding, Ryan and Jessica had only just begun their journey together. They stayed in Hawaii for their two-week long honeymoon. Ryan was a little uncomfortable that Jessica had to pay for almost all of it, but she promised him that once he found a buyer for the house and became an active fireman with steady pay, he could save up and take her back to Hawaii for a third time. He gladly accepted that promise.\n\nShe knew he would keep that promise; he always kept his promises. It was just like the promise he made on the previous trip in Hawaii; while they previously swam with the sea turtles in the blue waters of the Northern Bay, this time Ryan made sure Jessica would be able to spend an entire day swimming with the dolphins on their honeymoon. And, like last time, they were able to find a spot in the ocean away from everyone else, giving them an opportunity to express their true love for each other.\n\nExactly nine months later, Jessica delivered a healthy baby boy. They already had a name picked out; several months before, when she the ultrasound told them that their baby would be a boy, they decided to name him Luke. Luke was Adams middle name.\n\nA few years later Jessica gave birth to a little girl. They were undecided on a girl's name throughout the entire pregnancy. It wasn't until the baby came out and Jessica held her in her arms that she knew what they would name the baby. When Jessica told Ryan what she wanted to name the baby, he couldn't have agreed more. She would be Faith.\n\nJessica thought that Faith was the most beautiful and appropriate name for their baby; Ryan almost slipped away from her, but because of his faith, he didn't give up. Because of his faith in God, in Amanda, in Jessica..., and even in himself, he decided to live on. It was a name of hope and promise.\n\nAfter Jessica and Faith Joy Patton made it home from the hospital, Ryan grabbed the family photo album. It was finally almost full, but there was one empty page left. Grabbing the photo he recently took of Jessica holding baby Faith, while Luke stood next to the guard rail of the hospital bed his mother laid in, Ryan placed it carefully on the last page. Ryan cautiously set the photo album entitled \"Ryan's Memories\" -- which had really become the family's memories -- on his nightstand by the bed. Quietly, he opened the album to the first page and stared at the first picture, remembering memories from a lifetime ago; it was a picture of a young blond-haired lady that looked remarkably like Jessica who wore a gorgeous beaming smile, sitting in a chair and holding a boy no older than two years of age in her lap. \"Thank you again for understanding, Amanda and Adam. I love you both.\"\n\nRyan lightly ran his fingers over the pewter cross on the photo album. Looking upward, he smiled and mouthed a quiet, \"And thank you, too.\" By grace, he had somehow managed to find peace.\n\nFrom the living room, Ryan heard Jessica yell down the hall, \"Tiger, do you mind holding Faith? I think she's ready for her daddy.\"\n\nClosing the album, he smiled.\n\n\"Coming, baby.\"\n\nFin\n\nI truly hope you enjoyed the story; please feel free to let me know what you think.\n\nThank you again for taking the time to read my first complete story, especially those who stuck with me after the fourth chapter! If I had you worried at that point, I'll take that as a compliment. I hope you enjoyed reading as much as I enjoyed writing.\n\nI'm already working on my next series, although it will take me time to submit. But while there is a new cast, it just might feature some returning characters you are already familiar with..."
    ],
    "authorname": "Spartan22",
    "tags": [
        "ryan",
        "jessica",
        "marriage"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/operation-final-fantasy-ch-06"
}