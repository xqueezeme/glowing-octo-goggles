{
    "title": "Reunited with Panties",
    "pages": [
        "I remember the first time I ever smelled a pair of dirty panties. I was young and new to my sexual urges. And to this day, I don't know why I did it, only that I did, and it was wonderful. I was at a friends house, a friend with a sister\u2014an attractive sister. She was older and more developed than us. As a soccer player, she had the perfect legs and ass to boot. It was not only me that would often fantasize about her...but I definitely did, and so that day when we were passing through the laundry room, when her shear orange thong was sitting on top of the hamper, my heart Jumped. \n\nAgain, I don't know why, I guess just innately knowing that this pair of underwear had been pressed against her most private area, and nestled against her ass, was enough to make me want it. Whatever the case, I had to have it. I took it, quickly shoving it in my pocket. I was horny just feeling the fabric in my pocket, knowing I had such an intimate article of her's. \n\nWhen I was finally alone, I brought it out and examined it. I was intrigued by the thin white line of crust that was on the crotch. I knew that girls got wet down there, and I knew they had discharge, but I guess it never occurred to me that this fluid, this cum would get onto their panties, all of their panties. It was so dirty, in my mind. I almost instinctually brought the crotch to my nose, and took a deep sniff. Ecstasy. The smell was sexual. Purely sexual. Carnal and lusty. It made me cum\u2014and I was hooked.\n\nFrom that day forward I would seek out panties whenever and wherever I could. I was young, reckless, and thought I was invincible. I would take the panties of my friends and my friends' sisters, my crushes, and my lovers. I would keep them. It was the peak of my fetish, and I had accrued quite a collection. It was only as I grew older that I truly realized and understood that I was stealing, and stealing something very intimate and private. I don't do that anymore. \n\nAlso, as I grew older I began having sex more regularly; my desires expanded beyond purely panties, and into female arousal in general. Still, my fetish remained, even if in a less severe state. Typically, I will satisfy my desires with a consenting partner who is willing to go along with my desires. Unfortunately, I've been flying solo for a while, at least on the fetish front. I have a partner, a 'friend with benefits,' so to speak, and the sex is good, but it's pretty vanilla right now, and she definitely doesn't know about my interest in panties. \n\nLuckily I have a fallback for times like these. I have found a community for panty lovers, and use it to find ladies who are interested in sharing (usually for money) their worn panties with those who have the unique taste. It isn't ideal by any means, having a partner who shares, or at least indulges my interest is preferable, but this does have its perks. For one thing, it's more or less on demand, it's consensual, and there's something to be said for panties that are still wet when you get them. Still...sometimes I miss the days when the panties I sniffed belonged to those girls who I longed after.\n\nI had heard stories on this community about people finding partners who share the fetish, and went on to have wonderful, pantie-filled relationships. I hadn't been so lucky. Most of those I met were only one time sellers, and there was no chemistry\u2014at least until I met 'GG,' as she went by online. With one meeting, everything changed.\n\nIt was just another ad, and I was just responding like I normally do, just looking for some fetish fun. \"23F - First Time Seller. Nervous and Excited ;),\" read the title. Inside were a few physical details: college, brunette, 5'4\", fit...it was a pretty standard ad, but she sounded like my type, and she was my age. I always prefer people who are around my age, and sometimes they're hard to find. So I sent her a message asking what kind of panties she was offering, what she wanted in return, and if I could get a photo or description. She was quick to reply, and very friendly, if a bit hesitant. \n\n\"Hey there :) This is my first time doing this, but I think it sounds like a lot of fun! Right now I'm wearing a blue and white striped thong. I was thinking like $25 for the pair?\" \n\n\"That sounds good to me! Would you take them off in person?\"\n\n\"Sure :). Maybe I can do a little show too!\" \n\nWe settled the details of a time and place where we could meet. It was the parking lot behind a strip mall that was not too far from where I lived. The lot is always empty, I guess the developers had planned on their establishment being much much busier...whatever the case, it offered a perfect location for such discreet meetings. I couldn't wait.\n\nI was already getting turned on, thinking about smelling the wonderful scent of a sexy woman, straight from a pair of her freshly removed panties. It was always exciting, seeing the panties for the first time, as they are pulled slowly down from being nestled tightly against her wet pussy, to being against my face, still warm, and still wet. I was getting hard in the car ride to meet 'GG,' and the short drive seemed to take forever. But at last, I arrived, and parked towards the back in a completely vacant parking lot...and then I waited.\n\nThe waiting is always the worst. I always get myself all worked up, filling my mind with fantasies and anticipation, but not being sure if the meeting would actually occur, or if she got cold feet and decided not to show. Luckily, with 'GG' I did not have to wait long. Shortly after I arrived, a car pulled up a spot away from mine, with what seemed to me, from my glare-interrupted view to be a very attractive brunette behind the wheel. I was shaking with anticipation, waiting for the sweet exchange that was about to take place. She sat in her car for a moment, and glanced over nervously, before opening the door and slowly getting out.\n\nAs she did, my heart skipped a beat, and I was flooded with a sense of panic, rather than arousal. Yes, what was walking towards me was beautiful\u2014five feet and four inches of curved feminine form, exhibited exquisitely by the striped spandex skirt that clung to her curves, and a shirt that was soft and comfortable, but tight in all the right places. Yes she was beautiful, but with the glare of her car window gone, I was confronted not with a sexy stranger, but a friend\u2014not even a friend, a past lover. \n\nIt had been years, many years since I had last seen her. We were in middle school when we were together. She was beautiful back then, too. Like me, she seemed to develop at an earlier age than most of her peers, and when the other girls were just beginning to find the need for bras, Eleanor had two rounded globes, hips, and an ass that to this day makes me go \"damn\" whenever I think of it. That's not to say she was over-developed. She kept great proportions and her body remained tight, rather than developing into an overly curvy mess.\n\nSince we were so young at the time, we didn't have much of a sexual relationship when we were together. Not that I didn't want one. As a teenage boy, about all I could think about was sex, and I wanted it badly. Thinking back on it, I think she wanted it just as bad. She was always sexual, it was kind of what she was known for back then. Her openness about her body and sexuality made her popular\u2014she broke the ice on everything that everybody wanted to talk about but was too shy to do so. Nevertheless, at our age, all we did was mostly experimentation. And it was wonderful...But I couldn't get caught up reminiscing, I had a crisis to deal with on hand. \n\nMy mind was racing as she walked towards my car and the inevitable moment when she would recognized me. What do I do? I could not let Eleanor know that I was soliciting for worn panties on the internet..Could I? I mean, even though we have been out of touch for so long, we still have a lot of mutual friends, and we're Facebook friends anyway. \n\nBut how could I avoid it? It's too late to drive away. Hiding wouldn't work...I could make up an excuse...But she wouldn't believe it...And then it was too late. Click. The door was opened. I looked up in my shame with a shattered and helpless expression to a smiling Eleanor who looked on the brink of hysterical laughter.\n\n\"Andrew!?\" She let out a laugh. \"What are you doing here?!\" \n\nShe was laughing, but it wasn't an accusatory laughter. It was more of a mutual laughter that broke the tension of a situation that is rather uncomfortable no matter what the circumstances. Still, how was I to react?\n\n\"What are you doing here?\" I retorted, trying to ad a smile to my face.\n\n\"Uhh...mmm well, I was supposed to meet someone...\" She said slowly.\n\n\"Uh...Me too...I think I'm meeting you...'GG?'\"\n\n\"Oh. Are you?\" She said, with a hint of knowing curiosity in her voice, \"Can I sit down?\" \n\n\"Sure.\"\n\nWe sat for a moment in silence.\n\n\"I feel like it's been forever since I've seen you...Since we were, you know...haha still, this is the last place I would have expected to bump into you.\" I chuckled along uncomfortably, but she seemed not to mind, so I relaxed a bit. \"Well, actually, not the last place I guess. I mean we were always kind of out there.\" \n\n\"Haha, yeah we were,\" she smiled\u2014and it felt like a real smile, a warm smile, like the kind you have when running into an old friend. But then there was more silence...\n\n\"Sooo you have a thing for panties, huh?\" She asked, with another grin spreading across her face.\n\n\"Ummm yeah, I do, kind of.\" I said..She knows anyway, so there's no point in denying it.\n\n\"Really? Did you always? I mean, did you when we were a thing?\"\n\n\"No, not always, it kind of just happened once, a while before we were a thing. I was an impressionable teenage boy, ya know? haha.\"\n\n\"Hmm. I wish I had known,\" she said with a look of deep thought on her face. \n\nIt scared me at first. Had I made her rethink the entire history of her sexual adolescence? Did she think her first explorations were a mistake with a disgusting perv?\n\n\"I'm sorry...\" It was all I could muster to say in my fright.\n\n\"Oh! No! It just..could have been fun. That's all.\"\n\nSuddenly, I wished she had known too. \n\n\"But why are you here? I mean, you never had a hard time finding a girlfriend...\"\n\n\"Yeah...but most people aren't as open about sexuality as me...and you I suppose. And sometimes I want to have some fun, and this is the only, er, easiest way I can.\"\n\n\"Yeah, I get that. I'm kind of here for the same thing I guess.\"\n\n\"How do you mean? I would have thought you'd just want some extra cash.\"\n\n\"No, not really...My boyfriend, Zach, he just, like he just wants to have sex and be done with it. And it's fine most of the time, I mean it's actually great most of the time. He's not really into anything beyond like getting it in, but I can usually...you know...get off,\" she sounded a bit shy towards the end of this sentence, as if she realized she was opening up about the details of her sex life with someone she hadn't spoken to in close to a decade, \"but it's just, like that's it. Sometimes I just really want to enjoy my sexuality, just entirely embrace it. I want someone who enjoys my sexuality too, not just someone who has sex. Does that make sense?...I'm sorry, I know you did not need to hear that. And this is crazy. I'm sorry.\"\n\n\"No! Please! I feel the exact same way! the exact same way. I'm sorry if I'm making you upset. But Please, I am actually really enjoying talking with you. It's kind of refreshing to just be so honest about these things. I've missed it.\"\n\n\"Yeah...me too.\" She smiled.\n\nSome more time passed, and there was more chat and silences. Overall it was a pleasant talk, a great talk actually, but I didn't want to prolong the situation if Eleanor felt awkward.\n\nI figured I'd let her know, so I told her, \"hey, look, if you want to go, please feel free, but I really enjoyed talking with you, and I'd be glad to again if you ever need someone.\"\n\n\"Yeah I think I would like that!...But you know...I could still give you my panties...I mean if you want them.\"\n\n\"Oh. Um. Really?\" I asked. My brain was jumping with joy, and screaming \"yes, yes, yes!\" but I tried to sound aloof.\n\nShe elaborated, \"yeah. If I'm going to be honest, like I already have been, I was really kind of looking forward to this, if you know what I mean, and all this talking about sex with you hasn't exactly helped...Besides, if anything it's better now that I know you're not some creepy rando.\"\n\n\"Hmm.\" I smiled, not sure how to proceed.\n\n\"I mean, since you're into panties and all, I think this is gonna be a pretty good pair. I can just give them to you, too. You don't need to pay me or anything.\"\n\n\"Are you sure?\" I asked.\n\n\"Yeah.\"\n\n\"Okay. Yeah, I'd be lying if I said I didn't want them.\"\n\nMy heart was racing, and I could tell hers was too, as we sat there, getting ready to resume our adolescent experimentation in my car. Eleanor who had been sitting with her legs closed together slowly began to spread them, nervously revealing her soft legs, the gap in between them, and then a soft cotton strip of navy and white striped fabric that covered her most private area. \n\nI had been hardening since she asked if I wanted them, but this slow revealing of her beautiful body and panties made me an instant rock, as I glanced down at her thong-clad pussy for the first time. She was wearing a Victoria's Secret thong, which had thin white and navy stripes running horizontally across it. There was a navy lace trim running along the waist, but the rest was soft cotton, my favorite. \n\nHer legs were spread as wide as her tight skirt would allow, and enough for me to see the fabric taut against her pussy, her lips leaving the slightest of impressions in the shape of the fabric, before the thong ran down and between her ass cheeks, which were just as beautiful as I remembered them. This whole scene was bringing back so many memories of her soft panties back in the past, and the softness of her lips underneath them, I had no doubt she was remembering the same.\n\n\"Wow.\" Was all I could muster as I glanced down, and back up at Eleanor. \n\nShe just glanced at me, up and down, noticing the bulge in my pants, with a look of quiet anticipation in her eyes, before slowly reaching a hand between her thighs. She lightly pressed the fabric between her lips, as she ran her hand up and down the length of her pussy, teasing herself. \n\n\"I'm really wet.\" She said. \n\nI gulped as I watched her, with her hand resting on her crotch. I wanted all of this so badly. It was a dream come true, and it only got better.\n\n\"So I know that we had just planned on me taking them off and giving them to you...but I think...I mean...Do...do you want to take them off?\" She said, hesitantly.\n\n\"Sure,\" I said, and we both smiled. \n\nWe sat for a moment, her hand lightly caressing herself, while she looked at me. We stared until we both couldn't take it anymore. I led her to the back seat, where she laid against the door with her legs still spread, and with me between them. Again, she hiked up her skirt and spread her legs. \n\nNow, with a clearer view of the crotch of her panties, I could see a thin dark spot on the material where her wetness had soaked through. She really was wet. By now I was nervous, even more nervous than before. I felt like I did back in the first days of my sexual explorations. I was basking the the newness of the experience, and was hard as a rock. \n\n\"take them off slowly\" She said, looking down at me between her legs. \n\nThe manner in which she spoke made clear how much she wanted this, and my expression shared how much I did. I looked up at her as I placed my hands on her hips, loosely playing with the waist of her lingerie. At my touch, Eleanor bucked, moving her hips ever so slightly, bringing her mound closer to me, as if her body was saying \"more.\"\n\n\"How slowly?\" I asked, in a humorous tease, but with a genuine question backing. As far as we had discussed, this was still only about the panties, and I did't want to push that. Still, I thumbed the waistband with my palms on her hips as I asked, and she sighed in approval. \n\n\"Just like that,\" she whispered through bated breath, as she stared down at me. \n\n\"Okay,\" I said, \"I'll take them off slowly.\" And with that, as long as \"take them off slowly,\" meant the prolonged teasing I thought it meant, I decided to take my time and let us enjoy each other's touch for a while.\n\nI hooked my thumbs under the elastic of her thong and held her as I kneeled down between her legs, with my face inches away from her pussy. I was close enough to feel her warmth, and close enough for her to feel my breath. She let out a shaky sigh again, shuttering. I took the time to examine the details of Eleanor's body\u2014from the soft curves of her legs flowing into her hips, and the smooth pale skin of her inner thighs that led down to her groin and the slight puffy edges of her most private area, to her ass below that and the smooth crevasse that split from her pussy into two magnificent round cheeks.\n\nI examined her mound, that soft protrusion that raised from her belly at her pubis. It strained lightly against the fabric of her panties. I leaned in to tease her, and myself, some more. Slowly, I brushed my nose ever so lightly against her slit as I inhaled deeply and smelled for the first time the pure sexual aroma of Eleanor's pussy. I was in heaven. She was sweet and musky and aroused, and it took all of my effort not to just dive in. Eleanor gasped, and bucked again, aching to have that pressure on her clit. \n\n\"Do that again!\" She said, \"Smell me again. That was really hot, Andrew.\"\n\nOf course I was happy to oblige. Once again, I dipped my face down and brushed my nose down the length of her slit, this time with a bit more pressure. And once again, I inhaled deeply while doing so, intaking even more of her feminine scent. I looked up at her and told her how amazing she smelled. It was great, and not uncomfortable in the slightest. Where most girls are uncomfortable with the fact that vaginas have a scent, Eleanor was comfortable\u2014curious even. Enjoyment is what comes when one accepts their sexuality, and explores that which they find pleasurable, in a manner that is uninhibited by cultural stigma. \n\nI freely explored Eleanor's scent, without fear of reprimanding, and she responded with a desire for more. Again, I brought my nose to her pussy, this time fully pressing in so my nose was creasing the panties between her lips. I inhaled again. In doing so I ground my nose against her clit, and she responded in kind, grinding her clit into me. A soft moan escaped her lips.\n\nI could feel her wetness on my nose, and under her panties, as the fabric slid easily over her pussy. I buried my face in her scent. It was overwhelming. Finally I pulled away, to the dismay of Eleanor who seemed to thoroughly be enjoying the experience. But she was not to worry, it would only get better from there. \n\nI brought my thumbs from her hips to the front of her panties and slowly began inching the material down, revealing her pubis bit by bit. She was bald so far, freshly shaven only a day or so ago. Small dark stubble had only barely began to grow back. As I moved the material down, I rubbed her soft skin with my thumbs, teasing her even more. The shape of her bare mound began to emerge as more and more of her light post shave stubble was revealed.\n\nI worked my way slowly down, stopping periodically just to prolong the experience, until at last, the top of her slit appeared below the fabric. All the while, Eleanor was looking down at me with an expression of ecstatic anticipation.\n\nI paused for a moment, looking at just the top of her pussy, admiring those two perfect, soft and puffy lips before finally pulling the material of the panties away from her pussy. As I did so, the true extent of her arousal was made clear. A clear, thick, string of cum clung the the crotch of her panties and connected to her pussy as the fabric was slowly pulled away. ",
        "The sight was magnificent. I was looking straight down at Eleanor's perfect pussy, who's lips were barely parted and glistened with cum, to reveal the silky pink interior, along with the gusset of her thong which was coated with a thick film of her slimy juice. The two remained connected by that thread of grool. \n\nHer aroma emanated from both her pussy and her soaked panties. I sat with my face hovering inches above her pussy, and inhaled the scent and the sight for a few moments before proceeding. I started moving the fabric again, slowly pulling the panties down her legs. The thread of cum that joined them to her pussy stretched and thinned, but remained in tact for inches more, until halfway down her thigh it finally snapped and clung the the side of her leg. \n\nAs I slid the panties down the length of Eleanor's body, she lifted her legs, one by one, so I could slide the panties off, and feel the soft skin of her legs while I did so. I alternated my gaze from the panties, to her legs, down to her pussy, which still glistened with cum, up to her face, which was still anxious for more. \n\nFinally, I held Eleanor's panties, warm and soaked. The gusset kept the rough shape of her pussy and I could see in the crotch the puddle of cum her pussy had smeared all over them. I grabbed the waist to hold them in front of me to examine them up close. \n\n\"Smell them,\" she said, looking down at me and the panties I held. \n\nThis was insane, having a girl wanting me to sniff her panties in front of her. Eleanor seemed to be enjoying this as much as I was. I sat back and brought the panties to my nose, and held open the gusset, so that its treasures were laid open and facing me. It was amazing. A clear and creamy line laid on the cloth, imitating the shape of her slit. I touched it lightly, drawing a string of cum from the panties as I pulled away. A dribble of cum clung to my finger and I rubbed it between my thumb, feeling its slickness.\n\n\"This is so hot, Eleanor.\" She gave me a look of agreement, and anticipation.\n\nI brought the gusset to my face and pressed it to my nose. Inhale. Eleanor's musky fragrance was so strong, so fresh, on the panties. My cock, which had been begging to get out, twinged in my pants and ached, ready to burst. This was sexuality, the essence of sexuality\u2014the essence of Eleanor. I kept sniffing as much as I could, intaking all of the different notes that Eleanor had left. Instinctively, my free hand moved to the front of my pants and reached for my cock. Under my belt, I lightly stroked. It was instinctual, and I hadn't realized, really, that I was masturbating in front of Eleanor. \n\nI broke my concentration when I remembered there was a half naked Eleanor in front of me. I looked down at her to see her hand resting on her mound, with a finger parting her lips. She was touching herself. When I saw, she brought her finger up and smelled herself, before sucking the cum off of it. If I weren't already close to cumming, this nearly pushed me over the edge. \n\n\"I could cum Eleanor.\" \n\n\"No! You can't yet,\" she said, \"Andrew, I want you. This whole thing is so fucking sexy. I want all of you. Come lick me. Smell me. I want you so bad.\"\n\nAs hard as is was to hold back my ecstasy, the promise of more kept me from going over the edge. I looked down at Eleanor's glistening pussy, she really was very wet. With one last whiff, I put the panties aside and resumed my position between Eleanor's legs. \n\n\"Any limits?\" I asked, inches away from her pussy, breathing on her clit. \n\n\"No. none. Do what you want, and I will do what I want.\"\n\nWith that, I leaned in and pressed my nose between her slick lips. I inhaled as I teased her clit, taking in her scent straight from the source. Her heady musk enveloped my senses and I needed more. Eleanor moaned as my nose applied that needed pressure to her clit. \n\nI teased some more, licking the outside of her lips, threatening to lick her clit, but declining her pining for now. I kissed her skin, which was even softer on my lips than it appeared. She purred and bucked. The cum which had only been glistening along her slit was now dripping in a long strand to the seat below her where it had accumulated in a small puddle.\n\nI lost my resistance. I needed to taste her. I dove in. I plunged my tongue in-between her wanton lips and slid between her silky folds, up and down the length of her pussy, making sure to tease her clit as I passed over it. The salty-sweet tang of her juices coated my tongue, and I played with them in my mouth, feeling their slick texture and tasting their every note. \n\nI was licking Eleanor's pussy, I was tasting her cum. Eleanor let out an audible moan as this first tonguing penetrated her lips. I licked up and down the full length of her pussy on more time before focussing in on her clit. Eleanor had an innie pussy\u2014her inner lips and clit were small and hidden, but I could feel its arousal as it stood erect against my tongue. I ran my tongue over it slowly, rhythmically, repeatedly, paying close attention to the pressure and the taste, and Eleanor's reactions. I wanted to know her pussy with my mouth. I wanted to fill her with ecstasy. I wanted to swallow her cum.\n\nAs I lapped up her clit, I could feel her pussy smearing its juices on my face. My chin slid over her silky folds as she got wetter and wetter with every lick. Eleanor seemed on the verge of cumming. I broke my pattern and licked down the length of her pussy once more, running my tongue down the soft space between her inner and outer lips. \n\nThis varied sensation renewed Eleanor's moans and she pressed her pussy against me, saying \"fuck.\" Quickly, though I resumed licking her clit, quicker, and with more pressure. I was enjoying every drop of her cum that passed through my lips. Eleanor's bucking motions had become rhythmic and regular, and were accompanied by her legs, which began to tense and squeeze my head which rested between them.\n\nI kept licking, but looked up, from the soft slope of her pelvis immediately in front of me, up her smooth torso, and clothed breasts, to her face, with eyes closed in ecstasy. Everything about the scene in front of me was filled with pleasure and lust, and carnal indulgence. I embraced it and devoured Eleanor's pussy, with more vigor and more enthusiasm, if such a thing were possible. \n\nThis pushed her over the edge, and she came with a louder and more emphatic \"Fuck!\" \n\nI felt a renewed wetness emerge from her opening and coat my face as Eleanor's hips bucked and squeezed and her moans filled the silence. She began to come down from this first high, but I kept my face pressed against her, licking gently, keeping the pleasure from disappearing. I pulled away briefly, once her breathing had settled, bringing with me strands of cum. \n\nI wiped my face and licked the slick juice from my fingers, looking at Eleanor the whole time.\"That was amazing,\" she said, still sounding winded as she spoke. I shared the sentiment. I looked down at her sopping crotch. I had no doubt contributed plenty of saliva to the mess, but the vast puddles of filmy fluid can only be attributed to Eleanor. She must be ready for more. And I wanted to give her more. \n\nTo the delight of Eleanor, I descended once more in between her folds and resumed licking. This time I went straight for the source, planting my mouth on her opening and pushing my tongue into her. Her slime coated it and filled my mouth. Her hot hole enveloped my tongue and its silky walls massaged me.\n\nThis second time, Eleanor came almost instantly. The pressure of my nose against her clit, and the penetrating lapping of my tongue brought her to an immediate climax as I felt more of her cum fill my mouth. I couldn't get enough of her tangy juices and I enthusiastically accepted every drop her pussy could spare. I pushed my tongue in and out of her a few more times, feeling her soft embrace before retracting and licking her more lightly.\n\n\"No Limits?\" I asked once more, hovering between her legs. \n\nShe responded with a simple \"No.\" \n\nThat's all I needed. Eleanor's carnal scent and taste had driven me wild, and I wanted more. I hooked my arms under her legs, and lifted her mound so I was in a better position to lick. Once more, I teased up and down the length of her slit, moving downward slightly with each stroke before pushing my tongue down between her ass cheeks. \n\n\"Yes!\" Eleanor gasped as I found her tight rosebud with my tongue. \"Yes! Oh my god Andrew that feels so good!\" \n\nHer skin was soft, and her puckered hole tasted sweet and slightly salty, sweaty and carnal. I licked her ass like this more a minute or so, with my nose pressed into her pussy. Once again, I was experiencing the smell of her womanhood, but mixed with the wonderful taste and texture of her ass. She seemed close to cumming again, but I stopped. Keeping her on edge. I came up and met her gaze. \n\n\"Eleanor this is fucking amazing. You are so sexy. Everything about this is driving me crazy.\" \n\n\"I know. That feels so amazing. You have no idea. This is exactly what I've been missing.\" \n\nI Kissed her on the mouth and was infiltrated with a passionate tongue that massaged mine. \n\n\"I can taste me on you,\" she said, \"That's so hot.\"\n\nI pulled away and held her hips, guiding her as she flipped over to sit on her knees, presenting her ass to me. She really did have the greatest ass, and I had to sit admiring the two perfect globes for a moment before diving in once more. I got closer, and placed my face at her crotch, feeling the heat of her pussy once more. \n\nI licked up from her clit and all the way to her ass. I found her rosebud again and devoured it, lapping up her crack, and circling her little bud. I teased it, and prodded it. With some lubrication from my saliva, I pushed and the tip of my tongue passed the puckered ring and into her hot core.\n\nEleanor moaned at this, and asked for more. I prodded with my tongue, slowly pushing in and out of her sweet ass, each time going slightly deeper. As I did so, and she got closer to climax I could feel her muscles contracting as she clenched around my tongue. The sensation was phenomenal. I spread her cheeks as my face pressed as far as it could into her. \n\nShe came with my tongue in her ass, squeezing and clenching through the entire climax. She was shaking now, unable to support herself on her arms without trembling. I pulled away and allowed her to resume a normal sitting position. A moment passed while she recovered, but she recovered quick.\n\n\"I want to make you cum,\" she said with a look of carnal determination, \"I want to make you explode.\" \n\nShe took control, and soon enough I was the one against the door. My pants were down and Eleanor was between my legs. This time however, she started at my ass, smelling and licking, up from my crack and up my balls until she reached the shaft of my cock. I was hard, painfully hard, and the moment her tongue began its trek up the length of my I twinged and stood to attention, feeling the bursting pressure within me. \n\nAt the tip, she swirled her tongue around from the back to the front in one motion, bringing her lips around me\u2014and I was inside her. Her mouth was hot, and she slid over me with ease and enthusiasm, until I was down her throat and her lips were against my pelvis. I'm not normally huge on deepthroating, or blowjobs in general, I find that most girls hate or cannot do deepthroating, and even the best of blowjobs have a few scrapes with teeth that distract from the overall wonderful sensation, but Eleanor was entirely enthusiastic, so genuine in her performance, I forgot all of these hesitations. She truly enjoyed what she was doing, and as a result, I did. \n\nI knew I wouldn't last long. I had been aching to cum from the get go, and this magnificent blowjob was going to push me over the edge soon. I looked down between my legs at Eleanor, her face, filled with pleasure as she slid the length of my manhood in and out of her hot mouth. She was still naked from the waist down and her ass was in the air as she took me. \n\nThe sight was incredibly sexy. Each stroke, I could feel myself sliding down her throat, I could hear the gulping noise of her taking it, and I could see myself being covered in her saliva. I couldn't help but thrust as she took me, and she seemed to love it, following my rhythm, making me feel ecstasy. I had been on edge the whole time, and couldn't take it any more. Each stroke brought me closer, closer, closer. \n\nI was reaching the point of no return, and told her between heavy breaths, \"Eleanor, I'm gonna cum.\" \n\nShe pushed me deeper down her throat for several long intense strokes before taking my tip in her mouth. I exploded in the longest orgasm I have ever had, spewing load after load into Eleanor's mouth. And she swallowed every bit of it. After I had cum, she kept me in her mouth, milking every last drop from me. Finally, she rose up, smiling, to face me. \n\n\"You taste wonderful.\"\n\nDespite having just had the orgasm of my life, I was still hard. Eleanor sat facing me, giving me a perfect view of her pussy, which still glistened with strands of cum. \n\n\"I'm still horny. Elle, that was too good.\" \n\nShe gave me a kiss. Our mouths tasted like sex, and the mutual arousal that lingered led the way forward. I turned in the car to be sitting normally. Eleanor swung her leg over my lap so she was straddling me. Instinctively, I placed my hands on her ass to support her. She kissed me again. \n\n\"I want you,\" she said. \n\nLooking down at out laps, I saw her pussy\u2014wet, and open, soft and naked, and my cock, hard and pulsating, rising up to meet her. She lowered herself down as she took hold of my penis and guided me to her entrance. I felt my tip enveloped in warmth. I held her ass as she slid me inside her, slowly. I could feel her wetness on my cock as I slid easily into her wanton pussy. \n\nHer pussy was warm, and silky. It squeezed my cock despite its lubrication in a way that made me aware of every millimeter I had inside her. I was lucky to have just came, otherwise I would not have lasted beyond this initial penetration. She slid down until the entirety of my manhood was buried inside her, and then she rose again, slowly sliding up and down on my cock. This slow movement, it seems, was for us to experience every sensation of the sex we were having, but passion took over as Eleanor began to pump up and down quicker and with more momentum. \n\nI held onto her ass as she slammed into my pelvis time and time again, impaling herself on me, getting herself off. She rode me hard, but in a way that made me feel each thrust and each movement of her pussy. She massaged every inch of my cock over and over. I slid my right hand from her cheek to her crack where my middle finger found her butt hole. She gasped at the touch. \n\n\"Yes! Finger my ass. Put it in.\" \n\nI circled her puckered hole as she fucked me, with my palm on her cheek, teasing her. I needed some lubrication if I was going to finger her ass, so I brought my finger to my mouth, tasting her and coating my finger in saliva and then brought it back to her crack. I teased her briefly as I got her wet. Then, slowly, I pushed the tip into her tight hole. She moaned loudly at this insertion, and drove her pussy down onto me harder. Her face was reddening and her breathing was increasing. She was getting close. \n\nWith her ass yielding to my finger with each thrust, I slowly pushed further into her, and then out, and then in. She was so tight. Her ass clenched around my finger. Meanwhile, her pussy was wetter then ever as she pumped me in and out of her. Looking down where our pelvises met, I saw my glistening cock covered in cum that was pooling around the base, appearing ad disappearing into the soft pink folds of this beautiful girl's pussy. Eleanor was getting close, but she needed just a bit more stimulation. \n\nShe brought one of her hands down to her cunt and began rubbing her clit. Her ass was finally getting used to my finger, and I was able to push another in to join it, stretching her ass. Eleanor screamed in pleasure as she fucked me, I fingered her ass, and she rubbed her clit. She came wildly, slamming against me and lubing my cock even more. Both her ass and her pussy clenched around my fingers and cock, almost milking me to orgasm, but I held off while she came down. Her breathing slowed, but she kept pumping me slowly, keeping me on edge. My fingers had come to a stop and now rested in her ass, only moving very gently as she did. What happened next was very natural and happened without any words from either of us. \n\nHer thrusts slowed down gently, until I slipped out of her, and I slipped my fingers out of her ass. And she climbed down, bringing her mouth back to my cum covered cock. She wanted to taste herself on me. She put me in her mouth, and tongued my tip and my shaft, licking up all of her juice that she had spilled onto me. As she did this, I brought my hand, which had been in her ass, and sucked on my fingers. I was already on edge, and this new, massaging sensation pushed me over. \n\n\"I'm cumming!\" I grunted. \n\nQuickly, Eleanor removed me from her mouth and stroked my slick cock with her hands, pumping me as I spurted ropes of semen onto her stomach and pelvis. She stroked me until I could take no more and then let go of me to play with the cum I had just shot. She rubbed it around her stomach, feeling its texture, before bringing her hand up to smell it, and to suck it off of her fingers, enthusiastically. \n\nWe were both coming down, still horny, but caught in the moment of clarity between fits of passion. This brief reprieve brought us back, and made us remember that we were in a car, in public, during the day time. It's not like we really cared if we were seen, and we probably were by at least one person, but causing a scene is not something either of us had in mind. \n\nStill, it was hard to resume an ordinary demeanor when we were both sill so filled with lust. We sat there, bottomless, for a minute, lightly caressing each other, but aware of our surroundings and ready to become decent at a moment's notice. \n\n\"That was amazing,\" she said, in that low, winded, afterglow voice. \"I want more. I feel like I could cum a hundred more times. But I feel like I would pass out.\" \n\nWe laughed. My cock had softened after that last explosion, but was coming back to life. I too wanted more, but this stiffening was sore, and I needed a rest. \n\n\"That was amazing,\" I repeated. \n\nAfter a few more minutes, the moment was right, and we both collected ourselves and began to redress. I grabbed my pants, and Eleanor lowered her skirt. She straightened her shirt out and tucked it into her skirt, over the cum which had mostly dried on her stomach. \n\nShe giggled, \"I'm keeping it, for when I get home. I think it's hot.\" \n\nFair enough, I thought, I'm keeping her panties. Once dressed, we both got out of the car to say goodbye. \n\n\"Thanks, Andrew. That was wonderful...Talking to you, I mean. haha..no really though, that was perfect.\"\n\n\"Thank you! and uh...Thank you,\" I said holding up her panties. \n\n\"My number hasn't changed since middle school. Do you still have it?\" \n\n\"I believe so. Do you still have mine?\" I replied.\n\n\"I do.\" \n\n\"Good well keep in touch! I'd love to see you again.\" \n\n\"I will do!\"\n\nWe leaned in for a kiss, and her hand grabbed mine, bringing it up under her skirt to her hot pussy, and slid it between her wet lips, and she grabbed my instantly hard cock with her other hand. \n\n\"For the road,\" she grinned.\n\n\"I'm keeping this,\" I joked holding up my now cum-covered hand.\n\n\"Haha, okay. Well, I've gotta go masturbate, but I hope I'll see you soon.\"\n\n\"Me too,\" I chuckled and leaned in for one last kiss before we parted ways.\n\nAt home, I sat down with the panties and the memories from earlier and started to stroke myself. Just as I was getting started, I received a text from Eleanor. It was a picture. A pair of maroon panties had been pulled down from her pussy showing a soaked gusset. ",
        "\"Making another pair. Should be ready in a day or so. Let me know when you can meet ;). GG.\""
    ],
    "authorname": "Nomdeplumfutuo",
    "tags": [
        "panties",
        "wet",
        "cum",
        "pussy",
        "oral",
        "lick",
        "knickers",
        "panty",
        "smell",
        "public"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/reunited-with-panties"
}