{
    "title": "Hunting the Hunter Ch. 03",
    "pages": [
        "Hi there! I was hoping to get a teeny bit farther along in the plot before posting, but I thought, 'heck, I'll just post it when it's done.' Thanks for your patience and kind comments. \n\nlove and mush, enithermon.\n\n*****\n\nInanna held the wax bar over the single wavering candle flame and watched the thick red tip begin to warp. She caught the single drip in her hand, saving the smooth finish of the desk, and pressed the melting bar to her neatly folded letter. It had been a week since she had returned Feric to his people, and she'd heard little from him since except for brief greetings in passing. They'd thankfully heard little from the hunters as well. It was, however, only a matter of time. \n\nFrom what they'd told her, it wasn't the hunters who were the threat, and she agreed. They were just appendages. This would be like fighting a draugh. Why spend hours hacking at tentacles when one well placed hit in the jugular would accomplish the same in a much shorter time? She should know. She'd spent one very long afternoon tangled up with one, literally, just a month after her fiftieth. It had been a hell of a way to commemorate it. Inanna leaned back in her chair and chuckled. She couldn't understand the language it had hissed at her...but she got the gist of what he 'meant' to say, she was sure, just as he probably caught the meaning of everything she'd gurgled back. Gurgled, because they were underwater...and he was trying valiantly to choke her to death with one of his five remaining tentacles. Her lips twisted up in fond remembrance. \n\nShe was no church follower, indeed like most of her people, she felt the worship of the tribunal was a sacrilege, but that hadn't stopped her from attempting the pilgrimage, not least of all because someone suggested she couldn't do it. Of course a Morrowind Pilgrimage, is not a Cyrodilic one. \n\nHere they merely tramp around the idyllic country side and bless themselves at quaint little alters before moving on. Conversely, to fully complete the pilgrimage of the seven graces, one is required to wade through muck, fight draugh warlords, drown oneself, and then go traipsing into the Ghostgate to visit with corpus stalkers and ash zombies and the gods know what else. She'd even made the pilgrimage to Gnisis temple. There you fight a Dremora guard as he describes-- with all the growling, hissing, charm of a denizen of the darkest realms of Oblivion--all of the horrifying and downright kinky things he's going to do to your skull once he's severed it from the rest of you. Luckily she'd finished the fight before he could move on to other body parts, though not before she discovered that Dremora have absolutely no problem with necrophilia. Gross. No one needed those images in their head...attached or not.\n\nDrowning herself had been the biggest challenge. The will to live is a hard thing to fight. Then again the corpus stalkers were no picnic, those are almost as bad as zombies...almost... she shuddered slightly and replaced the quickly cooling sealing wax in its little shelf. \n\nShe loved this desk, it wasn't as nice as the one the vampires had gotten their clever undead hands on, but the wood was rich and dark and the faces of the many drawers carved out handsomely with fine little abstracts. She admired it a little, letting its beauty push out all the weird nasty thoughts that had somehow snuck into her head. She blew on the wax seal to cool it faster and waved the folded sheet in the air before tossing it in a drawer and standing to stretch. She'd been giving it some thought over the last week, while she'd been slipping supplies to Feric's people a little at a time, not wanting her actions to be obvious to anyone who was interested. Of course, who exactly might be interested was precisely what was first and foremost on her mind. \n\nWho, why, and where, and more or less in that order. The 'how' would be ascertained once she knew what she was dealing with. She'd asked, but no one had any answers as to why they were being hunted, only that they were. Whoever it was had others do their dirty work, and it was dangerous work, so they were probably wealthy. Feric had been personally ensuring that the fatality rate was incredibly high among those who took the job.\n\nShe shuddered again at the thought, though this time for an entirely different, and more pleasant, reason. She gritted her teeth and forced herself, only half successfully, back to the topic at hand. \n\nShe tapped the banister thoughtfully as she made her way upstairs. The expenditure on disposable mercenaries also indicated that this probably wasn't personal, unless the person was completely mad. That was possible, but her initial guess was that it was motivated by compensation of some sort. This was a dangerous and long term hunt, so the motivation must be a powerful one.\n\nAnd what was the most powerful motivator? Power, obviously. There's a reason all roads lead to the imperial city. \n\nThey'd been chased and hounded for over fifty years...that also indicated either more than one person, an organization of some kind perhaps, or a very wealthy, very dedicated Mer, because no human she knew could keep that up this long, not all on their lonesome. \n\nFeric had also informed her that the bodies always disappeared, and were never left behind. This told her that the bodies were important rather than just eliminating the people. They could, after all, take a token from the body, rather than drag the whole thing back to their employer if it was for the purpose of proof. Of course who would be interested in bodies...besides necromancers. \n\nOh hell, please don't be more of those, she groused. Thoughts of giant shape shifting zombie lions sprung unbidden to her mind and she got a rather nasty taste in her mouth. The memory of the dead imperial on the alter sprung up as well, his face morphing into another more familiar one...she forced the image away before it could fully form. She wasn't going there.\n\nShe grabbed an apple from the little nook of a kitchen and crossed into her room. She held the fruit in her teeth as she stripped, and threw herself down on the wide, soft, bed and chewed thoughtfully. Well, regardless of whether it was a rich Mer, or a society of some kind, she knew just the person for the job of getting the inside information for her once she'd tracked them down. She'd written three letters. One to Max, asking him to meet her at the Roxy in two weeks, one to her mother and father, because she was, if nothing else, a good daughter after all, and one addressed to a Tel on the far side of Morrowind. \n\nThe contents of the third read only this: Sister, I need you. Cheydinhal. Always, The Velothi.  \n\nThree threads, and tomorrow she'd send them shuttling across Tamriel. In the mean time she needed to rest and think. She had asked Feric to come along on the next hunt, or rather the next game of hide and seek with the hunters. Mirisa had been there, and balked slightly, but had the good sense to not complain out loud. \n\nShe'd been back and forth several times so far. Cyrus and Bellane, the mated couple were always pleasant, and although Mirisa was also generally polite, she watched her with all the good will of an assassin sizing up their mark. \n\nShe was also put off by the fact that, although he was friendly enough and appreciative of her help, Feric seemed to be keeping his distance. She guessed it was for form's sake in front of his tribe...pack...pride, whatever. Perhaps they had a taboo against messing about with outsiders. She'd have to ask, because seeing him so often and not getting to do anything about it was making her edgy.\n\nShe still hadn't taken her frustration out on anyone yet, as she was still trying to hold out for when she finally got that big cat alone, but more and more she was wondering when that was going to happen. She'd even had a few offers from a couple of rather well built fellow adventurers, but something in her told her to turn them down. She followed that voice, like she always did, but it left her pretty tightly wound. She almost started a fight with an Orc in Newlands lodge just two nights ago after he made inappropriate comments about her physiology. \n\nNormally such comments would pass without notice, or occasionally even encouraged, but she was looking for an excuse. Sooner or later she'd find one. \n\nThe memory gave her another chuckle. Dervera, a fellow Dunmer and the charming proprietor of Newlands lodge, and Borba a local outfitter had seen the look in her eye before the other Orcs had and had turned her around and marched her straight out the door, one at each arm. Borba warned her about messing with the Orum gang, and Dervera about the danger of catching the attention of the city guard, but she didn't care, she just wanted to sink her fist into someone's face. Eventually they'd convinced her to go for a run instead. It had taken the edge off but it wasn't the same. \n\nShe sighed. She was really starting to look forward to this hunt. But good lord...nearly a week, she didn't know if she could wait that long.\n\nShe wanted to get one of those hunters alive so she could get some answers. They wouldn't know much, but one had to start at the bottom and work their way up. She would also need to start collecting useful toys. She'd examined, or had appraised, a number of useful items taken from the vampires, and had begun stock piling numerous potions and scrolls which would come in handy. There were a few items she didn't have that she suspected by the end she'd need, but it was going to cost. She tossed the core of her apple in a waste basket by the dresser and closed her eyes. \n\nScrew it, she hadn't really wanted a horse anyway.\n\n**\n\n\"Tell me Shadow, can you use a bow?\"\n\nLucas started and whipped around from his post over the ruin's entrance. She'd come to recognize him even from a distance by his dark undercoat. Despite having a slimmer build in his humanoid form, his cat form was equal to Owyns in size, though perhaps not in muscular density. He growled half-heartedly and resumed his post, looking daggers at her. She only grinned back. She'd been playing this game with him every time she returned. The first time she had to dodge a startled attack, now she just got dirty looks. \n\n\"Well?\"\n\nHe huffed, and she watched fascinated as the crouching lion transformed into a naked young man in a matter of seconds. There was some sort of magic involved with the change, she could feel it if she touched it with her will, but it was subtle and deeply innate, as natural as the summoning of an ancestor guardian is to a Dunmer. You just want it enough, and it happens. She had a vague memory of being soothed to sleep as a very small child by a guardian she'd accidentally summoned when waking from a nightmare, Great Uncle Assurban, if memory served. She suspected this transformation was similar.\n\n\"Why would I use a bow?\"\n\n\"To thin and weaken your enemies from a distance before you meet them in battle.\" she intoned with a dramatic wave of her hand.\n\nShe sat down next to him at his post and looked out to watch the woods as well, her grin gone. He gave her a sidelong glance.\n\n\"Is it not more honorable to simply face them head on?\"\n\nHis voice indicated that it was neither a question nor a statement. Rather it sounded like an empty quote. She knew he still found her suspect, but he'd relaxed enough around her to carry on a conversation. She found she enjoyed them immensely in the brief moments she found to speak with him. He may not be as tactful as Aina, but he was capable of subtlety when he was calm.\n\n\"Oh, I don't think you think that.\"\n\nHe said nothing.\n\n\"I would like to teach you.\" She continued, still looking out over the stonework ledge, her hands folded placidly in her lap. \"I brought you one of my spares. I'll leave it inside. If you're interested meet me back up here after the hunt.\" She glanced over to him to find him frowning at her in confusion.\n\n\"Why?\"\n\n\"Oh, that is your favorite word, now isn't it?\" She gave him a small smile. \n\n\"Shall I play Nocturnal to your inquisitive Hermaeus Mora, and tell you that some mysteries run too deep?\" \n\nHis frown deepened.\n\n\"What is hermes mora?\"\n\nShe opened her mouth to correct his pronunciation and explain, then changed her mind and waved the question away. This was no time to start explaining the mysteries of the Daedric Princes, especially those of secrets and knowledge.\n\n\"That's too big a question, and Ambrose will want to hear the answer as well, so it will wait.\" He sighed.\n\n\"Dare I ask what he has to do with it?\" She chuckled.\n\n\"Oh I think that will become apparent on its own...eventually.\" She twisted her lips into a smirk. \"Alright, straight up, I think you'd be good at it, you have a natural predilection towards stealth, though you need to watch your back a little better,\" she paused to give him a teasing wink, \"and it can't hurt to learn.\"\n\nHe shook his head. \n\n\"I've learned to use the weapons I've been given.\"\n\n\"And well you should, and to their most effective at that. But there are many things to learn and many of them useful. Don't you want another tool to use in protecting what's yours?\"\n\nHe looked at her again. \n\n\"We do need everything we can get.\" He admitted, also giving her a stern look with his dark eyes. She had a feeling he was inferring that this was the reason for her continued existence, and chuckled again.\n\n\"Want and need are two different things my love.\" \n\nHe blinked once and looked back out towards the tree line, which was waving softly against the clear morning sky. The movement was hypnotic. She watched his expression turn distant. He let out a long sigh.\n\n\"Sometimes they're the same.\"\n\nHis melancholy subdued her. The day was going to be beautiful, and the warm golden sun played through the young spring leaves, sparkling gaily at the two dark figures crouching in the shadow of the bright stones. 'Tell me about it,' she thought morosely, and let out her own long sigh. \n\nShe turned back to her companion...but he'd already returned to his feline form and was slinking off towards the tree line. She pulled her braid over her shoulder and toyed idly with the tip, dragging it thoughtfully over her lips, contemplating where the line was between 'want' and 'need,' and when the hell she'd crossed it. More than once she'd almost taken someone for a tumble...in either senses of the word, but she knew it wasn't going to do her any good: as sure as she knew the sun rose in the day and the moons at night.\n\nSomewhere out among the softly waving trees a low and soft sound came to her, a low howling groan. Too low to be a wolf or troll, so her hunter's ears told her, and too high to be an ogre. She closed her eyes and in the mirror of her mind she constructed the shape of the chest that could make such a sound, the distance, the direction, and smiled. Minotaur...and she'd bet her bow on it. The sound came again. There was something mournful in it that sat out of sorts with the warm sun that still danced in red flecks through her eyelids. For a moment the red lights became the red blighted winds, her darkened lids, the bleak ash filled sky, and the sound that reached her ears was the distance moan of the silt striders as they swayed blindly on slender legs...\n\n\"You look deep in thought\"\n\nInanna almost bit her tongue in her effort not to start at the sound of the low voice behind her. Now she knew how Lucas felt. God damned sneaky bloody cat. She leaned back and tossed her braid over her shoulder, her gaze following. He looked great. He always looked great. And what was that sensation inside her...butterflies? What, was she twenty all over again? To the sixteen hells with THAT noise. Fetcher.\n\n\"Oh, not really. Just listening to you while you thought you were sneaking up on me.\" She lied through her broadly grinning teeth. She fluttered her lashes and bounced lightly to her feet, propping her fists on her hips. \"We ready?\" He gave her a mild smile and cocked a brow at her. \n\n\"Not unless you have some clever plan you want to voice first.\" She cocked a brow right back at him.\n\n\"No sir. Just leave me one alive.\"\n\n\"Why's that?\"\n\nShe turned her smile into a treacherous grin and wriggled her shoulders. \n\n\"In-for-ma-tion.\" He nodded, and gave his head a half-shake. It was his standard response to most of the things that came out of her mouth these days.\n\n\"I'll try to restrain myself.\" She chuckled and clapped him on the shoulder as she walked past him.\n\n\"Don't try too hard. You're more fun when you don't.\" She winked at him over her shoulder and hopped down over the ledge, landing next to the door below. She turned towards it as it opened, revealing Owyn and her favorite blond haired, blue eyed pain in the ass. \n\n\"Mirisa, Owyn.\" She nodded politely, and they inclined their heads politely back. Mirisa looked past her toward Feric.\n\n\"Are we ready then?\" \n\n\"As we'll ever be.\" He muttered dryly.\n\nInanna turned towards the sound of his voice, thinking of something smarmy and delightful to say. Except he had removed his clothes and she was treated to an unimpeded full and frontal view, and, consequently, her intentions were dashed suddenly and brutally against the rock hard sculpture of a man before her. All she could do was look busy putting on her gloves as she swallowed the shattered remains of her last coherent thought. She gave her glove an irritated tug. These were some hormones. How long was fertility supposed to last? \n\nMirisa, thankfully, came to her rescue.\n\n\"Are you sure you can keep up? I'd hate to have you fall behind.\" The challenge sang out to her inner bitch and repaired her mazed thoughts. She narrowed her eyes and curved her lips into the picture of sweetness. \n\n\"You're such a darling to be so concerned. Isn't she the sweetest thing? I mean really!\" she cooed turning to Owyn, who was also undressing, and though also a very, very fine specimen, didn't seem to have an effect on her. Huh...fickle hormones then? She shrugged mentally, he was too young for her anyway. He tossed his robe behind a broken column and glanced at Mirisa uncertainly. \n\n\"Like candy.\" Mirisa snapped irritably.\n\n\"Oooh, feisty.\" Inanna grinned gleefully as the woman morphed and stalked past her, growling low in her throat. Feric was now comparatively safe to look at, though giving her a look that she interpreted as a plea to behave, and she followed at a trot as the three big cats turned away and melted silently into the trees, heading in the direction Mirisa had spotted the hunters the day before. She drew her bow and relished the giddy shiver that traveled up and down her spine. \n\nLet the games begin.\n\nIt was easy enough for her to keep up, as accustomed as she was to running great distances when the need arose. The view was pleasant as well. It wasn't every day a girl got to watch such perfect predators in action and not be too busy fighting for her life to appreciate the spectacle. Inanna couldn't help but admire their powerful grace and the deadly silence of their movements. She'd be a liar if she said she wasn't particularly enraptured with the massive beast who led the group as he weaved his way through the dense woods. \n\nShe was therefore a mite disappointed when the three of them suddenly broke off, Feric heading to the left and the other two to the right. She veered slightly to the left, but kept a central position, slowing to weave more carefully between the trees and tossing out unobtrusively low-level detect life spells into the surrounding brush. It wouldn't do to run into something unprepared. She heard a snarl ahead and peered through the brush. The light indicated a clearing, and if they were smart, they'd have a bowman or two set up for shots into said clearing. \n\nCan someone say ambush? \n\nShe looked up, and kept moving to her left, skirting a good distance from the tree line. ",
        "Score another one for the clever dark elf. Pink glowy thing dead-ahead. \n\nShe cozied up to a tree trunk to get a closer look. A Bosmer from the look of it, apparently they were everywhere these days. If people weren't careful the obnoxious fetchers were going to take right over. \n\nThey made damn good bowman though, and who else would look so comfy teetering on a branch. She didn't have the best shot, but she readied her bow anyway as she slipped from her cover. The bowman was distracted and looked like he was lining up his own shot. She sidestepped at a rapid trot to get an opening and fired. He cried out and fell from his perch as she moved in quickly, overpowering him in a quick and one-sided wrestling match. She crouched at the foot of the tree, waiting to see if anyone would investigate the mer's cry, but they seemed occupied with other things. She decided to take the Bosmer's old position to see what was what. \n\nJust as she had suspected; the view was spectacular. The open field was practically an arena, shut in on all sides by heavy woods. Perfect for an ambush. Could she call it or what? One of the cats had gotten lured in. She didn't doubt for a second it was the young Owyn. What a sucker. He was circling a hunter who had her sword drawn. She looked like she knew what she was doing, and wasn't giving the cat many openings. \n\nInanna scanned the tree line for the glint of an arrow head, or a shifting in the trees that was neither leaves nor birds. She didn't spot another bow, but she did see something else, a prowling shadow that a first glance she thought might be one of her own party.\n\nNo. It was a hunter, definitely a hunter, but also a creature worthy of the 'sneaky kitty' title. The Khajiit vanished, only to reappear further along the clearing. He was slipping in to flank the lion. She approved of the maneuver. It took a cat to hunt a cat apparently. \n\nThe sly devil vanished again. It was too far to throw out a life detect without sucking herself dry for a respectable chunk of her day, but she had eyes in her head, and he would have to spring his trap sooner or later. \n\nShe readied her shot and sighted along the trajectory of the Khajiit's path. Her eyes ran over the smooth shaft. In and out he stalked, watching for his chance. She too waited patiently. In the corner of her eye a small yellowed leaf rocked past her vision and landed on her bended knee. The target paused and crouched, its body coiling tightly. Her own muscles contracted in time with the hunters, and the string of her bow reached peak tension just as the figure uncurled. The body and the arrow flew in tandem, and met in mid air, collapsing together in a roaring heap just a foot from Owyn, who jumped back, startled, and opened himself up to a blow from the swordswoman. \n\nInanna hastily nocked a second arrow and sent it hurtling toward the first hunter. It didn't do much more than startle her, but this gave Owyn his chance, which he took with brutal relish. The arrow had struck her pauldron and glanced off harmlessly, but it made her flinched and step awkwardly back. The lion took the moment to take her out the quick and dirty way. A huge paw, flashing with bright claws, came down quickly, slicing over the fighters face. A terrible scream went up as she stumbled back clutching at her eyes.\n\nInanna fired another arrow into the Khajiit before turning her eyes back to the woods. She could hear the shouts of men and mer, as well as the occasional snarl. Owyn had finished with the woman in the glade and had, intelligently, gotten the hell out of there. Apparently he'd finally comprehended that sticking his ass out in the open wasn't the most brilliant way to keep it from getting shot full of arrows. \n\nBut oh, what have we here? \n\nThe Dunmer dropped from her perch into a silent crouch. Red eyes glinting, and full red lips peeled back in a chilling smile. \n\nFeric let out a low growl of satisfaction. Every nerve in his body was alive with adrenaline. He scented the air. The tang of blood hung heavily, but he was down wind of something else. He tasted fear, light and cloying, but close. He let out another purring growl and leapt over a fallen hunter, slipping silently into the brush. \n\nHe caught sight of his prey a moment later. A dark skinned man. Sweat glistened on his brow as he clung with his back to a tree, his sword drawn. Feric lowered himself into a crouch, digging his hind claws into the earth. The man swung towards him, his head cocked, as if listening to phantoms. \n\n\"Hello? I...what is that?\" \n\nFeric listened. He could hear nothing. Was that man so terrified he was hearing things? So much the better. Now if only he'd hear something in the other direction. He coiled himself for the leap, waiting for the right moment. \n\nBut before the man turned away and that moment could finally come, a dark blur rushed out behind him, as if materializing from the air itself.\n\nThe man arched forward, a spray of red paving his fall. \n\nThe blur rose from the kill, lithe and serpentine, morphing into a slender female holding a still-dripping dagger. He'd never scented her, he hadn't even heard her.  \n\nShe chuckled. \"A little spell goes a long way.\" She was still looking at the body beneath her, apparently talking to herself.\n\nA familiar smell reached his nose and he stepped out of his cover without thinking, instinctively drawn to it.\n\nThe dark mer whirled towards him in a crouch, her lip curling into a feral expression before quickly twisting into something else. Her eyes glowed and her grin was ferocious. He felt every hair on his neck raise in silent response. \n\n\"Did I steal your kill?\" She whispered with a twinkle in her eye, going down on her hands and knees and crawling toward him, mimicking his own cautious approach. \n\nHe answered with a low, pleased growl and couldn't resist brushing his cheek against hers when she crawled up next to him, or inhaling the heady scent of her earthy spice which blended tantalizingly with the scent of excitement and adrenaline still drifting off of her. There wasn't the slightest hint of fear. That fact filled him with pleasure and pride. The reality that he couldn't truly claim her as mate was, for this moment at least, suppressed by excitement and instinct. He knew this dangerous female and was pleased to mark her as his own. More pleased still that she let him.\n\nShe made her own low sound, something between a purr and a groan and slipped her hand up along the side of his still bloodied muzzle, rubbing her cheek decisively against his in return. Her hand slid along his face to his neck and clenched into his fur. His cock twitched in response and his claws, still extended, flexed involuntarily. \n\n\"Well we're still not square, so don't think you're off the hook. You owe me.\" She whispered in a low husky voice against his ear.\n\nThe meaning of her words was lost to him, but the seductive promise held in her dark tone was most certainly not. He turned his gaze on her with a shiver when they were interrupted by a soft sounds in the brush beyond. They clearly both heard the distant rustle and snapped back to attention. \n\nIt was too far up wind, but he knew it wasn't one of theirs...too noisy. He looked back at her and she was gazing up into the trees over head. She turned to him and grinned mischievously. \n\n\"Think you can herd 'em over here?\"\n\nHe cocked his head quizzically.\n\n\"I figure we better take one alive now, before we get carried away.\" She said, answering, and clearly understanding, his silent question. She jerked her head back towards the clearing in a general gesture. \"It's getting pretty quite out there. I don't think we'll get another shot.\" Indeed, she was right, he'd not heard a single growl or shout for quite some time.\n\nHe nodded his understanding and peeled away, though not before giving her one last lingering brush as he slipped off towards the sound, earning a low chuckle in his wake.\n\nFeric circled wide getting himself back upwind until he caught the scent he was looking for. It was moving away from the clearing, and away from Inanna's position. \n\nHe slipped in behind the target, not having scented or heard anything else, and let out a low growl, just loud enough to be heard by the man he tracked. Feric saw him pause up ahead and turn to listen. He let out another sound and watched as the man scanned the trees then took a hesitant step forward, his short sword at the ready. \n\nFeric wheeled and moved back towards Inanna, brushing against a large lilac bush and glancing to see if the man caught the movement. He had, and was following. It took three more tries until the man finally decided he knew what he was seeing, and came crashing after him at a run.\n\nFeric tore away and led him back, slowing to let him catch up and letting the human catch the occasional glimpse when it looked like he was having trouble keeping him in sight. \n\n'Must be getting low on real hunters' he thought sardonically. This one was certainly no tracker, and he was too bulky to move very quickly over the uneven terrain. Feric almost lost him when he bound over a fallen tree and made a hard left around a hidden cluster of boulders, leaving the hunter to scramble awkwardly over and around the same impediments only to catch his foot on a bramble of roots and take a bit of a tumble. He grinned to himself...now if it had been that scary little dark elf on his heels, he might actually have a bit of a challenge. Good thing she was on their side. Though, he considered, that might be fun to try sometime.  \n\nHe slowed up as he neared his goal, letting the clumsy oaf bear down on him. \n\nThe man was of course startled to come across the body of his fellow hunter, still laying face down in the blood soaked dirt, but he was clearly more startled by the shout that came at him from above. The sound startled Feric as well, who had expected a silent attack like the one which had taken out the last hunter. \n\nHe swung around to watch the scene unfold once he was sure the man had frozen in his tracks.\n\n\"Mine!\" Inanna cried as the hunter came into sight, stumbling slightly when he looked down to see the Redoran on the ground. \n\nShe flung herself from her perch and landed squarely on top of him, her foot in his big Nord chest. He went down, and his weapon went flying. \n\nHe stumbled to his feet and Inanna danced back, a dagger in one hand and a slowly building spell in the other. It wasn't an everyday sort of spell, not for her at least, and not one she was good at casting, so she had to build it gradually, carefully, mouthing words in a barest whisper. She needed to buy a little time.\n\nHe righted himself, and his face twisted in concern when he noticed his sword was on the wrong side of the dark elf girl in front of him. However, his concern seemed short lived and he smirked at the sight of her, no doubt thinking he could break her over one knee, and made like he was going to charge forward. \n\nHe stopped short when she grinned madly and tossed her dagger carelessly sideways into a nearby tree, where it stuck with a soft thunk. She crooked a finger at him.\n\n\"Come on big boy, now we're even; let's see what you've got.\"\n\nShe laughed, a giggling, half crazy sound, and cast a quick wink at Feric who was watching with a glint in his eye that she did not perceive as pleasure. He'd just have to suck it up. \n\nShe laughed darkly in her head as the Nord hesitated, his confidence clearly waning, perhaps perceiving that either she really was crazy, or he really was in way over his head. He seemed to decide on crazy because his smirk returned. It wasn't an unreasonable supposition after all, so she didn't hold it against him. \n\nHis eyes darkened. \n\n\"I'm gonna break you in two you crazy bitch.\" Yup, he definitely went with the first hypothesis. Good for him. Better for her. \n\nFeric growled menacingly and fidgeted in the corner of her vision. He must not have liked that last comment. Did she mention what a gentleman he was? \n\n\"Now, now Serjo, let's not have any of that.\" she said sweetly, her eyes locked with the Nord's who was circling away from the cat and toward her, \"I did call this one after all.\" She showed her teeth. \"I get to play first.\" \n\nHe lunged for her, suddenly, and she danced away. She would have been stupid not to expect it. She was many things, but stupid was not one of them. She even managed to give him a light smack on the back of his head as he stumbled by. Just to get him riled up. Her life was just so much damned fun. \n\n\"Tag, you're it.\" He grunted and turned on her, missing her once more. \"Here, let's make this more interesting.\" She planted her hands on her hips and jerked her head at him. \n\n\"If you can stay on your feet for the next thirty seconds, I'm yours, body and soul. If not....well,\" she grinned, \"then you're mine. Come on, I'll give you the first go.\" She tilted her head up, as if prepared to take one on the chin.\n\n\"Say your prayers then dark elf,\" he muttered with a snarled. He strode the remaining steps between them and cranked back a meaty fist to clock her one. She dropped to her knees, tilting her head the very moment he had committed to the blow.  \n\nHer own palm connected with his stomach as his fist passed impotently through the air just inches overhead. It wasn't a blow on her part, just a cool dark palm against a leather cuirass. Her eyes never left his face, and she could read the confusion there. No dark elf where his fist should be, no pain where her own blow should be. \n\nHe doesn't feel the spell until his knees buckle and shoulders slump a second or two later, and he finds himself kneeling face to face with her. \n\n\"No.\" He gasped, his eyes growing heavy, and limbs trembling. \n\n\"You lose.\" She said sweetly as he slumped forward, overcome with exhaustion. She rolled her eyes and pushed him off her onto his front so she could bind his arms behind his back and prop him up against a sturdy looking tree. \n\nShe stood, clapping non-existent dust off her hands and huffed a satisfied breath. Looking over at Feric she saw that he had been joined by the other two. Well, who didn't like a good show. \n\n\"Well...that's that then.\" She nodded to the new comers and nudged the Nord's leg. He moaned, but remained dead to the world. Technically it was called an 'enervation' spell, but she liked to think of it more as her 'nighty-night' spell. She grabbed him by the collar and patted his face and got nothing. She must have really laid it on him. Either that or this guy's got no endurance. She smirked. They just don't make them like they used to. \n\nShe leaned down and called up a minor dispel, something she actually was good at, and slapped him hard across the face with it, leaving a nice pink splotch on his cheek. He woke with a start and a grunt.\n\nShe tossed a glance over her shoulder to see the lions prowling around behind her before focusing on the task at hand. Azura willing, it wouldn't take too long. \n\n\"So what should I call you?\" She asked when he blinked open his eyes.\n\n\"Go fuck yourself.\" She gave him a mild smile, then backhanded him hard enough to make her fingers start to ache. \n\n\"I think we got off to a bad start. Your name fetcher?\"\n\n\"Emperor Uriel.\"\n\n\"What a coincidence. I'm Queen Barenziah.\" She laid the overenthusiastic sarcasm on thick...just in case he was, then gave him a sneering smile. \"How's about us two regal types have a nice chat then, monarch to monarch? But let's not be so formal eh? You know, I've always liked the name Billy. How about I just call you Billy. It just seems so much more friendly. Yes?\"\n\nHe didn't seem to like that and lunged forward. \n\n\"I'm not telling you anything.\" How cliche. His bonds kept him from completing the move and she straitened up, shoving him back up against the tree with her boot on his shoulder. He looked past her and his eyes widened. What, just notice the three oversized lions now? \n\n\"Ok then, let's go with Jack since you don't like Billy. I like Jack too, Jack is good. Do you prefer Jack?\" She paused and tipped her head in the direction of the cats without looking at them. \"This'll probably take a while folks, we've got a hostile witness on our hands. You might as well go home and rest up.\" She continued to look down at her prey. \n\n\"Me and Jack here are going to get to know each other.\"\n\n\"Like hell we're leaving you alone with him.\"\n\nShe turned at the voice and looked over at Mirisa, who was standing naked in front of the other two. Well that explains why the Nord was staring; she was giving him quite a show. Inanna schooled herself and nodded. \n\n\"You're right, there might be others still kicking about, it's better if another stays.\" \n\nMirisa wasn't expecting that, and couldn't hide her surprise. Inanna was quite certain it was not her safety that she was concerned about. With another internal chuckle she continued. \n\n\"Would you mind staying? I'm sure the boys will be OK on their own.\" That threw her for another loop. Even the two lions behind her were clearly taken aback. Mirisa blinked, then shrugged, then looked to Feric, then shrugged again. Inanna wanted to laugh so badly it was making her jaw ache. \n\n\"I suppose.\" she murmured, giving Inanna a hard look that screamed, 'what's your game?'\n\nThe answer: throwing you off of yours. Just for kicks no less. Who says you can't mix business with pleasure. She gave her best impression of genuine and sincere appreciation.\n\n\"Thanks. I'll feel better knowing your keeping an eye on things.\" Right, and Molag-Bal likes long walks on the beach, rainbows, and fluffy kittens. After he rapes and eviscerates you, of course. \n\nAh, Daedric hobbies. \n\nMirisa's eyes were still narrowed, but she nodded. \n\nThe two women watched the others leave before Mirisa turned on her.\n\n\"Alright, what are you up to?\" The lady don't mess around, gotta hand that to her at least.\n\nInanna shrugged. \n\n\"Nothing. No game. You don't trust me, and if I were you I wouldn't trust either of them alone with me,\" she waved towards the direction of the recently departed Feric and Owyn, \"since one's a baby, and the other thinks I'm...well, swell.\" She smirked. \"I knew you'd only be satisfied if it was you who stayed to keep tabs.\" \n\nPerfectly amiable, perfectly reasonable: only partially true. In reality she didn't want anyone to see what she might have to do to this s'wit to make him talk. Owyn might not be able to handle it, and she sure as hell didn't want Feric seeing that side of her until she was sure he was too hooked to care. \n\nMirisa already hated her, or gave a decent impression of it, so no harm no foul. 'This is what we like to call damage control.' She thought morosely and shrugged again. \n\n\"What should I care? Knock yourself out.\" \n\nOh do. Pretty please. With a cherry on top.\n\nMirisa smirked. \n\n\"I suppose that's true...enough.\"\n\n'A girl after my own heart, too bad she's always in such a snit.' Inanna smirked back. Apparently they'd reached a sort of understanding.\n\n\"May I?\" She asked, indicating the man still glowering at them silently from under his tree. Mirisa sneered slightly and waved to indicate she may proceed\n\n\"I suppose. Do what you feel you must.\"\n\n\"My thanks, O gracious one.\" Ok, they'd reached an understanding; they weren't braiding each others hair and giggling their way through a trashy romance and a box of chocolates. \n\nShe proceeded to bore the life out of all three of them with the most insanely useless interrogation routine she could come up with. It was hard for her to be this incompetent, exhausting really. But eventually it paid off. \n\nShe was down on one knee next to Mr. Go-fuck-yourself, when Mirisa finally snapped. \n\n\"Oh for Kyn's sake, he doesn't know anything. This is taking forever.\" Mirisa grumbled from her post, returning once more to her humanoid form. Inanna'd been playing nice, using basic drain spells, slapping him awake and asking the same boring questions over and over. The same crap an imperial guard might use if his or her supervisor were watching. All upright and business like, and it was, predictably, getting them nowhere. ",
        "What was worse, she knew, was that she wasn't giving Mirisa anything to rat her out for. Oh no, she was on her best behavior. If she was torturing anyone here is was definitely Mirisa. \n\n\"Patience is a virtue.\" she called over her shoulder. And she was the most virtuous mer who ever lived. She was a fetching saint.\n\n\"If you're getting antsy you can always do a walk-about and see if the others have anything useful on them. Otherwise...don't interrupt.\" She gave her a half-smile and cocked a brow at her. \n\nMirisa hefted a sigh and shifted back. She shot one last unimpressed look at the Dunmer before trotting off into the woods to look for something more interesting to do.\n\nInanna gave it a few minutes and watched the trees carefully for movement before deciding it was safe to begin in earnest. She began by obliterated all expression from her face and made a slate mask of it, turning slowly to look at her victim, cocking her head and holding his gaze for a very long moment before twisting her mouth into a smile that stayed miles away from her eyes. \n\n\"Alone at last. I thought she'd never leave.\" He shuddered slightly under her palm. He must have felt the winds change she thought darkly. 'No more cloying zephyrs for you my friend.' \n\nShe stood suddenly and stretched her arms high over her head, letting the bones of her arms and back snap and pop loudly. She then pivoted on one foot to walk languidly away, tilting her head back to let the warm sun spill down over her face. It was such a beautiful day. She stopped, about ten or twelve feet from him and spread her arms out, palms to the clear blue. Taking in a deep long breath, she let out a low \"mmmmm\" of pleasure. \n\nShe turned again, smiling a bright eyed smile...with lots of teeth.\n\n\"You know what I call this Jackie my boy? I call this the perfect start to a perfect afternoon. The sun is shining, the day is young...there's a beautiful girl...\" she drawled out with a lewd sway of her hips as she sauntered back over to him. She wet her lips quickly and tipped his chin up with her forefinger. \"Don't go ruining it now by making me torture you to death.\" \n\nHe was still giving her his hard look. There was trepidation there, to be sure, but he thought she was bluffing. Oh dear. We can't have that now can we? \n\nInanna swung a leg over him and knelt straddling his lap, running her hands down his chest, pausing to pick at the leather bindings of his armor. \n\n\"So...what's your sign big man?\"\n\nHe blinked in confusion, then sneered in disgust. \n\n\"Get off me you disgusting dark elf whore.\" He rasped out. Clearly he was still feeling the drain she'd laid on him. Good. \n\nHe spat at her. She cocked a brow at him and wiped the spit off her cheek and onto his shoulder.\n\n\"Gee, just trying to be friendly. Some people...no manners at all. Your mother would be very disappointed.\" She patted his cheek. \"That's ok, if you're not going to be polite, I'll just skip the niceties.\" She saw him stiffen, preparing for another blow.  \n\nInstead she just ran her fingers lightly up to the sides of his forehead, drawing light massaging circles over his temples. He blinked up at her in confusion. She watched as his pupils contracted ever so slightly. Oh ho, was he starting to get nervous? \n\nShe flattened her palms and closed her eyes, focusing hard and reaching out with her will, her very self, to touch the self of the other in her hands. It was an intimate act, and invasive. \n\nShe felt what little will remained in him and pulled it out, unfolded it before her, feeling its contours like a lover feels the face of their beloved in the dark. She saw a glow, golden, like sun, like a field of wheat, like a crown. Something rose, strong and steady, immune and unshakable, a mountain, strong against the ravaging wind, unbendable, unbreakable, and masculine... it pushed against her and resisted her exploration. She had what she needed. She released him and snapped back into herself as her eyes shot open. \n\nHis face was a sheen of sweat from the strain of resisting her though all that energy had been spent for nothing. She smiled placidly down at him and sat back so that she was half straddling him, half sitting on his legs.\n\n\"I'm The Steed. Not terribly interesting really. We're notoriously impatient though. Oh, and fast...we're really very fast.\" She began conversationally, then chuckled. \"Guess I should have told you that before I let you take shots at me eh? But you,\" She poked him in the chest, \"you are The Lord. And that is Very interesting. It means, big strong man that you are...it means I can whittle you down to zero and you can just,\" she made an exploding gesture with her hands, \"pop yourself back up to a hundred and ten percent.\" She smirked. \n\n\"That is so long as I don't get too carried away. Of course,\" she continued, her smile becoming serpentine, and turning her eyes liquid, \"it also means so... much... more. Doesn't it?\" \n\nShe pressed her finger to his lips. \n\n\"You don't have to answer. If fact, let me tell you a little more about myself.\" \n\nShe laid her palms on her thighs and squared his eyes with hers. She morphed her expression into one of hardened intensity.\n\n\"My name is Inanna. I am Dunmer. I am a huntress of the Urshilaku, born, raised, and trained in the blood and ash of the red mountain.\" She rose slowly so that she once more leaned over him, drawing her mouth to his. \"I am death... I am destruction,\" Her lips were inches from his, and she drew the full force of the flame into her, or rather, out of her and the heat of it burnt like cinnamon over her tongue, \"I am fire.\" She breathed the last words against his lips, and she saw him shudder. She laughed darkly. \n\n\"I think you begin to understand...My Lord.\" She drew her hand from her thigh and slid it up over his stomach, letting it emit a low heat that pierced his leather, but did not burn. But he could feel it...oh how he could feel it. Nord, and born under the Lord, doubly weakened and sensitive to that one element. Her element. \n\nLong dark fingers wrapped around fair skin, and though they did not tighten or flinch, the flesh beneath turned from white, to pink, to dusky rose. The Nord whimpered as a terrible scent, like burnt offerings, reached his nose. \n\n\"The question is,\" she whispered against his mouth, \"who has the deeper well? Are you wondering if I will weaken and fade before you need call on your precious blessing, or if the depth of my destruction is equal to your great strength, or perhaps that it is far, far greater?\" \n\nShe pulled away slightly and chuckled again. \n\n\"I can go all night like this. I have incredible...stamina.\" She looked thoughtful. \"Though I suppose if I were to increase my efforts...\" she fanned the flame by a fraction, enough to make him cry out against the pain, and draw a stream of tears from his eyes and whimpers from his throat, \"I suppose then I may only be able to keep it up for a few hours...maybe up to five or six...I don't know...I've never had the chance to try it.\" She turned her eyes upon him again. \"Why don't we try together?\" \n\nSlowly she increased the heat, swallowing back her own revulsion at the scent of burning flesh, and her own disgust at the torture she was inflicting on the man. Her free hand curled in on itself, still sitting on her thigh. \n\nThis was no way to die. This was no fight, no hunt, there was no honor in it, and she was no sadist. But he had information, and she had made her decision. If a Dunmer can't protect what's hers, she doesn't deserve to keep it. She kept her twisted smile plastered to her face and shielded her thoughts from herself. \n\nWhimpers turned to cries turned to screams. Finally she released him. \n\n\"Sorry about that, you see what I mean about getting carried away...I'll try to keep my excitement from getting the better of me. Now, shall we? Or do you have something you want to tell me? I don't need much...just a name...\" \n\nShe shrugged and ran her hand along his jaw line. The flesh at his throat was burnt to the point of mutilation: seared, black, and broken. Her stomach turned a little at the thought of touching it again, but she swallowed that as well and let her hand trace delicately down his chin towards the mess that used to be skin. She pouted slightly. \n\n\"I'm sure this is no way for a Nord to go.\" She leaned in and whispered in his ear, \"Not with a roar and a blade...but with a whimper...up in smoke.\" She leaned away.\n\n\"No.\" He gasped hoarsely. That was quick. Small miracles.\n\n\"Hmmm? I didn't quite catch that.\"\n\nThe flesh made a horrific crinkling sound as she pressed her hand back over it. The fist in her lap tightened.\n\n\"Please...\"\n\n\"A name.\"\n\n\"I...I don't know the name...\"\n\nThe flames flared brightly in her eyes, red on red on black.\n\n\"I...there's a fort...but I don't know who hi...hired...please...\"\n\n\"Where?\" he whimpered and said nothing. She tightened her grip and snarled.\n\n\"Tell me and I'll let you take another shot at me. Hold your tongue and I'll burn you alive, one limb at a time.\" \n\nHis terrified eyes shot open into hers, searching for and finding what they needed. The truth.\n\n\"Wariel...N-north, uh, of Kavatch.\"\n\nShe released him and leaned over, running a finger over the ropes, igniting the dry strands. \n\nShe backed slowly away as the ropes snapped open and the man rolled forward onto his hands and knees. She turned her back to him and retrieved his sword. He was looking up at her when she turned to toss it in front of him. She watched silently as he took up the blade and rose to his full height. His wounds were gone and his eyes glowed with strength and violent hate. She braced her legs and stood, arms hanging loosely at her sides, still unarmed.\n\n\"White has first move.\" She said softly and without humor or sarcasm; her facades were stripped, they had no more use here. Now there was only the two of them. Two fighters facing in single combat, the way it should be. Lord Boethia's final and favorite dance. \n\nHe cracked his neck and twirled his short sword once before he began to circle. She matched him step for step, the opening prayer of the ancient ritual. He tested her, teased her, leading with his right foot forward, her left foot back. His blade flashed and she spun away, leaning, drawing him in, as he pushed her back. Boethia was as much a lord of seduction as combat. The two intersected in so many interesting ways. \n\nHer opponent's eyes burned with fury, and hers with elation. She felt the wind of his blade on her face, and it felt like freedom. One last frustrated swing, and the tip caught against the branch of the tree she'd been dancing towards. \n\nShe dipped, to quickly for him, and came outside his sword arm, catching the wrist for leverage, and slung her leg high over his arm only to twist it violently back. The shoulder popped, and he released the blade. She caught it up in the same movement and twisted the blade, driving it forward and up into his throat. A quick death, taken in battle. \n\n\"It's all we can hope for in the end.\" She murmured to the body that now lay at her feet. \n\n\"May you find welcome in the halls of your ancestors.\" \n\nHer hands were damp again. She wiped them on her leg before realizing it wasn't sweat, but blood, and her own blood. The nails of her left hand had bit into the palm, leaving a row of little crescent wounds. It must have been from when she'd tortured him. Strange how she'd never felt it.\n\nThere was a soft sound behind her. Mirisa. She released a sigh. \n\n\"Well, looks like we have a place...which is a start.\" She murmured, casting a glance over her shoulder.\n\nThe blue eyed lion shifted into a blue eyed woman. \n\n\"I heard.\"\n\nThey stood watching each other. Inanna was looking for a hint as to what was going on behind those indigo pools, but Mirisa was giving her that strange contemplative look that had so stunned her when she ran into Feric that bizarre and fateful day. And so, she remained inscrutable. \n\nShe knew Mirisa had seen most of it, and probably the worst parts, which she could live with as she had no illusions about getting her to like her. That didn't mean she wanted it getting back to Feric. That wouldn't do at all. \n\n\"I guess we should go then.\"\n\n\"I guess so.\"\n\nUgh. This was going to go nowhere fast. Inanna sighed again and turned away to find her bow and wrench her blade out of the tree where she had left it. Mirisa was already shifting back and passing her, giving her a fleeting look before taking off in the direction of home. \n\nInanna trotted obediently behind her, her feet finding their path autonomously from her mind. She let them, and preoccupied herself with wondering how exactly she got herself in this delightful position.   \n\n**\n\nAs thoughts wandered, a letter arrived.\n\nIt arrived in a small boat which moored itself on a small wharf, which sat, mild and unassuming, on a small island. Upon this little piece of white sand and grey stone, stood a few small and twisted trees, or rather slender hard trunks topped by smooth and colorful buds and canopies of mottled gold and green and red. Mushrooms: as drawn by a child or madman. And, over these giant mad mushrooms, loomed a thing more spectacular and monstrous. A tower, twisted and leaning like the spires of a daedric temple, yet smooth and flowing it its form. A massive organic trunk sprung from the ground, twisted round with thick hard vines and swollen buds, and capped with its own bright and prismatically colored dome, the bottom lip of which tipped out over the unassuming little wharf some fifty feet below. \n\nFrom some strange knotted portal at the lower regions of this strange warped growth emerged a young Khajiit male. His fur sleek and carefully groomed, and his ears pierced with many fine gold, obsidian, and amethyst rings. His light silk robes fell gracefully about his lithe form as he wound his way down the thickest of the winding vines, molded flat and smooth, wide enough that three could walk abreast and not fear slipping from the edge onto the tangle of roots and sand below. \n\nThe ferryman who stood at the dock bowed to the Khajiit, who, if not for the telling silver bracers around his wrists, might have passed for a noble anywhere else in the Empire. But the ferryman served house Telvanni, and so did the finely cut slave before him. Both knew it pleased a Telvanni lord to have servants and slaves who could put the elite of any other house to shame with their dress and manners, even when that lord was an eccentric recluse whose servants and slaves were rarely if ever seen. The slave took the letters, among them one signed 'Velothi,' and returned the bow. The ferryman touched his broad flat hat.\n\n\"Have you any deliveries Muthsera?\" He asked politely in a gravelly voice.\n\n\"Not today Sera, But my Master is expecting supplies from his brother soon, perhaps we will see then my friend.\" The Khajiit's Dunmeri was nearly perfect, altered only by the slight sibilance engendered by speaking through a mouth full of sharp teeth.\n\n\"Send my regards to your honored Master. Be well till then.\"\n\n\"I shall. Be well.\"\n\nAnd off the letter went, tucked safely in a silken pocket as it wound its way around the bloated stalk, and into the knotted portal. Had it not been tucked away, or for that matter, had it been a sentient thing, it might have been awed and amazed at the sight that would have greeted it upon entering that strange tree, for inside the colors where as bright as the capped roof and the mottled walls were luminous, shimmering membranes stretched between elegantly curved vines as thick as a man's chest. The walls themselves throbbed with energy, life, and power, and the whole was lit with a humming glow that seemed to emanate from everywhere at once. \n\nThis was the servant's entrance.\n\nDar'Basha shook back his sleeves and murmured a well used incantation. His bracers were not actual slave bracers, that is, they did not hamper will or strength. In fact they did quite the opposite. They had their uses, but were ornamental for the most part and only a symbol of his station. He was free to have his will, and as seneschal and one of the few servants allowed access into the great lord's private chambers, he needed it. As it was, the only way to access said chambers was to levitate four stories up to it and into the roof of the great dome. \n\nHe floated demurely up past a myriad of splendid and amazing sights that would have your average imperial farm boy gaping in awe and landed lightly on the wood-like floor of his master's chambers. The room in which he stood was something like an empty round chamber with nothing but a great hole in the center and a series of circular doorways running round its perimeter. His sensitive ears caught voices and he followed the sound, knocking politely at the portal in question. He heard a heavy sigh and winced.\n\n\"One moment.\" The Khajiit relaxed, if it had been a bad time, the response would not have been so polite. This was merely a mild annoyance, which was merely standard. \n\n\"Come.\"\n\nDar'Basha entered and bowed. The scents of machinery, alchemicals, and Akaviri cherry blossom tea mixed strangely in the air and made his nose twitch. \n\n\"Honoured Master. Madam.\"\n\nThe room was one of the tower's work rooms, or rather one of the master's work rooms. On a bench against the far wall were a range of little metal bits and pieces and part of what looked like the remains of a Dwemer centurion sphere along with a good number of apparatus which looked better left untouched. \n\nLike many of the more reclusive Telvanni, he was something of an experimentalist when it came to the esoteric arts. He was also renowned as a very clever artificer, and a leading figure in cutting edge arcane technique. This fact gave his small but select staff a great deal of pride and, necessarily, a great deal of nervous apprehension.  Now and then experiments, particularly of the 'leading edge' variety, were known to get out of hand, and more than one curious sorcerer had met their end the hard, and often explosive, way. \n\nThe master stood rigidly in the center of the room and nodded in acknowledgment. He was a tall, lithe Mer with hard narrow features. His skin was a light silvery grey and his hair stood in short gold and auburn spikes, a testament to his mixed merish heritage. The style would have been almost youthful if not for the heavy grey that had begun to permeate it. So, instead, it combined with his hard gaze and often intense silence to give him the somewhat off putting appearance of being slightly mad. The effect was bolstered by an unusual web like tattoo which dominated the left side of his face and neck from hairline down to the collar of his exquisite teal robes. A select few knew just how far down it continued. No one but he knew what it was for. \n\nMadam, for her part, was not the mistress of the house, but a favored guest, and, Dar'Basha knew, one of the 'select few.' \n\nShe was sitting demurely by the work table lifting a cup of tea to her red, heart shaped lips which were set very charmingly in an elegantly pale heart shaped face, which in turn was framed with carefully arranged glossy chestnut curls. Over the delicate cup two smiling green eyes shone out towards the Khajiit as he handed over the packet of letters, and she wriggled the fingers of her free hand in greeting.\n\n\"There aren't any incendiary spells this time I hope?\" She called lightly from across the room. The Seneschal bowed deeply to her when the Master had turned away, flipping lightly through the pile. \n\n\"I am afraid, Muthsera, I could not detect anything, but then my skills are only passing fair.\"\n\n\"Oh don't be so modest Bash, you did catch that last one. Besides, I'll personally attest to how very skilled you can be.\" Her lips curved into a slightly wicked smile. \n\nDar'Basha glanced to be sure the master was still turned away, then gave the woman a sly grin in return.",
        "\"Don't you ever stop flirting?\" They both turned to the tall mer who had never looked up from his shuffling.\n\n\"My dear Faves, surely you've figured that out by now. It's what I Do.\" She placed her tea cup back on its saucer and slid it onto the precariously cluttered bench. \n\nHe didn't look up but walked over and dropped half the pile in her lap.\n\n\"Make yourself useful and tell me if there's anything in these I need to care about.\" He turned and paced back toward the door. \n\nThe Breton lady lifted the pile with the air of the hard put upon and stood smoothing her ivory damasked silk dress out with a soft rustle. She looked at the first address and screwed up her face, tarnishing the effect of her elegant movements. \n\n\"I gave you the mundane ones.\" He murmured, as if sensing her expression without seeing it. The seneschal's angle allowed him to catch the hint of a smile that briefly graced his features.\n\n\"You're sure? This one is from your sister in law. She was more than put out that you didn't show up to her daughters coming out party last month. I wouldn't want her ire accidentally spilling out on me. Whatever form it takes. That woman's a right harpy when she wants to be.\"\n\n\"I don't see why, I sent that ring.\"\n\n\"Which ring?\"\n\n\"The conjurer's ring... someone told me she was studying that at some point.\"\n\n\"I told you that...and wrong niece. That was your sister's daughter. And you gave it to her on her birthday...which you also missed.\" The servant bowed his head to hide a smile as Master Andes rolled his eyes.\n\n\"If I went to all these things I'd never get any work done.\"\n\n\"You don't have to go to all of them...just a few, once in a while. Speaking of which it's your darling little brother's 550th this year, and you have to go.\"\n\n\"Say's whom?\"\n\n\"You're unhappy sister in law.\" He looked up from the letter he was reading and cocked a brow at her from across the room as she waved the letter at him.\n\n\"I thought I said to tell me anything I need to care about. Dar'Basha, would you find something to send my niece...whichever one is supposed to be getting things...\"\n\n\"Llaearah\" The Breton supplied. \n\n\"Llaearah.\" He echoed. \"Get her...\" he looked around searching for inspiration and paused on the lady who had reoccupied herself by flipping through the letters, \"Desdemona? \"\n\n\"Hmm?\" \n\n\"Is that a new dress?\"\n\n\"No...you bought it for me last year.\"\n\n\"Ah. Is that sort of thing still in style?\"\n\n\"Akaviri silk never goes out of style, darling.\"\n\n\"Then I must have good taste.\"\n\n\"The best.\"\n\n\"Get her one of those...\" he made a vague gesture to the dress, \"things.\"\n\nDar'Basha bowed.\n\nFaves flicked his eyes up to his attendant.\n\n\"Someday soon would be nice.\"\n\n\"Don't go quite yet Dar'Basha, you'll also need something for a funeral. It seems Aunt Noreema has finally succumb.\" the Breton murmured from her side of the room.\n\n\"To what?\" Lord Andes asked, looking finally interested.\n\n\"The Morag Tong.\" \n\n\"Ah. Good.\"\n\n\"Why good? What self respecting Telvanni hires assassins? It's in bad taste. It's so...House Hlaalu.\"\n\n\"Who's to say it was a Telvanni and not a Hlaalu? Regardless, to answer your question, it is good news as my mother convinced her to entail her fortune away in the case of foul play. So now that idiotic s'wit son of hers will get nothing.\"\n\n\"That doesn't seem terribly fair.\"\n\nHe shrugged. \n\n\"It's standard practice. Besides if the foolish Altmer can't protect what is his, he doesn't deserve to keep it. You should have seen how my brother dotted on mother. She was not a stupid woman. She lived to see nearly 13 centuries you know.\"\n\n\"Who gets it instead?\"\n\n\"It will be dispersed to the rest of the family.\"\n\n\"So I assume you're going to this then?\"\n\n\"Absolutely not.\"\n\n\"Oh, for the love of Mara, why not?\" She asked rolling her eyes, though her tone was far less surprised than her expression indicated.\n\n\"It will be a public ceremony, and the Nerothren family still wants my blood, if you'll recall. I'd be a pretty target indeed. And they've become rather insistent, particularly after that incident at Shishi.\"\n\nDesdemona tapped the letter against her lips in a playful way. \n\n\"Incident? Don't you mean massacre?\"\n\nHe shrugged. \n\n\"It's no fault of mine they chose to go charging head long into the fray with those Redoran barbarians while I was in the middle of a very sensitive experiment. Honestly, do I look like a baby-sitter?\" \n\n\"Regardless, it might do you good to get out and get some practice. Theoretical studies are one thing, but nothing works the old magica muscles like a little practical application.\" \n\nHe merely glanced at her with a small smile, which she returned before continuing with another thought. \n\n\"You know...it makes sense to make the stipulation that the children have to keep their parents alive, as you pointed out, but entailing it to the rest of the family doesn't make any sense whatsoever.\"\n\n\"Oh?\" He cocked a brow and gave her a very intense look, one that raised most people's hair on end. She returned the expression with a sceptically amused one of her own.\n\n\"It seems odd of your mother to suggest such a thing when it would only encourage the rest of the family to do their best to knock the poor lady off, or as you so eloquently put it the other day, 'taking the last word'.\"\n\nHe said nothing, but his eyes took on a slight glow and his lips twitched again.\n\n\"Tell me darling, did your mother add such a stipulation to her will?\"\n\n\"No...she did not.\" His twitch became a full blown hint of a smile. \n\n\"Ah.\"\n\n\"Indeed.\"\n\nShe grinned evilly. \n\n\"I see where you're family gets it from. Dangerous fetchers...the lot of you. Especially your sister-in-law.\" She added with a grimace. He did chuckle at that.\n\n\"It certainly wasn't father.\"\n\n\"Oh, be nice, I've heard he was an absolute miracle worker with alchemicals...he's still a bit of a legend. It's not his fault he was an Altmer. And he was rich...\" her smile turned sly again. \"You know how we ladies get around a fat purse. Your mother couldn't help but be enamored, I'm sure.\"\n\n\"I'll be sure to tell that ancient bat, Lord Haelo, you said so.\" He turned and finally waved the servant off, who in turn bowed and backed out of the room, his ears twitching as he attended the conversation as long as he could.\n\nHe caught light feminine laughter, \"Be my guest, he's not fool enough to believe my attentions are born from anything else...even if they are.\"\n\n\"Oh? Do tell.\"\n\n\"Honestly, Sera, you know me, I'm like a moth to the flame. Why do think I put up with all this Telvanni insanity you people call existence? The man oozes power, even at his age...especially at his age, just standing next to that sort of raw force gives me a little tingle.\"\n\nThe servant heard another chuckle, this one much deeper, and the question, \"Just a little tingle?\" At which he let out his own little chuckle as he serenely floated downward, nearly colliding with a young and frazzled looking lord.\n\n\"Gads! Excuse me!\" the young man bit out, surprised and angry at the impediment. The two hovered a moment before the Servant, well mannered as he was, made a half bow and asked how he might be of service to the man whom he finally recognized as the young Lord Peridir Andelor. To which the young lord responded with the demand, and very loudly, that he see the servant's master immediately. \n\nThe servant's master, having ears himself, heard the very noisome young cad from where he stood several floors above and left his charming companion to look down at the two of them.\n\n\"For Pity's sake Andelor, why are you shouting in my hallway?\" \n\n\"You!\" the young man started and flew rapidly upward nearly knocking the Khajiit again in his haste. \"You stole her. You have absconded with the very light of my being, and have holed her up in this wretched prison. I demand you quit your acquaintance this instant or I shall be forced to make terms!\"\n\nThe servant, knowing his master's supply of patience was minimal entered the nearest side corridor, putting himself well out of blast range.\n\n\"What on earth are you babbling on about?\" the much older mer asked with a weary air. \n\n\"I am in love!\" The young lord declared vehemently, landing with force to accentuate the declaration and shaking an irate fist.\n\nFaves Andes stared blankly at the boy a moment before turning on his heel and walking away with a tossed out wave.\n\n\"Muthsera, I believe this mess is for you.\" He called as he left the central chamber. He was replaced in the door way by the lovely lady in question, who blinked in surprise at the red, or rather purple, faced young man in front of her. \n\n\"Per, Mon Chere, what on earth are you doing here?\" She whisked forth with a brilliant smile and took his hand, kissing him lightly on both cheeks in the Breton fashion. She ran a hand over his shoulder and arm as if to pet him into order, disguising her light charm spells. Not that she needed it, she would likely insist, but practicality calls for thoroughness. \n\n\"Why you seem in such a flurry? Whatever is the matter?\"\n\nHe seemed instantly mollified by the spell and the warmth of her greeting. He returned her smile and clasped her hands as she gave him an innocent and bemused look. \n\n\"Come away with me. Come away this instant. I can offer you so much more Desdemona, he can't love you the way I do.\" He clasped at her arms and gazed at her feelingly. \"You must know how absolutely and ardently I adore you!\" \n\nIt should be noted here that it took real strength of purpose for the heroine of the scene not to wince at such extraordinary use of alliteration. She certainly had. \n\nShe smiled sweetly and took his hands again. \n\n\"I think you're quite wonderful, darling, you know that. We are such excellent, excellent friends. But it would be very unladylike to simply walk out on my host...certainly this discussion could wait until I'm back in Sadrith Mora? \n\n\"I'm quite stunned you came all this way Per dearest. I'm very flattered of course, but I don't think you need be quite so overcome, now do you? It really is quite shocking.\" \n\nOf course he was overcome, and told her so, and she was forced to gently pry herself from his arms several times before she sensed he was beginning to listen to reason. It was tricky work using charm and calm spells on Telvanni, even the lesser ones, though luck was with her in that he wasn't as quick on the uptake as the quality of persons she normally rubbed shoulders with. \n\nOf course her clever work was all undone when the youth suddenly went stiff as a board, his fingers still gripping her arms, his mouth hanging open mid word, making him look remarkably like a plaque-mounted slaughter fish. \n\nShe sighed and looked over her shoulder giving the stony-faced mer, who stood cross-armed in the portal behind her, an arched and exasperated look. She turned a much sweeter countenance back to Andelor and peeled his finger off her arms before patting his. \n\n\"You took too long. Another minute of listening to that simpering and my ears would have started bleeding.\" quipped the cool voice behind her. She gave the boy a pitying look. \n\n\"Oh dear. Well, Per darling, you know, sometimes the wanting is better than the having.\" He made an odd sort of choking noise which caused her to wince. \"We'll talk later...alright?\" She gave him a dainty peck on the cheek and vanished, literally, from sight. \n\nA moment later the paralyzed lord found himself hefted into the air and, rather cruelly, suspended by insubstantial fingers over the four story drop below. The other Telvanni only then condescended to step out from the doorway. \n\nThe young lord struggled against his magical bonds, a light sheen of sweat beginning to coat his forehead, and his eyes flickering nervously. The spell that held him was too strong, too well constructed and by too experienced a wizard to be broken so easily.\n\n\"I wouldn't do that, if I were you.\" The Telvanni murmured taking another step forward. \"It's a long way down.\"\n\nThere was the softest of laughs at his shoulder, hardly audible, even to his mer ears. Faves felt, but did not react to the light telekinesis spell that ran up the center of his back like the teasing caress of slender fingers. His expression remained contained, as did the instinctive shiver that threatened to accompany the sensation. He did, however, lean imperceptibly into the actual fingers which followed in the wake of the ghostly touch along the small of his back. \n\nPointing a hand in the direction of the young lord --who still gasped and gaped and struggled, his face, normally a handsome bluish black, turning a somewhat purplish color from the exertion-- Lord Andes narrowed his eyes in concentration and twitched his fingers ever so slightly, turning the young man a truer shade of violet.\n\n\"Now, I will put you down, and forgive the trespass and go back to my work, and send you on your merry way with the expectation that you will never come back without formal invitation, because if you do I will squeeze you until you're minuscule brain explodes out of your ears.\"\n\nHe eased the burden and telekinesis until the young man could manage a nod of assent.\n\n\"Excellent.\"\n\nHe flung the body to the floor and out of harm's way with the flick of a wrist. Andelor drew himself to his feet, pulling himself together with a glare and a sharp tug of his tightly fitted blue silk waist coat. He shuddered, his expression dark.\n\n\"And what of the lady?\" He began, more embarrassed than phased. \"Am I not to see her?\" He tipped up his chin in coltish defiance.\n\nAs he spoke the delicate invisible fingers worked their way across Faves's back, becoming two arms which snaked unseen about his waist to rest lightly on his stomach just above his heavy braided belt as a soft body pressed against his hip.\n\n\"I could care less what you do...or who you do it to, so long as it's not done in my house. Muthsera Doucet comes and goes as she pleases. Where she goes, and what she does, is her business. Not mine...and not yours.\"\n\nThe two small hands slid slowly along the belt.\n\n\"Now, if you please?\" He gestured to the vertical hall and cast upon him the withering gaze he was so well known for. The gaze increased in intensity the lower the two little hands slid. Andelor bowed stiffly and exited with an angry huff.\n\n\"Enjoying yourself?\" Faves asked the invisible someone, his voice tinged with more than a small dose of sarcasm.\n\n\"I can see that you are.\" a soft voice murmured from his left shoulder. \"See what I mean about practical application? There's nothing like it.\"\n\nThere was a long pause.\n\n\"You didn't actually bed THAT did you?\"\n\n\"Ugh. No, thankfully. Can you imagine what he would have been like if I had?\"\n\n\"Then why even entertain his nonsense?\"\n\nThe hands ceased their movement and rested on his belt, the body behind him pressing in with a soft sigh.\n\n\"I believe I did it for you Serjo.\"\n\n\"Oh?\"\n\nThe voice chuckled, and the invisible body shifted.\n\n\"Well, I lent myself to your sister in law when she first complained to me about your distinct lack of interest in her family affairs, and she in turn lent me to Lady Andes who tasked me with getting rid of a grasping potential daughter in law.\" She sighed. \"Now I'm stuck with the silly fop.\"\n\n\"Tell me again how that was for my benefit?\"\n\n\"Well if I placate your family for you, then they'll overlook your oh-so callus nature and continue with your funding for your experiments, giving you more time to spend on all those wonderful toys you come up with.\"\n\nHe chuckled at that and found one of her wrists with his hand. \n\n\"Which I can then give to you to play with?\"\n\n\"Well, if you wanted to...\"\n\nHe whirled around, the wrist still caught in his grip, and drew her closer to him. He looked down where he knew her face was looking back up at him.\n\n\"Either way, I do not want your pet projects turning up here.\"\n\n\"Oh, but you so enjoyed it.\"\n\n\"It was a waste of precious time.\"\n\nShe scoffed. \n\n\"You waste oodles of time as it is. I've been here distracting you for months now.\"\n\nHe leaned in toward the epicenter of the invisibility spell.\n\n\"I find your input...constructive. Besides which....some few things are worthy of wasting time on.\"\n\n\"Am I one of those things, Faves?\"\n\n\"You are occasionally amusing.\"\n\nShe pulled her hand gently from his.\n\n\"Flatterer.\" \n\nHe smirked, and she removed herself from the hall. He cast a detect life and was surprised to see nothing. His smirk widened and he headed to the work room, spelling the door locked behind him and taking a few steps into the room.\n\nHe cast again and watched with sharpened eyes for the flux of one spell repelling another. He didn't see it, but felt the familiar signature of it, like a silken ribbon drawn languidly over his skin. He whirled suddenly, hurtling a spell from his fingertips, simultaneously breaking the illusory invisibility and pinning the little Breton to the wall.\n\n\"You're no fun.\" \n\nShe was smiling as he sauntered up to her with his set unreadable expression. He lifted his fingers and she slid up the wall accordingly until she hovered at eye level with him.\n\n\"Do you recall the last time I dangled someone over that drop?\"\n\nShe pursed her lips and arched a brow.\n\n\"Markedly. I seem to recall you rather enjoyed That as well.\" \n\nHe frowned. \n\n\"I was livid.\"\n\n\"And rock hard.\"\n\nHe smirked. \n\n\"You were naked.\"\n\n\"So were you.\"\n\nShe squirmed a little to test the strength of the spell, finding it every bit as effective as young Andelor had a moment earlier.\n\n\"If you want to dig that amulet out I can give you a repeat performance.\"\n\nHis eyes darkened and the spell tightened around her, pressing her harder into the wall.\n\n\"If you ever even think about trying to slip that thing on me again I'll do a lot worse than threaten to drop you down the Tel.\"\n\nShe laughed at that. A low sound, like rich, dark chocolate.\n\n\"What's wrong Faves, didn't you like being at my tender mercy?\" she drawled out. \"Mmmm, I could have killed you, you know. It would have been sooo easy. You were as weak and pliant as a little lamb.\" \n\nShe watched with unrestrained excitement as his eyes flashed in remembrance.\n\n\"Drained...totally powerless. Tell me you didn't like it...not even a tiny little bit.\"\n\n\"I didn't like it.\" He breathed out tightly in a dangerous whisper, closing in so that her face was only inches from his. \n\n\"Liar.\"\n\nThe word came out in a gasp as she reacted to a second spell which was running in rather alarming patterns up the insides of the calves and thighs. She continued to squirm.\n\n\"You still haven't told me where you found that evil device.\"\n\nShe smiled through another gasp and turned into the finger that was tracing down along her ear and jaw. She took a moment to steady herself as the ribbons of sensation moved higher, as if somehow under her skin, electrifying her from the inside out.\n\n\"I can't tell you all my secrets Faves, or I'll cease to be so very amusing to you.\" \n\n\"I'm sure you'd think of something.\"\n\n\"Well, I can be very creative when I want to be. Why don't you put me down and find out?\"\n\nHe tilted his head and ran his eyes up and down the length of her body.\n\n\"I think...not quite yet.\" A small smile reappeared on his face as the ties of her dress began to slowly unravel themselves. \n\n\"I think someone has a new favorite spell.\" She teased breathlessly.\n\n\"Oh? Who would that be?\"\n\n\"I'm not telling.\"\n\n\"Oh no?\"\n\n\"You'll just have to make me.\"\n\nHis small smile turned wicked and he snapped his fingers. A stout, fully armored Dremora appeared beside him. \n\n\"Yes Master.\" it rasped, clearly not pleased at having been summoned. Dremora never were.\n\n\"Zoreth, I need information extracted from this young lady. Do you have any suggestions?\"",
        "The Dremora looked the now rather flushed and only half dressed Breton over and gave her a dark smirk. She gaped at Faves.\n\n\"You wouldn't!\"\n\nHis wicked smile turned sinister.\n\n\"Oh, you're bad.\" She cooed in a low voice. \n\n\"Whatever would the other Telvanni say if they found out?\"\n\n\"Who gives a damn.\"\n\nThe Dremora grinned in earnest.\n\n*\n\nHours later there was a knock at the portal door.\n\n\"What?\" Faves called from his languid position sprawled across the long couch set up along the far wall. He drew in a quick breath and stilled the fingers that were lazily following the intricate lines tattooed across his chest. \n\n\"Shall I have dinner prepared Master?\" The voice called through the door.\n\n\"I suppose.\" He answered. \n\n\"Is it that time already?\" He murmured to the ceiling. A long leg draped over his thigh shifted higher.\n\n\"I told you I was distracting.\"\n\n\"Yes, I suppose you are. I didn't even finish opening the mail. Whatever will I do with you.\" \n\nHe glanced down at the floor where several unopened letters had been scattered and reached for the nearest one. The seal was of unassuming red wax. He broke it with the flick of his thumb and shook it open in one movement, then frowned at it.\n\n\"What is it?\" Desdemona asked, propping her chin on the back of the hand that lay on his chest. He turned it to face her. \n\n\"I'm not sure. Does that mean anything to you?\"\n\nShe read the three lines and sat up with a start and an \"oh!\"\n\n\"What?\" \n\nShe looked down at him and quirked a smile.\n\n\"Well it looks like I won't be distracting you anymore. That, my dear, is a summons I can't refuse.\"\n\nHe frowned. \"I thought your sister went into the east?\"\n\n\"No, not my actual sister, but the closest thing to it. Remember me telling you about Ina, the one who acted as a guide for Emily and I in the wastes?\"\n\n\"The insane Ashlander?\"\n\nShe chuckled. \n\n\"She's not as crazy as I made her sound. I just told you the particularly interesting stories. She just has....an unusually voracious appetite for life.\"\n\n\"That's a poetical way of putting it.\"\n\n\"Why thank you darling. I do try.\"\n\nHe handed her the letter and gazed up at the ceiling. She watched his face as if seeing the wheels turning, a small smile playing on her own.\n\n\"I suppose she'll be dragging you around on some wild escapade?\"\n\n\"One can only hope.\"\n\nHe sighed.\n\n\"Take Dar'Basha with you.\"\n\nShe blinked at him in surprise.\n\n\"But...he's your senechal...\"\n\nFaves shrugged as much as he could without dislodging her from his shoulder.\n\n\"He's getting antsy...it's not good to have a 'Dar' around who's getting antsy. They start looking for ways to entertain themselves.\"\n\nShe smiled down at him and he cocked a brow at her.\n\n\"Are you worried about me Faves, you big softy.\"\n\nHe smirked. \n\n\"Well if you don't come back...who's going to keep my family out of my hair. You ARE distracting it is true, but you have your uses.\" \n\nShe smacked him lightly on the shoulder.\n\n\"Told you so.\" She grinned. \"You're going to get so bored without me.\"\n\n\"And I might finally get some work done.\" He added dryly. \n\n**\n\nInanna toyed contemplatively with the tip of her braid. Lucas's first lesson with the bow had gone predictably. Part of him wanted to learn, she could tell, but he had a morose streak two leagues wide which caused the whole thing to end in one of those, 'this is hopeless/what's the point of trying/ blah blah blah' moments. \n\nThat kid needed to lighten up. He did have potential though, with or without the \"Beware: Angst\" sign tattooed on his forehead. \n\nIt also brought back some memories. Ah, to be young again. At least he hadn't started worshiping Daedra yet\u2014an obligatory phase for any disgruntled youth. Well Ok, HER disgruntled youth. Really though, is there any other kind?\n\nShe'd try again tomorrow morning. In the meantime, she had things to do, people to see. \n\nRearrange that phrase however you like\u2014it was still true.\n\nInanna was tired of waiting. In fact she had a plan. It involved getting her way. It also involved payback. She strode down the quite halls of the Ayleid ruin entertaining a very self-satisfied smile. She liked payback. She liked getting her way even more.\n\nShe had volunteered for the second evening watch, just before Mirisa took over, and before everyone would be more or less settled in for the night. Feric, she knew, would still be awake, and most certainly alone. Now her watch was over, everyone was asleep, and Muthsera-Mirisa was happily occupied. \n\nHer plan went something like this: \n\nStep one: corner the prey. Step two: get him as hot and bothered as she was. Step three: walk away. Hang out to dry and repeat as necessary. \n\nThe time for patience and subtlety was at an end. She was going to switch things up a little. \n\nShe'd waited too long as it was, and as much as she wanted him, she had absolutely no intentions of being the one to come crawling on her knees like a bitch in heat. Even if that DID sum up the situation pretty accurately. She had every intention of letting him suffer a little first. It was only fair after all.\n\nShe pulled out her braid and shook out her hair with both hands, wetting her lips with her tongue. She found him alone as expected. \n\nStep one: check. \n\n\"So, I have a couple of questions for you.\" \n\nHe was standing over a fire pit, looking thoughtfully into the flames and looked up at the sound of her voice.\n\n\"Yeah? What's on your mind?\"\n\n\"I have a theoretical situation I need to run by you.\"\n\n\"Fire away.\" She smiled at that. Good image. Weirdly appropriate.\n\n\"Well, let's say, if I were to introduce Mirisa to my friend Max...and they were to hit it off, theoretically,\" she added, noticing his raised brow, \"would there be any problem with them getting together?\"\n\n\"How do you mean?\" He frowned at her and shifted, looking less than completely at ease.\n\n\"Well, would there be some kind of taboo or anything against it, would the pride have a problem with her seeing someone outside the group. She could probably stand a roll in the hay. Might take the edge off her, if you catch my meaning.\"\n\nHe smirked and shrugged. \n\n\"I can't see that being a problem.\" He chuckled. \"Hell I might even encourage her. It might actually do her some good.\" He gave her a warning look which was mitigated by an irrepressible smile, one that made her innards writhe. \n\n\"Don't you dare tell her I agreed with you though, or I'll tear you a new one.\"\n\nShe smiled and breathed deeply in. 'Oh if only you would.'\n\n\"Ah. Good. That brings me to my second question.\" He smiled at her gamely, no doubt expecting her to offer to arrange such a meeting, which wasn't that bad of an idea now that she thought about it. Mirisa probably had the same standards she had. The old 30 second rule. If you could fight her and remain standing for at least 30 seconds...you had a better than fair chance. If not? Well usually that was the least of your worries. \n\nBut this was not the aim of her next question. Oh no, this was a tad more pressing. \n\n\"Which is?\" He goaded her as she paused to organize her thoughts for her oh-so important question, and to let the silence become emphatic. She cocked a brow at him.\n\n\"Why aren't we fucking right now?\"\n\nHe gaped and, after blinking himself into a state of understanding, lost the color in his face, which he promptly regained a split second later in the form of a reddish flush.\n\n'Oh Serjo, did you just blush?' It was the most adorable expression she'd ever seen. If he didn't watch it she was just going to pin him to his shadow and ravage him within an inch of his life. To hell with retribution, she'd take what she could get. \n\nNo! The plan...must stick to the plan.\n\n\"Um...I, uh\" He stuttered, searching for words, or excuses.\n\n\"Nuh-uh. None of that.\" She said waving a finger at him. She put her hands on her hips and advanced on him slowly. \n\n\"Do you have any idea how incredibly, painfully, fist-bitingly worked up I've been for the last two weeks, waiting for you to find time to fit me into your busy schedule?\" She stopped in front of him, poking him in the center of his big chest, which was a little below eye level\u2014 she wasn't terribly tall\u2014 and glared balefully up at him. \"I nearly killed a man in a bar fight you know.\" She added grimly with pursed lips. \n\nOk, maybe not killed...gently maimed perhaps. She didn't just kill people without reason. She was a reasonable mer after all. Usually. Except, apparently, when it came to big, strong, green-eyed were-lions. In which case she was about as reasonable as a horny Dremora doing lines of moon sugar off a Sanguinite's ass: not terribly. She'd seen that once, and for the record, reasonability was the last thing on anyone's mind at the time. \n\n'Hmmm, sanguinites, I bet one of their parties would do wonders for my mood.' Ugh, no, she wanted this one, and for some inexplicable reason, only this one. Damn.\n\n\"Well?\" She asked testily, plagued by thoughts of sangunites and were-lions, the combination of which was making her uncomfortably hot around the proverbial collar...among other places. His face took on a pained expression and he looked away at the ground next to her. \n\n\"Inanna...\" his voice wasn't much more that a whisper. It sounded pained. Her hackles dropped almost instantly. Her accusatory finger was removed and replaced with a soothing palm instead. \n\n\"Yes Feric?\" she encouraged, her voice almost as soft as his. Those green orbs flicked up again, catching her gaze. His eyes were filled with a myriad of expressions and emotions, most of which blended together in a way that made them unrecognizable. But she did recognize a few, and that was enough for her. \n\nHer other hand came up to his chest as well and smoothed up to his shoulders and back down again as she pressed lightly into him, her head still tilted up to his. He stared down at her, and though he was clearly conflicted about something, she could see her own intense longing mirrored back at her. She could also see his fingers twitching in the corner of her eye and felt the very real, very hard, evidence of his arousal pressing into her stomach as she crushed in a little closer. \n\nHer own breathing had become some what labored and her fingers trembled imperceptibly with the power of her arousal as she slid one hand up the side of his neck and under the loose waves of his hair, twining her fingers at the nape and gently, instinctively, drawing him closer. \n\nHe gave her no resistance, his eyes darkening with lust as their lips met with a soft groan of mutual want. \n\nHer mind hissed in approval and she moaned softly as she felt his hands finally make up their mind and reached for her, taking her first by the hips, then sliding slowly up her waist and back. He pulled her closer as she ran her tongue lightly over the crease of his lips, teasingly asking permission. \n\nHe granted it, and she blissfully proceeded to taste and explore the warm heat of his mouth with hers, her eyes falling closed with pleasure. He groaned into the kiss as her tongue playfully mated with his, his hands fisting into the light material of her shirt. \n\nShe gave a little whimper of delight as he took over the kiss and his movements become hungrier and more demanding, his mouth devouring hers with unrelenting intensity. She had to struggle not to get lost in that kiss as he reduced her to a cooing pile of desire. \n\nAfraid to lose their momentum she wasted no time in loosening his belt and spreading the top of his robe open to run her hands possessively over the swell of muscle that covered his chest and wonderfully defined stomach, once again marveling at the erotic perfection of that body.\n\nShe slid one hand down the grooved center, following the light line of silky hair that trailed its way over his abdomen and beneath the loosened belt that was now barely holding the rest of his robe together. \n\nThey both gasped as her fingers found the smooth head of his cock hidden beneath. She opened her eyes just long enough to see that his were shut tight and his face contorted in an expression of pained ecstasy. She licked and nibbled at his bottom lip, pulling it taunt with her teeth as she wrapped her fingers around his hard length with a firm squeeze. \n\nIt throbbed in her hand like a beating heart. She shifted her hips anxiously, already feeling her own sex respond, pulsing in time with his: hot, wet and aching. The desire to feel him inside her was all consuming, terrifying even, or would have been if she hadn't already been too desperate to care. It was all she could do to remind herself to breath as she continued to stroke his smooth length and imagined it spreading her open one more time. \n\n'Oh just once more, oh please...please...' \n\nSuddenly his gripped changed and he took her by the shoulders, pulling away from her and stepping backwards toward the wall. He slipped from her fingers, and she groaned at the loss. \n\nShe blinked a few times, remembering herself...and the plan. That's right, she came here with a plan. Must stick to the plan. She pulled herself together and went with him, walking him backwards as he half-heartedly held her at bay.\n\n\"I can't...\" he breathed out as she pressed into him once more.\n\n\"I beg to differ.\" She breathed back, trailing her lips along the underside of his jaw. One hand deftly loosened the ties of her specifically chosen linen pants while the other began to squeeze at the bulge under his robes. One of his own hands reached down to stop her, but she caught it and pressed it against her bared stomach with hers over top, guiding it under the material until she felt his hand cup the mound of her sex. \n\nA soft gasp escaped her lips and he groaned as she pressed one of his fingers between the slick folds with her own. She arched her hips against his hand, instantly wanting more. His fingers curved upwards, searching for purchase inside of her even as he shook his head no. \n\n\"I can't...we can't do this...you don't understand...\" his voice was a whispered groan.\n\n\"Then explain it to me.\" Her mouth was pressed up against his jaw, her teeth nipping at his skin. His eyes were still closed, and his hips rocked unconsciously against her hand, much as hers were grinding against his.\n\n\"Ina...damn it, I can't explain...not here like this..\" \"Why not?\" She groaned. Gods, she could feel the heat of him throbbing through the robe. He was so hot...so hard...\n\n\"I want you too much.\" He gasped, as if it made any sense, what...so...ever. \n\nHer laugh sounded more like raw sob as it tore form her throat. \n\n\"Tell me why that's bad?\"\n\nHis fingers had pressed into the entrance of her now soaked cunt, the thick tips forcing their way past the tight ring of muscles. She clenched down, making both of them moan, her from the wave of stomach tightening sensation it caused, him from the promise of that taut grip wrapped around something else. \n\nShe quit nibbling on his ear to look up at him for an answer. He gave it to her in the form of a hard kiss that took her breath away and left her clinging to the edges of his half open robes. She rocked her hips impatiently and panted his name out against his lips, immediately regretting it when, at the sound of her voice, he gasped and broke the kiss, pulling his mouth and hands from her body. \n\nEvery inflamed nerve in her body screamed out in protest and her last rational thought went up in flames like parchment on a bonfire.\n\n\"Damn it Feric. I need y-...this.\" Had she almost said that she...admitted 'That'...out loud? God, who was this man? What the hell was he doing to her? And more importantly, why wasn't he doing more?\n\n\"Please\" she begged, \"I can't take it.\" She couldn't help herself, couldn't stop it from slipping past her lips. What the hell was wrong with her? This wasn't like before, this was worse, ten times worse. He had her begging. No one made her beg. Damn him. \n\nThere was that pained, almost apologetic expression again. He didn't need to be sorry, he just needed to start making up for it. She was more than willing to let him. She pressed forward, but he only swung her around and pinned her to the wall she'd backed him into. \n\n\"I'm so sorry Inanna.\" He wasn't looking her in the eye but hanging his head. He too was breathing hard and she could feel his hands tremble faintly, though it was barely perceptible since her own body was vibrating like a plucked string drawn to tightly across a bow. \n\n\"I didn't mean for this to happen.\"\n\n\"Then fix it damn it.\" She growled, not completely understanding what he was talking about, nor completely caring. Her whole existence was dominated by a single thought. Scratch that, make it two thoughts: 'Him' and 'Now.' \n\nHis eyes shot up to meet hers and the barely restrained hunger that shone out at her made her whimper and arch eagerly away from the wall, her hands reaching out for him again, roughly yanking the rest of his robe open. She groaned low in her throat as his cock sprang free. He caught her hands too late, but managed to pin them over her head before she could make any further progress. The feel of the smooth cold wall against the overheated flesh of her hands and arms as her loose sleeves fell away caused another shiver to run through her. When it combined with his tight grip and fiery gaze she was sent over the edge and reduced to a quivering bundle of nerves. \n\n\"I can't fix it.\"\n\n\"Oh yes you can.\" She groaned out, twisting in his grip. He was beginning pant again. He kept her hands pinned over her head with one hand while the other slid down her arm and over one breast where it lingered before slipping to grip her waist. \n\nHe leaned into her, brushing his mouth against her sensitive ear sending another series of electric shivers down her spine. Did he know what that felt like? He had to. But he remained still, his head bowed into the crook of her neck. She could feel the tension in him, the conflict. \n\n\"What are you afraid of Feric?\" She squirmed again, fearful he'd regain his composure too soon and leave her to suffer alone in this state. \n\n\"If being with me shames you, I swear I won't say anything. No one needs to know.\" \n\nHe shook his head and turned to look at her once more.\n\n\"No. Never.\" The vehemence in his voice stunned her. \"I'm...I would be proud...believe me, but this...this isn't as simple as you think it is.\"\n\n\"I'll make it that simple Feric.\" They stared each other down. He finally gave her a small shaky smile.\n\n\"I fear it's too late for that.\"\n\n\"Uh, for the love of...I'm not proposing here, I'm just asking you to finish what we started. Please...\"\n\nHe let out a broken laugh and closed his eyes. \n\n\"Feric?\" He didn't respond, but the fingers around her wrists tightened.\n\n'And therein lay the problem', he thought with another bitter, silent laugh. \n\n\"Feric?\" He looked into her eyes again and let out another groan. The heat, the pleading, the raw lust and desire he saw in those blazing garnet eyes, saw written across her features, and felt in the way she writhed against him broke over him once more, calling out to his own insatiable hunger. \n\nThat wasn't true, it wasn't totally insatiable. There was one thing that would satisfy him. \n\nHe let out a growl and pressed himself unthinkingly against her body. She slid a leg up against his, wrapping it around him, cooing, and moaning, and begging. He could smell her pheromones now, distinctly, mixing with her natural spice and the powerful scent of her arousal. It made his mouth water and his knees weak. \n\nHe slid a hand up along the smooth length of her stomach and under her loose shirt to cup the round, pert breast beneath. Her skin felt like warm velvet. He ground his hips against her, feeling nothing between her hot sex and his naked cock except one fine layer of linen. \n\nHow easy that was to remedy. How easy it would be to claim her, here, now, completely, forever....",
        "\"No...\" he gasped again, pulling away.\n\nShe cried out and the sound cut deep into the core of him. It sounded terrified. He could feel her need. It emanated from her, matching his, singing out to his...oh god, what had he done? \n\nHe knew then, unequivocally, that she could feel it too, the effects of the mating. She felt that same unrelenting pull, and it was making her just as crazy as it was making him. He was ripped in two, torn between fear and desire, between his fury and guilt for having done this to her and the joyous high of knowing she really was his, irrevocably. \n\nHe had released her at some point and now stood over her, his hands propping him up against the wall behind her head. He felt her arms wrap about his neck, and her body melt into his.\n\n\"You still owe me Serjo.\" she whispered hotly against his ear, sending a shiver down his spine. He did, and she had no idea just how much. He was determined to suffer for what he'd done, but it would be cruel to withhold satisfaction from her when it was he who had caused the need. He bent his head, trailing kisses as he went, along the curve of her ear. She shivered against him. He purred back.\n\nHe brought one hand back down around her waist, fitting her lithe frame into the crook of his arm, while the second slid to the loosened waist of her pants. He didn't stop there, and she let out a soft cry as the tips of his fingers found the top of her slit and pressed against the hard nub hidden beneath. \n\nOne of her own hands slid down to return the favor, but he caught it and wrapped it back around his neck. He returned her questioning look with a deep unhurried kiss, not letting up until he felt her fall into him once more. \n\nHe slipped his hand over her mound, tugging the edge of her pants lower at the same time, giving him freer access. Her arms tightened around his neck as his fingers once again found and parted her slick center and delved deeply inside. He shuddered at how hot and wet she felt wrapped around his fingers and struggled to ignored his own insistent and demanding arousal. \n\nShe writhed in his arms, making low, warm, almost purring sounds which only drove him further into distraction. His hand moved on its own between her thighs, rapidly increasing in pace, his thumb seeking and finding her swollen clit and grinding it furiously, eager to wrench her pleasure from her. \n\nHe wanted to hear her cry out again as she had in that field. He wanted to hear her whimper and moan in release, in ecstasy. He wanted to be the one to give that to her, wanted it more than he wanted his next breath. She let out a small cry and buried her head against his shoulder. He groaned.\n\n\"That's it baby,\" he encouraged in a heated and broken whisper against her ear. She shivered again and her hips bucked, pressing her perfect little body tightly against his. He could feel her whole body tighten, trembling with sudden tension. He could feel his own body throb in excited response and his grip on her waist tightened involuntarily.\n\n\"Cum for me.\" He gasped, and, as if on command, her hips jumped frantically against his hands and she muffled a long high cry against his shoulder. She shook and twitched like a leaf in a wind storm, and he was forced to squeeze shut his eyes and grit his teeth against the need her release stirred in him. \n\nThere was nothing in that moment more wonderful or more torturous than the feel of his alluring little mate climaxing in his arms. He held her tightly, as much to keep her safe in the throes of her passion as to occupy his hands so that he did not simply rip the rest of her clothes from her and answer the calls of instinct right where they stood. \n\nWhen her trembling subsided he pulled away slowly, and with great difficulty to look down into her face. She looked back at him with half glazed eyes. He cupped her face gently and deepened his gaze, as if with that one look he could say all that he wanted and feared to tell her. \n\nHer eyes darkened and turned questioning. He leaned forward, drawing her into a long intense kiss, full of both desire and the bitter knowledge that it was likely the last chance he'd have to do so.\n\nInanna pulled away with a gasp for air as he finally broke his kiss. She was well acquainted with lust, she'd seen it often enough, and in many different eyes, but the look in Feric's eyes as he gazed once more down at her was almost frightening in its intensity. It was like a physical blow that left her breathless and weak. Yet when he touched her, his movements were heart-achingly tender. He brushed the pad of his thumb over her cheekbone.\n\n\"I'm sorry.\" He leaned in before she could respond and pressed his warm lips to the shell of her ear. \"I will make it right, I promise, whatever it takes. And I hope you will...that you can, forgive me.\"\n\nHe pulled away, closing his robe and turning at the same time, and swept out of the room leaving her staring blankly after him. When she finally blinked herself back into reality she slumped against the wall and slid slowly to the floor. She stared for a long while at the darkened doorway, her brow furrowed in confusion.\n\n\"What...was that!?\"\n\nShe rolled her eyes up to the ceiling and let out a mournful groan.\n\n\"I need a better plan.\" \n\nA delicious left over shiver ran it's course through her body, making her wriggle against the wall in pleasure and frustration. She smiled faintly. \n\n\"A much better plan.\"\n\n**\n\n\"So...\"\n\nFeric looked up to see his sister looking down on him, a toddler on one hip, her balled up fist on the other.\n\n\"So?\"\n\nShe smiled softly, but deviously.\n\n\"Don't play coy little brother. Tell me about her.\"\n\n\"Who?\"\n\n\"oh please.\" She rolled her eyes and shook her head, making the impish Sonja giggle. She smirked and shifted the girl to the other hip. Sonja thrust her head against her mother's shoulder and stared up at Feric through her golden curls as he stood. He returned the look and winked at her.\n\n\"You sure that's appropriate?\" He asked and nodded at the little one. She rolled her eyes again.\n\n\"I'm not asking for details...I just want to know why you're mopping around like a kicked dog.\"\n\n\"I have a lot on my mind.\"\n\n\"I bet.\"\n\nHe frowned at her. \"The hunters...\"\n\n\"Are nothing new.\" She interrupted. \"This...\" she waved a general hand at him, \"is. Listen you are clearly miserable, and none of us are deaf or blind, nor are we stupid. If you want her, tell her. It's pretty clear she isn't going to turn you down.\"\n\nHe snorted. \"It's not that simple.\"\n\n\"Nonsense. I can't think of anything simpler.\" He returned her smarmy look with a glare and opened his mouth to respond, only to close it again a moment later. He wanted to tell her, if he could tell anyone it was her, but he just couldn't bring himself to. He sighed instead and glanced away. When all this was over, he'd figure it out. Find some way to fix his mess...whatever that meant. \n\nHe glanced back when he felt a hand on his arm. Bella was giving him a pitying look. He must really look like hell, he almost never got that look from her.\n\n\"Fine...don't tell me, but please, promise me you'll at least consider it. You're not doing anyone any favors getting yourself tied in knots over this.\" He nodded. What else was he supposed to do?\n\nShe left, and he decided to take a walk. He intended to make a perimeter check, but as soon as he neared the edge of the woods a number of voices caught his attention. \n\nIn a clearing, not twenty feet in, was Inanna with bow in hand and Lucas standing close by watching her intently. He could hear as he neared that she was explaining something, occasionally smiling and touching his shoulder as she spoke. He felt a momentary pang of completely unreasonable jealously which he quickly shook off as he edged in closer. Behind the two of them sat Aina with talon sharing her rock and Ambrose nearby whose mop of orange-red hair identified him immediately. To another side lay Mori stretched out on her flank in a patch of sun, her eyes slitted barely open, and next to her, in the same warm looking spot lay Owyn, though he was wide awake and upright, watching the proceedings with interest. \n\nHe could see and hear now that Inanna was demonstrating her grip on the bow and talking constantly as Lucas watched carefully, occasionally interjecting with questions. \n\nHis back was to Aina so he couldn't see her and Talon's growing smiles. Feric turned his gaze towards the spot where theirs was directed and grinned despite himself. They were looking at the arrows she was shooting into a distant tree. It wasn't until Ambrose finally let out a snicker. Lucas rolled his eyes and turned to him imperiously.\n\n\"I don't mind an audience, but please hold off on the sniggering until after I've made a fool of myself.\"\n\nInanna for her part was keeping an impressively straight face. When Owyn let out a growling purr as well Lucas frowned and turned to see what they were all looking at, a rare grin breaking across his face as he was greeted by an arrow drawn happy face smiling back at him. \n\nIt was a gratifying sight for Feric. Owyn, Ambrose, and Mori had joined them at a young age, and Talon was still quite young, having been found as a small kitten, his unusual name owing from the fact that Cyrus, drawn by his mewling, had near literally pulled him from the talons of a greater mountain eagle. Lucas, however, was already thirteen when they came across him and had been surviving alone for years before that. \n\nIt wasn't that Lucas was ever troublesome or difficult, he was in fact the opposite, always quick to make himself useful and ready to help without complaint, but he was a little morose in nature. He generally kept to himself and carried himself in silent seriousness, rarely laughing or smiling, and only seemed to speak to Owyn and Aina with any regularity. \n\nOf course Aina he had latched onto immediately, both because she was the closest to his age and the one who had found him and brought him to the pride to begin with. Aina didn't seem to mind his almost constant presence so no one else had either. \n\nThough, he thought with a frown as Lucas took up the bow, they were both technically adults now...\n\nHe wasn't sure he liked where his thoughts were taking him. Unfortunately they were going there more often these days. \n\nHe started as Aina let out a cry.\n\n\"Lucas!\"\n\nThe others, save Talon who was struggling to pull Aina's hands off his eyes, were laughing heartily. \n\nIna grabbed the bow from him, though her own grin was a mile wide, and gave him a playful shove before releasing several carefully placed shots and obscuring his rather suggestive masterpiece. \n\n\"You better watch it mister.\" Aina warned Lucas as she let Talon finally pull her hands from his eyes with a bitter complaint about not having any fun.\n\n\"What?\" He asked innocently, with a not so innocent look on his face.\n\nShe stood up with a rare smirk on her face. \n\n\"I said you better watch it or I'll be forced to give you a lesson in manners.\" \n\nHe arched a brow.\n\n\"And how do you propose to do that?\" Her smile broadened into a grin as she untied her robe, tossing it to the side. He couldn't see Lucas's face now, but his daughter looked gleefully ferocious. He watched her with a mixture of pride and sadness. She looked so much like her mother, and at that moment so free and youthful, like she should be, not living in fear in sunless dungeons.\n\nInanna snatched up the arrows on the ground and moved to the edge near Ambrose and Talon, whose hair she ruffled absently as she turned and sat. \n\nHe saw her smile and a glow of delight in her eyes that once again seemed to reflect his at the sight of the two young lions circling one another in the bright clearing. \n\nLucas had a little size on her, but she was strongly built and compact. It was not an unbalanced fight. \n\nIt had been a long time since he'd seen these two go at it, and he was curious to see the results. They were both cautious, so it was a long time before Lucas made the first tentative move. They hesitantly lunged and dodged earning heckles from Talon who was anxious to see a more action than they were willing to offer. Finally Aina managed to get in on Lucas's flank and charged at him, knocking him over and sending them both tumbling in a blur of activity until he managed to get on top and she responded by throwing him off with her hind legs. Lucas slammed hard into a nearby tree and landed slumped on his side, his back to the rest. He seemed very still. \n\nAina watched him carefully for a moment, then let out a plaintive yowl and padded close, nudging him with her nose. \n\nFeric had risen from his place, as had Owyn and Ambrose. However, before any could approach, Lucas rolled abruptly, knocking Aina's legs out from underneath her and was on her in the blink of an eye. With a snarl he clamped his teeth over her suddenly exposed throat. She went limp in submission, and he backed off slowly.\n\nIna clapped and grinned from her seat. Aina rose, no longer a lion, and gave Lucas a dirty look, slapping him lightly on the shoulder as she passed.\n\n\"Cheater.\" \n\nEven as she pulled her robe closed Owyn was already entering the ring prowling around Lucas with a playful growl. Talon was delighted, and ran over to prod the sleepy Mori awake, wanting to make a tournament out of it. \n\nFeric's eyes were drawn back to Inanna who was speaking softly to Aina and Ambrose, both of whom were listening with interest not unlike what Lucas had shown in his archery lesson. \n\nShe held out her palm in front of her and a small red mage light appeared in her hand. She said something else which he couldn't make out over the growls of the two male lions still wrestling between him and them. Ambrose clearly looked excited but Aina laughed and shook her head. Ina smiled slyly and said something else, at which Aina's amusement faded.\n\nFeric was seriously considering circling to the other side of the glade to eavesdrop when Ina took his daughters hands in her own, turning them palm up. However a rustle in the woods behind him turned his attention before he could make up his mind to do it. He looked over to see Cyrus emerge from the heavy brush and stalking up behind him. They greeted one another and Cyrus silently communicated that his scouting had been uneventful. Feric was unsurprised.\n\nIt would be at least a week before another group of hunters were sent out after them so he wasn't expecting to find anything. They would have a brief reprieve for a few days at least. Still, as good as Mirisa was, he was loathe to leave his family for more than a couple of days at a time. They would have to move quickly if he wanted to see this fort Inanna had discovered. She was hopeful that they might be able to recover information on who was doling out the orders, if not an explicit location.\n\nHe turned away from the glade, leaving Cyrus to watch the wrestling. Feric felt he needed to go with her, to see for himself what they were up against, but after the previous evening he was hesitant to let himself alone with her for so long. \n\nIt would be two days to reach Kavatch, and that didn't include any stops, and just as long to return. Could he handle being alone with her for nearly a full week, with no excuses. He shuddered at the thought of having a repeat performance of last night. He knew if it happened again there would be no way he could resist her. Not that he'd done a great job of it so far.\n\nHe'd been avoiding her all day, but sooner or later he was going to have to bite the proverbial blade an either tell her why they couldn't continue with this, or at the very least make it explicitly clear that it couldn't happen again. It was a conversation he was not looking forward to having.\n\n**\n\nAmbrose had been a natural with magic and seemed to have an impressive reserve of power, as she suspected, though to her surprise Inanna had discovered that Aina possessed an even deeper well of energy to draw from than he did...greater even than Inanna had. \n\nThey were both shocked and delighted when she managed to get them to heal a small self induced cut on her hand. It wasn't even very hard, really only a matter of teaching them how to draw on that power and externalize it. It wasn't hard for her either since she'd used her little magic trick to get a read on both of them. \n\nMysticism...the lame duck of the magic world, but great at parties. \n\nInanna made a sour face and shook out one of her silk undershirts before refolding it carefully for packing. That was her other great skill. Illusion would have been crazy fun, alteration and restoration unbelievably useful, and conjuration...well maybe not, but still a lot more impressive than limp wristed mysticism. \n\nHer great grandmother had been a wise woman, so she blamed her. What would she care anyway...she was dead, and the old bat was too good to answer her summons as it was. The battleaxe. She shook out another shirt violently before pausing and taking a breath. \n\nShe didn't really care about the mysticism, and she couldn't be bothered with Muthsera grandma and her pestering her about not training with the current Wise woman. She may not answer summons, but she did occasionally show up for fun to torture her progeny.\n\nNo she was ticked off at someone else entirely.\n\nShe had kept herself busy and distracted playing with the kiddies, keeping her mind off other things. Other annoying, frustrating, and distracting things. That is until said 'thing' had shown up five minutes ago to inform her that they were leaving together tomorrow morning for Kavatch in a businesslike manner, barely making eye contact, and not sounding to thrilled about the trip himself. He sounded even less thrilled when she told him they had to make a side trip to Chorrol on the way.\n\nIt had briefly crossed her mind to throw something at him, but she'd kept her mouth shut and just nodded, and returned his business-likeness with her own. \n\nShe couldn't figure out this hot and cold routine of his, but, she had decided, she would make use of the coming week to get him over it. It wasn't like he didn't have every reason to want her, what sane person wouldn't? Honestly!\n\nHe DID start it after all. So what the hell was his problem? God-damn-bloody-sneaky-drop dead gorgeous-fetching- s'wit of a lion!\n\nShe adjusted her pack violently on her lap and started making her inventory. She gentled her movements, not wanting to break anything, but she still wore the same sour expression. \n\nShe usually worked alone, so she'd have to be extra careful with what she took. She liked to travel light, but she figured a couple mild healing elixirs might be in order, not to mention a few fatiguing potions for her arrows. They can't catch you if they're too tired to run after all. On top of that went her rope and her tack. \n\nThe three R's of adventuring: ropes, rations, and restoration. Don't leave home without them.\n\nShe'd been hoping to pull a 'sneaky thief' like she had with the vamps, but with Feric she figured there were going to be some casualties...which was ok to. It might get a little messy, but so long as they took their time it wouldn't be a problem. They'd just have to take them one by one, nice and systematic. \n\nShe huffed. Either this was going to be fun as hell, or the longest week of her life. She didn't have a great feeling about it. \n\nHer only consolation was that she'd be meeting Max for a drink at the Roxy on the way back. She'd probably need it by then. \n\nShe smirked into her pack, maybe she should invite Mirisa to join them there...it was only natural that she'd want to meet him, as beta and what not. She grinned. \n\nWell as long as someone was getting laid, that would make her feel a little better. Her grin faded. Who was she kidding? No it woulnd't. This was going to be rough. ",
        "She lay her shirts on the top of the pack and closed the flap, cinching it tightly. \n\nShe looked around the empty room and listened to the now oddly familiar sound of clicking claws and soft murmurs and growls coming from the hallway. Her grin came back. Yes, it was going to be really, really, really rough. \n\nShe'd see to that personally. "
    ],
    "authorname": "Enithermon",
    "tags": [
        "weres",
        "lions",
        "fantasy",
        "elderscrolls",
        "dark elf",
        "dunmer",
        "magic",
        "action",
        "inanna",
        "feric"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/hunting-the-hunter-ch-03"
}