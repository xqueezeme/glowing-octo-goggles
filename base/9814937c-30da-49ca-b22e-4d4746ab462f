{
    "title": "Binding Ashes",
    "pages": [
        "There is no explicit sex in this story. I wish to thank the people who helped contribute to and edit this story, per their wishes, they remain anonymous. No part of this story may be published at any other site without the express permission of the author. \u00a9 October 2, 2006\n\n********** \n\n\"Richard, we are there,\" Daryl informed his passenger as the limo pulled up in front of his favorite restaurant. \n\nNot surprisingly, as Richard leaned forward to retrieve his cane he was once again captivated by its artistic design. The beautifully handcrafted wolf head created by interwoven gold and silver never ceased to fascinate him.\n\nHe had purchased the walking stick years ago to provide others with the perception he was mature for his age. Although the passing of time had cured Richard's problem of looking older, he had carried the cane at his side for so long, he would feel naked without it. He still derived great pleasure from the many compliments it received. Richard smiled as he paused to run his thumb over the handle. \n\nWith his overcoat draped securely over his arm his hand slipped down to firmly grasp the dark wood grained staff as he prepared to exit. When the limo door swung open, Richard stepped out, stretching his stiff muscles as he rose to his full height. \n\nGone were the days of bounding from the limo, charging up the steps and sauntering into the restaurant. His youthful exuberance had been systematically displaced by the cumulative effect of his forty-four years. \n\nA smile, which Daryl easily recognized as appreciation, crossed Richard's face. It wouldn't be Richard without the beacons of his personality, his array of smiles. \n\nDaryl had been with Richard through the better part of his life. While serving as his personal chauffeur and valet he had become Richard's close confidant and friend, standing at his side when needed.\n\nAs Richard took a step towards his favorite restaurant a young woman suddenly appeared in his path. Before Daryl could react she requested, \"Sir, could I borrow a couple of dollars? I haven't eaten in days.\" \n\nDaryl immediately moved to intercede, but Richard blocked him with his cane, never taking his eyes off the girl. It was a move to let Daryl know he didn't feel threatened. Daryl stepped back, remaining close enough to intervene if necessary. \n\nRichard took a moment to observe and study the young woman. She appeared to be around twenty, not beautiful but not unattractive. It would be easier to judge if her smudged face and matted hair were bathed and cleaned. A few additional pounds on her too thin frame wouldn't hurt either; it was quite evident she didn't eat on a regular basis.\n\nThe one thing that surprised him was she actually appeared to be requesting, not begging, as was the norm for most street people. With an inquisitive smile, he asked, \"May I inquire what everyone calls you?\"\n\nHesitating, she looked at him with more than just a little suspicion before relenting, \"If you mean what's my name, it's Amber.\"\n\n\"Hmmm, a very pretty name for a young lady Miss Amber,\" he replied with an unnerving smile that made her feel somewhat uncomfortable. \n\n\"Well it's my name. Now are you going to lend me some money or not?\" She scowled trying to force the issue. The last thing she intended to do was stand there and let some well dressed, well educated, and well financed jerk make fun of her. She had experienced enough of that on the streets to last a lifetime.\n\nWith a smirking grin, Richard hinted with strong suggestion, \"And Miss Amber, just what would you be willing to do for a few dollars?\" \n\nHer eyes almost glowed with rage as she spat, \"FUCK YOU and all the other assholes in the world. I would rather starve than degrade myself for food... or money... or anything else.\" \n\nShe spun on her heel and took a step to leave just before Richard inquired, \"I thought you were hungry Miss Amber.\" \n\n\"Not if I have to perform for it,\" she retorted over her shoulder.\n\n\"Miss Amber, if you were willing to do that, I would be the one walking away,\" he replied. \"Now if you are hungry, there is food just inside that door, if you're not, I am. With or without you, I'm going in to eat.\"\n\nAbruptly she came to a stop, spun around, and came back to stand in front of him. Looking up into his face, staring eye to eye, she inquired, \"No strings attached?\"\n\nWith an amused smile, he said, \"None... other than you are required to have an appetite. From the looks of you, I don't think that will be a problem Miss Amber.\"\n\nEven though his smile made her feel comfortable, she still looked for signs of deceit. The face staring back at her was full of sincerity and strong character molded by years of living. His warm smile helped make her decision. \n\nRichard held out his hand towards the restaurant, she spun and headed for the entrance. He smiled in awe, 'She seems to have that spin down perfect.' \n\nJust as her hand reached out to open the door, Richard leaned around and pulled it open for her. She looked up into his face as he said, \"Miss Amber, a lady never opens a door in front of a gentleman, if she does, she's not a lady. If he doesn't open it for her, she needs to be with someone else because she's not with a gentleman.\" \n\nShe only grunted her acquiescence as she slipped through the door thinking, 'Who cares what nonsense he spouts as long as I get to eat, I'm starving.' \n\nAlthough never forward or arrogant, Richard had always had a distinctive but intangible quality in that his very presence demanded the maitre d's attention. Amber beat him to the punch this time. \n\nThe maitre d' spotted her immediately as she came through the door and moved to intercept before she could enter the dining room. It was quite apparent she was in the wrong place.\n\nRichard could see Amber brace for what was coming. This scene had become part of her everyday life in recent years; having been thrown out of several places of business, not just restaurants.\n\nAs the maitre d' was about to confront Amber by blocking her path, Richard spoke, \"Joseph, this is Miss Amber. She is my guest and will be dining with me tonight. Amber, this is Joseph, the finest maitre d you will ever have the pleasure to meet.\" Richard smiled confidently, knowing Joseph would grant his request.\n\nJoseph stopped, looked from Amber to Richard, then back to Amber before saying, \"Of course, my pleasure to meet you Miss Amber.\" \n\nWide eyed, Amber was impressed with the unspoken display of power she just witnessed.\n\nJoseph continued, \"Your normal table Sir?\" \n\nRichard's nostrils picked up a slight whiff of Amber before he thoughtfully replied, \"Not tonight, I think we need the privacy of one of your more secluded tables.\"\n\nJoseph cocked an eyebrow as he detected the same odor, \"I understand, this way please.\" He led them to an isolated corner table. \n\nAfter pulling out her chair and seating Amber, Joseph hustled off with a slight shake of his head. Richard took a seat beside Amber but sat with his back to the wall... he didn't sit across from her. With all that had just happened, she didn't feel rejected. Amber liked that. \n\nShe looked around and discovered everyone was staring at her. Amber knew she looked a mess, it was so embarrassing. \n\nRichard was watching and knew instantly what she was feeling. He stood up, moved to the other side, pulled out the chair and said, \"Maybe you would be more comfortable sitting on this side Miss Amber.\" She slid to the other chair in a fluid and graceful move. \n\nRichard switched to her previous chair to maintain his proximity to her, again making her feel at ease. With light hearted merriment Richard smiled, \"Now Miss Amber, you no longer have to stare at those ugly people.\"\n\nHis witty comment caused her to smile. While leaning slightly forward, she modestly dipped her head and softly whispered, \"Thank you.\" \n\nAlthough he had switched chairs, Richard still kept his back to the wall. He evidently was cautious and liked to observe what went on around him. After living on the streets, Amber considered that a very good trait, even though he still seemed kind, courteous, and... generous.\n\nShe felt compelled to ask, \"When we were outside, why did you ask what I'd be willing to do for money? It's easy to tell you don't have any real desire or need for me.\" \n\n\"Simple,\" he said. \"If you were just hustling for money, I had nothing to offer. If you were truly hungry, then it's my pleasure to try and help, Miss Amber. By the way, never mistake gentlemanly behavior for a lack of desire.\"\n\nAmber immediately knew she liked this man. Thanks to him, she was going to eat all she could. After all, she never knew when the next meal might be. \n\nRichard adamantly said, \"After the waiter takes our orders Miss Amber, I do insist you make a trip to the ladies room to wash your face and scrub those hands before we eat.\" \n\n\"No problem,\" she stated while cocking her head and raising an eyebrow. \"Now tell me what everyone calls you, more simply, what is your name?\"\n\n\"Richard... that is my name... and what everyone calls me,\" he replied with a warm smile.\n\n\"But why does everyone call you Richard? They should be calling you Mr. whatever your last name is.\"\n\nWith a knowing smile, he enlightened her, \"I have always insisted that my friends call me Richard. It creates a more relaxed atmosphere... better for the digestive system. Something we are both going to need tonight Miss Amber.\" \n\nHis lighthearted attempt at humor caused her to laugh. Richard smiled at her amusement, but enjoyed the sound of her laughter more.\n\nAfter placing their orders, Amber excused herself and went to clean her face and hands. As she exited the powder room, Amber nervously hesitated. She was surprised to find herself a bit anxious that Richard might be disappointed after seeing her face without the camouflage of dirt and grime. \n\nAmber stood at her chair not understanding her desire to turn and run. Richard looked up; there was no way his bigger than ever smile could be mistaken for anything other than approval. Amber was pleased. She suddenly felt glad to be there. With a grin of her own, she slid into her chair. Her only wish was to take a full bath and brush her hair.\n\n**********\n\nDuring the meal and through the course of the evening, Richard was able to get her to open up about her life and the circumstances that forced her to live on the streets. It was not only amazing but fortunate she had been able to avoid the many pitfalls that trap most young people in her situation. \n\nRichard learned her parents died when she was fifteen. With no relatives and being a minor, she was placed in a foster home. The first one wasn't bad, the couple was very nice and she liked them.\n\nA year later she was moved to another home where she felt uncomfortable. The husband kept looking at her with more than just concern for her care. He kept finding excuses to barge into her room, especially at times when she was dressing for school or an important event. \n\nWithout pretext, he cornered her one day, running his hands over Amber's body against her will. He was too big for her to fight off. His wife walked in just in time to save her from being raped. Amber never knew what happened; she fled out the door leaving the wife screaming at her husband. \n\nAfter hitting the streets, Amber made a point of avoiding anyone associated with authority, especially the police. Her biggest fear was ending up in the same situation, only next time, she might not get the opportunity to escape. \n\nThe street had become home to her, so much so, she now felt on familiar terms with it. Amber had adapted so well to its hostile environment and become so adept at survival, it was now second nature to her. \n\nYet through it all, she never used her body or suffered the loss of her dignity and self respect to survive from day to day. There had been many close calls. Between street smarts and luck, she was able to duck and dodge every attempt to drag her into those dark recesses where most street kids end up. \n\nRichard found himself fascinated by Amber and her story. It made him conscious of how guarded his life had been. Without risk or threat, he had been provided every opportunity life had to offer. He pondered, 'What a difference the fate of birth can make in two individuals.'\n\nThe meal was delicious. She could easily understand why this was one of his favorite restaurants. \n\nAmber insisted, \"Please give me a name and address so I can repay you. I don't intend to live on the streets forever. When I get a job and on my feet, I will send you the money.\"\n\nRichard, with his perplexing smile said, \"Make you a deal Miss Amber. When you get a job and on your feet so to speak, instead of sending me money, repay me by lending a helping hand to someone who truly needs it. If you promise to do that, then consider us even.\"\n\nNow she wasn't sure she couldn't love this man, if she even knew what the word love meant. It had been so long since she cared for anything other than where her next meal would come from. \"It's a deal, you have my word on it,\" she promised.\n\nRichard sat reflecting on things before asking, \"Miss Amber, how would you like to take a full bath and get some new clothes before hitting the streets again?\"\n\nHer eyes flashed immediate suspicion as they intently searched his face. She expected his next few words to wipe out her newly acquired image of his sainthood, leaving nothing but the cold harsh reality of her everyday life. To her complete surprise, not this time. Richard expected and was prepared for her misgivings about his proposal. \n\nHe countered her anticipation with that damned smile, \"Still no strings attached Miss Amber. If you are willing to take a chance by placing a little trust and faith in me, I'll take you to a place that is a wonderland compared to where you've been.\" \n\nStill unsure of his intent, she sarcastically queried, \"What and where is this 'wonderland' you want to take me. Once there, what would I have to do?\"\n\n\"The wonderland is called 'Wetap,' 'what' is my home, 'where' is nearby. You don't have to do a thing but enjoy my hospitality while staying as my guest Miss Amber,\" he responded. \n\n\"Mister, no one goes to that much trouble for a stranger, what's the catch?\" She was sure there had to be a net gain for him somewhere in his offer. \n\nHis smile continued to disarm her, \"Please call me Richard, I think we have gone beyond being strangers, it's easier to be friends Miss Amber.\"\n\nShe let her guard down and inquired, \"Wetap, what kind of name is that?\"\n\nHe chuckled, \"It's a long... but good story. Someday, if I get a chance I'd be more than happy to tell it to you, Miss Amber.\" With that said he stood, pulled out her chair for her and gestured towards the door.\n\nShe nodded goodbye to Joseph as he held the door open for them. He smiled and nodded back, \"It was a pleasure meeting you Miss Amber. I sincerely hope you have a nice evening.\" It felt as if she was in a wonderland already, people and places like this didn't exist in her world.\n\nThe evening breeze caught her face, making her skin tingle as she stepped outside. It felt good. For some reason, the waiting limo didn't surprise her; neither did Daryl as he came around to open the door. She could never recall having so many doors held open for her. \n\nWhile sliding across the luxurious leather cushioned seats, she felt slightly disoriented. In what seemed a surreal atmosphere, she thought, 'Damn girl, you could very easily get used to this. We haven't even left yet... how much more awesome could his wonderland be?' \n\nOn their way Richard explained Wetap was his home, designed and built to his personal specifications. She could tell by the tone of his voice that he felt great affection for it. His words left no doubt as to how wonderful he thought it was.\n\nIt was dark when they arrived at Wetap. Amber could see enough to know Wetap was a mansion sitting on perfectly landscaped grounds that were immaculately manicured. The outside was lit up enough for her to marvel at its beauty. She now felt it was a wonderland.\n\nWhen the limo stopped, Amber reached for the door handle. Richard quickly grabbed her hand, her heart skipped a beat in fear. She spun around but was relieved to find his calming smile saying, 'Relax, everything is fine.'\n\nAmber was temporarily startled before she understood Richard only stopped her to let Daryl do his job. As the door swung open with an extended hand, Daryl helped her out of the limo.\n\nSeveral people greeted them as they entered the mansion. Amber soon learned they were part of the household staff. While Richard was introducing her to each of them, Amber couldn't help notice more and more people were joining the line to meet her. Evidently, as word spread, more than a few had gotten out of bed for the occasion and were still dressed in their night clothes and wearing robes. \n\nAlthough she could easily see their respect and affection for Richard, Amber could tell they were equally startled and surprised by her and her appearance. They seemed to readily adjust to her presence as Richard informed them, \"Amber will be staying as my guest until further notice.\" \n\nThe final person he introduced was Maria, evidently head of the household staff. Amber could tell she had authority and Richard respected her. She made Amber nervous with her gaze which left no doubt as to her concern, wondering what this ragamuffin of a girl was doing in Richard's home. \n\nIn turn, Richard left no doubt about his expectations. He instructed Maria to personally arrange for Amber's needs, starting with a bath, maybe two. Amber glared at him to show her annoyance but his smile told her he was jerking her chain. He jokingly responded, \"Ok, just one, but since they are free, take two if you want.\" \n\n**********\n\nAmber thoroughly scrubbed until she felt clean, then she drained and refilled the huge tub with clean hot water, hot as she could stand. She soaked for what seemed hours. It was a luxury she hadn't been able to indulge in years. She had forgotten how good it felt. \n\nAfter the outer grime was removed, Maria took note that Amber had a quality of what could be called 'natural beauty.' As usual, Richard seemed to have an eye for seeing inside and beyond a person.\n\nAmber was shown the way to a beautifully decorated bedroom where Maria informed her, \"This will be your room.\" Needless to say, Amber was more than a little nervous. A young lady appeared with a set of brushes and proceeded to thoroughly brush out Amber's hair before leaving.\n\nAfter laying out a beautiful silk night gown and robe, Maria prepared to leave. In an almost panicked voice Amber rasped, \"Wait, don't leave.\"\n\nMaria turned and smiled, \"Do you need something else Amber?\"\n\nLooking lost and reflecting anxiety, Amber blurted out in confusion, \"Yes... no... yes... Ohhh, I have so many questions. Where is Richard? What do I do now? What's going to happen next?\" \n\nMaria just smiled, \"He has retired for the evening. I suggest you do the same. If I know Richard, you already have a full day planned for tomorrow. You will need all the rest you can get Amber.\"\n\n\"What do you mean a full day? Planned what? I thought I would be leaving in the morning. Where is Richard's wife? How is she going to feel about me being here? Please help me, I don't understand,\" Amber implored. \n\nMaria came over and sat down beside her. Taking Amber's hand in hers, she pulled Amber to a standing position in front of her. She began to undo her towel and then proceeded to help her dress in the silk night gown. \n\n\"First off, there is no Mrs. Richard, never has been. Richard never married. Believe me, you have nothing to be afraid of or concerned about. You could not be in a more secure or caring place than here at Wetap. Most of the employees and their families, including mine, live here also. Sometimes it almost seems like a dream. ",
        "If you desire to leave at anytime, you're free to go. Daryl will deliver you anywhere you wish, but if you stay, be prepared. Richard never rests. Every day is filled with living. He loves life and lives it to the fullest. \n\nWe assist by making sure he has everything needed to make his day complete; in the process we get to share in his love of life. Every day is an adventure for him and he so looks forward to each new day.\n\nNow get some rest. There will be plenty of time when you wake tomorrow to decide what to do with the rest of your life.\" As she tucked Amber into bed, Maria added, \"If you need anything, just give a couple of tugs on the cord hanging by your bed.\"\n\nOn her way out, Maria turned off the light. The bed felt so comfortable, all Amber remembered was her last thought, 'Maybe I'll hang around just long enough to see what Richard has planned.'\n\n**********\n\nThe servant's bell from Amber's room was ringing off the wall. Two young ladies burst into her room followed by Maria. Thinking there must be a major emergency, Maria immediately inquired, \"What's going on? What's happening?\" \n\nInfuriated, Amber squared off demanding, \"Where are my clothes? They were right there on that table last night.\"\n\nMaria sent the two young ladies back to their normal duties. Turning to Amber, she smiled with understanding, \"I took them to Gordon and told him to get rid of them. He deposited them where they belong, he threw them in the incinerator.\" \n\nGordon... Gordon, oh yea, Amber remembered, he was the butler looking guy when they came in the door. \"Who gave you the right to destroy my property?\" Amber demanded to know.\n\nMaria replied with a smile, \"Who do you think? Richard of course. But only after he told me to get your size and send for new clothes.\"\n\nAmber choked back tears as her emotions were unexpectedly blindsided by the impact of Richard's kindness and generosity. She sat down on the bed and turned her head slightly so Maria wouldn't see the extra moisture in her eyes. Amber hadn't cried in years, she didn't intend to start now. Regaining control, Amber looked up at Maria before asking a simple question she would repeat many times in the future, \"What now?\" \n\nShrugging her shoulders, Maria asked, \"Would you like your new clothes and a ride back to where you came from? If not, you might want to try on the new riding outfit Richard ordered for you. He has been waiting to see if you might like to join him at the stables for a morning ride. If so, would you like some breakfast or it's close enough now, some lunch first?\" \n\nAmber's forehead had a deep frown.\n\nMaria scoffed with a smile, \"Is the decision really that difficult?\" \n\n\"Well... yes and no,\" Amber squirmed... \"I've never ridden a horse before.\"\n\nMaria laughed, \"Well besides the fact Richard loves to teach, don't you think it's time you started learning how to enjoy life?\"\n\n**********\n\n'It's unbelievable. The time has just flown by. What's it been four, no, five weeks?'  Amber couldn't remember exactly how long she had been at Wetap. \n\nMaria's warning had proven true; the days were filled with so much living. Every day was an adventure, if not, before it was over, Richard made it seem that way. Amber never recalled feeling so secure or seeing a place so beautiful, it truly was a wonderland.\n\nAmber could see everyone involved in Richard's life deeply cared for him. It was evident being born wealthy never affected his love and concern for others. His character seemed to be reflected in a personal nature that garnished the respect of others, even from his own employees. \n\nRichard had sent for her. As Amber entered his study, she recognized his serious face. Even though he was smiling, she had come to know what each smile and facial expression represented. When Richard became serious, she had learned to be wary. It usually meant a major change in someone's life.\n\nIn his most serious tone, Richard said, \"Miss Amber, we need to discuss your future. It's been fun and games and we have enjoyed ourselves, but as in life, sooner or later all things must come to an end.\" \n\nAmber didn't like the sound of this and panic gripped her heart. She had spent more than one restless night wondering when this incredible dream would end and she would have to leave. It was finally happening. He was putting her back out onto the streets. \n\nHow could he be so cruel to have brought her here, let her fall in love with Wetap, experience all the love and joy it had to offer, and then dump her back out into hell? God, she would die. \n\nRichard could see the fear in her eyes. To clear the air quickly, he continued, \"You didn't finish your high school education, it's time you did. Miss Amber I want you to get your G.E.D. and then we are going to enroll you in college. If you are going to continue living here, I insist that you finish your education and continue to improve yourself.\"\n\nAmber sat in stunned silence; her eyes filled with tears as Richard lost his smile and looked thoroughly confused. \"Did I say something wrong? I didn't mean to hurt your feelings Miss Amber,\" he stammered. \n\nNext thing he knew, Amber was in his arms. She had him locked in a bear hug and was sobbing on his shoulder. He had never seen her cry. Richard absolutely didn't know what to do; for the first time in his life, he felt the fear of panic. Where was Maria when he needed her? \n\nJust as he was about to hit the panic button, Amber pulled back and he could see the big smile on her face. She was so relieved, happy, and elated, there were no words she could find to express her feelings. The only thing she could do was blurt out, \"Whatever you say Richard, you're the boss.\" \n\nWith a nervous smile covering his relief, Richard added, \"Overall, I think our little talk went quite well. Don't you Miss Amber?\"\n\nShe had not only grown to the point of loving his smile with all its different personality traits, but she had come to appreciate the annoying habit he had of always saying 'Miss Amber' whenever he addressed her. She knew it was a term of endearment he used with all the ladies in his life.\n\nWhen she had asked, Maria burst out laughing while explaining it was Richard's way of showing affection. Maria said, \"Don't worry, after awhile it will grow on you, just as Richard does. You will get to the point it makes you feel good to hear it.\" Amber now understood what Maria had been trying to convey to her.\n\nRichard tapped into his connections, using his influence to help expedite the process. With her previous education plus special tutoring, Amber had her G.E.D. and university enrollment in record time. \n\nShe had just begun to experience the serious side of Richard. Even an inkling of the grueling hours of marathon study that lay ahead for her, might have made Amber seriously reconsider Maria's offer. She might have taken the new clothes and run.\n\n**********\n\nThe next two years passed quickly. Amber was surprised at what she was able to accomplish while maintaining a very high grade point average. \n\nRichard insisted on and supervised her studies, never letting up or giving her a break. He had been serious about her 'continually improving herself.' \n\nAmber's spare moments were spent with Richard attending the theatre, ballets, operas, museums or art exhibits. On occasion he took her on short jaunts to different parts of the world. She had been to Paris, London, Brussels, Berlin, Moscow, Peking, Sydney, Tokyo, Honolulu; they spent two weeks in New Zealand sightseeing from one end to the other.\n\nShe couldn't elude the fact her life was a living fairy tale most people would die for. Not that she didn't work and have responsibilities, but it was a life she could only fantasize of before meeting Richard. \n\nAmber was beginning to experience something else. Before arriving at Wetap, she had been too scared, hungry, and destitute to pay attention to changes in her body. To just survive on the streets had been a daily battle requiring all her time and energy. It had taken everything and left nothing for her.\n\nOne of the benefits of having all your needs catered is the personal freedom to indulge yourself. At twenty-two years old, her sex drive was working overtime, for the first time she was listening to its demands. Raoul, the estate's young horse trainer, looked awfully appealing.\n\nWhen Raoul would bring Amber's horse out for her early morning rides, she could feel herself yearning to touch and be touched by his young muscled body. He looked so sexy in his tight pants and t-shirts. Amber could tell he was attracted to her also. Every time their eyes met, they were giving each other 'the look.'\n\n**********\n\nA brief series of knocks rapped on Amber's bedroom door. Her heart stopped as her head clouded with confusion and panic, no one came to her bedroom after bedtime. Who could it be? Maria? Without thinking, Amber half shouted, \"Who is it?\"\n\nThe door slowly opened and she could see Richard's outline silhouetted by the hall light. She heard him say, \"Miss Amber, I'm sorry to distur....\" His voice locked in mid sentence as she clutched the sheet to her naked breast. Her mind screamed 'Noo, nooo... oh God... noooo!'\n\nThey were frozen in suspended time as the reality of the situation closed in on both of them. She could see Richard's head drop. \"Excuse me, I'm sorry for barging in on you,\" he said. He gently and quietly shut her bedroom door as he left.\n\nThe tears were flowing down her face. She realized they had been on full display when the light from the hallway lit up her bed. As Raoul reached for her she recoiled in horror, \"What are you doing?\" she demanded angrily. \n\n\"He's gone and won't be back, we can pick up where we left off,\" Raoul coaxed.\n\n\"Raoul, just get dressed and get out,\" she ordered.\n\n\"But...,\" He stammered.\n\n\"No but, just get out,\" she had already dismissed him. The fires that had been lit by her desires earlier were now nothing but cold embers.\n\nSpeaking more to herself than to Raoul, Amber loudly muttered, \"I have to go find him and talk to him.\" Richard was the dearest friend she had and she needed to make him understand. She couldn't leave him thinking the worst of her.\n\nAfter getting dressed, she knew where Richard would be. Amber knocked lightly on the door of his study. His soft voice said, \"Come in.\"\n\nAs she entered the room he was sitting at his desk writing on a slip of paper. Shutting the door gently, Amber implored, \"Richard?\"\n\n\"Yes,\" he responded.\n\nShe wanted him to turn and look at her; she needed him to turn and look at her; she needed to see his face. Amber tried again, \"Richard?\" \n\nThis time, he answered a little louder with a touch of firmness, \"Yes, what is it you need?\"\n\nHer voice half pleaded, \"Richard, I need to talk to you. I need to explain what was happening. I don't want you to misunderstand.\"\n\nJust then Richard finished writing. He picked up the slip of paper and a key lying next to it and pivoted around so he was facing her. \"There's nothing to explain. Don't forget, I was young once. I haven't forgotten the emotional wringer of romance or the torturous experiences desire extorts.\" \n\n\"But I don't want you to be mad at me,\" Amber entreated with tears in her eyes. The tears were from the guilt she felt for the fact Richard was not smiling, something she had never experienced before. \n\n\"I'm not mad at you, I'm mad at myself. We should have had this talk long ago so you would know and understand that I expect everyone who works or resides at Wetap to respect its sanctity.\n\nIt's this sanctity that makes it a loving home for all of us, me, you, and the employees. Violate that sanctity and everyone loses respect, not only for their home, but for each other. \n\nIt's your life, what you do outside of Wetap is your business. But I and everyone else who live here have a vested interest in what happens at Wetap.\n\nWe have already seen people in high positions show great disrespect for the sanctity of our Nation's most important and historical home, the 'White House'. I will not stand for it to happen here at Wetap.\" His voice left no doubt to his conviction. \n\n\"Richard, I'm so sorry...,\" Amber responded with sincerity.\n\n\"No need to be, you didn't know. That's my fault. I'll try to never let that happen again,\" he confessed. Handing her the piece of paper along with the key he said, \"Now take these.\" \n\nReluctantly and with hesitation, she gingerly took the objects offered. Not understanding, Amber questioned with misgiving, \"What're these for?\"\n\nWith a blank stare Richard replied, \"It's the address and key to a home of a very dear friend who died a few years ago. His health prevented him from working so I paid off his mortgage. Since he had no relatives, he left it to me. \n\n\"I'd just put it on the market two days ago. I'm pulling it so you will have a private place to take anyone you desire. No one need know but you and your guest.\"\n\nHis action stunned her. She pleaded, \"I don't need a place like this Richard.\" \n\n\"Well it's there if you need it,\" Richard firmly responded. \"The choice of whether or not to use it is yours,\" he added while pivoting his chair back around to face his desk. \n\nAmber had the feeling she was dismissed. She felt so cold. He had never treated her so impersonally. Reaching for the door handle, she turned her head and asked, \"Richard?\"\n\n\"Yes?\" He questioned.\n\n\"Why did you come to my room tonight?\" she inquired.\n\nNever turning to face her, he informed, \"Oh yes, I wanted to let you know I will be leaving before you wake in the morning and to tell you goodbye. I have some business to tend and friends to visit.\"\n\nSomething wasn't right. Richard was upset, he had to be. In her heart she knew he had come to tell her to pack and be ready to leave in the morning, but changed his mind. Amber would not be going with him. \n\nHe had never taken a trip without her since her arrival at Wetap. It would be the first time she would spend a day without him, she would be all alone. Her voice quivered, \"How long will you be away?\" \n\nShe saw his head slowly rise. He appeared to stare at the wall as he solemnly replied, \"I don't know for sure, could be a while. Continue your education and studies while I'm gone, Maria will see to your needs. Now if you'll excuse me, I have some paper work to prepare before I leave.\" As he looked down at the papers on his desk, he quipped, \"I'll let you get the door on your way out.\" \n\nAmber quietly eased through the doorway, gently shutting it behind her so not to disturb him. As she started back to her room, something didn't feel right. She knew he didn't smile once during their talk, but there was something else missing in their short conversation, something very familiar and comforting. \n\nIt dawned on her, never once during their exchange had he affectionately called her 'Miss Amber.' With a sob she gripped the key so hard it almost drew blood.\n\nWhen Amber arose the next morning, true to his word, Richard had already departed. She had breakfast alone in the dining room. \n\nLater taking the address and key Richard had given her, she set out in the convertible to find the house he had spoken of. Much to her surprise, she found herself at a mobile home park, commonly called a trailer park. Judging from its appearance, it was a more upscale park. \n\nSlowly circling the oval drive that constitutes the layout of most trailer parks, she located the house, or a better word 'mobile home,' that sat at the address Richard had given her.\n\nFrom the outside, it appeared to be a well maintained and attractive home. She slowly got out of the car and cautiously walked to the front door.\n\nThe key worked. As she stepped inside, her first impression surprised even her, it was a very well kept home. Anyone could tell the previous tenant had loved and cared for it with affection.\n\nOne of the first things that caught her eye was the collection of books. Since Richard had overseen her education and studies, she had read many classics and novels, they were all there. It was easy to see what Richard and his friend had in common. She could almost feel the previous owner's emotions and thoughts as she ran her hand over the books one by one, reading their titles and authors.\n\nIt was a lovely home, she felt perfectly relaxed, not the same extravagance and largeness as Wetap, but still very secure and comfortable. She could feel Richard's concern and his continual vigilance for her well being as she studied the various aspects of this gift he had provided for her.\n\n**********\n\nAmber was caught off guard when Raoul sprang from the shadows in the foyer, pinning her to the wall with a passionate kiss as he tried to slip his hands under her blouse. \"Stop it... stop it, I mean it,\" she ordered him.\n\nWith a surprised look, \"What gives, I thought you wanted it as much as me?\" Raoul questioned. \"Are we ever going to finish what we started or were you just teasing me?\"\n\nAmber looked him in the eyes and replied, \"I would never do that, but it's going to be my first time and I want it to be right. Tomorrow, I've got a place where we won't be disturbed, but never, I repeat never, will it happen in this house. Do you understand?\"\n\n**********\n\nRaoul whipped the convertible into the parking space provided alongside the mobile home. Amber was laughing with Raoul at some off the wall joke he had cracked. Her laugh dropped to a light chuckle as she viewed the mobile home for the first time with Raoul. \n\n\"Hey, this is great. How did you come up with this place?\" Raoul questioned.\n\nAmber laughingly replied, \"Oh, I have connections.\"\n\nRaoul bailed out and ran up to the door, \"Come on, I've been dying to pickup where we left off. I want you so bad, hurry.\"\n\nAs Amber sat reflecting for a moment, it crossed her mind, this wasn't right. Richard was still trying to teach her something, but what? She slowly got out of the car, extracting the key to the mobile home as she walked up to the door.\n\n\"Come on, hurry, I can't wait,\" he said. \"I can't believe we are going to make love and this time, no interruptions.\" \n\nAs Amber slipped the key into the lock, she paused, looked around and Richard's words came roaring out of the back or her mind. 'Miss Amber, a lady never opens a door in front of a gentleman, if she does, she's not a lady. If he doesn't open it for her, she needs to be with someone else because she's not with a gentleman.' \n\nNausea swept through her abdomen, she suddenly felt sick and light headed. \"The key doesn't work,\" she said to Raoul, \"let's go.\"\n\nAs he felt the moment slipping away... again, he begged in desperation, \"Here, give it to me. Let me try.\" Damn, he wanted to fuck this bitch bad.\n\n\"I said it didn't work,\" Amber angrily spat between clinched teeth. \"Let's go home.\"\n\nOnce in the car, knowing she wouldn't be back, Amber took a final look at the mobile home. With its sanctity intact it remained a beautiful home. At the last minute she had been able to comprehend what Richard was trying to convey, even in his absence.\n\nIf she had allowed Raoul to fuck her in that wonderful mobile home that is all it would have been, just a fuck, she and it would have become nothing more than 'trailer trash.' \n\nNow she understood, people's perceptions reflect on everything.  'Oh God,' she wondered, 'what is Richard's perception of me?' She was afraid she knew the answer to her own question as she recalled his final words in the study that night, 'I'll let you get the door on your way out.' \n\nIt was a very frustrated Raoul who fired up the convertible and sped out of the mobile home park.\n\nAmber sat silently looking out the passenger side. A tear rolled down her cheek as she thought, 'I just called Wetap my home... and it is. How could I have come so close to being so stupid? Richard, I'll be so glad when you come home. We have so much to talk about.'",
        "**********\n\nIt had been almost two months, still no Richard. Eating alone in the dining room had grown old in a hurry. Amber had taken to having her meals served in her bedroom. \n\nShe missed Richard so much. Wetap was nice, but lacked its special atmosphere without him. Richard was the real 'wonder' in wonderland. \n\nIt was easy to see the employees felt his absence also. Maria had been absolutely right, everyone at Wetap benefited from sharing in Richard's zest for life. \n\nAlthough Maria treated her well and saw to her every need, Amber detected a slight coolness in Maria's manner. She didn't know if it was something new or just an attitude Maria had kept in check while in Richard's presence.\n\nConfronting Maria one day, Amber pleaded, \"Maria, when is Richard coming home?\"\n\nWith a hard stare, Maria replied, \"Amber he will be home when he comes home.\"\n\nAmber implored, \"Didn't he give anyone his itinerary?\" \n\nMaria shrugged her shoulders. \"Sorry, Richard has never to my knowledge told anyone where he is going or when he will return. Wetap is set up to be fully self-sufficient, so he could be gone indefinitely.\" \n\nTears started flowing down Amber's cheeks just before she buried her face in her hands. \"I need to talk to him, I miss him so much, Maria,\" with a slight sob Amber begged, \"is there no way to contact him.\"\n\nMaria, in spite of her hard feelings held out her arms as Amber literally fell into them, sobbing on Maria's shoulder. \"Amber, what is it, what has you so upset? Do you need anything? Is there something wrong at school?\"\n\nBefore Amber could speak, Maria guided her to a sofa and made her sit as she joined her. Holding Amber's hands in a comforting gesture, she insisted, \"Now, tell me what's bothering you.\" \n\nStill crying, Amber sniffed, \"I just miss him so much, I'm so lonely without him. He's my best friend, Maria... he's my only friend. I just wish he would come home.\"\n\nMaria raised her eyebrows in a 'should I tell or should I not' look. Taking a deep breath, she slowly let it out, \"Amber.\" As Amber looked at her, she continued, \"I don't think Richard is coming home.\" \n\nClearly in an 'I don't understand what you said' voice, Amber entreated, \"What do you mean?\"\n\nMaria sighed with resignation, \"Just what I said, I don't really think Richard wants to return to Wetap.\"\n\nA confused Amber half screeched, \"Why would he not come back? This is his home, he loves it here. His friends... who are his only family are here. I don't understand what you mean.\" She franticly inquired, \"Oh God, nothing's happened to him has it? He's not injured or hurt is he?\" \n\nWith slight bitterness in her voice Maria continued, \"Amber, the only injury and hurt Richard suffered was the broken heart he left here with. Right now, I think Wetap only represents emotional pain to him.\"\n\nAmber was completely confused, \"Broken hearted, how could he be broken hearted? He wasn't dating anyone I know of.\"\n\nMaria sat for a few moments studying Amber's face, looking for something that wasn't there. Astounded, Maria said, \"You really don't have a clue, do you?\"\n\nAn uncomprehending Amber flatly asked, \"What Maria... what?\"\n\n\"Amber, the woman Richard loved broke his heart. It's a story as old as time itself.\" Maria said with deep sorrow.\n\n\"But how?\" Amber questioned. \"Maria I never even knew he was dating or seeing anyone. How could she not love him, he's perfect. I can't imagine a woman not dying to have his love or wanting to spend her life with him. He's like the perfect female fantasy. He embodies everything a woman looks for in a man. She has to be the stupidest bitch alive, that's all I can say.\"\n\nA totally shocked Maria sat staring at Amber. With a bewildered look on her face, Maria replied, \"I fully agree.\" \n\nAmber continued, \"I really don't understand how he could have been dating. He was spending every available moment I know of with me, teaching, helping me expand my knowledge. When was he able to find time for anyone else? How could he keep it a secret from me? I thought for the last two years I was virtually his sole project, I thought he was totally devoted to meeeee....\" \n\nAmber froze, looked in Maria's eyes, and suddenly she knew. \"Oh my God, noo... nooo, it can't be.\"\n\nMaria nodded 'yes' as she watched fresh tears roll down Amber's face which was now loaded with unwanted understanding. 'Now I know what they mean when they say, \"Ignorance is bliss,\" Maria thought to herself.\n\n\"Maria, it can't be, it just can't. I'm nobody; he picked me up off the streets. He can have any woman in the world. One with money, education, world travel, international savvy, sophistication, class, what do I have to offer? Nothing.\" Amber was trying to convince herself Maria had to be wrong, but she knew in her heart she wasn't.\n\nMaria asked, \"You spent two years with Richard, what did you learn about him and the people around him?\" \n\nHalf sobbing, Amber confessed, \"All the things I just mentioned mean nothing to him, he loves and appreciates people for themselves. He cares more about a person's character than anything else. Maria, how could I have been so blind, how could I have not seen it.\"\n\nWith a sympathetic smile, Maria replied, \"I don't know, I saw it the first night he brought you home. Other than employees, Richard had never brought a female into this house before. We were all in shock when we laid eyes on you for the first time. Of all the women in the world to choose from, you were a 'sight.' But I knew the moment his eyes fell on you we were in trouble if the dirt, grease, and grime went further than skin deep. I had never seen his eyes hold so much love for an individual before.\"\n\n\"Love, you can't actually mean he was in love with me that first night?\" Amber pondered a moment before continuing. \"Oh Maria,\" Amber's voice quivered. \"If that's true, no wonder I never noticed a change in the way he looked, acted, or treated me. I didn't have any thing to compare it to.\" Amber continued dejectedly, \"The last thing I ever expected was for him to be able to love me.\" \n\nMaria had to ask, \"Would it have made any difference if you had known?\"\n\n\"God yes, I truly never dreamed he could really love me, I would die for him. I would indenture myself for all eternity to have his love. Oh Maria, you have to help me find a way to contact him, we can't let him suffer without knowing. God what have I done?\" Shaking from nervous hyperventilation, Amber was almost on the verge of collapsing.\n\n\"Take a deep breath and hold it,\" Maria directed her, \"now another.\" After a few minutes, she got Amber calm enough to continue.\n\nMaria had to ask, \"What about you and Raoul?\"\n\nAmber looked shocked, \"There was never anything between Raoul and me. It was just young foolish stupidity. Maria, you have to believe me, nothing ever happened. I'm not denying it would have if Richard hadn't interrupted us that night, but it was just my own curious libido at work. Every day I thank God that Richard walked in on us before anything happened.\" \n\nMaria looked truly shocked, \"What do you mean 'Richard walked in on you'?\"\n\n\"Didn't Richard tell you? How did you know I had broken his heart if he didn't tell you?\" Amber was puzzled.\n\n\"Well I hate to tell you, Richard is too much of a gentleman to ever repeat or tell such a thing. Raoul on the other hand, went bragging all over about how he had gotten into the pants of the boss's private stock.\" Maria informed her. \n\nWith her face beet red, Amber protested, \"Maria, I swear, he never...we never did a thing except end up naked in bed together, that's when Richard walked in on us. Afterwards I threw Raoul out and went to talk to Richard. I almost did do it a few days later, but Richard stopped me again.\" \n\nMaria looked absolutely bewildered, \"Stopped you, how? He wasn't here.\"\n\nAmber looked a little embarrassed as she told Maria about the mobile home key and how close she came again to ruining her life. Then she told Maria about how Richard's words came home to haunt her, making her face the stupidity of her actions. \n\nMaria tried her best to stifle her laughter. She looked Amber straight in the eye and said, \"I think something else occurred at that moment. You finally realized you were in love with Richard and couldn't bring yourself to cheat on that love.\" \n\nAmber sought Maria's years of wisdom when she inquired, \"Maria, what now? Maybe it would be best if I left Wetap, that way Richard could return home. It's not right that I am here and he feels forced away from the home he loves so much. Especially by a girl who I'm sure he no longer considers a lady. I know he believes the worst of me.\"\n\nMaria looked at her and said with conviction, \"Amber, you are a true lady, I'll vouch for that and I'd better not hear anyone say different, that goes for Richard too. \n\nWhat you do now is wait for Richard to return. In the meantime you continue your schooling, your studies, and to expand your horizons. This will prove your love and appreciation to him by accomplishing all the things he would have you do if he was here. \n\nYou prepare yourself and pray for that day... the day you will hopefully get the opportunity to speak to him again. In addition you keep faith, things will work out for the best.\" \n\n\"Maria, I can do all that, but I can't continue to do it alone, I have to have someone to talk to.\" Amber desperately pleaded.\n\nMaria chuckled, \"Starting today you are eating in the dining room again, my family and I will be joining you there for every meal. You won't be alone Miss Amber, and we'll all be praying that Richard returns soon.\"\n\nAmber's jaw muscles clinched, \"Maria, I would love to go riding, but I'm ashamed to face Raoul, the truth is, I don't really want to see him. Especially after what you've told me he's been saying behind my back. I still can't believe he is that big of an asshole.\" Amber said through gritted teeth.\n\nA smiling Maria said, \"I see you haven't been out and about for awhile. Raoul was fired just a few days after Richard left.\"\n\nA shocked and surprised Amber quipped, \"Not that I will miss him, but I can't believe Richard fired Raoul over what happened, that just doesn't sound like Richard.\"\n\nMaria laughed out loud, \"You understand the man you love better than you know. Richard wouldn't have fired Raoul, but I would... and I did.\" \n\nIt was Amber's turn to laugh as she was able, for the first time, to understand the full extent of Maria's power and authority at Wetap. It extended a lot farther than just being 'head of the household staff.' Maria was evidently the acting 'head mistress' of the entire estate.\n\nAfter their talk, Amber felt a little more relieved, but still guilt ridden. It was entirely her fault as far as she was concerned. She didn't feel right about staying at Wetap if it forced Richard away. There was an alternative, the mobile home, she could stay there and still continue her studies. \n\nUnable to find the key after searching the desk thoroughly, a puzzled Amber finally gave up. There was no one to ask, Maria wouldn't understand or allow her to leave if she could stop her.\n\nResigning herself to the only viable option, Amber returned to her room. She would stay and do her best to make Richard as proud of her as possible under the circumstances. \n\nAfter changing clothes, Amber went riding for the first time since Richard left. It would have been much more enjoyable had he been with her.\n\n**********\n\nIt was a miserable two years, only because Richard never returned. Amber was at the point of wondering if he ever would. \n\nWith Maria's friendship, Amber made it through Richard's self imposed exile. She finished her education and today was her graduation. Her final prayer was that Richard would be there to see it. He had to be, it was her last hope of ever seeing him again. \n\nHer mind was made up, if he didn't show today; she would pack tonight, leave Wetap tomorrow, and give up any hope of ever having Richard's love again. Without Richard, she knew she wouldn't be living at Wetap, only existing.\n\nThe graduation was held outdoors with the students seated beside a podium which in turn was constructed in front of a set of bleachers. The graduation ceremony would have the students walk up onto the stage, receive their diplomas then take a seat in the bleachers, facing the audience.\n\nAmber loved this setup. After she received her diploma, it would give her plenty of time to search the audience, looking for Richard. He just had to be there. \n\nAs the graduates received their diplomas individually, several had large groups, consisting of family and friends who were there to show their love and support. Many of these groups couldn't resist a loud rousing display of emotional pride for their loved one as their name was announced and they crossed the podium to receive their diploma. Amber thought that was fantastic. Even though she had no one, she was happy for the others.\n\nWhen her name was announced, Amber started across the stage and almost froze when the loudest uproar of cheering, clapping and whistles resounded from the audience. Red faced, she shook the one hand of congratulations that was offered and took the diploma from the other before making a bee line to her assigned seat.\n\nAmber immediately spotted Maria, along with most of the other employees, seated together in the fourth row. It was amazing; she never realized how many there were until they were all together. They took up the entire row, looking at her and smiling. Her heart melted as some gave her a thumbs up when she locked eyes with them.\n\nAmber felt so proud, it was all due to Richard. None of this would have happened if his smile hadn't convinced her to join him that night in the restaurant. \n\n'Oh my God' she thought, it's not possible. There in the fifth row was Joseph with several of the waiters she had come to know over the last few years from the restaurant.\n\nWhen she spotted them, they all clapped and, even though seated, bowed to her. She couldn't stop the tears from falling. \n\nHow her life had changed since that first night. Richard had been correct as usual, Joseph was 'the greatest' maitre d' she ever had or would have the pleasure to meet.\n\nHer eyes continued to sweep the audience, 'Oh please be there Richard, oh please, oh please,' her heart pleaded.\n\n\"THERE HE IS,\" she actually shouted before she was able to slap her hand over her mouth. She was literally bouncing up and down in her seat as she pointed at Richard. Barely able to control herself, she wanted to run, jump off the stage, and grab Richard before he could disappear from her life again. \n\nShe had spotted him sitting beside Daryl in the third row from the rear. Her heart melted as their eyes met after she had shouted. Richard smiled, not a big one, but an amused one over her apparent excitement.\n\nRichard was slightly embarrassed when the heads in the fourth row and part of the fifth pivoted at the same time, searching for him. They knew immediately who Amber meant when she shouted, \"There he is.\" \n\nIt had been so long for them; they truly loved and missed Richard. Several stood to look for him, including Maria.\n\nRichard slumped a little in his chair; Daryl chuckled and waved. You could hear the murmur as those standing located Richard. At that point he sat up tall. Thanks to Daryl, no sense trying to hide any longer.\n\nAs the ceremony ended, he elbowed Daryl and said, \"Let's go.\"\n\nRichard was hemmed in by Daryl, who was hemmed in by a throng of people. It didn't seem to Richard as though Daryl was making much of an effort to move forward. He wondered, 'Is Daryl purposely stalling, using the crowd as an excuse not to let me make a hasty retreat?' He let out a deep sigh as they stood, waiting for a break in the crowd. \n\nAmber could see Richard planned to leave. She had to talk to him, tell him everything; she had to stop him before he disappeared from her life again. \"NO DAMN IT,\" she shouted in loud exasperation, \"I've waited too long for this.\" \n\nEveryone looked up, including Richard as Amber pushed and shoved her way down the bleachers and across the stage. It was a desperate young lady working her way rapidly around the clutch of people gathered on the stage as she headed for the stairs. Amber was too close to the edge when her high heel caused her ankle to give way and her momentum propelled her over the edge of the stage. \n\n\"AMBER,\" Richard shouted as the crowd gasped, watching her arms flailing in panic as she started her fall. Using his cane as an advance wedge, Richard franticly shoved through the crowd fighting his way to Amber. \n\nHis heart seemed to stop, he would die if she were hurt.\n\nWhen Richard finally breached the gathering crowd, Amber was lying on the ground surrounded by a group of Wetap employees including Maria. They had been closer and rushed to check on her. \n\nAs Richard emerged from the crowd, they automatically made room for him at her side. Dropping to his knees, he could see her eyes were open, not showing any pain, just confusion. \n\nAs he reached for her hand, Amber bolted upright into a sitting position and grabbed hold of his jacket lapels. Her grip was so tight her knuckles turned white. As they stared lovingly into each other's eyes, he asked, \"Are you alright.\"\n\n\"Now I am, oh...you mean the fall? Yes, several people threw out their arms trying to catch me; evidently it was enough to break my fall. I might have a slightly bruised hip, but that's all,\" she replied, still keeping a vice grip on his lapels.\n\n\"Well, I wanted to see you graduate and offer my congratulations, but now I must go, I have some appointments to keep,\" he said.\n\nThrough clinched teeth, she very firmly scolded, \"NO... I mean it, NO! That's not going to happen.\" \n\nA surprised Richard said, \"But I have to keep these appointments.\"\n\n\"NO,\" she rasped, \"you have to keep a long overdue appointment with me first. I've waited two years for this moment and I'm not letting go until we talk.\" \n\nRichard glanced helplessly up at Maria. She smiled and shrugged her shoulders as she informed him, \"This is her turf. She's boss here. Take it up with her,\" Maria chuckled. \n\nAs he resigned himself to the fact Amber wasn't going to let go until they talked, he helped her to her feet. Then he suggested, \"How about we work our way to the limo where we can have some privacy?\" \n\nRichard took a step in the direction of the limo and Amber moved with him. He believed this might work in spite of the fact she wouldn't let go of his lapels.\n\nDaryl led the way, parting the thinning crowd in front of them. Richard noticed they were getting several strange stares, but Amber wasn't taking her eyes off him nor her hands from his lapels. He wondered if he would ever be able to get the lapels to lay flat again. \n\nOnce they reached the limo, Daryl opened the door. As they stood outside, Richard said, \"Unless you let go, getting into the limo is going to be very difficult.\"\n\nAmber shook her head 'no,' then began backing into the limo making Richard bend and follow her in. From what everyone could see, it appeared as though she was pulling him in behind her.\n\nDaryl chuckled out loud, thinking to himself, 'This ought to be very interesting. Wish I could be 'a fly on the wall' during this conversation.' \n\nInstead, he did his job, standing guard with his hands clasped in front of him, rocking back and forth on the balls of his feet outside the limo door. Daryl knew he and the other employees would get the gist of the conversation soon enough. After all, it could only go one of two ways. \n\nInside the limo Richard looked at Amber, \"Okay, now we can talk.\" Being a male, he knew what was coming next; damn this is what he hated about talking to a female.",
        "With big tears forming, Amber's first words were, \"When are you coming home?\"\n\nRichard turned his head and looked out the window, \"I really don't know. I still have a lot of business to take care of... no idea of how long it will take.\"\n\nAmber jerked on his lapels as she angrily shouted, \"DON\"T BULLSHIT ME RICHARD.\" His head whipped back around to face her onslaught as she continued, \"Your disappearance for the last two years and your plans to leave again have nothing to do with business dealings.\" \n\nRichard sat looking at her with a puzzled expression before quietly asking, \"Then what does it have to do with?\" \n\nWith a loving smile, Amber answered, \"Oh Richard, don't play dumb, it doesn't become a gentleman. I wasn't aware that night, but you certainly were. It's about your love for me.\" \n\nRichard once again turned to stare out the window, but not before she felt the vision of pain that crossed his face, \"I don't know about my so called love for you or where you got that idea, but I do recall that night vividly. You seemed to have a love of your own, from what I remember.\"\n\nAmber calmly stated, \"That's pure crap. If you hadn't run off, I could have explained. Raoul was nothing more than youthful foolishness, a combination of curiosity and physical desire. If I had thought for one moment you could, or did, love me, I would never have even given him a second glance. Richard, I would die for the chance to have your love. At that time, I just had no idea it was possible. I still can't believe it, but I know it's true.\"\n\n\"Who or what has put that foolish notion in your head?\" He asked, still refusing to look at her. \n\nFor the first time since latching onto his lapels, she let go. She took his face between her hands and turned it to her. While staring into his eyes, she said, \"Look me in the eyes and tell me you don't love me. I'll go straight to Wetap, pack my bags, and be out of there before nightfall.\" \n\nRichard's eyes turned misty, \"You can't leave Wetap.\"\n\n\"Why Richard,\" she asked.\n\n\"Because it's your home,\" he replied.\n\n\"Not good enough. Again Richard, why?\" she demanded.\n\n\"Because you love it there,\" he added.\n\n\"Still not good enough. Again Richard, why?\" she continued to press.\n\nAfter pausing while tears rolled down his cheeks, he whispered, \"Because I built it for you.\"\n\nAmber gasped, \"What do you mean you built it for me? You didn't even know I existed when you built Wetap?\" \n\nWith a deep breath, Richard opened his heart and shattered her misconception, \"Oh but I did. I had just never met you, but I knew you were there. You had to be, I've loved you with all my heart before you were even born. I have loved you all my life. \n\nI just didn't know where you were until that night you uttered those fateful words, 'FUCK YOU and all the other assholes in the world. I would rather starve than degrade myself for food... or money... or anything else.' At that moment, I knew... the one I had been waiting for all my life, the one for whom I designed and built Wetap... it was you.\n\nThe first night you set foot on Wetap, I knew it was complete. There were no more dark corners, your light shined on everything. Even the employees spotted it right away; everyone knew you were the true 'Mistress of Wetap.'\n\nSo you can't leave, you and Wetap are synonymous, one with the other. You were created for each other. It's not only that you compliment each other... you actually complete each other.\" \n\nAmber voiced her love so tenderly, if Richard's heart had been a diamond it would have melted. \"Richard that's a beautiful picture but no artist leaves himself out of his own dream. Don't you understand? Wetap and I are nothing without you. \n\nYou were the one that visualized the beauty of Wetap and recognized your love in me. Neither Wetap nor I can exist to our fullest without you. We both need you. \n\nThe last two years have been miserable, not only for me, but for all of Wetap too. Didn't you see everyone searching for you today? They have missed you. Nothing's the same without the 'wonder of wonderland.' I beg you, please come home to us.\"\n\nWith sincerity, Richard responded, \"The night I left, I was hurting, not just from the pain of seeing you with Raoul but more from facing the reality of the gap in our ages. \n\nI came to grips with the fact that there was a reason you chose Raoul and not me, it was the difference in our ages. It hurt and even though I understood, I couldn't bear the pain.\n\nSo I left. It wouldn't have been right to separate the two loves of my life, not after bringing them together. Nothing has changed, I'm still twenty-four years older than you. There's no way it can work for us, we would always be living with that difference.\"\n\nIn defiance, Amber demanded, \"So what Richard? Why wouldn't it work? We wouldn't be the first or the last to have an age gap in our love. I don't see any big issue over our ages. \n\nAll I know is that I love you with all my heart. The happiest time of my life was the two years I spent every day with you. \n\nI also believe you love me with all your heart and I don't believe that you have been any happier for the past two years than I have. Why are we denying ourselves the happiness we are entitled to and have within our grasp?\"\n\nRichard pleaded, \"Think about it, what would we talk about? By the time we have kids... if we have any, I will be getting up there in years. \n\nBy the time you are my age, in another twenty-four years, hell, I'll be... seventy-two. You'll just be reaching your prime and I'll be leaving mine. \n\nWhat about sex? Forget sex, how about sharing? What the hell would we have in common to even talk about?\" Richard slumped in what he perceived to be hopeless reality.\n\nFor the first time since that fateful night, Amber began to grasp the pain Richard had been suffering, she vehemently responded, \"NO, NO, NO, Richard, no more! I refuse to let us suffer any more.\n\nI'll tell you what we do about sex, we do it until we can't do it anymore, then we will take long walks together, arm in arm. After we can't walk any more we will sit holding hands until the end, but we will be together. That's all that matters.\n\nWhat will we talk about? Us, our plans for the future, our past, our kids, and by the way, I hope you want a lot of kids. I want to have kids until we can't have any more, and don't try to tell me we can't afford them, I know better.\n\nAfter talking about our kids and their futures, we will talk about our grandkids, and we will have plenty to talk about because I plan on having a lot of grandkids. Richard, we talked for two solid years, why would you believe we couldn't talk forever?\n\nAs far as you getting old, you'll only be in your fifties and sixties, still young enough to throw soccer passes and shoot football hoops with your sons... and your daughters if they want.\" Richard laughed, there were still areas for her to continue to improve... soccer passes and football hoops?\n\nAfter taking a deep breath, a confused but undeterred Amber continued, \"Richard, it's all right there within our grasp, please don't let it go or throw it away. There will never be anyone else for either of us, I know that for a fact.\"\n\nRichard glanced out the window before replying, \"Amber, you've given me a lot to think about. I need to absorb and sort it out. Just give me a little time.\"\n\nAmber grabbed his face and pulled him to her for a deep passionate kiss. Her tongue began that ageless dance as it entwined with his. \n\nAs they floated in the emotional abyss of their own desire, all Richard heard was a sexy moan escape Amber's throat. \n\nAfter slowly breaking apart, their eyes remained in a loving embrace. \"While you are absorbing and sorting, then absorb and sort that. It will be waiting for you forever,\" Amber said.\n\n\"I will come back and give you an answer,\" Richard promised.\n\nAmber made one last request, \"Please do me one favor?\"\n\n\"And what would that be?\" Richard asked.\n\n\"If you decide against us, send word and let me leave before you return. I can't face living at Wetap any longer without you and I don't want to see you again if I'm not going to have you for the rest of my life,\" she pleaded with deep resolve.\n\nRichard nodded his understanding.\n\nAfter hearing a tap on the glass, Daryl opened the door and extended his hand to help Amber out of the limo. He looked at her face, hoping to see more than the weak smile she gave him. His heart dropped.\n\nAmber solemnly watched as the limo drove out of sight before she rejoined her graduating class. Picking from the many parties to which she had been invited, Amber tried her best to join everyone in celebrating. \n\n********** \n\nThat evening as she walked up the steps to Wetap's front door, Amber felt so alone. Neither the party nor her friends had been able to lift her gloom.\n\nShe loved Richard so much, why couldn't he understand? They needed each other, they always had. \n\nJust as she reached for the door handle, it swung open. Gordon had seen her coming up the steps. Before she could say a word, Gordon greeted her with a smile, \"Good evening Miss Amber and congratulations.\" \n\nAmber managed a feeble smile as she thanked him. As she started to remove her jacket, Gordon stepped up to help and proceeded to hang it up for her. \n\nGlancing down at the umbrella stand, Amber couldn't resist. She reached out and ran her thumb over the beautiful hand crafted gold and silver wolf head that adorned Richard's cane. \n\nJust touching it made her feel closer to him. If only Richard were here... his cane? His cane!!! He was never separated from his cane. Unconsciously, she clasped his cane to her chest as she spun around looking imploringly at Gordon. \n\nEven though she already knew, his robust smile confirmed it. Without thinking, Amber ran to the door of Richard's study shouting, \"He's home, he's home, Richard has come home.\" \n\nAfter throwing open the door, she discovered he wasn't there. She knew where he would be if not in his study. \n\nScreaming, \"He's home, he's home,\" she took the stairs two and three at a time. She was on a quest and nothing could stop her as she headed to the second level and Richard's bedroom.\n\nA pair of feminine eyes watched the entire scene from the partially cracked door of her office. After Amber had ascended the stairs, Maria quietly slipped from her office to the study.\n\nFlipping on the lights, Maria made her way to Richard's desk and opened the center drawer; reaching into her pocket, she pulled out the mobile home key. 'I don't think Amber will ever need this again... for any reason.' She dropped the key back in the drawer before pushing it closed. \n\nAfter she turned off the lights Maria headed off to bed to join her husband. Her last thought for the evening was, 'Richard will be happy now, no more pain for either of them, Wetap is finally right.'\n\nOn the second level, Amber had reached Richard's bedroom door. She hesitated, debating whether to knock or barge in. If she knocked, she would have to wait for him to answer. Throwing the door wide open, she barged into Richard's bedroom, quickly closing it behind her.\n\nShe immediately spotted him standing by his big bay window which had been designed to overlook a huge portion of Wetap. \n\nWith his back to her she was able to take in his masculine shoulders while he leaned against the window sill, just standing there in his pajama bottoms. As she checked out his sexy looking butt, her only thought was, 'Damn girl, you could very easily get used to this.' This time, she knew she would.\n\nRichard turned. She excitedly gasped in a half sob, \"Your smile is back.\"\n\n'Why do women always do that?' he wondered as tears suddenly adorned her smiling face. He replied, \"Hmmm... I never knew it was gone... MISS AMBER.\"\n\nFor years to come, whenever he would recall the precious events of that evening, he swore he never saw her move. What he remembered next was after she had crossed the room and leapt into his arms. She almost bowled him over when she threw her arms around his neck and wrapped her legs around his waist, her summer dress flaring out in the flurry of action \n\nHis first conscious realization was their tongues again engaged in that now familiar dance. His second was holding her ass in his hands, a cheek in each. His third was, 'Damn man, you could very easily get used to this,' and he knew he would.\n\nFor the second time that day, he heard that sexy moan escape Amber's throat. It was a sound he decided he not only liked, but hoped to hear every day for the rest of his life.\n\nAs they slowly disengaged, he let her slide down gently. Before he could speak, Amber started unbuttoning her dress. \n\nBy the time she had undone the second button, Richard snapped out of his reverie. With a smile she easily recognized, he asked, \"What part of my speech concerning the sanctity of Wetap didn't you understand, Miss Amber?\"\n\nAmber froze, fingers locked on the third button. Her face reflected the adventure taking place in her mind as she searched its corners for the correct response to his teasing question. \n\nSomewhere in the deep recesses she evidently found the answer she was looking for. As a smile spread across her face, she glared at him through narrow slits. \"Okay, on your knee Richard.\"\n\nHe queried with a chuckle, \"Beg your pardon Miss Amber.\"\n\n\"Look, you're the one that told me I am the true 'Mistress of Wetap.' Were you telling me the truth?\" she light heartedly demanded.\n\nWithout hesitation, he replied, \"Absolutely! And you know it Miss Amber.\"\n\n\"Then do as you're told. On your knee, that's an order,\" she playfully commanded again.\n\nWith a big smile, Richard slipped down on one knee. He already knew what was coming as he thought, 'Damn I love this girl.'\n\nThrough gritted teeth, she demanded, \"Repeat after me. Miss Amber, I love you and want to marry you if you will have me.\"\n\nRichard laughed out loud, \"Isn't that an awfully big leap Miss Amber?\"\n\n\"If you want to have a happy marriage Richard, you'd better start learning to follow orders, so repeat what I said Mister.\" Richard could see the merriment dancing in her eyes, even through the narrow slits.\n\nWith a deep sigh representing his total surrender, Richard reached out gently grasping her legs behind each knee. \"Miss Amber, I've searched all my life for the perfect woman. One I could give not only my heart but also my second greatest love, Wetap.\n\nThe greatest honor I could ever have bestowed on me would be for you to accept both. If you would agree to become my wife, I pledge all that is mine to you.\n\nI trust no other with my most beloved possessions. If you find it in your heart to share it with me, you will make me the happiest man alive.\"\n\nHer tears began to flow before he even finished. Releasing the button, her hand stroked through his hair, grabbing a handful playfully.\n\nShe lovingly tugged his head back so that he was looking up at her. \"Oh Richard, I see that we are going to have problems before we even start. You don't obey orders well at all. But I'm glad; I liked your version much better than mine. \n\nMy answer is 'YES, YES, YES,' a thousand times 'YES,\" as she bent over to give him one of his now favored kisses.\n\nBy the time Richard had risen to his feet, her dress was sliding to the floor. Before he could speak, she had unhooked her bra, literally peeling it off her beautiful breasts.\n\nDumbfounded, he could only watch in fascination as she hooked a thumb in each side of her panties and rolled them down her hips until they broke free and fell to the floor, where she gracefully stepped out of them. She was more beautiful than he had ever imagined. \n\nShe jumped into his arms, once more locking her legs around his waist. This time, he found himself holding two naked ass cheeks in his hands. 'Damn, there is no doubt, I do love this,' he thought. \n\nTemporarily regaining his composure, he started to ask, \"Miss Amber, what about the sanctity...\"\n\n\"Richard, I have the sanctity of our house well covered,\" she interrupted him. \"We are now engaged. I don't think anyone is going to lose any respect for us or themselves from this point forward. Speaking of points, is that thing I feel pointed between my legs loaded?\" Amber giggled.\n\nAll of a sudden, he realized his pajamas were covering an erection trying its best to knock at her door. Red faced, he apologized, \"I'm so sorry Miss Amber.\"\n\n\"I'm not,\" she responded immediately. \"You once told me 'never mistake gentlemanly behavior for a lack of desire,' and I don't intend to. Richard, I love the gentleman, but I don't want to see him the rest of the night, I want and need my man filled with desire.\n\n\"I want him to tuck me in bed, join me there, and make passionate love to me for the first night of the rest of our lives. With any luck, we might even start that big family tonight.\"\n\nShe pressed her lips to his as they lost themselves in a long passionate kiss. Richard slowly turned until he was facing the bed. As he stepped forward, Amber broke the kiss and implored, \"Please be gentle the first time Richard.\" \n\nHis puzzled expression begged her explanation, \"This is my first time, I'm still a virgin.\" To this day, she can't figure out where the smile Richard had that very moment came from. She had never seen it before and has never seen it since, but she knew it displayed his immense pleasure.\n\nJust as they reached the bed, Richard looked slightly perplexed, \"Just one more question Miss Amber.\"\n\nConfused she responded, \"Okay, what is it.\"\n\n\"Are you going to put my cane down before we get into bed?\" he implored.\n\n\"Nope, get used to it,\" she firmly stated.\n\n**********\n\nRichard did reach seventy-two; actually he lived to be eighty-two. They had been able to intertwine their lives and love for thirty-four wonderful years. It amazed the employees; they never recalled seeing them apart. \n\nIt turned out that first night probably did start their large family; nine months later their first son was born. Not to be the last though, their love produced several offspring. They figured nature would set the final number and it eventually did. \n\nDuring those thirty-four years, Amber and Richard were devoted parents, spending hours upon hours with their kids. \n\nAs Amber had predicted, Richard became very proficient at 'throwing soccer passes and shooting football hoops.' Richard laughed every time he thought about it. The boys at their daddy's behest became pretty good golfers. \n\nRichard didn't live long enough to see any of the great grandchildren, but he did get to spend time with several of the grandkids. He never tired of spoiling them rotten.\n\nAmber and Richard had constantly strolled about the estate side by side, almost as if continually dancing with each other. Occasionally when she did one of her abrupt spins, Richard would be looking or moving in another direction. Amber never failed to stop and hold out her hand until he noticed and caught up with her. The employees would chuckle, if it was a dance, then she always led. \n\nOver time age began to wear on Richard's abilities. The many long walks were slowly replaced with more and more time spent relaxing in rockers. Amber's love proved to be total and devoted. After years of keeping Richard at her side, she lovingly and happily remained at his, sitting together, holding hands, doing the one thing they did from the start, they talked. Amber proved correct; they never ran out of things to talk about.\n\nRichard did eventually tell her the story, she absolutely loved it. At last, she understood his sentimental affection for the name Wetap and why he chose it for his beloved estate. From that time forward the name Wetap carried a very special place in her heart.",
        "The one thing that puzzled everyone, including Richard for all those thirty plus years was Amber's refusal to let go of Richard's cane. She kept a firm grip on it from that first night and was never seen without it again. \n\nOver the years, Miss Amber and the beautiful cane became a given, it was understood by everyone. No one ever asked why she kept it clutched to her heart or why her thumb was always stroking the wolf head. \n\nThe only time it left her bosom was when Richard and she made love, but she held it at her side even then. Richard had thought she was joking that first night, she wasn't, it went to bed with them not only that night, but every night thereafter. \n\nIt didn't bother Richard; he seemed to understand that it somehow represented him in her heart. Apparently after bridging some emotional gap that night, it had become the equivalent of a security blanket.\n\nHe finally realized he would never understand the pain Amber had felt during his two year absence. Even though he had suffered too, it evidently was nowhere near the emotional pain she had experienced.\n\nThat was the one guilt he carried to his grave, but did his best to make it up to her through the years. Richard was sure Amber had been as happy as anyone could possibly be, and so was he. \n\nThey had continued to dine at the restaurant. Richard got tickled the first time they went there for dinner after he returned home. Joseph made the mistake of taking hold of Miss Amber's cane, offering to put it up until they were ready to leave. He never made that mistake again and he cautioned the waiters to pay it a 'never-mind.' \n\nJoseph was very understanding. He had become as fond of Miss Amber as he was of Richard, warming to her charm that very first night when he realized Richard was seeing Amber through special eyes. Richard had proven right, she was special.\n\nA few years after Richard and Amber were married, the owner died and his widow sold the restaurant to Joseph. He hired an excellent maitre d' but Amber and Richard noticed Joseph always would appear and personally seat them. \n\n**********\n\nThirty-five years later found Amber standing in front of Richard's memorial. She had designed and built it on her favorite site at Wetap. They had spent hours sitting on that very spot, even making love there on many a warm starlit night. \n\nIt was also located so Amber could look from the bay window in their bedroom and check on him anytime of the day. Thanks to special lighting, it was most beautiful at night. \n\nRichard's ashes were sealed in the memorial. Amber wasn't worried; after her death, her sons would follow through with her and Richard's last wishes. The seal would be broken and their ashes mixed together before being resealed in the memorial for all eternity. \n\nAfter Richard's death, the family continued to be very close, especially on the major holidays. All the kids would come. Some, days in advance, others just for the day, but they would all be there. \n\nEvery memorial day, the boys walked with their mother to Richard's memorial. She would place her hands on the memorial, still holding the cane and spend a period of time with her head bowed reminiscing about the time she and Richard had together. \n\nAfterwards, she would lay one hand on the memorial as the boys stood in front of her one at a time while she touched her fingers and the cane to their face. They all looked so much like their father; between their personalities, he was there in full with her once again for a few moments each year. \n\nThe boys never complained, they loved and understood her. Each with a different smile inherited from their father, called her \"Miss Amber.\"\n\nThanksgiving was the holiday the girls loved, not just her daughters, but her granddaughters also. They demanded and it became a tradition. It was the one day each year Miss Amber sat down and retold the entire story about a very hungry young girl who spun into the life of her prince charming.\n\nMaria and her family joined them on the holidays. They were family now, and not just figuratively. The families had two marriages between their offspring. Maria's son had married Richard and Amber's second daughter; no one seemed at all fazed by the eleven year gap in their ages. Richard and Amber's second son married one of Maria's daughters, Maria was truly family. \n\nEvery Thanksgiving, Maria was the first to take a seat for the story telling. She always sat far enough back so the younger ones could get in close and no one could see her amusement over the missing parts Amber purposefully left out of the story.\n\nMaria would chuckle when Amber grinned at her while telling about Richard finding her with Raoul. She didn't feel Amber's omission of being naked and in bed with Raoul at the time, detracted from the story. \n\nInvariably one of the curious listeners would ask, \"Whatever happened to Raoul?\" Amber would hedge on her answer, \"After a few days, he just moved on, we never saw him again.\" It was always difficult for Maria to stifle her laughter. \n\nEveryone did notice Amber seemed to stroke the wolf head in a more loving way each Thanksgiving while she told their story. \n\n***************\n\nMiss Amber's sons stood in a semi circle around her casket. The time for all had finally arrived for Miss Amber. \n\nThey were paying their last respects before her casket was rolled into the crematory. The matriarch had been quite a lady, a very special lady. Shortly she was to get her final wish, joining her beloved husband for all eternity. \n\nHer family had been able to tell in her last few years she was growing anxious for this moment. The kids were grown and Maria, her closest friend had passed on. \n\nShe loved Wetap, but without Richard, it had just never been the same. It lacked the wonder he had personally provided. \n\nHer last minute request was also being honored. She had been in a panic when she begged them. They assured her it was no problem and would be done. She had taken her last breath with peace of mind; she knew, like their father, they were all honorable young men and would keep their word.\n\nAs the casket was rolled away, her sons were sharing the same thought, 'I know the wood will burn, but I hope the wolf head doesn't melt. It would be so nice centered in the middle of their ashes where mom can continue to hold it, binding dad to her forever.'\n\n********** ********** \n\nPlease take time to vote. A huge amount of time is devoted to writing a story, good, bad, or indifferent. Your direct feedback, especially direct comments helps writers to become better and more focused, which in turn gives you the reader a better product. Thank you for taking the time to read my story."
    ],
    "authorname": "wetapap",
    "tags": [
        "mature",
        "maitre d'",
        "romance",
        "street girl",
        "wetap",
        "wonderland"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/binding-ashes"
}