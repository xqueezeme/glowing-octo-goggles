{
    "title": "The Gulf Coast Move",
    "pages": [
        "While this story draws on some real experiences, it is a work of fiction. Any resemblance to any real person or institution is coincidental and unintentional.\n\n*****\n\nIt was one of those moments when you think \"yes, things have worked out pretty well.\" My wife, Carol, my daughter Gwendolyn, and I were standing outside our newly-built home on a barrier island on the Florida Gulf Coast. We were actually moving in to a small piece of paradise. We would learn what was on offer in that paradise, and a great deal about ourselves, in the coming months.\n\nCarol and I had met in college. Despite being a second-string football player (scholarship you know), I managed to get a BS in electrical engineering and computer science. Carol got her degree in economics. We both stayed on. I got my Master's in EE while Carol got an MBA. I got a job with a small tech firm in the Midwest. Carol was from the East Coast and had a job offer from a big name New York investment bank. Instead, she took a job with a much smaller venture capital firm to stay in the same city with me. While most of Carol's decisions are patently sensible, I've never really understood her thinking behind that one.\n\nCarol and I got married a year out of grad school. Not long after that, I started playing around in my spare time trying to devise solutions to some technical issues I was seeing at work. Due, probably, more to luck than skill, I found solutions. Carol's advice was not to simply turn my spare-time work, funded with our money, over to my employer but to monetize it myself. Thus, at age 26, Carol and I became entrepreneurs.\n\nDue primarily to Carol's business and marketing skill, several companies started buying my products. Seemingly satisfied with those, I began getting requests to devise solutions to other problems and to devise ways to improve upon the technology my clients already had in place. While not 100% successful in fulfilling those requests, I did succeed on far more than I failed on. Again, due to Carol, more companies began buying my solutions and my support. We worked like dogs, but, in ten years we had a real company with enough revenue to support 50 highly qualified employees and we no longer worried about how to pay our bills.\n\nEarly on in our efforts to build our company, I added to Carol's burdens by getting her pregnant. Gwen was born when we were both in our late 20's. She sort of grew up with our company.\n\nCarol is about 5'5\" and, while not petite, is slender. Despite teasing me for being a dumb jock, Carol has always stayed in shape. Her figure is not imposing, but is perfectly proportional. Her face, framed by her brown hair, ranges from beautiful in repose to exquisite when she smiles. Gwen inherited her mother's face and proportional figure, but has it a bit more on my scale. Gwen is simply a bit bigger in the chest, shoulders, and hips than her mother. Both women are beautiful. Based only on seeing the two walk past, you would probably conclude that Gwen is sexier.\n\nBy the time Gwen had turned 18 and graduated from high school, both she and the company had grown up very well indeed. Gwen was a beautiful young woman. She had been a moderately successful diver and tennis player in high school and graduated second in her class. She had also been accepted to college at our alma mater, which had become much more selective since it gave me degrees. The company had grown to around 150 people split between an office in the Midwest and one in Silicon Valley. During Gwen's junior year in high school, a much larger, worldwide, tech company offered to buy us. The offer was way, way too good to refuse.\n\nCarol and I found ourselves, in our late 40's, financially set for life with our child about to fly the nest. Carol decided that this was the time for us to relocate to a place where we could worry about a hurricane every decade or so instead of multiple blizzards per year. I wasn't really thrilled about leaving the Midwest, but Carol had left her part of the country for me so I figured that I owed her.\n\nWith Carol's usual very systematic approach to major decisions, we looked into a number of warm-weather areas domestically and elsewhere. For a number of reasons, we decided on the Florida Gulf Coast, not the least being that Tampa and Ft. Myers were both reasonable duration plane flights from where Gwen would be in college. We made several trips to the region before we found a reasonably-sized lot with an older, poorly maintained, house for sale on the Gulf side of a barrier island. The land was expensive and the old house would have to be replaced, but we could now afford it. \n\nWe wanted Gwen to finish high school where she was. Gwen graduated at the end of May. We took occupancy of the new house a week later. Gwen struggled with leaving her high school friends two months earlier than necessary, but the lure of beach and pool won out.\n\nOur new house had neighbors on both sides. However, as seemed customary on the island, the lot had been landscaped so that you did not see the neighboring houses or the road. We added to the existing landscaping added some landward of the dunes to screen our pool and patio. The beach was public property. Having walked the beach several times before, we saw that our neighbors had done the same thing.\n\nCarol and I had been down to see to finish items several times that spring. However, Gwen had been in school and had last seen the new house just as the framing was being completed. It was largely a surprise to her.\n\nWe parked our two cars in the ground level garage and carried our bags into the new house. The moving vans (yes, plural) were due later that day and the next. Carol and I were quietly pleased. Gwen walked from room to room making exclamations of approval.\n\nBack in the central hall, Gwen asked, teasingly, \"Why did you guys wait until I'm leaving for college to build this?\"\n\n\"So you'd have some place warm to come on breaks,\" Carol replied.\n\nGwen stepped out onto the back patio and looked it and the pool over. \"This is wonderful,\" she said. \"I can't see another house. I can lay out here and work on my allover tan.\"\n\n\"Not so fast, young lady,\" Carol replied. I figured that my daughter talking about getting an allover tan was not a conversation which I should join.\n\nThe move went more smoothly than I expected. We spent the following week getting our things situated in the house \"just right\" and learning the important facts about our new neighborhood: where to get good wine and the best fresh fish. It was hard not to fall into \"vacation mode\" on the island so we were not working too hard. \n\nSince we could not see the entrance to our driveway at the road from our new house, we had installed a sensor at the end of the drive. Anyone determined to get past it undetected could, but it set off a buzzer in the house if a car pulled in. That buzzer went off around 4:00 p.m. on our first Friday in the house. \n\nThe buzzer was a surprise since we did not know anyone on the island or the adjacent mainland. Carol and I both went to the front door to see who was coming in. We saw a new Mercedes convertible with the top down and two people inside. The car stopped. A man and woman got out and rang our doorbell.\n\nI opened the door to an attractive couple who were, I guessed, a few years younger than us. The man was about Carol's height, with short dark hair and a deep tan. He had the thin and ultra fit look of a distance runner. His face created showed intelligence. The woman was about the same height as the man. She was blonde and also had a deep tan. She was also looked very fit but a bit more solidly built than her companion. Her face was more towards cute than beautiful. \n\nAs I opened the door, the man extended his hand. \"Hello neighbor,\" he said. \"I'm Ian Woods and this is my wife Kirsten. We live over there.\" The man gestured towards the house that I knew to be just north of ours but which I could not see.\n\n\"We knew, of course, that someone was building a new house here and we saw a moving van last weekend,\" Kirsten said. \"We thought that we should come over and introduce ourselves.\"\n\n\"Thank you. Please come in,\" Carol said.\n\n\"I'm Harry Stone and this is my wife Carol. Our daughter Gwen is around here somewhere.\"\n\nIan's brow furrowed slightly. \"Not the Harry and Carol Stone of...?\" he asked, giving the name of our company (which I'm not allowed to use anymore).\n\n\"The same,\" I said smiling. \"You have me a bit worried though if our reputation has preceded us.\"\n\n\"Oh no,\" Ian replied. \"A big part of my business is cyber security. Some of my clients use some of your products.\" Gesturing at the house, Ian added, \"I infer that the story that you cashed out in a big way was true.\"\n\n\"Close enough,\" I said, showing my Midwestern reticence about discussing personal wealth.\n\n\"May we see what you've built?\" Kirsten asked.\n\n\"My pleasure,\" Carol replied.\n\nWe showed Kirsten and Ian around the house and the back patio/pool area. Gwen swooped in long enough to be introduced. The tour ended in the kitchen/breakfast area. Since it was about that time of day, I offered Kirsten and Ian a drink. They both expressed gratitude for glasses of wine. I poured four glasses of an Italian red and we sat and listened to Ian and Kirsten tell us about living on the island for about 45 minutes.\n\nKirsten and Ian were both, to my perception, intelligent and articulate. Each of them also had a quality that I can best describe as charisma. You found yourself liking them and trusting them.\n\nFinally, Kirsten said, \"I'm sorry. We're probably keeping your from your dinner. Ian we shouldn't intrude any longer.\"\n\nIan responded, \"I forgot something. Back in a moment.\" He went and was back quickly carrying a bottle of wine. He handed it to Carol and said, \"A housewarming gift.\" Carol and I thanked them.\n\nAs they were standing to leave, Kirsten said, \"We thought it would be nice to have a little cookout by the pool to welcome you to the island. Just us and our son Jason who's home for a short while. Say next Saturday at 6:00? Would you, and bring Gwen?\"\n\nCarol looked at me. I nodded. \"We'd love to,\" Carol responded. \"Thank you very much.\"\n\nAs Kirsten and Ian started down our front steps, Kirsten turned and said, \"Oh, I should warn you: we never wear anything in or around our pool. I hope that doesn't scare you off.\" Without waiting for any response from us, Kirsten and Ian got into their car and drove off.\n\nCarol and I went back inside. \"They seem like very nice people,\" Carol said, \"but that last bit was odd.\"\n\nGwen had come into the foyer. \"What was odd?\" she asked.\n\n\"Kirsten and Ian invited us to their house for a cookout by their pool,\" Carol said. \"That was nice enough, but, just as they were leaving, Kirsten said that they don't wear clothes around their pool.\"\n\n\"Are we going?\" Gwen asked.\n\nCarol looked at me. \"I don't know,\" she said.\n\n\"The going naked part threw me,\" I conceded. \"However, they didn't ask us to. As your mother said, they seem like nice and otherwise reasonable people. Part of me doesn't want to be seen as rude to the first people here who have reached out to us.\"\n\n\"If we go, are we going to be naked?\" Gwen asked.\n\n\"Like your father said,\" Carol responded, \"they didn't ask us to go naked. They just said that they do and that they hoped that didn't scare us off. Do you want to go naked?\"\n\nGwen did not immediately respond to Carol's question. I could see some nervousness in her face. Whether that was over the idea of being naked in front of strangers or in front of Carol and me I didn't know. By tacit mutual consent, Carol, Gwen, and I tabled a decision on whether to go to the Woods'.\n\nI didn't think of Carol or myself as prudes. We had a pretty active sex life exclusively with each other. Carol and I enjoyed being naked together, but we'd not gone naked with anyone else since a little drunken skinny dipping during undergrad. I certainly hadn't seen Gwen naked since I'd changed her diapers.\n\nCarol brought the subject back up over dinner that Wednesday. \"Kirsten and Ian think that we're coming Saturday,\" she said. \"If we're backing out, we simply must tell them.\"\n\n\"I want to make friends down here,\" I said, \"they they mostly seem like good people. I'm just not sure about spending an evening with Kirsten, Ian, and their son walking around naked.\"\n\n\"Son?\" Gwen asked.\n\n\"Yes, their son is with them for a while,\" Carol replied. \"They said he goes to school in Boston and is working on some research for a professor over the summer. The professor went to Europe for a month, so Jason came to stay with his parents.\"\n\n\"I'm more interested,\" Gwen said. Gwen had dated a boy semi-seriously through her sophomore and junior years of high school. The relationship cooled during her senior year. Gwen said that she was backing it down in preparation for the split up when they went off to college. \n\n\"I suppose,\" Carol said, \"that we could go and leave our clothes on. If it gets uncomfortable, we can make-up an excuse and leave.\"\n\n\"I like that idea,\" Gwen said. \"I'm curious and I know that we're, sort of, starting a new life here. I'm just not sure that I'm ready to be naked in front of the Woods or them.\" We adopted Carol's plan.\n\nSince it was a pool party, I wore a tee shirt over a pair of the long, baggy trunks. Carol wore a sleek one-piece under a beach cover-up. Gwen wore a fairly conservative bikini and a cover-up. The three of us walked down our drive to the road, up the road a couple hundred yards, and up the Woods' drive to their front door.\n\nIan answered the door and was, indeed, naked. \"You should have come up the beach and just walked over the dunes to our pool,\" he said pleasantly.\n\n\"Well, having not been here before, that seemed too familiar,\" I said.\n\n\"No problem!\" Ian said. \"Kirsten's out back. Jason's upstairs working on something. He'll be down in a bit. Come on back\"\n\nWe followed Ian's bare ass through the Woods' house. Ian's nudity confirmed my initial impression of a very fit, compact man.\n\nAs we walked out onto the, Kirsten turned from what she was doing to face us. \"Good evening. I'm so glad that you came. Can I get you all something to drink?\"\n\nSeeing Kirsten nude was astonishing. Clothed, she was attractive; naked, she was beautiful. I was looking her up and down before I even realized it. I quickly averted my eyes.\n\n\"It's ok to look Harry,\" Kirsten said. \"If I'm intentionally nude in front of you, I'm giving consent for you to look. Being looked at is part of the fun of going nude. Now, what would you like to drink?\"\n\nKirsten got the three of us drinks. (We allowed Gwen to drink, moderately, in our presence.) Ian asked, \"Would you like to get undressed?\" When none of the three of us said anything nor made any move to strip off, Ian said, \"No? That's cool.\"\n\nWe sipped our drinks and talked about everything except Kirsten's and Ian's nudity while they started on grilling the dinner. Over her shoulder, Kirsten said, \"Please, feel free to use the pool.\"\n\nIt was a warm evening. Gwen took off her cover-up, went to the pool, and gracefully dove in. Carol took off her cover-up and walked down the steps in the shallower end. Ian and Kirsten had both been watching Gwen and Carol. \"You have a very beautiful wife and daughter,\" Ian said to me.\n\n\"Thanks,\" I said. \"We're lucky that Gwen seems to have gotten mostly Carol's genes instead of mine.\"\n\nKirsten turned towards me, giving me another view of a firm abdomen and one firm, perfectly-shaped breast. \"You're not being fair to yourself Harry,\" she said. \"You're a very attractive man. Gwen is very beautiful and I see a lot of you in her.\" I glanced at Ian, who seemed pleased at his wife's compliment to me.\n\nCarol and Gwen swam a few laps while I stood chatting with Kirsten and Ian. Kirsten had said that it was ok to look. Gwen was pushing herself out of the pool when we heard a fairly deep male voice say, \"Mom, Dan, anything I can help with?\"\n\nLooking towards the house, I saw a dark-haired young man walking out. He was slightly taller than me, although obviously lighter. He has the male swimmer build: broad shoulders tapering to narrow waist and hips. He was tan, although not as deeply tan as Kirsten and Ian. He was also naked. Because of that, the first thing I really noticed was his impressive dick, long and thick. Glancing at Carol and Gwen, I knew that they had noticed too.\n\nKirsten introduced us. Jason walked over to me and extended his hand. As we shook hands, Jason said, \"It is a pleasure to meet you Mr. Stone.\"\n\n\"Likewise,\" I said, \"and please call me Harry.\"\n\nJason went to Gwen and extended his hand. Gwen shook his hand while very noticeably looking him over. Jason had to have noticed but was unfazed. \"Good evening Miss Stone, thank you for coming,\" Jason said.\n\n\"It's Gwen, and I'm pleased to be here,\" Gwen responded.\n\nCarol had gotten out of the pool. Jason went to her, extended his hand and said, \"Good evening Mrs. Stone. I'm glad that you came.\"\n\nCarol was looking Jason over too, although not as blatantly as Gwen had. Knowing Carol, I was pretty sure that she was enjoying what she was seeing. Carol thanked Jason and added, \"I'd prefer that you call me Carol.\"\n\nKirsten, Ian, and Jason prepared and served an excellent meal. Jason added intelligently to the conversation. Like his parents, had subtle charisma and magnetism.\n\nA fair amount of wine was consumed with dinner. That, and the fact that the Woods just naturally put you at ease, led Carol to address the elephant on the patio.\n\n\"Why do you not wear clothes and aren't you uncomfortable being naked around clothed people?\" Carol asked.\n\n\"To answer your second question first,\" Ian said, \"the simple answer is 'no.'\"\n\n\"Being nude around people who are dressed heightens my sense of being nude and exposed, which I find very pleasurable,\" Kirsten added.\n\n\"I'm not going to explain this well,\" Jason said, \"but, when I'm naked around people who are clothed, it's like I have a privilege which you don't. I don't have any clothes on. You do.\"\n\n\"The answer to your first question is multi-faceted,\" Kirsten said. \"On one level, not having any clothes on is simply more comfortable, especially in a hot climate such as we have here. The feeling of the sun and breeze on my bare skin is exquisite. Once you have swum in the nude, you will never, ever want to swim wearing anything again.\"\n\n\"And the other level, Dear?\" Ian asked with a smile.\n\nKirsten smiled back. \"The other level is that I take pleasure in having people see those parts of my body that most people think should be concealed. The human body is the highest art.\" Kirsten stood up and pushed her chair back a small ways with her leg. Facing us, she said, \"I've put a lot of work into my body. This may sound conceited, but I think that I look pretty good and I'm proud of my body. All of it.\" Kirsten then turned around so that her back was to us. She spread her legs slightly and bent way forward, exposing herself fully.\n\nAs Kirsten straightened up and turned back to us, Carol surprised me by saying, \"Yes. You are correct. You are a very beautiful woman.\"\n\nI glanced at Gwen to gauge her reaction to Kirsten's exposure. I doubt that she saw it. She and Jason were having their own conversation. Gwen was leaning forward looking, I imagine, at Jason's dick. She had put her cover-up over the back of her chair. Gwen still had her bikini on. However, leaning forward as she, she was giving Jason a good look at some very nice cleavage.\n\n\"Are all of your friends nudists?\" Carol asked.\n\n\"Not all,\" Ian replied. \"The preferred term today is 'naturist' although I can't tell you what the difference is. We have a few friends who come over knowing that we will be nude and who stay clothed. We certainly try to encourage the people with whom we want to be close to go nude.\"",
        "\"We've been pretty successful,\" Kirsten added.\n\n\"How did you get started?\" I asked.\n\n\"That's a long story,\" Ian answered. I sensed movement out of a corner of my eye. Jason and Gwen were getting up from the table. They went to two chairs on the opposite side of the pool, sat down, and continued their conversation.\n\nTurning back to Ian, I said, \"Please share it.\" Ian smiled.\n\n\"Actually, it's Kirsten's fault. I got out of school and went to work as a civilian security specialist with the DOD. I worked on everything from cyber security to keeping the really nasty weapons safe to keeping bad guys off post or minimizing the damage they could do if they got on post. I worked with a lot of private contractors and, frankly, thought that I could do better. Once I decided to start my own security firm, I looked around and decided that Florida was likely the best market. I came to the West Coast jut because I like it better than the East Coast. One of the first pieces of work I got was working on a flaw in the room security at a resort a little ways north of Tampa. Kirsten was working there and was my primary client contact.\n\nKirsten took up the story. \"My degree was in hotel management. When I got out of school and started looking for a job, I saw that this \"clothing optional\" resort in Florida was looking for an entry level management person. The pay was decent. Having gone to school through some ugly winters, the idea of working in Florida appealed to me. I assumed, correctly, that the staff wasn't expected to go nude. They offered me the job. I thought that it would be an adventure and give me good stories to tell so I took it.\"\n\nKirsten took another sip of wine. \"The managerial staff had to stay clothed on duty. However, all of the people I worked with were there because they were naturists. Everyone was nice about it, but I got a lot of peer pressure to go nude at the resort with them when we were off duty. I finally decided to do it. I rationalized that, since our guests went nude, I really should know what that was like. The first time I did it with two girls I worked with, I was scared and excited. We came in on an off day. We left our clothes in the office. It was a weekday, but there were still quite a few people out at the pool. The other two girls just walked out of the office nude. I had brought a rather sheer robe that I wore outside. Once we found loungers together, the other girls stared at me until I took the robe off. I hate to say that it was an epiphany, but pretty close. I felt great with nothing on. I was up walking around naked constantly. People noticed me and I discovered that I enjoyed that. I've never looked back.\"\n\nIan resumed, \"Like I said, Kirsten was my primary client contact at the resort. It took me some time and work to get the issue solved and I spent a lot of time with her. I won't say 'love at first sight,\" but I was very impressed by this gorgeous, intelligent, witty blonde who worked at a nudist resort. After I finished the assignment, I asked her out. On our first date, I asked her what it was like to work at a 'clothing optional' resort. I guess that I was hoping titillation. Instead, I got an ode to the joys of going around with no clothes on. I realized that, if I wanted to get close to this woman, I'd have to go naked too. Well, I did want to get close to the woman. That's undoubtedly the best decision I've ever made.\"\n\n\"That is very interesting,\" Carol said.\n\nThe conversation continued on the topic of Kirsten's and Ian's nude life for a time and then drifted into other areas. Ian told us about his business, which was based in Tampa. Kirsten explained that she was, basically, a housewife but that Ian still got a reasonable amount of work with the hotel/resort/cruise ship industry with which she helped, tempering his security focus with industry business concerns. Gwen and Jason continued their own conversation. Perhaps it was the wine or the climate, but, as the evening went on I started thinking that Kirsten, Ian, and Jason were more appropriately attired than we were.\n\nIt was a very pleasant evening. Carol, Gwen, and I stayed clothed the entire evening. When we were ready to leave, Ian showed us how to get from their patio to the beach. It was a much shorter walk along the beach back to our house.\n\nOnce we were home, Carol said to Gwen and me, \"Well, what did you think?\"\n\n\"I was very impressed with Jason,\" Gwen said.\n\n\"He is impressive,\" Carol said with a slightly naughty tone.\n\n\"That's true, but not what I mean,\" Gwen replied. \"He's very polite and kind. He listens. And, he's a Dean's List in finance and international relations at...\" Gwen named a school with an international reputation. \"What did you two think?\" Gwen asked. \n\nI looked at Carol. \"Kirsten and Ian are very nice, engaging, and interesting people, and great cooks,\" Carol said. \"In that setting, the nudity really doesn't seem out of place. They are certainly effective advocates for not wearing clothes.\"\n\n\"Are we going back and going naked with them?\" Gwen asked.\n\n\"Do you want to?\" I asked Gwen.\n\n\"I think so, but am not completely sure. That seems like a huge step,\" Gwen said. \"How do you feel about it?\" she asked me.\n\n\"I'm in about the same place you are,\" I replied. Looking at Carol, I asked, \"Dear?\"\n\nCarol's face took on the look that usually meant she was speaking about something that she was taking very seriously. \"I really like Kirsten and Ian. They seem like good people to establish a friendship with in our new home. Becoming good friends with them means, I think, that we're going to have to take our clothes off. Like Kirsten said, when I think about doing that I'm scared and a little excited. But, we're taught from childhood on that there are body parts you don't let anyone see except doctors, lovers, and spouses. That's a hard taboo to break.\"\n\nI turned to Gwen. \"Would you be ok going naked in front of me?\"\n\nGwen smiled and said, \"Dad isn't the question just as much whether you are ok being naked in front of me?\"\n\nWe let the discussion end and headed to bed. I had thought that I was tired, but there had been an underlying sexuality all evening. When Carol and I undressed for bed, we stayed undressed. Carol whispered in my ear, \"I've been horny as hell all night.\" I verified that by putting my hand between her legs. Knowing that Carol wanted to fuck was almost always, by itself, enough to get me hard, and it was that night.\n\nCarol lay down on our bed on her back with her legs spread. I got on the bed, got over her, and slid into her. Carol put her arms around my head and pulled me near to her. \"Let's take our time,\" she said. \"Let's fantasize a bit.\" While I wasn't running a timer, that night was undoubtedly our longest lovemaking session in quite a while. It ended very energetically when Carol finally told me to get her off. I came very hard inside of Carol. She screamed, which she almost never does. Even though she was panting, that brought on a fit of giggles. When it seemed that she had calmed down, Carol said, \"Shit. Gwen heard that,\" and started giggling again.\n\nCarol and I got up late that Sunday, dressed, and went downstairs. Gwen was already in the kitchen re-heating our portions of the breakfast she had made. As we walked into the kitchen, Gwen turned to us, grinned, and asked, \"Good sex last night?\"\n\nThat surprised me. We really didn't talk about sex within the family. I was more surprised when Carol answered, \"Fantastic.\"\n\nGwen surprised me even more. She said, \"I get it. Mr. Hitachi was a must last night.\" I knew that Gwen had been using a vibrator since, at least, sophomore year of high school. Carol had helped her pick out her current toy. However, Gwen had never said anything about it in front of me before. Inhibitions were dropping.\n\nThe phone rang before Carol and I had finished breakfast. Carol answered. I heard her say, \"Thank you and thanks again for a lovely time last night. May I talk to Harry and Gwen and get back to you?\"\n\nCarol announced that the caller had been Kirsten Woods, which I'd guessed. \"Kirsten, Ian, and Jason have invited the three of us over for another grill out by their pool next Friday. There is a condition: they want us to go naked too.\"\n\nI was not surprised at the conditional invitation. What I didn't know was how my wife and daughter would react to it. I didn't know what I thought either. Carol's statement was followed by a long silence.\n\nFinally, Gwen said, \"I . . . .uh . . . Shit, I want to do it!\"\n\nI looked at Carol. She smiled and shrugged. \"No one down here knows us except the Woods,\" she said. \"They want us to.\"\n\nCarol and Gwen were both smiling now. \"Ok,\" I said.\n\n\"Are you really ok with it?\" Carol asked.\n\n\"I guess so,\" I said, \"it is going to be a bit weird seeing my daughter naked.\"\n\n\"I've got a pretty nice body Dad,\" Gwen retorted. \"I'll bet you do too.\"\n\n\"So, I call Kirsten back and say that we're coming, naked?\" Carol asked. Gwen nodded her head enthusiastically. I nodded hesitantly. \"I'd better call her right now before anyone gets cold feet,\" Carol said. Carol picked up the phone and dialed. When she got an answer on the other end, she said, \"Ian? Hi, it's Carol Stone. Kirsten called earlier inviting us over next Friday. I'm calling back to accept the invitation.\" Carol paused. \"All three of us,\" she said. She paused again before saying, \"Yes, we'll be as naked as the three of you.\" She paused again and smiled. As if having just been complimented, Carol said, \"Thank you\" and ended the call.\n\n\"Well, that's done,\" Carol said. \"I guess it will be an adventure. Oh, Harry, you probably ought to trim up your pubic hair. You're a bit wild down there.\"\n\n\"Do you need a trim, Mom?\" Gwen asked.\n\n\"Damn,\" Carol said, \"I probably do.\"\n\n\"I can help,\" Gwen said. \"We don't know any good salons down here yet.\"\n\nCarol surprised me again. \"That would be great. Thank you Gwen,\" Carol said.\n\nThe week flew, punctuated by Gwen teasing about us being naked together. Just before 6:00 that Friday evening, I stood on our patio wearing only a very long tee shirt and flip-flops. Carol came out first. She was wearing a large piece of cloth with a tropical print that was sort of wrapped around her body and tied at one shoulder. She had wrapped it tightly enough to make clear that she was nude underneath. I noticed that she also wore a slight bit of make-up. She looked exquisite. \"Make-up?\" I asked.\n\nCarol smiled. \"It's waterproof. I decided that I wanted to look good for my unveiling.\"\n\n\"Dear, there has never been a moment since I've known you that you have not looked utterly beautiful,\" I replied.\n\nCarol came over, put her arms lightly around me, and kissed me. We were still in that position when Gwen came out. \"Fooling around already and you're not even naked yet?\" she teased.\n\nGwen had dressed similarly to Carol, albeit wearing a cloth with a different print. The cloth was sheer enough that, with the position of the sun, you could see Gwen's bare body in outline. Gwen also had slight make-up and a tropical flower in her brown hair. Gwen looked different than her mother, but every bit as beautiful.\n\nWe started towards our gate to the beach. \"Dad,\" Gwen said, \"you might want to lose the flips. It will be easier to walk on the beach and nude means barefoot too.\" I looked and Carol and Gwen were both barefoot. I lost the flips. I picked up the two bottles of red wine we were taking and we set off.\n\nIt only took about five minutes to walk to the Woods' home along the beach. It seemed like both five seconds and five hours. I started to wonder whether I was making too big a deal out of this. Then I looked ahead and saw Gwen's perfect ass barely concealed by whatever you call what she was wearing. I thought, \"Oh shit! My daughter and I are about to go naked in front of each other. Is that even legal?\" My anxiety was rising rapidly.\n\nKirsten, Ian, and Jason were all on their patio when we walked in. They were all naked. Ian greeted us, \"Hello. Happy Friday. It's great to see you.\"\n\nKirsten added, with a laugh, \"We're looking forward to seeing a lot more of you very quickly.\"\n\nI stepped forward and handed Ian the two bottles of wine. I took a couple of steps back so that I was standing more-or-less in line with Carol and Gwen. Carol said, \"Well, I guess it's time.\" Kirsten, Ian, and Jason turned to look at us. Carol and Gwen reached up to their shoulders where their wraps were tied. I looked straight ahead at Kirsten, who looked very desirable naked. We made eye contact and she smiled. I grabbed the hem of my tee shirt and pulled it over my head.\n\nKirsten stepped towards me with a hand extended. \"I can take that,\" she said. I handed her the shirt. Kirsten very openly looked me up and down. I shocked myself by realizing that I liked having her look at my naked body. \"Harry Stone,\" Kirsten said, \"you have no reason to be ashamed of going nude. Carol, your husband looks great nude.\"\n\nI turned to Carol, who was now naked. She looked more beautiful than ever. Carol smiled at me and answered Kirsten, \"I know.\" I stepped over to Carol and we hugged.\n\nI was making a point of not looking at Gwen. Once Kirsten had stashed my shirt somewhere, she marched back to where Carol and I were standing. In something of a voice of authority, Kirsten said, \"There is still something not right here. Gwen, please come here. I want you to stand in front of your father and your mother facing them.\" Gwen timidly came over. I knew that she was in front of us, but I was looking at the paving stones of the patio. \"Harry, Gwen,\" Kirsten said, \"Get your eyes up and look at each other. There is nothing wrong. You are both good people with beautiful bodies. So what if you're related? Take pleasure in each other's beauty.\" I still didn't look up. \"Harry, \"Kirsten almost barked.\n\nI looked up. Gwen was looking at me. We made eye contact and Gwen visibly ran her eyes up and down my body. With a gulp, I did the same to her. Jesus, Gwen was just as beautiful as Carol naked. Gwen and I made eye contact again. Gwen started to smile. I started to smile. Gwen said, \"Dad, you've got a hot body.\"\n\nI said, \"Gwen, you are drop-dead beautiful with no clothes on.\" Gwen stepped over to me and we hugged. After a moment, Carol joined the hug.\n\nWhen we broke our hug, Kirsten came up and hugged me. Her naked body felt very nice against mine. Ian hugged Carol and Jason hugged Gwen.\n\nKirsten broke her hug with me and said, \"Dinner will be a few minutes. You three get in the pool and enjoy some skinny-dipping.\"\n\nGwen walked to the edge of the pool. She was very beautiful from behind with nothing on. She made an elegant dive into the pool. I looked at Carol and said, \"Damn, I wish I could do that.\"\n\nCarol took my hand. \"Feet first?\" she asked. I nodded. Hand-in-hand, we walked to the side of the pool and jumped in the deepest part.\n\nKirsten was right. Swimming naked is much more pleasant than swimming with something on. We swam a few laps. Carol stopped on the side and put an arm on the pool deck. I swam up very close to her. Carol said softly, but with a smile, \"I know this is bad, but I'm already getting horny.\"\n\nSeemingly out of nowhere, we heard Gwen's voice say, \"That's ok Mom, so am I.\" Gwen swam up and put an arm around each of Carol and me. Gwen was treading water and her thigh bumped my dick. She and I looked at each other. Gwen smiled.\n\nFrom the grill side of the pool, Ian called, \"It is past time for drinks. I found something at a new wine shop on the mainland. I hope that you like it.\" He was holding a tray with three fairly full glasses of red wine.\n\nCarol, Gwen, and I swam until we reached a depth at which we could walk and then walked to the steps at the pool's shallow end. I watched the water drip off of both Gwen's and Carol's naked bodies as they got out of the pool. \"Damn,\" I thought, \"I live with the two most beautiful women alive. I fathered one.\"\n\nAs I got out of the pool, Kirsten came up and handed me a glass of wine. She looked me over again. \"I'm glad that you accepted our invitation to go nude Harry. I think that our two families can be very good friends.\" Carol and Gwen were the two most beautiful women alive but, naked, Kirsten Woods was a close third.\n\nKirsten and Ian made another great meal. The wine flowed a bit more freely. After we finished easting and had cleaned up, we sat back down at the patio table. \"How does it feel to have joined the ranks of those who get naked with their friends?\" Ian asked.\n\nI let Carol answer. \"I'm surprised at how much I like it, \"she said. \"It is very comfortable. Skinny-dipping is divine! I don't have to worry about whether I'm sitting so that I'm showing something because I'm showing everything. I'll admit that I was looking at all three of you last week. I feel more comfortable looking now because you can look at me.\"\n\nGwen added, \"It is more comfortable in the water and in this heat. I've seen Ian and Jason looking at me. I take that as a compliment.\"\n\nI said, \"I'll echo my family about how comfortable it is. This has been an unusual, but enjoyable, method of family bonding.\"\n\n\"Harry,\" Kirsten asked, \"does it bother you that I've been looking at you? You have a beautiful penis you know.\"\n\nI probably blushed. \"No,\" I said, \"that's ok.\"\n\n\"Does it bother you,\" Kirsten continued, \"that Gwen has been looking at you? She has been you know.\"\n\nI had intentionally not thought about that. I was at a loss to answer. Gwen giggled and said, \"Dad, this may be out of line, but Kirsten's right. You do have a great looking dick.\"\n\nKirsten downed about half of her wine. \"There's another exercise we can do,\" she said.\n\nIan swiftly said, \"No, Dear, I don't think we should do that tonight.\"\n\nCarol and I glanced at each other. We both wondered what \"that\" was.\n\nJason stood up, walked to where Gwen was sitting, and asked, \"Would you like to take a walk on the beach?\"\n\nI guess that I reacted visibly to that because Ian said, \"its ok Harry. The beach is very safe and there's no one out there at this hour anyway. It is a bright moonlit night. They can see what not to step on.\" I kept quiet as Gwen and Jason walked naked over the dunes and out onto the beach.\n\nOnce Gwen and Jason were out of sight, Kirsten stood up. \"Now that the kids are away, the adults can be more relaxed,\" she said. She sat down in Ian's lap. Ian put his hand on one of Kirsten's breasts and began fondling it.\n\nCarol and I just watched for a moment. I was very sure that Kirsten and Ian didn't mind. Carol stood up and said, \"They have the right idea.\" Carol sat down in my lap. Bare skin against bare skin with Carol is always good. Like Ian, I began playing with one of Carol's breasts as Kirsten and Ian watched us.\n\nAfter a few minutes, Ian moved his hand between Kirsten's thighs. Kirsten shifted on Ian's lap so that she had easier access to his dick and began stroking him. Carol and I mimicked Kirsten's and Ian's actions. I know that it sounds a bit perverted, but it was very nice and very intimate to be sitting nude on a warm, pleasant evening fingering Carol while she stroked me and watching Kirsten and Ian do the same to each other as they watched us. While Kirsten and Ian were very much into each other, their eyes never left us. I was actually proud that Kirsten and Ian could see what Carol and I were doing for each other.\n\nCarol had me very hard, and I was curious what would happen next, when Gwen and Jason came back over the dunes and onto the patio. \"Mom, Dad,\" Gwen exclaimed, \"You will not believe how cool it is to walk the beach naked at night!\"\n\nCarol and Kirsten both stood up, leaving Ian and me sitting in our chairs, both sporting massive hard-ons. Gwen looked at me and then at Ian. \"I guess you guys didn't miss that much by staying here,\" Gwen said smiling. \"Looking good Dad,\" she added. Turning to Jason, Gwen said, \"I'm sorry that I didn't do that for you.\"",
        "\"There will be plenty of opportunities,\" Jason replied. I wasn't really surprised that something sexual seemed to be developing between Gwen and Jason. They were both very physically attractive, about the same age, and naked. While I obviously didn't know for sure, I doubted that Gwen was still a virgin. She had used good judgment in her sex life so far. I'd have to trust her.\n\nIan stood up with his dick still pointing towards the night sky. \"I hate to suggest that we end this early, but I have a good reason. Kirsten, Jason, and I belong to the local naturist club. They do outings every couple of weeks in the summer to a privately-owned island a bit north of here. You can only reach it by boat. There is an outing tomorrow. Carol, Gwen, Harry, we're hoping that you will join us. Nudity is expected on the island, but we usually strip off as soon as I get the boat away from the marina.\"\n\nI looked at Carol and Gwen. We didn't have any particular plans for the next day. Gwen nodded her head enthusiastically. I noticed that she and Jason were holding hands. Carol said, \"Why thank you. We'd love to go.\"\n\nKirsten said, \"You'll love it.\"\n\nIan said, \"Great! We'll pick you up around 10:00 a.m. if that's ok. That will get us to the island a bit before noon. Most people usually stay until sunset or just before. You can just wear a cover-up or a long tee shirt. Don't forget your sunscreen, lots of it!\"\n\nWe thanked the Woods for a lovely evening and walked naked along the beach back to our house, carrying the few clothes we had worn to walk over. As we walked back, Gwen, trying to embarrass me, said \"Dad that was an impressive boner you had. Mom, does that feel as good as I expect?\"\n\nCarol laughed. \"Better,\" was all Carol said.\n\nWe were up early the next morning despite the fact that Carol and I had fucked much of the night. Gwen volunteered the fact that she had a long session with her vibrator. Carol made some sandwiches while Gwen and I pulled beer, soft drinks, and bottled water from our pantry. The whole lot went into a large cooler along with all of the ice we had. Focused on getting ready for our outing, I'd forgotten that all three of us were naked until my dick brushed against Gwen's hip as we were pulling the last items from the pantry. Already, being naked with my family seemed normal.\n\nOn the dot of 10:00 a.m., a large SUV came up our drive. Ian and Jason got out and helped us put the cooler and our personal bags into the back. Gwen got into the rear bench seat next to Jason. I got in next to Gwen and Carol got in next to me. Ian drove and Kirsten had the front passenger seat.\n\nLike Jason, Gwen and I had both worn long tee shirts which rode up exposing us when we sat down. Carol was wearing the same wrap she had worn to dinner the night before. We had just pulled out onto the road when Gwen said, \"Uh, Mom?\"\n\n\"What Dear?\" Carol responded.\n\nGwen just pointed at Jason's, my, and her exposed genitals. Carol smiled. \"Ok, sure,\" she said. She re-arranged her wrap to expose her triangle. \n\nI suspect that we all flashed some as we unloaded the SUV and loaded Ian's powerboat at the marina. I felt the breeze on my bare ass enough to know that I did. It seemed that we were barely out of the slip, and still well within view of the busy marina, when Ian called out \"Captain's orders: all clothing off!\" Gwen and I pulled our tee shirts over our heads. Carol untied her wrap. \n\nA smaller boat with three early morning fishermen passed close by us headed into the marina. Kirsten stepped to that side of the boat, completely nude, and called out, \"Morning Jack. Catch anything?\"\n\nThe fisherman in the front of the boat did an exaggerated shrug. \"Who are your friends?\" he called back.\n\n\"You'll see more of them,\" Kirsten replied.\n\n\"Hope so,\" the fisherman yelled as the gap between the two boats widened.\n\nTurning to us, Kirsten said, \"That's Jack Belk and a couple of his buddies. I've been flashing Jack every time I see him on the water for a couple of years. In return, he brings us fresh fish every now and then.\"\n\nFrom the helm, Ian reminded us, \"Sunscreen everyone.\" Carol pulled three large bottles from her bag. She handed one to each on Gwen and me. Carol and I began smearing sunscreen on ourselves. Gwen handed her bottle to Jason who began applying the sunscreen to Gwen's front. Ian made another announcement: \"For our newbie's, pay particular attention to pubes, asses, and tits, yours or someone else's. Burns there really fuck up a day.\"\n\nOnce Carol finished her front, she asked, \"Harry, will you do my back?\" Of course I would. Once I had Carol completely covered, she returned the favor.\n\nWhen the rest of us were done, Kirsten said, \"I always miss spots. Harry could you do my front and Jason will you do my back?\" I glanced at Ian, who smiled and nodded his head. Kirsten stood in front of me as Jason and I spread sunscreen on her. \"Harry,\" Kirsten instructed, \"like Ian said, pay particular attention to my tits and my pubes. Jason, make sure you are thorough with my crack.\" Kirsten had a very nice body so I really didn't mind the invitation to rub it intimately. I noticed Carol and Gwen grinning as I worked.\n\nWe reached the small island as Ian predicted just before noon. Several boats were already there and a couple of tents were set up on the beach. Ian and Jason set anchors as I watched uselessly. The women waded ashore holding their bags out of the water. Ian and Jason waded ashore carrying one cooler while I brought the other by myself. As we reached the beach, Ian announced, \"I've brought our new neighbors.\"\n\nWhen everyone had arrived, there were about 50 people on the beach and a generous spread of food and drink. The group appeared to range from people in their 30's to their 60's, but there was one entire family including two teenagers. Everyone was naked.\n\nGwen went with Jason. Kirsten and Ian introduced Carol and me around. We met Bill and Alice Rakestraw. I was surprised to learn that Bill was the chief of police of a municipality in the area. \n\nParticularly memorable because they became good friends of ours were Dr. Susan Woodman and her husband Phil. I guessed that the Woodmans were roughly Carol's and my age. I was stunned to learn that they had 15 years on us. Both appeared to be in excellent shape and had wonderful all-over tans. Susan was an orthopedic surgeon with a practice on the nearby mainland. Phil, as he explained was \"a part of an older generation. I got out of school and started with a local bank as a branch manager trainee. I worked my way up to Senior VP for Branch Operations. The bank was sold a few years back to a much larger bank which closed most of our branches. No need for a VP for branch ops any more. I got a handshake, definitely not golden.\"\n\n\"More like tin,\" Susan interjected.\n\n\"I also found out that no one hires guys in late 50's,\" Phil added. \"Now, I'm just a kept man.\"\n\nWe ate and talked and played some volleyball. Susan and Phil took Carol and me snorkeling a little ways off of the beach. The water was shallow enough that it was quite warm. It felt great on our bare skin.\n\nLate in the afternoon, a few people started gathering their things and carrying them back to their boats. We sensed that it would be time to leave soon. Carol took my hand and said, \"Let's take a walk down the beach before we go.\" We walked down the beach, hand-in-hand, away from the others.\n\nCarol stopped maybe 50 yards from the group. For a moment, we both stood silently looking out at the Gulf and feeling the late afternoon sun on our skin. Carol stepped in front of me and put her arms on my shoulders. Her gorgeous face looked perfectly content. \"I can't say that I planned to be running around naked when we decided to move down here, but I'm glad we've added nudity to our lives.\"\n\nCarol's face was much more beautiful than the Gulf. I looked into her eyes as I said, \"I'm glad you like it.\"\n\n\"Do you Harry?\" Carol asked. \"This is a lot different from how we lived up north.\" \n\n\"Yes, I like it,\" I replied. We kissed.\n\nCarol and I kissed until I felt another arm around my back. Gwen had come up and put her arms around her mother and me. Jason stood a respectful distance away. \"I want to thank you guys for bringing me down here,\" Gwen said. \"I love that we're going naked together. I hope that we always will.\" The three of us hugged. Carol's and, yes, Gwen's, bare bodies felt wonderful against mine. I couldn't think of anything better than to be naked on an island in the Gulf with my naked wife and naked daughter. \n\nWe finally started to walk back to the group, all three of us holding hands. When we reached Jason, Gwen took his hand and the four of us walked the rest of the way. Jason and I helped take down a couple of tents. We carried our things back to Ian's boat and headed home. Before we left, the president of the naturist club made a pitch to us to join, which we committed to do. The sun was setting as we reached the point to turn in for the marina. Carol and I stood in the stern with our arms around each other's waists watching the sunset.\n\nNone of us were dressed when we reached the marina. Jason and I hopped out naked to tie up Ian's boat in his slip. We all walked naked from the boat to Ian's SUV, carrying our stuff. The marina was still busy, but the only reactions we drew were a lot of smiles.\n\nWhen Ian dropped us off at home, Carol said, \"Why don't you guys come over here for dinner tonight?\"\n\n\"Thank you,\" Kirsten said, \"That'd be great. Give us a little time to get our stuff put away.\"\n\nCarol, Gwen, and I started pulling together an impromptu meal. Fortunately, we had steaks and chops which I could grill by the pool. About a half hour later, Kirsten, Ian, and Jason came over the dunes onto our patio. All of us were, of course, naked. \n\nDinner was very relaxed. We talked about Ian's business, Kirsten's time at the clothing optional resort, and the business Carol and I used to run. Kristen and Ian also filled us in on the background of most of the people whom we'd met earlier that day. \n\nA reasonable amount of wine had been consumed when Kirsten asked, \"The three of you are now social nudists. What did you think?\"\n\nGwen responded enthusiastically, \"It was great.\"\n\nCarol, said, \"It was a wonderful time.\"\n\n\"Very pleasant,\" I added.\n\n\"When we got back, all three of you walked nude through a crowded, clothed marina. The people there were looking at your nude bodies. You enjoyed that, didn't you?\" Kirsten asked. \n\n\"Yes, I really did,\" Gwen said.\n\n\"Thinking about it, I did too,\" Carol said.\n\nBefore I answered, Ian said, \"There's another taboo you can break tonight.\" \n\nWhat is that?\" Carol asked.\n\nKirsten and Ian stood up. I had noticed that they had been playing with each other. Kirsten's nipples were hard and Ian was fully erect. Ian took a cushion off of one of our lounge chairs and laid it on the patio. He got onto the cushion on his back. Kirsten walked over, straddling him. She lowered herself down, using her hand to guide Ian's dick into her vagina. Kirsten started to ride Ian.\n\nI heard Gwen say \"Wow.\"\n\nCarol said, \"Oh my!\"\n\nAfter a few moments watching Kirsten and Ian perform, Carol and Gwen looked at each other. Both women were smiling. \"Get two more cushions,\" Carol told Gwen. Gwen pulled the cushions off of two more of our loungers and laid them on the patio next to Kirsten and Ian. Carol got up and pulled me out of my seat. She put an arm around me and started to kiss me. She used her free hand to fondle my balls. Carol had a technique that always got me hard. Forgetting about Gwen, I began to finger Carol's clit. When we were both aroused, Carol said \"On your back, Harry.\"\n\nVery soon, I was on the cushion next to Kirsten and Ian with Carol riding me much as Kirsten was riding Ian. I became aware of movement on the other side of me. I glanced to my left and saw Gwen riding Jason about 6 inches away from us. Writing this seems perverted. At the time, it was unbelievably erotic.\n\nAs Carol and I got closer to getting off, I pulled her down on top of me. I became oblivious to everything except Carol until I heard Gwen's voice shout \"fuck yes!\" \n\nBetween heavy breaths, Carol whispered in my ear \"we just heard our daughter orgasm.\" Carol started riding me harder and I was thrusting my hips in sync with her. I have no idea how long we fucked. Just before I came, I heard Carol make a sound like \"errumph\" and she bit my shoulder hard. After we both came, Carol lay on top of me until we had each regained something like a normal rate of breathing. When Carol rolled off of me, I saw Gwen and Jason sitting side-by-side on a cushion to my left and Kirsten and Ian sitting side-by-side to my right. All four of them had apparently watched Carol and me finish.\n\nAfter a moment, Gwen said, \"Mom, Dad that was beautiful.\"\n\nCarol was lying beside me. I couldn't decide whether to be proud or embarrassed. Carol made my mind up for me. She said, \"Good work,\" and kissed me.\n\nAfter a while, all six of us stood up and got more wine. After drinking some of her wine, Carol said to Kirsten and Ian, \"It seems inappropriate for you to go home. Why don't you stay here tonight?\" A glance at Jason included him in the invitation. \n\nMore softly than Kirsten usually spoke, she said, \"We'd love to.\"\n\nWe cleaned up the patio to avoid drawing bugs. Once everything was secure from the ants and roaches, the six of us went upstairs (actually the third floor as our main floor was one level off of the ground to avoid storm surge). Gwen led Jason to her bedroom. Carol asked, \"Harry, are you ok if Kirsten and Ian sleep with us?\" We had a large bed. I nodded affirmatively.\n\nWe had gone to bed with Kirsten and Carol in the middle. Ian and I had each gotten in on the side with our own wife. Sometime during the night, things must have gotten confused. When I awoke that Sunday, my usual morning boner was poking into Kirsten's belly. I looked at her face. Kirsten was awake, smiling. She reached out and gently started stroking me. After a few moments, Kirsten said, \"Carol, I've got something in my hand that really shouldn't go to waste.\"\n\nCarol laughed and replied, \"So do I.\"\n\nKirsten said, \"Variety is the spice of life.\"\n\nCarol laughed again and said, \"Definitely.\"\n\nKirsten rolled onto her back and pulled me, not unwillingly, on top of her. She guided my hard-on inside of her and I started to push. Close enough that our shoulders bumped, Ian was thrusting into Carol. I looked at Carol. She smiled at me and winked. I turned my focus exclusively to Kirsten.\n\nKirsten was a responsive and communicative lover. While she did talk, she was great at using her body to tell me the pace she wanted. Initially, Kirsten wanted to go slow. As I gently thrust inside her, I nibbled her earlobe, kissed her neck, and sucked her nipples. I had forgotten Carol and Ian until I heard Ian go \"Oh god, fuck!\"\n\nThat was followed by a satisfied \"Umm\" from Carol. I knew that Carol had come but that, on a 1-10 scale, her orgasm had been no better than six.\n\nKirsten raised her head slightly and whispered \"ready?\" I kissed her lips to signal that I was. Kirsten began moving her hips more and contracted her pelvic muscles so that I had to really work to keep my dick moving inside of her. The sensations became very intense. Kirsten took control. She had me pushing into her so hard that a voice in my brain said, \"You're going to hurt yourself.\"\n\nI wasn't really sure what would come first: me or a pulled muscle. Suddenly, Kirsten dug her fingers hard into my back. Her legs clamped me tight me just above my hips. Kirsten said, \"Harry . . . Stone . . . Oh . . . my . . . God!\" Kirsten convulsed three times. I came during the third. Kirsten was panting so hard that I used my arms to take as much of my weight off of her as I could. After a long time, Kirsten leaned up and kissed me. \"That was great,\" she said. Only then did I pull out.\n\nAs I rolled off to Kirsten's side, Carol said, \"He does an ok job, doesn't he?\"\n\nKirsten said, \"Yeah, ok\" and laughed. \"How was my man?\" Kirsten asked Carol.\n\n\"I think we need to get more familiar with each other,\" Carol replied.\n\nIan spoke up. \"That will happen.\"\n\n\"Can we see that too?\" I heard Gwen say from the bedroom doorway. She was standing there, naked, with Jason.\n\n\"How much did you see?\" Carol asked.\n\n\"Most of it,\" Jason answered.\n\nI looked at Carol, Kirsten, and Ian. We all started laughing.\n\nKirsten finally said, \"If it's any consolation, last night and this morning are the first times Jason's seen us have sex too.\"\n\nIan said, \"There is something about you guys that made us want to share with you.\"\n\n\"Yeah,\" Carol said, \"we feel it too.\"\n\n\"Sharing is good,\" Gwen said from the doorway. \"How about we share a shower?\"\n\nI'm not sure why, but Carol and I designed the house with a huge shower with multiple showerheads in the master bath. It accommodated the six of us with room for three or four more. In the shower, I stayed partnered with Kirsten. Jason and Ian switched. Jason washed and was washed by Carol. Ian and Gwen cleaned each other.\n\nOnce we had showered, we all went downstairs and Carol started coffee. Jason asked, \"Dad, may I take the boat today? There are some things I want to show Gwen.\"\n\nIan said, \"Sure.\"\n\nTo Gwen, Jason said, \"Come on. Let's go.\" Jason took Gwen by the hand and led her out of the house. Our daughter had just left the house without a stitch of clothing and neither Carol nor I said anything.\n\nKirsten said, \"Don't worry. Jason's actually a better boat-handler than Ian.\"\n\nKirsten, Ian, Carol, and I lounged by our pool. We were drinking a bit and talking about nothing in particular. As the afternoon got very hot, Kirsten asked \"Carol, have you ever gotten it on with another woman?\"\n\nCarol quickly answered, \"No.\"\n\n\"Would you like to try?\" Kirsten asked.\n\n\"With you?\" Carol asked.\n\n\"Yeah,\" Kirsten replied.\n\n\"Yeah,\" Carol replied and added \"inside where it is cooler.\"\n\nCarol and Kirsten got up, put their arms around each other's backs, and started walking towards the steps from the patio to the main floor. Ian and I hadn't moved. As the women reached the door going inside, Carol said over her shoulder, \"Come on boys. You'll want to watch.\"\n\nIan and I did. We hopped up and followed our wives inside.\n\nIn the bedroom, Carol and Kirsten kissed. They started slowly, feeling each other's breasts. Kirsten bent down and sucked Carol's left nipple. After a few moments, Carol lifted Kirsten's head back up and kissed her again. At the same time, Carol put a hand between Kirsten's thighs. That went on for a while before the two women got on the bed.\n\nCarol and Kirsten were lying on the bed facing each other, but lying far enough back that each woman could spread her legs. Kirsten had a finger in Carol's pussy and Carol had one in Kirsten's. I could tell from her voice that Carol was worked up as she said, \"Boys, get on the bed beside us.\"\n\nI got on the bed behind Carol and Ian got on behind Kirsten. We were both just watching. Finally, Kirsten nodded her head. She lay flat. Carol got above Kirsten with her face over Kirsten's pubes and her pubes over Kirsten's face. Carol leaned down and began to eat Kirsten. Kirsten leaned up and began eating Carol. Hesitant at first, it didn't take too long for the two women to become fully committed to pleasuring each other.\n\nWatching Carol and Kirsten go down on each other had me very hard. I heard Ian softly say \"Harry.\" I looked over the women. Ian had his right hand in a circle and was moving it up and down in the air as he nodded his head. I got the idea and started stroking myself.\n\nI was trying to pace myself to Carol and Kirsten. Ian got up on his knees, pointing his dick towards the two women as he masturbated. I did the same. I didn't think that Carol or Kirsten had noticed us until Carol raised her head slightly and said Damnit guys! Come on us!\" Ian and I stroked harder. Ian shot first onto Kirsten's forehead and hair. I shot onto Carol's bare back and ass. Not long after, both women came.",
        "I got towels for Kirsten and Carol to wipe themselves off. \"Have you done that before?\" Carol asked Kirsten.\n\n\"No,\" Kirsten said, \"I just suddenly wanted you badly.\" \n\n\"You did well,\" Carol said.\n\n\"You too,\" Kirsten laughed.\n\n\"I prefer dick,\" Carol said.\n\n\"So do I,\" Kirsten answered.\n\n\"The dicks are always here,\" Ian said.\n\n\"Whichever one you each want,\" I added.\n\nWe showered for the second time that day and went back to the pool. We'd been sitting again for a while when Ian said, \"You know that my office is in Tampa?\"\n\nCarol and I nodded. \n\nKirsten said, \"Ian usually goes up there early Monday morning and, depending on his work, comes back Thursday night or Friday.\"\n\n\"I'm usually gone at least three nights a week,\" Ian said.\n\n\"Yes?\" Carol asked.\n\n\"Ian and I talked yesterday before we picked you guys up,\" Kirsten said.\n\n\"I never thought that I'd offer my wife this way,\" Ian said.\n\n\"It was a mutual decision,\" Kirsten interjected.\n\n\"Could Kirsten sleep with you two when I'm not here?\" Ian asked.\n\nCarol and I looked at each other. To me, Carol said, \"We're not in Kansas anymore Toto.\" To Kirsten and Ian, Carol said, \"Of course.\" Meaningful looks were shared among the four of us.\n\nGwen and Jason got back in time for our third consecutive dinner with the Woods. \"What did you do?\" Carol asked Gwen.\n\n\"Jason took me somewhere,\" Gwen pointed north, \"that way. Where there weren't any fisherman. We met two women Jason knows from the?\" Gwen stopped.\n\nJason added, \"Marty and Lisa from the Sheriff's marine patrol.\"\n\n\"Right,\" Gwen said, \"the four of us went skinny-dipping.\" Lucky Jason.\n\nIan left for his office the next morning. Gwen and Jason went back out on Ian's boat, although Gwen took clothes this time. Carol and I went to the mainland for more groceries and came home and worked out. About dinner time, Kirsten walked over, naked as usual. Of course, Carol and I were now going naked at home too. The three of us ate. Gwen and Jason stopped in to let us know that they were back. Jason was fixing Gwen dinner at the Woods' house. Gwen left her clothes at our place.\n\nKirsten stayed the night as she did most weeknights thereafter. I quickly learned that I had a lot to learn about being the man in an FMF threesome.\n\nGwen's birthday fell in mid-July. We had been living on the island for about six weeks by then. Jason was headed back to Boston to resume his research a week later. Samantha Collins, Gwen's closet friend from high school was coming down for Gwen's 19th birthday. This had been arranged before we moved.\n\nSamantha, I could never think of her as \"Sam\" although that's what Gwen called her, had been Gwen's closet friend since they were both freshman. They had been doubles partners on the tennis team for three years. Samantha was going to the same college as Gwen (and as Carol and I had gone to). Gwen and Samantha had already arranged to room together as college freshman. I suspected Gwen's influence in Samantha's choice; although Samantha had told us that she wanted to study journalism and dear old alma mater had a top flight J school. I also suspected that the girls had become very close because they were both only children.\n\nCarol and I had socialized a fair amount with Samantha's parents, Cheryl and Peter, since we all ended up at the same events of the girls pretty regularly. Cheryl was an ophthalmologist and Peter was an oncologist. Needless to say, they were reasonably well-off. Socially, they were engaging and entertaining people. Before we moved to Florida, they had also lived more exciting lives than Carol and me. Every time we got together, Cheryl and Peter had a new story about skydiving, bungee jumping off of bridges, or some other exploit.\n\nWe hadn't expected when Gwen had invited Samantha down for Gwen's birthday Carol, Gwen, and I would be living naked most of the time, usually with our naked neighbors. Gwen's birthday fell on a Saturday. Kirsten, Ian, and Jason were hosting a party for Gwen. The Woodmans, the Rakestraws, Jason's friends from the Sheriff's office, and others from the naturist club were invited. None of that crowd would stay clothed for long.\n\nWe were picking Samantha up at the airport on Thursday afternoon. Carol, Gwen, and I had talked about the nudity issue before without, to my mind, a satisfactory resolution. I brought it up with Gwen again the Monday before Samantha was due. \"Dad, it's cool,\" Gwen said. \"Sam and I have talked about it. I don't think she'll go nude, but she's not going to have a hissy fit if we do.\" I had to trust Gwen. Of course, we had also alerted Kirsten, Ian, and Jason to the potential issue.\n\nWe met Samantha at the airport. It had not been quite two months since Samantha and Gwen had graduated, but I'd forgotten exactly how attractive Samantha was. She was a redhead, about Gwen's height but narrower in the shoulders and hips with a smaller bust. I had also forgotten how freckles made her face extremely interesting and appealing. Like her parents, Samantha had always projected confidence. The redhead who ran up and hugged Gwen just outside security that Thursday was a very attractive woman.\n\nSamantha's flight arrived late in the afternoon. We fought the traffic for almost two hours to get back to our house and drop her bag. We took her to one of the best seafood restaurants on the island. It was late when we got back from dinner. Gwen and Samantha went more-or-less straight to bed because Gwen had a long day planned showing Samantha around the area on Friday. \n\nIt was after 7:00 p.m. when Gwen and Samantha got back Friday, having spent much of the day at the upscale outlet mall on the mainland. Carol made a simple pasta and shrimp dinner which we ate, clothed, by the pool. Gwen had assured us that Samantha was ok with us going naked. However, Carol and I were not ready for it.\n\nSaturday morning, Gwen's birthday, Carol and I were up early making Gwen's favorite breakfast. We'd save the gifts until the party that evening. Carol and I were wearing clothes, which now seemed unnatural. Breakfast was almost ready when Gwen came into the kitchen naked. I guess that I made a face because Gwen said, \"the birthday girl gets to wear her birthday suit all day long.\"\n\nSamantha came in a few minutes later in short shorts and a tank top. She looked pretty good. She and Gwen hugged briefly. Samantha said, \"Uh, Mr. and Mrs. Stone, I appreciate that you've been staying dressed out of consideration for me. That is very kind of you. Gwen told me that, since you moved to Florida, you go naked most of the time and she warned me that almost everyone at the party tonight will be naked. I appreciate your consideration, but, it is your house. If you don't usually wear clothes here, don't wear them on my account.\"\n\nCarol and I looked at each other. Carol said to Gwen and Samantha, \"We'll be back in a moment.\" We walked out of the kitchen and into my study. \"Are you ready for this?\" Carol asked. We'd known Samantha, and her parents, for over four years. \n\nI looked at Carol. \"Our friends from up north are going to find out about our new lifestyle le somehow. We might as well own it.\"\n\nCarol smiled as she started to undress. \"Let's hope that they don't learn all of the details,\" she said. \n\nCarol and I went back into the kitchen naked. Samantha glanced at Carol, but her eyes lingered on me. \"Is that better?\" she asked.\n\n\"Much better,\" Carol said, \"thank you Samantha.\"\n\n\"You're welcome Mrs. Stone,\" Samantha said.\n\n\"Samantha,\" Carol said, \"I'm standing here completely naked. You can call me Carol from now on.\"\n\n\"And I'm Harry,\" I added.\n\n\"Not too much though,\" Samantha said and then said, \"Opps! I'm sorry.\"\n\nKirsten, Ian, and Jason came in from our patio, all naked. Ian was carrying a bottle of champagne. \"We have to start the birthday off right,\" he declared as he popped the cork on the bottle.\n\nI watched Samantha as we handed out the champagne. She was the only clothed person in the room. She did not seem uncomfortable at all. Her eyes did flit between Jason and me. At one point, she whispered something to Gwen and they both giggled.\n\nWhen the champagne was done, the Woods started out of our kitchen. \"Remember, party at six,\" Kirsten said, \"birthday suits only.\" Kirsten caught herself. To Samantha she said, \"Clothing optional for you Miss Collins.\" Kirsten extended a hand to Samantha. \"It is nice to meet you.\"\n\nCarol and I had various things to do for our part of the celebration, including quietly moving Gwen's gifts to the Woods' house. Gwen and Samantha planned on spending the day by the pool. I suggested the beach, but Gwen didn't want to do that because the local police patrolled the beach during the day and she'd either have to dress or risk arrest on her birthday.\n\nLooking down from the kitchen, I saw Gwen smearing sunscreen on her bare body. Samantha walked out by the pool in a green one-piece that contrasted nicely with her hair and complexion. While very conservative on top, Samantha's suit was cut high on the hips to show lots of leg. Samantha had legs worth showing.\n\nCarol caught me looking out the window. \"Samantha's almost as beautiful as Gwen,\" Carol said.\n\n\"Closet,\" I agreed, 'but she isn't in the same league with Gwen's mother. No one is.\" We kissed.\n\n\"No one?\" Carol asked. \"Not even Kirsten?\"\n\n\"Kirsten is in AAA,\" I replied. One thing I appreciated about Carol was that she was a sports fan.\n\nThe party had a real cross-section of people. The Woodmans were older. The Rakestraws were about our age. The Woods were a bit younger. The deputies were younger still and added more diversity as Marty, the other female deputy Jason was friends with and Gwen had skinny-dipped with, was African-American. The other fifteen or so people were also a cross-section, including the couple who owned and operated the island's one Indian restaurant. It dawned on me that all of Gwen's friends here, and ours, were nudists.\n\nEveryone at the party was naked except for Samantha. She had exchanged the green one-piece for a green bikini that was fairly revealing. She looked fantastic. Gwen made a point of introducing her to everyone.\n\nPeople were drinking, talking, and swimming. Rather than cook, the Woods had the party catered. The food showed up around 7:00 p.m. They man and woman from the restaurant smiled as they set up the trays amidst a group of nude people, but didn't complaint about the $ 100 tip I saw Ian give them.\n\nThe food, mainly seafood which Gwen had become of fan of since moving to Florida, was excellent. Kirsten and Ian were playing host and hostess. Jason, Gwen, and Samantha sat and ate with Carol and me. Jason did a great job of engaging Samantha in the conversation.\n\nWe spent about an hour eating. Then Ian announced, \"Everyone, put your plates and utensils in the tub over there. Get another drink. Gwendolyn's birthday festivities will start momentarily.\"\n\nSamantha stood up. \"Jason,\" she said, \"Could you please show me where the washroom is?\"\n\n\"Certainly,\" Jason replied and led Samantha up the steps and into the house. Jason was back quickly.\n\nJason and Gwen got more wine for themselves and for Carol and me. When Gwen came back, she gave her mother a look and said, \"Dad, there's a part of the festivities I think that you'll enjoy.\"\n\nI wasn't paying attention to the house until I saw some people's heads turn. Samantha walked towards us with her bikini balled in her hand. Seeing Samantha naked, I mentally amended what I had said that morning. While I'd never do anything about it, the Carol Stone major league was now, in my mind, the Carol Stone and Samantha Collins major league.\n\nSamantha started smiling as she got close to us. To Jason, she her hand with the bikini and asked, \"Where can I put this so it won't get lost?\"\n\nJason said, \"Let me take it inside. I'll put it on the kitchen counter. One of us will see it there before you leave.\"\n\nGwen came up to Samantha. \"Thank you,\" was all Gwen said.\n\nSamantha went to Carol and hugged her. \"Carol, thank you for making me feel comfortable to do this,\" she said.\n\nSamantha came to stand in front of me. \"Harry,\" she said, \"I gave you a pretty detailed look this morning. It is your turn.\" Samantha stood still for a moment. She was a really beautiful. She turned completely around. \"What do you think?\" she asked.\n\n\"Well, you are a natural redhead\" I said. Regretting the words as soon as they'd left my mouth.\n\nSamantha paused for a second before looking down at her neatly trimmed red pubic hair. She looked back and me and smiled. \"Yes, I am,\" she said, \"thank you for noticing.\" I thought that I had really screwed up by admitting that I had looked at her pubes, but Samantha seemed genuinely pleased.\n\n\"I also think that you should go naked a lot more often,\" I said.\n\nSamantha smiled more broadly. \"Thank you again,\" she said. \"I plan to go naked a lot the rest of the time I'm down here.\" \n\nIan stood up on a bench. \"Two announcements,\" he said loudly. \"First, I note that we are now a completely nude party. Let's have a hand for Miss Samantha Collins who is having her first experience with social nudity tonight.\" Everyone started clapping. Samantha blushed, which only made her look better.\n\n\"Next,\" Ian said, \"to start the birthday festivities, the birthday girl herself has specifically asked that we do something traditional.\" Kirsten moved a stool into the center of a clear area in front of the bench Ian was standing on. \"Please make some room people,\" Ian asked. The guests moved away from the stool. \"Harry, please come up here,\" Ian said. I walked up. Carol went with me. \n\n\"Take a seat on that stool,\" Ian told me. \"Gwen, will you come up here?\" Gwen walked up and stood next to me. \"The birthday girl has asked for a traditional birthday spanking: 19 swats administered by her father.\"\n\nI started to get off of the stool. \"What?\" I said. \n\nCarol put a hand on my shoulder and pushed me back down. She whispered in my ear, \"Roll with it. This was Gwen's idea, but it is sort of hot. Don't hit her hard; just get her ass a bit pink.\"\n\nI sat back down. Ian said, \"Gwen, get over your father's knees.\" Gwen turned and draped herself over my thighs so that her bare butt was squarely in my lap. It looked so beautiful that I didn't think that I could smack it.\n\nGwen said, \"Please Dad!\" I smacked her once very gently. \"A little harder,\" Gwen said. I smacked the other cheek with a bit more force. \"That's great,\" Gwen said. With the third smack, the guests began to count. I noticed that Samantha was standing just beyond Gwen's feet. I administered 16 more spanks, bringing a bright pink color to my daughter's ass. \n\nWhen I finished, Kirsten handed me a bottle of lotion and said, \"Put that on her ass before she gets up. It cools it.\" I spread the lotion over Gwen's ass.\n\nWhen I was done with the lotion, Gwen stood up from my lap, put her arms around me, and kissed me. Samantha stepped to us and said, \"That is one of the sexiest things I've ever seen.\" I wondered how many sexy things Samantha had seen.\n\nIan said loudly, \"Harry, fine work. Gwen, turn around so that everyone can see your butt.\" Gwen complied and bent over, exposing herself to the other guests. I was standing between Carol and Samantha. As Gwen straightened up, she smiled and winked. I had no idea which of us she was winking at.\n\nIan continued as master of ceremonies. \"Gwendolyn Stone, you've only been a part of our community for a short time but you've made quite an impression and earned our respect and affection. You have a huge number of gifts.\" Ian proceeded to announce the gift from each guest. We had gotten her a number of things including a new notebook computer to take to college. Jason gave her an expensive-looking ring. Kirsten and Ian gave her a jeweled butt plug along with a $ 500 Visa gift card. Everyone gave her something.\n\nWhen all of the gifts were opened, Gwen took the butt plug and said loudly, \"May I wear this tonight?\"\n\nIan replied, \"Certainly. Jason, would you do the honors?\"\n\nGwen bent over again. Jason took the lubricant which was with the plug and smeared it on the plug. He then slowly worked the plug into Gwen's asshole. At one point, Gwen exclaimed, \"Oh! God!\"\n\nJason immediately asked, \"Do you want me to stop?\"\n\n\"Hell no!\" Gwen responded. I think that my daughter was getting off on having a plug put in her ass while a group of her friends watched. Jason finally got the plug in. Gwen straightened up and kissed him. I had to admit that, once the plug was in, it looked very good on Gwen.\n\nPeople who lived on the mainland began leaving shortly after 10:00 p.m. By 11:00, folks living on the island, like the Woodmans, were leaving. By midnight, Samantha, Gwen, Carol, and I were helping Kirsten, Ian, and Jason clean up o that the Woods' home would not be invested with bugs.\n\nWhen we finished cleaning up, Samantha, Gwen, Carol, and I walked over the dunes, onto the beach, and back to our house. We were all naked. We had reached our own patio when Samantha said, \"Damn.\"\n\n\"What is it?\" Carol asked.\n\n\"Oh, I gave Jason Woods my bikini to put in the Woods' house and I forgot and left it there,\" Samantha replied.\n\n\"That's ok,\" Gwen said. \"You won't need it for the rest of your stay. We'll get it back before you leave.\"\n\nI tried to put my foot in my mouth again. \"Don't forget it,\" I said. \"It looks very nice.\"\n\n\"You think so?\" Samantha asked. \"Nicer than what I'm wearing now?\" Of course, Samantha was only wearing her bare skin.\n\n\"No,\" I replied. \"Nothing could top what you're wearing now.\"\n\n\"Thank you,\" Samantha said. Again, she seemed genuinely pleased at what I'd said when I'd said too much. Carol grasped my hand firmly and led me up the steps and inside.\n\nWhen we were all four inside our house, Gwen asked, \"How do I get this plug out of my ass?\"\n\n\"Can't you just pull it out?\" Carol asked.\n\n\"No,\" Gwen replied, \"I can't reach far enough behind me to get a solid grip.\" That seemed unlikely to me.\n\nWith a somewhat amused tone, Carol replied, \"Well, ask your father to take it out.\"\n\nWith a teasing tone, Gwen asked, \"Dad, would you please pull my birthday butt plug out of my ass?\"\n\nI decided to call what I thought was Gwen's bluff. \"Sure,\" I said. I sat down on a stool in the breakfast nook. \"Get over my knees again.\"\n\nGwen smiled and laid herself across my thighs for the second time that night with her beautiful ass upturned. Jason had the plug in fairly deep. I had to get my fingers farther into Gwen's asshole than I liked to get a firm grip. I did, however, get the plug out.\n\n\"Wow,\" Gwen said when I had removed her butt plug.\n\n\"What did it feel like?\" Samantha asked Gwen.\n\n\"Putting it in and taking it out were tough,\" Gwen said, \"but, once it was in, it felt kind of nice. How did it look?\"\n\n\"I thought that it looked nice,\" Samantha said, \"but it did draw attention to your ass.\"\n\n\"That's a bad thing?\" Gwen asked.\n\nGiven that Gwen and Jason already had a sexual relationship. I was a bit surprised that Gwen didn't spend her birthday night with Jason. However, Gwen explained later that she and Jason had decided to take a break while Samantha was here. Carol and I went upstairs to bed, leaving the two girls in the kitchen talking.\n\nCarol and I got up the next morning intending to go next door and help finish the clean-up. When Carol called Kirsten, however, we learned that we weren't needed. Jason and Ian had already finished. Carol invited the Woods to come over and lay by our pool later. Not knowing when Gwen and Samantha would be up, I made a pot of coffee while Carol boiled and peeled some eggs and put out a tray of cold meats. Carol and I took our coffee into our living room with its picture window view of the Gulf.\n\nSamantha poked her head into the living room maybe a half hour later. Seeing Carol and me there, she came into the room carrying a cup and a plate. I was more gratified than I should have been to see that she was still naked. In the light of a new day, Samantha was still a very beautiful woman naked.",
        "\"Did you sleep naked?\" Carol asked.\n\n\"Yes,\" Samantha replied, \"and it was the best sleep I've had in a long time.\"\n\n\"The effect of alcohol didn't contribute to that?\" Carol asked with a smile.\n\n\"No,\" Samantha said, \"I only had two glasses of wine last night.\" Samantha then asked a question: \"Were you nudists when you lived by us?\"\n\n\"No,\" I answered. \"We've gotten into going naked with other people since we moved down here.\"\n\n\"How?\" Samantha asked.\n\nI let Carol tell the story. When she finished, Samantha said, \"That's great. I can't believe that I went my whole life until last night not knowing how much fun it is to swim naked and hang around with other people naked.\"\n\n\"You'll get plenty of more opportunities,\" Gwen said as she walked into the room. \"I'm banning you from wearing clothes.\"\n\n\"Can you really ban me from something that I don't want to do anyway?\" Samantha asked.\n\nAfter a while, we moved out to the pool. The Woods came over around noon. The seven of us spent the afternoon naked, swimming, sunning, and talking. I was impressed by how comfortable and confident Samantha seemed to be with no clothes on.\n\nAt one point in the afternoon, Carol and I were both in the kitchen getting more drinks for everyone. Carol giggled and said, \"I think Samantha has a crush on you Harry.\"\n\n\"Why would you say that?\" I asked.\n\n\"All afternoon, she hasn't paid any attention to Jason and his impressive schlong,\" Carol said. \"She just keeps looking at you.\"\n\nI thought Carol was imaging or exaggerating, but I asked, \"Does that bother you?\"\n\n\"No,\" Carol said. \"I look at you. I look at Jason too.\"\n\nAround 6:00, Carol asked, \"What should we do about dinner?\"\n\n\"Just call Island Pizza,\" Kirsten answered. \"Their driver Darryl has seen me naked almost as many times as Ian has.\"\n\nCarol ordered pizza. When the alarm at the end of our drive buzzed to tell us that the driver was here, Samantha and Gwen both jumped up. \"We'll get it,\" they said in union, and giggled.\n\nAs the girls went inside buck naked, Carol called after them, \"There's cash in the kitchen drawer under the phone.\"\n\nThe seven of us went through two extra large pizzas and a big bowl of salad. After the sun went down, Jason asked Gwen and Samantha if they wanted to walk the beach. \"I'll have to get a cover-up,\" Samantha said.\n\n\"You don't need it after dark,\" Gwen replied. \"Jason and I walk the beach naked almost every night.\" Samantha shrugged and followed Jason and Gwen off of the patio and over the dunes to the beach.\n\nOnce the kids were gone, Kirsten said, \"I like Samantha.\"\n\nI'm glad that she decided to go nude,\" Ian said.\n\n\"You just want to see fresh tits, ass, and pussy you perv,\" Kirsten replied. \"Besides, Samantha's taken with Harry.\"\n\nCarol shot me a knowing look. She said, \"Gwen and Samantha have been very close since they met as freshman.\"\n\n\"Do you know her parents?\" Ian asked.\n\n\"Pretty well,\" I replied. \"We were always been at the same tennis matches and events and we socialized a fair bit.\"\n\n\"Are they ok with Samantha going nude?\" Ian asked.\n\n\"I think so,\" I replied. \"I hope so.\"\n\nSamantha was leaving on Thursday. I felt bad for Gwen because Jason was going back to Boston a couple of days later and would stay there through the holidays. Gwen would have about a month on the island without friends her own age until she left for college.\n\nOn Monday, Jason took Samantha and Gwen out on Ian's boat to skinny-dip with Marty and Lisa, Jason's deputy friends. On Tuesday, Gwen and Samantha actually put on clothes so that Gwen could give Samantha a more detailed tour of the shops on the island. On Wednesday, the Woodmans took Samantha, Gwen, Carol, and me for a nude cruise out into the Gulf on their sailboat. It was wonderful.\n\nWe had brought clothes in order to take Samantha to another great restaurant on the island on her last night with us. The four of us had a great meal. When we got home, the girls stripped off and went out by the pool to talk. They were still out there when Carol and I went to bed.\n\nWe went with Samantha into the airport the next afternoon as she checked her bag (contents largely unused) and checked in. Just outside of security, we stopped. Samantha gave Carol a hug and said, \"Thank you very, very much Carol.\" Samantha came to me. She gave me a tight hug and a kiss. \"Harry, thank you, this had been probably the most special trip of my life.\" Samantha and Gwen hugged and kissed each other's cheeks. Samantha told Gwen, \"See you in a month.\" The line at security was atypically quick that day. Once Samantha was through, she turned and waved, then headed for her gate.\n\nMainland traffic was in its usual afternoon snarl as we left the airport. We had just turned onto the main road towards the island when Gwen, in the back seat, chuckled.\n\n\"What Dear?\" Carol asked.\n\n\"I was just remembering,\" Gwen said. \"Sam and I sat out by the pool talking for a long time last night. She'll be mad that I told you this, but she didn't tell me not to. She said that Dad is a DILF.\"\n\n\"What, in God's name, is a DILF?\" I asked.\n\nSounding surprised, Carol asked, \"You really don't know?\"\n\n\"No,\" I said curtly.\n\nGwen was laughing by then. \"Dad,\" she said between laughs, \"You've heard of MILF? Sam was calling you a 'Dad I'd like to fuck.'\"\n\n\"Jesus!\" I said.\n\n\"Well,\" Gwen said, \"you are.\"\n\n\"I agree with Gwen,\" Carol said. She put the knife in further. \"We've already decided that we share with Ian and Kirsten. Maybe we can work Samantha into that arrangement.\" Carol and Gwen were both laughing. I drove the rest of the way home in silence.\n\nIt was about 6:30 the next night when our phone rang. Kirsten was sitting in our kitchen with Carol and me. Jason and Gwen were out. Ian had to stay over at his office that day and had called Kirsten earlier to say that he was caught in traffic near Sarasota. We only got local calls from friends so I answered the phone without looking at the caller ID.\n\nAfter I said \"hello\" I heard Cheryl Collins say, \"Harry, are Carol and Gwen there?\"\n\n\"Carol is but Gwen is out,\" I replied.\n\n\"Can you put me on speaker so that Carol can hear me too?\" Cheryl asked.\n\n\"Sure,\" I said. Once I'd hit the speaker button and put the handset back, I asked, \"Cheryl, you still there?\"\n\n\"I am,\" Cheryl said. \"First, I want to thank you for hosting Sam for a week. You were too generous. Sam said that she didn't spend a dime the whole time she was with you.\"\n\n\"You're welcome,\" Carol said.\n\nIn a stern tone, Cheryl said, \"Sam also told us how you let her go naked at Gwen's birthday party, how everyone else there was naked, including the two of you. She told us how she swam, went boating and ate and drank with no clothes on. She told us how much fun she had naked and how much she enjoyed being naked around other people. She now wants to go naked in our home. She says that all three of you do that in your home all the time.\" Cheryl paused. \n\nI silently mouthed the words \"oh shit\" to Carol. Both Carol and Kirsten had troubled looks on their faces.\n\nWe heard Cheryl take a deep breath. With the same tone, Cheryl said, \"Peter and I want you to know that we are very disappointed. We thought that you were good friends. Yet, you let our daughter come to your Florida home and run around bare ass naked.\" Cheryl paused again. Her voice lightened perceptibly as she said \"and you haven't invited us down to do the same thing.\" I could now hear Peter laughing in the background.\n\nCarol, Kirsten, and I relaxed. I said, \"Cheryl, we thought it would be better if we indoctrinated Samantha first and sent her home to proselytize you and Peter. You guys are welcome any time. Just don't bring any swimsuits because we don't allow them. You're the busy doctors. We're retired. You tell us when you can come. We've got friends here you'll love.\"\n\n\"Sam told us about your friends,\" Peter said. \"I can't wait to meet them.\"\n\n\"We're taking you up on that,\" Cheryl said as she ended the call."
    ],
    "authorname": "HStoner",
    "tags": [
        "nude family",
        "partner swapping",
        "public nudity",
        "spanking"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-gulf-coast-move"
}