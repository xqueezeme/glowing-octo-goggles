{
    "title": "Stray Cats Ch. 04",
    "pages": [
        "As a reminder, this is a continuation of a reprint of a story that I posted in 2015. \n\nI was rereading it lately and correcting some of the typos (I'm sure I missed some) when it dawned on me that perhaps I should repost this story (in the original chapter format) for readers today. It's still relevant, well most of it is. I hope you enjoy it. \n\nOh, additionally, if you haven't done so, you might consider going back to read the opening chapters, as much of who these characters are, is introduced in those earlier chapters. Plus, several new characters are introduced here. You'll have a better understanding of them from earlier chapters with that foundation. But, as always, it's your choice. \n\nPlease leave a comment when you've finished, feedback is the lifeblood of a writer. \n\n--Dreamweaver594 \n\nFriends, Lovers, and Wives \n\n=ONE= \n\n\"You stupid fucking bitch! How dare you lead me on like this?\" Standing in the street in front of a large condominium complex, a man grabbed the arm of a woman and shook her violently. \n\nComing around the corner, Rachel who borrowed Tom's bicycle and was out for a morning bike ride, looked down the street at a couple arguing. \n\n\"A boy?! Now you tell me! What the fuck were you thinking? That it wouldn't matter? Of course it matters, you stupid bitch!\" \n\n\"Ted, you're hurting me!\" \n\nThe guy continued to scream obscenities at her. Rachel stopped her bike several yards away then got off and dropped it to the ground. She felt that something wasn't quite right. \n\n\"Why didn't you tell me this before? Now everything is fucked!\" \n\n\"Please Ted, I wanted to tell you before but you always told me how much you loved me and how nothing else really mattered.\" \n\n\"Well, this matters! You're a guy, for Christ's sake, a fucking guy. And you think that doesn't matter? I'm not a homo, maybe you are, but I'm not, you fucking son of a bitch!\" Ted pulled his right hand back and punched the woman in the face. She went reeling across the sidewalk and landed against some bushes then slumped to the ground. He walked over, stood above her, and slapped her. \n\nRachel began to stride purposefully towards the man. \n\n\"We are through Wendy, do you hear me? THROUGH! The wedding is over; it's not going to happen, not with you, never with you! I don't marry dicks!\" \n\n\"But I don't have a penis, Ted, you know that.\" Wendy reached up from the ground and tried to touch is arm. \"I had an operation before we even met. I'm a woman now, completely. I wanted to tell you when we first met but you were so caustic about 'chicks with dicks' as you called them that I was scared to tell you.\" \n\n\"So now you tell me about this? What if we wanted to have kids? Did they give you a uterus too? Your no woman, you're a fucking freak!\" Ted pulled his arm back to hit Wendy again but Rachel stepped between them and pushed Ted back. \n\n\"Leave her alone, asshole,\" Rachel spat menacingly. \n\n\"Who, the fuck, are you?\" Ted asked, glaring at Rachel. \n\n\"Someone who's going to kick your bigoted ass if you don't get the fuck out of here now,\" Rachel growled threateningly. \n\nTed looked at her, looked at her fist ready to strike him, looked at Wendy lying on the ground with this strange woman between them, then spat at them both. \n\nRachel swung an upper cut and landed it beneath his jawline. She knocked him to the ground. \"That's for that filthy habit, now get the fuck out of here slime ball,\" Rachel growled taking another step towards Ted. \n\nTed scrambled to his feet and beat a hasty retreat down the sidewalk. He opened his car door and then turned to look back at Wendy a moment. He shook his head, got into his car, and drove off down the street, his tires burning rubber. \n\nWendy started crying the moment Ted ran off. The tears began to run down her cheeks like tiny rivers lined with mascara. \n\n\"Are you okay?\" Rachel asked bending down to look at the scrapes and cuts on Wendy's face. \"Hey, he's gone now, everything is okay. You're safe now, okay?\" \n\n\"It's not okay, you don't understand. We were getting married next month. This condo was going to be our new home. Now it's all ruined, ruined, ruined! I've ruined everything! \n\n\"Come on, my place is just around the corner,\" Rachel said as she held out a hand for Wendy to stand up. \"Let's get you cleaned up.\" \n\nAs Wendy walked into Rachel's apartment, she found two people standing around an island counter grousing about the real estate market. \n\n\"That house on Reynolds was sold right out from underneath us, damn it,\" the woman sputtered as she slammed her fist down on the counter. \"It was perfect, the lawn, the bedrooms, the driveway, perfect.\" \n\n\"I'm sorry Amanda, we'll start looking again tomorrow,\" the man said, trying to calm her down. \n\n\"What happened?\" Rachel asked as she helped Wendy towards the kitchen counter. \n\n\"Oh that dumbass, Janet Wheeler, our so-called real estate agent dropped the ball on our offer and someone else got the house, and it was perfect too,\" she grumbled. Then as if finally realizing that Rachel wasn't alone, \"Who's this?\" \n\nRachel steered Wendy to a stool by the sink and sat her down. \"This is Wendy. I broke up a fight between her and her boyfriend a little while ago.\" She pulled out a bottle of hydrogen peroxide and some cotton balls from beneath the sink and began to dab the cuts and scrapes on Wendy's face and arms. \"The son of a bitch was going to kill her if I didn't step in.\" \n\nAlex pulled out his cellphone and began to dial 911. \"Where is he now, I'm calling the cops.\" \n\nWendy turned quickly with a frantic expression. \"No don't, please. I don't want any more trouble. He's gone now, out of my life for good I hope.\" \n\nThe man closed his phone and walked around the counter to help Rachel with bandages. \n\n\"What happened?\" the woman asked holding Wendy's hand. \n\n\"I...\" \n\n\"They broke up,\" Rachel interrupted. \"It was getting ugly so I stopped it.\" Rachel finished cleaning her wounds and, with the man's help, they added antibiotic ointment and some bandages to all but a few of the scrapes and cuts. \"Here,\" Rachel gestured, \"Why don't you rest here on the couch, okay?\" \n\n\"I'll make some tea,\" the woman added, as she walked back towards the kitchen. \n\n\"Do you live with him? Is there going to be trouble getting your stuff back?\" Rachel asked. \n\n\"No, I have my own place, we were suppose to move in together once we got married but that's all over now.\" She began to cry again. \n\nThe man handed her a tissue as Rachel wrapped her arm around her shoulders and gave her a hug. \n\n\"I never thought he would have acted like this, he was so open and carefree,\" Wendy said between sniffles. \n\n\"Except for the 'chicks with a dick' comment,\" Rachel said with a grimace. \n\nThe woman and the man glanced at one another then at Rachel. She dismissed their unspoken questions with a slight shake of her head. \n\n\"I had my surgery two years before we met, he would have never known if I'd kept my big mouth shut but I just couldn't lie to him, I loved him.\" Wendy quickly glanced up at the man and then the woman, she was suddenly frightened about what she had just revealed. \n\n\"No worries, Wendy, you're among friends,\" the man said, with a warm smile. \n\nShe glanced at Rachel, the old fear still creeping across her face. \n\n\"I'm a pre-op transsexual,\" Rachel replied, \"Amanda is a genetic girl, and Alex...\" \n\n\"I'm a little of both,\" he interrupted, \"so you're safe here.\" \n\n\"Welcome to my family,\" Rachel said, holding her arms wide open and sporting a huge grin. \n\nWendy let the tension and anxiety drop from her body. She was safe at last. \n\nThere was a knock at the front door and a young woman peeked her head around the door. \"Hi, anybody home?\" \n\n\"Hi Kim, come on in,\" Amanda said, getting up to open the door further. \n\n\"Ray's here too, we brought pizzas,\" Kim replied as she shoved several large pies into Amanda's arms. \"Oh, you have company, I'm sorry.\" \n\n\"No, don't worry about it, Wendy's a new friend. She might as well meet the whole gang.\" Rachel got up to retrieve some plates from the kitchen cupboard. \"I'll get some plates, set the pizzas on the counter. Wendy, this is Kim Crossman and Ray Klein.\" \n\n\"They came over a couple of weeks ago and we haven't been able to get rid of them since,\" Amanda quipped. \n\n\"Ha, ha, very funny, I love you too,\" Kim replied, hugging Amanda. \n\n\"Fair warning Wendy, Amanda likes to tease,\" Ray chimed in with a grin. \n\nAmanda grinned impishly and shrugged at Wendy. She pulled a large slice of pizza from one of the boxes and dropped it on a plate. \n\nWendy was surprised at how open and carefree everyone was. Kim and Ray were obviously a couple, presumably straight, and yet they seemed perfectly at home here with everyone else. \"Why can't I have friends like this?\" She murmured softly to herself. \n\nAmanda set the plate with a slice of pizza on the coffee table in front of her. \"You already do,\" she whispered back with a gentle smile. \n\nAn hour and a couple of nearly empty pizza boxes later, everyone sat around laughing at the latest exploits of their favorite landlord, Tom Reilly. \n\n\"Apparently he got into trouble with his next-door neighbor yesterday when he decided to rent a bobcat and use it in the backyard,\" Amanda said grinning. \n\n\"He was trying to put in a new patio area and he backed the bobcat into the fence,\" Alex added pulling another slice out of the bottom pizza box. \n\n\"Totally shredded the fence,\" Amanda said, laughing. \"The neighbor was livid.\" \n\n\"Gotta love Tom, he's always good for entertainment,\" Rachel added. \n\n\"And then, to top it all off, he rolled it on it's side and the rental company had to bring in a forklift to sit it up again.\" By now Amanda was laying in Alex's lap with tears running down her face. \n\nWendy watched the three of them banter back and forth with a look of wonder. They hugged and kissed then swatted each other playfully while Kim and Ray just sat back and laughed at their antics. The joy was infectious, in no time at all Wendy was feeling like life wasn't as black as it looked just a couple of hours ago. \n\n\"Hey, who's on the schedule to work today?\" asked Amanda sitting up and wiping her eyes. \n\n\"I'm on at five today,\" Alex muttered, \"but at least I'm off tomorrow.\" He looked at Kim and Ray. \"We have three chapters in the Meyer anthology to read by Monday for Dixon and our final draft of that short story is due in Ferguson's class on Wednesday, yuck.\" \n\n\"Damn, I haven't even started,\" grumbled Ray. Ray and Alex looked at Kim. \n\n\"Don't look at me,\" she grinned, \"I didn't take Ferguson this semester for that very reason.\" \n\nRay grabbed her and smothered her in kisses while Alex picked up the plates and carried them into the kitchen to place in the sink. Amanda walked into the kitchen and gave Alex a big hug and a kiss. \n\n\"That's for being you,\" she said with a wry grin. \n\nRachel wandered back over to sit on the couch with Wendy. \"My shift starts at eight again and I'll be late because I have to close.\" \n\n\"Want to take the car?\" Alex asked. \n\n\"If you don't mind. Can I drop you off and pick you up at the usual time?\" \n\n\"Sure, thanks,\" added Alex with a kiss on her cheek. \n\nWendy was beginning to put people together but her math wasn't working out quite right. Obviously Kim and Ray were dating, but what about Rachel and Alex, or Amanda and Alex? They wore matching rings on their left hands and all, but it was still very confusing. Then there were the earrings and the necklace Alex was wearing, was he a boy or a girl? \n\n\"You look a bit troubled, Wendy, what's up?\" Rachel asked, as she laid a pillow under her feet on the coffee table. \n\n\"Not troubled, just confused,\" Wendy replied. \n\n\"About what?\" \n\n\"About your relationship with Alex and Amanda.\" \n\n\"We're a family, the three of us,\" Rachel replied. \n\n\"Yes, but who's married to who?\" she said looking at the wedding rings on their fingers. \n\n\"We all are, the three of us,\" Alex replied. \"Not legally because society doesn't recognize our type of relationship, so we just say we're a family and leave it at that.\" \n\nWendy looked at everybody with a blank expression. \n\n\"I was totally confused just like you when I first met Alex's wives,\" Kim added with a smile. \"In my head I wanted their relationship to conform to some sort of 'social norm'. I wanted it to fit neatly into a pigeonhole like everybody else's. But that wasn't going to happen,\" she said with a laugh. \"Once I understood who they were it was clear that the love they have for each other means that society has to catch up with them not the other way around.\" \n\n\"What about the legal stuff?\" \n\n\"We're working on it,\" Amanda said from the kitchen. \"A friend of mine from work thought it might be a good idea to try to officially create a family but I think, given the legal climate in this country, that a corporation might be a better bet.\"  \n\n\"A what?\" Wendy asked. \n\n\"A corporation, where we all have equal shares. The corporation owns all the assets so the whole issue of beneficiaries is solved. Legally, we'd be recognized without the hassle of busy-bodies sticking their noses into the bedroom.\" \n\n\"In our eyes, and the eyes of our friends, we're married,\" said Alex drawing Amanda with him from the kitchen as Rachel stood up to join them. \"The corporation idea would be our non-conformist way of conforming. Eventually I want us all to have the same family name, for medical reasons, but there's no rush on that.\" \n\n\"I think it's brilliant,\" Wendy exclaimed. \"But...I guess I'm still a little confused about you, Alex. I hope this doesn't offend you but, are you a boy or a girl?\" \n\n\"Time for the iPad,\" Kim and Amanda said in unison and everyone else laughed. \n\n\"Huh?\" Wendy looked from Kim to Amanda and back to Alex. \n\nAlex blushed a bit then reached for his backpack and pulled out his iPad. \"It's becoming the family jest actually. Here, I've Googled it for you. The term is intersex. It's what I am.\" \n\nWendy quickly scanned the page and looked up at Alex in wonder. \n\n\"Yup, that's me, about halfway down the page,\" Alex said still blushing slightly and taking his iPad as Wendy handed it back to him. \"I'm still trying to get used to this bumpy ride called my life,\" he pulled Amanda and Rachel into a big hug, \"but with these two around the road has gotten a lot smoother.\" \n\n\"Where were you guys two years ago?\" asked Wendy. \n\n\"Waiting for you to show up today,\" answered Amanda with a gentle smile as she gathered up empty plates and walked to the kitchen. \n\nWendy opened her mouth then she closed it, unable to form into words the warmth that surrounded her heart. \n\n\"It's called kismet,\" Rachel said. \"I learned it from Alex.\" \n\n\"Who taught everyone else sitting in here,\" added Ray. \n\n\"Nothing in life is a coincidence Wendy, everything is meant to be,\" Amanda continued walking back from the kitchen drying her hands on a dishtowel. \"We are here for you because you needed us to be. It's that simple.\" \n\nWendy began to tear up again and Rachel grabbed another tissue. \n\n\"Oh crap, sorry, we didn't mean to make you cry Wendy,\" Alex said. \n\n\"No, no, these are happy tears. It's been a tough day.\" \n\nConcerned, Kim looked at Rachel and she whispered, \"I'll tell you later.\" \n\nKim shrugged. \"Hey, we got an apartment!\" She shouted with glee. \n\n\"What?\" Alex asked collapsing into a chair near the couch. \n\n\"Yup, we signed the lease this afternoon. The pizza was a celebration,\" Ray added, hugging Kim. \n\n\"When do you move in?\" Amanda asked. \n\n\"The first of the month,\" Ray replied. \"My lease was running out this month and Kim's was nearly over so we talked and, well...\" \n\n\"It was kismet!\" Kim interrupted and everybody laughed again. \n\n\"Did I hear you say you're looking for a house Amanda?\" Wendy asked between sniffles. \n\n\"Yeah, any ideas?\" \n\n\"Well, I just happen to be a real estate broker so I think I might have a few,\" she said with a big grin. \"Ouch, it's hard to smile when you're still broken.\" \n\n\"A smile is the best medicine,\" said Kim. \"We do a lot of that around here.\" She glanced at her watch. \"Hey, we have to go.\" \n\nRay nodded and grinned as well. \"Yeah, I have to pack up all my junk, then throw out half because it's just that, junk.\" \n\n\"See you guys,\" Alex said hugging them both. \"Thanks for the pizza and congratulations.\" \n\nOnce they left everyone turned their focus on Wendy. \n\n\"Okay, so when can we see our dream house?\" Amanda flopped down on the pillow in front of the couch and leaned her elbows on the coffee table. Her eyes sparkled with excitement. \n\n\"Here's my card, how about we meet Monday afternoon and go over what you're looking for.\" \n\n\"Perfect, no wait, we have Tae Kwando Monday afternoon. How about we talk over dinner here that night?\" \n\n\"That works for me,\" Wendy said jotting down a note and slipping it into her purse. \"Tae Kwando?\" \n\n\"Yes, Amanda got us all signed up,\" Alex replied. \"A couple of months ago she had a run in with a former supervisor at her work. Rachel managed to make him a eunuch right before he fled to Milwaukee...\" \n\n\"Courtesy of my boss,\" Amanda interrupted with a grin. \n\n\"So then we all realized that self-defense classes would be a good investment,\" finished Alex. \n\n\"The name of the school is called 'Karma'. Go figure,\" Amanda added and everyone laughed. \n\n\"Sign me up! I need something like that after the beating I took today,\" Wendy said pulling out her blackberry and jotting down another note. \"If it wasn't for Rachel I might be in the hospital right now.\" \n\n\"Our class starts at three Monday afternoon, it's the studio on 28<sup>th</sup> street near the warehouse district.\" Amanda scooted over to look at Wendy's cellphone. \"I'm sure there's room for at least one more in that session. Yeah, that's the one,\" she said pointing to the marker on Wendy's GPS. \"Master Kwon is cool too, he can be cranky at times...\" \n\n\"Especially when you don't remember your routines,\" Alex interrupted. \n\nAmanda stuck out her tongue. \"But he's got his heart in the right place,\" she finished. \n\n\"The more the merrier,\" chirped Rachel. \"Pick me up at work tomorrow and I'll guide you there.\" \n\n\"Where do you work?\" \n\n\"It's a law firm, Tamsen, Willis, and James, I'm in the accounting department.\" \n\n\"I know exactly where you are, my office is in the building across the street.\" Wendy pulled the three of them into a big hug. \"I'm so glad I met you guys. Oh, ouch...still sore.\" \n\nMonday, after Alex's classes, he picked up Amanda from her work and drove to the Tae Kwando studio. They were walking to the front entrance as a white BMW Z4 Roadster rolled into the parking lot. Behind the wheel was Wendy and in the passenger seat was a very wind blown Rachel wearing a smile that seemed to hang off her ears. She hopped out and nearly bounced across the parking lot, she was so giddy. \"That, girls, is one cool car.\" \n\n\"You're hair is a total mess,\" Amanda said trying to untangle a few curls. \n\n\"That's why I always wear a ball cap when I drive with the top down,\" Wendy giggled. \"I warned her but she was not having any of it.\" \n\n\"Ball caps cramp my style in a car like that,\" she replied with a grin and then pointing to Wendy's car. \"Someday I will drive one of those.\" \n\n\"Wendy picked me up from work, you should have seen the shocked look on the faces of some of those guys from the office. I wish I had my camera.\" \n\n\"It is a pretty car,\" Amanda said laughing at Rachel's boisterous charm. \n\n\"Come on, let's go, you know how much Master Kwon likes it when we're late,\" Alex said as he looked Amanda in the eye. \n\n\"Pushups are no fun,\" she muttered. \n\n=TWO= \n\nKyle Upton sat on his balcony and sipped his weekend cup of coffee. He was stumbling through his email on his iPad without much interest in anything offered until he opened a spam message linking the viewer to a new chat space for singles on a site he'd never visited before. He had lurked on chat room sites before, even browsed the personals on craigslist, and looked at a few webcam sites but mostly he was too shy to actually open a conversation let alone meet someone online. ",
        "He decided, what the hell, and clicked on the link. The iPad snapped out of his email server and quickly opened up a browser window. In seconds he was asked to register and login to a site that listed itself as 'open minded'. A few minutes later he was browsing through the thumbnail images of women and men looking to connect with someone. He was about to give up when a new page opened and an image nearly jumped off the screen. It was his neighbor, a woman he'd seen countless times in the lobby of the condominium complex where they both lived. She was as stunning as he remembered her. Her dark brown hair shimmered in the light as it cascaded like a waterfall around a beautiful face, nearly perfect in symmetry. \n\nHe looked at the name below the image, Wendy Bingham, hmmm. He scanned her biography below her name. Now he was certain that she was his neighbor. Not only did she live in the same complex but...she lived on the same floor and her balcony sat directly across the open space from his. He'd seen her countless times taking her coffee on her balcony on sunny mornings before work. \n\nHe smiled subtly, hesitated a moment, and then decided to send her a note. 'Hey, I'm sitting outside looking over at your balcony hoping you'd come out so we could chat. Call me.' He left his number and pressed 'send'. \n\nIt would be too much like a corny Hollywood movie to expect her to immediately respond but, what the heck, it was nice to fantasize a bit, anyway. He smiled again, closed his iPad cover, picked up his cup of coffee and walked back inside his apartment. \n\nAcross the way, looking through the sheer drapes that covered her balcony doors, Wendy glanced across to the other wing of the condominiums that faced her side of the building. It was another Saturday, almost like all the other Saturdays that have stretched back as far as she could remember except that this Saturday was supposed to have been her wedding day. Her eyes glistened as she thought about what it would have looked like. Her standing in a beautiful white gown, her hair done up in a cascade of curls, and in her hands a beautiful bouquet of flowers. Then the image of Ted's snarling face invaded her dream world. The vision shattered into a million tiny pieces leaving only the white sheer drapes to billow in the gentle breeze. \n\nShe looked across to the balcony that faced hers. A young man sat sipping coffee and looking at an iPad. He was busy tapping away, oblivious to the fact that a girl's dreams lay shattered at her feet. She sighed and turned towards her bedroom then the phone rang. Without looking at the caller id she opened her phone. \"Hello?\" \n\n\"Hi Wendy, it's me Rachel. What are you doing?\" \n\n\"Nothing. I was thinking of going back to bed. I'm not much for anything today.\" \n\n\"Come on, we're going to the beach. We'll be over in twenty minutes to pick you up.\" \n\n\"I don't know, Rachel. I'm feeling kind of lousy today. I don't think I'd be very good company.\" \n\n\"Nonsense girl,\" it was Amanda's voice now. She must have grabbed the phone from Rachel. \"We all know what today is and that's exactly why you need to come with us. We'll be there in twenty minutes to drag you out if we have to!\" she shouted giggling as Rachel's voice came back on the phone. \n\n\"I know my wife, there's no arguing with her. See you in twenty, wear something sexy.\" \n\nThe phone beeped when Rachel disconnected and Wendy sighed. She knew Rachel was right, Amanda is a whirlwind and there is no arguing with her once she has her sails up. \n\nWendy tossed the phone onto her purse and headed to her bedroom to find a swimsuit. \n\nAn hour later they stood on the beach holding large towels and sunscreen lotion. Alex pulled a cooler loaded with drinks and snacks from his car to the beach while Rachel was struggling against a stiff wind with a large umbrella. \n\n\"Wow, Alex looks good in that one piece,\" Wendy said softly to Amanda standing nearby. \n\n\"You have no idea how hard it was to get her into that, let alone convince her to go to the beach today.\" \n\n\"Why? She looks lovely.\" \n\n\"Please tell her that,\" Amanda replied. \"Her confidence is at an all-time low. She's still so self-conscious about her body. We can get her to go to the club, where she can hide in the back corner, but anywhere else and she's as nervous as a chased cat.\" Amanda sighed then hung her arms off Wendy's shoulder. \"She wears me out sometimes but she's getting better. Oh, and call her April. That's her name when she's dressed like that.\" \n\n\"That's a pretty name.\" Wendy watched April and Rachel setup the umbrella as Amanda spread out several beach towels. This was the first time she had a chance to really look at Alex, er, April's body. She was tall and slender but not skinny. Her breasts were surprisingly full given her slender frame. She filled out the swimming suit nicely. Her golden brown hair fell in gentle curves across her shoulders and it framed a remarkably feminine face with barely a hint of masculinity. She was lucky; some men had to work very hard to achieve any sort of femininity when they went through the 'transition'. Wendy reflected back on her own journey. She thought of the excruciating surgeries, the countless pills, and then the most painful thing of all, the rejection by all of her so-called friends and family. That thought made her wince. \n\nShe was still lost in thought as April ran back up the beach towards the umbrella where Wendy had wandered after they set it up. Amanda and Rachel had been tossing a large ball and playing 'keep-away' with her. April finally gave up and crawled back under the shelter of the umbrella to retrieve a drink from the cooler. \n\n\"Those two are too much for me today,\" she grunted, collapsing on a towel. \"I'm still exhausted from work last night. I swear that delivery truck arrives later and later each week.\" \n\n\"Where do you work?\" Wendy asked, pulled out of her somber reverie. \n\n\"The convenience store on Elm near 39<sup>th</sup>.\" \n\n\"I know it, I stop in there from time to time. But I've never seen you in there.\" \n\n\"I usually work night shifts so unless you come in after seven you probably won't see me. I have to work again tonight, yuck.\" \n\n\"Have you looked for other work?\" \n\n\"Not a lot of opportunities for an English major trying to put himself through school. I hope the convenience store is only temporary until I finish.\" \n\n\"When's that?\" \n\n\"Next spring, I hope.\" April settled back down and closed her eyes, pulling her arm across them. \n\nWendy could see that the girls had moved into the ocean with the beach ball. She suddenly felt a bit of jealousy for Rachel. \n\n\"Penny for your thoughts,\" murmured April, still lying with her arm over her eyes. \n\n\"They're actually a little embarrassing.\" \n\n\"What are?\" \n\n\"My thoughts.\" \n\nApril sat up and looked at Wendy. \"Okay, a nickel for your thoughts then.\" She wore a devilish grin. \n\nWendy sighed a bit and glanced at April with a subtle smile. \"I was just thinking about how jealous I am of Rachel.\" \n\nApril's eyebrows rose as she cocked his head with a curious smile. \"She is a beautiful woman.\" \n\n\"I agree, but that isn't why I'm jealous.\" She glanced over at Alex again and saw the quizzical look on his face. \"I'm jealous because of you and Amanda. You guys love her and each other so much it makes me jealous. There, I admit it.\" She hung her head with a girlish pout. \n\nApril wrapped her arms around Wendy and gave her a big hug. \"Don't be, your turn is coming, I can feel it. Besides you're with us now, part of our extended family.\" \n\n\"Speaking of which, where are Kim and Ray?\" \n\n\"Ray had to work and Kim is with her uncle helping him get ready for a surprise party he's throwing for her cousin's birthday. They'll probably stop into the club tonight if you want to see them again.\" \n\n\"Which club is that?\" \n\n\"Moulin Rouge, Rachel works there part time. She's on tonight until midnight, I think. Have you ever been there?\" \n\n\"I've only heard about it but I've never been there.\" \n\n\"It's kind of a cool place, their policy is open and accepting, so a lot of gay and transgendered folks drop by. It can get pretty outlandish some nights but usually it's just a nice place to hang out and unwind.\" \n\n\"I'll check it out.\" Wendy paused again and watched Rachel and Amanda playing in the surf, riding the waves as they crashed endlessly onto the shore. \"Wait a minute, what do you mean my turn is coming?\" \n\n\"What I mean, is that it's just nature's way.\" She said brushing off the sand from her suit. \"You just got out of a really nasty relationship, thankfully; so now Prince Charming is standing in the wings waiting for his cue. It's nature's way of finding balance in the world.\" \n\nApril took Wendy's hands in hers. \"The universe wants to work for you Wendy, it has to, but you have to let it happen and not sabotage it in the process. And don't think that you don't deserve it because you do, we all do. It's simple, really. So simple that people sabotage it all the time with negative thoughts. So don't do that. Think of what you need, not what you want. Tell the universe, out loud, what it is that you need and let it work to make it happen. Oh, and don't attached strings, it slows the process down. So be patient girl, he will be here before you know it.\" \n\nWendy looked at April, speechless. Then she grinned and threw her arms around her and pulled her close. She could feel her breasts press against her chest. They were soft and full. \"Thank you April, you're the best.\" \n\n\"What's up?\" Amanda asked, as she dropped down on a blanket next to April flicking water all over her as she sat. \n\n\"Hey, you're getting me all wet,\" April groaned. \n\n\"Well, get in the water lazy butt, it's great out there, the temperature is perfect.\" \n\n\"What about you?\" April asked, getting up on her knees. \n\n\"I can't, I'm pooped,\" Amanda replied. \"Rachel wore me out.\" \n\nAbout then Rachel dropped down on the sand and pulled out a towel to dry her hair. \"God, I love days like today. No tourists, peaceful, and the beach isn't too crowded. Who's up for beach volleyball? \n\n\"No way, I'm worn out.\" Amanda collapsed on a towel and groaned. \n\nApril got up, kissed Amanda and Rachel, adjusted her suit, and waved to Wendy as she headed towards the surf. \n\nWendy, waving back, watched her long legs stride gracefully towards the surf. \"She's really a lovely girl isn't she?\" \n\nRachel followed her glance towards April. \"Yes, she is, and I love her dearly.\" Then she leaned over and tickled Amanda's feet. \"Just as much as I love my little munchkin.\" \n\nAmanda squealed and pulled her feet away. \"You have to sleep sometime you Amazonian goddess,\" Amanda muttered into her towel between squeals. \"And then I will have my way with you.\" She leaped up and surrounded Rachel with tiny pokes. Rachel shrieked shouting, \"Uncle, uncle.\" They both fell into each other's arms laughing. \n\n\"So, how did you two meet April?\" Wendy asked, trying her best to stay out of the middle of the horseplay. \n\n\"He lives in the same apartment building.\" Amanda replied, poking her head out from under Rachel's arm. \n\n\"Right across the hall from me,\" added Rachel. \"I first met him when I was climbing those God awful stairs at two in the morning wearing heels that were, as Alex called them, dangerous on level ground. I have no idea why I bought them. My heel broke and I twisted my ankle. Alex caught me and helped me into my place. He was so sweet, he brought me dinner the following night.\" \n\n\"I remember that,\" Amanda added. \"I met him running up the front steps with a large bag of Chinese carry out. He called it 'meals on wheels'.\" \n\nRachel pulled a beer from the cooler and opened it. \"So we talked and a couple of days later I decided to open up to him. I don't know why but I felt like he was going to be somebody very special, and he was. From there we became friends, then lovers, and now wives.\" \n\nWendy glanced over at Amanda who grinned impishly. \n\n\"I had just moved into town and all my stuff was just dumped on the front lawn by the movers. Alex was walking up the front steps when he saw me standing there. I probably had the longest face on he'd ever seen. I was miserable. Alex offered to help and within the hour we had all of it neatly stacked in the middle of my new apartment.\" \n\nAmanda reached over and grabbed a beer out of the cooler. \"After that we'd talk occasionally in the hallway or at one of Reilly's backyard parties, then one day he saw me run out of my apartment crying. I went out to the old tree swing in the backyard. It reminded me of the one I had when I was little living in Vancouver. My Mom had just called to tell me that my cousin Susan was getting married in a month. I was devastated. I thought my life was a total screw-up. Then Alex looked at me with those beautiful blue eyes and told me that I was the luckiest girl in the whole world. He said that I got a do-over.\" \n\n\"A what?\" \n\n\"That's what I said. A what?\" she laughed. \"He said, It's what happens when the universe deals you a hand that is so terribly wrong that in one fell swoop things are reset and you get to start again, fresh.\" And then he told me \"you are truly blessed Amanda Simpson, and that is nothing to be sad about.\" \n\n\"I was dumbfounded. I looked at him for a moment and then I knew he was completely right. In that same moment I realized that I had fallen in love with him,\" she paused a moment and leaned up to kiss Rachel on the cheek, \"and then I met this sweet, beautiful girl and I knew that I'd found my place in the world. Between them and with them.\" \n\nWendy's cheeks were wet and her eyes were glistening as she listened to their stories. She took a big breath and let it out slowly. She settled back against her towel to think about where her own life had been and where it might be going. April's words kept repeating in her mind. 'Your turns coming; just be patient.' \n\n=THREE= \n\nThat afternoon after the girls dropped her off at her condo, Wendy flopped down on her couch and picked up her iPad. Work was the last thing she wanted to think about but she knew that she had to check into her email server at least once a day to keep up with everything. \n\nThen she saw it. It was the third message down. \n\n'Hey, I'm sitting outside looking over at your balcony hoping you'd come out so we could chat. Call me.' He left his phone number after the note. \n\nHer face flushed scarlet. Oh my God! He lives in the same complex! Do I know him? How does he know that my balcony is...? \"Oh Shit.\" She scrambled off the couch and dashed to the sheer curtains that covered the balcony doors. Directly across from her balcony was an identical one facing it. And sitting on a chair was someone she had only noticed once or twice as she came into the building lobby. \n\nShe peeked through the drapes and then she grabbed up her iPad to look at his note again. He must have seen me sitting on the balcony but I never noticed him sitting there. Does he know about me? Maybe. He has to suspect something if he was looking at that particular website. It's called 'open-minded' for a reason. \n\nWhat if he's some dumb jock who cruises websites looking for a quick poke? Or maybe he's a stalker, or a rapist? Oh get a grip girl. If my mind keeps going like this I'll end up crazy, old, and alone. I just have to ask. It's that simple. And if he tries to hurt me... \n\nShe spun her foot up in a classic roundhouse kick then she settled down and repeated several more forms. \"Then I'll just kick his butt,\" she muttered with a sheepish grin knowing that she'd only been to two lessons so far. \n\nIt was late in the afternoon, nearly five o'clock when Kyle heard his cellphone beep. He had stepped inside to freshen up his drink and he got a text message to come out onto his terrace. He stood looking around and then he noticed a girl waving at him from across the way. It was her, the girl he'd seen countless times in the lobby. The girl he saw on that website. His cellphone began to ring. \n\n\"Hi\" Wendy said waving again timidly. \n\n\"Hi back at you.\" \n\nThey stood looking at one another across the open space that separated the two wings of the condominium complex. \n\n\"So, do you want to meet someplace where we're not standing so far apart?\" \n\nShe glanced at the setting sun. \"How about dinner?\" \n\n\"Perfect. Burgers at Rudy's? It's just down the street from here.\" \n\n\"I'll meet you in the lobby in thirty minutes.\" \n\n\"I'll be waiting.\" \n\nRudy's was a quaint little 'Ma &amp; Pa' operation that specialized in gourmet burgers and seafood hoagies. The price was reasonable, for this side of town, and the atmosphere was always warm and welcoming. \n\nKyle led the way to a seat outside on the terrace away from several others crowded around the television blaring sports news. He turned to Wendy. \"Is this okay?\" \n\n\"It's fine, thanks.\" \n\n\"Actually, I've never been here before. I've driven by it enough times to tell myself that I should try it but...\" He shrugged and grinned. \n\nWendy glanced up from the menu and returned his awkward smile. She could see he was nervous. She was nervous too. She took a big breath to settle the butterflies fluttering in her stomach. \"I know I'm the same way. But now we're here.\" She gazed into his twinkling eyes and she could see that Kyle was beginning to relax a bit. \"So, you sent me a message.\" \n\n\"And you texted me back, then you called.\" \n\n\"Yeah.\" \n\nThey sat looking at one another, forgetting that the rest of the world existed, including the waiter who arrived at their table several minutes earlier. \n\n\"Ahem, can I get you something to drink?\" \n\n\"Ah, yes, just water for me,\" Kyle responded. \n\n\"Me too.\" \n\nWendy watched Kyle take a big breath and let it out with a soft whistle as if he was trying to release some of the tension that was building up inside. She felt the same way only she didn't want to whistle. \n\n\"Wendy, I've never been very good at this, meeting beautiful girls and talking to them.\" \n\n\"Well I feel just as awkward as you do so we're even.\" She thought for a moment. \"I tell you what, tell me your most embarrassing moment this week and I'll tell you mine. After that we can't be any more embarrassed than we were then, so everything will be just fine.\" He smiled sweetly and her heart just melted. \n\n\"Okay, hmm, oh I know. I was walking out of my office two days ago when I ran into Henderson from accounting. We were both late to a meeting. I was juggling a stack of folders and a glass of water. The water tumbled and I managed to save the folders but not my pants. It went right down the front, splashing all over my crotch. About then the general manager walked out of the conference room. I must have turned fifteen shades of red.\" He chuckled as he shook his head and Wendy smiled. \"Okay, your turn.\" He leaned forward and rested his chin on the palms of his hands. \n\n\"I'm a real estate broker. I was showing a house to some close friends the other day when we all walked into the main bathroom to see an elderly man standing buck-naked with everything at half mast. I guess he didn't hear us come into the house. I had phoned earlier and left a message but sometimes, try as you might, you manage to see a cock or two when you least expect it.\" \n\nKyle laughed out loud. He had such a beautiful smile. His eyes lit up with a sparkle and his cheeks had such cute dimples in them. \n\n\"Okay, you win, a cock at half mast always beats a wet crotch in any poker game I've played.\" He shook his head and chuckled again. The waiter brought their water and they ordered the house special. \n\n\"So, tell me about yourself. You're a real estate broker? That must be interesting.\" \n\nWendy sat there a moment and studied Kyle's face then she smiled meekly and sighed. What do I tell him? I will never get into another relationship, even a casual one, without the truth. Wendy hated what happened that day in front of those condos; even more than she feared telling Ted her secret. From now on it's the truth. She took a big breath again and let it out slowly. ",
        "Kyle's smile began to fade as she wrestled with what she needed to tell him. \n\n\"Today was supposed to be my wedding day.\" \n\nAll of the color dropped out of Kyle's face. \"What? What happened?\" \n\n\"We got into a huge fight a month ago. It was so terrible my friend Rachel had to step in and break it up. If she hadn't, my ex-fianc\u00e9, Ted, would have put me in the hospital. I vowed then that I would never allow myself to be in that sort of situation again. So if what I'm about to say bothers you please just leave and we'll never have to speak about it again.\" \n\nKyle sat motionless across the table from Wendy. She sat looking for any hint of resentment or fear. But there was none, his expression was compassionate and sincere. \n\n\"I was born James Wendell Bingham the third, into a wealthy family who lived most of their privileged lives in seclusion from the real world. When I was eight I began to have feelings about who I was and although I didn't understand exactly what I was feeling I did know that I was different from the other boys who I would hang out with or who went to school with me. When I was twelve and starting puberty I found that I liked to do things that my father found distasteful, like playing with dolls and having make-believe tea parties. I can't begin to count the times he locked me in my room as punishment for misbehaving like a girl. And there were times he decided that a belt or hairbrush was a better tool of discipline to teach me about manhood than any stern talking too. But where he was persistent I was equally stubborn. I knew what I liked and it wasn't what he considered appropriate boy behavior.\" \n\n\"When I was fourteen, unbeknownst to my father, my mother started me on a hormone therapy. She was struggling to understand what I was going through but she knew that what my father was doing was wrong. She talked to a couple of specialists who referred her to a child psychologist and he told her that her son had issues with gender identity, as he called it.\" \n\n\"The drugs began to reshape my boyish body making it more feminine. In some respects they helped me here as well,\" she said, pointing to her forehead. \"The conflicts inside my brain began to diminish and I was starting to see the world from a feminine perspective.\" \n\nKyle fiddled with his napkin as he listened earnestly to Wendy's story. When the waiter returned with their meal Wendy paused briefly so that they could finish in silence. Once they were nearly done Wendy continued. \n\n\"When I went off to Dartmouth I went dressed as a boy to placate my father but once I left the dorms after my freshman year I got my own apartment. From then on I began to dress completely as a woman. At first I was the subject of ridicule, then it became more sinister. Not from the boys, they were mostly childish and stupid. It was the girls who where sinister. You cannot imagine the ugly pranks they would play on me. Some of it bordered on torture. To this day the thought of being bound to something, anything, by ropes or electrical ties makes me hysterical. I couldn't get through the first half of 'Fifty Shades' without throwing it in the trash.\" Her cheeks were damp as tears filled her eyes. She lifted a tissue from her purse and dried her eyes. \n\n\"The one thing those women kept over my head was the thought that I could never be a woman if I had a penis.\" Her voice was now barely a whisper. \"I yelled back at them in rage. I am a woman in my heart and that's all that matters. They laughed at me. They spat in my face and kicked me in the balls. I screamed at them. \"How could a woman still be a woman if cancer has taken her uterus or breasts?\" Then someone knocked me unconscious. I was found the next morning by one of the grounds keepers at the college. I decided at that moment that whatever it took I was going to be a woman physically to match who I was here,\" she pointed to her heart.\" \n\n\"I finished college, I wasn't going to let them beat me. I stood defiantly on the dais, graduating cum laude and told them all, that today was the happiest day of my life because I was leaving them all behind. I smiled graciously, turned and never looked back. Three years later I had my operation.\" Her face was filled with a ferocity that matched the passion in her heart as she sat back and waited for Kyle's response. \n\nKyle paused for a moment. His face was almost blank. Wendy couldn't tell what he was thinking and that worried her most of all. Did I go too far, too fast? Does he think I'm some sort of lesbian man-hater and that I detest him because of who he is? \n\nThen Kyle leaned forward with a gentle smile. \"You are the most courageous person I have ever met.\" \n\n\"What I just said doesn't bother you?\" \n\n\"I'm having dinner with you, not part of you. I'm sorry about your wedding. Your ex-fianc\u00e9 is an ass and the rest of your dinner is getting cold.\" His eyes twinkled with delight as her face lit up. \n\nHold on girl; let's not jump from the frying pan into the fire. You still don't know anything about him. He could be a serial rapist or something...but I doubt it. \n\nWendy settled herself into her chair and picked up her burger then paused. \"Okay, I guess it's your turn. What do you do when you're not cruising the Internet?\" \n\n\"I'm a lawyer, yeah I know, here come the lawyer jokes.\" \n\n\"Not from me, I'm in real estate, remember?\" \n\n\"I work for the Securities and Exchange Commission doing research in the International Trade Division. I spend my day pouring over shipping invoices, bills of lading, goods received and shipped. God, it's boring stuff.\" \n\n\"Are you looking for drugs?\" \n\n\"No that's I.C.E. and the DEA. More dangerous, less boring.\" \n\n\"Is it your first job out of school?\" \n\n\"No, I spent some time clerking for a Circuit Court Judge in Colorado before I came here. It was okay but the pay was lousy and I am still swimming in debt from law school. The SEC job gave me a shot at seeing the light at the end of the tunnel, so-to-speak.\" \n\n\"Student loans can be brutal, you can never default on them either.\" \n\nHe nodded. \"They sort of have you by the proverbial short hairs.\" \n\n\"Yeah, they do.\" \n\n\"So why did you pick the name Wendy? Is it because of Peter Pan and Neverland?\" \n\n\"No, but that's a good guess. I've heard from a friend that a lot of girls named Wendy come from that reference. My middle name is Wendell and my Mother's name is Dee.\" \n\n\"Got it, Wen Dee, just a different spelling.\" \n\nShe tilted her head slightly and smiled at Kyle warmly. He seemed kind and caring. Also honest and open about who he was and where he'd been. \"So, my turn for a question. Any girlfriends?\" \n\n\"Not since six months ago and even then Diane was an on again off again kind of girl. Eventually it became apparent to me that she was looking for someone who could keep her in the lap of luxury that she imagined and I just wasn't that kind of guy.\" \n\n\"Trolling for a big wallet?\" \n\n\"Yup.\" Kyle picked up his napkin and wiped his face. \n\n\"Why were you on the open-minded website?\" \n\n\"I don't know, a coincidence maybe? I've been on sites like that one before but that was the first time I visited that particular site. There was a link to it in my email inbox and I absent-mindedly clicked on it. And now I'm glad I did.\" \n\n\"I have a friend who doesn't believe in coincidence. I'm beginning to believe him,\" she added taking another bite of her salad. \n\n\"Why were you on there?\" He asked resting his chin on his palms again. His eyes twinkled mischievously. \n\n\"I don't know either, coincidence?\" \n\nKyle laughed out loud again. It was a hearty laugh, open and joyful, she liked that. She liked Kyle too, but in the back of her mind there was still doubt. Ted placed that shadow on her heart. It would take more than a burger and salad with a cute guy to remove it. \n\nA rowdy group of locals came out to the terrace from the restaurant and sat at a table nearby. They were loud and boisterous. The place was starting to get crowded. \n\n\"It's Saturday night and it looks like things are starting to pick up,\" Kyle said trying to talk over the crowd at the next table. \"Do you want to go somewhere else?\" \n\n\"What time is it?\" \n\n\"A little after nine o'clock.\" \n\n\"Yes, but I'll drive. Have you ever been to Moulin Rouge?\" \n\n\"I think I've heard of it but I've never been there.\" \n\n\"Neither have I, but tonight seems to be an evening of firsts. Let's go.\" Wendy scooted her chair back and followed Kyle out of the restaurant. \n\nOutside they walked together down the sidewalk towards the condominium complex. When they came to an intersection Kyle reached over and took her hand in his. Wendy looked up in surprise, blushing slightly, then they crossed the street and continued to hold hands until they reached the garage where Wendy parked her car. \n\n\"Wow, cool car.\" Kyle stopped for a moment and admired the sleek lines of the Z4. \n\n\"Come on, get in. Should I put the top up?\" \n\n\"Are you kidding? This is why you buy a convertible!\" \n\nShe grinned sheepishly and started the car. It roared to life and rumbled softly as she backed the car out of her private parking spot. \n\n\"I actually bought it because I like the way it handles.\" Wendy pulled out of the driveway and the car raced off down the street. \"I hope you don't mind, I sort of have a lead foot.\" The car squealed around a corner and dashed off down the street towards downtown. \n\nKyle's eyes got rather large but the smile on his face told her he wasn't going to complain. \n\nIt was closer to ten o'clock before they walked up to the club entrance, and there was a sizeable cue lined up on the sidewalk. Wendy looked around for a moment. \"Geez, maybe we won't get into the club after all.\" \n\n\"Wendy?\" Some one shouted from behind the gated entrance to the club. Wendy turned and walked back towards the head of the line. \"Hi Ray.\" \n\nRay was standing besides the bouncer who was busy checking IDs. \"I just came out for a smoke. Have you been out here for very long?\" \n\n\"No, we just got here. The line looks pretty long.\" \n\n\"Wait right here, I'll go get Rachel.\" Ray crushed his cigarette and dashed back into the club, disappearing behind a beaded curtain. \n\nWendy turned and motioned to Kyle and he walked up to stand by her. She grabbed his hand and smiled. A moment later Rachel appeared at the doorway. Her hair was up in large curls that cascaded down her back and she wore a rather provocative silver dress that, while barely covering her thighs, hugged her ample breasts like a well-fitted glove. As she stepped towards them Wendy noticed she was wearing another pair of heels that clearly were in the 'dangerous even on level ground' category. \n\n\"Wow, you look amazing!\" Wendy shouted over the thump of bass reverberating from the building. \n\n\"Thanks. So you decided to check out the club?\" Rachel looked down and noticed that Wendy was holding Kyle's hand. \n\n\"Yeah, we just finished dinner. It was sort of impromptu. Oh, this is Kyle Upton. He's a friend. I hope we can get in.\" \n\n\"There's a birthday party going on in a private room and that always backs things up. Come on.\" Rachel nodded to the bouncer and opened the gate for them. \"Follow me.\" \n\nWendy and Kyle followed Rachel through the doorway and into the club. The music was throbbing and lights were flashing around the room. In the center was a large dance floor that was crowded with people moving to the beat. Wendy looked up to see Rachel glancing sideways at Kyle like an overprotective mother hen. \n\nShe was beginning to wonder if she was throwing Kyle to the wolves here. She looked back to see that he appeared to be as dazzled by the place as she was. They followed Rachel back to a table in the corner of the club. As they came closer, Wendy saw some familiar faces. Amanda was talking to Kim and Ray and Alex, apparently now dressed as April from the spectacular red gown she was wearing. She was getting up to greet them. \n\n\"Wendy! Great to see you,\" she leaned forward and gave her a hug. \"Who's this?\" \n\n\"Hi everyone, this is Kyle Upton. We just finished dinner a while ago so we decided to take you up on your offer and check out Moulin Rouge.\" \n\n\"Hello Kyle,\" everyone shouted back. April stepped around Wendy and offered her hand. \"Nice to meet you. How do you know Wendy?\" \n\nKyle took April's hand and returned her firm handshake. \"We just met today actually, it was quite by accident,\" he said with a shrug. \"We live in the same condominium complex.\" \n\nWendy curled her arm around Rachel's and steered her away from the table. \"Can I speak to you for a moment?\" \n\n\"Sure, what's up?\" Rachel glanced over Wendy's shoulder and watched Kyle and April talk. \n\n\"That.\" \n\n\"What?\" \n\n\"That helicopter hovering you're doing.\" \n\nRachel glanced back at Wendy and blushed. \n\n\"Rachel, I'm a big girl. I'm never going to repeat what happened with Ted, never ever. I know you want to protect me like a big sister and I love you for it. But go easy on Kyle. He's kind and considerate and we really hit it off tonight. If you come on too strong you might scare him off and I kind of want to see where this goes.\" \n\n\"Are you sure? Does he know about you?\" \n\n\"Yes, and yes. We had a long talk, well, mostly I talked and he listened, which is so rare in guys, right? So don't rough him up, okay? Be gentle. I think he's a keeper.\" She leaned up and kissed Rachel on the cheek and gave her a little hug then she turned and walked back to sit next to Kyle. \n\nAfter Wendy sat down April leaned over and whispered into her ear. \"Prince Charming?\" \n\nWendy face was flush with crimson. She lowered her eyes and smiled demurely then she glanced sideways at April then looked up at Kyle who was busy talking to Amanda. She nodded and whispered back. \"I hope so.\" \n\n\"Good.\" April stood up and leaned over to Wendy and Kyle. \"Can I get you anything? I'm heading for the bar.\" \n\n\"A coke for me,\" Kyle replied. \n\n\"Same here,\" added Wendy. April nodded and started the long weave towards the bar. \n\nKim and Ray moved over to sit next to Wendy. \n\n\"Thanks for helping us Ray,\" Wendy said reaching over to give his hand a pat. \"We'd probably still be out there if you hadn't seen us.\" \n\n\"You're more than welcome Wendy,\" Ray said sipping on his rum and coke. \n\n\"How long have you guys know April and her sisters?\" \n\n\"For me,\" Ray replied, \"I've known Alex for at least two years, we started college together.\" \n\n\"Me too, I met Alex two years ago in the Short Story Composition class. I think it was his first year at the university too,\" Kim added. \n\n\"So how did you guys react when they told you everything?\" Wendy asked. \n\n\"Oh God, that was crazy that night,\" Ray replied. \n\n\"It was?\" \n\n\"Yeah, everything changed so quickly.\" \n\n\"Being with those three is like living in a whirlwind,\" Kim added. \"When I first met him, Alex wore mostly faded flannel shirts and worn out jeans.\" \n\n\"He still had long hair but he smashed it down under this ragged stocking cap,\" Ray chimed in. \n\nKim nodded and continued. \"But lately at school, I noticed that he was beginning to wear more feminine things. I was concerned because boys can be terrible teases so I spoke to him about it. You know sometimes that sort of stuff leads to something more violent.\" \n\n\"Sweetie, boys are nothing compared to girls, but go on,\" Wendy said, emphatically with a touch to Kim's hand for emphasis. \n\n\"Anyway, we got to talking and the next thing I knew he had invited me over to his house to meet his sisters, Rachel and Amanda. They began to explain a little bit about who they were. They did a complete makeover on me. I walked out of Rachel's bedroom a completely different person. When I turned around Alex was walking into the room wearing this stunning black dress and heels. One thing led to another and we were headed here to Moulin Rouge.\" \n\n\"I barely recognized Kim when I saw her that night, she was beautiful,\" Ray added, hugging her. \"I was here with some friends when I saw her on the dance floor dancing with another girl. When I finally worked up the courage, I walked across the dance floor to talk to her. But not in my wildest dreams did I imagine what would happen next. I sat down to talk to Kim and did a double take when I realized that it was Alex sitting next to me...\" \n\n\"But now she was April...\" Kim added. \n\n\"Uh-huh, and we got to talking. Then I met Amanda and this amazing Amazonian goddess, Rachel. In those five-inch heels she just towered over me. I felt like the woman could squash me.\" \n\n\"She is tall,\" Wendy mused with a chuckle. \"And I've seen her knock a six-foot man to the ground with one punch.\" \n\n\"So you know what I mean, right? Anyway we all ended up back at Rachel's apartment. It must have been around two in the morning. We'd had a few drinks at the club and a few more at Rachel's place so once again my courage was fueled by alcohol and I had to ask...\" \n\n\"Ray's a sweetheart but he can be a knuckle head sometimes.\" \n\nRay blushed a bit and shrugged with a grin. \"April got out her iPad and showed me the infamous webpage. Then Rachel told me that she was a pre-op transsexual and Amanda said she was a genetic goddess. The more I know Amanda the more I believe that's true.\" \n\n\"That girl is at the center of the vortex. When she gets going on something she is unstoppable.\" Kim added. \n\n\"Yeah, I found that out,\" chuckled Wendy. \"So are you guys okay with all of this? \n\n\"Yeah,\" Ray responded quickly. \"They're beautiful and besides, if it wasn't for Alex I would never have worked up the nerve to be with this beautiful woman right here,\" he added hugging Kim tightly and kissing her on the cheek. \n\n\"And if it wasn't for all three of them I wouldn't have had the nerve to be with Ray. They're our best friends, I don't know what I would do without them.\" She kissed Ray lightly on the lips. \n\nWendy smiled and reached across to squeeze Kim's hand. \"Thank you.\" \n\n\"Hey.\" Kyle rubbed Wendy's shoulders lightly. \"You want to dance? It looks like fun.\" \n\n\"I'd love to Kyle but I'm just beat, it's been a long day. Can I take a rain check?\" \n\n\"Hmmm. A rain check means we'll come back here again doesn't it?\" \n\nWendy nodded and smiled demurely. \n\n\"Good, a rain check it is. Do you want to leave?\" \n\n\"Can we?\" \n\n\"Of course, you're driving.\" \n\n\"Okay, let me say good night to Rachel, I'll be right back.\" Wendy stood up and wove her way across the dance floor. She spotted Rachel at a table near the bar. \n\n\"Hey, we're going to take off.\" \n\n\"Call me tomorrow, okay?\" Rachel shouted over the throbbing music. \n\n\"Okay.\" Wendy turned to make her way back across the floor. \n\n\"Wait, I'll walk with you.\" \n\nThey both crossed the floor and made their way to the table in the back. Wendy grabbed her jacket and Rachel reached over to touch Kyle on his shoulder. \"Can we have coffee sometime? I'd like to get to know you better.\" \n\n\"Sure, Wendy has your number doesn't she?\" Kyle replied while pulling on his coat. \n\n\"Yes. Text me when you have some free time.\" Rachel smiled and glanced behind Kyle to see a warning look from Wendy. Rachel leaned forward and gave Kyle a little hug while mouthing the words \"don't worry, I'll be kind\" to Wendy. \n\nWendy pulled her into a hug and whispered in her ear. \"I love you Rachel but you'd better behave.\" Then she kissed her on the cheek. \n\nThe elevator door chimed and the doors opened. Kyle and Wendy walked down the long corridor to her condo holding hands in silence. They both wore a subtle smile. Kyle turned when he arrived at her door. \"Thanks, it's been a really special evening.\" \n\n\"Yes it has, very special indeed. Thank you for putting up with my whim.\" \n\n\"Whim?\" He looked at her with a curious smile. \n\n\"Moulin Rouge, I sort of blind sided you a bit on that one.\" \n\n\"You mean introducing me to your friends? Nah, wait until you meet my family, now that will be a crazy time.\" ",
        "\"Your family?\" \n\n\"No expectations, but if it happens you'll have to study up on crazy. I just wanted to warn you in advance.\" \n\n\"Oh, okay, thanks. Well, good night Kyle.\" \n\nKyle leaned in and kissed her gently on the lips. It was their first kiss. It was sweet and it set her heart racing. \"Good night,\" he said as he let go of her hands and turned to walk away. \n\nShe watched him walk down the corridor with his cellphone in his hand. A moment later, her phone beeped. She flipped it open and read the text message. \n\n'How about dinner and a movie next Saturday night? My treat.' \n\nShe smiled and opened her door texting 'yes'. \n\nA NOTE FROM THE AUTHOR: \n\nThe author copyrights Stray Cats and all of its parts. The reproduction of any part of Stray Cats without the written permission of the author is expressly prohibited. \n\nThis story is a work of fiction. All of the characters, their names and the places they visit, are purely from the imagination of the author. Any resemblance to persons, places, or things is not intentional and purely coincidental. \n\n\u00a9 2015/ Dreamweaver594"
    ],
    "authorname": "Dreamweaver594",
    "tags": [
        "menage e trois",
        "romance",
        "transsexual",
        "trans",
        "threesome",
        "threeway",
        "group",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/stray-cats-ch-04"
}