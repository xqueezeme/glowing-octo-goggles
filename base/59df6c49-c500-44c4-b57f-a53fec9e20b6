{
    "title": "What a Shortstop Does Ch. 25-28",
    "pages": [
        "Part six of six! Enjoy.\n\n_\n\n \n\nChapter 25: Seven Years\n\n\"Come on, man, four more. Then I'll let you take that ice bath.\"\n\n\"That's not really motivation, Golding.\"\n\nSarah laughed, \"Yeah well, you'll do it anyway because you want to pitch this spring.\"\n\nShe was lunging on the floor of the training room, spotting her latest charge, the number one pitcher for the Astros who was working through some lower back spasms. The facilities for pro sports teams still astounded her and she went to work every day in awe that she had made the cut to work in one. Right out of graduate school, she had applied to every major league team in the country. Houston was the only one to call her back. She went happily and loved her work.\n\n\"Alright, you're good. Hit the bath. And don't overdo it in practice tomorrow! I'll know if you do.\"\n\n\"Yes, ma'am.\" They shook hands.\n\nSarah had found during her internships that bonding with fellow athletes was easy. She established good relationships with her clients working through sports injuries. They respected her medical opinion and her softball background. Working with baseball players was especially rewarding, but really, she was just happy to be around people who took their recovery so seriously. For athletes, recovery was business.\n\nAfter logging her notes on her last patient of the day, Sarah hopped in her Jeep to head home. She stopped for take-out on the way. The warm weather and mild breeze was pleasant. She still found herself surprised by the subtropical climate, it being so different from where she grew up. Not that this was better, in fact, if she was honest, Sarah preferred the varied climate and the snow.\n\nAs she put the take-out containers in her car, the bluetooth connected to her phone rang through the Jeep's speakers. Carly's icon popped up, a picture of her in her wedding dress and Sarah in her bridesmaid's dress. That was the last time Sarah had long hair and probably the last time she wore a dress. Sarah wore her hair shorter now, an undercut with the longer top bleached a brighter blonde than her natural dark blonde roots, though when she wasn't working, this was often obscured by a baseball cap.\n\n\"Hi Carly!\"\n\n\"Sarah! How's everything in Houston?\"\n\n\"Gorgeous, better than Boston,\" she teased.\n\n\"No, it's not,\" Carly laughed, \"But I'm glad you still like it. Are you coming our way anytime soon? I don't know how much you travel with the team.\"\n\n\"Uh, sometimes, I'm still the low-man on the totem pole, so I go when no one else wants to. I was thinking of making a trip before the season starts, right after spring training.\"\n\n\"That would be great!\" Carly's classic squeal was a bit calmer now, but still rang out in Sarah's car enough to make her flinch. \"Will you bring Jen too?\"\n\n\"If she can get the time off, yes.\" Sarah's girlfriend, Jen, was a lawyer at a major firm in Houston. They met at a charity gala where they'd been two of the youngest women in the room not hanging on the arm of some wrinkly millionaire. Jen was smart, driven, and hot. They'd hit it off and moved in together after just four months of dating.\n\n\"Great, I think you'll like the spring here. Campus is beautiful. I'll make sure David gets some time off so we can do something fun. Oh and Finn will be walking by then!\"\n\n\"That kid is still crawling? Tell him Aunt Sarah's got some exercises for him to do!\"\n\nCarly laughed, \"I will. I miss you, Sar.\"\n\n\"Miss you too.\"\n\n\"I'll text you tomorrow, I've got to get some stuff done while the monster sleeps. I really just wanted to see if you were coming to our time zone soon.\"\n\n\"Sounds good, yeah, I'll see you soon, Carly. I'll look at some dates and email you guys.\"\n\n\"Bye, hon!\"\n\n\"Bye!\"\n\nSarah smiled, it would be good to see Carly and David and little Finn again. It had been months since she went to meet the baby after he was born. Boston really suited them well. Carly taught first grade and David was a professor at MIT. They joked about how their students were essentially the same: moody, needed naps, and couldn't stop touching each other.\n\nJen's car was in the driveway when she got home. They were renting a small, two bedroom house in a busy neighborhood outside of the city. Sarah loved the space, but the yard was a pain with their schedules. She noticed again that the hedges out front needed more trimming.\n\nGrabbing the take-out and opening the front door, she announced her arrival, \"I'm home! And I bring sustenance!\"\n\nThere was a responding \"whoop\" from the second bedroom. That meant Jen was still working. The second bedroom was for guests, technically, but was mostly her office.\n\n\"Give me ten minutes!\" came her reply. Sarah filled a plate with food and plopped onto the couch. Twenty minutes later, Jen emerged, phone still in hand answering a few emails. She gave Sarah a peck on the cheek and went to grab a plate from the kitchen.\n\n\"I'd ask you how work was, but it looks like you're still at it,\" Sarah commented when Jen finally sat down.\n\n\"Sorry, babe. I'll put it away. Just trying to get all the documents from this client in one location. They are a bit of a scatter brain.\" Jen smiled and thanked Sarah for the dinner.\n\nThey sat in comfortable silence, watching some TV and eating as they both decompressed from their busy jobs. It was hard to remember sometimes what it felt like to just do nothing together. When they first started dating, they had to squeeze in time together in their calendars. That's probably why it took them four months to decide to move in when most of their acquaintances were u-hauling after a few weeks. But, happily, they found neither resented the other's crazy schedule, and Sarah admitted it was nice having someone to fall into bed with at the end of a long day.\n\n\"So I talked to Carly today. She invited us to come up.\"\n\nJen flicked her short brown hair out of her eyes, \"When?\"\n\n\"March, probably. Think you could swing it?\"\n\nJen nodded with a mouthful of food as she thought, \"Maybe, I'll have to check on a few cases we're taking on.\"\n\nSarah knew that's as much of an answer as she could expect right now with Jen's court schedule. They cuddled up on the couch, leaving the dishes for later. Sarah let her hands wander down Jen's open blouse and over her bra. Her eyes stayed on the TV, but she felt Jen turn to look at her.\n\n\"Don't start something you can't finish, Golding,\" she teased. She pressed her large breasts into Sarah's touch.\n\n\"Oh, I can finish it,\" Sarah growled into her ear. Jen squealed and jumped off the couch, pulling Sarah with her. They kissed and clothing fell in the hall as they made their way to the bedroom. Sarah picked up Jen's smaller frame and tossed her onto the bed before climbing over her like a predator. Jen wiggled up to the pillows and watched Sarah hungrily.\n\n\"Fuck me, babe,\" Jen whispered. Sarah wasted no time removing the last barrier, Jen's lacy panties, with a quick yank. Then she dove into her girlfriend's sex with no preamble. Jen moaned her appreciation.\n\nSarah made fast work of the pussy in front of her. She licked and sucked at the lips until she felt some of Jen's own lube flood out, then she followed with two fingers. Jen's breathy moans filled the bedroom as Sarah moved her mouth to her clit. Her girlfriend's white, plush thighs trapped Sarah's head as she worked. This was her favorite thing, the way Jen's body just responded enthusiastically to everything Sarah did.\n\n\"Yes, yes, babe, keep going!\" Sarah had no intention of stopping. She kept a steady pace on Jen's clit and picked up the pounding of her vagina with her fingers. Her free hand wandered up to play with Jen's ample breasts. Sarah watched them rise and fall as Jen's breathing quickened. \"Yes, fuck me, yes!\" Jen came with a shout and those thighs pressed Sarah's head hard. She slowed to let Jen come down, but didn't let off completely.\n\n\"Good, baby?\" Sarah looked up to see Jen's chest flushed red and a satisfied smile.\n\n\"Great,\" she breathed.\n\nSarah nodded and moved her mouth back to Jen's clit, teasing its oversensitivity gently. She responded instantly by arching her back off the bed and whimpering. Fingers still buried in Jen, Sarah grabbed her by the arch in her back and pulled her up into a deep kiss. Hungrily, Jen wrapped her arms around Sarah and dug her tongue into her mouth.\n\nTheir makeout didn't last long as Sarah pumped her fingers deeper and Jen fell back to the pillows and lifted her legs to give Sarah more and more access. She bit and sucked thigh flesh into her mouth as her fingers worked in a come hither motion inside Jen's now dripping cunt.\n\nIt only took a few moments in this new position for Jen to come around Sarah's fingers. \"Fuuuuck, yes!\" she screamed. There were many times in their relationship where Sarah was glad they had a house and not an apartment. This was definitely one of them. Jen pulled Sarah on top of her and ran her fingers up her girlfriend's back. Sarah made a show of licking her fingers clean causing Jen's eyes to roll back enthusiastically. She kissed her.\n\n\"You want to use the strap tonight, babe?\" Jen's eyes met Sarah's as she asked and Sarah knew what she really meant.\n\n\"No, I'm good,\" Sarah responded as she kissed her. \"You want to go again, though?\" She wiggled her eyebrows and Jen laughed.\n\n\"I do still need to get some work done tonight!\"\n\n\"Boo, we need to get some more fun in before my parents come next week,\" Sarah said as Jen got up and began the search for her clothing.\n\n\"Oh shit, I forgot they were visiting.\"\n\n\"That's why I'm reminding you,\" Sarah smiled. \"You can't yell like that if my parents are sleeping in the next room!\" Jen swatted Sarah and blew her a kiss. Then she left to presumably find her phone and get more work done. Sarah sighed and rolled off the bed to shower.\n\nIn the shower, Sarah sought a little relief for herself with her fingers. She let the hot water run down her back and relaxed into the motion of her hand on her clit. It's not that Jen wasn't willing to give her her own release in the bedroom, since college Sarah had just developed a...habit. She fucked women, but they did not fuck her. While Jen was always ready to try to return the favor, it never worked and Sarah ended up frustrated or embarrassed. The one loophole they found was that Sarah could come while wearing a strap on with the little nubs inside rubbing on her clit.\n\nWell, and Sarah could still get herself there, alone, and mostly in the shower.\n\nShe rocked against her own hand, feeling the pressure build. Her mind flashed to eating Jen out, the taste, the moans. Her fingers picked up the pace, rubbing furiously now. The hot water splashed on her shoulders and she steadied herself with her free hand on the wall by the faucet. Other nights came to mind, pounding Jen from behind with the strap on while her girlfriend screamed in delight. Or the girl she met in grad school who always squirted when Sarah fingered her. Or the one night stand she'd fucked against a wall in a club bathroom. Fuck. Sarah came with a quiet shake.\n\nFinishing her shower, she spent the evening watching TV and coaxing Jen away from work periodically for kisses, conversations, or snacks. Eventually she went to bed and Jen joined a while later. It was a typical night, peaceful, and Sarah was happy.\n\n_ _\n\nHer emails were way behind, but that's what happened when you spent the day treating one patient after another and only stopping to chart and eat a granola bar. But now with the last hour of her day free, Sarah sat down to read some of the emails and deal with paperwork she'd been putting off.\n\nAs she sat at her computer, a particular email caught her attention. It was from a grad school professor, one who had taken her under his wing when she'd expressed interest in being a sports team's physical therapist. It was the typical greeting. He asked for an update about her life and work in Houston, then it went on to detail a job opening. Apparently, he'd recommended her to an NFL team who was looking for a new head physical therapist as theirs was set to retire at the end of the season. This meant the New York Jets had an opening.\n\nSarah sucked in a breath. New York? Football? Was that something she wanted?\n\nHer mind raced to the possibilities, the closeness to Carly and David, the chance to lead a team, probably more money, and back in the same time zone as her parents. But...Jen. She had a booming practice here in Houston. Would she want to leave? Sarah shot an email back to the professor thanking him for the recommendation and promising to consider it if she got the call.\n\nAt home that night, she had to wait for Jen to finish up a conference call before she could bring it up.\n\n\"It's not an actual job offer, he's just letting me know he recommended me.\"\n\n\"But, you think they'll call you?\" Jen asked.\n\n\"It's possible. I don't really know how it works with inside connections.\"\n\n\"So...if they do call, you want to go?\"\n\nSarah paused, \"I- I guess I'd consider it, ya know? I like New York.\"\n\nJen nodded, \"Would you like working for the NFL? It's kind of a boys club, isn't it?\"\n\n\"Well, so is baseball,\" Sarah chuckled, \"And I'm doing okay here. Plus that's all changing. There's women who coach and referee now. But I'm not even really thinking about it yet. This is all speculation until I get an actual job offer. I just want to put it out there. Would you, would you ever consider New York?\"\n\nJen seemed surprised by this, \"You'd want me to come with you?\"\n\n\"Well, if, and remember it's a big if, I'd like to think you would. Yes.\"\n\n\"Sarah, I-\"\n\n\"Don't answer now, just like, keep it in your brain, okay? We don't even know if I'll get an offer. I probably won't.\"\n\nBut she did.\n\nSarah got the call two weeks later and was asked to fly in for an interview. She was able to time her interview with her visit to Carly and David. It was February, so a bit earlier than they planned, but still they made time for her. Jen couldn't go as her court schedule had been backed up since the new year and she still did not have a handle on it. She drove Sarah to the airport and kissed her for luck.\n\nThe interview went well. Sarah got to meet the physical therapy team and tour the incredible facilities. A few players wandered in and out and Sarah was impressed with the casual atmosphere of the place. She knew the Jets weren't particularly good right now, but that would have no bearing on treatment or her pay, so that wasn't a factor. Not for her at least.\n\nApparently, the Jets also thought the interview went well as she had a job offer in her inbox by the time she boarded the train to Boston. She loved riding the train and it meant she had more time to think than in a plane. The salary figure made her choke a bit, it was...excessive, but she knew it would be well earned with the hours a lead therapist worked.\n\nCarly picked her up from the station in a blue minivan with Finn strapped in behind them.\n\n\"It's freaking freezing here!\" Sarah called as she dove into the warm car. \"Why do you live here again?!\"\n\nCarly laughed, \"It's so pretty though! Look at that brown slush, and the potholes full of mud!\" They drove back to Carly and David's house with Finn making giggling noises behind them. Sarah talked about the interview, the offer, and her worries over a cross-country move. Carly listened and made faces at Finn in the mirrors.\n\nDavid joined them for dinner at home. \"What does Jen think about moving to New York?\" he asked.\n\n\"Well, she didn't really say. When I got the call for the interview she said she was happy for me and she had promised to just think about it when we first learned about the opportunity. But I haven't called her yet to tell her they made the offer. She's still in court until six o'clock her time.\" Sarah shrugged.\n\nFinn dumped a bowl of cheerios on the floor and looked to Sarah for approval, she laughed heartily and he seemed pleased.\n\nLater that evening after Carly and David got Finn down, the adults sat themselves on the couch with glasses of wine. Sarah had called Jen and she gave her honest congratulations with promises to talk later. Now, she was just enjoying her best friends' company and smiling that a move closer meant many more nights like this.\n\n\"So.\" Carly said the word with a weight behind it and David set down his glass, apparently aware of where this was going. \"New York, huh?\"\n\n\"Uh, yeah, Carly? That's what we've been talking about for weeks?\" Where was she going with this?\n\n\"Don't think I'm reading into this or anything. I mean, don't take this the wrong way, but- like okay, I don't want you to think that I don't believe in Jen or anything that-\"\n\n\"Carly.\" Sarah knew her friend well enough to know when she was stalling on a difficult topic.\n\n\"Yeah?\"\n\n\"Out with it.\"\n\n\"Right,\" she glanced at David for support, \"You coming to New York doesn't have anything to do with the fact that Roisin lives there, does it?\"\n\nSarah's mind blanked. Wherever she thought Carly was going, that was not it.\n\n\"Uh, what?\"\n\n\"You know, because Ro is performing in New York now. Do you think that had any bearing on your choice?\"\n\n\"I, uh, I didn't know she was in New York,\" Sarah whispered looking into her wine. David looked at her doubtfully. \"I didn't! I sort of hid everything from her social media years ago. I was a little obsessed there for a while, I didn't want to keep checking up on her and ruin whatever shot I had at another relationship.\"\n\nCarly snorted, \"I don't think what you did senior year could be classified as 'relationships' in any sense.\"\n\n\"Thanks, Carly,\" she responded sarcastically.\n\n\"You know what I mean. I just, I thought maybe you knew Ro was there, that's why you wanted to accept the job.\"\n\n\"There's no shame in that,\" David added, \"from what we hear from Tara, she's as bad a serial...dater, as you were after you called it quits.\"\n\n\"David!\" Carly gave him a 'we talked about this' look and he backed off.\n\n\"Ro and I were together for, what, a few months over seven years ago. I'm sure we're both different people now.\" Sarah swirled her wine, even to her own ears, her voice sounded a bit weak.\n\n_ _\n\nThe visit with Carly and David was pleasant. Finn was adorable and by the end of her stay, was attached to Sarah at the hip. Carly drove her to the airport and Jen was waiting to pick her up in Houston that afternoon. On the way home, they talked about Carly's family, the weather on the east coast, everything about her trip, but the purpose of it.\n\nAt home, they tumbled into the bedroom, clothes flying off in every direction. Sarah didn't even care that she was post-flight gross, she dove at Jen with renewed fervor. They spent hours, running through everything they loved to do together. Sarah licked her, sucked her, fingered her, and played with her soft breasts. Jen kissed Sarah, left hickies on her neck, and pulled her hair while Sarah was eating her out. They got out the strap on and Sarah pounded Jen into the mattress harder than she had in awhile. Jen moaned, screamed, bucked, and came over and over. Finally, with the strap hitting the right spot while Sarah drilled her girlfriend from behind, she came hard and collapsed.\n\nAfter a shower where they washed each other and just made out in the hot water, they curled up on their bed in each other's arms. The setting sun bathed their room in oranges and pinks and cast long shadows over their bed. Sarah brushed some hair out of Jen's eyes.\n\nJen was the first to break the silence, \"You're moving to New York.\"\n\nSarah nodded, \"And you're not.\"\n\nJen smiled sadly. She didn't have to answer. Sarah knew enough about her girlfriend to see the decision was made a while ago and she wasn't changing her mind. This had been a goodbye of sorts. Both women knew it.",
        "\"When do you have to be out there?\" Jen asked.\n\n\"In a month. They want me there at the beginning of April to have the program set up before training camps.\"\n\nJen nodded, \"I probably won't stay here. Can't really afford it without you and I've always wanted to be closer to downtown anyway.\"\n\n\"Plus you wouldn't have me to trim the hedges,\" Sarah smiled.\n\n\"I really hate those hedges.\"\n\nSarah chuckled, \"Me too.\n\n_ _\n\nExtricating their lives from each other was fairly easy once they started. Both women had seemed to know that this wasn't a forever relationship. Their schedules too different, their personalities too similar. They hadn't joined anything, in fact, the only thing they bought together was their bed. Which was going to stay in Houston with Jen. She had a new apartment by the first week of March and Sarah helped move the furniture.\n\nIn the second week of March, things got more complicated. The country began shutting down.\n\nAny flight Sarah tried to book for April flashed with cancellation warnings. Jen's hearings were all suspended and her meetings moved to virtual. Sarah's work with the Astros was all wrapped up and she'd said goodbye to all her coworkers through video chat, with promises to visit when things calmed down. They bought soap and masks and stocked up on groceries. Sarah had to stay at Jen's apartment for a week when her first flights were cancelled. It was a little strange, crashing on her own couch in a new apartment while her ex-girlfriend slept in the next room, but they made it work.\n\nAfter the initial confusion of closing then the reopening of their offices, Sarah heard from HR for the Jets and they worked out her salary and moving incentives. The team was still willing to pay their staff until a more certain call could be made about the fall season. So, with the new pay, Sarah opted to just buy out her lease on her Jeep and drive home until she was needed in New York. Jen kissed her goodbye and gave her a hollow promise to visit soon.\n\nSarah had everything she needed crammed into her Jeep or, like her bikes, strapped to the back. Not knowing what would be open throughout the country, she had a cooler of food and plenty of water. Luckily, most rest stops and truck stops were still functional.\n\nHer parents were thrilled to have her for a few weeks. Sarah thought they were going a little nuts to be so worried about her, but she supposed it was sweet. They spent nights playing board games and days clearing out the garage and Sarah's old room, and completely moving her mother's charity online to keep it going.\n\n\"But really, Sarah, are you okay? I know how much you liked Jen.\" Her mom's eyes searched her face.\n\n\"Yeah, mom. It sucked, still does, but we both knew that wasn't forever. We're too much alike.\"\n\n\"Yes, you're both workaholics. Are you sure you need to go to New York next week? Things are bad there.\"\n\n\"I know, Mom, but I'll be going straight to my apartment and only going into work which is cleaned better than probably every other part of the city. Plus, everything is closed now, so the spread will slow.\"\n\nThey weren't convinced, but her parents couldn't really say anything else. That night, Sarah climbed into her old bed and scrolled through her phone. She liked several cute Finn pictures and one of Tara and Kate wearing matching masks in the colors of the lesbian flag. Her heart picked up speed as she saw who else liked that photo. Ro. She didn't think, just clicked on her profile.\n\nInstantly, the profile picture filled her screen. It was Ro, but more beautiful than she'd known her. Somehow aging more than half a decade had made Ro look more confident, happier. In the picture her dark curls fell down around her shoulders and her face was split in a full laugh, all her teeth on display. Sarah's heart caught in her throat. She kept scrolling.\n\nThere were more pictures of Ro in different costumes, arms around various cast members. She had lots of photos on stage, taken by professionals. There were some older ones of her on the cruise ship, looking tan and tired. And there were videos. Sarah stopped on one of Ro in a plain gray dress, hair half up, standing alone in a pink spotlight. She hit play.\n\nAn acoustic version of the familiar song surprised Sarah. She'd heard it a hundred times on the radio, but this was calm, slower. Ro began to dance. It was a mix of ballet and modern. She was barefoot and the camera followed her through her movements around the stage rather than just a front view like an audience would see. It focused on an arm, a pointed foot, her neck, then zoomed out and caught a leap. The camera was all over her, intimately. Sarah's breathing stopped.\n\nOh, I'm good at keepin' my distance,\n\nI know that you're the feelin' I'm missing.\n\nYou know that I hate to admit it,\n\nBut everything means nothin' if I can't have you.\n\nThe lyrics pulled on her. She'd never really listened to them in their fast-paced pop song before, but here, with Ro moving through and to them, they had more meaning.\n\nI'm trying to move on\n\nForget you, but I hold on.\n\nEverything means nothing,\n\nEverything means nothing, babe.\n\nI'm trying to move on,\n\nForget you, but I hold on.\n\nEverything means nothing if I can't have you, no.\n\nThe pink spotlight faded to green as Ro's movements slowed and lengthened. She ended in a soft arabesque, her right hand extended directly toward the camera as the rest of her faded away into the green. The date on the video was from this year.\n\nSarah's heart started up again at double speed, maybe to make up for completely stopping during the video. Hungrily, she dove through the rest of Ro's pictures. Surprisingly, there were a few of them together, from ages ago, that she'd forgotten about. She stalked the people who most often came up in Ro's recent photos and looked for more of Ro on their pages.\n\nHer stalking earned her plenty of information. She learned Ro's current company in New York and that she lived in the city, most likely in Brooklyn. She saw a couple videos of Ro dancing at bigger Irish festivals. Each new video of Ro felt like a lightning bolt to Sarah's gut. There wasn't any relationship status listed, her hopeful heart kept whispering. And while there were occasional photos of Ro kissing someone's cheek or hugging a fellow costumed performer, she didn't see anything to tell her heart to shut up.\n\nShe watched the gray dress video again.\n\nThe little direct message button was right there. Fuck. Sarah dropped her phone on the bed and lept off it. She paced around her room, running her hands over the fuzz of her undercut. She thought she was over this, over her. Hadn't she proven that with the string of women she'd run through her bedroom over the past seven years? And what about Jen? She'd actually had a semi-successful relationship. The thing with Ro was in her past. Back with her long, blonde hair and her highlighter fashion sense.\n\nBut then, why did just her picture make Sarah feel like this?\n\nFuck it, she thought. I'm moving to New York, she's an old friend. It wouldn't be weird to message and ask to catch up. She grabbed her phone and hit the message button, she typed out a simple hello with an explanation that she'd accepted a job in NYC and heard Ro was there and would she like to catch up sometime? The logical part of Sarah's brain reminded her that most restaurants were closed and people weren't supposed to be gathering, but her pounding heart told her brain to shut the hell up.\n\nShe hit send. And waited.\n\nChapter 26: Another Date\n\nRoisin paused outside the restaurant to check her hair in the reflection of the windows. The notices posted on the inside of the glass made it hard to see her head. Big signs with pictures of masks and seating capacity limits. She tucked one unruly curl back into the knot at the base of her head and took a deep breath. The breeze tousled her a bit, but she managed not to slip off her heels as she tipped into the fenced area outside the restaurant. It was late June, but it felt like a storm was brewing tonight. She was grateful for the walled patio area that provided a buffer to the wind. The hostess booth stood just outside the gate and a chipper, young woman greeted her.\n\n\"Welcome to La Salle's! Walk-in or reservation?\"\n\n\"I'm actually meeting someone, I think it's under Golding?\" Roisin unwound her decorative scarf and opened her jacket. The hostess looked down at the tablet in front of her. She had to adjust her mask to see over it as she tilted her head.\n\n\"Yup, looks like they are here already. Right this way!\" The woman turned and led Roisin to the far side of the patio, past a few spaced out tables, to where a handsome blonde sat.\n\nIf Roisin didn't know who she was meeting, she might not have recognized her. She was the same height, obviously, but the build and clothing was more masculine. She wore a white button down shirt with navy slacks and jacket. It was cut for a woman, but this woman's muscles pulled at the fabric of the shoulders especially, giving a more androgynous look to the suit. A brown belt and shoes completed the well-dressed look.\n\n\"You cut your hair.\" Seriously, Roisin? That's what you lead with after seven years??\n\nSarah ran her hand through the shorn sides of her undercut, the longer parts on top falling to the side as she tilted her head, \"Yeah, yeah I did.\"\n\n\"It looks nice,\" Roisin smiled, then remembered Sarah couldn't really see her mouth in the green mask she was wearing.\n\n\"Thanks, you look great. I'd give you a hug, but, uh-\"\n\n\"I'll still hug you, Sarah. Besides, you guys are getting tested, what, every day now?\"\n\nSarah chuckled, \"Yeah, just about.\"\n\n\"Oh, unless, you're worried about me hugging you?\" Roisin realized while she could be reasonably sure Sarah was not infected, Sarah had no assurances Roisin would be.\n\n\"Not worried, come here,\" Sarah leaned forward and pulled Roisin into a tight hug. \"It's good to see you, Ro.\"\n\n\"You too, Sar.\"\n\nOnce they were seated, the waiter came and told them they could remove their masks. He took their drink order and sped away through the nearly empty patio.\n\n\"So,\" Ro sighed as she finally had a glass of wine in hand, \"How are you doing with, uh- well all of this?\" She gestured vaguely around the outdoor dining area.\n\n\"I'm fine. It's good to be having a season, even if it's a short one. I'm lucky to be with a team that paid our salaries while we were in lockdown. Carly and David had a hard time when both of their schools closed and their jobs weren't guaranteed. How have you been?\"\n\nRo thought about her own financial situation, \"I'm doing alright. A major donor for the company set up a fund to cover our rent and utilities. Me and my three roommates have picked up odd jobs and some online work to make up the rest.\"\n\n\"You live with three roommates?\" Sarah laughed, \"In a New York apartment?!\"\n\n\"That's the only way we can afford the New York apartment, Sarah.\" Ro rolled her eyes. \"Where do you live, Miss NFL hot shot?\"\n\n\"I think the title you're looking for is torture specalist. I've heard it enough times.\"\n\n\"Do they really call you that?\" Ro was laughing.\n\n\"Some of them. Ah, but most pro athletes take recovery very seriously. They know it's going to hurt and keep at it.\" Sarah had a gleam in her eye talking about her clients. Ro could see she was really loving the work.\n\n\"Any of them hit on you?\"\n\nSarah laughed, a deep chesty sound that did things to Ro. She missed that laugh more than she'd realized. \"Not since I got this haircut!\"\n\nThe meal came and went and still the two women talked on about their current lives. Sarah mentioned her parents were retiring soon and Ro gushed about Shay and Becky's twin boys who were in the threenager stage. As they worked their way through the rest of a bottle of wine, Ro found herself casually asking the question she was most curious about.\n\n\"So, where's Jen tonight?\" She knew enough about Sarah's life from Tara and Kate and the little social media snooping to have heard of Jen.\n\nSarah paused with her wine glass partway to her mouth. She lowered it and gave Ro a funny look. \"Jen's still in Houston.\"\n\n\"Oh, is she coming up later?\"\n\nSarah looked nervously around the half empty patio, running her hand around the back of her neck, fidgeting. \"Um, uh, Ro...\"\n\n\"What?\" Ro's eyes locked on Sarah's as she let her hand drop to the table.\n\n\"Jen and I broke up.\"\n\n\"Oh.\"\n\n\"It was a while ago. I, uh- I thought you knew that.\"\n\nRo's heart was leaping out of her chest. She was sure its beating could be seen through her dress. \"No, I hadn't heard that...\" What did this mean then? She thought this was two friends catching up, but Sarah was single. Did she think this was a date? Did Ro want this to be a date? That one was easy, of course she did. Ro wanted Sarah. Since the moment she'd said she was coming to New York, all Ro could think about was having Sarah back.\n\nThat first message she got announcing her ex girlfriend's transfer to the big city had made Ro's heart do backflips. She spent a full hour crafting her response, with the help of a few highly amused roommates. Then she'd stalked what few photos of Sarah there were online. Mostly from David and Carly's wedding, a few of her with her cousins, and some by the \"Jen\" that Sarah was tagged in. Unfortunately, with the way things happened with quarantine, they couldn't get together right away. Ro was ecstatic when restaurants could have outdoor seating open just so she could have a chance to meet up with Sarah.\n\nThe awkward silence that fell over their table was punctuated by a loud laugh from the other corner of the patio. It seemed to jog Sarah into explaining her suddenly revealed single status. \"Yeah, Jen wasn't ready for a cross-country move. I knew I wanted to be back on the east coast eventually, it just happened sooner than we were thinking.\" Sarah shrugged.\n\nRo couldn't manage a response. Sarah was single and living in New York. Don't read too much into it, Roisin, she thought. But trying to warn her heart to tread lightly was difficult. Especially when Sarah ran her hand through her hair and smiled at her over the table like that.\n\n\"So, besides everything being closed, wearing a mask all day, and not being able to visit anyone, how are you liking NYC?\" she recovered.\n\nSarah laughed again and Ro smiled at the sound.\n\n\"It's great. The city that never sleeps is currently staying home and watching Netflix. I enjoy it. The parks are pretty great, I love my apartment. No hedges in sight.\"\n\n\"Hedges?\" Ro asked, sipping her wine.\n\n\"Oh, the house we lived at in Houston had a yard and it was all cute, but it had this row of hedges out front that needed trimming every damn week. I hated it,\" Sarah looked sheepishly at her.\n\nRo giggled, \"Okay, no hedges is a good thing, got it.\"\n\nTheir conversation went on until the bottle of wine was gone and the bill had come and been paid by Sarah. Both women fiddled with their masks and jackets, knowing it was time to leave. They stepped out onto the sidewalk together. The wind blew up around them, pushing Ro's skirt around as it danced away. A few more curls escaped and fell into her eyes as they heard a distant roll of thunder.\n\n\"Well, it's been great catching up,\" Ro began. She watched what she could see of Sarah's face fall a bit.\n\n\"Yeah,\" Sarah said, \"I, uh, liked your cruise stories. Sounds like that was a wild time.\"\n\n\"It was! I've got a few more if you want to walk a bit?\" Ro was grasping at straws, but she took a little encouragement from a look from Sarah.\n\n\"Sure, I actually live a few blocks away, if, uh, if you want to just come over for a bit?\" Sarah looked nervous, \"It looks like we're going to get rained on soon and I have wine and cookies,\" she added hastily.\n\nRo laughed, \"I definitely need a cookie.\" She hooked her arm in Sarah's and felt her heart do a summersault. \"Lead the way, Sar.\"\n\n_ _\n\nSarah's apartment was a modest studio with high ceilings and modern style on the top floor of a three story building poised over a strip of shops. They stepped into the small lobby just as another clap of thunder shook the neighborhood. Sounds of rain crescendoed as they climbed the stairs to Sarah's floor and the patter of rain beat sharply above them as she unlocked her door.\n\n\"Home sweet home!\" She let Ro enter first and took a second to calm her pounding heart that had been trying to leap through her ribcage since Ro held her arm in the street.\n\n\"Wow, it's really nice, Sarah!\" Ro stepped out of her heels and wandered past the dining room/office on the left over to the big window at the back of the living room area. The window looked over the street below and gave a hazy view of the dark clouds rolling in the sky. Sarah set her keys on the counter in her little kitchen that occupied one quarter of the apartment. She'd set up two partitions, one across from the living room and the other butting up to the kitchen, to separate the corner where her bed sat. Off of the makeshift bedroom was a door to the closet and bathroom. The place was a bit sparse, but the exposed ductwork in the ceiling added a bit of visual interest.\n\n\"Thank you, it's not much, but I like it. You can take your mask off if you want.\" Sarah removed hers along with her shoes and padded into the kitchen. She grabbed two stemless wine glasses, the bottle of chardonnay, and a packet of Oreos she'd been hiding from herself. Ro was still looking out the window with her back to Sarah, watching the rain. Sarah had to take a deep breath and swallow as lightning lit up the glass behind Ro, highlighting her form and her wild curls escaping the knot.\n\n\"Oreos! I can't remember the last time I had one,\" Ro laughed as Sarah set up the snack on the coffee table.\n\n\"I know, I can't buy this stuff, but well, with nothing to do except work and sit at home, I needed a little cookie therapy.\" Sarah opened the wine and poured while Ro took a cookie out of the package and settled onto the opposite side of the couch.\n\nRo took a bite and sighed, \"Mmm, that's some good therapy.\"\n\n\"So tell me about your roommates. Are they all in the same company as you?\" Sarah hoped she sounded casual as she bit into a cookie too.\n\n\"Yep, all dancers. Kira and Anna are from California and Todd is from Maine. We're all trained in ballet, but have our own strengths. Anna actually did the cruise ship thing for a while too. Right now, Todd is teaching online dance classes, Kira is doing yoga in the park almost every morning, Anna got a job as a barista, and I'm a nanny. All doing what we can to make ends meet.\" She took another bite of cookie and picked up her wine.\n\n\"You're a nanny? How's that? I didn't know you liked kids.\"\n\n\"Oh, yeah. I prefer, like, elementary aged kids. I nanny for a six and eight year old. They are the coolest kids and so smart. Their mom is a dynamite attorney for the state, so she works late and travels around a lot. Even with the shut down and mostly working at home, she does crazy hours. I try to take the kids outside as much as I can to give her some quiet in the house.\"\n\n\"Do you know when you'll get back to dancing?\"\n\nRo shrugged, \"Who knows right now. Theaters aren't going to open for a while and we can only perform online so much. That doesn't net a lot of pay, but I've recorded a few videos this year that the company has posted.\"\n\n\"Yeah, uh, I saw the one of you dancing in the gray dress.\" Sarah blushed a little as she admitted to watching the video.\n\n\"Oh! What did you think? I thought they should have had the camera back up further, it was too close in some cuts.\"\n\n\"No, I liked that, it made it feel...like the camera was dancing with you.\" Her ears felt hot. She took a sip of wine to have something to do with her hands and keep her eyes off Ro's reaction.",
        "\"Thank you,\" Ro whispered. They sat in silence for a moment with the sound of the rain and the thunder echoing outside.\n\n\"Ro,\" maybe it was the wine they'd had at dinner, or the fact that Ro looked even better in person than in that video, or Sarah was just lonely after months in a new city, but suddenly, she felt bold. \"Ro,\" she repeated, \"Did, uh, your parents ever come around to, you know...?\" She chickened out. What Sarah really wanted to know was if Ro was single. If she'd be interested in Sarah now. If they could, well, not pick up where they left off, but try again.\n\n\"Oh!\" Ro was clearly surprised, \"Um, no actually,\" she chuckled without humor, \"The last time I spoke to them was when Becky had the boys. She and Shay had a scheduled c-section so they called a few weeks before and asked if I wanted to come meet them in the hospital. Mom and Dad were there, it was the first time I'd seen them in two years and, uh, they were not pleased I'd come.\"\n\n\"What happened?\"\n\n\"The next day before I flew back to New York, they pulled me aside in the hospital lobby and told me they were writing me out of their will. They were splitting my inheritance between their new grandsons.\" Ro looked down at the wine glass in her hand. \"They said they forgave me for the way I acted, but that they couldn't support me if I continued to live my life in sin. I didn't answer, I just left. I haven't heard from them in three years.\" Sarah threw caution to the wind and slid across the couch to put a hand on Ro's arm.\n\n\"I'm sorry, Ro. I didn't mean to bring up a bad memory for you.\"\n\n\"No, no it's okay. I just haven't talked about it much. But, you were there for me the first time. I'll never forget that, Sar.\"\n\n\"Not as much as I should have been,\" Sarah mumbled.\n\nRo caught her eye, \"Did you ever, I mean, do your parents...?\"\n\nSarah chuckled, \"Yeah, I'm out. I actually came out to them that summer after you left.\" She paused as the painful memory flashed across both women's faces. \"You know what my dad said after I told them?\"\n\nRo looked expectantly.\n\n\"He said, 'Hm, guess we gave you the wrong sex talk, then.' That's it!\" Sarah laughed and Ro smiled.\n\n\"That's such a dad thing to say. They really were totally cool about it?\"\n\n\"Yeah,\" Sarah realized she'd been rubbing Ro's arm where she'd reached out to her. She yanked her hand back. \"Uh, yup. Not as cool with the move out here though. They really tried to get me to stay with them until this is all over.\"\n\n\"Well, I'm glad you made the move,\" Ro said shyly.\n\n\"Me too.\"\n\nThey munched a few more cookies and poured another glass. The storm outside was rolling away, but it left a black night behind it as the sun had already set. Ro pulled her legs up under her on the couch and Sarah had thrown off her suit jacket. There was no shortage of stories to share from the years they'd been apart. Both had plenty of life experiences to detail and as the wine loosened their lips, they found themselves exploring more intimate topics.\n\n\"You did not!\"\n\nSarah grinned wolfishly, \"Yeah I did!\"\n\n\"Twins?! Ew, just, ah! That's so weird!\"\n\nSarah shrugged, \"They didn't care, so why should I? They both left satisfied in the morning.\"\n\n\"How did you even, like what did you even say to them?\"\n\n\"Hey, they approached me! It was at a party in grad school. We were playing beer pong, just letting off steam at this crazy frat house off campus and, I don't know, they started flirting. I helped one do a keg stand, something I hadn't done in years, but after that, they just...came home with me.\" Sarah flushed a little, but not from embarrassment.\n\n\"Ugh, Sar. Okay, no more stories. I've hit my limit!\" Ro snorted a laugh into her wine.\n\n\"Hey, I guess we've both hit our limits. The wine's gone!\" Sarah laughed as she held up the empty bottle. Ro leaned back into the couch, bumping Sarah's shoulder and wiping a tear from laughing so hard.\n\n\"Gosh, I haven't had sex in...wait, I don't remember the last time! December?\"\n\nSarah chuckled, \"I know, social distancing is killing me.\"\n\nRo's eyes caught Sarah's as she leaned back on the couch. She was looking up through thick lashes and Sarah realized she was leaning in a bit. They both froze, staring at each other. Suddenly, Sarah was back in her dorm room that first night Ro came over to watch a movie. It would be nothing to just lean in...\n\nRo got there first.\n\nTheir lips crashed into each other, hands hungrily grasping to pull them closer, as their mouths opened. Sarah's tongue was in the dancer's mouth first, forcefully, needy. Ro moaned at the contact. Her hands wound behind Sarah's head and grabbed for hair that was shorn too short. Sarah lurched herself up to fully invade Ro's mouth and she felt arms wrap firmly around her neck.\n\nSarah tucked Ro into a hug and flipped her onto her back on the couch. Ro squealed into Sarah's mouth but didn't break the kiss as she fell. She slotted a thigh between Ro's legs and felt the same between hers. Adding pressure to her leg, Sarah's hands sought out Ro's breasts over her dress. She groped her and pulled their mouths apart with a wet smack. Ro started to protest but Sarah immediately dove for her neck, applying kisses and nips to the soft flesh.\n\n\"I take it you still like hickies?\" Ro gasped as Sarah's mouth brushed around her throat. Sarah growled in response. \"Do it, mark me, Sarah.\" The sound that escaped Sarah was pure animal desire as she attacked Ro's neck. She sucked and bit the smooth muscle as Ro groaned with pleasure. The dress Ro had on was now hiked up around her hips, revealing lacy black underwear, soaked at the crotch.\n\nAfter leaving what would probably be half a dozen small hickies on Ro's neck and collarbone, Sarah moved her body down, pausing to lick the tops of Ro's breasts peeking out over her dress. Her hands moved up under it, gliding over smooth abs and seeking the soft tits that were rising and falling with Ro's fast breathing. They continued to grind together. Ro's hands moved from Sarah's neck to her ass, barely trailing over her back. With firm hands on her ass, Sarah dipped back up and pressed her forehead to Ro's.\n\n\"Ro,\" she breathed, voice hoarse and full of need.\n\n\"Take me to bed, Sarah. Please,\" Ro whimpered. That was all Sarah needed. She yanked Ro up with her and wrapped both of Ro's legs around her hips, then she carried her to the bed in the corner, hitting the lightswitch off on the wall by the bathroom door, before dropping Ro onto her bed. Immediately, Ro propped up on her elbows to watch Sarah and slowly let her legs fall open, giving Sarah a glimpse of wet flesh around the black lace between her legs. The light from the kitchen glowed through the partition, bathing the bedroom in a seductive rosy color.\n\nSarah slid her hands up the outside of Ro's thighs, gathering fistfuls of fabric and shoving it up and off Ro's body. Ro didn't have a bra on, just those lacy black panties visibly soaked at the center. Her nipples were hard and pink, just as delicious as Sarah remembered.\n\n\"You're gorgeous,\" Sarah moaned at the mostly naked woman on her bed.\n\n\"Thank you. Now please, take me, Sarah.\" That was all she needed to hear. Sarah's hands dove between those long, pale legs that had entranced her more than seven years ago. Her fingers found wet lace and yanked it down, off and away from Ro's center. The light musky smell made Sarah's mouth water as Ro was fully exposed to her. She slipped in one finger, then another. Ro thrust her hips down onto Sarah's hand and groaned in pleasure.\n\nPicking up the thrusting, Sarah let her other hand massage the nipples in front of her. She buried her face between those breasts and breathed in Ro's scent, feeling soft flesh press to both of her cheeks. Ro was a moaning mess as Sarah's fingers plunged in and out. She was soaking wet and the sound of Sarah fucking her filled the bedroom with a hot, wet rhythm.\n\n\"Fuck, I'm gonna, I can't- Sarah!\" Ro thrashed under her as Sarah flexed her fingers deep inside and pressed her body onto the orgasming woman.\n\n\"Yes, come for me, Ro!\" Sarah growled.\n\nEvery muscle in Ro's body clenched and her back arched off the bed. She moaned and gripped the wrist of the hand Sarah was thrusting into her. It was Sarah's favorite sight, her own arousal was making itself known as she watched. After Ro's breathing began to settle, Sarah removed her fingers and rolled off her.\n\n\"Wow, I forgot how good that was,\" Ro grinned over at Sarah. Her hair was a mess, completely out of its bun and she had hickies on her neck and breasts. Sarah was wiping her hand on the sheet next to them as Ro narrowed her gaze at her mostly clothed form, \"Your turn!\"\n\n\"Uh,\" Sarah hesitated and caught Ro's hand before she could get it under Sarah's belt. \"I don't think I'm done with you yet, actually.\" She pinned Ro's right hand up over her head and grabbed her left to throw it out wide on the bed. She started kissing up her collarbone and over the outstretched arm. Ro moaned as Sarah nibbled her sensitive shoulder and up over to her bicep.\n\n\"Wow, you really know how to use your mouth,\" Ro began as Sarah nipped and kissed the soft skin of her wrists.\n\n\"Oh, I really do.\" Sarah grinned wickedly as she snapped Ro's arms down to her sides. She lowered her head down Ro's body and kissed a nipple, her belly button, just above her hip bone, the inside of her groin, teasing closer to the wet lips that glistened just below a perfect landing strip.\n\nRo sucked in air as Sarah sucked on her clit. She gasped and threw her hips up to meet Sarah's mouth. Sarah smiled around the nub clasped gently in her teeth as the beautiful woman began to fall apart again. But Sarah wasn't looking for a quick response this time, she wanted to drag it out.\n\nShe pulled off of Ro's clit and dipped her tongue into the moist slit below. She tasted so good. Not exactly how Sarah remembered, if she could remember. But feminine and salt mixed together. She wound her tongue in to hit every inch of her entrance and enjoy the wetness soaking out of Ro's pussy.\n\n\"Fuuuuck, yeah, keep doing that.\"\n\nSarah's motion was inhibited for a moment by her smirk, then she dove back in, licking Ro's slit. Holding her arms to her sides meant Ro couldn't move to grab her head either to pull her closer or push her away. Sarah took full advantage of the control. She teased Ro by attacking her lips, then pushing up over her clit with a strong flick, then back down to repeat it all. Ro was squirming and color flushed her chest. Those delicious pink nipples stuck out pointed straight up to the ceiling.\n\nThe building orgasm inside Ro was evident in her tensing muscles and heaving chest. Sarah used the whole width of her tongue to lap into Ro and press just inside her walls. This caused a groan to reverberate in the body underneath her. Ro was bucking into Sarah's mouth and begging for more of her inside. She still hadn't let go of Ro's wrists, but now, with her begging, Sarah took her right hand and slipped two fingers easily into the wet cunt in front of her. She moved her tongue up to Ro's clit again and applied a frenzied lick.\n\n\"Shit! Yes, yeeeesss! Fuck me, Sarah!\"\n\nRo came around Sarah's fingers again as her tongue dug into her clit. Sarah flicked her eyes up to watch Ro arch off the bed and smiled as she licked the woman down from her orgasm. The thighs clamped on either side of Sarah's head shook as Ro relaxed.\n\n\"You're so hot, Ro,\" Sarah groaned as she kissed the insides of Ro's thighs.\n\nRo heaved a breathy laugh, \"Come up here.\"\n\nSarah slowly slinked up Ro's body, pausing to lick each nipple lovingly, then descending on Ro's mouth with a passionate kiss. Ro ran her hands through Sarah's hair as she pulled their mouths closer and deepened the kiss. Several minutes into their makeout, Sarah felt Ro's hand wander back down to her belt and tug at the leather on her waist. She caught her hand again.\n\nRo pulled back with a concerned look on her face, \"Sarah, I want to-\"\n\n\"I'm good,\" Sarah cut her off.\n\n\"Oh, are you on your period?\"\n\n\"Yeah, yup, so I think we should, uh, call it there.\" Sarah hoped her lie was smooth enough.\n\n\"Okay, if you're sure.\"\n\nSarah leaned in to give Ro another fiery kiss, \"Yes, that was...just, fucking hot.\" She rolled off Ro and pulled her into a cuddle with arms draped over each other and legs intertwined. \"Are you going to stay?\" she whispered.\n\nRo angled her head up to look into Sarah's eyes, \"Do you want me to?\"\n\nSarah's answer caught in her throat as Ro's curls fell adorably over her eyes so she nodded instead.\n\n\"Then I'll stay,\" Ro responded as she snuggled back down into Sarah's arms.\n\nChapter 27: Begin Again\n\nSarah and Ro found that while picking up where they left off was not really possible, they were different people from those college girls, they still had a lot of chemistry. They also had a lot of time for each other those first two weeks as their jobs both finished up about six every night and didn't start until around nine in the morning. Not that they spent every night together, but a few during the week.\n\nSo far, Sarah had made Ro come on every surface of her apartment. The kitchen counter had been a fun one that began with making pancakes and ended with Ro's bare ass on the counter and her flour-covered hand wound into Sarah's hair. For the first week, Sarah had her excuse for keeping Ro out of her pants, but by week two, she was realizing it was time for the talk.\n\nThis particular talk had been one Sarah had with a few women and one or two girlfriends since her junior year of college. Sometimes it went well, sometimes it ended everything. Sarah didn't hold it against the ones who chose to end it, after all, her favorite thing about sex was eating a woman out, she couldn't blame a girl for leaving when she realized she wasn't going to be able to return the favor for Sarah. With her and Ro planning to spend more of the weekend together, she knew it was time.\n\nSarah sighed, \"All right, six more, then I'll let you go. Come on, in grad school I had a thirteen year old kid who could do these faster than you.\" The player on the exercise ball in front of her laughed, but squared his hips and finished the exercises. She helped him up, then sanitized her hands on the way out of the training room. Back outside her office, she took off her surgical mask and scrubs jacket and deposited them in a bin. Then she sanitized her hands again and donned a fresh mask before sitting down to chart.\n\nHer phone buzzed on her hip.\n\nR: Excited for tonight! I'll see you in a couple hours. I have to run an errand on the way over.\n\nS: Sounds good. I'm picking up the food at 7pm. Don't be too late or I'll eat yours too!\n\nRo sent an angry emoji and a crocodile. Sarah laughed.\n\nAt quarter after seven that night, Sarah's door burst open.\n\n\"I'm here, you better not have eaten my food!\" Ro tumbled into Sarah's apartment with a backpack and several shopping bags dangling off her arm as the sky darkened outside.\n\n\"And you're, what, moving in?\" Sarah chuckled at the amount of stuff Ro dumped on her floor.\n\n\"Haha, you'd never convince me to leave my amazing roommates and our tiny apartment where there's no privacy and one bathroom for four people. I just couldn't do it.\" She sighed dramatically and threw up her hands. \"But seriously, I'm starving, where's my food, Golding?\"\n\nSarah pulled Ro's stuff out of the microwave and they sat at the little two person table in the dining area of her apartment. \"Really,\" she looked at Ro, \"what's in the bags?\"\n\n\"That's for me to know and you to find out,\" Ro said cryptically through a mouthful of food.\n\nAn hour later, Ro was spread eagle on the bed with Sarah lapping up what was left of her delicious orgasm. Her white sports bra and blue boxer briefs were still on, but Ro was naked. She'd always been thicker in college, a little baby fat still over her muscles, but not now. Sarah finally melted the rest of it away and was a hard, muscled form, pinning Ro's legs to the bed.\n\n\"Okay, okay, truce!\" Ro giggled, \"I want to show you what I got so we can get it ready for later.\" Ro slipped off the bed, trailing fingers away down Sarah's spine. Sarah shivered and flipped over on the bed to watch Ro. Her naked body re-emerged from the other side of the partition a moment later with one of the shopping bags.\n\n\"What did you get?\"\n\n\"This!\" Ro triumphantly pulled a box from the shopping bag and held it up for Sarah to see. The picture on the box was of an emerald green strap on with vibrating ends. Ro's wicked grin turned into a laugh at the look of surprise on Sarah's face.\n\n\"Well, I mean, if you wanted me to fuck you with a dick, I could have done that. I've got toys.\"\n\n\"No, Sar, this one's for me to use on you!\"\n\nThat record scratch in Sarah's head made her freeze. \"Um, what?\"\n\nRo smiled, \"Well, you used to like our little purple friend so much, I thought it would be fun to try again. I always loved having you on your hands and knees.\" Ro climbed onto the bed and ran her hand up the inside of Sarah's thigh. Sarah's hand stopped her before she got to her destination.\n\n\"Ro,\" Sarah closed her eyes and leaned back, \"We need to talk.\"\n\n\"Uh oh.\"\n\n\"It's not 'uh oh', well, maybe it is. Look, I-\"\n\n\"Hold on, I don't want to hear this naked.\" Ro jumped up and grabbed her shirt and underwear off the floor from where Sarah had flung them. She pulled them on, then climbed up onto the bed with Sarah and sat up straight crossing her legs. \"Okay, go.\"\n\nSarah shook her head at the cute way Ro sat at attention. \"Alright, this is not a fun conversation, but I've had it enough times, you'd think it'd be easier by now.\"\n\n\"Sarah, just tell me!\"\n\n\"Fine. I don't like to be, um, touched. Sexually, I mean. I like to give it to my partner, but I can't- I don't come from that.\"\n\n\"But...we used to?\"\n\nSarah sighed, \"That was a long time ago, Ro.\"\n\n\"Right, sorry.\" Ro seemed to debate before continuing, \"Can I ask, when did that change?\"\n\nSarah looked away, she didn't want to admit that it was after Ro left. That since Ro, no other girl had been able to get her off. That except from the friction from wearing a strap on, she hadn't come with another woman, ever. Ro must have understood because Sarah heard her suck in a breath.\n\n\"Oh.\"\n\n\"Yeah.\"\n\n\"Wow, so uh, do you- you haven't tried it since then?\"\n\n\"It's not that I haven't tried,\" Sarah sighed and ran her hand over her undercut. \"It's that it doesn't work. Jen and I tried it...a lot. But I couldn't get there and it was embarrassing. We did, uh, realize that if I used the strap on her, I could come from that.\"\n\nRo looked a little sad, \"Do you masturbate?\"\n\n\"Yes,\" Sarah laughed, \"often.\"\n\n\"Could you do that with me? Like, get yourself off while I just help however I can?\"\n\n\"Uh,\" Sarah thought about it. She thought about that first time when Ro asked her to show her what she liked before she dove in and took over Sarah's pleasure. \"Maybe? I've never tried that.\"\n\n\"No pressure, Sar. I like being with you. However we can make that happen, that's what I'm here for.\"\n\n\"Thanks.\"\n\nRo grimaced at the box still lying on the bed, \"We'll um, put this away for now.\" She slid the box under Sarah's bed, out of sight. \"Can I kiss you some more?\"\n\n\"Of course!\" Sarah pulled Ro up onto her and wrapped her arms around the dancer's body. Their lips met again and it was warm and heavenly. The relief Sarah felt that Ro was still there, still wanting her, tugged something deep in her heart. Ro didn't hesitate to tease Sarah's lips with her tongue. She straddled Sarah's right thigh and pushed down seeking friction while they kissed deeply. After Ro came again all over Sarah's thigh, they held each other close and drifted off.\n\n_ _\n\nRo was true to her word and didn't push Sarah in the bedroom. They spent every weekend together, enjoying the time before Sarah would have to start traveling with the team. Each time, Sarah would have Ro in every delicious position she could bend the dancer. They also did things outside of the bedroom.",
        "Sarah met Ro's roommates when she came over for dinner one evening. They were a loud, messy, gorgeous group and Sarah could see why Ro preferred the tranquility of Sarah's apartment for their weekends. Going for walks or streaming movies were about the only other activities open. Strolling through a park together quickly became one of their favorite things since they had so many options in both of their neighborhoods.\n\nThe turmoil in the city was calming down, but with Sarah's season ramping up, she was traveling more. Which meant more testing. Every time Sarah got a new contact tracing call, she'd text Ro and they'd have to cancel whatever plans they'd had to hang out until her test results came back. It was incredibly lonely. But, David had worked out how to do some virtual game nights and she enjoyed their chats.\n\n\"So how's it going with Roisin?\" was Carly's greeting one evening, accompanied with eyebrow wiggles.\n\nDavid sighed, \"Hi Sarah, how are you? See, babe, that's how normal people start conversations.\"\n\nCarly rolled her eyes and leaned closer to the camera, \"Is the sex still amazing?\"\n\nShaking her head and laughing, Sarah leaned in too, \"None of your business you nosy brat!\" She heard Carly's indignant grunts as David adjusted the computer screen again.\n\n\"But really, are you guys dating now? Just friends with benefits? What?!\"\n\nSarah smiled, \"I don't know. This isn't as easy as 'will you be my girlfriend?' like when we were younger. We're both adults, seeing each other exclusively, not that there's much choice in that with the pandemic...\"\n\nCarly started to open her mouth in outrage. She was always a bit vocal about Sarah's player habits.\n\n\"Kidding!\" Sarah cut her off, \"I'm kidding, Carly. We're doing great. Just, we haven't labeled it. Plus with me getting close contact calls every five days, our time together is limited. I can't hang out with her while I'm waiting for tests, can't risk exposing her roommates.\"\n\nCarly gave her a significant look through the camera, \"You know, you wouldn't have a problem if you just asked her to move in already.\"\n\nSarah stared down at her keyboard. It's not like she hadn't thought about it, it just presented a lot of new puzzles. Ro's job as a nanny, for example, would her boss really appreciate if her nanny had to quarantine because of an exposure to her girlfriend? Also, would Ro leaving mean her roommates couldn't afford their place? Not to mention that Sarah's apartment was tiny. She and Ro would be right on top of each other all the time in the studio layout. Not that having Ro around all the time was a bad idea. Actually, it tugged on her heart again to think of it.\n\nDavid's voice brought her back to their chat, \"Hey, no pressure, Sarah. We just want you to be happy. Right, babe?\" Carly smiled and nodded. \"Right, enough of the mushy stuff, you bitches are going down tonight!\" He pulled up the game board so Sarah could see it on their coffee table. She laughed and jumped into competitive mode.\n\nHer talk with Carly and David got Sarah thinking. She wanted to be happy too and she was, mostly. But the lonely days in her tiny apartment, video chatting with her parents, taking walks with her mask on, were all getting to her. Having someone there, no, having Ro there when she got home would be a welcome change.\n\nShe let the idea stew a bit as she continued to see Ro and work picked up.\n\n\"Sar, do you think this tomato is still good?\" Roisin was in Sarah's kitchen cutting up ingredients for a salad after their latest night together.\n\n\"I don't, ugh, know. Is it squishy?\" The pushups Sarah was doing made it hard to respond. Her gym was still closed and she was trying to keep up her workouts at home. Sweat poured down her face as she finished another set.\n\n\"It's not that squishy, I can't tell.\" Ro was shifting her weight, tomato in one hand, knife in the other. Sarah got up and stretched.\n\n\"Here, let me see it,\" she chuckled. She reached her hand out.\n\n\"Ugh! You stink!\" Ro recoiled, pulling the tomato with her and laughing. \"Go shower, stinky girl. No food for you!\"\n\nSarah rolled her eyes and smiled, \"Fine, but I expect an expertly crafted meal when I'm done.\"\n\n\"You'll take what I make and like it!\" Ro called as she plunged the knife into the slightly mushy tomato.\n\nThe water cooled her off when she first stepped in the shower, then as she gradually upped the heat, it relaxed Sarah's muscles. After washing, she hung her head in the shower, just letting it drench her shoulders. Her hand found its way between her legs and her fingers parted her folds. She and Ro had gone at it most of the night with Ro taking Sarah's strap like a champ, something they hadn't done together before. But the angle and timing meant Sarah hadn't come yet and she realized how much her body was aching for release.\n\nShe started to thrust in and out, adding a little pressure to her clit with the palm of her hand. Approaching her orgasm faster than planned, she braced herself against the wall with her back to the cool tile. Sarah felt the familiar build up just before her release and grunted as she fucked herself harder. Just as she was about to come, the shower curtain flew open and a completely naked Ro bounded into the tiny space.\n\n\"Oh, fuck! Wait-!\" Sarah jerked her fingers out of herself, slipped, hit her head on the tile, and fell under Ro's wet legs.\n\n\"Sarah! Oh jeez, I'm sorry!\" She bent to help the blonde up off the floor. \"I'm so sorry, I just wanted to surprise you. I'm an idiot.\"\n\nThey got the water off and Sarah stood, wrapping a towel around her body. \"No, it's fine. I was just, well, I'm sorry. I could have asked you to join.\"\n\nRo got a towel too and they made their way to the bedroom. Sarah's head felt a little sore, but she was fine. Which she constantly assured Ro of.\n\n\"I'm so sorry, Sar. Are you sure you don't need ice or anything?\" The look on her face was pitiful as she blushed with embarrassment.\n\n\"Ro, I'm fine, really. I, uh-\"\n\n\"I should have remembered you like, um, to be alone in the shower. I didn't mean to intrude.\"\n\n\"Babe, please stop apologizing.\" Sarah pulled her into a hug and their towels fell away. Ro let one finger trace around Sarah's chest and shoulder. The blonde shivered.\n\n\"I really did a number on you when I left, huh?\" It was so quiet, Sarah had to lean in further to hear.\n\n\"Hey, that wasn't your fault. We were kids. You were making the best choice for you at that time. Look where it led you! You're dancing in New York.\"\n\n\"Yeah,\" Ro sighed, \"But still, I think it was a bit selfish. I loved you, you know.\"\n\nSarah's eyes went wide, but she smiled, \"I loved you too, Roisin.\"\n\nThey held each other as the warm room dried their skin.\n\n\"Hey, Sar,\" Ro began hesitantly. Sarah hummed in answer. \"Do you think I could touch you for a bit? Just, I know I said I wouldn't push, and I won't try to get you off if you don't want to, but...I really want to taste you.\" Ro wouldn't look up as she mumbled the last part. Sarah sighed.\n\n\"Okay.\"\n\n\"Really?\" Now Ro sat up and caught Sarah's gaze. \"I don't want to make you uncomfortable.\"\n\nSarah smiled, \"I'm very comfortable with you. It's just, it won't work. But if you want to, I won't say no.\" She leaned in and kissed Ro. Their tongues wrestled as they deepened the kiss and leaned back in bed. Ro pressed Sarah's back to the pillows and slid down her neck. Sarah's heart rate picked up as Ro descended her body. Watching the brunette crawl between her legs was hot, but Sarah knew not to get her hopes up that this would turn out any different than the dozen or so women who'd tried over the previous several years.\n\nRo smiled up as her mouth lowered to Sarah's lips. She extended her tongue and let one gentle lick fall to her clit. Sarah's breath hitched. She was already incredibly sensitive after their night together and her quick shower attempt. Maybe this would be okay. Ro watched Sarah through her dark lashes as she slipped more of her tongue over the lips in front of her. She kept the pressure light, but constant.\n\n\"That- that does feel good,\" Sarah moaned. Ro grinned then pressed deeper.\n\nRo played for a long time. Sarah tried to relax and just enjoy the sensation, but the longer it went, the more worried she was that Ro was expecting an orgasm. She looked down at the woman between her legs again and saw Ro's eyes were closed and she was contentedly licking the wetness from Sarah's vagina.\n\n\"Ro,\" she croaked.\n\nInstantly, her eyes flew open and she pulled away, \"Do you need me to stop?\"\n\nSarah shrugged, \"You don't have to keep going. It feels good, but I want to play with you. Make you come.\"\n\n\"Sar,\" Ro brought her head all the way up and pressed up on her elbows, \"It doesn't have to be about making you come. I'm just so grateful you're letting me touch you. It doesn't have to be more than this. Okay?\"\n\nSarah's shoulders relaxed and she nodded. Ro's hand came up to press the center of Sarah's chest and push her back against the pillows.\n\n\"Just tell me when you want me to stop.\" Then Ro bent back into the pussy in front of her. The salad lay completely forgotten on the kitchen counter.\n\n_ _\n\n\"Come on, Doc! You've got to come. It'll just be us and the wives, completely safe.\"\n\nSarah rolled her eyes, \"Jerry, I told you to stop calling me 'doc'. You can call me-\"\n\n\"Look, Golding. You've been here a few months, you've got me back to my old self, way more than any of the other therapists I've had. I can start this season and I want to celebrate with you!\" The large linebacker bounced on the balls of his feet like an excited kid, \"The other guys feel the same way. Plus we want to meet this girl you've been hiding.\" Jerry wiggled his eyebrows and smiled mischievously.\n\n\"I'm just not sure it's entirely professional, and no way in hell are you meeting Ro! I'd like her to stick around.\"\n\nJerry stooped to the bench and grabbed his phone, \"Come on, put your number in. It's cool with management, trust me. You're our team doctor-\"\n\n\"Therapist,\" Sarah interrupted.\n\n\"Yeah, yeah, same thing. It's not like a normal doctor-patient thing. Besides, my wife wants to meet the person responsible for my improved head game.\"\n\n\"Dude! Not here! I just barely gave you a few pointers. I will give you my number if you please shut up.\"\n\nThe linebacker chuckled and gathered his stuff, \"Loosen up, Golding. I'll text you the address. Now, don't go giving out my number to any of my adoring fans. Gotta keep the air of mystery, ya know.\"\n\n\"Jer, you've got to finish a season before you have any adoring fans. Now do your exercises tomorrow!\"\n\nSarah adjusted her mask as she headed out of the training room. One of the benefits for getting her nasal cavity violated every three days was that she didn't have to keep it on all the time at work, just in the halls. She made her way back to her office to do some charting and call Ro.\n\n\"Hey babe!\"\n\n\"So how would you feel about visiting a New Jersey mansion this weekend?\"\n\nRo laughed, \"Did another player invite you over?\"\n\n\"Yes, Jerry is relentless. His wife is a sweetheart though and I think it could be fun. They want to do their best to chase you away though. You game?\"\n\n\"I'm so there- Harry! Stay where I can see you! I gotta go, Sar, the kids and I are playing tag in the park and I'm it, yet again,\" Ro sounded winded.\n\n\"It's good cardio.\"\n\n\"Don't I know it. Talk to you tonight?\"\n\n\"Yup, bye!\"\n\nThe following weekend found Sarah and Ro walking up the steps to a large, modern house after hailing a cab from the train. The entrance was smooth concrete and stone with glass balconies off the second floor. Sarah felt a little underdressed in her dark jeans and blue button down. Ro smiled under her mask and took her hand as she rang the doorbell. She'd chosen a large white sweater over black leggings and looked every bit the dancer in her wedge boots.\n\n\"Golding!\" Jerry yanked the door open and smiled at Sarah for a second before he registered Ro's presence. \"And is this the woman you've tricked into dating you?!\" He smiled evilly and Ro's eyes crinkled in amusement.\n\n\"Honey, don't torment them before they've even made it in the door!\" A very pregnant woman appeared behind him and smiled warmly. \"I'm Rana, Jerry's wife. You can take off your masks, we're all real spread out in here anyway.\" Jerry moved back to let them in and they all followed the slightly waddling Rana into a bright, living room. A few other couples were milling about and a sleek TV was on a local sports channel.\n\n\"Doc!\" the other men called as Sarah walked in. Three players and an assistant coach were standing around the room holding various drinks. She rolled her eyes but smiled good naturedly.\n\nIntroductions were made and the other two wives and Rana whisked Ro away to the kitchen as soon as the teammates and Sarah started talking sports. They were giving her a hard time about working with the Astros and trying to get information out of her about certain baseball players. She took a sip of her beer and told a good story about some training interns and a particularly odd piece of gym equipment.\n\n\"So,\" one of the guys, a running back she had worked with extensively, started to say, \"What's the story with your girl?\"\n\nSarah shrugged, \"What do you mean?\"\n\n\"Well, are you settling down? Just having fun? What's the deal?\"\n\n\"Oh, um,\" Sarah flushed a little. Normally, talking about her conquests was not really a point of pride. Even with Carly in college, she was vague about most of the details, preferring to keep some of it private. \"We're just seeing how it goes, I guess. She's an old friend. We're... trying again?\"\n\nThe guys all nodded knowingly and let it drop.\n\nThe afternoon was pleasant with laughter, food, and conversation. Rana showed them the new nursery and they got a tour of the yard and garages. A few video games were brought out and Ro killed everyone in the racing games, much to the frustration of the guys. She rubbed it in with smack talk only a person with three siblings could muster.\n\nAs the sun sank lower behind the houses, Sarah and Ro walked hand in hand down the street to where they were meeting the car to take them back to the train station. The air was cool and the night sounds of the neighborhood were calmer than the bustling city they were used to.\n\n\"I see the appeal of this,\" Ro sighed, gesturing around.\n\n\"Of a gated community?\"\n\n\"No,\" she giggled, \"Of a real neighborhood. A little more space and quiet. I love the city, but I see why people move out here too.\"\n\nSarah nodded, \"It was nice not sharing walls with your neighbors.\"\n\n\"Would you ever move out somewhere like this?\"\n\n\"Yeah, I've thought about it. The neighborhoods around the training facility are really nice. I'd like to have a house someday.\"\n\n\"Just no hedges?\" Ro grinned.\n\n\"No fucking hedges!\" Sarah laughed. \"Would you ever move out of the city?\"\n\n\"Someday maybe, but I doubt I could ever afford a house.\"\n\n\"I make enough, that's not really an issue-\" Sarah cut herself off, \"Not that I'm assuming anything. We haven't talked about that, I know. I don't mean to-\"\n\n\"It's okay, Sar.\" Ro smiled and squeezed her hand, \"I, um, like the idea of planning a future with you.\"\n\nSarah flushed as a wide grin split her face, \"Good.\"\n\nBoth women enjoyed silent musings about the future as they climbed into the car. The train station was quiet for a change and they enjoyed a peaceful ride back to the city. As they watched the city lights flicker by hand in hand, neither was aware of just how soon they might have to make a decision.\n\nChapter 28: Forever\n\nSarah and Ro were cuddled on Sarah's couch watching the news together on Monday night. Now late October, football was in full swing and Sarah had been on the sidelines for Sunday's game against Buffalo. The home game allowed her to get in much earlier than usual on Sunday and relax most of the day Monday. Their late dinner of Chinese take out still lay out on the coffee table, a small celebration that it had been five months since they rekindled their relationship.\n\nThe atmosphere, though, was far from peaceful. Ro was pacing the small strip of floor between the kitchen and the living room while Sarah sat rigid on the couch.\n\nBy her ninth pass, Ro threw up her hands and shouted, \"Marry me!\"\n\n\"Ro, what are you-?\" The TV flashed to another pompous speech about the qualifications of the new justice whose hand had just left the Bible.\n\n\"Marry me, Sarah.\"\n\n\"Seriously?\" Sarah sat up straighter as Ro dropped to her knees in front of her.\n\n\"Seriously. This could all go to shit. This might be our only shot. So, please, marry me?\" The look on Ro's face proved she was dead serious. Her pale complexion was flushed and her lips were pulled tight.\n\n\"When?\" Sarah breathed.\n\nRo thought for a second, \"Next weekend?\"\n\n\"Okay, uh, okay okay we've got to get some paperwork, I'll look online. Where can we go? I think the park would be nice enough. What- Wow, I should book a flight for my parents, do you want to call yours?\"\n\nRo looked dumbstruck.\n\n\"I'm sorry! We don't have to call them! I mean, we can get Shay and Becky out here, Killian and Connor too.\" Ro's eyes went wider as she stuttered. \"What? Why are you looking at me like that?\"\n\n\"Sarah Ann Golding, is that a yes?\"\n\n\"Oh!\" Sarah forgot to say yes? Shit, she forgot to say yes! \"Of course it's a yes! Yes, Ro, I'll marry you!\"\n\nTears spilled from Ro's eyes as she wrapped her arms around Sarah. They embraced and kissed there on the couch while the news drifted off to another political advertisement. They didn't watch it.\n\nAfter coming up for air an hour later, Sarah smiled giddily at Ro. \"Wait! I have something.\" She darted off into her bedroom and Ro could hear her rummage around in the closet. Sarah came bounding back, still completely naked from their impromptu celebration.\n\n\"Roisin Maria Daly,\" Sarah said, getting down on one knee, \"Will you marry me next weekend?\" She produced a small, black velvet box and cracked it open. Inside was a green solitaire gem on a thin silver band. Ro's eyes filled with new tears.\n\n\"When did you get this?\"\n\nSarah looked a little sheepish, \"After that first time we met up in June.\"\n\nIt was Ro's turn to be shocked, \"Seriously?\"\n\n\"Seriously.\"\n\n\"Yes, Sarah. I'll marry you next weekend.\"\n\nWith a new ring on her left hand and their clothes back on, Ro began calling her brothers. Sarah video called her parents and their congratulations rang through the apartment. They found the necessary paperwork online, the city clerk's offices were closed but everything seemed easy enough to file through the new portal. Sarah knew a coworker, one of the team's assistant coaches, had been ordained to perform his brother's wedding earlier that year so she called him and asked what he was doing next weekend. With the team playing Monday at home, they decided to do the ceremony on Saturday morning. Flights were booked and hotel rooms reserved quickly for the four family members that could make it.\n\nKillian and Shay were booked to fly in on Friday morning. Becky decided to stay home with the boys since bringing them to New York in the middle of a pandemic didn't feel right to anyone. Ro promised to set up a video call for her and Connor to watch. Sarah called Carly and David and promised to include them on the video stream as well. Carly's screech of excitement could be heard over state lines, Sarah thought.\n\nRo was sitting at Sarah's island in the kitchen admiring her ring when Sarah came in, rubbing her ear after her conversation with Carly. She wrapped her arms around her fiance\u00e9 and kissed her neck.\n\n\"Are you going to get a wedding dress?\" Sarah asked while running her lips along Ro's throat.\n\n\"Hm...\" Ro thought, \"I don't know. Are you?\"\n\n\"I was thinking,\" Sarah stopped kissing and choked a bit. Her eyes looked down while a little embarrassed blush grew on her cheeks, \"I'd just wear my blue suit?\" She kept her eyes on the ground.",
        "Ro fit her fingers under Sarah's chin to pull her gaze up, \"That would be perfect, babe. Absolutely perfect.\"\n\nSarah flushed deeper. Clearly pleased with Ro's response.\n\n\"I'll find something. I have to go shopping now anyway.\"\n\nSarah looked puzzled.\n\nRo flashed the gem on her finger at Sarah and smiled widely. \"I have to get you a ring too!\"\n\nRo was cryptic about her shopping over the next few days and she spent a little more time with her roommates at their apartment than she'd done over the last few months. Sarah knew she was busy organizing things, but still felt her fiance\u00e9's absence when she wasn't in Sarah's bed. She did have the satisfaction of helping move some of Ro's things into her apartment though. Clearing out enough space wasn't a problem as Sarah's apartment was pretty sparse before Ro's things came to join them. Eventually, they'd want a bigger place, but Sarah figured they could wait out her lease until April before deciding.\n\nShay and Killian got to town early Friday morning and took a cab to their hotel. Sarah's parents were driving in and would be arriving later in the evening. After work, Sarah picked up Ro and they went to meet her brothers at their hotel.\n\n\"Sar, honey, will you please stop fidgeting, it's my brothers, you know them.\" Ro placed a calming hand on Sarah's bouncing leg as the Uber pulled up outside of the hotel.\n\n\"I haven't seen them in almost a decade. And, um, the last time I talked to Killian was, well, I wasn't in a good place.\"\n\nRo's brow furrowed, \"What do you mean?\"\n\nSarah took a deep breath, \"Well, he and I texted a lot, mostly about you for a couple months. Then we didn't talk at all for a while until about three years ago.\" She looked down at Ro's hand on her thigh, her voice thick with memory. \"I called him. Right before Christmas I wanna say? Anyway, I'd gotten completely wasted with some housemates and ended up taking home a girl with hair like yours. She kinda reminded me of you, of course I was too plastered to realize that at the time. But, after she fell asleep I just went outside and tried to get some air. I couldn't breathe.\" A tear rolled down Sarah's cheek which Ro quickly wiped away as they got out of the car. Sarah took a ragged breath, \"Anyway, I called Killian. It was like three in the morning and I couldn't believe he picked up. I don't remember what I said really, only that I was an absolute mess. He talked me down and told me it would all work out in the end. I met Jen a year later so I thought he was right, that it had worked out, just not how I imagined.\"\n\nIt was quiet as they stood on the sidewalk. Sarah wiped her face and shook herself. Ro was completely frozen, staring at her.\n\n\"He- he never told me that,\" she whispered quietly.\n\nSarah nodded, \"I asked him not to. I didn't want to barge back into your life. Besides, I think you were still in Miami or something at the time. It wasn't a possibility.\"\n\nRo took both of Sarah's hands in hers, \"Thank you for telling me. I don't think you have to worry about Killian though. He's not gonna judge you for being in love with me.\" Her coy smile broke the tension and Sarah pulled her into a crushing kiss.\n\n\"Okay, let's go.\"\n\nShay and Killian were in full bachelorette party mode in the hotel. They'd ordered food from six different restaurants and had every type of alcohol in little bottles filling the minifridge. They made the brides do shots and play trivia games. Sarah's parents arrived sometime during the chaos and joined in good-naturedly. Their introduction to Ro in person was warm and by the time the party was breaking up, Sarah's mom had made Ro promise to drag Sarah home for every holiday. Her dad and Shay had bonded over their love of baseball and were drunkenly arguing their favorite plays while Killian supported and countered both sides to get them riled up.\n\nAround midnight, Ro's roommate arrived to take her away for the night. In a tantrum for tradition, her roommates had insisted she spend the night with them and get ready there instead of with Sarah. They kissed quickly before she was whisked away and Sarah was left standing there with a goofy grin on her face.\n\n\"Hey honey, I'm going to take your father back to the room. Are you good?\" Sarah's mom placed a hand on her shoulder.\n\n\"Yeah, I'll get a car back home. Thanks.\"\n\n\"Honey, we're really happy for you. Ro is lovely. I'm sorry more of her family doesn't appreciate that.\"\n\n\"Thanks, mom. I love you.\"\n\n\"See you tomorrow, sweetie. I can't believe you're getting married!\"\n\n_ _\n\nSarah's parents met her for breakfast at her apartment early Saturday morning and luckily her father's hangover was sedated with bacon and orange juice. They talked about football, work, and all the new regulations with the news on in the background.\n\n\"Mom, are you sad that you won't get to go wedding dress shopping with me?\"\n\n\"Oh honey, no. I mean, maybe a little, but that's never been what a wedding is about. I'm happy for you. You've found your person, that's what's important.\"\n\n\"Sarah, turn that up,\" her father called as the election results were blasted across the screen. The anchors and political analysts declared the winner and Sarah's mom squeezed her hand. It had been a tumultuous news cycle the past week and things were just now clearing up. As they watched, Sarah's phone rang.\n\n\"Hi baby, are you supposed to be calling me right-\"\n\n\"Did you see the news?\" Ro's voice sounded stressed.\n\n\"Yes.\"\n\n\"Well?\"\n\n\"Well what?\"\n\nRo sounded nervous, \"Do- do you still want to get married?\"\n\nThe floor dropped out from under Sarah, \"Wh- what?\"\n\n\"I mean, it's just that now we might be okay. I know we made this decision super fast and kinda emotionally. I just want to see if you still want to go through with it because we don't have to. We could just keep going and see what happens?\" Ro was rambling and Sarah's heart was threatening to leap through her ribcage. Her mother and father watched with concern at her stricken face.\n\n\"Ye- yes, I still want to marry you, Ro. Do you not-\" she was interrupted by a sob. \"I'm sorry, we can call it off! We don't have to rush into this, Ro. I love you, but I don't want to rush you.\" Her mom and dad exchanged looks while Sarah's chest collapsed.\n\nRo continued to sob on the line, \"I-, I-\"\n\n\"Baby, just hang on. I'm coming over.\" The panic in Sarah's voice seemed to calm her fiancee down a bit. As she hung up her parents' looks of worry almost caused her to break down. \"She's freaking out. I'll be back in a bit.\" She grabbed her jacket and stole out the door before they could respond.\n\nThe cab ride to Ro's seemed to take forever. She felt her chest closing again in panic but forced herself to remain calm. After all, the election was good news, right? Not that who was in charge nationally affected their daily lives much, but still the fear of losing rights was real. Sarah breathed slowly in the same way she instructed patients to breathe through exercises.\n\nBy the time she was bounding up the stairs to Ro, her heart was back in her throat. She knocked on the beat up, metal door. It opened almost instantly and the sight of Ro took what breath she had left in her completely away.\n\n\"Wow.\"\n\nRo was wearing a knee-length deep green dress made of flowing chiffon. The bodice clung tightly to her sides with a sweetheart neckline that accentuated her pale chest and throat. Her hair was styled loose in its natural curls with half pulled back out of her eyes. But her eyes are what froze Sarah's blood. She'd clearly been crying. Mascara was wiped across her cheeks and her eyes were bright with fresh tears as she took in Sarah, wearing the blue suit but with white shirt untucked and hair still wet from her shower.\n\n\"I-, I didn't want-\"\n\n\"Shh, it's okay,\" Sarah pulled Ro into her arms. \"We don't have to do it. If you're not ready, let's just wait and see. We can take a break, when the season is over let's go on vacation or something. Just spend time together.\"\n\n\"No! I mean,\" Ro pulled back to look into Sarah's eyes, \"That does sound nice, vacation. But I'm ready. I want to get married. I just thought, maybe we were rushing in, that I was trapping you with the excuse of the election and all that.\"\n\nSarah's heart threw itself against her chest, \"Roisin Maria Daly, I've loved you for seven and a half years. Let's go get married.\"\n\n_ _\n\nThe little ceremony in the park was quick. Their officiant spoke clearly through the mask so that the audio could be picked up by Killian's iPad. After they signed the marriage license, they smiled and waved for everyone on the stream. Carly was clearly sobbing and Becky, with Connor's help, was wrestling two little boys into frame to wave. Sarah's cousins were thankfully muted as they screamed congratulations from their different feeds. Sarah and Ro promised everyone to have a proper party when things opened up and Killian ended the chat by toasting with a flask he pulled from his jacket.\n\nAfter lunch at the hotel, Sarah's parents started their drive home, both working crazy hours in the hospital for the foreseeable future. They hugged their daughters and promised to chat soon about Christmas. Shay and Killian had a flight out early the next morning, so after thoroughly embarrassing their sister and her new wife with innuendos, they both opted to nurse their hangovers with a nap.\n\nThat left the newlyweds to make their way back to Sarah- and now Ro's- apartment.\n\nRo's dress hit the floor before the door fully shut and Sarah's jacket and pants were not far behind. They fought their way to the bed dropping underwear, bras, and socks along the hardwood. Sarah lifted Ro without breaking their kiss and deposited her on the bed with ease. Those long pale legs wrapped themselves around her body and kept the two women pressed tightly together.\n\nSarah had to push Ro's shoulders down to the bed to break the kiss as everytime she pulled up, more of Ro's lips sucked her back down. She laughed.\n\n\"Baby! I want to kiss you other places too.\"\n\nRo sighed, \"Fiiiiine, if you insist.\" She spread her gorgeous legs and Sarah felt desire hit her like a shockwave. She slid down the dancer's body and immediately pressed her tongue into the pink opening she found. Ro's moan of pleasure reverberated through Sarah's chest as she began the slow, methodical licks that drove her wife wild.\n\n\"I'm going to do this everyday,\" she whispered into the lips in front of her. \"I want to start every morning with your taste on my lips.\" Ro groaned above her and sank deeper into the bed. Sarah added fingers and felt Ro careen into bliss as the pale legs enveloped her head. She didn't stop though. After letting Ro calm for a moment, she ramped up her thrusting again and wrapped her tongue around her clit, sucking and adding pressure in rhythmic turns. Ro bucked and moaned her name.\n\n\"Saraaaaaah!\" That was a sound she'd never tire of, her name called by the woman she loved.\n\n\"Come again baby,\" Sarah prompted and Ro did.\n\nAfter a few more moments, Ro pulled on her blonde hair and Sarah climbed up to lay a wet kiss on those perfect lips that had pledged her love forever just a few hours before.\n\n\"Sarah, that was, wow.\"\n\nShe smiled, \"Good.\" She wrapped her wife up in her arms and they laid there while Ro's breathing evened out and her legs stopped shaking. Eventually a quiet voice broke the silence.\n\n\"Can I?\" Ro whispered. Sarah nodded.\n\nThe brunette grinned and rolled Sarah onto her back, slipping down in one fluid motion until her face was even with Sarah's sex. She was getting more comfortable with Ro returning the touches, but it was still a rarity and Ro always asked first. Soft lips connected with her clit and Sarah jolted a second before relaxing. She felt Ro's eyes on her as she wrapped up Sarah's clit and sucked gently. The warmth that filled her was startling. Sarah felt calmer and more turned on than she had in awhile. The feeling of Ro, the look of her green eyes gazing lovingly at her, it all drove her wild. If she didn't know better, she'd say she felt it drawing her near the edge.\n\nShe moaned and Ro gently added a finger to her vagina. Sarah's breathing hitched, she was definitely getting close. Her hands frantically gripped the sheet.\n\n\"Ro! RO! I'm, I'm gonna c-\" then Sarah came, hard, all over her wife's face. Ro's eyes went wide, then narrowed in triumph as Sarah spasmed and rocked around her. After calming, Sarah pulled her wife up to lay across her chest.\n\n\"Sar, you came!\"\n\nShe blushed a bit and nodded. \"You made me feel that good, baby.\"\n\nRoisin smiled wickedly as she eyed Sarah's body again, \"That's just what a wife does.\"\n\n_\n\nDear Reader, \n\nI hope you'll forgive me for making you wait. Wow, this was a hard one to finish. Thank you for caring about my characters and letting me tell their story. I hope you found some truth in my fantasy. We leave Sarah and Ro here in our time and in love.  \n\nIf you enjoyed this, or even if you hated it, please rate, comment, send feedback. I read it all and it is so encouraging to hear your thoughts and ideas. I'm working on several other projects right now, including a one-shot that will be released in March, just in time for St. Patty's Day! I hope you come back to keep reading. As long as you do, I'll keep writing. \n\nxo \n\nKate\n\n \n"
    ],
    "authorname": "CreatingKate",
    "tags": [
        "college",
        "dancer",
        "drama",
        "football",
        "friendships",
        "lesbian",
        "lesbian romance",
        "lesbian sex",
        "love",
        "softball"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/what-a-shortstop-does-ch-25-28"
}