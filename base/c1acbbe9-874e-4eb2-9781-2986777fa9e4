{
    "title": "Good Catholic Girl",
    "pages": [
        "*Author's Note: Anny and all persons engaging in sexual activity are at least eighteen years of age.\n\n*Disclaimers: This story has been edited by myself utilizing Microsoft Spell-check. You have been forewarned; expect to find mistakes.\n\n*.*\n\nKampala Afrika Jefferson hurriedly searched for some clean clothing. It was already after seven o'clock. She had to get Amhara to the day care center, then had to get to her first class.\n\nShe finally grabbed a pair of cutoffs and a blouse, mentally chiding herself for not washing any clothes that weekend. With one more check of her hair, she grabbed Amhara's diaper bag, making sure that there were plenty of diapers, two juice bottles a change of clothing and a box of animal crackers.\n\n\"Who's Mommy's big girl, huh?\" Kampala sang as she made her way from Apartment 2B to the automobile that Gordon King had purchased for them.\n\n\"Me,\" the two and a half year old girl giggled happily.\n\n\"That's right, you!\" Kampala agreed.\n\nAfter hooking the child in her car seat, Kampala had to dig her shorts out of her buttocks. Sitting on her car seat, Kampala could feel the velour fabric tickling her bare buttocks.\n\n\"Damn, should have just thrown these out, huh?\" she asked herself.\n\nHappyland Day Care Center welcomed Amhara and relieved Kampala of her diaper bag. Kampala gave the girl one more kiss before rushing to the campus of the University of Louisiana at DeGarde.\n\nFinding a parking spot was a challenge; obviously several students were signed up for the summer semester. Finally, she hurried from car to classroom, even managing to find a seat in the very front of the room.\n\nKampala Afrika Jefferson reflected on what had taken her from Devonshire Street Projects of Elgee, Louisiana to a clean two bedroom apartment in DeGarde, Louisiana, an apartment with rent and utilities paid and an additional two hundred and fifty dollars a month living expenses.\n\nShe was the fourth child, the oldest daughter of Konstance Mary Jefferson. Konstance had been born to a crack addicted mother and foisted on her maternal grandmother. Kconstance's grandmother had a deeply entrenched distrust of white people and had pounded her beliefs into Konstance's head. Konstance also made her own observations of the world around her and came to the belief that white people were doing their best to keep all black people enslaved.\n\nKonstance also believed that black people were trying to deny their own heritage, their own roots. This, in turn, gave white people even more power, more dominance over blacks.\n\nAlcohol gave way to marijuana use and marijuana use gave way to meth use. When shorting meth did not provide the rush, the relief, Konstance started smoking the drug. To pay for her addiction, Konstance stole what she could. When she couldn't steal, she turned tricks.\n\nHer first child was named Uganda Afrika Jefferson. Her second child was named Zambezi Afrika Jefferson. The third child was stillborn so Konstance did not name the boy.\n\nShe raised her children in the same manner she'd been raised. Slaps and shrill admonishing's were dealt out on a regular basis. Far too few encouraging words or hugs were ever given.\n\nSchooling was hit and miss; Konstance rarely woke up before two o'clock in the afternoon, rarely remembered to make her children wake up in time to attend class. Uganda, Zambezi, Kampala, their younger sister Kasai Afrika Jefferson, and their youngest brother Durban Afrika Jefferson advanced to the next school year simply because their teachers had long ago quit caring.\n\nWhen Zambezi was eighteen, he dragged Kampala with him to a party a girl was hosting. He liked the girl and hoped to impress her; he'd stolen some of Momma's meth and even one of her syringes.\n\nAt the party, Zambezi lost track of his sister. When he found her four hours later, she was incoherent; could not tell her brother where her clothes had disappeared to.\n\nNine months later, Kampala cried, screamed, sweated and cursed and gave birth to Amhara Afrika Jefferson. The black nurse in the maternity ward quietly encouraged Kampala to keep going to school.\n\n\"You too young give up,\" she said to the exhausted girl. \"Hear me? You too young this be all there is to your life.\"\n\n\"What the fuck you know about my life, huh bitch?\" Kampala angrily demanded.\n\n\"Waters Street Projects, girl. Waters Streets, know what I'm saying?\" Venus O'Toole said.\n\n\"And now you got you a little girl needs see there more to life than just getting by. There's more to life than drinking and drugging and getting high and getting knocked up. There's more to life than getting you that check on the third and being all broke ass by the tenth,\" Venus continued. \"Go ahead. Tell me that ain't your life, go ahead, tell me, huh?\"\n\nMrs. Mendelson, a case worker with St. Ann's Parish did meet with Kampala, did purse her lips and agree to assist Kampala in continuing her education. She arranged for Amhara to have a regular baby sitter so that Kampala could go to school. She also arranged for Kampala to have parenting classes.\n\nAnd when Kampala did get her diploma, Mrs. Mendelson put Kampala and Amhara into her car and drove mother and daughter to the office of King Sanitation.\n\nIn the muted elegance of the office building, Sheila Jakes greeted Kampala warmly and fussed over Amhara. Kampala wondered what the white woman wanted from her.\n\n\"Amhara; that's such a beautiful name,\" Sheila complimented. \"What does it mean?\"\n\n\"Amhara's a region in Ethiopia, a land where my people are free,\" Kampala snapped.\n\n\"Oh? Have you ever been there?\" Sheila asked, undeterred by Kampala's anger.\n\n\"Yeah, right,\" Kampala spat. \"I just flap my wings and fly there.\"\n\nKampala again bent to the task of filling out the paperwork Shelia had handed to her. Next to her, Mrs. Mendelson shifted nervously.\n\n\"All finished?\" Sheila asked pleasantly as Kampala scrawled her signature. \"Ms. Rodriguez will see you now.\"\n\n\"Who? Why?\" Kampala asked.\n\n\"Ms. Jefferson? Hi, I'm Michelle,\" an attractive Latin woman smiled, extending her hand.\n\nKampala found herself in a small office, being questioned about goals, aspirations, plans. She stammered and stuttered her way through the interview, wondering what was going on.\n\n\"Kam, can I call you Kampala? I'm going to put you at the top of my list,\" Michelle smiled warmly. \"Mr. King has final say-so, but I'll try to twist his arm, okay?\"\n\n\"Say-so on what?\" Kampala demanded.\n\n\"The Nicole King Scholarship,\" Michelle said, smile faltering. \"Mrs. Mendelson didn't tell you?\"\n\nTwo days after that odd meeting, Kampala received a phone call on her government cell phone. Some white man, she could tell it was a white man, was telling her he had high hopes for her. The day after receiving that phone call, an attractive blonde woman was ushering Kampala and Amhara toward her minivan, driving them to her new apartment.\n\n\"This all mine?\" Kampala asked, not believing her eyes.\n\nThe apartment was as large as the apartment she had just left on Devonshire Street. It did not smell of cooking oil and burned food. The furniture did not reek of urine. She had a bedroom. And Amhara had a bedroom. And Amhara had a bed, not a cardboard box to sleep in.\n\nKelli King, Gordon's wife smiled as the beautiful girl just gaped at her new surroundings. Then she put the keys of the apartment into Kampala's hand.\n\n\"You're enrolled for the fall semester; you'll be taking twelve hours,\" Kelli said. \"Kampala, all we ask is that you do your very best. Kneed anything? My phone number and Mr. King's phone numbers are right here, on your refrigerator. Just call us.\"\n\nWith a final hug to the still astonished girl, and a kiss to the sleeping child, the white woman was gone. Then Kampala's amazement gave way to anger.\n\nAll of this wealth had been available and Whitey was keeping it all for themselves. They could have been sharing all this with her, and her brothers and sister and her momma, but they'd kept it for themselves. She didn't know why these crazy ass Crackers were giving it to her, unless it was some kind of nasty trick.\n\nA few weeks later, Kelli came and knocked on the door of Apartment 2B. She asked Kampala why she'd not been in class that week.\n\n\"I'm supposed leave Amhara here by herself?\" Kampala asked. \"I brung her first day and white ass bitch made me leave her class.\"\n\n\"Oh, Kampala, I am so sorry!\" Kelli gasped. \"I could have sworn; no one told you?\"\n\nThe Nicole King Scholarship was paying for a day care for Amhara. They were paying the gas and insurance and upkeep on a Toyota Camry; there was even a car seat in the rear of the car.\n\n\"Kampala, I am so sorry,\" Kelli kept apologizing. \"I just assumed Michelle went over all of this with you.\"\n\nHer first semester, Kampala found like-minded people to hang with. They too were disenfranchised African-Americans, bitter with the cards life had dealt to them. There were even some like-minded professors on the ULD campus.\n\nGordon King, and his wife Kelli King found out about Kampala's arrest when Happyland Day Care called, asking if they knew why Kampala had not come for Amhara.\n\n\"Three days?\" Gordon cried out. \"That poor baby; Kelli will lose her mind.\"\n\nKampala roused herself when she heard the guard call out for her. She called back and got to her feet.\n\n\"Step back,\" the police officer snapped as she reached out to unlock the cell door.\n\nKampala was shackled and led down a maze of corridors to a small cinderblock room. Inside, Kelli King sat, beautiful face drawn tight.\n\n\"Why in God's name did you not call me?\" Kelli screamed the moment the door closed. \"And what were you doing at that protest anyway?\"\n\nThen, to Kampala's utter shock, Kelli King burst into tears. She wanted to hug the white woman, but her hands were bound to her waist.\n\nAfterward, there was a flurry of activity. Cells, vans, another cell, a courtroom, a white woman said she was Kampala's attorney spoke some gibberish to a white man in a dark robe, then she was unshackled and pushed into Michelle Rodriguez's Mercedes-Benz.\n\n\"Girl, I put you at top of my list?\" Michelle screamed at Kampala. \"I put you ahead of four or five other girls? And this is how you do me?\"\n\nAnd Kampala was hustled down a hall and pushed into Gordon King's office. The blonde man stared at the girl across a mahogany desk. Then with a sigh, he sat back.\n\n\"We picked you,\" he began in a heavy voice. \"We, Ms. Rodriguez, Mrs. King and I; we picked you because you're a leader. You, Kampala Afrika Jefferson, you're a leader.\"\n\n\"I... I'm what?\" Kampala asked, baffled.\n\n\"You have the potential to be a leader. That potential is within you, Kampala,\" Gordon said.\n\nHe slammed his hand on his desk. Kampala shrank back.\n\n\"And this? That protest? Makes you nothing but a follower. Just a mindless drone, following other mindless drones because someone tells you that you ought to. That this is the right thing to do. Do you even know what you were protesting?\" he demanded.\n\n\"They was going have some war criminal...\" Kampala stammered.\n\n\"What were her crimes, exactly?\" Gordon demanded. \"What crimes has she been convicted of? What crimes did she commit?\"\n\n\"I don't know,\" Kampala admitted.\n\n\"Lieutenant Carice Soilleau has done two tours of duty in Afghanistan, has been awarded the bronze star, the Silver Star, and the Purple Heart,\" Gordon snapped. She is missing her left leg from the knee down and her left arm from the shoulder down. Yet, bleeding from those wounds, she still managed to hold off a group of Taliban fighters until reinforcements could arrive. You may not agree with the Afghan conflict. Hell, I don't agree with the Afghan conflict, but Lieutenant Soilleau is not a criminal; she is a hero and a patriot.\"\n\nKampala fidgeted in her seat. Her cheeks burned with shame.\n\n\"Kampala? If this was a cause you truly believed in? If this was a cause you had all the facts, and were still willing to go to jail for? I would back you up, one hundred percent. I would use every dollar I have to fight for you,\" Gordon said quietly. \"But this isn't your cause. This is you just letting someone else making you their sucker. You let someone else put you in jail while they walked off. They're laughing at you. You got arrested for them and they're laughing at you.\"\n\nKampala's shame gave way to anger. She knew Gordon King was telling her the truth. When the police had come in and started arresting them, Professor Donohoe was nowhere in sight. Professor Alton was nowhere in sight. Patty McGuinness, the girl with the bullhorn was nowhere in sight.\n\n\"Kampala, be a leader,\" Gordon said. \"From here on out? Be a Nicole King Scholarship leader.\"\n\n\"Yes sir,\" Kampala sniffled.\n\nAs she got to her feet and turned, Kampala saw a photograph of an attractive African-American woman on the office wall. The woman was dressed in a beautiful wedding gown, smiling happily.\n\n\"Who's that?\" Kampala asked.\n\n\"Rayanne Williams-Sanders,\" Gordon said sadly, coming to stand next to Kampala. \"She was the first chairperson of the Nicole King Scholarship.\"\n\n\"She's beautiful,\" Kampala said.\n\n\"Yes, yes she was,\" Gordon said and actually sniffed. \"That was taken on the day of her wedding. I walked her down the aisle when she and her girlfriend got married.\"\n\n\"What happened to her?\" Kampala whispered.\n\n\"Died. Bee sting,\" Gordon said and dabbed at his eyes. \"Loved her like a daughter. Never took anything for granted, was so grateful for every opportunity.\"\n\nHe abruptly turned away and blew his nose. Then he sat back down behind his desk again.\n\nSent me an email every Friday, gave me an update of how she was doing. Special occasions? She would call Mrs. King, make sure we knew everything that was going on,\" Gordon said.\n\nKampala looked at the photograph, then at the red nosed white man. This white man was crying, over the death of an African-American woman. A gay African-American woman.\n\n\"It won't happen again, Mr. King,\" Kampala promised. \"I swear, I won't let you down no more.\"\n\nStepping into the lobby, Kampala again cried tears of shame. Kelli King and Sheila Jakes had Amhara, were fussing over her daughter. She'd not been able to care for her daughter, locked up in jail for a cause that had been a lie.\n\nSafely in her apartment again, Kampala fed her daughter, bathed her daughter, then gently rocked her daughter to sleep. After Amhara was asleep, Kampala went into her bathroom, got out the scissors from the first aid kit and cut her dreadlocks off. The scissors were not designed to cut hair and her head looked like she'd lost a fight with a lawnmower, but she nodded in satisfaction at the results.\n\nShe had struggled to catch up on her missed assignments. Three of her instructors told her that if she missed any more days, they would cut her from their class. But Kampala did manage to pass her four classes. And, every Friday afternoon, she did send Gordon King an email, giving him a synopsis of her week. She did send Michelle Rodriguez an email every Friday, letting the chairperson of the Nicole King Scholarship know how her week had gone.\n\nAt the end of the spring semester, Kampala was carrying a three point five. Now, at the beginning of the summer semester, she sat in her Earth Sciences 109 class, exposed buttocks warming the hard wooden seat. She looked up from her brand new notebook when Professor Byrd strode in.\n\nProfessor Byrd was there to teach. He strolled around the front of the room, delivering his lecture in an impassioned manner.\n\n\"Erosion. Caused by wind, water, man,\" he said. \"The map of Louisiana changes almost daily.\"\n\n\"So, you telling me, in another five, maybe six years, I got me some ocean front property?\" a young man quipped.\n\nDr. Byrd looked up at the man directly behind Kampala and smiled.\n\nAt precisely eight forty five, Dr. Byrd stopped and asked if there were any questions. There were none, so he wished them all a good day and marched out of the classroom.\n\nKampala stood and, before she could stop herself, dug the shorts out of her butt crack.\n\n\"I fail this class, it's all your fault,\" the wise cracking young man said to her.\n\n\"Huh?\" Kampala asked.\n\n\"You got any idea how distracting you are?\" the red headed man asked.\n\n\"Need be paying attention to him, not me,\" Kampala advised, smiling, flinging her backpack over her shoulder.\n\nKampala Afrika Jefferson was used to boys, men vying for her attention, even white boys. Slowly, she was losing her mistrust of all white people, conceding that one or two of them might actually be good people. Mr. and Mrs. King seemed to be good people. Mrs. Jakes seemed to be a good person. One of the workers at Happyland Day Care was a skinny ass white girl, but the white girl was usually the first one to reach out for Amhara.\n\nKampala knew she was attractive. She stood at five feet, four inches and weighed one hundred and twenty six pounds. She had flawless skin the color of milk chocolate, large soulful eyes and a heavy eyebrow that extended over both large eyes. Her nose was a slender nose that turned up slightly and she had full pouting lips. Her chin and jaw were square, giving her a pleasing symmetry to her face. Since her release from jail, Kampala kept her tight coils of black cut close to her scalp.\n\nHer 32D breasts looked large for her slim frame. Her twenty six inch waist tapered to thirty four inch hips, nicely rounded buttocks.\n\n\"I tried. Tried real hard,\" the young man insisted as they left the classroom.\n\n\"I sit somewhere else next time,\" Kampala promised.\n\n\"Won't help,\" the young man said as they joined the throng of students thundering down the steps.\n\n\"Then I just don't know what to say,\" Kampala said as they stepped into the brutal humidity of southwestern Louisiana.\n\n\"Say you'll have dinner with me; you like Jade Garden?\" the young man said, keeping step with her.\n\n\"No, but thanks,\" Kampala said easily.\n\nThe young man wasn't bad looking. He had bright carrot orange hair cut close to scalp on the sides and the back, with tightly coiled carrot orange curls on the top, coils almost as tight as her own hair. His eyes were a light blue, ice blue if she had to put a name to them. His nose was just a little large for his handsome, square face and he had a light dusting of freckles on his pale white skin. \n\nHe was tall, at least ten inches taller than she, with biceps and chest bulging against his tight tee shirt. His pale white legs stuck out of a pair of cargo shorts and she could see his thighs and calves were muscled. His quite large feet were jammed into top siders, with no socks.\n\n\"I uh, you following me?\" Kampala asked as he continued to walk with her.\n\n\"You going to Coolidge Hall? If you are, then yeah, I'm following you,\" he smiled, revealing straight, white teeth.\n\n\"Uh, yeah. I uh, what class you got?\" Kampala asked.\n\n\"Alternate History two twenty one,\" he said.\n\n\"No way, you kidding, right?\" Kampala asked. \"I needed one more History and my advisor said it was the best one for the short semester.\"\n\n\"Well, if Ms. Wright's your advisor, she said same thing to me,\" he laughed as he opened the door for her.\n\n\"We are not studying history as it was,\" Professor Sampson declared after the Teacher's Aide had completed the attendance. \"No, no, we are studying history as it might have been.\"\n\nHe pulled down a map of the world. With a pointer, Dr. Sampson pointed to Germany.\n\n\"What if the United States of America had said 'the hell with it; we are not entering World War Two, no matter what. We are not going to continue making the Rothschild's rich,\" he hypothesized.\n\n\"Then we'd all be speaking German,\" a student offered.\n\n\"Would we? Would we? Remember, Japan was also involved. And Germany had signed an agreement with Stalin only to turn around and break that agreement,\" Dr. Sampson said, pointing out Japan and Russia on the world map. \"Suppose Japan had conquered the Asian countries, then turned their attention to Germany? Suppose, instead of bombing the naval fleet of America, the Japanese forces had pulled a pre-dawn raid on the Fokker factories, had decimated the Luftwaffe?\"",
        "\"I uh,\" the young man stammered.\n\n\"Thought provoking, isn't it?\" the teacher smiled. \"Or, suppose America had entered World War Two the day after the invasion of Poland?\"\n\n\"Jesus, what the hell am I supposed be writing?\" Kampala muttered, already lost.\n\n\"Summer semester's too short to go throughout all of the Western world,\" the man bemoaned. \"So, we're going to concentrate our studies on the American Revolution and the War of eighteen twelve, up to the American Civil War, the War Between the States.\"\n\nWith that, the man began to discuss the first colonization of the New World. As he talked, he threw out some facts that had assisted the colonists in cultivating, inhabiting the new lands.\n\n\"Study your syllabus. Study your syllabus,\" he demanded as the class drew to an end. \"There is a five page report on any period, any given event or events in American History, its significance, and, and, and, how it would have been different, had something, some action had been altered. Don't come up to me on the last day of class and say 'but you didn't talk about that. I didn't know I had a paper to do.' You do have a paper to do. See you tomorrow. Unless something alters our future.\"\n\n\"Oh my God,\" Kampala said, head whirring, large eyes wide.\n\n\"And this is good for a short semester?\" her red headed buddy asked, also shocked.\n\nAgain, as they exited the class, he again asked her for a date. Kampala stopped short.\n\n\"Listen, I uh, I mean, no offense, but I don't date white boys,\" Kampala said. \"I mean, I ain't racist or nothing, but...\"\n\n\"Uh, that's the very definition of racist,\" the young man said. \"You won't date me. Because I'm white. Not because I'm a jock, or I'm not dressed right, or my breath stinks, or I don't have enough money, or you think I'm stupid or ugly. You won't date me simply because I'm white.\"\n\nHaving no argument, Kampala veered away and ducked into a bathroom. Once inside the bathroom, she decided she did need to use the facilities.\n\nWhen she stepped out, her admirer was gone. Kampala didn't know if she felt relief or disappointment.\n\nHer Sociology class seemed to be easy enough; the woman wedged her bulk behind a desk, read the highlights of Chapter 1, explained the text, then sent them on their way.\n\nKampala knew that Happyland Day Care was preparing the noon meal for the children, so decided to go to Clark's Drive-In for a hamburger and giant chocolate malt. As she always did, she admired the girls as they skated around. She'd never been skating and wondered just how hard it was.\n\n\"Pretty hard,\" her waitress agreed when Kampala asked. \"My dad took me to Skate-O-Rama when I was about five, busted my butt a million times. Then, coming here? Had to learn how skate while holding a tray loaded down with a bunch of food.\"\n\nAfter her meal, Kampala saw that it was time for the children's' naps, which gave her time to go home and study. She took advantage of her free time, remembering to take two loads of laundry to the apartment's laundromat. She determined, these cutoffs had been worn for the very last time; her buttocks stuck out far too much for her comfort.\n\nAs usual, it was the bony ass white girl that greeted Kampala when she appeared. Amhara filled her mother's ear with all they had done that day while Kampala and the white girl packed Amhara's diaper bag.\n\n\"You rode, you rode a dragon?\" Kampala asked.\n\n\"Uh huh,\" Amhara said.\n\n\"We read a story about a dragon,\" the employee clarified.\n\n\"Know what? I'm sorry, I see you just about every day but I don't even know your name,\" Kampala suddenly said.\n\n\"Hmm? Oh! I'm Britney,\" the blonde girl giggled and Kampala noticed that the girl had a mouthful of braces. \"Britney Theriot.\"\n\n\"Okay, thank you Britney,\" Kampala smiled and picked Amhara up, balancing the child on her hip. \"Say 'bye-bye' Miss Britney.\"\n\n\"Bye, Amhara, see you tomorrow,\" Britney smiled.\n\n\"Mr. King, first day was hard,\" Kampala typed later that afternoon. \"But I think I'm going to like my classes.\"\n\nMr. King must have been in his emails site; his response was nearly instantaneous. He encouraged her, reminding her that she was a Nicole King Scholarship recipient, she was a leader.\n\nMichelle Rodriguez's response was nearly immediate as well. She too encouraged Kampala, and even disclosed that she, Michelle Rodriguez was a former Nicole King Scholarship recipient.\n\n\"Kampala, you are only limited by what you limit yourself to,\" Michelle stated. \"You are the only one that can hold you back, you are the only one that can move yourself forward.\"\n\nTuesday and Wednesday, Kampala did see the handsome red head in her first two classes. She smiled at him on both days. He did return her smile, but did not approach her, did not talk to her.\n\nThe summer semester ran Monday through Thursday. This left Friday, Saturday and Sunday free. The campus facilities were open on Friday, the Students' Union and library were the only buildings open on Saturday and the entire campus was closed on Sundays. \n\nThursday, just after Dr. Sampson dismissed them, Kampala blocked the red head's exit. He looked at her, a little smile playing across his confused face.\n\n\"I uh, so you uh, you still want go to what was it?\" Kampala asked.\n\n\"I uh, damn, sorry, I uh, I already got plans,\" the young man said. \"And, uh, unfortunately? I'm still white.\"\n\nKampala turned abruptly and fled the room. Her cheeks burned hot with anger, with shame.\n\nSo, when Darius Duncan shot her a text, asking her if she wanted to get together, Kampala agreed. She and Darius had hooked up a few times. Truthfully, she didn't see a future with the young man, which was fine because Darius didn't seem to have any definite plans for any future, other than playing football. He was a member of the ULD Storm, was on the second string and had seen minimal playing time. But Darius was convinced that the NFL would come knocking on his door.\n\n\"So, uh, what we doing?\" Kampala asked when Darius showed up.\n\n\"Shit, you know,\" Darius said.\n\n\"No, I don't know. What we doing?\" Kampala asked. \"Remember, I got me a little girl.\"\n\n\"Can't make her take a nap?\" Darius asked, flopping down on her couch.\n\n\"And then she'll be up all night? No, come on, been in school all week, I want get out, do something,\" Kampala said.\n\nDarius saw that his plans for sex were not coming to fruition. Kampala saw that her plans to get out of the apartment were not coming to fruition. With angry words shouted back and forth, Darius stormed out of the apartment.\n\nKampala packed a diaper bag and took Amhara down the stairs. Despite her anger, she remembered, it was not Amhara's fault, so put on a happy face. Then she drove to Mouton Park.\n\nMouton Park had a beautiful, well-tended playground. The swing sets had seats that were perfect for a two year old; there was a bar that locked down, keeping the child safely in the swing.\n\n\"Whee!\" Kampala laughed as she gently pushed Amhara.\n\n\"More!\" Amhara demanded.\n\nAs she pushed her baby girl, Kampala noticed a runner running the jogging trail. There were others using the track; most jogged at a steady pace. This runner was running, arms swinging back and forth, legs pumping hard.\n\nThe flash of carrot orange hair told Kampala exactly who was running. She watched her classmate's frenetic pace as he thudded past the playground area.\n\n\"Want slide,\" Amhara announced.\n\n\"Ooh, I don't know about that,\" Kampala said. \"They're pretty high. You think you can do that?\"\n\n\"Uh huh,\" Amhara said as her mother unhooked the swing.\n\n\"Yes ma'am,\" Kampala gently corrected.\n\n\"Hey, thought that was you,\" her classmate said as he jogged past, his pace less hurried.\n\nBefore Kampala could respond, though, he was gone.\n\nAmhara did show that, yes, she could climb the steps to the ledge of the slide, with Kampala's hand on her back, ready to catch her if she should lose her balance, then bravely slide all the way down. Kampala applauded her little girl's bravery and Amhara ran around to do it again.\n\n\"Hi,\" the classmate said, now walking, mopping his face with a towel.\n\n\"Hi,\" Kampala agreed, then applauded when Amhara slid down to the bottom again.\n\n\"And who is this little cutie? Huh? What's your name?\" the young man asked Amhara.\n\n\"What's your name?\" Kampala coaxed.\n\nAmhara mumbled something and the young man looked up at Kampala for interpretation.\n\n\"Amhara Afrika Jefferson,\" Kampala said.\n\n\"Amhara? Like the Ethiopian region?\" the classmate asked.\n\n\"Uh, yeah. How'd you know that?\" Kampala asked, genuinely surprised.\n\n\"Had African Geography last semester,\" he said, then turned to face Amhara again. \"Hi, Amhara. I'm Scott Jeffries.\"\n\n\"Say 'hi, Mr. Scott,'\" Kampala coaxed.\n\nAmhara mumbled something. The child again climbed to the top of the slide.\n\n\"I uh, listen, I'm sorry,\" Scott said to Kampala. \"That, what I did after History? That was pretty shiii\u2014shoddy, that was pretty shoddy of me.\"\n\n\"Know what? I deserved it,\" Kampala said, smiling at Scott's attempt to clean up his language around her child.\n\n\"So, uh, this your daughter?\" Scott said and clapped when Amhara slid down.\n\n\"Yes it is,\" Kampala said, her pride evident.\n\n\"You are a very pretty young lady,\" Scott said to Amhara, who was already running around to climb the slide again.\n\n\"So uh, after this, I uh, can I, you, y'all want go to Jade Garden?\" Scott asked.\n\n\"Would love to,\" Kampala agreed, smiling.\n\n\"All right, so I uh, I'll go get cleaned up; my house is right over there; how about meet you, y'all here? Give me twenty?\" Scott said, pointing.\n\n\"What I got on good?\" Kampala asked.\n\nShe was wearing a pair of khaki shorts and a light pink pullover blouse. They'd been fine for a small outing to the park.\n\n\"To me? You look perfect,\" Scott said. \"But I'm not a woman. I don't know what you consider 'good' or not.\"\n\nHe was back in fifteen, driving a Lincoln SUV. He followed Kampala back to her apartment, then, rather than take car seat from car to SUV, and then back again, he simply parked in the 'Visitors' space and got into the passenger seat of Kampala's car.\n\n\"How many?\" the waitress barked as they entered the restaurant.\n\n\"Two adults, one child; we're going to need the high chair,\" Scott barked in reply.\n\n\"Come on,\" the woman snapped, guiding them toward a booth. \"This okay or you want table?\"\n\n\"This is fine,\" Scott snapped. \"That high chair? Now?\"\n\n\"God! Why y'all don't just take it on outside?\" Kampala asked, shaking her head at the rude exchange.\n\n\"Nah, that's just the way she is with everyone. I just give it right back to her,\" Scott smiled and nodded his approval as the waitress plunked a high chair down next to the table.\n\n\"Okay, sweetheart, let's get you in here, huh?\" Scott said, taking Amhara out of Kampala's hands.\n\nKampala watched as Scott quickly managed to buckle Amhara into the chair, then fixed the tray. He then picked up his menu.\n\n\"Okay, the children's meals? Suck. \"How about we just get her an order of fried rice and some egg rolls? I know she won't be able to finish the egg rolls or rice, but it'll fill her up,\" Scott commented.\n\n\"You uh, you know a lot about kids?\" Kampala asked.\n\n\"Sister's got five of them, expecting number six,\" Scott smiled. \"I'm Uncle Sottie.\"\n\n\"What you want drink? Ready order?\" the waitress demanded.\n\n\"Go away,\" Scott snapped. \"We call you we ready, okay?\"\n\nKampala was shocked, then smiled when she saw a small smile playing at the waitress's lips. She then looked at her menu.\n\n\"I uh, I've never had Chinese before,\" Kampala admitted.\n\n\"Anything but the seafood,\" Scott said.\n\nWith his help, Kampala ordered the Moo Shu pork and nodded when Scott suggested the fried rice and egg rolls for Amhara. When their meals came, Scott pulled the egg rolls out of the way; they were steaming. He then took a spoonful of the fried rice and fed Amhara.\n\nScott's prediction was right; Amhara did not eat all of her fried rice. She did delight in dunking her egg rolls into the duck sauce that Scott ladled out for her, but mostly just sucked the sweet sauce from the shell of the egg roll.\n\nAnd Scott did not get angry that Amhara did not finish her meal. He also did not demand that Kampala pay for the food she and Amhara ate.\n\n\"Oh, oh, you said you was a jock?\" Kampala remembered as she cleaned Amhara's sticky hands and face.\n\n\"Uh, yeah,\" Scott smiled. \"You kidding, right?\"\n\n\"No, why?\" Kampala asked, looking at him.\n\n\"I uh, I'm Scott Jeffries? U.L.D. Storm? The running back?\" Scott said.\n\n\"Oh, okay,\" Kampala said.\n\n\"Kampala, well, I guess you're not into football, huh?\" Scot laughed.\n\n\"No, not really,\" Kampala agreed, then brightened. \"Oh, you know Darius Duncan?\"\n\n\"Yeah, Defensive End,\" Scott agreed. \"Second string, 'bout be dropped down to third string if he don't learn how run.\"\n\n\"What's all that mean?\" Kampala asked as they walked to the door of the restaurant.\n\n\"Means he's slow as a turtle and don't take the time learn the plays,\" Scott said, helping as Kampala put Amhara into her car seat.\n\n\"You uh, you want come on up?\" Kampala asked as she parked.\n\n\"Yes,\" Scott agreed.\n\nScott looked around Kampala's apartment with interest. He smiled when Kampala showed him Amhara's bedroom. Then he frowned.\n\n\"She uh, where's her toys? Where's her teddy bear?\" he asked.\n\nKampala showed Scott the few toys the child had. He nodded his head, then asked where her books were.\n\n\"This is our book,\" Kampala said, pulling out a battered book of Mother Goose rhymes.\n\n\"I had a nice time,\" Scott said. \"Hope we can do it again?\"\n\n\"I uh, yeah,\" Kampala said, surprised.\n\nEvery date Kampala had ever had been on had ended up in bed. Some dates had started off in bed, which is what Darius had been hoping for.\n\n\"It uh, I uh, it all right I get a kiss?\" Scott asked.\n\nKampala smiled and agreed to a kiss. She wrapped her arms around his muscled chest, smashing her breasts against him.\n\n\"Mm,\" she moaned lightly as his powerful arms squeezed her, his lips mashing against hers.\n\n\"I uh, what time y'all get up?\" Scott asked, pulling his lips from hers.\n\n\"Don't know, don't have class tomorrow. About seven,\" Kampala said.\n\n\"Oh, give me your phone number?\" Scott asked.\n\n\"She in bed yet?\" Darius texted an hour later as Kampala sat at her dining room table, doing homework.\n\n\"No,\" was Kampala's response.\n\nHe sent a text demanding Kampala text him the minute Amhara went to bed. Kampala's response of 'Why?' generated some ugly responses from Darius Duncan.\n\n\"Know what, bitch? Done with your ass, your third string bass,\" Kampala said as she declined to respond to any of the man's vulgar text messages.\n\n\"You decent?\" Scott asked when Kampala answered her phone the next morning.\n\n\"I what?\" Kampala asked.\n\n\"Y'all dressed? Had your breakfast? Hair brushed, teeth brushed, won't scare people I come knocking on your door?\" Scott explained.\n\n\"Yeah, we're just sitting watching Cajun Carl,\" Kampala agreed.\n\n\"Oh, God, that has got to be the stupidest,\" Scott laughed. \"But I do love Gator and Rat.\"\n\n\"Yeah, Amhara loves them too,\" Kampala laughed.\n\nAnd a moment later, there was a knock on the apartment door. Kampala saw Scott's smiling face when she looked through the peephole.\n\n\"What you doing here?\" she asked.\n\n\"I was walking and I found this bear,\" Scott said, pulling a teddy bear from a Wal-Mart bag. \"And he needed a home. Know any two year old girls think they might like him?\"\n\n\"Amhara? What do you think? Think you'd like a bear?\" Scott asked.\n\n\"Uh huh,\" Amhara agreed.\n\n\"Yes sir,\" Kampala corrected. \"Say 'thank you, Mr. Scott.'\"\n\n\"And I got these,\" Scott said, putting a book of fairy tales, as well as an illustrated Bible onto Kampala's dining room table.\n\n\"Thank you,\" Kampala said and stepped up.\n\nKampala gave Scott a soft kiss. Since she had not expected company, was not ready to go anywhere, Kampala did not have a bra on underneath her soft cotton top. Her breasts mashed against Scott as she kissed him.\n\nKampala did wonder if Scott could tell she did not have a bra on. She did notice that when her breasts made contact with his hard, muscled body, her nipples responded.\n\nShe invited him to sit; she'd make them some coffee. After she brought the mugs into the living room, they sat quietly, just watching the silly children's program that the local television station carried. From time to time, Amhara pulled her attention from the mindless chatter and talked with Mommy, with Mr. Scott.\n\n\"She uh, I usually put her down for a n. a. p after lunch,\" Kampala whispered, pulling her lips from Scott's lips.\n\n\"Lunch is, what? At least three hours?\" Scott smiled. \"Y'all ever been to the library?\"\n\nSt. Elizabeth's Public Library was geared to be kid friendly. Scott walked around, sharing turns holding Amhara. At first, Kampala had felt a little self-conscious, being with a white man. But if any of the patrons or employees thought anything about seeing an African-American together with a white man, they didn't say anything.\n\n\"And out here,\" Scott said, pulling Kampala and Amhara to the rear of the building. \"Is the playground.\"\n\n\"Oh boy! Look at them slides, Amhara!\" Kampala enthused.\n\nThere were three slides, a six foot tall one, an eight foot tall one, and a ten foot tall one. The slide at Mouton Park was a six foot tall slide. The library's six foot tall slide had a tube halfway down the length of it and Kampala squatted down so that Amhara could see her from the top of the slide.\n\n\"Whee!\" Kampala laughed as Amhara easily slid the length of the slide.\n\n\"Want try this one? Brave enough try this one?\" Scott asked, taking Amhara to the eight foot tall one.\n\nShe looked up, then ran back to the six foot tall slide.\n\n\"Okay, maybe next time, huh?\" Scott said, helping the child up the steps of the six foot tall ladder.\n\n\"Yes, maybe next time,\" Kampala agreed.\n\n\"Now, Backyard barbeque is right around the corner from here. Amhara like barbeque?\" Scott asked.\n\nAmhara was asleep in her car seat by the time they returned to Kampala's apartment. Scott carried the girl up the steps and helped Kampala put the girl down for a nap.\n\n\"Now...\" Kampala said, pulling Scott into her bedroom.\n\n\"Good God, tornado hit?\" Scott teased, looking around the squalor that passed for Kampala's bedroom.\n\n\"Shut up!\" Kampala squealed.\n\nKampala did not waste time with foreplay, just pulled blouse and bra off. Scott's blue eyes opened wide at the sight of her chocolate brown skin.\n\nHer breasts were large for her slim frame and did hang slightly from their own weight. Her areolae were the size of half dollars and were a dark purplish brown in color. The nipples stuck out nearly a half inch in their excitement.\n\nHer waist was also slim, but bearing Amhara had put just the hint of a paunch on her belly.\n\nStill not wasting time, Kampala slid her shorts and panties down her legs and Scott's eyes drank in the sight of her mass of black strands, her luscious hips, her sleek legs.\n\n\"Going stand there? \"Kampala laughed, falling back onto her unmade bed.\n\nScott pulled his tee shirt off, revealing his well-muscled chest, his six pack abdomen. There was a shock of carrot orange hair on his chest and Kampala smiled, seeing the tuft of hair.\n\nHe undid his shorts and pushed shorts and briefs down his muscled legs. Kampala looked down at the seven inches of thick meat, the two large testicles, and the shock of bright orange curls.\n\nHis cock was circumcised; Kampala had not seen a circumcised cock before and wondered if this was how all white cocks looked.\n\nScott knelt on the floor between Kampala's splayed legs and kissed her. His hands went up and cupped her heavy breasts. Thumbs and forefingers teased and twisted her hard nipples.\n\nHis kisses had been soft, gentle kisses. Now, inside of her bedroom, Scott's kisses were strong, demanding kisses. He sucked her tongue out of her mouth, tasting her mouth. He moaned into her mouth as they kissed, hands still tugging, twisting, teasing her nipples.",
        "Then his mouth was tasting her throat. His lips travelled down to her breasts, tasting her breasts.\n\n\"Mm-hmm,\" Kampala moaned as Scott's teeth lightly nipped at her right nipple.\n\nShe moaned again when he travelled to her left breast. He alternated between her two breasts. \n\nWhile his mouth teased her nipples, his fingers were gently spreading her legs apart. His fingers grazed her wet slit and she shuddered with the contact.\n\n\"Oh, you nasty boy,\" Kampala shuddered as Scott pulled his mouth from her breasts and travelled toward her pussy.\n\n\"Mm-hmm,\" Scott agreed.\n\n\"Oh, yes,\" Kampala moaned when Scott blew his hot breath over her wet pussy.\n\nShe shuddered when his thumbs pulled her pussy open. She let out a low keening moan when his tongue pushed into her pussy.\n\n\"Shit!\" she barked out when his tongue brushed over her clitoris.\n\nHe looped her thighs over his broad shoulders, pushing her back onto her bed. He cupped her buttocks with his large hands, squeezing the globes of flesh as his mouth sucked and licked at her pussy.\n\n\"Shit, aw yeah, there, baby,\" Kampala demanded when his tongue again made contact with her clitoris.\n\n\"Hmm?\" he asked, battering at her clitoris with his tongue.\n\n\"Yeah, God yeah,\" Kampala moaned when Scott drove two fingers into her pussy.\n\nShe shrieked in orgasm when Scott sucked hard on her clitoris. Scott drove his two fingers in and out of Kampala's quivering pussy while he licked and sucked her essences from her pussy lips.\n\nWhen her orgasm had subsided, Scott pulled his two fingers from her pussy and stood up. He kept her legs in place with his left hand while his right hand guided his hard cock into her pussy.\n\n\"Oomph!\" Kampala protested lightly when Scott drove himself home in her snug pussy.\n\nHer grunts soon morphed into groans of pleasure as he pumped in and out of her. He alternated between short, rapid strokes and slow, long strokes\n\n\"Aw mother fucker!\" Kampala cried out as another orgasm gripped her body.\n\nScott continued with the short jabs and long strokes. When she could again breathe, Scott pulled out of her tight pussy.\n\n\"I wait, what?\" Kampala wheezed.\n\nScott effortlessly pulled Kampala onto her belly, then stretched out next to her.\n\n\"Mm-hmm,\" they both moaned when Scott kissed her slack mouth.\n\nScott pulled Kampala into a kneeling position and knelt behind her. He rubbed the head of his cock up and down her wet slit, then pushed himself into her again.\n\n\"God damn, you a fucking machine, huh? That what you are? You a fucking machine?\" Kampala grunted as Scott hammered her pussy.\n\n\"God damn, that ass is, I'm going tap that ass, hear? I'm going fuck that ass one of these times, hear?\" Scott demanded, pressing a large thumb against her tightly clenched anus.\n\n\"Oh no you ain't,\" Kampala argued.\n\nScott pulled her left buttock, opening her anus slightly. He pressed his thumb into her rectum.\n\n\"Ugh, aw damn, that's just wrong, you a nasty boy, hear? You ain't nothing but a nasty white boy, hear?\" Kampala grunted.\n\nScott's cock felt incredible as it hammered her pussy. Scott had been only the second person to lick her pussy and the first to induce an orgasm from licking her pussy. Kampala had done no positions other than man on top and was enjoying this position; it felt like Scott's cock was jammed into her all the way to her womb.\n\nThe sensation of his thumb driving in and out of her back door, though, was an odd, curiously warm feeling. She'd heard of anal sex and had thought it sounded extremely disgusting, completely unsanitary. It had not sounded pleasurable in the least.\n\nBut Scott's thumb in her ass felt very pleasurable. It was also quite distracting; he was really hammering her pussy hard and deep.\n\n\"You on the pill, right?\" Scott wheezed, his hips a blur as he pounded her.\n\n\"Yeah, mother fucker, yeah, come in my pussy, shoot in my pussy,\" Kampala grunted.\n\nThe first blast of his hot semen caused Kampala's pussy to clamp down in orgasm. He continued to shoot stream after stream of semen deep inside of her, causing aftershocks. She did groan when he pulled his thumb from her ass.\n\n\"Damn, good thing I'm on the pill; white boys shoot that much all the time?\" Kampala asked when he finally pulled his wilted cock from her pussy.\n\n\"This white boy does, when he's with you,\" Scott wheezed.\n\nAfter cleaning herself, after sponging his flaccid cock clean, Kampala dressed again. Scott and she shared several kisses while he dressed. Then Kampala went and woke Amhara from her nap.\n\n\"Hi sleepy head,\" Scott smiled.\n\n\"You uh, you going stay for dinner?\" Kampala asked.\n\n\"I'd like that, but we've got practice this afternoon. Thank God it's just light pads,\" Scott said.\n\nAmhara did give Mr. Scott a hug and kiss and mumbled another thank you for her teddy bear. Kampala and Scott gave each other several passionate kisses before Scott did finally leave her apartment.\n\nWhile Kampala and Amhara read through the book of fairy tales, Scott was on the practice field of the ULD Storm. Being a first stringer, he was in the lineup for many of the plays.\n\nCole Harrison, the head coach of the ULD Storm football team ran them through several plays. He rotated players in and out of the lineup, calling out the plays before calling out the jersey numbers he wanted in the scrimmages.\n\n\"Duncan, come see,\" he yelled. \"Seventy nine R, twenty seven, out, twenty nine in.\"\n\n\"Yeah?\" Darius smiled, sure Coach Harrison was going to tell him he'd been bumped up to first string.\n\n\"Son, been playing for what? This your third year?\" Cole snapped.\n\n\"Yeah, third year,\" Darius agreed, still smiling.\n\n\"And still don't know what the world's going on? Still don't have no idea what you supposed be doing out there?\" Cole snapped.\n\n\"I uh, you keep calling wrong plays,\" Darius defended.\n\n\"Seventeen sweep,\" Cole shouted. \"Seventy three out, twenty nine out, Sixty three in, Forty seven in, on three.\"\n\n\"Son, take the play book home, read the play book, study the play book. Monday's practice? You still don't know what's going on? Then you're off the team and I'll get someone in here does know what's going on, where he's supposed be,\" Cole said and blew his whistle. \"What? Martinez, is this seventeen sweep? Is it? Then what you doing on the left flank?\"\n\nIn the locker room, Darius showered and put on his jeans and tee shirt. Digging his cell phone out of his pocket, he called Kampala.\n\n\"Hello?\" Kampala asked.\n\n\"Hey uh, I uh, I'm coming over, need holler at you,\" Darius said, voice heavy.\n\n\"I uh, no, that ain't a good idea,\" Kampala said.\n\n\"Look, just needing me someone conversate with,\" Darius said.\n\n\"Since when we conversate?\" Kampala asked. \"Need find one of your boys need conversate.\"\n\n\"Look, bitch, I need come on over, know what I'm saying?\" Darius ordered. \"I be there in...\"\n\n\"You can come on over but I ain't opening no door,\" Kampala snapped. \"Like I told you, ain't a good idea you coming on over.\"\n\n\"I get there, you better open that mother fucking door, bitch,\" Darius snarled into the phone.\n\nKampala hurriedly packed a diaper bag and grabbed Amhara. She raced down the stairs to her car.\n\nNow that she knew where the St. Elizabeth Parish public library was, Kampala drove to the safety of the large building. Her heart finally quit thudding when she and Amhara were safely inside of the quiet building.\n\nAfter helping Amhara start scribbling on a large sheet of paper with a large crayon, Kampala dug her cell phone out.\n\n\"Need see you,\" Kampala left on Scott's phone.\n\nA text message popped up; Darius was demanding to know where she was. A moment later, her ring tone began and she pressed the button, sending Darius to voice mail.\n\nAn hour later, Scott did call. Kampala and Amhara were outside, Amhara bravely sliding down the eight foot slide.\n\n\"Uh huh, Mr. Scott, that's right. Amhara's going all the way up, and all the way down the big slide. We going be doing monster slide before you even know it,\" Kampala praised.\n\nThen, in hushed tones, Kampala confessed that she was afraid of Darius. They'd had a brief relationship, but he was not accepting that she no longer had any desire to be with him.\n\n\"Just let him know you got a new man in your life,\" Scott suggested.\n\n\"Oh and he going be all 'oh, then I guess I got be going' and that's that, huh?\" Kampala argued.\n\n\"Tell him you got a new man in your life and if he got a problem, he can come on and take it up with me,\" Scott said.\n\nHe did agree to come to her apartment for supper. She smiled when he told her he had to let his mother know he wouldn't be home for supper and promised she'd make it up to him.\n\n\"Don't know,\" he said. \"She's making her catfish. Don't know how you can make up having miss that.\"\n\n\"I do my best,\" Kampala promised.\n\nDarius had obviously decided he could wait for Kampala to come home. To make matters worse, he was parked in Kampala's space.\n\nKampala angrily honked her horn, waving at him to vacate her spot. Darius got out of his car and marched toward her car.\n\n\"Need get on out of here; my man's coming on over, hear?\" Kampala angrily shrilled through a small opening in her window.\n\n\"New man can suck my dick too, bitch, tell you need holler at you, ass needs be here,\" Darius snarled, trying to force his thick fingers into the small gap of her window.\n\n\"Hey, hey, huh? God! Watch the mouth, dude,\" Scott said, walking over from the visitor's space. \"That little girl don't need hear all that.\"\n\n\"Aw, fuck you, mother fucking ass kiss,\" Darius sneered at Scott.\n\n\"And tell him get his piece of shit on out my spot,\" Kampala yelled through the gap of her window.\n\n\"Duncan, get in your car and go, huh? Heard my woman. Wants you gone,\" Scott said.\n\n\"Your... Aw, your ass, Jeffries,\" Darius laughed. \"Bitch don't want nothing do with your white ass.\"\n\n\"Again, move your car, no, Kampala, tell you what. Ignorant boy here can have your spot,\" Scott said. \"Need have some of my momma's catfish. Y'all follow me, okay?\"\n\n\"Okay,\" Kampala agreed and raised her window again.\n\n\"Bitch, you ain't, Jeffries, shit ain't over, hear? Bitch, better get on out that car,\" Darius screamed.\n\n\"Hey uh, Momma? Got enough for a couple more people?\" Scott asked into his dashboard.\n\nScott made sure Kampala was following him before turning the corner. His mother agreed that she had plenty of filets and also had plenty of French fries.\n\n\"Uh, Momma? I uh, she's got a baby. Cutest little two year old girl you ever seen,\" Scott said, then cursed when he saw Darius's car speeding up to catch up with them.\n\n\"Well, your sister done made sure we all know how deal with them babies, huh?\" May Jeffries said.\n\n\"Uh, one more thing, Momma,\" Scott said as he pulled into the driveway.\n\n\"What's that? Oh, you home already?\" May asked.\n\n\"Uh, yeah, uh, Momma, my friend's black; that ain't no problem, huh?\" Scott said.\n\n\"Now, what kind of question that is?\" May asked.\n\n\"Momma, send Ritchie on out huh?\" Scott asked as Darius slammed on his brakes, pulling up right behind Kampala's car.\n\n\"What you want, Squirt?\" Officer Richard Jeffries asked, swaggering out of the house.\n\n\"Put the fear of God into that ignorant son of a bitch right there, huh?\" Scott asked, pointing toward Darius.\n\n\"You! License and registration. Now!\" Ritchie bellowed at Darius.\n\n\"What? What I done, huh?\" Darius protested.\n\n\"Heard me? I said 'license and registration now,'\" Ritchie demanded again.\n\n\"Come on; my momma's dying meet Amhara,\" Scott smiled, helping Kampala gather child and diaper bag.\n\n\"Now, Mr. Darius L. Duncan? Anything, and I do mean anything happen? To my brother's car, or to my brother's woman's car? Or to this house? Guess who I'm going come see,\" Officer Ritchie snarled, handing Darius his paperwork.\n\nHe got millimeters from Darius's face. Darius could smell the iced tea the man had been drinking.\n\n\"And I won't be this nice about it neither. Feel me, dog?\" Ritchie hissed through gritted teeth.\n\n\"Uh huh,\" Darius sneered.\n\n\"Now, why don't you go on and get your ignorant ass on out of here,\" Ritchie said. \"Real nice and slow.\"\n\nDarius slowly backed up, then edged around Kampala's car. He drove to the stop sign, then chirped the tires driving away from the neighborhood.\n\n\"What a dumb ass,\" Ritchie smirked, then walked back into the house.\n\n\"And, Kampala, this guy is my older brother, Ritchie Jeffries,\" Scott said when Ritchie came and sat down at the table again.\n\n\"You wash them hands?\" May demanded, not even turning from her position at the stove.\n\n\"That's 'Big brother,'\" Ritchie smiled.\n\n\"Older brother,\" Scott retorted.\n\n\"Bench a hundred more than you, 'LITTLE' brother,\" Ritchie flexed.\n\nKampala was used to her two older brothers bickering. Usually, those little exchanges would escalate into violent confrontations. But she could tell that the two Jeffries brothers would not pull blades, would not threaten each other with death.\n\n\"And who's this? Huh? Who's this young lady?\" Ritchie fussed at Amhara.\n\n\"Amhara Jefferson,\" Scott said.\n\n\"Well, you just about as pretty as your momma, yes you are,\" Ritchie crooned to the child.\n\n\"Go wash them hands,\" May reminded him. \"Tony! It ready yeah.\"\n\n\"'Bout time,\" Tony Jeffries said, waddling into the kitchen. \"'Bout starve death.\"\n\n\"Yeah, Dad, you look hungry,\" Scott agreed.\n\n\"Uh, hey there, who you?\" Tony said as he eased his bulk into his chair.\n\n\"Dad, this is my girlfriend, you are my girlfriend huh? This is Kampala Jefferson,\" Scott said.\n\n\"Hmm? Naw, don't care too much 'bout her,\" Tony smiled and pointed to Amhara. \"Meant this one. Look like she planning on eating all my supper.\"\n\n\"Hmm? Oh, this one? Yeah, she eat a lot. This is Amhara Jefferson. Amhara? This is my dad, Mr. Tony,\" Scott said.\n\n\"Hi, Amhara,\" Tony smiled.\n\n\"Kampala? You go to church?\" May asked as she began putting the platters of food on the table.\n\n\"I uh, no ma'am,\" Kampala agreed. \"I uh, we ain't never been.\"\n\n\"Oh, well, need come on to St. Thomas with us,\" May decided and sat down. \"Uh, Ritchie, we said grace yet?\"\n\n\"I did. Just didn't hear me,\" Ritchie smirked.\n\n\"Heavenly Father, we thank you for the blessings you have given us. We are especially grateful that you have given us enough to share with our friends, even little girls look like they going eat it all up before I get any of it,\" Tony said.\n\n\"Dad, when you meet God, He going have something say about them prayers of yours, hear?\" Scott said.\n\n\"And He going say 'least you pray,'\" May said. \"You pray?\"\n\n\"Momma, I pray all the time,\" Scott defended.\n\n\"Kampala, ain't got be shy no, get you plenty,\" May said. \"Amhara, you like French fries?\"\n\n\"Say 'yes ma'am,'\" Kampala coaxed.\n\n\"Yes ma'am,\" Amhara agreed.\n\n\"Amhara? You want you some ketchup for them fries?\" Ritchie asked, grabbing the large bottle.\n\n\"Our granddaughter? Anna Bee? Likes ketchup mixed with mayo,\" Tony said. \"Think she'd like that?\"\n\n\"Anna Bee's my sister's oldest; she's nine,\" Scott said.\n\n\"Becky got herself a sugar cane farmer,\" May said. \"Man! Don't never marry no farmer! That some hard work, yeah.\"\n\n\"And ain't never done,\" Tony agreed.\n\n\"Twelve thousand acres,\" Ritchie threw in. \"Every time see Becky and Timmy? They planting. Or they gathering. Or they rotating. Why they having all them kids. Need help.\"\n\n\"Anna Bee's nine, but she already knows how drive a tractor,\" Scott agreed. \"Man, Momma, this good yeah.\"\n\n\"Same as I always make it,\" May waved away his compliment.\n\n\"And you always make it good,\" Ritchie said.\n\n\"Miss May? This is really good,\" Kampala agreed.\n\n\"Oh, well, thank you,\" May beamed.\n\n\"What?\" Scott laughed. \"We get 'shut up' and she gets 'thank you' huh?\"\n\n\"You hear me tell them shut up?\" May asked Tony.\n\n\"Ain't heard nothing,\" Tony said. \"Busy eating.\"\n\nAfter dinner, Kampala watched as a mason jar was taken out of the window. There was a black liquid in the jar.\n\n\"Kampala, we fixing have us some ice cream; you want some coffee go with that?\" May asked.\n\n\"Uh, yes ma'am,\" Kampala agreed.\n\nThe black liquid was poured into a large glass measuring cup, then put into the microwave. After the microwave gave an anemic 'ding' the measuring cup was removed and the black liquid was poured into five small cups.\n\n\"And here we go,\" Tony said, placing bowls of ice cream in front of Scott, Kampala, and in front of May's seat. \"Can Amhara have a little bit?\"\n\n\"Yes sir,\" Kampala agreed.\n\nShe watched Scott take a large spoon of his ice cream and drop it into the steaming cup of black liquid. She followed suit and stared in disbelief as the dark liquid did not change color. A second spoon of the vanilla ice cream did lighten the coffee slightly.\n\n\"Take our French press, make a whole pot,\" Ritchie said, already sipping his coffee. Then pour it into a mason jar.\"\n\n\"Momma puts it in the window, lets it age for three, four days,\" Scott said and sipped his coffee.\n\n\"What we don't drink? We paint the walls with,\" Tony joked.\n\n\"Just about!\" Kampala agreed, sipping the still quite hot, very bitter liquid.\n\n\"My grandmamma? Lived be ninety eight years old; always said it was her coffee keeping her going yeah.\" May said. \"Tony, get the book, huh?\"\n\n\"No, Momma huh? Not the book. Just met her,\" Scott complained.\n\nKampala found a photograph album of Scott, and Becky's and Ritchie's childhood placed in front of her. May, or Tony pointed to each photograph, telling her about the events surrounding the photograph.\n\n\"Halloween? See anything?\" May teased her sons. \"Uh huh? Ritchie's a police man? And Scott's a football player?\"\n\n\"Guess every day's Halloween to them, huh?\" Tony said.\n\n\"And Becky's a ballerina,\" Scott defended.\n\n\"Okay, we going bed. Ritchie, sure you can find you something do,\" May ordered after the last page of photographs was shown.\n\n\"No. Not really,\" Ritchie smirked.\n\n\"Richard Anthony Jeffries,\" May said forcefully.\n\n\"Yes ma'am,\" the police officer laughed. \"Kampala? Great to meet you.\"\n\n\"Uh, yeah, real nice meeting you too,\" Kampala agreed.\n\nMay shocked Kampala with a tight hug. The woman also hugged Amhara and told the sleepy girl she wanted to see her again.\n\nTony smiled and told Kampala he hoped to see her again, and even the bottomless pit two year old girl.\n\n\"Hush you. That child didn't eat all that much,\" May said.\n\n\"I think they liked me,\" Kampala whispered as she and Scott sat on the couch.\n\n\"Well, yeah,\" Scott agreed. \"But, you like them?\"\n\n\"You kidding, right?\" Kampala asked.\n\n\"Hey, Kampala? Listen, you get home and that Darius fellow there?\" Ritchie said, coming into the living room. \"Call me. I'll be right there, or I'll get a few of my brothers in blue out there, okay?\"\n\nWith that, he handed Kampala one of his cards. He then gave Scott a brotherly punch and walked out of the living room again.\n\nKampala and Scott talked quietly; Amhara was sound asleep at the end of the couch. A few touches led to a few kisses and some light petting.\n\n\"Okay, it's getting late and Amhara needs be in her bed,\" Scott finally said.\n\n\"I uh, thank you,\" Kampala quietly said and kissed him.\n\n\"Thank you,\" Scott said.\n\nKampala was relieved to see no sign of Darius when she arrived home. Amhara was fussy as her mother dressed her for bed, but was soon asleep again.\n\nIn her own bed, Kampala did something she rarely did. She masturbated. As she rubbed her slick pussy lips, as she teased her clitoris, she imagined Scott Jeffries making love to her.\n\n\"What time y'all go to church?\" Kampala asked when a sleepy Scott answered his phone.\n\n\"Nine thirty, St. Thomas Aquinas,\" Scott said.\n\n\"Ooh, I got it bad, huh?\" Kampala giggled as she turned off her lamp and drifted off to sleep. \"And he a white boy too.\"\n\nMay and Tony smiled happily when Kampala and Amhara joined them at St. Thomas Aquinas the following morning. Scott looked shocked for a moment, then greeted Kampala with a hug and a kiss.",
        "\"Give me that big girl,\" May demanded, holding out her arms for Amhara.\n\n\"Where's Ritchie?\" Kampala asked after handing Amhara to May.\n\n\"On duty, keeping the mean streets of DeGarde safe,\" Scott smiled.\n\n\"Kampala? After church, we going see Becky. You coming?\" May asked, gently rocking Amhara on her leg.\n\n\"I uh, yeah, that be all right?\" Kampala asked.\n\n\"She's already got her twenty or thirty kids,\" Scott said. \"They'd never even notice we slip Amhara in there.\"\n\n\"Only got her five of them,\" Tony corrected. \n\n\"She, her husband ain't black, huh?\" Kampala asked as the organ droned on.\n\n\"Hmm? No, Timmy's about as coon ass as you can get,\" Scott said.\n\n\"Then I'm pretty sure they'd notice a little black baby in there,\" Kampala smiled.\n\nAmhara loved the farm, even squealing with delight as an aggressive chicken chased her across the yard. The tractor fascinated her and her big eyes got even larger as Anna Bee proudly fired the machine up.\n\n\"Oh God! I got a ton of homework; you even get started on that paper?\" Kampala asked as they prepared to leave.\n\n\"Um, no,\" Scott agreed.\n\n\"Then need ride home with your momma and daddy,\" Kampala smiled, buckling an exhausted Amhara into her car seat.\n\n\"Bye Amhara, by sweetie,\" Scott said, giving the child a kiss on her cheek.\n\n\"By Mr. Scott,\" Kampala said.\n\nScott and Kampala kissed a few times, then Scott reluctantly walked to where his parents were waiting. With a final wave to Kampala and Amhara, and to his daughter and son in law, Tony backed out of the drive.\n\nAgain, after bathing Amhara, after putting the child to bed, Kampala lay in her own bed and masturbated to thoughts of Scott Jeffries.\n\nMonday afternoon, Kampala's phone chirped, letting her know she had a text. She frowned as Darius again demanded to see her.\n\n\"I'm dating Scott now,\" she sent back.\n\n\"So?\" was his response.\n\n\"So, I won't be seeing you, dumb ass,\" Kampala said and sent him a reply.\n\n\"Hey!\" Samuel Trahan, the equipment manager yelled when Darius threw his helmet into a cinderblock wall.\n\n\"Aw, suck my dick, bitch,\" Darius snarled.\n\n\"Fucker, break that helmet, coming out of your pocket,\" Samuel grumbled, carefully checking the helmet.\n\nThe rest of the team came into the locker room, whooping, chattering, laughing. Darius spotted the red headed Scott and marched toward him.\n\n\"Need leave my girl alone, hear?\" Darius snarled, shoving the unsuspecting young man.\n\nThe center and the left tackle did what they were supposed to do and blocked Darius's advance on Scott. Darius found himself sprawled on the industrial carpet.\n\n\"Duncan, you ain't nothing but a loser,\" the left tackle said.\n\n\"Don't make yourself a loser with an ass whipping,\" the center snapped.\n\n\"Guys, thanks, but this is between Darius and me,\" Scott said. \"Listen, Duncan. I asked her out. She ain't said nothing about your ass. So, uh, maybe she wasn't never your girl, huh?\"\n\n\"How you can do me like that?\" Darius said when Kampala answered her phone.\n\n\"How I can do you like what? I seen your ass with that Courtney, no, no, that Lori just other day; figured it was over and moved on,\" Kampala said.\n\n\"Aw man, that crazy ass cracker bitch?\" Darius whined. \"Shit girl! That wasn't nothing, huh?\"\n\n\"Was something to me,\" Kampala lied.\n\nLori was more than happy to see Darius and buzzed him in when he showed up at her apartment. Within minutes of entering the petite brunette's apartment, Darius was balls deep in Lori, was forgetting about being removed from the ULD Storm football team.\n\nAs Darius was fucking the energetic young woman, Kampala was scribbling out the answers to the questions at the end of Chapter 2 in her Earth Sciences class. The moment she'd answered the last question, she tapped the number 4 on her phone.\n\n\"I can see you tonight?\" Kampala asked when Scott answered his phone.\n\nBe right there,\" Scott agreed.\n\nScott played with Amhara while Kampala fixed dinner. Then, claiming he'd already eaten, Scott only had a small plate of spaghetti and meat sauce.\n\nHe helped Kampala bathe Amhara and wrinkled his nose at the small selection of pajamas that the girl had. Kampala and he took turns reading Goldilocks and the three bears to Amhara.\n\n\"Need tell you something,\" Kampala smiled as she pulled Scott into her bedroom.\n\n\"Yeah?\" Scott asked, smiling.\n\n\"Ain't never, I mean, I ain't never done this before,\" Kampala said, slipping out of her blouse.\n\n\"Pretty sure we done this couple days ago,\" Scott said, slipping his own shirt off.\n\n\"No, I'm about tell you something real personal,\" Kampala laughed and kissed him.\n\n\"I been touching myself,\" she whispered, sliding her panties down and off.\n\n\"Oh yeah?\" Scott groaned, looking at the dense thicket of black curls.\n\n\"Been touching myself, thinking about you,\" Kampala admitted.\n\nShe lay down on her bed, spread her legs wide, and slowly rubbed her wet slit. Scott watched, frozen in place as Kampala played with her puffy lips.\n\n\"I rub this, thinking about how you kiss it,\" Kampala whispered.\n\nShe then dug her fingers inside of her pussy, thumb rubbing over her clitoris. Her fingers made light squelching noises as she thrust them in and out of herself.\n\n\"Then I do this, thinking about that big, beautiful dick of yours fucking me,\" Kampala said.\n\nScott was able to move again. He moved forward, knelt on the bed between Kampala's splayed legs and gently nudged his cock against her wet pussy.\n\n\"Mean, like this?\" he husked.\n\n\"Yeeees,\" Kampala hissed.\n\n\"Yes,\" Scott agreed as he pushed himself into her.\n\nKampala's legs came up and wrapped around his waist. Scott leaned forward and kissed her. She returned his kiss, tongue licking sloppily around in his mouth.\n\n\"Mm-hmm, love how you do that,\" Kampala shuddered as Scott gave her several short jabs, then a few long strokes.\n\n\"Yeah?\" Scott wheezed.\n\n\"Mm-hmm,\" Kampala agreed and kissed him again.\n\nScott tilted his pelvis upward, then drove himself deeply within her. Kampala screwed up her face as his cock rubbed against her flesh, excited her flesh.\n\n\"Umm, oh mother fucker,\" Kampala grunted in orgasm.\n\nScott tried to think of his play book, tried to think of his proposed term paper for Alternate History, tried to think of anything but the beautiful face underneath him. He tried to think of anything but the firm breasts, the hard nipples scraping against his chest. He tried to think of anything but the velvet smooth, tight, wet pussy gripping and milking his cock.\n\n\"Fuck,\" Scott hissed; all he could think of was the beautiful girl he was making love with.\n\n\"Uh huh, that's what we doing,\" Kampala giggled. \"Fuck.\"\n\n\"Ugh!\" Scott groaned and pumped stream after stream of semen into Kampala's welcoming pussy.\n\nTwenty minutes later, Kampala asked Scott if he'd like to stay the night. He kissed her softly.\n\n\"Really? Would love nothing more,\" he said. \"But the truth is? My mother would have a fit if I was to stay at a woman's house ain't married to her.\"\n\n\"What?\" Kampala asked, genuinely shocked.\n\n\"Guess I'm a 'Momma's Boy,'\" Scott admitted. \"But as long as I'm living in her house, I'm going live by her rules.\"\n\nThey kissed a few more times as Scott dressed. Then Kampala watched as Scott stuck his head in and checked on the sleeping Amhara. One more kiss at the door and she let him leave the apartment.\n\nThe next time Scott came to their apartment, Kampala smiled prettily. She'd located the far too short cut off shorts, the ones she'd worn the first day of the summer session. She hopped about, wiggling and jerking, and slipped the short shorts on. Her torso was covered, barely, by a tee shirt that was far too snug, far too short, leaving much of her belly exposed, outlining her round breasts and hard nipples.\n\n\"Sure you won't stay the night?\" Kampala whispered as she bent over to pick up one of Amhara's toys.\n\n\"Killing me, woman. You just killing me,\" Scott smiled and she laughed.\n\nAmhara wanted Mr. Scott to read a bedtime story to her. Scott smiled and scooped the child into his muscular arms and carried her to her bedroom.\n\n\"Know what?\" Kampala asked as Scott came out of Amhara's room.\n\n\"No. What?\" Scott asked, watching as she slid the shorts down her dark legs.\n\n\"Even though you all white? I like having you as my boyfriend,\" Kampala smiled.\n\nEven though I'm white, huh?\" Scott asked, hugging her.\n\n\"Uh huh,\" Kampala smiled.\n\n\"Kampala, lights all off? Ain't no colors,\" Scott said. \"There's just two hearts and they beating together,\" Scott whispered, laying her onto her bed.\n\n\"Ooh!\" Kampala agreed as he slid his hard cock into her pussy.\n\n\"One these days? One these days, I'm going do that fine ass of yours, hear?\" Scott grunted, burying his cock into her.\n\n\"My, oh no you ain't!\" Kampala laughed.\n\n\"Uh huh, oh yeah I am,\" Scott promised, reaching down and cupping one of her luscious buttocks.\n\nKampala was quick to orgasm. She moaned and grunted. Then when Scott rolled onto his back, pulling her with him, she grunted some more.\n\n\"Ugh, oh yeah,\" Kampala agreed, wiggling her hips and driving him deep inside of her.\n\n\"Uh, nuh uh, what you doing?\" Kampala laughed when she felt Scott's fingers tracing her tightly clenched anus.\n\n\"You don't worry 'bout what I'm doing. You just go on back what you was doing,\" Scott said.\n\n\"Ugh! That's nasty,\" Kampala protested as he jammed the spittle wet finger into her rectum.\n\n\"Uh huh, good and nasty,\" Scott agreed.\n\nA few moments later, Scott had two fingers thrusting in and out of Kampala's tight rectum. She bounced her pussy energetically on his hard meat.\n\n\"Ugh, oh mother fucker, mother fucker, yes,\" Kampala cried out as she felt Scott's hot semen pumping into her pussy.\n\nKampala passed her Sociology class with a '98' for the semester. And she could cross another required course off the list. She still had not decided what her major was going to be, but knew it would not be Sociology.\n\nThey both passed their Earth Science class with a solid A. They also both passed their Alternate History class with an A apiece.\n\nFor Alternate History, Scott decided to write a paper on the outcome of World War Two, had the D-Day Invasion of Normandy been a failure. The outcome, overall, Scott hypothesized, would have been the loss of the war by Germany, but there would have been much more loss of life. The loss by Germany would have been mainly in part to Hitler's ill-managed invasion of Russia. The US and Allied loss of D-Day would have resulted in all of Europe falling into the hands of the Russians, then would have been assimilated into the Soviet Empire.\n\nKampala wrote her paper on the Civil Rights; what would have happened had there been no Rosa Parks, no Birmingham bus boycott? Unrest was already brewing. Many were rankling at the unfair, uneven treatment of one race against another.\n\nHer Theory was that the civil rights movement would have been much more violent; there would have been no Martin Luther King, Jr. preaching his non-violent resistance. Segregation would have continued for much longer, and there would still be much resistance to integration even into the twenty first century.\n\n\"So, we wouldn't be dating, huh?\" Scott asked as he read her paper.\n\n\"Probably not,\" Kampala smiled. \"We'd be fucking, but you'd just be doing it with me while your white girlfriend sits around, getting all fat and stuff.\"\n\n\"Speaking of getting all fat and stuff, my momma wants know you coming over for supper tomorrow? Having us some stuffed shrimp,\" Scott smiled.\n\n\"Stuffed, how you stuff shrimp?\" Kampala asked. \"But yeah, tell her we be there.\"\n\nFriday afternoon, freshly showered after a sweaty full pads practice, Scott knocked on Kampala's door. She opened the door and kissed him. Then Schott helped Kampala grab everything for an evening out.\n\n\"Scott, my car's over here,\" Kampala said as Scott walked toward his SUV.\n\n\"Hmm? Yeah, it's nice,\" Scott said. \"And my car's right here.\"\n\n\"Yeah, but I got Amhara's car seat,\" Kampala said.\n\n\"Really? I got one too,\" Scott said, opening the rear of his car.\n\n\"You. You bought a car seat? For Amhara?\" Kampala asked, looking at the brand new car seat.\n\n\"Uh huh,\" Scott agreed, buckling Amhara into her seat.\n\n\"I, I don't,\" Kampala stammered as Scott closed the door of the SUV.\n\nShe grabbed Scott in a fierce hug. Then, after a soft kiss, she got into the passenger seat of the luxury vehicle.\n\n\"Maw-maw going be there?\" Amhara asked as they drove to the Jeffries' house.\n\nAmhara had heard Anna Bee and Becky's other children calling May 'Maw-Maw' so she thought that was the woman's name. None of the Jeffries' bothered to correct her. But even though Anna Bee and the other children called Tony Jeffries 'Paw-Paw,' Amhara still called him 'Mr. Tony.'\n\n\"That fine; I know who she talking at yeah,\" Tony smiled.\n\nAt the small home, Amhara was already calling out for Maw-Maw upon their entry. Kampala put Amhara down and Amhara scampered into the kitchen.\n\n\"Aw! And there that sweet little girl!\" May cried out, scooping the child up.\n\n\"Man! Don't never do me like that, huh?\" Tony complained, smiling.\n\n\"Aw! And there that sweet Mr. Tony!\" May cried out and gave her husband a hug and a kiss.\n\n\"Love you, woman,\" Tony whispered, squeezing both May and Amhara in a hug.\n\nOfficer Ritchie Jeffries was on patrol, so, according to Tony, they might actually have enough food. May shushed him and started serving the food.\n\n\"Kampala, you going game tomorrow?\" May asked as she took her seat.\n\n\"Uh, game?\" Kampala asked.\n\n\"That Storm? They playing first game tomorrow,\" May asked. \"Boy, you don't say nothing?\"\n\n\"Connelly Cougars,\" Scott shrugged. \"Kampala, you a student same school I'm going to. How you not know there's a game?\"\n\n\"She got other things think about,\" Tony said, pointing to Amhara, who was trying to figure out how to eat a stuffed shrimp.\n\n\"Want go? We be by, pick you up,\" May offered.\n\n\"Baby, I'm sorry, I honestly thought you knew,\" Scott said.\n\n\"What'd you call me?\" Kampala asked, smiling.\n\n\"Uh, Baby,\" Scott admitted, a hot blush starting.\n\nIn the morning, Kampala looked at the strange phone number in her cell phone's display. She shrugged and answered the phone.\n\n\"Hello?\" she asked.\n\n\"Hey, Kampala; we be there 'bout twenty minutes get you,\" May said.\n\n\"Twenty...what? What time game starts?\" Kampala asked.\n\n\"Twelve,\" May said. \"So, we get there 'bout ten? Then we got us a good parking spot. And there the Couvillions? They always got place next to ours, man! That woman do a good mess that craklin' hear?\"\n\n\"I'll be ready,\" Kampala promised.\n\nKampala found a ULD tee shirt and also put Amhara's hair into two ponytails with a red ribbon and a white ribbon. Amhara was excited to hear that she'd be seeing Maw-Maw and Mr. Tony again.\n\n\"But where Mr. Scott?\" she wondered. \"He going be there?\"\n\n\"Yes, Sweetheart. But he's going be on the field, playing football,\" Kampala explained.\n\n\"Oh. Well, I want play football too,\" Amhara decided.\n\n\"Amhara, those boys are pretty big,\" Kampala smiled, making sure she had two juice bottles for her girl.\n\nTailgating was a new experience for Kampala. She'd heard the expression, and had a vague idea of what it entailed. But Kampala had never desired to go sit in a parking lot with a group of rabid fans, screaming and hooting and hollering. The Couvillions did park next to the Jeffries and the two families swapped food, beers, and tall tales. The Couvillions did not have any children attending ULD, did not have any ties to the school, other than it was located in DeGarde and they lived in DeGarde. But they were dedicated fans.\n\n\"Man! Year that Arville Brodt was there?\" Mr. Tony agreed. \"Man! Now, that boy was something, huh?\"\n\n\"He number twenty seven,\" May said when the gates opened and the Jeffries clan filed into the stadium.\n\nKampala looked, and could see Scott. He had his helmet on, had full pads on, and looked quite large, quite intimidating.\n\n\"And he calls me 'Baby,'\" Kampala smiled and pointed him out to Amhara.\n\nFrom the very first play, it did appear that it would be a rout. The Texas college defense could not stop the run and had only slightly better luck against the pass. The Connelly offense looked bewildered, confused most of the time.\n\nAmhara slept through most of the third quarter and was fussy for the fourth quarter. Even being passed back and forth from Maw-Maw to Mr. Tony to her mommy did little to snap the child out of her fussiness.\n\n\"Guess three hours a bit long for a two year old,\" May suggested to Tony.\n\n\"Hell, it a bit long for me too,\" Tony agreed, getting to his feet. \"Let's go.\"\n\n\"I'm sorry,\" Kampala apologized as they left the stadium.\n\n\"What? Kampala, ain't got nothing be sorry about,\" May assured her. \"You a momma. And that child? That's Momma's first thing.\"\n\n\"Next Saturday, they going be in Texas; we ain't tailgating,\" Tony said, opening the truck for the women. \"So, ain't got worry about that.\"\n\nThe fall semester began. Scott and Kampala had no classes together. Football, football practice, his fifteen hours of classes and Kampala's twelve hours of classes, plus a one hour lab to go with her Organic Biology class seemed to conspire to keep the two lovers apart.\n\nThe few times they were together, though, they made up for lost time. And nearly every Friday, even if Scott was out of town, Kampala and Amhara were at the Jeffries house for supper. May had been genuinely upset the first Friday that Kampala did not come.\n\n\"But, but, Scott's out of town,\" Kampala stammered when May called her.\n\n\"And? We don't eat he ain't here?\" May demanded.\n\nKampala was delighted (although she knew better than to say it) when the ULD Storm was eliminated from any playoff games by the fluke of the Myndee Blue Jays losing to the Connelly Cougars, and the Missouri River State University Pioneers beating the ULD Storm. Practice and games done for, Scott would be home on the weekends. And weekends meant cuddling, kissing, making love.\n\nGordon and Kelly King held a workshop at their home just after the fall semester came to a close. Kampala knew that Happyland Day Care had an overnight program, but before she could even check into it, Scott let Kampala know he, and his father had been roped into babysitting Amhara. The almost three year old girl would be staying at the Jeffries home; Maw-Maw already had bubble bath, and finger paints, and toys thanks to Becky and her brood.\n\n\"But y'all don't got...\" Kampala protested.\n\n\"We don't got to. We want to,\" Scott said, kissing the woman. \"Uh, you forget? We kind of love her?\"\n\nAmhara was in the middle of eating waffles and bacon when Kampala came to pick her up the next morning. In between sticky bites, the child told her mother all about staying with Maw-Maw and Paw-Paw and Mr. Scott.\n\n\"She calling you Paw-Paw now?\" Kampala asked the smiling Tony.\n\n\"Yeah, don't know what happened but she just up and start calling me that,\" the man said, sipping his coffee.\n\n\"Kampala, you want you a waffle?\" May asked.\n\n\"I want me one,\" Scott said, coming into the kitchen, hair still slightly mussed from sleep.\n\n\"I even look like I ask you?\" May asked.\n\nOver her protests, Kampala was served a waffle. Scott was also given a waffle, and a slap to the back of his head. This made Amhara laugh, so Scott got a second slap.\n\n\"You had a good time?\" May asked, now sitting down with her own waffle.\n\n\"The King house is so nice,\" Kampala said, then described the entire evening.\n\n\"Mm, chocolate cake?\" Mr. Tony asked. \"You had chocolate cake? I don't get no...\"\n\n\"And you don't need none,\" May said.\n\nScott and his father smiled, knowing May would make a chocolate cake before the end of the day. Just as Kampala was wrapping up her recounting of the evening, Ritchie strolled in, still in his uniform.",
        "\"Ritchie, you wanting you a waffle?\" May asked, getting to her feet.\n\n\"Momma, eat, huh? Ain't going kill me wait another minute,\" the man said.\n\nHe rubbed Scott's tightly coiled hair. The man surprised Kampala by leaning over the back of her chair and giving her a hug and a kiss to her cheek. Amhara tilted her sticky face up and offered her cheek to Uncle Ritchie for a kiss.\n\n\"How was work?\" Scott asked as Ritchie took a seat at the table.\n\n\"Rough,\" was Ritchie's answer.\n\nKampala looked and saw tears in Ritchie's eyes. She turned and looked at Scott.\n\n\"Want talk about it?\" Scott asked quietly.\n\n\"Don't never become no God damned cop, you hear?\" Ritchie spat, got to his feet and left the room.\n\n\"I go see,\" Tony said. \"Might want wait a minute on making him a waffle.\"\n\nA few moments later, Ritchie returned to the kitchen. May got up and began making a waffle. Ritchie sat down just as Tony returned to the kitchen. Both men had red eyes.\n\n\"Dad decided he'd have a few beers. Had his kids in the car with him,\" Ritchie said quietly. \"He's fine, not a damned scratch on him. All three of the kids? Died on impact. Baby wasn't even in his car seat. That God damned son of a bitch. Too drunk even put his baby in the car seat.\"\n\nScott got to his feet, walked around and hugged his brother. Kampala watched as the two men sobbed in each other's arms.\n\n\"I light a candle for them babies,\" May said, putting the waffle in front of her boy.\n\n\"Yeah, Momma, you do that,\" Ritchie agreed.\n\n\"You like being a cop. Most of the time, right?\" Kampala asked as Ritchie began shoveling the waffle into his mouth.\n\n\"Most of the time? Wouldn't be nothing else in the world,\" Ritchie agreed. \"Most of the time? I love it. I love the uniform, love the job, pride comes with the job.\"\n\n\"And then...\" Kampala said.\n\n\"And then, get calls like this one. Cars ain't made hit columns of the I Ten and survive,\" Ritchie said. \"What about you? Like being a momma?\"\n\n\"I love it,\" Kampala agreed.\n\n\"Like being a student?\" Ritchie asked.\n\n\"I love it,\" Kampala said.\n\n\"Good. You a good, you a great momma. And I'm guessing you probably a great student,\" Ritchie said and finished eating his waffle.\n\n\"Ritchie! How you even taste that?\" May snapped.\n\n\"What? Tasted fine. It was boogers, right?\" Ritchie smiled and kissed his mother's cheek. \"Good night. I'm going bed.\"\n\nChristmas Day, Kampala and Amhara arrived at the Jeffries house just as Timmy and Becky and their brood were arriving. Anna Bee immediately came to Kampala's car to help get Amhara out of the car seat. The girl also helped her parents by herding the seven year old and five year old toward the front door.\n\n\"No,\" Anna Bee snapped when Charlie wanted to stay outside to play with his new football. \"Need see if Santa Claus came here. THEN y'all can go outside and play.\"\n\n\"You not my boss,\" Charlie said.\n\n\"Want go in Time Out?\" Anna Bee snapped, yanking the screen door open.\n\n\"She uh, she know she's not the momma, huh?\" Kampala asked Becky.\n\n\"Want to bet?\" Becky smiled.\n\nSanta Claus had come; the fat guy in the red suit had left each child two presents apiece. And Maw-Maw was in the kitchen, busily making doughnuts.\n\nUncle Scott and Uncle Ritchie also had one present each for the children. So, altogether, the kids had a haul of four presents apiece.\n\nWithin minutes, there were children's faces and hands sticky from the doughnuts, there was a sea of wrapping paper all over the living room, the house was in a mild uproar.\n\n\"Kampala, it like this at your house on Christmas?\" Becky asked, smiling.\n\n\"No ma'am. Santa Claus don't never come to the Projects,\" Kampala admitted.\n\n\"What your family do on Christmas?\" May asked, curious.\n\n\"Drink, get all loud and stuff, fight, sleep it off,\" Kampala admitted.\n\n\"Huh,\" May said.\n\n\"Amhara? What you think of them slippers, huh?\" Scott asked, affectionately tugging on the girl's panda bear covered feet.\n\n\"Tell your Daddy 'They're the coolest!'\" Anna Bee coached.\n\n\"They the coolest!\" Amhara agreed.\n\n\"Anna Bee, Uncle Sottie's not...\" Timmy started to say.\n\n\"Yeah he is,\" Tony and May interrupted.\n\n\"Yeah, he is,\" Kampala said, linking fingers with Scott.\n\n\"Yeah I am,\" Scott said.\n\n\"Well, then. Yeah, he is,\" Timmy shrugged.\n\n*.*.*\n\nGordon and Kelly King sat on the hard plastic seats of the U.L.D. Stadium, politely clapping when other names were called out. When a Nicole King woman's name was called out, they both stood and cheered. There were three Nicole King Scholarship recipients at this ceremony.\n\n\"That's my girl!\" Gordon called out when Kampala Afrika Jefferson's name was called out.\n\nKampala beamed and waved in the direction of the shout. She received the scroll from Dean Sims, then held the scroll up high for her family to see.\n\nAfter a few more speeches, the families were allowed to leave the hot, humid stadium.\n\n\"Mr. King! Mrs. King!\" Gordon and Kelly heard.\n\nThey turned and saw Kampala hurrying toward them. Gordon smiled and held his arms wide.\n\n\"Thank you, thank you so much,\" the young woman said, squeezing the man tightly.\n\n\"Thank you, Kampala,\" Gordon murmured, patting the young woman's back.\n\n\"You're the reason we do the Nicole King Scholarship,\" Kelly said as she too received a hug from Kampala.\n\n\"We having us a party at the house; y'all stop by?\" May asked the Kings.\n\n\"Please?\" Kampala begged.\n\nGordon punched the address into his phone and the GPS immediately started chattering, telling him where to go.\n\n\"Tell it to wait until we get to the car,\" Kelly laughed.\n\nThe house was small, but somehow the Jeffries managed to squeeze Scott and Ritchie and Ritchie's girlfriend Britney Theriot and Timmy and Becky and their seven children and Kampala and Amhara and Gordon and Kelly King in the living room and the hall and the kitchen. Had the Jeffersons accepted Kampala's invitation to the graduation ceremony, accepted the invitation to the party, the Jeffries would have somehow found room from them as well.\n\n\"Yeah, Uncle Ritchie goes to Happyland Day Care to get Amhara,\" Scott was telling Kelly King.\n\n\"And next thing I know, I got this blonde munchkin ready rip my head off,\" Ritchie laughed.\n\n\"Well! I didn't know who you were,\" Britney defended.\n\n\"I mean, look at her,\" Scott laughed. \"She's what? How tall are you Britney? Three? Three and a half?\"\n\n\"I'm four foot ten and you know it,\" Britney shrilled.\n\n\"And my brother's six three. AND has a three fifty seven strapped to his side and this girl's in his face,\" Scott laughed.\n\n\"Thank God Amhara vouched for me,\" Ritchie agreed, squeezing Britney in a one armed hug. \"But I knew this one was the woman for me, hear?\"\n\n\"I keep praying my boys get them a good Catholic girl,\" May said. \"And that? Girl do whatever it take protect her children? Aw cher! Can't get you no better than that, huh?\"\n\n\"Now, Kampala, I asked you this last year, when I got my job,\" Scott said.\n\nRitchie smiled and tightened his grip around Britney's shoulders. May looked up from the chicken and sausage gumbo she was stirring.\n\n\"And you told me I had to wait until you graduated,\" Scott said, pulling out a small box.\n\nKelly put her hand to her mouth. Britney's blue eyes went wide. Becky and Timmy smiled.\n\n\"Well, you're graduated and I'm asking you again, Kampala Afrika Jefferson, will you marry me?\" Scott asked, sinking to one knee in his mother's crowded kitchen.\n\n\"Mr. Tony, you have give me away, and Britney and Becky, you going be my bridesmaids, Miss Kelly, you be my maid of honor?\" Kampala babbled happily, accepting the ring.\n\nTHE END\n\n**Author's Note: I write these stories for my pleasure; I post them here for your enjoyment. I thank you sincerely for reading my stories. \n\nI especially thank those that take the time to leave comments, good and bad, and those that take the time to rate my stories.\n\nI do not, however, read emails. Most that I have read in the past were so venomous, hateful, that most of the time? I simply delete them without reading them. So, want to waste time on a lazy Sunday afternoon? Send emails for me to delete. Otherwise, just leave your hateful, intentionally hurtful rants in the Comments portion of this story for all to read and enjoy.\n\nTo the Anonymous that keeps asking for a follow up story on the white cop-black girl from my story \"Honey, Sweetheart & Sugar\" in the Group Sex category, I've absolutely no plans to write their story. There is no story there. They found each other, they fit together well, they enjoy one another. End of story. But I do thank you for reading my stories, I do thank you for your interest in two minor characters from one of my stories.\n\nIn a world full of different cultures, races and backgrounds, there is no room for racism. Have a swell day."
    ],
    "authorname": "JimBob44",
    "tags": [
        "african-amarican girl",
        "white male",
        "college",
        "interracial romance",
        "unwed mother",
        "scholarship",
        "overcoming obstacles",
        "large family",
        "small town",
        "louisiana"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/good-catholic-girl"
}