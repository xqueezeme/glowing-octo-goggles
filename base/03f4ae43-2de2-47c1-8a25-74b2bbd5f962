{
    "title": "A Twin Desire Ch. 07 - Finale",
    "pages": [
        "This is the final chapter of this wonderful love story. I appreciate all of you who've waited patiently for this chapter. Please rate and comment with any advice you can to help make me a better writer. \n\nI had a good portion of this written soon after the ending of Chapter 6, but I couldn't find a satisfying ending. I don't think I have enough in me to try to continue this story and keep it fresh and real. \n\nOn a personal note, I wrote Brian's character as an extension of my personality. My wife was the inspiration for Barb. Our relationship is full of wit and sarcastic humor. I've been pleased our humor translated well into Brian and Barb's story. I tried to keep everything as real and true to life as possible. \n\nI hope you enjoy this final chapter. I used the same format from the first six chapters. Brian and Barb are written in the First Person. This chapter, I've added some \"Flash Forward\" scenes. Those scenes are written in Third Person. Those flashes are marked to avoid confusion. \n\n**** **** **** **** **** **** \n\n**** BRIAN ****\n\n\"Go ahead. Tell me,\" I said. \"As with everything else, we'll get through this together.\" \n\nShe swallowed hard, took a deep breath, and said, \"I got pregnant.\" \n\nMy life flashed before my eyes. In an instant, I lived through all twenty-one years of my life with my twin sister. I saw myself holding her when she crashed on her bike. I saw us holding our swimming trophies together as mom snapped pictures. I saw all the wrestling matches and tickle fights we had and how we laughed and enjoyed ourselves. I saw her in the crowd cheering for me during my baseball and basketball games. I saw myself cheering for her at her events. \n\nI also saw her crying as we flushed her pet goldfish down the toilet. I saw her pain when our dog was run over and killed. I saw her sad and crying over some dumbass guy who had broken her heart. I saw her pain when I told her we couldn't bear children of our own. \n\nWhat exactly was I feeling about hearing that my sweet sister is pregnant with my child? Was I happy? Was I angry? Did I feel betrayed? Did I feel like the luckiest man in the world? \n\nMy mind was flooded with confusion. My mind went to a state championship football game when I was a senior in high school. Because we lived in a growing community, new schools were popping up everywhere. We started our sophomore year at one high school and finished our junior and senior years in a different school. It was hard for us as we were raised as Vikings and now, we were Wildcats. Our allegiance was torn. \n\nIn our senior year, the football teams from our two high schools were playing for the State Championship. I didn't know who to cheer for. Most of my friends from childhood were still Vikings and playing for the other team. \n\nJust before the half, the Wildcats were driving for a touchdown, which seemed would give them a huge amount of momentum and probably a victory if they were to score. With fifteen seconds to go, the quarterback handed the ball off to the state MVP running back from two yards away. He was met at the line by a friend of mine. The hit was heard by all in attendance. The ball popped free. \n\nMy best friend made the hit, knocked the ball loose, picked it up and ran ninety-nine yards for a game-turning score. The Vikings, MY VIKINGS, not only stopped the Wildcats from scoring, but the boost in morale carried over to the second half and the game wasn't even close. \n\nUntil that hit and score, I'd been sitting on my hands. I didn't know who to cheer for, so I didn't cheer for either team. But when my friend hit the running back causing the fumble, picked it up and ran for the score, I was on my feet, cheering for MY TEAM. I realized that I'm a Viking for life no matter which school I was graduating from. \n\nI realized that I was now cheering for TEAM BRIAN AND BARB! \n\nIt seemed that all these thoughts and emotions played out in slow motion. In reality, a half-second passed. \n\n\"YOU'RE PREGNANT?\" I gasped, a big grin appearing on my face. \n\nI'm not sure Barb was expecting the grin. She looked at me with suspicion and nodded weakly. \n\n\"WOOOOOO HOOOOOOO!\" I shouted and picked her up off the bed to hug her. I was cheering for OUR team. \n\nBarb was dumbfounded. This wasn't the reaction she expected. I picked her naked body off the bed and lifted her to the floor. I led us in a happy dance around the bed. I kissed her and hugged her. I pulled her up into my arms and swung her around the room. Barb started laughing and dancing with me. \n\nWe crashed back onto the bed. I again held her and cheered. \n\n\"Brian, love, are you really this happy about me being pregnant?\" she said wondering how it was possible. \n\n\"Of course, I am, sweetie,\" I said, confused by the question. \"Why wouldn't I be?\" \n\n\"It seems like just yesterday that you were telling me you were against incest babies,\" she said unsure if she should repeat it right now. \n\n\"Well,\" I smiled broadly, \"you weren't pregnant then, were you?\" \n\nShe shook her head. \"No. Why does that make a difference?\" \n\nStill smiling, but more serious, I answered. \"Baby. You're pregnant. With OUR baby. My feelings on the matter haven't changed. I would never have planned this and wouldn't compromise my principles to purposely get you pregnant, BUT ...\" my smile disappeared as I looked deeply, and seriously into her eyes, \"something in the back of my mind was hoping for an accidental miracle. Nothing, and I mean NOTHING could ever make me happier than for you to bear my children. I love you, Twink. I love that you're pregnant with our child.\" \n\n**** **** **** FLASH FORWARD **** **** **** \n\n\"She's beautiful,\" Brian said, smiling and wiping the sweat from Barbara's brow. \"Just like her mama.\" \n\n\"Yes, she is. She has her daddy's appetite,\" she answered as she held their new daughter to feed from her breast. She gently rubbed the tiny girl's head as she suckled. She couldn't take her eyes off this little miracle. \n\n\"I know how she feels. I love sucking those titties myself,\" he joked. \n\nEmbarrassed, Barb looked at the nurse still in the room and rolled her eyes. \n\nThe nurse chuckled. \"Nothing I ain't heard before,\" she said as she continued her work. \n\n\"You embarrassed her, jerk,\" she said looking at him with a scowl. \n\n\"She'll get over it,\" he said. \"How're you feeling, mama?\" \n\n\"Mama,\" she whispered as she filled with pride. She liked the sound of that. She smiled at her husband, her lover, her brother. \"I'm tired. How you feeling, daddy?\" \n\nHe opened and closed his hand several times while wincing in pain. \"Well, once I get the blood flowing in my hand again, I should be fine,\" he answered, an attempt to bitch about how hard she gripped his hand during delivery. \"Hopefully I still have a baseball career left.\" \n\nShowing no signs of compassion, she said, \"If you're too big a pussy to handle a little child-birth transference pain, maybe you should be working at a beauty parlor instead.\" \n\nHe leaned down and kissed her forehead. \"I can always count on you to keep me humble, Twink. I love you.\" \n\n**** **** **** END FLASH **** **** **** \n\n**** BARBARA ****\n\n\"YOU FUCKER!\" I yelled. The dam burst. I started crying tears of happiness. I threw my arms around his neck and hugged the living shit out of him. \n\n\"Fucker?\" he said, shocked, then thought about the meaning of the word and gloated. \"Thanks,\" he grinned.\n\n\"You're not welcome,\" I managed through the sobs. \"Fucker. If you'd told me that before, I would have stopped taking my birth control. Fucker!\" \n\n\"Well, I think that would have defeated the whole 'miracle' thing, no?\" he asked as he wiped my tears. \n\n\"I guess so,\" I said. \"I guess your reaction was worth it. Not at all what I expected.\" \n\nI suddenly punched his arm. Hard.\n\n\"OW!\" he yelled. \"What the hell?\" \n\n\"That's for making me sweat bullets to tell you,\" I said. \"Asshole!\" \n\n\"Okay, maybe I deserved that,\" he answered. I punched him again for good measure. \"I don't think I deserved that one.\" \n\n\"Bullshit,\" I snorted. \"You deserve a helluva lot more than that.\" \n\nHe reached out and rubbed my pregnant belly. \"And you deserve this, my love,\" he said softly. \n\nHe melted me. I wasn't ready to be melted yet. FUCKER! I reached out, grabbed the back of his head and pulled him in for a kiss. This was no ordinary kiss. This was the MOAK. The Mother Of All Kisses. I had serious butterflies when we broke the kiss. \n\n\"Brian,\" I said looking past my tears into his emerald pool eyes, \"make love to me.\" \n\n**** **** **** FLASH FORWARD **** **** **** \n\n\"WHAT?\" she shrieked. \n\nThe voice through the phone repeated her last sentence. \"Mrs. Young, we need you to come to the school and pick up your son.\" \n\n\"Pick him up? Why?\" she asked. \n\n\"He was in a fight,\" came the reply. \n\n\"Is he okay?\" she asked as she grabbed her purse and started digging through it searching for her keys. \n\n\"Well, yes, he's fine,\" came the answer slowly. \"But the other little boy has a bloody nose and lip. We've called his parents as well. He'll be okay.\" \n\nShe arrived at the school and walked briskly to the principal's office. She saw the other boy before entering the office, being attended to by his mother. She knew him and his parents. Too well, unfortunately. His face was covered in dried blood as was the front of his shirt. \n\nShe entered and found her son. He saw his mom, bowed his head in mock shame and looked up at her with puppy-dog eyes. She rolled her eyes and smiled at him. \n\n\"You should be ashamed of yourself, young man,\" the other mother scolded. \"Look at him,\" she said as she gave her son's face a spit bath with tissue from the principal's desk. \n\n\"Easy, Liz,\" she said to the other mom. \"How about I take care of my child and you take care of yours?\" \n\n\"I wish you would,\" she answered. \"He's out of control.\" \n\n\"What happened, BJ?\" she asked her son as she sat next to him. \n\n\"He wouldn't stop teasing Angie,\" he answered. \"I tried to stay out of it until he pushed her down. I'm sorry, mom.\" \n\n\"Never apologize for defending your sister,\" she said then turned to face Liz and her son. \"Is this true?\" she asked. \n\nLiz reluctantly nodded before renewing her indignance. \"He's still out of control,\" she said. \n\n\"Liz, we've had this chat before. If Robbie continues to bully Angie, BJ is going to continue defending her,\" Barb said matter-of-factly. \n\n\"Mrs. Young,\" the principal interrupted, \"we have a zero-tolerance policy to fighting on school grounds. I'm afraid we'll have to suspend BJ for three days.\" \n\n\"Do you also have a zero-tolerance policy for bullying?\" she shot back. \n\n\"Yes, we do. Robbie has been told to stop or face the consequences,\" the principal answered. \n\n\"Wait. My son is getting suspended for protecting his sister from a bully and the bully is being told he should stop before there are consequences?\" \n\n\"BJ started the fight,\" was the answer. \n\n\"No, BJ didn't START the fight. BJ ended the fight,\" she said proudly. \"Now, if this is how you choose to meet out the punishment, you'll be hearing from my husband. You know my husband ... the LAWYER!\" \n\nThe principal frowned and nodded. Her hands, it seemed, were tied. \"Make sure he sues the district. I'm simply following policy, or I'll get fired. Call me as a witness. That's the fight I don't mind getting fired over.\" Liz looked at the principal and scoffed. \n\nShe took BJ's hand and walked toward the door. As she passed Liz and her son, she said, \"Robbie, if you enjoy the sight of your own blood, keep messing with Angie and BJ will keep beating you up. His daddy has taught him to defend his sisters no matter what his consequences are. And being you're in sixth grade and bigger than BJ, who's in fourth, I won't feel sorry for you. Understand?\" \n\nLiz huffed at the words. \"You willfully teach your son that violence is the answer?\" \n\n\"No, Liz. We teach our sons that bullies are cowards and need to be put in their place.\" She walked out with her son in tow. She walked tall and proud. His dad will be so proud of him. \n\n**** **** **** END FLASH **** **** **** \n\n**** BRIAN **** \n\n\"A DADDY! A DADDY! I'M GONNA BE A DADDY!\" I sang as I kissed my beautiful bride. I kissed her lips, her cheeks, her nose, her chin, her neck, her ears, her collarbones, her breasts, her nipples, her abdomen, her belly button, her clit, her labia, her ass. I kissed her entire body as I sang my 'daddy song'. Barb giggled and moaned as I moved my lips around her body and spread love and joy through every inch. \n\n\"You really are excited, aren't you?\" she giggled. \n\n\"Damn right, I am.\" I continued my song and assault on her body. \"I'm gonna fuck your baby body like you've never been fucked, sweetie.\" \n\nShe threw her head back. \"Mmmm, I love the sound of that. I should get pregnant every day.\" \n\n\"Yes, you should.\" \n\nI can't recall being happier in my entire life. I figured reality would slam me upside the head at some point but for right now, I was ecstatic. As I continued ravishing the body of my dear baby factory, I started reliving my childhood. I had a lot of great memories with Barb, Heidi, and Chris. As I settled in licking Barb's scrumptious pussy, I couldn't hold the memories in. \n\n\"Do you remember the day we all went to Rain Canyon when we were kids?\" I asked between licks. \n\n\"Mmmm. Which time,\" she moaned. \n\n\"When I fell, headfirst, into that ravine.\" \n\n\"BRIAN!\" she grabbed my hair and pulled my tongue away from her sex. \"Why the hell would you bring that up? That's not a memory an expecting mother wants to hear.\" \n\n\"Why?\" I asked stupidly, her pussy juices making my chin shimmer. \"We had fun.\" \n\nStill holding my hair, she answered. \"Seriously? Like I want to think of our future kids falling headfirst into a ravine and needing to be rushed to the hospital for stitches?\" \n\n\"Well, if you put it that way, I guess not,\" I said seeing it from her perspective. \"I just remember the fun and why I fell into the ravine. The ER wasn't the greatest but the memories we have growing up can't be beat.\" \n\nShe pushed my face back into her pussy but held on to my hair. \"Yeah. I suppose so,\" she relented. \"But I don't want to think of my kids lying facedown in a ravine, blood gushing from their heads.\" \n\nI looked up at her. \"Why not?\" I grinned. \n\nShe smirked. \"EAT, JERK!\" she ordered and pushed my head back down. \n\n\"Yes dear,\" I mocked her and sucked her clit into my mouth. \n\n\"Mmmm. Fuck. Only you can make me think of bloody kids and make me moan at the same time,\" she purred. \n\n\"I aim to please.\" \n\n**** **** **** FLASH FORWARD **** **** **** \n\nPanic filled his mind. \"Where?\" he asked. \n\n\"St. Jude's,\" the officer answered. \n\nBrian hung up and quickly dialed. \n\n\"Barb, are you with him?\" he asked when the phone was answered. \n\n\"Almost. I'm trying to find the room,\" she answered, panic in her voice. \n\n\"Call me when you know more. I'm on my way,\" he said quickly as he got behind the wheel and turned the key. \n\n\"Don't hang up, honey,\" she pleaded. \"I don't know if I can handle this without you.\" \n\n\"I've got to, babe,\" he answered. \"Not supposed to be on the phone and drive. It's a hefty fine.\" \n\n\"Fuck the law, Brian,\" she said a bit too loud. She noticed people turning to look at her. \"Sorry,\" she said, and she continued searching. \"Put me on speaker and put the phone in your lap.\" \n\nHe pulled onto the highway, turned on the speaker and placed the phone in his shirt pocket. \"Okay, I'm here. Have you found him yet?\" \n\n\"No. This is bullshit, baby,\" she said desperately. \"Nobody knows where he is.\" \n\nHe heard her gasp. \"Barb?\" he said tentatively. \"Barb, what's going on.\" \n\nShe started crying. \"Brian, please hurry. I need you here.\" \n\nNow his panic was in high gear. From the outside, nobody would know the fear he was feeling on the inside. He never flinched in the face of fear. \n\n\"Barb, stay calm,\" he said in a soothing voice. \"He needs your strength right now.\" \n\nHe heard her trying to stifle her sobs. \"I know, babe. But, shit, Brian. He's ...\" \n\n\"I'm almost there,\" he said. \"Be strong for him until I can be strong for both of you.\" \n\nTrevor, their third child, had been hit by a car as he was crossing the road. He was in the ER, in a coma. His battered body lying still as tubes ran everywhere. Of all the beeps and alarms going off, the breathing machine the worst. It made him sound robotic and was a constant reminder that if the noise stopped, their little boy would die. \n\n**** **** **** END FLASH **** **** **** \n\n**** BARBARA ****\n\nI've said this before. One of the things I truly adore about Brian is the little boy inside him who refuses to grow up. The last thing I want is for his sense of fun and adventure to go away. They're the best and most admirable qualities he possesses. His timing is very suspect, however. I guess that's the immaturity of men that women complain about but will do anything to keep it alive. When a man loses that little boy, his dreams and ambitions become little more than a wet dream. \n\nSeriously, though. While he's eating me? And I'm pregnant. I've heard an expectant mother's biggest fear is losing a child. It's real. I love my dumbass. \n\n**** BRIAN **** \n\nFor some reason, Barb's pussy tasted a bit sweeter tonight. Her kisses were better. Her moans were sexier. Everything was more amazing than normal. I treated her body as if I were worshipping at the Taj Mahal. I couldn't get enough. I have no clue how many orgasms she had. I shot my load into her four more times. The sun was close to rising when fatigue finally took over. \n\nI slept in. Late. When my eyes opened, I was in a fog. I momentarily forgot where I was. It took a few minutes to get my bearings. I looked at my phone. Eleven thirty-seven. Wow. I rolled over to get some lovin. Barb wasn't there. My mind wandered back to last night. I puffed up with pride. \"I'm going to be a daddy,\" I said to myself and smiled. \n\nI got up and stumbled to the bathroom. I drained my aching bladder, splashed some cold water on my face, ran some through my messy hair, then stumbled out to find the mother of my unborn child. I wanted some more naked celebration. \n\n\"Good what's-left-of-the-morning, baby,\" I smiled, standing there in my naked splendor. Barb was standing at the stove, still bare-ass naked, and doing the one thing that everyone in civilized society knows NEVER to do; she was cooking bacon. NAKED! It was fun to watch her tits jiggle every time I'd hear a 'POP' as she tried to dodge the flying grease or if it landed on her skin. I started laughing at her. \n\n\"Stop laughing and get me my robe!\" she demanded. \n\n\"Nope,\" I said. \"This is fun.\" I pulled my phone up and started shooting video. \n\n\"You're an asshole,\" she giggled when she noticed. \"Get me my damned robe!\" \n\n\"Nope!\" \n\n\"Please!\" she pleaded. \n\n\"Nope,\" I said again and continued laughing and shooting video. \n\nShe finally pushed the frying pan back to the back burner and jumped away from it. \"Fine! It's done anyway. And you're not getting any. So there!\" She stuck her tongue out at me. \n\n\"Is that a promise for later?\" I asked and batted my eyebrows. \n\n\"Shut up,\" she sneered. \n\nI moved towards her. She yelped and started running from me. We laughed and giggled as I chased her around the small apartment. I could have easily caught her, but the game was too much fun. As I chased her, I was talking. \"Stop running from me,\" and \"You can't get away,\" and \"I am so gonna fuck you when I catch you.\". Meanwhile, she was answering. \"Don't touch me, asshole,\" and \"You're too slow,\" and \"If you touch me with that thing, I'll bite it off.\" \n\nWhen I saw the optimal moment, I pounced. I caught her around the waist and tackled her onto the soft cushions of the sofa. As she was going down, I twisted her body, so she landed on her back and I landed on top of her. Her legs spread perfectly and my cock ground into her clit. I immediately kissed her and pushed my cock harder against her pussy. She tried to fight me off, but her body betrayed her when a soft moan escaped her lips. ",
        "She continued trying to push me off and avoiding my kisses. She was turning her head back and forth and bucking her hips up and down. She knew what she was doing. Each buck of her hips moved my cock closer and closer to her opening. \n\nI continued trying to kiss her while making sure that each of her hip thrusts moved my cock closer to my prize. When the moment was right, I pushed into her. She knew it was coming but still had to catch her breath. \n\n\"Oooooh fuuuuck!\" she moaned. She stopped flailing her head and reached behind my head and pulled me in tight for a kiss. \"Oh, baby. Fuck me. God, I love you. I love you inside me. I love that your baby is inside me. I love you! Fuck me!\" \n\nI kissed her back as I thrust in and out of her welcoming body. \"I love you too, baby. I love that you're pregnant. I love that you're gonna bear my children. Open yourself and let me fuck you.\" \n\nShe stopped. Her eyes widened. She pushed me back to look into my eyes. She studied my face. \n\n\"Brian?\" she finally said with a quivering voice. \"Did you say ... 'CHILDREN'?\" \n\nI smiled at her and nodded. \n\n\"As in 'CHILDREN'?\" she asked again. \"As in PLURAL?\" \n\nI smiled bigger, tears welling in my eyes, and nodded again. \n\nTears formed in her eyes as she smiled back at me and cried. She pulled me back down and started kissing me again. \"I'm so happy,\" she cried. \"Baby, please make love to me and fuck me. I need you to make this real.\" \n\nEven though I'd had four orgasms less than six hours ago, I shot my fifth load into her womb within five minutes as she climaxed and squirted her love at me. It was the most intense five minutes of love we'd experienced to this point. \n\nWhen we both recovered, she was still holding me and kissing me. \n\n\"I don't know what to do with you, Brian Albert,\" she said looking into my eyes. \n\n\"Just love me, Twink.\" \n\n\"I can do that,\" she said softly, staring deeply into my eyes. \"Always.\" \n\nI stared back. \"I'm hungry,\" I said. \n\nShe rolled her eyes. \"Romance is dead,\" she muttered shaking her head. \n\n\"Only if we starve it to death.\" \n\n**** **** **** FLASH FORWARD **** **** **** \n\nThey sat in the lobby, anxious, waiting for the good news. They were all talking and enjoying the closeness of family. Brian sat playing with two grandkids sitting on his lap. The older kids were running around being rambunctious. Barb sat and soaked it all in. \n\n\"This will make our little family complete,\" Barbara said to Brian. \"Our baby, having a baby of her own.\" \n\n\"Yes, babe,\" he answered. \"God. Our last child is having a child.\" He looked at his lovely wife. \"We're officially old.\" \n\n\"I'm not,\" she said. \"You've been there for many years,\" she shot back. \n\n\"Smartass,\" he smiled. \n\n\"Mom. Dad,\" Trevor said with excitement above the noise. Trevor is their miracle boy. He survived the accident and has only a limp, a scar on his forehead, and his crooked smile to show for it. They thought for sure they had lost him. He proved himself much stronger than anyone had given him credit for. He was pointing toward the big doors. \n\nThey all looked as Matt, husband of their youngest, Jeanie, walked out holding a little bundle. He stopped before reaching the group, held his new son up al la \"The Lion King\", and proclaimed, \"All you can see is your kingdom. Someday, son, this can all be yours.\" \n\nThey all laughed as he walked over to Barb and handed the little bundle to his grandma. \n\n\"Oh, my little boy,\" she said as tears formed in her eyes. \"Come see grandma Twink.\" \n\n**** **** **** END FLASH **** **** **** \n\n**** BARBARA ****\n\nWe cuddled naked on the couch for a while, kissing, groping, laughing, giggling. Brian had plans with a few of his teammates a little later but for now, he was all mine. Well, for the moment. \n\nWe heard a light tapping on the door. I looked at Brian and smiled. \n\n\"Shit,\" he said with a smirky smile. \n\n\"Are you home or ...?\" I asked. \n\nHe tilted his head as he decided. \"Yeah, I'm home if you say I'm home,\" he answered. My heart melted. 'What a sweet man,' I thought to myself. \n\nWe both got up and started heading to the bedroom to put some clothes on. \"Just a minute,\" I yelled out to our uninvited, yet not unexpected guest. \n\nBrian threw on a t-shirt and shorts. I grabbed a robe and headed for the door. \n\n\"Hi, Amanda,\" I said when I opened the door and saw our guest. \n\n\"Hi, Bawbie,\" came the reply. \"Can Bwian pway?\" \n\nI had to giggle. \"This is your lucky day, sweetie. Come in and have a seat. He'll be out in a minute.\" \n\n\"Okay,\" she smiled. I closed the door behind her. \n\n\"Why is your haiw so messed up?\" she asked. I heard Brian laugh. 'Because Brian just fucked the shit out of me,' I replied in my head with a snicker. \n\n\"Can you believe I haven't combed my hair yet today,\" I answered. \"Your hair looks so pretty. Maybe you can do my hair so mine can be as pretty as yours.\" \n\n\"My mommy did my haiw. I'm not big enough to do your haiw,\" Amanda answered. \n\nBrian stepped out into the room with a smile. \"Hi, Amanda,\" he said. \"You sure look pretty today.\" \n\nAmanda looked at him and smiled. Her smile lights up whatever room she's in. Amanda is the five-year-old daughter of our neighbor. She's the cutest little blond-haired, blue-eyed peach with an adventurous spirit and personality. Brian has somehow become her best friend. Her seven-year-old brother is usually with her as if he's stapled to her. Both kids are adorable, if not mischievous. \n\nBrian sat down by her on the couch and lifted her onto his lap. \"Where's Evan?\" he asked. \n\n\"Mommy says he's in twouble for putting a fwog in my juice,\" she said matter of fact. Brian and I both laughed. \"It wasn't funny. I scweamed,\" she said with bugged eyes. We laughed harder but quieter. \n\n\"Oh, I'm sure it was scary, but it was a little funny, wasn't it?\" Brian asked. \n\n\"NO! Evan laughed hawd, so I guess it was kind of funny to him,\" she answered with a frown. \n\n\"Look at Barbie. She's laughing. I'm laughing. Maybe you can think it was funny too,\" he tried. \n\n\"I felt sowwy for the fwoggy,\" she said with concern. \"It could have dwownded.\" \n\n\"Guess what, sweetie,\" Brian consoled. \"Froggies don't drown. They love to be in wet stuff, so they can swim and have fun.\" \n\n\"NOT JUICE!\" Amanda protested. \n\n\"Even juice,\" he answered. \"So, guess what?\" \n\n\"What?\" \n\n\"When Evan does something like that again, and he starts laughing, you should laugh too.\" \n\n\"Why?\" \n\n\"Because he did it to be silly and scare you. Everyone thinks it's silly except you,\" Brian said. \"If you laugh, instead of scream or cry, he'll know you thought it was funny and not scary and he won't do it again.\" \n\n\"He won't?\" she asked looking for signs of a lie in Brian's face. \n\n\"Well, he may do it more. Boys like to hear little girls scream. If you don't scream, maybe he'll stop being silly.\" \n\n\"Okay. Maybe I'll twy that,\" she resolved. \"How do you know so much about wittle boys?\" \n\n\"Because, little sweetheart, no matter how big boys get, they always love to hear a girl scream,\" he said as he looked at me with a wink. I wanted to punch him, yet I smiled. \n\n\"Why?\" she asked in innocence. \n\nBrian suddenly went silent. I heard him whispering. I'd been listening to them but was wrapped up in reading something on my tablet. Suddenly, my back was soaked in cold water. I jumped up and screamed. Brian and Amanda started laughing. \n\n\"See?\" Brian said to Amanda, who was now laughing hysterically. \n\n\"YOU CREEP!\" I yelled with a smile. Brian was still holding the empty cup in his hand. The cup had been on the stand, by the couch since last night, half full of water. They laughed at me again. I smiled and shook my head. \n\n\"What do you think? Was that fun making her scream?\" Brian asked. \n\nAmanda was still laughing. \"YES! Can we do it again?\" \n\n\"I'm sure we will,\" he laughed. \"If she didn't scream, would it have been as fun?\" he asked. \n\n\"NO!\" \n\n\"So next time Evan does something to you, what are you going to do?\" he asked. \n\n\"Scweam,\" she answered. Brian gave her a funny look. \"Then waugh,\" she said. \n\nBrian hugged her close to him. \"That's my girl. NEVER let him see you scared. Never let him hear you scream.\" She was hanging on every word. \"But if you do scream and get scared, don't go tattle on him. Laugh about it. He teases you because he loves you.\" \n\nI watched with pride as my husband passed on the wisdom of a daddy. I don't know how many times our daddy said those very words to me about him. And yet, he always makes me scream. But I love it and know he makes me scream because he loves me and is being a playful little boy. \n\nMore light tapping on the door and Evan's voice rang out. \"Manda? Are you in there, Manda?\" \n\nI got up and opened the door. Evan started to walk by me. I stood in his way. \n\n\"What's this I hear about you putting a frog in Amanda's juice?\" I asked in feigned disgust. \n\nHe looked up at me with a little fear in his eyes. Once he saw my face, he knew I was just having fun. A big smile took over. \"It was thirsty,\" he said with a toothless grin. He's lost his front four teeth. \n\nI laughed and heard Brian snicker behind me. Amanda was quick to chime in her two cents. \"Fwoggies don't dwink apple juice, Evan.\" \n\nI heard Brian whisper something to her. Amanda giggled. I let Evan pass. \n\n\"Hi Brian,\" he said with that funny grin. \n\n\"What's up, Evan,\" he answered. \n\n\"Nuthin,\" he muttered then turned to look at me. \n\nI saw it coming but could do nothing to stop it. Nor did I want to stop it. Amanda had the second cup of water and threw it on Evan's back. He screamed and ran across the room to me. When he arrived, he threw his arms around my legs then turned his head to face his attacker. \n\nAmanda started laughing at him as soon as the water hit him. Brian had a big smile on his face. Evan wasn't amused. \n\n\"Why did you do that, Manda?\" he wailed and started crying. Amanda, seeing him cry, stopped laughing. \n\n\"I'm sowwy, Evan,\" she said with a quivering lip. She was about to bust out in tears. \"Bwian said it would be funny.\" \n\nI shot Brian a dirty look. He shrugged and smiled. 'Who? ME?' was written all over his face. What a shit. \n\nI bent down to be at Evan's level. I turned him to face me. \"Did you put a frog in her juice?\" I asked. \n\nHe stopped crying and nodded his head. \n\n\"Did Amanda cry when you did that?\" \n\nHe nodded again. \n\n\"Did you laugh at her when she cried?\" \n\nAnother nod. \n\n\"Do you think it was funny now?\" \n\nHe shook his head. \n\n\"Well, guess what?\" I said. I took his hand, turned a little and placed it on my wet back. \"Brian did this to me before you came in.\" \n\n\"He did?\" Evan asked. \n\n\"Whaddaya think? Instead of crying, should we go get some water and get them back?\" I asked and looked at Brian. His eyebrows raised. \n\nEvan laughed. \"YES!\" \n\nThe race was on. Evan and I ran to the kitchen sink and filled two cups with water as quick as we could. Brian and Amanda trucked to the bathroom to re-fill their cups. We all ran back to the main room at the same time and crashed into each other at the hallway entrance. Water flew everywhere, and nobody came out dry. We all crumpled into a pile and laughed. \n\n\"You kids are so silly,\" Brian said and mussed their hair. \n\nWe spent the next few minutes cleaning up the water mess then played a quick game of 'Go Fish' before sending the kids on their way. \n\n**** BRIAN **** \n\n\"That was fun,\" I said as the door closed with Evan and Amanda on the other side. \"Those two are hilarious.\" I made a stupid face to mimic Evan. \"He was thiwsty,\" I mocked and laughed. \n\n\"Fwoggies don't drink juice,\" Barb said mocking Amanda. We both laughed. \n\nBarb got serious. \"You're gonna be a great daddy, babe,\" she said. \"Kids love you. You love kids.\" \n\n\"If you can keep me from eating my young, I may be okay,\" I said. \n\n\"Eating the young is my job, buckwheat,\" she replied. \"Anyway, it's fun to watch you with those kids. I love how you took the 'daddy' role and passed on your wisdom to Amanda. She needs a daddy figure in her life, poor girl.\" \n\n\"Yeah, she's sweet,\" I said. \"But Evan needs a dad in his life too. Boys need their dad to help them become men. Amanda has her mom. Evan's gonna suffer more without his dad, I fear.\" \n\nWe sat quietly for a while. I suddenly realized it was past time for me to meet up with my teammates. I slapped the table hard, startling Barb. \"I gotta get outta here,\" I announced and got up to grab my gear. \n\n**** BARBARA ****\n\nBrian left to meet his teammates. I felt sad and a little betrayed by his plans but didn't let on. He has an entire baseball season to be with his mates. Why today? Why the first day he knows he's gonna be a daddy? \n\nI quickly transitioned from sadness to anger. 'Asshole!' I said to myself. 'He doesn't care about me.' As soon as the thought hit, my anger transitioned to guilt. 'Seriously? Calling him an asshole? That's MY HUSBAND YOU'RE TALKING ABOUT!' I scolded myself. \n\nMy mind immediately flashed to my mom. WWMD? 'What would mom do?' I asked myself. \n\nIn my mind, I could hear her. \"I'm sorry, dear. I know you want to go with the boys and do boy things.\" \n\nShe always had to comfort me when daddy left me, the tom-boy, behind when he took Brian and Chris camping, fishing, hunting, or other 'boy' activities. I now understand a little better, but it still sticks in my craw that I was trapped at home doing 'girly' things with mom and Heidi. \n\n\"Boys need to do boy things without girls around, sweetie,\" she'd tell me. \"Boys need their bonding time to learn to be men.\" As I matured, I began to understand but it was still frustrating. \n\n'Damn, I'm hormonal or some shit,' I admitted to myself. 'Well, shit. Screw it,' I finally resigned myself to my mundane day. 'I guess I'll clean the damned place. I can't be mad at Brian over a few silly hours to himself on a weekend. He works his ass off to make me happy. This is the least I can do.' \n\nI started flitting around our home picking up, straightening things, putting things where they belonged. I was bored in no time. I was so excited about my pregnancy and that Brian was happy, I was bursting to tell someone. I wanted to announce to the world that I was pregnant, but we decided to wait until we were past the \"risk\" stage when the most pregnancies are spontaneously aborted. The last thing a newly married couple needs is to announce a pregnancy early then hear everyone's congratulations after a miscarriage. \n\nUnfortunately, I spent the week complaining to Vanessa and Jill that I had bad news to tell Brian. They were, of course, extremely curious about what I had to say. Dummy me, without thinking, I promised to tell them after I told him. \n\nI picked up my phone. Jill first. I pushed the buttons. I didn't hear a ring. \"Hi. This is the Jill pill. There's gonna be a beep thingy. If you don't know what to do, just hang up now while there's time to save yourself from the torment of everyone hearing your lame-ass message.\" \n\nI chuckled and hung up. \"Her phone must be dead, as usual,\" I muttered. Jill lives her life on E. Her gas tank is always on E. Her cell phone is always 20% or lower. \n\nI fumbled with the phone to call Vanessa again. \"What's up, B?\" came Vanessa's voice. \"Get laid last night?\" \n\n\"Do you think of anything but sex?\" I asked with a giggle. \n\n\"Only if I have to,\" she replied. \n\n\"Perv!\" \n\n\"You're one to talk,\" she laughed. Good point. \n\n\"Hey, is Jilly with you?\" I asked. \n\n\"Nope. Hasn't come home yet,\" she answered. \"Haven't seen her today.\" \n\n\"Today? Home from where?\" I asked. \n\n\"She spent the night at Scott's.\" \n\n'Shit,' I muttered under my breath. 'Fuckin Scott.' Her boyfriend. \"Is she still hanging out with that dim bulb?\" I asked. Scott was a tall, blond-haired Adonis but his cable cars weren't all attached to the cable. \n\n\"He has a big dick,\" she answered. \n\nI laughed. Everyone knows about Scott's dick. Not from legend. Every party he goes to, he whips it out and shows everyone. It's his only redeeming quality. I'm pretty sure his dick is what makes him so stupid. There's not enough blood flowing in him to supply oxygen to his brain and keep his cock alive, so he doesn't bother exercising his brain. \n\n\"Shit,\" I said. \"I think her phone is dead. It goes straight to voicemail.\" \n\n\"SHOCKING!\" Van replied with dripping sarcasm. \"How could that possibly happen?\" \n\n\"Yeah, no shit.\" \n\n\"Forget Jill,\" she said. \"Did you tell Brian your news?\" \n\n\"Yes, I did,\" I answered proudly. \n\n\"Okay. Good. Spill. What's been eating your puss all week?\" \n\n\"Not Brian,\" I laughed. \"Well, until last night.\" \n\n\"Yeah, yeah. C'mon. What's going on?\" \n\nAwkward moment. Vanessa has been my friend for a few months. Jilly has been with me since we were ten. I had to tell Jill first. \n\n\"I'm sorry, V,\" I said. \"I promised Jill I'd tell her first.\" \n\n\"Fuckin bitch,\" she hissed. \n\n\"That's me,\" I said in an \"Ask Ashley\" bubbly voice, thumb gesture and all. 'What e're thou art, act well thy part,' I said to myself. I think that's a Shakespeare line. Who knows? \n\n\"I'll have her call when she gets here. Until then, gimmie a hint.\" \n\n\"Nope.\" \n\n\"You're a bitch.\" \n\n\"Bye, V,\" I laughed and pushed the button before temptation rose to a level I couldn't handle. \n\n\"Damn it, Jill,\" I muttered out loud. \"Where are you, bitch?\" \n\nMy phone chimed. \"JILLY!\" I cheered. I looked at the phone. \"Mama P?\" I wondered aloud. \"That's weird.\" \n\n\"Hi, Mama P,\" I answered. \n\n**** **** **** FLASH FORWARD **** **** **** \n\nHe lies in bed next to her. He stares at her face as he gently runs his fingers over her forehead and cheeks. He pushes her grey hair back behind her ear. \"She's as beautiful today as I've ever known her,\" he mumbles to himself. \n\nHe leans over and kisses her cheek. Her only response comes from the heart monitor on the side of the bed which momentarily speeds up. He smiles. \"Still got it, don't I?\" he whispers in her ear. \n\nFootsteps approach. He doesn't hear them. He's focused on the woman who bore his four children and raised them all to be great husbands, wives, mothers, sons, and daughters. \n\n\"Daddy?\" Jeanie's voice breaks the rhythm of the heart monitor. \"How is she, daddy?\" \n\nHe looked at their youngest daughter. A grown woman with her own children and grandchildren. She looks so much like her mom. \n\n\"She's fine. Not much time left, I'm afraid,\" he answers and chokes back his tears. \n\n\"Oh, daddy,\" she said with a quiet sob, \"I'm so sorry.\" She reached out and put her hand on his shoulder. \n\nHe reached and put his hand on hers. \"Don't cry, baby girl,\" he replied. \"It's her time. She's lived a long, wonderful life. God is calling her home.\" \n\n\"I'll miss her, daddy,\" she said, her voice breaking. \"But I know it's her time.\" \n\nHe patted her hand and looked at her beautiful face. \"We'll all miss her. But she loaded us up with great memories to ease our loss.\" \n\nJeanie smiled. \"How about you, daddy? Are you okay?\" \n\n\"I'm at ease. I don't want to lose her, but I don't have long for this world myself. I'm glad she's going first. I wouldn't want her to watch me go. I always promised her I wouldn't leave her.\" \n\nShe passed in the night; her children and their families there to love and comfort her as she made the final transition. \n\n**** **** **** END FLASH **** **** **** \n\n**** BRIAN **** \n\nPlaying baseball for fun is much better than all the competition and official practices. Meeting my teammates and some other friends for some friendly play is a great stress reliever. No coaches. No drills. Nothing but a lot of laughter and needling the guys. \n\nWithout anything to stress me today, I found I was playing better than I have been of late. My fastball was crisp and painting the corners. My curveball was breaking hard and tying the batters in knots. I was feeling it. ",
        "\"That's the stuff!\" my catcher, Tom, said after one fastball popped his glove. \"That's the stuff to land you in the majors,\" he said tossing the ball back to me. \n\n\"Right,\" I smirked as I caught it and turned back to the mound. \n\nI took my stance and looked in for my signal. 'Curve?' I shook my head. 'Come on, Tom. I'm throwing fire right now. Save the curve for later.' He signaled for a slider. I shook him off again. It took two more signals before getting to the big dog. I nodded. Another pitch, another glove popper. \n\nWe played for a few hours then most of us met for a burger. I suddenly found myself as the center of attention in \"Who would lead the team in pro scouts this season?\" \n\n\"Dude, if you keep throwing the smoke you were throwing today, you're a lock to be drafted.\" All the guys agreed. \n\n\"If I start thinking like that, I'll screw things up for sure,\" I said. \"You guys are gonna jinx me.\" I was speaking in faux humility. I know I'm good when my pitches are on. I was already a lock for the draft and removed my name from consideration by announcing my intention to graduate college. I tried to be modest but I'm sure my cover wasn't working. \n\n**** BARBARA ****\n\nWhen I answered the phone, I figured Mama P was going to ask me to do something fun for Jill during the upcoming break. I found it a bit weird that she was calling me while I was trying desperately to talk to Jill myself. \n\n\"Hi, Mama P,\" I bubbly answered. She didn't immediately respond. \n\nAfter a few seconds, she finally spoke. Her tone was sullen and sad. \"Hi Barb,\" she said. \n\nI waited a few seconds, my heart pounding in my chest. 'Something is way wrong,' I thought. When she didn't continue, I did. \"Mrs. Anderson, what's wrong?\" \n\nI heard her sniffle and heard sobs. I heard Jill's dad in the background ask if she wanted him to do this. I heard her whisper a faint, \"No. I have to.\" \n\n\"Barb are you sitting down?\" she asked then simply said, \"Please sit down.\" \n\nI was numb. I don't remember if I sat down. I simply asked, \"Mrs. Anderson, please tell me what's going on.\" \n\n\"It's Jill, dear,\" she said and choked up. \"Jill was k ... GOD! Barb, I'm so sorry to be making this call. Jill was killed in a traffic accident last night.\" \n\n\"NO! NO WAY! NO FUCKIN WAY!\" shot out my mouth. \"WHAT? WHAT ARE YOU TELLING ME?\" I skipped the first stage of grief and jumped directly over shock to denial. \"SHE WAS AT MY HOUSE LAST NIGHT! THERE'S NO FUCKIN WAY SHE'S DEAD!\" I blurted. \n\nI suddenly came to my senses. \"OH, MY GOD. I'M SORRY FOR THE LANGUAGE,\" I said in shame. \n\nShe took it in stride. \"I'm so sorry, Barbara. She's gone. My baby girl is gone,\" she started sobbing. I started sobbing. \n\n\"HOW? HOW DID THIS HAPPEN?\" I blurted again. \n\n\"She ... she ... she was ... I can't do this,\" she stammered. Her voice became distant. \"Stan, I can't talk. Please talk to her,\" she said as her voice trailed off. Mr. Anderson's voice came on the line. \n\n\"Barb, we're sorry to call you with this,\" he said. \n\nI suddenly gained a little control of my emotions. 'Shit! I'm being such an asshole,' I thought. 'I'm her friend. These are her parents. They're feeling this much deeper than I can imagine.' \n\n\"Mr. Anderson, I'm so sorry,\" I said through my sobs. \"Please tell Mama P that I'm sorry for my reaction. It wasn't very sensitive of me. I can't imagine the pain she's in.\" \n\n\"Barb,\" he said with a steady, calming voice. 'How do men do that?' I wondered. \"it's understandable. You may not be our daughter by birth but you're family. We can't compare grief. This is devastating news for all of us.\" \n\nI now felt the shock but was regaining my ability to reason. \"What happened, Mr. Anderson?\" \n\n\"Jill was driving on a main road. A drunk driver ran a stoplight and t-boned her. His car hit directly on the driver's side door. The policeman told us his estimated speed was over sixty miles per hour when he hit her. She felt no pain. She died instantly.\" \n\n'That's not comforting,' I thought. \"That's good,\" I said still crying. \"Mr. Anderson is there anything I can do to help you from up here?\" \n\n\"Please call me Stan,\" he said, \"or pops like you always have.\" I realized the news was messing with me. I've never been so formal with Jill's parents. It's always been Mama P and Pops. \"There's nothing to be done right now Barb,\" he said. \"When you feel up to it, maybe you can start letting her friends know. Please don't put anything on social media and be sure your friends don't. We still have our family to inform. We'll be flying up tomorrow morning. We'll call you when we arrive.\" \n\n\"Please don't book a hotel. We have a room you can stay in while you're here,\" I suggested. \"I don't know if Jill told you that Brian and I moved into an apartment. We have a spare bedr ... um ... spare bed for you.\" I almost said bedroom. Did he catch my faux pas? \n\n\"That's very kind of you, Barb. We'll get a room. Aside from not wanting to impose, we'll want to keep to ourselves,\" he explained. \n\n\"Okay, Mr. ... um ... Stan ... um ... Pops,\" I stammered. \n\nI hung up the phone and blankly stared at the wall. I realized I wasn't crying. I realized I was feeling nothing. The shock had most definitely set in. I was paralyzed. I had no clue what to do. \n\nAs I sat staring blankly, my mind wandered back to the first time I met Jill. The first time I saw her was as we both stood up on the starting platforms getting ready to race the first time. I remembered my first thought was 'She can't swim. Look at her.' She didn't have the athletic build of a swimmer. She was a bit pudgy. I didn't take her serious as a competitor and it cost me. I never underestimated her again. \n\nI remembered the first day of school when she was the new girl and feeling very alone. My only interactions with her to that point was swim races. I hated her for beating me. But I was drawn to her. When I saw her walking in the hall looking lost before classes started, I helped her. We had the same teacher. I walked her to class, and we've been best friends since. \n\nI remembered when she started her period. When I started mine. We started just a week apart. We were horrified and yet so fascinated. It was then that Brian became a scab that would never heal; I could never pick. Jill replaced him as my 'go-to' and I began treating him rudely. I felt ashamed by my thoughtless actions. Jill was always scolding me for how I treated him. I knew she had a crush on him which only made things worse. \n\nI smiled when I remembered our first double date. Our first dates. We spent the entire night ignoring our dates and talking to each other. Those two boys thought we were the bomb and tried like hell to get a second date. I laughed out loud at all the creative ways they tried to woo us. Then I cried when I realized nobody would woo her again. \n\n\"WHY?\" I screamed. \"WHY JILLY? GOD DAMN IT! WHY?\" I wanted to break something. The only thing within reach was my phone. I picked it up, pulled it back, and started to throw. I stopped. This was my lifeline. I can't be without a phone right now. The desire to throw something faded. I screamed in anger instead. \n\nI need to talk to someone. I fumbled with my phone. I hit a few numbers and reached for Send. I realized that I was about to call Jill's number. \n\n\"SHIT!\" I yelled. Fuck it,\" I said and hit send. 'Maybe this time she'll answer,' I thought as denial set in. It went immediately to voicemail. I sat crying listening to Jill's voice. When I heard the tone, I left an ill-advised message. \n\n\"What the fuck, Jill? You're fuckin dead? What the fuck? I mean, what the fuck? I need you. Call me. Call me, you fuckin bitch.\" I pushed End. \n\nI broke down and started crying harder. \"That was fuckin brilliant,\" I cried to myself. \"You just left a message for your dead friend.\" \n\nI came to my senses long enough to dial Brian's number. It rang several times before going to voicemail. I hung up. \n\n\"FUCK! FUCK! FUCK!\" I yelled at my husband. \"ANSWER YOUR FUCKIN PHONE!\" \n\nI called Vanessa. She needs to hear this from me. I tried to dial but my eyes were too teary to see the screen. I had to get a tissue to wipe my eyes. \n\n\"Hey B,\" Van answered spritely. \"Ready to spill your guts?\" \n\nHer happy tone and question placed a huge weight on me. 'God, how do I tell her?' I thought. I don't know how long I was silent. \n\n\"Barb? You there?\" she asked breaking my trance. \n\n\"Oh, yeah, sorry,\" I mumbled, then sniffled. \"I ... um ... Van, ... SHIT!\" \n\n\"Barb? What's wrong?\" she asked concerned. I started crying again. \"I'm coming over,\" she said. \n\nI didn't have time to argue. Before I could speak, the line went dead. 'SHIT! I'm a fuckin mess. I don't want her to come over,' I thought. Then I realized her coming over was better. We could comfort each other. \n\n**** BRIAN **** \n\nAfter playing, we met up at the local burger joint. \n\n\"You were throwin some smoke today, B,\" Tom, my catcher, said. \"That's the kind of shit them scouts will be lookin for come springtime.\" \n\n\"I couldn't hit him for shit,\" said Larry smacking me on the arm. \n\n\"Careful, asshole,\" I scolded Larry. \"That's the golden ticket you're messin with.\" \n\n\"You're a shoo-in for the first round, dude,\" Tom said, pushing me nearly off my chair. \"Maybe we can all ride his coattails,\" he said loudly, holding up his beer. All the teammates cheered. \n\n\"Blah, blah, blah,\" I responded. \"I'm just one of you,\" I said trying to act humble. Truth is, I know I'm high on the scouting list. And, yes, today I was throwing smoke. Barring any injuries, I was sure to be playing in the Majors next year. \n\nMy phone beeped. Between laughing and carrying on with the guys, I looked to see the message from Vanessa. \n\n[Vanessa TEXT] \"Brian U need to get home. FAST!\" \n\n\"What the fuck?\" I muttered. \n\n[Brian TEXT] \"What's going on?\" \n\nAll the talk around the table was suddenly a fading blur of laughter and immature jokes as I wondered why Vanessa would be telling me to get home. My phone chimed again. \n\n[Vanessa TEXT] \"BRIAN. GET HOME! NOW!\" \n\nI panicked. 'Did she lose the baby?' I wondered. I stood and pulled five bucks from my pocket. \"Gotta go, boys. See ya tomorrow.\" I walked away as everyone booed. I was hit in the back with bottle caps and wadded up napkins. \n\nWhen I opened the door, I wasn't greeted by the normal sound of loud music and Barb dancing around doing her thing. The apartment was quiet, and darkness hung in the air. I was greeted immediately by Vanessa. \"She's devastated, Brian. She needs you.\" \n\n\"Devastated?\" I asked. \"About what? Did she lose ...?\" I stopped myself before exposing our big secret. \n\nVanessa curiously looked at me. \"Lose what?\" \n\nFlustered, I replied, \"Nothing. What's going on?\" \n\n\"She'll tell you,\" she said and hugged me. \"I'm sorry. If you guys need anything, let me know.\" She kissed my cheek and pushed past me and out the door. \n\nI found Barb in the bedroom sitting on the bed. Her eyes were red and puffy. Even with the red, puffy eyes, she looked sexy as hell. She looked up at me blankly, moved to the edge of the bed, stood slowly, walked over, threw her arms around me, and started sobbing. These were not tears of joy from the night before. These were tears of sorrow, of loss, of mourning. \n\n\"Barb,\" I said confused, \"what's up?\" \n\n\"Brian,\" she sobbed, \"Patsy Anderson called me.\" \n\nThe name didn't immediately register. It took a second for me to realize she was talking about Jill's mom. She's like Barb's second mom. She's called her 'Mama P' for as long as I remember. \n\nWithout fail, whenever we have a break from school, if the Andersons can't afford to fly Jill home, they have Barb and Jill's other friends do something to surprise her and give her a taste of home. Spring Break was a week away. When we drove home for Christmas, Jill's dad probably used two years' worth of savings to fly his family to Seattle instead of flying her home. He's a schoolteacher with limited funds. Jill loved it. \n\nMy confusion grew. \"You talk to her all the time, don't ya? Is she wanting you to do something for Jill for Spring Break\" I asked without thinking and for no good reason. Barb didn't respond. \"Barb, what happened?\" \n\n\"Oh, Brian,\" she started sobbing. \"It's ... it's ... it's ... it's ...\" \n\n\"Hey, slow down. I'm here. Take your time.\" \n\nBarb raised her head to look at me. Her eyes locked on mine. Sadness, fear, and doubt filled her. \"Brian,\" she said, \"Jill's dead.\" \n\nHer words hit me in the face with the subtlety of a sledgehammer. \"WHAT!?\" I gasped. \"HOW?\" I stood in shock as Barb cried and sobbed. \"How is that even possible? She was here last night.\" \n\nThrough her sobs, she continued. \"She was t-boned on her way home last night. She was killed instantly.\" I couldn't console her. \n\nI thought about Jill announcing the vintage year of our 'wine' last night. Then I thought about her serving partner. \"Wait. Vanessa?\" I asked. \"How is she okay? They were together.\" \n\n\"They drove separately,\" she answered. \"Jill was alone.\" \n\nNumbness set in. I walked us back to our bed and sat us down. \"Baby, I am so sorry. I don't know what I can do to ease your pain. Tell me what to do.\" \n\n\"You're doing it. Just hold me and love me. Tell me you'll never leave me,\" she sobbed. \n\nI held Barb as she muddled her way through the events of the day. She snuggled into me as she talked quietly and cried, laughed, sobbed. She spoke of her memories and all the fun things they had done together. She spoke of the heartbreak when their stupid boyfriends hurt them. \n\nMy mind wandered back to my one night of intimacy with Jill. Of all the girls I've been out with, Jill is the only one who could've stolen my heart from Barb. Like Barb, Jill was a protector. She was kind to those in the most need of kindness. She stood her ground to bullies to protect the bullied. I admired her as much as I did Barb. \n\n\"Brian?\" she said lifting herself to look in my eyes. \"Can you tell me something?\" she asked. \n\n\"Sure, Twink. Whaddaya wanna know?\" I replied. \n\n\"This is very personal and may be uncomfortable. You don't need to answer,\" she said. \n\n\"I'll answer anything,\" I said. \n\n\"Back when we returned to school, I had to tell Vanessa about us, ya know.\" I nodded. \"I told Jill too,\" she said and studied my reaction. \n\n\"Oh, really?\" I replied trying to maintain my poker face. 'Does she know about my night with Jill?' I thought. \n\nShe smiled at me. Then laughed a little. \"You're good,\" she said. \"but not great. Good try though.\" \n\n\"She told you?\" I asked, disappointed in my feeble attempt to protect her from the news. \n\n\"She let it slip,\" she nodded with a smile. \n\n'Great. What does she want to know about it?' popped into my mind. \"I'm sorry I never told you,\" I said weakly. \n\n\"It's okay, sweetie,\" she said convincingly. Now it was my turn to study her face. She meant it. \"I'm glad you were there for her.\" \n\n\"It was only one time, babe,\" I said feeling guilty. \n\n\"Hey, hey. No. I don't want an explanation or an apology. You did nothing wrong,\" she said. Again, I studied her for any crack in her sincerity. I could find none. \n\n\"So, what do you want to know?\" I asked almost regretting the question. \n\n\"She said your night together was beautiful. She thought you were a very thoughtful lover,\" she said. \n\n\"Barb,\" I said. I wanted to stop her. \"Where are you going with this?\" \n\nShe paused for a few seconds and made sure she had my full attention. \"It gives me comfort that she experienced love from someone who treated her with respect and love. I'm so lucky that you and I have found our love, but I've felt so guilty that I stole you away from my best friend.\" \n\n\"You didn't steal me away from her,\" I said in protest. She hushed me with a finger to my lips. \n\nAfter a pause, she got to the point. \"Would you tell me about your night with her?\" she asked. \n\n\"I don't think that's a good idea,\" I said with a scowl. \"Why would I want to tell you? More to the point, why would you want to know? Are you trying to torture yourself?\" \n\nShe didn't lose any focus. \"She loved you, babe. She has always loved you. I know you have feelings for her. Until we realized what we have, I always figured you'd marry Jill. I could see it in both your eyes.\" \n\n\"Yeah, I've always had a thing for her but you're asking me to tell you about an intimate night we had. You don't need that right now,\" I pleaded. \n\nBarb pulled herself up and threw her leg across mine and straddled me. She took her hands and cupped my cheeks. \"I know this is strange,\" she said, \"but you've always known how to comfort me and make me feel better. When Jill told me about you and her, she made it clear that you were a perfect gentleman and lover. I'd like to hear how you made her feel; how you made her feel loved and special.\" \n\n\"Barb,\" I started again, looking down and shaking my head. \"I ... I ... I really don't...\" \n\nShe leaned in and kissed me softly. She pulled my gaze up to her eyes. \"Please,\" she begged in a whisper. \n\nI shook my head again, mostly in disbelief than refusing. \"Barb ...\" \n\n\"Please,\" she whispered again. \n\n\"How much do you want to know?\" I asked. \n\n\"Everything, baby. Everything,\" she replied. \n\n**** BARBARA ****\n\n'He's looking at me as if I'm a necro perv,' I thought. I could see the confusion in his eyes. I'm sure I wasn't being clear in my request. \n\n\"What? Are you some kind of necrophiliac?\" he asked, his brow furrowed. \n\nI burst out laughing. Belly laughing. Uncontrollable belly laughing. I collapsed onto his chest, laughing so hard I was hurting. I could feel his confusion as he slowly put his arms around me. That made me laugh harder. Still laughing, I rolled off him and onto my back. Just as my laughter started to die down, I looked at him. He was still confused and looking at me with an amused smirk. I started laughing again. \n\n\"What?\" he blurted. \"What's so fuckin funny?\" he asked and started laughing himself. \n\nI was laughing so hard I thought I'd suffocate myself. I rolled over and swung my legs off the bed and sat with my back to him. I knew if I looked at him again, I would never stop laughing. \n\nBrian was now laughing nearly as hard as I was. Probably for much different reasons. For him, it was probably more of being infected with my laughter. For me, aside from his hilarious question just moments after my silly thought, I needed the emotional release. Even though I was laughing my ass off, I was feeling the grief as hard as anyone who loses their closest friend. \n\nAs I sat there, the laughter, again began to die down. I was suddenly overwhelmed with the grief and began sobbing again. I cupped my face in my hands and sobbed. I felt the bed move and realized Brian wasn't on the bed. Suddenly Brian was sitting by my side, holding me, comforting me. No words. Just his loving arms wrapping me up in his manly strength. I melted into him as he held me, wiped my messy hair out of my face, dried my tears, and planted sweet little kisses on my head. No words were spoken. I felt safe. \n\n\"You know, honey, we probably wouldn't be here, right now, if it hadn't been for Jill,\" he finally said. \n\nI looked up at him and saw he was staring off into space. He was deep in thought. \"Why's that?\" I asked. \n\n\"The night we were ... um ... uh ... shit ...\" \n\n\"Just tell me, baby,\" I encouraged. \n\nHe shook his head, still in disbelief of what I had asked. \"The night we were ... intimate ...\" his voice trailed off as if he was confessing to something he was ashamed of. He looked at me to find my reassuring stare. \n\n\"The night we were intimate; my feelings about it have nothing to do with the physical act. The most memorable thing about it was how we felt afterward.\" He paused and again stared off into space. \"There were no regrets, but we also knew it could never happen again.\" ",
        "\"Why?\" I asked. \n\n\"Well, somewhere in the middle of us making love, we both realized that ...\" He stopped and looked away. \n\n\"Realized ...\" I said while making that 'continue' rolling hand gesture. \n\nHe turned back and looked me in the eyes. Tears formed in his eyes. \"Realized that I was in love with you.\" \n\n\"What?\" I said in shock. When the words came out of his mouth, a thousand emotions and thoughts raced through me. \n\n\"What, what?\" he said confused. \"You wanted to know.\" \n\nComing back to reality, I realized I blurted. \"No, wait. I blurted. I did ... I mean ... I do ... I do want to know. I just wasn't expecting THAT answer. God, I'm sorry.\" \n\n\"No problem. I think,\" he said unconvincingly. \n\n\"What happened that you realized you were in love with me?\" I asked softly playing with my hair. \n\n\"Twink, I'm not going to give you a play-by-play,\" he said sternly. \n\nI punched his arm. \"I don't want a play-by-play. I want to know how you came to know you were in love with me as a 17-year-old. Don't be a dumbass.\" \n\nHe winched and rubbed his arm where I punched him. \"I'm starting to re-think this whole 'love you' thing.\" I started to punch him again, but he knew it was coming and grabbed my arm. \"Okay, okay. I'll tell you. No more punching, Mike Tyson.\" \n\n\"You know I'll bite your ear off, buster,\" I said and snapped my teeth at him. He rolled his eyes. \n\n\"Geez, sis. I don't know how to say this. I mean, this is Jill. Your best friend ... and she's ...\" his sentence lingered for a moment then died. \n\nI frowned and bowed my head. \"I know. She's gone.\" I sat for a few minutes as memories flooded my mind. When we met. Her kicking my ass. Becoming friends. The sleepovers. The boys. The jokes. The pranks. The laughs. The heartaches. The love. \n\nI felt empty and yet, I felt full. We had a friendship that most people will probably never know in their lifetimes. I was grateful. But the loss I felt was severe. \n\nI looked into Brian's eyes again. \"I know I'm asking a lot. Do me a favor. Stop beating around the bush and tell me what happened that you knew you loved me. Please.\" \n\nHe bowed and nodded his head. \"Okay. In the middle of fu... um ... making love to her, I had a moment that hit me really hard. I wasn't making love to Jill. I was making love to you.\" \n\n\"What does that mean?\" I asked. \n\n\"How do I explain this? Um, you and Jill had been friends for so long, you were finishing each other's thoughts. You two became the same person. When we were ... um ...\" I rolled my eyes and gave a knowing nod. \"um ... yeah, that. When we were ... that ... I realized I was thinking about you from the moment I decided to ... um ... yeah ... um ... that.\" \n\n\"Really?\" \n\n\"Yeah, really,\" he said. \"Does that make you feel bad?\" he wondered. \n\n\"No, baby,\" I said and put my arms around his neck, \"it makes me love you more than ever.\" Tears welled in my eyes as I tried to put into words the depth of my emotions. \"Damn, brother, you have no idea how that makes me love you so much more than ten seconds ago.\" I kissed him. Passionately. \n\n**** BRIAN **** \n\nI was nervous as hell. I just told my sister, my wife, my lover a truth that I thought I'd take to my grave. I thought she would be devastated. Instead, she's devouring me with a kiss that was making every part of my body tingle. When she broke the kiss, I looked at her completely dumbfounded. \n\nShe pulled back. Her eyes were down. When she looked up at me, she burst out laughing again. Not hysterically like before. Just a normal laugh. I was now more confused. \n\n\"Oh, my dear, sweet man. You thought I'd be mad at you,\" she said with a laugh. \n\n\"Well, yeah.\" Her laugh turned into a smile as she shook her head at me. She reached down and grabbed at the bottom of my shirt and started pulling it up. \"Barb, what? What're you doing?\" \n\n\"Baby,\" she said as my shirt came over my head, \"I want you inside me, on top of me, holding me, comforting me, loving me. I need you to make love to me.\" \n\n\"Are ... are you sure,\" I asked. Her best friend just died. Is this normal behavior? \n\n\"I've never been more sure of anything. I need your touch. I need your closeness. I need you spiritually, mentally, and physically.\" \n\nMy shorts hit the floor as she finished. She stood and was out of her clothes in a half-second. She crawled onto the bed, laid down on her back, and nodded at me. \n\n\"Brian, honey, make love to me, sweetie. Dive down into the depths of your soul, find every drop of love you have for me and put it inside me. I need to feel every part of your love. Please.\" \n\nI needed a bit of time to reach the 'depth of my soul'. I snuggled in close to her, wrapped an arm around her shoulders and threw a leg over her hips. My mostly erect cock pressed against her thigh. I kissed her cheek, turned her head and kissed her softly on the lips. \n\n\"Do you know how much I love you, Twinkie?\" I whispered. \n\nShe nodded. \"Yes, but I need to feel it, babe. Please don't wait. I know you're thinking that I'm outta my mind and that I may be expecting a lusty roll in the hay. No, honey. I want to feel you love me. I trust you to give me exactly what I need right now.\" \n\nI nodded and rolled over on top of her. She spread her legs, reached between us, and guided my cock inside. I pushed in slowly. \n\n\"Oh, my God, yes,\" she moaned as I pushed into her. She closed her eyes as tears rolled down the sides of her face. \n\nI was hovering over her with my hands holding me up. When I was fully inside her, she reached up and put her hands around the back of my neck. She softly but firmly pulled me down onto her. She closed her legs and shifted my legs over hers. I spread my legs wider, but she put her hands on my thighs and stopped me. \n\n\"No, babe, I want your entire body on me,\" she whispered as she pushed my legs on top of hers. She reached up, took my hands, and guided my arms up and to the side of her head as if I was pinning her arms down. My body was fully on top of hers. \n\nI realized what she wanted and needed. It was my turn to take over and give it to her. With very little movement from me, I started sliding in and out of her by mere centimeters. I then began whispering to her. \n\n\"I want you to focus on every part of your body as I move. Can you do that?\" Her eyes were closed, and she nodded nearly undetectable. \n\nI wiggled my toes on top of her toes. \"Focus on my toes. Can you feel them?\" She nodded. \"Can you feel them tickle your toes?\" She smiled weakly and nodded. \n\nWithout moving any other part of my body, I softly caressed her toes with my toes for several minutes. I watched her face. She looked peaceful. \n\nI stopped moving my toes and started lightly rubbing her fingers. \"Can you feel my fingers?\" It took a moment, but she nodded lightly. \"Focus on your fingers.\" \n\nAfter a few minutes of rubbing her fingers, she broke out in a little smile. She opened her eyes and looked at me. \"My God, you're beautiful,\" I whispered. \n\nShe smiled as she stared into my eyes. She looked like she wanted to say something. \n\n\"What?\" I whispered. \n\nIn a sultry whisper, she said, \"I can feel your cock throbbing inside me.\" She giggled. \n\nI had been so laser-focused on what I was doing to her that I didn't realize my cock was harder than I could remember it ever being. I was, indeed, throbbing inside her. I smiled back at her. \n\n\"Did I say to focus on my cock?\" \n\n\"You didn't have to,\" she purred. \n\nI realized this was what she needed. Nothing more. Nothing less. She needed me. I needed her. We lie in the dark, in the quiet, in the still of the night. We fell asleep, connected physically, mentally, spiritually, lovingly. \n\n**** BARBARA **** \n\nThe next several days were a blur. I don't remember much as I was in a fog of disbelief and shock. Brian was my rock. Without him, I'm not sure I would have made it through it all. \n\nWhen we woke up the next day, he was still holding me. I felt safety and comfort in his arms. For a few minutes, I forgot about Jill and simply reveled in my love for Brian. When reality hit me, I started crying again. Brian wiped my tears and did his best to be strong. I knew he was hurting too but I didn't have much in my tank for him. \n\nAfter what felt like an eternity lying in his arms, he pulled the blankets down, rolled over and off the bed, went to the bathroom, walked around to my side, and held out his hand. \n\n\"Come with me,\" he said, his naked body calling to me. I took his hand not knowing where he was taking me. \n\nHe helped me out of bed and walked me into the bathroom. He sat me down to pee, reached into the shower, and turned on the water and adjusted the temperature. When it was right, and I was finished, he helped me in and followed. \n\nBrian has always loved fucking me in the shower. Quite frankly, I wasn't in the mood. \n\n\"Brian, honey, I'm not in the mood for this today,\" I said hoping I wasn't being rude. \n\n\"Shhhhh, baby. I've got this,\" he said. \n\n\"Seriously, Brian,\" I said more sternly. \n\nHe didn't respond verbally. He put a finger over my lips. I decided to trust him and nodded. \n\nWhat happened next was magical. When he followed me into the shower, he positioned himself with his back to the stream. After I nodded my approval, he turned us, so the stream was flowing on my back. He placed his hands on my face and lightly kissed me. \n\n\"I'm going to take care of you today, Twinkie,\" he whispered in my ear. \"I'm gonna wash your sorrows away.\" \n\nHe lightly pushed me further into the stream until the water was cascading down my shoulders. With his hands, he began lightly following the path of the water down my back. He bent down to trace to path all the way to my feet. He stood up straight and tilted my head back. The water flow permeated my hair and tickled my scalp. He ran his fingers through my wet hair as he kissed me. \n\nHe pulled me forward while reaching for the shampoo. I closed my eyes as I anticipated his loving touch. I heard him rub his hands together, then felt him lightly rub the shampoo into my hair. I put my arms around his shoulders to keep from falling as I suddenly felt faint. \n\nHe slowly massaged my scalp, shoulders, neck, and cheeks with his soapy hands. He avoided my eyes, nose, and mouth as he massaged my entire head with his talented fingertips. He kissed me as he caressed my head, then moved his soapy hands all over my body. His touch was light and sensitive. My body tingled everywhere his hands touched me. \n\nHe paused for a moment as he squirted some body wash into a loofah then continued to clean my entire body. He didn't miss a square inch of me, inside or out. When I was completely covered in suds, he finally spoke. \n\n\"These suds are your sorrows, sweetie. When I rinse you, I want you to watch your sorrows go down the drain. When the last of your sorrows are gone, you're going to feel much better for the rest of the day.\" \n\nI felt his words in my soul. I felt the suds of sorrow covering my body. I couldn't help it. I started to cry. He kissed me. I cried harder. \n\nHe unhooked the handheld showerhead from the wall, tilted my head downward, and slowly started rinsing my hair. He did his best to keep the water from rinsing my entire body all at once, but stray streams ran down my back. I felt each stream with intensity. I could feel the suds sliding slowly down my skin. \n\nWhen my hair was rinsed, he started rinsing the remainder of my body starting with my shoulders, breasts, and back. He rinsed small parts of my body and did it slowly so I could feel every part of my body being cleansed. He was right. I stood with my head bowed, feeling the suds run down to my feet, and watching them form and disappear into the drain. As each part of my body was rinsed, I felt lighter as my sorrow flowed from my body. \n\nOnce finished, he turned the water off and reached for a towel. He slowly and methodically dried my body. I loved feeling his strong hands on me. He dried himself and walked me back out to our bed. He went back and found my favorite body lotion and took his time applying it. When he finished, I felt better, but I was drained of all energy. \n\nHe slipped panties over my feet, then a nightshirt over my body. He gently laid me down and snuggled up to me. He held me tight as I fell asleep. \n\n**** BRIAN **** \n\nBarb slept peacefully for the next three hours. During that time, I took all the noisemakers out of the room. Jill's parents called and I set up a time in the afternoon for us to meet with them at their hotel. Vanessa stopped to check in on Barb. We spent some time remembering Jill. I held her while she cried. \n\nVanessa had just left when Barb wandered into the front room. She said she felt better, but she didn't look it. She smiled, sat down on the sofa, and thanked me for the shower and the peaceful sleep. I fixed her some pancakes even though she said she wasn't hungry then watched as she picked at them with her fork. She ate a little and it was time to meet Jill's parents. \n\nI did my best to support Barbara through the time leading up to the funeral and then dealing with the loss of her best friend after the funeral. It wasn't easy. Jill wasn't just her best friend. She was a teammate. Everything Barb did outside our marriage was tied up with Jill. Everything reminded her of Jill's loss. \n\nShe thought about taking a redshirt year hoping to get past her grief. As the baby grew inside her, she realized her commitment to the team and getting back in shape was coming in behind her desire to be a good mom. She gave up her scholarship and focused on becoming a mother. With her sports career in the rearview, she quickly recovered from her depression. \n\nWe both finished our education and I was drafted into the Major Leagues. We were lucky that Barb could focus on being a stay-at-home mother while I played an eight-year career. We were smart with our money, and I was able to get most of my law school out of the way as I played baseball. Two years after I retired, I passed the bar and had a successful career as a real estate attorney. \n\nI can look back on our life together and thank God that Jill was in our lives. Our lives were a fairy tale until Jill's passing. The lessons we learned from her passing served us as we had to grow up and face hard choices. We learned that to have a successful marriage, we had to deal with the curve balls life threw at us. When our son was hit by a car and nearly killed, we were equipped to deal with the pressure. We always figured out how to come together as a family. Our tragedies always brought more love and closeness. \n\n**** **** **** FLASH FORWARD **** **** **** \n\nAngie, their oldest, sat by his bed, singing and speaking softly to him. Two days before, he was lying beside his beloved wife as she prepared to depart this world. Even at ninety-one years old, he was so healthy and alive. The next day, he was hit with a devastating stroke. The family likes to believe that this was God's way of letting him go without the enduring pain of living without his soulmate. They were grateful for the painless transition he would make. They also wondered how so much sorrow of losing both parents two days apart could be absorbed. But inside, they all felt peaceful. \n\nHis hand was warm to the touch as she gently squeezed. She marveled at how strong he was even now. His breathing was becoming ragged as he moved closer to the end. His grip was firm but tender as she lovingly held his hand. His eyelids covered his once glistening eyes. A tear formed in the corner then flowed idly down the side of his nose and disappeared. \n\nJust moments before, his voice cracked, tired and low, \"Twinkie, Twinkie, you're my star...\" then faded away. It brought happy memories to their hearts and tears to their eyes. \n\nDaddy was always singing his \"Twinkie\" song. He rarely used the same lyrics twice. Sometimes he was romantic. Angie remembered as a little girl sitting on mom's lap when daddy called from one of his road trips. She could hear him when mom answered ...\n\nTwinkie, Twinkie, you're my star.\n\nHow I love you from afar.\n\nShe remembered giggling. She also remembered how mom smiled that smile she only saw when mom thought about him. \n\nSometimes he was silly ...\n\nTwinkie, Twinkie, you're my star. \n\nWhy'd you eat my candy bar?\n\nSometimes he used it to break the tension of a difficult situation ...\n\nTwinkie, Twinkie you're my star.\n\nWhat's up with that big dent in the car?\n\n\"Daddy,\" Angie whispered as her tear fell on his cheek, \"it's time. Go be with mama. She's waiting for you.\" \n\nIn turn, BJ, Trevor, and Jeanie leaned in, kissed him on the forehead, and whispered their tearful goodbyes. His grandkids, all 10 of them with their spouses and children, and the great-grandkids, stood in the background, either staring at the scene in front of them or chatting quietly. Each of them was called forward to say their final goodbye to their beloved grampa. \n\nAs the last of them finished, his younger brother, Chris, the last of his surviving siblings, stood slowly and made his way to the bed. The weight of the occasion fell upon him as he took a hand and whispered what would be his final words to his big brother. \n\n\"Brian, I can't begin to tell you how much you've meant to me my entire life. You've been the best big brother. Even Heidi would tell you the same thing if she were here. You are so loved by all who know you. Look at your legacy, brother. You and Barb have created something to be proud of. It's time to go now. Barb is waiting. I love you, bro. Go in peace.\" \n\nTen minutes later, he was gone. \n\n**** **** **** **** **** **** \n\nSPOILER ALERT. DON'T READ THIS IF YOU HAVEN'T READ THE STORY YET. \n\nThank you for reading. I apologize for any errors you may have found. I have stressed about this chapter for so long, I was more interested in getting it done and posted than I was with perfection. With my health issues, this chapter has simply taken too much energy. I not only needed to finish the story, but I also needed my own closure. \n\nI wanted to go into much more depth with the emotions of facing Jill's death. I mentioned at the top that I had most of this chapter written soon after I finished chapter 6. When I added Jill's accident, I wasn't prepared to deal with my own emotions from losing a good friend, in the same way, a few years ago. I hope I reached a suitable depth of emotion. \n\nMy health issues cause a lot of fatigue. Dealing with sad and negative emotions makes that fatigue much worse. I could only work on this chapter when I felt a lot of energy, which isn't often. Then I could only work on it for 15-30 minutes at a time. I hope you can forgive me for not delving deeper. \n\nPerhaps, I will continue working on the chapter and submit an edited version sometime in the future. For now, this version will have to suffice. \n\nTHANK YOU ALL FOR YOUR SUPPORT! I LOOK FORWARD TO YOUR FEEDBACK."
    ],
    "authorname": "marriedheat",
    "tags": [
        "fucking family",
        "incest",
        "love",
        "romance",
        "secret love",
        "sibling love",
        "sister brother",
        "taboo",
        "twins"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-twin-desire-ch-07-finale"
}