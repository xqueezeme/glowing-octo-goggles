{
    "title": "The Society Ch. 04",
    "pages": [
        "I have a little explaining and an apology to make. The last installment of The Society, called The Society part 4 was uploaded by mistake. If you are following this story you will find that the first part of this installment is very similar to part 4. Please take this story for what it is, parts 1 through 3 and then followed by this installment, part 5. Sorry about the mistake but part 4 was a draft that mistakenly got uploaded instead of this installment which is the finished product. Please enjoy this installment and as always please feel free to write with any comments.\n\n*\n\nPreparations for the madam hosting The Society's annual gathering were intense, especially for her concubines and sissies, even a full two months out. The Supreme Madam changed every few years and during a year when the supremacy changed lands the sitting madam always hosted this event. Serena, Corinna and I had been working like dogs to get things ready. The mansion was enormous but wouldn't hold all the participants which consisted of the entirety of The Society, so beds had to be brought in and rooms rearranged to make the crowd's stay a comfortable and most importantly elegant experience. Our estate was set up pretty well for the event. The large mansion could hold about half the members while Jodi's and Kathleen's smaller yet very opulent mansions on either side of Catherine's would handle the rest of the guests. We were working with Jill and Michelle, the two madams' concubines to turn the three estates into what amounted to a campus.\n\nToday, Serena and Corinna were taking a sort of break from our chores heading out to an antiques auction with Madam Tyffany and her sissy, Heidi to find if they could discover anything interesting pieces for the event. Tyffany had a well earned reputation as an expert with a strap on, using it with effective skill on both females and sissies alike. I noticed the silver Mercedes pull up our driveway. I could see Heidi and her sandy red hair behind the wheel. I opened the front door and watched her open the car door for her Madam. Both of them were so incredibly well built. It was hard not to get excited at the thought of being trapped in Tyffany's bedroom or dungeon with the two of them.\n\n\"Why Carey! So efficient you've opened the door for us without the need for a bell.\" As usual Tyffany had a smile on her face and was effusive in her aristocratic dialect.\n\n\"We put in an effort for our best friends.\" I called to them as they walked up to the large portico.\n\n\"Poor little sissy. You have to wear your maid outfit. At least you're in one that'll get you laid. Who is on tap for you to tap today?\" Heidi commented in her rich husky voice.\n\n\"Oh this little thing? I'm just working today.\" I was wearing a nylon and black leather basque that attached to a pleated leather skirt. Underneath, garters attached to Eleganti full fashioned silk stockings. I smiled as Heidi ran a finger along the sheer nylon portion of the basque. During the dinner party Catherine had called to discuss the situation with The Black Rose, she had commanded over a glass of wine that Heidi and I put on a show, since our wrestling match many had figured that we were an item. We ended up 69ing on the dining room table while the Madams in attendance cheered us on. I was so impressed with the redhead's body. It was taut and sinewy with muscle yet so smooth and feminine it was like touching warm glass. I thought that the only reason that she didn't beat Corinna or Lena on the mats was that at about 5'-7\" she was a bit smaller than the two amazons. Today everyone was dressed casually and Heidi was wearing jeans and a backless body shirt that showed off her toned back and arms. Like about a dozen others in The Society I was quickly developing a serious crush on Heidi.\n\n\"No one dresses like that to feather dust the furniture. If Madam Catherine put you in that you'll be on your back while we're picking out cushions and chairs. Still, wish you were coming along.\" Heidi leaned in and gave me a long kiss on the lips and waved as she walked out.\n\n\"Good luck with Madam Sinn.\" Serena gave me a hug and a kiss as she walked by to join the others in our parking area.\n\nSerena's attitude towards me had changed from night to day and as a result my life had become so much less stressful. It showed in my work for my Madam and the house and in my efforts to become better adjusted sexually as a transvestite. During the many dinners and social events held between the madams and their families I was running into black studs that had become more and more attracted to me. Now I was regularly having sex with the male members of The Society and they were leaving very satisfied. I had competed in a couple of wrestling events and had won with my only loss being that first to Heidi. I was beginning to flourish under Catherine's tutelage.\n\nI watched the car pull away with a tinge of jealousy. I knew a day with Madam Tyffany meant a nice lunch with at least a couple of glasses of wine, a tour of a few antique stores and art galleries and maybe a stop for another glass on the way home, a very enjoyable day. Instead I was going to be the maid on duty when Catherine met with Madam Sinn to discuss strategies for the upcoming Supreme Madam election. I was also going to entertain two of Madam Sinn's people as the women talked. Sarah was Sinn's concubine and for all intensive purposes the black woman's partner and a young man who had recently joined Madam Sinn as a stud. If reports from women who had sampled this young African were true he was raw but extremely handsome, virile and a sexual athlete beyond his years.\n\nFor several years, Sarah, the prim and proper brunette was a seasoned concubine on the verge of being bestowed with the ultimate society prize, being named a madam. Yet there was another concubine up for a madamship. She was a hard charging slut who had broken the color barrier becoming the first black woman to join The Society. Sinn had climbed the ladder quickly showing a particular skill at enticing black men into The Society. Further she was very good at finding studs who were comfortable handling confident white women, women who were used to getting their way. Most importantly she found men who would allow and actually enjoy having a pretty white boi suck their cock and have no qualms about mounting and fucking the fairer and more feminine male. In short, Sinn was a wizard at convincing a bisexual black man who may have been fucking feminized white bois on the down low and train the black man to give the white bois what they so richly deserved totally uninhibited and in front of The Society.\n\nSinn met Sarah a party, an event actually put together to show them off as potential Madams. For the black woman it was love at first sight. While Sarah was bisexual she had plans to have a stud and a sissy under her once she was a madam. Sinn took it slow but in the end she seduced Sarah and at first gave her a couple of nights of utter sexual bliss. The relationship blossomed from there and they became lovers with Sinn assuming the role of the dominant partner. Sarah was so taken that she actually gave up her place to become a madam to become Sinn's concubine. More than anything, the madams appreciated a woman who knew how to get what she wanted. This personality trait was the hallmark of any dominant madam and Catherine, in particular, admired the black woman's moxie and the two became close. Now Catherine was pushing Sinn ahead of another friend, Gerri, to lead The Society. It was easy to see how many had come to the conclusion that Catherine was as Sarah had become Sinn's bitch.\n\nThe doorbell rang and I opened it to find Madam Sinn, Sarah and their newest stud, Quetto standing on our large portico. Both women were dressed in tight fitting summer business suits. Meanwhile the young stud was wearing a black blazer, leather pants and a white low neck tee shirt underneath. He was incredibly handsome and I could tell by the way he was standing he knew it.\n\n\"Good afternoon. It's nice to see you again Madam Sinn. Let me show you to Madam Catherine.\" I smiled brightly in order of rank at Madam Sinn, Sarah and a sideways glance at the irresistibly gorgeous young black man in leather pants. He caught my look and smiled knowingly. I led the small contingent through the foyer and into the living room.\n\n\"I have to say Carey that since the last time I saw you and now, today...well you look spectacular. Now Quetto, you see that is what a sissy in The Society is supposed to look like. Interested?\" Madam Sinn complimented me and then turned to her newest stud.\n\n\"You certainly have a point Madam. This is a very pretty white boi. The best I've seen since I've joined but still, without a pussy...\" Under normal circumstances the black man would have been considered to have overstepped his bounds speaking to a madam like that but he was young and fresh having only been with Sinn for a month and on top of that so damn sexy my tucked prick was filling with blood just looking at him.\n\n\"Why don't you show me to the library Carey. Catherine has set aside a couple of books for me.\" Sarah interrupted the young black man.\n\n\"Yes, of course, I know exactly where they are.\" I responded.\n\n\"And how is everyone today?\" A smiling Madam Catherine emerged from the back of the mansion wearing a summer weight khaki business suit, the skirt short enough to show off her long sleek legs.\n\n\"Good morning Catherine. It's wonderful to see you.\" Sinn responded with the genuine smile of a close friend. The two madams kissed on the lips.\n\n\"Sarah it's so nice to see you.\" Catherine stepped over and gave the brunette an equally passionate kiss. \"And I see that the hits keep coming Sinn. Is he as good as he looks?\"\n\n\"Oh very much so, just ask Sarah, she broke him in. And as you've no doubt already heard Madam Valerie still can't get her toes uncurled after an afternoon in the saddle.\" Sinn replied with a wry smile.\n\n\"That particular session was described to me in exquisite detail by the aforementioned madam. I very much trust my Valerie so this is at the top of my to do list in the not too distant future.\" Catherine nodded towards the African.\n\nMeanwhile Quetto seemingly used to the lecherous discussions in his presence was spending the conversation checking out both Catherine's and my legs. I gave him a knowing glance and then walked with Sarah to our library. The room was large and filled with books read and written by Catherine as well as other society members. My madam had written a plethora of manuscripts and how to manuals on female dominance, feminizing a male, turning your cuckolded male into a cocksucker and a host of other related subjects. Everyone in The Society with an expertise including Madams Catherine, Valerie, Elizabeth, Paula and even Diane from The Black Rose wrote about their specialties and they were all on display in this library along with books full of erotic artwork, pictures of transvestites in various stages of feminine dress and of course hardcore bondage pictures all available for exploration by the residence and any guests of the mansion. Even sissies read up on how to apply makeup and dress and act like a woman. Sarah took a seat in one of the comfortable leather chairs and picked up one of the three books that were on the table.\n\n\"Thanks for bringing me here. I can't wait to dig into these.\" Sarah nodded towards the books on the table.\n\n\"No problem Sarah.\" I smiled at the brunette who, with her wire rimmed glasses looked quite at home in the library.\n\n\"You know that you really are beautiful. There hasn't been a sissy like you transformed in quite some time.\" Sarah smiled.\n\n\"You're very nice. That means a lot now that I've accepted who I am in The Society.\" I thanked her for her compliment and was about to leave when Sarah continued.\n\n\"You must know by now that you can't get by on just killer legs and a pretty face.\" Sarah told me with a smile.\n\n\"Well from what I've seen just about everyone has great legs in The Society. I've also been asked to become a superior cocksucker and a nice lay and trust me, I'm working on perfecting those skills as often as possible.\" I returned with a wry smile knowing that Sarah could handle the satire.\n\n\"And as I've said, having a nice ass will only get you so far in The Society. We have more than our share of feminized white bois who feel that spreading their legs for any and all studs and groveling at the feet of their madams are their only chores. Carey there's a lot more to fulfilling yourself in The Society, just look at your sister, Corinna and Valerie's Samantha. I believe that they have each written books that can be found in this library.\" Sarah stated.\n\n\"At the risk of being tied up and whipped, I find it interesting that you of all people would be counseling me to be ambitious since it was you who passed up being a Madam.\" I felt comfortable enough with Sarah to speak frankly with her.\n\n\"You make a good point but falling in love with Sinn became an ambition in itself. Do you think that apart either one of us would be on the precipice of becoming the Supreme Madam? Sure I had to submit but I did so gladly. You have to admit that we make a pretty good team.\" Sarah responded.\n\n\"Well you certainly make a good point yourself. I get the feeling that now you're going to give me a suggestion. For someone as smart as you I'm certainly going to listen.\" I smiled.\n\n\"You know that just about every stud in The Society has at least a few pictures of you and when they don't have a concubine or madam to fuck they use those pictures to masturbate. Carey you're one of their favorite flavors.\" Sarah shocked me.\n\n\"How did every black man in The Society get pictures of me? And these pictures are nasty enough to get them hard?\" I asked with a sanguine smile. I couldn't be upset. The madams got to use me anyway they wanted, in effect my body belonged to them.\n\n\"Oh never mind. Your picture gets taken at the strangest moments, you know when you're jerking off wearing the most intimate of lingerie, when you've got your legs wrapped around a black lover. You no doubt remember the moment just not the camera. Nevertheless someone with your, how shall I put it, sexual charisma should use it to make a name in The Society.\" Sarah advised.\n\n\"What sort of name?\" I asked totally unaware of where she was going.\n\n\"Your madam and her friend Madam Valerie are known as the best at bending a young white boi's mind to their way of thinking. You should know. They did it to you. Corinna is the most dominant sissy in The Society. My lover, Sinn, can spot a young black man who will happily stick it to a pretty sissy just as easily as a woman like me.\" Sarah explained.\n\n\"You mean a bisexual stud?\" I inquired.\n\n\"She never misses. In the end they all excitedly fuck gorgeous sissies like you. Yet sometimes they need some convincing, like Quetto. Perhaps that could become your specialty.\" Sarah smiled now that she had made her point.\n\n\"That would be one way to make a name.\" I replied smiling down at the seated concubine.\n\n\"He's down by the pool. Time to make your bones, sissyboi.\" Sarah gave me her order and a gentle slap on the ass.\n\nI walked down to the pool with a tray. After all, I had been instructed to make sure that our guests were comfortable. It was my duty to make sure the young black man was comfortable. I found Quetto laying back on one of the heavy duty two person lounge chairs. I couldn't take my eyes off his well developed body and the immense bulge pushing upward in the blue thong bathing suit.\n\n\"Can I get you anything?\" I stood over the black stud unable to hide my admiration.\n\n\"Just water if it's not a problem.\" The young black man answered politely.\n\n\"Of course. You should know that I'm here to serve you.\" I replied suggestively.\n\nI walked over to the outside bar feeling his eyes on my backside as I moved. I poured water from a quart sized bottle into a pitcher, cut a lemon into slices dropping them into the pitcher and then shoveled in some ice with a scoop. I returned with the iced water and a glass. His eyes remained glued to me while I poured a glass for him.\n\n\"I have to ask. How does it feel?\" The black man smiled and took the glass from me.\n\n\"How does what feel?\" I asked.\n\n\"You have a penis but you live as a woman.\" Quetto inquired his jet black skin glistening in the sun.\n\n\"Quite frankly, it feels pretty damn hot. I get to fuck as either sex depending on the scenario. It's very exciting.\" I smiled back at the black stud.\n\n\"So you've always been a sissy?\" He continued.\n\n\"No. Actually I had no idea I would love living like this until I was brought into The Society and acquiesced to my madam's vision of how I should be. I guess you could say after a little convincing I saw the light. It has happened to every other sissy here.\" I told the aspiring stud.\n\n\"Acquiesce. Submission is what you do. I have to say that there's no way I could live not being able to use my cock.\" The handsome man stated.\n\n\"Oh I use my cock. Make no mistake, I get plenty of pussy, madams, concubines and sissy pussy. I've fucked them all. And of course submitting isn't just something I do. It's something I love to do. Being submissive is really what made me a sissy in The Society. It's the perfect fit and why I'm here. Of course you're right, your role will be different. Look at you, muscular, as handsome as any man I've ever seen, the madams are already talking. \" I was getting hard just talking to the young black man.\n\n\" But as often as you have been on top, you've pleasured and taken plenty of dick as well.\" He added.\n\n\"Of course, I absolutely adore playing with another man's penis. Do you mind if I take a seat next to you. I have to say man, woman or sissy these high heels are killers.\" The black man moved a bit to the side and with a smile and a wave of his hand invited me to join him. I made my move taking a seat at the foot of the lounge chair.\n\n\"They say that if I am to stay as a member of this society I have to learn fuck white sissies. I'm not wired that way.\" He was talking one way but I had seduced enough men during my time in The Society to know the telltale signs that he was very interested in me.\n\n\"Why don't we get you acclimated by getting some practice in right here and now.\" I asked confidently.\n\n\"I told you that I wasn't interested. What would make you think that I want to fuck you?\" He lay back on the lounge chair exuding the same arrogance he had displayed when he had walked through the mansion's front door.\n\n\"You've been screaming to everyone who would listen that you refuse to screw any of The Society's sissies because \"you're not wired that way\" which is that you're not gay, it's abhorrent or whatever. That tells me that you're hiding you're true feelings and of course you've been staring at my ass and legs ever since we met. You should know that this isn't about two men because I haven't been one for some time now. Why don't you take a bite?\" I calmly ran my hand up his muscular thigh until I found the silky material of the man's bathing suit. The material was so taut I thought that if I kept massaging him the suit might explode from the pressure of the black man's hardening penis. I ran my hand over the genitals until the head of the penis popped through the top of thong. I knew that I had him now.\n\n\"Don't you have tasks that your madam requires that be done?\" The black man was in the final throes of protesting.\n\n\"Oh I think that you know by now the task that I was assigned for today.\" I announced my intentions while I leaned over and pulled down the bathing suit exposing an enormous semi erect penis.\n\nI quickly reached out and grabbed it before any second thoughts could take hold. I smiled at the growing penis my hand gently stroking it. I had handled a lot of dick since joining The Society but as I watched Quetto's inflate in my hand I could tell that this dick was very special. The shaft was still thickening and my hand was barely able to get around it and most erotically it was the darkest penis I had ever seen. I massaged it with my hand taking special care to touch the pressure points at the base and just under the head. Once I got him rock hard I could see that his size would rival Corinna's while he was as thick as mine. I opened my mouth and went down on the African. I engulfed the head and part of the shaft comfortably but that was it, anything more was going to be a chore. I had become a very good cocksucker, in fact, an exceptional fellatrix. I very quickly had the black man moaning and running a hand through my hair. I was licking and kissing him in all the right places in between moments of applying suction by sliding him in and out of my mouth and throat. Then I added one more sensation that I was sure would drive Quetto insane. I ran my fingernails along the silky skin of the scrotum and juggled the egg shaped testicles in my fingers. Quetto's body shuddered and he drew his legs upwards. It allowed me to trail a finger down to his hole. I pushed against the puckered muscle and the black man groaned.",
        "\"Oh no please no!\" Quetto cried out.\n\n\"What's wrong sweetie? Don't you want to splash a load down a pretty sissy's throat?\" I smiled devilishly up at the gorgeous black stud.\n\n\"I want to fuck that sweet ass of yours!\" He bellowed.\n\nI got up off of the lounge chair and stood over the now quivering black stud, his huge erection pressed up against his belly coated with my saliva. I could tell that he would have done anything to fuck me now.\n\n\"You'll do it with my cock out and you're going to give me a reach around while you fuck me.\" I ordered.\n\nQuetto knew that I had him where I wanted him and he didn't fight it he just laid back on the chair and watched me undress. I got down to my stockings and heels and then grabbing a tube of lube that Catherine kept down by the pool for just these kinds of impromptu moments I leaned down and smoothed a healthy dollop of jelly on the blackest prick I'd ever seen. I climbed on top of him and straddled his torso. I ran my hand down his chest and belly and grabbed his dick. His body was bulging with muscles, his torso etched with deeply cut ridges that made up an extremely impressive six pack. I squatted down allowing the thick black cock to touch my sphincter. I took a deep breath and lowered my ass down on him. The hard tube of flesh slid past the thick ring of muscle and into my rectum. I gasped and slowly sank down out of a squat letting the thick hardness further up my asshole.\n\n\"Oh fuck you're big!\" I let out as my buttocks nestled down on top of the African's curly pubic hairs.\n\nQuetto slowly arched his body upwards pushing every last bit of himself up into me. I threw my head back and let out a loud sigh. It felt so good having his manhood digging all the way up into my guts. I got back into a squat and began to ride him. Quetto answered thrusting upwards to meet me. We went slow testing each other for a moment. Then the fucking became more intense. I smiled down at the handsome black stud just as the slapping of our bodies became audible. Like all the other Africans in The Society he was used to having a pretty white woman from outside The Society cooing, \"C'est beaucoup! C'est beaucoup mon ami! Too much! Too much my love!\" as he proceeded to split them and ruin their pussies. Most women were incapable of controlling themselves around a man like Quetto. They lost every time. However The Society's women were not most women and the sooner the gorgeous African giving it to me up the ass learned that the sooner he stood a chance of not being eaten alive by these dominant madams. I was teaching his first lesson.\n\n\"Oh you're so tight! You're as tight as any woman!\" The black man grunted from beneath me.\n\n\"I am a woman. I just still have one of these.\" I grabbed my dick and pointed it at him and then leaned down and kissed him.\n\nQuetto gave me his passion right back. Our tongues touched flicking wildly against each other. He sat up taking me with him. I wrapped my legs around him as he stood, then I moved them up to his shoulders and around his neck where I had my arms. With his size the stud had no trouble staying inside me and with my flexibility I had no problem jackknifing my body offering my hole as a perfect target. He was the strongest man I'd ever been with. He began bouncing me up and down on his erection while I hung onto his body with everything I had. I was in heaven, my cock rock hard with excitement.\n\nOur bodies were dripping with sweat now and too slick to do anymore acrobatic sex. Quetto let me climb down from his muscular body. I kept my arms around his neck and kissed him again. I felt his hand around the head of my penis. I sighed and let him touch me for a moment. I broke our kiss, turned around and bent over for him. Quetto needed no further encouragement. The black man slid back in. I bent all the way over grabbing my ankles for support as the pounding began in earnest. It felt so good this way with the muscular black man in control. His strong hands ran up and down my back and occasionally gave my ass a loud and powerful slap. I stood up straight and turning my head began kissing him. I was clamping down hard with my buttocks and sphincter and it was driving him crazy.\n\n\"Oh God you're so fucking tight!\" Quetto bellowed while he continued his assault on my greased hole.\n\n\"Fucking big...black...! Screw me!\" I could barely get the words out but Quetto knew what I wanted.\n\nI felt his fingers return to my erection. They were soft and warm and when he began pumping me it was heaven. I kept my head turned and kissed his gorgeous face all over while the sensations sent electric shockwaves through my body.\n\nWe ended up back on the lounge chair. Catherine had them specially built for just this reason. I lay on my back and took it from Quetto. He climbed on top of me and showed me what he was made of. The thrusts were long and masterful. I was uttering a moan at the climax to each one until the ebony skinned stallion suddenly let go. He grunted loudly and arched his back. I felt him shudder uncontrollably and the warm semen splashed into my rectum. We ground our bodies against each other as his orgasm mingled between us and then he leaned down and kissed me. I slid my arms and legs upwards and around his muscular body. His dark skin was soft and smooth. It was wonderful.\n\n\"I can't believe you got me to do this to you and now I'm kissing you. You are right you are certainly no boy.\" Quetto was smiling as he pressed his lips down on mine.\n\n\"Not anymore. Now I have another kind of kiss for you.\" I gave the black man another kiss and then climbed out from under him.\n\nI stood up next to the stud still prone on the lounge chair and smiled down at him. He had rolled onto his back and had the look of a very satisfied man. When I didn't move he looked confused as if he was waiting for me to explain something.\n\n\"What are you looking at?\" Quetto was now reclining with his hands behind his shaved head his penis glistening with lube and cum now soft and laying against his thigh.\n\n\"I told you that I had one more kiss for you. Now get up here.\" I ordered with my hand sliding up and down my fat erection.\n\n\"What? I gave you a reach around just as you had asked.\" The black man said as he sat up in the chair.\n\n\"One more thing.\" I gently cupped the back of his head with my hand and pushed my rock hard cock into his mouth. His eyes went wide with shock. I rotated my hips just enough and my cock slid in another inch. The black man gagged so I backed off a little. Then I felt it, a little suction, and I knew that he was going to do it. The proud African plucked from one of the best athletic prep schools in England was going to suck my dick and he was going to enjoy it. We worked up to a nice rhythm with myself nudging just enough cock into his mouth so that he didn't gag and the black man sucking and moving his lips along my shaft. I had successfully coaxed Quetto into giving me a first class blow job. The friction was glorious and after the fucking I had just taken it didn't take much to push me over the edge. I pulled out of the black man's mouth and jerked my cock until I began shooting sperm onto Quetto's chiseled chest. He let me empty myself out on him and then gave my dick a few tentative licks so that he could cure his curiosity and taste the cum from another cock. I let him finish and then grabbed a towel and cleaned off his chest and toweled off the rest of his body. It was an absolute pleasure. I slid out of my hose and joined Quetto in the pool for a brief swim to cool off.\n\n\"I have to beg of you to not say anything about what we just did.\" Quetto swam up to me and put his arms around me. \"The other men would not look highly upon it.\"\n\n\"Quetto I've been fucked by just about every Stud in The Society outside of The Black Rose. It's a natural act here.\" I leaned back against the edge of the pool and reached out with my legs and wrapped them around the African's tapered torso.\n\n\"No! No! Not like this! I pleasured you as the submissive. If they saw you standing over me like you were it would be a catastrophe.\" Quetto's voice trailed off to a strained whisper as if he was afraid of anyone hearing his panicked confession.\n\n\"Well I'll let you in on a little secret. You're not the first Society African to suck my dick. And no one's going to find out this time either, because this sissy doesn't fuck and tell.\" I pulled him close to me and we kissed. \"You're secret's safe with me gorgeous.\"\n\nI walked back to the mansion through my bedroom door which opened to the pool area. This way I was able to wipe myself down and dress before going upstairs. I climbed the stairs and ran into Sarah in the kitchen. She was wearing a smile that the Cheshire Cat would have been proud of.\n\n\"Well girlfriend, that was impressive.\" Sarah gave me a playful high five.\n\n\"I just did what you asked. You're a concubine, a very powerful one. It's my duty. A very pleasurable one I might add.\" I couldn't help but smile right back at Sarah knowing that I had just seduced the most handsome young man I had ever laid eyes on.\n\n\"Yeah he's not hard to look at is he? And that dick? I've ridden it and left a lot of cum foaming all over it. But gorgeous stud or not you're still full of shit. Quetto was so sure that he'd never want to fuck a Society sissy and then you showed him those shapely legs and most importantly a wave of sex appeal that would raise the dead and you got him to suck that thick cock of yours. Some of the hottest women in The Socirty were unable to do what you got done in about an hour today. You've got what it takes legs.\" Sarah gave me the compliment that every sissy wanted to hear, that I was of value to The Society.\n\nQuetto emerged from downstairs freshly showered and with a sheepish grin on his face. He stood there looking beautiful and took a heaping helping of playful abuse from Sarah and a promise from her that his new found bisexuality would be kept from the other studs until he was ready. Yet today's sexual exercise would be reported to Catherine and Sinn. They would know that Quetto would now be ready to become an active member of The Society and no doubt other madams looking to fill their mansion with another stud would become aware as well. Quetto's looks and athletic sexual abilities would make him a valuable member of any madam's troupe.\n\nI slept like a rock and woke up feeling wonderful. I looked over from my bedroom and noticed that Corinna was in our shared bathroom. I took note of the maid uniform she had laid out on her bed and followed her lead laying out my version of the same outfit. It was a royal blue silk skirt, silk white blouse, navy blue patterned stockings and pumps. Catherine put together all of our uniforms and they were all meticulously done and extremely sexy. I had to admit that we looked good in them and felt even better wearing them. They ranged from the professional look we were wearing today to the downright lewd number I used to help me seduce Quetto the previous day. Usually Corinna chose our mood for the day according to our day's schedule be it work, sex, a bondage session or any combination of the three. Our madam had given the order when she had me dress for our African guest the day before. I had no idea why I was to dress that way but it wasn't my place to question, just to do as my madam bid.\n\nI watched Corinna step out of the bathroom with a towel in her hand and a smile on her face. My suite mate loved walking around naked whenever she had the chance. It didn't matter who was around her either. And if anyone else had Corinna's sculpted body, beautiful face and elephant trunk like genitals they would have done the same. She snapped her towel at me as I snuck by her to take my turn cleaning up for the day.\n\n\"I heard things got interesting after we left yesterday. You let that gorgeous African plant his flag in your ass?\" Corinna called back into the bathroom as I climbed into the large granite shower and let the warm water wash over my hair.\n\n\"I guess you could say that. Interesting would be a good understatement for Quetto.\" I replied with a laugh.\n\n\"So was he that good? I heard that he's hung like a donkey.\" Corinna had left the door opened so that we could talk.\n\n\"Oh yeah he was everything you heard and much much more and to put it in perspective he's hung like a Corinna! Just thicker!\" I called back out of the shower as I soaped myself.\n\n\"Thanks!\" Corinna acknowledged my compliment. \"So I heard that he was a bit stiff about giving it to a sissy. You got him anyway huh?\"\n\n\"Yeah I just appealed to the more dominant side of his brain.\" I replied walking past Corinna.\n\n\"Which side was that?\" Corinna smiled and gave me a kiss. \"Good morning.\"\n\n\"The side controlled by his pecker! Good morning to you.\" I laughed while I walked into my room to put on my makeup and dress. I turned and saw Corinna standing in the doorway between our bedrooms with her hands on her hips.\n\n\"So he's good?\" Corinna asked again now turning her attention to sliding the patterned navy blue stockings up her shapely legs.\n\n\"Yeah, real good. He went down nice and easy and then he was incredible. An unbelievable lover and he sure can suck cock.\" I mentioned while I applied some red lipstick.\n\n\"You got him to suck cock?\" Corinna was shocked. She stopped zipping up her skirt waiting for an answer.\n\n\"Yeah. I jerked my load right onto his chest.\" I made a motion with my hand as if I was masturbating my penis. \"He was pretty much into it once we got going and let me repeat, even you'll want to bend over and grab your ankles to take a ride on that roller coaster. He's young, strong, hung and very very handsome.\" I informed Corinna as I approached her fully dressed and ready to attend to my madam's needs.\n\n\"You see you're just like all the others thinking that I don't like it up the ass. And after all those times I've let you be the boy.\" Corinna smiled lewdly at me in the way that turned me on so much.\n\n\"Yeah that always does feel so good lying on top.\" I kissed her again and then led her through the gym and upstairs to the main floor.\n\nWe started working right away. There were dishes to be rinsed and loaded into the washer from our meeting with Sinn and then the little party that Corinna and Serena had entertaining Madam Tyffany and Heidi later that night. I could tell by the way my mate was walking that she had been ridden hard and put away wet last night, probably by Tyffany expertly wielding her strap on and teaching Serena how a Society Madam put it to a sissy like Corinna or Heidi. I was wiping down the tables when Corinna returned from upstairs.\n\n\"Well she's not in and neither is Serena. During a tense time like this I wish the ladies of the house would think of security when they went out galavanting about the countryside.\" Corinna stated as she returned to the kitchen with a couple of dishes.\n\nI had finished the tables and was starting to sweep the hardwood floors when Serena and then Catherine walked through the front door. It was not yet seven thirty in the morning and both women looked as prim and proper as a couple of models out of the Brooks Brothers catalog. Catherine was on the phone barking instructions as she walked. She turned and went into the library. She made a motion towards Serena who seemed to understand her order.\n\n\"Hey where's Corinna?\" Serena asked with a slight strain in her voice before giving me a kiss. \"Good morning.\"\n\n\"In the kitchen. Good morning.\" I replied. The four of us had begun to always kiss each other in the morning. It was something that Catherine had started as a subtle way of bringing us closer and along with some other things she had us practicing it seemed to be working.\n\n\"Get her and meet us in the library.\" Serena ordered as she walked to the library and then turned back and emphasized her demand. \"Carey now.\"\n\nI ran into the kitchen and poked my head in. Corinna looked up from the dishwasher and I came out with \"Hey we've got to go to the library. It seems like an emergency.\"\n\nI got into the room first. Catherine was leaning against the large desk talking on the phone. I was only getting one side of the conversation but it seemed as if she was talking to Madam Paula and I got the impression that something had happened regarding someone being taken captive. It seemed ludicrous to me that a member of The Society would be taken by other members and that some advantage could be gained but I was about to find out that I was wrong. Catherine put down the phone just as Corinna entered the room.\n\n\"I've got news. Heidi went out last night after your little party here and hasn't returned. I don't suppose that the two of you have her stowed downstairs and are practicing your reach around technique on her?\" Madam Catherine made a bad attempt at humor in giving us the news about the redheaded shemale.\n\n\"Sorry. I saw her when she and Tyffany came to pick up Serena and Corinna.\" I replied first.\n\n\"Did she say anything to either of you? I'm looking or should I say hoping for a quick resolution to this so I'm extending amnesty to any short circuiting of Society rules for this matter.\" I could see for the first time since I had known her that my madam could indeed become flustered, if only slightly so.\n\n\"Heidi didn't mention any plans to me Madam Catherine.\" Serena replied.\n\n\"I know her pretty well. She likes the studs but I hadn't heard of Heidi hanging out with anyone special. I can start checking if you want.\" Corinna answered.\n\nJust then the doorbell chimed. Catherine seemed to know what would be on the other side of our front door and the look on her face told me that she didn't like it. She sent me to answer it anyway. I opened the door. Standing on the portico was a very muscular black man. He was wearing aviator sunglasses and a big smile. Before he could say anything he gave me a serious looking over as if it was some sort of requirement. I could tell by the attitude that he belonged to one of the society madams. While he licked his lips at the sight of my legs I figured it couldn't hurt if I checked him out as well. He was very attractive.\n\n\"Excuse me. Is this Madam Catherine's residence?\" His eyes had returned to focus on mine for the moment.\n\n\"Yes it is.\" I smiled back at the handsome stud.\n\n\"You must be that sissy I've heard so much about. My name is Royce. Would you please give this to your madam. It's from Madam Diane of The Black Rose.\" Royce reached out and gently shook my hand and handed over a large envelope with his other.\n\n\"Thank you. I am one of Madam Catherine's sissies. My name is Carey.\" I replied rather taken aback by the black man's charm.\n\n\"Well Carey I now have one more reason to look forward to the Society Weekend. I'm most definitely looking forward to seeing you again at the event.\" With that the well built black man turned and drove off in a Ferrari.\n\nI went back to the library with the envelope and handed it to Madam Catherine. She gave Corinna a knowing look and then opened it. She pulled out a piece of stationary first. She read it and then handed it to Corinna. The gorgeous shemale read it and then put it down on the desk.\n\n\"It's official notice from The Black Rose. They have Heidi.\" Catherine stated. She handed Corinna a stack of 8\"x11\" photos that confirmed everything.\n\nThe Black Rose may have been underhanded but they weren't completely uncivilized. They had let Catherine know that Heidi was safe although to the untrained eye the pictures would tell a different story. The photos showed Heidi manacled to an upright rack with her arms outstretched and her legs spread. Her cock had been stimulated into an erection sticking out in front of her and it had been trussed with twine as Serena had done to Corinna with a long silver quill sticking out of her piss hole. Her short red hair was adorned with black roses. In another picture Heidi was in what was called a rape block. This bondage device was a long varnished block of wood split in half with a hinge on one side and a latch on the other end that opened and had four holes carved into it so that the submissive's arms and calves could be held when the upped half of the split block was closed over them. In short Heidi was on her knees with her arms forced back between her legs so that her head was on the floor with their ass in the air proffered to anyone with a tongue or a dick. In this picture it was The Black Rose's most powerful sissy Lena who was topping the gorgeous redhead. She was about the same size as Corinna and beautiful. In the picture her face depicted ecstatic bliss with her erection buried deep inside Heidi. In the final two pictures Heidi was on her hands and knees, a woman with short brown hair with grey flecks was riding the struggling redhead with a riding crop that an equestrian would use to whip a horse in one of her hands.",
        "\"I'll start working my contacts. Maybe since we're so early into this someone will slip up and give me a location.\" Corinna was looking over the pictures for any clues.\n\nCatherine sensing that both Serena and I were very confused explained the situation to us. \"This is quite simply a play for political dominance. This happens from time to time and it can be political as it most definitely is here or a play by a madam for another's property. One madam becomes interested in, enamored with, or hell just falls in love with another madam's stud, concubine or sissy. She may offer to trade or give sexual favors in return for the person in question. With all the sissies I've seduced and transformed I swear I've had just about every madam in The Society as my concubine for a month or two in exchange for a freshly minted sissy for their family. That's how I demanded to be reimbursed. There were no kidnappings just above board commerce with the purchasing madam paying with her ass and a memory ingrained in their minds of me being the superior woman. Sometimes a madam who is considered weak may have an attractive mate or if the two madams can't come to an agreement and a madam wants it bad enough she may just take it. For reasons very different than simple sexual attraction The Black Rose has pressed its strength. The reason of course is to make us look helpless just prior to The Society Weekend and the election.\"\n\n\"But they've moved against Madam Tyffany. She could physically crush any madam I've ever met and for that matter maybe half the studs as well. Don't you think that this is the move of a desperate person? I'll bet that this may have been the only opportunity exposed to them and they felt that they had to take it.\" I let my opinion be known and I immediately felt the heat on the back of my neck for stating that I felt that The Black Rose's move was one of desperation. I just didn't think I was smart enough to have come up with something that was that useful.\n\n\"You see what happens when you allow your underlings to live in a more relaxed atmosphere than most of the other society madams? You get some very good analysis from a sissy who isn't all jacked up about being whipped or have a train run on them if they speak out of turn. Right or wrong I want ideas from you people. We work as a team and we'll stand whatever small chance there is of getting Heidi back before they break her. This is desperation. How else was Diane going to get the votes to move Gerri in as Supreme Madam? I have to get the madams together to make sure we can keep the votes needed to win this damn thing.\" Catherine got nods from all of us. \"Just so you don't go lording it over the other ladies Carey know that it really wouldn't do much good for Tyffany to go knocking down Diane's, or more specifically Madam Julia's, door and pummeling them until they give up Heidi. That's just not how it's done in The Society.\n\nCatherine was all for rescuing Heidi. She and Tyffany were very close and they both loved and found the gorgeous sissy to be a very valuable member to have on their side. The problem was that the members of The Black Rose had her well hidden. It was a race to find Heidi before she gave in to those that were working on her.\n\n\"I don't recognize anything. They've got black curtains hanging everywhere and all the bondage gear is portable. It could be brought in from anywhere. This could be a high school gym or a storage room in a store let alone one of their dungeons.\" Corinna commented as she looked over the pictures.\n\n\"You see who they gave the assignment too?\" Catherine responded.\n\n\"Sure, who better than the Librarians. That's who I'd use. Diane and Arianna are over the hill. Katarina is all fizz and no gin, nowhere near strong enough to pull this off. Yeah, this doesn't surprise me at all. It looks like they're going to use equestrian bondage which is right up Julia's alley. She loves using the analogy of breaking an untamed horse to turning a concubine or sissy into one of her slaves. Since we don't see the bridle on Heidi's head she's still fighting.\" Corinna was referring to Madam Julia and her concubine Jessica. They were both prim and proper, wore horned rim glasses and their features strongly resembled the stereotypical bookish school teacher or librarian, hence the nickname \"The Librarians\". The reality was that they were a pair of merciless dominatrix who had broken more than their share of helpless victims.\n\n\"Why Heidi? Why not one of the concubines or less powerful madams?\" Catherine was looking for any answers to help formulate a plan.\n\n\"Carey's theory about The Black Rose's desperation is right. They're not going to win any election trying to convince members that they're nice people. But look at which sissy is standing next to Julia and Jessica, it's their sissy, Rachel.\" Corinna was looking at the picture of Heidi being sodomized by Lena besides the tall lean white women stood an equally tall light brown skinned sissy with an impressive penis dangling between her legs. Rachel was biracial and the only sissy with African blood in her. \"You remember that little victory dance that Heidi took with Rachel at that wrestling match six months ago? Heidi so dominated Rachel and then slid that freckled cock up that brown ass and rode her around the mat for about a half hour. It was so all consuming and sexual, the audience was so rapt some of the studs actually started to jerk off. Even Rachel openly admitted that she was Heidi's bitch that night. My guess is that this is revenge for The Librarian's sissy for that beat down.\n\n\"Well then why isn't she fucking Heidi in that picture?\" Catherine asked.\n\n\"Madam Katarina's sissy Lena is still top dog over there. She claimed the first pose. I know that I would. Don't worry Rachel's fucking her and if we don't find her quickly we'll be looking at plenty of pictures of Heidi taking brown cock down her throat and up her ass.\" Although a sissy, Corinna spoke like someone with the expertise of a seasoned dominatrix.\n\n\"Find out where this is happening.\" Catherine handed the pictures to Corinna and walked out of the room leaving Serena, Corinna and myself to begin the search for Heidi.\n\n___________________________\n\nI tried my best to keep myself busy during the day. There wasn't much for either Serena or myself to do until Corinna had developed some intelligence on what had happened to Heidi. Sensing my restlessness Catherine had sent me first to Kathleen's and then Jodi's mansions to inform them of what had happened to Heidi. As I walked down to Kathleen's I knew that Corinna had to find out two things, how had The Black Rose trapped the redhead? And where had they done it? Before leaving Corinna had let me in on the art of breaking a fellow member of The Society. It was an interesting but not unusual occurrence. As Catherine had told us there were members who became attracted to other members. The Society was quite simply a haven for gorgeous specimens of the human race. I had yet to meet a member of The Society who didn't have a superior physical appearance so attractions developed and became crushes and then infatuations.\n\nThe rarest of conquests were when one madam broke the will of another madam. With so much friction between some of the madams serious rivalries existed. Sometimes an upstart madam crossed the wrong, more experienced madam and ended up hanging from a hook in a dungeon getting repeatedly fucked and whipped and used as a whore until she submitted and pledged her loyalty to the victor. Not that it was always the more experienced madam that won. Years before it was a younger Catherine who made her name outsmarting an overconfident Madam Katarina temporarily making her a slave until Madam Diane, the supreme madam stepped in and saved her ally. All wasn't lost for Catherine, the reward for upsetting the more experienced madam were two huge pictures that hung in Catherine's bedroom. One was a framed photo of Catherine wearing only a garter belt, full fashioned stockings and pumps slightly bent over and smiling broadly with Katarina in the submissive position on her knees behind Catherine tonguing at her sphincter muscle. The other picture was of Katarina being held in the air by the strong Catherine. Katarina was facing away from her dominant partner. Katarina's head was thrown back. Catherine was holding her up her arms around Katarina grabbing at her tits. Both women's faces were etched with the unmistakable mixture of pain and ecstasy that came with an intense orgasm. Catherine's hips were thrust forward with her strap on dildo buried deep into the formerly powerful madam's asshole. What made the picture was that Katarina's legs were wrapped back around Catherine's body signifying that she was enjoying what was happening to her and had accepted Catherine as the more dominant madam. The story went that Catherine had indeed broken Katarina but Diane stepped in and convinced Catherine to return the well used slut to her colleagues. The proof of Catherine's handiwork were the two huge pictures that were kept in her bedroom. The price for Catherine not parading around her conquest for all to see was high. It cost Katarina her turn as the Supreme Madam. Instead Catherine's friend Kelly stepped in front of her and the Catherine herself. It was considered one of the more dreadful defeats for The Black Rose as now they had not run The Society for a number of years.\n\nI spent about a half hour talking with Madam Kathleen and her concubine Michelle. Kathleen was a very sexy woman about Catherine's age. While Kathleen was considered a weaker madam like Jodi she also had the prowess to seduce and have a much younger concubine as a lover. Michelle was a former All American collegiate soccer player. She was a beautiful dirty blonde twenty something who had fallen for the mature woman and like Jill she was very loyal to her madam. I enjoyed both women and had a crush on Michelle that rivaled my devotion to Jill.\n\nI walked across our lawn and up the slight hill to Jodi's estate. The distance between these homes was great enough that I had actually changed into my running shoes. I got to the front door and knocked. After a while there was no answer so finding the door unlocked I walked in. Catherine, Jodi and Kathleen were close as were their underlings to the point that we were allowed into each others' homes especially under circumstances such as these. Jodi and Jill had to be informed that The Black Rose had moved against us. I walked through the foyer and then the living room. The mansion was silent and I was beginning to think that the two women were out when I heard a faint whimper coming from the second floor. I crept up the stairs glad that I was in my running shoes. I slowly made my way down the hall to the bedroom at the end. The moans and whimpers were Jodi's and I was thinking that I was going to have to be very quiet so as not to risk interrupting the two, (I figured Jill) making love. The door was open and I snuck right up to it. Jodi was on her back on the bed. The woman on top of her was older and was slightly more broadly built. The foot of the bed was towards me so I was looking at their legs closest to me and I couldn't see who the other woman was. All I knew was that she was wearing a strap on and she was fucking the shit out of Madam Jodi. I watched them for a minute and it soon became apparent that they were more than having sex, Jodi was submitting to the woman.\n\n\"Oh fuck you're so hard! So fucking hard! It's never been this fucking good!\" Jodi screamed her legs moving up and around the torso of the woman fucking her.\n\nThe woman was strong and it was obvious from the motion of her body and the effect she was having on Jodi that she knew how to use the strap on. I would have thought that I was watching Madam Tyffany show off her prowess on a helpless victim but this one wasn't built as muscular and she wasn't a blonde. The dominant woman was taking long strokes now stabbing deeply into Jodi's pussy. Jill's madam was beside herself holding onto her lover tightly with her arms and legs. She was enthralled with the woman on top of her.\n\n\"That's it take me deep you gorgeous slut! You belong to me now, say it! Tell me how much I mean to you!\" The woman let out, her own voice filled with lust.\n\n\"Oh God Katarina! I'm yours! I'm your slave! I'll do anything to lay down with you just tell me and I'll obey!\" Jodi bellowed into her lover's ear who I now knew was one of The Black Rose's most powerful madams. Sure she had been seduced and taken down by Catherine but who hadn't been. By the way she was putting it to our neighbor and by the things Jodi was saying to Katarina she was basically admitting that she was her slave things didn't seem to be going so well for the rest of The Society. I slowly backed down the hall making sure to maneuver as quietly as possible now with a hardening penis. Even with The Black Rose topping one of Madam Catherine's closest allies there was no mistaking that the two women looked incredibly hot together and of course there was what looked like the complete submission by Jodi to Katarina. As a member of The Society I had learned to admire the scenario of domination of one over another.\n\nKelly, Elizabeth, Valerie and Paula had already gathered at our mansion by the time I had returned. They were seated at the dining room table and Corinna was serving them some fruit and cheese on a platter. At the same time Catherine was descending the stairs in a one piece business suit with a plunging neckline and hem that ended just above the knees. I had to say that even in a crisis our madam always made sure to be at the peak of fashion. She walked briskly across the room and into the dining room. The other women rose from their seats only to have Catherine motion to them to stay seated. These four women probably more than any other madam in The Society were sticklers for the traditions within The Society one of which was to stand when the Supreme Madam entered the room just as others had done for each of them when they had held that title.\n\n\"Did you tell them?\" Catherine quietly asked me as she walked by me.\n\n\"Kathleen.\" I replied to which Catherine stopped and faced me.\n\n\"Jodi was supposed to be at home. She was out?\" There was a slight look of concern on her face.\n\n\"Can I talk to you in the library?\" I asked with a tense voice.\n\n\"Of course. Ladies I'll be right with you. In the meantime I need every contact wether in The Society or not squeezed and squeezed hard. Let's get on our phones!\"\n\nWe walked quickly into the library. Catherine had no time to listen to any bullshit and worse any more bad news. \"Okay. What is it?\"\n\nCatherine's eyes seemed to have changed to the color of coal. I had never seen her this way. \"I think that I just found your spy. When I walked into Jodi's mansion I snuck upstairs and found her in bed with Katarina from The Black Rose. Katarina was wearing a strap on and she was putting it to Jodi and verbally dominating her and Jodi had given in as if Katarina owned her.\"\n\nCatherine's reaction was beyond strange. I knew that my madam was too smart to shoot the messenger. Still this was truly bad news and I expected her to do anything from showing controlled rage to throwing an absolute fit. Jodi may have been one of the weaker madams but she was also one of Catherine's closest friends. In fact during Catherine's reign as the Supreme Madam Jodi had benefited immensely. She had been able to keep Jill as a concubine when many other madams had coveted her, she had moved into a nice mansion right next door to Catherine's when Gerri had moved to another larger one. So now to be betrayed I expected some sort of volcano like reaction, instead I got a smile and a quick kiss on the lips.\n\n\"Carey my love, I am so proud of your attitude. Trust me. There's nothing to worry about. I'm going to meet with Jodi later today. Tell no one about what you saw. Do you understand? I mean it.\" I was about to do something that I had never done with Catherine, disagree but instead I just nodded my head in agreement and then she turned on her heels and went into the dining room to sit with her most trusted advisors.\n\nMadam Catherine had been talking nonstop about the possibility that there was a spy working against her with The Black Rose. Now it just didn't matter anymore. I didn't just find it strange, at this point in time with our part of The Society under siege from a rogue faction, I found it alarming. I had fallen for Jodi not only sexually but as a person. She was sexy and very personable. In fact the thing that made her weak as a madam in the eyes of others within The Society made her so attractive. She was not caught up in the pageantry of being a madam. She was always willing to talk to you as an equal and for me, a lowly rookie sissy, it had also led to some incredible sex on several occasions. The possibility that she could have betrayed her mentor, Madam Catherine meant that she had betrayed us all and although there was nothing I could do about it, it pissed me off.\n\nAfter the meeting Catherine emerged with the other madams and tasked Corinna with finding Heidi. She in turn worked with Samantha, and the other shemales, to find out how Heidi had been taken. Yet it was Catherine's tentacles reaching into her network of connections and spies that produced the first clues. At the end of the day we met before heading out again.\n\n\"I've found out that Heidi had been fucking one of the studs in The Black Rose. I didn't find out whom though. Tyffany told me that Heidi was out the night that she was taken. My guess is that the stud who had been fucking her also set her up.\" Catherine explained.\n\n\"I know where she went. It's out of the way, a great place to meet someone you shouldn't be meeting or don't want anyone to know you are meeting.\" Corinna responded.\n\n\"Find her.\" With that Catherine left us to it.\n\nCorinna, Serena and I drove the ten miles to an establishment known as The Go Go Boot or as those into rough trade or on the down low referred to as \"The Boot\", as in 'you gonna hit up a twink down at The Boot tonight?' Corinna filled us in on some of the qualities of the gay bar. Located in an old wooden building The Boot's structure was unique by the additions that had been erected one after another. Over the years if the owners felt that the bar crowd was growing hasty plans were made to build more space onto the structure. Since building officials were reluctant to be seen in a gay bar zoning regulations were never a problem. The result was a building made up of a bunch of squares that looked like someone had dropped a bunch of building blocks on the ground and then shoved them together. While ugly on the outside, the interior was perfect for hooking up and getting nasty with a maximum of privacy. As a result The Boot got a lot of closeted gays looking to let off steam The Boot and the motel next door, also owned and ran by The Go Go Boot owners. In short quite a few raging orgies began in the bar and then took place in the motel. We were out for information and not sex which is why we rushed out to the bar before the crowd of gyrating bodies showed up.\n\nCorinna wanted to talk to the bouncers and bartenders. For the most part they would have been sober and hopefully not grinding first into someone's crotch on the dance floor that night. Additionally Corinna knew most of them especially the bottoms, many of whom she had conquered on nights when she just needed to be in charge.\n\n\"They're probably getting ready for tonight's zoo in there. These boys and girls value keeping the secrets that come with this place so follow my lead girls.\" Corinna warned while we made our way across the parking lot.\n\nSure enough when we opened the front door there were a few employees getting ready for the evening's work. Corinna led the way through the front door walking by bouncers without interruption. They knew who she was and didn't stop us. Being the top shemale in The Society had its privileges. The gorgeous blonde's goal was simple. She wanted to know what had happened to Heidi in The Boot, who she was with that night and hopefully find out where she had gone after the bar.",
        "\"Hey Bree! How's it going sweetie?\" Corinna approached a tall blonde haired crossdresser who was checking bottles behind the main bar.\n\n\"Ah Corinna. We meet again. By the way where do you come off calling me sweet?\" Bree's smile was rather sanguine as she looked over Corinna. I could tell that this was some sort of rivalry.\n\n\"Last time was fun. You, me and your little friend Kirsty. You were both pretty and sweet that night.\" Corinna came back with a grin.\n\nThat was bullshit you making me play second fiddle with my sissy.\" Bree leaned over the bar facing Corinna with a sneer. It was obvious that the tall blonde was pissed and at about 6'-2\" in her cowboy boots she was definitely a match for Corinna. She was wearing faded jeans and a leather vest, both fitted nicely to her feminine figure. Still her exposed shoulders and arms were lanky and toned. Her appearance and attitude told me that she was most definitely a top but Corinna had always made a game out of getting tops to spread their legs for her. I got a picture of Corinna laying on top of the blonde bartender's sex partner fucking her silly while Bree jerked off in a corner watching her sissy forget all about her.\n\n\"We were wondering if you'd seen one of our girls here a couple of nights ago. Here's a picture. Her name is Heidi.\" Corinna held out a picture of the redhead for Bree while Serena and I stood behind her.\n\n\"Hmmm pretty, real pretty.\" Bree took the picture and looked up at Corinna and smirked. \"Sorry honey I can't help you.\"\n\n\"Can't or won't?\" Corinna asked and then turned and walked away without waiting for an answer. She led us back through a couple of rooms looking for another employee.\n\n\"Well that went well. Sure it was a good idea that you came with us? Is there anyone that you haven't topped in this place?\" Serena commented with more than a hint of exasperation.\n\n\"This one here.\" Corinna motioned towards a large muscular black man cleaning the windows in the room at the back of the building.\n\n\"My, my check out this collection of sweetness. Corinna you taking the girls on a sexual field trip? You know that you should have made The Boot your last stop.\" The man was wearing a black tee shirt with the bar's logo on the chest, matching black jeans and a gorgeous smile.\n\n\"Hello Alphonse. We're looking for a friend. She may have been here a couple of nights ago. Ladies this is Alphonse.\" We smiled at the handsome black man as Corinna handed him the photo of Heidi.\n\n\"Yeah Heidi. She was here but it's always crowded I couldn't tell you much more than that.\" He replied.\n\n\"Who was she here with?\" Corinna's question was delivered with some force but the bouncer handled it like a loud drunk at closing time, he defused as best as possible by giving a friendly shrug of his shoulders.\n\n\"I'm sorry Corinna. She's real pretty but I only saw her at the door. I was carding people and she was alone.\" Alphonse answered.\n\n\"Why don't you get a drink from your friend Bree, Corinna. I'll handle this. It's obvious that the bad cop isn't popular around here.\" Serena stepped up and put a hand on the shemale's shoulder. Corinna gave the gorgeous blonde a look but retreated back to the front of the bar just the same. In The Society concubines were superior to even the most experienced of sissies so if Serena wanted to take charge Corinna was going to have to acquiesce.\n\n\"Well now let me ask you in a much nicer tone, who was Heidi with?\" Serena asked while stepping up and grabbing a notepad and pen out of the black man's chest pocket.\n\n\"What are you doing?\" Alphonse was momentarily taken aback.\n\n\"My name and number. Whoever the person or people are they paid a lot for your silence. Rather than offer you more money and insult your loyalty I'm going to give you something so that when it's all said and done you can simply say 'guys you never stood a chance.'\" Serena smiled at the bouncer.\n\n\"Serena this is a gay bar. I'm going to make an assumption and I may be wrong Serena but Alphonse here is an employee in a gay bar. You got the picture? I don't think that he wants your number.\" I interjected.\n\n\"And yet Alphonse has been staring at my legs since we got into this room. Still this number is good for either me or my sweet sissy here. Let me assure you Alphonse pick your flavor, either one of us or both if you'd like a two scoop sundae. Let me assure you, we'll give you the ride of your life for three days. That's three days and we're your sex slaves. And if we like you, well...\" Serena smiled and put the pad and pen back in the chest pocket.\n\n\"How do I know that this number is real?\" The black man was in a serious mood now.\n\n\"Alphonse I'm a woman of my word and this gorgeous cocksucker belongs to me so whatever I say goes as far as she's concerned. You own Carey and me for three days as long as what you tell us is real. Understand?\" Serena was looking right into his eyes.\n\n\"Alright what the fuck. They certainly haven't delivered on what they promised me so I might as well get burned by your side as well. It was Marquise. I came back here and saw them on a couch making out pretty hot and heavy. They've been coming here for a little while now. They didn't care who saw them. Then something changed. That big blonde shemale, like Corinna, was here with the light skinned black shemale and a young white chick with glasses. They came in and left with Heidi and Marquise and I have to say that your girl didn't look happy. The little guy dipped me $500 and told me if I kept quiet he'd get me a ride with one of the hot women over at The Black Rose. I'm not holding my breath.\" Alphonse knew that Serena was in charge now and was talking to her.\n\n\"Lena, Rachel and Jessica. Where did they take her?\" I asked.\n\n\"I really don't know. They took a left out of the lot. That's as much as I know. She isn't in danger is she?\" The black man actually looked concerned now.\n\n\"Just Society games being played out amongst the madams. No one gets hurt, except maybe they're pride. Oh by the way, I'm a much better ride than whichever slut they were going to send over so you made the right decision here.\" Serena smiled back at Alphonse.\n\n\"And her?\" The black man nodded my way with a smile.\n\n\"Oh holy shit! She's the best fucking limousine that you'll ever slide into. Thanks for the information.\" Serena laughed, leaned in and gave the black man a long kiss on the lips.\n\nWe did a quick walk through of the building supposedly looking for anything that may have been a clue but really just checking out the unusual building. We made our way to the front of the facility and heard some noises coming from one of the bathrooms. We looked at each other and smiled.\n\n\"Want to bet on who's fucking whom in there?\" Serena asked.\n\nI gave the blonde a look that said \"Are you serious\". \"If you give me Corinna I'll bet you a million dollars.\"\n\n\"Well you certainly have gotten a lot less na\u00efve. I thought I could trick you into taking the big tranny.\" She grabbed my arm and we walked into the bathroom as quietly as we could.\n\nCorinna was working over Bree with extreme force. She had the big blonde bent over the counter in front of the large wall mirror and her dungarees down around her ankles. The two of us watched Corinna's huge member sliding in and out of Bree her own large genitals hanging down between her legs and rather hard. The tall bartender was whimpering loudly while Corinna topped her and sneered into her ear.\n\n\"That's it you fucking whore take that dick right up your ass cunt! If you're gonna play for the other team I'm going to fuck the shit out of you and let everyone know that you're my bitch! Fat chance you getting into The Black Rose with them knowing that you like to take it up the ass and from me no less! They don't take sissies that are sweet Bree and right now you smell as sweet as candy.\" Corinna barked into the blonde's ear as she kept her hips in motion.\n\n\"Oh shut it! Just fuck me! Yes just like that!\" Bree turned her head on the counter so that she could see Serena and myself. She seemed taken aback but it looked as if she was enjoying Corinna too much to stop. She just turned her head back so that she was facing away from us.\n\n\"Just like the last time Bree, I want a surrender! Tell me you're my bitch!\" Corinna's body was slapping hard against the bartender's very shapely buttocks now. Hard enough to make the blonde crossdresser's long cock swing back and forth between her legs.\n\n\"I'm your bitch Corinna! You own me! Please just keep sliding that thing in and out! Yes! In and out!\" Bree acquiesced between her grunts and moans.\n\n\"Now I'm going to drop my load deep inside your pussy you whore! Gonna breed the shit out of you!\" Corinna was growling now her orgasm close.\n\nCorinna grunted and thrust herself against the crossdresser's backside. I knew her as a lover well enough to tell when she was going to cum. She threw her head back. She was smiling triumphantly as another victim took her load and became her submissive. Bree could act as tough as she wanted. She could probably even call Corinna a sissy behind her back but whenever Corinna entered the room Bree would lower her head, avert her eyes and most importantly she would lay down and spread her legs anytime Corinna demanded it. It was de rigueur for anyone into the dominant/submissive lifestyle which Bree definitely was a part of.\n\n\"I can't believe that Bree thought that The Black Rose would take her. It's gladiator school for shemales over there. I told her that she'd last a week and then get torn to pieces over there. I can't believe that she would fall for their shit.\" None of us spoke until we got into the car and then Corinna went first.\n\n\"We found out who she was with.\" Serena told her.\n\n\"Marquise. I got it while I broke her in the bathroom. She told me everything she knew. She also said that she really wanted to fuck the shit out of you.\" Corinna turned towards me. \"We may need you to take one for the team if it looks like she might have anything else for us. There's only so much that you can get pounding on someone's backside.\"\n\n\"First the black bouncer now the bartender? You guys ought to go into pimping.\" I let out from the backseat.\n\n\"You'll be the meat in a sandwich with the two of them if we tell you. You're a weapon to be used when appropriate.\" Corinna turned her head giving me a look.\n\nI just leaned my head back and closed my eyes and smiled. Corinna was right. If Catherine or any other madam told me to jump my job was to ask how high. Both Corinna and Serena knew that I'd walk over hot coals for Catherine and The Society, spreading my legs for a gorgeous black man and an extremely well built tranny was duck soup.\n\nAs we drove out of the lot and down the road we went over what we had learned in the bar. We now knew that Heidi had been taken by the same Black Rose members who were working her over, trying to turn her out as a member of The Black Rose. With just a few involved there was always the chance that this was Madam Julia's girls getting some revenge for Rachel planning to return the redheaded shemale when they were done using her. Yet it was Marquise who had seduced Heidi and that meant that this was bigger than a simple revenge plot. He was Diane's main stud. They had been in an open relationship for over a year, ever since she had seduced him and taught him the ways of The Society. Allowing her young stud to be a part of the plot meant that Diane was involved. We continued to talk as Corinna drove actually taking us by some of the estates where Black Rose madams lived. As we cruised by Corinna would tick off the madam's name and we would discuss whether their dungeon could be the one.\n\nThe next day brought another set of pictures. This time Rachel was the star dominatrix. The first was of Heidi on her knees with Rachel's cock all the way down her throat. The redhead was looking up at a smiling Rachel her eyes tearing and seeming to be pleading with the brown skinned beauty, a very submissive pose. The next one pictured Heidi rolled up on her shoulders with her legs spread out over her head with her ass in the air. Rachel was standing over her drilling down with her dick into the redhead's asshole. What was so disheartening in this picture was that it seemed that Heidi was allowing the brown skinned shemale to sodomize her. There were no restraints holding her in place and her hands were holding onto Rachel's legs for support and to help hold herself in the submissive position. Printed at the bottom of the picture was the statement \"She's almost there!\".\n\nHeidi had been under the control of the Librarians for a couple of days now and probably had been through more than I had during my initiation and maybe even Corinna when she was held at the hands of Serena. Additionally as I had been exposed to mind bending videos while be held captive it was common knowledge that The Black Rose had developed superior videos that would help melt the hardest of minds. The saying went that no one outside of The Black Rose had seen them because once they had they were soon no longer outside the Black Rose.\n\nAs Catherine had mentioned more than once about the situation, \"This was bondage and submission being played at the varsity level.\" Heidi was being put through some very tough and imaginative exercises Madam Julia with her concubine Jessica and the sissies Rachel and Lena being used as her instruments. Additionally even with Catherine's relentless massaging of her connections and our searching for the dungeon where Heidi was being held we weren't making enough progress to find her in time. And even if we did find out where she was being held there really wasn't much we could do. We weren't the special forces, capable of taking down the castle and rescuing our girl. What was currently being done in Catherine's office with other madams were plans for revenge because in the next day or two the gorgeous redhead was going to belong to The Black Rose.\n\nWe didn't receive pictures the next morning. We felt sure that Julia would want to post the latest accomplishments of her girls. Catherine sent us out looking for Heidi throughout the mansions owned by The Black Rose. She thought that there was a slight chance someone may have fucked up and Heidi had taken advantage and gotten away. Serena and I went in one car while Corinna and Tyffany went in another. It took about two hours to cover every street and sneak through the backyards we could and then we did it again. No pictures meant that Heidi could have snuck away and Julia and her crew were frantically trying to recapture her. We owed it to our sister to find her first if in fact she had been lucky enough to get away.\n\n\"So you went through this? Do you think that she could have gotten away.\" Serena asked from behind the wheel of the nondescript rental car.\n\n\"As long as someone has a hand on that testicle leash no one is going anywhere.\" I noticed that in that last picture, the one where Rachel was on top fucking her, there was no leash. It's possible.\" I replied.\n\n\"Good observation. So this isn't a waste of time. On the other hand they may have got her and they didn't need the leash anymore.\" Serena replied.\n\n\"We have to try. What else would you have us do?\" I was curious as to what the blonde was thinking.\n\n\"Carey I truly am a brutal person. If you fuck with me I kick back hard. I would be setting up a run at one of their higher ups. Arianna, maybe even Katarina and we hold her until they give up Heidi and one of their top studs or prettiest sissies and if they don't bite that Black Rose madam's tattoo is coming off and she's my concubine going forward. I'd turn her. I know I would. Still I know better than to question Catherine. She's way too smart. I'm only stating what a macho bitch would do.\" Serena smiled over at me.\n\nWe doubled back and searched the same area again. It would have been too much to expect to have found a naked redhead with a quill sticking out of her dick trying to make her way back to her mansion. We were looking down by the oceanfront mansions when we got a call from Catherine ordering us back to the mansion. She didn't tell us why but it didn't sound good.\n\nTyffany and Corinna arrived at our estate right behind us. We walked through the front door and found Catherine standing in the middle of the foyer with a sanguine smile on her face. \"Where are the other two?\"\n\n\"They're parking their car out back. They'll probably come in through one of the back doors.\" I told her.\n\n\"What happened?\" Serena asked.\n\n\"They got her. It's all on this disc I suppose. We can watch it together.\" Catherine turned and walked into the living room and then down the stairs.\n\nWe followed our madam into the viewing room where she and Corinna first took me. We took seats and waited for Tyffany and Corinna who arrived a minute later. Catherine told Tyffany what had happened. I was surprised how well the muscular blonde madam took the news. Catherine then loaded the disc and the screen illuminated and standing naked wearing the same type of strap on dildo owned by Catherine was Madam Julia. She was a tall small breasted woman with short light brown hair and intense brown eyes. Unlike so many of the madams she wasn't a woman that you would consider a beautiful woman at first glance but her body was long and impressive. She was wiry with muscles wrapped throughout her with long legs accented with the defined thighs and thicker calves of an athlete. She looked to be a woman who could give any of the other madams a real run in the gym. I couldn't help being drawn to her, the way she was standing there in her high heel pumps, the essence of a dominant woman.\n\n\"Hello Catherine, it looks as if Heidi is about to fall. I have to say that she's a strong sissy which is why she is going to decide to join us. Please tell Madam Tyffany that she now belongs to The Black Rose and will wear our brand.\" The brown haired madam was ebullient and it showed in her face.\n\nShe turned and showed off her gorgeous ass to us while she walked into what Corinna now recognized as Diane's dungeon concluding that this was not a simple dispute between madams but a maneuver by The Black Rose to take control of The Society. When the heavy door opened Heidi was standing between Rachel and Lena. All three shemales, like Julia were naked except for high heels, their bodies well oiled. Julie walked up to the redhead and kissed her on the lips. Heidi took a half step back but that was the extent of her protest. The other two held her arms down but there was very little effort needed. While the madam's tongue explored the redhead's mouth her concubine Jessica stepped into the picture. She was also naked and I noticed that her right arm was slick with lubricant.\n\n\"They're going to stretch her.\" Corinna commented. We watched the tall lithe Auburn haired woman step up behind Heidi squat down flexing her thighs, take aim and then push her hand upwards into the shemale's ass. She caught the redhead completely off guard. First with a finger then two and next trying to push her hand past Heidi's sphincter. Heidi let out a groan and turned her head to see what was happening to her. Meanwhile Lena and Rachel held onto her securely while Julia had her by the hips. Heidi struggled gamely but she was surrounded and it was too late.\n\n\"Oooh please no!\" Heidi moaned frustrated with her predicament. Still, she kept trying to wriggle free.\n\n\"Heidi this isn't punishment. We need to stretch you, the sooner you're relaxed the sooner we can get on with this. Now spread your legs for Jessica! Obey your new madam!\" Julia ordered.\n\nDespite putting up a good fight the tall concubine was gaining leverage on Heidi. We could hear the concubine easing her hand into Heidi, the lubricant doing its job. Every time Heidi moved Jessica sank another inch into Heidi's guts. Heidi wriggled around some more but she only ended up bent over at the waist wrestling with the two shemales holding her. This gave Jessica the opportunity to apply even more pressure until her hand disappeared from the picture and she was inside Heidi up to her wrist. She stood behind the redhead now and reaching forward grabbed Heidi's shoulder with her free hand enabling her to put more pressure on the shemale's hole from that position. With struggling only making things worse Heidi seemed to give in and her guttural moans were the last vestiges of her protest.",
        "The two shemales stepped away along with Julia and left it to Jessica to continue the process of breaking Heidi. The arm was sliding in an out of Heidi now the lubricant making a sickening sound. The picture on the screen was extremely sharp and it clearly showed the strain on Heidi's body. The shemale's sphincter muscle was wrapped tightly around the librarian's lower arm. Her loud groans were in unison with Jessica's fucking motion with her hand. Julia's concubine was relaxed with a broad smile on her face. The job was easy now and she was enjoying herself. She had Heidi right where she wanted and probably could have broken her on her own but this was going to be a team effort and all of them were going to celebrate Heidi's demise. As she ran her hand up and down Heidi's back and occasionally slapped her freckled ass she gave her madam a quick wink. Whatever had been planned was about to happen. Jessica pulled out of Heidi. What was left was a gaping ass pussy. Heidi collapsed to the floor while Jessica quickly slipped into a strap on with her own dildo shaped and colored like the manhood of a virile black man. The music started, simply the beating of African drums at a very slow beat. Heidi looked around peering up at the four of them all smoothing lube on black dildos or healthy rock hard sissy cocks.\n\n\"What are you going to do now?\" She asked in a panicked voice.\n\n\"The fun and games are over Heidi. It's time for you to become my bitch and be branded with The Black Rose.\" Julia announced.\n\n\"Fuck you Julia! I am going to stick it to you in front of every. . . \" Heidi got halfway up and then her eyes went wide and she caught her breath in mid sentence. Lena's meaty erection sank into her well stretched hole. Lena climbed on top of the redhead and began humping. The weight of the gorgeous blonde shemale and the shock of nine inches of rock hard flesh ramming up her ass drove Heidi back down to her hands and knees just as the drum rhythm picked up slightly.\n\n\"Oh Heidi don't you know by now that whenever we fuck from now on it will be on my terms. You're my property now.\" Julia chuckled over the cries and grunts of the redhead until Lena climbed off of her leaving her right where she had started on the floor.\n\nHeidi looked at the four cocks surrounding her and knew that after days of being held captive she was finally in deep shit. The four members of The Black Rose intended on ending this right here and now. In a fit of panic Heidi lunged between Julia and Rachel trying to break free. While the two of them closed ranks Jessica hopped on Heidi's back slamming her strap on deep into the shemale. I watched her fucking Heidi driving her back to the floor and I noticed that Jessica was far from a plain Jane that strongly resembled a common librarian, muscles ran from her legs and buttocks up through her back. She took her turn with the redhead and then climbed off.\n\n\"It's called sissy in the ring. They'll do this until Heidi surrenders either from exhaustion or from the pain of not being able to cum. Trust me it hurts.\" Corinna referenced her own surrender to Serena and Catherine at the pool as we watched the scenario play out.\n\nHeidi was shaken but still fighting. She was able to stand in front of Lena but Rachel got her from behind. The redhead groaned as the erection slid in. Lena steadied her until Rachel was balls deep and then pulled her down so that she was bent over. Rachel climbed up onto her back and wrapped her legs around Heidi securing their bodies together. This sort of teamwork made Heidi's defeat inevitable. Rachel reached around and grabbed Heidi's tits and kissed her neck and ear while she undulated in and out of her. Meanwhile a smiling Lena had reached out and was gently massaging Heidi's erect cock with her hand. The redhead was truly suffering now. It took less time for Rachel to buckle Heidi's legs and drive her to the ground all the while smiling and preening. She was performing for the camera and The Society whose members would see this. I was beginning to really dislike the brown skinned shemale.\n\nRachel stayed on top of Heidi fucking her with brutal force now. She knew that eventually this was going to be seen most if not all of The Society and so she made sure that everyone could see how much she was enjoying exacting her revenge on Heidi for public domination of her during their last wrestling match. The way she laughed and threw her head back as she fucked Heidi was just out of control arrogance. Meanwhile the other three circled the pair intently watching Rachel sodomize the gorgeous redhead. When the brown skinned shemale was finally finished with Heidi she climbed off of her and it was Madam Julia's turn. This time Heidi didn't try to get away she just groaned as the black rubber dildo slid inside her. The drum beat was intense now and joined in by guitars and horns. The recording had turned into a Mexican ballad the kind no doubt played as a matador closes in on a beaten bull. The three began clapping and cheering to the music as the madam fucked the shemale.\n\n\"What is that?\" Heidi moaned between grunts and groans dizzy from the effort of fighting against the four of them.\n\n\"It's the sound of The Black Rose celebrating your surrender to me my sissy slave.\" Julia cooed into her ear.\n\nThen the four black rose members lined up and took turns with Heidi. She was done now. She was on her knees presenting herself to her captors pushing her ass high in the air. First Lena, Jessica and then Rachel took a ride on the redhead. It had turned into a rout and a victory party for The Black Rose. The four captors clapped and cheered each other on while the gangbang began in earnest. It had become very hard to watch, especially for Catherine. Then the cheering got louder when Heidi reached down and pushed her erection back through her thighs so that the deep purple head was showing out the back of her legs. It was a plea for mercy and a sign that Heidi was close to submitting.\n\nThe camera momentarily pointed downward and exposed the cameraman. He was a thin black man who was naked, his huge erection pointing straight out in front of him. Corinna and Catherine both recognized him as Marquise, Madam Diane's main stud.\n\nWhen the camera was brought back up Heidi was on Lena's lap sitting on the dungeon's bench the blonde's cock buried up her ass. Rachel was standing on the bench over the two other shemales with her milk chocolate dick sliding in and out of Heidi's mouth and Julia and Jessica were on their knees on either side of Heidi's spread legs licking at her still trussed erection. The four were working hard at sending the trapped shemale into the arms of The Black Rose and it looked as if they were going to succeed. Heidi had ceased her struggle. She was willingly pleasuring her nemesis Rachel sucking hard on the long dark cock. Lena was pushing up into Heidi while the gorgeous rotating her hips giving it up to the muscular blonde. Her erection was a spit covered phallus from the licks and kisses being applied by the two female dominatrix.\n\nRachel continued to preen turning to the camera and mouthing \"She's so close.\" and \"She gives such good head.\" She was smiling confidently until suddenly her eyes rolled to the back of her head. She reached down and grabbing Heidi's ears pushed the first splash of cum down the redhead's throat. She pulled her pulsating dick out of Heidi's mouth and blew the rest of her seed all over her face. Rachel jerked her shaft furiously painting her captive's face with an enormous amount of sperm. The camera closed in on the goo covered face, her lips glistening with the sticky nectar.\n\n\"Ugh this is it! I surrender! You have me!\" Heidi let out the words that The Black Rose so desperately wanted to hear.\n\n\"You're surrendering to me to become my slave, my sissy?\" Julia had gotten off her knees so that she could speak to the beaten shemale.\n\n\"Yes. You win. I belong to you now.\" Heidi admitted to her new madam.\n\n\"So you will wear the brand of The Black Rose?\" Julia continued her inquisition and then used her fingers to swirl Rachel's cum around the pale freckled face and then pushed it into her mouth. The gorgeous shemale licked at the madam's fingers and sucked them between her lips.\n\n\"I will do anything you wish. I belong to you now.\" Heidi looked up at the triumphant madam while she continued to lick Rachel's cum from her lips. She had been defeated, she had admitted it and now Julia could use her anyway she wished. Instead of putting her in fishnets, a maid outfit and turning her out to The Black Rose's studs so that she could experience the long withheld orgasm while having a train run on her Julia was far more magnanimous and gentle in victory. She gave Jessica a glance the concubine then began to unravel the twine that had restrained Heidi's erection. Heidi let out a breath when her cock was freed and then a high pitched sigh when Jessica went back down on her engulfing the hard rod down her throat. Jessica moved her lips up and down on Heidi's pulsating cock while the shemale's eyes rolled around in their sockets. Between Lena's cock buried deep inside her and Jessica's mouth bobbing up and down on her Heidi was at the point of no return. Jessica's finger expertly pressed against the base of the penis being the only thing holding back a geyser of sperm. One final minute of torture and then Jessica lifted her lips from the hard penis and smiled up at Heidi while she gently milked her. Suddenly the gorgeous redhead groaned loudly and gave it up to The Black Rose. Ropes of milky white cream erupted from Heidi's dick landing on her chest and drenching her torso. Jessica kept up the milking motion with her hand letting out a lusty laugh watching Heidi's body jerk about uncontrollably.\n\nThe domination portion of the scenario climaxed with Lena groaning from below, She came deep inside Heidi's rectum while the gorgeous redhead pleaded with the muscular shemale to breed her. It was mesmerizing watching the Norwegian beauty's powerful legs flex upwards into Heidi. I had to discretely arrange myself so that no one noticed my hardened penis.\n\nThe picture briefly faded and then the scene had switched to a large room with a padded floor. I figured that it was one of the mansions' wrestling rooms. It was crowded with people. I recognized a few right off the bat. Suzann, Rachel and Lena some of The Black Rose shemales, concubines Jessica and Ashley who belonged to Katarina and the madams, Arianna, Julia and Katarina who I knew from watching her fucking Jodi. There were many others in attendance seated around the edges of the room but I just hadn't met that many who wore The Black Rose tattoo. Julia stepped to the middle of the circle where a nearly naked Heidi was waiting on her hands and knees. There was a harness from which there was a hole that exposed her anus below that her testicles were trussed up hanging out of a hole in the shiny black apparel while her penis hung down through another hole made lower in the belt that wrapped around her waist and through her crotch like a strap on dildo harness. This was used to control the \"pony\" or \"animal\" as the sub wearing the harness was often called.\n\n\"I would like to announce the latest victory for The Black Rose, a conquest of superior shemale flesh. After some expert convincing...\" Julia was briefly interrupted by laughter and then she continued. \"this gorgeous redhead has agreed to be our slave, to wear our black rose tattoo. Now if you don't mind I would like to take a ride on my newest gelding. So let's get on with this collaring ceremony.\"\n\nAs the crowd of about forty briefly clapped Julia approached Heidi with a leather bridle. She held it in front of the redhead who after a brief moment lowered her head allowing the madam to fit the symbol of submission around her head. There were the two hooks that fit into each nostril with leather straps that went up over her head and down to the back of the collar that went around her neck, and a ring gag that held the mouth open that was attached to straps that wrapped around her head and attached to the collar in the back of the neck. Additionally there were the reins that ran off the back of the bridle that Julia was going to use to lead Heidi when she rode her.\n\nNow that Heidi was fitted, Julia, naked except for stiletto heeled boots and a riding crop, mounted the broken in shemale grabbing the reins that ran off the bridle. She gently yanked at the leather straps and at the same time she quickly dug her heels into her pony's thighs. The redhead reacted with her head now pulled upright began to crawl forward around the large circle doing an amazing rendition of a show horse on display. We watched Julia control Heidi with the reins and her crop, her legs now wrapped tightly around her slave's torso. Then with a loud crack of the crop on the redhead's right buttock and a loud shout of \"Hiaa!\" from Julia the redhead broke into as convincing a gallop that a feminine shemale could muster. With that the whole room broke out into loud applause with everyone standing in order to congratulate their victorious madam. For me the authenticity of Heidi's submission wasn't her bridled cantor but the penis that had been hanging limp between her legs was now stiff with excitement. The redhead was now clearly enjoying her new role with The Black Rose.\n\nCatherine was the first to rise from her chair. She had a look on her face that reminded me of someone who needed an antacid. She walked down to the front of the room and stood in front of the screen.\n\n\"I'm not letting this go. I want ideas right now.\" Catherine stood with her arms folded in front of her.\n\n\"We could hit any member over there. Gerri has two prime candidates in her family, her sissy Angelina and Amy her concubine. I've heard that they're not so happy to be potential recipients of rose tattoos. Out of the madams you've got Tanya and Alicia. I think that we'd have a good shot at converting the redhead.\" Despite her confidence Corinna's list of two madams were two ladies that would have been hard screws to turn. Alicia a very well built redhead was the youngest of The Black Rose madams.\n\n\"Look we've got a problem here. So let's think it through. Those women thought long and hard before taking Heidi. I'm sure she was at the top of a list of members they felt confident they could dominate and then get a quick surrender. Interestingly enough they didn't get that. It took days to convince Heidi. She wasn't as easy as they thought she would be. I don't know why they thought that she'd be easy but my guess is that they studied her very well before they moved on her. They underestimated Heidi. She didn't go easy. We have to get a good read on somebody over there. Do we know anyone unhappy over there? If we look at it that way this could be much easier.\" Serena spoke up.\n\nFor a long moment Catherine stood and stared at the blonde. Her demeanor had me thinking that maybe Serena had said something that may have gotten her in trouble.\n\n\"You are one smart girl Blondie. That's solid analysis.\" Catherine stated.\n\nTell me she's on to something and you're not just being sarcastic.\" Catherine's look had fooled even Corinna who received a raised eyebrow from our madam.\n\n\"Alright! Tell me who seduced Heidi again?\" Catherine wanted to be reminded.\n\n\"Marquise!\" We answered in unison.\n\n\"Was this a chance encounter? Did someone with Heidi's experience and sexual ability fall in love in a couple of hours in a nightclub?\" Catherine inquired.\n\n\"That's what Alphonse told us.\" Corinna replied.\n\n\"Well thank you ladies your discussion along with information from my sources have gone a long way towards this next strategy. It's going to be a radical one. One that will just blow away any advantage Diane thinks she may have gained by turning Heidi.\" Catherine informed us.\n\n\"When are you going to tell us about your sources?\" Corinna gave her madam a smile.\n\n\"I'll keep my resources to myself for the moment thank you. I will tell you the plan I have though. We'll need something that our victim considers irresistible. A gorgeous look, sex appeal through the roof, great legs, and a body that just won't quit.\" I figured that Catherine had to be thinking of using Serena as bait. After all she was the hottest thing in high heels in The Society. \"And most importantly she'll need a fat juicy cock.\"\n\nJust as I was thinking about Corinna, Alana or Samantha I noticed that all three of them were staring at me. I must have had a serious \"what the fuck?\" look on my face.\n\nCorinna was the first to speak. \"I've know every sissy in The Society, trained, dominated and fucked just about every one of them. You know none of them are even close.\"\n\n\"To what? Close to what?\" I replied bewildered.\n\n\"Close to you, the way you look and carry yourself. There are piles of gorgeous women in The Society but I have to say that if my life depended on someone seducing a man in public maybe I'd pick Jill ahead of you but that would be it.\" Serena added.\n\n\"That young African man that most recently came with Madam Sinn was so resistant to being with a sissy and then Sarah gave you an order and just like that you got him to go down on you. Well, now I'm giving you another order and I see no reason why you shouldn't be able to get it done just as easily. Carey for more than a couple of reasons you're a very effective weapon that I can use against The Black Rose. Get her ready.\" With that Catherine walked out of the room. I was left with no idea as to what I was going to be asked to do except most probably act as bait for some sort of scenario that my madam was going to set up. I was thinking that I might actually shit into my panties and my legs were shaking. I tried my best to hide it walking out of the room with Serena and Corinna on either side of me. I was being asked to play more than a supporting role in this major skirmish against The Black Rose. I immediately thought about the talk that I had with the very wise Sarah because as it would turn out this was the event where my reputation would be made or lost in The Society. "
    ],
    "authorname": "Barno",
    "tags": [],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-society-ch-4-1"
}