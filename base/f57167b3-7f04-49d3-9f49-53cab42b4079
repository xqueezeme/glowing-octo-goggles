{
    "title": "Sholan Alliance - AU Bk. 02 Ch. 05",
    "pages": [
        "All intimate relations are 18+. Enjoy.\n\n*****\n\nIt had been close to two weeks since Billy had been shot. Marcella really wanted off the ship before the interrogations were done. There was a very high possibility that she would be exposed as an inside agent and that would be bad for her. It had taken some time but she had finally managed to get a call made.\n\nShe wasn't sure why it had taken so long but had to figure it was related to the entire mess. Once it was connected Marcella looked relieved. \"Ricky it is so good to see you. I want to come home but we are being kept here for further observation.\" A tear artfully trickled down her cheek. \"The Sholan's and Swiss have treated us well but being here keeps bringing back memories. I need to get away from here.\"\n\nRick gave her a pleased smile. \"I know since I have been trying to get a hold of you since it was announced who was on board the pirate ship. They kept telling me that you were undergoing treatment and therapy.\" When the tear trickled down his hand came up and touched the screen. \"I understand and will see what I can do to get you released. We have some fine therapists here as well who can help you. Can you wait a little while longer?\"\n\nWhen he reached out and touched the monitor she gave him a watery smile. \"As I said they have been treating us well so I can survive a while longer but the sooner I am home the happier I will be.\" And alive which was a nice idea. She would be off the planet fairly quickly as well so if her name did come up they wouldn't be able to get to her. \"Love you Ricky and I hope to see you sooner than later.\" The call was disconnected and she sighed before standing and slowly left the room.\n\n~~~\n\nAs soon as they were disconnected Ricky sent a message to an anonymous account. He indicated that he needed instructions on the handling of a sensitive package. He also indicated that it was very time sensitive so the sooner he received instructions the better. Once the message was sent Ricky leaned back and knew that he would probably have instructions later that day. If Marcella was turned damage could be done to the organization and how they operated. There was a very good chance she would be ordered eliminated. He didn't like that idea but he did understand the need.\n\n~~~\n\nSixth received the message from Ricky shortly after he had sent it. There was a small delay since it had been routed through so many portals and network connections it wasn't funny. He reviewed it and sent a message to First for instructions. They might end up having an actual conversation but chances were good it would simply be a message. Face to face conversations were kept to a minimum even if they were virtual.\n\nOnce he was done he walked out of the secure room and to the officer in charge of the Russian forces. \"I need a quick meeting with General Ustinov.\" He stared at the General's secretary till the woman made the call.\n\n\"General your attach\u00e9 needs to talk to you briefly. Lt. General Pricops indicated that it is urgent.\" She listened for a moment. \"Please go in sir. The General has a few minutes before his next meeting.\" After pressing the button to unlock the door she went back to what she had been doing.\n\nPricops walked into the room and after ensuring the door was securely closed settled down in a chair. \"I received a message that our insider is requesting recovery. Do you have any instructions sir?\" Pricops was the contact but the General was in charge of the sixth directorate.\n\nThe general leaned back and glowered at the desk. The insider had been very useful over the years but with her in the hands of a telepathic race was of great concern. \"Retrieve her and then eliminate her and her controller. If their flight goes down in an accident it will draw far less attention than if she was taken off planet. Get First on getting her freed using his channels.\"\n\nPricops nodded since that was pretty much what he had expected. \"Consider it taken care of General. I will keep you updated on the retrieval and elimination.\" He had been working with the General for years and had actually brought him into the Organization.\n\n~~~\n\nUnder Secretary Nelson received the message and sighed. The Sholan's were being such a pain in his ass. Maybe if they had come later it would have been acceptable but as of now they were a major road block. The organization was still in the process of revamping their plans to take them in account. Also operations of the fleet had been restricted for the moment which was causing problems as well.\n\nThe men manning many of the ships were not pleased with being restricted to the bases. It was both they disapproved of not getting any treasure as well as lack of access to new women. Most of the women were prisoners and well used and cowed. He didn't like that aspect but it helped keep the men and some of the women happy. As far as he was concerned once they had taken over many of the crews would become disposable. \n\nAfter contemplating what to do he finally started working on a message to his seniors about the women being restricted to the ship. He did not specify Marcella since that would draw attention to him. Some of the points he had made included lack of communications, lack of access by their families, and not being allowed to go home even if for a short time. Once he was done he forwarded it to his boss and then went back to his normal work.\n\n~~~\n\nThe cell door opened and the usual two guards were there for him. All that really indicated was another day of interrogation but at least it got him out of the cell. He knew he was probably going to die but if he gave them enough information maybe they would be quick about it. He had no urge to find out what hanging or a firing squad might be like and would far prefer the needle.\n\n\"Flight Engineer Sing come with us.\" The guards accent was thick enough he almost couldn't be understood but after so long it didn't matter since he knew what was coming. He stood up and held his hands out for the shackles and followed the first man down the hallway while the second followed behind him. The room they were taking him to was a plain white with only a desk, two chairs, and a lie detector and voice stress analyzer.\n\nThe other chair was all ready occupied and when he came in the woman looked up and nodded to the two guards. They led him over to the chair and secured the shackles to the heavy steel table. \"Good morning Engineer Sing. I have some more questions for you but before that I would like you to read this document.\" She slid a plascopy over for his review.\n\nNow this was different and actually briefly caught his interest. He started reviewing the document and was rather shocked at just how much information they had gotten from him. He had tried his hardest to toss in confusing descriptions of parts of the ship. It was his hopes that they would fry the hidden storage device that contained the route to one of the bases. The last page detailed the probably results of this and especially if he went to trial. \"Fine, so what does this mean for me?\"\n\nShe didn't smile but she knew she had him. \"Tell us truthfully the answers to the questions we have and a deal might be worked out. If you accept and the information is accurate and detailed you may be offered a new identity. You will be given sufficient funds to survive on but you will be in a secure location for the foreseeable future.\" Give him a light at the end of the tunnel and the worm will head for it.\n\nSing actually looked shocked when she said that. He knew, deep down knew, that he was going to die. He didn't want to in any way but he had known he was going to die. Occasionally the guards would slip and make comments on the execution and how it was going to be done. One of their favorites was facing one of the Sholan warriors. They still had some sort of code duello and all of them were chafing to get their claws on him. What he didn't realize was that this was carefully scripted based on his psych profile.\n\nSing leapt at the chance. \"Ask me what you want and I will tell you everything I know. If I do end up being executed I ask that it be quick and not public. I don't want my family any more traumatized than they already are.\" When the woman started asking questions he answered everything he could.\n\n~~~\n\nThis time when Billy woke it was right after being brought out of the cryo chambers. He was still hurting and couldn't do much but at least all the tubes were gone. Billy corrected himself, the really annoying tubes for taking care of bodily waste. He still had an IV and though disconnected a chest tube just in case they needed it. There had been three to start with and by the time they had tanked the two of them he was down to one. \n\nAn older Sholan male looked down at him and smiled slightly. \"Good afternoon Commander. We are almost done with the resus and will be moving you to a room shortly. Your Leska is awake and has been for a short time. We figured it would be easier on you if we woke her first so she would be in your mind.\" He gave Billy time to verify this before speaking again.\n\n\"I am Physician Rijuel and you are currently at the telepath guild in the medical section. Your companions have been provided rooms next to each other in a nearby guest house. Once we verify you are doing fine we will have them come in a few at a time.\" As he was talking he was getting samples with a diagnostic unit and was reviewing results from the resus.\n\nBilly closed his eyes for a moment and couldn't help but smile when he felt Tasha. *Hey love how are you doing? I ache which I am sure you know but I am sure they will give me something soon for that.* He didn't have much energy but he had to contact her for at least a moment.\n\n*Hello back love and it is good to feel you in my mind again. I know and you need to relax. Once they get you to a room I will be with you.* He could feel her love as well as concern for him. Satasha wasn't doing very well emotionally at the moment. Yes the attack had been a month or longer ago but they had been in cryo for a good portion of the time. To her it was almost as if it happened just the other day. *The girls are doing as well as can be.* She had felt his concern about that.\n\nBilly tried to relax but the pain was too intense for him to go to sleep. As he was laying there with his eyes closed he was listening to what was being said. One thing he really needed to ask about was the changes to his hearing, eyesight, and sense of smell. Since they had linked they had gotten stronger and that rather confused him. Onboard the ship he hadn't been coherent enough to really ask but here he figured he would be able to.\n\nEventually the doctor came back over. \"Okay Commander we are going to give you some medications for the pain and to prevent an infection. You will be moved to the room in about fifteen minutes and your Leska is waiting there for you. I will see you tomorrow morning unless something comes up. I need to schedule some tests for you before we do anything else. A day or two delay won't hurt the repairs or your healing.\"\n\nBilly nodded and then yawned. \"Tired of sleeping darn it.\" It did help with the pain though and now that he was more comfortable he relaxed further into the bed. He guessed he must have fallen asleep since he awoke as they were moving him to the bed in the ICU room. When he opened his eyes Satasha was there curled up in a chair waiting for him.\n\nOnce he was in the bed she came over and curled up next to him and started purring. \"It feels good to be able to touch you again. We don't dream in cryo but I think somewhere deep down I was aware that you were asleep.\" Her hand was gently stroking his chest and abdomen and her head was resting on his good shoulder.\n\nBilly turned his head towards her and she responded to his desire and gave him a slow gentle kiss. He leaned into it and lightly nibbled on her lips and then licked her nose. \"I can't wait till we can do something other than just sleep next to each other. The link might not be very strong right now but how I miss making love to you.\" As he was slowly starting to drift off he rested his head against hers. It wasn't long before he was asleep.\n\nSatasha missed the intimacy as well but for the moment the drive to pair every five days was minimal. At the moment all they needed to do was stay in the room in close contact and it sort of took care of the drive. Now that she was back in his arms she was feeling better. Since she wasn't tired she simply relaxed next to him for a while before shifting and putting on her VR glasses. After connecting them to the comm. she started reviewing various messages that had been left for them.\n\nSome she responded to but others she simply saved for Billy to review when he was coherent. Finally she opened the phone connection and called her parents house. It took a few before someone answered and it was her younger sister. Satasha had to smile at the excited squeak she made.\n\n\"Satasha it is good to hear from you. Where are you? The last we heard was you were headed to the alien's plant.\" J'efra was almost bouncing in the chair since she hadn't seen her for what seemed like forever. \"Tell me about them. What are they like? We have seen pictures but most of the details have been kept secret. How did you meet them? All we know is that you were reported missing and then returned to the ship.\"\n\nSatasha started laughing. \"Calm down you silly kit and at least let me answer some of the questions. Others are going to have to wait.\" When her sister sort of stuck her tongue at her she wrinkled her nose. \"For that I might make you wait...\" That got a sort of whine from J'Efra. Satasha laughed again. \"I am teasing silly but some answers will have to wait. I did go to the Human's planet but the human that saved me was injured and needed medical help they couldn't provide. I came back with him and we are at the telepaths guild while he is getting treatment.\"\n\nThe talking had started waking Billy up and he looked around till he found his glasses and flipped them on. It took a moment for them to connect and he had a brief view of a young Sholan female who was looking very excited. Moments after connecting his image appeared on the screen next to Satasha's and she froze in shock. Billy grinned slightly. \"Hello and good whatever time it is here. I am pleased to meet you and I take it you are Tasha's younger sister?\"\n\nJ'Efra's eyes did get really round and she had to wonder why a human connected to the call. Since they were using the VR glasses only a static image showed. He looked strange being all hairless and with rather flat features but the smile he had seemed nice. When he spoke to her she lowered her ears slightly in embarrassment. \"I am... Tasha? Why do you call her Tasha?\" \n\nBilly grinned at her reaction. \"Maybe because she is my bond mate.\" There was definite amusement in his voice and he almost laughed when Satasha covered her face and groaned. *At least I didn't mention us being Leska's... Want me to?* When she sent him an image of him being used as a clawing post he started really laughing. \"Ouch, damn it, don't make me laugh you evil woman.\" His chest objected to that.\n\nAs he was talking several more Sholan's came into the room J'Efra was in and they all looked startled seeing the image of Billy on the screen. J'Efra turned and looked at them. \"Momma, Poppa he is Satasha's bond mate.\" \n\nThat most definitely got a reaction from them though they apparently managed not to give a knee jerk reaction and demand answers. Billy smiled even more. \"I assume you are her parents and the boy is her brother. I am very pleased to meet you though this wasn't the way I really wanted to.\" Even though they couldn't see him he didn't have a shirt on and the bandages were very obvious on his shoulder. That wasn't even mentioning his right arm being strapped to his chest.\n\n\"My name is William Denton Madlax but I go by Billy. I am the captain of the SS Sandi as well.\" He turned to Satasha and smiled down at her. They couldn't see him do that and he continued. \"You have a very lovely daughter and I am so very pleased to have met her. One of the most wonderful women I have ever known.\"\n\nSatasha lowered her ears and gave him a gentle kiss. \"Hey mom and dad. I hadn't really wanted to introduce Yilly this way but he was injured on Earth. When we can I will bring him home for formal introductions. He is getting tired and we will talk to you later. Love all of you.\" She disconnected and groaned. \"We are going to have my father here sooner than later. He can be a bit overbearing just to warn you.\"\n\nBilly smiled at her and kissed her before yawning. \"Damn it I am not going to sleep right now. I have better things to do like see Z'Marl, my girls, and my frenemies.\" He smiled a bit more when he called the ladies frenemies. \"I want to see the rest as well.\"\n\nSatasha smiled at him and nuzzled his ear before giving it a light lick. \"They have been told they can only come in one or two at a time. Who would you like to see first?\" Her hand was stroking the part of his chest that didn't have bandages on it. The contact felt so good and she could tell he was doing better from what her touch told her.\n\n\"Z'Marl first. I know that Dani is upset as well as Sally but Z'Marl needs the contact.\" God he wished his other hand was usable so he could touch her more. As it was his arm was under her head as she lay there curled up next to him. He was stroking her side but at the moment he wanted to touch all of her just to remind him that they were both alive.\n\nSatasha nodded. \"Good choice Yilly and I will get her and then bring the others in.\" She stood and walked over to the door and called for Z'Marl to come in. When she did Satasha gave her a good hug and stroked her hair for a moment. \"It is good to feel you again. I have missed having you with us.\" \n\nZ'Marl leaned into the hug and started purring. She didn't say anything but she was sure that both could sense her feelings. After several moments of relaxing in Tasha's arms she stepped back and moved over to Billy. She had seen him a number of times while aboard the Fijishi but he had been pretty out of it. \"Hello Yilly, how are you doing?\" Her hand was lightly stroking the sheet after she sat down and her voice was low.\n\nHe smiled at her and reached over with his good hand and lightly grasped her hand. \"Better now that I have the two ladies I love near me.\" Billy tugged on her hand and smiled. \"Come lay down silly. I am not that breakable. I want to touch and hold you which I can do now.\" When she finally settled down next to him Billy captured her lower lip and nibbled before kissing her.\n\nZ'Marl wanted to cling onto him for dear life but was scared to even touch him. He had to encourage her to settle down next to him and in his arm. When she did it was too much and she turned her head into his shoulder and started crying. \"Damn you human. Don't you ever do that again or I... I... I will hate you forever.\" It was so stupid that Billy had come to mean so much to her so quickly but he had accepted her as she was. \n\n\"I could have lost both you and Tasha. That would have destroyed me damn you.\" It was hard to understand between her sobs but both got the idea. Billy pulled her closer as Satasha settled down next to her. As they sort of sandwiched her she could feel their love for her and oddly it felt like she could feel their fear as well. How long she cried she wasn't sure but before she realized it she had fallen asleep. Even with the others there to comfort her she hadn't been sleeping much and being back in his arms was glorious.\n\nBilly pulled her as close as he could and his injuries could go to hell for the moment. \"I know Z'Marl and to be honest I was scared to death as well. We love you and will take care of you.\" He had to wonder how they had fallen in love with Z'Marl so quickly but he could feel Satasha's emotions as well. He didn't really think about it when he so very gently nudged her into sleep. \"The doctor can go to hell before he gets her out of my arms. When she wakes up is soon enough.\" ",
        "Satasha had to blink a tear back. \"She called me Tasha. Only you have ever done that and not even your girls use it.\" It was going to be a tight fit but she was staying there tonight as well. \"Let me bring the others in after we get her robes off. I don't know about you but I hate waking up in cloths.\" She paused. \"Well I will take them off since you are rather down for the count.\"\n\nBilly couldn't help but smile. \"I noticed that as well and we will deal with it later. Right now I want to see the rest of my family.\" When he said that he didn't even think when he mentally added all the others as well. He kept lightly stroking Z'Marl's ears as Tasha carefully removed her clothing and set it off to one side. \"I think you wanted to take her clothes off just so you could get her nude.\" He winked at her.\n\nSatasha wrinkled her nose at him. \"And what makes you think I haven't seen her nude before?\" Once Z'Marl was undressed she pulled the sheet up partway to keep her from getting cold. \"I am going to get your girls first.\" She walked to the door and opened it and let them in.\n\nDani hurried in first and then froze when she saw Z'Marl in the bed next to Billy and her robes next the bed on a chair. She frowned at him since that really wasn't something she had expected. \"Daddy what are you doing with her in your bed? Satasha is your wife right?\" She actually sounded rather accusatory when she said that. \n\nSally snickered at her and moved over to the bed and settled down next to Z'Marl and lightly stroked her arm. \"Good, she is sleeping. It has been so rough on her and Dani. Now maybe my little sis will be able to get some sleep. If not I am going to have to talk to Kingie and see if he knows of any nice young males to help her sleep at night.\"\n\nBilly gave Dani a tired grin. \"Tasha is my bondmate which is normally a short term marriage for the purpose of having cubs. I think that was explained to you right? Z'Marl is going to be my companion if she accepts. Well when I get a chance to ask her.\" He looked down at her and had to smile sadly. Now that she was asleep he could see the signs of stress and lack of sleep on her face. \"Now keep it down because if any of you wake her I will put you over my knee when I am up and around.\"\n\nDani had been turning towards Sally to yell at her for her suggestion when Billy spoke. She turned to him and her shoulders slumped. \"God I am not sure I can deal with this. You have a wife, bond mate or whatever, and a lover?\" She put her hands over her face and rubbed it. \"I might get drunk tonight and sit in a corner gibbering.\"\n\nSatasha walked over and pulled her into a good hug. \"I know we haven't really had a chance to get to know each other and I do look forward to it. This is somewhat normal for my culture. There is nothing wrong with having a bond mate and companion as long as any cubs are between the bond mates.\" She stroked her back and tucked the shorter girls head into her chest. \"I do know about it and don't have any problem with it.\"\n\nBilly turned to Sally. \"Don't tease her too much. You have had time to get used to my relationship with Tasha but she hasn't. I know that she has known about it for over a month but she hasn't seen us together, or barely.\" He talked to the two girls for a short time before the others cycled through and by the time Crystal and Kingie came in he was almost asleep. He sent a thought to Satasha.\n\n\"Yilly wanted me to tell you that you are looking better and he is glad for that.\" She turned and smiled at the two in the bed since they were both asleep. \"Once he is awake he would like to meet your family Kingie and tell them what a good warrior you are.\" He lowered his ears as she gave both of them a hug and showed them out.\n\n~~~\n\nThe next morning they woke up and Billy looked over at Z'Marl and he could tell she was starting to wake up. He had rolled onto his left side at some point during the night and she was curled up facing him. Tasha was on the other side of her and had her arm around her waist and was waking up as well. Billy decided to steal a kiss and leaned forward and pressed a kiss against Z'Marl's lips and nibbled just for good measure. That woke her, or started her waking up and when she opened her eyes and blinked he gave her a low laugh. \"That is such a cute expression you have. It seems a silly cat fell asleep in bed and slept the night through.\"\n\nZ'Marl leaned into the nibbling and then nipped his nose before licking his face and getting the usual Gah from him. \"That is what you get for teasing one of your lovers. I might have to toss you over for the next cute and incredibly sexy and smart man I find.\" Damn it now she was a bit bothered by his nibbling and couldn't do anything with him about it.\n\nSatasha snickered at her and stroked her fur. \"Maybe later while he is asleep we can go and relax and have a bit of girl time.\n\n~~~\n\nLater that morning the senior doctor came into the room after they had eaten and Billy had been helped to the bathroom. Since he was up Z'Marl and Satasha had given him a good sponge bath which felt both really good though embarrassing. He did feel much more human though and had the head of the bed elevated so he was sitting somewhat upright. \"Morning doctor, what can you tell me about my injuries as of now? I would like to get an idea of what sort of reconstructive surgery you are planning and the recovery time.\"\n\nThe doctor settled down on a stool and did a quick scan of the chart before speaking. \"Well as you know the critical injuries have been repaired. They are still doing some healing but the scans from yesterday show they are healing well. Once they finish healing you shouldn't have any lasting side effects.\" He took a sip of his drink. \"Having said that you still have some extensive damage to your skeletal structure and muscle tissue. I am still discussing it with my staff and several other specialists but we are looking at two or maybe three courses of reconstruction.\"\n\nHe waited a moment to see if he had any questions before continuing. \"First there is the matter of your shoulder blade. It is going to need either reconstruction or replacement. The projectile that impacted shattered it in several large pieces and a number of smaller ones. A bone graft is also being considered. The question that needs answering is which would be better for you in the long run. With a replacement you would be up sooner but how would it fare down the road. Next is the damage to your shoulder girdle. That does appear to be a fairly straight forward repair to the bones but the muscles were badly damaged as well the nerves.\"\n\n\"That repair might be best accomplished in two stages. First would be to rebuild the bones and let them start healing before dealing with the muscles and nerves. The one thing that has to be taken in account is that while this is being done you will keep healing. That might require us to surgically correct the healing tissue which would also extend your recovery. I want to finish talking to my team today and tomorrow I will present you with a plan to review. As soon as you approve the plan we can get started. As far as the length of time I can only give you a general answer since you are not Sholan. I would expect the surgeries to take about two months allowing for healing between each and four to six months of physical therapy and recovery.\"\n\nBilly leaned his head back on the bed and sighed. \"Well that is better than I had really expected but is still about 8 months longer than I really want.\" Satasha snickered at him and he grinned back. \"I will see you tomorrow and we can get started.\"\n\n~~~\n\nThe next morning the doctor came back and Billy was sitting up and trying to carefully eat with his left hand. Thankfully the food was either finger foods or cut into small pieces that could be forked up easily. When the doctor walked in Billy waved the fork in his general direction since his mouth was full. Once he had finished chewing he nodded at him. \"So what is your plan of attack? I am pretty much willing to go for what you feel is best. I don't want to take any longer than needed to heal but I also don't want to rush the repairs.\"\n\nThe doctor had to smile. \"That is scary, a patient who is willing to take the time needed to get fixed. I might just have to send a telepath in to make sure you didn't have any brain damage.\" He noticed Satasha covering her face and snickered. \"In all seriousness what I would like to do is start with the shoulder blade and shoulder girdle. Some of the nerve and muscle damage can partially be dealt with at the same time. I would be hesitant to try and fix it all at the same time. Even doing the minor reconstruction of your nerves and muscles is something I will have to evaluate while we are doing the bones.\"\n\nBilly frowned slightly as the doctor was speaking and then nodded. \"All jokes aside don't rush this. I can still use my brain while healing. One thing I am worried about is our link. I don't know how long it will hold off before we are forced to be intimate. From that point of view I think it might be best if we take it in smaller repairs so the healing doesn't take as long.\"\n\nSatasha had to nod at that. \"I agree with Yilly on that Physician. I can feel the link starting to draw us together.\" She nibbled on a finger for a moment. \"Our next link day is technically tomorrow. Can the surgery wait till the day after?\" Even if it was simple intercourse both of them needed the release and sharing of memories.\n\nThe Physician nodded in understanding. \"That is a good way to look at it and we have taken that in account. From what I understand while Yilly is healing from the worst to an extent just staying in close contact on your link days is what is needed.\" He glanced at the tablet and then back up. \"Thank you for bringing the date up and I will ensure you aren't disturbed for your link day. You do have a dispenser so you won't have anyone coming in unless you need something.\"\n\nRay looked thankful for that. \"Sounds like a deal Doc and I am going to spend the rest of today with my family. I think I would prefer smaller surgeries even if it means longer time down. I am not going to take a chance of anything causing problems with the link or our health.\"\n\nHe stood up. \"In that case I am going to make some changes to the plan and I will see you the morning after tomorrow. We will get started as soon as your link day is over. Make sure you rest as well Capt. Madlax.\" He gave Satasha a smile. \"Be careful tomorrow and be gentle. I can understand the drive based on the records and frankly it will probably be good for both of you.\" With a gentle smile he left the room.\n\nBilly looked over at Satasha and had to laugh since her ears were lowered in embarrassment at the doctor's comments. \"Relax silly, I am sure he understands and since we have tentative permission to carefully have fun I am going to. That isn't even mentioning how much I want to as well.\" He held his hand out to her.\n\nShe blushed a bit more even as she moved over to the bed and settled down. \"I so miss you and love you. I want to make love to you even if we can't be our normal active selves.\" She tucked her head into his shoulder and shuddered. \"I was so scared Yilly. I wasn't scared for myself but that I would lose you my love.\"\n\nHe didn't say anything but simply held her since he had been so scared as well. He knew that she could feel his emotions and he could feel hers. \"Let's relax for a few minutes before anyone comes in. We need a bit of time to ourselves.\"\n\nThey cuddled for a while before Satasha was called away. There was a visitor for her and she sighed. \"That is mostly likely my father and he will want to meet you. Will it be okay if I bring him past for a few minutes?\" When she felt the assent from him she slid out of bed and after a good stretch left the room.\n\nMoments later Z'Marl came in with Vangie and Billy's girls. Billy grinned. \"Come here you lovely woman and give me a kiss.\" As the other three settled down Billy smiled at them. \"Settling in? Are you going to meet Vangie's family soon?\" He asked Sally and she blushed a bit. \n\n\"Yes Daddy I am going to meet them tomorrow. That is going to be rather odd since he has a girl just a bit younger than Dani. She keeps teasing me about being a reverse cougar darn her.\" She glared at her sister who simply grinned at her.\n\nVangie wisely didn't get involved. \"We figured since you and Satasha won't be available tomorrow it would be a good time to show them around a bit. Kingie and Crystal are going to his family's house as well. Right now they are with one of the telepathic healers. Crystal is starting to have a few issues and has agreed to at least talk to one.\" His ears were set and he had to work hard not to growl.\n\nBilly nodded. \"I was going to ask how she was doing. If possible this afternoon I would like to see the two. I feel somewhat responsible for them and want to keep informed as much as possible.\" Z'Marl was finally curled up next to him and he smiled at her. \"You look better than you did yesterday. Less tired though still pretty stressed. I have one thing I have been meaning to do and I am going to take care of that now if you don't mind.\"\n\nShe looked a bit confused since she couldn't think of anything that he might need to do. Maybe he wanted her to review some additional equations or something. \"What do you need Yilly? I hope I didn't mess up an equation or something did I?\" She asked him.\n\n\"Hardly lovely lady. I want to give you a sense of security and belonging.\" He rolled somewhat towards her and grasped the ruff of her neck and was pleased when she postured for him. \"I want you as my companion.\" He licked her neck for a moment before biting down till her body melted. Once she did he licked where he had bit her. \"Such a lovely lady and I will let you bite me later.\"\n\nDani froze and frowned since she didn't have any idea what was going on. That and from what little she knew this was something intimate and it felt rather wrong to be in the room at the moment. As she was debating on leaving Satasha walked in with an older Sholan male.\n\n\"Everyone I want you to meet my father Asarl. Dad this is my bondmate Yilly, his companion Z'Marl, his daughters Sally and Dani and one of the warriors Vangie.\" She raised an eyebrow at Billy and only got a smile back from him. She knew what he had done and understood but wanted to growl at him.\n\nBilly gave him a polite smile. \"I am pleased to finally meet someone from Satasha's family. When the doctors say I can I want to come over and meet the rest of her family.\" Tasha might be annoyed with him but he wasn't going to hide any aspect of his relationship. There was nothing to be ashamed of with having a bond mate and companion.\n\nHer father looked at him and frowned slightly. Frankly he wasn't impressed with the pale and furless individual. For his daughters sake he would with hold on deciding if he liked him or not. \"When you are better we will welcome you to our house.\" There, the politeness was out of the way. \"What is your interest in my daughter?\" It was sort of abrupt but he didn't care.\n\nBilly raised an eyebrow but decided to be honest and not make any jokes. \"At first she was simply a friend but we were both lonely though for different reasons and became lovers. We did talk about bonding before I took her to the mother ship but decided to wait till we found out what was going to happen. I did take her as my companion shortly before we left.\" He took a sip of cshar. \"Once there we found that we were going to be together and Satasha surprised me with the bonding ceremony.\"\n\nHe took another sip since the next bit was going to rock her father's world. \"Once we reached earth we ended up becoming Leska's and I do mean exactly that. We are Leska's as you know it. If either of us dies so will the other.\" That was going to upset Dani since she probably didn't know it.\n\nAsarl listened without changing expression till Billy mentioned the two of them being Leska's and his jaw dropped and his ears went back. He glanced at Billy and finally noticed the small purple pin attached to the dressings. When he glanced at Satasha he finally noticed it as well. \"How the hell did you manage that?\" His voice was accusatory.\n\nBilly's face hardened. \"Nobody knows and I don't appreciate the implications of your comment. It is fact and proven.\" Now he was angry and Satasha could feel that.\n\nShe turned to her father. \"Yilly is starting to get tired. When he is feeling better we will contact you. I will escort you to the front desk so he can relax.\" Satasha was not pleased with her father and when she wasn't so angry he was going to get an ear chewed off. She pulled him out of the room and finally growled at him. \"Don't ever question what we have like that again father. If you do you will not see us till you come to terms with it. Good day father.\" She showed him to the front desk before stalking off.\n\nWhen she entered the room she heaved a rather disgusted sigh. \"Sorry about that all of you. I didn't expect my father to be outwardly friendly but that was uncalled for and especially now. Father will not be back till Yilly or I say he can.\" She flopped in a chair next to Dani and wrapped her arm around her.\n\n\"You really didn't need that Dani since you are so new to our culture. Normally he is more reticent but I guess he was rather startled with the whole Leska deal.\" She leaned back and took several slow breaths to calm down. When Dani leaned a bit towards her she was pleased.\n\nDani had to shake her head. \"Actually it helps. It makes you appear more like people and not aliens. I could tell you a few stories of family gatherings. Some of the old people have grudges that are old enough they have to dig them up and dust them off before arriving.\" She had to laugh at Billy's eyeroll. \"I have to admit that you Sholan's have nice fur and it is warm and silky feeling. I don't know about going home with anyone but it does feel good and relaxing.\"\n\nBilly had to mutter. \"Yah and many of the grudges are so old most don't remember what they were about. Just the 'I hate you because...' or 'you took something I wanted...'. Why they hate the other or what was taken they don't remember. That is especially true if it was handed down from their fathers.\"\n\nSally snorted. \"Yup damn rednecks. Can't find anything else to do than keep feuds going. That is one of the biggest reasons I went to college.\" Darn it now she was feeling grumpy and hungry. \"I think I am going to have Vangie take me to town and find something to eat. Dani you want to come?\" They needed out of the room to give Billy and Satasha time to relax.\n\nVangie had to nod. \"Sounds like a deal. Want us to bring something back for you three?\" He stood up and adjusted his warrior outfit while he waited for the two girls to stand up as well. \"I can get you some of your favorite nibbles when we come back.\" \n\nBilly suddenly looked really intent. \"Oh heavens yes. The food is decent but I want some real food.\" He took a moment to think before giving them a list of what he wanted. He also told them what Satasha wanted as well since he could sense what she wanted. \"Thank you and take your time. I am not that hungry right now. Dani have fun out there and no dragging home any stray Sholans.\"\n\nDani simply grunted at him before leaving with the rest. Personally they were having way to much fun teasing her and it was getting rather annoying. She was still ticked with her former boyfriend for what he had to say.\n\nAs they were leaving the other four were heading to the room. She gave Crystal a smile since she was looking strained. It was going to be a long road for her to heal. Kingie smiled back and twitched an ear at her. For some reason that always made Dani grin. She wasn't sure why but it did.\n\n~~~\n\nRight after the three left Z'Marl gave Billy a kiss. \"I think I am going to go with them. I want to stretch my legs and there are a few things I need to get.\" She kissed him one more time before standing and heading out. As she left the room she smiled at the four coming in.",
        "Since she knew where they had to leave the building she hurried up a bit and caught them at the entrance. \"Hold on guys I would like to come with. I want some good food as well.\" She grinned as she caught up and snagged one of Dani's arms. \"I would like your help as well. I would like to get a gift for your father and any suggestions would be nice.\" She knew the jewelry store she wanted. No she couldn't give him a torque but there were a number of other items she could purchase.\n\nDani smiled when the woman linked arms with her. \"I am so not going to ask what you are going to get him but I will offer suggestions.\" She liked Z'Marl though she was a bit retiring for her tastes. Since Dani tended to be bubbly and energetic many of her friends were the same. Part of it she thought was Z'Marl hadn't gotten the most support from her family. From little snippets she had overheard it almost sounded like they were embarrassed by their daughter's obvious intelligence. Personally she thought that was utterly stupid but then again her father had encouraged both of his girls to use their brains and not be afraid of what others thought.\n\nAs they were approaching the gates to the guild Vangie smiled. \"I am going to warn you that you are going to get all kinds of looks. You are the first new aliens we have met in almost a hundred years, or I should say space going aliens. That and both of you are very attractive. Doctor Jusdean thinks there is a cross over on pheromone responses. That is why we are attracted to each other.\" He had gotten that report just a few days ago.\n\nBoth girls blinked and Sally sighed. \"I hate being stared at for whatever reason but I do understand.\" She grinned up at Vangie. \"At least I have a mean ol' kitty warrior to protect me.\" How the hell the term kitty started working into the conversations she didn't know but found it amusing.\n\nVangie glowered at her for a moment. \"This mean ol' kitty warrior might have to spank the evil little human.\" Then he leered at her. \"We can take care of that before we go to sleep tonight.\" When Dani groaned he laughed.\n\nWhen they walked out the entrance to the guild property the noise and bustle of the city went up quite a bit. He paused for a few moments for the girls to get used to it before moving down the street. As they were moving they were getting looks but nobody came up and bothered them. \"This section of town is specifically designed to service the Telepath's Guild. No traffic is allowed during daytime hours. Many of the stores are aimed at the young telepaths who are here to learn about their abilities. There are clothing stores, food venders, jewelry stores, and many others.\"\n\nAs he was talking Z'Marl headed for a food vender who was selling meat on a stick and purchased several before coming back. She handed them out and took a bite. \"Oh man I missed these. They are Rakala that have been marinated and then slow grilled.\" Another bite and the first stick was finished.\n\nDani delicately sniffed the meat and then took a careful bite since she wasn't sure how hot it might be. After chewing the bite she made and obvious mmm sound. \"Oh man that was good. I am going to have to get a few for the others when we go back. I can already taste what daddy might do with the meat.\"\n\nThey all finished the meat quickly and tossed the sticks in the trash. \"Darn it now I am really hungry.\" Sally said and sighed. \"I am glad to see this but I wish it hadn't taken pappa to get hurt to come here.\" Since the Sholan's were staring at them she stared back occasionally. She figured turn about was fair play.\n\nEven though they were hungry the settled for a relaxed stroll since hurrying would only get more attention drawn to them. When Z'Marl saw the store she wanted she gently tugged Dani in that direction. As they approached the store a group of Touiban's came out.\n\nThey stopped in shock for a moment before scurrying over and dancing around the group. Their fingers delicately touched them and felt their skin and hair till Vangie barked out a command. They froze and then scurried away.\n\nDani had to close her eyes and give her head a shake. \"What were those?\" They looked sort of like bristly apes that hadn't discovered a color they didn't like. They were also festooned with chains and gave a new meaning to serious bling.\n\nVangie snorted. \"That was a group of Touibans. They were excited to see the new aliens. I told them that your father was ranked as the leader of several swarms which is why they vanished. They are the comm. and electronic specialists and have a curiosity that makes your proverbial cats curiosity pale.\" He shook his head as they followed Z'Marl into the shop.\n\nInside was cool and dimmer than outside which Dani and Sally greatly appreciated. The shop keeper looked up from putting some trays away and smiled. \"Good Afternoon and welcome to Shola. How may I help all of you?\" This was the story to tell the grandkids when he got a chance.\n\nZ'Marl shyly stepped forward and smiled at the older male. \"I am looking for something for my companion. He is one of the human's and was injured. I wanted to do something for him to make him feel better.\" \n\nDani gave her arm a squeeze. \"I am one of his daughters and my name is Dani. Z'Marl asked my sister and I to help her find something.\" She pointed at Sally when she said that. \"This is my sister Sally and her companion Vangie.\" She thought they were companions and didn't know they hadn't done that yet.\n\nSally smiled at the male. \"Good afternoon to you as well sir. As far as what would be good for our father would be something fairly simple yet masculine. Nothing to heavy though. He is a star ship captain and heavy chains or necklaces can be dangerous.\" Vangie had let go of her arm and was looking at the selections.\n\nThe shop keeper stroked his chin for a moment. \"Maybe a nice bracelet? It can be easily removed when he is working but will look good when he is wearing it. Obviously a bonding bracelet wouldn't work but... Give me a moment and I will be back.\" He stepped into the back and collected several bracelets.\n\n\"Take a look at these and pick one you like. Do you have any idea how large his wrist is? I can adjust the length though it will take a few days.\" They talked for several minutes before he filled out an order slip and tucked the bracelet and a copy into a pouch which went under the counter. \"Come back in three days and I will have it for you.\" \n\nVangie came back and though he didn't purchase anything he had found a necklace he wanted to get for Sally. He would make and excuse in the next day or two and come and pick it up. \"Thank you for not gawking and for that when and if other humans come I will recommend this store.\" That would give the shop keeper a reason to keep being polite. \"Now it is time for us to get something to eat so you have a good day.\"\n\nEventually they found a out door diner and settled down to eat. There were a number of younger telepaths there who were staring. Vangie simply stared back and let a general annoyance be felt. That got a reaction and most of them turned away. It wouldn't keep them from sneaking glances but it would keep the blatant stares down.\n\n~~~\n\nSandi, Jenna, Kingie, and Crystal walked into the room and Billy smiled. \"It is good to see all of you. I feel so out of the loop on what has been going on with all of you.\" He nudged Z'Marl and she sat up and stretched before moving. Billy held his hand out. \"Come here and give me a hug and peck you two frenimies.\" He grinned when he said that.\n\nSandi narrowed her eyes and growled at him. \"Just for that I might not give you your mail. I might make you have to wait for a week or two.\" She had several packages and a small box of data crystals.\n\nBilly looked at her hands and grinned. \"I take that back. Come and give me a good hug and kiss you lovely woman. I have double fudge chocolate cake...\" He knew that Sandi loved that and used it to tease her.\n\nJenna glared at him. \"No trying to lead my wife to the chocolate side. I might make you wait for that.\" She started laughing at him. \"Give him the packages love or we won't get his attention while he stares holes in them.\"\n\nSandi laughed and walked over to the bed and settled down next to him. \"Here you go Billy and one is from the patent office.\" She gave him a good kiss and a light hug before handing the packages over. \"There are cubes from family and friends as well as the Navy. There is even one from Bitty as well. Someone also appears to have gathered up a large number of news articles on the first contact as well about the pirates you took out.\"\n\nBilly was listening while he was opening the package from the patent office. It took him a few minutes to review the documents. He started grinning. \"Oh damn I am going to be rolling in the money. My re-crystallization process has been patented. Now I have to get in touch with Bobby Sue and have her get started.\" He was grinning like it was going out of style.\n\nHe thumbed through the other stuff and found one from Bobby Sue and opened it. He pulled out a stack of documents. As he scanned through them he had to shake his head. \"Damn but she jumped on the bandwagon. She started re-crystallizing tubes on a case by case basis. When she sent this she had done 8 sets. After all is said and done I made close to sixty thousand and she made about ten grand. I gotta get this stuff reviewed and signed.\"\n\nSandi snickered at him as he was chortling at how well it had done. \"Well it is nice to know a man on the rise. Maybe Jenna and I will reconsider certain arrangements...\" It wouldn't happen but she had to toss that in.\n\nJenna frowned at her. \"Not happening girl. I am rather possessive of my wife.\" She relaxed her face and smiled. \"Good for you Billy. Don't you wish you had done this earlier? You could have a fleet of ships by now.\"\n\nThey talked for a while longer before Billy started yawning. \"Stay if you want but I am going to take a nap.\" He looked fairly content with the results of the mail call. \"If one or the other of you wants to join me please do.\" Before any of them could climb in he had started snoring.\n\n~~~\n\nLate that night their link day started. This link Billy was definitely feeling the draw of Satasha and not just to be with her. The sexual component was kicking in and it felt so good. It had been a while since they had last made love and he wanted to feel being inside her and to feel her around him. \"Come my Leska let's relax and enjoy our day. I wish I could do more than lay here but even that is going to be good.\" His eyes were heavy with lust and love. The lust came from the drive to mate with her and the love was having her as his bond mate.\n\nShe melded her body to his and gave him a good kiss. *Being with you is enough but I admit I do miss the love making. Just being with you is enough. I will take it easy on you since I don't want to cause you pain.* As her hands stroked his skin she could feel the enjoyment. Satasha could also feel the enjoyment of her fur brushing against his skin. *My love and my life. I wish I could have your cub. He or she would be so adorable.*\n\nBilly wished she could have his baby as well. That was the only thing missing from their relationship but they could work around it. He didn't say anything else as he stroked her fur with his good hand. They took their time but when they coupled there was an extra surge of power. Once they were done Billy could only lay there panting. That had been damn good and he figured the surge was because they hadn't been together like that since the link had formed.\n\nThe rest of the link day passed and they talked and cuddled and made love several more times. Billy had to admit though he was tired and a bit sore, as careful as they had been his shoulder still ached, he felt much better. \"Night love and see you in the morning.\" He caught her lip with his teeth and gently nibbled before falling asleep.\n\n~~~\n\nSince Billy and Satasha were isolated due to the link day Kingie had talked to Crystal about taking her to his home. She had to think about it since she was still deathly scared of being rejected or looked down on. It took a while and some convincing before she said yes. \"I will go but I am scared Kingie. I know what you said is true but part of me is just so scared of rejection.\"\n\nKingie wrapped an arm around her. \"I know Crystal and I briefly talked to my parents. I didn't go into details, simply that you had suffered some severe trauma and to keep the personal questions to a minimum.\" He rubbed his cheek against hers briefly. \"My younger sister is really looking forward to meeting you as well.\"\n\nShe sighed and leaned into the hug and nuzzle. Crystal felt bad for taking up so much of his time but she needed the anchor. Working with the telepath was helping but she couldn't stand to be away from him for more than an hour at most. \"Well shall we go and what should I wear?\"\n\nHe smiled. \"That is my scary human speaking and good for you.\" When she asked what to wear he frowned slightly. \"I would go with a tabard and sandals since it is still pretty hot out there. Pack a small bag since we are going to be spending the night.\" As Kingie was speaking he pulled off his warrior robes and pulled on a brown tabard that complimented his fur.\n\nCrystal had to stop and wonder why his presence didn't bother her. He was male and was good looking but his being male should have freaked her out. With a sigh she stood and thumbed through the tabards she had and finally found a soft mauve one that she liked and quickly pulled it on. \n\nOnce she was dressed Kingie ran a brush through her hair and made sure it looked as best possible. \"You have such lovely hair and it is such a rare color as well.\" Once done he waited for her to pack and they left the room they shared and headed to the main gate. \"I have called for a public air car to take us to my parent's house.\"\n\nShe nodded and wrapped an arm around one of his. \"I know I have said it but thank you so much Kingie for everything. You didn't need to do everything you have for me and I really do appreciate all the attention you have given me.\"\n\nKingie smiled down at her. \"I know sweetie and I don't mind. Once in a blue moon I do get an urge to go out for ale with the guys but I have enjoyed getting to know you.\" He removed his arm from hers and wrapped it around her shoulders. Yes they looked like a couple but he didn't really care what others thought.\n\n\"I know we didn't meet under the best of circumstances but I am glad that I got to meet you. You are lovely strong girl and as I said on the ship the other warriors have seen that and respect all of you.\" He grinned down at her. \"I just got the new patch for my robes and it is with the tailor right now.\"\n\nShe looked up at him in shock and then started giggling. \"I R mighty scary human, be afraid, very afraid...\" Crystal couldn't resist and did the claw thing with a hand and growled. Just for good measure she made it a cute little growl.\n\nKingie snickered and waved the air car down and helped her in. Once he had entered the address in and inserted his card to have the cost deducted he leaned back and relaxed. \"I can't wait to see everyone. Oh, my littlest brother is likely to crawl all over you. He is about five in human years and is going to be fascinated by you.\"\n\nShe shrugged. \"I think I can deal with that since most children are so cute at that age and yes I understand they are going to want to feel my skin and hair.\" She relaxed into him and closed her eyes and till they arrived.\n\nWhen they climbed out of the air car she gave the house a good look. To her it seemed to resemble a roman villa. There was a tall adobe wall surrounding it and as they walked in the gate the house had wide open windows and a deep porch to keep the sun from shining directly into the house. There was greenery surrounding the house and a number of small nooks where one could sit and talk or read.\n\nMoments after they arrived his family came out. She could see the resemblance between him and his father since they had the same fur color. His mother was a brindle coloring and his siblings were a mixture. There were two girls and a boy. \"Good after noon.\"\n\nKingie grinned at his family. \"This is Crystal and I want to treat her to a good home cooked meal and give her a chance to relax and recover from the flight.\" He urged her forwards and towards his family. \"Remember no mauling her. If you want to feel her skin or hair ask before you touch.\" As he was talking his little brother ran over and Kingie picked him up. \"Hello stinker how are you? Crystal this is Jong, the next oldest is my mischievous sister Amahs, next older sister India, my father Jasoom, and mother Kilath.\n\nHis youngest sister came over and looked up at her. \"Hello, Kingie had said really nice things about you. Would you like to see my room?\" She didn't really think before grabbing her hand and started dragging her towards the house.\n\nCrystal couldn't help but laugh. \"Okay, okay, slow down.\" Once Amahs slowed down Crystal reached over and ruffled her hair and ears. \"Maybe later we can trade secrets about your brother. He is a wonderful person and has been very helpful to all of us.\"\n\nKingie had to roll his eyes as he started towards the house. His little brother was chattering about what he had done at school and other things that had caught his interest. As he walked past his parents his father indicated he and his mother wanted to talk to him when he had a chance. Kingie flicked an ear at them.\n\nOnce inside he flopped on a couch and yawned. \"It feels good to be home and relax. Chances are good we will go to sleep early. The last month or two are starting to catch up with us.\" His brother was curled up in his arms and was petting him. \"Yes little one I will shower with you later. It is good to be home and see everyone.\" \n\nHis mother looked at him. \"What do you want or need Kingie? Do you have a few minutes to talk?\" He had told them some but it was rather vague and generic.\n\nKingie nodded and looked at his brother. \"Can you go up and tell Crystal and Amahs that I am with mom and dad but we won't be very long.\" One last hug and he put his brother down and stood. He followed his parents to the small office his mother kept and once the door was closed sat down.\n\nOnce everyone was seated Kingie gave them a very direct look. \"This does not go beyond this room. The first thing is Crystal needs a good home cooked meal and family time. The ship she was on was captured by pirates and she was severely abused before they tried to take Yilly's ship. That didn't end well for them and they are all facing trial and death. Due to what happened her mother turned her back on her as being despoiled.\" \n\nHis face hardened and the warrior he was showed. \"I will not have that happen again. She is a wonderful person and all the warriors who helped save her and several other women respect her for surviving.\" Kingie paused to take several deep shaky breaths. \n\nHis mother came over and gave him a good hug. \"I will make sure the girls don't ask question for now and let her take lead as far as that goes. I do have one question for you; please don't take this wrong but what is your relationship with her?\" He had looked very protective and close to her.\n\nKingie had to blink at her before the question penetrated. It actually caught him rather flat footed and he had to flounder for an answer. \"I told her I was going to take care of her and treat her like one of my younger sisters.\" Beyond that he hadn't really thought about it. There was simply no way he could think of her as anything else right now. Even though he routinely showered with her he managed not to think of her as an available female due to what had happened.\n\nHis mother smiled at him. \"I know that Kingie but she is also a young woman and you need to think about that before the issue comes up. When and if she turns to you in a way other than as a sister what are you going to do? How are you going to respond?\" She hugged him again. \"I am not saying it is going to happen right this minute but it might happen. Talk to her therapist and see what he or she recommends. Make sure you know what you want before she turns to you.\"",
        "Kingie definitely wasn't comfortable with this turn of the conversation. He hadn't had to struggle much to place Crystal in the 'sister' category since that was what she needed. She needed the connection that didn't have any sexual component to it and being a sister worked. \"I don't see that happening anytime soon but will think about it mother. Now if you don't mind I am going to go and enjoy spending some time with my siblings.\"\n\nThey nodded and watched him walk out. Both traded looks and left the office. His mother towards the kitchen and her husband to the living area. Both were thinking about Crystal and how their son was acting towards her.\n\nKingie found Crystal and his younger sister in Amahs room and settled down on a large cushion on the floor and grinned at them. \"I hope you didn't tell her any secrets about me. If so I am going to have to tickle you.\"\n\nCrystal wrinkled her nose at him. \"Not gonna tell if'n we did.\" She came over and settled down in his lap and curled up and leaned against him. \"Thank you Kingie this is really nice.\" She had actually gotten very used to cuddling with him and it showed.\n\nHis sister raised an eye brow at him and just for good measure twitched an ear. It was rather obvious she was curious about their relationship and what was going on. He subtly shook his head after catching her eyes. Some things were totally up to Crystal to talk about.\n\nShe raised the eyebrow a bit more before standing up. Amahs grabbed another pillow and dropped it next to the two and settled down on it. \"Brothers have some use. You know like cuddling and teasing and annoying them. The best use of a brother is if you get hurt they are there to pick you up and give you a big hug.\" She lightly bumped Kingie and tentatively stroked Crystal's back.\n\nShe sighed in contentment as she leaned against Kingie. When her sister settled down next to them and started talking she had to grin. \"You forgot getting a bit of grooming from them. They also stand between you and the mean world.\" Some of her emotions showed when she said that. When Amahs started stroking her back she tensed though and then sighed when the girl jerked her hand back.\n\n\"Sorry Amahs, it has been a bad couple of months and I am just a bit jumpy. If you want to rub my back that is fine. Next time please just let me know first.\" Crystal felt rather stupid for reacting that way but right now most touches and especially unexpected touches made her twitch. When Amahs started stroking her back again she was more relaxed.\n\n\"It is nice to have a family again. Thanks for sharing yours Kingie.\" Again he subtly shook his head. \"I almost wish I was a cat as well so I could purr in contentment.\" She looked up at him and grinned. \"I will have to settle for being that most feared of people, a human female.\"\n\nHe snickered at her when she said that. \"Yup a horribly scary creature those human females. Jenna and Sandi have me totally cowed.\" The continued talking till they were called down for supper. After supper they traded stories till she slowly fell asleep and ended up with his head in his lap.\n\nKingie looked down at her and smiled. She smelled and looked more relaxed. He very gently stroked her cheek and hair. He looked up at his family and smiled. \"Thank you for not asking too many questions. Some things I simply can't discuss without her permission. Just go with it has been several very bad months for her and she lost her family. I brought her here so she could relax and to give her some family time.\"\n\nHis little brother was curled up in her arms as well which was part of the reason he felt safe talking about this at the moment. \"I told her that I would take care of her as if she was my little sister as well. All I ask is if you can just give her some unquestioned support and somewhere she feels safe.\"\n\nHis youngest sister gave her a searching look and nodded. \"It was bad what happened to her right? I will not ask any questions though I will tease her and treat her like she is my sister.\" That got her lightly whacked by her older sister. \n\n\"Thank you and I think since she is asleep and comfortable I am going to curl up down here as well. It is cooler than in the rooms as well.\" He carefully swapped his leg for a pillow and curled up around her and his brother. Very quickly he fell asleep and his face relaxed. The traces of controlled anger faded and he just looked tired.\n\nHis mother leaned over and gently stroked the hair of both. \"Well I think I am going to follow his example and pass out down here as well.\" She yawned and after pulling her tabard off curled up in her husband's arms. The girls followed suit and shortly only the sounds of snoring could be heard.\n\n~~~\n\nThe next morning before he got a chance to eat the doctor was there. \"Good morning Commander. We are going to take you to the OR and get you prepped. The surgery is going to take several hours since we decided to repair your shoulder blade and do a graft. It was decided to do that first and down the road if needed we can replace it. I always prefer working with original parts if possible.\" He grinned slightly at the joke.\n\nBilly frowned at him. \"Damn I was hoping to have a bionic arm. Oh well. Let's get started. The sooner we start the sooner we are done I guess. How long will I be in bed after the surgery?\" He wasn't going to rush it but damn it he wanted out of the room and actually see this world.\n\nThe doctor smiled since he understood. \"I estimate you will be down for about three days then will be your link day. The day after that you will be discharged for long enough for your bones to start mending. Once that is far enough along we will do the next surgery.\" As he was talking several of his staff came in and took him out of the bed to a floater.\n\nBefore they took him out of the room he collected a kiss from both Satasha and Z'Marl. \"See you eventually. Love you both.\" Once he had taken care of that they floated him out of the room and to the OR. \n\n\"I am giving you the premed and you are going to go to sleep. I will ensure that you aren't so deep as to impact on the link.\" The doctor smiled at him as he injected the nano-medication. It was already programmed for a Leska but it would be monitored the entire time Billy was asleep to ensure it was working correctly.\n\n~~~\n\nThe morning Billy was going into surgery Kingie and Crystal woke up relatively early. Both wanted to be there when Billy came out of the operating room. It was going to be several hours but they also wanted to sit with his family as well. Crystal rolled onto her back and stretched and yawned before she had to squeak when someone tickled her ribs.\n\nWhen she sat up and glowered she found Amahs there grinning at her. \"Wake up sleepy head. I am going to grab a quick shower. Wanna join me?\" She figured that Crystal had gotten used to Sholan showers and that was part of their normal life. \"My little brother needs a shower as well and I figured we could control him enough to get some soap in his fur.\"\n\nCrystal snorted at that but had to really consider if she felt up to it. Her therapist had told her that she needed to try and get back to normal activities. He had also told her not to push it since pushing too hard could cause its own problems. After seriously thinking about it she looked up and gave Amahs a very serious look. \"I will join you if you promise not to ask any questions.\" If she took her tabard off the scars of her abuse would be seen. Yes the Sholans were going to see about removing or reducing them but that was going to take some time.\n\nAmahs met her eyes and gave her a good nod. \"I don't understand but I will do as you ask sister mine. If that stinky older brother wants to join us we can tease and pick on him.\" There was definite amusement in her voice when she said that.\n\nBehind them Kingie snorted. \"Remember I am a trained warrior and have been taught the art of tickling annoying little sisters. I also have one of those fearsome human females to protect me.\" He sat up and stretched as well. \"Definitely time for a new tabard. After the air conditioning of the ship I have to get used to the heat of the summer.\" He stood up and helped Crystal up as well.\n\nHis little brother came dashing up and wrapped his arms around Crystal's leg and gave it a good hug. \"My human meanie female.\" He looked up at her and grinned. He was missing a tooth which was obvious when he smiled.\n\nShe laughed at him. \"I might just tickle a little kitty for that.\" When she leaned over to get him he shrieked and scampered away from them. After another good stretch she followed him towards the bathroom and showers. \"I have definitely gotten used to Sholan style showers. The air jets are really nice.\" On the way she grabbed the small bag with her cloths and things.\n\nThe shower didn't take very long though she did hear Amahs gasp when she saw her back. Thankfully she didn't say anything or ask any questions. She couldn't help but smile at the little boy since he was having fun playing keep away and giggling up a storm. Eventually they did make it to breakfast and after some hugs and thanks they headed back to medical.\n\n~~~\n\nPlease vote and comment. Thank you."
    ],
    "authorname": "maxd01",
    "tags": [
        "alien felines",
        "mental link",
        "space travel",
        "injury",
        "illness"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-bk-02-ch-05"
}