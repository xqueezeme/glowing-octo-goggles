{
    "title": "The Magic in Your Touch Ch. 16",
    "pages": [
        "Nate picked up his bowl and carried it to the sink. \u201cAre you sure I can\u2019t get you some more stew or another piece of cornbread, Mike?\u201d\n\nMike shook his head. \u201cNo thanks, Nate. I don\u2019t know where I\u2019d put any more, but everything was great.\u201d He lowered his eyes to the table. \u201cThanks for having me over here tonight. My place isn\u2019t the same without. . .well, you know.\u201d\n\nNate nodded. \u201cI know. I wish there was something I could say, but I know there isn\u2019t. There\u2019s nothing I can do, and it kills me.\u201d\n\nMike said, \u201cThere\u2019s nothing either of us can do to bring Amy back, but there is something I\u2019d like you to do for me, if you don\u2019t mind. A favor, I guess you\u2019d say.\u201d\n\n\u201cWhat\u2019s that?\u201d\n\nMike stood up and walked over to the kitchen windows, staring out at the night sky. He was quiet for a full minute before he turned back to Nate and said, \u201cOf all the things Amy wanted, nothing was more important to her than knowing that the two people she loved most in this world cared for each other, too.\u201d He rubbed his hand over his face. \u201cDid Amy ever tell you that she and I were trying to get pregnant? She wanted to name our first born son Nathan.\u201d\n\nNate swallowed past the lump in his throat. \u201cNo, she didn\u2019t tell me, but I\u2019m sure she would have eventually. Amy and I talk about\u2014\u201d He broke off when he realized what he\u2019d said. \u201cWe talked about everything.\u201d\n\n\u201cI know. You guys were always so close. Sometimes I envied that.\u201d\n\n\u201cMike\u2014\u201d\n\nMike waved him off. \u201cNo, Nate. It took me a while, but I really do understand the bond you guys had. I\u2019m just saying I was a little jealous, that\u2019s all.\u201d\n\nNot sure how to respond, Nate said, \u201cSo what was the favor you wanted?\u201d\n\nMike sighed. \u201cLike I said, nothing was more important to Amy than knowing that the two men she loved the most were on good terms. When you and I got into that fight over Nash, Amy was crushed. She cried all night long. And even though she\u2019s gone now, I can\u2019t help but think that maybe, in some way, she knows about what happened between us after the funeral. I want Amy to see that you and I have patched up our differences so she can rest in peace. I want you to drive out to the cemetery with me, so we can tell her, together.\u201d\n\nNate was surprised. He never figured Mike for the type to wax existential. The only thing he\u2019d ever heard Mike say about the hereafter was they\u2019d better have beer and college football in Heaven or he wasn\u2019t going. Now he was standing in Nate\u2019s kitchen carrying on about Amy resting in peace by knowing the two of them had patched things up. Nate started to refuse straight away, but decided to try and talk him out of it instead. \u201cMike, the temperature is in the high thirties tonight. Maybe we can go out there tomorrow afternoon, before the sun sets.\u201d\n\nMike\u2019s face took on a look of pleading. \u201cI need to do this, Nate. Please? For Amy?\u201d\n\nNate sighed. Mike had played the one card he knew Nate couldn\u2019t refuse. \u201cFine. Let me get my coat and we\u2019ll go.\u201d\n\nNate grabbed his coat and his keys. Giving Sasha one final pat, he motioned Mike outside and then locked the place up tight. When they got to the driveway, Mike started towards his car, but Nate shook his head.\n\n\u201cLets use my car, Mike. I haven\u2019t had much of a chance to drive it yet, and it\u2019ll give me a chance to show you what she can do.\u201d\n\nNate thought Mike seemed a little agitated, but he wrote it off as a natural reaction to visiting Amy\u2019s grave. Mike was hesitant, looking down at his watch a couple of times before saying, \u201cFine, let\u2019s just go and get this over with.\u201d\n\nNate waited until Mike slid into the passenger seat before taking his own place behind the wheel. After starting the car, he switched on the power locks and backed out of the driveway.\n\n* * *\n\nBrandon flew out of Marjorie\u2019s room and down the stairs to the basement parking area, the acrid taste of fear burning his mouth. He barked orders into his radio as he went, Sam at his heels. In between yelling into the radio, Brandon told Sam about Marjorie\u2019s revelation. When they reached the garage, Sam said, \u201cWhat now, Boss?\u201d\n\n\u201cI\u2019ve called every unit I\u2019ve got, and I\u2019ve also got the state police on their way to block all the roads leading out of town.\u201d His hands were shaking as he got into the SUV and grabbed his pistol from under the seat. \u201cFollow me out to the house. Jim and Dewey are already on their way. Stay out of sight until I give the signal to move. I don\u2019t know what Vaughn is planning, but he knows Marjorie is awake, and he\u2019s got to be afraid she\u2019s gonna remember something.\u201d He punched his keys into the ignition. \u201cWe\u2019re wasting time. Follow me in your car, and I\u2019ll fill you in on the rest over the radio.\u201d\n\nSam nodded and ran to his car. Only seconds had passed since Brandon had heard Marjorie\u2019s statement and raced to the garage, but it seemed like hours to Bran. He pulled out of the underground parking area without even looking and headed back towards Reed. He switched on the radio and said, \u201cSam, you there?\u201d\n\nSam\u2019s voice came through loud and clear despite the impossible speed they were both traveling. \u201cYeah, Bran, go ahead.\u201d\n\n\u201cVaughn made a phone call just after you called to tell me about Marjorie. My guess is, he\u2019s not working alone. If I\u2019m right, he\u2019s gonna call in his partner for backup.\u201d\n\nBefore he could say anything else, his cell phone rang. Bran pressed the talk button and all but yelled, \u201cWhat,\u201d into the mouthpiece.\n\nThe dispatcher said, \u201cI just got a report back from the deputies I sent to your house. No one\u2019s there, Sheriff. No sign of either Dr. Morris or Mike Vaughn.\u201d\n\nBrandon swore under his breath. Where the hell were they?\n\n* * *\n\nJust as they reached the cemetery gates, Nate remembered something. \u201cMike, I forgot to grab the flower arrangement Grandma Taylor made to go over Amy\u2019s headstone. Let me just run back to the house and get them.\u201d\n\nMike shook his head. \u201cI don\u2019t think that\u2019s such a good idea.\u201d\n\n\u201cWhy not?\u201d\n\nEven in the confines of the darkened car, Nate could see the glint of silver as Mike pulled out the small pistol he\u2019d tucked in his pocket. Mike held it steady and pointed the thing directly at Nate. \u201cFlowers are the last thing you need to be worried about right now.\u201d\n\n* * *\n\nBrandon flexed his foot on the accelerator, a million gruesome scenarios playing out in his mind. He refused to give credence to the worst case scenario, because his mind simply couldn\u2019t wrap itself around the concept that Nate might be dead. He and Nate were supposed to have the next fifty years to worship each other, to grow old and watch their grandchildren play on the front porch of that big old house together. He wasn\u2019t about to give voice to the fact that it might never happen. Unfortunately, Sam came back over the radio and did it for him.\n\n\u201cBoss, are you still there?\u201d\n\n\u201cWhat? Yeah, Sam, go ahead.\u201d\n\nHe could hear the hesitation in Sam\u2019s voice. \u201cBran, we have to be prepared just in case Vaughn has already done something to the Doc.\u201d\n\nBrandon set his jaw. \u201cNo. Nate\u2019s alive. There\u2019s not a doubt in my mind.\u201d\n\n\u201cHow do you know?\u201d\n\nBrandon gritted his teeth. \u201cBecause I would feel it if he weren\u2019t.\u201d He was about to say more when his cell phone rang. He almost wept with relief when he recognized the number.\n\n* * *\n\nThe Reed City Cemetery was one of those old fashioned types with the wrought iron fences and trees dotting the landscape. Some of the graves dated back to the early eighteen hundreds, back to the days when Reed was nothing more than a tiny village of settlers. The old cemetery and the new burial plots, one of which was Amy\u2019s, were separated by a copse of trees\u2014a small woods, actually\u2014with only an overgrown path in the middle to lead the mourners thru. There was a way to get to the new cemetery without having to go through the woods, but for some reason Mike directed Nate to go in the hard way. It wasn\u2019t until they were well on their way that Nate realized why: had they gone around to the gate of the new part, Nate\u2019s car would have been clearly visible from the road, and Brandon\u2019s men would know where they were. Apparently, Mike was taking no chances. \n\nWalking through the woods at night was hard enough when you didn\u2019t have a gun pressed into your back. Every time Nate stumbled, Mike would slap him on the back of the head with his free hand. The only consolation Nate had was that Mike wasn\u2019t finding it any easier to navigate through the maze of trees lining the path than he was. Several times he stumbled, and twice he actually fell. The second time, Nate used Mike\u2019s temporary state of confusion to reach into his pocket and grab his cell phone. The noise of the snapping twigs and Mike\u2019s struggle to right himself covered up the sound as Nate pressed Brandon\u2019s number on the speed dial. He slid the phone into his coat pocket as soon as he heard Brandon pick up.\n\nMike made it to his feet and pressed the gun into Nate\u2019s back again. \u201cKeep going, dammit. I\u2019m ready to get out into the open so I can see where the hell I am.\u201d\n\nNate kept walking. \u201cIf you hate the great outdoors so much, why didn\u2019t you just kill me back at the house?\u201d\n\nMike made a clicking sound with his tongue. \u201cNow where would the fun be in that? Because of you, I\u2019ve lost everything. Killing you out-right would be too easy. No, I\u2019m gonna have a little play time with you first. When I do decide to put an end to your miserable existence, I want the last place you see to be that special place where my wife is condemned to rot, all because of you. I\u2019d thought to kill you at the bluff, so that the last place you saw would be the last place you and Nash got it on, but Marjorie\u2019s early awakening nixed that plan. I\u2019m pretty sure the old bat is going to remember I\u2019m the one who turned the lights out for her.\u201d \n\nNate dodged a spruce sapling growing in the middle of the path. So Mike was the one who\u2019d almost killed poor Marjorie. Nate was too afraid of pushing Mike into doing something desperate to mention Marjorie just yet, so he decided to focus on the other part pf Mike\u2019s confession first. \u201cYou were out there, watching the two of us make love?\u201d\n\n\u201cWell of course I was, dumbass. Once I bumped Wilson off, someone had to do it. I sure as hell couldn\u2019t talk my partner into sitting out there in the woods and watching you and Nash go at it like a couple of animals.\u201d\n\n\u201cYou killed Wilson?\u201d\n\nMike sounded almost proud. \u201cSure did. The bastard was trying to blackmail me. Threatened to expose me and my partner if I didn\u2019t give him half of the money I was being paid.\u201d He snorted. \u201cHalf. Can you believe that shit? I\u2019m the one who pulled his sorry ass out of a sling. His brother and I worked in the stock-room at More-co together. He was always bragging about what a tough guy Wilson was. So when my partner first approached me with the idea of offing you and framing Calder, Wilson was the first guy I thought of. He was only too glad to help, let me tell you. Seems he\u2019d crossed the head of the Nikoli family on his last job for them and was laying low. He needed the money, and I needed Wilson\u2019s know-how. Seemed like the perfect arrangement. It worked out just fine until he decided to get all greedy on me.\u201d\n\n\u201cSo what, you shot him full of so much garbage his heart exploded?\u201d Nate stopped walking and turned, struggling to see Mike in the non-light.\n\nHe could just make out the shaking of Mike\u2019s head. \u201cYou make it sound so sordid, so cheap. I\u2019ll have you know I put a lot of thought and effort into our friend Wilson\u2019s grand exit. He called me to tell me he needed more money. Seems the cash he got when we canceled your insurance wasn\u2019t enough to hold him. He wanted more.\u201d\n\nNate was stunned. \u201cYou cashed in my insurance to pay Wilson? Why not just use your own money? Or Amy\u2019s, for that matter? And surely your partner has the cash.\u201d\n\nNate could barely see Mike\u2019s hand as he waved him forward with the gun. \u201cKeep walking. My partner is going to meet us there.\u201d As Nate resumed his trek, Mike said, \u201cIn answer to your questions, yes, we did cash in your insurance to pay Wilson, but that was just enough to cover his expenses. If he hadn\u2019t tried to screw me over, he\u2019d have gotten a cool two million out of the deal when all was said and done. As far as Amy\u2019s money goes, I couldn\u2019t touch it. Your grandmother set it up so that only Amy could access the trust. Now that she\u2019s gone,\u201d Mike\u2019s voice broke. After a minute, he said, \u201cNow that my wife is dead, all her money goes to me, but I couldn\u2019t touch it while she was alive. As for my own salary, let\u2019s just say I\u2019m using it to recover from a few bad business decisions I\u2019ve made over the years. When I was approached with the idea of killing you and framing Calder, I jumped at the chance. Your money would have gone to Amy, and my partner\u2019s funds would have been freed up so that I\u2019d have made close to ten million just for bumping you off. Of course, you refused to die like you should have, so the deal\u2019s off.\u201d\n\nNate could see the clearing in the distance, and he knew his time was rapidly running out. \u201cSo if the deal\u2019s off, then why kill me now?\u201d\n\nMike laughed, a sound so bitter Nate winced. \u201cDo you really have to ask? Hell, I\u2019ve wanted you dead since that night I saw you and Amy wrapped up in each others arms on her couch.\u201d When Nate started to speak, Mike said, \u201cSave it. The only reason nothing ever happened between the two of you is because you prefer a hard cock over anything Amy had to offer. If you\u2019d been straight, or even bisexual, Amy would\u2019ve thrown me over and gone to you in a heartbeat. You have no idea how hard it is to be in love with a woman who\u2019s lusting after a faggot. I can\u2019t tell you how many times she compared me to you. Needless to say, I was always found to be lacking when held up to the great Nathan Morris. I thought maybe if I made nice with you, I could come between you guys. You know, do something to break apart the friendship, at least weaken it a little. But you and Amy were too tight. Killing you off seemed like the best option. It would\u2019ve worked if you hadn\u2019t hooked up with Nash. From day one that guy has been like a gnat up my ass. Since Wilson screwed up, I was sure he\u2019d be willing to make it up to me by offing Nash, too, sort of two-for-the-price-of-one. But the cocky little shit wanted more money, and he was willing to blackmail me to get it.\u201d\n\nMike paused as he scanned his surroundings. When he was satisfied as to where they were, he said, \u201cI was pissed as hell, but I figured once he blew up the office and you were dead, I\u2019d have enough money to keep him quiet. I needed him too much to make him mad. I planted the bomb that afternoon when I brought you guys lunch. Wilson was watching the office, waiting for Amy\u2019s car to pull out. He thought you were still inside and Amy was clear. He waited just to be sure she was gone, then tried to blow the place. But something went wrong with the detonator. The damn thing stalled. When he saw you coming back, he thought Amy had returned, and he went crazy trying to set the damn thing off. When you get out of the car, he realized what had happened, but it was too late.\u201d \n\nMike brushed a tear out of his eye. \u201cYou were still alive, and the only woman I\u2019ll ever love is rotting in your place. Wilson went on and on about how sorry he was, but it was too late. The minute Amy died, Wilson signed his own death warrant.\u201d\n\nNate said, \u201cAnd you were only too happy to play executioner.\u201d \n\nMike went on as if Nate hadn\u2019t spoken. \u201cSo I waited until he went out and snuck into his room via the extra key he\u2019d so kindly provided for emergencies. I laced that bottle of Jack Daniel\u2019s he always kept on hand with several of More-co\u2019s best diazepam, slipped out, and then waited until he drank a healthy glass full and passed out. I came back in and shot him full of a lethal dose of heroin and liquid cocaine. When his ticker stopped ticking, I replaced the bottle with a clean one, cleared away the evidence, and left. It was just sheer luck that his brother happened to call and send that clerk down to his room to find the body.\u201d Mike pointed to the graves ahead, now in full view. \u201cKeep walking, buddy. Just a little bit further.\u201d He maneuvered Nate forward until he was practically on top of Amy\u2019s marker.\n\nNate shuddered at the site of an open grave not far from where he stood. It dawned on him what Mike was going to do. \u201cSo what, you\u2019re gonna shoot me and then push me into that hole.\u201d \n\nMike smiled. Now that they were out in the open, Nate could clearly see the malice etching Mike\u2019s features. \u201cLike I said, Nate, we\u2019re gonna wait a few minutes for my partner, then we\u2019ll go over the game plan.\u201d He looked around, taking in the scenery. \u201cNice place. Amy and I were gonna buy a plot just like this one day, but we thought we\u2019d have years yet to worry about death and dying. If Wilson had knocked you off that first night like he was supposed to, we\u2019d have had those years together. You have no idea how upset I was when I came back from Atlanta and found you not only still alive, but shacked up with Nash. And after I came up with a sick aunt and everything.\u201d He sighed. \u201cYou caused us all a hell of a lot of extra work. We intended to kill you, then make it look like Calder had hired someone to do the job by exposing his scheme with Phillip and his prejudice against gays. Because of you, we were forced to go through the whole gay bashing scenario. You have any idea how hard it is to torch a place without getting caught? Wilson did it right when he burned H&G. I\u2019ll give him that much. Too bad he screwed up and left that fingerprint on the undercarriage of your car. We were forced to re-think our entire strategy.\u201d Mike looked at Nate, his hatred shining in the pale light. \u201cWhy didn\u2019t you just die like you were supposed to? What the hell are you, a cat? You\u2019ve got more lives than I can count.\u201d\n\nNate scanned the area for something he could use as a weapon, but apart from a few scraggly branches, he saw nothing. He decided his best bet was to keep Mike talking. \u201cOkay, so you hate me. I got that part. But why hurt Marjorie Newman? What did she ever do to you?\u201d\n\nMike shook his head. \u201cNate, Nate, Nate. Don\u2019t you realize that in every war, there are a few casualties? I hadn\u2019t planned on hurting Marjorie. Hell, I\u2019ve been buying books from her on a weekly basis since Amy and I moved here. But when Calder announced he was coming to Reed to save Seth from his queer brother, it was just too good an opportunity to pass up. Planting that receipt to expose the connection between Calder and Phillip was a must. Since I\u2019m so well acquainted with the layout of the store, I volunteered to do it. When Amy came to tell you about Calder\u2019s impending visit, I snatched the receipt out of Philip\u2019s room during all the confusion. I took Amy home, tucked her in bed, and went down to the Book Barn. I waited until Marjorie was busy, then snuck into the men\u2019s bathroom to hide out until she left. Marjorie always closes right at five, so I thought I was safe. I waited until five-thirty, and then came out, expecting the shop to be empty. Instead I ran right into poor Marjorie. Apparently, she got delayed by a last-minute customer. She demanded to know what I was doing, lurking in the bathroom like that.\u201d Mike shrugged. \u201cThe old bat didn\u2019t leave me much choice. I conked her over the head with one of those brass bookends she sells and then burned the place. Went up in seconds, thanks to all those book-binding glues.\u201d He grinned. \u201cNot bad for a first time pyro, huh?\u201d\n\nNate wanted to throw up, but he knew he couldn\u2019t afford to be sick. Swallowing hard, he started to speak, but a noise coming from the woods stopped him. He could just make out the shadow of someone coming through the trees. Mike\u2019s partner had arrived.\n\n* * *\n\nBrandon exhaled the breath he\u2019d been holding when the Reed City limits sign came into view. He\u2019d been so relieved when he heard Nate\u2019s voice on the phone, but his relief turned to dread when he heard where Vaughn had taken him. He\u2019d instructed his men to surround the cemetery, but to stay out of sight until he got there. He wasn\u2019t sure just how over the edge Vaughn really was, but he couldn\u2019t take any chances. If one of Bran\u2019s men spooked him, Vaughn would shoot Nate without even thinking twice about it. He took little comfort from the fact that Vaughn was waiting for his cohort to arrive, but at least it bought him some time. Just as he turned onto the main highway into Reed, he heard Nate gasp over the cell. Brandon knew his grace period was over.",
        "* * *\n\nMike turned his head slightly at the sound coming from the tree-line, but he kept the gun trained on Nate. After a minute, he turned back to Nate with a smile. \u201cI see our special guest has arrived. Nice night for a family reunion, don\u2019t you think?\u201d\n\nNate watched as the figure stepped into view. The moonlight cast a halo around the blond hair, turning it silver. The brown eyes were lost in the shadows, but Nate could see a faint glimmer coming from them. He wasn\u2019t certain if the twinkle was caused by excitement, madness, or a combination of the two. He forced himself to show no emotion as Leda Morris stepped into place beside Mike. \n\nShe gave Nate her best pageant smile and said, \u201cHello, Nathan. I suppose you\u2019re a bit surprised by all this.\u201d\n\nNate wasn\u2019t sure what shocked him the most: that his mother was the one who wanted him dead, or that she was standing there talking to him and smiling at him like they were at a tea party instead of at the planned scene of his demise. He fought back all the questions, too numb and too stunned to even feel pain. He forced a calm into his voice he didn\u2019t feel and said, \u201cLeda.\u201d\n\nLeda shook her head. \u201cNow, is that any way to greet your mother? Calling me by my first name like some casual acquaintance?\u201d\n\nNate pushed his shaking hands behind his back. \u201cYou\u2019ll forgive me for dispensing with the usual formalities, but most mothers don\u2019t hire a hit-man to bump off their offspring. Sorry if I\u2019m not exactly certain how to respond to you, but I don\u2019t think this particular situation was ever covered by Emily Post.\u201d\n\nLeda clicked her tongue against the roof of her mouth. \u201cStill so headstrong, even at the end. You were always such a bright boy, Nathan, the best in your class. A shame, really, that it had to be this way.\u201d\n\nNate saw Mike inch his way closer to Leda, causing her to step even nearer to the edge of the open grave. He wasn\u2019t sure what was going to happen, but Nate wasn\u2019t about to quit talking now. \u201cWhy does it have to be this way? What could I have done that was bad enough to make my own mother want me dead?\u201d\n\nEven in the dim light of the moon, Nate could see Leda\u2019s brows furrow and her eyes narrow. \u201cWhat did you do? God, how can you even ask that? You ruined my life, that\u2019s what you did.\u201d\n\nNate could sense her agitation, but he had to keep her talking. \u201cHow? How did I ruin your life? I loved you. I\u2019m your son, for God\u2019s sake.\u201d\n\n\u201cDon\u2019t even pretend you don\u2019t know.\u201d Leda started wringing her hands. \u201cI was a debutante when I first met Calder. I\u2019d just been crowned Miss Georgia.\u201d Her eyes took on the sheen of remembrance. \u201cHe courted me hot and heavy for months, made me feel like the most precious thing on earth. I thought he was after me, but what he really wanted was a feather in his cap, a sweet little trophy belle to crown his growing empire.\u201d She shook her head, harder this time. \u201cI didn\u2019t care, you know. I wanted his money, and the recognition of being Mrs. Calder Morris. I realized he didn\u2019t really love me, almost from the start, but he wanted me, and as long as he wanted me, he gave me what I wanted. It was the perfect arrangement.\u201d She looked at Nate with raw hatred. \u201cThen you came along and ruined everything.\u201d\n\nNate said, \u201cHow? Tell me how a little boy could possibly be responsible for his mother\u2019s happiness.\u201d\n\nLeda shifted her weight from leg to leg, almost hopping up and down. \u201cBecause from the moment my pregnancy became obvious, Calder wouldn\u2019t touch me. He found a mistress, started calling me fat, ugly, a cow. He stopped giving me money, stopped taking me to parties. I thought it would get better once you were born, but it only got worse. I thought if I played the good wife, the devoted mother, things would improve, but I was wrong. Oh, our sex life resumed, but it was cold, methodic. By the time Seth was born, I knew our marriage was over. I wanted a divorce, wanted rid of all three of you. I hated you boys for turning my husband against me, and I hated him for being turned. Oh, I was a good actress, pretending to be the devoted mother, all the while ruing the very moments you and your brother drew breath. I was all set to leave the lot of you behind, but Mother Morris put an end to that.\u201d\n\nNate just stared at her. \u201cWhat does Grandma have to do with this?\u201d\n\nLeda sneered. \u201cYour grandmother was a sharp old bitch. She knew her son, and she knew more about me than I would have liked. She came to see me a few days after I told Calder I was leaving him. She brought with her a sheaf of papers I\u2019d signed right before Calder and I married. I thought they were just the usual pre-wedding preparations. You know, insurance policies, deeds, that sort of thing. I didn\u2019t even look at them, just signed every one.\u201d She sighed. \u201cThat was a mistake I\u2019ve lived to regret a thousand times over. One of the papers was a prenuptial agreement. Like the fool I was, I signed away all my rights to any of Calder\u2019s money. Calder never even knew about its existence. That\u2019s just how shrewd your grandmother was. Oh, I could leave, but I\u2019d have been penniless. My own family was less than sympathetic. I had no where to go, and no choices. Then Mother Morris made me an offer.\u201d Leda stopped bouncing and stepped closer to Nate. \u201cShe told me if I stayed and gave you and Seth the mother you both deserved, when Seth graduated from high school and went off to college, she would tear up the pre-nuptial agreement and I could take Calder for everything he was worth.\u201d\n\nNate just stared at her with amazement. \u201cSo you stayed all those years, just pretending to love us?\u201d\n\nLeda shrugged. \u201cLike I said, I\u2019m a great actress. I was all set to stay until the day Seth graduated from school. I had incentive, something to look forward to. Too bad the old crone died when you were eighteen and Seth was only twelve. The paper was never destroyed, and I was stuck.\u201d Leda grinned, a sickening parody of a genuine smile. \u201cBut I\u2019ve always been smarter than I was given credit for. I managed to secure a copy of the original paper from your grandmother\u2019s lawyer and went to see a lawyer of my own. He told me that, while the agreement was airtight, no judge in the country would withhold a divorce from me--or withhold Calder\u2019s money--if he was convicted of a felony, caught committing adultery, or found to be physically abusive. Calder might be the world\u2019s biggest bastard, but he would never raise his hand against a lady, so I knew the abuse scenario was out. I thought my best bet was to catch Calder committing adultery, but once again, fate stepped in.\u201d Leda shook her head and barked a harsh, bitter laugh. \u201cPoor Calder has a tiny little problem. Seems the sorry bastard can\u2019t get it up anymore. After all those years of screwing everything in skirts, the one time I need him stick it where it doesn\u2019t belong, and the S.O.B. let me down. So typical of him.\u201d\n\nNate saw that Mike had moved during Leda\u2019s speech so that the two of them were almost touching. If Leda noticed, she gave no sign of it. She was too caught up in her own tirade. \u201cWhen I realized I was going to loose everything if I didn\u2019t think of something, I went through all of Calder\u2019s records looking for any sign of shady business dealings that might constitute a crime. I\u2019d hoped for some sign of tax evasion or maybe even selling drugs under the table, but I found nothing. As scandalous as Calder is in his personal life, he\u2019s almost angelic in his business dealings. For over ten years I kept watch of his records, scrutinized his every move. When you came out to us, and Calder cut you off, I\u2019d hoped maybe his anger would move him to get violent with you, maybe even provoke him to do you in. But other than hiring a private detective to follow you and make certain you stayed from Seth, Calder\u2019s way of dealing with your homosexuality became the denial of your very existence. No matter what avenue I took, I couldn\u2019t catch Calder breaking so much as a traffic law. I\u2019d almost given up hope when I found out Calder had hired Phillip to break poor Seth\u2019s gay little heart.\u201d Leda gave a humorless chuckle. \u201cHomophobia might not have endeared Calder to a judge, but it certainly isn\u2019t crime enough to invalidate our marriage contract.\u201d She shook her head. \u201cNo. I knew I would need something stronger.\u201d\n\nTry as he might, Nate couldn\u2019t keep the sarcasm out of his voice. \u201cSo like any good mother, you naturally thought of killing me and framing my father for it.\u201d\n\nMike interrupted before Leda could speak. \u201cActually, that was my idea. Leda came to see me because she\u2019d guessed a long time ago that there was no love lost between us. That private detective Calder hired was very thorough, especially about all the time you and Amy spent together. Leda was smart enough to know I must hate you because of the way Amy felt about you. Even so, she only thought I might be willing to use my legal knowledge to help her get rid of Calder. She never guessed that I would come up with a plan to eliminate two of her biggest headaches with one shot, no pun intended.\u201d\n\nLeda pursed her lips. \u201cYou may have come up with the plan, but I certainly did my part. I was the one who procured the Mor-co credit card so that dreadful Wilson could use it to buy all those electronic doo-dads he needed. I stole one of Calder\u2019s best knives so Wilson could stab Brandon Nash with it, though he was only supposed to leave it in the house as evidence.\u201d She held up her fingers and began ticking off each item as she went. \u201cI planted the listening devices, stole the diazepam from the Mor-co warehouse, and even paid Mr. Wilson\u2019s trashy brother to lie and say he\u2019d introduced Calder to Wilson.\u201d She stamped her foot like a small child in the throes of a tantrum. \u201cIf it weren\u2019t for me, Calder never would have confessed to trying to have Nathan killed in the first place.\u201d\n\nIn all the chaos, Nate had completely forgotten about Calder\u2019s confession. He turned to his mother. \u201cAre you saying my father is completely innocent in all this?\u201d When Leda nodded, Nate said, \u201cThen why in the hell would he confess in the first place?\u201d\n\nLeda preened like a show pony. \u201cThat was my idea, too. As much as Calder hates you, Nathan, he loves Seth that much more. He\u2019s convinced you turned Seth gay and that one of these days the boy will simply go back to being straight. I think Calder sees Seth as his last hope to pass the Mor-co Empire on to future generations of the Morris clan.\u201d She sighed. \u201cMike helped me fabricate some evidence that made it look as if Seth was trying to kill you and then framed Calder when he found out about the ruse with Phillip to get his revenge. I made Calder see that if Seth went to prison, there would be no hope of him ever coming out and going straight.\u201d She giggled like a little girl. \u201cI think Calder has read too many of those prison sex and rape stories. Anyway, I told him that if he confessed to the crime, I would find some other poor bastard to pin it on. As soon as I did, Calder was going to recant his confession, and the three of us were going to be one big, happy, heterosexual family. Calder\u2019s gotten whatever he wanted for so long now, he actually believed me.\u201d She sneered. \u201cThe untouchable Mr. Morris is going to be in for the surprise of his life this time.\u201d\n\nLeda was so busy congratulating herself on duping Calder, she didn\u2019t notice that Mike had stepped away from her so that he was standing several feet behind her. She just kept on smiling at Nate as she reveled in her accomplishments. \u201cAfter almost thirty years of bullying and abuse, Calder is finally going to get his.\u201d\n\nShe turned back to Mike, her smile fading a little. \u201cI would like to know, however, why you thought it was necessary to drag me out here in the middle of the night. This was never part of the plan.\u201d\n\nThe grin that spread across Mike\u2019s face chilled Nate to the marrow. Mike said, \u201cI\u2019m glad you asked, Leda. You see, plans have changed.\u201d\n\nNate knew what was coming, and his mind raced as he thought of ways to stall for time. He said, \u201cSo what, Leda, you\u2019ve been close by this whole time?\u201d\n\nLeda nodded. \u201cYes. I had all my calls forwarded to the dreary little Chicago motel room Mike insisted I stay in until this mess with you was settled.\u201d She turned back to Mike. \u201cWhat\u2019s all this about a new plan? I haven\u2019t authorized any new plan. I say it\u2019s too late to make changes at this stage of the game.\u201d\n\nMike\u2019s face went from maniacal grin to full blown snarl in the space of a heartbeat. \u201cGame? You think this is some kind of fucking game, lady? My wife is dead, and that old bat I knocked over the head is probably spilling her guts even as we speak. If I make it away from here without getting caught, I\u2019m still going to be looking over my shoulder for the rest of my life. I figure I\u2019m already implicated in two murders, so what\u2019s two more?\u201d\n\nSince Nate had already guessed that Mike brought them out there to kill them both, he wasn\u2019t surprised, but the look on Leda\u2019s face was priceless, as was the panic in her voice.\n\n\u201cWhat are you talking about, Michael? We made a deal! We\u2019re partners. We\u2014\u201d The retort of the gun cut Leda off as the breath rushed out of her lungs and she toppled backwards into the open grave.\n\nNate was too numb to even react as he watched his mother draw her last breath. He knew his time was up and that all the hopes and dreams he\u2019d held for a future with Brandon would die with him in that Godforsaken cemetery. Nate\u2019s mind conjured images of Brandon\u2019s smile, his scent, his taste, the saltiness of his skin and the strength of his arms. With Brandon\u2019s face fixed in his mind, Nate closed his eyes and waited to die.\n\n* * *\n\nBrandon raced through the trees, heedless of the thorns biting into his flesh and the limbs tearing his clothes. He couldn\u2019t risk parking in front of the new cemetery\u2019s gates for fear that Vaughn would panic and shoot without thinking. His plan was to approach Vaughn calmly and try to cut some kind of deal with him. He knew he\u2019d never get off a shot without Vaughn squeezing the trigger and hitting Nate first. All those plans went to hell when he heard the first gunshot. He was close enough to the new part of the cemetery that he didn\u2019t need the aid of the cell phone clipped to his belt to tell him that Leda Morris was dead. He pulled his gun and stepped from the trees just as Vaughn cocked the hammer and prepared to fire his second shot.\n\n* * *\n\nNate\u2019s eyes flew open as Brandon\u2019s voice cut through the crisp night air. \u201cDrop it, Vaughn. My men have the whole place surrounded.\u201d\n\nMike never took his eyes off Nate. \u201cGive me one good reason why I shouldn\u2019t just shoot him and be done with it. If your men have this place covered, I\u2019m never gonna make it out of here alive, anyway.\u201d\n\nBrandon\u2019s voice never wavered, not even with the terror Nate knew he must have been feeling. \u201cYou put down that gun Vaughn, and I give you my word you\u2019ll still be breathing when all is said and done.\u201d\n\nMike didn\u2019t so much as flinch, his finger resting firmly on the trigger. If Brandon shot him, Mike\u2019s finger would automatically depress, and Nate would be a dead man.\n\nMike said, \u201cAnd if I decide to hang onto it instead?\u201d\n\nBrandon\u2019s gun hand was rock-steady. \u201cYou put so much as one mark on Nate\u2019s skin, and you\u2019ll die where you stand.\u201d\n\nMike shook his head, the movement excruciatingly slow. \u201cI have a better idea.\u201d He lunged at Nate, wrapping his arm around Nate\u2019s neck and pressing the gun to his temple. Nate struggled, but desperation gave Mike a strength that was near impossible for Nate to overcome. Mike tightened his stranglehold and pressed his face to Nate\u2019s ear. He spoke loudly enough so that Brandon would have no trouble hearing.\n\n\u201cThis is how we\u2019re gonna play it. I want Nate\u2019s car brought around to the front gates so he and I don\u2019t have to go traipsing back through the woods. We\u2019re all gonna stand here nice and calm until it\u2019s done. I see on person put so much as a toe out of line, and Dr. Morris here is gonna have a brand new hole in his head. When the car gets here, everyone is gonna stand back and let us pass. Nate\u2019s gonna drive, and no one is gonna follow us. If I see anyone behind us, be it a police cruiser or a busload of nuns, it\u2019s lights out for my boy here. Understood?\u201d\n\nBefore Brandon had a chance to answer, Nate rasped, \u201cIf you\u2019re gonna kill me anyway, why the hell should we co-operate?\u201d\n\nMike kept his eyes on Brandon. \u201cCause like all good cops, Nash knows that there\u2019s always a chance that you\u2019ll get lucky and survive. He\u2019s not going to do anything to lesson your chances. Right, Nash?\u201d\n\nBrandon grabbed the radio at his shoulder and spoke into the mouthpiece. \u201cSam, bring Dr. Morris\u2019s car around to the front gates of the new cemetery. All other units retain their original positions. No one moves unless it\u2019s on my command.\u201d\n\nNate had heard other hostages say that time seemed to drag in the face of death. Some even claimed that time virtually stood still when one\u2019s life was at stake. For Nate, it was different. Time had no meaning as he stood staring at the man he loved for what was most likely the last time. He used the silent standoff between Mike and Brandon to memorize Bran\u2019s moonlit face, the inky darkness of his hair, the slight curl of his soft lips. He could see the faint shimmer of tears in Brandon\u2019s eyes and the slight trembling in his still-raised gun hand. He had just enough time to mouth the words, \u201cI love you,\u201d as the gunning of the V-8 announced the arrival of the car.\n\nMike frog-marched Nate to the gates, all the while hissing orders into his ear. \u201cSlow and steady, buddy. Almost there. When we get to the car, I want you get in on the passenger\u2019s side and slide over. Just in case you feel like trying any funny business, remember I got my gun cocked and I\u2019m more than ready to use it. It\u2019s gonna be pressed to your head the whole time.\u201d\n\nLike Nate needed a reminder. The walk to the car was agonizing, but they made it without incident. Just as Mike said, Nate opened the passenger door, and made a move to slide in. Mike released his arm from around Nate\u2019s neck, but he kept the gun pressed firmly to Nate\u2019s skull. After a few awkward maneuvers, both Nate and Mike were inside.\n\nMike said, \u201cStart her up and head east out of town.\u201d Nate reached for his seat belt, but Mike shook his head. \u201cYou won\u2019t be needing it.\u201d Nate did as he was told.\n\nThe road was completely deserted, just as Nate new it would be. Brandon must have ordered all the roads from town cleared, willing to take no chances with Nate\u2019s life. Nate was thankful for the cell phone still in his pocket. At least Brandon would know what was happening inside the car. Nate was so caught up in wondering what was going to happen next that he didn\u2019t realize Mike was still speaking to him.\u201d\n\n\u201cIt\u2019s a shame it had to end this way, Nate. I\u2019d planned on killing you slowly and then going back to finish Leda later, but that old bitch Marjorie woke up too soon and ruined everything.\u201d He sighed. \u201cI really thought it would take Nash longer to figure out where we were. If I\u2019d known he was gonna get here so fast, I\u2019d have just killed you back at the house.\u201d\n\nFrustration and fear came spilling out of Nate like poison. \u201cSo why didn\u2019t you? Why put yourself at risk by going through an elaborate execution? Why didn\u2019t you just shoot me when you had the chance to make a clean getaway and be done with it?\u201d \n\nMike tightened his grip on the gun. \u201cBecause killing you like that would have been too fucking merciful. I wanted you to know what Leda had done to you, to see your own mother\u2019s hatred for yourself. I wanted you to loose everything the way I\u2019ve lost everything. It wasn\u2019t enough to destroy your body. No, sir, I was after your soul.\u201d\n\nNate knew he was running out of time. Mike would kill him the second he got a chance. Mike was going to off him whether Brandon came after them or not. Time and again, Brandon had saved his life. Hell, Brandon had given him back his life by loving him, by showing him how beautiful it could be. This time, Nate could depend on no one but himself. His first thought was to swerve off the road and wreck the car, but he\u2019d seen enough auto accidents as a doctor to know that the outcome was anyone\u2019s guess, a crap shoot at best. Even with the roll cage, the Ford could still become his coffin if he was the slightest bit off. It was when he saw the hairpin curve ahead that he remembered Cain Lucas\u2019s warning about the doors and their tendency to fly open under pressure. Without a second though, he slammed his foot down on the accelerator and took the curve at about sixty miles an hour. Since Mike had never given him the chance to arm the power locks, the passenger door flew open the minute Nate guided the car through the sharp bend.",
        "Mike was still going on about Nate\u2019s impending demise when Nate rammed his foot down on the accelerator. Mike waved the gun around wildly and said, \u201cWhat the fuck do you think you\u2019re doing, Nate?\u201d He aimed the pistol and would have fired except at that exact moment the door came open. \n\nMike reached for the handle. The minute his fingers fastened on the door, the force pulled him forward. He grabbed at Nate with his right hand, but his futile efforts were no match for the strength of the wind and the speed of the car. Mike was hurled outwards just as Nate lost control and ran off the other side of the road.\n\n* * *\n\nBrandon heard the crash over his cell and increased his own speed. He\u2019d instructed his men to follow at a safe distance and to keep their lights turned off, his own SUV leading the way. As soon as he heard that crash all bets were off. He switched on his lights and sirens and ran the SUV wide open. Just as he approached the curve, his headlights made out the still form of a body sprawled across the pavement. He slammed on the brakes, threw the car into park, and jumped out, his heart in his throat.\n\nThe minute he realized the body was Vaughn\u2019s, he didn\u2019t spare the bastard a second glance. From the corner of his eye he saw Sam and some of the other deputies running towards the scene, but he keep going at breakneck speed towards the wrecked Ford and his only reason for living.\n\nThe car wasn\u2019t near as damaged as Brandon expected, giving him hope that Nate had made it through unharmed. He expected Nate to be trapped behind the wheel, maybe even unconscious. The ambulance was already on its way, so all he could do was bide his time and hope they got there fast. The last thing he expected to find was an empty car.\n\nBrandon\u2019s heart dropped to his stomach. Nate must have been thrown out. Oh God, it was worse than he thought. He raced around to the front of the car, searching desperately for any sign of him. He almost knocked him over in the process.\n\nNate sat in the grass, staring off into the distance. Bran looking him over, seeing no visible signs of injury or trauma. Bran knelt down beside him and was about to reach for him when Nate spoke.\n\n\u201cYou heard everything.\u201d It was a statement, not a question.\n\nBrandon nodded, but Nate was still staring off in the distance and couldn\u2019t see it. Finally, and keeping his voice as soothing as possible, Bran said, \u201cYes, baby, I heard it all. If you hadn\u2019t called me, I never would\u2019ve found you in time.\u201d He forced a smile. \u201cI\u2019ve always said I hooked myself a smart one.\u201d\n\n\u201cYeah. Well, if I\u2019m so smart, why didn\u2019t I realize that my own mother wanted me dead? Why didn\u2019t I see that Mike resented me to the point of homicide?\u201d Nate shuddered. \u201cYou want to know the worst part?\u201d\n\nBrandon was terrified of the answer. He remembered the three weeks of isolation Nate subjected himself to after Amy\u2019s death. He\u2019d go out of his mind if Nate shut him out again. Swallowing, he said, \u201cWhat\u2019s that?\u201d\n\nNate turned to look at him for the first time, his eyes unnaturally bright in the light of the Ford\u2019s still burning headlights. His voice was low, but the detachment was no longer present. He said, \u201cThe worst part is, I don\u2019t care, Bran. Let them hate me all the way to hell, but God help me, I don\u2019t give a flying fuck. Leda\u2019s dead\u2014Mike too for all we know\u2014and I could care less.\u201d He reached out, his hand shaking, the tears falling freely as he caressed Brandon\u2019s cheek. \u201cAll I care about is that I\u2019m alive, and I can touch you again. Oh God, Bran, I thought I was never gonna get to touch you again.\u201d\n\nBrandon gathered him close and rocked him back and forth in the glow of the headlights, stroking his fingers through Nate\u2019s dirty hair, savoring the smell of him. Kissing Nate\u2019s temple, Brandon closed his eyes and thanked God. \n\n{TO BE CONTINUED}"
    ],
    "authorname": "wavyscribe",
    "tags": [
        "leda morris",
        "nate car",
        "shot full",
        "gonna stand",
        "minute turned",
        "calder wilson",
        "stay sight",
        "foot accelerator",
        "calder",
        "car nate"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-magic-in-your-touch-ch-16"
}