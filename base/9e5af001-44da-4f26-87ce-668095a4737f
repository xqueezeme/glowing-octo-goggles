{
    "title": "Cum for Austin",
    "pages": [
        "In the days before streaming porn, scoring a VHS tape loaded with grainy, thrice copied porn felt like winning a jackpot. If it was recorded at SLP speeds, that could mean anywhere from four to six hours of hot, steamy porn for your jerking pleasure. Best of all? When the person making the copy took the time to cut out the ads and title screens. \n\nIn a rare instance, Mom and Dad had to drive across the state to attend a wedding, leaving Austin home alone. At eighteen, with the house to himself for the entire day and night, Austin's plan had been as simple as spending the entire time naked and jerking off. \n\nHis aching cock throbbed and led the way as he wandered from one room to the next as he simply enjoyed his freedom. Mom and Dad had left at eight in the morning. At ten that morning, he had his first orgasm in the living room with porn playing on the big TV. While he could have worked toward another orgasm right away, he had worked out a plan - one orgasm every two hours until he couldn't do it anymore. \n\nAs he waited until it was time for his next orgasm, he switched over to regular TV. It felt really good being naked in the living room. It felt even better being naked and hard in the living room. He idly stroked his cock while forcing himself to wait until noon for his next orgasm. \n\nGlancing at the clock on the VCR, he saw that it was only 11:30. Switching back to the VCR, he picked up the remote and hit PLAY, giving him thirty minutes of playing time until his next orgasm. Could he do it? Could he last that long? He doubted it, but he loved the idea of trying.\n\nUnable to sit still, he paced behind the two overstuffed chairs that faced the big twenty-seven-inch TV. The two chairs where Mom and Dad typically sat every night watching \"ER,\" \"Seinfeld,\" or \"NYPD Blue.\" When a hot lesbian scene started, he moved to sprawl out on the couch. He stroked his rock hard a couple of times, but not too much. Not yet. He still had another twenty-three minutes before he could get off. \n\nFuck, this was hard. His cock ached for more attention. He understood the law of diminishing returns. If he did it too much, his later orgasms would take too long. Was it better to get off too soon and leave more time between his orgasms or best to stick to his plan? \n\nTugging on his hard cock, he brought himself close to an orgasm and then stopped. His throbbing cock leaked pre-cum into a puddle on his stomach, filling his navel. Yeah, that felt good, really good. How much pre-cum could he leak before it was time to shoot off for real?\n\nHe gave his cock a chance to rest as he watched the girls taking turns eating each other out. He ignored his need for an orgasm. His balls felt tight and hard, ready for him to blast off if he would only give himself that extra bit of attention. It felt good being this hard. \n\nHe wanted to eat pussy. Fuck, he loved eating pussy. He loved everything about pussy. The one chick had shaved her pussy and that looked so damn good. Did real girls ever do that? Fuck, that would be so hot to see, wouldn't it? He thought about his girlfriend and wished Suzanne had gone to college closer than halfway across the state. He missed her. He missed her pussy. He missed her tits and just kissing her. He needed to call her later, but not now. \n\nNearing another orgasm, he quickly pulled his hand away and watched as his hard cock pump out more pre-cum. It's too bad Suzanne never did this to him. He needed to teach her to do this. He needed to show her how he could almost orgasm without really doing it. Would she like that? Would she like to see him this kind of hard?\n\nSuzanne could be so funny at times. She liked sex, but she always felt so guilty about doing it, too. It took her so long to get turned on. He wished she would stop worrying about it. At least she had gotten comfortable with letting him go down on her. She liked that, a lot. She had even said that was her favorite part. That and seeing him hard. She did like seeing him hard and needy. She thought his dick was fun.\n\nLooking at his stomach, Austin realized that he had forgotten to grab some Kleenex. Damn it, what was he supposed to do now? He watched the pool of pre-cum on his stomach beginning to run to the side. Fuck! He couldn't afford to get Mom's couch dirty. Without a better plan, he smeared the clear fluid across his lower half. He could take a shower when he was done. \n\nGlancing at the clock on the VCR, he had to make a plan for his orgasm, too. Could he catch it all in his hand? Probably not. Not after all this teasing. Sometimes, his orgasms felt so damn big. Maybe he should cum on his chest? Could he keep it on his body and nowhere else? He glanced at the box of Kleenex on the counter and decided they were too far away. He could do this. He could cum on his chest and stomach and then rub it in or something. It was only cum.\n\nHe turned his attention back to the TV. There was a sloppy cut as the lesbian scene ended. Whoever had put together this VHS tape had taken the time to stop and start the recording to capture only the good parts. He smiled. He knew this next scene and it was hot, too. \n\nA hot brunette straddled some guy on a couch in a big house. They were already fucking. The camera zoomed in to her tight pussy sliding up and down his shaft before circling to show her face and tits. Damn, she was hot! And, in just a moment, a hot blonde with really short hair would walk through the front door and catch them. Yeah, this was a good scene.\n\n\"What the fuck are you doing to my husband?\" the blonde yelled as she walked into the room. The volume of the recording made that yell very loud. The first time he had watched this tape, this scene had almost gotten him caught because of how the volume had gone way up. Alone in the house, he didn't care. \n\nThe couple on the couch jumped and there was another cut. He would never know how much dialog had been cut out of the version he saw. He didn't care because the blonde took charge of the fucking happening. \"Go ahead. Fuck him, you slut!\" she sternly insisted as the couple on the couch went back at it. He felt a thrill that made his cock pulse with thrill. Yeah, he would love that. Let some chick tell him to fuck like that. \n\nThe clock on the VCR clicked over to show 12:00. He had met his goal but still held back from getting off. In another moment or two, the blonde would join them. In a moment, the blonde would get naked, too. He held off, caressing his cock without allowing himself to get off until he saw the blonde's hot, firm tits. \n\n\"Suck my tits!\" the blonde demanded, pulling off her top and pressing her chest against the brunette's face. The high volume of the scene made the speakers of the TV crackle. \n\n\"Yeah!\" Austin cheered, ready for his orgasm, but still holding back. There was more to this scene. Even better stuff coming up. He squeezed his cock and held on to his orgasm. When he eased his grip, more pre-cum leaked from the tip and created quite the puddle of pre-cum on his stomach. Enough pre-cum that he had to smear it across his stomach again. He kept his eyes on the TV and waited for his favorite part. This was going to be such a great orgasm!\n\n\"For real?\" asked his sister, standing just behind him at the end of the couch.\n\n\"What the fuck?\" he screamed, panicked by the sudden, unexpected interruption. What the hell was Robin doing here? He sat up, crouching over to hide his nakedness while twisting to see over his shoulder. He could figure out what had happened easily enough. They always kept the front door locked unless they were expecting company, which meant she had let herself in the backdoor. Mom or Dad had probably told Robin to check on him to make sure he was behaving.\n\nArms crossed right below her tits, Robin stared at her younger brother with a huge, shit-eating grin on her face. \"Having fun?\"\n\n\"How long have you been standing there?\" he demanded as his brain went into overdrive with too many instructions at once. He needed to turn off the TV. He needed to stop, eject, and hide the VHS tape of porn. He needed to run to his bedroom and put on clothes. He needed to take a shower to wash off the pre-cum splattered across his body, the same pre-cum that he could feel running down his stomach into his thick pubic hair. He needed to make sure he didn't leave a cum stain on the couch. And, most of all, he needed to negotiate a vow of secrecy from his big sister. \n\n\"A minute or two,\" she replied, still wearing that same big grin. \"I never realized who had such a nice one, bro.\"\n\n\"Shut up,\" he grumbled. He didn't care what his big sister thought about his cock, he wanted to get dressed and figure out a way to swear her to secrecy. Screw the videotape playing. Same with the TV. Clothes mattered most. Hunched over and covering his hard-on, he moved towards the hallway and the safety of his bedroom, except Robin blocked the most direct path. \n\nAt five years older than Austin, they had never gotten along. She had been his babysitter whenever Mom and Dad had wanted to go out on a date. In return, he had always ratted her out if she invited over a friend or did anything she out of bounds. While he was still in middle school, she had headed off to college. When she was home for holidays or summers, their relationship went back to being antagonistic. Now that she had graduated from college and had a good job, she lived in a cool apartment across town.\n\nAustin took the long route, darting around Mom and Dad's overstuffed chairs with an end table and lamp between them. As he moved, his sister backed up until she blocked the hallway. \"Where you goin', bro?\"\n\nHe pulled up short and gawked at his sister. He saw the playful smirk on her face, the twinkle in her green eyes, and for reasons he didn't understand, he registered her jean shorts and how her tight t-shirt hugged her chest. \"Do you mind?\"\n\n\"I don't mind at all,\" she said, checking him out from head-to-toe. \n\n\"I meant, do you mind moving out of the way?\"\n\n\"Oh, that!\" she giggled. \"Yeah, I sort of do mind doing that.\"\n\nHe gaped at her with a shocked expression on his face. He stood four or five feet away from her, holding his junk, and feeling extra naked as he tried to keep his hard-on covered from her view. \"What's your issue?\" he demanded. \n\n\"You've got to show it to me, first.\"\n\n\"Show you what?\" he asked. He realized the stupidity of that question even as it left his mouth. He quickly recovered. \"You already saw it when you were perv'ing on me.\"\n\nShe shrugged. \"I still want to see it again.\"\n\nFrozen in place, Austin considered his options. Fully grown at eighteen, he had five inches of height on his \"big\" sister and outweighed her by thirty pounds. After rejecting the idea of muscling his way past her, he spied the width of the opening and felt good about finessing his way around her. \n\nHe did a head fake to the left before darting into the opening on the right and ran into his sister.\n\n\"Nice try, slow-poke,\" she teased as he bounced off her and backed up. \"Did you forget that I played ball, too?\"\n\nHe hadn't forgotten all those nights spent watching her playing basketball. Nor had he forgotten all the times she had embarrassed her little brother while shooting hoops. She had been older, taller, more skilled, and had loved shaming him. He could probably beat her now, but she remained quick. \n\n\"Mom and Dad know about your porn tape?\"\n\nHis eyes automatically darted back to the TV where his treasured porn tape continued to play. It would be just like her to tell them about it.\n\nWith the cruel smile of a villain who had the upper hand, Robin stated her terms. \"Show it to me and I won't tell.\"\n\n\"I'm not doing that!\" he protested. \"Besides, you said you already saw it.\" \n\n\"Doesn't mean I don't want to see it again,\" she smirked, eyeing the spot where his hands kept things covered up. Slowly, her eyes moved back to his face. \"Where's your girlfriend, anyway?\"\n\n\"College,\" he moaned, trying to work out an alternative to plan for getting past his sister. \"She only comes home on holidays.\"\n\n\"Poor baby.\"\n\n\"I'm not a baby!\"\n\n\"You might be eighteen, but you'll always be my baby brother,\" she teased with the full knowledge of how much that frustrated him. She leaned against the opening to the hallway, making it clear she wasn't going to let him past. \n\nAustin rocked back and forth on his heels, unable to stand still. He hated how his cock kept throbbing against his hands. He had gotten too close to an orgasm. In a way, it could have been worse. She could have walked in just as it was happening, just as he was spraying his hot, creamy cum all across his chest and stomach. That would have been much worse. \n\n\"So what are you going to do?\" she asked. \n\n\"Don't you have a boyfriend? Go look at his dick.\"\n\nRobin shrugged. \"I want to see yours.\"\n\n\"You are such a pervert!\"\n\n\"Me?\" she laughed. \"You're the one running around the house naked and jerking off.\" \n\n\"I'm not running around the house naked,\" he lied. \"I just wanted to use the big TV, that's all.\"\n\n\"I bet Mom and Dad won't even let you keep a VCR in your room after this. Or a TV.\"\n\nHe hated the truth of that suggestion. He didn't need Mom or Dad to hear about this. \"So, what's the deal? I show it to you and then you let me get dressed?\"\n\n\"Maybe,\" she hedged with that same twisted smile. \n\nHe didn't like that answer. He studied her with his eyes narrowed into slits. He didn't trust her. Then again, what other choice did he have? \"How long do I have to show it to you?\"\n\nShe nodded at the video playing on the VCR. \"Until this scene is over.\"\n\n\"I'm not doing that!\" he objected as a new scene began, another scene that he recognized. \n\nWhile he had the entire tape memorized, he couldn't quite remember how long this scene lasted. Was it the one where the man and woman had sex with that pretty blonde on the swing? That wasn't too long of a scene, was it? He tried to fast-forward the action in his head. He could remember the three of them fucked around near the rope swing for a few minutes. Eventually, the blonde got naked and all three of them had sex. That didn't take too long, did it?\n\n\"But I'm not going to jerk-off,\" he said, putting his hands to his sides and watching as Robin's eyes went wide.\n\n\"Damn, bro.\"\n\n\"What?\"\n\n\"Nothing,\" she giggled, staring directly at his hard, throbbing cock. \"Does it always turn that color when you're excited?\"\n\n\"What color?\" he asked, glancing down at the dark, angry red of his cockhead. That was the way it was supposed to look, wasn't it? \"I'm excited. That's how it gets.\"\n\n\"It just looks so red, almost purple.\"\n\n\"Yeah, well, that's what you get.\"\n\n\"And your balls, why aren't they bigger?\"\n\n\"They're big enough!\" he objected. \"They're just tight right now.\" Didn't she know anything about how a guy's body worked?\n\n\"You cold?\"\n\n\"No.\" He wasn't about to explain why his balls were pulled up tight against his body. If she couldn't figure that part out, he wasn't going to explain it to her. \n\n\"Then you're that excited,\" she chuckled, understanding more than he had realized. \"How many times have you gotten off today?\"\n\nHe hesitated before telling the truth. \"Once.\"\n\n\"Is that why your stomach is all wet?\"\n\n\"It's pre-cum.\"\n\n\"It's a fuck ton of it, too.\"\n\nIt felt so strange standing naked in front of his sister, especially naked and hard. In the back of this mind, he wondered if it would have been worse standing there naked and soft. At least being hard made him look bigger. His cock gave an involuntary throb that he couldn't suppress. \n\n\"You gonna get off?\"\n\n\"No.\"\n\n\"But you want to, don't you?\"\n\n\"I'm hard, aren't I?\" he replied with a shrug. He tried covering up, but she shook her head and gestured for him to keeping showing off.\n\nRobin pushed away from where she had been leaning and moved closer. Eyeing him, she made a slow circle around him. For a moment, he saw his opening. For a moment, he had a chance to make a mad dash for his bedroom. For some reason, he didn't budge. With his luck, if he had tried it, she would have tackled him or something. \n\n\"Were you planning on staying naked all day?\" she asked. \n\n\"I don't know,\" he lied. \"I was just doing it for now.\"\n\n\"Uh-huh,\" she said, back in front of him where he could see the skeptical expression on her face. He could tell she didn't believe him. Awkwardly, his cock chose that moment to throb again and that made her smile. \"You're really excited, aren't you?\"\n\n\"Basically,\" he said, hating it, but unable to hide the truth of the matter.\n\nRobin glanced at the TV where the trio of porn stars were starting to get it on. The guy had his prick out and the pretty blonde sitting on the rope swing was now sucking it. \"You look as big as him.\"\n\n\"You think?\"\n\n\"Sure. Male porn stars are all short so their dicks look bigger.\"\n\nHe wasn't short, so he didn't know what to make of that. \"For real?\" \n\n\"You might even be bigger than him.\"\n\nAustin often wondered how measured up against other guys. Would his sister know? How many guys had she been with? At five years older and finished with college, did that mean she had been with a lot of guys? He couldn't be sure. As far as he knew, she had never had a forever boyfriend. \"Am I as big as your boyfriend?\"\n\n\"What boyfriend?\" she snorted. \"I broke up with Sid two months ago.\"\n\n\"Yeah, that's right,\" he said, although he had never followed her dating life. His cock throbbed again as he watched the porno playing on the TV. Fuck, he needed to get off.\n\n\"You like being naked in front of me?\"\n\n\"I like porno,\" he said, hoping she would buy the dodging of her question. In a funny way, it did feel good being naked in front of her. He tried turning it back around on her. \"Do you like seeing me naked?\"\n\n\"Sure, why not?\" she said, choosing to sit where Mom usually sat. She gestured for him to join her. \n\nHe chose to sit on the arm of the couch. He glanced at the hallway again. He had a clear shot and she wouldn't be able to stop him. Then again, this was sort of interesting, too. \n\n\"It doesn't feel funny seeing your brother like this?\"\n\n\"It's sort of fun,\" she said with a shrug. \"It's like it doesn't count or something.\"\n\n\"How so?\"\n\n\"I mean, who are you ever going to tell about this?\"\n\n\"Yeah, good point,\" he agreed. Who could he tell? Who would believe him? Besides, why would he ever admit that she had caught him jerking off? He noticed how she seemed much more interested in looking at him than watching the porno. \"Have you ever seen a porno before?\"\n\n\"Once or twice.\"\n\n\"Who did you watch it with?\"\n\n\"A boyfriend.\"\n\n\"Just once?\"\n\n\"Damn, Austin, what's up with you?\"\n\n\"Just curious,\" he said with a shrug. \"I didn't think girls were into this kind of stuff.\"\n\nThat made his sister laugh. \"Girls can even play with themselves, too.\"\n\nHis cock went into overdrive, throbbing harder than ever and threatening to release another round of pre-cum. He purposely thought about baseball and then football, anything to calm his throbbing need. \n\n\"Do you?\" he asked in a quiet voice.\n\n\"Sometimes.\"\n\n\"When was the last time you did it?\" he asked.\n\n\"Two nights ago.\"\n\n\"Really?\"\n\n\"Yeah, really,\" she flatly stated in a tone that made it clear she wasn't going to share any more details about it.\n\n\"Why didn't you just hook up with some guy?\"\n\n\"Are you for real?\"\n\n\"I'm just saying, if I was a chick, I would never need to jerk off.\"\n\n\"Because you'd just find some guy who wanted to fuck you, right?\" she asked. He nodded and she shook her head. \"Just because a guy wants to fuck me doesn't mean that I want to fuck him, you know?\"\n\nThat didn't make sense to him, but it felt cool talking to her about sex. \"Have you done it a lot?\"\n\nShe shrugged. \"I'm not a slut, if that's what you mean.\"\n\n\"But you like doing it, right?\"",
        "\"With the right guy, I do.\"\n\nHer willingness to talk about all this fascinated him. Was it because he was naked and hard? \"I love doing it.\"\n\nShe smiled and he felt foolish. Of course, he would love to do it. What guy didn't love to do it? \"How often do you do it?\"\n\n\"Whenever Suzanne lets me.\"\n\nOn the TV, the trio had moved from the rope swing to the porch of a house where the guy took turns fucking each of the women. Robin barely noticed. She seemed much more interested in staring at her naked brother and his hard cock. \"Does she like to do it?\"\n\n\"Sometimes,\" he said. It felt funny talking about his girlfriend to his sister. \n\n\"Do you ever go down on her?\"\n\n\"Fuck, I love doing that!\" His cock throbbed hard, showing that he was telling the truth. He tried covering it up again, but Robin wasn't having it. Shaking her head, she waved her hand and he uncovered himself.\n\n\"More than fucking?\"\n\nHe laughed. \"I don't know about that! Fucking is fun!\"\n\n\"I want to watch you jerk off,\" she suddenly blurted out.\n\n\"I'm not doing that!\"\n\n\"Why not?\" she asked with a playful smile on her face. \"You're already naked and hard. Go for it.\"\n\n\"What's in it for me?\"\n\n\"I won't tell Mom and Dad.\"\n\n\"You already promised you wouldn't,\" he insisted. \n\nGlancing at the TV, he saw the scene that had been playing had ended and a new couple were getting into it. They were in a bathroom. She snuck in, pulled his towel off his waist, and started teasing him. His favorite part of this scene was when some other chick peeked in through the open bathroom door and watched them for a moment. \n\nHe stared at the TV for a brief moment. He had met the conditions of their arrangement. He glanced at the hallway, the safety of his bedroom, and his clothes, but he didn't feel like going that way. \n\n\"Come on, just do it,\" Robin pleaded. \n\n\"Are you going to do it, too?\" he asked.\n\nFor a moment, Robin seemed to actually think about it! But that moment only lasted a moment. \"You know you want to do it.\"\n\n\"And you want to see me do it,\" he said, flipping it back around on her. \"Show me your tits and I will.\"\n\n\"Do it and I'll show you my tits,\" she countered. \n\nHe pondered her offer. Robin could be mean, but she was always honest with him. He liked the idea of seeing her tits. His sister looked like she might have nice tits, too. Besides, if she would show him her tits, what else might she show him? He really needed to get off, too. He had been hard long enough that his cock ached for release. Through the sex-addled fog in his brain, he tried to find a compromise that would work in his favor. \n\n\"If I do it, you have to get all the way topless,\" he said, staring at her fine looking tits. She wasn't top-heavy, but she definitely had a handful and the more he thought about it, the more he really wanted to see them. \"And you have to let me touch them.\"\n\n\"No way!\" she cried out, laughing at him. \"But I really will show them to you.\"\n\n\"For how long.\"\n\n\"For as long as you stay naked, too.\"\n\nHe liked that idea. He could stay naked for a very long time. \"All the way topless, right?\" he checked. Still smiling, she nodded and he couldn't find a reason to refuse. \"I need to get some Kleenex.\" He moved to the counter and snatched several tissues from the box. A small part of him didn't believe he was really going to do this. The hard, throbbing part of him knew that he would.\n\nHis sister stared with an eager look in her eyes, but she didn't say anything. Instead, her lips became a tight slit, as if she was holding back a comment, but didn't want to jinx things. \n\n\"I can't believe I'm doing this,\" he mumbled, looking at the TV for some inspiration. On-screen, the cute couple in the bathroom were fucking and that helped. He liked the blonde girl's smile and how into it she looked. Holding the Kleenex in his left hand, he started stroking his cock with his other hand. \n\nHe glanced at his sister and saw that her eyes were locked on his cock and hand. It felt so funny and strange to have her witnessing this, but he was too far into it to really care. He felt that aching need turning into the beginnings of a true release as his cock began throbbing and his balls went even tighter. Pumping furiously on his cock, he carefully caught his orgasm in the wadded-up Kleenex, filling the thin tissues with his creamy white spunk. Every throb and squirt felt wonderful until he felt like he had drained his balls. \n\nHe shivered and looked at his sister for her reaction. She had an interesting expression on her face, one that looked caught between hunger and surprise that he had really done it. The hungry part confused him.\n\n\"That was hot,\" she moaned. \n\n\"Do it,\" he gasped, still breathless from the thrill of his release. \"Show me your tits.\" He wanted her to do it before he lost his thrill.\n\nRobin hesitated just long enough that he thought she was going to renege on their deal. Then her eyes moved back to his cock and she decided to do it after all. \"You better not tell anyone about this,\" she said in a threatening tone right before reaching for the hem of her shirt. After pulling it over her head, she fished behind her back, popped her bra, and just like that, she was completely topless.\n\n\"You're right, this feels funny,\" she said, blushing while struggling to stop her hands from covering her breasts from him. \n\n\"Try being completely naked,\" he said, staring directly at his sister's tits. Seeing her topless felt strange for him, too, but he still liked it. She had great looking tits. Her pointy nipples looked hard. He especially liked how her tits rested against her chest. \"You have nice ones,\" he mumbled. Complimenting her felt very stranger than being naked in front of her.\n\n\"They're okay,\" she said with a shrug. He appreciated watching how her breasts moved from that tiny, casual gesture. When she grabbed both of them and squeezed, he felt his cock throb despite his recent orgasm. \"At least they're still nice and firm.\"\n\n\"I love tits,\" he blurted out, still feeling awkward at seeing her half-nude. \n\n\"I think tits are like balls. You're always fascinated by what you don't have.\"\n\n\"You like balls?\"\n\n\"I like how they move,\" she said, eyeing his lightly furred ball sac. \"Dicks are fun, too. But balls are endlessly interesting to me.\"\n\n\"Suzanne likes to play with mine.\"\n\n\"Does she ever suck on them?\"\n\n\"Not ever,\" he said before realizing that might be something his sister did. \"Do you do that?\"\n\n\"Sometimes.\" She shrugged again and Austin liked that a lot. \"You still look hard.\"\n\n\"Sometimes I stay that way even after I get off.\"\n\n\"Nice,\" she said with a grin as she stared at his cock. \"It's not dark red anymore. Does it hurt when it looks like that?\"\n\n\"Hurt?\" It took him a moment to figure out what she meant. After the relief of his orgasm, his cock had lost its deep red, angry look. \"It never really hurts, it just aches when I'm really excited.\"\n\n\"And throbs a lot.\"\n\n\"Yeah,\" he agreed, feeling self-conscious about being naked in front of his sister. After having an orgasm, it felt very strange. Still, in its own way, it felt good, too. They stared at the TV together as the current scene played itself out and the next one started. \n\n\"How long before you can get off again?\"\n\n\"I don't know. I've already done it twice today.\"\n\n\"Pervert.\"\n\nAustin winced. \"Really?\"\n\n\"No, not really,\" she said with a rare, reassuring smile. \"Sometimes, I do the same thing.\" He gave her a puzzled look. \"You know, just see how many times I can do it in one day. I have to be really horny to do it, though.\"\n\n\"Yeah,\" he grinned, relieved that he wasn't alone with being like this. \"I was going to see if I could do it every two hours.\"\n\n\"How long is this tape?\"\n\n\"Almost six hours.\"\n\n\"Do you have another one?\"\n\nHe shook his head. \"I just restart it. It's good, though. There are lots of good parts.\"\n\nRobin flashed him a fun looking smile. \"If you stay naked, I'll stay topless until it's time for you to do it again.\"\n\n\"For real?\"\n\n\"But you have to let me watch you do it.\"\n\n\"Yeah, okay.\" He couldn't see the downside to that. She had already seen him do it. Why would it matter if she saw him do it again? He absentmindedly caressed his cock, keeping himself excited.\n\n\"Can you stay hard that long?\"\n\n\"Maybe,\" he said, sure that if she stayed topless, it would be easy.\n\n\"This is so weird,\" she giggled. \"It feels dirty.\"\n\n\"Watching a porno?\"\n\n\"That and being half-naked in front of you.\"\n\nHe smirked. \"You could get all the way naked if you want.\"\n\n\"I'm sure you would love to see that, wouldn't you?\"\n\n\"Yeah, I would,\" he said. His cock throbbed, confirming his opinion about that.\n\n\"Maybe I will if you have a problem getting it up.\"\n\n\"I won't have that problem,\" he assured her. He had never had that problem.\n\n\"What about after you get off again?\"\n\nHe shrugged. \"I can stay hard a really long time.\"\n\nShe laughed at him. \"Most guys would have taken that as a reason to get soft.\"\n\n\"Yeah, I know,\" he said, mentally kicking himself in the ass for not realizing that sooner. \"I like being hard.\"\n\n\"If you can really stay hard that long, maybe I'll still get naked with you.\"\n\nAustin liked that idea a lot. \n\nOver the next couple of hours, the two of them had a conversation unlike any other in their combined lives. Mostly, they talked about sex stuff. Maybe not hardcore details, but close. Robin admitted her first time had been after her senior prom and she had been scared that it would hurt. Instead, it felt really good, even if it didn't last very long. Austin admitted that never lasted long the first time he fucked his girlfriend.\n\n\"But since I can usually stay hard, I just don't tell her and keep going.\"\n\n\"Damn, that's hot,\" Robin grinned with an alluring shiver. \"I wish more guys were like that.\"\n\n\"After I get off once or twice, I last longer.\"\n\n\"Yeah, other guys are like that, too. But then it can get boring. I like fucking, but after a while, it gets boring.\"\n\n\"Boring?\"\n\n\"I mean, you can only do it so many different ways, right?\"\n\n\"Yeah, I guess,\" he agreed, although he liked doing it in all of those ways. He told her about visiting Suzanne one weekend and how the two of them had fucked until they were raw. \"That hurt.\"\n\n\"I've done that!\" she giggled. \n\nHearing her confess doing the same thing made his cock throb. It had been a long time since his last orgasm and being hard had begun to feel really good again. She hadn't miss noticing the change.\n\n\"It's almost time again.\"\n\n\"Almost,\" he said, finding it funny when he felt a stab of nervousness about letting her watch again.\n\n\"I bet it won't be so big.\"\n\nConfused, he glanced down at his cock. \"It's still as big as always.\"\n\n\"No, silly. I meant your orgasm.\"\n\n\"Oh, yeah!\" he replied, feeling foolish. \"It sort of depends on if I tease myself a lot first or not.\"\n\n\"Tease yourself? Like how?\"\n\n\"Like almost cumming a bunch of times first. If I do that a few times, it seems to work up a better one.\"\n\n\"Is that how you make it look so red?\"\n\n\"I guess so.\"\n\n\"Mm, you should do that,\" she purred. \n\nHe gave his cock a test squeeze. He did feel worked up. Between the videotape and their conversation, he had remained hard the entire time. He might be able to get worked up like that again, but it would take some time. Glancing at the clock, he saw that it had been longer than two hours since his last orgasm. That was good. That meant he could have a bigger orgasm.\n\n\"Maybe you can help me do it,\" he suggested.\n\n\"I'm not touching that!\" she objected. \"You're my brother!\"\n\n\"No, that's not what I meant,\" he quickly said. \"I just meant, maybe you can take off your shorts or play with your boobs or something.\" In an act of good faith, he stroked himself a few times. \"It would help me get harder.\"\n\n\"You think so?\" she asked, relaxing into a smile as she considered his suggestion. \"So, like if I do this?\" She caressed her breasts and made her nipples very hard looking.\n\n\"Yeah, like that,\" he moaned, pulling on his cock and enjoying the good sensations that created. \n\n\"My nipples can get really sensitive,\" she said, still touching herself. That really helped him. \"Sometimes, it almost feels like I could get off by only playing with nipples.\"\n\n\"Have you ever tried to do that?\"\n\n\"I've tried, but I always have to touch my kitty, too.\"\n\n\"Your kitty?\" he snickered. He knew she meant \"her pussy.\" He just thought it was cute.\n\n\"You know what I meant.\"\n\n\"Uh-huh,\" he said, his eyes still locked on what she was doing to her chest. \"Does that really feel that good?\"\n\n\"Lots of different things feel good,\" she said, facing him. \"Like pulling on them on like this.\" She tugged on her nipples, stretching them. \"That's good, but you can't do that too much.\" She flicked her fingers over her nipples, making them spring up and down to show how hard they were. \"And then this can feel really good, too.\" Licking her fingers, she traced a wet circle around her stiff nipples. \"It almost feels like it's a tongue licking me.\"\n\n\"That's so hot,\" he moaned, appreciating her show. He pulled his hand away from his cock so she could see the effect she was having.\n\n\"You look really hard.\"\n\n\"I am.\"\n\n\"Just from me doing this?\" She licked her fingers and traced circles on her tits again.\n\n\"Yeah.\"\n\n\"Mm,\" she purred, pinching her nipples and rolling them around. \n\n\"Does that feel good, too?\"\n\n\"Would I do it if it didn't?\"\n\nHe winced. For just a moment, he felt like a dumb younger brother again. \"I guess not.\"\n\nShe grabbed the curve of her tits, squeezing them as if trying to massage herself. He nearly asked the same dumb question. Instead, he held back and stroked his cock. Watching her felt really good. \n\n\"Can you make it leak pre-cum again?\"\n\n\"Maybe,\" he said, stroking himself faster.\n\n\"What makes that happen?\"\n\n\"I just have to get really close to an orgasm,\" he said, fondling his balls for extra encouragement. \"If I'm not careful, I'll cum instead of leak.\"\n\n\"Don't cum. Not yet.\"\n\n\"I won't,\" he assured her. He kept up the pace on his cock until it felt really good. Squeezing his balls, he pulled his hand away from his cock as it throbbed on its own and he felt that churning sensation. Finally, a clear droplet of pre-cum oozed from his tip.\n\n\"Damn, that's sexy,\" she cooed, encouraging a bit more to show up. \"Try rubbing it around the head.\"\n\nUsing his fingertip, he painted the clear fluid across his cockhead while wondering why he had never done this before. It really made his cock twitch and throb harder.\n\n\"It's turning red again.\"\n\n\"I'm getting really turned on,\" he said with a smile, pleased that he made her happy. He moved back to caressing his cock.\n\n\"This is really making me wet.\"\n\n\"Oh fuck!\" he cried out as feeling good suddenly transitioned into feeling too good and his cock exploded in his hand. It happened without warning. One moment, he felt the sensation of \"here comes more pre-cum,\" and then her words switched that into \"here comes your orgasm!\" \n\nHis cumshot erupted from the tip of his cock, arcing upwards and landing first between his nipples and then leaving a line of cum from his chest to the start of his pubic hair. He couldn't help it and once it had started, he just went with it. \n\n\"Damn, bro!\" Robin exclaimed, wide-eyed and filled with happiness over the sudden eruption. \"Did you plan that?\"\n\n\"I was just trying to leak again,\" he groaned.\n\nShe giggled, realizing precisely what had happened. \"You got off because I said I was wet, didn't you?\"\n\n\"Yeah,\" he moaned, feeling embarrassed over losing control.\n\n\"That's hot.\"\n\n\"Really?\"\n\n\"Yeah, in a way,\" she assured him, still smiling. \"It's funny to think I could get you off by just saying that I'm wet.\"\n\n\"But are you really wet?\"\n\n\"Yeah, I am,\" she confessed and he felt another shiver of pleasure surge through him that resulted in a final droplet of cum oozing from the tip of his cock.\n\n\"You really like knowing that.\"\n\n\"Shut up,\" he grumbled, feeling awkward over the sensation. \"I can't help it.\"\n\n\"You came from your sister saying that she's wet,\" she said in a taunting tone.\n\n\"Big deal. I was already close.\"\n\n\"It's okay, I liked it.\"\n\n\"I'd like it more if you were to show me that you were,\" he blurted out.\n\n\"Stay naked and maybe I will.\"\n\nHe picked up the used tissues from the coffee table and tried cleaning up. The still wet tissues did a poor job and he needed to get more. \"Are you going to get naked, too?\"\n\n\"Are you going to jerk off again?\"\n\n\"If you get naked, I will.\" With his back to her, he cleaned the streaks of cum off his chest, stomach, and his cock. He could feel his cock beginning to grow soft. Instead of standing upright, it began to deflate and sag. He tried encouraging it to stay hard and gave up. Three orgasms into his day, he knew he would need a pause to recharge. At least it was still long and fat, even if it wasn't standing upright anymore. Austin turned back to his sister and caught her with a hand between her legs. \"Were you just touching yourself?\"\n\n\"It's that movie,\" she said, nodding at the TV. \n\nHe glanced and only saw the beginning of a scene with nothing exciting happening. \"Uh-huh,\" he said with a smirk. \"I think you're horny, too.\"\n\n\"So?\"\n\n\"So nothing,\" he shrugged, sitting on the couch. \n\n\"Are you going to stay naked?\"\n\n\"I guess,\" he said with another shrug. Her question confused him. She knew his plan for the day. Then he followed her gaze and realized she had noticed his sagging cock. \"I'll get hard again after a while. I just need to rest for a bit.\"\n\n\"It's still big.\"\n\n\"It might stay like that, too,\" he said, flopping it around. \"Sometimes it stays like this for a while before I'm ready to get hard again.\"\n\n\"I like it.\"\n\n\"You like seeing me soft?\"\n\nShe nodded. \"Is that crazy?\"\n\n\"I don't know. Maybe it's a little weird. I like being hard all the time.\"\n\n\"But now I get to watch you get hard again.\"\n\n\"Yeah, good point,\" he said, giving up on trying to do anything with it. \"You hungry?\"\n\n\"I'm horny.\"\n\n\"Me too,\" he laughed, even if his cock didn't reflect that feeling. He remembered something she had said earlier. \"Are you going to get naked now?\"\n\n\"Will that make you hard again?\"\n\nHe wanted to lie and say that it would, but lying didn't feel right. \"Maybe not right away, but I know it will.\"\n\nShe considered his answer. \"Maybe I'll wait a bit and see what happens.\"\n\nHe didn't love that idea, but couldn't figure out a way to change her mind. He felt his stomach grumble. \"I'm really hungry.\"\n\n\"Then eat.\"\n\n\"Can I eat you?\" he quipped.\n\n\"If I was naked, you could.\"\n\nThey both laughed. \n\n\"You want something to eat, too?\"\n\n\"Why not,\" she said, following him into the kitchen and opening the refrigerator door as if she still lived there. \n\nReaching past her, he pulled out a package of ground beef. \"I can make hamburgers.\"\n\n\"Juicy hamburgers?\"\n\nHe caught her meaning. \"Very juicy,\" he laughed, opening up the package. Unlike his sister, Austin knew his way around the kitchen and his gourmet hamburgers were legendary with his family. He dumped the ground beef into a bowl and began adding the seasoning that made them extra good.\n\n\"This really is sort of sexy,\" Robin mused as he worked. She grabbed at her tits and he noticed how hard her nipples looked. \"It's fun seeing you naked like this.\"\n\n\"You should get naked, too.\"\n\n\"I might.\"\n\n\"I'm not hard anymore,\" he said, turning and letting her see the change. Cooking had relieved him of his sexy thoughts. He still felt turned on, he just didn't feel turned enough to keep the blood flowing to his cock. His cock had finally returned to its resting state. \n\n\"Aw, it's cute!\" she squealed, eyeing his lack of an erection with a big smile.\n\n\"So that's like the worst thing I think any woman could say to a man,\" he groaned.",
        "\"I don't mean that in a bad way,\" she insisted. \"I like seeing you soft like that. It looks touchable.\"\n\n\"If you touch it, I bet it would get hard again.\"\n\n\"I bet I can do that by getting naked, too.\"\n\n\"That would work, too,\" he grinned, hopeful that she would really do it.\n\n\"I want to see if it happens all by itself.\"\n\nThat felt like the worst possible answer, especially since he knew it would. He liked being naked in front of her. For some strange reason, it felt even better because she was his sister. Unsure what that meant, he pushed the thought away. \n\n\"Sid hated for me to see him soft,\" she said as she watched him cook. \"It got really small when he was soft.\"\n\n\"Is that why you broke up with him?\"\n\n\"No,\" she flatly stated. \"I broke up with him because he was a jerk.\"\n\n\"Was he good in bed?\"\n\n\"He was alright,\" she shrugged. \"Nothing great. Like I said, he just loved to fuck.\"\n\n\"And you don't?\"\n\n\"No, I like to fuck, but I like to do other things, too.\"\n\n\"I really like going down on Suzanne,\" he offered. \n\n\"For real?\"\n\n\"She always has the best orgasms when I go down on her.\"\n\n\"Does she ever get off when you fuck?\"\n\nMoving the burgers to buns, Austin didn't want to answer that question. \"Not unless she helps.\"\n\n\"What do you mean?\"\n\n\"You know,\" he said with a shrug, feeling like half a failure for not being able to get his girlfriend off from just fucking her. \"If she touches herself at the same time that we do it.\"\n\n\"Like masturbate while you fuck?\"\n\n\"Yeah, like that.\"\n\n\"And it doesn't bother that she does that?\"\n\n\"I like it. I like being inside of her when she gets off. It feels really good.\"\n\n\"Genius,\" Robin muttered to herself. \"But I'm not sure I could do that.\"\n\n\"Do what? Touch yourself while fucking?\"\n\nShe nodded and it confused him. \"What's the big deal doing that if you're already fucking?\"\n\n\"I don't know, I just feel like I shouldn't have to do it,\" she said, looking away. \"But then I don't get off until after he's gone or after he falls asleep.\"\n\nStarving, Austin chowed down on his burger and couldn't talk for a moment. After swallowing, he shared another detail about his girlfriend, \"I just wish she would let me watch her do it.\"\n\n\"Play with herself?\"\n\n\"Yeah,\" he said, and they were both forced into silence as they ate. \n\n\"Fuck, this is a good burger,\" his sister said. That made him feel good. \"I love how juicy it is.\"\n\n\"Juicy is always good,\" he replied and they both giggled over the double meaning of that.\n\nSitting at the table in the kitchen allowed Austin to imagine that his sister was naked, too. He felt a rise happening beneath the table and fought against it. He didn't want to get hard again, not right away, because of what she had said earlier. If he didn't get hard, maybe she would get naked, too. He felt himself losing his battle.\n\n\"You should get naked, too,\" he said.\n\n\"What's in it for me?\" she asked around a bite of burger.\n\n\"I don't know,\" he mumbled, wishing he could come up with a reason. \"Because it would be fairer?\"\n\n\"After you get off again,\" she promised.\n\n\"For real?\"\n\n\"Maybe,\" she hedged, leaving him unsure what he could expect from her. \n\nHis disappointment eased his dick's need to grow hard again. He knew he could get hard, but he was okay not being hard for a while, too. \"Does it feel funny being topless in front of me?\"\n\n\"I keep waiting for Mom or Dad to walk in on us.\"\n\n\"Yeah, that would be bad.\" He wished they had a way of checking on them. \"Maybe they'll call later or something.\" He felt his prick relax even more, now a little afraid of being hard. After they had finished eating, he picked up both of their plates and carried them to the sink. He felt his sister's eyes tracking him.\n\n\"You're not even a little hard.\"\n\nHe shrugged. \"Thinking of Mom and Dad sort of ruined that.\"\n\n\"You're still going to do it again, though. Right?\"\n\n\"Yeah,\" he said. He rinsed off the plates before realizing he should wash them, too. If Mom came home and found two plates in the sink, she would think he had company. There was nothing sexy about doing the dishes, even in the nude with his sister staring at his naked ass. He washed the pan he had used and the spatula. Just being thorough, he even wiped down the table, too. \n\nRobin kept watching him, staring mostly at his naked parts. \"You should try to get hard again,\" she said, grabbing one of her breasts and caressing her nipple. \n\nHe glanced at the clock on the wall. If he was going to stay on his schedule of waiting two hours between orgasms, then he had another hour before he had to get off. \"We've got time.\"\n\n\"We could go watch more of that porno.\"\n\n\"I'll be there in a minute,\" he said, putting away the spices he had used before cleaning the mixing bowl. He realized he needed to dry the dishes, too. \n\n\"It's fun seeing you naked in the kitchen.\"\n\n\"I like being naked.\"\n\n\"Do you do this a lot?\"\n\n\"When I can,\" he said, realizing he needed to be more specific so she didn't get the wrong idea. \"I mean being naked, not watching that tape. Sometimes, it's just fun being naked, too.\"\n\n\"Anytime you want to walk around naked, you can visit me at my apartment.\"\n\n\"Do you get naked there, too?\"\n\n\"Hardly ever,\" she said. \"It's why this feels so funny.\"\n\n\"Shit, if I had an apartment to myself, I'd stay naked all the time.\"\n\n\"Why?\"\n\n\"It just feels good, doesn't it?\"\n\n\"It makes me horny.\"\n\n\"Uh-huh,\" he said, flashing her a grin. \"What's wrong with that?\"\n\n\"You're not horny,\" she said with another glance at his soft cock.\n\n\"Just because I'm not hard doesn't mean I'm not horny. I've already done it three times today.\"\n\nIn a quiet voice, Robin asked, \"Do you really like seeing me topless?\"\n\nWhile chatting, he had been leaning against the counter, holding the lip of it just for something to do with his hands instead of touching himself or trying to cover up his nudity. He caressed his balls as he looked at his half-naked sister. \"Yeah, you're hot.\"\n\n\"I'm your sister.\"\n\n\"You're still hot.\"\n\nHer eyes were on his crotch, watching him touching himself. \"I want to see you hard again. Hard like before.\"\n\nHe could guess she meant hard and needy since she seemed to like that. \"Give me a reason to get that way.\"\n\n\"This isn't enough of a reason?\" she asked, caressing her chest and pulling on her hard nipples. \n\n\"It's pretty good,\" he acknowledged, feeling a bit of a rise beginning to happen. \"But I want to see it all.\"\n\n\"Maybe just my shorts?\"\n\n\"All of it,\" he insisted, hoping for the best. \"C'mon, Robin, it's only fair!\"\n\n\"Will it make you hard again?\"\n\nHe was already starting to get that way again. \"Fuck yeah!\"\n\n\"And you promise you won't ever tell anyone?\"\n\n\"Who am I going to tell? Mom and Dad?\"\n\nShe snickered over that idea. If he ever dared to say something to them, she had so much more she could say about him. \"If I do it, you have to stay hard, or else I'm getting dressed again.\"\n\n\"Okay,\" he agreed.\n\nShe hesitated for a moment while eyeing him and his nudity. Finally, she hooked her thumbs inside the elastic of her shorts, stood, and bent over as she pushed down both her panties and shorts at the same time. \n\nAustin felt this cock growing firm in his hand as he watched his sister getting naked. He stared directly at her pussy, noticing how she had the sides trimmed so her pussy hair was one long strip instead of a bushy triangle like Suzanne. As he looked closer, her pubic hair looked really short, too. \"You look like a porn star,\" he gasped, every excited by the idea.\n\n\"Really?\" she asked, covering her pussy for a moment before moving her hand and touching the top and sides. \"It's just something I do for summer.\"\n\n\"It's sexy.\"\n\n\"Cut it out,\" she giggled, blushing a bit. Her eyes were on his cock. \"You're hard again.\"\n\n\"I told you I'd get that way if you got naked.\"\n\n\"I like it.\"\n\n\"I like being hard,\" he said, squeezing his firm cock and encouraging it to get even harder. In a funny way, when she complimented his cock, it felt like she was complimenting him, too. \n\n\"Make it bounce,\" she giggled.\n\n\"You mean, like this?\" he asked, tensing his muscles and making his hard cock throb up and down. \n\n\"Yeah, that's hot.\"\n\n\"Are you really wet?\"\n\n\"My panties are,\" she said, glancing at the tangle of shorts and panties on the floor. Then she touched her pussy and smiled. \"Yeah, I'm really wet.\"\n\n\"That's so hot,\" he moaned. This time, he didn't need to flex his muscles to make his cock throb.\n\n\"Want to taste?\" she teased, holding out her wet looking finger.\n\n\"Ew! No!\" he said, pulling away as she moved closer and tried rubbing her finger against his face. \"Cut it out! You're my sister!\"\n\n\"Taste it!\" she teased, forcing her finger against his lips. \"Do I taste good?\"\n\nThe scent of her pussy coated his lips. It was an unmistakable aroma that did smell good. It smelled like sex with Suzanne. He unconsciously licked his lips and tasted her. \"It tastes like pussy.\"\n\n\"Do you like that taste?\"\n\n\"Actually, I sort of love it.\"\n\n\"Even when it's your sister?\" she teased. He missed how she had smeared two fingers between her pussy lips. He didn't realize it until she shoved those fingers against his mouth again. \"Suck'em,\" she demanded with a playful smirk on her face. \"Tell me if I taste good.\" \n\nSurprising them both, Austin did suck on her fingers. \n\n\"Ew!\" she said, pulling her fingers from her mouth. \"You really did it!\"\n\n\"I know,\" he grinned, feeling like he had won their little game. \"And you do taste good.\"\n\n\"All guys say that,\" she said with a shrug. \n\n\"Because you do.\"\n\n\"I'm sure I wouldn't know,\" she replied with an icy tone to her voice.\n\nHe thought about Suzanne and how much she liked kissing him after he had gone down on her. That was something she really liked. \"You don't like how you taste?\"\n\n\"It's okay,\" she said, turning to pick up her shorts and panties. She walked them into the living room to keep them with her shirt and bra. \"But it's sort of weird, too.\" He told her about Suzanne. \"I don't ever let a guy do that to me.\"\n\n\"She likes to suck me after we have sex, too.\"\n\n\"Suzanne's a freak.\"\n\n\"I don't know. I think it's hot.\"\n\n\"She's probably a lesbian, too.\"\n\nThat thought had never occurred to him. \"You think?\"\n\n\"Why else would she like how she tastes?\"\n\n\"I don't know,\" he said, feeling stupid for not picking up on that. \n\n\"Have you ever tasted yourself?\"\n\n\"Once,\" he confessed. \"It tasted salty.\"\n\n\"It's not really that salty,\" she giggled. \n\nA big grin appeared on Austin's face as he realized what that meant. \"So you like how a guy tastes?\"\n\nA faint blush appeared on his sister's face, but she pushed past it. \"Actually, I really do. Guys are hot like that.\"\n\n\"Do you swallow?\"\n\n\"Wouldn't you like to know,\" she answered in a belligerent tone as she eyed his throbbing cock. \"I guess that means Suzanne doesn't?\"\n\n\"She always pulls away.\"\n\n\"Told you. She's probably a lesbian.\"\n\n\"Why? Because she doesn't like the taste of cum?\"\n\n\"But she does like the taste of pussy,\" Robin said, connecting the dots for him. \n\nHe didn't like how that felt. In a way, he could be okay if she liked both, sort of like the girls in the porno movies. Most of those girls seemed willing to suck dick and eat pussy, too. \"Maybe she just likes both.\"\n\n\"And you're okay with that?\"\n\n\"I don't know,\" he said, unsure about it. \"I guess if she lets me do it with her, I would be.\"\n\n\"She's probably eating pussy right now,\" Robin teased. \n\nHe struggled with whether that would be a good or bad thing. \"Would you ever let a girl do that do you?\"\n\n\"Do I have to do it back to her?\" she asked. He shook his head. Robin thought about it for a moment. \"I'd probably let her do it to me if she really wanted to do it. They say girls do it better, anyway.\"\n\n\"I've heard that, too,\" he said, realizing the tape had ended, rewound, and ejected while they were eating and talking. He pushed it back so it would restart. \"Suzanne says I'm really good at it.\"\n\n\"How good?\"\n\nHe shrugged. \"That's how she usually gets off.\"\n\n\"Me too.\"\n\n\"She gets off a lot when we do it. She gets off when we fuck and when I go down on her.\"\n\n\"But she has to help when you fuck.\"\n\n\"Yeah,\" he agreed, feeling like a bit of a failure because of that. \"But it's still hot. I still get to be inside of her when it happens.\"\n\n\"I don't think I could ever do that. I don't think I could ever let someone watch me doing that.\"\n\n\"When we're fucking, I don't really get to watch.\"\n\n\"But you want to, don't you?\" \n\n\"Yeah,\" he admitted, pulling on his hard cock. \"You like watching me.\"\n\n\"That's because you're my horn-dog brother and it doesn't count.\"\n\n\"Would you like to watch your boyfriend do it, too?\"\n\n\"I don't have a boyfriend.\"\n\n\"I know, but when you get a new one,\" he said, still pulling on his cock and making himself even harder. \"Will you want to watch him doing this?\"\n\n\"Are you going to let Suzanne watch you do it?\"\n\n\"Maybe,\" he said, finding that idea very sexy. \"If she wants to see it.\"\n\n\"She probably wants to see me do it,\" Robin joked.\n\n\"I want to see you do it.\"\n\n\"Keep dreaming,\" she said, even as one of her hands slipped between her legs. \"You want to taste me again?\" She held out two glistening fingers.\n\n\"Sure,\" he said, moving closer, gently grabbing her wrist, and pulling her hand to his mouth. \n\n\"You're tasting your sister's pussy.\"\n\n\"So? Pussy is pussy.\"\n\n\"Cut it out,\" she said, pulling back her hand.\n\n\"Cut it out or what?\" he asked. It felt funny because she was the one who had offered her fingers to him. \n\n\"Or I'll make you do it for real.\"\n\n\"Say that again after I get really excited,\" he joked. \n\nShe gazed directly at his hard cock. \"You're looking pretty excited right now.\"\n\n\"I'm not as hard as before. Not yet.\"\n\n\"I want to see you leaking again.\"\n\n\"Yeah, me, too,\" he said, caressing his hard cock and trying to work himself closer to orgasm so he could leak more pre-cum. \"That feels good when I'm that excited.\"\n\nHer hand moved between her legs again for a moment. \"I want to taste it,\" she said before catching what she was doing as if her hand had betrayed her. \"Fuck, I'm so horny.\"\n\n\"Do you want me to leave you alone so you can get off?\"\n\nRobin blinked hard as she started up at him. \"You would do that?\"\n\n\"Sure, why not?\" he asked with a shrug. It didn't seem fair that he was the only one getting off. \n\n\"Can I watch the video, too?\" she asked. He nodded. \"And where are you going to be?\"\n\n\"I don't know. I guess I can go to my room until you're done.\"\n\n\"But you would still know I'm doing it.\"\n\nThinking fast on his feet, he quickly countered with, \"I don't have to know.\" He took a step towards the hallway. \"I'm just going to go to my room for fifteen minutes and whatever happens, happens.\"\n\n\"How do I know you won't peek?\"\n\n\"Because you might see me if I do,\" he said, taking another step farther away. \"Besides, if you sit in Mom's chair like that, how much can I really see?\"\n\nRobin craned her neck around the side of the big, overstuffed chair and checked his line of sight as he moved to the hallway. \n\n\"See? I can't see anything.\"\n\n\"You sure?\" she asked.\n\n\"Nothing at all,\" he assured her.\n\n\"Set a timer,\" she insisted.\n\nAfter a detour back to the kitchen, Austin grabbed his Mom's kitchen timer and wound the dial to fifteen minutes. He set it on the floor near the hallway. \"There, now we can both hear it go off.\"\n\n\"I'm not really going to do it,\" she called out to him as he went to his room.\n\n\"I'll see you in fifteen minutes,\" he called back, knowing he would give her all the privacy she needed. He even made it a point to shut the door to his room loudly enough for her to hear. \n\nAs he paced back and forth in his room, he kept stroking his cock while thinking about his sister. Thinking about Robin touching her pussy felt good. He wondered why it didn't feel wrong, all of it, everything that they were doing. Earlier, she had mentioned how it felt like none of this counted since he was her brother. He got that. While it felt risky because no one could ever know about it, it didn't feel wrong. Strangely, it felt hotter because he was doing all this with Robin. \n\nHe glanced at the digital alarm clock on his dresser, using that to keep time just in case he couldn't hear the ding of the wind-up timer. Wondering if she was really doing it drove him crazy. He thought about her tits, her nice ass, and how she had trimmed her pussy for a summer of wearing a bikini. Every bit of it made him harder and more excited. None of it made him feel guilty or wrong.\n\nHe had a couple of old Penthouse and Hustler magazines hidden beneath his mattress. He considered pulling one out while he waited before realizing he didn't need it. The idea of his sister masturbating to his video was more than enough inspiration to get him worked up. After a lifetime of never really getting along with her, this all felt very cool. For once, he didn't feel like her \"little brother.\" He felt like something closer to a man.\n\nThe timer dinged. He let go of his very hard prick and swung open the door to his bedroom. He didn't announce his return. Either she had heard the timer or she hadn't. A part of him hoped she hadn't heard it.\n\nShe peered around the edge of the big chair and watched him walking into the room and realized he wasn't going to catch her in the act. \"Did you have fun?\" \n\n\"Mm, yes,\" she purred. \"This video is pretty hot.\" \n\nHe glanced at it, knowing every scene very well. She hadn't gotten off to anything special, just a blowjob scene where the woman spends the entire time sucking the guy's dick while fingering herself. He liked that scene, too. \"Did you get off?\"\n\n\"Want to taste?\" she offered, holding out her hand and offering her index and middle fingers to him.\n\n\"You'll freak if I do it,\" he said since that had been her reaction the last time. \n\n\"Do it,\" she insisted with a playful grin. \"I dare you.\"\n\nStanding next to her, he started sucking on her fingers and found they did taste like pussy. Her pussy. His sister's pussy. He didn't care. He was too busy admiring her full nudity. He could smell her pussy. He wished he could touch it and feel for himself how wet she was. \n\n\"You are so hard,\" she said, staring directly at his cock. With her sitting and him standing, his cock was right on eye level for her. \"Were you jerking off?\"\n\n\"You said you wanted me dripping,\" he said, letting go of her hand, but remaining pressed against the arm of the big chair where Mom always sat. None of that mattered to him as much as being hard in front of a naked woman. \n\n\"Can I touch it?\" she asked in a tentative voice.\n\n\"Sure!\" he quickly answered, thrilled at the idea and the moment her hand caressed his cock, his throbbing went into overdrive.\n\n\"Are you doing that?\"\n\n\"No, you are,\" he said, incredibly happy. \n\n\"For real?\"\n\nHe felt played. Surely she would know how a man's body worked. He said as much to her.\n\n\"I know this happens with other guys, too, but I never know for sure if they're doing it or if it just sort of happens.\"\n\n\"When you're really excited, you can't stop it from happening,\" he explained.\n\nRobin explored his cock, testing what would make it jump and throb. She soon discovered that simply running her finger lightly across the sensitive underside of his cock was enough to make it happen. \"Does it feel like an orgasm?\"\n\n\"Not even close,\" he said through clenched teeth. Fuck, that felt good, but it wasn't enough to make him cum. It was only enough to tease the hell out of him. He tried to explain it as best he could. \"It makes me more excited, but not enough to get off.\"\n\n\"But what if I keep doing this?\" she asked with a playful grin as she kept lightly touching his cock just enough to drive him mad with desire.",
        "\"I don't know,\" he said, giving the only answer he had. \"At some point, I guess I just do it myself.\"\n\n\"Show me how you like it best.\"\n\nThat felt like a strange request because she had already watched him jerk off twice. He put his hand around his cock and demonstrated how he did it. \"I sort of wiggle the skin up and down like this.\"\n\n\"So, short strokes, not long ones.\"\n\n\"I don't use long ones unless I'm trying to tease myself or I have some lotion.\" He demonstrated wrapping his hand around his cock in a loose fist and very gently fucking his palm. That felt okay, but it always felt better with lotion. \"Mostly, I do this,\" he said, rearranging his fingers so he held his cock more like a flute. Pulling his hand away, he pointed to the most sensitive spot, the bundle of nerves left exposed by his circumcision. He had never thought about how or why his cock was like that, he only knew this part seemed to matter the most. \n\n\"It's sort of like your clit or something.\"\n\n\"Maybe,\" he agreed, understanding that a woman's clit was the most important part of her pussy. While gripping beneath that sensitive spot, he tugged and pulled on the skin of his cock. \"This feels okay, but it doesn't really do anything for me.\" Moving his thumb and middle finger to form a circle that encompassed that scar, he did the same thing. \"But this feels much better.\"\n\n\"What about this part?\" she asked, lightly tracing her finger around his hyper-sensitive cockhead. \n\nHe pulled away. \"And that tickles!\" \n\nShe went back to tracing her finger up and down his shaft, grabbing his cock for a moment and circling her thumb lightly over that sensitive spot just a couple inches down from his cockhead. \"What if I keep doing this?\"\n\n\"That might get me off,\" he reported. \"Especially if you had some lotion or something slippery.\"\n\nRobin released his cock long enough to lick her thumb. \"You mean, like this?\"\n\n\"Fuck, yeah,\" he moaned, feeling his balls growing tighter to his body. \"Be careful.\"\n\n\"Or I'll get you off?\"\n\n\"Maybe.\"\n\n\"Do you think I can make you leak?\"\n\n\"I'm almost there,\" he moaned, feeling the beginnings of that involuntary pumping sensation as his cock throbbed in her hand. \"But you have to be careful. Too much and I'll get off like before.\"\n\n\"I'll be careful,\" she said, licking her thumb again before doing it some more. \"I don't want you to cum. Not yet. This is too much fun.\"\n\n\"I'm just saying,\" he moaned. \"I can't always stop that.\"\n\n\"I just want you to almost cum,\" she said. \"Does it feel good when you do that?\"\n\n\"Yeah,\" he groaned, struggling to hold back a real orgasm. \"It's almost like a real orgasm, but not quite.\"\n\n\"Mm, I want to see that,\" she purred, pausing again to lick her thumb. Except, this time, she didn't pull her hand away from his cock. This time, she moved her face closer to his cock, stuck out her thumb, and licked it. She moved close enough that he felt her breath on his cock and that was enough to change how it felt.\n\n\"Stop!\" he insisted, moving her hand lower on his cock. She gazed up at his eyes for just a moment before focusing again on his throbbing cock. Grabbing her hand, he showed her how to pump his cock down low just to keep the good feelings going. A moment later, a clear droplet of pre-cum oozed from the slit of his prick. \n\n\"You're doing it!\"\n\n\"Yeah,\" he huffed, feeling so very close to the finish line. \"Just don't do too much or I'll cum.\"\n\n\"Can I keep doing this?\" she asked, gently pumping the base of his cock.\n\n\"Yeah, that's okay,\" he said, frustrated at how little pre-cum had arrived. He felt a flash of frustration as he tried to work through how to explain the mechanics. When he did it, it was easy because he could feel everything that was happening inside of him. \"I think you have to alternate between pumping me and touching that one spot,\" he suggested. \"But whenever it feels like I'm going to get off, you have to stop so I don't.\"\n\n\"So, like this?\" she asked, leaning in to lick her thumb before touching that extra sensitive spot. The intense throbbing started immediately and it had very little to do with her thumb. It had much more to do with the feel of her warm breath against his cock. \n\n\"Stop,\" he reluctantly said.\n\n\"But I barely did anything!\" \n\nEven as she spoke, she could see the magic of her touch as his cock once more oozed a bit of pre-cum. \n\n\"Okay, that's sexy,\" she giggled. She caressed his cockhead, making him jump. \"You're deep red again, too.\"\n\n\"I'm really excited,\" he moaned.\n\n\"I can tell. I like it.\" She repeated the procedure and figured out when to stop without his warning. Her effort was rewarded with more pre-cum. \"Wasn't there more of it the earlier?\"\n\n\"There's always more the first couple of times.\"\n\n\"Yeah, that makes sense,\" she said, licking her thumb in the same way before trying it again. \"I want to see it leaking down your shaft like before.\"\n\n\"Then keep going,\" he said, half-hating himself for making that suggestion. As good as this felt, it felt like a bizarre form of torture, too. He tried to explain how frustrating it felt. \n\n\"But when you do get off, it's going to feel extra good, right?\"\n\n\"Yeah.\"\n\n\"I'm like that,\" she said, still focused on the magic trick she had learned. \"Like with Sid, I wouldn't get off with him, not really. But he could get me so worked up that after he fell asleep, I would have the best orgasms.\"\n\n\"I think it's important to tease yourself if you want the best orgasms.\"\n\n\"I guess so,\" she said with a smile. \"Sort of like what I'm doing to you right now, right?\"\n\n\"Yeah,\" he groaned, unsure how much more of this he could take. \"Has it been two hours?\"\n\n\"I don't know, I haven't been paying attention.\"\n\n\"I really need to get off.\"\n\n\"How much?\" she asked with a glimmer in her eye that looked dangerous. He had seen that glimmer throughout their life together and it always happened right before she was going to take advantage of him.\n\n\"A lot,\" he said, knowing that if she wasn't careful, it might happen against his will.\n\n\"Maybe you should just let it happen,\" she suggested.\n\n\"But I'll cum in your face,\" he moaned.\n\n\"No you won't,\" she said with absolute conviction that made no sense to him. Where else could he cum? Trying to work that out became impossible when she leaned forward to lick her thumb again. Instead of licking her thumb, though, she licked up the clear line of pre-cum that had begun to slide down the underside of his cock.\n\n\"Don't,\" he warned, panicked by what she had done. That had felt too good.\n\n\"Don't or you'll cum?\"\n\n\"Uh-huh,\" he grunted, barely able to speak. What the hell was she doing?\n\n\"What if I do this?\" she asked, sliding her hand down his shaft, opening her mouth, sticking out her tongue, and putting his cock against her warm, wet tongue. Worse was when she kept pumping on his cock, rubbing that sensitive spot against her tongue. He couldn't stop what happened next.\n\n\"Oh fuck!\" he cried out, trying to hold his hips still as his cock erupted against her tongue. In a fit of horror, panic, and absolute release, he watched as his cock blasted off against her tongue. After three orgasms, his orgasm wasn't strong enough to jet deep into her mouth, but that didn't change the thrill of getting off as his body tried to conjure enough cum to satisfy the thrill he felt. \n\nHe came in waves of pleasure. Each throbbing of his cock ejected another bit of true cum. Not pre-cum, but the real deal with each spurt landing on her tongue as she looked up at him with that same sparkling glimmer in her eyes, clearly proud of herself for taking control of his body. Unable to stop the orgasm, he gave in to it and allowed his cock to pump as much as he could.\n\nPulling away, she kept her tongue out so he could see his cum before making a show out of closing her lips and swallowing. \"Mm, tasty!\"\n\n\"I can't believe you just did that,\" he gasped.\n\n\"Me? You're the one who just came in my mouth,\" she giggled as if he had been his fault.\n\n\"You're the one who just gave me a blowjob.\"\n\n\"That wasn't even close,\" she said, tugging on his still hard cock. She surprised him again by engulfing his cock with her mouth and bobbing her head up and down exactly twice. \"That's a blowjob.\"\n\n\"Same diff.\"\n\n\"Not even close,\" she said, flicking her tongue across the slit of his prick to scoop up one last bit of cum. \"You taste good.\"\n\n\"Do I?\"\n\nShe shrugged. \"Yeah, but I really like the taste of cum.\"\n\n\"I can tell,\" he said, staring down at his wet cock while marveling over what she had just done to him. In a way, it felt like they had crossed a line, but he couldn't think straight enough to figure out the line. Being naked in front of her had felt wrong, the same with seeing her topless, and then naked. Knowing she had been playing with herself had felt crazy, too. After everything else that had happened was this really worse? He wasn't sure.\n\n\"Get worked up again and I'll do it again, too.\"\n\n\"I wish I could,\" he said, already feeling his cock relaxing from its excited state. \n\n\"What if I did suck on it?\" she asked, noticing how his cock had softened in her hand. \"Would that keep you hard?\"\n\n\"Maybe,\" he said, although he felt doubtful that would work. \"Mostly, I think I just have to rest for a bit.\"\n\n\"And then what?\"\n\n\"Oh, I'll get hard again, but it will take me a long time to get off again.\"\n\n\"Too bad,\" she said with a smirk. \"Because I'm really horny now.\" She grabbed at her breasts, but that wasn't the crazy part. The crazy, sexy part happened when she grabbed at her pussy. \n\n\"Are you going to get off again?\"\n\n\"Are you going to go back to your room so I can do it?\"\n\n\"No,\" he said, purposely being belligerent. He sat on the couch. \"I'm going to sit right here and watch you do it.\"\n\n\"Then I'm not going to do it,\" she said, glancing at the TV. Her gaze lingered as she watched the couple on-screen fucking. \n\nHe could see how hard her nipples looked and he saw the glazed-over look of hunger and desire in her eyes. She looked in as much need as he had been just minutes ago. Suddenly, he had a brainstorm. \"Teach me how to do it.\"\n\n\"How to do what?\"\n\n\"How to touch a pussy in all the ways that feel best for a woman,\" he replied, easing from the couch to the floor. \"Like I just did for you, only you show me.\" \n\nShe gave him a skeptical look, but she didn't reject his idea. Not even after he moved to kneel in front of her. \n\n\"I'm serious,\" he softly said, nearly touching her knees to pull them apart. \"Show me how to do it. Show me precisely where to find you clit.\"\n\n\"You already know that, don't you?\" she asked right before she tapped the tip of her slit. \"It's up here and not inside my pussy.\"\n\n\"I know that much,\" he said, not moving from where he knelt. \"But is it something you can show me?\"\n\n\"Oh God,\" she groaned, staring at him with that doubtful expression still on her face. \"You really don't know?\"\n\n\"In general, I know about where it is, but it's usually dark and I'm usually working by feel.\" He grinned before adding, \"Or taste.\"\n\n\"You've never seen the inside of a woman's pussy?\"\n\n\"Only in magazines or pornos.\"\n\n\"It's not like they're all different or something.\"\n\n\"They're a little different,\" he pointed. \"Not every guy has the same size dick, do they?\"\n\n\"But they all work the same.\"\n\n\"Mostly,\" he agreed. \"But I want to understand how you like it.\"\n\n\"You are such a pervert!\" she said, even as she raised her heels to the edge of Mom's chair and flopped her knees open so he could see much more than her fur-covered slit. She leaned over so she could look with him as she spread apart her pussy lip. \"It's right here, you doofus.\" Holding her pussy apart, she pointed right to the swollen little bud that sometimes lived beneath the hood that she had pulled back. Wearing a playful smile, she asked, \"Do you want to lick it?\"\n\n\"Yes.\"\n\n\"For real? Even though I'm your sister?\"\n\n\"You put my dick in your mouth.\"\n\nWhen she traced a circle around her clit, it made her shiver. \"But I mean, do you want to really lick it?\"\n\n\"Yes,\" he repeated while waiting for her to make fun of him.\n\n\"You want to lick your sister's pussy?\"\n\nHe felt confused. Was that the joke? Was it because they were brother and sister that he was supposed to say \"no?\" He didn't feel that way. \"Is that wrong?\"\n\n\"Probably,\" she giggled. Once more, she shivered as she traced a circle around her clit. \"But I don't really give a fuck.\" Taking that as a \"yes,\" he leaned forward, but she put a hand on his forehead, stopping him before he reached her pussy. \"If you do this, you have to do it until I get off.\"\n\n\"Okay,\" he promised. Why wouldn't he do that? Did she really think he would just tease her a bit and then stop?\n\nShe studied him for a long moment before pulling her hand away from his forehead. Without hesitation, Austin leaned in and replaced her finger with his tongue. This was something he knew he could do. Suzanne loved whenever he went down on her. His first girlfriend had felt the same way, too. He lapped right at her clitoris, experimenting with circling around it, going up and down, and then side-to-side. Up and down felt easiest and she didn't seem to mind.\n\n\"Yeah, like that,\" she moaned. \"Don't stop.\"\n\nHe didn't plan on stopping, not even to say he wouldn't stop. \n\n\"Oh fuck, yeah!\" she moaned louder. \"You are good at that!\"\n\nHe kept his attention right on her clit. He had always known a woman's clitoris was near the top of her slit. Having a better sense of exactly where it was on Robin made it even easier. Also, her clitoris seemed to stick out farther than Suzanne's clitoris. Who could miss Robin's clitoris, unless you were just stupid and spent your entire time trying to tongue her vagina? He didn't do that. He just licked the good spot. \n\n\"Oh! Oh! Oh!\" she cried out, digging her heels into the chair and pressing her pussy upwards. Then she added a hand on the back of his head, trapping his mouth against her pussy. He didn't mind. Actually, he liked it, especially when she began writhing against him and he knew she was having an orgasm. \n\n\"Yeah, that was good,\" she said, easing back into the chair and letting go of his head, except Austin didn't stop. She flinched, pulling away from him. \"That tickles.\"\n\nAustin didn't smile because that would have ruined what he was doing. Still, he felt a smile on the inside. This could happen to Suzanne, too. She would get too sensitive immediately after her orgasm and couldn't handle direct contact with her clit, but she also didn't want him to stop. He didn't stop. Instead, he licked around her clitoris before moving to tongue her pussy. Robin tasted great. He loved how wet she got, especially after her orgasm. He licked and lapped at juices, content to focus on something he was good at doing.\n\n\"Damn, bro,\" she purred. \"You know I came, right?\"\n\nHe looked up and saw her watching him. He pulled away long enough to say, \"Cum again.\"\n\n\"For real?\"\n\nKeeping his face against her pussy, he nodded as he kept licking. He tested licking near her clitoris again and when she didn't jump, he gave her clit more attention. \n\n\"I don't know if I can.\"\n\n\"Try,\" he said between licks. \n\n\"Okay,\" she said with a sigh, relaxing and letting him lick her. He noticed how her eyes moved to the TV. A moment later, she began playing with her nipples, too. \n\nGrabbing her thighs, he pushed her knees closer to her chest giving himself better access. She might not be able to push up against his face when it felt better, but he would make sure she didn't need to do that. \n\nIt didn't take long before she started to glance back and forth between the TV and him. \"I can't believe you're doing this,\" she whispered. \"I can't believe you're so good at it, either.\" \n\nThat made him happy. He still didn't feel bad about doing it, either. If he did a good job, maybe she would suck him again. Even if she didn't, he didn't care. He liked eating pussy. He liked it a lot. He moved one hand beneath his chin and traced a circle around the opening of her pussy. Robin released a loud moan, so he did it again. \n\n\"Finger me,\" she begged.\n\nAgain, he felt a smile on the inside that didn't show on the outside. Maybe it showed as a twinkle in his eyes, but he couldn't see his eyes. He circled her pussy a couple more times before pushing his finger into the depths of warm, wet pussy. He immediately added a second finger before feeling her pussy clenching around his fingers. That's what he wanted to feel. That was a sign that she was into it. \n\n\"Fuck,\" she moaned, singing out the word and holding the vowel sound for a long time. \n\nAustin knew he was getting to her and focused on her clit. He bore down on her clit, correctly guessing that she liked it direct and firm. He felt her tensing up and instinctively knew she was moving towards another orgasm. That's when he tried something different. He rotated his hand, turning his palm upwards and working his fingers against the roof of her pussy. He had done this a couple of times with Suzanne and she had had her best orgasms. \n\n\"Oh, God!\" Robin cried out and she began cumming. It was an intense orgasm that put her first one to shame as she tried to buck against him without being able to do it. He kept moving his fingers in and out of her pussy as he licked her clit and felt a blast of something flooding against his face. The sensation caught him off-guard enough that he pulled away a bit. It was like she was ejaculating or something. \n\nRobin made unintelligible moaning noises. She huffed and puffed as if she might hyperventilate. He wasn't worried. He knew she was having fun. She was having an orgasm, what was more fun than that? He just kept doing what he was doing, fascinated by how she seemed to be cumming like a guy in some strange way. \n\nHe kept going until she relaxed. He pulled away, realizing that she had gotten Mom's chair as wet as she had gotten his face, neck, and chin. He started to say something when realized she had done more than relaxed, she had gone limp. \n\n\"Robin?\" he asked, worried about how she looked like a rag doll on the chair. Had she died from pleasure? That sounded crazy, but she wasn't moving as far as he could tell. \"Robin?\" he asked louder and she made a soft moaning sign. He let go of the deep breath he had been holding without realizing it. If she could moan, she was fine.\n\n\"What the fuck did you just do to me?\" she softly asked, still sprawled in the chair as if all of her muscles had gone limp at once.\n\n\"What did you do to me?\" he asked, touching the wetness on me. \"Did you pee on me?\" \n\n\"I don't think so,\" she said, slowly sitting up to look at me. \n\n\"You got Mom's chair all wet, too.\"\n\n\"Shit,\" she groaned, feeling the dampness on the edge of the cushion. She struggled to get up and it took two tries.\n\n\"Are you okay?\"\n\n\"I've never cum like that before,\" she said, focused more on standing up than anything else. \n\n\"I'll get some towels,\" Austin said, darting to the kitchen for some paper towels. Together, they started blotting up the wetness before it seeped into the cushion below.\n\n\"Whatever you did to me, it was incredible,\" she said, kneeling next to him on the carpet and taking control over the clean-up. \n\n\"Mom's going to be so pissed if we stained her chair.\"\n\n\"It'll be okay,\" she promised, finally noticing how wet her brother looked. \"Did I do all that to you?\" \n\n\"Yeah.\"\n\n\"I don't know what you did to me, but I have never gotten off like that.\"\n\n\"I just fingered you.\"\n\n\"You did more than that,\" she giggled. Leaving the room for a moment, she returned with a regular towel, a bit of soapy water, and worked harder on the stain. While the chair was still wet, she promised him it would dry without a trace. \"If it does stain, just tell her you spilled your drink.\"\n\n\"Yeah, okay,\" he agreed. \"I should probably take a shower.\"",
        "\"I can take one with you.\"\n\n\"Seriously?\" he asked, intrigued by the idea.\n\n\"Why not?\"\n\nThere wasn't a reason against it in his mind, he just thought it was cool she wanted to do it with him. Naked, they walked together down the hallway to the bathroom they once shared before she left for college. Since she had moved out, all of her magic hair potions, razors, and other things had left with her. \n\nAustin started the shower and stepped behind the curtain. A moment later, his sister joined him. They took turns beneath the showerhead before he grabbed the soap and started rubbing it on his body. \n\n\"Here, let me,\" she said, facing him and holding back the shower spray with her back as she ran her soapy hands across his chest and he stared at her naked body. \n\n\"This feels so crazy.\"\n\n\"I know, right?\" she giggled. She moved her hands down his body and caressed his cock and balls. \"I can't believe I'm touching you like this.\"\n\n\"Me neither,\" he said, feeling his cock reacting to her attention. She felt it, too.\n\n\"For a bratty little brother, you have a nice one,\" she said, watching her hands as she stroked him back to a full hard-on. \"Are you going to get off again tonight?\"\n\n\"I want to.\"\n\n\"But not yet, right?\"\n\n\"I'm not sure that I can,\" he said, frustrated by how he could get hard, it could feel good, but after so many orgasms, it would take a lot to get him off again. \n\n\"Turn around and I'll do your back.\"\n\nHe turned and she soaped his back, including his butt before squatting down and doing his legs. It felt especially good when she ran her hands up and down his thighs. \"I've never done this before.\"\n\n\"Me neither,\" she said, standing back up and pressing against him from behind. He was very aware of her nakedness. Wrapping her arms around him, she caressed his front again, paying special attention to his cock and balls. \"It's fun.\"\n\n\"Yeah, it is,\" he agreed before asking if she wanted to trade places. He took a moment to rinse the soap off his body before turning to see his naked sister facing her. Before soaping her, he stared at her chest. \"Is it okay if I do this?\"\n\n\"You just ate my pussy, I think it's okay if you touch my tits.\"\n\nHe felt stupid but smiled through it as he caressed her chest. \"You have great tits.\"\n\n\"They're okay. I just wish they were bigger.\"\n\n\"They're perfect,\" he assured her, enjoying how her nipples felt stiff against his open palms. \n\n\"Sid always thought they were too small.\"\n\n\"Sid's a fucker,\" he grumbled. He didn't really know. He had only met him once, but if that guy didn't like his sister's tits, he was an idiot to Austin.\n\n\"Look at you getting all defensive of his big sister,\" Robin teased, giving his hard cock a playful squeeze. \"That's cute.\" She turned around to offer her back to him. \n\nCaressing her backside felt good, especially squeezing her ass. When he squatted to do her legs, just like she had done to him, he stared at her fine ass. On a whim, he leaned in and kissed her asscheek.\n\n\"Did you just kiss my ass?\" she asked.\n\n\"Yeah, I did,\" he laughed.\n\n\"Do it again.\"\n\nWithout a second thought, he kissed the other cheek, too. \n\n\"Ass-kisser,\" she joked.\n\n\"Yeah, I guess I am,\" he laughed, doing it several more times before she turned and he was face-to-face with her pussy. \n\n\"I like it better when you kiss here.\"\n\n\"Me too,\" he said, kissing the short fluff of her pubic hair before he stood to trade places with her. As she rinsed the soap from her body, he made her an offer. \"I'll do it again if you want.\"\n\n\"Eat my pussy?\" she asked as if it was nothing saying those words to him.\n\n\"Or kiss your ass,\" he said, making them both laugh. \n\nAs they toweled off, they kept looking at each other and smiling matching grins. \n\n\"Shouldn't this feel really wrong?\" she asked. \n\n\"I was just thinking that!\" he said. \"But it doesn't, does it?\"\n\n\"I mean, it does feel weird in a way.\"\n\n\"Like we shouldn't be doing it,\" he offered, completing her thought.\n\n\"Yeah, but it doesn't feel really wrong.\"\n\n\"It does feel a little wrong,\" he admitted. \"But wrong in a fun way.\"\n\n\"Like a secret.\"\n\n\"Yeah!\" he smiled, happy that she had explained it perfectly. \n\nBundling up their towels, they agreed it would be best to wash them, including the towels they had used to clean Mom's chair. \"Don't forget to dry these and put them away,\" she admonished him. \"Otherwise Mom will think you had a girl over while they were gone.\"\n\n\"I sort of did,\" he grinned.\n\n\"Are you going to tell Suzanne about this?\"\n\n\"Fuck no!\" he said without hesitating before looking a little sad. \"I'm not really sure we're still a thing. I'm hoping we are, but I don't know for sure.\"\n\n\"Long-distance relationships suck,\" she said.\n\n\"We still talk and stuff, but she hasn't written back in a while and she used to send me a letter every week.\"\n\n\"She could just be busy with school.\"\n\n\"Yeah, maybe,\" he said, not waiting to focus on that. \n\n\"Besides, you'll meet someone else.\"\n\nLingering in the kitchen, they snacked on veggies from the fridge and talked about his love life. Mom always made sure the house had lots of fruit and cut-up veggies. Austin complained about the girls at the community college he attended. Most of them he knew from high school and he wasn't that interested in them. Robin said he just needed to wait until he went to the university. It was one of the most supportive conversations she had ever had with him. He wondered if hanging out naked had something to do with that.\n\nWhile they talked, especially when they were talking about how things might be over between him and Suzanne, his cock had fallen limp. Robin gazed at his limp prick and asked, \"Are you going to get hard again?\"\n\n\"I want to,\" he said, glancing at the clock. Remarkably, they had talked and visited for a long time and blown clear past his two-hour schedule. \"I wanted to try doing it every two hours. Guess I messed that up.\"\n\n\"But you still want to do it, right?\"\n\n\"Yeah,\" he assured her, touching his cock and balls while staring at her nudity for inspiration.\n\n\"Wait,\" she said, pushing his hands away. \"I want to do something, but you can't ever tell that I did it.\"\n\n\"I won't,\" he said, finding it funny how she was still worried about anyone knowing about their day. Who would he ever tell?\n\nTo his surprise, she dropped to her knees, right on the kitchen floor, and pulled his soft prick between her lips. While caressing his balls, she started sucking on his cock as if it was a really big nipple. Her wet, warm mouth felt incredible and he couldn't remain soft for long. Within moments, his cock transitioned from being at rest to being fully erect. She bobbed her head up and down his hard shaft for another moment before pulling away to admire her handiwork. \n\n\"I've always wanted to do that.\"\n\n\"Do what?\"\n\n\"Feel a guy get hard in my mouth like that.\"\n\n\"You don't have to stop.\"\n\nShe gazed at his cock for a long moment, kissing its head before she stood. \"Yeah, I do,\" she said, cupping his balls. \"I get really horny when I suck dick.\"\n\n\"And why is that a bad thing?\" he asked, so tempted to touch her, too. Unsure of what was allowed, he kept his hands to himself. \n\n\"Because then I might want to do more than just suck.\"\n\n\"And?\" he asked with a grin.\n\n\"You are so bad!\" she giggled, playfully slapping his chest. \"Let's go watch more of that videotape.\"\n\nWhen they went back into the living room, she avoided Mom's chair. Thankfully, as the wet spot evaporated, the chair looked okay. Robin sat on the end of the couch in \"her\" spot. Automatically, Austin sat at the opposite end in \"his\" spot with the entire center cushion as a kind of \"no man's land.\" \n\n\"I think it's okay if you want to sit next to me,\" she suggested.\n\n\"Yeah, okay,\" he said, marveling at how funny everything felt. Being naked in front of his sister still felt funny. So did seeing her naked. Both of those things felt really strange, but sitting next to her on the couch? Strangely, that felt oddest of all. \"Mom and Dad would freak out if they saw us sitting like this.\"\n\n\"Sitting together?\" she asked, picking up on precisely the part that felt oddest to him.\n\n\"Yeah.\"\n\n\"They might frown about your porno, too.\"\n\n\"Or that we're both naked,\" he added.\n\n\"Or doing this,\" she said, laughing as she pulled him closer, wrapped her arms around his waist, and started stroking his cock. \n\n\"Why are you being so nice to me?\" \n\n\"Don't push it, ass-kisser,\" she teased in his ear and he realized he might never live down that part of their day. \n\nFor a long while, they sat and watched the explicit video while Robin continued to stroke his hard cock. Austin couldn't believe how good it felt to sit like this. He was reminded of something she had said earlier when she had said it was like nothing they did together counted. He wasn't sure that he agreed with that. Being close to her like this felt really good in lots of ways that he didn't quite understand.\n\n\"Do you think we'll ever do anything like this ever again?\" he asked.\n\n\"I don't know. I guess it depends on whether you'll let me catch you being a pervert or not.\"\n\n\"Most of the time, I feel like a pervert even if I'm not naked and jerking off.\"\n\n\"Because you are,\" she giggled before adding, \"Ass-kisser.\"\n\n\"Cocksucker,\" he teased back.\n\n\"Oh, you did NOT just call me that!\" she squealed, laughing as she slapped his bare belly. It was what she did next that felt strangest of all. She hugged him and said, \"Call me that again.\"\n\n\"Cocksucker?\"\n\n\"That's fucked up,\" she said. \"Hearing you say that makes me all tingly.\"\n\n\"Oh yeah?\" Pulling away, he twisted so he could see her. \"You're a cocksucker.\"\n\n\"Ass-kisser,\" she replied with a smile while grabbing at her tits.\n\n\"I want to suck on those.\"\n\n\"Go for it,\" she said, moving her hands away and arching her back a bit. \n\nFinding his luck unbelievable, he leaned over and started sucking on her nipples. He moved from one to the other and back again, enjoying the feeling of her hard nipples between his lips. He even liked how she caressed the back of his head as he did it. When he pulled away, both of her nipples glistened and he lightly pinched them.\n\n\"You're making me wet.\"\n\n\"You made me hard.\"\n\n\"I want to make you harder, too.\"\n\n\"Do you want to suck me again?\" he asked. She didn't answer him but neither did she stop staring at his cock. He stood next to her, offering his cock to her. \n\n\"Damn it,\" she said, eyeing his prick. \"I told you what this does to me.\"\n\n\"Just do it for a minute,\" he suggested. \"It'll make me really hard and needy.\"\n\n\"For one minute,\" she agreed, leaning over and engulfing his hard cock with her mouth. \n\nAs soon as she got started doing it, it became obvious to him that this was something she truly loved to do. She explored his cock with her mouth and tongue, teasing him and then looking up to see his reaction. Most of that reaction she could feel against her tongue. He had no idea how long she sucked him. He wasn't timing her, but he knew it was a lot longer than one minute. She bobbed her head up and down him really fast for a few seconds before pulling back to rub his wet cock against her cheeks while looking at him. On a whim, he smiled and said, \"You're such a good cocksucker.\"\n\n\"Fucker,\" she groaned and she did it some more.\n\n\"I'm serious,\" he assured her, petting the back of her head. \"You suck dick better than anyone.\"\n\n\"You're making me wet,\" she said between mouthfuls.\n\n\"That's because you love dick,\" he said with a big smile. \n\n\"Mm, I do,\" she purred, back to rubbing her face against his crotch. \n\n\"Suck it, Robin. Suck your little brother's big dick.\"\n\nAfter moaning loudly, Robin did exactly that. She also began clutching at her body while she did it, too. \"Keep talking dirty like that.\"\n\n\"You mean I should keep calling you a cocksucker?\" he asked.\n\n\"Uh-huh,\" she moaned as her hand moved from raking across her chest. She clutched her pussy. \"I love that word.\"\n\n\"Cock?\" he asked, hearing and feeling her moan as she kept her mouth wrapped around his prick. \"Suck it,\" he said, unsure what else to say aside from repeating himself. \"Suck my cock. Suck your brother's cock. Suck my cock and make me cum.\" The more he said all that, the more turned on she got.\n\nShe pulled back and stroked his hard cock. \"It's okay if you want to cum in my mouth. I like that, too.\"\n\n\"I'm not sure that I can,\" he groaned. \"Not yet, anyway.\" The sheer number of amazing orgasms from earlier in the day had cursed him. He had felt this way before when he was with Suzanne. He could get excited. He could get hard. But an orgasm felt really far away. \"I need a lot more cocksucking before I can get there.\"\n\n\"Mm,\" she moaned, giving him that more for a long time. \n\nFeeling stuck, he glanced at the TV and watched part of the videotape for inspiration. It helped, but not enough. As good as his sister's mouth felt, he was afraid it wasn't going to be enough. He really wanted to get off again, but he was afraid it was going to take so long that he would wear out her mouth.\n\n\"Let me jerk it for a minute,\" he said, pulling away from her. When he touched his cock, it was wet from her spit and that felt good. He pulled and tugged on his cock, first staring at the TV and then glancing at her. She stared directly at his cock as she rubbed her pussy and he saw that hungry look on her face. Damn, she looked sexy. She might be his sister, but he saw the fires of lust in her eyes and wanted to make her happy. \"Fuck!\" he groaned, disappointed that he couldn't seem to bring himself closer to an orgasm for her.\n\n\"Okay,\" she said.\n\n\"Wait. What?\"\n\nRobin leaned back on the couch and parted her legs. \"Fuck me.\"\n\n\"Are you serious?\"\n\n\"Just do it,\" she snapped, sounding very much like her sister.\n\nWithout arguing, he dropped to his knees and that put him at the exact right level for fucking her. Grabbing his cock, she guided him into her pussy as he pushed forward until it was too late for second thoughts. With a single thrust of his hips, he was buried deep inside his sister's warm, wet pussy for the first time in his life. \n\n\"Yes!\" she cried out, reacting to the sensation of being filled. She wrapped her legs around him and locked her heels so he couldn't pull away. He had just enough room to pull back for another stroke.\n\n\"Fuck, Robin,\" he groaned, suddenly filled with concern over whether they should be doing any of this.\n\n\"Yes!\" she moaned. \"Fuck, Austin. Fuck me!\"\n\nHe couldn't deny it. She felt so damn good. He didn't care if she was his sister or not. This felt too good. He wanted her. He wanted her happy. He wanted her to get off. He wanted to be the guy who made her get off. Seeing his older sister squirming in front of him fucked with his head. He couldn't believe she was naked. He couldn't believe she was letting him do this. He couldn't believe how much she needed it. He fucked her and fucked her with the stamina of a true stud.\n\n\"Fuck me, you ass-kisser,\" she said with her arms around his neck. She glanced down their bodies but mostly kept her gaze directly on his face. \"Fuck your sister. Fuck me harder!\"\n\n\"Goddamn,\" he swore, stunned by the expression of raw lust on her face. \"You really want this, don't you? You want my cock, don't you? Your brother's cock.\"\n\n\"Yes! Yes! Yes!\" she cried back, squirming beneath him. \"Make me cum.\"\n\n\"I'm going to fuck you forever,\" he said, feeling like he just might be able to do it, too. \n\n\"Oh God,\" she moaned, still staring up at him. \"I'm fucking my brother.\"\n\n\"Your little brother.\"\n\n\"You don't feel little,\" she gasped with a smirk.\n\n\"You feel good,\" he told her, really driving his cock home and doing his best to fill her with his cock. It was finally starting to feel good to him in the ways that would get him off. \n\n\"Do it,\" she begged. \"Fuck me. Fuck your big sister.\"\n\n\"Cum for me,\" he told her, sensing that she was getting close. Grabbing one of her nipples, he clamped his fingers around it and that seemed to be the extra bit of stimulus that she needed. Gritting his teeth against his rising need, he growled at her. \"Cum for Austin.\"\n\n\"Yes!\" she suddenly cried out right before her eyes rolled backward and she began shivering beneath him. From the clenching of her pussy, he had no doubt about what was happening. He had done it. He had finally fucked a woman into an orgasm without her touching her clit as he did it. In the back of his mind, he also realized this should be the first time she had had an orgasm from just fucking, too.\n\nHe rode her through her orgasm and refused to stop, not that she had asked him to stop. Instead, after her orgasm had passed, she smiled up at him. \"Now you cum,\" she said, bucking up against him. \"Cum inside of me. Cum inside your sister.\"\n\n\"For real?\" he gasped, rapidly reaching that point of no return.\n\n\"It's okay. It's safe,\" she assured him. \"Do it. Cum inside of me.\"\n\n\"Yes!\" he said, cheering for the sensation of fucking and the knowledge that he could go for it. \"Yes! Yes! Yes!\" Each word was accentuated with a deep thrust until that was all he needed. He pressed tightly against her and felt his cock exploding inside of her. While it might have been his least productive orgasm of the day, it was the one that felt the best and the most memorable as he felt his balls emptying inside of her. \n\nEasing away from her, he borrowed a page from something he had always done with Suzanne. He stood up and offered her cock to him. \"Now suck me clean.\"\n\n\"You fucking pervert,\" she giggled, but then she did it, too. She engulfed his wet cock with her mouth and sucked off the mixture of his cum and her pussy from his still hard cock. A minute later, she pulled away and smiled up at him. \"I could probably get used to doing that.\"\n\n\"But then we'd have to do it again,\" he joked.\n\n\"I could be okay with that, too,\" she said with a very happy and satisfied smile on her face. Opening her arms, she pulled him into her, hugging his neck before taking a moment to kiss his lips. \"That's the first time I ever came from just fucking.\"\n\n\"You're the first girl I've ever made do that,\" he said, wondering why her kiss didn't feel funny at all. He even wanted to kiss her again. As a test, he leaned in and did it. To his relief and surprise, she kissed him back. \"Did that feel weird to you?\"\n\n\"No, not really,\" she replied with a confused look on her face. \"It just felt like a kiss.\"\n\n\"But I'm your brother.\"\n\n\"So? We just fucked, too,\" she giggled, kissing him again. \"If we can fuck, I think we can kiss, too.\"\n\n\"Like, really kiss?\" he asked.\n\n\"You mean . . .?\" Robin did a combination of pulling herself forward while pulling him down to her until their lips met. Once they did, her hand moved to the back of his head and she made him kiss her. He felt her lips part and then their tongues met. This was not the kind of kiss he ever expected to do with his sister and it lasted a long time before she let him pull away. \"Damn, you're good at that, too.\"\n\n\"So are you,\" he gasped, feeling a moronic smirk on his face. He wanted to do it again. \n\n\"Maybe we both kiss the same way because we're related?\"\n\n\"Maybe,\" he agreed, not sure why it would be like that. As a test, he tried kissing her again and it felt just as good. \"Now I want to do that a lot.\"\n\n\"Pervert,\" she teased. She glanced at the TV. \"Your tape is over.\"\n\n\"I don't care,\" he said, moving in for another kiss that she willingly returned. \n\n\"Damn, bro, what am I going to do with you?\"\n\n\"What do you mean?\"\n\n\"I see that puppy dog look in your eyes. You can't fall in love with me, I'm your sister!\"\n\n\"But I'm already supposed to love you, aren't I?\" he asked. He gave her another kiss, but this one didn't last long. He had other thoughts in mind as he started kissing down her neck. ",
        "\"What are you doing?\"\n\n\"You'll see,\" he said, spending a few moments sucking on her nipples. \n\n\"You're going to get me horny again.\"\n\n\"Good,\" he replied, kissing down her stomach until he felt the sparse hair of her well-trimmed pussy. His plan had been simple. He wanted to eat her out again. If he could make her cum again as hard as the last time, then maybe that would mean something to her. \n\nThe first time his tongue touched her clit, she jumped as if she wasn't expecting it. \"Now you're not playing fair!\"\n\n\"Then stop me,\" he said, pushing her knees to her chest so he could really go at her.\n\n\"Ass-kisser,\" she moaned.\n\n\"Sure, I'll do that,\" he said. With her knees pushed upwards, it was easy to plant another kiss on each of her upturned asscheeks. He immediately went back to her pussy and she started to moan. Like before, he pressed down her clitoris as he sensed her orgasm pulling closer. He even did that thing with his fingers inside her wet pussy, too. This time, she got off without the flood, but she still got off.\n\n\"Damn, that felt good,\" she purred and she didn't even seem to mind when he wanted to kiss her. \"Are you going to get hard again?\"\n\n\"Maybe,\" he said, unsure if he could or not. He wanted to, but so far, it hadn't happened. \"Do you want to try to make it happen?\"\n\n\"Yeah, but not out here. It feels too weird doing all this in the living room.\"\n\n\"I don't know, I sort of like it.\"\n\n\"Let's go to your room,\" she suggested. \n\nSince she had moved out, there were only two rooms with beds, his and their parents. Mom had turned her old bedroom into an art room. He was glad she hadn't said \"Mom and Dad's\" room, although he would have done it. As he followed behind her, he watched her sexy ass swaying and felt the beginning of a tingle between his legs. Maybe he could get hard again after all.\n\nLaying on the full-sized bed in his room, it felt funny seeing his sister kneeling between his legs and trying to suck his cock hard again. For a moment, he was afraid he wouldn't get hard again until it started to happen. It happened in slow bits as she sucked and nursed on him. \"I'm sorry it's taking so long.\"\n\n\"I like it,\" she said. \"It's fun feeling you all smooshie.\" That half-hard, half-soft feeling didn't last. Soon, he was all the way hard. \"Mm, and this is even better.\"\n\n\"I love how that feels,\" he moaned, getting into the idea that it was his sister doing the sucking. \"Are we going to fuck again?\"\n\n\"Yeah we are,\" she said, holding out his cock and making sure he was hard enough before straddling his body. Squatting over his midsection, she fed his hard cock into her hot, wet pussy. \"Fuck, I'm wet.\"\n\n\"I can tell,\" he said with a casualness that would have felt funny with Suzanne. \n\n\"But this feels so good,\" she sighed. \"You're not going to come soon, are you?\"\n\n\"I might not cum at all,\" he admitted.\n\n\"Just promise me you'll stay hard.\"\n\n\"Okay,\" he said, unable to imagine a different outcome as she began to bounce up and down on his cock.\n\n\"Good, because I want to try some things.\"\n\n\"I want to try everything with you,\" he said and pulled her into a kiss. That kiss lasted a long time before she went back to riding on him. \n\n\"I saw a girl do this in one of those movies,\" she said, carefully spinning around on his cock without ever climbing off of it until she was facing away from him. Leaning over, she braced her hands on his shins as she moved her ass up and down. Glancing over her shoulder, she asked, \"How's that look?\"\n\n\"Sexy as fuck,\" he groaned.\n\n\"Is my ass shaking?\"\n\n\"A little, but not too much. It looks sexy.\"\n\n\"Mm, good,\" she purred. \"And it feels good, too.\" \n\nHe noticed one of her hands left his shins. Then he felt a gentle tapping on his cock. \"What are you doing?\"\n\n\"What do you think I'm doing?\"\n\n\"It feels like you're playing with yourself.\"\n\n\"Shut up,\" she said as she continued to fuck him while fingering her pussy. It was a good combination for her that resulted in a very nice orgasm. Breathing heavy, she paused her fucking for a moment and asked, \"You still doing okay?\"\n\n\"Yeah, I'm fine,\" he assured her, still feeling excited without an orgasm anywhere on the horizon. \n\n\"Good,\" she said, climbing off of him. \"I need a glass of water. Will you wait for me like this?\"\n\n\"Sure,\" he said, watching as his naked sister left the room. He played with his cock, enjoying how it felt slick from her pussy. Stroking didn't do anything for him except keep him hard. \n\nJust as he was beginning to wonder when she was coming back, she appeared at his door holding two glasses. Leaning against the door jam, she watched him for a moment. \"I like seeing you do that.\" Walking close, she offered him a glass of water. He sat up to drink before she suggested their next position. \"I want to see if I can get off doing it doggie-style.\"\n\n\"Sure thing,\" he said, scrambling to a kneeling position and making room for her to get on all fours in his bed. He had never done this before but had always wanted to try it. He quickly discovered that it felt wonderful, especially with how deep he could go. \n\n\"Try fingering me,\" she requested as they fucked. \n\nReaching around her slim waist, he found he could stroke her clit as they fucked. The effect on his sister was immediate. She began moaning and pushing back against him until she came again. Breathless again, she pulled away and sipped some of her water. \"You're going to catch up to me,\" he said. \n\n\"I haven't kept count.\"\n\n\"Have you ever had this many orgasms in a single day?\"\n\n\"Not with a man,\" she said and he smiled as he worked out what she meant. \"Shut up, pervert.\" \n\n\"It's okay if you play with yourself, too.\"\n\n\"That's such a guy thing to do.\"\n\n\"Maybe,\" he said. \"But it's still sexy. Lots of the girls in that video do it.\"\n\n\"I know,\" she said. \"Can we try one more thing?\"\n\n\"Anything you want,\" he said, feeling like he just might be able to get off one more time. Fucking doggie-style had really moved the needle for him.\n\n\"I'm not sure how this works, but I want to try it,\" she said right before asking him to sit in the middle of the bed. Once he was in position, she stood over him, squatting until she had his dick inside of her. \"Maybe you're supposed to kneel. I don't know.\" Plopping down, she sat on his thighs with her legs stretched out behind him. \"No, this is it.\"\n\n\"How do we do it?\" he asked, enjoying how close they were.\n\n\"I don't know that we do,\" she said, wrapping her arms around him. \"I think we just sort of sit like this and see what happens.\" He felt his cock throb and she smiled. \"That felt good.\"\n\n\"You feel good,\" he said, touching her chest. They looked into each other's eyes for a moment, he had no idea how long, but then they were kissing again. That felt really good, too. They kissed for a long time while caressing each other bodies with a lot happening between their legs. \"I'm not sure I can get off like this.\"\n\n\"Me neither, but I still like it.\"\n\n\"Yeah,\" he said, liking how good it felt to be this close to her. \"Did I really have puppy dog eyes earlier?\"\n\n\"You so did,\" she giggled.\n\n\"What about now?\"\n\n\"I don't know,\" she said. \"I can't tell.\" But he saw a look in her eyes that made her look dewy-eyed. \n\n\"You think we'll ever do this again?\"\n\n\"I don't know. I want to. Do you?\"\n\n\"I want to do it a lot.\"\n\nRobin giggled and he felt it between her legs, too. \"This is supposed to be tantra sex or something like that.\"\n\n\"Tantric,\" he corrected. He had actually heard about this. \n\n\"Yeah, that's it.\"\n\n\"And we're supposed to be inhaling each other's Chi or something.\"\n\n\"How did you get to be so smart?\"\n\n\"I read a book,\" he chuckled. \"You should try it sometime.\"\n\n\"I want to try something else,\" she said, bending her legs until she knelt with his thighs between her thighs. \"I want to try getting off.\"\n\n\"Me, too,\" he said, cupping her ass and helping her move up and down. \"Touch yourself.\"\n\nShe looked hesitant before reaching between their bodies and touching her clit. \"But you can see me do it.\"\n\n\"I know and it's sexy,\" he said, glancing between them.\n\n\"Fuck, you feel good.\"\n\n\"Cum for me,\" he said, feeling his need rising.\n\n\"Are you almost there?\"\n\n\"I am now,\" he moaned.\n\n\"Mm,\" she purred, rubbing her clit faster as they fucked faster, too. In a few moments, it happened, they came together for the first time while moaning and groaning as one. His orgasm worked against the contractions of her orgasm and that made it all feel that much better. \"Damn, I love that.\"\n\nAustin heard what she had said. He heard every word correctly. It didn't change what slipped out of his mouth next. Basking in the warm, afterglow of their amazing sex, he held his sister close and whispered, \"I love you.\"\n\nHugging him tighter, she repeated the words to him. \"I love you, too. You ass-kisser.\"\n\n\"Your ass-kisser,\" he laughed, giving her ass a playful squeeze.\n\nAfter untangling their legs, they climbed out of bed and took turns in the bathroom. Robin went first, taking a moment to clean herself up before he did the same thing. He found her still naked in the kitchen, emptying the two glasses of water. \"Did you want more?\"\n\nHe knew she was asking if he wanted more water. Moving behind her, he hugged her. \"Just more of you.\" It felt as corny to say as it had probably sounded to her, but she didn't call him out on it. He quickly covered his sappiness. \"It's just fun being naked with you.\"\n\n\"Because you like being naked or because I'm your sister.\"\n\n\"Both,\" he said. She spun in his arms and kissed him. It was just a peck, but it felt more significant than the kind of peck a sister might give her brother. \"Do you have to go back to your place tonight?\"\n\n\"I guess. I mean, I don't have a bedroom here anymore.\"\n\n\"Mom and Dad won't be home until later in the afternoon. You could sleep with me.\"\n\n\"in your bed?\"\n\n\"We'll fit.\"\n\n\"Says you,\" she giggled. \"Have you ever slept with someone else in that bed?\"\n\n\"I've never slept with anyone, ever,\" he confessed. \"Not even Suzanne.\" \n\n\"Then let's sleep together,\" she said. It had gotten late enough for bed, too. \n\nSpooning together in his full-sized bed, he wrapped his arms around her and enjoyed the feel of her backside pressing against his front side. \"I could get used to this,\" he murmured. \"Today was fun.\"\n\n\"I know a way we could do this all the time,\" she said, squirming against him. He wasn't hard and doubted he could get that way easily. Still, it felt good holding her like that. \"Move in with me.\"\n\n\"Are you serious?\"\n\n\"Why not? I don't have a roommate or a boyfriend.\"\n\nHe thought about her small apartment on the other side of town. \"But you only have one bedroom. Wouldn't that be suspicious? What will Mom and Dad say?\"\n\n\"It's closer to college for you and my couch does fold out into a bed.\"\n\n\"You really want me to live with you?\"\n\n\"I really want you to make me feel like you did today over and over again.\"\n\n\"I love you,\" he said, cupping her breast.\n\nTurning to face him in the small bed, she cupped his balls and kissed his lips. \"I love you, too.\"\n\nEventually, they fell asleep and slept together for the first time. It was the first of many more times.\n\nX X X\n\nAuthor's Notes:\n\nI wanted to try writing a story about how the conversation might go between a brother and a sister who are tempted by fate into breaking that ultimate taboo without the focus being on the risks or penalties of what they were doing. Lust has a logic all of its own. I hope this story captures that sensation of lust over-riding common sense.\n\nHopefully, you were able to forgive any remaining typos, dropped words, or grammar mistakes. I'm an amateur author who's just doing the best that he can with the tools that he has. \n\nIf you enjoyed the story, I hope you'll be kind enough to give it a 5-star rating and consider leaving a comment, too. I read them all."
    ],
    "authorname": "BuckyDuckman",
    "tags": [
        "masturbation",
        "caught",
        "brother/sister",
        "blowjob",
        "brother",
        "sister",
        "siblings",
        "younger man",
        "older sister",
        "college"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/cum-for-austin"
}