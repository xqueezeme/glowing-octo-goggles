{
    "title": "The Pulse Pt. 09",
    "pages": [
        "The front door banging shut announced the arrival of one of my parents back from work. After a day of analysing my powers and saying 'I don't know' a lot it was somewhat of a relief to speak to someone else.\n\nFiona and I walked downstairs to find my father halfway through a beer.\n\n\"One of those days, Dad?\"\n\n\"Just a bit,\" he sighed. He undid his tie, took off his jacket and slumped into an armchair in the front room. Fiona and I settled down opposite him on the sofa.\n\n\"Work has been pretty stressful. The stock market has been so volatile recently it's really tough to know whether the company is going to continue to get venture capital funding. I hope so, or the job I was hired to do is not going to exist.\"\n\n\"You really think that's a possibility Dad?\"\n\n\"I hope not son, but I'm trying to be realistic. I really want to make a go of this role but I may have to start looking around for something outside the.com sector.\"\n\n\"That would be such a shame! I know how much you were looking forward to growing the sales team at your new place.\"\n\n\"Yup. And the product is really good too. Everyone needs email management with the explosion of emails flooding into businesses but a good product might not save us if we can't get the next round of funding secured. Bloody stock market.\"\n\nHe took another long pull from the beer bottle, slowly relaxing again.\n\n\"How about you two? What have you been up to today or don't I want to know?\"\n\nFiona blushed slightly and I scrambled for an answer.\n\n\"We've been going over ideas for how to use the information that Joe told us about yesterday. To be honest we haven't really got anywhere.\"\n\n\"Well, why don't I put my job to one side, you put the rumours to one side and we can all go out to the pub tonight.\"\n\n\"Sounds great Dad!\"\n\n\"Thanks Mr Conw...I mean Mark,\" said Fiona.\n\n\"OK. I'll cook up my famous spag bol and then we can all head out and forget about everything for a while.\"\n\nThe kitchen was soon blasting with the sounds of Supertramp and chopping onions. Fiona and I showered quickly and got changed into some different clothes for the pub. Dad was calling us to eat just as the front door slammed and Mum came in.\n\nShe looked thoroughly depressed and only perked up slightly at the smell of dinner.\n\n\"You're late Mum. Is everything OK?\"\n\nI took her bag and gave her a hug.\n\n\"Not too great Jake, if I'm honest. But I'm home now and it smells like your father has been working his magic in the kitchen. Let's eat first and then talk about it.\"\n\nWe settled around the table as Dad served up one of my favourites. He was a frustrated chef at heart and when he did cook it was always good. His spag bol was wonderful - a mix of pork and beef mince with onions, chopped tomatoes, olives, herbs and probably other stuff that I didn't know about. Whatever it was I could eat it by the bucketload and always had to hold myself back.\n\nWe told Mum about the pub idea and she was equally enthusiastic.\n\nIt wasn't long after 7pm that we were walking up the hill to an old coaching house called the Four Horseshoes. It was a slightly rundown place but a new manager had taken it over about a year ago and he was slowly turning it around into being more of a food pub. The manager was a guy called Simon that my Dad vaguely knew through football so if he was going out for a pint it was always to the Four Horseshoes.\n\n\"Mark! Great to see you. Not often we see you on a Monday.\"\n\n\"Nice to see you too Simon. You remember Anne?\"\n\n\"Of course, welcome.\"\n\n\"And this is my son Jake and his girlfriend Fiona.\"\n\n\"Good to see you both. Now what can I get you all?\"\n\nWe were quickly settled at a table. In no time we had two pints of Summer Lightning, a glass of chardonnay and a gin and tonic sitting in front of us. Both my parents looked like they really needed this and I smiled to see them relaxing.\n\nOver the next hour or so the pub filled up a little bit and we chatted about work, university and everything other than the rumours. We couldn't escape those for long though. Mum had been forced to deal with every shitty job that they could find for her at work. It was crushing as she had been there for well over five years. All because of the rumours about me. I felt like shit.\n\nDad wanted to go to the Citizen's Advice Bureau to get their help to file a grievance, but with limited job opportunities out there Mum didn't want to do it. With the divorce she was more aware than ever that she couldn't afford to lose her job, however crappy it was.\n\nMum and Dad headed home after one drink. I knew they must want some time and space to themselves in the house so we stayed for a while longer, playing pool and loading up the jukebox.\n\nWe were part way through our second game when the door opened and a group of guys in sports gear came in, probably from the five a side pitch down the road.\n\n\"It's Jake isn't it?\"\n\nI turned round reluctantly expecting yet another arsehole from school. But it was Dave and Phil, the two guys from the bus accident. They were part of the football group that had just arrived. I broke into a smile when I realised who it was.\n\n\"Hi! Yes, that's right.\"\n\n\"Great to see you man. We were hoping you'd drop by at some point. We wanted to buy you a beer.\"\n\n\"Thanks Dave, but you really don't need to do that.\"\n\n\"That's no problem, give me a secon...oh, sorry, am I interrupting a date?\"\n\nI laughed at his sudden change of tack.\n\n\"No, that's fine. We're just getting out of the house for a while. This is my girlfriend Fiona.\"\n\n\"Wow! Nice to meet you. I hope that the hero here has told you all about what he did in that crash.\"\n\n\"A little,\" said Fiona, \"but he's quite modest about it.\"\n\n\"Well he shouldn't be,\" said Paul chiming in for the first time. \"He was already up and helping the injured when we were trying to figure out which way was up. And with all that blood a lot of people would have freaked. Not Jake. You've got a good one here.\"\n\n\"Thanks, I'm slowly coming to that conclusion myself.\"\n\n\"Guys please!\" I was feeling embarrassed and pleased at the same time.\n\n\"At least let us buy you a beer and then you can carry on with your date without a pair of smelly footballers in the way.\"\n\n\"That's really kind, thank you.\"\n\n\"And next time you fancy a beer, pop up on a Saturday evening and we'll see how good you are at pool.\"\n\n\"That sounds great, I'll do that.\"\n\nA beer and another gin and tonic appeared a few minutes later and with a cheerful wave the two left us to finish our game.\n\n\"They're really nice.\"\n\n\"Yeah, I thought so too. Good guys.\"\n\n\"And you just know them from the accident?\"\n\n\"Yes. They were the only two that came forward when I asked for someone to help me with the two seriously injured people.\"\n\n\"Well, it looks like we should spend a bit more time up here on a Saturday evening if this is the sort of welcome that you're going to get.\"\n\n\"I guess so.\"\n\nSeven years of being picked on, put down and generally treated like shit left me completely unnerved and unsure when faced with such a genuine offer of friendship. I literally didn't know how to take it. I mean how could they want to be around someone like me? Surely this was just a trap and I'd be the butt of a joke yet again. What was the catch?\n\nFiona could see it was genuine though and it was her that nudged me to go and say goodbye to the guys when we left and thank them again for the beer. That started some good natured banter about free beers and the trouble that we'd got the two of them into with their teammates. We were all smiles as we left the pub.\n\nThe walk back felt shorter than the walk there and I'm certain that there were noises off in my parents bedroom as we drifted off to sleep that night.\n\n= = = = = = = = = =\n\n\"No, Jake!\"\n\n\"But I have to! We've been talking this through for days and getting nowhere. What other options do we have?\"\n\nThe argument had been going on for a while.\n\nI'd been very wary of any kind of intimate contact when we got home after the pub as I still thought that alcohol and hormones together could potentially trigger the Pulse. So we'd slept deeply and as with most mornings I woke up feeling a bit too warm with Fiona wrapped around me and a bad case of morning wood. There aren't many better ways to wake up.\n\nThe morning ritual went ahead like any other work day and Mum and Dad both left the house looking much better than they had when they'd got home last night. Sometimes you just need to get for a bit and that seemed to have helped them both.\n\nSometimes when you wake up it takes all morning before you feel like you're ready for the world and other times you bounce out of bed ready for anything. I'd woken up with the firm conviction that spending yet more time talking things through wasn't going to get us any further. We didn't have enough information.\n\nI needed to use the Pulse.\n\nThe thought of doing something like that again scared the shit out of me but I had to do something. I'd mulled it over throughout breakfast and had tried to figure out how to make things safer. Once Mum and Dad had left I'd told Fiona and the argument had gone on ever since.\n\n\"But Jake, you nearly died!\"\n\n\"I know, I know. Don't think that I'm not scared.\"\n\n\"So why take the risk?\"\n\n\"Because this is never going away otherwise. I have to get some proof.\"\n\n\"So go and see Youle the Tool and force him to confess using the...green one?\"\n\n\"The blue. But while that would work don't you think that his sudden complete change of character would be noticed? I visit and suddenly he's owned up that it was him? I'm sure that the police would be assuming that I'd leaned on him somehow. That has to be an absolute last resort.\"\n\n\"What does the green one do again?\"\n\nI blushed thinking back to how I'd used it in the past.\n\n\"It allows me to create illusions and maybe more. I really haven't used it much so I'm not sure what I can do.\"\n\n\"Could you make a version of Jennifer for him to talk to? Get him to confess something to her?\"\n\n\"I have no idea. It would be pretty draining and I'd have to make her real to the touch somehow. It's a good idea but it's pretty risky. And I've no idea how close they've got to each other. What if they've become an item and she's suddenly behaving totally differently..?\"\n\n\"Yeah, I know. That would weird me out too.\"\n\nWe sat in silence for a while.\n\n\"Why don't I start by just spying on him for a while? That's pretty low energy by itself. Then if I get any visual clues I could dip in and try and hear what's happening.\"\n\n\"But that's still dangerous isn't it?\"\n\n\"If I do it for too long then yes. Maybe you could help shake me out of it or something?\"\n\nFiona nodded and then a thought struck her.\n\n\"Does it make a difference how far away you are?\"\n\n\"It didn't with the scrying. I don't know...it might do if I'm trying to project myself. I hadn't really thought about it.\"\n\n\"Can we test it? We get you fuelled up first, loads of sugar and carbs. Then I'll go downstairs, you use the Pulse like you did to see me at the garden centre and see how you feel after ten seconds. What do you think?\"\n\n\"I love it!\n\nTen minutes later I was lying on the bed feeling slightly sick after eating three pancakes loaded with syrup, a banana and half a packet of jelly babies. Fiona was downstairs waiting for me as I reached for the purple strand, split it to a tiny thread and pulled.\n\nPulse.\n\nIn no time I was looking at Fiona. I dimly heard her shout from downstairs.\n\n\"Are you here?\"\n\n\"Yes,\" I did my best to shout back whilst concentrating. Actually this was easier than I thought it would be.\n\nFiona started to walk around the living room, holding up newspapers and things for me to try and read. I found that I was able to zoom in quite quickly but got kind of dizzy if she moved while I was reading the thing that she was holding.\n\nShe quickly exhausted all of the things that we agreed to do. She looked around quickly, presumably checking on what could be seen from the front window and slowly began to undo the button on the top of her jeans. She started to move backwards and forwards as if to some music, her beautiful rear swinging from side to side as she slowly inched her jeans down her legs.\n\nI was able to move myself to the best vantage points throughout her wonderful display. As she bent down straight legged and showed off her pussy, barely covered by her thong, I made sure I was right there to enjoy it.\n\nShe stepped out of her jeans and slowly pulled her top up and over her head, shaking her hair from side to side and making her boobs bounce around delightfully in her bra. I had a huge hard-on as I made sure that I took in every possible view of her lovely body.\n\nPulsePulsePulse\n\nIn a blur of colour I was down in the sitting room with her. As she stood there I moved behind her and unclipped her bra.\n\nShe shrieked and whirled round, her beautiful unfettered breasts bouncing in front of me. I filled both my hands with her bounty.\n\n\"Jaaaake...?\"\n\n\"It's me sweetheart.\"\n\nMy voice echoed eerily in the room. Back in the bedroom I was monitoring my own breathing, making sure that I continued to breathe in and out. It was weird switching back to my real body and then to my projection. I was dizzy for a minute and then it stabilised.\n\n\"This is so weird.\"\n\n\"You feel amazing. As always.\"\n\n\"I can't tell you how hot this feels. I can't see you at all but I feel your touch...\"\n\nShe shuddered with pleasure as I tweaked her nipples.\n\n\"Jake. That's long enough.\"\n\n\"But we were just getting started,\" I whined.\n\n\"Let's see how you feel after nearly a minute of projecting yourself. Let's be safe.\"\n\nI cut the threads and was rapidly back in my very horny body. I was tenting my jogging bottoms and my hands were outstretched from cupping Fiona's breasts.\n\nI carefully started to stand expecting to be dizzy or tired but I was neither of those things. With a huge grin I rushed down the stairs to see Fiona waiting for me, her fingers stroking her nipples.\n\n\"Did it work?\"\n\n\"Perfectly!\"\n\n\"No dizziness? No tiredness?\" She twirled slowly as she spoke, reaching down and picking up her bra as she did it. She held it against her, denying me the view of her perfect breasts. Her coy smile and lightly bitten lower lip as she looked at me over her shoulder told me everything that I needed to know.\n\nI couldn't stand it any more and grabbed her from behind, my hands mauling her tits through her bra, my cock pressed hard up against her arse. I started kissing her neck and she gasped, still wriggling to keep her mouth away from my lips.\n\n\"Well?\"\n\n\"I saw everything, I could read the paper as you held it. And you felt and heard me. And I'm so incredibly horny after your little show.\"\n\nShe looked over her shoulder at me.\n\n\"Me too. It was so hot being touched like that. Fuck me Jake. I need you.\"\n\nI ripped off my joggers and she turned to face me finally dropping her bra to the floor. My lips fastened on to her nipples, one then the other in rapid succession as I ate them up. At the same time I pulled her panties to the ground and she stepped out of them while holding my head to her chest.\n\nWe were both so turned on that when I grabbed hold of her arse cheeks she jumped into my arms wrappingher legs behind me. I lifted her up, lining my cock up with her puffy, wet pussy lips. She teased me back and forth, rubbing up and down on my cock head, driving me insane as I continued to feast on her nipples.\n\nI reached underneath her, lined my cock up and practically dropped her onto my pulsing shaft.\n\nShe howled!\n\nHer eyes rolled up in her head as I filled her tight cunt up with my stiff pole. I squeezed her arse with both hands and began to lift her up and down, power fucking her, standing in the living room.\n\n\"Oh Jake! Yes, keep fucking me. Again. Please! Yes, that's so good. Drive that cock into me. Feel how hot I am for you. Aaaaarrrrrgggghhhhhhh!\"\n\nI loved how vocal she was during sex. It really turned me on. She wasn't joking about how turned on she was either. She'd come incredibly quickly. The feel of her orgasm rippling up and down my cock was amazing.\n\nI was in some kind of zone, just driving my cock into her, determined to give her as much pleasure as I could without releasing the Pulse. As I began to tire I lay her down on the couch, grabbed her ankles and pushed them back to her shoulders and really went to town.\n\nShe began to make the most outlandish noises as I drove my cock into her eager cunt. Her pussy walls were throbbing with mini-orgasms as she began to completely lose control. The slapping of my balls on her arse reached a crescendo with our cries of passion.\n\n\"Come on my tits Jake.\"\n\nThe condom! I'd forgotten the fucking condom yet again!\n\nPeople always say that once you hit the vinegar stroke there's no turning back. But that sudden bucket of cold water feeling nearly stopped me dead in my tracks.\n\nI pulled out just in time and came copiously over her tits and face. She watched me with a satisfied smile enjoying my release nearly as much as me. I was panting from my exertions and she surprised me by taking my cock and pulling it into her mouth where she lovingly sucked it clean.\n\nI could feel myself responding quickly, as could she.\n\n\"Uh uh! We've got things to do today, we can't spend all our time having sex on the sofa.\"\n\nWe looked at each other for a few seconds before bursting out laughing, knowing that that was exactly what we would both very happily spend all of our time doing.\n\nShe grinned at me as she bounced up the stairs to go and clean up, doing nothing for the state of my hard on in the process. She really was sex on a stick.\n\nThe postman chose that moment to push our post through the letterbox, nearly giving me a heart attack as I stood there nude in the living room. I picked up the bills and junk mail and threw them on the hall table. As I turned to head upstairs and clean up, I caught a glimpse of a coat of arms on one of the envelopes. I pushed the other letters aside and picked it up.\n\nIt was addressed to me.\n\nThe coat of arms had four gold lions on a red background. In the middle was a gold book. The latin words \"Hinc lucem et pocula sacra\" surrounded it.\n\nCambridge University.\n\nI ran up the stairs taking them two at a time, letter in hand, my clothes totally forgotten in the middle of the sitting room.\n\n\"Fiona! Look!\"\n\n\"What is it?\"\n\n\"It's from Cambridge. From the university.\"\n\n\"Wonderful! It looks so official. Do you want to wait and open it with your parents?\"\n\nI stopped dead in my tracks. I'd been so excited to share it with Fiona that waiting for my parents hadn't even crossed my mind.\n\nI held her shoulders and kissed her lightly on the lips.\n\n\"You are so good. Thank you.\"\n\n\"For what?\"\n\n\"Thinking of everyone else first. Of course I should wait and share it with them.\"\n\nI smiled happily and hugged her.\n\nShe hugged me back and then started to look concerned. She took my hands and sat me down on the bed. She crouched down in front of me and looked me straight in the eyes.\n\n\"Jake, are you sure that you feel OK after this morning's activities?\"\n\n\"Well...I'm still horny if that's what you mean.\"\n\nShe flushed prettily.\n\n\"That's not what I mean and you know it. Are you feeling OK? No headaches, no tiredness?\"\n\n\"Nothing. Your theory about distance being a factor must be right. When I actually push myself into that space it must use more energy the further away it is. It sort of makes sense that the further away from my body I am the more effort it takes to hold it there.\"\n\n\"And how long were you in the office with me back in the garden centre when you nearly died?\"\n\n\"No more than a minute. But then I hadn't realised that I had to maintain my own vital signs. I had no idea that I needed to be sure that I was breathing. This time I was prepared. I used a yellow thread to monitor my body and while it's more effort mentally it worked like a charm. No issues at all.\"",
        "My grin was as wide as the cheshire cats. I had been genuinely scared going into this and I was still buzzing now that it had gone well.\n\n\"Let's clean up and drive over near to the Tool's house and see if you can find something out.\"\n\nI lifted her onto my lap and kissed her thoroughly, trying to show my appreciation for her. She kissed me back enthusiastically. As my hands started to wander she slapped them away, smiling.\n\n\"Come on Jake. Let's get cleaned up and try this.\"\n\nWe were in the car less than thirty minutes later heading for the Youle's place. On the way there we stopped off for some fuel at the garage and picked up more sweets and breakfast bars to help provide some fuel.\n\n\"Got a kids party 'ave ya?\" said the man behind the counter as he looked at the pile of sugary treats laid out in front of him. The tray of Krispy Kreme doughnuts was probably a step too far, but what the hell?\n\nI had a vague idea where Harry Youle lived. I knew it was in a posh neighbourhood and I figured that once I scryed on him, if I felt that we were too far away then we could always move closer.\n\nI found a nice leafy cul-de-sac where I guessed their house was. There wash plenty of space between the drives of the large detached houses and my little mini took up next to no space. We parked up out of the way under a large oak tree.\n\nI ate as many doughnuts and sweets as I could stomach and then put the seat back so that I could be as comfortable as possible.\n\n\"You need to keep talking to me Fiona.\"\n\n\"I know, I know. And you'll tell me if you start to project yourself?\"\n\n\"Yes. Let's hope that we learn something and I don't just find him masturbating in his room.\"\n\nI lay back, relaxed and focused on the loathsome Youle.\n\nPulse.\n\nI was drawn a short distance down the leafy cul-de-sac and across to the next road, maybe two hundred yards away. The house was a large seventies style place with white UPVC cladding across the upstairs and red brick on the ground floor. The garden was large and mature with a gravel drive and two cars parked there. As I hovered closer to the house I wondered why I wasn't drawn inside the building like last time. Then I saw the Tool getting out of a smart looking Golf GTi. He slammed the door and stomped his way into the house.\n\nI followed along behind.\n\n\"Have you found him?\" said Fiona.\n\n\"Yup, he's just got home and he doesn't look too pleased.\"\n\nHe ignored an attempt to speak to him from a woman who I assume was his mother as he entered the house, slamming his keys on the hall table and stomping up the stairs. She shook her head, obviously all too used to the mannerisms of her son. Poor woman.\n\nHe slammed the door in my face as he went into his room and I floated through it into a large bedroom. It was painted black with various band posters on the walls and clothes strewn over the floor. There was a large built-in wardrobe and a desk with a PC on it near the window. The bed was huge and he threw himself onto it, obviously frustrated about something.\n\nI was so tempted to project myself into the room to try and find out what had annoyed him so much but I knew that I'd only get one shot at this so I just observed.\n\n\"Well?\"\n\n\"He's just on his bed, pissed off about something.\"\n\nHe didn't do much for a while, picking up a comic and then throwing it back down on the floor. Getting up and walking around the place before throwing himself back on the bed. It was a study in teenage angst.\n\nAfter a while he looked towards the door and his trademark sneer appeared as he shouted something fairly unpleasant at whoever had dared to interrupt him. Looking at his bedside alarm it was one o'clock. Maybe his mother had asked him about lunch..?\n\nHe got up, went to his desk and opened the top drawer on the right, lifted a couple of things up (books? papers?) and then shut the drawer and left the room. That was weird. Rather than follow him I decided to gamble.\n\n\"I'm going in, Fiona.\"\n\nPulsePulsePulse\n\nI felt my body breathing in and breathing out. I regulated it with my mind as I pushed myself into Harry Youle's room and pulled open the drawer that he'd opened. I clumsily tried to pull out the items inside but it was much harder than I thought it would be. I tried again and managed to lift the scattered papers that were inside. The only thing underneath them was an old exercise book. Disappointed I zoomed in on the papers but they were a random assortment of university rejection letters.\n\nI tried to pick up the exercise book and managed to get it out of the drawer on the third try. I was very conscious of time now. What if he'd just gone to the toilet? Why did that only occur to me now? Why hadn't I checked that he was going downstairs to lunch?\n\nI opened the book very carefully, slowly figuring out the fine motions that I needed to make this work. It was an old English exercise book with all sorts of doodles and margin sketches along with the actual work that we'd had to do back at GCSE in the fifth year. I flicked across the pages and got to the middle when I suddenly saw a series of familiar girls' names and then a scribbled paragraph next to each name. Intrigued, I scanned through them. They all related to the rumours about me!\n\nHoly shit! He'd actually written it down!\n\nThere were some elaborate sex fantasies intermingled with each of the stories that they'd fed the in-crowd with to frame me. I was reluctantly impressed at how each of the stories were slightly different, giving each new person a different bit of gossip to pass on but keeping the core stuff the same and reinforcing the lie.\n\nHe'd obviously got off on the rape idea and had written down in detail what he'd do to each and every one of the people that I was supposed to have raped. It was an unpleasant insight into the world of Harry Youle.\n\nI looked up from the book and remembered to check on my vitals. My breathing and everything was fine. I dizzily came back into my projection and wobbled briefly before I was able to focus again.\n\nI heard a loud, obnoxious voice coming from downstairs and I suddenly realised that he was coming back. I carefully closed the book and was about to try and put it back when I realised that I probably couldn't do it in time. Panicking, I looked around and saw that the window was open. I threw the book out of the window, praying that there wasn't a water feature outside and closed the drawer just as the door opened and Harry noisily banged his way into the room with a plate piled high with toasted sandwiches and crisps.\n\n\"Stupid fucking woman! I said cheddar not red leicester! Dumb fucking slag.\"\n\nHe sat down at his desk and started eating his lunch, sending crumbs and crisps everywhere.\n\nPart way through his lunch he leaned back and reached for the drawers in the desk. Much to my relief his hand went to the bottom drawer and pulled out a copy of Razzle. He flicked through the porn mag to a spread featuring a particularly large breasted woman and pulled his cock out of his shorts.\n\nI'd seen about enough at this point and cut the threads surrounding my projection. I was slightly dizzy as I became a disembodied viewer once more and quickly soared out of the window and down to the back garden. The exercise book was in a flower bed near a water butt at one end of the house. It wasn't particularly obvious but it wasn't well hidden either. Carefully marking the spot I cut the thread and was back in the Mini with Fiona looking at me anxiously.\n\n\"Four minutes thirty five seconds Jake! What were you thinking? Are you OK?\"\n\nI took a few deep breaths before answering.\n\n\"I think so. Are there any more of those doughnuts? I'm feeling a bit sick.\"\n\n\"Here.\"\n\nChocolatey goodness exploded in my mouth and I slowly started to feel a semblance of normality. I opened a bag of jelly babies and had probably eaten half of them before I was ready to try sitting up.\n\n\"Well?!\" Fiona had done so well to wait, but she was obviously bursting to know what had happened.\n\n\"I've found proof.\"\n\n\"You've what?\"\n\n\"The stupid fucker wrote it all down.\"\n\n\"You're kidding?!\"\n\n\"Nope. It's in an exercise book.\"\n\n\"But how do we get it?\"\n\n\"I threw it out of the window. It's in their back garden.\"\n\n\"Shitshitshit! What are we going to do? We can't just go in there and get it.\"\n\n\"Why not?\"\n\n\"Why not? Well because we'll be seen...won't we?\"\n\n\"I don't think so. Come on, we haven't got much time. He checked to make sure that it was there when he got back in the house. Who knows how often he checks on it?\"\n\n\"What are you going to do?\"\n\n\"Walk in and get it.\"\n\nShe looked like she was about to explode but instead she put on her seat belt as I belted myself in and we drove around to the Youle's road. Their house was on a corner plot with large gardens on either side. I parked two doors down and got out of the car.\n\n\"Keep the engine running and be ready to drive.\"\n\n\"Are you sure about this?\"\n\n\"I'm mental, remember?\"\n\nFiona laughed nervously at my lame joke and nodded, as she slipped into the driver's seat and buckled up.\n\nI walked up to the large hedge that bordered the two properties. Making sure that I was on the right side of the house, I ducked in behind it. The biggest issue was probably the neighbours in an area like this rather than the Youles themselves.\n\nThere was a large rhododendron in the middle of their lawn. I ran over to it and pulling the branches aside made my way into the cover that it provided. The house was no more than thirty feet away. I was near the corner.\n\nPulsePulse.\n\nRed and purple power extended from me as I reached for the book. I found it easily enough and then realised that it was heavily overlooked by windows from the kitchen where Mrs Youle was washing up and the Tool's room above it where, presumably, he was throwing some kleenex in a bin.\n\nPulse.\n\nGreen power was added to the mix. I used red power to pick up the book and then did everything I could to blur the book from sight using the green power as I pulled it towards me. I blended the colours of the grass and bushes that it passed. In hindsight it was a pretty poor effort. It looked like a bad version of the predator's camouflage going through the jungle but it was my first attempt.\n\nThe book slapped into my hands in mere seconds.\n\nI was about to leave the rhododendron when I saw a little old lady talking to a panicked looking Fiona in the car.\n\nPulse.\n\nI rushed back across the garden and mentally 'paused' the old lady. It's the only way that I can describe it.\n\n\"What did you tell her?\" I asked.\n\nFiona looked at the old lady who looked like a waxwork model.\n\n\"That you were here to see a friend.\"\n\n\"OK.\"\n\nI reinforced the story to the old lady that we had been checking up on our friend and that all was well. She should go and have a nap in front of Antiques Roadshow in her front room and definitely not write it down in her Neighbourhood Watch book.\n\nShe turned slowly and wandered back in a bit of a daze towards her house.\n\n\"I've got it. Let's go!\"\n\nFiona did an easy u-turn and we were away back down the road, the precious book safely in hand.\n\n= = = = = = = = = =\n\n\"What do you mean you've lost it? What have you lost, Harry?\"\n\n\"The book, my story log!\"\n\n\"What are you talking about?\"\n\n\"My log so that I knew what I'd said to who about Jake Fucking Conway.\"\n\n\"You wrote down what you told people?!?!\"\n\n\"I didn't want to get confused. You said that..\"\n\n\"Fuck what I said! What have you done with that book?\"\n\n\"It was in the drawer of my desk. I checked it earlier today and it was right there and now it's gone.\"\n\n\"How can it be gone if you've been in your room all afternoon?\"\n\n\"I don't know, I don't know!\"\n\nThere was silence at the other end of the line.\n\n\"Jenny?\"\n\n\"Find that fucking book Harry. If that thing turns up then I'm denying all knowledge. You're on your own if that happens do you hear me?\"\n\n\"Ye...\"\n\nThe line went dead and Harry suddenly needed to go to the toilet very badly.\n\n= = = = = = = = = =\n\nCelia Sawyer heard her daughter's mood from the other side of the house. She frowned and then quickly smoothed her expression, only too aware of what frowning does to the skin.\n\nHer daughter had been borderline insufferable for the last week or so and it looked like today would be no exception. This whole idea with the wretched poor boy seemed so simple. Feather and tar him and then simply move on with our own perfect lives. Was it too much to ask that he just curl up in a corner like a good little prole?\n\nShe continued arranging the flowers as she awaited the inevitable explosion from upstairs.\n\n\"Mother!\"\n\nShe sighed, thinking that maybe putting up with a bit of rough might have been easier.\n\n\"I'm not sure that the neighbours heard you darling.\"\n\n\"Harry's a complete twat.\"\n\n\"I know sweetheart.\"\n\n\"What do you mean, you know?\"\n\n\"I assume that he's been an interesting dalliance, darling. I'm not sure what you see in him but he's far from your equal. I'm glad that you've realised it.\"\n\n\"What?\"\n\n\"He did make rather a fuss when he left earlier on today. He didn't even stare at my tits, which is most unlike him. What happened?\"\n\nJennifer stared open mouthed at her mother.\n\n\"Not your most attractive look.\"\n\nCelia reached forward and closed her daughter's gaping mouth and carried on arranging the gerberas to her satisfaction.\n\n\"So what happened?\"\n\n\"He...he...said that I was frigid.\"\n\n\"And...?\"\n\n\"Well, you've seen him, he's not half the man that...\" and Jennifer clamped her mouth shut realising that she had already said far more than she'd meant to.\n\n\"That Jake is?\"\n\nJennifer nodded, embarrassed.\n\n\"I wouldn't let Harry near me. He gave me the creeps.\"\n\n\"Then why have you been seeing him these last few weeks?\"\n\n\"Because he called...about something and...well we had a mutual reason to spend time together.\"\n\n\"Meaning that he hates Jake as much as you do?\"\n\n\"What does that mean?\"\n\n\"For someone that spends this much time dancing around not saying someone's name, something pretty bad must have happened. I know he hurt you sweetheart. And I know what you and Harry cooked up.\"\n\nHer daughter gawped at her.\n\n\"I even got your father to help things along at the golf club. Spreading a few salacious rumours about a teenage party that got out of hand. Date rape drugs. Just enough to get the rumour mill going but nothing that could come back to us.\"\n\nShe crossed to Jennifer and took her hand in hers, looking her straight in the eye.\n\n\"Nobody hurts a Sawyer and gets away with it.\"\n\nCelia turned back to her flowers.\n\n\"So why don't you just jettison this Youle no-hoper and find yourself someone worthy of you?\"\n\n\"The idiot wrote it down.\"\n\n\"Wrote what down darling.\"\n\n\"The rumours that we spread about Jake Conway.\"\n\n\"Oh.\"\n\n\"Yes.\"\n\n\"I assume that you have it under control? We can't have this coming back to us darling.\"\n\n\"I know mummy, but...surely we can just deny it and leave Harry out to dry if it does come up?\"\n\nCelia rounded on Jennifer like a snake on a rat.\n\n\"Then how do you explain the golf club rumours? How do you stop someone from shopping your father to protect themselves? How do you disassociate Harry the idiot Youle from us when he's been here so often that even our next door neighbours thought that we had a new car? Please tell me that you weren't just hoping that this would go away?\"\n\nJennifer put her head in her hands.\n\n\"What are we going to do?\"\n\n\"Whatever it takes to protect the Sawyer name.\"\n\n= = = = = = = = = =\n\nWe drove away from the library with three sets of photocopies of the contents of the exercise book. We'd worn gloves as much as possible when touching it but I didn't dare wipe off any fingerprints for fear of wiping off Youle's own prints. I made a stop at WH Smith's for a brown A4 envelope and then drove to the police station.\n\nI was about to get out of the car and head inside when Fiona stopped me.\n\n\"Jake, have you thought this through?\"\n\n\"What do you mean? It's evidence, the police need it to clear my name.\"\n\n\"I know they do but what are you going to say when they ask you how you got hold of it?\"\n\n\"That...it was sent to me in the post anonymously.\"\n\n\"Then where's the envelope that it came in? They'd want that wouldn't they?\"\n\n\"I threw it away...?\" Even as I said it I realised how lame it sounded. \"Shit.\"\n\n\"Sweetheart, you've done amazingly to get hold of the book but don't you think we should show this to Mr Lathan and ask him how we can do this without incriminating ourselves?\"\n\nI sat back in the driver's seat, every part of me desperate to have this thing over with. Itching to do something now that I had salvation in my hand. A long moment passed as I considered what she'd said.\n\n\"You're right. You are so right. What would I do without you?\"\n\n\"Run into the occasional brick wall. Have less sex...\"\n\nI grinned at her as she took the sting out of the situation effortlessly.\n\n\"You're amazing.\"\n\nI leaned over and kissed her.\n\n\"And don't forget it!\" she said, smiling at me with mock indignation.\n\nWe drove home. Fiona wanted to go swimming so I dropped her at the pool and collected her an hour later. I spent the rest of the time giving my car some TLC.\n\nWhen she got back Fiona insisted that she would cook that evening. When I went back into the house I found a bombsite in the kitchen. She looked panicky as she saw me.\n\n\"How long have I got before your parents get home?\"\n\n\"I don't know. Maybe fifteen minutes, why?\"\n\n\"Oh shit, oh shit, oh shit, oh shit!\"\n\n\"What? What is it?\"\n\n\"I wanted to make fresh pasta but it hasn't worked! And look at the mess! I'm never going to be able to get this done in time!\"\n\n\"Why are you making fresh pasta? We've got dried stuff in the cupboard.\"\n\n\"I just wanted to do something nice for your parents.\"\n\n\"Well the sauce smells amazing. What's wrong with the pasta?\"\n\n\"It's too thick! It goes all doughy and horrible.\"\n\nI had a dig around in the cupboards and pulled out Dad's old pasta machine. I'd only ever seen him use it once and it had slowly migrated from the kitchen surface to the back of a cupboard as we all realised what a faff it was to make pasta.\n\n\"Try this.\"\n\nFifteen minutes later Fiona had beautiful strips of linguini ready to go into the boiling water and I had just about finished clearing up the colossal mess that she'd made.\n\nWe heard a key in the lock and saw my parents come through the door chatting to each other, both looking tired and drawn after difficult days at the office. They both perked up noticeably at the smell from the kitchen.\n\n\"Jake? Have you been cooking?\"\n\n\"Not me Dad. My domestic goddess has.\"\n\n\"Fiona? I had no idea. This smells sensational.\"\n\n\"It'll be ready in five minutes if that's alright,\" said Fiona.\n\n\"But won't the pasta...wait a minute, is that fresh pasta?\"\n\nFiona was so proud she was fit to burst. She just nodded.\n\n\"Well, I will be waiting in anticipation!\" Dad went off upstairs to change.\n\nFiona had outdone herself. The creamy chicken linguine was amazing and she'd even found some frozen garlic bread at the back of the freezer. We all happily discussed our day and complemented the chef on the amazing food.\n\n\"I know I've been a nuisance so I just wanted to help out.\"\n\nMum sighed.\n\n\"Fiona love, I don't know how many times we have to say it: You're welcome here as long as you like. You're a breath of fresh air and we love you to bits.\"\n\n\"I'm going to miss food like this when I move out next week,\" said Dad.\n\n\"You've got a date then?\"\n\n\"Yes indeed. Next Thursday, So Jake, if you're free I'd appreciate a bit of help moving if that's alright.\"\n\n\"Of course Dad, whatever you need.\"\n\nHe smiled. Mum looked pleased as well. For all that the last few weeks had been better between them, I realised that this still needed to happen. It didn't feel any better though.",
        "As the mood had dipped a bit, I reached for the letter from Cambridge.\n\n\"This arrived today.\"\n\n\"You wait until now to tell us? What did it say?\"\n\n\"I haven't opened it yet. I wanted you both to be here when I did.\"\n\n\"Open it Jake! You shouldn't have waited for us! Today must have felt endless.\"\n\nI grinned at their enthusiasm and slowly opened the envelope trying not to tear it.\n\n\"Oh come on!\"\n\n\"Alright, alright!\"\n\nI opened up the letter. It was shorter than I expected.\n\n\"Dear Mr Conway. Thank you for your application for the Hurst Scholarship. Congratulations on your achievements but after a negative reference from your school we are unable to take your application for a scholarship further. Good luck with your future studies. Best regards, Professor Julian Whitaker, Vice Chancellor, Admissions.\"\n\nMy voice trailed off as I finished the letter.\n\nThere was a stunned silence around the table.\n\nI got up and slowly walked up the stairs. Fiona jumped up and was going to join me when Mum grabbed her arm.\n\n\"Best leave him be. He's going to need a bit of time to get his head around this.\"\n\n\"But it's so unfair! Who would have given Jake a bad reference? He's been a model pupil.\"\n\n\"I don't know love, I don't know,\" she said sadly.\n\nIt was a very quiet group when I came back downstairs later that evening. Fiona was half out of her seat as I headed towards the telephone.\n\nThey watched quietly as I dialled.\n\n\"Mrs Thorne? It's Jake Conway here... Yes, sorry, Valerie...I'm sorry to call so late but I wanted some advice. Who gives references to the universities?...I know but I applied for the Hurst Scholarship at Cambridge and...no, no I didn't. And the letter says that there was a negative reference. Do you know where that might have come from?...\"\n\nI had to hold the phone away from my ear slightly as Valerie Thorne gave vent to her opinion on the matter.\n\n\"Thank you Mrs...Valerie, I'll look forward to hearing from you tomorrow. Yes, good night.\"\n\nI turned to face the expectant audience in front of me.\n\n\"She's not sure what happened but apparently the head teacher would normally deal with those things.\"\n\n\"But the head wouldn't do that to you Jake,\" cried my mother.\n\n\"Not the current one, but the old head Mr Potter might have done.\"\n\n\"But how could that happen? He retired.\"\n\n\"But only because it came out that teacher's were being intimidated by some pupils and he was doing nothing about it. He was forced out and if he hadn't retired he knew that Mrs Thorne would have leaked the real story to that reporter. He got off lightly and kept his pension.\"\n\n\"So you think he gave you a bad reference out of sheer spite?\"\n\nI nodded, glumly. Knowing what had happened didn't make the outcome any easier to stomach.\n\n\"I think I'm going to bed,\" I said.\n\n\"I'll come too,\" said Fiona, quickly getting to her feet.\n\nDad stood up and hugged me.\n\n\"I'm sorry, Jake. I know you were hoping that you might get that scholarship. I'm sorry that we can't do more for you financially...\"\n\n\"Please don't, Dad. You and Mum have been wonderful. This just wasn't meant to be that's all.\"\n\nI headed off to bed and ten minutes later, Fiona and I lay wrapped around each other. I was crushed. I had secretly hoped that the scholarship might have been achievable and made Cambridge a real possibility. I'd allowed myself to believe. But good things don't happen to people like me. I allowed myself to wallow in self-pity despite the empathy and closeness of the woman I loved lying beside me.\n\nShe didn't try to talk about it at all for which I was very grateful. She just held me, knowing how disappointed I must be.\n\nDespite the therapy of Fiona's long legs it was a long time before I managed to find sleep that night."
    ],
    "authorname": "golasgil",
    "tags": [
        "mf"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-pulse-pt-09"
}