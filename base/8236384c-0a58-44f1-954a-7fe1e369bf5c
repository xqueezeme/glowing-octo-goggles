{
    "title": "My Little Ventrue Pt. 07 Ch. 10",
    "pages": [
        "~~Eric~~\n\nThey took a trip to a club. Eric was kind of sick of the club scene, working at Bloodlust all the time; not that Bloodlust really counted as a club, more of a night lounge thing. Bloodlust had the music, the low light, and the people, just less of them. To go to a proper nightclub was not how he wanted to spend the night, but Matthew and Arturo assured him it was temporary.\n\nThey didn't need to convince the bouncer to let them in. Natasha wrapped them in her Kindred powers, and somehow, they just strolled in. It was almost enviable. Werewolves could go unseen in the shadows, perhaps to degrees that vampires couldn't, but vampires could blend into a crowd in ways the wolves never could. For werewolves, they were wolves deep down to the soul, but vampires were something else, something that still coexisted and thrived with humans, around humans, and on humans. According to Jessy, they held kinship with crows, rats, cockroaches, and other animals that thrived among humans. Werewolves did not.\n\nEric doubted he'd ever feel comfortable around a group of humans again. Ah well, he was happier being around vampires like Jessy, and even the other werewolves.\n\nInside the club Fallen Angels \u2014 good god that name \u2014 Eric found the same scene he found at Bloodlust, just dialed up to eleven, as he suspected. The dance floor was crowded, with bodies pressed together, dancing and sweating and rubbing against each other. The smell of alcohol was blatant, and other drugs the two hundred people were enjoying.\n\n\"Nothing like the smell of people having a good time, to get me hungry!\" Jessy shouted. The swirling lights of different colors did a strange job of illuminating anything, psychedelic like the fucking eighties, but Jessy made sure to hold onto Eric's hand as she followed after Matthew's back. \"Fuck, I haven't been here in years! Look at this!\" She gestured to several of the people they were pushing past. Two girls, not women, girls, maybe nineteen, had pulled their tube tops up and were rubbing their breasts together. They were surrounded by other bodies, men and women, grinding and bouncing, and the two girls were obviously enjoying being the center of attention.\n\n\"Places like this make me feel old as fuck,\" he shouted back. Christ, the music was loud.\n\n\"Ha, with age comes wisdom! Half these dudes probably don't know what a fucking g-spot is! Let alone where it is.\" Shrugging at him, she continued to pull on him through the crowd. He also noticed she was not pulling him in a straight line. With every weaving sweep she did through the crowd toward the back, she laughed louder, and looked over her shoulder to smile at him. She really did enjoy these clusters of flesh and sex and drugs, in a particular way only a Kindred could, a predator mingling with prey. \n\nThey lost the large back they were following. Or more likely, Jessy purposefully lost it. Natasha and her boyfriends were somewhere ahead, and Eric was pretty sure Natasha pushed through the crowd as quickly as possible. She wasn't wrapping them up in her Discipline anymore, so the crowd could see Eric and Jessy, but at this point it didn't matter. Everyone was loud and dancing wildly; no bouncer could manage this, or spot some people wearing casual suits among all the skimpy skirts, tank tops, and latex.\n\n\"Hey Eric! Come on, get in here!\" Jessy came up beside a woman who was having a grand time, and took her by the waist. The stranger, a black woman with curly black hair a few inches long, was short and thin, very thin, a little too thin. Not anorexic, but definitely a girl of the modern era who thought runway models were a good look, and not the unhealthy sticks Eric knew they were. Excessive skinniness aside, she was cute, young, and must have set off Jessy's vampire instincts, because Jessy slid around behind the bouncing, grinding girl, and set her hands on the girl's chest. The girl was wearing some tiny top, white and partly see-through, showing her naked, small breasts underneath.\n\nAnd Jessy sank her teeth into her, without a moment's hesitation or foreplay. The stranger didn't even resist. Either she'd done this before, had seen it done to other people, or most likely, was too drunk or high to think a stranger kissing their neck was anything other than awesome. \n\nJessy looked at Eric as she drank, a twinkle in her eye. Insatiable, this woman, for blood and sex, and she let her hands roam over the young girl's body as she grinned at him.\n\n\"Jessy! Come on, we're supposed to be following Matt and Art.\" He came in close, very close, leaning in and putting his lips up to Jessy's ear.\n\nGroaning, half annoyed and half delighted, Jessy lifted her head and wiped a drop of blood from her mouth. \"Why the rush? Come on, get in here. Hey, girl! This is my boyfriend.\" She slipped an arm around the girl's shoulders, and pointed her at Eric. \"Mind if we take you off to the side for a quickie?\"\n\n\"Not... at... all.\" The girl, high or drunk, was now high on the Kiss. She swayed half with the beat, half with the exhaustion the Kiss brought on, along with its pleasure. But, high as she was, she still managed to step a few inches closer to Eric, and press hard nipples against his suit jacket. \"Or, right here? We can dance, Mister Handsome, fuck and dance to the beat.\"\n\nEric blinked down at the skinny girl. Ok, yeah, she was attractive, and Jessy knew how to spark his hunger like she had a fucking switch for it; several orgasms already tonight, and he was ready to go again, because of her. Well, not only her, but also because of his Uratha endurance demanding he satisfy his hungers, and her having a switch to his libido, was a dangerous combination. And surrounded by all this flesh, sweat, moving bodies, and pulsating music, he was two steps away from listening to Jessy, grabbing this girl, and fucking her here and now. He could imagine it, taste the thought, hear and smell it, the feeling of this tiny girl's slit spread taught around his cock, as Jessy, his mate, played with her body from behind, fondling her small breasts and Kissing her\u2014\n\nEric shook his head to dislodge the thought, and then again to deny the stranger's approach. Breathe, Eric, like the moon told you. Breathe.\n\n\"Tempted, very tempted, but my girlfriend and I have an engagement.\"\n\nThe stranger sighed, as did Jessy. The vampire let the girl go, and enjoying her new high and undoubtedly tingling, aroused skin, the girl drifted back into the crowd. No doubt someone was going to lift up her tiny skirt, and fuck her until she was melting, with how the Kiss prepared her. That could have been Eric fucking her, too. But too young, and they really did have an engagement to get to.\n\nAnd, deep down beneath the surface thoughts, he knew he didn't want to fuck her. Much as Jessy was pushing to bathe him in more pussy than he knew what to do with, he found himself pulling back from the idea. He liked the one-on-one approach. Too old fashioned for Dolareido, maybe.\n\n\"You're no fun,\" Jessy said.\n\n\"You'd really get a random girl involved?\"\n\n\"What? Not involved.\" She kept close to him, lips to his ear so she didn't have to scream too loud. \"But Kindred do what Kindred do, you know? We get in the crowds, we mingle, we drink, and we fuck. I just thought you'd want to be part of that, share in the fun.\"\n\nEric smiled. There was something touching in that, in Jessy trying to find ways to make him happy. It was almost like an alien race, trying to make another alien race happy, and hosting a cultural event the former loved, while the latter could not appreciate it at all. Course, he loved sex, so he was sure he'd break eventually, if she kept trying. A random stranger, a young girl at that, was too big a step though. But he could tell Jessy was aching for some of her old habits to be satisfied, and he had to accept that, while Jessy seemed committed to their relationship, she also used to indulge in orgies as a regular thing. Her sleeping with him and only him was almost abstinence for her, werewolf transformations excluded.\n\n\"And if I got her pregnant?\"\n\n\"I\u2014fuck, I forgot.\" Laughing, she slapped herself in the forehead. \"Sorry, not really a concern for vamps.\"\n\n\"I've noticed.\"\n\n\"But, hey, if I get a sweet girl as a ghoul, you wouldn't fuck her with me? I mean, I wouldn't fuck her without you of course. Just, I hear about the shit Tash is up to, and Jack, and even... Julias, and I get all envious, you know?\"\n\nHe rolled his eyes, put a hand on her shoulder, and started pushing her through the crowd in the direction he saw Matt and Art go earlier. \"I'll think about it.\"\n\nShe threw up her hands as they moved, laughing and enjoying her exaggerated motion, like a sitcom. \"I'll make sure she's hot. We could find one who's tiny, like that girl. Or someone busty. Or both. You were into Fiona right? Short and stacked? She's half boob.\"\n\nHe put Jessy in a headlock, and started dragging her through the crowd. \"You have no focus.\"\n\n\"Oh you mother fucker, I am going to kill you in a second here.\" She squirmed and wriggled, but with so many people around, bodies bumping into each other, and him never stopping, she couldn't get her footing to break free.\n\nEventually they were on the other side of the dance floor. Matt and Art had followed along the wall, while Jessy had taken the scenic route, straight onto the middle of the crowd and borderline orgy. Once they got to the other side, Matt and Art were waiting for them, Natasha too, and all of them had an eyebrow raised at the sight of Jessy in a headlock.\n\n\"I had to,\" he said, releasing his girlfriend at last. \"She was being a menace.\"\n\nJessy came out of the headlock slapping, fingers hitting his shoulders and chest several times before she stepped to the wall and adjusted her suit. \"I was just grabbing a bite to eat.\"\n\n\"Again.\"\n\n\"Hey, I got a big appetite.\"\n\n\"For a lot of things.\"\n\n\"You don't like that?\" She gave him doe eyes, and pressed her biceps close together along her chest, hands down at her thighs. A very dainty, sweet, innocent posture, that didn't fit her in the slightest.\n\n\"Course I like that. But\u2014\"\n\n\"I think,\" Art said, raising a hand, \"maybe you can talk about it later?\"\n\nEric and Jessy shared a glance. It was a weird conversation, and it never really got to argument stage; hard to get to that stage when it was your girlfriend pushing to have more boobs in the bed. So they shrugged and nodded.\n\nOnce again, Natasha wrapped them up in her Discipline, and the group of them continued on their journey. Eric had no idea where that was, though, and Matt and Art were reluctant to say; reluctant, or they enjoyed being teases. And once Art started climbing a pillar along the back wall, Eric figured they just enjoyed being teases, cause they were smiling like jackasses.\n\n\"Up there?\" Natasha said.\n\nMatthew nodded. \"Yeah, up in the catwalk.\"\n\nCatwalk? Eric looked up and scanned, raising a hand over his eyes to try and block some of the pulsing, colored lights. There was a catwalk, not unlike the ones you'd find in a theater. The pillar Arturo started climbing was a ladder, four ladders together in a square, and Eric had thought it was shaped like that for aesthetic. Apparently not, with similar structures hanging from the ceiling with lights attached to them.\n\n\"Anyone afraid of heights?\" Matthew said, chuckling as he started climbing after Arturo.\n\nSo this was why they needed to come inside the building. Wherever they were going, it was up. Thankfully, the pillars were sturdy, so sturdy that even the combined weight of Arturo and Matthew didn't make the one they were climbing tremble in the slightest. Once Natasha and Jessy were climbing, Eric waited a bit, and followed after. Again, the pillars held strong, not vibrating at all. A good thing Natasha was keeping him hidden with her Discipline though, because holy fuck it would have looked weird as hell to anyone who noticed them, five people climbing up from a dance floor.\n\nUp, and up, and up they went. The ceiling was easily forty feet up, and Eric sucked in his breath when he glanced down. Would he survive that if he fell? With his new body, he probably would, and he was sure he'd recover in days, instead of years. Didn't mean he wanted to experience that though, or the nausea that came with looking down from such a height.\n\nOnce they were at the top of the pillar, it was a hassle to climb up onto it. No railings, and no solid floor, just more ladder steps, except beneath them. One slip and they'd be falling. Ok, so not a catwalk then, but some sort of contraption meant to hang heavy lights and heavier speakers from. No one was supposed to be on climbing on it, and definitely not walking on it, without a harness.\n\n\"Over there,\" Matthew said, no longer needing to yell quite as loud since the speakers were a fair ways below them, hanging from wire, and pointed downward at the dance floor. His finger pointed at a section where the not-catwalk crossed over the center of swarming masses.\n\nEveryone got moving. It hit Eric, like a ton of bricks, that he was a child compared to these four people. Matthew, Arturo, Natasha, and Jessy all walked across the thin beams without issue, without looking down, without losing their balance, without a care for the possibility they'd fall. The bars weren't far apart, one every foot, and as long as he didn't try and balance on a single one, walking along them was easy enough, but his brain kept telling him 'look down you might fall what the fuck are you doing'. It was a mental game, one he hadn't developed, while the other four had.\n\nThey'd been doing death-defying acts for decades, the vampires especially, and Eric had only been in this madness for about a year. Something like this, like walking really high up over what could easily be a major injury-inducing fall, was not something his mind was prepared for. In the past, he'd have backed off, climbed back down, said nope, fuck that, hurt my knee once already. But his knee was fine now, and he had the soul of a wolf. He could push on. Hell, part of him wanted to, just to not let Jessy see he was, evidently, afraid of heights.\n\nOnce the five of them were standing precariously over the center of the stage, and holding onto some of the enormous metal pipes sticking up from the structure, Arturo gestured around them.\n\n\"This place has collected a lot of essence over the decades,\" Art said, \"more than is natural. I don't know why, or exactly where it's collecting. I think it's the lights.\"\n\nEric looked down at the enormous lights at their feet. \"Lights collect essence?\"\n\n\"We think something triggered it,\" Matt said. \"People come here for the light show, and we think it escalated from there over the decades. The essence accumulating here is, as typical of Dolareido, a form of pleasure. Any essence will do. It accumulates, creates a locus, and here we can cross the Gauntlet.\"\n\n\"How?\" the two vampires said.\n\nArt shrugged. \"Same way you vampires do anything you do. It's a part of you, right? Same as moving a limb.\"\n\n\"N-Not exactly the same,\" Natasha said. \"Using a D-Discipline is like... we have to reach for our blood to fuel it.\"\n\n\"Well, you know what I mean. It may be a new muscle, but it's still a part of you, something you feel. Werewolves have a spiritual half, and to cross the Gauntlet, you have to tap into that, and use it, tell it to cross over. Explaining it is hard, because it's like trying to explain how to bend your finger. You just do it, you know?\"\n\n\"Oh, oh! Mind muscle c-connection.\" Natasha almost jumped, obviously excited about getting to include some science in the conversation.\n\n\"Sure,\" Art said, shrugging again. \"You can tap into your blood as a reflex, right? It's not something you conjure, or use a tool to access, it's a part of you. Eric here doesn't know shit about those muscles, and learning to use them can be disorienting.\"\n\n\"Avery wants to teach you,\" Matt said, \"before you find yourself totally confused. You can extend your senses into the Hisil you know, and look at what's going on there, instead of here. Imagine if you did that without realizing. How would you react?\"\n\n\"I'd probably be pretty fucking confused.\"\n\n\"Exactly.\"\n\n\"So,\" Art said, \"if you're willing to listen to us at least, this should be educational. You're going to cross the Gauntlet first, breach it, and we'll follow in your wake.\"\n\n\"I'm going first?\"\n\n\"Yeap,\" the two men said.\n\n\"And I should just be able to... do this, like flexing a muscle?\"\n\nArt nodded. \"Kind of, yeah. A better way to think of it, is that you're in bed right now, and to climb out of bed, you need to be at a locus like here. Think of the physical world as if your bed's blankets are too tight, and here at a locus, your blankets are loose enough that now you can pull them off and get up.\"\n\nThat, was a strange way of putting it, half because of the ridiculous comparison, but also because it felt true. He did feel the aura of the essence, the strange elevation that came with being in its presence. Course, he had no fucking idea what that meant or how to use it.\n\n\"Ok, so, if I go first, you'll be right behind me?\"\n\n\"Yeap,\" Matt said, \"like dolphins following a boat.\"\n\nEric looked down, and \u2014 mistake, seeing the massive drop below \u2014 got ready to try what Art described. The physical world was a blanket, holding him down in his bed. Here, surrounded by this invisible energy only the Uratha could sense, the tethers holding him down were loose. He could slip free of them here. Somewhere deep in the gray matter of his brain, he knew he could do that, could cross over to a place where his bonds were gone.\n\nSo, he did. In the same way he knew he could transform into a wolf or a giant beast of destruction, in the same way he knew how to breathe or how to flex a muscle, he knew he could breach the Gauntlet here. He took a deep breath, and another, reached out, and pulled off the blanket.\n\nNoise bled away. The sensation of flesh faded. Gravity and weight, clothes and skin, it all became background noise, as white and gold filled his eyes. He looked around, and watched as the club disappeared from sight. His girlfriend was behind him, and a little ways behind her, was Matt, Art, and Natasha, but it was hard to see them. Hearing them was difficult. Smelling them was impossible. \n\nHe moved forward. He knew to do that. They were crossing a wall that separated the physical from the spiritual, that separated his old life and his new, and instinct told him to push forward. Don't stop in the Gauntlet, you won't like what's hiding in there, Eric.\n\nDoing this on his own sent a surge of joy through him, as if finding a freedom he didn't realize existed before. What were those old instructions? Second star to the right, and straight on till morning.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nThe three of them stared at the man, and Jack knew his jaw had dropped.\n\n\"You're... serious.\"\n\n\"I am.\" The tall man rotated his shoulder a few times as if it were injured, but Jack could see he was using it as an feint so he could look over his shoulder and around, checking for spying eyes. \"Angela is going to get me and my friends killed. Jeremiah and his crusade needs to stop. You vamps don't do half the shit vamps do in other cities, so we have no reason to keep this up. I... I'm here to bring this shit to an end.\"\n\n\"Should have thought of that,\" Jack said, leaning in closer to the man, \"before you killed my sire. Yeah, I recognize you, from the hospital.\"\n\nHarcourt winced and looked away. His fingers tapped on the table with the music, a poor attempt to mask how nervous the man was.\n\n\"Look, I'm here, aren't I? I know what that means. I'm pretty much putting my life in your hands here, so you can put a stop to Jeremiah and Angela.\"\n\n\"Now you want to stop them?\" Jack said. \"Why not before?\"",
        "\"I didn't realize before, how fucked up a person Angela was! We didn't know about those two women she stabbed, until it was mentioned at the hospital, when that shit went down, you know, where you killed a bunch of my friends? I looked into what you said about Angela, about the woman in the hospital and her daughter. And yeah, it lines up.\"\n\n\"And...\"\n\n\"And it's more than just that. We've all seen how unstable she is, and Jeremiah doesn't seem interested in calming her down or helping her out. Hell, he pushes her to get more psychotic about shit.\"\n\nJack looked to his friends. Damien was in analyze mode, as per any Mekhet. Fiona, on the other hand, looked like she was trapped between fear and excitement, her eyes locked on Harcourt. Damien had mentioned she seemed to be a bit of a fear and excitement junkie; this situation would feed right into that.\n\n\"If you're lying,\" Jack said, \"you know what I'll do to you.\"\n\n\"I do. I'm here because I'm serious about wanting to take Angela down. Jeremiah too. His crusade against Azamel is... fuck me, I feel like I'm working for a literal crusader, complete with burning people at the stake.\" Harcourt took a deep breath, clapped his hands together, and turned in his seat to face Jack more head on. \"But you'll want proof. I know you're a Ventrue, so, make me tell you the truth.\"\n\nJack snapped his hand out, and grabbed the man by the neck. Even without the curse, Jack was still a vampire, over two years old, and had enough strength in his grip to kill this man. But with the curse, he could flay this man into strips with a fingernail. Harcourt's hands took him by the wrist, but as the man struggled, Jack let just a little of the curse flow out of him, flow through him, and into his fingers. The hunter froze as he felt the power of Jack's vise grip, and how his struggles did nothing to dislodge it.\n\n\"You saw what I did to your hunter friend with my bare hands?\"\n\nThe man shook his head. He must have missed it, then, in the chaos of crows.\n\n\"I popped him like a grape, Harcourt. I squashed him until he split down the middle, with my hands. You fuckers awoke something inside me. That's how I summoned my army, and it's how I'll do it again if I find out you're lying. I'll feed you to the crows, alive, and I'll make sure they start with the fingers first, then toes, then your face, then your guts. It'll take days to die. Understand?\" The man nodded desperately. Either he was overwhelmed with the immediate need to avoid having his throat crushed, knowing full well Jack would crush it a minute later once he'd discovered the truth, or he was telling the truth.\n\nBut Jack wasn't about to risk accepting a man's word. The hunter expected him to use Dominate, to dig up the truth, and that's what he was going to do. Jack leaned in closer to the man, pulled him toward him, and met his eyes.\n\nThe hunter's tattoos, or maybe it was the necklace, or the strange bracelet made of old string, but something the hunter had on created a barrier for Jack's mind. It reminded Jack of that time he was captured in handcuffs that had a magical property. He'd broken through them then, the magical, invisible barrier, and breaking through whatever protection this hunter had was going to be easier, now that Jack had the full might of the curse to back him. The issue now, was not accidentally destroying the hunter's mind in the process of getting through the barrier.\n\n\"Look... into my eyes...\" Jack stared hard into the man, reached out with his vitae, and tried to find the balance. Was it like this for other Ventrue? It couldn't have been. They didn't have some extra force pushing and pulling inside them. He supposed most vampires had to learn to use their abilities like driving a car. Jack had to learn to ride a horse, or a better comparison: learn to ride a dragon. It wasn't just an extension of him, like a vehicle was, or any tool. It had a mind of its own, and unlike most Kindred's Beasts, this one had its own awareness that it was willing to throw at him.\n\nIf he fucked up this strange balance, he'd break this fool's mind, and then he'd be useless. Their one opportunity to get the hunters, to find a way to catch them, and if Jack screwed up, they could be set back months, years, or fucking decades.\n\nJack sighed relief as he felt the vitae connect mind to mind, an invisible tether that reached through the air. He could feel the man's mind now, something in the distance that he could touch, mold, and break.\n\n\"Are you being honest, about why you're here?\" The man again nodded desperately. Jack's grip had loosened enough to let the man breathe, but only just. \"You've told us no lies?\" More nods. \"And you aren't planning to betray us?\" More nods.\n\nSatisfied, Jack released the man's throat, and his grip on the man's mind. The connection snapped like a giant elastic band, and Jack had to take a second to not recoil from the power of it. His natural talent for Dominate paled in comparison to the power the curse brought to the table.\n\nAs his mind came back to him, Jack looked to Fiona and Damien. His friend was looking at him with obvious worry, but Fiona looked almost inspired by Jack's power, excited, and awestruck. She could see things Damien couldn't, things Jack couldn't see either. Maybe she could see what Jack felt, black tendrils reaching out from his core and into the man's mind.\n\nThe hunter, gasping for breath, managed to not give into his obvious fear and run away. This man had the scars of someone who'd dealt with fear the hard way, face on, and it hadn't broken him so far. He was a reliable man for his fellow hunters, then, or at least he had more courage than fear.\n\n\"Can I speak now?\" he said. Jack nodded, eyes locked onto the hunter's face. \"Right. So, you know that Jeremiah and Angela came here to kill Azamel, right?\" Damien and Fiona slowly nodded this time. Jack kept his gaze on the hunter, eyes stabbing the man as he waited without patience. \"I don't know where he met this Elen witch, and I don't know how she got that fucking monster S\u00e1ndor under her spell, but I guess you know how Elen has been moving us around the city now, where you can't find us.\"\n\n\"A flesh chamber,\" Jack said, a small snarl escaping him. \"Fucking sick.\"\n\n\"You're telling me.\" The man visibly shivered, with an exaggerated motion. He had a loud personality, this man, and if it wasn't for the dire circumstances, he'd probably be joking, laughing, and having a drink. \"You have to understand, none of us wanted this. Jeremiah picked us up from a bunch of different cities, told us stories about this monster Azamel, showed us evidence, and recruited us. A few years later, we're neck deep in this shit, and now he's got this witch hag helping us, giving us tattoos, healing our wounds like a regular Frankenstein, while we get butchered trying to find a way to get access to this monster's lair.\n\n\"But like I said, you have to understand. We didn't want this, me and my friends. Hunters avoid Dolareido because you seem to be pretty good about keeping humans alive and happy. Don't get me wrong, a bunch of us would love to smoke you out and burn you down, but fuck me, you are so low on the list of things to give a shit about, no one comes here. We're drowning now, clinging to each other trying to float in this river Jeremiah's thrown us into.\"\n\n\"You're... asking me to spare you hunters,\" Jack said.\n\n\"Yeah.\"\n\n\"You have no leverage. I can force from you every detail you have to offer.\"\n\n\"Well, that's the kicker. If I fight, I mean really fight, I figure I can last an hour or two before you break me, right? Got these tattoos for a reason. Thing is, this tip I'm about to give you is only good for the night. After that, I'm borderline useless to you. You might be able to use me to bait some hunters to come out and meet me for a meeting or something, but you won't be able to catch the boss that way.\"\n\nHarcourt was wrong. He didn't know about the curse, not truly, and how easy it'd be for Jack to smash through his supernatural defenses again, go deeper, and extract the information forcefully. Then again, the same problem presented itself, and Jack might destroy the man's mind in the process, rendering the hunter useless to him. If Harcourt fought Jack's Dominate this time, and Jack had to push harder to break past it and his supernatural defenses, it was a very real possibility.\n\n\"Perhaps,\" Jack said. \"So, what exactly are you proposing?\"\n\n\"I tell you how to get Angela, Jeremiah, and the witch, tonight, if you promise to let everyone else go.\"\n\nFrowning, Jack looked to Fiona and Damien. The Begotten put up her hands, refusing to comment, but Damien leaned in over the table.\n\n\"The hunter is here on good faith, if your Dominate was successful. And if this tip is only good for the night, well... it's true, isn't it, that those three are our only true targets?\"\n\nFuck, Damien was right. And Jack didn't want to take a gamble on getting the information with Dominate, especially if the information was only good for the night.\n\n\"I could have over a hundred vampires marching an assault on Jeremiah if I had time to prepare, Mister Harcourt,\" Jack said, glaring at the terrified man beside him. \"And... you're putting me in a position where I can't use them.\"\n\n\"Exactly. I'm trying to save as many lives as I can.\"\n\n\"Sounds to me like you're trying to save your own life, while getting me and my kin to take Jeremiah off the map.\"\n\nThe hunter shook his head vehemently. \"I got to sneak out here because we hunters don't spend time watching each other. If I wanted to, I could have run, just left the city. But I'm trying to save my friends.\"\n\nSighing, Jack leaned back in his seat, and rubbed his skull with his fingertips. Think, think. How to handle this. He could Dominate the man completely, control him like a puppet, and maybe\u2014no, the same problem came up. If he fucked up, if the curse decided to go too far, too hard, this man's value would be lost. Jack hadn't spent nearly enough time learning to use the curse to risk it.\n\n\"Alright,\" Jack said. \"You've put me in a difficult position. Tell us what you know, and me and my friends will take down Jeremiah, Angela, and Elen.\"\n\n\"How many vamps?\"\n\nJack ran the numbers fast. \"About ten friends, give or take.\" And not all vamps, but he didn't need to know that.\n\nHarcourt sighed, looked down, and let several minutes go by in silence. Jack almost started yelling, but stopped himself. If the man was risking the lives of his friends on this, the least Jack could do was give him a second to think.\n\n\"Promise you'll do what you can to spare their lives.\"\n\nIt took everything Jack had, to not start screaming, break the man's wrist, several ribs, and rip into his mind. But that was redirected rage. As much as Angela didn't pull the trigger, she made the order, she killed Julias. The hunter who did pull the trigger was just a tool, and in the first place, this guy wasn't that hunter anyway.\n\nGod, it was hard to make that distinction. The anger boiling inside him, being fed by the curse like gasoline on fire, was blurring the faces of his enemies. Kill them all. Kill them all.\n\nNo, he wouldn't kill them all. He refused. He wouldn't give into this curse.\n\n\"My promise is worth something to you?\" Jack said.\n\n\"Better than nothing. Vamps in Dolareido seem to conduct themselves halfway decently, and after what I saw in the hospital, I'll take your word over Angela's.\"\n\nJack looked to his friends again. They shrugged. This was the perfect opportunity, an amazing opportunity, if the hunter was telling the truth. And he was. Jack would have been a fool to not take advantage, but there was no way, no way in Hell, that this was going to go down without a problem. \n\n\"I'm killing Angela and Jeremiah,\" Jack said. \"If your friends don't get out of my way, I'll kill them, too.\"\n\n\"And if they do move out of the way?\"\n\n\"Then yes, I'll spare them, and I'll make sure anyone I bring with me knows to do the same. Promise.\" And he meant it. As much as the curse wanted to bathe the city in the blood of all the hunters, it was Angela and Jeremiah that Jack wanted. Hopefully he could steer the curse in that direction, when it came to it.\n\n\"Good. Great. We have a deal then.\" Harcourt looked left and right, groaned, and tapped his fingers on the table again and again. \"Fuck, wish I had a drink. But can't get drunk. Need to stay frosty.\"\n\n\"Frosty?\" Jack rolled his eyes. \"Do you hunters seriously talk like that?\"\n\n\"They don't. I do.\" Shrugging again, Harcourt looked around yet again, utterly convinced someone was spying on him. Maybe they were. Jack felt nothing though, and neither did his friends. \"So Elen's portals, the active one moves around a lot, right? I know where it is tonight. Tomorrow it'll be somewhere else.\"\n\nJack clenched his hands until he felt fingers threaten to pierce skin. \"Where is it?\"\n\n\"I don't suppose you'll just, let me take you there, as insurance?\"\n\n\"I'm already taking a huge risk by listening to this advice at all, Harcourt. Tell me where the fuck the portal is, and then I can decide on a course of action.\"\n\n\"Decide? This is a one-time thing! I don't know if I'll be able to just, walk back in after this. Angela and Jeremiah have... ways, of knowing things. Elen and her fucking sacrifices know things. She has ways of knowing if hunters have been affected by... monsters. I can't risk going back, now. I\u2014\"\n\nJack held up a hand, and again stared into the man and his fidgeting eyes. \"I could make you go back, but I won't. I suspect you're right about Elen, and ultimately, that you're correct about a lot of things. This has to happen, tonight, but I'll only make that call if you tell me where this portal is.\"\n\nGroaning all the more, rather loudly at that, Harcourt slumped back in his seat. \"For tonight, the portal is active under the Dampheer Bridge.\"\n\nDampheer Bridge was a small bridge over an even smaller gap in the earth, one of the hundreds of roads that connected North and South Side. There was nothing there, just road, some brush, a few trees, and rocks. It was on the outskirts, before the Mojave-like desert that surrounded the city. It was such a boring place, that Jack had to laugh as he thought about hunters sneaking out of a witch's portal underneath the tiny bridge. \n\nJack looked down, and planned. They had six hours before sunlight. No way in hell would Maria and Michael, or Antoinette for that matter, let him launch an attack on the hunters in this circumstance, on such a lead. If he went to the Invictus, they'd stop him. If he went to the Prince, she'd stop him. And he couldn't blame them. This had reckless and dangerous written all over it.\n\n\"But,\" Harcourt said, throwing his hands up before slumping in his seat again, \"the kicker is, I don't know how to get the portal open. Elen always does it from the inside. I wouldn't be surprised if we had to sacrifice someone, and that... yeah, I'd prefer to not do that.\"\n\n\"You came here,\" Jack said, \"knowing full well that the portal you're telling us about, is closed, and you don't know how to open it?\"\n\n\"I'm sure I could figure it out! I just... don't want to have to sacrifice someone to do it.\" He shuddered visibly, and Jack swore he could see the man reach for a drink that wasn't there. A lifelong habit, then. \"In my mental plan, Elen opens the portal while you guys are hiding. Maybe you do a stakeout until Elen opens it for someone to come out. And then you do what needs to be done.\"\n\n\"And if she doesn't open the portal?\"\n\n\"Then... you let me go?\"\n\nGood god, this man, was an idiot. Jack supposed that you had to be at least a bit stupid to become a hunter, but this man was a colossal fool; he had a strange sense of honor to go with it, though.\n\n\"Lucky for you, we have options. Time to assemble the team.\" Jack rubbed his hands together, and smiled as he felt the hunger growing inside him. Not a hunger for blood, since he'd already eaten, but a hunger for violence. He wasn't sure if it was the curse craving violence, or him, craving revenge, but it was a feeling he was glad to have.\n\nHe pulled out his phone, and called the most important person to bring on this mission.\n\n\"Yeah?\"\n\n\"Beatrice, it's Jack. Meet me near the Dampheer Bridge in an hour. Say... on the roof of Robina's.\"\n\n\"Shit, really? You found them?\"\n\n\"We just might have, but we have a time limit. We get this done tonight, or our lead goes cold. Are you ready with the ritual?\"\n\n\"I am. I... am. I'll be there.\"\n\n\"Anyone else coming?\"\n\n\"Jacob, as usual, is nowhere to be found, but the rest of us are here.\"\n\n\"Excellent. Round em up. We're going in swinging.\"\n\n\"Jennifer too?\"\n\nRight, Jennifer. A talented Ventrue and ten years embraced, but ten years old wasn't exactly old enough to be marching headlong into a bunch of hunters. She got lucky last time, very lucky.\n\n\"Yeah, Jennifer too. We'll need some people on the outside, where it's safer.\" He couldn't avoid putting some weight in those words. He knew what Beatrice was thinking, about the idea of risking Jennifer. She'd lost enough.\n\n\"Yeah, ok, I can agree with that. I'll be there.\"\n\nJack hung up, and started dialing another number, before Damien reached out and pushed down on the phone.\n\n\"Jack, are you sure you want to do this?\"\n\nPutting his phone down, Jack looked between the Begotten and his friend. Did he want to do this? Of course not. He was going to kill people tonight, and he was going to let the curse out, let it do its thing, let it run rampant and slaughter. Kindred might die, too.\n\nBut revenge could happen. Revenge was going to happen. Angela, Jeremiah, and even Elen, he'd have them all. Things could go back to normal, or at least more normal. And he could save lives if he pulled this off, prevent more paranormals from being killed. All they had to do was get over this hill. And the window was closing rapidly.\n\n\"We don't have time to think about this, Damien, at least not for long. Unless you see a better opportunity coming in the near future, we need to do this and do it now. You in?\"\n\n\"Of course.\"\n\nTension that'd been building since he realized he needed to act tonight, melted away, as he met Damien's gaze. His friend was coming with him. He hadn't been sure he would.\n\nFor a moment, Jack had to force down a sob. It came out of nowhere, a harsh reminder that his best friend had died, and Damien was now his best friend. And damn it, he was a good friend.\n\n\"Thanks.\"\n\n\"Me too me too!\" Fiona bounced in her seat, several times. Instantly, every man in the booth had to lift their eyes. Wow, what a dress. \"Uh, I mean... I need to talk to Azamel first.\"\n\n\"That's why I told Triss we need an hour. We need to talk to Azamel, in person. But first, more troops.\" Jack lifted his phone, and dialed Jessy's number. No answer. He dialed Natasha's number. No answer. What the fuck? \"Ok, so, no Natasha or Jessy.\" He wasn't sure he could convince Natasha to come, not with knowing the Prince would have both their hides for this absurd plan. But Jessy, he was sure would come to bat for him.\n\n\"I wouldn't be surprised if they were doing something with the Uratha,\" Damien said. Yeah, that made more sense than Jack's worst nightmare coming true, that two of his friends were dead and he didn't even know about it.\n\nBut if the Uratha were out on a hunt without their phones, or in the Hisil, that made this final call a desperate hope of a hope, then. He dialed Clara's number.\n\n\"Hello?\"\n\n\"Clara, hey, it's Jack. Where you at?\"\n\n\"In the fancy hotel you're paying for. I'm currently soaking in a giant tub, and I have to say, I look exceptionally amazing naked in it.\" Her words were a bit slurred, and emphasized in strange places. Uh oh.\n\nJack blinked at the three people looking at him, before putting his hand over the receiver. \"Uh, Damien, can you and Fiona take our hunter friend here outside? I'll be with you in a second. And Fiona, can you transport us t\u2014\"",
        "\"Nae a problem! Come on then.\" The redhead bounced out of the booth, bouncing far more than Jack knew was strictly necessary, and took Damien's hand. Then, she pointed a finger at Harcourt like it was a gun, and pointed it toward the stairs. \"Come on then, ya wankstain! Walk ahead, and if ye try anything, I'll string up and leave ye to rot in my nightmare!\"\n\nJack watched the three walk off, and smiled. Friends. God damn it felt good to have friends, people he could rely on, people who he could not only trust with secrets, but people who could actually get things accomplished. It was such a change from his younger years in his first life. He never had many friends, and whenever there was a group project in school, he was the one that got shit done.\n\nAnd now apparently, one of his friends, was drunk as fuck.\n\n\"Clara, have you been drinking?\"\n\n\"I have! You have any idea how much booze it takes to get really drunk as an Uratha? I'm finishing my second bottle here.\"\n\nBottle? Right, wine. He pictured Clara for the sort of girl to chug beers, like Jessy. Then again, there was more to Clara than the surface suggested, he knew that.\n\n\"Did you say finishing?\"\n\n\"Yeap! I have to keep drinking, to stay drunk. This'll fade in an hour.\"\n\nOh thank god.\n\n\"Can y\u2014\"\n\n\"Is it the tits, Jack?\"\n\n\"What?\"\n\n\"Antoinette's tits. Is it the tits you love? That why you like her so much?\"\n\nJack froze, and blinked at the red darkness around him, and how white light pulsed like a heart. She probably wanted to ask 'is that why you pick her over me?' or something like that, and that was a painful conversation. It was also a conversation he never expected to have, ever. Jack never considered himself an attractive guy, short as he was, and while Julias helped get him into amazing shape, he was still a tiny dude. The idea of two women being interested in him? Never in a million years did he ever consider this a possibility, which meant he never practiced it in his head, like he did his other conversations.\n\nWhat the fuck could he say to her? She was drunk, not thinking straight, and it wouldn't be entirely fair of him to treat her like she was herself. He had to handle this delicately, and he was as good at that as he was at flirting: not at all. Well, he had gotten better at it, he supposed. Maybe he could be delicate.\n\n\"Clara, I like you a lot. You're smart and strong, and you are fucking gorgeous and beautiful. I can still remember, in vivid detail, what your breasts looked like when that kine pulled up your shirt.\" Ok, that was not delicate, at all, but at least it was a step in the right direction. Hopefully. \"Trust me Clara, it's nothing to do with that.\"\n\nSilence, and then, giggling. Clara could giggle. Surprising. \"I guess I knew that. It's just nice to hear you say it. A girl can get sensitive about these things when she gets turned down.\"\n\n\"Clara, we... we can talk about it later, ok? I need you to stop drinking and get dressed.\"\n\n\"What? Why?\" Ok, if she was aware enough to ask those questions, she wasn't too far gone.\n\n\"I need help. I've got a huge tip on where the hunters are gonna be, and I need to hit them, tonight. If we don't, the lead goes cold, and we might not be able to find them again.\"\n\n\"Wow. Um, ok. Who's going?\"\n\n\"Damien, and Beatrice's gang are. Maybe some of the Begotten. I can't get hold of Natasha or Jessy though.\"\n\n\"You can't? They're probably... doing something dumb. Probably going into the Hisil.\" Her groan was comical and loud. \"Eric wants to be Batman, and the dumb boys probably want to be Robin. Insert gay joke here.\"\n\n\"Fuck. Fuck fuck fuck.\" Why now? Why fucking now? There was no way that was a coincidence, that the same night Eric decided to go into the Hisil, was the night a hunter showed up with the answer to their dilemma. Or maybe it was coincidence, and Jack just had to fucking roll with it.\n\n\"Jack, am I a slut?\"\n\nOh sweet mother fucking god, what?\n\n\"What?\"\n\n\"You've probably heard by now I've been sleeping with Jessy's ghouls. All of them. At the same time.\" She stopped for a moment, and Jack heard the distinct breathing and sipping of someone taking a drink. God damn it. \"I only did it because I was a bit sad and lonely at first, and drunk as hell, but... well, it was really fun, you know? And after a while, I figured\u2014\"\n\n\"You figured it was Dolareido,\" he said rapidly, \"and you might as well indulge, blend in, give into its atmosphere and aura.\" There could not be a worst time for this conversation. \"Yes, I agree, indulge. Just, not right now. I need you at Robina's in an hour, near the Dampheer Bridge. Can you do that?\"\n\n\"Yeah yeah sure.\" Another sipping sound. \"I always thought of myself as a one-guy kinda girl. I wanted romance, flowers and movies, cuddling in bed, not throwing myself into an orgy. But the scary thing is, I kinda like it. There's something about doing something so... taboo, I guess, it's freeing. But you know, if Natasha gets to do it, and you do, and Jessy was doing it, and everyone's doing it, why don't I get to? And why the fuck is it even taboo if everyone's doing it?\" And she continued, hopping from one thought to another.\n\nIt faintly occurred to Jack, that he'd never dealt with this problem. Friends getting drunk and getting into stupid shit, or saying stupid shit, was never an issue he'd learned to deal with, never having run into it; same problem with the two girls fighting over him, no experience in damage control. How did one help a drunk friend, convince them to not sleep with that girl or that guy, or avoid any other poor decisions? It was especially hard, cause he had no idea how to talk to a girl he'd turned down, since she was the only one.\n\n\"Clara, this is important. Stop drinking, get dressed, and be at Robina's in an hour. Got it?\"\n\n\"Yeah yeah, got it.\"\n\n\"People could die, Clara. People will die. I need you there.\"\n\n\"Did you call Avery?\"\n\n\"You know damn well she wouldn't do this on a last minute whim like this, and she'd stop you if she found out.\"\n\nClara laughed, then there was a crash, cursing, and scuffling noises. \"Shit, dropped the phone. Fell onto the floor, thank god. Um, yeah sure, I'm getting up.\"\n\n\"And you're sure you'll be sober by the time you get to the meet up?\"\n\n\"Yeah, mostly.\"\n\n\"I really need your help on this Clara, and... and I know I'm asking a huge favor.\" Saying that he was asking for a huge favor, was vampire talk for 'I'm super in your debt', like any self respecting mobster.\n\nBut Clara just laughed again. \"Don't sweat it. These hunters gotta go, and that Angela bitch needs to bleed. I'll be there.\"\n\nHe smiled into the phone. Even Antoinette wouldn't blindly agree to a request like this. She'd argue, or make counter points, or break down the situation and explain how futile it was, in a very matter-of-fact way that wouldn't allow for argument or debate. And she'd probably be right, too. It was in the elder's nature to control everything she touched, being her age and all. Clara, on the other hand, was willing to go with the flow, just because she was his friend. She was so different from Antoinette, in so many ways, in appealing ways.\n\n\"No, Clara, I really will owe you, ok? Like, really. This is a life or death situation. You could die. My friends could die. I could die. Anything you want after this, just ask.\" \n\n\"... ok.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nDamien, Fiona, and the hunter Brace Harcourt, walked through the humid jungle of Fiona's nightmare, on the way to see Azamel. Fiona moved along ahead of them, sharp feet-point things hovering a foot above the mud and roots, while her eight spider legs sticking out of her back walked along the jungle floor, trees, and stone. Her awareness of her surroundings was complete. Even if he'd blind folded her, he was sure she'd still be able to move through the foliage without noise, like a cat using their whiskers to sense what was around their head.\n\n\"Are we really bringing him?\" Damien said, gesturing to the hunter marching slightly ahead of them.\n\n\"He knows where the portal is. And if he can, he'll stop a bunch of hunters from getting in our way.\"\n\n\"He already told us where it is. And you checked, didn't you? Dominated, forced him to speak the truth.\"\n\nJack shrugged. \"He may have been tricked, too. I wouldn't put it past those two psychopaths to lie to this man, knowing this would happen. And shit might happen. Scratch that, shit will happen. I want him around in case it does.\" And with another shrug, he nodded toward the hunter's way. \"If worst comes to worst, I'll turn him into a wall for us to hide behind.\"\n\nHarcourt looked back at them, eyes wide, before he squinted and frowned. \"I'm trying to help.\"\n\nThe poor hunter squeaked, jumped around, and brought up his hands, ready to karate chop the source of the howl in the night. Just a monkey, Jack was sure, but even Jack felt unnerved by the environment they were walking in. They'd only been in the realm for five minutes, and Fiona assured them it would be a ten minute walk through her chamber to exit into the tunnels with Azamel, but it felt a lot longer. It was a nightmare, after all, not exactly limited to the pure reality of the physical world. A giant jaguar, or insect, or snake, could attack them at any moment, something beyond the power of the normal animal kingdom. Fiona also assured them they were safe, but didn't deny that the jungle held strange terrors.\n\n\"You'll forgive me,\" Jack said with a snarl, \"if I don't consider your word terribly reliable. You don't seem to be lying, but that doesn't mean you're trustworthy, that you won't change your mind when it suits you.\"\n\nThe kine rolled his eyes, but kept walking, and his feet went squelch squelch in the shallow mud. \"What do I need to do to prove I'm genuinely interested in helping you? Or that I'm good to my word.\"\n\n\"More information, for a start,\" Jack said. \"I've seen the hunters use some knives that kinda glow. What's up with that?\"\n\n\"Blessed knives. They harm monsters and shit more than regular knives.\"\n\n\"Blessed? Damien here basically lives in a church. Why the fuck would a blessed anything affect us more?\"\n\nThe hunter could only shrug. \"No idea. I've seen monsters ignore crosses, but Jeremiah's shit does work.\"\n\nJack stepped in closer to Harcourt, and looked at his neck. \"And the tattoos? I've seen tattoos on all of you.\"\n\nThe man winced and stepped away from him, failing to hide a tremble. \"Yeah, some of those are Jeremiah's work, and some are Elen's. They help fight off some vampire shit, and a lot of them stop monsters from finding us in our dreams.\"\n\nRight, right. Jeremiah and his cause were actually centered around killing monsters, not vampires. Vampires were a mild annoyance to him, cockroaches. Monsters were legends to be fought and defeated.\n\n\"Ok, better question. How did you become a hunter?\"\n\nThat got him. Harcourt winced, visibly, through his whole body, and had to take a second with dramatic pause before continuing on. \"Vampire did some shit to my family. Ok?\"\n\n\"Jack,\" Vrall said, looking over her shoulder at him. Rather, he assumed she was looking at him, since she had no eyes, only the enormous, regal horns that curled backward from her eye sockets and forehead. \"I do not sense a... meal, in this man, if that is any help to you.\"\n\nVrall fed on people who deserved punishment for being abusive, for being bullies, and being all-around aggressive shits. Far as he could figure, her hunger was something that fed on the psychological aspects of the chosen target. If Harcourt was actually a pretty fucked up, nasty person who liked to use power to abuse people, then Fiona would be able to pick up on it.\n\nWhat other hungers did monsters have? What other twisted cravings did some of the more fucked up monsters indulge in? Which ones had desires that fit right in a Stephen King book, complete with otherworldly awareness? It made him glad Fiona's was, relatively speaking, nice, because he could still remember the look in Angela's face and her one good eye, when she explained the trauma Athalia had inflicted on her when she was a young girl.\n\n\"Vampires did shit to your family? Be specific, Harcourt.\" Time to push some buttons. He didn't want to, but if he could knock Harcourt off balance, maybe he could get a better look at the man underneath.\n\n\"I didn't come to you to pour out my personal bullshit, Jack. I came\u2014\"\n\n\"Tell me what vampires did to you, Harcourt.\" And when Harcourt looked over his shoulder at him, Jack stared into the man's eyes. He didn't make the connection, didn't reach into the man's mind and break him. It was a gamble doing that, with the curse fueling his efforts, and he didn't want to violate what little trust the two had between them anyway.\n\n\"The fuck do you care?\"\n\n\"I need to know something about the man I'm working with. Beyond that, you don't need to know. Tell me.\"\n\nIt took a few seconds, but Jack could see the man's will fold. He was trapped in his circumstance, out of his element, and at the mercy of monsters who could do anything to him, physically and mentally. He was afraid. Jack could almost smell the fear, and he could definitely feel it, something the Beast in him recognized and delighted in.\n\nMaybe that's what it felt like to be a Begotten monster, with that feeling dialed up to eleven.\n\n\"A vampire killed my parents, ok? Dad saw something he shouldn't, got involved, Mom was there, and the vamp took them out. And... my sisters are vampires now.\"\n\n\"I... damn, that's hard. And your sisters are vampires, not were vampires?\"\n\n\"Yes, are. I have no idea where they are. If I manage to find them, I'll kill them,\" the hunter said. Jack couldn't help but wince. Ok, yeah, that was a powerful motivation, having your parents killed and your siblings turned. \"Until then, I'm a hunter, hunting all the nasties I can find.\"\n\n\"... except here?\"\n\n\"Yes, except here. Dolareido's low on the priority list, you know?\"\n\n\"No, I don't know.\" He'd assumed, but this was the first time a hunter had ever confirmed.\n\nHarcourt shrugged, and followed after the spider monster half floating ahead of them. \"Hunters talk. Words spread. We have groups, organizations, some even say cults, and news spreads along the grapevine. When word comes up about Dolareido, it's usually to leave it alone, like I said. Didn't used to be that way, when some nasty fucker named Lucas was up and about, but word is he's dead.\"\n\n\"That makes sense, I guess.\" It was a far cry from the advanced communication network of the Invictus, but he supposed the Carthians communicated in a similar way. A lot of word of mouth, and a lot of unorganized information drifting, unfiltered and unconfirmed. Hunches. \"And about your sisters. Why?\"\n\n\"Why what?\"\n\n\"Why kill your sisters?\"\n\n\"Because they're vampires. I\u2014\"\n\n\"That makes no sense. You're willing to give Dolareido a pass because we're not all that bad, but we're vampires, too.\"\n\nHarcourt shook his head harder, as if the exaggerated movement would lend weight to his words. \"I don't know how you do it. That thing inside your guts, that thing that makes you a monster, it does some pretty nasty shit to most vampires. You start treating people like livestock, things to farm and kill at will. Been in a lot of cities where the homicide rate is high, and most of them are vampires killing without remorse. Fuck that, and fuck them.\"\n\n\"How many vampires have you talked to?\"\n\n\"A couple, before I dusted them. Fucking blood-hungry psychopaths.\"\n\nRage crept up Jack's skin, until the telltale sign of his Beast tingled in his fingers, a burning anger that demanded he hurt this man. Of course, that'd be proving the man right, that vampires were just blood-hungry psychopaths, slaves to their Beasts, and unable to stay above its brutal desires.\n\nJack was so focused on the curse and the things it was doing to him, it was sometimes easy to forget the Beast was, on its own, a problem for all vampires. Dolareido was, by the standard of other cities with a vampire presence, moderately peaceful for both vampires and humans. Killing kine was discouraged. Killing Kindred was basically not allowed, because it'd trigger a war. Hell, there were probably cities with vampires that went unknown, without ever killing a soul, Jack figured. Hard to prove that, though.\n\nHow was it, really, in the more violent cities? Did Kindred just, ignore their half human, and let their bloodlust run rampant? Viktor certainly had no issue butchering kine like cattle, but Jack had assumed the curse had something to do with it. It must have. But then, Lucas was bloodthirsty, as was Tony. The stories about them included plenty of murder of kine. If Harcourt was telling the truth, and it seemed like he was, assholes like Tony and Lucas, who had no issue killing humans, were common. Or at least, more common than in Dolareido.\n\nOh god, Mom. How was she handling the Beast, handling its cravings and desires, its need for blood, and compulsion to establish territory. He hadn't talk to her in a little bit, since she was hanging with the Prince and doing dragon things. He should, he really should. If his mom ended up like Harcourt's sisters, a bloodthirsty psychopath who indulged in killing, he wasn't sure how he'd handle that. He knew Damien and Beatrice had killed kine, kine they didn't need to kill, but kine they felt deserved death anyhow. Antoinette supposedly had a dungeon filled with kine she kept locked up or permanently unconscious.\n\nKindred, acting like judge, jury, and executioner. What was worse was, Jack didn't blame them.\n\n\"Yeah,\" Jack said. \"We can be blood-hungry psychopaths. But we don't have to be. It's a struggle, but we don't have to be.\"\n\nThe human snorted, shrugged with more exaggerated movements that looked like they belonged in a cartoon, and kept walking. \"Whatever you say.\"\n\nThe picture was coming into focus, the more this silly man talked. It wasn't like it was a picture Jack hadn't already guessed, that hunters were dangerous humans driven by personal reasons into a rough life of tracking and killing monsters. But seeing this man, who by all accounts seemed like he'd be more comfortable on a stage acting or singing drunk in a bar, ache with what amounted to a clich\u00e9 story that belonged in a monster movie, put details on what was originally a blurry picture. It wasn't just a clich\u00e9 story. There were actual humans out there who dedicated their lives to hunting down people like him, for the nasty shit they did, because vampires were no longer human and felt they were in a position to kill humans if they wanted to.\n\nSomewhere, deep down where he didn't like looking, a part of him felt proud of that. Vampires were creatures of the night, literally, and they fed on the humans. They were predators. Humans were prey. Why wouldn't he feel proud that humans feared him?\n\nHe sighed and marched on after Fiona. He could wrestle with these issues later.\n\n\"Harcourt,\" Jack said, \"this change of heart you had. It seems pretty random.\"\n\n\"Yeah well, kinda had to see a lot of shit to put the picture together. And I made a move tonight because it looked like there were less of your patrols on the street.\"\n\nThat might explain why he came out the same night Tash and Jessy were gone, then.\n\n\"Did you... have any sort of indicator beyond what happened at the hospital? Like, maybe something else... random, happened?\"\n\n\"Ha, if you call a fucked up dream random, sure. I mean, who the fuck wouldn't have nightmares after seeing the fucked up shit you did at the hospital, only to learn your boss is a murdering, raving lunatic?\"\n\nJack smiled. This man really shouldn't be a hunter. Far too outgoing and honest. Hunters were supposed to be surly, stoic, angry, and disturbed. He certainly had the back story to be that sort of man, but he wasn't. There was a personality in there, something with more flair than a mossy rock like Jack expected most hunters to have. How many of the hunters he killed were like this Harcourt?",
        "\"What kind of dream?\"\n\n\"Something fucking creepy, with an old, gross woman in a robe.\"\n\nAn ugly old woman in a robe. Like, a crone.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nInside the nightmare, they stepped into a dark cave. With no light to see by, they had to feel along the wet stone to move forward, even with Kindred eyes. As they moved long, the shape of the stone began to change, ridges and humidity fading away, along with the heat of the jungle. Soon they were greeted with stagnant, cooler air, and the familiar sensation of concrete on fingertips. Light emerged around a bend, and Jack sighed relief as he recognized the tunnels of Dolareido.\n\nRight, this was the large chamber Azamel liked, where she set up her strange fake home with her couch, chair, and bed. It was a special place for her. Was this why? The ability to just come and go to it through their nightmares was pretty powerful, a way for them to get into the real world together, in a predictable location. The Invictus surrounding it in explosives must have really bothered Azamel.\n\n\"Good day!\" Fiona say. \"I bring food for ye!\" When Harcourt yelped and stepped back, she laughed and shook her head. \"I'm just fucking wit ye.\"\n\nAthalia and Mark all got up, staring at the group of them and the hunter they brought, frowns blatant. Azamel, on the other hand, barely turned her head enough to see them, before sighing once she took a drag of her cigarette. The very sight of her froze Harcourt to a standstill, and Damien had to give him a small shove to get him moving.\n\n\"What's this about?\" Azamel said.\n\n\"I'm launching an attack on the hunters in moments,\" Jack said. \"I wouldn't have to visit like this if you got some phones and lived somewhere with reception, you know.\"\n\nAzamel shrugged, as if she'd heard the argument before a hundred times, and simply didn't care. Probably true. \"You know where the hunters are?\"\n\n\"Aye, we do! Thanks to this lad.\" Fiona walked them up to the stage to stand in front of Azamel, and she gave Harcourt a hard pat on the back, enough to make the man nearly jump. Poor dude was surrounded by vampires and monsters, and they could all sense the fear on him, smell it, and practically hear his heart beat; if there were any werewolves with them, they could have.\n\nBefore the dumb man could start blabbering, Jack waved a hand to him and shooed him back from the stage a foot.\n\n\"Yes, this man is a hunter. I've tested his mind and can confirm he's telling the truth about who he is and his intentions.\" His words would have a lot more weight than Harcourt's, and if the man started talking, the hunter would probably piss the old monster off. Dead, he was useless to Jack. Alive, he might get something out of this. \"He wants to help us deal with Angela and Jeremiah, specifically.\"\n\n\"Does he now?\" Athalia hopped off the stage, marched up to Harcourt, glared at him, threw Jack a hard glance in the corner of her eye, and glared at Harcourt some more. If a look could kill, Harcourt would have exploded. \"You want to kill my daughter?\"\n\n\"Oh god it's you.\" Harcourt stepped further back, but he didn't get far before his shoulder hit Damien's. Damien didn't move, except to put a hand on Harcourt's shoulder, and force him to hold still.\n\n\"Yeah, it's me, the bitch from Hell. What shit has my daughter been telling you?\"\n\n\"Nothing! Nothing. I mean, she's brought up some things about nightmares, and the weird things you did to her, destroying things and stuff. I don't have anything to say about that! No ma'am. All I want is those two taken off the board. Lot of good people are dying helping them, not realizing what's going on, and\u2014\"\n\nJack stepped up, and pulled Athalia way by the shoulder. If that went on any longer, the monster was bound to hurt him. \"He's just a guy who realizes his hunter friends have been tricked by Jeremiah.\"\n\nThen she turned on him. Athalia poked her finger into Jack's chest, though he could see a moment's regret in her gaze. She was afraid of him now, and had jabbed him out of reflex, not remembering he'd become a different monster. It was tempting, to pounce on the opportunity and scare her, terrify her, make it known that he wasn't to be pushed around anymore.\n\nBut that was the Beast talking. Jack, on the other hand, took a small step back, and held up his hands. \"I'm trying to help you, and us.\"\n\n\"I'm supposed to trust you?\" she said.\n\n\"Yeah, you are. Have I ever lied to you? Steered you wrong?\" He folded his arms across his chest, and waited.\n\n\"No...\"\n\n\"I tested this man's mind myself. He's telling the truth, and is genuinely trying to help. And if he's been tricked, well, he's coming along in case something goes wrong.\"\n\n\"He's coming with you?\" Azamel said.\n\n\"Yes, he is. For all I know, he's been tricked by Elen and her magic, into triggering this ploy.\" Though, from what Harcourt said, it was more likely that the Crone was involved. \"I could lock him up, for interrogation, but we wouldn't get anything useful out of him. Jeremiah is too smart to let his hunters know too much. The man knows the location of Elen's portal tonight, and he might be able to provide some value to me in the shitstorm to follow. He might be able to convince his friends to stop fighting us, and give up Jeremiah and your daughter. He might be able to recognize a tactical maneuver they commit to, and tell me how to best respond.\"\n\nThe old woman blew some more smoke, before setting the cigarette aside. She leaned forward in her rocking chair, a motion that forced a groan and creak from her old body. \"This is a major gamble, vampire.\"\n\n\"It is, but the more we sit around waiting, the more time we give Jeremiah to compensate and adapt to the situation. Guerrilla warfare is a hunter's game. We have to do this and do it now.\" Before Angela figures out another way to hurt the Kindred, and Jack specifically. Julias was already dead, his sister too, and if someone else he cared about died, he was going to crack.\n\n\"True,\" the old woman said. \"If this hunter is telling the truth and has not been tricked, and if you can pull this maneuver of yours off, it will be the deciding factor in this confrontation. I assume you're here to request my help?\"\n\n\"Yes, I am. Come help me. I'm not going to have the backing of my covenant for this; this is way too risky for any Invictus to agree to. Hell, Michael's going to have my ass in a sling for doing this.\"\n\n\"As he should, vampire.\" The old monster shook her head, like an angry grandmother annoyed with her grandchild. \"This approach is dangerous, radical, and vampires are used to weathering storms, for decades if need be.\"\n\n\"Maybe the older ones are. I'm young and impulsive. The Invictus, the Prince, even the Carthians would probably like to play this safe and let the storm pass, because you're the primary target, not them. But I want to help. And... I've become a target, too.\" He turned back to Athalia, and her eyes fell. Weight dragged her down, bringing her shoulders and posture down with it. Her daughter was to blame for Jack's pain. She knew it, he knew it, and it made every interaction they had hard as fuck. \"I assume Athalia wants to come. This is the best opportunity she has of saving her daughter's life.\"\n\nSave her? We're not saving Angela! Kill her. Rip open her throat, and drink the blood as it squirts out. Watch the life drain from that sheep's eye, and indulge in the kill. You're a predator, Jack. She's prey, prey that had the nerve to bite you. Make her suffer, and then make her die.\n\nJack kept his best stone face while the voice ranted. Yes, he wanted to kill Angela. He wanted revenge. He wanted to hurt her for the crimes she'd committed against him, his family, and his friends. He wanted to crush her skull for killing Julias. \n\nBut, seeing Athalia looking miserable tugged at something inside him, and for the fucking life of him, he couldn't ignore it. She wanted to save her daughter, or at least capture her and try to rehabilitate; a lost cause, but what else could a mother do for her daughter. If the opportunity presented itself, Jack would capture her, but only if the opportunity was blatant, and safe. Broken legs, broken arms, no hunters nearby, and with Jeremiah dead and Elen too, was the only chance for Angela's life to be spared, and only if it happened by accident.\n\nThe chances of that happening were slim to none. In all likelihood, the moment the opportunity presented itself, Jack was going to kill her, and smile doing it. Feeling bad for Athalia could come later.\n\n\"I... would like to come,\" Athalia said. \"I have to come. If I can do something, about Angela, I... I should.\"\n\nAzamel snorted, only to erupt in a nasty cough. Everyone went silent as they waited for the old monster to recover, a form of respect that had Harcourt's eyebrows raising as he looked around.\n\n\"You may go, Athalia, but Mark and I will stay here. Fiona, you're not going anywhere.\"\n\n\"What!? But I\u2014\"\n\n\"You may intervene if the hunters enter the nightmare realm, Fiona, but you are too young for this madness. Need I remind you, you nearly died once already?\"\n\nPouting and shaking her little fists, Fiona looked down and stomped a foot once. It was easy to forget that, while Vrall was an ancient monster with plenty of experience, Fiona was a young woman. It was Vrall who'd been shot up last time, but this time they wouldn't be in the nightmare, and Fiona would be in a much greater danger.\n\nFiona marched up to Damien, but before she could say anything, the man put up his hands.\n\n\"I agree with Azamel, Fiona. If we're in the nightmare world, sure, we'd love Vrall's help. But out here, it's... it's going to be brutal. I can survive a bullet to the head. Vrall can take a dozen bullet wounds, and survive. Can you?\"\n\n\"... nae, I cannae.\"\n\n\"Yeah,\" Jack said. \"I wasn't sure how to say it, but yeah. What about Mark? Is he\u2014\"\n\n\"Mark stays with me,\" Azamel said. \"I would not be surprised if Jeremiah tries something desperate, in response to this ludicrous plan of yours, vampire. He's been hunting for a way to assault me without losing his life in the process, but if that's no longer an option for him, I expect to find him at my door.\"\n\nJack frowned at her, and found his gaze slowly turning into a glare; he could feel the strain in his eyes. It was enough to draw Azamel's glare, returned and hard, battling against him. She knew what she was saying, that of the four powerful monsters living in Dolareido, who the hunters were here to kill, Azamel was only letting one of them come with him. Half of this effort was to save her life and the lives of her young Begotten kin, and yet she was denying him aid.\n\nMark shrugged, sat back down on the couch upon the concrete stage, and pulled out a laptop.\n\nFucking great, lovely, what a perfect night for launching a crazy attack. Jessy and Natasha were missing, and so were the three werewolves he may have been able to recruit. Of the four monsters he could take, only Athalia was coming, and Vrall was on the maybe list if the fight somehow moved into the nightmare world. If it weren't for Clara agreeing to come, he'd call this off.\n\nMaybe this was a bad idea. Maybe he shouldn't do this. Didn't he learn from the last time he launched a surprise attack on the hunters? They used explosives and nearly killed him and his friends. And at the hospital, he thought his sire and him could handle them there, but they couldn't. This whole night seemed like he was repeating the mistake.\n\nNo. No it wasn't the same. This time, they had inside help. This time, he had the curse. This time, he'd handle things himself, and everyone else could stand back and watch. This time, the blood was going to pour. This time, he'd\u2014\n\n\"Jack,\" Azamel said, \"do not spare Elen's life. The magic she knows is a twisted, horrible thing. It will seduce you with promises of impossibilities becoming impossible. End her life.\"\n\n\"Impossibilities?\"\n\n\"Yes. She knows how to manipulate flesh, and I am sure such a skill has been extended to... otherworldly ends. I assume Jacob and Antoinette will want her, and I am telling you to kill her if given the chance. It may be the key to freeing the Begotten in the Prince's cage from the spell that binds him.\"\n\n\"I thought that seal thing would fade?\"\n\n\"It will, I am sure, but I would not have a fellow Begotten trapped so. Of course, for all I know, it will take years for that seal to fade. And besides, what if Jeremiah escapes? You will need the Begotten's help.\"\n\nIf he killed Elen, Antoinette would be upset, and Jacob would be livid with him.\n\n\"I'll...yeah, I probably will. I can't imagine letting her live.\"\n\n\"Good.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~\n\nFinally. Fucking finally.\n\nShe smiled down at her phone, slipped it into her jeans' pocket, and prepared for war.\n\n\"We really doing this?\" Jennifer asked.\n\n\"Me and the boys are. You're staying outside.\"\n\n\"I am most certainly not. I helped last time.\"\n\n\"Last time there were only a few of them, and distracted, and\u2014\"\n\n\"And this time there'll be many of us distracting many of them. I can\u2014\"\n\nBeatrice threw up a hand and shook her head. \"No! No. Just no, ok? You're a young vampire, and\u2014fuck me, I'm a young vampire, ok? I'm too young to be doing this, but I have to. I know the ritual. So you stay back, watch the entrance I make, and cover our backs.\"\n\nThat didn't settle well with Jennifer, but too fucking bad. Beatrice had lost enough. She had no intentions of losing her best friend.\n\n\"You expect me to sit back and watch you go in, after you perform this ritual? You told me what it'd do to you!\"\n\n\"I'll recover, well enough to be useful. And there's no fucking way I'm missing the fight.\" No fucking way she'd miss the chance to kill Angela, or at least see the light leave her eyes. She had to die. She had to fucking die. Even if Athalia, weeping a storm, held the bleeding, also weeping body of her daughter, Beatrice would laugh and kill the hunter bitch.\n\nJennifer, Beatrice, Othello, and Aaron all stood within the cave they lived in, gathered in the center and mentally preparing. Or at least, she was mentally preparing. She wasn't sure if Othello had enough brain to do something like that, and Aaron was always mentally prepared.\n\nThey were all dressed in jeans and t-shirts, nothing impressive or distinct, nothing that would give them an edge in battle. Shit like bulletproof vests were more hassle than they were worth, when you were trying to jump around and dodge with the speed and strength of a Kindred. Maybe if the hunters started using fire, a fire-repellent suit of some kind could be useful? Heh, probably not. She laughed, imagining a vampire in a big full body suit, like a space suit, walking through fire.\n\nJacob was off doing whatever it was that he did when he disappeared for weeks at a time. Probably plotting how to take over Dolareido. Nah, more like, plotting how to summon an ancient demon to be his new buddy, so he could rule the world. Something along those lines. But that was a big part of the joy of being in the Circle, that they didn't need Jacob's permission to do shit. Hell, he encouraged them to do whatever the fuck they wanted, and right now she wanted to kill Angela and Jeremiah. Kill them dead.\n\n\"We got your back,\" Othello said. \"Is the ritual going to be hard?\"\n\n\"It'll leave me pretty fucked up, not gonna lie. But I'll still be mobile enough for the fight. No way am I missing this.\"\n\nAaron raised a hand. \"Who's Jack bringing?\"\n\n\"Not sure. Everyone he can get his hands on, probably. Which... probably doesn't include any Invictus. I doubt Mary or Michael would allow this blitzkrieg ambush tactic of his. Way too risky. And Antoinette's going to skin Jack alive when he gets back, so I'm not sure he could convince Natasha to go against her wishes.\" Jack would get back, though, no doubt about it. The least Beatrice could do for the kid was keep him alive after all he'd done. \"But Jessy and Damien will probably come, even knowing their bosses will break their legs for it. Eric might come too.\"\n\nPart of her was still angry at him, for Julias dying. It was hard to ignore that it was Jack and his mother's fault that Julias stuck his neck out, but over the weeks it grew easier to accept that it was neither of their faults. Superman had been one of the kindest men she'd ever known, and that kindness got him killed; more like, asshole hunters taking advantage of that kindness got him killed. Those assholes needed to die.\n\n\"Hope we get some werewolves with us,\" Othello said. \"They can frontline better than we can.\"\n\n\"Well I doubt Avery will let any of her pups come on this insanity either.\"\n\n\"Clara will,\" Jennifer said.\n\nTriss raised a brow. \"She will?\"\n\n\"She will. From what you've told me about her, and from what I remember at the ball, I think she likes Jack quite a bit. More than a bit. And these Uratha behave like Carthians, completely uncontrolled without a sensible thought in their head. Plus, Jack knows her, and he knows we'll need the wolves to help us if we want this to succeed.\"\n\nBeatrice nodded, tapping a claw against one of her crocodile teeth. \"In the end, it doesn't matter. Jack and his curse are going to be doing the heavy lifting, and he says we have to do this tonight, or it's not happening. We're going balls to the walls here, and we're going to make this work. Jeremiah and Angela are dead after tonight, and Elen...\" Shrugging, she started for the cave exit. \"Jacob wants her. If we capture her, fine. If we end up killing her, I... No, I'd prefer to capture her alive if we can.\" \n\nElen could manipulate flesh with magic, and that was one more piece of a puzzle Triss was slowly pursuing. If she could make it work, why not?"
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "paranormal romance",
        "slow",
        "violent"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-07-ch-10"
}