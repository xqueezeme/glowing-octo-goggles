{
    "title": "The Shadow Doctor Ch. 05",
    "pages": [
        "Series disclaimer: This is not a love story. I'm interested in exploring the power dynamic behind mind control, and there is very little consent in this story. This story contains violence, rape, trauma, and abuse. I understand that's not what a lot of readers are looking for, so consider this fair warning. That being said, if you're interested in a dark fantasy of sex and control set in magical world loosely inspired by Wuxia stories, please enjoy.\n\nChapter notes: I hope you all enjoy this latest installment. As usual, chapter tags: Bondage, Non-consent, Mind Control, Humiliation, Slavery, Oral.\n\n*****\n\nThe following are the permanent rules Tam has in place for Yelena at the start of this chapter.\n\n- When asked a question, Yelena must answer immediately and fully, in the same language in which the question was asked.\n\n- She cannot lie.\n\n- She must keep Tam's control over her a secret, unless he chooses to reveal it to others or revealing it would save his life or freedom. This rule provides an exception to the two previous rules.\n\n- Yelena cannot physically harm Tam, his servants, or his guests.\n\n- She cannot leave the grounds of Tam's manor.\n\n- She cannot harm or disfigure herself unless she is following a direct command from Tam to do so.\n\n- Yelena is pleased whenever Tam compliments her.\n\n- She becomes aroused and wet whenever he has an erection.\n\n- She feels increasing sexual pleasure whenever she has Tam's cock inside her body, in any orifice.\n\n- If Tam puts a plug in her ass, Yelena cannot remove it until he gives her permission, except temporarily for bodily functions. \n\n------\n\n\"Well, what do you think?\"\n\nLin Song set down the letter and frowned in thought. \"It's an interesting offer. It seems to me that you need to address three questions before deciding on a response: if we can perform the requested service, how much it will cost us, and what you intend to request as compensation.\"\n\nTam and his steward were seated for their usual breakfast, discussing the message Wong Gao had sent over the previous night. Grace's prospective buyer, a diplomat named Xiyang Ki, had agreed in principle to purchase the girl if she could learn Arabic before he left in two months. Gao had proposed sending Grace to live at Tam's manor while Yelena tutored her in Arabic. \n\nThe tutor in question knelt on the floor by Tam's feet, waiting patiently for the occasional bites of breakfast he held out for her. From the expression on her face, Yelena still disliked the indignity of eating in this fashion, but she knew better than to complain by now. \n\n\"Let's address the question of cost first. You manage my finances -- how much will we be inconvenienced by housing another slave for two months?\" Tam said.\n\nLin Song took a moment to do some calculations in her head. \"The household budget can manage it fairly easily, assuming your practice continues to produce revenue at the current rate. You'll have to watch some of your impulsive purchases -- I'd suggest you avoid extra expenditures for the next two months. No more extra work on the gardens, buying slave girls, things like that. We can afford another mouth to feed, but not much more without eating into the money set aside for emergencies.\"\n\nTam chuckled at that. A week ago he hadn't had a single slave girl; now he was contemplating adding a second to the household, even if it was on a temporary basis. \n\n\"I believe I can restrain myself. Let's address the next question. Yelena, can you teach someone Arabic in two months?\"\n\nYelena blinked. She wasn't usually included in the conversation at these meals, but she answered quickly, her first set of rules making it impossible for her to stay silent when directly questioned. \n\n\"Yes, probably. I need to preface by saying I haven't done much teaching. When I learned Arabic, I learned to handle basic conversations in five weeks, but I grew up speaking Hebrew in addition to Rus and Ruthenian, so I was able to take advantage of the similarities. I also learn languages much more quickly than most. We won't be able to tell how quickly Grace can learn until we try. And it will mean taking up large portions of the day; the best way is multiple sessions a day, with short breaks to let the mind recover. I think I can teach her basic vocabulary and grammar in two months, but getting her to the point where she can fill her role of elegant companion in Arabic will be impossible in so little time.\"\n\nTam nodded. \"Hopefully that will suffice; we will make carrying on a simple dinner conversation the goal, and Xiyang Ki can continue her education on the finer points of what he needs. I'm sure you and Grace will both do your best to ensure Grace impresses. Will you need teaching supplies?\"\n\n\"Wax tablets and writing tools, or chalkboards, something reusable. If we have access to them, I can look over a selection of Arabic scrolls suitable as primers, which would help as well. I know a merchant in the foreign quarter who deals in those sorts of texts.\"\n\n\"Write up a message for the man in my name, asking him to send over some samples. I don't want your name popping up in your old neighborhood.\"\n\n\"It's a woman, not a man. But yes, that should work. I'm getting excited thinking about this; I wasn't sure I'd get to use my language skills anymore.\" \n\nTam was glad that Yelena was showing some signs of good spirits. His slave had been withdrawn when they woke up, with no sign of the excitement that had filled her at first touching her chi the previous night. She'd obediently taken care of his morning erection and her duties bathing and dressing him, but had done so listlessly. Seeing her engaged with life in her eyes was pleasing; he reached down and patted her fondly on the head.\n\nYelena flushed in embarrassment and looked at the floor in response to Tam treating her like a pet. Lin Song took the opportunity to rejoin the conversation.\n\n\"So, the last question to be addressed is payment for your slave's work. In the message, he only offers a favor. Is that sufficient, or do you want to request more concrete compensation?\"\n\nTam leaned back and considered the question. The unspoken addition to the favor Wong Gao had promised was the fact that Grace would be at his disposal for two months. The slave girl was undeniably attractive, and she'd displayed an enticing submissiveness on their brief meeting. On the other hand, tutoring Grace would take up a great deal of Yelena's time, and housing her, while affordable, was not free. Still, he felt that he'd made up his mind as soon as he'd read the offer. This conversation with Lin Song was just to make sure he wasn't missing anything in his own evaluation.\n\n\"He's a well-connected man. He's sold girls to many of the richest and most powerful men in the city. I think a favor from him could be quite valuable, and he's left it very open ended. I can also wait to actually demand the favor and leverage his goodwill in subtle ways. I think it's better to leave him indebted to me rather than demanding a simple payment for housing and services. Depending on how much the teaching supplies cost, we may consider sending him a bill for those.\"\n\nLin Song nodded in satisfaction. \"That was the same conclusion I reached. A straightforward transaction leaves both parties with no obligation, but a promised obligation can be turned into a much greater payment if handled skillfully.\"\n\n\"We're agreed then. I'll compose a reply after breakfast. Before we conclude, let's discuss keeping the girls busy. Once Grace arrives, a large portion of their days will be devoted to this tutoring, and they'll spend their nights attending me, but I won't need their attention at all times. Do you want to use them around the house?\"\n\n\"To be honest, with you not having a family or doing much entertaining, this household is fairly easy to keep up. Yelena doesn't seem well suited to a maid's duties. If we keep her working as a maid, I think it will just make the actual maids lazy and idle. And adding another girl won't mean much more work for anyone except Cook, aside from an increase in laundry.\" \n\n\"Perhaps Grace will be suitable as an assistant to Cook. I'll question her when she arrives. And I'm sure we can find some time for the girls to assist with laundry. I'm surprised you found Yelena unsuitable for maid's duties -- despite her difficulties adjusting to her new status, I've found her to be more obedient with every passing day.\"\n\nYelena scowled as they discussed her as if she wasn't in the room, but Lin Song and Tam ignored her discomfort.\n\n\"When I tested her out yesterday, she worked hard, but she has no real knowledge of keeping house or a maid's duties. She took two or three times as long to do anything as it should have taken. Still, she was diligent. She also told me you said that I was the only one who could decide if she could be trusted around the house without her chains, and seemed determined to impress. Of course, last night I found her fetching tea without a single restraint on her. Did she tell you I'm going to switch her after we finish eating?\"\n\n\"Yes, she did. She also informed me you said it was more my fault than hers.\"\n\n\"Tch, the little chit wasn't supposed to pass that along. Still, it's true. She's playing the good slave at the moment, but she'll run if she thinks she sees a chance, and then when she's caught we'll have to let the guards scar her pretty young back with the lash. She's our responsibility, Master Hsien; we can't let her have her head until she's been properly broken to harness.\"\n\n\"She'll prove herself to both of us before she earns the privilege of moving around the house freely. Still, the fact that you don't see much use for her as a maid is good. I'm thinking I may train her as an apprentice.\"\n\n\"Are there problems with Ho Tien, or do you need another assistant?\"\n\n\"No, the boy is doing quite well on the medical portion of his training; I'm not planning to have her take his place. I'm thinking of training her as an enchanter.\"\n\nLin Song's eyebrow rose. \"You're going to teach the foreign slave girl magic?\"\n\nTam nodded. \"Yes, it turns out she has a natural gift for it. She showed more promise when I tested her last night than Ho Tien has in months.\"\n\n\"I don't normally presume to meddle in affairs of magic. You know I'm a practical sort, I don't pretend to understand any of it. Still, are you sure that there's no danger in teaching her? The girl is barely trained.\"\n\n\"There won't be any danger. I'll keep a tight control on what I teach her.\" \n\nTam's confidence of course was based on the enchantment he'd cast on Yelena, but he had no intention of sharing that secret. For now, his steward would simply have to take his word for it. \n\n\"Very well. As I said, I have no interest in meddling in your magical affairs. I'm quite happy to stick to managing the mundane side of the household. Speaking of that, is there anything else you want to discuss? If not, Yelena and I have an appointment.\" \n\n\"Two things, actually, but we don't need Yelena around to discuss them. Yelena, clear the table and then wait for Lin Song in the kitchen.\" \n\n\"Yes Master.\" Yelena rose with a light rattle of chains and moved around the table, gathering dishes, and then slipped out of the room. \n\nOnce she was gone, Tam explained to Lin Song that he had chosen to give Yelena one hour a day to herself, explaining the restrictions he'd put on it, but not saying that it was a result of losing a bet with his slave. Lin Song disapproved, believing that slaves were happiest when busy, but Tam took advantage of his role as master of the house to insist. \n\nAfter that, Tam had one other matter to discuss. When he had made Yelena masturbate the day before, she had called herself \"dirty foreign trash\". He suspected she was repeating something one of the maids had said to her, almost certainly Tan Jiao. \n\nHe chose to avoid the particulars of the incident, simply telling Lin Song that he was worried the staff might have trouble adjusting to the addition of slaves to the household. He explained that he did not wish anyone on staff to be unkind or insulting to the slave girls just because they were lower class. Be strict with the slaves, of course, but Lin Song should ensure the staff understood that abuse or insult to Tam's property would be considered an insult to Tam himself. \n\nLin Song approved of that idea completely, and seemed to guess that he had Tan Jiao in mind. She assured him that she would take the matter in hand. Their business concluded, they parted ways: Tam to his study to write a reply to Wong Gao, Lin Song to the kitchen to give Yelena the promised switching. \n\nTam took a brief moment to pity Yelena as he left the table; his steward might be growing old, but he was sure she could still wield a switch painfully. Shaking his head, he moved on to mentally considering how to phrase the message to Gao. \n\nHe was in the middle of sealing the message with wax when Yelena entered the study, rubbing her ass awkwardly in her chains. He looked up at her and grinned. \"Does Lin Song still know how to handle a switch in her advancing years?\"\n\nYelena grimaced. \"She hit me so hard I cried, then wiped away the tears, patted me on the head, and gave me a cookie as a reward for taking the switching so well.\"\n\nTam laughed. \"She should have been a mother; it's a shame she and Bin Hsui were never able to have children. Here, take this message to her and then come back right away. Once you return, I may consider teaching you how to actually use chi.\"\n\nYelena's face lit up at that promise and she hurried off. She returned quickly, kneeling by his chair, eagerly looking up at him. Tam smirked slightly; thinking about Grace had left him in the mood to tease and dominate, so he decided to indulge it. He would test his slave and see if she could be patient despite her thirst to learn magic. He ignored her, idly scanning one of the new medical scrolls he'd bought the day before. \n\nYelena squirmed slightly, but kept her silence. She seemed to realize what he was doing and forced herself to wait patiently for her master's attention. Tam left her like that until he was sure she would continue to wait as long as he wished, then held his hand out to her, keeping his eyes on the scroll. \n\nYelena wasn't sure how to react to the prompt at first. Tam carefully kept his attention on the scroll, letting her make her own decision on how to respond. After a moment, he felt her lips brush his knuckles with a kiss. Tam continued to ignore her, and after a moment, Yelena kissed his hand again, letting her lips linger. Encouraged by his tacit approval, she slowly moved up and down the back of his hand, feathering kisses across his knuckles and the back of his fingers, thanking her owner for acknowledging her existence.\n\nTam let out a small grunt of satisfaction and leaned back in his chair, looking down at his slave. He shifted his hand and cupped her jaw, setting his thumb against her lips. Yelena looked up at him silently then parted her lips, taking his thumb between them. She sucked on his thumb slowly and sensually, teasing the end with her tongue, her wide green eyes locked on his face. Tam felt his erection rise at the display, and Yelena gasped slightly as she grew wet in magical response, her body readying itself in case he wanted to use it. Her eyes rolled back in her head for a moment at the sudden rush of forced arousal, but she steadied herself and returned her attentions to his thumb. \n\nNow that she had his undivided attention, Yelena grew more sensual, bobbing her head up and down as she sucked on his thumb, taking it all within her mouth then sliding back until just the tip was between her lips before fellating his thumb again. \n\nTam sighed in satisfaction and slipped his other hand into his robes, gently stroking his erection. Yelena made a small whining sound but stayed where she was, lavishing her attentions on the single thumb Tam had granted her permission to touch. \n\nTam was quickly finding moments like these to be his favorites with his foreign slave girl. Yes, there was a charm to simply taking the girl, enjoying her firm young flesh as his property, forcing her to become lost in physical passion against her will. But moments like these, where she buried her resentment and came to him eagerly; Tam was finding these particularly delightful. \n\nTam wasn't a fool; he knew that Yelena had no affection for him. She wanted him to be in a good mood and teach her magic, and she'd had some small success manipulating him with these displays of sexual surrender. Even knowing he was being manipulated, he enjoyed them enough that he let her continue to influence him with them. \n\nIt wasn't as if she was trying to get him to do something he was opposed to anyway -- he'd teach her magic regardless, because it would make her a more useful tool. Still, letting her work for it like this was enjoyable. \n\nDeciding to move things along, Tam pulled his hand away from Yelena's face, wiping his thumb off on her cheek. He grabbed the chain of her sirik where it descended from her collar and pulled her head down, tugging her down and forward from her kneel until she was on all fours on the floor. He stood and walked over to the couch, snapping his fingers to indicate she should follow him. \n\nTam undid his robe and loosened his trousers, letting them fall to his ankles. Stepping out of them, he sat on the edge of the couch, his knees spread wide. Yelena crawled over to wait at his feet. Aside from her jewelry and chains, the only thing covering her body was another of the skimpy two-piece slave silk outfits Tam had bought for her from Gao. Today's was black silk; looking down at her bare back, the ties of the top were the same inky black as her tattoo, both contrasting beautifully with her alabaster skin. \n\nTam beckoned her forward and she crawled between his legs, her hips swaying. When she reached his cock, she rose to her knees to suck on it, but Tam stopped her with a hand on her shoulder. \"Your service this morning was only barely acceptable, slut. When I choose to use your body, I expect you to display a little more enthusiasm. Do you understand?\"\n\nYelena turned red with shame. \"Yes Master, your slave understands. She will try to be a better slut for you.\" \n\n\"Well, here's your first chance to improve. Show me that cock-hungry little whore I know you have hidden inside you.\"\n\nYelena whimpered slightly. \"Yes Master.\" \n\nShe leaned forward then paused. Settling back on her heels, Yelena bent her head so that she could reach up with her manacled hands and tug at the strings holding her top in place. Two quick tugs let it fall then she tugged it around her waist until she could reach the back ties and let the black silk fall to the floor. Now bare from the waist up, she slid forward again, kissing the inside of Tam's knee. \n\nShe pressed her body to his bare leg as she kissed her way up his thigh. As she moved, Tam felt the contrasting touch of her soft breasts, the silver wings piercing her nipples, the small chain links of her sirik's central chain, each different sensation pressing against his calf and then his thigh. When she reached the base of his cock, she kissed her way up his length, her manacled hands stroking his balls as she took him into her mouth. \n\nYelena kept her eyes turned up to Tam in supplication as she took him deeper and deeper, gagging slightly but managing to force her lips down to kiss the base. She couldn't take it as easily as she did when Tam used the spell to erase her gag reflex, but with or without the spell, regular use had made her throat accustomed to taking his cock. \n\nShe slid up and down his length, eventually having to pull back to cough and catch her breath. While she caught her breath, she pushed her chest up and rubbed his spit-soaked length against her modest breasts before she lowered her head and took him into her throat again. ",
        "Tam grunted in satisfaction and leaned back to let his shoulders rest against the back of the couch. Since he seemed to enjoy it, Yelena continued her pattern. She alternated forcing her throat open while she gazed up at him then rubbing her face and chest against his cock while she broke for breath, smearing herself with her own saliva. The chains hanging from her neck and wrists tinkled softly as she moved between his legs, their sounds joining the wet squelching of her throat as she forced herself to take the full length of Tam's cock over and over. \n\nTam had already spilled his seed into her mouth when he woke this morning, so he took some time to rise to a climax. Each time she took him to the base, Yelena stayed down just a little bit longer, her passion mounting the longer she had him inside her. Her willingness to serve might be feigned, but the arousal was real. The spell gave her no choice in the matter -- whatever she might want, her body was compelled to hunger for him. \n\nWhen he felt himself on the verge of coming, Tam reached down and clasped his hands on Yelena's head, holding her all the way down as he spurted his cum directly into her throat. With a groan he pushed her back and stared upward, breathing heavily. \n\nYelena coughed and gasped for breath after swallowing his seed, then lowered her head to immediately suck on him again. He looked down and saw her hands clasped together at her waist, twitching as if they wanted to be someplace else, and her eyes full of lust as she stared at his cock. He sighed -- apparently she hadn't managed to come yet, and he knew she hadn't come that morning either.\n\n\"Very well, I suppose you can give yourself an orgasm. Just be gentle, it's sensitive.\"\n\nYelena moaned and pressed herself against his leg, her hands diving under her skirt to desperately rub at her clit as she gently held the head of his softening cock in her mouth and suckled at it. Tam leaned back and absently fondled the short fuzz of blonde hair growing back on her head while she worked to bring herself off. Once she'd shuddered through an orgasm, Yelena lay between his legs for a moment, then lifted her head and carefully licked his cock clean. \n\nSince their bodies had still been joined when she came, Tam was able to idly harvest the energy of her orgasm with the Taoist disciplines, which were becoming instinctual to use the more he practiced them. While he used it to replace the majority of the chi he had spent into her throat, Tam rose and found his pants, then slipped out of the room to find a washcloth. \n\nHe dried himself off and fixed his clothes, then walked back to his study and tossed the cloth to Yelena. She was kneeling against the couch where he'd left her, head curled under her arms as best she could in her chains. She took the cloth and wiped at her face and chest, then reached down and cleaned under her skirt, keeping her face to the floor and avoiding his eyes. \n\nTam settled into a low crouch next to her and slipped a finger under her collar, making her face him. She resisted for a moment then sighed and met his eyes. Her eyes had faded back to their normal pale green, like fresh-cut grass, and it was obvious she'd been crying while he cleaned himself up. \n\n\"What's wrong now?\"\n\n\"Why do you make it feel good? Why can't you just let me suffer when you force me to fuck you, why do you always make my body betray me?\"\n\nTam frowned. \"You'd rather be in pain?\"\n\n\"No, I don't want to be in pain. I just don't want to keep coming from being your little fuck slut slave. I should hate this, I do hate this, but your damn spell makes me want it.\" Yelena shivered. \"I'm sorry, Master, I didn't want to complain. The spell makes me answer, even when I'm trying to be a good slave.\"\n\nTam chuckled. \"And why are you trying to be a good slave?\"\n\n\"So that you won't punish me. And also because I want to learn magic. Master.\" Yelena blushed and looked away. \n\n\"I know, pet, I know. Here, let's get you out of the sirik and get you properly dressed again. Even though I enjoy looking at your pretty little tits, I think you'll be a better student dressed and relaxed.\"\n\nYelena sighed and nodded. She sat there docilely as Tam used the key to unlock the manacles from her wrists and ankles then release the sirik from her collar. Picking up her top from the floor, she tied it into place and knelt quietly by the couch. Tam sat on the couch and placed his hand on her shoulder, gently rubbing it. She flinched slightly at his touch then forced herself to be still. \n\nTam thought for a moment. \"I'm not completely sure why I enjoy seeing you take pleasure when I use you. Part of it is that I want you to find contentment in your fate and I think pleasure will help with that, but that's not the main reason. I think I like the sensation of control. Anyone could keep you in chains and force himself on you, but no one else can make you lose yourself in passion like I can. I'm the only one who can master you completely.\"\n\nYelena glanced up at him with a frown. \"Don't get so full of yourself. It's the spell that masters me, not you.\"\n\nTam laughed. \"True enough, slave. But the spell is my invention, and I'm the only one who knows how to cast it. So I really am the only one in the world who can do this to you.\"\n\nYelena batted her eyelashes at him in a mock display of awe. \"Oh, lucky me, to have fallen into the grasp of such a powerful master. Surely God smiled upon me to grant me this privilege.\"\n\n\"I doubt your foreign god had anything to do with it. But if he did, I certainly owe him a favor.\"\n\nYelena leaned back against the couch, making herself more comfortable. \"Well, however that blow job made me feel, at least it put you in a good mood. Any chance you feel like actually teaching me some magic now?\"\n\n\"In a minute. Before we get started, I wanted to ask your opinion on Grace coming to live with us. What did you think of her?\"\n\nYelena frowned in thought. \"We didn't interact that much, so I just have a general impression. She's beautiful, of course. And she lives up to her name; I'm kind of jealous of how smoothly she moves and the whole general air she had. And she was so completely submissive -- it's like she's the perfect slave, no concern for anything except pleasing her master. She frightens me a little, honestly. I'm scared you're going to turn me into her eventually.\"\n\n\"You shouldn't worry too much about that; I think your natural temperament is too fiery to ever really match Grace's nature, no matter how obedient you become. We both know I could alter your temperament, but I find I'm quite fond of you the way you are.\" \n\n\"Thank you, I like my temperament too.\" Yelena blushed slightly at the compliment then glared at him for a moment before forcing her eyes down submissively. \n\n\"Still, you could learn a few things from her, and you'll have the opportunity. Study her behavior when she's here, and if she's open to it, ask her how she finds contentment in her slavery. You're never going to be free, so you might as well see if you can learn something from her.\"\n\n\"Thank you for that reminder.\" Yelena scowled at the carpet.\n\n\"Oh, don't pout. You've emptied my balls and sated my curiosity, I'm ready to start teaching you magic.\"\n\nYelena brightened up a little at that. She was still in a bit of a sour mood when they started, but as the morning wore on she lost herself in the process of learning and forgot about her troubles for a while. \n\nTam started by testing her ability to reach her chi. He timed her attempts, having her start over after five minutes. She failed her first attempt, her emotions too unsettled, but succeeded on three of the next four tries, reaching her chi in just under three minutes on the final attempt. Simply touching her chi helped to calm Yelena and brought a tiny smile to her lips each time she succeeded.\n\nSatisfied with her progress in touching chi, Tam had her maintain the state and walked her through a basic chi strengthening exercise, meant to gradually increase the size of her reservoir and let her reach it more quickly. He had to use a few magical commands to help her get it right, but she adapted to it quickly. \n\nAfter Yelena had repeated the entire set of exercises three times in a row without error, he decided to go ahead and teach her an actual chi working. His own teacher had kept him on the basic exercises for weeks, but the ability to use the spell to push her mind down the right track let Tam accelerate Yelena's training at a ridiculous pace. \n\nCommanding her into a deeper trance, he used his control to demonstrate how chi could be used for self-healing. Under his guidance, Yelena guided and focused her chi to her various lingering injuries, holding it in place and slowly circulating her chi at the correct pace to accelerate the body's natural healing. \n\nLetting her out of the tight control, he had her attempt it on her own. He kept her chi glowing in his vision as she did so, correcting her when she made mistakes. When he was satisfied that she would not accidentally injure herself in the process, he told her to spend the rest of the morning practicing healing.\n\nLeaving Yelena settled in her lotus pose on the couch, Tam returned to his reading, browsing another of the texts he had purchased the day before. When it was time for lunch, he roused Yelena from her trance to check her progress. She stared at her body in shock. All of her lingering bruises had healed completely, except for the black eye he had given her, which had faded to a faint discoloration. Her ass was white again, no marks remaining from the spanking or the switching, and the tattoo was healed. She had also made some progress with her piercings though they were still slightly sensitive. Tam judged that another similar session would have her in perfect health. \n\nHe checked her chi reservoir; she'd used up more than three quarters of her chi, leaving her quite low. Tam could have done the same self-healing with a fraction of the chi in a few minutes, but Yelena's efficiency couldn't match his years of experience. It seemed using the control spell didn't completely override reality, though they had still done in a single morning what most students took weeks or months to learn. \n\nTam prohibited her from attempting to use any more chi that day, wanting to ensure she still had a reserve. Novice chi users would sometimes pass out, draining themselves too deeply; Yelena wasn't in danger of that yet, but she was close, and she didn't know her own abilities well enough yet to skirt the line safely.\n\nTam had Cook prepare an extra-large lunch, which he and Yelena ate alone, attended by Luong Fai. Aside from their customary breakfasts together, Lin Song usually ate her meals in the servant's quarters with her husband and the rest of the staff. \n\nWhile she and Tam ate, Yelena learned why Tam had requested a large lunch. She was ravenous, her body having burned energy to fuel the chi healing. Tam didn't force her to eat from his hand, knowing how hungry she would be; she consumed the double serving of lunch ravenously from the bowl he set on the floor for her. She was still licking stray grains of rice off her fingers when Ho Tien arrived to inform Tam that they had a visitor. \n\nTam looked up at his apprentice, who had the duty of minding the gate today in place of Bin Hsui. \"Did Wong Gao send the girl over already?\"\n\nHo Tien bowed. \"No teacher. It is the lady Su Wen, with attendants. I brought her to the guest sitting room then came to fetch you immediately.\"\n\nTam blinked in surprise. Su Wen visiting his manor unannounced was a surprise, and surprises were not good when they involved the Tong lieutenant. At least the boy hadn't insulted her by leaving her at the gate. \n\n\"Well done. I'll go speak to her at once. Lock the gate then come and wait outside the sitting room in case I need you.\" Ho Tien bowed and scrambled off. \n\nTam rose then glanced at Luong Fai where she stood against the wall, his mind working quickly. \"Take Yelena to Lin Song and have her keep her in the servant's quarters. I want her out of sight of Su Wen's attendants and under guard unless I request her presence. Her shackles are still in my study, you'll need to retrieve them once you hand her off to Lin Song. After that's taken care of, prepare a tea tray in case our guest wants some.\" \n\nHe tossed the key to Yelena's sirik to the maid and hurried off. Yelena looked like she wanted to bolt, but Tam didn't have time to calm her down. He'd have to trust to his staff to handle her for the moment. \n\nTam cut across the central courtyard to save a few steps on his way to the wing of his manor reserved for his personal use. Through the small band of trees that screened the courtyard from the gate, he could see a sedan chair just inside the entrance, with a pair of porters relaxing beside it. \n\nHe stepped into the hallway that ran the length of his wing of the manor and saw the familiar broken-nosed face of Huu Shen, one of Su Wen's primary enforcers. The big man was accompanied a younger thug whose name Tam hadn't learned; he looked familiar, and after a moment Tam placed the younger man as Huu Shen's apprentice, the one who had helped the big man carry Yelena to Tam's manor hidden in a basket. Tam wasn't sure what the significance of Su Wen choosing these two as her bodyguards today was, but he suspected it wasn't coincidence that two of the three Tong members who had been involved with Tam's purchase of Yelena were in attendance. He was glad that at least that rat Chiang Lu wasn't with them. \n\n\"Pleasant day, doctor.\" Huu Shen lazily saluted Tam from where he was leaning against the door. \n\nTam nodded in response. \"A pleasant day to you as well, Huu Shen. Shall I attend your lady?\"\n\n\"Yeah, that's pretty much the idea.\" The big man grinned and waved at the door. Tam bridled slightly at being invited to attend someone in his own home, but the thug was being friendly and that seemed to indicate that Su Wen's visit might not be threatening. He inclined his head slightly again in thanks and stepped into his sitting room. \n\nTam made sure there were no outward signs of his nerves as he entered the room. Dealing with Su Wen was a delicate process, and he preferred to know what to expect before a meeting. She hadn't visited his home since the first night she had demanded his medical services, sending messengers instead when she required him. \n\nSu Wen was standing at the far wall, admiring a piece of calligraphy he had hanging there as decoration. As always, she was the picture of refined style, her small stature and careful dress concealing the danger she represented. She turned on hearing his entrance and smiled. \n\n\"A very fine piece. Tsui Mai, if I guess correctly.\"\n\nTam bowed. \"You know your calligraphy. I keep that piece as a reminder of how far my own humble skill with the art is from that of a true master's.\"\n\n\"It is truly a beautiful piece. You have excellent taste, as I have come to expect from you.\"\n\n\"Thank you, Honored Lady.\"\n\nShe smiled slightly again. \"I'm sure you're wondering why I've visited you unannounced. I apologize for the rudeness.\"\n\n\"You are always welcome in my home. Please do not even consider it.\"\n\n\"Thank you, Doctor Hsien. May I be seated?\"\n\n\"Of course.\" Tam gestured her towards the best chair then sat down across from her. \"How may I assist you today, Honored Lady?\"\n\n\"Please, I've told you before, there's no need to be so formal.\"\n\n\"Of course, Su Wen. Thank you.\"\n\nShe waved her hand, acknowledging his thanks but implying there was no need. \"I've come to give you an update on the results of the war for control of the underworld in the foreign quarter. I'm afraid I must also impose on your kindness, as I have some more questions I must ask the foreign girl.\"\n\n\"Of course, it would be my pleasure to make her available. Would you like some tea while you question her? I've told my maid to prepare some.\"\n\n\"Tea would be delightful.\"\n\nTam bowed slightly and stepped outside. Ho Tien was waiting in the hallway, leaning against the wall opposite Huu Shen and trying to not look intimidated. A quick word from Tam sent the teenager to fetch Yelena and the tea.\n\nTam relaxed slightly as he stepped back into the room. Questioning Yelena was a simple enough reason for Su Wen to visit, though it was still slightly surprising that she had come unannounced.\n\nSince it would be rude to discuss business before the tea arrived, Tam and Su Wen spent the next few minutes exchanging idle pleasantries until Luong Fai and Yelena arrived. The slave girl was carrying the tea tray and locked in her sirik; the maid presented and poured the tea, then retreated back outside. Yelena knelt at Tam's feet, keeping her head down and doing her best to be unobtrusive.\n\nTam took the first sip of tea, as the host. Once he had done so, Su Wen took her own sip and let out a small sigh of satisfaction. The ritual satisfied, she set down her cup and got down to business.\n\n\"In general, the shadow war has gone well. Thanks to the intelligence from your girl, we were able to ambush the foreign cartel at multiple points, wiping out most of their leadership and taking control of their territory. There has been some resistance, but most of the survivors have sworn loyalty to the Silver Tong, and we are in control of the district. One of the reasons I stopped by was to tell you that you can do whatever you please with your girl now; there is no need to attempt to keep her hidden any longer.\"\n\nYelena tensed at hearing of the deaths of so many of her friends and colleagues, but kept her head down. Tam kept an eye on her, but devoted the majority of his focus to the woman seated across from him.\n\n\"Congratulations, Su Wen. Such a rapid victory is a testament to the strength of the Silver Tong.\"\n\n\"It would not have been possible without the intelligence gained from your girl. Your truth spell served the Tong well in the past, and it has done so again. A significant portion of the credit for this victory goes to you, Hsien Tam.\"\n\n\"I have no need for credit. You pay me well for my services.\"\n\nSu Wen laughed softly. \"Don't worry; I have no plans to reveal your abilities to the rest of the Silver Tong. Only I and a small number of my most loyal men know the truth of my interrogation methods.\"\n\n\"Thank you, my lady. You know I only wish to practice my craft, and make a small comfortable living for myself.\"\n\nSu Wen nodded. \"You are a very humble man for one so skilled, Tam. Still, despite the advantage of surprise, the war was not without casualties. Second Tiger and Fifth Tiger each had setbacks in the attacks they led. Fifth Tiger died and Second Tiger was gravely injured in the battle. Second Tiger's men were at least victorious, with only two foreigners escaping them, and most of the fighters who defeated Fifth Tiger surrendered once they realized how badly the rest of the night had gone for their side.\"\n\nSu Wen took another sip of her tea and continued. \"I was busy with my own portion of the ambush, so I do not know how exactly the failed attacks went awry. It seems there were more foreigners gathered at the location Fifth Tiger attacked than we expected; a shame, but no intelligence is perfect.\" \n\nShe smiled slightly, a cold expression. \"Second Tiger's case is more interesting - apparently the foreigners had the aid of a magician, which your girl somehow failed to mention. Second Tiger sustained burns over the majority of his body and is still suffering painfully; a doctor was called to attend him but was unable to heal him. The Tong Master executed the man for his failure.\"\n\nTam thought he saw Yelena twitch at that news, but he was more focused on what Su Wen had said. He sensed a potential trap here. \"Sad as it is, some wounds are beyond the skill of a healer. I had heard that chi use was a requirement to be named a Tiger; cannot he heal himself with his chi?\"",
        "Su Wen smiled. \"It seems he is in so much pain from the burns that he cannot gather his chi. I heard that the doctor tried dosing him with poppy milk; while that deadened his pain, it similarly left him unable to gather enough focus to heal himself.\"\n\n\"I have heard of such cases before. In such a situation, I would likely increase the dose of poppy milk until the man can pass to the afterlife quietly and without suffering.\"\n\n\"Only Second Tiger himself could make that choice; or in his incapacitated state, the Tong Master could make the choice for him. But he continues to look for a healer. I fear Second Tiger will suffer for quite some time before his body finally gives out. The Tong Master has offered a reward for anyone who can heal him, but after he executed the healer who failed, no one has been willing to make the attempt.\" Su Wen flashed that cold smile again. \n\n\"A wise course of action.\"\n\nShe laughed softly. \"Don't worry, I'm not here to request you make the attempt. As you said, some cases are beyond a healer's skill, and you'd be of no use to me if you were executed for failure.\"\n\n\"I appreciate your consideration.\" Tam relaxed slightly; he'd been worried about that possibility.\n\n\"It's the aftermath of the attacks that concerns me now. The foreign magician who burned Second Tiger and the foreign lieutenant who escaped with her haven't been seen since; none of their followers who surrendered seem to know where they are hiding. The Tong Master has announced that Fifth Tiger's territory will be awarded to whoever captures them. Since Fifth Tiger was due to gain a significant portion of the foreign quarter business, this is a rich prize. The Tong Master is even willing to make that person a Silver Tiger whether or not they can wield chi.\"\n\nTam raised an eyebrow. \"Of course, if it was a woman who avenged Fifth Tiger, perhaps one who was already a Silver Tiger, there would be no need to appoint a new Tiger.\"\n\n\"Consolidating Fifth Tiger's men with my own, adding his businesses to mine, his share of the foreign quarter to the section I have already inherited . . . I would be in a stronger position than even First Tiger. I would still respect First and Second Tiger in the hierarchy assuming Second somehow recovers, but with that wealth and the ability to gain information you have provided me, I would be second only to the Tong Master himself in this city.\"\n\n\"I wish you good fortune in your hunt then, Third Tiger. I assume the questions you have for Yelena are in regard to that hunt?\"\n\n\"Indeed. May I begin?\"\n\n\"My slave is at your disposal, my patron.\" Tam tapped Yelena on the shoulder, and she shuffled forward slightly on her knees, her eyes still on the floor. \n\n\"Stand up and come over here, girl. I want to take a good look at you.\" \n\nYelena rose to her feet and took a few small steps forward, clearly reluctant to approach the woman who had ordered her capture and enslavement. \n\n\"Hmm. You're a pretty little bird in your silks and chains. A shame your feathers will take so long to grow back. Turn around, little bird, let me see your back.\"\n\nYelena blushed but obeyed, shuffling around slowly in her chains. \n\n\"Ah, that's a nice mark on your back there. I see your owner has chosen to stake a claim.\" Su Wen reached out and traced Yelena's tattoo with one of her lacquered nails. Yelena shivered slightly and closed her eyes but held still. \n\nTam watched curiously. Su Wen seemed like a cat toying with her food, amusing herself at Yelena's obvious discomfort.\n\nSu Wen smirked and trailed her finger down across Yelena's hip. \"You're much better behaved than when we last met, little bird. I thought you might have more marks on you, though. Has your master not needed a firm hand to control you?\"\n\n\"Master has been very firm with me, ma'am. He is also a skilled healer, as I have had the chance to learn repeatedly.\" Yelena answered immediately, as she was compelled to do. Tam noted that while nothing she had said was a lie, the answer left some details about her healing process out. It seemed Yelena had decided that the portion of her rule which allowed her to be deceptive extended to her new ability to use chi. \n\nIt was an intriguing development that required multiple steps of logic. Yelena first had to assume that learning chi so rapidly implied that the enchantment did more than compel truth. Then she must have decided that this meant that she had to conceal her new abilities to preserve the larger secret. Tam knew the spell itself was not complex enough to prompt that. He had always known that the spell would rely on the subject's mind to understand and implement the verbal instructions, but he hadn't been sure if something this complex would work. \n\nThe benefit was that he could potentially use more complex orders and see them carried out without needing to spell out every detail; the danger was that if he was careless with the wording of the commands, Yelena might be able to find a loophole by convincing herself that she was following an acceptable interpretation of the command. Tam wasn't sure if Yelena herself had realized what her simple obfuscation implied; he could find out with a simple question to her once Su Wen left, but if she was ignorant, it would be foolish to let her know about the potential to misinterpret his orders. \n\n\"It sounds like you are describing my adoptive father, ma'am.\" Yelena had turned around again to face Su Wen as she answered.\n\nTam blinked and refocused on the conversation. He'd let himself become distracted thinking about the spell, and missed whatever question Su Wen had just asked. He set aside thoughts of magic theory and focused on the next question.\n\n\"That would be 'Alexander Mikhailovich', if I remember correctly from our first session?\" Su Wen frowned in distaste as she pronounced the foreign name.\n\n\"Yes ma'am.\"\n\n\"It seems he is a skilled fighter, as you said. You're sure he can't use magic?\"\n\n\"I've known him since I was seven years old, ma'am. I'm sure he can't use magic.\"\n\n\"And you still maintain that none of the other members of your cartel who are in this city are magicians?\"\n\n\"Yes ma'am. You asked about that the first night and you know that I can't lie.\"\n\n\"You can't lie, but perhaps you can omit details. You never spoke of a red haired woman when you were discussing the principal members. Hair like fire, a scar on her eyebrow, that's the description of the magician who burned Second Tiger.\"\n\nYelena smiled very slightly. \"A scar on her right eyebrow? Placed about here?\" She touched her own eyebrow to indicate the spot. \n\n\"Yes, that's what I was told. Why didn't you mention her before?\"\n\n\"Because she wasn't in the city. You only asked about our fighters and leaders who were in the city, and how we communicated with our leadership back in Rus. You never asked about people who were traveling here. And I wasn't sure when she would arrive -- it's a long journey, full of unpredictability.\"\n\nSu Wen laughed. \"So, you aren't completely broken then, little bird. A point to you. I'd be more angry with you, if it wasn't good fortune for me that Second Tiger ran into her.\"\n\n\"I hope he wasn't the only one of your men that she killed or maimed.\"\n\nThere was a resounding crack and Yelena's head snapped to the side, a red handprint on her cheek. Tam had barely even seen Su Wen's hand move.\n\n\"Be respectful, little bird. I'll allow you to feel some pleasure at the point you scored, but don't forget who I am.\"\n\n\"Ah, ow. Yes ma'am.\" Yelena flinched back slightly from the smaller woman.\n\n\"Who is the red haired woman, and what are her abilities?\"\n\n\"Her name is Irina Romanovna. She's my father's half-sister, and she's a witch. I honestly don't know too much about her. She's ten years younger than my father, and has a different father. Witches and wizards in my homeland keep themselves shrouded in mystery, but I've heard that she specializes in fire and air magic. She's a powerful woman who is easily slighted and carries grudges for years.\"\n\n\"So, you suspect neither she nor your father will be willing to surrender to us then.\"\n\n\"No, ma'am.\"\n\n\"How do you think they will respond to our victory?\"\n\n\"They'll both be out for revenge. If they're laying low now, it's probably only so that they can gather intelligence. They'll either attack you where you're weak, or retreat home to gather an army and return. The cartel won't allow an attack like this to happen without a response, it would make them look weak.\"\n\n\"Hmm. Tell me about your father again, the places he frequents, where he might be hiding from us.\"\n\nYelena answered, and Su Wen followed up with more questions. She clearly intended to avoid leaving any gaps in her questions this time, and repeated her questions again and again with slightly different wording, pulling out everything Yelena knew about her adoptive aunt and father. By the time she finished, the tea had long since been finished and Yelena was hoarse from talking. \n\nEventually Su Wen seemed satisfied, and thanked Tam again for the use of his slave. Tam assured it her that no thanks were needed and escorted her to her sedan chair, leaving Yelena behind in the sitting room. As he offered Su Wen his hand to help her into the chair, he felt her slip something into his hand. Tam palmed the object discretely and bowed, wishing her and her bodyguards a polite farewell. \n\nOnce the Tong had departed, Tam left Ho Tien behind to close the gate and strolled back inside. As soon as he was out of the courtyard, he glanced around to make sure the hallway was clear then opened his hand to see what Su Wen had passed him. It was a small piece of paper, tightly folded into the shape of a seven pointed star. He carefully unfolded it and smoothed it out. On the paper, the name of a tea house was written, along with a date and time. Beneath that was simply the character 'Wen'. The date and time were an evening during the coming week. \n\nTam frowned -- an invitation of some sort? If Su Wen wanted to see him, she had just demonstrated that she could drop by his home at any time. Why such a discreet invitation, hidden even from her own men? His instincts told him to ignore it, but it would be dangerous to displease Su Wen. At least he had a few days before he needed to decide on his response. \n\nTam tried to fold the small piece of paper back into the star shape, but origami was a craft he'd never learned. Even with the creases to guide him, he couldn't get the paper back to its original shape. With an annoyed grunt he simply folded it in half twice and slipped it into his pocket. \n\nHe returned to the sitting room to collect Yelena. She was curled up on one of the chairs, her knees pulled up in front of her chest, her arms locked tight around them. She looked rattled. Tam paused a moment to gather his thoughts. He had been focused on Su Wen throughout the interview, trying to read her mood and watch for signs of danger. Yelena had held together well, but it was obvious as he looked at her now that the news of the Tong victory over her friends had hit the young girl hard. Tam took a seat across from her and waited quietly. \n\nYelena finally looked up at him. \"Did you even send that letter I wrote?\"\n\n\"Yes, I did. I sent it first thing the next morning. I heard rumors later that day that the attacks had already been launched the night before, while you were earning the letter.\"\n\n\"And you didn't tell me?\" Her eyes flashed with anger.\n\nTam shrugged. \"There wasn't anything to be done about it at that point. I didn't want to upset you.\"\n\n\"They're my friends, my family! I deserved to know.\"\n\n\"Perhaps you did. Still, there's nothing we could have done about it. And that part of your life is gone now. Effectively, the old you died when the Tong captured you. There is no more Yelena Alexovna, criminal translator. There is only my slave. Focusing on your past won't help you adapt to your current reality.\"\n\n\"I hate you. If I could, I would slice your throat and let you bleed out on this floor that I had to polish yesterday. Your damned Tong friend too, I'd stab her in the heart and feel nothing but joy.\"\n\nTam shrugged again. \"I expect no less. It's a natural human reaction.\" \n\n\"I can't even slap you; your stupid spell will make me pull the blow.\"\n\n\"I feel no need to change things; I enjoy not being slapped. I'd advise you to stop holding on to that hate. It won't do you any good.\"\n\n\"You're wrong. I'll treasure my hate; it will help me survive this hell you've trapped me in.\" Yelena spat on the floor, her face set in a defiant scowl.\n\n\"As you wish. As long as it doesn't affect your ability to serve me, you can feel however you like. I warn you though, Yelena -- the promise to let you keep your mind intact is conditional on your continued good behavior. If your hate poisons you, the next experiment we conduct will be seeing how your mind copes with a rule that forbids you from hating me. Do you understand me?\"\n\nYelena shuddered. \"Yes Master, I understand. You can snap me a like a twig whenever you want to. I will do my best to be obedient.\"\n\n\"That's all I ask. Start by cleaning the floor where you spat on it.\"\n\nYelena glared at him. \"I don't have anything to clean it with.\"\n\n\"Lick it clean, slave.\" Tam didn't make it a magical command; he wanted Yelena to have to choose to humiliate herself in obedience.\n\nShe glowered at him for a moment, but the threat of altering her mind was too much in the end. Yelena slid off the chair and crouched on the floor, carefully licking the small globule of spit off the polished wood. Once she was done, she leaned forward without a command and rubbed her breasts against the wet spot, drying the wood with her silk top. Finished, she sat back on her heels and glared up at Tam.\n\n\"Nicely done, slave. Now, let's see what that sharp mind of yours took from the conversation. What can you guess about Su Wen's actions and motivations based on what she said and how she acted?\"\n\nYelena's eyes narrowed in thought. The compulsion to answer forced her mind to focus on the question, instead of dwelling on her hatred and fear. \"She seemed genuinely surprised by Irina's presence, as I had hoped, but I think she betrayed the Tiger who died, Fifth Tiger. She probably lied about our strength to make him underestimate the force he was going up against. She's a snake, with no loyalty to anyone but herself. It's a shame she wasn't the one Irina burned.\"\n\n\"I agree with your assessment of her character. Since she's my patron, I'll disagree with your desire for her to be burned; I'm glad she's still alive and in a strong position. What about the discussion of the injuries to Second Tiger?\"\n\n\"I'm not sure why she told you all those details. I thought maybe she had some plan to have you try and heal him, or possibly have you kill him while pretending to heal him. If that was the case though, she wouldn't have told you about the Tong Master killing the healer who failed.\"\n\n\"I don't quite understand it either; maybe she was just gloating at another rival's fall, or perhaps she wasn't sure of my assessment. If I'd said I knew a way to heal the man, she could have turned that into a means to place Second Tiger in her debt. Not understanding it worries me. Can you see any danger to me from this situation?\"\n\n\"No Master, at least not given what we know. Maybe it's like you said, and she just wasn't sure if you could heal him or not.\"\n\nTam frowned and drummed his fingers on his knee. He was still worried, but at least he and Yelena were agreed that there was no obvious danger. \n\n\"Master?\"\n\nTam glanced up. \"Yes?\"\n\n\"Can I ask a question about healing?\"\n\n\"Of course.\"\n\n\"You seemed to imply that chi healing could heal even horrific burns, when you asked why Second Tiger didn't heal himself.\"\n\n\"It can. Given enough chi and enough skill, there are very few limits to what can be done. There are even recorded cases of a supremely skilled chi user reattaching their severed hand or foot in the middle of battle.\"\n\nYelena's eyes widened. \"That's amazing. Could you do that?\"\n\n\"I don't know. It takes an incredible strength of will to perform such fine chi manipulation while enduring the trauma of a severe injury. I might be able to do it, but I'd prefer to avoid ever putting myself in the situation where I'd have to find out. It's not the sort of experiment you make if there's a chance of failure.\" Tam grinned.\n\nYelena frowned in thought. \"There's something I still don't understand. You use your chi sometimes when healing your patients, right?\"\n\nTam nodded. \"You're wondering why I can't use my chi to heal him, since he can't use his own?\"\n\n\"Exactly.\"\n\n\"Chi healing when used on another person is actually a completely different form of medicine than self-healing. When you self-heal like you did this morning, you are using your chi to accelerate and enhance your natural ability to heal. Your chi is a part of you, and your body uses it in natural healing, just as it does in keeping your heart beating, your lungs pumping, your muscles moving. The manipulation simply allows you do things faster and better than your body normally could. When I have to use my chi to heal a patient, it's a foreign presence. It's like a blunt object, or sometimes a scalpel -- I force my chi into the patient's body through spells painted on their skin, then manipulate it to push their body in the direction it needs to go. It's more of a tool of last resort. For most cases, it's actually more effective to simply treat the patient with herbal remedies like pills and poultices. Something like the burns Su Wen described would require draining my chi repeatedly over several days, and the trauma of my chi forcing itself into his system would likely overwhelm his system and kill him before I could finish healing him.\"\n\nYelena nodded absently. \"That makes sense. There's so much I don't know about this. Thank you for explaining.\"\n\nTam studied her face. \"I recognize that expression. You've thought of something. What is it?\"\n\nYelena glanced up. \"Oh, I don't know if it's anything. I was just thinking that you sort of externally used my chi to heal me this morning when you were teaching me how to heal myself. Not really, of course, since it was my chi you were using. But you were in control of it. So I guess we technically did another new thing that's impossible.\" \n\nShe blinked suddenly. \"Oh God, you're going to burn me now or do something else that leaves me in so much pain that I can't reach my chi, aren't you, just to test and see if you can use my chi to heal it. Please, Master, don't do that, please.\"\n\nTam grinned. \"There's no need for that. I can just dose you with poppy milk until you can't reach your chi then test it that way. Much less painful. Still, it's a great insight. We'll test it this evening so that you can sleep off the drug afterwards.\"\n\nYelena rolled her eyes. \"I'm not ecstatic about being drugged either, but it's much better than being burned. Thank you Master, I suppose. You prick.\"\n\n\"You're welcome.\" Tam grinned again. He found that he didn't mind Yelena's insults; in his normal life, he kept a mental ledger of any slights made against him, taking revenge when he could do so safely. But Yelena was so defenseless against him that he was just amused instead -- there was no threat to him in her defiance. He liked that she had enough spirit to rail against him, even knowing that he could destroy her mind if she pushed him too far. \n\nShe was watching him carefully, of course. Whenever Tam was in the same room with her, Yelena always seemed to be hyper aware of him, monitoring him to see if she was in any danger. \n\nSeeing that he was amused by her jab, she relaxed slightly, sitting as comfortably as she could in her chains. \"If you did send my letter, thank you. If he received it, it means that my father knows that none of his usual haunts are safe, so none of the information I gave that woman today will help her find him. At least, I hope so.\"",
        "\"I did send it. I have no particular feeling one way or another about your hopes for your father, though one question does occur to me. Do you think he will try to find you?\"\n\nYelena sighed. \"I don't know. He's always been good to me, but his first loyalty is to the cartel. He adopted me because he saw that I could be a good asset for the cartel, and trained me for that purpose. Since him rescuing me is my best hope for freedom, I hope that he'll come for me. But I can't lie, so I have to say that I don't know.\"\n\n\"What do you think he is most likely to do?\"\n\n\"If I tried to put myself in his position, I think I'd send a message home and then focus on staying alive and hurting the Tong however I could. If he's together with Irina, the two of them could make a dangerous small strike team, hitting the Tong where they're weak. Many of the cartel members who switched sides will probably still be willing to feed him information, just in case the cartel wins the second phase of the war when our reinforcements come.\"\n\n\"How long will it take for these reinforcements to come?\"\n\n\"The message would be sent by a magically trained messenger bird, assuming the Tong didn't destroy the coop. That will take almost a week to reach home. Then the cartel will need to decide on a response and gather forces. After that, probably nine or ten months of travel; it's a long journey. So, nine months at the earliest, maybe a year or a little more. It will be hard for father and Irina to hide out for that long.\" Yelena sighed.\n\nTam leaned back and pondered, trying to picture the power flow in the underworld over the next year. Yelena coughed slightly. \n\n\"Master?\"\n\n\"Yes?\"\n\n\"If you don't mind my asking, why did you create your control spell? I've been mostly focused on trying to survive it, but now that I'm thinking about it, it doesn't make sense that you'd create it just for someone like me. You could buy a normal slave girl and get most of the same benefit you get from me. Are you plotting to take over the Tong or something like that?\"\n\nTam frowned. \"Part of it was just to see if I could. I've been fascinated by the way chi interacts with the human mind since I first started studying medicine. It was a journey of discovery, a test of my abilities. But yes, I do have grander dreams. I want power and wealth; I want to never have to worry about my future, to be in a position where I'm impregnable, where no one can ever threaten me. I haven't told you much about my past -- I wasn't born educated and well-off. My father is a farmer -- I was the seventh child, and small and frail as a child, not much use on a farm with several older brothers already in line ahead of me to inherit it.\"\n\n\"That seems like a long way from here.\" Yelena gestured with a manacled hand at the elegantly furnished room they sat in.\n\n\"A travelling healer took me on as an apprentice, luckily for me. My teacher could have lived like I do; he was extremely skilled in medicine and chi use. But he was a fool despite all his knowledge -- he believed that the gods had given him his gifts so that he could help others, and he travelled the countryside healing those who could not normally afford a healer of his skills. We would stop for times at monasteries, to rest and exchange lore, but most of my apprenticeship was spent on the road between different peasant villages. I never told my master he was a fool, of course. I needed his knowledge if I didn't want to spend my life planting rice for one of my older brothers, so I pretended to absorb his outlook as well as his knowledge. Eventually he declared that I had learned all I could from him, blessed me and sent me on my way, so that he could take on another disciple. I came here and started a practice. It was small at first, but my master had taught me enough that I was soon in demand as one of the best healers in the city. I worked, and saved, and gradually my skills brought me to the position you see me in today.\"\n\nYelena was staring at him with a wistful look in her green eyes, but she didn't interrupt. Tam felt a momentary sense of oddness -- he'd never shared this much of his history with anyone, unwilling to give anyone a possible advantage over him. But Yelena couldn't betray him unless he let her. He continued. \n\n\"I'm making a small alteration to your rule about secrecy -- you will keep any and all personal details about me like what I'm sharing now a secret in the same way that you keep the control spell secret. Anyway, I've come a long way from the little boy in the rice fields who didn't even know how to read or write. But I'm not secure yet -- everything I have can still be taken away from me by someone truly powerful. I think I won't be content until no one can touch me. I can't make enough money to be truly secure; no one can unless they're a noble with true wealth. I've come as far as I can with medicine; the spell is the next step. Now that I have you, experimenting with the spell is my focus at the moment; once I'm sure of the strengths and weaknesses of the spell, I'll focus on finding new subjects to enchant.\"\n\n\"The spell has weaknesses? All your tests seem to indicate you have perfect control over me.\" Yelena watched his face closely for clues.\n\nTam thought for a moment. He decided against discussing the way she had surprised him with her small deception of Su Wen; there were other weaknesses he could discuss more safely. \"Range is one of the major weaknesses. I can't control you unless you're near me. When you're not in my presence, I have to rely on rules, which don't have as much flexibility and fine control. Though to be honest we haven't really experimented with rules too extensively yet.\"\n\nHe continued. \"The other huge weakness at the moment is that the spell requires the subject to be helpless for several hours while I cast it. Now that I've found the technique from Sian Fei, I can remove the weakness where the subject is shaved bald as part of the process, but I don't think there's any way to avoid the need to subdue the subject and keep them locked away for a few hours. The process is too complicated and intensive.\"\n\nYelena nodded. \"That makes sense. It's not like you can go up to the Governor or someone like that and ask him to take a nap in your lab, and then he wakes up and he's your slave.\"\n\n\"Exactly. I have had some ideas, but they're all risky. For the moment I prefer taking things slowly and experimenting with you. Speaking of which, we've spent a large portion of the day teaching you healing and letting Su Wen question you. I have to reopen my practice tomorrow, and soon I'll be losing some portion of your time to tutor Grace. Let's make the most of the rest of the afternoon and do some experiments.\"\n\nYelena sighed. \"Yes Master. What do you have in mind first?\"\n\n\"I'm curious about something a little more esoteric today. Let's go to the lab.\"\n\nTam had Yelena take the tea tray back to the kitchen, and told her to prepare a fresh pot and bring it to the lab. While she was gone, he collected the items he wanted, along with a scroll to use in taking notes on the experiment. When Yelena joined him, she found him seated on a stool next to the lab table, with a length of rope and a strip of black cloth to his left, and another larger cloth covering several objects to his right. Tam unlocked her from her sirik and had her sit across from him to join him in a cup of tea.\n\n\"Before we get started, Yelena, how are you feeling? Physical and emotional status check.\"\n\n\"Yes Master. I'm in the best physical state I've been in since the Tong kidnapped me, after the healing this morning. My throat is a bit dry, and the healing left me a little tired, but the tea is helping. Emotionally, I'm a wreck, both from the constant trauma of being your slave and the shock of hearing that woman talk about killing my friends. But I can put that aside; I'm discovering I have the capacity to wall away the terror, rage and grief and focus on what's in front of me. I'm ready for the next round of experiments, and hoping they won't involve pain.\"\n\n\"I can't promise a complete avoidance of pain, but it should be much less traumatic than the push-ups. What I have in mind is experimenting on my control over your physical sensations. We've already determined that I can remove the pain of a migraine from you with a command; I want to see what else we can do. Numbing the subject to pain has obvious utility if I enchant a warrior at some point, but we're going to do some experiments and see what else we can do. Go ahead and finish your tea before we start though.\"\n\n\"Yes Master.\" Yelena swallowed nervously, her eyes darting occasionally to the various shapes under the cloth, but refrained from making any futile objections.\n\nOnce she had finished her cup of tea and nervously declared herself ready, Tam had Yelena stand and strip. Since he hadn't given her sandals to wear indoors, this simply involved three quick tugs at the knots holding her slave silks in place. She folded both pieces of black silk and set them on the table, then stood before him wearing only her collar and jewelry. Tam felt an immediate urge to fuck the gorgeous woman standing nude before him, but that would distract from what he wanted to do. A mild chi manipulation killed his erection before it could rise and force Yelena into an aroused state.\n\nTam had the naked girl climb onto her stool and tie one end of the rope through a hook set into one of the ceiling beams. It had originally been placed there to support a pulley for hoisting animals onto the lab table for experiments, but it served his current purposes well enough.\n\nOnce the rope was secure, Tam had Yelena stand beneath it and lift her hands over her head. Then he bound her wrists together, keeping her arms fully extended. He could have commanded her to keep her hands raised, but he planned to have her in this position for some time, and he thought the rope's support would help ease the strain on her arms. He left her feet free, comfortably planted on the lacquered wood floor. \n\nOnce Yelena was secured, Tam tied a blindfold over her eyes and confirmed that she couldn't see anything. He stepped back and grinned at his helpless experiment subject for a moment. \n\n\"Alright, Yelena. You remember that I don't have to speak to give you commands -- I can do so mentally, and you won't find out what the command was until your body obeys it, like this.\"\n\nYelena made a small sound of surprise as her right leg suddenly left the ground and bent upward, leaving her in a standing split. She wobbled for a moment then recovered. \n\n\"Yes Master.\"\n\n\"Good. We're experimenting with control over your senses today, specifically your sense of touch. I'm going to touch you with various objects. I want you to tell me what you're feeling as we go -- tell me what's touching you and where, how it feels. I'll also be mixing in a few mental commands, but I won't tell you what they are. Just focus on what you feel, and describe it to me as it happens. Oh, and you can go ahead and put your leg down.\"\n\n\"Yes Master.\" She lowered her leg with relief and shifted slightly, trying to stand comfortably despite her nervous anticipation.\n\n\"Alright, we're starting now. Just keep describing what you feel.\"\n\n\"Yes Master. Um, you're touching my side very lightly with something. It feels like . . . a feather, maybe?\"\n\n\"That's correct.\"\n\n\"Ah, and now you're running the feather slowly up my side towards my armpit. Ah, shit, that tickles! Hahaha, please, stop it, Master!\"\n\nTam grinned and continued to tickle her as she squirmed, while giving his first mental command.\n\n\"Oh! Ah, this is strange. I can still feel the feather, but it doesn't tickle anymore. Did you make me stop being ticklish? How on earth does that work? This spell of yours is insane.\"\n\n\"What are you feeling now?\"\n\nYelena shifted her head, trying to look at him in her blindness. \"Um . . . you're not touching me, I think? But I'm very sensitive to touch right now with the blindfold, and I think my armpit feels just a little numb maybe? Did you take away my sensation of touch completely just on my armpit? I can still feel the air on my body and the floor beneath my feet.\"\n\nShe gasped for breath. \"That answers that question. I'm numb all over now. I can't feel anything. Please, Master, make it stop, this is frightening. Oh, God, thank you. Ahahaha, shit, you've been tickling me this entire time? You sadist! Ah, hahaha, oh thank God you stopped. Oh shit that felt strange.\"\n\nTam stepped back and gave Yelena a moment to recover. He put the feather down and picked up the next object from the table.\n\n\"Okay, you're touching me again. It's on my hip this time -- it's something hard and cold, with a couple of small ridges. It feels familiar but I can't place it.\"\n\n\"Perhaps this will help you remember.\"\n\n\"Aaagh! Fuck, it's the shock stick. Ow, ow, ow. Um, you just gave me the first level shock, like you did when I was doing push-ups. I remember now Master, you don't need to do it anymore.\"\n\nTam held the enchanted rod to her hip again, but didn't activate it. He watched closely as he gave Yelena the next mental command. \n\n\"Shiiit! Agh, fuck, ow! Damn it, you just shocked me again. I thought you were supposed to be testing things, not just hurting me randomly to get off.\"\n\n\"We are testing things, Yelena. I didn't actually shock you, I just mentally commanded you to feel the sensation of being shocked.\"\n\nTam was impressed with the spell's work -- as far as he could tell from watching, Yelena's reaction had been exactly the same to the induced shock and the real one -- involuntary muscle spasm, flinching away from the rod, yelps of pain -- if he hadn't made sure his finger was nowhere near the control rune, he would have thought that he had accidentally activated the rod again. \n\nYelena shivered in her bonds. \"Really? That was just the spell, the second time? That's terrifying. I couldn't tell any difference at all.\"\n\n\"I know the shocks are uncomfortable, but the first level isn't so bad. I've tested it on myself, so I know you can handle a few more. We're going to do five more shocks -- tell me where they are, and whether you can tell if they're real or the result of mental commands.\"\n\nYelena groaned. \"Yes Master. Ah, fuck! My right arm, felt real.\"\n\nShe tensed in anticipation. \"Aaaa! Shit, shit, shit. Um, sorry, stomach. Agh! Small of my back, ow. They all feel real.\"\n\nTam stepped back for a moment to let her catch her breath then resumed. \n\n\"Aiii! Oh Jesu, you shocked me right on my nipple you sick fuck. Ow, ow, ow. Um, real? Aaaagh! Ah, ah, ah, shit that hurts. I want to shove that up your ass and make you feel what this feels like.\"\n\nTam set the rod down and helped her get her feet under her; Yelena had lost her footing on the final shock and momentarily hung from the rope, all her weight on her wrists before he steadied her. Once she was upright again he stepped back and waited.\n\n\"Fucking asshole. Um, report: the fifth shock was on my nipple again, and it felt way worse. I think that the fourth one was fake, and the fifth one was real. The shock hurts a lot more on a sensitive spot like that, and the first time you shocked my tit it only felt as bad as when you hit my leg or my back.\"\n\n\"Interesting. Your deduction is correct; in case you're curious, only the fifth one was real. It seems the spell can't perfectly predict a sensation you haven't received, but it can reproduce a remembered response even if it is on a different spot on your body.\"\n\n\"Fascinating.\" Yelena's voice dripped with sarcasm.\n\n\"It really is. Two more shocks, then I promise we're done. Are you ready?\"\n\n\"No, but go ahead. Fucker.\"\n\nTam grinned and gave her a mental command. \n\n\"Fuuuuuck! Shit, ow, right in the tit again. Let me guess, that one was fake, but now that I know what it feels like to get shocked in the tit my body can reproduce it?\"\n\n\"Exactly right. One more -- this one should be interesting.\"\n\nYelena gulped and pressed her legs together, instinctively trying to shield her vagina. Tam thought it was interesting that she expected him to shock her there next, but he had something else in mind.\n\nYelena jerked as he pressed the enchanted rod to her shoulder. \"Hugh. Sorry, my arm spasmed. Repeated shocks seem to be a trauma, if you're taking notes. Are you going to give me that one last 'interesting' one, or just let me kill myself with anticipation?\"\n\n\"That was the last one. I numbed your arm, like with the feather. It seems your muscles still automatically react to the electric shock, even with the sensation reserved.\"\n\n\"Huh. Is that supposed to happen?\"\n\n\"I wasn't sure what to expect. That's why we're experimenting. You can relax now; we're done with the shocks. Most of what's to come will be less intense. Would you like another cup of tea before we move on?\"\n\n\"Yes please. Are you going to untie me?\"\n\n\"Too much trouble. Here, tilt your head back a little.\"\n\nTam held the fresh cup to Yelena's lips and let her slowly sip about half of it. When he took the cup away she sighed and rolled her shoulders as best as she could with her arms tied above her head, then told him to bring on the next test.\n\nTam filled most of the rest of the afternoon with variations on the same test. He used a piece of cloth, a twig, a candle, and one of his acupuncture needles to test her sensations, alternating heightening and numbing her sensitivity to touch. Despite Yelena's fears, he didn't burn her with the candle, just holding the flame close to her or dripping a few drops of hot wax onto her exposed skin. Overall, the results were consistent with the initial experiment. If Yelena had never experienced something (like having hot wax dripped on her pussy), the initial attempt with the spell resulted in something that felt like she would imagine it to feel, though she could tell the difference once he replaced it with the real sensation. Once she'd experienced something, Tam could reproduce it anywhere on her body. \n\nWhen he'd run out of ideas on different things to poke or prod her with, Tam untied Yelena's arms and gave her a quick shoulder rub, but left the blindfold on. He set up a small obstacle course for her with the stools, and used commands to have her navigate it blind. \n\nInterestingly enough, she was clumsier when he used verbal commands instead of mental ones. Even with the spell backing them, her response to a verbal command like \"two steps left, one forward\" was similar to a blindfolded person listening to directions. But when he gave her mental commands she placed her feet exactly where he imagined them moving. After a few test runs, Tam was confident enough that he had her sprint from one side of the room to the other blindfolded, her body moving like a marionette at his command, easily dodging the stools and even ducking and rolling under the table on her final transversal. \n\nHe let Yelena sit down and catch her breath after that final run. She reached for the blindfold then hesitated. \"Please, Master, may I take this off? I haven't been able to see for hours and it's getting to me. And even though I didn't hit anything, it was still terrifying to be running full speed while blind.\"\n\n\"Go ahead and take it off. I think we're done for now, it's getting close to dinner time.\"\n\n\"Thank you Master.\" Yelena let out a sigh of relief as she took the blindfold off, holding a hand in front of her eyes as she adjusted to the light. \n\nTam had a sudden idea as he looked at her. He got up from the stool he was sitting on and walked over to her, taking her hands in his. She looked up at him warily.\n\n\"Yes Master?\"\n\n\"One last test for today. This is going to be uncomfortable for you, but it shouldn't be painful. I've done this test on animals before, so I know it won't harm you, but I'd like to see the effect on a human subject.\"",
        "\"What is it?\"\n\n\"We've just spent a few hours demonstrating that I can take away your sense of touch and restore it, along with the other ways I can manipulate it. We're going to do the same with your vision. I'll take away your sight with a command, and then restore it.\"\n\nYelena shuddered. \"Can I request skipping this one?\"\n\n\"Don't worry, it'll be temporary. There, it's done, no time for anticipation to make it worse.\"\n\nYelena's grabbed his hands, hard, her head swiveling as she stared sightlessly around with wide-open eyes. \"Oh God, I hate this. Please let me see, Master, please. It works, I'm blind, test successful, please let me see again.\"\n\n\"Close your eyes, Yelena. Close your eyes and I'll reverse it; I don't want you to be shocked by the sudden return of light.\"\n\nYelena swallowed hard, her breathing quick and shallow, but obeyed him without the need of a command. Once she'd repeated the process of adjusting to the light, she flung herself forward and hugged Tam hard, pressing her nude body tight against his robe.  \n\nTam made soothing noises and rubbed her shoulders until she calmed. Eventually Yelena's breathing normalized and she let go, shifting back to sit on her stool, avoiding his eyes.\n\n\"That affected you more than I thought it would. What happened, Yelena?\"\n\n\"I don't know. I guess I'm scared of being blind. The magical blindness was so much worse than being blindfolded -- even with that thick blindfold on, I still had a kind of general sense of the outside world, you know? There was a tinge of light that seeped through. Then suddenly there was nothing, just total darkness. Not even darkness, there should be another word for that total absence of light. I was terrified you wouldn't be able to fix it -- I'd never see the sun again, never read another book.\" She shivered in fear. \n\n\"I apologize, Yelena. I would not have done that test if I had known it would affect you that strongly, the data wasn't that important. Do you need some time to recover?\"\n\nShe shook her head. \"No, I'll be okay. Just please don't do that again. And I know it's at your discretion, but I wouldn't mind taking my free hour soon.\"\n\n\"Let's eat first, shall we? It's getting close to dinner time, and I'm sure Cook has something almost ready for us. Go ahead and get dressed and we'll lock you back into your chains.\"\n\n\"Okay Master.\" Yelena was still a little shaken, but she tugged on her silks and waited patiently as Tam locked her sirik to her collar and slipped the cuffs onto her wrists and ankles. \n\nTam locked his lab up behind them as they left, and they returned to the central wing of the manor to wait for dinner. The evening meal passed quietly, and Tam was considering retiring early to his bedroom with Yelena when Ho Tien arrived with the news that they had another set of visitors. This time it actually was Wong Gao's men delivering Grace. \n\nTam decided to give Yelena her free hour while he interviewed Grace. Yelena chose to wander the gardens, enduring the sirik for the chance to enjoy the evening instead of being locked in his chambers. Once he'd seen her off, Tam followed Ho Tien back to the front gate.\n\nWhen he arrived at the gate, he found Gao's assistant Zhu waiting in the front courtyard, accompanied by a sedan chair and four porters. He reflexively compared it to the one Su Wen had arrived in. The chair had hired or owned was slightly larger than the earlier one had been, but both were in the same general style -- well made with premium materials, but no gilt embroidery or flash. Though Gao was a respectable businessman and Su Wen a criminal, both seemed to share the modest style of the well-off merchant class.\n\nZhu bowed to him. \"Sir, Master Wong wished me to convey his deepest thanks for your aid in this endeavor. He asks that you read the note he sent with me before you talk to the girl.\"\n\nTam nodded. \"Where is the note?\"\n\nZhu bowed again and stepped over to the palanquin. He pulled the curtain aside and helped Grace step out. She was wearing a tightly fitted blue dress with a floral pattern instead of the diaphanous silk she had worn in Gao's shop. She was blindfolded, a short leather leash hanging from her gold slave collar, and her arms were crossed behind her back, wrists bound to elbows. A ribbon gathered her long hair at the base of her neck, pulling it back from her face before it fell down her back. There was a note pinned to the front of her dress, directly over her breasts. \n\nGrace turned her head slightly, trying to determine her surroundings while deprived of vision, but otherwise waited demurely. After she had descended, the porters unstrapped a large chest from the back of the palanquin and set it on the ground.\n\nTam strolled up to the girl and unpinned the note, a smile spreading across his face as he read it:\n\nDoctor Hsien --\n\nI have not told Grace anything about her provisional sale or our plans. I thought you might enjoy surprising her. I am sure you will find the girl very pleasing; she is trained to be enjoyable, and responds prettily to restraints and the crop. I only ask that you refrain from the harshest pleasures; she has only had limited training in such treatment, and I judge that her eventual owner does not wish her to serve in that fashion. I wish you good fortune and much pleasure, and anticipate celebrating success.\n\nI remain indebted to you, my friend. \n\n- Wong Gao\n\nMotioning to the porters to bring the chest, Tam wordlessly picked up Grace's leash and led her to his bedchamber. He led her to the center of the room and guided her to kneel there while the porters set the chest against the wall. He followed them out, accepted a ring of keys from Zhu, and locked the gate behind them before returning to his bedroom to survey his temporary new slave. \n\nGrace knelt where he had left her. Her head turned slightly as she heard the door open and close, tracking Tam's footsteps as he circled her. Tam wondered if the girl had been through anything like this before -- bound, blindfolded, carried to a strange place and left in the care of unknown persons. \n\nIf Grace was nervous, she hid it well, falling back on her training to wait in poised elegance on her knees. Tam stood quietly in front of her and let the anticipation build. Still without saying a word to the girl, he unfastened his robe and pulled out his cock, leisurely stroking it to stiffness. He stepped forward and pressed the head to her lips. \n\nGrace might have no idea where she was, but she knew what a hard cock meant. She leaned forward and immediately swallowed the strange cock, filling her mouth until Tam's head rested at the entrance to her throat. She waited for instructions, but Tam remained still. When he refused to give her a prompt, she began to gently suck on him, her tongue fluttering against the underside of his cock. He gave her no discouragement, and she gradually increased her efforts, sliding the tight seal of her lips up and down his length, teasing him with her skilled tongue. \n\nGuided by Tam's occasional sharp inhalation, Grace found the techniques that best pleased him. She briefly released him from her mouth, but only so that she could drag the flat of her tongue down his length and then lick and swallow his balls. She released his balls with a wet pop and took his shaft into her mouth again, pushing forward to take him into her throat, humming slightly to make her throat vibrate around him as she sucked. She held his full length as long as she could, then slid back, keeping his head sealed between her lips as she took a quick breath through her nose. Tam groaned as she sucked and tongued him again before taking him to the hilt once more. Yelena was good for a novice, but Grace was on a completely different level, trained by professionals to be a consummate cock-sucker. \n\nWhen she deep-throated him the third time, Tam knew he couldn't hold back any longer. He grabbed her by the hair and pulled her back, then ripped off her blindfold just before he came on her face. By training or instinct, she'd had her eyes closed when the blindfold came off, and she kept them carefully shut as he covered her eyelids. Tilting Grace's head back with the hand in her hair, he painted her face from forehead to chin. He wiped the last strings of cum off on her lips and stepped back, putting his dick away. \n\nA light touch to her chin kept her face tilted up so that she wouldn't drip cum on her dress while he refastened his robe. He brought a chair over next to the kneeling girl and admired the view. Grace seemed to use her elegance as a shield, and he wanted her a little off balance for this conversation. Cum covering her face and dripping into her ears would do nicely. \n\n\"Do you know where you are, Grace?\"\n\n\"No Sir.\" She swallowed, a bit of his sperm sliding into her mouth as her lips parted.\n\n\"Do you recognize my voice?\"\n\n\"Ah, Grace thinks she is perhaps hearing Doctor Hsien, Master Wong's friend who brought the exotic foreign girl to visit?\"\n\n\"That's right, Grace. Did you know that Master Wong accepted a provisional offer for you yesterday?\"\n\n\"No, Grace did not know. Does Grace belong to Master Hsien now?\" She spoke very carefully, aware that any expectations from her previous life no longer necessarily applied.\n\n\"No, you are going to be sold to Xiyang Ki, the diplomat, assuming you are able to be trained to his standards. You should consider me your Master for the next two months, as I have agreed to let you live under my roof while you are trained.\"\n\n\"Thank you for training Grace, Master Hsien. She will do her best to prove worthy of your attention.\"\n\n\"Do you know what your training will consist of, Grace?\"\n\n\"Grace does not know. She will do whatever she can to be made into something pleasing to Master Xiyang.\"\n\n\"Are you familiar with Master Xiyang?\"\n\n\"Yes. Grace auditioned for Master Xiyang two weeks ago. She served him dinner, conversed with him over tea, and served him in bed for the evening.\"\n\n\"What are your impressions of Master Xiyang?\"\n\n\"Grace lives to serve her Master. She is honored that Master Xiyang considers her worthy of purchase.\"\n\n\"That's not what I asked.\"\n\n\"Please clarify, Master. Grace is not sure how to answer properly. She is not supposed to have any thoughts about Masters except how best to please them.\"\n\nTam tapped her under the chin with his finger. \"It pleases your current Master to hear your thoughts on Xiyang Ki as a man and a Master. I have not met the man, and I need to know about him to help you become acceptable to him. Tell me what you know about his position, his character, his tastes; give me your honest impression of him. Do not worry that I will pass along any unflattering remarks; the full truth now is the best way to ensure you please him enough to make me and Master Wong happy.\"\n\n\"Thank you Master. Grace found Master Xiyang to be a kind and sensitive man. He was passionate but gentle in bed, and a witty conversationalist. He is motivated by his duty to the Empress and the entire Imperial Bureaucracy, and was enthusiastic when he described his work. Grace gathered that he is only moderately wealthy by the standards of the nobility, but his sister recently married a member of the Imperial bloodline, so his star is rising rapidly. Grace thinks he would be a very good Master, she thinks she is extremely fortunate if she has found some small favor in his eyes.\" She took a careful breath, shifting her neck very slightly to ease her posture. \n\nTam took in the information with interest; not only a noble, but a man on the rise, with a direct connection to the imperial bloodline. If Yelena could produce a result that impressed Xiyang Ki, that might prove even more valuable in the long term than the influence with Wong Gao. \n\n\"You did indeed catch his eye, Grace. Master Wong tells me he is quite attracted to you, but apparently he will only purchase a slave who speaks Arabic. Luckily for you, my slave Yelena is fluent in Arabic. You will be spending most of your time over the next two months receiving intensive instruction from her.\"\n\n\"Grace is a very fortunate slave. She is very grateful to Master Hsien and Yelena for taking the time to teach her.\"\n\n\"Of course, you will not spend all your time learning. You will cost me money to feed and house, and you will need to earn your keep. Tell me what skills you can offer.\"\n\n\"Grace's primary use is to be pleasing to her Master in bed. She is trained in over fifty sexual positions, and has been taught to please a Master with all parts of her body. Grace has been taught to serve at meals, to converse pleasantly, and to entertain with tea service, music, poetry and dance. She has been taught to maintain her own beauty and those of other women with hair dressing, make-up, clothing and jewelry selection, and other functions.\" \n\n\"She has been trained as a body slave, and can bathe, dress, and massage her Masters. In more practical uses, Grace was a house slave in her childhood, and can perform all customary duties of a high class maid. She can read, write, and do numbers well enough to serve as a secretary or assist a steward. She has also been taught to cook, and can prepare many savory dishes. She has been used as decoration; she has been displayed on walls, tables, and floors, and used naked as a tray for meals or as furniture. She cannot think of any other skills she has to offer.\"\n\n\"Have you ever learned another language before?\"\n\n\"No Master. Grace is ashamed to admit it.\"\n\n\"Don't be ashamed, Grace. You should be proud of what you have learned; you have an impressive collection of skills. I'm sure the only reason you haven't learned a new language before is that your Masters didn't think it necessary.\"\n\n\"Thank you Master. Grace's teachers have often told her that she learns quickly, she hopes she can do the same under Mistress Yelena's tutelage.\"\n\n\"No, don't call Yelena Mistress. Even though she will be your teacher, she is just a slave like you.\"\n\n\"Grace is sorry, Master. She wished to show respect to her teacher; she should not have used that term though, she knows it is reserved for free women. Please punish Grace, Master.\"\n\n\"No, there's no need. I suspect I maintain a more informal household than you are accustomed to; I won't punish you for a simple mistake, as long as it isn't repeated. Your intentions were good however; respect is a good attitude to cultivate. Perhaps you could refer to her as First Slave Yelena?\"\n\n\"Grace is grateful for Master's mercy. She will be honored to give First Slave Yelena that title. Are there other slaves in Master Hsien's household she should also defer to?\"\n\n\"No, just the two of you for now. I suppose that makes you Second Slave Grace.\"\n\n\"Grace has never had a title before. She will be very happy to be Second Slave in Master Hsien's household.\" The girl smiled shyly through the drying cum on her face. She had still not opened her eyes or attempted to look around, apparently waiting for Tam's permission to do so. \n\n\"Good. Now, I think your face has dried enough that you won't drip on your dress. Go ahead and relax your neck, and turn your back toward me, I'm going to release your wrists.\"\n\n\"Thank you, Master.\"\n\nTam untied Grace and had her stretch her arms to work out the kinks. He gave her permission to remove just enough dried cum from her eyelids so that she could open them and look around. She carefully scraped off the bare minimum and licked her fingers clean, then sat back on her heels and looked around the room in curiosity. \n\nTam let her absorb her new surroundings then told her to strip for inspection. She quickly unbuttoned and removed her dress and slippers, folding the dress neatly before setting it atop the slippers; she wore no undergarments under the dress. She rose to present in pleasure slave posture: feet wide apart, hands clasped behind her neck, breasts pushed forward, chin up, eyes down. The short leather leash fell from her collar to hang between her breasts. Tam unclipped the leash and had her gather her long hair in her hands and hold it away from her back before he slowly circled her. \n\nHe couldn't help comparing Grace to Yelena as he studied her. Instead of the pale white that flushed so easily, Grace's skin was of course a normal warm tan, shaded towards honey set in sunlight. She was a little shorter than Yelena, the top of her head as she stood barefoot level with his lips instead of his eyes. \n\nIn build, the slave girls were similar, slim beauties with flat stomachs, but Grace had a few more curves than Yelena. Her ass and breasts were rounded with that extra touch that made it impossible for her to walk down a street without drawing the eye of every man she passed. He slid his hand through her hair where it fell from her hands; it was smooth as silk, the jet black gleaming. She had no marks anywhere on her; no scars or bruises, no tattoos or piercings - nothing on her flawless skin except the collar around her neck and streaks of Tam's dried cum on her face. Even through the streaks, the fine bones of her face were clearly visible. She had a face that could inspire men to paint portraits instead of painting it as Tam had; her features were delicate and alluring. Her large eyes were a deep warm brown, the lashes dark and long, tiny bits of dried white cum still caught in them. \n\nHe stepped to stand against her back, inhaling her perfume while he reached around to cup her breasts in his hand. \"Any larger, and these beauties would surely sag. It's a marvel they're standing firm and proud as it is. How old are you, Grace? You can't be very old.\"\n\n\"Grace is eighteen years old, Master.\"\n\n\"You said you've been a slave since childhood?\" He pinched her small nipples, the dark brown buds hardening between his fingers.\n\n\"Grace became a slave so young that she cannot remember life without the collar, Master, though she had a different name then which she is not allowed to say.\"\n\n\"How did you come into Master Wong's hands? I know he doesn't deal in children.\"\n\n\"The slave now called Grace grew up in the household of a rich widow. She learned to assist her mother, who was a house slave. When the slave was seventeen, the widow died and her heirs sold everything at auction. The slave girl with the forbidden name knew by then that men found her pretty, and was afraid that she would be bought by a brothel, but she was lucky and came into Master Wong's possession.\"\n\nTam slid his hand down her side, caressing her flank with one hand while the other continued to toy with her breasts. \"Had you ever been with a man before Master Wong bought you?\"\n\n\"No. Master Wong has told Grace that she cost him extra because she was a virgin.\"\n\nShe gasped as Tam's fingers slid between her legs and arched her back exactly far enough to let her ass brush tantalizingly against his erection. Tam grunted in approval. \"You've been trained, though. Not a shy virgin anymore?\"\n\n\"No Master, Grace is not a virgin. Grace is not permitted to have an opinion on the subject, but Master Wong believes the value men place on virginity is foolish; he reminds his clients often that a girl trained in Master Wong's house provides much more exquisite pleasure than a fumbling virgin that they can buy from any vendor.\"\n\n\"So you lost your virginity to your trainers, then?\"\n\n\"No Master. Master Wong is a firm believer in not wasting money; when he purchases virgin slaves, he auctions off their first time taking a cock.\"\n\nTam hooked two fingers into Grace's moistening slit, confirming the lack of virgin barrier as he shoved them deep into her wet hole. \"That sounds interesting.\"\n\n\"Ah, would Master like to hear the story of how Grace lost her virginity?\"\n\nTam grinned and ground his cock against her ass. \"I'd like that very much.\"\n\n*****\n\nThat's the chapter, folks! It could be argued this is a bit more of a cliff-hanger than I usually end on. In the first draft of Shadow Doctor, this chapter continued on through the story of how Grace lost her virginity. However, that section really feels like its own separate story, so I've decided to make it Chapter 6. The bad news is that Chapter 6 will be much shorter than usual, and I'll be posting in NonCon instead of Mind Control since it will be a flashback story with no MC elements. The good news is that it's already completely written from the first draft and won't need much updating. I'm going to spend a couple of days polishing it, and it should be up very soon. After Chapter 6, Shadow Doctor will return to the MC category for the foreseeable future.",
        "As always, votes and comments are appreciated. I love hearing details about what you like and dislike. Thanks for sticking with me as this story gets longer and longer!"
    ],
    "authorname": "TehCorinthian",
    "tags": [
        "wuxia",
        "slave",
        "male dominant",
        "female submissive",
        "bondage",
        "mind control",
        "forced arousal",
        "electroshock"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-shadow-doctor-ch-05"
}