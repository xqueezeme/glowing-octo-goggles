{
    "title": "Southern Tide Vol. 02",
    "pages": [
        "Chapter One\n\nA full year had gone by, and things had fallen into normalcy for Cat and Dale. They had recently settled down into a charming new home together, and were taking off as a couple. They were happy and in love, and Kiara knew that they would probably marry soon. She on the other hand, was miserable and envious of Cat. Even though she had been the most popular of the two, her life had gone in a very different direction, and as a result she began to avoid her cousin.\n\nIt was Friday night; a time for going out on a date or partying with friends and lovers. That used to be her lifestyle years ago, but now Joshua was the only love she had left...next to Cat and her mother of course. She sat at home in her living room, wondering why she had been denied the same happiness. She tried to be her old self and happy for Cat, but she could no longer mask her true feelings. She had grown irritable and almost hated her cousin for having something that she couldn't seem to attain. Cat had found a good man from a chance meeting, while she was stuck as a single parent, with not many quality men wanting her.\n\nIt was well known that that from the plethora of questions a woman could be asked by a man upon first meeting, \"Do have any kids?\" was one of the first few. The answer usually determined whether he would invest in you or not. Before having Joshua, she was the hottest thing around; pretty, young and slender, with no extra baggage. Her cousin had physically been the exact opposite. In her world, it seemed that men put more value into a good looking woman, over one with an impressive intellect. Had it been the opposite, Cat would have caught a good man years ago. Instead Kiara was the one getting all the attention, and she assumed that all of it would last. A relationship with Derek, now her ex, and a positive pregnancy test changed all of that.\n\nWhen they were together, she believed that he would take care of her. She had been with him for two years before Joshua's birth, and thought that they would continue to be happy. Time proved her wrong and unexpected problems began to surface, taking an extreme toll on their relationship. Two months before Joshua was born, Derek had suggested that they spend some time away from each other, for the benefit of their relationship. She agreed and expected to be back in his arms, with that bit of extra love and support, especially since she was close to her due date. It only took a few weeks to realize that her aspirations of having a happy family were no longer possible. Derek abandoned her and she was replaced by another woman.\n\nStephanie was everything that she had been before the pregnancy, and needless to say, the new mother-to-be did not take it very well. She broke down and had no one in her corner. Her mother and so called friends, all came down on her harshly with \"I told you so,\" and Cat had been the only one to keep her grounded through it all.\n\nKiara had learned that life was indeed no fairy tale. All of the Disney movies she had watched as a child, featuring down-on-luck princesses meeting chivalrous princes, and having their \"happily ever afters,\" were all lies. The Little Mermaid had always been her favorite, and she would daydream about finding a prince as beautiful and as sweet as Eric.\n\nDerek had been the equivalent of Eric in the beginning. Tall, dark-skinned and devilishly handsome; he was perfect. They met in their first years of college and quickly became an item. They even planned to move in together, but at the very last minute, something changed; he changed. He seemed to be bored with her and began to lose his temper more often than usual.\n\nShe tried to keep it all together, but he had no intention of trying to fix whatever was wrong. In hindsight, she now realized that he had tried to push her away, in hopes that she would break up with him first. Instead, she clung to him because he had been her first love; the prince that was supposed to bring her that happy ending. His role changed and he had transformed into the villain of her story book; the wolf in sheep's clothing, and the one to blame for her hardened exterior. He had robbed her of hope, so much so, that she now felt at her lowest.\n\nKiara used to be soft spoken, patient and even willing to trust; but no longer. Her heart had no patience or room for men. Yet, she still craved more than what she already had. She wondered if her life would have turned out differently if she hadn't given birth to Joshua. Maybe then someone would want her.\n\nWrong. This was all wrong. She shouldn't have thought that way. She loved her son and did not regret having him, even though his father was the king of betrayal. Still, Joshua only soothed three quarters of her yearning heart. The remaining fraction wanted a partner and longed to find love...true love.\n\nShe felt a sudden pang of guilt for feeling this way. Without a moment's thought, she closed her eyes and asked God to forgive her for not feeling complete. Her mother, also a single parent had told her that she didn't need a man to be happy. She was meant to survive on her own, without help from anyone. Why then did she feel jealousy and resentment towards her cousin? The very same who had it much harder than she ever did, and still found a great partnership.\n\nKiara slapped her palm to her forehead out of frustration and looked to her cell phone. Four missed calls from Cat. She remembered the last time she saw the happy couple together, at their housewarming party. Everything was perfect. Dale was a gentleman, Cat was extremely happy and Brian...Joshua liked him, and maybe she did too.\n\nShe sighed. She had fallen into a tiny trap, all brought about by Dale's inquiry. She hated being led on by a suggestion. It wasn't certain and led her to question herself, as well as Brian. On one hand it seemed that he was a nice guy, but she could not forget what he said about her cousin. She didn't believe that Cat had forgotten any of it either. Being a voluptuous woman herself, and not that far from Cat's weight, he might be thinking the same of her as well. What if he was just pretending to be nice for fear of losing Dale? Could he have faked all of it? Even being so good with Joshua?\n\nHer heart ached at such a thought. It was fine if a man hurt her feelings, and pretended to want, or love her. That she could handle, but Joshua was another issue. She would not let anyone hurt him or give him false hope. In the long run, she knew that Brian would probably have some influence over her son, and how he treated people; namely women. There would be serious repercussions if she exposed him to a man who had such distorted ideals.\n\nHer intuition told her that Brian wasn't pretending, but what if she was wrong? She didn't know him very well. She had only been around him a few times, and only Dale or John could probably see behind the bullshit. That is, if there was any bullshit to discover.\n\nWithout another thought, she snatched her cell phone from the mahogany coffee table, and began to dial Cat's number. After two rings her cousin answered.\n\n\"Hi Ki. Are you okay?\" Cat asked. She sounded very concerned.\n\n\"Yeah I'm fine. Why?\" Kiara responded calmly.\n\n\"Well, you always pick up when I call. I haven't spoken to you in days, and can't help but think that something might be wrong.\"\n\n\"I'm okay.\" Kiara lied, hoping to direct the attention away from herself for the moment. \"How's your boo?\"\n\n\"He's good. He's settling down well over here.\"\n\n\"That's good.\"\n\nThere was silence for a moment, only because Kiara was bad at faking contentment.\n\n\"Okay cuz, what's going on?\" Cat asked.\n\n\"I'm fine. Why do you think something's wrong?\"\n\n\"I can hear it in your voice Ki! Talk to me!\"\n\nKiara sighed, \"I'm just lonely Cat. That's all. It's like I can't find a good man.\"\n\nCat was quiet for a few seconds, and then said, \"I'm sorry. Do you feel like I'm rubbing everything in your face? Is that why you haven't picked up your phone?\"\n\n\"No babes.\"\n\n\"Ki don't lie. I used to feel that way too. You had all these guys chasing after you and I had no one. I was both sad and jealous; but I couldn't say anything. It wasn't your fault that you looked better than me. You were always more outgoing and I wasn't. People liked that about you.\"\n\n\"Damn Cat, I'm sorry. I know I shouldn't be upset, but I can't help it. The types that come after me...they don't really want to be with me. They just want some quick ass, and they could care less about Joshua. I don't want that for us. I want someone who will care equally for both of us.\"\n\n\"I understand Ki. Maybe you should try...something different.\"\n\nShe knew where Cat was going with this.\n\n\"Something different like...Brian?\"\n\n\"Well he is great with Josh and you guys seem to have a little chemistry.\"\n\n\"Hold on! Before we even go there; do you believe him?\" Kiara asked boldly, regaining the power in her tone of voice.\n\n\"What do you mean?\"\n\n\"I mean do you buy that he's really sorry? We're almost the same weight; you and I, and to know that he spoke about you in that way still bothers me. How do you know he's not just pretending to stay good with Dale?\"\n\n\"It's been over a year Ki...\" her cousin sighed. \"Dale had a talk with him and he did say that he was sorry. He might have been going through some things and took it out on me; someone he didn't know. I think he's really trying to make an effort and I want to give him the benefit of the doubt. He's all Dale's got, besides John. I don't want them to be at odds with each other, over me.\"\n\n\"Cat he has you too. What you're saying makes sense, but don't tell me that you're only thinking of Dale's happiness, and not yours.\"\n\n\"I am happy, but you're right. It's taking a lot to forget what he said. But Dale's got my back.\"\n\n\"I hope so. That's not all I'm worried about either. He might influence Josh in the long run. I want my son to respect women. He shouldn't be like his father.\"\n\n\"I agree with you, but I don't think you have to worry too much about that. I think Brian is a lot different from when we first met him, and with all that aside...I mean if he hadn't said those things about me, do you think you'd be attracted to him?\"\n\nKiara searched her thoughts for a moment. She really wanted to lie about how she truly felt, but what good would it do? Cat would be able to see through a lie.\n\n\"Yeah...I guess. I don't know. I'm a little scared to be honest. I don't want to get hurt.\"\n\n\"I know how you feel. A little part of me expects things to go wrong with Dale at any moment, but I'm fighting the negative thoughts.\"\n\n\"You two will be fine. I can feel it. This is your time to be happy.\"\n\n\"I am Ki, and I want you to find love as well. Are you still coming to visit? Brian will be there. Maybe you guys could have a little talk and from there, you can decide what you want to do.\"\n\n\"Even if I do, what makes you think that he'll want to get with me? As far as I know, you and Dale are only speculating and trying to do a little hookup, and you know how much I hate those.\"\n\n\"Girl please! You obviously didn't see the way he was looking at you, all those times we met up. He wants some chocolate in his life!\" Cat teased.\n\nKiara laughed at the joke. \n\n\"It's good to hear you laughter again Ki. Give Brian a chance, and see where things go. I really feel that he likes you.\"\n\n\"Maybe. I can't let what he said go so easily, but I'll try to talk to him about it.\"\n\n\"I know, and I think he'll listen to everything you have to say. So you're definitely coming, right?\"\n\n\"Yeah, I think so. I've taken off work, so I should be able to make it.\"\n\n\"Good, because I kind of told Brian that you've been having a little car trouble, and wanted to do some carpooling with him on the way up here. He said it was okay.\"\n\n\"YOU WHAT!? Are you out of your mind Cat? Why would you do that?\" Kiara fumed.\n\nShe was more nervous than angry at this sudden revelation, but tried to calm herself, not wanting to upset Cat.\n\n\"Come on. You guys live in the same town. Why not drive up here together? Then you can talk to him a little more. It would give you guys a little privacy, to get things out of the way. You'll be able to ask him all the questions you want.\" Cat said persuasively.\n\n\"I guess...but I'm not sure I'm comfortable about being alone with him. You should've asked me first Cat. I don't like being thrown into situations like this.\"\n\n\"I know and I'm sorry. You can always call and tell him that you'll get there on your own.\" Cat said, with a bit of urgency in her voice.\n\n\"Call him huh? Why can't you do it? You're the one that got me into this. I know what you're up to. You're just trying to get me to talk to him.\"\n\n\"Maybe. Come on Ki. Just go with it this once. If you guys don't hit it off, I'll drive you back home myself.\"\n\n\"You promise?\"\n\n\"Yeah. Besides we haven't spent any time together in months. I could probably spend the weekend with you, or something.\"\n\n\"You sure Mr. Man wouldn't mind you being away?\"\n\nCat laughed, \"He's a big boy. He can handle it.\"\n\n\"Handle what?\" Dale's voice interrupted on Cats end.\n\n\"He's home Ki. I'll call you tomorrow okay? Just think about what I said.\"\n\n\"Yeah sure.\" she sighed. \"What's Brian's' number?\"\n\n\"Uh oh!\" Cat teased excitedly. \"You going to call him?\"\n\n\"Yeah. I might as well.\"\n\n\"You're not going to cancel on me are you?\"\n\n\"Cat...I don't know.\" Kiara sighed. \"I'm not sure that I'm ready to get into anything with him. I'm confused.\"\n\n\"Don't worry about it. If you don't feel comfortable, you don't have to do anything. I thought that since he got on so well with Josh, that there could be something between you two.\"\n\n\"I know you meant well. Just give me a little time to sort my head out, okay?\"\n\n\"Of course. But I really miss you Ki. Promise that you won't give me the silent treatment anymore? I don't like that.\"\n\n\"I'm sorry Cat. I promise I won't, and I miss you too babes. Joshua does too. He wants to come with me, but my mom wanted to take him for a week.\"\n\n\"Give him a hug for me, and tell him I'll visit soon.\"\n\n\"I will. I'll speak to you tomorrow, okay?\"\n\n\"Okay Ki. Goodnight.\"\n\n\"Night!\"\n\nKiara hung up and looked at her latest entry. She wanted to be happy like her cousin was, but that would require a good amount of faith. She was terribly lacking in that regard. She wanted to call Brian, but felt anxious, which was very unlike her character. She had always been headstrong and direct about what she wanted. But now just thinking of him caused butterflies in the pit of her stomach.\n\nJust then, two tiny brown arms flung round her neck, and she was instantly comforted by the embrace.\n\n\"Hi mommy!\" Joshua yelled aloud.\n\n\"Hi baby. You done brushing your teeth?\"\n\n\"Yeah they're all clean!\" he exclaimed proudly.\n\n\"Come here let me see you.\"\n\nA little boy with the combined features of his mother and father; the latter being more dominant, walked round the black suede sofa, ready to be inspected. He had a wide grin on his face and flashed his newly brushed teeth at her. A single canine was missing from his mouth and a new one was already forming at the root of his pink gums. He was wearing his favorite black and navy-blue pajamas, which were splotched with images of Batman and Robin, all over the front and back.\n\n\"Good job baby. The dentist is going to be so proud of you, because you take good care of your teeth.\" she smiled.\n\n\"But I don't like the dentist. He scares me.\" Joshua pouted.\n\nKiara laughed, \"He's not so scary. He just wants you to have healthy teeth. Remember how he gave you that nice toothbrush last time?\"\n\n\"Yeah...but he's still scary.\"\n\n\"Come here. Give me a hug.\" she said, with a warm smile.\n\nJoshua climbed onto her lap and flung his arms around her once more. Now eight years old, he was growing fast, and no longer a tiny, weightless toddler.\n\n\"Mommy, can I come with you to Auntie Cat's house?\"\n\n\"No baby. We promised grandma that you'd go see her, remember?\"\n\n\"I know but I miss Brian, and the horses.\"\n\n\"Cat doesn't have any horses where she lives. She lives in a town, like us.\"\n\n\"Okay...but Brian said that he'd let me ride all by myself next time. Oh, but I wasn't supposed to tell you that. It was our secret.\" Joshua said, with a mischievous smile.\n\n\"You guys are keeping secrets from me now?\" she asked, amused by the fact.\n\n\"He said you might yell at him, if I said anything. But I told him you wouldn't. You're a nice mom and you wouldn't get mad.\"\n\nShe laughed, \"You like him a lot, don't you?\"\n\n\"Yeah he's my friend. I told Chris and Mikey about him and the horses. They got jealous. They wanted to ride the horses too.\" he said, with even more pride.\n\n\"Maybe their mom and dad can take them to a petting zoo. They have horses there.\"\n\n\"I know. We went to one with the class, but Brian's more fun.\" he smiled.\n\n\"Oh yeah?\" she asked; her heart warming to the idea of a more reliable man being in Joshua's life.\n\n\"Yup!\"\n\nAt that same moment, a thought sparked in her mind. Maybe she could do something nice for her son. Inviting Brian over for dinner would help her to better judge his character, as well as give her son the chance to see him before she goes away. She would kill two birds with one stone, and in the process have the information she required.\n\n\"Tell you what. You can't go to Auntie Cat's with me, but would you like if I asked Brian to come over for dinner? That way, you'll get to see him before you go to grandma's house.\"\n\n\"Really? He's going to come here?\" her son shrieked with excitement.\n\n\"Well I gotta ask him first. Maybe if I tell him that you want to see him, he'll come. What do think?\"\n\n\"Yes I want to see him. See? I told him you were a nice mom.\" Joshua grinned, and hugged his mother tightly.\n\n\"Can you do me a favor though?\" Kiara asked, as a worrying thought came to mind.\n\n\"What?\"\n\n\"Let's not tell daddy about this yet, okay? Did you tell him about the horses?\"\n\n\"No...I was going to tell him when he took me to the movies, but he never came.\" he said; his happy expression slowly melting into one of hurt and disappointment.\n\nKiara hated that look. She wanted to save him from any more disappointments; however, she had no control over what his father did. \n\n\"It's okay. Don't worry about it baby. He wanted to take you, but he was a little busy. I'll take you when I get back...or maybe we can ask grandma to take you.\"\n\n\"Okay.\" her son responded.\n\n\"Now go to bed. It's getting late, and you have school in the morning.\"\n\n\"But I'm not tired.\" he whined.\n\n\"If you don't, I won't be able to call Brian. You don't want to see him anymore?\".\n\n\"No. I do.\"\n\n\"Then go on. I'll come tuck you in when I get off the phone.\"\n\n\"Okay mommy. Tell him I said hi, okay?\"\n\n\"I will baby.\" she smiled, and she watched as her little boy ran up the stairs, without further hesitation.\n\nShe hoped that she was doing the right thing. In all reality, she knew that Joshua would want to see more of him, and the only way to know if he was the genuine article, was to find out firsthand. She took a deep breath and proceeded to dial the number.\n\n\"This had to be done; at least, for Joshua's sake.\" she thought.\n\nHer heart thundered in her chest as she hit the 'call' button.\n\nWhy was she so afraid? She had never been this anxious before, with anyone. She secretly hoped that he wouldn't pick up. She might have choked and sounded like a fool. Her wish was granted, because after five rings, the call went straight to voicemail.\n\nShe hung up without leaving a message, and relaxed against the couch. She had previously sat up straight and rigid, bracing herself for the pending conversation. Brian didn't know her number, and probably had no intention of picking up. It was a relief, but she knew that she would have to face him sooner or later.\n\n\"Oh well!\" she muttered under her breath.",
        "She would put it off for now. On the coffee table was one of Joshua's favorite story books. She hadn't seen when he put it there, but knew that he meant to ask her to read it to him. With all the excitement of asking Brian over for dinner, he had probably forgotten about it. She picked it up and proceeded to his room, wondering if he too would lose faith in fairy tales, when he got older. She dreaded the thought, but hoped that the hardships of life would be more lenient with her son.\n\nKiara awoke at seven, ready to start the day. Joshua was due at school by 8:30, and she had some time to prepare breakfast. She pulled on her white cotton robe, and checked on him in the next room. He was still asleep, but she would let him sleep a while longer. He never made a big fuss about getting up, and was able to dress himself for school. She had his uniform pressed and ready, waiting on his side chair. She made a note to herself to get him two new pairs of boots later.\n\nHe had already outgrown his old pairs within a matter of months, and had complained that his toes hurt after school. With work and everything else on her mind, she had forgotten, but would make an effort to get it done today.\n\nPancakes, bacon and apple slices were on the menu this morning. Midway through preparing their breakfast, she called for him to wake up. He came down to wish her a good morning, while rubbing his eyes and yawning. \n\n\"Baby, I left your uniform on the chair. Take a quick shower and get dressed. I'll get your breakfast ready, okay?\"\n\n\"Okay.\" he yawned, and marched back up to his room.\n\nSuddenly, the doorbell rang, startling her in front of the stove. She wasn't expecting company, but already knew who it was. She sighed, and rolled her eyes at the thought of having to see Derek's face this morning. She knew why he was here. He thought that he could make up for ditching Joshua, by taking him to school this morning. She knew that Joshua would be happy to see his father, but one of these days, he would learn the truth about Derek. She was tired of lying to protect the image of his neglectful father.\n\nDerek was clad in an expensive grey suit and tie, when she opened the door. He worked at a prestigious law firm, and always dressed the part of a successful lawyer. He was even more handsome nowadays; however, she no longer felt anything for him, save contempt. He had always been the dapper type, and there had been a time when just being in his presence, would send chills down her spine. Now she couldn't stand him; but she tried her best to be civil in front of her son.\n\n\"Hey Kiki.\" Derek said, with his signature goateed smile.\n\nShe hated when he called her that. It reminded her of days past, when there had been love between them.\n\n\"Why are you here so early?\" she asked, feigning ignorance.\n\n\"I came to take Josh to school. Is he awake?\"\n\n\"Yeah, he's upstairs brushing his teeth.\" she said dryly.\n\n\"Can I come in?\"\n\nShe wanted to say no, but vowed never to keep Joshua's father away. He barely saw Joshua now, and she wouldn't deny her son any time with his father.\n\n\"Derek...why do you feel like you can just show up anytime you want? Either keep your promises to him, or don't come here at all.\"\n\n\"Come on Ki. I had a case. I couldn't make it.\" he said defensively.\n\n\"That's always the excuse isn't it?\"\n\n\"Look, he's a strong boy. He'll be fine. My dad was always busy and I turned out fine.\"\n\nHe had turned out fine as far as being a lawyer, and making good money. Yet, his relationship with his own son suffered greatly. She would have said all this out loud, but chose to keep it to herself. She never had any arguments in front of Joshua, and wasn't about to start.\n\n\"Right...if you say so. Come in.\" she said, giving him room to pass through her doorway.\n\n\"Making breakfast? Smells good! Can I get a little something to eat? I only had a cup of coffee this morning.\"\n\nShe rolled her eyes at him in annoyance. She would have liked to yell, \"Kiss my ass. Go get your girl to make you pancakes!\" But again, her son's presence kept her in check.\n\nWithout another word, she walked over to the kitchen, and he followed. Joshua must have heard his voice, because he rushed downstairs to greet his father.\n\n\"Daddy!\" he cried with glee.\n\n\"Hey little man!\" Derek said, as his son rushed into his arms. \"You been good?\"\n\n\"Yeah. I missed you.\"\n\n\"I missed you too Josh. I came to take you to school today. How you been doing in school?\"\n\n\"I got 100 on my spelling and math test.\" the little boy beamed.\n\n\"That's my boy!\" Derek smiled. \"I know I promised to take you to the movies but I was busy. I'll take you next Friday, okay? It'll be a men's night out, with just the two of us.\"\n\n\"Okay!\" Josh responded happily.\n\nIt seemed that all sins were immediately forgiven, much to Kiara's distaste, and she shook her head at the conversation. Derek's promises were beginning to mean less and less to her. She wondered if the same would happen with Joshua. She looked back at him, cradled in his father's arms. She pitied her son. But for the moment, there was nothing she could do. Derek was always good with his mouth, and had the amazing ability of turning her into the enemy.\n\nShe would have liked for Joshua to continue chatting with his father, but realized that he was still in pajamas. If he didn't hurry, they would be pressed for time.\n\n\"Go take a shower Joshua. When you're done, you can have breakfast with your dad. You need to hurry or you'll be late.\"\n\n\"Alright.\" Joshua replied.\n\nHe rushed back upstairs, to do as he was told. Kiara approached Derek with a plate, holding a few strips of bacon and pancakes topped with melted butter and syrup. She was instantly reminded of happier days, when they would spend their mornings together making breakfast, as well as making love.\n\nShe grew cross as the memories came flooding back. But she hid this irritation as best she could. He couldn't know that even now, she was still wounded by his betrayal. She set the plate down in front of him and walked back to the stove.\n\n\"Thanks. You always made great pancakes.\" he smiled.\n\nShe didn't answer.\n\n\"You know I've been meaning to talk to you, about us.\" he said, after a sip of coffee.\n\nShe laughed and shook her head in disbelief. Why was he doing this now?\n\n\"Last time I checked, I was single and you were with Stephanie.\"\n\nShe would have gone further, but her phone began to vibrate. It distracted her from saying any of the explosive statements that she might have unleashed upon him. Her heartbeat quickened, once she saw who the caller was. Brian was returning her call. She took a deep breath and answered.\n\n\"Hello?\"\n\n\"Hi. Did someone call me from this number last night?\" a clueless Brian replied.\n\n\"Yeah...it's Kiara.\"\n\n\"Oh, hi. Sorry I didn't pick up. I had an early night last night.\"\n\n\"It's okay. Um, can you hold on a minute?\" she asked, very aware that Derek was eavesdropping on the conversation.\n\nShe turned the burners off, and walked towards the living room, where she would manage to have a bit of privacy.\n\n\"Sorry about that.\" she said. \"I was wondering...would you like to come over for dinner on Sunday night?\"\n\n\"Dinner?\" he asked, the surprise evident in his voice.\n\n\"Yeah. I wanted to talk to you about a few things.\"\n\n\"Is...everything okay?\" he responded, seemingly unsure of the situation.\n\n\"Oh yes, everything's fine. It's just that I won't be taking Josh with me, to see Cat. He wanted to see you as well. So I figured, we could all have dinner before I left.\"\n\n\"Sure...that'll be really nice.\" he replied.\n\nHe was obviously very suspicious of this invitation.\n\n\"Okay great. Um, what time would be good for you?\"\n\n\"Well...I'm free on the weekends, so anytime would be fine.\"\n\n\"8:30 sound good?\"\n\n\"Yeah, sure.\"\n\n\"Okay. Well I'll see you then. Joshua's going to be really happy. He can't stop talking about you and the horses.\"\n\n\"Oh yeah?\" he replied, in a less than doubtful tone. \"He's a sweet kid. Tell him I said hello, and I'll see you both soon, alright?\"\n\n\"Will do! Okay talk to you later.\" she said, with a tiny smile.\n\n\"Sure. See you then.\"\n\nKiara exhaled and relaxed the tension in her shoulders. The conversation had gone better than she anticipated. She half expected him to question her motives and refuse. Had he done so, it would have been a bigger disappointment for Joshua, and she would have hated breaking the news to him. But Brian had been agreeable, and she felt a little more comfortable with the idea of being alone with him...and Joshua of course. She walked back to the kitchen, in a much better mood. She must have still had a smile on her face, because Derek had given her an odd look, as she emerged out of the hallway. She pretended not to notice and went back to the stove.\n\n\"So who was that?\" he asked, nonchalantly.\n\n\"A friend. Why?\" she replied, with her back turned to him.\n\n\"No reason. I just heard something about dinner and...\"\n\n\"Yeah, I'm having dinner with him. Something wrong?\"\n\n\"Can we talk Kiki?\"\n\n\"About what?\"\n\n\"You know that I still love you right?\"\n\nShe almost laughed out loud, but she caught herself and turned to look at him with disdain. How curious it was to hear something like that from him. There were times when those words were all she wanted to hear. Those had been the tough times, when she felt alone and not even Cat could console her. She had pleaded with him to come back to her, but he responded by blocking her phone number.\n\nIt took two full years to get over him, and by then he had moved in with his new girlfriend. She was supposed to be the one moving in with him, but Derek made his decision. Later, she vowed never to take him back if he ever decided to come around.\n\n\"How's Stephanie?\" she asked sternly.\n\n\"She's...we're not together.\"\n\n\"Oh, okay.\" she replied calmly, masking the anger that boiled within her.\n\nHe was alone now, and his first thought was to seduce the one he abandoned. She would never stoop so low as to take him back.\n\n\"I wanted to take you out. Just me and you. I miss you Kiki.\"\n\n\"And what about Joshua? Is he coming too, or are you going to leave him out of the equation? You know what? It doesn't even matter, because it won't happen. When people fuck me over, I don't go two steps back. I only tolerate you because of our son. Other than the two of us being connected as his parents, there won't be any kind of relationship between us!\"\n\n\"Come on Kiki. I know you miss me. Remember how...\"\n\n\"No I don't. I'm fine actually.\"\n\n\"What, so you've got another man now? Who is he?\" he asked bitterly.\n\n\"Derek, mind your business and I'll mind mine! I don't ask what you and Stephanie get up to, and I don't intend to. What we had is done. All I ask is that you be a good father to your son.\" she retorted, trying to keep her anger and tone under control.\n\n\"I am a good father. I buy everything he needs, and I come to see him when I can!\"\n\n\"When you can isn't enough. But you can't even see that. It's not only about buying him stuff. You've only seen him twice in one month. Today makes three times. You think that's enough?\"\n\n\"Look I have work and...\"\n\n\"Yeah, work.\" she mocked. \"I guess you no longer have afternoons and days off right? I work too Derek!\"\n\n\"Kiki come on...\"\n\n\"Mommy, can you help me with my tie?\" Joshua shouted from his room upstairs.\n\n\"Yeah baby, I'm coming.\" she shouted back and rushed for the stairs, silently thanking her son for this welcomed interruption.\n\nHad the conversation gone any further, she would have given Derek a piece of her mind. Joshua's little save kept her from becoming even more flustered, and she rushed upstairs to him, leaving Derek to eat alone.\n\nChapter Two\n\nIt was mid-November and Brian hated this time of year. Every year, for the past three years, he had always spent the upcoming holidays alone. Sure there had been random girlfriends, but he had never been serious with any of them. As for Dale and John, both were now living their own lives with good women, and once again he had no one. He pondered on what he might do to alleviate this loneliness, and only came up with the idea of trying to salvage what he had with Kelly. It had been a year since they broke up and he was tired of being alone. It wasn't because he missed the sex. With Dale gone, and no women around him, life had gone a down a notch.\n\nHe couldn't imagine...or rather, he didn't want to go through the effort of finding a new woman. It was never hard to get one interested. The tedium of courting women, only to have things go sour, was too much for him at the moment. And he was quite sure that things would indeed go sour. It was as if a dark cloud now loomed overhead; causing an increased melancholy within him.\n\nHe craved familiarity and Kelly would be the familiar face that he needed. Unfortunately, she had already moved on and found a new guy. They never had any major problems while they were a couple. At some point, both realized that the relationship was going nowhere. In essence, all of his relationships with women ended this way. None of them could ever compare to what Dale had; past or present.\n\nHe had never really given the idea much thought, but now he realized the value of having a good woman at his side. He couldn't put the blame on women however, because he was the problem. He never possessed any of the fine qualities that came so easily to Dale. In fact, his mouth nearly cost him a relationship with his best friend. The experience also taught him a very good lesson; he needed to grow up.\n\nMany times, he asked himself why he'd said those things about Cat. He really had nothing against her...except that she had done the one thing that he could never do. She saved Dale's life and made him happy again. A feat he never thought possible, or maybe he hadn't tried hard enough. He even contributed to Dale's drinking, and hadn't seen anything wrong with it. After all, alcohol always seemed to mend most of his bad memories until he could block them out on his own. He was never good at handling tragedies, and didn't quite know how to comfort Dale. In his mind, he was doing Dale a favor.\n\nIt took a complete stranger only a matter of weeks to repair the damage, and he hated himself for letting things happen this way. He had been rude to Cat when he first met her. He even called her names, and probably destroyed her self confidence in the process. He didn't deserve her friendship or Dale's for that matter. Yet, they overlooked his behavior and gave him a second chance.\n\nNow Kiara was the one reaching out and inviting him to dinner. She was the last person he ever expected to get a call from, and lying in bed, he couldn't stop wondering what she wanted. Why was she being nice to him? He had become more of a thinker and less of a talker since these new women came into his life. He hadn't said so much as an unkind word about either one, after the embarrassing incident.\n\nHe had even taken a liking to both women, but was still cautious around them. He observed that they were almost polar opposites. Cat was always the soft spoken one, while Kiara had the smart mouth. Of course, she kept that side of her in check whenever Joshua was around. However, this blunt honesty made him appreciate her company; though he kept that part to himself. He liked the fact that she was always honest about her feelings, and was bold enough to defend her ideals. He even began to find her a little attractive, but never told Dale or John so. He was afraid of what that would mean.\n\nIt was true that he had never been attracted to fat women, but he definitely didn't find them repulsive; even though he alluded to the fact. Now he felt shame for being attracted to Kiara, who was almost identical to the woman he had berated. Did that make him a hypocrite? He was sure it made him an asshole. Yet, what if he was no longer that kind of man? What if he wanted to give Kiara a chance? Would she even give him a chance to redeem himself?\n\nHe wouldn't have been so forgiving if he was in her shoes. That first angry phone call was rightly deserved, and she was probably inviting him to dinner to expand on that call. But why in person? And why now? Months had gone by since the incident. Couldn't she have done this over the phone, or at a family gathering? He had been itching to call Dale for a little advice, but knew that word would get to Cat, and eventually back to Kiara. He didn't want to seem insecure or unable to handle a little meeting with her.\n\nHe had considered calling her back to cancel, but there was Joshua to think about. He didn't want to disappoint the kid. Her son had been the one to save him from Kiara's attitude, and being around a child again made him think about his own past and future. He had been quite close to Jessie, and when he died, it hit him hard. Probably not as hard as it hit Dale, but the loss was painful nonetheless. He had been there for every birthday party, the baptism and even Jessie's first haircut. He was Uncle Brian; a title he had forgotten until he met Joshua. In essence, he felt like he owed both Kiara and Joshua for that, and the least he could do was to have a nice dinner with them.\n\nStill, he wanted to know what Kiara meant to talk to him about. It wouldn't be a good idea to bring up the awkward event in front of Joshua. He preferred that they talk in private, because he was sure that Joshua would be vying for his attention. He wanted to have fun, without having to worry about what Kiara truly thought of him. \n\nA few hours had gone by since he last spoke to her, and it was around lunchtime. He picked up his cell and decided to call her back. He hoped to catch her on a break. Maybe he could clear things up and save them from an awkward time.\n\n\"Hello?\" she answered after a few rings.\n\n\"Hey Kiara, I wanted to talk to you about something. Is this a bad time?\"\n\n\"No it's dead at work and my boss is on his lunch break. Is...this about dinner?\"\n\n\"Yes it is. What did you want to talk about?\"\n\n\"It's something that's been bothering me for a while. I just want to put my mind at ease.\"\n\n\"Would it be okay to tell me now? I hate to wait, when I know you're probably going to yell at me in the end.\"\n\n\"Who said I'd do that?\" she asked lightheartedly.\n\nHe sighed, \"Look, we both know what I said about Cat was wrong. I've said that I was sorry many times and it's like I keep getting reminded of my mistake. That's what this is all about, right? \"\n\n\"Brian, of course it can't be easily forgotten. I understand your frustration, but it's a fucked up world out there. People like you feel like they have the right to say anything to anyone, and that's a big problem for me. But...that was only part of the reason I wanted to talk. There are other things that I'd like to get out, and I'd prefer not to do it over the phone. The dinner idea was really for my son. He was disappointed that he wouldn't be going to see you and Cat, so I thought a little dinner date might be nice.\"\n\nHe smiled. \"A date huh?\"\n\n\"Well not a...\"\n\n\"It's alright, I'm kidding. And I'm not like that anymore. You said \"people like me\" but I've changed. What are you doing later after work?\"\n\n\"Not much...just a little grocery shopping. Why?\"\n\n\"Why don't I pick you up after work and we'll talk about anything you want?\"\n\n\"Are you backing out of dinner?\" she asked suspiciously.\n\n\"No not at all. I'd just rather get it over with. Besides, I wouldn't want to talk about any of this stuff in front of Joshua. I thought about it, and it would be better if we spoke before dinner. That way, it wouldn't be awkward. We'd be able to focus on having a little fun with him. Knowing your temper, things might get heated if we don't.\" he smirked.\n\n\"I don't have a...whatever! Are you sure? You're not going to be busy?\"\n\n\"I can spare some time for you. Where do I pick you up?\"",
        "\"I work at Brookville Hospital. It's kind of far though. I'll just meet you in town.\"\n\n\"It's no problem. I can get there faster than you taking the buses. They're kinda slow out there right?\"\n\n\"I'll be driving back to...oh...wait. Cat did tell you that I was having car trouble, right?\"\n\n\"Yeah. Did you get it fixed?\"\n\n\"I should tell you that she was just trying to get us to go up there together.\" she admitted. \"I'm sorry.\"\n\n\"It's okay. I should've figured.\" he grinned. \"You said you were going grocery shopping? How about I just meet you there? Maybe I can help with the heavy lifting or something.\"\n\n\"Um...okay. I might be there a while. Joshua's going away to my mom's house for his winter break, and I have to get lots of groceries. I wouldn't want you to wait on me.\"\n\n\"No, it's okay. I've got to get some stuff too. We can use the time to talk. Should be nice, right?\"\n\nHe heard her smile on the line, and he began to relax at the idea of seeing her again. Up until now, his nerves had been on end.\n\n\"Okay...yeah. It would be cool to have a little company.\" \n\n\"Great. Where do you shop?\"\n\n\"The supermarket on 89th street's got a lot of good sales this week. That okay?\"\n\n\"Yup. Text me the time I should meet you and I'll be there.\"\n\n\"Okay...and thanks for calling. I hadn't thought about talking in front of Joshua, so thanks for the suggestion.\"\n\n\"No problem. I'm sure that you already have a lot on your mind. So I'll see you later then?\"\n\n\"Yeah. I'll see you soon.\"\n\n\"Alright. Take care.\"\n\nBrian planned to meet Kiara at the store's entrance for 5:30. He was on time, but she hadn't arrived yet. She let him know beforehand that she would be a few minutes late, probably because of Joshua. He was no longer nervous, and it could have been because he had finally gotten her to smile. He was instantly reminded of the last time he saw her. That was when he really began to take notice.\n\nIt began two months ago, at Cat and Dale's house warming party. It may have been earlier than that, but he had been in denial about his feelings. The party was a small affair, with only one new person added to the mix. John had followed in Dale's footsteps, and also sought to find companionship. He had taken a liking to the local vet Abby, who frequently came to the farm to check upon the livestock and horses. She and John quickly hit it off once he got the courage to ask her out, and that conveniently left Brian and Kiara as the only single ones.\n\nHe had seen Kiara many times before, but Joshua had always been around, and she was in 'Mommy Mode.' Now he got to see a different side of her that all encompassed her sensual femininity. Joshua was left at home, and for one night, she let her hair down. \n\nBrian understood why. She loved and wanted to protect her son, which probably led her to put on that tough and worrisome face he was so used to seeing. Yet, at the party she had transformed completely, into a more carefree character.\n\nAt first it was her scent that caught his attention. The beautiful floral notes seemed to reel him in, and soon he found himself inching closer to her. After a few glasses of wine, his desires became even stronger. He wanted to touch her. He had taken into account that there were other people present, but he couldn't contain his fantasies. The Ruby-red maxi dress she had worn to the party was like a red bull's eye. The dress caught his eye no matter where she stood. Its hem stopped only a few inches above her knees, and he was greeted with the sight of her luscious brown thighs. He yearned to find out how soft they were.\n\nThe dress hadn't been too tight, and it accentuated the swell of her breasts, and her hourglass figure very well. He wanted to tell her that she was beautiful, but he couldn't go through with it. He already had the reputation of being the asshole of the bunch, and she might have taken it the wrong way. His infamous statements about what he found sexy had dug him into a deep hole, and there was nothing he could do to get himself out of it.\n\nAt the time, he had wanted to make her smile, like she did for her cousin. It may have very well been the liquor forming these ideas in his head, but he didn't care. He wanted her to like him. Even though no one was thinking of his past mistakes at the time, he couldn't let it go; not even for the moment. He imagined that she wanted to be as far away from him as possible, and he gave her what he thought she wanted.\n\nHe stayed away for the most part, until it was time to take a few photos. He had been directed to put his arm round Kiara's waist, and hesitantly did as he was told. She hadn't pushed him away, or given him any attitude. She could have even been an entirely different person, if he hadn't known any better. She also put her arm round him and pressed her body against his, for the pictures. By then he was completely gone; lost in her fragrance and the softness of her body. He wanted to squeeze her tightly and shower her neck with kisses, but that wouldn't have been appropriate.\n\nHe would have ended up with a black eye and a kick in the balls, if he had proceeded with such action. And so, after the picture was taken, he let go of her and went to sit back down in his corner. He remained there with a drink in hand, where he could admire her from afar. Needless to say, he expected these thoughts to dissipate once he went back to being sober. They did not, and even after everyone had gone home and back to their normal lives, he would frequently think upon that night, when he held her close.\n\nHe wondered what she would look like now. Would she appear in a sexy nurse's uniform with that beautiful sleek hair tumbling down to her shoulders? He smiled to himself as he looked straight ahead to the store's entrance. Had he not given into his daydreaming, he would have seen Kiara walking towards the side of his red truck. She gently rapped on the transparent window, and he flinched from the unexpected sight of her.\n\nShe smiled slightly and waved, while he tried to regain his composure. By God, he hadn't seen her. Had she hesitated for even a second more, she would have witnessed his hand falling to his crotch, to stroke his swollen member through his blue-jeans. He quickly pulled his t-shirt down and over the bulge, and exited the vehicle.\n\n\"Hi. Sorry I'm late.\" she said, with a warm smile. \"I had to check on a few things before I drove out here.\"\n\n\"It's alright. I was just chillin' out in the truck.\" he said, after clearing his throat.\n\nHe noticed that instead of a nurse's uniform, she was dressed casually, with a pink baby doll t-shirt and a pair of tight, black jeans. The outfit hadn't been what he expected, but she was still a sight to behold. He was even met with that same delicious fragrance, and it brought back memories of the cravings he felt on their last night together.\n\n\"Last night together...\" he thought.\n\nHe wished those words meant something more than just seeing her at a party. He noticed that Joshua wasn't with her, and wondered where he could be since school was out. \n\n\"Joshua's not with you?\" he asked.\n\n\"No...he's with his dad. They're...going to spend a little time together this afternoon.\" she responded hesitantly.\n\n\"Oh...well, after you.\" he replied, with a forced smile.\n\nOf course Joshua had a father. It was obvious, but he'd never quite acknowledged the fact. His heart sank at the thought of another man being in Kiara's life, as well as Joshua's. It never occurred to him, because she had never spoken of Joshua's father in his presence. He assumed that it was just the two of them. Jealousy crept into his heart, as he imagined another man holding Kiara in his arms.\n\n\"Does he know that you're meeting me here?\" he asked, referring to Joshua's father.\n\n\"Who Joshua?\" she asked, unaware.\n\nHis first thought was to say no; however, intuition told him to go with the opposite.\n\n\"Yeah.\" he quickly responded.\n\n\"No, I didn't say anything about meeting you. If I did, he would have wanted to come with me, and then we'd never get to talk. Besides, his father needs to spend more time with him.\"\n\n\"They don't see much of each other?\" he asked, with a sense of relief.\n\n\"No...he was never there for Joshua. He only comes around when he feels like it and...\"\n\nKiara stopped talking, as if she remembered who she was about to confide in.\n\n\"I'm sorry. Am I being nosey?\" Brian asked, sensing her uneasiness.\n\n\"No not at all. I just don't want to lay my burdens on other people.\" she said, with a tiny smile.\n\nThe awkward conversation ceased until they strode into the supermarket's entrance. Brian pulled out a bright red shopping cart from the stack, and observed the store's bright red and green displays. He noticed that the place was quite empty. On the store's polished white floor, was only a handful of employees stacking the shelves. A few children were here and there, cuddling boxes of sweetened cereal and candy bags.\n\nHe watched and waited as Kiara fished through her handbag, and pulled out a shopping list. He only wanted a few essentials and had everything memorized. She on the other hand, would not be shopping light. But he didn't mind. Maybe this trip would grant him some time to get to know her better.\n\n\"Mind if we start in the pasta aisle?\" she asked.\n\n\"Nope. You lead, I'll follow.\"\n\nThe two headed to the Pasta aisle, which was recently stocked with boxes of macaroni and cheese and Chef Boyardee cans. Kiara grabbed a few cans of ravioli, and stacked them into the wide cart.\n\n\"I remember when my dad used to buy me these. I loved em'.\" he chuckled.\n\n\"Yeah, Josh really likes them too. We eat a lot of home cooked meals, but once in a while I like to spoil him. Since he's going over to my mom's, I want to make things easier on her. So I'm going to get a few quick meals.\"\n\n\"How long is his break?\"\n\n\"Two weeks. I took off from work at the same time. I wanted to have a little vacation while he was gone.\"\n\n\"Sounds good! So, will I have to duck for cover, when you tell me what's bothering you?\"\n\nShe laughed at this and he smiled in response. He liked this side of her.\n\n\"You make it seem like I'm the angry type. I'm not going to yell at you...although, Joshua did tell me that you guys have been keeping secrets.\" she said. \"You were going to let him ride all alone, and I wasn't supposed to know about it.\"\n\nBrian snickered, \"He blew my cover huh? Well, he did say that you wouldn't yell at me. So I guess he was right. He's around the same age that Jessie was, when he learned to ride.\"\n\n\"Jessie?\"\n\nShe wasn't familiar with the name.\n\n\"Yeah. Dale's little boy.\"\n\n\"Oh...I-I'm sorry.\" she said solemnly, losing her smile. \"I never knew his name. It's horrible what happened. I don't know what I'd do if something was to happen to Joshua.\"\n\n\"We all took it pretty hard. Josh actually reminds me of him. He loved the horses too.\" Brian smiled.\n\nHe hadn't spoken Jessie's name in years, and heartbreak suddenly swept over him at the mention of his deceased nephew. But he hid his pain from Kiara. He wasn't going to act like a big softie in front of her.\n\n\"Well as long as you keep him safe, I suppose you can let him ride. I wouldn't want to have to kill you now.\"\n\n\"Yes Ma'am!\" he smiled.\n\n\"Since we're on the subject, I suppose I should get to the point of the matter.\"\n\n\"Go ahead. Just don't hit me.\" he joked.\n\nHe winked at her playfully and the sad memory slowly began to dissipate.\n\nKiara rolled her eyes at him, and began, \"My son...he really likes you. Actually he talks about you more than his father. But as his mom, I have concerns. What you said about Cat still bothers me. I'm a little smaller than she is, but it isn't by very much. It terrifies me to think that one day Josh might be influenced by the things you said. Whether you like it or not, you've becoming sort of a figure in his life, and I want him to be an upstanding man who respects women, regardless of their sizes or what they look like.\"\n\nBrian nodded, \"I understand where you're coming from, and know that I'd never talk like that in front of him. Dale and I...we've always dated certain types of women. Smaller, I guess and I don't know...I was used to making fun of women I wasn't attracted to. I was wrong for it. I knew that. I was trying to be funny, but I didn't think that Dale would take it so seriously, or that Cat would hear me.\"\n\n\"Well the fact is that she did. I know you have a type, and I'm not trying to force you out of it. You like what you like. Society treats women of all sizes badly; that's a given. You weren't the only guy to do it, and you probably won't be the last. But I can't have Josh treating women like that; skinny or fat. I'll be honest with you. Sometimes I thanked God that I wasn't Cat. I hate to say it, but I saw how people treated her. The name calling, and laughing behind her back; all of it. Sometimes I just stood by and watched, thinking \"At least that's not me.\" Now as a mom I couldn't imagine what going through life must've been like for her. I think that's why she was so quick to get away from Dale. You guys were just like the others...and I'm no better.\"\n\n\"Don't say that Kiara. It's not your fault. It was all me. I know what I did. I remember it every time I see her face. I don't even feel comfortable being around you guys. I feel like I gave the worst impression, and there's nothing I can do to change your minds. I sometimes avoid going to see them because of that whole mess.\"\n\n\"You don't have to. She believes you're a good guy.\"\n\n\"She does?\" he asked, with a tiny frown.\n\n\"Yeah. She said that you were probably taking your frustrations out on someone you didn't know.\"\n\n\"I guess...but that doesn't excuse what I did. And, what about you?\"\n\n\"Me?\"\n\n\"Yeah. How do you feel about me?\"\n\n\"Well...I...uh...\" she stalled. \"Joshua likes you, and he thinks you're cool. I guess that's good enough for me.\"\n\n\"Dodging the question huh?\" he smirked. \"I know how he feels.\"\n\n\"Well...that was the other thing that bothered me. Dale is your best friend and you wouldn't want to lose him. I was worried that you were pretending. I'm hesitant to say how I feel, because I don't know you all that well. So...are you pretending?\"\n\n\"No, I'm not. If I was, I wouldn't be here with you. You remember the last time I saw you guys? At the party?\"\n\nShe nodded.\n\n\"I didn't say much to either of you.\"\n\n\"I noticed. I just figured that you weren't in the mood for the party.\"\n\n\"I was. I wanted make merry with you guys, but I felt ashamed for being included. I didn't deserve to be around you good people. So, I just kept my distance. Joshua's nice to me, because he doesn't know that I was an asshole to his Aunt Cat. He wouldn't like me so much if...\"\n\n\"Whoa wait honey! Do you hear yourself? You did just hear my confession of not wanting to be in Cat's shoes, right? We've all done and thought bad things, and no one is below forgiveness. Cat forgave both of you and I should too. I think I went overboard with the anger, because I was just as guilty as you were. When I called you, I think I was also yelling at myself for being a bystander, you know? Once again, I was letting my cousin's feelings get hurt. For the record, I'm sorry. I shouldn't have gone that far. I never even thought of apologizing to you until now.\"\n\n\"It's alright. I deserved it. I think that phone call actually snapped me into shape, and forced me to question what I was doing. So I should thank you, and I apologize for putting you guys through that.\"\n\n\"No more apologies okay? We've spoken about it, and its water under the bridge.\" she smiled warmly.\n\n\"So, can we be friends now?\" he asked hopefully.\n\n\"I don't see why not. By the way, what would you like for dinner? I don't know what you like to eat?\"\n\n\"Anything! I never turn down a free meal.\" he replied innocently, even though his thoughts had become lascivious at the behest of the question.\n\nShe hadn't noticed, because she was distracted by her shopping list, but he had been admiring her plump figure the entire time. When she bent over to look at the prices, he caught glimpses of her heaving breasts, which seemed to bulge and spill out of their tight harness. He wanted to liberate the soft orbs and have them as dessert. He would have even preferred to skip dinner, and instead, prod his tongue into that pink center between her thighs.\n\nHe began to feel dizzy at his arousal, in turn provoking his cock into semi-erection. She had been oblivious to all this, yet a part of him wanted her to know just how much of an effect she was having on him. Even in this very public place, he would have liked to pin her against the stocked shelves. He wanted her to feel the bulging evidence of his attraction to her.\n\n\"Come on. Give me a hint? Steak? Seafood?\" she asked, completely oblivious of his wanton thoughts. \"Are you allergic to anything?\"\n\nHe cleared his throat and smiled, \"Don't worry. I can eat anything, and I'm sure you're a great cook. Surprise me.\"\n\n\"Okay. If you say so.\"\n\nHe looked down at the filled shopping cart, and realized that time had passed rather quickly. The distraction of his fantasies, and their brief conversation, led him to enjoy their time together. Otherwise, this would have been a dull trip to the local supermarket.\n\nDuring the course of the conversation, they had already walked through most of the aisles. They picked up cereal, peanut butter, microwavable meals and fun sized snacks for Joshua. Brian knew that Kiara probably wasn't going to cruise into the beer aisle, so he excused himself for a moment to get a 6 pack. He still liked a beer or two, and hoped that Kiara wouldn't be offended by his drinking.\n\nHe felt rather good however, as he left her behind in the Baking aisle. He now knew what the expression, \"walking on air\" felt like. There had been hope for him after all and it seemed that his fears had been premature. Kiara had given him a chance to explain his side of the story, and she did it as a lady, without interfering or using accusatory words.\n\nHe had even seen the vulnerable side of her, which she couldn't have been very comfortable sharing. This made him respect her even more, and he hoped that they would become even closer. He was in no rush to ask her out though. He had seen Kiara for who she really was, through her concern for Joshua and Cat. He was happy enough just to talk with her; at least for now. His desire to have her was still strong and ever present.\n\nHe reached the beer aisle and began to scan the shelves for a pack of Coronas. In the next aisle over, he overheard two females chatting amongst themselves. At first, he dismissed the conversation, but then he heard mention of Kiara's name. Curious about what they found so funny, he silently listened in on their conversation.\n\n\"Girl I can't believe she's walkin' around with a white boy.\" one of them said. \"What the hell's gotten into her?\"\n\n\"I know right. At least Joshua ain't there. Derek would blow a gasket!\"\n\n\"She sure don't know how to keep a good black man. Your brother's a lawyer, he makes good money and he's fine as hell! Why the hell did she ditch him for a white boy?\"\n\n\"Who knows? The girl's lost it! I'm about to call him right now.\"\n\nBrian quickly grabbed a 6-pack, and stealthily snuck to the edge of the aisle, to spy on the two women. One of them, a red head with a long curled ponytail was on her cell phone, presumably calling her brother. The other, a shorter woman with a blonde pixie cut, scanned the shelves of soda bottles, with a shopping basket in hand. They were both young women, and probably acquaintances of Kiara. At first he thought to play spy, and continue to eavesdrop, but decided against wasting his time on their type.\n\nA classier woman was waiting for him nearby, and he hurried back to the aisle where he'd left her. He thought it best not to tell her about the two women. He wasn't sure if she would try to confront them and cause a scene. The afternoon had been a good one, and he wanted to keep it that way.",
        "He found her at the store's front, next to the checkout line, going over the items in her shopping cart.\n\n\"Ready?\" he asked, as he approached.\n\n\"Yup. Got everything you wanted?\" she smiled.\n\n\"Just about.\"\n\n\"I think I'll drive over to my mom's after this, to drop everything off early.\" she said, as she closed in on the cue.\n\n\"When are you taking him over there?\"\n\n\"Day after tomorrow. He should be happy after he sees you. Oh...I forgot to get some hot chocolate. I'll be right back, okay?\" and she dashed into one of the aisles, leaving him behind with the cart.\n\nBrian caught himself watching her behind as she walked away, but quickly tore his eyes away from her body. He was lucky that the store was empty; otherwise, he would have looked like a slobbering fool to any onlookers. He began to pile the groceries on the moving belt while she was gone, hoping to distract himself from anymore of his daydreaming.\n\nShe had just emerged out of the aisles and joined him on the line, when someone called out to her.\n\nHe and Kiara turned around to see the same pair of women he'd crept upon, coming up from behind them. They were probably following Kiara.\n\n\"Hey girl, how've you been?\" the redhead asked, flashing a smile that masked the sinister personality he'd seen not too long ago.\n\nThe blonde woman smiled, but looked Kiara up and down, as if taking her measure. Her eyes held a look of contempt. Even he noticed, but Kiara ignored it, and waved back at them.\n\n\"Hey. I'm alright. How's everything?\" she acknowledged the red head.\n\n\"I'm good. Where's my nephew at?\"\n\n\"He's with Derek. They went to the park, while I'm shopping.\"\n\n\"Okay. I see you got a lil' boo thang over here.\" she said, cocking her head towards Brian.\n\nKiara smiled nonchalantly and proceeded to introduce him to the women.\n\n\"This is Brian. He's an old friend of mine. Brian this is Natalie and Tayshia.\"\n\n\"Hi ladies.\" he smiled. \"How y'all doin' today?\"\n\n\"We're good!\" Natalie, the red-head and obviously the leader of the two, responded.\n\nHe turned back to the cashier, who asked if the groceries were all being paid for on the same bill.\n\nBrian handed his card to her, and said \"Yeah, everything.\"\n\n\"Brian? What are you...?\" Kiara questioned with a slight frown.\n\n\"Talk to your friends. I got it.\" he smiled.\n\n\"Ooh girl!\" Natalie squeaked. \"You givin' him that good stuff huh? Got him payin' for your food and everything! Derek never told me you were...\"\n\n\"Derek? Sorry but I don't tell deadbeats my business. Now I've got to finish up and get home. I'll see you some other time.\" Kiara interjected and turned away from the pair to join Brian.\n\nThe cashier already had everything bagged, and had just handed him the receipt when Kiara joined him.\n\n\"Come on.\" she said, apparently annoyed.\n\nBrian didn't say a word, but followed her as she left the two women, wide-eyed behind them. They had walked into the parking lot with the stocked cart, when he decided to finally say something.\n\n\"Mad at me?\" he asked, as she opened the trunk of her car.\n\n\"No I'm not mad. But why did you do that?\" she sighed.\n\n\"What'd I do?\"\n\n\"Pay for my stuff. I'm not comfortable with men paying for things.\"\n\n\"Why is that? Can't I do something nice for a friend?\"\n\n\"When a man pays for something it usually means he expects something in return. I don't...\"\n\n\"I don't want anything from you Kiara.\" he said, aware that this was a slight lie.\n\nHe did want something. He wanted her, but he couldn't openly confess any of this. Her version sounded malicious, while his intentions were far from it. He would have done this for her even if she would never see him again.\n\n\"Well did you do it to get them talking?\" she continued, \"Because they will. It's a small town, and everybody knows everybody's business.\"\n\n\"I did it because I wanted to. You're treating me to dinner. It's the least I can do. Anyway, I didn't know you had stalkers out here.\" he said playfully, hoping to avert her attention from his so called blunder.\n\n\"Stalkers? Yeah you're probably right. Maybe I should call them stalkers. Those two have nothing better to do than talk shit about other people.\"\n\n\"So Natalie...she's Josh's aunt? And she doesn't like you?\"\n\n\"No she doesn't, but I don't really care. She's a fake, and I don't associate myself with people like her. I only tolerate her and her brother because they're Joshua's family. He's too young to realize how conniving people can be.\"\n\n\"Are you worried that word's going to get out about us shopping together?\"\n\n\"Not in the least. I'm a grown woman, and I choose my own company. If they can't handle that, then it has nothing to do with me. I know she's going to go back to her brother and talk about me like she's still in high school, but I don't give a damn!\"\n\n\"You two aren't together?\"\n\n\"No. He left me a few months before I had Joshua.\" she said glumly, avoiding eye contact.\n\nIt was a look of shame, but he knew that she probably wasn't to blame for this misfortune.\n\n\"Damn Kiara. I'm sorry.\" he sympathized.\n\n\"It's okay. I got over it and I think I was better off without him anyway.\"\n\n\"Is it going to be a problem? Having dinner, I mean. I don't want to cause you any trouble.\"\n\n\"Still trying to back out of dinner?\" she asked, with a tiny smile.\n\n\"No...I just don't want to bring any drama into your life. Those two look like they're plotting against you or something.\"\n\n\"All the more reason to not back down. Besides, you'll have to explain to Joshua why two girls scared you out of coming to dinner. You want that?\" she said, finally lightening up.\n\n\"No Ma'am!\" he chortled. \"I'll be there. Don't you worry.\"\n\n\"Alright then. Thanks for the help. I'll see you tomorrow.\" she said, as she got into the driver's seat.\n\n\"Definitely! I wouldn't miss it.\"\n\nShe smiled and bid him goodbye, and slowly drove away. He looked back to the store's transparent windows and saw the two women still chatting. He knew that they were probably whispering rumors about him and Kiara. They were likely to bring Joshua's father out to shake things up. Women had the ability to ignite such fury in men, and he knew that whatever was coming wouldn't be good. But he would not let them keep him away from Kiara. She was a feisty one, but worth whatever trouble those two could ever throw at him.\n\nChapter Three\n\n\"Are you kidding me?\" Kiara shouted at her ex over the phone. \"Seriously! How old are we Derek?\"\n\n\"What do you mean?\" he replied defensively.\n\n\"How old are you and how old is Natalie? You're both acting as if we're still kids!\"\n\n\"What's our age got to do with anything? Word is you're walking around with a white boy, calling me a deadbeat and shit. Did you, or did you not say that?\"\n\n\"Yes I said it, and it's true. I know where you got this all from, and you can tell either one of those bitches to grow the fuck up. Since when do you care about who I'm walking around with? You never cared before. Is it because he's white or because your chick left you, and you've got no one else?\"\n\n\"Of course I cared.\" he replied, avoiding the question. \"I care about you.\"\n\n\"Oh that's rich! You care about me now that you're alone and Stephanie left you. Before that I was only a baby mama to you. I didn't mean anything. Eight years went by and you treated me like I was just an employee; a babysitter for your son. Now I'm supposed to just forget all that, and go crawling back to you?\"\n\n\"You're still stuck on the past Kiki.\" he said more calmly. \"Just let it go. I'm trying to get my family back.\"\n\n\"Oh no! I will never let it go. I will protect myself and Joshua from you if I have to. So quit the bull and tell Natalie not to ever approach me like that again. I knew this was coming, and I knew they would get you to come after me. I just didn't think it would be so soon. You can still see Joshua, but don't ever think that you can lecture me about who I'm with. I am not your child and I am not your woman. I will walk around with whomever I please, so back the hell off!\"\n\n\"You're trippin'! I'm going to come around, to see Josh alright?\" he responded, ignoring her warning.\n\n\"Now you want to start coming around? Well you can't tonight. We have plans.\"\n\n\"Look Kiki. We need to straighten this mess. I want to fix things between...\"\n\n\"But that's what you don't get. There's nothing to fix!\" she cut in. \"All damages are done, so just get on with your life, and I'll get on with mine. I have to go.\"\n\n\"But...\"\n\n\"I gotta go!\" she repeated sternly.\n\n\"This isn't ov...\"\n\n\"Goddamn him!\" she muttered under her breath, as she hung up without giving him a chance to finish.\n\nShe was in the middle of cooking, when Derek decided to give her a call. This was all being done on purpose. She knew him well, as he did her. He was intentionally trying to frustrate her in hopes of foiling her plans.\n\nA part of her felt good to know that he was jealous. After all, what better way was there to get back at an ex who hurt you? She had hidden this small satisfaction from Brian, but she was actually happy that Natalie had seen her with another man. It wasn't the first time. This time however, she was seen with someone of a different color from every other man she dated in the past. They weren't even a couple yet, but Derek seemed to take offense to that very fact. At this point, she wasn't sure of what he would do. His response had been unlike anything she expected. He had always been calm and confident; even in an argument. But now, he was behaving much differently.\n\nGetting back at Derek did feel good, but a thought began to worry her. Maybe she had always wanted him back. Why else was she feeling happy to be getting attention that wasn't shared with Joshua? \n\nThere was an extreme difference this time around. Of the few men she entertained in the past, not many had measured up to Derek. She would constantly compare their appearances, salaries and manners to his. She thought that he was the best she could ever do. She now realized that she really hadn't gotten over him, and sought these men in hopes of making him jealous. She had unintentionally placed him on a pedestal and suffered for it.\n\nOf course things never turned out as she hoped, and she was left alone without so much as a kind word or apology from Derek. But she no longer felt the need to compare anyone to him. He was no longer impressive in her eyes. Brian had stolen his spotlight and she felt good about that, regardless of their rocky history.\n\nShe wanted Brian to be a part of her life, no matter how insignificant. Joshua's happiness was paramount, yet even she felt content in his presence. Maybe there really could be something there. She was a little skeptical, but knew that he was trying his best to make up for past mistakes. He could have avoided her, but chose not to. She would keep an open mind and base her decision on tonight's events.\n\nThe doorbell rang suddenly, and she looked to the clock, fastened against the kitchen wall. It was only a quarter past seven.\n\n\"What the hell?\" she snorted.\n\nWhy couldn't Derek just take a hint? She had no patience for his antics, but she marched to the door anyway, ready to give him a piece of her mind.\n\n\"What the hell is wrong with him?\" she thought. \"I need to get rid of him, and fast before Joshua sees him.\"\n\nKiara approached the door with her mean face on, but was only greeted by a smiling Brian. She was taken aback, because he looked quite different from when she last saw him. At 6'2, she had always thought of him as a tall and rugged Marlboro man. He seemed quite fond of wearing jeans and t-shirts as his main garb. At the last party, he had donned that same unkempt look, while everyone else had dressed formally. He never seemed to care much about grooming either, because he was normally unshaven, and his blonde curls were always long and hidden by a baseball cap.\n\nNow a gentleman stood before her with a dozen red roses in one hand, and a large sky-blue gift box in the other. She didn't know what to say and just stared at his unfamiliar, yet gorgeous form. His dirty blonde hair was no longer wild and flapped in the breeze. Instead it was cut short, and slicked back to reveal his handsome features. His cobalt blue eyes seemed even more vivid now, and his high cheekbones and chiseled jaw, gave him a look of sophistication. He had also ditched the t-shirt and jeans look, and worn a charcoal grey suit with a matching tie.\n\n\"Wow...you look...\"and she paused, not knowing whether she should use the word \"handsome\" to describe him.\n\n\"Different?\" he smiled and presented her with the large bouquet.\n\n\"Yes. If I didn't know better, I would've thought you were a businessman or something.\"\n\n\"You don't like it?\" he asked and raised his golden eyebrows.\n\n\"No, I do...I just...wasn't expecting you so soon.\" she said, and her cheeks flushed with heat.\n\nHer fingers shook as she accepted the bouquet, and she tried her best not to fumble and drop them.\n\n\"I know. I wanted to hang out with Joshua before dinner. Is that okay?\"\n\n\"Yes. Sure. Oh, I'm sorry, come in.\" she said, realizing that in her dumbfounded state, she'd forgotten to invite him in.\n\n\"Thank you.\" he said and walked past her.\n\nHe even wore cologne, and the spiced fragrance made her heart flutter as he brushed past. She wanted to steal him away and keep him close, but as he said, he was only here for Joshua.\n\nThe words stung, but she ushered him into her tiny and simply furnished living room. Joshua sat on the tanned carpet and was playing one of his video games. He wasn't dressed as formally as his elders, and had on a light blue polo shirt with khaki shorts. He was too engaged in his game to even realize that he wasn't alone anymore.\n\n\"Thank you for the roses\" Kiara whispered, not wanting to alert her son to their presence. \"I never expected a gift.\"\n\n\"You're welcome.\" he smiled. \"I got Joshua something too. I think he'll really like it.\"\n\n\"That wasn't necessary Brian. You already did something nice for us. You didn't have to get us anything else.\"\n\n\"Are you always going to be like that?\" he teased with a grin. \"I wanted to, so take it easy. I like treating a lady to nice things.\"\n\nShe shook her head and smiled, \"Okay, Marlboro man!\"\n\nHe returned the smile and it warmed her heart. She hoped that her cooking would please him tonight. He had already done much in such a short time and deserved a decent meal.\n\n\"Hey Josh!\" he called out, while Kiara gazed at him in awe. Her eyes hadn't gotten used to his transformation.\n\nJoshua quickly turned around from his trance-like state and squealed, \"Brian! You're here!\"\n\n\"Yup! I wanted to hang out with you for a little bit, so I came early. What you playing?\"\n\n\"Need for Speed. Want to race with me?\"\n\n\"Sure...but I'm not so good at these games buddy.\"\n\n\"It's not hard. Come on I'll teach you.\"\n\n\"Alright. Sounds like a plan. Oh and I got you a little something.\" he said, and handed Joshua the blue gift box.\n\nThe box was huge in Joshua's hands, but light enough for him to support it.\n\n\"Really? What is it?\" Joshua asked excitedly.\n\n\"Open it up!\" Brian smiled, as he got on one knee to match Joshua's height.\n\nKiara enjoyed this little scene. Brian seemed to bond with Joshua so effortlessly, and it made her happy to see her son in such high spirits. Without waiting another second, Joshua lifted the box's lid and let the cover fall to the floor. He gingerly unfolded the opaque tissue paper, and lifted a tiny, black, felt cowboy hat from inside. Immediately, Joshua placed the hat over his head and it was a perfect fit.\n\n\"When you get back from your grandma's I'm going to ask your mom to take you riding again. Every cowboy deserves a good hat right?\" Brian winked at him.\n\n\"Yup!\" Joshua said, and flung his arms around Brian.\n\nKiara laughed at them. It was a very sweet gesture, and she would give him some slack for wanting to let Joshua ride alone.\n\n\"How do I look mommy?\" Joshua grinned.\n\n\"It looks really good on you baby. I can't wait to see you in action.\"\n\n\"Can I wear it to dinner?\"\n\n\"Okay but just for tonight, alright? Did you say thank you to Brian?\" she reminded him.\n\n\"Thank you Brian!\" Joshua smiled.\n\n\"No problem little guy.\" Brian chuckled. \"Ready to teach me how to play?\"\n\n\"Yeah, come on!\"\n\nShe would have liked to stay with them, but her attention was needed in the kitchen.\n\n\"Okay guys!\" she said. \"I'm going to have dinner ready in a little while, so don't get too caught up in the games.\"\n\n\"Need any help?\" Brian asked, as he rose from the floor.\n\n\"No, I'm okay. You two have some fun. I'll let you guys know when it's time to eat.\"\n\n\"Okay, but if you need me, give a holler.\"\n\n\"I will.\" she smiled, and turned towards the kitchen.\n\nShe really did want him to join her. She enjoyed looking at him. It was then that she seriously began to entertain the idea of asking him over more often. Even now, her fingers still trembled with excitement and her heart trip-hammered in her chest as she thought of his smile. She went a little further and imagined what his mouth would feel like on hers. She longed to know what he tasted like...but they had a long way to go before any of that could happen. She was unsure of whether he even found her attractive.\n\nShe had gotten her hair and nails done, and worn a cute little black dress that was sexy, yet appropriate in the company of Joshua. She wanted to impress Brian, but he never showed any signs of interest. This was a little disheartening, and she began to feel foolish. At first she hadn't cared so much about catching his eye, but now she was fretting over if he found her pretty enough.\n\n\"This is all Cat's fault.\" she sighed.\n\nShe wondered what Cat would think if she could see him now. With a cooler head, she realized that he had indeed over gone this major change for her. Joshua already loved him and wouldn't have cared about his appearance. Maybe after Joshua was gone, she could spend a little one on one time with him; something not involving only dinner. That would definitely be something to look forward to.\n\nBrian lay back on the couch and watched as Joshua expertly maneuvered his racing cars on the television screen. He had played a few rounds but preferred to watch Joshua. He hadn't expected to feel very comfortable in their home. For a brief moment, he had even thought of her as the enemy. But then, she and Cat had probably thought of him in the same way. Still, he felt quite at ease now and was surprised that he didn't want to go anywhere that she wasn't; namely home.\n\nShe had left him and Joshua alone but he wanted to break away and go to her. He had given her the shock of her life by dressing up, but he wanted to please her. At the last minute he decided to get her a present. He had already gotten the hat for Joshua a month prior and wanted to do something that would possibly accelerate the pace of their new relationship. \n\nKiara had greeted him at the door with a look of annoyance but her anger quickly melted away, which gave a hint of mutual attraction. She was speechless and he tried his best to not laugh at her. Not many had ever seen him like this and anyone would have been easily shocked by his makeover. Despite her expression, she was beautiful tonight. She had also dressed up and worn a pretty black dress. It was a simple knee-length style which would have been drab and unflattering on any other woman, but Kiara was a knockout in the dress.\n\nHis mind was riddled with fantasies of slipping the loose sleeves down to her shoulders and brushing his lips against her cocoa-toned flesh. His lips quivered as he thought of taking her to bed and exploring every inch of her body with his tongue. It was a shameful thing to have such thoughts with her son right next to him but he couldn't help it. The more he tried to suppress his lust, the more irritated he became. He treasured their new friendship but the underlying fantasy of having her was more powerful. He wondered what his younger self would have thought of all this.",
        "In truth he never saw himself with someone like Kiara. He always pictured his dream girl as some hot blonde. He always had a thing for blondes. It was just his preference and had been this way since high school. When he went bar hopping with Dale in their earlier years, they would always look out for the hottest blonde or brunette; the latter being Dale's favorite. Dale had gotten with Marie, while he never gave any serious thought to relationships. He would go out with one woman, then a while later hook up with someone else. Now this routine had run its course and he wanted something else; something better.\n\nHe was tired of bars and temporary women. He wanted something solid; someone he could count on for love, as well as pleasure. He was always told that he was attractive by more women than he could ever count and that had been the one thing he relied on when trying to find sex or women. He never cared to work hard, but his looks had gotten him only so far.\n\nNow he was learning that just being good looking did not guarantee love or a woman to take interest in him for long. That was probably why Kelly left him. She had found him charming and attractive in the beginning, only to learn the truth of who he really was later on; unkind, rude and impetuous. He was sure that his past girlfriends had even more unflattering adjectives to describe his character and they would probably be right. He never even gave a damn about being a good man, but things had changed.\n\nNow he had to start all over, but it was a welcomed change. He was lucky to be here and now, with a changed attitude and people to care about. He tried to force those lustful thoughts away and put patience before everything. His love for Joshua had indeed transformed him, yet he still struggled with the sexually frustrated caveman raging inside.\n\nMany times he tried to deny these feelings and urges, but it was to no avail. Kiara was gorgeous, independent and fearless. He needed someone like her in his life. If not for the pleasure of making love to her, then better to learn from her example; someone unlike anything he'd ever known. She had been through many struggles; probably more than she was willing to admit and he admired her strength. This was the south after all and being both a single parent and a black woman were not easy.\n\nHe wasn't blind to how black people were treated and even he had looked down upon them; especially Cat. He thought that she was below Dale's standards. An angry phone call from Kiara and an ultimatum from Dale finally set him straight.\n\nHe wanted to change and more importantly he wanted to be the man that Kiara wanted. He wanted to end her suffering and be there for Joshua, even though he wasn't the father. He remembered when the older folks criticized unwed, single moms and bastard kids; never giving a thought to them being actual people with struggles. He didn't want that for Kiara or Joshua. They deserved happiness and he wanted to replace Derek. The man didn't know what he had.\n\nBrian took a deep breath and then rubbed his eyes. It was strange how his thoughts shifted from lascivious, to calm and composed so quickly. He wasn't used to dealing with the new dilemmas that came along with his attraction. It was becoming too much of a chore to suppress these ever shifting yearnings. He thought that he should talk to Kiara about all of this and be honest about how he felt. Maybe she would listen and alleviate some of the pressure. At this point only one thing would calm him, and that was knowing how she truly felt about him. He had caught tiny hints, but they weren't strong indications and might have been wishful thinking on his part.\n\nWhat a weakling he was by second guessing himself. This was not the over-confident Brian he was used to. His father would have been ashamed to see him like this; anxious and wanting to talk to a woman about...\n\n\"Brian?\" Kiara called out to him quietly.\n\n\"Hmm? What?\" he responded, as he snapped out of his reflection and whipped his head around in surprise.\n\n\"Are you okay?\"\n\n\"Oh, yeah I'm fine.\" he lied and wiped the tiny beads of perspiration that had accumulated on his forehead.\n\n\"Are you sure? You look a little pale.\" she said, glancing at her son, then back to him.\n\nIt was clear that she thought Joshua had done something to upset him but she couldn't have been further from the truth. He didn't hear her come into the living room but was glad that she did. An uneasy feeling had crept over him as the realization of what...or rather who influenced him to be the unpleasant man that he was, came into focus. He had been an emulation of his long dead father.\n\nLike Dale, his own father had passed away when he was young. The old man loved cigarettes and the bottle, and so he died from the excessive use of these vices. Luckily Brian had never taken much of a liking to smoking and only drank in moderation. He could have done far worse by following in his dad's footsteps. He never knew his mother but was told by his old man that she had gone off with another man.\n\n\"That stupid whore left me to go off with some retard!\" his father would say, \"She didn't have much of a brain in that head of hers anyway. Hell if I care if she's dead or alive!\"\n\nIt didn't mean much to him because he had been too young to remember his mother. She never contacted him, nor did she ever return. He didn't blame her. His father, when he was alive, was not someone he would want to introduce Kiara to. If she still thought him to be that major asshole, his father would be just that, only multiplied by ten. That was where he got his arrogance and unruly mouth from.\n\nThe thought of his father made him feel queasy but he tried his hardest to focus on the moment at hand. If Kiara knew what was going through his mind, she might have been turned off.\n\n\"Can I have a glass of water?\" he asked, trying to give his most convincing smile. \"I think I'm just a little tired from work.\"\n\n\"Yeah...sure.\" she said and slowly headed for the kitchen.\n\nThe way she moved spoke of her concern for him and he decided to follow, instead of waiting for her return. He was afraid that if she left him behind again, his thoughts would spiral out of control. He wouldn't let that spoil their evening. Besides, this was his chance to go to her.\n\n\"I would have brought it to you.\" she said, once she realized that he was following her.\n\n\"It's okay. Sure you don't need any help in here?\" he asked, as they entered the kitchen.\n\nHis stomach growled suddenly as the savory aroma of seafood filled his nostrils. He immediately remembered commercials he'd seen as a kid, of families happily enjoying their dinner. In these advertisements, the man of the house would come home after a hard day's work. He would meet his wife in the kitchen and she would have a big dinner ready. He would then dip his finger into a silver bowl full of cake batter, all with a wide grin on his face.\n\nHe would kiss his wife on the cheek, as a thank you for the meal, and then join his two or three children at the table. Then, his wife would bring their dinners out and everyone would dig in with happy smiles on their faces, while simultaneously endorsing whatever products were being served. That was how he envisioned his future family. It was a stretch and not a very practical scenario, but all in all, it was still what he wanted. Being in Kiara's company had been the closest he'd ever gotten to this perfect vision, and he didn't want to give it up, not for anything.\n\nShe had prepared Shrimp Alfredo for dinner and the creamy white sauce still simmered over the stove. As side dishes, they would be having a garden salad and fresh baked butter and garlic rolls. He was suddenly stricken with sadness, and felt helpless once again. He needed her and didn't want to go back home to an empty apartment, devoid of the comfort and love he felt here. He would have liked to be frank with her, but he knew that if he said anything, his confession would either render her quiet or uncomfortable. So, he pretended to be unaffected by his emotions.\n\n\"Everything looks so good.\" he smiled and patted his empty stomach. \"Looks like we got a chef in the house!\" \n\nShe laughed and handed him a glass of ice cold water, \"It's nothing fancy. We haven't had seafood in a while so I thought this would be nice.\"\n\n\"Man, I wish I could get some good home cooking like this every night. This beats Chef Boyardee any day.\"\n\nShe giggled. \"Yeah, yeah. Enough with the flattery.\"\n\n\"No I'm serious! Joshua's lucky.\" he said, not knowing how else to praise her.\n\n\"Well I try.\" she said sheepishly. \n\nHe gulped down the glass of water and began to feel a little better as the cold liquid filled his empty stomach.\n\n\"Are you sure you're okay?\" she asked again.\n\n\"Yeah. I was just thinking about some things.\"\n\n\"Oh...I see. If you're not feeling well, you can go home. Maybe we could do this again another time?\"\n\n\"No way! I feel better now and I've been looking forward to trying your cooking. I could never make something like this on my own.\"\n\n\"It's easy. Not much to it.\"\n\n\"Nah. I know you're trying to kick me out but I insist on eating with you guys.\"\n\n\"Why would I do that?\"\n\nHe shrugged and smiled.\n\n\"Well if you really do feel better, would you mind helping me set the table?\" she asked, \"We'd eat a lot quicker if I got a hand.\"\n\n\"Definitely! Where should I start?\"\n\nShe gave him directions on how to set everything up. He was to bring out the salad and rolls first, while she put the finishing touches on the shrimp and pasta. Her dinner table was already decorated with ivory tapered candles and a crystal vase filled with the roses he had gotten her. He smiled as he admired the display. It was beautiful and he felt like he truly belonged.\n\nDinner at his apartment had never been this elegant and it always seemed to lack the company of a good woman. Sure he would have his girlfriends over, but dinner for him was usually takeout or prepackaged TV dinners. He was always tired after work and went for convenience rather than quality. The only time he ever put an effort into cooking were at their barbeques.\n\nThis meal however, was made with finesse. Not even his father had gone through such lengths. The meals had been a lot healthier in the earlier years, but as time went by his father put less of an effort into making sure he ate properly. That's where the cans of Chef Boyardee came in. Lucky for Brian, he would be invited to John's house for supper most days out of the week. John was obviously aware of his father's neglect and stepped in at the right moment.\n\nWhile he moved back and forth between the kitchen and dining room, he would frequently glance at Kiara, who stood at the stove. He wanted to tell her everything; that this was what he'd always wanted yet hadn't known it. He wanted her to know how he felt about her and that he wasn't just here for Joshua. They were something special and he needed them in his life. Joshua's father suddenly came to mind and he wanted to find out more about this man. If he got any closer to Kiara, he and Derek would definitely butt heads, thanks to Natalie and her friend. Before he invested in a serious relationship with Kiara, he would need to know the facts.\n\nAnd so, he waited until he was done setting the table before he said a word to her. By then he was a little nervous about finding out the true nature of their relationship, but it had to be done. He sat down at the counter next to where she stood and began.\n\n\"Hey...uh do you mind if I ask you something?\" he asked.\n\n\"Not at all. Is something wrong?\"\n\n\"No. I just wanted to clear up a few things. It's important.\"\n\n\"Okay. What's on your mind?\"\n\n\"Joshua's father, Derek right?\"\n\n\"Yeah.\" she replied and finally looked at him.\n\n\"Do you guys see each other a lot?\"\n\n\"You mean are we still together? No we're not. Why? Are you worried about something?\"\n\n\"Well...I'd like to see more of Joshua and you. You guys make me feel as if I'm a part of the family and I think I've been missing that in my life. Before I go any further I want to make sure that there won't be any problems...as far as his father goes. It can get pretty ugly if he decides to start something in front of Joshua.\"\n\nShe didn't reply right away. It was as if she still couldn't trust him and that thought made him grow uncomfortable. He was about to dismiss the conversation when she finally answered.\n\n\"You don't have to worry about him. He's a little jealous but he doesn't know how to be there for his son.\"\n\n\"He doesn't take care of Joshua?\"\n\n\"No, he makes good money and he provides for Joshua. Financial support was never the issue. If I could give him any credit, I'd say that he was always reliable as far as getting Joshua everything he needed. But that's not all there is to being a good parent. Sometimes I think he didn't even want Joshua and that he only takes care of him because he's obligated to. Joshua sees less and less of him as time goes by and it's not because he and I fight. Even when we do, I let him see Joshua because I know how much Joshua loves him. I think your being here is a good thing, so don't worry too much.\"\n\n\"So... you wouldn't mind if I came over more often?\"\n\nShe smiled, \"No I don't mind. We'd like that.\"\n\n\"When I first got here...I thought the old Kiara was back.\" he said, finally relaxing.\n\n\"You're talking about how I looked at the door? I thought you were Derek. He called me right before you got here and was looking to mess up our dinner.\"\n\n\"He knows about that?\"\n\n\"He overheard our conversation on the phone when he came to pick up Joshua for school.\"\n\n\"Oh, I see. I thought I'd made a mistake by coming too early.\"\n\n\"No you didn't. Everything's gone well. Let me worry about Derek, okay?\"\n\n\"Alright. Is there anything else I can do for you?\"\n\n\"No I'm just about done. We can eat in about ten minutes. If you don't mind, could you ask Joshua to wash his hands before dinner?\"\n\n\"Sure thing! I forgot to tell you that I got us a bottle of wine for dessert. I couldn't carry everything in all at once, so I took only part of the gift with me. Mind if I get that first?\"\n\n\"You're too much.\" she smiled.\n\nHe winked at her then headed back to the living room where Joshua's eyes were still fixed on the game. He rushed out the door and to his truck to find the bottle. When he found it, the bottle was lukewarm from the heat, and the woman at the gift shop had recommended that it be served chilled.\n\nHe didn't know much about wine and had asked her for advice when gifting a woman. She came up with a few bottles and placed them on the counter before him. He made the choice of what he thought would be the most romantic. The clerk had pointed out that one of the vintages actually tasted like chocolate covered strawberries. This wine bottle in question wasn't as attractive as the others. It was fashioned in green glass and a simple red label which read Chocolate Shoppe in gold foil letters. Still, she swore by it and recommended that it be served as dessert itself. He was quite impressed by her knowledge and chose the bottle, hoping that Kiara would enjoy his selection.\n\nWhen he returned to the kitchen, she was done with the pasta and was on her way to bringing it out to the table. There was no sign of any sort of dessert and he was thankful for having chosen the wine to end their night. He asked for permission to pop the bottle into the fridge and she allowed it, while letting him know that he was free to think of her house as his own.\n\nAs she requested, he got Joshua away from the video games to wash his hands and the two of them joined her at the dinner table. Joshua sat closest to Kiara, while he was positioned across the table from her. As far as he was concerned he had the best view in the house.\n\nWhen they'd finally gotten down to eating he had probably fallen in love. Her culinary skills were spectacular and at this point there was nothing left to be desired. She was the one that he wanted and he made the decision to ask her out after dinner...or maybe when he got home. He wasn't used to being direct with her and thought that somewhere deep down, she still harbored feelings of distrust. In any case, this only made him want to prove himself even more.\n\nKiara should have been tired, but it was as if she fed off of Brian's energy. Joshua had grown tired after the meal, and fell asleep on the couch when they moved to the living room. Dinner had gone well, and Brian even complimented her cooking a few times. It felt good to have a man to cook for. This was what she had always wanted her home-life to be like; only it was supposed to be Derek in this scenario. But he had ruined his chances with her, and now a better candidate stood in his place.\n\nShe hadn't put much thought into serving desert, and opted out for ice-cream. Brian had done one better and gotten this spectacular wine that she had never heard of. It tasted of chocolate covered strawberries; her favorite dessert next to cherry cheesecake. It was delicious, and while Joshua slept, they chatted and sipped on the deep red wine.\n\nShe told him more about her life and her job at the hospital, where she did medical billing. He spoke more of his job at the farm where he worked with Dale's uncle, John. The recent months had been hard on them due to the lack of rainfall. There was hardly any grass and water to feed the cattle. Brian and the other hands at the ranch had to transport bales of hay, and gallons of water to alleviate the situation. He was tired and hadn't been eating very well, which was why he had been so thankful for the meal.\n\nWhile he spoke of work, her mind began to wander, and she wondered what he would look like with no shirt on. It was a random idea, but talk of his hard work at the ranch triggered memories of days past. She had seen him shirtless and sweaty before; however, she had always dismissed the idea of being attracted to an asshole like him. Now she revisited the vision, except this time, she pictured him as he was now; a beautiful and charming man, who had impressed both her and Joshua.\n\nAs the effects of the alcohol spread throughout her body, her breathing grew heavier and she began to relax into the minor fantasy. She found that along with the sweet and drowsy sensation, her body had awakened to the racy thoughts. Her nipples were erect, and felt extra sensitive beneath the dress. She wished that Brian would do something about it. It had been too long since she was last intimate with a man; two years to be exact, and she craved his attention. She wanted to feel like a woman again, and not just a caretaker.\n\nShe took a generous gulp of the wine, and let the warmth of the alcohol wash over her. The sensations soon became even more pleasurable, and she reached over her chest to clasp her other arm. She hoped that the light brush of her arm against her bosom would soothe the tender nipples. She would have liked to be honest about what she wanted, but she held her tongue. She would not wear her heart on her sleeve just yet. Instead, she would try to find out more about him, in hopes of distracting herself from any more lecherous thoughts. This was probably the perfect time to inquire about his love life, since their relationship was in its early stages. She would still be able to pull herself out of this tiny crush without too much trouble, if push came to shove.\n\n\"So...\"she began \"You know more about my family, than I do of yours. Are you married? Any kids?\"\n\nHe chuckled at the question, \"Me? Nah. No kids, girlfriend or wife. I'm flying solo...for now.\"\n\n\"Oh...and you don't have any other family?\"\n\n\"I do. I have an older sister; Donna. She left home when I was a kid, before my dad died.\"\n\n\"I'm sorry. So...you grew up alone?\" she asked pensively.\n\n\"No, I was lucky. Donna really couldn't take care of me, and my dad didn't leave us much money. Dale and I were best friends, and when my old man passed, John took me in. He taught me a trade and I've been like a son to him ever since.\"",
        "\"He's a good man. That was really nice of him.\"\n\n\"Yeah...my old man was nothing like that. He was always angry. After my mom left him he got worse and started taking his anger out on Donna. That's why she left.\"\n\n\"Damn...that's horrible. The two of you aren't very close then?\" Kiara asked with a pitying look.\n\n\"We weren't when I was a kid. I was mad that she left us. My dad used to say how she and mom were the same, and only knew how to abandon us. I didn't understand much back then, but after he died, she and I reconnected. I found out that she suffered from panic attacks, because of how he treated her. She didn't feel safe living there anymore. We're a lot closer now and besides John and Dale, she's the only family I've got left.\"\n\n\"Wow. Growing up must've been tough for you guys.\"\n\n\"Actually it wasn't so bad for me. I was my dad's favorite and he never took his anger out on me. It was always mom and Donna who got that end of the stick.\"\n\n\"And your mom...you don't see her either?\"\n\n\"I can't remember her. I was really young when she left. She never came back and she never tried to contact us. We just moved on without her. I think my dad must've done something really bad to drive her off. I can't imagine that a woman would leave her kids behind without good reason, and never come back.\"\n\n\"That's true. I could never abandon my baby.\" she said, looking to Joshua as he slept. \"Does Donna live around here?\"\n\n\"Yeah, I see her from time to time. She's married now and expecting a baby.\"\n\n\"Oh, congratulations!\" she said in a happier tone, \"You're going to be an uncle!\" \n\n\"Yup. Thank you. It's about time too. She's always wanted a kid.\"\n\n\"Do you want any?\"\n\n\"I don't know about that.\" he smiled bashfully, \"Not sure I'd be much of a dad.\"\n\n\"Are you serious? Look at how well you get along with Joshua. You'd make a great dad.\"\n\n\"Well maybe...but I need a good lady for that.\"\n\nHe looked into her eyes at that very moment, and she thought that she would melt under his intense gaze. Joshua stirred behind her and quickly averted his attention. She was glad for it. If not for that tiny diversion, she might have flirted with him, and who knows where that would have taken them. She was still a little nervous, but almost past the point of behaving.\n\n\"Looks like he's really tired.\" Brian said, his eyes still fixed on the sleeping boy.\n\n\"Yes he is. He's gotten so big, that I struggle to carry him now\" she laughed. \"I'll wake him in a little bit to go upstairs.\"\n\n\"No need. I got him.\"\n\n\"But he's really heavy. He's put on a lot of weight since you last carried him.\" she protested, remembering the similar instance at the barbeque.\n\nBrian chuckled and got up. He walked past her, and picked up Joshua's body with ease.\n\n\"I'm no weakling Ki.\" he replied.\n\n\"I know you're not...but you really need to stop.\" she said, refusing to look him in the eye.\n\nShe had no idea why, but she was suddenly frightened. Maybe it was because with Joshua in bed, she would truly be alone with Brian.\n\n\"Calm down lady.\" he said, with Joshua now hunched over his shoulder, \"Besides, you look like you're tired too.\"\n\n\"It's just the wine.\" she sighed, \"I'll show you to his room.\"\n\nAlthough her limbs felt heavy, as if she was wading in water, she got up and led Brian to the staircase. As they ascended, step by step, she began to wonder what he really thought of her. She knew that she had much to offer to a relationship, but her experiences had only been with black men. She never seemed to attract any other race, and now felt under confident. \n\nShe led him into Joshua's room which was the first door past the staircase, and both of them stepped inside. Brian moved towards the bed, and Kiara aided him by shifting the covers aside for Joshua. She then sat down on the bed, next to her son's tiny body and proceeded to unlace his shoes. She could feel Brian's eyes on her, but for the moment, didn't know what to say. She kept her attention on the shoe laces, but her fingers trembled, as he stood above her.\n\n\"Well...uh...maybe I should get going.\" he finally said. \"You're tired, and I wouldn't want to keep you up too late.\"\n\nHer heart sank at the words. She didn't want him to go, but she couldn't beg him to stay either. She had too much pride for that. She slipped off Joshua's last shoe, and pulled the covers over him, before she responded.\n\n\"I hope you had a good time tonight.\" she whispered, as she led him out of her son's room.\n\n\"I did.\" he said.\n\nKiara closed the bedroom door behind them, and took a deep breath. She felt overwhelmed with an intense, yet foreign emotion. It was a combination of sadness, possibly hurt, coupled with a deep longing. She wanted Brian to stay with her. Her heart was stricken with a sharp pain as she thought of spending another night alone. How many nights had she spent alone since Derek left her? Too many to count, and she couldn't bear the thought of enduring any more of them.\n\n\"I wanted to ask you...\" Brian began, \"...would it be possible, if I could see you tomorrow?\"\n\nShe was relieved. She didn't want to make the first move, and luckily Brian beat her to it.\n\n\"Sure.\" she smiled, while tucking a few strands of loose hair behind her ear.\n\n\"I know you're going to be taking Joshua to your mom's, so maybe after that we could go out to a restaurant?\"\n\nHer smile widened and she nodded, \"Well, I didn't expect you to be so forward.\"\n\n\"Why not?\" he asked softly, and moved closer.\n\nSomething about his tone was very seductive. He had taken two steps forward, as if he was being conducted to her like a magnet. She was cornered against the wall, and grew too nervous to answer his question.\n\n\"What is he doing?\" she thought frantically.\n\nHe was already dangerously close, and she could now smell the fragrance of the wine on his breath. Her first instincts were to get away, because she didn't trust herself to be so close to him.\n\nHe stopped only a few centimeters away from her lips, and whispered. \"You look really beautiful tonight Ki.\"\n\n\"Joshua's right there Brian. I can't.\" she whispered, but the pressure of his lips stopped her from saying any more.\n\nHe reached for her waist, and caught her before she could escape. He captured her roughly, but then eased his grip around her body. Without realizing it, she had simultaneously grabbed the front of his suit and clutched the material tightly. All her fears and insecurities came forthwith, and threatened to dull the sweet sensation of the kiss.\n\n\"Calm down Ki. This is what you wanted right?\" she thought, as his fingers began to stroke the sway of her back.\n\nShe couldn't deny it. She had longed for him in the shower, in her bed and during every other daily activity; even when she was with Joshua. She hated herself for thinking about him so much. He had been on her mind ever since she left him alone in the parking lot. Now he kissed her as if he longed for this moment.\n\nShe decided to give in to the pleasure and leaned into the kiss with enthusiasm. Brian breathed heavily against her mouth, and began to kiss her voraciously. She was almost overwhelmed by the force of his mouth, and wondered how long it was since he'd last had a woman. From the looks of it, he must have been alone for quite some time, but she was in no position to judge.\n\nShe too had been unlucky in love, and had almost given up on being kissed again. She had lost touch with her sexuality, and compensated by being this hard working mother. She lost herself in work and taking care of Joshua, hoping that these responsibilities would distract her from wanting to be touched and taken by a man. For a long time, her plan worked; that is until Dale introduced her to Brian. Now he was with her, pressing his firm crotch against her soft mound, and clasping her hands tightly.\n\nShe moaned as his tongue gently flicked back and forth, over her lips. She was on the verge of asking him to her bedroom, when she remembered that her son was asleep, only a few feet away from where they stood.\n\n\"Mmm...Brian.\" she repeated against his moist lips, \"We should stop. I can't when Joshua's right there.\"\n\nIt took him a few seconds to answer, because his mouth had fallen to her neck, and was clamped against her throat. His lips traveled ever downward, until he reached the protruding cleft of her breast. She shuddered against him, but gently pushed him back. \n\nHis blue eyes were lazy and half shut, as if he had been intoxicated by the mere taste of her. She felt pity for him, because she too felt what he was experiencing. Had she been childless, it would have been easier to get lost in the passion...but that would have meant she was easy, wouldn't it? She didn't want him to think of her in such a way, and that thought forced her to resist.\n\nFor a few seconds, they looked into each other's eyes, neither saying a word. Kiara wanted to choose her words carefully, so as not to offend him. What she said would probably determine whether he would see her again.\n\n\"Sorry Ki.\" he murmured, as sense seemed to find him.\n\n\"It's okay.\" she whispered, her palms still flat against his broad chest. \"I-I'm not trying to push you away. It's just that the timing isn't right...and I don't want to move too fast.\"\n\nHer heart felt heavy, and she was on the verge of crying. Why was she so emotional when it came to Brian? It couldn't have been the wine, because she only had one glass. He was having too much of an effect on her, and she didn't like that. She wanted to be in control of her feelings. With him, she was like a na\u00efve little girl going through the motions.\n\n\"I know Ki. I couldn't help myself. I've been waiting to do that for a long time. I wasn't sure whether you hated me, and I guess I went for what I wanted without thinking\"\n\n\"Brian, I don't hate you. I've just been trying to protect myself, and the ones I love. I've been through a lot and I don't want the past to be repeated.\"\n\nEven though her upturned palms held him back with a good measure of force, he pushed against them and closed in until he was once again, a breath away from her lips.\n\n\"You don't have to do this alone Ki. I know you're a strong woman, and a great mom. But you spend all your time worrying over Joshua and Cat. Why can't someone do the same for you? Why can't I take care of you?\"\n\nThe question made her feel uncomfortable. Not even Derek had ever openly offered to take care of her. But she didn't need a man to take care of her. Her mother had said so.\n\n\"I can take care of myself Brian. I don't need a man to take care of me.\" she said bluntly, but not with the harsh tone she meant to use.\n\nHe was making her weak.\n\n\"I know that Ki. But I don't want to be alone anymore. Isn't it hard being a parent, all by yourself? I want to help you.\"\n\nShe didn't respond, because she didn't want to confess that she wanted, or rather needed him. She couldn't trust him. Derek had fooled her once, and she wouldn't let it happen again.\n\nHe finally seemed to sense that she felt uneasy, and straightened his posture, so that he no longer leaned against her body.\n\n\"I'm sorry.\" he said again. \"Maybe I went too far.\"\n\n\"It's ok.\" she replied.\n\nShe wanted to say something more that might have comforted him. But it was probably too late for any of that. Instead, she turned towards the staircase, ready to lead him to the front door. As she escorted him down the stairs, she could hear the faint sound of his footsteps behind her. She didn't dare turn back, because she was too close to proclaiming how she truly felt.\n\nThey finally made it to the front door, and it was then that she turned around to look at him.\n\n\"I'm sorry if I came off rude. I just have a lot to consider.\" she said.\n\n\"I understand. I'll give you all the time you need. I didn't mean to kiss you like that. I guess I was caught up in the moment.\"\n\n\"Don't apologize. There wasn't anything wrong with what you did.\"\n\n\"If you say so.\" he said morosely, \"Do you mind if I call you when I get home?\"\n\n\"Sure. I'll be awake.\" she said, with slight relief. Even after all that, he still wanted to talk to her.\n\n\"Thank you for dinner and tell Josh I'll see him soon, okay?\"\n\n\"I will.\"\n\nShe wanted to give him another kiss, but she didn't dare. They would have easily ended up in her bed, or better yet the living room couch.\n\n\"I hope I'll see you even sooner.\" he said, with a hopeful look.\n\n\"Call me when you get home and we'll figure it out.\" she reassured him.\n\n\"I will Ki. I'll talk to you in a few.\"\n\n\"Okay. Drive safely.\" she said, and stepped back inside.\n\nShe gently closed the door behind her, and sank back against the wooden frame. She closed her eyes, and ran her forefinger across her bottom lip. For the moment, she replayed the passionate kiss in her mind. She hadn't noticed, probably because of the butterflies in her stomach, but she had gotten very wet. She wondered what would have happened if she hadn't stopped him.\n\nWould he have carried her into bed, and taken her in the ways she imagined? She had always refused to let her fantasies go too far, lest she set herself up for disappointment. But now it felt appropriate; even safe to take a break from the serious and mindful person that she had become. She made her way up the stairs, and was about to go to her own bedroom, where she meant to lie down and give in to the fantasies, but instinct caused her to stop at Joshua's door. Something beckoned her into his room, and she stepped inside to check on him.\n\nHe was still fast asleep and she moved closer to his bed. She wondered what Joshua would think about her seeing more of Brian. She knew that her son loved his father; however, she now believed that Brian would be a better role model. He had indeed changed. He was consistent, while Derek was not. This made things easier, because she trusted him with Joshua, and that was more than she could ever say of Derek.\n\nShe decided that she would talk to Joshua first thing in the morning. Brian had already broken the ice, so to speak. It was clear that he cared about not just Joshua, but her as well.\n\nShe made up her mind to take the next solid step. She would let Joshua know that she was romantically interested in Brian, who wouldn't try to take the place of his father...even though she hoped he would. Joshua was not conflicted about his feelings for Derek, at least not yet. He still loved and believed in his father, and she was fine with that, for now. Eventually, the time would come when Joshua's eyes would open and see everything with clarity; namely who his father really was. She hoped that when the time came, Brian would be there to console him.\n\nA loud and muffled voice suddenly shook her out of this deep reflection, and she looked towards Joshua's window. The voice was coming from outside and it sounded like a man was having an argument with someone. Out of curiosity, she walked over to Joshua's window, and slightly shifted the curtains to the side, not wanting to give attention to herself. It was Derek. He stood in Brian's way and his pitch was angry, almost violent.\n\n\"Shit!\" she said under her breath, and ran through the hallway without closing Joshua's door.\n\nShe needed to stop this before he chased Brian away. She realized that Derek had been waiting outside to confront him. He wanted to ruin her chances of finding happiness. She wouldn't let him.\n\nBy the time she made it to the front door, a car was pulling off from the sidewalk. She quickly looked down the street, hoping that it was Derek who gave up and drove away. Instead, it was Brian's red truck in the distance, while her son's father stood at the foot of her porch, with a satisfied look on his face.\n\n\"What the hell is your problem?\" she hissed.\n\n\"So you like white boys now? How long has this been going on?\" he asked, with a smirk on his face. He was apparently amused by the fact that Brian hadn't put up a fight.\n\n\"Excuse me? Who the hell are you to question me? Get the hell outta here!\" she shouted at him angrily.\n\n\"I'm not going anywhere until you talk to me.\" he said firmly.\n\n\"Talk to you about what Derek?\"\n\n\"About us. Drop this fucking loser. I don't want him around my son.\"\n\nHe had been drinking. She could smell the strong alcohol on his breath.\n\n\"You've got some nerve Derek. Now that someone wants to actually spend time with us, you feel like you can just come around here, and intrude on everything?\"\n\n\"I don't want white trash raising my boy! You understand?\" he admonished, raising his voice even more.\n\nDerek was intentionally trying to attract the attention of her neighbors. They weren't too fond of white people either, and would probably take his side on this. But she didn't care. It was almost comical to watch Derek lose his cool. The proud and well-spoken gentleman that he prized himself to be, was nowhere in sight. The very fact that Brian was the topic of their dispute was the only reason she hadn't ridiculed him for it. She didn't want this scene to get out of hand.\n\nKiara felt only a tiny measure of concern for him, because it was plain that he had driven to her house inebriated. However, if this was a ploy to make her feel sorry for him, she wouldn't be suckered into pity. He knew the consequences well enough, and was willing to risk his son's happiness for selfish reasons.\n\n\"Who said he was doing all that Derek?\" she continued. \"You don't know anything, yet you're assuming that he's trying to take your place. And where do you get off calling him white trash? You know what? If he did take your place, I wouldn't even mind. At least I can trust him to show up and be there.\"\n\n\"Well he won't be coming back now.\" he said tauntingly.\n\n\"What do you mean?\"\n\n\"I told him he can't come back over here. I don't want to see him around here anymore.\"\n\n\"Oh no, you didn't just say that! Listen you asshole. Do you pay my rent? No you don't! Do you pay for my food and clothes? Another no! You had no right Derek and you need to take your ass home before I call the cops. If you were so worried about who I had around Joshua, you would've never put the two of us in this situation in the first place. Tell me, who left who at the beginning of all this? Who acted like they didn't give a damn about me, right before I gave birth? You're lucky I'm not taking your ass to court! I'm giving you some slack only because of Joshua! You pull this shit again and that'll be it. I will put you on visitation. Even then you probably wouldn't show up. You'd be a free man. So go home and beg Stephanie to take you back. I don't want you and I don't need you!\"\n\nWithout another word she turned away from him, and slammed the door behind her. She was out of breath from her little speech and wanted to cry, but she wouldn't. At least, not until she was sure that he was gone. Her heart beat furiously in her chest and her face felt feverish.\n\nHad she stayed out there any longer, she would have probably fought him and made up for Brian's reluctance. Derek was out of line, and she resented him even more for trying to dictate who she should bring into her home, and around Joshua. He and Natalie would hang out with all sorts of unsavory characters when she brought Joshua over to their shared apartment. In fact, that was one of the reasons why Natalie couldn't stand her.\n\nKiara had brought it to Derek's attention, that Natalie's thug boyfriend would smoke around Joshua, and was a big fight about it. He defended his sister in the end, and Kiara became the one at fault. It wasn't until things took off with his career, and he moved out, that she let him take Joshua to his apartment. She didn't like Stephanie very much, but at least Joshua was safer there. Even that had been years ago, and Derek no longer held sleepovers for his son.\n\nShe still couldn't believe that Derek had the gall to do all of this. It felt like a bad dream. Why hadn't he gone this far with the other men she dated before? Maybe it was because he was domineering as a lawyer. He had been the ambitious type, who always got what he wanted and couldn't take no for an answer. A man who was used to getting his way would probably feel justified to take on anyone he deemed wrong. Brian had already been timid with her, and she had just managed to put him at ease. Now Derek's actions erased all of that progress, and possibly scared him away for good."
    ],
    "authorname": "Soft1017",
    "tags": [
        "interracial",
        "romance",
        "plus size",
        "bbw",
        "tragedy",
        "love",
        "white man",
        "black woman",
        "wmbw",
        "cowboy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/southern-tide-vol-02"
}