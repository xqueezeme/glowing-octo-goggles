{
    "title": "Dating in the Dark",
    "pages": [
        "The following story has been entered into the Valentine's Day contest for 2020. Many thanks to Vix_Giovanni for beta reading this for me and offering her insightful suggestions! Please check out her wonderful work if you have not done so already.\n\n***\n\nI pulled my phone briefly out of my pocket, exposing fingers to the chilly air just long enough to fire off a quick \"BRT\" to Irina. Stuffing it back in my coat pocket, I continued down Bleecker Street, past the butchers, pizzerias, and cheese shops where weekend shoppers conducted errands or connected with friends to indulge in a boozy brunch.\n\nI badly needed a coffee and couldn't wait to reach Gotham Grounds, step inside to inhale the deep, earthy scent of freshly brewed beans, and make my way to the shiny chrome La Marzocco that would soon be hissing and dispensing that beautiful, steaming hot liquid into a ceramic mug just for me.\n\nIrina was already there, huddled in the corner with a latte. I grabbed a coffee and chocolate croissant and rushed over to greet her.\n\n\"What's uuuup, Corinne!\" Irina squealed, hopping out of her seat momentarily to give me a hug.\n\n\"Hey girl!\" I laughed, flinging off my heavy coat and grabbing the seat across from her.\n\n\"So tell me, tell me, what's new? How did it go last night?\" Irina asked excitedly.\n\n\"Oh, you know, another shitty date that went nowhere,\" I grumbled.\n\n\"Okay, that's it. I think it's time to get you set up with this guy I know. He's--\"\n\n\"Seriously? You really want to see me go through another failed attempt at happiness?\" I said with a smirk. \"Does this amuse you? Does it bring you joy to see what an absolute loser I am while you fuck some handsome entrepreneur who founded a company that revolutionizes hospital treatments and brings puppies to visit sick patients?\" I took a deep sip of hot coffee, anxious for it to soothe my emotions.\n\n\"Just the hospital treatments stuff. No puppies. I only said he had a cute puppy,\" Irina replied with a sly grin.\n\n\"Whatever,\" I laughed.\n\nIrina's phone lit up on the table. \"Is that her?\" I asked.\n\n\"Yup,\" Irina said, picking up her phone, dismissing the text message, and setting it back down. \"She just wants me to set up a dinner reservation.\" Irina was a publicist for an up-and-coming starlet named Claire who was always wanting to be seen at the hottest clubs and restaurants.\n\n\"When are you gonna stop being a fucking gopher and get your own fashionable life?\" I snickered, taking the opportunity for a friendly dig at her.\n\nIrina grinned. \"Seriously though, we need to get you someone. When's the last time you had a really good fuck?\"\n\n\"Oh... um...\" I fumbled, embarrassed by the question our neighbors may have overheard. Irina didn't seem to care about their presence.\n\n\"I'm gonna make it my personal mission at this point 'cuz you always seem to have some excuse. Like that scar or some shit, as if people care,\" she continued. I glared at Irina. She knew very well I was embarrassed about that.\n\n\"Hey--\" Irina said, calling out to a busboy as he passed by. \"Lemme ask you something. Do you think that little scar is sexy?\" she asked, pointing to the little one-inch imperfection shooting down from behind my left ear. My face grew red and I suddenly felt hot.\n\nThe busboy looked at the side of my head thoughtfully. \"May I?\" he said after a moment, a dopey grin forming on his face. I rolled my eyes, then nodded. He carefully tucked my hair behind my ear and gazed at it, following it down to observe the thin line that wasn't supposed to be there.\n\n\"It's quite beautiful, actually,\" the busboy said. \"The hard, sharp line just accentuates the delicate shape of your ear which is really very lovely. Not to mention the mystery something like that evokes.\" He grinned at me, apparently proud of himself.\n\nIrina slapped both hands on the table and leaned forward, her face lit up by the candle as if it were on fire. I wished it were. \"See!\" Irina exclaimed. She offered the young man a smile. \"Thank you!\"\n\n\"You're welcome,\" he replied before offering me another smile and heading behind the counter.\n\n\"Fuuuuck you,\" I groaned.\n\n\"What? You were the one who told me that your ex- said it made you look like a badass.\"\n\n\"Yeah, but that only lasts until they find out how I got it!\" I rolled my eyes at her.\n\nThe truth was, I tripped on a step walking onto the stage for my high school graduation and face-planted in front of the whole school. There was blood everywhere, yet somehow they found it so funny that I still hear about it to this day. That's me. I'm the one who went down hard during graduation.\n\n\"Anyway--\" Irina continued, \"Did that dating app not help?\"\n\n\"I mean... it's okay. I get a lot of messages but so far the guys have all been boring or jerks. You can tell right away from the stupid photos they upload what kind of awful they're gonna be and then you're like... 'eh, do I really want to even bother?'\"\n\n\"Well, you can't always judge a book by its cover. Why don't you take a chance?\"\n\n\"I dunno. We'll see.\"\n\n\"Well whatever you're doing, you need to start doing the exact opposite. Date someone who looks totally different than you would normally date. Maybe even go on a blind date. You could--\" Suddenly Irina's mouth snapped shut and her eyes opened wide.\n\nI knew that look. It scared me. \".... What?\" I asked, hesitantly.\n\n\"Wait a sec...\" Irina replied, scooping up her phone and thumbing quickly through a list of something. \"You wouldn't believe the weird shit that Claire gets invited to that she obviously isn't going to-- a-ha! Here it is.\" She stared at the screen, reading something. \"Oh-my-fucking-god. This is perfect. You'd never do this.\" She laughed. \"You totally gotta do it.\"\n\n\"Uhhh... something tells me I don't want to know.\"\n\n\"No, no, wait. Do you trust me? -- Uh, nevermind. Don't answer that. Just do what I say. I'm gonna RSVP on your behalf for a kinky dating event.\"\n\n\"Wait -- hold on. A what?\" I lifted my mug to my face as if trying to hide behind it.\n\n\"A dating event held by a group called The Kink Kollective. They do all this super risqu\u00e9 stuff. This one is perfect because you can't even see the guy you're with. No prejudging him.\"\n\n\"What the hell are you talking about?\" I whispered, embarrassed that the customers nearby might be listening in.\n\n\"It's called 'Dating in the Dark'. You show up at this place in midtown. They assign you a number. You get naked and go into a pitch-black room to meet guys in the buff. Get all touchy-feely. You know... sample the goods. And if you like someone, just whisper him your number. If you choose each other by the end of the night, you can have a second date and finally see the person you felt up.\"\n\nI sat back in shock, casting her a look of complete disbelief. She briefly glanced up at the couple next to us who'd clearly heard something because they were frozen in place, blushing and holding their drinks.\n\n\"You want me to go to something like that?!\" I laughed, becoming uncomfortably conscious of the sudden silence from another couple on the other side of us. I could feel their stares. Now several strangers were listening in. \"Don't you dare!\" I added.\n\n\"Okay fine, then you RSVP,\" Irina said reciting the email address I had to contact to claim a spot.\n\n\"I can't do that!\"\n\n\"You have no choice! As your best friend, I'm vetoing your refusal.\"\n\nI groaned. All around us were alert coffee drinkers with wide eyes and suppressed laughter. We had a full-on audience now. They were well aware of what Irina had just scandalously insisted I do. I just wanted them all to go. I was mortified.\n\nAfter a few moments, I lowered my voice and replied, \"I have to be, like, naked-naked?\" Irina grinned and nodded. \"But you're absolutely sure that no one can see?\" She nodded faster.\n\nI stared at Irina blankly as her wide grin began to stretch from ear to ear. I struggled to think of a way out of this -- but there was none. Irina always got what she wanted and like an idiot, I always went along with her crazy ideas. Instead, I would have to find a way to get back at her for it later.\n\nSlowly, she lifted the mug to her face, hiding that grin and knowing that she had me cornered, savoring the naughtiness of her cruel plans...\n\n***\n\nYeah, I did it. I went.\n\nWas I scared? Nope. I was terrified.\n\nIt was a miserable night. One of those uncomfortable February rains had just ended; the kind that sinks into your bones and makes you desperate for spring to arrive. I navigated under midtown scaffolding where it was still reasonably dry, only to be met with the unmistakable tang of fresh urine. All I could think of was: Am I really going where I'm going? Am I really going to do something so twisted? So perversely... uh... exciting? I almost didn't want to admit I was secretly kind of turned on.\n\nI took the city smell as punishment. It filled me with guilt over how filthy I felt I was about to be.\n\nI reached a plain metal door, its ancient green paint peeling, with the correct address affixed to the frame in tarnished metal digits. The buzzer was there, just as I was informed. I pressed the little off-white button that looked like a dirty tooth. There was an unintelligible squawk, then a buzz. I turned the knob and felt the lock release, then found myself in front of a tall stairwell and an elevator marked \"out of service.\"\n\nThe building was one of those nondescript towers whose hallways were filled with gray, stained carpeting and door after door of small businesses struggling to make it. A floral arranger, accountant, yoga studio, something called M&P Global Distribution Partners. At the end of one of the hallways was the door I was looking for. I knocked.\n\nThe door opened and a woman was standing there. She had curly hair dyed cherry-red and greenish eyes. \"Dating event?\" she said in a soft voice.\n\n\"Yeah,\" I replied.\n\nShe stepped aside and let me pass through. I was in a tiny space with a long, opaque barrier. Nearby was what looked like an oversized black phone booth. For all the emotions I was feeling, fear, disorientation, hesitant sexual curiosity, she seemed perfectly placid, like running kink events was an entirely unremarkable routine.\n\n\"Is this your first time?\" she asked simply. I nodded. I could feel her scanning me for my general degree of anxiety. Cruelly, she added, \"Don't be nervous. You'll have lots of fun. I went to a million of these before I started helping run them.\" She pulled out a form with a long list of rules for me to read and a consent waiver to sign. I scanned it quickly, signed my name, and provided an email address. Admittedly, I was afraid to show too much interest in scrutinizing the rules even though I actually wanted to know what I was getting into.\n\nThankfully, I got the gist. Yes, there would be touching. Yes, there was a system in place to express discomfort and opt-out if need be.\n\n\"So your number is going to be 134. Make sure you remember it. If you meet someone you like, just give him or her your number. At the end of the night, you'll give me any numbers you got and we'll let you know by email if you had any matches.\"\n\n\"Okay.\"\n\n\"So follow me this way, then,\" she requested, leading me toward the booth. She opened a curtain and I saw that the interior of the space had a small bench and full-length mirror. The woman set a box inside with my number on it. \"You can change out of your clothes inside here and place your things in this box. Please take off any jewelry as well, for your safety and the safety of other participants. When you're done, open the curtain on the other side and someone will direct you into the space.\"\n\nSomehow \"the space\" seemed so dramatic. And who would direct me? I realized I would be naked by then...\n\n\"Okay,\" I said, too nervous to give anything but one-word responses to a single thing she said since I entered.\n\n\"Have fun!\" she exclaimed, finally showing a sign of emotion. Her smile seemed to indicate some secret knowledge about the kind of experience I was about to have.\n\nI stepped into the booth and closed the curtain as securely as I could but I could still see through a small crack where the woman who signed me in was milling about. I took a step back, sighed, and looked at myself in the mirror -- a comic reminder that this was the last time anyone would see anything at all. I'd always had a hard time assessing my own level of attractiveness. All I could see were simple traits. My long brown hair. A little freckle on my cheek. The roundness of my eyes.\n\nOh, I've always liked the arch of my eyebrows. I guess there's that. I always thought they made me look like a silver screen vixen. I wondered if guys noticed stuff like that. Not that it mattered. None of these features would have a role in a dating event like this. That was simply unfathomable to me.\n\nAs I slowly began to undress, I was only further reminded of the visual cues that would not play a part in the event that evening. My slight curves, for example. I began to think about how they might translate in the dark. I imagined a guy running his hand down the sides of my naked body, his mind filling in the visual gap with some hilariously exaggerated mental image of a Jessica Rabbit sort of character. I laughed to myself but then felt the sudden pang of anxiety as my top came off and I stood face-to-face with the bra I was about to remove.\n\nI tried to imagine myself stumbling around in the dark, feeling for bodies, then the icy cold fingers of some strange dude touching my boobs. Yee-gads. Hell, what if I ended up being the only woman there at all?\n\nBut what if it wasn't going to be like that? I told myself I was just projecting fears. \"Give it a chance,\" I said to myself. \"Do something crazy for once.\" Besides, the only thing that would be more mortifying than going through with it was chickening out in front of the woman outside who'd just reassured me about the whole thing.\n\nI started folding and placing things in the box until all that was left were my bra and panties. I found myself staring at my image in the mirror again, taking deep breaths, trying to summon the courage to take the final step. Then I heard voices. Someone else had arrived. Thankfully, it was a woman. At least there was a guarantee there'd be two of us!\n\nI quickly rushed to finish undressing before I would have to give up the booth. I pulled off my bra and tossed it in the box. The sight of my heavily jostling breasts briefly startled me, I guess because of the strangeness of the context. I slipped my panties down and stepped out of them, feeling a strange rush of air invade my inner thighs.\n\nThere I was, completely nude in front of the mirror. I turned to the left and tried to glimpse my ass. I don't know what I was doing. What did it even matter how I looked at that moment? I turned back and faced myself squarely. I pursed my lips and pushed my breasts up, my reddish nipples felt distinctly sensitive. I began to wonder if not shaving would be a problem. I reached down and tugged at the mass of curly black pubes sprouting between my legs like some kind of alien sea sponge.\n\nI hated looking at myself the way I imagined others would. However, was that emergent arousal I felt down there -- already? I couldn't deny that there was a little tingle, at least.\n\nI could hear the voice of the woman who arrived after me as she finished signing the waiver, so I grabbed my phone as quickly as possible, silenced it, and then shot Irina a hasty, \"Fuck you. Here I go...\" I didn't wait for her reply.\n\nI gave myself one last complete look, sucked the air into my lungs, and then zipped open the curtain on the other side of the booth. I nearly jumped right out of my skin. I had almost forgotten there would be another person on the other side to direct me into \"the space,\" as it had been called. A petite young woman stood there with her hands folded as if she'd been awaiting my arrival.\n\nI let slip an \"Oh!\" before frantically covering my breasts and pubic area.\n\nThe woman didn't seem the slightest bit fazed by the brief glimpse she had of my private parts. Behind her was a hallway extending into complete darkness. \"This way please,\" she said, gesturing for me to follow. I quickly pursued, focusing on the odd sensation of my bare feet on a hard, cold floor and the increasing distance I placed between me and my clothes as I vanished into the unknown.\n\n\"You'll find that the walls are cushioned so you won't bump into anything hard, really, except maybe a person, but that's the point,\" she explained with a slight smile. \"If you make a connection with someone you'd like to get to know better, just find your way to a wall and follow along until you reach a couch. Whenever you're ready you can go back out and meet another person.\"\n\n\"Okay,\" I said, wondering if I should have paid more attention to the rules about hygiene. The thought of a bunch of naked asses on a couch didn't exactly appeal to me. That is if I even dared to make out with a naked guy in the dark.\n\n\"So feel along the wall here and take a right when it ends. Have fun!\" the woman said, abandoning me to the darkness.\n\nFinding myself alone, I removed my hands from my body and exposed myself to the darkness. I raised my right hand to the side and fished for the wall until my fingers made contact. It felt like crushed velvet, a couple of inches thick. My fingertips slid along the soft surface until it suddenly terminated and I began to hear soft voices and a couple of sporadic laughs.\n\nI could suddenly feel the open space around me. A few more steps into the abyss and I felt suddenly lost, disoriented, no longer anchored to a wall to guide me along. An overwhelmingly strange sensation took over and there was a sudden sensitivity to movement. My hair stood on end as I felt the air pressure around my body change. I was sure a body had just passed by. A naked body. Did it belong to a man or a woman? I couldn't be sure.\n\nI wondered what would happen if I'd brushed against it. Them, rather. Furthermore, if I encountered someone, how should I... um... understand if I'd found a man? There didn't seem to be a lot of talking going on... Would I end up reaching out and accidentally grab a handful of boob? Nevertheless, that would be safest. I didn't want to reach down \"there\" and see what I found...\n\nThese questions tormented me as I felt myself spinning in circles until I had no fucking clue where I was anymore.\n\nOut of the blue, I bumped up against skin. My heart began thundering in my chest cavity. The skin felt soft, like a woman, but I realized there was no way to be sure without the faculty of sight. I listened carefully and heard the body come to a stop beside me as if assessing our brief contact, just as I was doing. I held my hands out, feeling a bit like an Egyptian mummy from an old black and white monster movie.\n\nJust like that, my hands made contact. Large globes of spongy flesh compressed against my hands. I felt the distinctive sensation of two hardened female nipples against my palms and quickly let go. \"Oh-my-gosh,\" I said aloud, breaking the relative silence of the room. There were a couple giggles out there in the darkness. I had just grabbed some naked woman's bare tits. I wanted to laugh but quickly backed away without making another peep. I felt like I had just jinxed myself, having thought about this happening just moments earlier.\n\nFor a second or two, I wished those things had been mine; bigger, rounder, more springy. I shook off the negative thoughts, reminding myself that it would be impossible for anyone to compare my boobs to others' in the dark, anyway. Then I resumed wandering aimlessly and as slowly as possible. I could almost hear my heart thumping faster.\n\nAs I listened carefully, relying on sound to take the place of sight in orienting myself, I began to hear more soft voices everywhere. Just whispers, giggles. A small conversation in the distance seemed to indicate that two people had made a connection. \"Already?!\" I thought to myself. There were also footsteps all around me -- but different in quality than from the soles of shoes. It was a soft slapping of bare feet. The sound of nakedness is strange when it's not paired with sight.",
        "My mind filled in the gaps. The flashy patterns before my eyes were a sign of becoming adjusted to the complete darkness. However, they twisted into vaguely human forms. I thought, \"Did I just see a pair of wobbling breasts?\" I became sure I just saw someone's dick swinging about. So many phantom, naked penises seemed to surround me that it became an exhausting distraction.\n\nI wanted to laugh again. I found myself becoming wildly turned on. With a quick swipe of my fingers, I checked myself to confirm that yes I was, in fact, as wet as I felt I was. Then I sniffed my hand and realized, \"Fuck, my smell is all over my fingers.\" I tried to imagine the surprise of the first guy I felt up and how he'd suddenly get a whiff of my vag all over his body. I couldn't believe I was responding to the situation as powerfully as it was. I felt myself wanting to have an encounter of some sort, but I wasn't sure what, with whom, or what it would be like.\n\nOne thing was clear, though: the fact that no one could see me suddenly gave me great license to feel an intense erotic excitement from being completely nude in the presence of so many complete strangers.\n\nI found myself beginning to walk confidently, sticking out my chest, feeling the bold sensation of strolling through the room with my breasts and muff out, imagining that everyone could see me and that I was totally cool with that. This feeling grew and grew as I successfully avoided any further human contact, reaching a crescendo until... boom. Just like that, I ran face-first into a tall, hard body.\n\nI knew at once that it was a man.\n\nI turned slightly to face him dead on. He turned. A long, fleshy object smacked against my thigh. I cringed and thought, \"Did I just feel what I think I felt?\" With a pounding heartbeat, I reached up and touched a chest, hoping not to grab another boob. My hands glided smoothly over a set of solid male abs. My heart leaped into my throat and I shivered. My hands moved aimlessly up and down the mysterious chest, unsure what to do with them, where to go next, how this all worked.\n\nI didn't have to make any choices. The stranger's hand appeared, seemingly impatient with my indecisiveness. I could hear someone breathing in front of me. It sounded like breathy amusement. I felt myself losing control of my own hand as he took over, guiding it downward. Suddenly, I felt it slip over a bellybutton. Then: hair. Smooth, neatly groomed, laying flat against his pelvic region.\n\nRight after that, my hand finally came to a rest on an elongated shaft; warm and solid, fully engorged and gently twitching back against my hand. I inhaled sharply. \"That's a full-on fucking boner,\" I thought. Startled and unsure if I wanted to proceed, I tugged my hand away.\n\nAdmittedly, I panicked. I spun around and headed back the direction I had just come from. Or was it? I became distinctly conscious of the fact that there was no exit. There wasn't much of anything, for that matter. Just naked flesh wandering in darkness. I stopped where I was at, took a deep breath, and collected myself.\n\n\"I just touched a penis,\" I repeated to myself. \"A strange, naked man's fully erect penis.\" This realization spun in my head making me dizzy. Regardless, I told myself that the man was not the one for me. He just wanted me to feel him up and be impressed by the size of his cock. At least I still had my secrets left intact. He hadn't had a chance to cop a feel. \"His loss!\" I thought, grinning into the darkness and feeling a slight tinge of power.\n\nNo, this was going to be my choice. I was the huntress. I told myself that with the next guy I found, I'd be in control. I'd steer the ship and take the bold actions when I was good and ready. It felt different now being on the offense. The darkness was no longer threatening. It was filled with unaware, sexual prey for my taboo curiosity, which I would engage more skillfully and on my own terms.\n\nIt wasn't long before I bumped into another body. I was immediately certain that this, too, was a man. I grabbed his hands and planted them securely on my shoulders before he had a chance to do anything with them. He took the hint and kept them there. Running my hands back along his arms, I felt two strong biceps, the muscular caps of his shoulders, the bony ridge of his neck bone. After a little tour of his modestly hairy chest, I slipped my hands down the sides of his torso and felt him squirm with excitement.\n\nI decided what I wanted next. I wanted to feel his ass. Would it be flat? Would he have solidly muscular glutes? I slipped my hands around back and over his buttocks, gripping two strong cheeks. I laughed against his neck, dipped my head forward, and accidentally gave him a little head butt. The stranger began chuckling.\n\nHowever, just as I began to relax into the moment, I felt his hands slip free from the safe zone I had assigned them to. Down they went to mirror my actions, going straight for my bum where he gripped my cheeks and gave them a solid squeeze. And just like that, I was out of there all over again, pulling away and slipping back into the safety of the darkness surrounding us, not quite sure if I liked this yet.\n\nThen again, of course he responded by grabbing my ass. I just grabbed his... I realized I needed to either commit myself to something or realize that this whole thing wasn't for me.\n\nAfter some internal debate, I decided I wanted to be touched -- the right way. But what was the right way, especially when it was a stranger? It felt like a question I could answer under normal circumstances but in the complete darkness of the space, I questioned everything. I told myself I'd know him if or when I found him. It would just feel right. I'd recognize the guy for me instantly. I was sure of it.\n\nI wandered again, in a different direction, with a deep achy feeling pulsing at my core. After coming this far, I didn't want to end up leaving with yet another failure to make a connection with someone. Not again. Even if it had to be in this bizarre situation that Irina had pushed me into.\n\nSuddenly, I felt an arm brush against mine. Just an arm, nothing more; no barreling face-first into a wall of human flesh. Maybe it was the simple grace of the brief contact that sparked my curiosity. Maybe it was the little electric thrill of our bodies glancing each other with just the slightest and safest degree of intimacy. I paused and turned, then raised my hand. My hand met his in the air. Our fingers closed around each other. We just stood there, holding hands, our palms levitating in the darkness.\n\nIt was strange but we just stayed like that for a few moments. It was like we were greeting each other in the most normal and fundamental way, asking permission to proceed. I lowered my hand, taking his with me. Something stirred in my body; a kind of vibration. Or hands moved together. Just our hands, at first. He moved with a gentleness, a sensuality, exploring my fingers all the way to the tips. Curious, but with restraint.\n\nDid you know that you could become horny as fuck just by having someone stroke your hand?\n\nWe detached only for a moment. He seemed to be waiting for me. I extended my hand again, much as I had done with the earlier men, and placed it upon his chest. It felt warm. I felt my palm rising and falling as he breathed. I felt his quickened heartbeat. There was something comforting about the knowledge that he was just as nervous as I was. Maybe that's what gave me the courage to follow through with what I couldn't do earlier.\n\nI ran my fingers over his flattish nipples, circling them playfully. Then I slipped my hands down along his body as he stood there, breathing audibly. He had a solid build and a slim waist. I found myself doing exactly what I imagined a guy doing to me earlier: I slowly mapped his terrain, sketching it out in my mind to form as complete a picture of the landscape of his naked body as I could. Then, I went for it. My hands curled around his body and slipped over his tight, round buttocks.\n\n\"Mmm,\" I whispered, finding myself in full disbelief at the unexpected sound of my own voice.\n\nAs I inched closer, I felt the gentle heat from his body bloom around me. I leaned in just a little too close; my hardened nipples lightly grazing his chest. I felt him react, his stance becoming stiffer, more alert. I felt his breath exhale across my shoulder. Still, he only brought his hands to my waist, anchoring me there as I began to run my hands under his two muscular cheeks. With his hands so close to my nether regions, I became incredibly conscious of my own nakedness. I knew that they were just inches away from my mons, tantalizingly close to my lady bits. Moreover, I knew that somewhere, perhaps just inches away in front of me, was this man's penis.\n\nI cast aside the anxiety of that awareness and reached up for his face. I felt the texture of the short bristles on his cheek, the sturdiness of his jaw. Then I felt his hands moving but I found myself entirely unthreatened. They swept up through my hair, filtering loose strands through his fingers before he followed them back down, exploring their length and silkiness. Then he returned his hands to the side of my face where he gently brushed my cheek and swept his fingers over my ear.\n\nI felt so lost in a dream that it somehow didn't even occur to me how dangerously close he was to my little secret. It didn't dawn on me until it was too late. I felt his fingers reach my scar, discovering the long, raised strip of sinewy flesh that bolted down my neck. He paused as he made contact, then ran his fingers over it as if they were exploring what they found -- realizing there was something there that shouldn't be.\n\nI panicked. I wanted to run again. Even in the dark, I was not safe from that little fucking wound that made me so insecure. I felt myself react, tugging away, making to leave. I must have shown him all the signs of my absolute discomfort with the fact that he'd found my Achilles heel.\n\nHowever, the unexpected happened.\n\nThe stranger stood his ground and leaned in toward my neck, planting a soft kiss on my scar. I felt his lips lift away before blowing air softly across it. I melted. Oh god, how that simple gesture disarmed me. How expressive it was, in such a different way, when there was nothing written on his face that I could otherwise read of his reaction.\n\nNeedless to say, everything changed at that moment. He had me, and I him. I stepped in close, even closer than before until my whole body had moved up against him. I felt my breasts softly press against his chest, allowing him to experience them intimately, my protruding nipples poking firmly against his skin, announcing how alive my body had become in response to his gentle affections.\n\nHe moved up against me as well. I suddenly felt the distinct presence of his dangling cock against my body; long, limber, and semi-aroused. I felt it thickening, starting to twitch, a stiffening mass slowly climbing the inside of my thigh. This time, however, I was eager to reach down and take it in my hand where it continued to swell and harden until I possessed his bulky, swollen cock and felt it pulse with pure want.\n\nBreathing heavily, I rested my head in the cavity of his neck. I inhaled the faint scent of his cologne. It smelled woody. Bourbon. Maybe a hint of ginger. It smelled the color of amber. I nuzzled my face there, enthralled with his body as I gently stroked him from his tight, firm testicles out to the tip of his cock, bulbous and distinctly ridged. I saw the image of it forming in my head. The scent of his cologne began to mix with the scent of his arousal, which in turn mixed with the faintest hint of my own.\n\nIn fact, I was so turned on that the moment he ran his fingers through my mass of pubic hair and touched the lips of my nether region I nearly came on the spot. By the time he slipped his fingers between my folds, parting my body open, I had to press my mouth into his chest to muffle my sighs. I felt his digits move through me, suddenly slick and wet. The stickiness was outright audible.\n\nI lifted my face from his body and exhaled deeply. I felt as if a fire was burning down below and I wanted him to know just how hot it was. Fully on an otherworldly auto-pilot, I took his hand and raised it to his face until I found his lips, waving his fingers back and forth beneath his nose to inhale my aroma before taking a single digit and running it across his mouth. I transferred the juices on his fingers to his lips until I imagined them lacquered with a thin, shiny gloss. I heard the subtle sound of his tongue as it emerged to taste me there. He sighed with satisfaction and tipped forward until our cheeks connected and he seemed desperate to find my own lips.\n\nI couldn't stand it anymore. I grabbed his hand and tugged him aside. Leading him blindly, I moved through the space until I came to the wall and then felt for the nearest couch. We found it together. I listened as he shuffled around a bit, doing something to ensure there was a suitable spot for us. The stranger made his way down onto one of the cushions and then guided me down to join him. I felt some kind of fresh covering there.\n\nI quickly climbed onto his lap, wrapped my arms around his neck, and straddled him. I fished and found his cock sprouting from his lap, hardened and sturdy. I guided it between my legs but denied him the satisfaction of penetration. I knew better than that. I was supposed to get another date out of this, after all. I opened my hips wider, resting his thick shaft against the moistened flesh of my inner labia as I spread myself open for him. Slowly, I ground his cock up against my slick body as I leaned in and arrested his lips.\n\nHe kissed me frantically, driven to peak desire with my strategic and careful gyrations. I felt his hands cupping my breasts as they jostled playfully against his palms. I was so wet. I wanted him so badly but resisted. The wet sounds of his aroused body against mine was music to my ears as we moved passionately together in the warm cocoon of our embrace, enshrouded in total darkness. His lips tasted sweet, his tongue sweeter still. I wanted more of it -- I even wanted him to taste more of me.\n\nDesperate to catch my breath after a long stretch of locking lips, I wrestled him out of his seat, took his spot, and pushed him downward until he got the idea. I quivered with anticipation as I flung my knees apart and waited for that sweet sensation of first contact. I remember just thinking I was absolutely insane for doing this. I heard him inhale deeply then plant an intimate kiss in a place that set my entire body aflame and returned to his lips the dewy wetness that I had teased him with earlier.\n\nI couldn't see his face and yet I knew exactly what he looked like in the moments that followed, bathed in my feminine fragrance, burrowing his face in that humid expanse of liquid flesh, his tongue lashing out to explore every inch of my intimate depths, smelling, tasting, knowing my deepest physical passions. I heard myself moaning, filling the space around us with an expression of pure bliss, knowing that there were others out there, listening, witness to my incredible suffering -- and yet for once, I did not care.\n\nI grasped at his scalp and ran my fingers through his hair, feeling it filter through my fingers as he swept his tongue through my creamy folds, teasing my clit until I could do nothing but mash my pussy against his hungry mouth.\n\n\"Oh god... fuck... fuck...\" I whispered, barely able to withstand any more. \"You're going to make me... ngh... I'm going to come...\" I whined at him. I felt him move stealthily, hungrily, as he sped me toward the unavoidable result of our little tryst on the couch.\n\n\"Ohhhh, god... fuuuuck...\" I repeated, wanting to scream his name but having no such option before me. I also wanted to explode. I needed it. It had been so long that I deserved it just for the sheer patience and endurance I had demonstrated.\n\nI felt a wave of pleasure roll through my body, carrying with it wave that erupted in his mouth as I frantically jerked my hips in fits and spasms, coming with a wild intensity that must have left his face a total mess as he savored the sweet juices of my incredible gratification. Within an instant, he was back by my side, eager to receive my embrace. I was still gasping for air but managed to kiss him anyway, engulfed in my own scent that laced his lips.\n\nThen I pulled away. Still huffing and puffing, I lowered my mouth to his ear. \"134,\" I groaned.\n\n\"116,\" he quickly whispered, leaving no room for doubt or hesitation. I savored his voice. It's closeness. It's tenderness.\n\nIf he wanted more, he'd have to earn it. Before I departed, I leaned in one last time, stealing his breath with a long, deep kiss. Then I abandoned him there, finding my way to a remote corner of the room where I recovered and listened to the other encounters happening around me. I hid there until it was time to go, each of us anonymously exiting that place one by one the same way we arrived and recording the numbers we received as we left.\n\nNo, I had no intention of seeking any stranger in that place other than the one who'd whispered #116 in my ear.\n\nI was out on the street again. People were moving in all directions, filtering down West Thirty-Sixth street like blood through the veins of a hot-blooded city, flooding out across the urban landscape. I briefly wondered where they were going and what they were doing; what else might be happening out there, things I wasn't aware of, events like the one I'd just attended.\n\nBut it really didn't matter. I got what I so desperately wanted.\n\nNow all I had to know was... did he?\n\n***\n\nBy the time I got the email revealing that #116 had confirmed our match, I had already planned out the continuance of our thrilling love affair in exquisite detail. There was no \"taking it slow,\" no unnerving ambiguities, no constant dread that the whole thing was about to collapse under the weight of my depressing expectations. No, we'd already jumped straight into the deep end. It was already wet and wild. We already knew each other intimately -- each and every part of one another.\n\nWell... except, of course, each other's face.\n\nWithout delay, I utilized the form linked to in the email to shoot a quick message off to #116. I said: \"Has your appetite been sufficiently whetted?\"\n\nI then made my way to a French patisserie by Union Square and sat in the window with a latte and a few canel\u00e9s desperately checking and rechecking the email on my phone. The long glass window was filled with an assortment of transient faces alternately full of cheer, irritation, amusement, and range of other emotions, all of them coolly offering up to a stranger sitting in the window the one thing I desperately now wanted to receive from my mystery man: some basic shred of an identity.\n\nWithin the hour, I got another message, labeled, \"Your match has sent you a reply.\" He said, \"Indeed! Is there a main course?\" I smirked as I popped the last canel\u00e9 into my mouth and gazed through the window at the marquee on the movie theatre across the street. It was for some raucous comedy named, \"Girls Behaving Badly.\" It almost had to be read as a sign.\n\nAt the very least, I took it as divine permission to reply the way I really wanted to: \"How about we skip straight to dessert?\" The only problem was that now I was on the hook to make something happen. I thought, \"He's going to realize I'm not as sexy as I'm making myself out to be.\" I had to deliver on my tease somehow -- but what would naturally follow the theme of what we'd done together the night before?\n\n\"Help!\" I texted Irina, inexplicably determining that I now needed her help to see this through. She wanted to hear all the details straight away but I told I'd explain when we saw each other in person. \"It was hoooot,\" is all I would tease her with.",
        "\"I'm so proud of myself!\" she replied, happy to take all the credit. \"This might be the greatest thing I've ever done for you.\" I sent her an eye roll.\n\n\"No, seriously... I need you to find me something to do next,\" I subsequently replied. \"It's gotta be kinky, like the last thing. But eek! I liked being in the dark... So much easier to be naked!\"\n\n\"Well, this shouldn't be hard. With Valentine's Day coming up, there are all sorts of couples events happening.\" I sent back an ellipsis, and nothing else. After a few moments, she concluded, \"Meet me at L'Ombre at 7. We'll discuss.\"\n\n***\n\nI hopped out of the cab on a quiet corner of the West Village around ten minutes past seven. I was already a little late and didn't even know precisely where the door was. The entrance to L'Ombre was famously difficult to find, which was kind of the point for a speakeasy-style cocktail bar. However, Irina had been going on about it and the small plates she had last time sounded delicious, so I was game.\n\nMore than anything, I wanted to confess just what had transpired the night before. I just had to tell someone.\n\nI found an unmarked wooden door with a small \"O\" engraved into it between two iron crossbars and figured that must be it. On the other side was a chipper hostess who led me to Irina toward the back of the shadowy cocktail den where couples intimately prattled on about how happy they were to share their lives. Or so I assumed.\n\nI was always excited to dress up and have a girl's night out with Irina but every single time I'd get to the bar and find her there, in one of her sleek black dresses with her long blonde hair and blue eyes, all I could think about was the fact that I had nothing on a bombshell Russian with a sexy accent from Brighton Beach. Any time we met some hot guys at a bar I always felt like the \"other girl.\"\n\n\"There you are!\" Irina exclaimed as I approached the table.\n\n\"Hey -- sorry! Hard to find this place,\" I replied, exasperated. She slid the drinks list over to my side of the table where it flickered tantalizingly in the glow of a small candle. I scanned it briefly but I was still so disoriented by the shadowy surroundings that I didn't quite know what I was looking at yet.\n\n\"I'm all ears!\" Irina said excitedly, folding her hands on the table and leaning forward, clearly anxious to hear how it went.\n\n\"Hang on. Alcohol first, gossip second,\" I laughed. She was going to have to wait for the satisfaction of hearing me reveal that she had been right about the dating event all along.\n\n\"Fine. Let's get druuunk,\" she exclaimed, returning her attention to the menu. \"By the way, wait 'til you see the hottie that's serving us.\"\n\nI groaned. \"Yeah, like--\"\n\nI couldn't even finish my statement of self-deprecation before the hottie showed up in his dapper prohibition-era duds, his chest seemingly about to burst through a crisp vest and thin tie, Superman-style.\n\n\"Hi there!\" he said. \"I'm Callan, your server for this evening.\" Of course he was a Callan. The sexy Gaelic mystique wasn't lost on me. Nor were those two little divots on his stubbled cheeks which looked like the dimples on a golf ball, a game his distant relative may very well have invented.\n\n\"Hi,\" I replied, stupidly.\n\nHe paused for a moment and smiled at me, then added, \"I'd like to tell you about some specials we have tonight. First is a red wine braised short rib over creamy polenta--\"\n\nI heard nothing else of the specials because I was too busy staring at the admirable squareness of his jaw and the soft oval shape of his face. I thought, \"I would like to draw you.\" But \"draw\" was just a stand-in for something else I'd like to have done to him.\n\n\"Can I get you started with a drink?\" he asked. I snapped out of my fog to catch his puzzled expression.\n\n\"Y-yes,\" I stammered. I quickly went through my mental Rolodex of cocktails I thought might impress someone. I spontaneously remembered a drink I had ordered once that looked interesting, mostly because it was purple. \"Can they make me an Aviation?\" I asked, gazing up nervously into his beautiful eyes. \"With that little flaming lemon peel, or whatever?\"\n\nHottie smirked and nodded, then turned to Irina who was staring in my direction. \"Uh...\" she droned before tapping a drink on the menu. \"I guess I'll have the French Seventy-Five.\"\n\n\"Certainly. I'll get those straight away for you,\" he said, heading off toward the bar.\n\n\"Wow, what just happened here?\" chuckled Irina after a few moments of silence.\n\n\"What?\" I asked. She stabbed her finger in the air toward the waiter. \"Who? Great Gatsby over there?\" I added, feigning ignorance.\n\n\"Uh-huh...\" she said with a smirk. \"Didn't I tell you?\"\n\n\"Okay, fine. I'm already thinking about having his babies,\" I said with a sigh.\n\nHottie quickly returned with two waters. My heart began thumping, worried he may have heard my comment. As soon as he set the glass down in front of me, the waiter noticed my scar. I could just feel it. The sudden double-take. The brief fumble of the glass as it hit the table, rattled, and spilled over the rim. I felt a wave of humiliation wash over me. It was a reaction I had a thousand times before. I wanted to cringe and crawl under the table.\n\n\"Sorry about that,\" he mumbled, let me get you a fresh one. He rushed away. I tried to remind myself that all was well; that I had just met a man the night before who showed me the greatest tenderness in the face of my deep insecurity.\n\n\"Not a peep from you. I don't need a repeat of the busboy incident,\" I grumbled. Irina just smiled at me as hottie returned to wipe the table and replace my water glass before setting off for another table.\n\nI proceeded to dish out all the juicy details about the Dating in the Dark event: How terrified I had been. How difficult it was to undress. The walk of shame down that long corridor into darkness and all the shocking encounters that followed. When I got to the part about #116, she just stared at me, her mouth slightly parted and curling at the edges with the telltale sign of perfect amusement. We had a good laugh about the whole thing and it felt good to get the matter off my chest.\n\nHottie returned with our drinks, placing two square white napkins on the table to set our drinks upon. Sure enough, the little twist of lemon peel at the rim of my glass was aflame. I smiled in appreciation as he grinned and stepped away.\n\n\"Now then,\" Irina explained, \"I have found something perfect for the two of you to do on your second date.\" She emphasized the word \"perfect\" and accented it with a sly grin. The flame on my drink turned blue, sputtered, and vanished with a small poof of smoke.\n\nMy jaw dropped as she continued. I shouldn't have been surprised, however. Irina may have got the ball rolling but it was I who somehow urged for it to continue as if some other person was living inside me, pulling the puppet strings.\n\nAdmittedly, what Irina proposed did sound perfect: an erotic, Valentine's-themed masquerade ball. If I could do dark, I could also do masks. Or at least that's what I told myself, wanting to believe that I could be naked and exposed to strangers so long as my face was still covered. I thought, perhaps, I could carry on this charade for just a little longer -- before #116 found out who I was, before he found out the truth and everything would come crashing down around me like it always did.\n\n\"To new adventures!\" Irina laughed as she held her drink aloft.\n\n\"To new adventures...\" I replied, clinking the rim of my glass against hers.\n\nI sat back in my seat. The brilliant purple drink I'd ordered seemed to take on an ethereal glow and suggest that another glug of alcohol was still necessary to process the intimidating next step in my insane transformation into god-knows-what. I steered the glass to my lips, watching the cool liquid swirl in a circle and disturb the springy twist of lemon peel clinging to the rim. The citrusy sting of its essential oils numbed my sinuses in a welcoming manner.\n\n\"Here goes nothing,\" I groaned, then I watched Irina's impish grin vanish as I went bottoms up and enjoyed the last taste of sweet, floral cr\u00e8me de violette cascading down my throat.\n\n***\n\nI sent the mysterious details to #116. The theme. The address. The odd little password that was required for entry. \"It's for swingers,\" Irina had said, before reassuring me that I wouldn't be pressured into anything I didn't want to do.\n\nI figured that #116 got the drift when I told him it was an \"intimate\" evening and made a little winky face. That's all that I could muster. Despite the thrill of living out a fantasy and playing the role of someone who actually could attend such a thing, I still somehow didn't quite believe events like this existed.\n\nAfter work on Monday, I went to the largest costume supply store that I know of. A fixture in Greenwich Village, it stretches through an entire city block and fulfills a need for all manners of costumed events on a year-round basis. The masquerade and Marti Gras section didn't have anything particularly Valentine's-themed, so I just looked for something that had me written all over it, in the appropriate color scheme. Eventually, I found a crimson, feathered mask studded with tiny glass gems that sparkled when held in the light. I put it on and stood in front of the mirror, impressed with the way it unfurled like a pair of wings or a butterfly opening.\n\nThere I stood, some kind of bird of prey or insect queen about to flash my brilliant colors and trap an unsuspecting mate. I barely recognized myself.\n\n\"This is the one,\" I whispered to my reflection.\n\n***\n\nWhen the special evening arrived, I got off the subway at the Forest Hills station and found myself in one of those strange neighborhoods that I was aware constituted a part of New York City -- just not the one that I knew. There were homes like small castles, neatly manicured lawns, tall trees that stretched their arms out into bat-like canopies against the night sky. There was a chill in the air and the stars seemed to be frozen in place like small, suspended ice crystals.\n\nI walked for a few minutes through a quiet residential area dotted with unexpectedly august mansions for such a sleepy neighborhood, glancing through the warmly lit windows of kitchens and living rooms as I went, trying to get a glimpse of the sorts of people who lived in such affluent seclusion. Turning onto Ascan Avenue, I found my way to a sprawling brick Tudor home with a series of towering triangular gables. It seemed a fitting locale for the sort of whimsy I secretly carried in the pocket of my coat. Inspired, I took out my mask and slipped it on, thereby satisfying with my sudden anonymity the first requirement for entry.\n\nThe second requirement was a password that had to be uttered to the man at the entrance. He looked at me through a small, half-moon shaped window in the front door. At the first appearance of my mask, the door swung open and a distinguished-looking gentleman in a bowler hat and a long black coat welcomed me up the driveway.\n\n\"Hello,\" I said as I approached, fully aware that I was already quite late to the party which I presumed was bustling inside.\n\nHe nodded at me. \"Good evening,\" he replied.\n\nI then proceeded to say the magic words, exactly as instructed: \"Magnam Voluptatem\". Just like that, the passage was opened up to me and I felt the mollifying warmth of the main foyer briefly reduce my general unease.\n\nAfter executing a Latin password for entry, and quickly depositing my coat in a small side room, I fully expected to walk into some ancient Roman-style orgy. However, I instead passed through the foyer, following the sound of voices through an open doorway, and entered into a sprawling living room festooned with a typical variety of Valentine's decorations. Sprinkled across tabletops and seats were the obligatory scatterings of rose petals. Small pink and white candles sat in clusters, their flames constantly licking at the air like tiny, eager tongues. Sweeping overhead were long chains of shimmery red foil hearts interspersed with silhouettes of Cupid and Psyche.\n\nI was soon reminded of where I was, however, when I got a little closer. So great was Cupid's response to Psyche's affections that his massive, distended cock grew into a cleverly interwoven ornamental element that required more than a moment's attention to even ascertain that it was the protuberance I was certain it was. Even the bowls of condoms were laid out like small trays of candies, one of them intermixed with silvery chocolate kisses, another tossed together with small, chalky hearts on which were printed crude but hilarious variations on the traditional phrases I was more familiar with.\n\nOnce I was made fully aware of the holiday's more salacious presentation within my surroundings, even the more innocent elements took on a more suggestive connotation. I found myself considering, more obscenely, the manner in which arrows deeply penetrated hearts. Even the little Xs and Os seemed somehow like an assemblage of crossed phalluses and gaping orifices. I felt that strange, unexpected thrill that I felt the week before. It emerged slowly, but in sudden flashes of imagination; intimidating but beguiling fantasies of what the present scene might become in just a matter of time.\n\nI soon subjected myself to the array of droll characters gathered about with their carnivalesque faces, mad grins, or long phallic noses, full of jeweled majesty or lacy, catlike flair. A woman with a mask that transformed her into the Queen of Hearts tapped a man on the back with a small scepter of sorts. He turned and smiled. She leaned in, gently touching her thinly-painted sanguine lips against his soft mouth.\n\nEverywhere I looked were more belles-of-the-ball, more mysterious men somehow handsome yet grotesque, or else clownlike and comical as if ready to vault through the air, laughing with a show of mirth and magic before waving their hand and -- POOF -- making my clothes disappear in a shower of rhinestones and sequins. It was as comic an affair as it was erotic and this somehow provided me with a much-needed comfort on account of my agitated nerves.\n\nI mimicked what the rest of the participants were doing, which amounted to snatching a few bite-sized snacks and plucking some bubbly from a perfect grid of slim, golden flutes. I almost thought my glass was dirty before I realized that each glass sported a little red kiss stamped into it as if by crimson lipstick. Soon, I found myself standing around with an empty drink, the victim of my nervous sips, so I grabbed another and continued my gradual exploration.\n\nIn particular, I had been eying a couple of small curtained rooms off the main living room into which couples occasionally vanished for a time. I inched my way there, nonchalantly, eager to take a peek and see what those were all about. When I saw that the coast was clear, I tucked my finger behind the long, draped fabric and glanced inside. There I found a small guest room, simply furnished, with three parallel cot beds arranged from wall to wall.\n\nNever having seen such a thing before, I nearly dropped my drink when I took in the scene. There I discovered a young blonde woman, thin and busty, being undressed by two men; an African-American man, tall and bulging, the other slender and clean-cut, vaguely resembling one of my cycling instructors. Once they had her down to a set of black lace bra and panties, she eagerly went to town on them, yanking off clothing with an impish look in her eye. I found myself focused more on her than them, jealously deciphering what it was about her appearance and demeanor that could result in her being thrust into a real-life fantasy that I'd had just about a thousand times in secret.\n\nOne of the men wrestled off her bra. His large hands moved up to collect her heavy breasts, his face expressing quiet delight as her flesh softly compressed beneath his fingers. The other came up behind her, slowly sliding her panties down over her round buttocks. She explored the rugged terrain of the bare chest before her, finding her way down to his navy boxer briefs, and then ran her fingers over the bugling pouch containing his generous extremities. Without word or warning, save for a devilish look in her eye, I watched her tug them suddenly downward, exposing him fully. I witnessed the breath leave her lungs as his large cock flopped out. After briefly marveling at it, she grasped him sturdily and squeaked with excitement, glancing up at his face with her most skillfully batted eyes and savoring the smirk forming at the edges of his slim lips.\n\nI wanted to scream. Inside I already was, silently wishing I had the courage to be in her place.\n\nAs I stood there, nursing my drink, I found myself gawking at a scene I still could not believe was real. I watched her devour one man while she reached back and grasped hold of the other. I watched them take turns between her legs. I watched the woman clutching her breasts, her back arching as she seemed to shriek toward the ceiling. Before long, three masked bodies were moving together, undulating and grinding in the most lustful of ways. Who knew if she even knew those men or they her...\n\nI felt light-headed as her breasts swung hypnotically back and forth, hungrily having her fill of a thick cock as the other man pounded her from behind. When she released him from her mouth, still stiffly bobbing and clinging to her lips with a gluey strand of saliva, she turned her face slightly and caught my prying eyes. She narrowed them at me, her gaze unsteady from the rhythm of the wanton assault from behind. I watched the jerking motion of her nose and chin, the flapping of her long hair as she suffered his blows, the drunken, exquisite pleasure written across her face and her satisfaction at letting me watch.\n\nI couldn't help but imagine being taken like that by my mystery man, #116. Then it dawned on me like a hot bolt of lightning: I realized that we'd made no plans whosoever to identify one another that evening!\n\nI swung away from the curtain and back into the living room, pressing my back against the wall, my heart beating like a drum of war. I thought of how horrible it would be to have come this far, wading this far and long into an erotic fever-dream like nothing I'd ever encountered before, only to head back home without any continuance of the shocking events that occurred the week prior. I thought of that comfortable darkness of the dating event, so full of raw sexuality and bliss, yet still so obscured, so far from crystallizing into something tangible and real. I thought I might live the rest of my life in that state, on the precipice of something momentous that never would arrive.\n\n\"Those are just negative thoughts,\" I reminded myself. \"He'll find me. He did before. I know he will.\"\n\nI felt I needed some air so I quietly slipped out onto what seemed to be a back patio, foolishly thinking I would find myself alone for a few moments of self-centering. Instead, I found myself standing beneath a high canopy of twinkle lights and a continuance of the Valentine's decor from the interior of the home. Off to the side of the wooden deck was a very large hot tub. Lit from within, it appeared like a bubbling cauldron of naked bodies awash in a radiant glow, their shiny flesh effervescent with steamy, wandering auras. Serpents continually shedding their skin.\n\nThe carnal display put on by those in the hot tub was so permissive that it may as well have been heated by the boiling passion they generated themselves. I watched as one woman drew herself between the legs of a man perched on the edge of the tub, coming face to face with his swollen protuberance which glistened with the wet sparkle of a few hundred string lights overhead. She clutched his manhood, offering him a sly grin, before gobbling him whole in a manner not unlike the way I had just enjoyed a few sumptuous hors d'oeuvres inside.",
        "Her man gazed forward, his eyes glassy with the reflection of other couples ensnared in intimate webs. I watched him fixate on a woman climbing onto someone's lap, reaching down as if to fish for a wavering eel in the waters below. She lifted his cock and sought eagerly to find it a new home, then stuffed it hastily between her legs and sank downward with overwhelming zeal. I heard them groan together as one fit snuffly within the other beneath the warm water. She wrapped her arms around his neck, her expression softening into his as he slid his hands up to cup her breasts which had firmed in the cool air.\n\nI became mesmerized as I watched them moving passionately together, enveloped in ghostly vapors. Becoming frenzied, their hot breath soared through the air in white spouts; drifting beacons that illustrated each and every thrust or grind that came before. The man grunted suddenly, exhaling an all-too suggestive, thick issuance that surged up from his throat and vaulted through the air in one long ejaculation.\n\nMy brief escape had done nothing to cool the hot, burning sensation that moved through my body and threatened to propel me toward something risky, something dangerously indulgent. In fact, it only made me more aroused. I wondered, was there nothing at all, no place to look which did not carry with it some feverish hallucination of my own internal desires written so plainly before me, as if in a waking dream?\n\nI ducked back inside and found myself quickly becoming a rare sight, being still fully clothed. I realized that there was nothing left to do but surrender. Surrender to it all. The merriment, the excess, the lust. I had to cross the room like that, my modestly-covered body now my great shame, as unnervingly handsome specimens of the male sex passed by, their bodies bare as the day they were born and seemingly amused at my hesitation to join them. I felt my face turning red, flush with embarrassment at the sight of one naked penis after the other, a scene that couldn't have been unlike the one I experienced without that pesky faculty of sight. Just as intimidating were the array of young women, some of them with criminally perfect bodies, skipping about happily, drawing constant attention as their spirited boobs bobbled about so playfully and plainly on purpose.\n\nAs I neared the room where I had deposited my coat, I wondered if I could possibly join them -- so unrestrained, so open and free about their sexuality. Or should I just grab my coat and be out of there, snug in the safety and security of an excess of clothing on a long train ride of shame? I snuck inside the dimly-lit room off the foyer, fishing through the pile of coats, bags, and miscellaneous clothing to find mine. The infernal ticking of a grandfather clock nearby seemed to be saying, \"tsk tsk tsk\" for entertaining the notion of chickening out.\n\nI paused, then let go of the pile of coats I grasped anxiously. \"I'll never live with myself if I don't see this through,\" I thought, imagining that #116 was somewhere in there, waiting to find me. All I needed to do was take off my clothes, throw my hair back so he could see my telltale mark, and waltz through the room in my birthday suit while a bunch of strange, horny men scrutinized every inch of my body. Easy...\n\nAs intimidating as that was, deep down I felt myself drawn to the experience like a moth hypnotized by the slow flicker of a hot flame. The time for arguing with myself was over. I savored my last few moments of security in the shadowy room before I began to undress. My heart raced as I briefly removed my feathered mask in order to remove my top. I quickly slipped it back on, feeling the persona of a sexy femme fatale return, bringing mild comfort along with it. The reminder that my face was obscured was the extra push I needed.\n\nOff came my pants. Off came my bra, then my panties. I suddenly felt clad in nothing but the darkness; a chrysalis about to be born into the light in a spectacle of nudity. I looked down at my breasts. I checked myself once or twice from all angles. My stomach, my ass, my pubic hair now so neatly-trimmed into a smooth, even patch. Seconding-guessing my appearance came naturally to me -- but this was now the moment of truth.\n\nThe exit of the room appeared as a strange rectangular portal glowing with a warm light. I knew that when I passed through it I'd never be the same person again. No longer a person subject to privacy, to the barrier of clothing, no longer ensconced in shame. I took a deep breath, adjusted the wide wings of my mask that flared out to the sides like tongues of fire, and stepped forward into the light which bathed every last secret inch of my naked body.\n\nAs I turned the corner and headed toward the large open living room, I felt a powerful sensation awaken throughout myself; an exciting, sweeping tingle that called attention to my absolute exposure. Never having been naked in public before, I didn't know quite what to expect. I don't think anything could have prepared me for the entrance I made, however, as heads around the room turned and greeted me with stares of fascination and titillation. I felt incredibly naked at that moment, knowing that so many eyes were upon my breasts and between my legs, setting off little sparks of arousal as if they were delicate kisses floating in from all over to plant themselves upon my sensitive, awakening body.\n\nAdmittedly, at first I felt like a pair of tits and a pussy. However, as I watched their eyes assessing more than just faceless body parts -- their reaction to my mask, the exaggerated way I walked, the flick of my hair -- I began giving all parties involved a little more credit. I owned what I was doing. I designed it. I gave it life and character in every little gesture. I became, in all ways, the character I portrayed... and I loved every moment of it.\n\nI simply could not believe I managed to waltz out there in the buff, drawing all the attention. Men everywhere were looking at me with an equal lust as they did all the beautiful women they had there at their disposal. My confidence began to grow. I could feel it advancing with my every step as I joined the throngs of naked male and female bodies standing about in vibrant, theatrical masks and absorbed in spirited conversation. I wandered through them, catching glances from my left and my right.\n\nA young woman made up like a fanciful harlequin rushed to meet a man standing beside me, wrapping her arms around him and pressing her bountiful chest against his. I laughed at the sight of her, still wearing a pair of black high heels despite having nothing else on, but best of all were the sideways glances from her beau, directed squarely at my slinky walk rather than responding to her joyous greeting.\n\nAs I toured the landscape of bodies in various states of arousal, ebbing and flowing with an energy whose visible expressiveness made me blush, I found myself doing a double-take upon spotting a curious man standing in the corner of the room, his gaze steady, his mouth in a slim curl, his head cocked just slightly to the side as he nursed his drink.\n\nAll at once, the signals fired throughout my body; my heart began pounding, my nipples became vigilant and rigid, a fire began to burn down below, I could almost feel the flush breaking out on my cheeks and along my neck.\n\nI couldn't see his face but it seemed somehow obvious how handsome he was, even there. The mask he wore was a regal shade of red woven with metallic shards of gold, like intricately etched armor. It fanned out at the bottom to cover his cheeks, leaving only a gap for his mouth. The eyes were exaggerated, sculpted like wrought iron. Thin pieces snaked together and traveled up the center of his brow, collecting onto a plate that gleamed as if he were a sun god who had set me aflame with his searing glances.\n\nI was ensnared and made no sign of being able to move -- or breathe for that matter. The man finished the last of his drink, placed it on a nearby table, and began slowly walking toward me. I toured his entire body with my eyes. He was fit, with sexy abs and strong shoulders, a flat stomach, and sturdy, muscular limbs. But what made me go weak in the knees was the sight of his beautiful cock. It felt so wrong to be obviously eying him there but the motion was so hypnotic as the limber appendage, so nimble and thick, swung left and right, its meaty weight kissing each side of his inner thighs with a gentle slap.\n\nHis slow advance toward me seemed designed to give me all the time in the world to assess his glorious presence. However, I went from wildly aroused as I saw him noticing me across the room, to nervous that he started toward me, to unnerved as he made no sign of stopping his advance at the appropriate distance for simple conversation, to outright intimidated as he arrived and leaned in close to me without so much as saying a word. All of a sudden, I thought, \"What is he expecting? A kiss already? He's a stranger who has only just laid his eyes upon m--\"\n\nBut my concerns were premature. He quieted my mind by planting a soft kiss on my scar, then blowing sweetly across it, immediately identifying himself as my mysterious #116.\n\nWhen he drew back and smiled knowingly at me, I could only manage to blush and babble, \"You're... um... looking well.\"\n\nHe chuckled and said, \"You as well. I was beginning to fear you wouldn't show up.\"\n\n\"Well, I had to keep you guessing, didn't I?\" I responded, lying through my teeth. He grinned.\n\n\"How are you finding the evening's entertainment?\" he asked.\n\n\"I find it to be an appropriate level of cupidity, given the occasion,\" I replied, making polite conversation, even though what I really wanted to do is point and scream at the top of my lungs, \"I can totally see your penis!\" like a giddy child. I snorted a laugh. My face turned red, realizing that he had no idea what I was laughing about.\n\nHe smirked and added, \"It seems we're both in need of further refreshment. May I get you a glass of champagne?\"\n\n\"Does it come with a kiss?\" I asked, leaving it vague as to whether I referred to the little stamp of lipstick or something else.\n\nHe gave me a wry smile and then gently took my hand, leading me across the room toward the libations. He took two champagne flutes and offered one to me. As I went to accept it, he quickly wiped the cherry-red lips off it with his thumb.\n\n\"Hmm,\" he said, pretending to notice. \"It looks like yours is missing one.\"\n\n\"Oh, dear!\" I gasped before taking a sip. \"What now?\"\n\nHe leaned in. I offered him my lips. We connected there, tasting a winey effervescence on each other's tongue. I felt a rush of endorphins go whizzing through my body. It felt wonderful being bold and risky, standing there naked in front of him, letting him see all of me. My nipples firmed up again immediately. I inched closer to him until I felt them lightly touch his sexy chest, communicating how aroused he was making me. When we pulled away I reached out and, with a smile, smeared the lipstick on his own drink until it vanished.\n\n\"Hmm, you didn't get one either.\"\n\nHe chuckled. I put my drink down on the table momentarily, wrapped my arms around him, and went back for seconds. He followed suit, slipping his hands down to the small of my back. I felt myself shiver in his embrace as we kissed, feeling the sensation of his warm, naked body up against mine. I found it adorable the way he grew mildly skittish at his growing arousal which I could feel slowly flourishing against my thighs.\n\nCooler heads prevailed, though. We parted lips, grabbed our drinks again, and collected ourselves. I felt so overheated that I think I actually fanned myself.\n\n\"Shall we, uh, go for a stroll?\" I suggested.\n\nHe agreed. However, after spying on an assortment of couples entangled in various positions, sometimes with more than one partner, I could almost hear myself squeaking as I walked. I grew almost tired of watching all the action and not having any myself -- but how could I ask #116 for any part of the wild frenzy of carnal activity we had just witnessed?\n\nFinally, we came across a woman writhing in ecstatic bliss as a man munched enthusiastically at her crotch. As I watched them, I felt myself hit the limit of what I could withstand. I needed relief, even if I had to give it to myself. After a few moments, #116 started off to continue to the next scene unfolding nearby but I couldn't move. My toes were frozen to the floor. The look I imagined on that woman's face, hidden beneath her mask. I didn't have to see it, I knew exactly what it looked like. I wanted to steal it for myself.\n\nI remembered the moment I first encountered #116 in the dark. I recalled in perfect detail every sensation of bliss I had felt when he slid between my legs. I remembered his first contact with my intimate places. The soft kiss he had placed there to honor my body. I knew this woman's look because I had worn it myself. #116 had given it to me like no man before him. He quickly returned to my side with a smirk, acknowledging my special interest in witnessing this pair's indulgent activities and the intimate access she gave him to her body.\n\nI don't know where it came from or how I managed to summon it; it was totally uncharacteristic of me -- or least, it had been up to that point. However, I felt it bubble up from inside, reaching my lips, finding no refusal from my mind or filtered by my waning sense of modesty.\n\n\"I want that,\" I muttered, not really to anyone, although the audience for my remark was certainly implied.\n\n#116 seemed surprised and amused. \"Oh, you do?\" he asked teasingly.\n\nAt this point, I realized what I had done. There was no turning back, though. What was done was done. Maybe it was the looseness I was feeling with the comforting surge of alcohol moving through my bloodstream but I felt myself letting go. For once, I wanted to ask for the very thing I wanted.\n\nI moved in close to #116, climbing his chest with my fingers. I inhaled that familiar woody Bourbon-like scent that so captivated me at the dating event. I came so close to his cheek that the soft crimson feathers of my mask brushed against his hard gold metallic cheekbones. I reached his ear and whispered something I'd never been so bold as to ask a guy directly, as opposed to innocently requesting with my eyes.\n\nMy hot breath brushed across his ear as I growled, \"I want you to indulge yourself in me. I want to feel your warm tongue exploring every part of me. I want you to tease and suck every fold, drink every drop of my hot, quivering sex, until I stop begging for it. Until no more words can come out. I want to feel my entire body screaming in silence. Make me come for you -- make me feel so high that I can reach out and touch the fucking stars.\"\n\n#116's mouth snapped shut and a serious look flashed across his face. He looked like he was about to start sweating. I was so proud of myself. The ball was in his court. I was mad with the desire for him to deliver on my demands.\n\nHe wasted no time in grabbing my hand and leading me fleet-footed across the room toward one of the play areas. However, those private dens were already packed with three or four couples making all sorts of magic happen. I felt mild nervousness arise as I watched #116 acknowledge that the action had long since spilled out into the living room, an area far less private and more brightly lit. On a couch in the corner a couple had just finished, the man having served up his final grunt before collapsing back onto the pillows. We made our way there and watched as they caressed each other lovingly.\n\nWhat happened next filled me with an electric thrill. They fondled each other's masks. Then, as if having communicated the same need, they carefully lifted each other's. I saw in their eyes, as they obtained first sight of each other's faces, that they didn't know one another. I saw that moment when they understood who had just sent them to heaven and back. It was fascinating and exquisite with its clarity of expressive emotion.\n\nThe couple cleaned up and removed the now-dampened towel that they had draped out over the black cushions. When they got up, #116 moved in quickly to claim our spot. He found a supply of fresh towels nearby and laid a new one out on the couch for us, then invited me to join him there. As I approached, I became conscious of at least four or five couples standing around nearby, keeping vigil on the couch, acknowledging to each other that we were the next couple about to give them a show.\n\nThe idea terrified me. I'd only just congratulated myself for managing to simply show myself naked to them all. And now? But I was also beginning to understand that this fear aroused me to no end. I felt empowered by the prospect of conquering it.\n\n\"No one can see you. No one knows who you are,\" I said to myself, imagining what I looked like there. The woman in the feathery red mask. The She-Phoenix. Hell, for once even I thought I must look hot.\n\nThe couch was a wee bit narrow so I lay lengthwise with my back wedged into the corner of the couch. I lifted one leg and flung it over the back of the couch, spreading my hips completely open to him and still giving him room to lay down. For a moment, I felt more exposed than I ever had before. Shiny and pink, my vagina gaped open for all the world to see, and observe it they did, discovering along with #116 just how wet and ready I was already.\n\nI expected him to dive right in, but no, he took his time and I relented in letting everyone watch. First, he looked at me adoringly, gently caressed my breasts, ran his finger down my body exploring my nakedness with a sense of quiet wonder until he reached my navel, which seemed to seize him with infatuation.\n\nAfter a few moments, he continued on, tracing the inside of my thighs as I began to squirm. He explored every inch of me, every inch of my soft flesh, flirting with my body here and there, everywhere except that one area, the nexus of my womanhood which awaited the arrival of his long and drawn-out tease. Then finally, contact. His fingers slipped down over my furry mons and slipped through my labia, expanding my folds further to indulge in my silky pink flesh, instantly coating themselves until they glistened. There he stayed, patiently stroking me, checking my eyes, reading my every sigh and gesture. Never before had a man touched me so tenderly, so curiously, so full of simple adoration of my femininity.\n\n\"Mmm, please... I'm so... wet...\" I hissed. \"I can't stand it anymore... please g--\"\n\nHe sealed my mouth with a kiss then slipped downward with a look of hungry determination. I watched as he vanished between my legs, bathed in my fragrance. Impatiently, I stroked his hair and tugged his head closer to my body. Then I felt the warm presence of his tongue sweeping itself through the most sensitive and intimate part of my body, communicating every bit of his curiosity and desire as he navigated my tingling flesh. He avoided my clit, teasing me, making me want it more and more until I was inflamed with desire.\n\nThen: stars. There were those stars I wanted to reach so badly, exploding throughout my field of vision, even throughout my entire body as he found my budding nub, flicked it with his tongue, and sucked it gently. An initial fear that the mask would impede his skill at delivering oral pleasure went out the window as I found him capable of avoiding this hindrance entirely.\n\n\"Ngh!\" I squeaked, suddenly jerking my hips and grinding against the exposed part of his face.\n\nI heard him chuckle softly. The men and women watching us chuckled as well. I became suddenly conscious of their stares once again. Not just their attention, their obvious arousal too. My shenanigans with #116 had already spawned some staggering erections. I found myself giddy at what we'd inspired, necessitating soft strokes by wives or girlfriends as couples who liked to watch engaged in doing just that. I gazed drunkenly at them as #116 went to down, helping himself to my body, licking and sucking at my labia, lashing my swollen clit, provoking quick spasms and soft cries.",
        "By then I had simply lost all my senses. I didn't care who was watching us or what we were doing in front of them. All I wanted at that moment was to pleasure #116 in a manner that expressed as much gratitude for what he had just done to my body as was possible. I grabbed hold of him and pulled #116 up to my mouth, kissing him passionately. Then friskiness took over and I pushed him back onto the couch cushions, wedging his thighs open with a devilish grin forming beneath my feathered crown. The force of this action caused his dick to pop up between his legs and pendulate stiffly back and forth between his knees.\n\nI sunk into the chasm between his muscular legs, recognizing his heady musk. I was instantly drunk on it. Then I grasped that thick, distended cock and devoured him with brazen theatrics. He groaned immediately, resting his head back onto a pillow.\n\nI listened to his audible pleasure continue as I worked him into a frenzy, sucking his cock with gusto and ambition while others watched. It popped free from my lips and I spit on it. I watched my saliva dripping down his long, hot shaft. I felt ravenous. Powerful.\n\nI glanced up briefly and saw the other girls watching with their partners, eying #116's swollen member with a glimmer in their eyes. But it was my cock. Masculine, hard, musky, and all mine. So I continued to help myself to it, stroking and tickling his balls at the same time, driven wild by the pleasure it gave him, the attention we received, his desire that only I could fulfill.\n\nI don't know if I felt like another person entirely, the woman in the mask, or if I was discovering that this was really me and had only just metamorphosed into my true form -- but one thing was for sure, I wasn't yet done crossing the divide. With a long, slow, teasing lick up the length of his meaty shaft, I gave him a look of fierce hunger, narrowing my eyes in a sinister fashion through the wide eyeholes of my scarlet mask. There was no question what I wanted next. I wanted to feel his penis deep inside me, I wanted our bodies to feel as though they were one.\n\nI slid my body up along his and then fell backward to sit on his thighs, then I inched forward, grasping his cock and bringing it closer to my mons. I slapped it a few times against my moistened labia, then slid up and down over the flat plane of damp pubic hair and through my wet folds, making him want it, making it beg for it with his eyes.\n\nI angled his cock so as to tease my lips with his bulky cockhead, peeling me open, revealing my humid pink recesses. Then when I saw from the clenching of his jaw how unhinged he really was, I sunk down with all of my weight, sending his surging erection deep into my welcoming pussy. We both moaned in unison and I began to lose my mind as I felt his massive girth expanding me from the inside, my inner muscles straining to receive him and sending shockwaves of pleasure through my body.\n\nI placed my hands on his chest and whipped my hair across it, laughing softly before I began to rise and fall, slowly at first, sensually, polishing him with a slippery gloss that revealed everything about my sexual ardor. Once we'd achieved a comfortable rhythm, I began to bounce more swiftly, sending his cock plunging into my depths at a brisk pace. My pussy was on fire. Everything seemed to be on fire. Even the free movement of my boobs, exposed to so many eyes in the room as they heaved about my chest turned me on. I saw the men watching me, aroused so much by the joyous dance of my breasts that they stood there at full mast. I could feel them wanting me, like a pulsing heat radiating from all around the room.\n\nBut most of all, I could see just how thrilling it was for #116, lost in the majesty of my body, the enigma of my eyes, the musical sound of my giddy laughter as we jerked our hips together in a feverish search for the ultimate release from ourselves. Still riding him furiously, I closed my eyes, feeling a deep, sweeping sensation moving upward through my body and radiating outward in all directions. I felt my chest expand and the cool air rush in to fuel the furnace down below. I heard myself scream, a squeezing sensation, I felt the waves break. I came so hard that I nearly collapsed onto him, but no, I stood my ground, moaning and tremoring until it passed and I found myself still eager for more.\n\nBy the time I was exhausted from riding him, #116 was more than ready to take over. He threw me back just as I had done to him. My hair clung to my lips. I brushed it from my face, revealing a beguiling grin. I threw my knees to the side and thrust my arms out, awaiting his embrace. He found a home there, buried in the warmth of my breasts. #116 was lightly perspiring, his sweat fragrant with masculinity and warm spice.\n\nI clutched his butt as he reentered me, moving up to nuzzle my neck. I moaned into his ear as I felt him moving through me, his muscles flexing in my hands and then going soft again. I moved along with him, anxious to feel him as deep and close to me as possible, almost to the point where his aching, swollen appendage reached my cervix.\n\nNearby, I saw the intense stares, the labored breathing. A woman began to moan, leaning into her partner with a tender weakness as he stroked her lovingly. It seemed as if our pleasure had set fire to the whole room. #116 lifted himself from my body, grasping my thighs as a bead of sweat made its way down his temple. He looked at me with such beautiful anguish as he continued thrusting, fixated on the steady rhythm of my heaving breasts as he penetrated my body with sweet veneration.\n\n\"Oh god... fuck... faster... make me come again! I'm going to--\" I groaned.\n\nI couldn't finish my sentence before a series of small orgasms rippled through my body. I felt myself turning to liquid. I laughed, driven to giddiness by the sudden squelching sound of my own pussy. His nostrils flared like a bull and he shot me a look that I might have misread as pain if it weren't for my knowledge of how delicious his suffering was. I watched as if my spasms seemed to reverberate through his own body, the sensation of those sparks of pleasure crashing through him and making his desire for me flare up into a kind of madness.\n\nI knew what he wanted -- what he needed. I wanted to be the one who could bring him sweet relief. I wanted to be his escape from the world, his gateway to the perfect bliss of oblivion.\n\n\"Mmmmggh!\" he groaned, visibly shaken by my orgasms. Appearing senseless, he stopped thrusting and gazed down at my widened hips as I resumed grinding against him, showing him no mercy. He seemed lost in the sight of my body, frothy and seething, still eager to have him deep inside me. As much as I didn't want to stop, I knew I had to. He was on the precipice, I could see it in his eyes even before he spoke.\n\n\"Jesus... I'm going to-- come!\" he grunted, struggling with words as he quickly pulled out of me.\n\nI bolted upright, grasping his cock and giving him a few quick tugs. Then I devoured his reddish, wet cock, still fresh with the smell and taste of me. I sucked him quickly, massaging his balls as he leaned back and groaned. In a matter of seconds, I felt the warm spray of fresh cum shoot across my tongue and hit the back of my throat. He emptied himself in spasm after spasm, pooling on my tongue, thick and slightly salty. I struggled to get it all down, but at the same time, I delighted in the taste and sheer abundance of his absolute crisis of pleasure, wild with the thrill of what we had elicited from each other in the throes of passion. He collapsed backward, still softly moaning from the magnitude of release.\n\nAs I lay there huffing and puffing and trying to come back to Earth, all I could think of was that I wanted us to remove our masks. It was time. I simply couldn't bear it any longer.\n\nIt seemed so backward, so topsy-turvy, the way we had gotten to that point, discovering our wordless chemistry right off the bat, reading each other authentically and directly without any fake veneer. No stupid selfies, no corny dating profiles, no fake performances or awkward dinner conversations. All I had was the grace of his first touch when I had nothing else to rely on, nothing at all, to communicate what sort of man he was. It was a pure, physical language we first spoke, but it said volumes the moment his lips had touched my scar.\n\nAll the pressure of sexual attraction was lifted -- and now came the reward. A face, an identity, a relationship to build upon all that we had just connected over.\n\n\"I want to see you. Like that other couple before us. I need to,\" I said breathlessly. He smiled with understanding, albeit with a small hesitation, then nodded.\n\nThe potential for reveal took on a potent significance. To have undergone such pleasure together without knowledge of the other's identity, only to then unveil our faces in all their glory and complete the puzzle and satisfy the mystery -- the idea seemed virtually orgasmic to me. All other pleasures paled in comparison to that desire.\n\nEven that power I knew I possessed, the one that infected his mind with the most sacred of feminine charms, rendering him senseless, mad with lust, drowning in his own animalistic desires with a fever that only I could soothe with my cooling waters. Even that seemed to play second fiddle to the indescribable power of finally knowing the face of the man I now adored and for him to know the face of the woman who made him burn so badly. Hell, not since Orpheus' unrelenting desire to turn and meet the eyes of the lovely Eurydice had someone had to fight such fierce temptation to catch a simple glimpse of another's face.\n\nI reached up and ran my finger along the deep grooves of his mask, savoring the moment. Would he reveal himself to be transcendent in his beauty? Hideous and terrifying, like the phantom of the opera? Would anything change between us, after having glimpsed one another? The questions were maddening.\n\nAt long last, I took hold of the base of his mask and began to lift it. His hand rose to meet mine and stopped me. \"Wait. I have to do this,\" he confessed. My eyebrows rose and I sat upright. I watched as #116 took a deep breath inward and reached for his mask. He slowly slid it upward until it began to rotate backward and rest atop his head.\n\nI heard myself gasp audibly at the sight of his face. He seemed to acknowledge my sudden surprise and knew that it was more than the simple discovery of the face of a stranger I had just fucked. No, it was flecked with a precise brand of shock and confusion.\n\n\"I know what you're thinking,\" he rushed to say, \"Please let me explain. It's not as weird as you think.\"\n\nI nodded slowly.\n\n\"I heard about Dating in the Dark from a friend who tried it once. Admittedly, I was skeptical at first, but I haven't had much luck with-- well, anyway... I gave it a try. But when I bumped into you there... I dunno, I felt something. I thought I offended you at first when I discovered your--\" He gestured to my neck.\n\n\"My scar,\" I said.\n\n\"Your beauty mark,\" he replied, correcting me with a simple smile.\n\nRecollections of my outing with Irina at L'Ombre flashed through my mind. Her enthusiastic welcome. The warning she gave me about the waiter. The embarrassment I felt when I became conscious of the obvious way I was gazing at him.\n\n\"And when we ran into each other again that night? I was so taken aback that I nearly spilled your water everywhere. I take coincidences like that as a sign,\" he explained.\n\nI nodded quickly, feeling relieved. He hadn't fumbled with our waters out of horror after all. Quite the opposite. When he saw my neck he had known in an instant that it was me he had met, inexplicably, out there in the darkness.\n\n\"Anyway, there was a connection,\" he continued. \"I had to follow it to its logical conclusion. To be here with you, right now.\"\n\nThe poor guy seemed anxious; his face looked as flushed as it was gorgeous. I realized that the moment we took off our masks, all the insecurities began rushing back in. We were no longer playing a part that we could hide behind. However, the moment I recognized that, I knew I had to stop it. That was the old me. I didn't want that anymore. I told myself that this was who both of us were now; sexy, dynamic people who could feel free to live life to the fullest and do shit like this. I wanted to be that woman, even in the full light of day.\n\nI touched his hand sympathetically. \"No, no, I get it. And you're right. The moment I bumped into you, I felt a spark too. The way you touched me, without even being able to see who I was... The way we felt together. It felt right.\"\n\nFor the first time, in a very long time, I was completely and totally comfortable sitting there nude in front of a hunk of a man, knowing that he truly, passionately wanted me and I him. No insecurities. No fucking moping about my embarrassing scar or anything else I somehow once thought made me less of a woman for absolutely no good reason.\n\nHe held out his hand and said, \"Nice to meet you. Again. I'm--\"\n\n\"Callan,\" I said, extending my own hand. He grinned upon discovering that I still remembered his name. My grin easily rivaled his. \"I'm Corinne.\"\n\n\"Happy Valentine's Day, Corrine,\" he said with a grin.\n\n\"Happy Valentine's Day,\" I said, leaning in for a kiss -- one that somehow felt like it contained and perfected the sum total of all our erotic adventures together.\n\nI recalled more of our first encounter. How handsome he had looked with his little dimples which were now no longer obscured by his regal mask and had begun to emerge again in full splendor, just as they had done that night we first met. How funny it was that Irina and I had planned our second date, right there under his nose, as he waited tables nearby! There had been an attraction then, no doubt. And yet, it was our earlier encounter, sight unseen, which first drew him to me.\n\nYes, that night we threw everything to chance, or fate. Remarkably, it all just worked out.\n\nAnd the best thing?\n\nHe had looked so gorgeous in that prohibition era getup, with the cute little tie and vest -- but oh how much more delicious he looked out of it!\n\n***\n\n\"Dating in the Dark\" was submitted to the 2020 Valentine's Day contest. If you enjoyed this story, please consider voting by clicking a star! -- Thanks for reading and Happy Valentine's Day!"
    ],
    "authorname": "SolarRay",
    "tags": [
        "couple",
        "dating",
        "first meeting",
        "kinky",
        "public sex",
        "romantic",
        "strangers",
        "teasing",
        "valentines day"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/dating-in-the-dark"
}