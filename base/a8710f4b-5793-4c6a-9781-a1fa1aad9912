{
    "title": "Va-Cay",
    "pages": [
        "\"Mom, I'm old enough to get a job and help out now.\"\n\n\"Honey, you're thirteen.\"\n\n\"I know, but I could babysit or mow lawns, right?\"\n\n\"No. You don't need to do that. We'll find a way to get by. We always do, don't we?\"\n\nHer daughter, Kayleigh, was a teenager, but not a typical teen girl. She never complained. Ever. She wore things until they wore out. She ate whatever her mom could afford to put on her plate. She never asked for anything even when that meant missing out on a field trip or something education-related. She'd even learned not to care about comments from other girls about her outdated clothes or that she never wore makeup, a luxury too expensive to even think of asking for.\n\nSeveral girls, one of them a former best friend whose parents had money, were the ones who went out of their way to make Kayleigh's life miserable. Most were neutral or didn't care, but when even a handful of the most popular girls ostracize you, it's painful no matter how hard you try and ignore them. Her mom knew that, and it hurt her deeply, too, knowing how cruel girls could be.\n\nBoys were a different matter, and part of the reason her former friend and her new 'posse' never gave Kayleigh a break. Being poor, she didn't have nice clothes, but the one thing she had was her mother's genes. Kayleigh Sanders was pretty, and it didn't matter what she wore. The boys knew it, too, and treated her accordingly, and that infuriated the little click of girls who resented her for it and saw her as competition.\n\nKayleigh believed her mother who often reminded her that school, and especially junior high, was a make-believe world that often bore little resemblance to real life. It was a training ground of sorts; the place where young people learned to become adults as they tested the waters, pushed boundaries, and charted their future course. As that process unfolded, a lot of...stuff...happened, and according to her mom, a lot of it could be very painful.\n\nSo Kayleigh held on to the hope that things would one day change for the better while doing her best to be the kind of daughter her late father would want her to be; a friend to her mother who really was her best friend, and a pleasant, cheerful human being who did her best to actually learn something at school in spite of the 'stuff' that went on in her life every day she was there.\n\nSince her father's untimely death, her mom's experience was the same only without the kind of grief that 'mean girls' dished out. She never splurged. She never did anything for herself. The bills came first, then any money leftover\u2014which was extremely rare\u2014went to to take care of her daughter's needs. But now they were struggling more than ever, and unless she could find a way to stay afloat, they risked losing their home.\n\nVanessa Sanders had been widowed for nearly two years, and through it all, she'd done her best to never complain, her example not lost on her daughter. Her late husband, Adam, was a Seattle firefighter who'd responded to a three-alarm blaze just shy of twenty-four months ago. \n\nAn apartment complex had been set on fire by an arsonist, and by the time the first trucks arrived people were streaming out of the building. Many were screaming at the firefighters to find their loved ones they'd lost track of in the ensuing chaos.\n\nAdam made a total of four separate trips inside while other firefighters poured as much water onto the blaze as they could. He'd found an elderly man overcome with smoke inhalation the first time, and a small child the second. Both made full recoveries, facts Adam Sanders would never know. The third time he didn't find any people, but he did carry out a dog that had been cowering in a corner.\n\nA woman who was screaming hysterically begged him to go back in. \n\n\"My baby! My baby!\" she kept screaming.\n\n\"Where? Which floor? Which room?\" he asked even as his battalion chief told him not to to go back in.\n\nHe shook his head and said, \"Sorry, Chief. I have a daughter at home. I'd want to know they made every effort to save her. If there's even a chance there's a child inside, I have to go back in.\"\n\nShort of asking one of the police officers helping to control the crowd to restrain him, the chief knew it was a losing battle. He told Adam to be careful and to get in and out as quickly as possible. He redirected every hose to the part of the building Adam was headed into, but within twenty seconds of his entering the building, most of the second floor came down. Moments later, much of the third collapsed on top of it leaving a huge, gaping hole in that section of the building.\n\nMany hours later, once the fire was out and the rubble could be cleared, Adam's lifeless body was found under a huge concrete slab, but there was no child inside. The little girl had just gotten separated from her mother and was fine, but Adam Sanders had given his life trying to find her.\n\nThe chief and the mayor both told Vanessa Adam was a hero at his memorial where they posthumously presented her with the highest award the city could bestow on a first responder. They said the same thing to her then-eleven-year daughter, Kayleigh. Too young to understand, she'd withdrawn inside herself for the next year. She got up, went to school, and made it through each day, but only in the last six months or so had she begun to return to being her old self. And that was around the same time the ridicule and the criticism began as her clothes no longer fit.\n\nHer mother had grieved in her own, very different way, but it had been just as difficult for her. She'd been unable to work at all for nearly six months, and even when she was finally able to find a job, it wasn't enough to pay their bills. She and her daughter had been able get by reasonably well for for the first year or so by using most of the $50,000 of life insurance Adam had on himself. But with a mortgage that ate up just over $1,800 a month plus property taxes and repairs on top of all their other bills, that money was completely gone as of six months ago.\n\nMaking matters worse, Kayleigh had had a growth spurt, making her shirts too tight and pants too short. She was still unable to wear her mom's things, and as a result, she was forced to go to school wearing whatever her mom could find at yard sales. \n\nIn addition, past-due notices were piling up, and Vanessa was 'robbing Peter to pay Paul' each month by making partial payments or skipping one bill to pay another as she tried to make ends meet. At wits ends, one of the guys from Adam's battalion who still checked in on her once a week or so told her about something he'd recently heard of called 'Va-Cay Stations'.\n\n\"What is it?\" Vanessa asked him during a recent short visit.\n\n\"It's an online site that's kind of like Uber for your house. You can rent out a room or rooms in your home to people either long-term or for a day or two at a time. The amount of money people pay is about the same as they'd pay for an average motel in the area. Plenty of people prefer living in a home to a motel, and it's really catching on. I was thinking you might want to give a try. You know, to maybe help get you through this rough patch.\"\n\nRough patch. That was a very kind way of saying 'unmitigated financial disaster.' This friend, who was named Jack, had been one of Adam's best friends and more than caring since her husband's death, so Vanessa wasn't about to mention how much of an understatement that was. There was a 'delta' of close to $1,000 a month between what she earned and what she needed just to break even so even a second, full-time job wouldn't make up the difference. And with a 13-year old daughter to raise, working two jobs was a recipe for a visit from child services.\n\nVanessa had no family in the local area so there just wasn't anyone she could turn to for help. Her mother lived alone down in southern Oregon, and she was surviving on social security, so that was also a financial dead end.\n\nRecently, Vanessa was seriously thinking about selling their house or even filing for bankruptcy. And then what? If she sold their place, she'd have to buy another one, and since she couldn't pay cash, she'd still have a mortgage. Yes, it would be smaller, and that would help, but she saw no way to earn enough to make that happen without moving to someplace far less expensive, and that meant moving a long way from everything she and her daughter knew and loved. \n\nShe could rent a place, but even small, one-bedroom apartments went for around $1,200 a month, and those were in some of the worst possible places to live. She could make ends meet, but Vanessa knew she would fear for her own and her daughter's safety. A decent, two-bedroom apartment was closer to $1,700 a month and for that kind of money, she could buy a another house\u2014just not anywhere in the King or Pierce County area. \n\n\"How do you weed out the bad folks?\" she asked Jack. Kayleigh's safety was her primary concern, and she wasn't about to bring some sicko into her home.\n\n\"Again, it's a little like Uber in the sense you can see ratings from other Va-Cay users. They'll tell you what kind of a guest any prospective tenant of yours was at previous homes. They, of course, get to rate your place when they leave so that seems to tend to keep people on both sides honest. That doesn't mean you know a whole lot about who'll potentially be staying with you, but it's at least a start,\" Jack explained.\n\n\"Can you show me?\" Vanessa asked, feeling cautiously optimistic.\n\nHe sat down with her at her computer and opened the Va-Cay Stations site then walked her through how to sign up and screen prospective tenants. He emphasized again there was no 100% guarantee about any individual she might bring into her home, but she could mitigate her concerns greatly by following the screening checklist to a tee.\n\n\"It seems too good to be true,\" Vanessa told him once he finished with the informal tutorial. \"Why isn't everyone doing it?\"\n\n\"No, I understand. We all know what they say about things that are too good to be true,\" he told her with a smile. \"To answer your question, a lot of people don't have a spare room. Others don't need the money. And many, I'm sure, just don't want to be inconvenienced.\"\n\nHe smiled at her again in a way that told her this dear friend of her husband's had feelings for her, and each time he came to visit, it seemed more obvious. She felt terrible about it because he really was a very nice, very decent man. The problem was Vanessa just didn't find him attractive in the least. \n\nAdam had been so good looking it still made her heart hurt when she thought of him. That smile of his had done her in on their very first date. But it was the quiet way he loved her from then on that stole her heart and made her feel like she was the most important person in the whole world. And when Kayleigh came along, he couldn't have been a better, more loving and devoted father. \n\nVanessa was finally ready to consider dating and even remarrying, but not with someone she couldn't imagine truly wanting to wake up next to. At 39, and dreading the 'big four-oh', she was still a very attractive woman and often received compliments from both men and women. None of them had ever mattered once she met Adam, but they still came streaming in on a regular basis nonetheless. \n\nSo until she could meet someone who made her feel the way her husband had, or at least something close to it, she would find a way to get by\u2014financially and romantically.\n\nShe thanked him sincerely, and Jack told her it was nothing; that he was happy to do it. Vanessa could tell he was hoping she'd maybe ask him to stay for dinner, and when she didn't, he finally told her how he felt about her, hoping against hope she might have some similar feelings for him.\n\nPolitely letting him know she didn't was very hard. She was as gentle as she could be, but she could see he was hurt even though he said he understood. Jack made sure to let her know he wished her all the best in finding someone even if it couldn't be him, and that he'd always be there for her no matter what. And with that he said goodbye.\n\nVanessa had tried dating here and there, but it had been nothing short of torture trying to pretend she was interested when all she could think of was the date ending and getting home to her daughter and the safety and comfort of their home. And that thought would trigger other thoughts like her overdue mortgage. That, in turn, caused her to wonder how she'd keep the power on after being so far behind. And so it had gone for some time now.\n\nSo now that this gentle man had shown her a potential way to bring in some real money, she felt horrible and guilty for not at least agreeing to have lunch him. And yet, did she have to repay his kindness by going on a date with him when she had no interest in doing so? As she sat there running all this through her mind, she realized that while she was long past the kind of 'stuff' her daughter was living through, being an adult was often accompanied by its own brand of torment.\n\nWere money to start coming in and Vanessa found herself able to think about something other than bills and collections calls, would she possibly find herself ready to give love another try? She was almost certain the answer was 'yes'. The bigger question was would she ever find another Adam or anyone even close. And if she did, would Kayleigh be able to love him, too, or at least accept him as someone she respected; someone who at least made her mother happy?\n\nFor now, she needed to decide what to do with the information she had. The amount of money people were willing to pay per night was exciting. Even those not interested in meals paid roughly the cost of a three-star motel in the local area and, and in her town of Auburn, Washington, that was just under a hundred dollars a night. If she could rent out even one room for ten days a month, that meant being able to pay all her bills. Were she to rent out both spare bedrooms, she could quickly catch up on most or even all of the areas where she was deeply underwater. Renting them both out for say...fifteen days a month meant...well, it meant the possibility of a normal life again.\n\n\"Hey, Mom. Whatcha doin'?\" Kayleigh asked after watching her mom stare at the computer screen for over a minute after Jack stopped by her room to tell her goodbye.\n\n\"Oh, hi, honey. I didn't know you were there. Just thinking. What's up?\"\n\n\"Nothing. I was just wondering how your visit went. Jack seemed kind of bummed.\"\n\n\"Oh, right. He um...he asked me out, honey, and...I...I'm just not ready,\" she said, rather than getting into the details. \"But he did tell me about something I'd never heard of. Sit down and I'll explain it to you.\"\n\nAfter hearing the gist of the Va-Cay thing, Kayleigh's excitement became contagious.\n\n\"Mom, that would be so awesome! Let's do it!\"\n\n\"You think?\" her mom said.\n\n\"Hey, nothing ventured nothing gained, right?\" Kayleigh said with a smile. \n\nShe had her mother's smile and her good looks, and it pained Vanessa terribly that she couldn't afford to buy her daughter the simplest of things. For the last two months, the only things she'd been able to buy her daughter had indeed come from yard sales. And yet she was always cheerful and upbeat.\n\n\"Okay. You wanna help me get started?\" Vanessa asked.\n\n\"Definitely! I can do it for you if you'd like. Just sit next to me and feed me the information when we get to something only you can provide, okay?\"\n\nVanessa was fairly computer literate, but Kayleigh was extremely savvy when it came to such things, so she got up, pulled another chair over, and gave the one in front of their very-old computer to Kayleigh. \n\nVanessa slid in close, put her arm around her daughter and said, \"Do you know how much I love you?\"\n\nKayleigh smiled, told her she loved her, too, then said, \"Okay. Let's rock and roll, people!\"\n\nFifteen minutes later, Vanessa Sanders's profile was done, and once the site verified it, she would be able to advertise a room or rooms for rent.\n\nThe following evening, she had the approval, and Kayleigh helped her post some photos of the house and the one room they initially wanted to rent out. They spent some time cleaning, straightening, and 'staging' the room the best they could and then discussed a price. After checking a dozen decent motels in the area, they set their rate at $99 a night. \n\n\"Meals not included,\" Vanessa said to Kayleigh when that option came up. \"I don't mind cooking, but after working all day, that's the last thing I want to do when I get home.\"\n\n\"Or before you go to work?\" Kayleigh reminded her, were they to offer breakfast.\n\n\"That, too. Okay, I guess we sit back and wait, right? her mom said.\n\nThey sat there for ten minutes looking at the computer monitor before Kayleigh said, \"Is this one of those 'watched pots never boil' kind of things?\"\n\n\"Oh, gee. No kidding. Come on, let's go watch a movie,\" her mom said.\n\nThey'd had to shut off their cable connection several months ago, but the DVD player still worked, and one of their favorite free things to do was watch a romantic movie together. Even popcorn was out of the question as they debated which one to watch. Once the decision was made, the only thing left to do was see who cried first during it.\n\nVanessa won (or lost) this time although Kayleigh wasn't far behind when the main character was diagnosed with cancer, the worst part coming from the knowledge she'd never be able to have children with the handsome man she loved.\n\n\"Come on, let's go check the site,\" Kayleigh said when the movie they'd seen at least a half dozen times ended.\n\nGrateful for the distraction, her mom got up and followed Kayleigh back to the computer.\n\n\"Oh, ho!\" her mom said. \"Look what we have here!\"\n\nA single woman wanted to rent their room for the upcoming three-day weekend.\n\n\"Cha-ching!\" Kayleigh said before offering her mom a high five.\n\nVanessa went to slap her hand then said, \"Forget that! Give me a hug!\"\n\nTheir first tenant was perfect. She was there for an art festival and was gone nearly all day for each of her three-day stay. She was also quiet as a church mouse when she came in, and neither Vanessa nor her daughter really knew she was there except for the occasional passing in the hallway. \n\nAnd just like that, they were $300 better off, and the woman had given them a five-star rating! Taxes had to be paid, of course, but this was actual money deposited in a PayPal account! Even better, there were two more requests for the room by the time the woman left. \n\nThe first was for the rest of the following week (less Monday) which gave Vanessa a day to clean up, wash the sheets and towels, and get ready for their new guest.\n\nAdditionally, a couple wanted to stay there for a family reunion, and they needed the room for four days starting just two days after their second guest left. Evidently, the family they were reuniting with didn't have any spare rooms, and they indicated they were very much looking forward to staying in an actual home. \n\nVanessa was thrilled until it hit her that this spare room was across the hall from Kayleigh. Her tenants were a married couple away from home. And married people on vacation tended to have sex, and having sex created...certain noises and sounds, sounds Vanessa hadn't thought about once when deciding to rent out her room.\n\n\"Kayleigh? Could we maybe talk?\" she asked her daughter that Monday evening after they got the room all spiffed up.\n\n\"Sure, Mom. What's up?\"\n\nKayleigh listened without laughing or even rolling her eyes, then said, \"No worries. It wouldn't be the first time I heard those noises.\"\n\nVanessa gave her daughter a look that said, \"How in the world could you know what those noises sound like?\"\n\nKayleigh finally laughed then said, \"Well, before Dad died, I was almost eleven, Mom. Not two.\"",
        "\"Oh. OH! Oh, my...goodness. You heard us?\" she said, wondering if one really could die of embarrassment.\n\n\"Just once. I came home from Amanda's house during a sleepover to get something, and you guys didn't hear me, but I heard...\"\n\n\"Okay! Stop! I get it,\" her mom said.\n\n\"Mom, don't be embarrassed. Dad was very handsome, and you guys were married and in love.\"\n\nVanessa's short-lived embarrassment passed and she felt herself tearing up as she said almost absentmindedly, \"Yes, we were. Very much so.\"\n\n\"Besides, remember how you guys gave me the 'birds and bees' talk a few months before Dad died? You told me it was a part of life.\"\n\nShe smiled then said, \"Dad said that. You said, 'A very pleasant part of life'. I still remember the way you looked at Dad when you said it. I wasn't old enough to really understand, but well, now I am. So anyway, if that happens, I won't be embarrassed, okay?\"\n\nHer mom blinked several times then said, \"How did you grow up so fast?\"\n\n\"By eating my Wheaties?\" Kayleigh teased. She'd never even tried the whole-wheat cereal, but that was something else her father used to say.\n\n\"Your dad would be so proud of you,\" Vanessa said as she pulled her daughter onto her lap. \n\nShe was too big for that, but since no one else was around Kayleigh let it happen. \n\nVanessa hugged then said, \"So am I. You know that, right?\"\n\n\"Yes. And enough of the sappy stuff, okay? Between the movie and now this, it's a bit too much, Mom.\"\n\nThat was Kayleigh. She had a dry sense of humor and said things like that off the cuff, and most of the time they were downright funny.\n\n\"Sorry, honey. Thinking about your dad does that to me.\"\n\nKayleigh hugged her mom then said, \"It really is time you started looking, Mom. I know it's not my business, but I do know how lonely you are. So please don't not go out because of me, okay? I kind of see why Jack isn't someone you'd want to date, but there have to be plenty of good, decent...\"\n\nShe paused, looked right at her mom, then said, \"Really hot guys who want to date my gorgeous mom.\"\n\nVanessa couldn't help smiling back as she hugged her daughter before saying, \"I don't avoid going out because of you, Kale,\" using her nickname. \"It's just so hard after loving your father. He was not only the most handsome man I ever knew, he was the nicest, and the kindest, and the most roman...\"\n\nWhen she started to cry, Kayleigh stood up, smiled, grabbed her mom's hand, and said, \"Come on, crybaby. Let's check the website again. What do you say?\"\n\nVanessa knew what she was doing and was grateful for yet another distraction even though they'd just looked.\n\n\"Good idea. Let's go see how rich we're going to be!\" her mom said as she let her daughter pull her along.\n\n\"Ha! See? Another tenant!\" Kayleigh announced. \"And look! Two weeks.\"\n\nShe looked over her shoulder at her mom who had her hands on her shoulders and said, \"Sweet!\"\n\n\"Wow. Two whole weeks. Yes, sweet indeed,\" her mom said as she continued looking over and around her daughter's head.\n\n\"If this keeps up, we might actually be able to go out for dinner sometime.\"\n\n\"Mom. You need some new clothes first. BAD!\" Kayleigh told her. \"How about you buy yourself something nice first?\"\n\n\"No. Not until you get some new things,\" Vanessa told her. \"And not until we're no longer drowning in debt. If I can keep things afloat for another month, we just might be able to dig our way out of this hole.\"\n\n\"You mean the Grand Canyon, right?\" Kayleigh quipped. \n\nNormally, she wouldn't even think of joking about something so serious, but with so much new money coming in, her mom even laughed.\n\n\"Yes. Yes, I do, because that's just about how deep we're in. But this is definitely the light at the end of the tunnel we've been hoping for,\" she said before squeezing Kayleigh's shoulders then kissing her on top of the head.\n\n\"We'll get through this, Mom. Remember, we always do,\" her daughter said, using the line Vanessa had said so many times it was becoming a kind of family mantra.\n\nVanessa had to turn away because she was tearing up yet again. She almost felt guilty for having a teenage daughter who was not only not a problem but a blessing. She realized that were Kayleigh a typical teenage girl and a real handful, it might just be the proverbial straw that would break her back. But Kayleigh was anything but a handful, and once again her maturity had touched her deeply.\n\nVanessa used half of that first $300 to help catch up on the mortgage and the other half on her delinquent power bill. The woman at the power company let her know her power was scheduled to be turned off just three days later, but this money would buy her until the end of the month. By then, she'd paid the power company in full, and was making some real progress with the bank.\n\nBy the end of the second month, Vanessa was doing so well with the one room, she decided, with Kayleigh's blessing, to open the second spare room to guests. At the ninety-day mark, she was in the black on her mortgage, and the only thing left to pay off were the credit cards, and she'd made a pretty good dent in one of those, too.\n\nShe finally splurged or rather spent a few dollars on her daughter, surprising her with a $250 gift card to her favorite store. Kayleigh cried when, after insisting her mom buy something for herself, that this was her way of thanking her beautiful daughter for being so understanding and supportive. Her mom insisted she go and buy herself whatever she wanted, and Kayleigh was so moved she became emotional causing her mom to do the same.\n\nHer daughter made every dollar count, starting with some makeup she'd never been able to afford to wear. She then picked up two cute tops, a pair of jeans, and a decent pair of shoes on sale. It was more than she'd had at one time since her father was alive, and she was beside her herself with happiness. Until she got home and realized her mother hadn't set aside even twenty dollars for herself.\n\n\"My turn's coming, honey. And soon. The way things are going, I'm seriously thinking about quitting my job, and offering meals. I love to cook and bake, and we'd get quite a bit more per day\u2014a lot more than it would cost to feed our guests.\"\n\n\"And I could help out, too. Baking and cooking are things I know how to do,\" Kayleigh said immediately.\n\n\"How about you take the time to be a 13-old girl?\" her mom said.\n\n\"Who's turning 14 pretty soon, remember?\" her daughter reminded her.\n\nVanessa had been putting a few dollars aside here and there to be able to let her daughter finally have a birthday party after nearly three years since her last one. She wasn't going to ruin the surprise, but every time she added money to the pot, it made her feel incredible\u2014just as it had to give her the gift card she'd used so responsibly.\n\n\"I'm fine, Mom. And I'd like to help. In fact, I insist,\" Kayleigh told her.\n\n\"Well, okay, but maybe you could at least have a friend come over and help you out while you're helping me out every now and then?\" her mom suggested.\n\n\"Hmmm. Maybe I could,\" her daughter told her with a smile.\n\n\"And maybe you could finally start going out every once in a while,\" Kayleigh said with a smile.\n\n\"Don't push it, sister,\" her mom said trying to sound upset. \n\nThe truth was, she couldn't be upset. This Va-Cay thing had exceeded her wildest expectations. She'd never get rich off of it, but she could pay all of her bills, keep the house, and have money left over as long as things continued going well. And were she able to stay home and be a mom again, well, it was hard to imagine things getting any better than that.\n\n*****\n\nOklahoma City, Oklahoma, FBI Field Office\n\n\"Sir? Do you have a minute?\"\n\n\"Tanner. Sure, come in. What's going on?\" his bureau chief asked.\n\n\"I uh, I need some time off.\"\n\n\"Yeah, sure. Of course. You haven't taken a day off in what...two years?\" the older man asked.\n\n\"Closer to three, sir,\" the young FBI agent replied quietly.\n\n\"Yes. Of course. I'm sorry. I should have known. That was right around the time you lost Hannah. You've buried yourself in your work ever since, so if you want some time off, please, take it.\"\n\n\"It's not so much that I want it, sir. It's more that I need it. I just got a call from a former neighbor who told me my father passed away sometime last night.\"\n\n\"Jesus, Tanner. I'm beyond sorry. You lost your wife and now your father? What can I do to help?\"\n\n\"Nothing, really, sir. Just sign off on my leave form, and I'll handle it from here.\"\n\n\"Consider it done,\" the bureau chief said. \n\nAs he signed the paperwork, he asked, \"You're originally from the Seattle area, right?\"\n\n\"I am. Born and raised in a little town called Enumclaw. I graduated from high school there ten years ago then went to the University of Washington before joining the Bureau.\"\n\n\"Enum...what?\" his boss asked.\n\nTanner forced a smile then said, \"It's Chinook Indian for 'town of thunder'. It's a quiet little place about 35 miles southeast of Seattle that sits right at the base of the Cascade Mountains.\"\n\n\"How much time do you think you'll need?\" his supervisor asked.\n\n\"I've got a ton of days on the books, sir. Is a month too much to ask?\"\n\n\"Wow. A whole month, huh?\"\n\n\"I could wrap things up in less time, but I will need to do a ton of work on the house which really isn't even livable and then put it on the market. Plus, it might be nice to do a little fishing if I can fit it in.\"\n\n\"Well, as I said, all you've done is work, and everyone here including me knows I'm sitting in this office largely because of your work on the MS-13 gang/cartel task force. So if you need a month, you got it.\"\n\n\"I appreciate it, sir. I'll do my best to get back sooner, but if I could show you that house, you'd understand. My dad's been there alone since my mom passed away, and he became a kind of recluse and a hoarder a few years after that. I haven't been home since...wow...I guess it's been five years. The house was bad then, and my neighbor warned me it took the local police department quite a while to plow their way through all the mess to get to him. The only reason anyone suspected something was wrong is because he leaves the house once day at exactly 11am to check the mail. When he didn't, the neighbors got concerned and started knocking on the door.\"\n\nThe agent-in-charge shook his head. He was a good fifteen years older and both of his parents were still alive and well. He and his wife were also happily married, and it was very hard trying to imagine someone that age having lost both parents and his wife. On top of that, he really was the best agent he had, so if a month off was what he needed, so be it.\n\n\"I'll check in with you periodically, sir,\" the younger man told him after standing up and shaking his boss's hand.\n\n\"Please do, Agent Patten. Oh, do you know where you're staying yet?\"\n\n\"No, sir. I haven't had time to check. I'm sure I can find a motel in the local area, though.\"\n\nThe younger man smiled and said, \"Don't tell me you know someone out there.\"\n\nThe Bureau Chief seemed to know someone pretty much everywhere, but in this case he didn't.\n\n\"No, unfortunately, I don't. I do have an old friend in the Seattle Field Office, but I don't know anyone out near...the thunder place. But I do have a suggestion. Have you heard of Va-Cay Stations, by any chance?\"\n\n\"No, sir. What's it all about?\" \n\n\"Sit back down and I'll give you the down and dirty.\"\n\nLater that afternoon, Special Agent Tanner Patten checked out the site and found a place in the south end of the nearby town of Auburn which was less than fifteen minutes away from his dad's place. Or...shack...as the case may be.\n\nHe saw there were two rooms available in the home of a woman named Vanessa Sanders and requested one of them for an entire month. By the time he finished checking on real estate values back home, he had approval for the room and deposited a $1,000 in her PayPal account to cover the cover the first week's meals and lodging.\n\nHe was stunned to learn that Zillow showed his father's place listed for close to $300,000. He knew King County, Washington's property values were insanely high, but this floored him. They weren't anything like Manhattan, but they were getting to close to those in Orange County, California. The little wooden shack was barely a thousand square feet although it did sit on just over an acre of land. \n\nHe checked a few more homes near his dad's and understood why. They were larger, nicer places on roughly the same amount of land and were listed at anywhere from $400,000 to $550,000.\n\nTanner just shook his head and thought, \"Thank God I don't have to buy a place out there.\"\n\nAfter graduating from the FBI Academy in Quantico, Virginia, almost six years ago, he'd been sent to Oklahoma City, Oklahoma, where real estate was some of the cheapest in the country. He and Hannah had rented a very nice, two-bedroom apartment, but they could have easily afforded to buy a beautiful, brand new four-bedroom home. They decided that could wait until they started a family somewhere down the road and were both very happy living a the upscale apartment.\n\nBut after Hannah's death nearly three years ago due to a drunk driver, there was no reason to surround himself with even more empty living space. He'd moved to a new one-bedroom apartment just to avoid 'seeing' her every time he turned around, and it was more than adequate for someone who spent as much time at work as he possibly could.\n\nHe'd met his late wife, Hannah, during his senior year of college, and he'd married her the day after graduation. She then waited patiently for him to graduate from the Academy, then flew out for the ceremony, and they'd been together every day until she was taken from him that cold winter night by someone who'd been arrested for driving under the influence twice before.\n\nThe driver was drunk on his ass, and driving without a license when he hit Hannah head on doing close to 70mph. She'd been killed instantly, and a part of Tanner died with her that day. Now, work was all he had to keep himself from going crazy, and he'd made quite a name for himself\u2014and his boss\u2014at the Oklahoma City Field Office.\n\nHe spent the rest of the evening packing, and making sure his place would be cared for then went to sleep before heading to the airport the following morning. \n\nHe asked an older man who lived alone down the hall, and who'd become a friend to look after his place while he was gone. The man assured him he'd take care of everything from the mail to getting the place vacuumed every week or so. With that, Tanner dropped his spare key off with him before he left, and he assured him he'd take care of everything.\n\nThere was also a single woman a couple of doors down from his new friend, and she'd made it clear she was very interested in the handsome, tightly-groomed lawman on quite a few different occasions.\n\nThe truth was, Tanner Patten generated a lot of interest from the opposite sex wherever he went. He was without doubt the best-looking male agent in the local bureau, and one of the better looking men his age in the city. But no matter how hard he'd tried, he just couldn't gin up any interest in dating, in spite of the well-intentioned efforts of a couple of his colleagues who were always trying to set him up.\n\nHe no longer teared up when he thought about Hannah, but his heart still ached for her. She'd been so beautiful it took his breath away, and she'd also been one of the smartest women he'd ever known. She, too, could have been an FBI agent or pretty much anything she wanted. But after meeting and falling in love with Tanner, being his wife was the only thing that interested her. \n\nThat had been true until about six months before she was killed when she began dropping hints about starting a family. Within a month, she stopped using birth control, and a month after that, she'd rocked her husband's world when she made a celebratory, candlelight dinner to break the news to him.\n\n\"I'm gonna be a father,\" he kept saying over and over. \"Me. Tanner Patten. A father!\"\n\nSo when a local police officer knocked on his door around 9pm that night, he not only lost the love of his life, he felt like he'd also lost his future. \n\nSo until he could find someone who made his heart sing the way Hannah had, work would have to be enough. And yet he was oddly grateful for this much-needed break, even though it was hurtful to think he'd lost his father, even though they'd barely spoken since his last visit home.\n\nWhen his flight approached the Cascade Mountains, Tanner remembered how beautiful his home state was. Or at least the western half of it. The scenery below turned from yellow and brown to rugged, snowcapped mountains. The captain told them they could see 14,000-foot Mount Rainier to their right, and there it was in all its majestic beauty. Within minutes, everything below them was a solid sheet of green until they got closer to the Seattle-Tacoma airport where everything looked like an urban, concrete jungle.\n\nIt was one of those unusual, cold, clear Spring days, and on those rare occasions when they happened, the view was spectacular. Tanner rented a vehicle then stowed his bags in the trunk, and headed out for the city of Auburn, and more specifically, the south end of it, looking forward to enjoying the blue sky and the lush green. Until he got in the car and pulled into traffic.\n\nTraffic was even worse than he'd remembered, but he turned up the radio and did his best to deal with the wall-to-wall snarl of cars until he got to a point where he could get off the freeway and onto Highway 167 in Renton, a larger city just to the north of Auburn.\n\nEverything had changed so much that it looked like a different place to him. There were new roads and new buildings and a whole lot more traffic than ever before. Once he got out of Renton, the traffic became more manageable, and by the time he got close to his Va-Cay destination, things began to look a little more familiar to him. He double-checked the address before pulling into the driveway and finding a place to park. \n\nIt was a reasonably nice house that looked to be in pretty good condition. He knew from the website it was 2,600 square feet with four bedrooms, and three bathrooms. Having his own bathroom was a key factor in choosing this particular place, along with it being so close to the 'Town of Thunder'.\n\nHe grabbed his smallest bag, then knocked on the door and waited. Moments later, a very pretty girl who looked to be maybe 15 or so opened it and smiled.\n\n\"Hi! You must be Mr. Patten,\" she said cheerfully. \"Please come in and I'll show you to your room.\"\n\nHe thanked her and she told him, \"You're very welcome. We're glad to have you, and my name is Kayleigh. My mother, Vanessa, owns the house, and we're very grateful you chose to stay with us. She's out right now buying groceries but should be back any minute.\"\n\nShe showed him to his room, gave him the key, as well as one to the house, then asked if she could get him anything.\n\n\"No, thank you, Kayleigh. You've been very helpful, and I appreciate it.\n\n\"Just let me know if you need anything, okay?\" she said very sweetly.\n\n\"I will, and thanks again,\" he told her before stepping inside and setting his bag on the bed.\n\n\"Not bad. Not bad at all,\" he said as he checked it, and the bathroom, out.\n\nHe laid down on the bed, and that too, was a very pleasant surprise. The room was more than adequate and very tastefully decorated, and the bathroom was spotlessly clean. \n\nTanner sat back up and decided to go grab his other two bags and get things put away. As he walked back down the hallway he heard Kayleigh's voice from the kitchen.\n\n\"Mom! Oh...my...God! We have the most gorgeous guest ever!\"\n\nHer mom sat the groceries she'd just bought down and said, \"Who? Mr. Patten?\"",
        "\"Um, yeah! You have to see him! He just went to his room, and it was all I could do not to stare! Mom, I am so not kidding!\"\n\n\"Okay, okay. I'm sure I'll have the chance to say hello soon.\"\n\nTanner stopped and waited for Kayleigh to finish then waited a few more seconds to make it seem like he hadn't heard a word before walking into the kitchen.\n\nKayleigh saw him first and said much too loudly, \"Mr. Patten! How's your room?\"\n\nHe suppressed a laugh then told her, \"It's actually very nice, Kayleigh.\"\n\nThe other woman, obviously her mother, had her back turned to him as she put items from her shopping bag into the large refrigerator. \n\nWhen she turned around, Tanner was standing a several feet away and looking right at her. She'd put on her best smile, and he was still smiling from his short interaction with Kayleigh as she turned around. But when their eyes met, both smiles faded as they looked at each other for the first time.\n\n\"Mrs. Sanders?\" he finally said.\n\n\"Um...yes. Vanessa,\" she said, the smile returning as she held out her hand.\n\n\"Tanner,\" he said as he shook it.\n\nHe could see Kayleigh staring at him out of the corner of his eye just as she said, \"So, Mom. Was I right or what?\"\n\n\"What?\" her mom said, her eyes still locked with Tanner's.\n\n\"You know. About that...thing...we were just talking about.\"\n\nShe let go of her guest's hand, kind of shook her head then said, \"Oh, yes. That. Yes, I'd say you were...right on the money.\"\n\nKayleigh walked between them, turned her head toward her mom and said, \"Told ya!\"\n\n\"That's my daughter, in case you didn't know,\" Vanessa said, having fully recovered from the shock of seeing someone that handsome.\n\nTanner, in turn, had had a moment of stunned silence himself as Vanessa was not only extremely attractive, he was having a hard time believing she could be the mother of a girl as old as Kayleigh.\n\n\"Yes. We met. She's a very polite young lady,\" he said.\n\n\"She is that. She's quite possibly the most mature girl her age I've ever known. Her recent antics aside.\"\n\n\"Antics?\" he said, pretending not to know what was going on.\n\n\"Yes. She was just telling me something about one of our guests she evidently thought would matter to me,\" Vanessa said, thus explaining nothing.\n\n\"Oh, I see,\" Tanner replied acknowledging nothing. \"I was just gonna grab the rest of my things and bring them inside.\"\n\n\"Here, let me give you a hand,\" she said cheerfully.\n\n\"No. That's not necessary. I've got it,\" he told her politely.\n\n\"Okay, well, that will let me get started on dinner. You are eating with us, right?\"\n\n\"Definitely. I skipped lunch so I'd be hungry not knowing when you eat,\" he told her.\n\n\"Six o'clock every day except Sunday when we only offer two meals.\"\n\nIt was Saturday and that explained why a school-aged girl was home.\n\n\"Great. Well, if you'll excuse me,\" he said as he headed for the back door.\n\nVanessa knew almost nothing about him. He'd said in his profile he was in the security business, that he lived in Oklahoma City, and that we was 28 years old. He didn't have a southern accent, but he was definitely as good looking as Kayleigh had said and then some. \n\nNow that Vanessa was home full-time, she'd taken more of an interest in dating, and had gone out twice recently. Both of them had been huge busts, but she was at least willing to keep giving it a go. \n\nAs she watched Tanner walk away, she was thinking that were this gorgeous tenant a little older, and not wearing a wedding ring, she might have even flirted with him a little.\n\nJust the thought of a wedding ring made her think of Adam. That, in turn, reminded her she'd never taken hers off. However, after Kayleigh recently suggested it might be time, she'd promised she'd at least try and give it some thought. Vanessa still couldn't do it, but she couldn't help but think it was only a matter of time now. For today, at least, that just wasn't going to happen.\n\nTanner hadn't come back out of his room since bringing his things inside, so Vanessa asked Kayleigh to let him know dinner was ready. He'd laid down again, but this time, he fell asleep, and the knock on the door startled him awake.\n\n\"Mr. Patten? Dinner's ready,\" he heard Kayleigh say as he sat up and tried to come to life.\n\n\"Thank you. I'll be right there.\"\n\nHe splashed some water on his face, ran a comb through his naturally blond hair then went to sit down and eat.\n\n\"Hi, there!\" Vanessa said cheerfully. \"We have Chilean sea bass with potatoes and herb sauce.\"\n\n\"It looks and smells wonderful,\" Tanner told her.\n\n\"Please have a seat, and let's see if it tastes as good as it looks,\" she suggested.\n\nJust one bite in, Tanner said, \"Oh, my goodness. I think I've died and gone to heaven.\"\n\nKayleigh laughed, but Vanessa only smiled for a moment then the smile disappeared causing Tanner to wonder what he might have said wrong.\n\nShe smiled again just as quickly as it faded then said, \"May I ask what brings you out here to the sunny Pacific Northwest?\"\n\nTanner laughed politely then told her he'd grown up here.\n\n\"Really. I had no idea,\" Vanessa said as she took a bite of her own food. It really was quite good, and she was very happy she'd decided to do this full time.\n\n\"It's true. I'm from Enumclaw originally,\" he told her.\n\n\"Oh, my goodness. We used to go through there on our way to Spokane to visit my grandmother,\" Kayleigh said.\n\n\"I like Spokane,\" Tanner said. \"I think I could enjoy living there.\"\n\n\"Same here although I think I'd miss the green,\" Vanessa said. \"Just not the rain and the gray skies.\"\n\n\"So do you have family out there, Mr. Patten?\" Kayleigh asked.\n\n\"I'd prefer to be called Tanner, but that's up to you,\" he told her with a smile.\n\nKayleigh was clearly pleased and said, \"Okay...Tanner.\"\n\nVanessa understood why. He really was a very attractive man, and it was only natural that Kayleigh would have a kind of crush on him in spite of her unusual level of maturity.\n\n\"Actually, my father just passed away, and I'm going to be heading out there tomorrow to make arrangements.\"\n\n\"I am so sorry, Tanner,\" Vanessa told him sincerely.\n\n\"Thank you. We grew apart over the last ten years or so and especially the last five, but he was my father, and I will definitely miss him. I also plan to fix up his house\u2014if it can be salvaged\u2014and put it up for sale.\"\n\n\"Gosh, I haven't been out there in at least two years,\" Vanessa said. \"Not since...\"\n\nHer voice trailed off and she stopped talking.\n\nAgain, she recovered quickly and asked Kayleigh how the food was.\n\n\"Great as usual, Mom,\" she said. \"I forgot what a good cook you are.\"\n\nCooking wasn't something people forgot how to do, and Tanner must have made a face of some kind causing Kayleigh to say, \"We went through a bit of a difficult time when my Mom and I didn't have a lot of money so eating something like this wasn't an option.\"\n\nHe didn't say anything, and Kayleigh kept explaining.\n\n\"Mom started doing the Va-Cay thing a few months ago, and once we opened up our second room, things got a whole lot better. Good enough that Mom was able to quit her job and do this full time.\"\n\n\"Well, I'm glad you got through that, and that this is working out so well for you. I'd never heard of Va-Cay until my boss told me about it. All I can say is it's really nice to be able to stay in a home rather than an impersonal motel. And your cooking really is first-rate, Vanessa.\"\n\n\"Thank you so much. We're both happy things have turned around, too. It's been a tough couple of years, and there were times we weren't sure we were going to make it. But then a friend of my husband's...\"\n\nVanessa paused slightly and looked at her daughter then continued speaking.\n\n\"He told me about Va-Cay, and we signed ourselves up that very night. We started getting tenants the very next day, and we've had a fairly steady stream of guests ever since. You're our longest-staying, by the way,\" she said with a very big smile.\n\n\"Oh, wow. I didn't know I was breaking records,\" he said with a smile of his own. \"I'm not sure I'll be here the full 30 days. If my dad's house is beyond repair, I'll probably leave shortly after the funeral service early next week.\"\n\n\"A month is a long time to be away,\" Vanessa said. \"Will your wife be able to join you if you do need to stay the entire time?\"\n\nIt was a very reasonable question, and it was obvious it was asked out of innocence, but it still caught Tanner a little bit off guard.\n\n\"Um...no. I uh...I lost my wife\u2014Hannah\u2014about three years ago.\"\n\nHe assumed the stunned, almost-horrified looks on their faces was due to feeling bad for not knowing so he said, \"It's okay. Really.\"\n\n\"Tanner, again, I'm beyond sorry,\" Vanessa told him.\n\n\"My dad died two years ago. In a fire,\" Kayleigh said rather quietly. \n\n\"Not directly due to the fire,\" Vanessa explained. \"He was a firefighter going back into a burning building to try and rescue someone when he was...crushed...by falling debris.\"\n\nTanner set his fork down, and suddenly forget about his own grief.\n\n\"Vanessa? Kayleigh? I know there are no words that help, but I'm so, so sorry. He sounds like a true hero.\"\n\n\"We think so,\" Vanessa said as cheerfully as she could. \n\n\"My dad was amazing,\" Kayleigh said.\n\n\"It's funny how even though I lost my wife, and have heard countless people tell me how sorry they are for my loss, I still don't really have any words of comfort to offer.\"\n\n\"No, I understand,\" Vanessa told him. \"What can you really say? If you haven't been through it yourself, you have no idea how awful it is. And if you have, you know there just isn't anything to say.\" \n\nThey ate in silence for a minute or so before Vanessa tried to clear the air.\n\n\"I saw from your profile you're in the security business. Does that keep you busy and on the road a lot?\"\n\n\"Busy? Yes. But I don't travel much. Pretty much everything I do is in the local area back in Oklahoma City,\" Tanner told her.\n\n\"Do you do security for websites and that sort of thing?\" Kayleigh asked. \n\n\"Oh, no. Not at all,\" Tanner said without volunteering anything about what he did.\n\n\"I really like math and science, and I've thinking about getting into some kind of program involving computers or maybe something software-related,\" she said.\n\n\"You're a very mature young lady,\" Tanner told her. \"May I ask how old you are?\"\n\n\"I'll be 14 in a week,\" she told him.\n\n\"Oh, wow. Congratulations in advance,\" he said. \"Got any big plans?\"\n\nVanessa still hadn't mentioned the party so Kayleigh said, \"No, not really. I'll probably just have my best friend, Becca, come over and hang out.\"\n\n\"Well, not every birthday has to be a big celebration. I only had one party growing up and that was when I ten,\" Tanner told them.\n\nHe saw the way they looked then said, \"We didn't have a lot of money so parties were considered frivolous. It was no big deal.\"\n\n\"Well, my mom has a birthday coming up about a month or so after mine, and maybe...\"\n\n\"Okay, let's not talk about that,\" Vanessa said.\n\nKayleigh put her hand up as though she was hiding her words from her mom as she said, \"It's the big four-oh, and Mom's kind of freaking out.\"\n\n\"Oh, my goodness! What part of 'let's not talk about that' didn't you understand, Kayleigh?\" she said, the exasperation showing through.\n\n\"You're going to be...forty?\" Tanner said before realizing he, too, evidently hadn't been paying attention.\n\n\"I know, right?\" Kayleigh said. \"My mom is so pretty and looks so young.\"\n\n\"Is anyone listening at this table?\" Vanessa said even though she loved what her daughter had just said.\n\n\"I second that. I was trying to make sense of how someone so young could have a teenage daughter, and couldn't. Now at least, I understand, even though I agree with Kayleigh. You don't look anything close to for...that age.\"\n\n\"Well, thank you for saying that, and for not using that number,\" Vanessa told him.\n\n\"How old are you, Tanner?\" Kayleigh asked before her mother's eyes bugged out.\n\n\"Okay. That's it. No more age-related questions! They are hereby banned at this table!\"\n\nTanner couldn't help but laugh then Kayleigh did, too.\n\nHe put his hand up like Kayleigh then said, \"I'm 28, but I didn't just say that.\"\n\nEveryone laughed then made small talk for the rest of the meal. When dinner was over, Tanner thanked both of the 'ladies' for the food and the conversation then excused himself and went back to his room.\n\nThere was a small television mounted on the wall, so he turned it down low while he sat in the only chair and, against his better judgment, spent some time thinking back on his life. Growing up poor, playing sports in high school, working his way through college, meeting Hannah, the Bureau, and the crushing pain of losing the only woman he ever loved. Tanner wasn't normally a melancholy kind of guy, but when he wasn't busy, it could sneak up on him, and it had done just that. \n\nHe wasn't paying any attention to the TV and assumed the noise he thought he heard came from it until he heard it again. He realized someone was knocking on his door so he got up, walked over, and opened it. \n\nTo his pleasant surprise, there was Vanessa, standing in the hall with a smile on her face.\n\n\"Hi, Vanessa,\" he said, a smile now on his, too.\n\n\"I saw the light was on and I heard the television. I hope you don't mind me stopping by, but I felt like I owed you an apology for bringing up...you know, the whole subject of...\"\n\n\"Marriage?\" he said before asking her to join him.\n\n\"Oh, no. I couldn't,\" she said. \"I mean, this is your room so...\"\n\n\"I'd be happy to sit and talk with you some place more appropriate,\" he offered.\n\n\"I don't want to keep you up. I just wanted to tell you I was sorry if I stirred up any painful memories.\"\n\n\"You're not keeping me up, and you know as well as I do those memories are always with us. I'm not a night owl, but it's only ten here and not that much later to me because of the time change, and I really would enjoy talking to you.\"\n\n\"Well...me, too,\" she said pleasantly. \n\n\"Kayleigh is very much a morning person, and she's rarely up past ten which I fully understand is not normal for a teenager. But very little about my daughter is normal,\" she said with a pleasant smile as he closed the door.\n\n\"I'd offer to buy you a drink, but I don't know if the bar is open,\" Tanner told her as they headed toward the kitchen.\n\n\"Oh, my. I suppose I could talk the bartender into a glass of wine. Would that work for you?\"\n\n\"That sounds very nice,\" Tanner told her.\n\nVanessa poured them each a glass then handed him one and said, \"Thank you.\"\n\n\"Um...you poured the wine for me,\" he let her know with a smile.\n\n\"Yes, but you're the one who paid for it, so you really are buying me a drink,\" she replied, that beautiful smile still on her very pretty face.\n\nHe laughed, raised his glass, then said, \"To better days?\"\n\nVanessa touched hers to his and said, \"I'll drink to that.\"\n\nThey spent the next hour or so talking about life and love, but mostly the conversation focused on the love they'd had and lost. How they met, why they loved them so much, and how ungodly awful it was losing them.\n\n\"I've never talked to anyone about that before,\" Tanner told her just after eleven o'clock.\n\n\"Really? There's no one in your life you trust to share things with?\" she asked, finding it hard to imagine not having someone that close.\n\n\"My mom, but she was gone long before I even met Hannah. My dad wasn't much of a talker, and he didn't 'do' emotions. Everything was simple in his world. It was all black and white, and even when it wasn't, he just painted the issue one of those colors and steamrolled his way through it. So, no, there hasn't been anyone.\"\n\n\"For me, it's Kayleigh. She had a terrible first year, but even then we could sit and talk or sometimes we just held each other and cried. But she's always been there for me like some kind of little sister as much as a daughter.\"\n\n\"She seems amazing, Vanessa,\" Tanner told her truthfully.\n\n\"She really is. And from what you've said, Hannah was, too.\"\n\n\"She was. And I feel the same way about Adam. That kind of altruism is rare.\"\n\nHe turned toward Vanessa then said, \"How does that saying go? It's rare that a good man will lay down his life for his friends, but even more so for someone he doesn't even know. I'm sure I'm misquoting it, but it's still true. Adam gave his life in the hope of helping a stranger. In my book, it doesn't get any more selfless than than that. I wish I could have known him.\"\n\n\"He was amazing, Tanner,\" she said as she fought back tears.\n\nShe managed a smile then said more cheerfully, \"Okay. Enough of that. What are you going to try and get done tomorrow at your dad's place?\"\n\n\"Right. Well, I want to go take a look at it first. Then I need to go see his attorney who supposedly has his will. Depending on how bad the house is, I'll either need to have a dumpster delivered to get it cleaned out, or gee, I'm not sure. It may have to be demolished.\"\n\n\"Wow. Is it really that bad?\" she asked.\n\n\"It was in terrible shape the last time I was there in 2013. Dad had just started hoarding, and from what the neighbors told me, it's pretty much falling apart. So I'll assess it then make some decisions.\"\n\n\"Kayleigh's back in school tomorrow, and I don't have anyone else coming in until next weekend. If you think you might like some help, or even just some company, I'd be happy to go with you. My daughter is old enough to be here by herself now, so if we're not back before she gets home, it isn't a big deal.\"\n\n\"I have to admit, I'd very much enjoy having someone to talk you, and it's been such a pleasure getting to know you, I can't think of anyone I'd rather have come along,\" he told her.\n\nShe smiled then said, \"I believe I'm also the only choice you have.\"\n\nHer smile was full and her mood playful, and it made Tanner laugh.\n\n\"Even so, you're still my first choice,\" he said just as playfully.\n\n\"What time do you plan on leaving?\" she asked.\n\n\"After breakfast maybe?\"\n\n\"Okay. I serve breakfast around 7am normally, but since it's just us, you can decide when you'd like to eat.\"\n\n\"Seven finds fine,\" he told her.\n\nVanessa thanked him again for the wine, and that too, caused him to chuckle. He thanked her for the most pleasant conversation he'd had since losing Hannah, and Vanessa told him if that was true he really needed to get out more.\n\nHe laughed again then let her know he agreed.\n\n\"I do need to get out more. In fact, I just need to get out,\" he said.\n\n\"As in...on a date?\"\n\n\"Yes. I've been on a grand total of zero, and quite frankly, I have zero interest in going on one.\"\n\n\"Oh, I understand. Trust me,\" she told him as she put their glasses in the dishwasher. \"I've only recently started dating, and it's been nothing short of painful.\"\n\n\"But at least you're trying. I'm not even brave enough to put myself out there.\"\n\n\"Well, one day you'll meet someone you feel is worth the risk. Until then, you have to just keep putting one foot in front of the other, right?\"\n\n\"Well said,\" Tanner told her. \"I've worked six or seven days a week since Hannah's memorial service. It's the only think I've had to hold on to.\"\n\n\"I had no idea the security business was so demanding,\" she said with a smile.\n\n\"I don't have to work that much, but when work helps you avoid thinking about things, then you work. Or at least I do.\"\n\nThey stood there in the kitchen in an awkward silence for a few moments before Tanner said, \"I should really get back to my room and try and get some sleep.\"\n\n\"Yes. Me, too,\" she said very pleasantly before thanking him for his time.\n\n\"My pleasure. And I'm glad you're going with me. I was actually kind of dreading it.\"\n\n\"I can invite myself with the best of them,\" she said keeping up the playfulness.\n\n\"Feel free to do so anytime,\" Tanner told her before saying goodnight.",
        "As he lay down, he wasn't quite sure what it was he was feeling. All he knew was he hadn't felt like this in a very, very long time, and the only reason he could come up with was named Vanessa Sanders.\n\nKayleigh was even more cheerful and upbeat at breakfast the following morning. When her mom mentioned going out to Enumclaw with Tanner, she perked up and said, \"All right, Mom!\"\n\n\"What? We're just driving out together to keep each other company,\" her mom said almost defensively.\n\n\"Oh, okay,\" Kayleigh said with a polite smirk. \"So it has nothing to do with that...subject...we talked about yesterday.\"\n\n\"Subject? What...subject?\" Vanessa said even more defensively.\n\n\"Okay, if that's how you want to play it, that's fine,\" Kayleigh told her, that little smirk still there. \"We can pretend we didn't have that discussion. About someone. Gorgeous.\"\n\n\"Kayleigh Sanders! What has gotten into you?\" her mother said, the exasperation coming through loud and clear.\n\nStill pretending he had no idea what they were talking about, Tanner said, \"I assume you're talking about your mom, right?\"\n\n\"My mom?\" Kayleigh asked, a confused look on her face.\n\n\"Sorry. I heard you say 'gorgeous' so I just assumed you meant your mother. I should know better than to butt in on someone else's conversation.\"\n\nHe glanced at Vanessa and saw the smile on her face.\n\n\"Ah, okay,\" Kayleigh said. \"I guess that makes sense. My mom is kinda hot.\"\n\n\"Okay. That's enough! Go brush your teeth and get ready for school,\" her mom said as she pulled the mostly-empty plate out from under her daughter's nose.\n\n\"Geez, Mom. Touchy much?\" Kayleigh said while smiling at Tanner.\n\n\"Pushy...much?\" her mom said knowing her daughter was just being herself.\n\n\"I'm just sayin'. That's all,\" Kayleigh said over her shoulder as she walked away. \n\n\"What am I missing?\" Tanner asked, now enjoying this little game.\n\n\"Oh. Nothing,\" Vanessa told him. \"You're actually watching my formerly-sane daughter lose her mind right in front of us, though, so...maybe that's not nothing.\"\n\nTanner didn't respond. He just ate the last couple of bites on his plate then told Vanessa that he, too, was going to brush his teeth.\n\n\"I think I'll do the same,\" she said. \"And I'll be ready whenever you are. I just need to change real quick.\"\n\nIt was another cool, clear day, and when Vanessa came out she was wearing a long-sleeved, navy-blue sweater over a white blouse and a pair of jeans. She'd added a bit of makeup to include some dark-red, glossy lipstick, and Tanner did a kind of double take when he saw her.\n\n\"Wow. Speaking of...gorgeous,\" he said as he smiled and looked at her.\n\nJust as he said that, Kayleigh came up from behind, put her hand on his shoulder said, \"Yes. Speaking of gorgeous, right, Mom?\"\n\n\"If you don't get a move on, you're going to be late. Or...dead,\" her mom said trying to sound serious.\n\n\"What? I'm just agreeing with our guest. Someone around her looks gorgeous. That's all.\"\n\nTanner was having to really work hard not to laugh as he listened and watched the mother-daughter dynamic in action.\n\nKayleigh grabbed her book bag then gave her mom a hug and told her she loved her.\n\n\"I love you, too, honey. Although you're making that very hard right now.\"\n\n\"Hey, it's what I do,\" she told her mom.\n\n\"Bye, Tanner,\" she said to him as she headed for the front door.\n\n\"Have a great day at school, Kayleigh,\" he told her.\n\n\"Every day's a holiday at Auburn Junior High!\" she called out playfully as she opened the door.\n\nVanessa just stood there staring as the door closed.\n\n\"I have no idea what's gotten into that girl,\" she said with a shake of her head.\n\n\"Well, she is a teenager. Maybe she's finally acting her age,\" Tanner suggested, not ready to admit he'd overheard them talking.\n\n\"Oh, speaking of which. Could we make a stop on the way back today? I'm planning a kind of surprise party for her, and I need to check on a couple of things.\"\n\n\"Of course,\" he replied. \"I'm not really planning on doing any work so we shouldn't be too late.\"\n\n\"I'm not concerned about how long we stay. I just don't want to forget to tell the woman making her cake something.\"\n\nFive minutes later, they were on their way south to the Town of Thunder.\n\n\"This area has all changed,\" Tanner said as they drove along. \"It's so urban now.\"\n\n\"Auburn is really expanding. It's starting to feel like Renton,\" she said about the larger city to their north. \"I may have to move out to Enumclaw, but it's growing, too. And then where would I go?\"\n\n\"Oklahoma City is nice,\" Tanner said with a smile. \"And the cost of living is unbelievably reasonable.\"\n\nVanessa laughed then said, \"Before I move to Oklahoma City, shouldn't we at least get to know one another a little better?\"\n\nTanner glanced over at her, saw her burst into laughter, and he did the same. \n\n\"Well, we already had a drink together, and here we are going for a drive on a beautiful Spring day.\"\n\n\"That's a start,\" Vanessa said, the smile on her face full and happy.\n\nThe scenery grew greener as the buildings became fewer. Soon they were driving due east on a very straight road surrounded by evergreen trees and pastures filled with Holstein milk cows, barns, and silos.\n\n\"It's so beautiful out here,\" Vanessa said. \"And so quiet.\"\n\n\"It really is nice,\" Tanner agreed. \"There are so many good memories in this place. But there are quite a few painful ones, too. Then again, I suppose that's true for most people.\"\n\n\"You didn't get picked on in school, did you?\" Vanessa asked.\n\n\"I did,\" Tanner told her. \"I was fairly heavy until my junior year of high school, and I wore these thick, coke-bottle glasses until I got contacts. I've had laser eye surgery since, but yeah, I got my fair share of teasing.\"\n\n\"That's very hard to imagine,\" she said as she looked over at him and tried to imagine him that way.\n\n\"It's the truth,\" he told her. \"I never had a date until my senior year.\"\n\n\"Seriously? You?\"\n\n\"Yes. Seriously. I still don't know how it happened, but I lost about twenty pounds from my freshman year to my senior year. That, plus the contacts, made a huge difference.\"\n\n\"Wow. I'll just have to take your word for it,\" Vanessa said, just as the car slowed to make a right turn.\n\n\"It's down this road about two miles on our right,\" he told her. \"My parents owed a small plot of land sandwiched in between all these 40-acre parcels. My dad said there are several conservation laws in place that only allow these plots to be used for farming or at least prevent anyone from doing anything commercial out here.\"\n\n\"That explains why it's still so completely rural,\" she said as she looked around just as she spotted a very old, rundown-looking building up ahead.\n\n\"Is that it?\" she asked as she pointed to it.\n\n\"Yes, indeed,\" he told her.\n\nThere was another house maybe 30 yards away, and one more across the street. There were three mailboxes on the same post, so it was clear they all picked up their mail at the same place.\n\n\"I really need to stop in and thank the neighbors first. Do you mind?\"\n\n\"No. Of course not,\" Vanessa told him.\n\nThe neighbors were the Stantons. Hugh and Nancy had lived there for as long as Tanner could remember. He was retired now, but still puttered around on the tractor a couple of hours a day.\n\nNancy saw them pull in and came out to the porch to see who it was. When Tanner got out, she threw her hands over mouth and said, \"Oh, my Lord! Look who's home!\"\n\n\"Hi, Mrs. Stanton. It's good to see you,\" he said as he went around to open Vanessa's door.\n\nThe older woman came down to meet them, and when she saw Vanessa, she said, \"Tanner's father told us you were beautiful, but I had no idea your wife was this pretty.\"\n\n\"No. This isn't my wife, Mrs. Stanton. This is...my friend. Vanessa.\"\n\n\"Oh. I'm...so sorry. I didn't mean to assume. I hadn't spoken to your father in...gosh...three years maybe? I just assumed, you know.\"\n\n\"I'm flattered,\" Vanessa finally said. \"But Tanner and I are just friends.\"\n\nMrs. Stanton saw her large wedding ring, and both Tanner and Vanessa understood the confusion.\n\n\"We both lost our spouses, Mrs. Stanton. My wife and her husband. I'm staying at her house. It's kind of like a bed and breakfast.\"\n\n\"Oh, okay. Now it wall makes sense. So...would you kids like to come in for some tea?\"\n\n\"That's so kind of you, but there's just so much to do, you know?\"\n\n\"Well, yes. I certainly do. And again, I'm so sorry about your father's passing. And your wife, too.\"\n\nShe looked at Vanessa then said, \"And your husband, dear.\"\n\n\"I just wanted to drop by and thank you for calling me, and to say hello,\" Tanner explained.\n\n\"Well, I'm glad you did. Hugh will be in soon, I'm sure. If you see him please say 'hi', okay? I know he'd love to see you.\"\n\nTanner promised her he would when Mrs. Stanton said, \"You can just cut across the yard if you like.\"\n\n\"All right. If you don't mind.\"\n\n\"Nope. Not at all,\" she told him. \"And if you need anything just holler!\"\n\n\"Will do, and thank you so much,\" he told her.\n\n\"Nice meeting you, ma'am,\" Vanessa said.\n\n\"You, too, dear. And my apologies about the mixup. I only knew Tanner's wife was gorgeous, and well, anyway...\"\n\nTanner chuckled as they walked away and Vanessa said, \"Why is that so funny?\"\n\n\"The word 'gorgeous' seems to keep coming up wherever you're concerned. That's all.\"\n\n\"Speaking of gorgeous, I...I have a confession to make,\" she said as they crossed into his dad's property.\n\n\"Oh?\"\n\n\"Yes. It's about that word.\"\n\n\"Gorgeous?\"\n\n\"Well, yes. Kayleigh kind of mentioned you were...very handsome...or rather, gorgeous, and when I first saw you she was reminding me of what she said.\"\n\n\"Oh, I see,\" he told her.\n\n\"I feel silly for not just explaining it then and there, but...\"\n\n\"I have a confession to make, too,\" he said, as he politely cut her off. \"I kind of overheard your conversation.\"\n\nVanessa stopped walking and said, \"You knew? All this time and you knew?\"\n\n\"Yeah, I kinda did,\" he said trying not to laugh.\n\n\"Stinker!\" she said as he playfully hit him.\n\nWhen he sniffed a couple of times, she thought he was playing along with the 'stinker' comment until she smelled it, too.\n\n\"Oh, my goodness! Is that coming from inside the house?\"\n\n\"I'm afraid it is,\" he told her. \"I'll go in and see what's going on, okay?\"\n\nVanessa was waving her hand in front of her face as though she could fan away the smell.\n\n\"You don't have to twist my arm,\" she assured him. \"That smells really bad, Tanner.\"\n\nHe knew where his dad kept the spare key and grabbed it then said, \"Okay. I'm goin' in. Wish me luck.\"\n\nVanessa made a face then said, \"You're gonna need more than luck! Be careful in there!\"\n\nWhen Tanner opened the door, the stench prevented him from walking in.\n\nHe stepped back outside, took several deep breaths, held one, then went back in. He was standing in the kitchen, but could barely see the sink for all the dirty dishes piled up. And then there were the boxes. Stack after stack from the floor to chest high and in some cases higher. He looked around as much as he could before the need for fresh air forced him back outside.\n\nHe exhaled then quickly inhaled several times.\n\n\"It's even worse than I expected,\" he gasped.\n\nShe stepped back and said, \"No offense but you really are a stinker now!\"\n\nJust being inside for several seconds had allowed the stench to soak into the fibers of his clothes.\n\n\"Sorry. I'll try and let it air out before we get back in the car.\"\n\n\"So what are you thinking?\" Vanessa asked as he held his arms out trying to let the breeze 'detoxify' him.\n\n\"Let's take a walk around the perimeter and then I'll have a better idea.\"\n\nWindows were cracked, the foundation was sagging badly, the roof was a disaster, and the septic tank in back also stunk to high heaven. The siding was made of wood and was falling off in many places, and had been severely infested by termites. A good quarter of the siding had been eaten away by them, and Tanner had seen enough.\n\n\"I'm thinking it's beyond saving,\" he finally told her. \"No one would buy the house like that, and it would take a professional cleaning crew equipped with respirators to just clear it out, and then it would need to be gutted all the way to the studs if they, too, haven't been damaged by termites. I'm guessing there's probably mold inside, as well, and with the way it looks out here, it's just not salvageable.\"\n\n\"I'm no expert, but I agree with you,\" Vanessa said. \n\n\"I need to see the attorney and find out my options,\" Tanner told her. \"I'm hoping there's no 'preservation law' against razing this thing to the ground.\"\n\n\"It's just so sad. I mean, this was your childhood home, right?\"\n\n\"Yes. Yes, it was,\" he replied. \n\nHe turned toward then gently said \"But nothing lasts forever, right?\"\n\n\"No. No, it doesn't,\" she agreed as she thought her life with Adam, knowing he was referring to his with Hannah.\n\n\"Am I stench free yet?\" he asked when they got back around to the front.\n\nShe leaned over and gingerly sniffed a couple of times.\n\n\"I think so. Or else I now stink to the point where I can't tell the difference. That septic tank was force to be reckoned with.\"\n\nHugh was just pulling up as they walked across the lawn again. He got off the tractor and said, \"Well, I'll be damned!\"\n\nHe stuck out his huge, calloused meat hook to shake Tanner's soft hand then said, \"Still workin' inside, I see.\"\n\nTanner laughed and said, \"Yes, sir. Guilty as charged.\"\n\n\"Well, as long as you're catching them criminals, I suppose that's honest work,\" the man in his late 70s said. \n\nHe turned to Vanessa then asked, \"And who's this pretty young thing?\"\n\nTanner explained the story again causing Hugh to offer them both his condolences then again for the loss of this father.\n\n\"He kinda lost his mind after your ma died,\" Hugh said. \"We never really talked much after that. You'd see him come out and check the mail every day, but that was it. Guess he had everything brought to him ever since. You can do that now, you know\u2014even groshries. If you got yourself a computer, anyway. At least that's what my kids and grandkids tell me. You got any kids, Tanner?\"\n\n\"Oh, no, sir. No kids,\" he said not wanting to mention Hannah's having been pregnant.\n\n\"Well, one of these days, right?\" he said, flashing a nearly-toothless smile.\n\nThey shook hands again, and with that, Tanner headed into town to see if he could get a few minutes with the attorney he'd never met.\n\nFifteen minutes later they were in the office of Mr. Phillip E. Bennet, Attorney at Law. After explaining who he was, as well as the beautiful woman with him to both his secretary and the attorney, Tanner began gathering information.\n\n\"It'll take me about three days to get you approved as the executor of his estate, and with any luck I'll be able to pick up a dozen copies of the death certificate by then, too. You'll need one every time you turn around, so I'll grab plenty. I'll just tack the cost onto your bill and you can settle up when you come back.\"\n\nMr. Bennet was a no-nonsense kind of man, and Tanner appreciated his frankness.\n\n\"The will isn't here, by the way. You won't be able to get it until you can get the safe-deposit box from the bank, and you can't do that until you're the executor and have a death certificate. As to the house, yes, you can tear it down. You just can't build anything but another house on it out there. Once you put up a house, you can build a barn and/or a silo. Anything else needs approval from the county.\"\n\nTanner asked a few more questions then shook the lawyer's hand and with that, they were on their way back to Auburn.\n\n\"I think I'm gonna find someone to just demolish the house then sell the land for whatever I can get out of it,\" he told Vanessa as they drove along.\n\n\"If I hadn't seen how bad it was with my own eyes, I'd probably plead with you not to, but that's by far the worst...disaster...I've ever seen. At least one not actually caused by a disaster like an earthquake or something.\"\n\n\"So where are we stopping?\" Tanner asked, grateful to change the subject.\n\n\"Oh, right. It's a few blocks from house. I'll let you know where to turn,\" she said.\n\nVanessa wanted to add some words to Kayleigh's birthday cake, and felt doing it face to face was the best way to prevent a misunderstanding. It only took about two minutes and she was done.\n\n\"We still have the whole day left,\" Tanner said as they left the bakery. \"If you're not sick of hanging out with me, could I maybe take you to lunch?\"\n\n\"I'd like that, but you're already paying for three meals a day,\" she reminded him.\n\n\"I think I can afford it,\" he said with a smile. \"Besides, I really like talking to you, Vanessa.\"\n\nHe saw her smile then say, \"Same here. So...okay. I'd love to have lunch with you.\"\n\nTanner asked her to choose the place, and they ended up at a restaurant called Gor Gai Thai Street Food on Main Street.\n\n\"I had no idea you were the adventurous kind,\" Tanner said when she suggested Thai food.\n\n\"I used to actually be adventurous, but I lost that side of me after Adam died. I'm working on getting it back, though.\"\n\n\"I love spicy and Thai is my favorite, so that sounds perfect,\" he told her.\n\nOnce they'd ordered, Vanessa said, \"Hugh mentioned something about you catching criminals. Did I hear that correctly?\"\n\n\"Oh, right. Yes. I believe you did.\"\n\n\"So what kind of security business catches criminals?\" she asked with a smile. \"If I'm being too nosey, just tell me, okay?\"\n\n\"Not at all. I like sharing things with you,\" he said in a way that made her happy.\n\n\"Yeah. Me, too,\" she said sweetly.\n\n\"I don't normally bring this up, not because it's a big secret or anything. I just don't see any need to mention it unless I'm asked. And since you asked...\"\n\nHe reached inside the light jacket he was wearing and pulled out a black, leather, folder-like thing and opened it. Inside was a small, gold shield that was inscribed with 'Federal Bureau of Investigation' on top and 'Department of Justice' on the bottom. \n\n\"Oh, my goodness. I had no idea,\" Vanessa said as she looked at it admiringly before handing it back to him.\n\nVery quietly she asked, \"Does that mean you're also carrying a gun?\"\n\nTanner smiled then said just as quietly, \"That you have to ask means I'm doing it right.\"\n\n\"Gorgeous and a hero serving our country. I like that,\" she said with a smile.\n\nTanner shook his head and said, \"No. Not me. That was your husband. That's all the men and women in uniform and others who risk their lives and, like Adam, give them.\"\n\n\"I appreciate that very much, Tanner, but that's exactly what you do. I also appreciate your modesty, but I'm guessing your job can be very dangerous at times.\"\n\nHe could have told her stories that would have curled her pretty, long, dark hair about his efforts to stop the gangs and the cartel from selling drugs and weapons in the city, but only said, \"Nah. Like Hugh said, I spend most of my time in an office pushing papers around.\"\n\n\"I don't believe that,\" Vanessa said with a bright, happy smile as she reached for his hand.\n\n\"What?\" Tanner asked.\n\n\"Prove it to me,\" she said, her hand still outstretched.\n\nTanner almost laughed before he gave her his hand which she immediately held then turned over to examine.\n\n\"Yeah, Hugh's got it about right. These are some very smooth hands, Agent Patten.\"\n\nAs she let his hand go, he sat up very straight and said, \"Um, that's...Special...Agent Patten.\"\n\nVanessa laughed then said, \"Oh, you're special all right, Tanner,\" just as their food came.\n\nSeconds later, both of them were reaching for water as the spicy food was even spicier than they'd assumed.\n\n\"Wow! That's...smooth!\" Vanessa croaked as soon as she could talk again.\n\nTanner had sweat beading up on his brow and reached for a napkin.",
        "\"You didn't warn me this place was in Dante's 9th circle of hell!\" he said as he dried his forehead.\n\nVanessa laughed and when Tanner did, too, it was as though a kind of switch had been thrown. She no longer saw him just as a tenant with whom she was having lunch. She saw him as...well, she wasn't exactly sure how she saw him. All she knew was that she really liked being with him and hoped there would be more such times spent together talking and laughing.\n\nWhen they got back to her house, Vanessa thanked him for a letting her tag along.\n\n\"I haven't laughed that much in forever,\" she told him once they were inside.\n\n\"Same here. It felt really good.\"\n\n\"Yes. Yes, it did,\" she told him as they stood there looking at each other for several seconds.\n\nVanessa finally looked away and said, \"I need to go see if I have any new requests for the other room.\"\n\n\"Oh, right. Sure. Of course,\" Tanner said.\n\nBoth of them felt the growing tension, but neither of them knew what to do about it so parting ways seemed like the best way to deal with it.\n\nAs she went to walk away, Tanner called her name.\n\nShe turned around and smiled and said, \"Yes?\"\n\n\"I was wondering if you might like to go with me again on Thursday when I see the lawyer again.\"\n\n\"I'd like that. Very much,\" she said immediately.\n\n\"Great. Well, I guess I'll go see if I can find a house-demolishing company,\" he told her as he nodded toward his room.\n\n\"I hear they're everywhere,\" she teased in the friendliest way possible.\n\n\"Good. I shouldn't have any trouble finding one then, huh?\"\n\nVanessa smiled then turned around and headed toward the small home office where her desktop was and found herself smiling. As she sat down she knew exactly why and wondered if he could possibly feel the same way. And then she remembered she had a birthday coming up, one that would make any guy Tanner's age, and especially one who looked like him, run all the way back to Oklahoma. Still, it had been very pleasant spending time with him, and her mood brightened even more when she saw a request for a new tenant starting on Friday of that week.\n\nKayleigh's new, not-so-subtle attempt at matchmaking continued during dinner when she asked how their day went.\n\n\"It was fine,\" her mom replied.\n\nKayleigh looked at Tanner who was chewing food. He swallowed then also said, \"Fine.\"\n\n\"You two aren't telling me something,\" she said, her eyes narrowing. \"But the truth will out. You know that, right?\"\n\n\"The truth is out, honey. We had a nice time. That's it,\" her mom insisted.\n\n\"Uh-huh. Okay. If that's how we're gonna play this...fine,\" the teenager said. \"But I've got my eye on both of you.\"\n\nShe made a 'V' with her first two fingers then pointed them at her own eyes, the universal symbol for 'I'm watching you' and Tanner couldn't help laughing.\n\n\"Don't feed the beast, Tanner,\" Vanessa said. \"Anything either of us says or does will be taken as some kind of...sign.\"\n\n\"Ah-ha! So there is something going on with you two. I knew it!\" Kayleigh said as she smiled at her mother.\n\n\"She's lost her mind. I swear,\" Vanessa said to Tanner.\n\n\"No, I don't think so,\" her daughter said. \"I may only be turning 14 this weekend, but I know stuff. Yeah. That's right. And I'm not blind here, people.\"\n\nVanessa's eyes opened wide before she shook her head and said, \"Okay. I think I'm finished here.\"\n\nShe stood up, grabbed her plate, and when she did, Kayleigh leaned over toward Tanner and said, \"Methinks the lady doth protest too much.\"\n\nIn the middle of another bite, Tanner nearly choked when he couldn't help laughing again.\n\n\"You, too?\" Vanessa said. \"Oh, my goodness! I'm surrounded with lunacy!\"\n\nBut the way she smiled at Tanner wasn't lost on him or her daughter. When Kayleigh saw the way her mom looked at their guest, she smiled because she knew she was onto something. And she had no intention of slacking off or slowing down.\n\nThe next morning after breakfast, Tanner told Vanessa he'd found a company willing to demolish the house and dispose of anything to include mold at what seemed like a reasonable price.\n\n\"That's wonderful! One problem solved, right?\" she told him.\n\n\"One down, several to go,\" he replied.\n\nAgain, they were looking at one another when Tanner said, \"Were you serious about getting your adventurous side back?\"\n\n\"Yes. Why?\" Vanessa asked.\n\n\"How would you like to go rock climbing today?\"\n\n\"Indoor or outdoor?\" she asked.\n\n\"We can try indoor today and maybe get a little more...adventurous...and try outdoor some other time.\"\n\n\"Well, I suppose I could give that a whirl,\" she told him. \"When did you want to go?\"\n\nVanessa changed into an old rugby shirt but even in something that baggy, she still looked great, and Tanner told her so. She was pretty sure it was the way she'd done her hair and makeup, but it was nice to hear him say she looked pretty in something that clearly wasn't pretty.\n\nShe'd never been rock climbing and didn't even know there was a place to do so. They had to drive up to Tacoma to Edgeworks Climbing Gym, but it was well worth the drive.\n\nVanessa found herself shrieking with fear and delight as she learned to trust the person on belay below her after climbing halfway up then being asked to just let go with her hands and her feet. By the time they left two hours later, she'd mastered all but their toughest wall.\n\n\"Nice job,\" Tanner told her as her opened the car door for her. \"I'm duly impressed.\"\n\n\"I told you I was adventurous,\" she reminded him.\n\nOnce again, they were looking at each other, only this time it was from just inches away.\n\n\"And...gorgeous,\" Tanner said quietly as their eyes locked.\n\nVanessa's heart had been pounding most of the time they were inside climbing, but now it was doing so for an entirely different reason. When he leaned closer and gently pressed his lips to hers, the pounding went off the charts.\n\nIt was a very short kiss, but it had truly been electric. When it ended, she looked down then got in the car without another word being said. Tanner got in and started it up, glanced her way and smiled, then drove off.\n\nVery little was said until they got closer to Auburn when Tanner said, \"Vanessa? I'd like to take you and Kayleigh to dinner tonight.\"\n\nHer heart had slowed back down to near normal, but now it was suddenly speeding up again.\n\n\"But that's...that's so expensive,\" she said without thinking. All those months of barely surviving had caused to see things very differently.\n\nTanner smiled politely thens said, \"Taking you to lunch yesterday didn't break the bank. And i think I've still got a few shekels left.\"\n\nThe word 'shekels' made her laugh, and as she did she said, \"Okay. That would be really nice.\"\n\nWhen her mother told Kayleigh they were going out for dinner, she said, \"Going out going out or...McDonalds going out?\"\n\n\"Going out as in...going out. As in we need to go buy you a dress going out. As in right now.\"\n\nKayleigh hadn't worn a dress since the memorial service, and those still her closet no longer came close to fitting. She insisted on something inexpensive, but with shoes, a cardigan sweater, and a purse, it still came to over $150.\n\n\"Mom. This is insane,\" Kayleigh said when her mom kept adding items. \"We can't afford this.\"\n\n\"I think we'll be okay,\" she said with a smile, and Kayleigh decided to trust her.\n\nThey ended up at the Wild Fin Restaurant in Renton which was a kind of modern, glass-enclosed Leaning Tower of Pisa.\n\nKayleigh couldn't remember ever going anywhere so nice although her dad had taken them to several similar places when she was much younger. She also hadn't worn makeup with a dress...ever...and when her mom saw her she almost cried.\n\n\"I knew there was a beautiful girl inside that tomboy exterior somewhere in there.\"\n\nBefore she could come back with something to downplay the compliment, Tanner said, \"Your mom's right. You look beautiful.\"\n\nVanessa couldn't ever remember her daughter blushing before, but she was red from her neck to her cheeks as she said, \"Thank you,\" very quietly.\n\nTanner told her she was very welcome then said to Vanessa, \"You looked amazing on Monday, and very cute yesterday, but...wow!\"\n\nVanessa had also bought a fairly inexpensive dress, but it looked elegant and beautiful on her. She hadn't had to buy shoes or a purse so for $40 she felt like a million bucks.\n\nDuring dinner, Vanessa noticed how carefully Tanner listened to Kayleigh and the way he talked to her. She couldn't help but think of Adam as this younger man made her daughter feel like the most important person on earth. Except when he was doing the same to her.\n\nHe was clearly very well-educated, but he wasn't 'slick and smooth'. He was a genuinely caring, concerned person who really listened, and who offered sound, intelligent advice when needed and simply listened when called for.\n\nOf all the things he said, the way he handled Kayleigh's comments about the way her former best friend treated her at school impressed her the most. Vanessa felt herself on the verge of tearing up as he walked her daughter through that minefield and had her laughing before they were through.\n\n\"You're really cool...for a Fed,\" Kayleigh told him on the way home.\n\n\"And you're really cool...for a teenager,\" he told her back. \n\nHe saw the way Kayleigh smiled at him in the mirror, and Vanessa saw the way he smiled, and once again, she felt something almost like the 'electric shock' she felt when he'd kissed her.\n\nWhen they were back inside, the two adults had a glass of wine while the three of them sat and continued talking.\n\n\"So who all is coming to your party on Saturday?\" he mom asked. Kayleigh had hemmed and hawed and never really told her.\n\n\"No one,\" she said in a very upbeat way.\n\n\"Honey. This is a party. Your party. Why don't you at least invite Becca?\"\n\n\"Because the people I really want to spend time with are right here,\" she said as she looked at her mom and then at Tanner.\n\nNeither of the adults spoke, so Kayleigh continued talking.\n\n\"Like I said, I know I'm only gonna be 14, but I'm not blind.\"\n\n\"No one thinks you're blind, sweetheart,\" he mom said.\n\n\"No, because I'm not the one who is,\" she replied. \"But unless you open your eyes, and see what's going on, I'll have to assume you are, Mom.\"\n\nKayleigh stood up, smiled at Tanner, then said to them both, \"I think I'm gonna go to my room and listen to music for a while.\"\n\n\"Are you sure?\" her mom asked. \"You don't have to rush off.\"\n\n\"I'm sure,\" she said. \"If I stay here, you won't be able to open your eyes, so if I leave, maybe you'll at least try.\"\n\nAnd then with another smile she said, \"Goodnight.\"\n\nOnce she was gone Vanessa said, \"I really don't know what's gotten into her lately.\"\n\n\"How about I top of your glass and we'll talk about it?\" Tanner said as he got up and reached for her glass.\n\nWhen he came back, he sat right next to her without asking, and Vanessa said, \"Oh. Hi there.\"\n\n\"Hi,\" he said quietly.\n\n\"So...did you have an idea about why my daughter is acting so strangely?\"\n\n\"I think so,\" he said as she took a small sip.\n\nAs soon as she finished, he gently took the wine glass away from her then said, \"I think it's pretty obvious.\"\n\n\"You do?\" she asked, her heart beating fast again. \n\n\"I do,\" he said quietly. \"She sees what we're seeing. The difference is she isn't pretending not to see it.\"\n\n\"She...is?\" Vanessa asked, barely able to speak.\n\n\"Uh-huh.\"\n\n\"What...what is it she's seeing?\" she asked, her voice a whisper.\n\n\"Us. You. And me.\"\n\n\"Oh. I see,\" she said as he leaned closer.\n\n\"Do you?\" he asked as he gently brushed her thick, silky hair back.\n\n\"I...I think so,\" she told him just before he kissed her again.\n\nWhen it ended, Vanessa opened her eyes slowly then kept opening them until they were as wide as she could get them just to make a point.\n\n\"Oh, okay. So this is what Kayleigh meant by 'opening my eyes'.\"\n\n\"No, I think she met this,\" Tanner said before kissing her again.\n\nThis kiss was long and slow and unlike anything either of them had experienced since that one special person they'd loved was still alive.\n\n\"Wow. I really like...seeing,\" Vanessa said when he finally pulled away.\n\n\"You're the first and only woman I've kissed since Hannah,\" he told her quietly, never taking his eyes off of hers.\n\n\"I'm already jealous of the ones who'll come after me,\" she said just as quietly.\n\nHe smiled at her, touched her face then asked, \"What makes you think there'll be others?\"\n\nHer eyes darted back and forth with his as her heart pounded in her chest.\n\n\"I...I just assumed you'd...you know, that you'd date lots of other women.\"\n\nShe was only some six inches away from him as she spoke, and when he answered her, she wasn't sure what to think.\n\n\"I don't fall in love easily, Vanessa. I did so once, and thought it would be for life.\"\n\nHe paused then said, \"My...life.\"\n\nHe put his hand on her cheek then said, \"You may need to be more...adventurous...where falling in love is concerned, but I don't need any more time to know how I feel about you.\"\n\nVanessa could barely hear herself talk because of the blood pressure pounding in her ears as she asked, \"How do you feel about me, Tanner?\"\n\n\"Like I don't ever want to be without you,\" he told her, his eyes full of truth and sincerity. \"But I know you need more time, so I'll...\"\n\nVanessa pulled him to her and kissed him the way she once kissed her husband. Were Kayleigh not home, she knew there'd be no stopping this. But because she was, hungry tongues did battle as soft lips pressed together and arms held bodies close and tight.\n\nOnce passions cooled, Tanner sat next to her and just held her as Vanessa buried her head in the crook of his neck.\n\nNeither of them knew how long they sat their in silence before Vanessa raised her head, looked at Tanner then said, \"I don't need more time.\"\n\nHe smiled in a way he hadn't since Hannah was alive and asked, \"Are you sure?\"\n\n\"Yes. I'm sure,\" she told him.\n\nShe smiled back then said, \"When I decided to try and start looking again, I told myself I'd found the perfect man once, and that this time, I wouldn't wait to find another one.\"\n\n\"I see. So you're willing to...settle...for someone like me?\" he asked, clearly teasing.\n\n\"I wasn't finished, Mister Smarty Pants,\" she told him. \"I was going to say I had no idea I wouldn't even have to go looking for him; that he'd just show up on my doorstep one day and sweep me off my feet.\"\n\n\"I never actually stood on your doorstep,\" he said very seriously. \"I sort of came inside and...\"\n\nVanessa laughed then said, \"Be quiet and kiss me, okay?\"\n\nThey were several seconds into it when a voice startled them.\n\n\"Now that's what I'm talkin' about!\" Kayleigh said as she walked by.\n\nVanessa pulled away, smoothed her dress, then said, \"Kayleigh. Hi, honey. I...I didn't hear you come in.\"\n\n\"Good thing, huh?\" she said with a smile. \n\nAs she walked away she made both of them laugh when she said loudly with a raised hand, \"Carry on, people!\"\n\nTanner went to kiss her again but Vanessa stopped him.\n\n\"Tanner? What are you doing?\" she said as though he hadn't just seen Kayleigh.\n\n\"I'm following orders,\" he told her.\n\n\"What?\"\n\n\"Kayleigh told us to 'carry on' so...I'm carrying on...with what we were doing.\"\n\n\"Oh. Yes. Well, children should be heard, right? I mean, they do sometimes have good ideas.\"\n\n\"Yes, they do,\" Tanner told her.\n\n\"Okay, then maybe we should...carry on,\" she said with a smile just before he kissed her again.\n\nAt breakfast the next morning, Vanessa said to her daughter, \"Do you want to talk about last night, honey?\"\n\n\"No. Why would I want to talk about it?\" she asked with a smile.\n\n\"I don't know. I just thought maybe you'd have some questions,\" he mom said as Tanner listened.\n\n\"Once again, I'm turning 14 not four,\" Kayleigh announced. \"People who like each other do stuff like that.\"\n\n\"Okay. If everything is fine then we won't talk about it,\" Vanessa said feeling satisfied.\n\n\"Mom?\" Kayleigh said.\n\n\"Yes?\"\n\n\"I'm glad you opened your eyes.\"\n\nShe saw Tanner smiling and she smiled, too.\n\n\"Yeah. Me too, honey,\" she told her daughter while looking at her...boyfriend?\n\n\"So what are you two kids doing today?\" Kayleigh asked as she finished her orange juice.\n\n\"I think we're heading back to Enumclaw to get the power of attorney and other paperwork,\" Tanner said as he looked to Vanessa for approval.\n\n\"Right. Mr. Bennett said they'd be ready today with any luck.\"\n\n\"I'll give him a call first to make sure,\" Tanner told her.\n\nKayleigh said, \"Very nice. I approve.\"\n\nBefore her mom could react she said, \"Now that I got my birthday wish...is it still okay if I invite Becca...and maybe a couple of other friends?\"\n\nVanessa couldn't have been happier to hear her daughter ask.\n\n\"Of course! Invite as many friends as you like, honey.\"\n\n\"Um, well...those are all of the friends I like or have, Mom,\" she said in her dry, deadpan way.\n\nKayleigh got up to go brush her teeth then said, \"Mom? Please tell me we're not having cake and ice cream.\"\n\nVanessa's eyes opened wide in surprise. \n\n\"I...we...um...\" she stuttered not knowing what to say.\n\nKayleigh laughed, pointed at her with both hands doing a kind of 'air guns' thing and said, \"Got ya!\"\n\nVanessa growled pretending to be mad but she was on the verge of crying yet again from being so happy. Tanner didn't say a word, because between what had been said the night before and what Kayleigh'd just said, nothing more needed to be said.\n\nMr. Bennett's secretary told him she had everything on her desk to include a checklist that covered most of things executors needed to do. All he needed to do was to stop in, pick them up, and get started.\n\nWith the death certificate and a judge's certification making Tanner the executor, one door after the other opened for him everywhere they went. \n\nThe bank provided him access to the safe deposit box where his father's will was kept along with a surprisingly large amount of $50 U.S. Savings Bonds from nearly 40 years ago. Also included was the deed to the house and land which he'd purchased for the princely sum of $35,000 back in 1970 meaning the land was now his free and clear.\n\nThe biggest surprise came when they went back up front to check on the status of any accounts. \n\nA girl Tanner had gone to high school with worked there and accessed the accounts for him. She'd started to flirt with him when he proudly introduced Vanessa as his girlfriend. She not only didn't balk, she loved the way the younger girl looked at her when she slid her arm through his. \n\nAfter rolling her eyes, she said, \"How would you like this, Tanner? Is a certified check okay or would you prefer I wire directly to another account?\"\n\nVanessa saw the way he reacted and asked, \"Is everything okay?\"\n\n\"This is...insane,\" he said.\n\n\"Did he have something like ten dollars in the account?\" she asked, expecting the amount to be ridiculously low.\n\nHe handed her the slip of paper and when she saw the number, she said, \"Oh, my God.\"\n\nIt read: $257,465.06.\n\n\"Oh, my God,\" she said again as she handed it back to him.\n\n\"Do you know anything about this?\" he asked the girl.\n\n\"No, but the branch manager probably does,\" she said. \"Hold on. I'll go get her.\"\n\nA woman about Vanessa's age, but nowhere near as attractive introduced herself, and asked them to sit down. She told them how his father had come in right after his wife passed away wanting to deposit some insurance money.\n\n\"He had this...dazed...look on his face. He seemed almost catatonic. I was a teller back then and I took care of the transaction. He handed me a check for a quarter of a million dollars, and asked me to put it his savings account. He's never once touched it since,\" she explained. \"It's just been sitting there adding whatever tiny percentage of interest it was making. But over that many years, a quarter or half percent really adds up. And there were a few years where we were paying up to 4.5% so...this is the result.\"",
        "Tanner thanked her then had the presence of mind to ask, \"Oh, could you recommend a real estate agent in town?\"\n\n\"Of course,\" she said with a smile. She wrote them down along with a phone number for each then asked if she could be of any other assistance.\n\n\"Just maybe open a savings account in my name and transfer the money into?\" he suggested.\n\n\"I'll take care of that for you immediately, Mr. Patten,\" she told him with a smile, relieved one of their largest deposits wasn't going anyway just yet.\n\nThe real estate agent was just a couple of blocks away, and blocks weren't very big so the two of them walked. When Tanner reached for her hand, Vanessa let him take it, but he sensed something was wrong.\n\n\"You okay?\" he asked.\n\n\"I think so,\" she told him.\n\nKnowing something was wrong he stopped and faced her.\n\n\"What is it?\"\n\n\"Well, you just got some amazing news. Quite a bit of it, in fact. And you don't seem very excited. So I was wondering if everything is okay\u2014with you.\"\n\nHe reached down and took her hands then said, \"You'd give that much money away in a second to bring Adam back, and I'd burn every dollar of it in a heartbeat if it would bring back Hannah. But it can't. But what it does do is show me the limited value of money when what really matters is love.\"\n\nHe let go of one hand and touched her face, smiled then told her, \"Finding you means more to me than money, or houses, or land.\"\n\nHe moved in very close then told her, \"Those things don't make me happy, Vanessa. You do. Until this week, I had nothing that made me happy. I enjoy my work, but it never made me happy.\"\n\nHe smiled again then said, \"But you do. So that's why I'm not very excited about having someone hand me something I didn't earn.\"\n\n\"You really are an amazing man, Tanner.\"\n\nShe smiled back at him then said, \"You make me happy.\"\n\nShe kissed him then said, \"Very happy.\"\n\n\"Come on. Let's go see if we can sell this land.\"\n\nThe demolition could start anytime now that he was the legal owner of the property. But before he gave them the go ahead, he wanted to find someone to help him get rid of it.\n\nThe agent they spoke to told them she knew just who might like to buy it.\n\n\"Seriously? Hugh Stanton?\" Tanner asked.\n\n\"Oh, yes. He's had his eye on that small piece of land for years. In a small town like this, you get to know pretty much everything about everybody. Especially when you've been selling real estate for nearly 30 years in that same town.\"\n\n\"Well, I can't think of anyone I'd rather see have it,\" Tanner told her. \"We can stop by there on our way back to Auburn.\"\n\n\"Do you know how much you'd like to ask for it?\" she asked.\n\n\"Not really. And if Hugh wants it, I'm willing to make a deal,\" he told her.\n\n\"It's up to you what amount you ask for, but just so you know, I think somewhere around $250,00 is about right. If the house was worth saving, you could easily get three hundred. But two-fifty is a very reasonable price.\"\n\n\"Okay. I'll run that by Hugh and see what he says,\" Tanner told her.\n\n\"All right. If he says 'yes' and you need me to go ahead, just let me know.\"\n\n\"I'll call you either way,\" Tanner promised. And with that their business in town was done.\n\nAs they drove, it was Tanner who couldn't help but think something was going on with Vanessa.\n\n\"Care to share?\" he asked.\n\n\"Well, I'm not sure why I feel the need to say this, but I do so...\"\n\nShe looked over at him then said, \"I don't care about this money, either. At all. In fact, while I'm glad you have it, I almost wish it had never happened, because I need you to know I care about you, Tanner.\"\n\n\"Hey, do you really think I'd fall for a woman who was only interested in me for my money? Which, by the way, wasn't much until today.\"\n\nHis smile helped, but Vanessa was still concerned he might somehow see her as a gold digger or some such thing.\n\n\"What you said back in town. About money not bringing happiness. I agree with that completely. I know firsthand that being so poor you have to worry about it all the time is no fun, but beyond having enough to get by on, it never makes anyone any happier.\"\n\n\"Are you trying to convince me of what I said?\" he teased.\n\n\"No. Of course not. I just really need you to know none of that matters.\"\n\nShe looked down at the floor then said, \"I need you to know I've fallen for you, too, and it happened when I thought you were some poor security guy.\"\n\n\"As opposed to a poor federal agent?\" he said, keeping the teasing going.\n\n\"Well, yes,\" she said finally smiling.\n\n\"So can we stop talking about money now?\"\n\n\"I'd like that a lot,\" Vanessa told him as she held out her hand for him to take.\n\nWhen they pulled into the Stanton's driveway, the tractor was by the house meaning Hugh was inside.\n\nHe not only jumped at the offer, he agreed to pay full price in cash and even insisted on it.\n\nTanner was as shocked to think this man in bib overalls who wore an old red ball cap outside had that kind of money laying around. Evidently, he did. Evidently, farming paid better than he realized or maybe there'd been an inheritance somewhere in their past. Either way, Hugh wanted the property and told Tanner he'd take it 'as is' with the house.\n\n\"I'll have my boys come out and help me knock it down. They've both got tractors, and between them and me, it won't cost much beyond a few dumpsters worth of trash to haul away.\"\n\nThey shook on it, said goodbye, and on the way back to Auburn Tanner called Elaine, who was thrilled to be making 6% of $250k and told him she'd get right on it.\n\n\"That's that, I guess,\" Tanner said. \"What's next?\"\n\n\"Kayleigh's party?\" she said with a smile. \"Oh, and we have another guest checking in tomorrow, too.\"\n\n\"We?\" he said with a smile. \"Well, yes. Maybe. Would you like there to be a 'we'?\"\n\n\"I would. I'd like that very much.\"\n\n\"Is it fair for me to ask what you plan on doing now that you don't need to stay here and renovate your dad's house?\"\n\n\"Of course it's fair,\" he told her. \"The truth is I don't want to leave.\"\n\n\"So you like it out here?\" she asked.\n\n\"No, not particularly. I like the green, but not the gray skies, and I really don't like the traffic. But there is something here I like very much and don't want to live without.\"\n\n\"Oh, some...thing, huh?\" she asked with a hopeful smile.\n\n\"Okay. Some...one,\" he said, smiling back.\n\n\"Does that mean you won't be leaving next week?\" she asked just as hopefully.\n\n\"It does. In fact, I'm planning to stay all 30 days, unless of course, you're tired of having me hang around.\"\n\nVanessa's heart was singing as she said, \"I think I could put up with you for a month.\"\n\nShe paused, smiled, then said, \"Or possibly even longer.\"\n\nFrom the time they got home until Kayleigh's party, it was non-stop activity between getting things ready, checking in the new guest, and the happy new couple spending as much time together as they could.\n\nSaturday evening, Kayleigh's friends arrived starting with Becca, a very sweet girl Tanner thought was a lot like Kayleigh. Two others arrived, and after checking with their new arrival who said it was fine, Vanessa let her daughter play her favorite music.\n\nThe new guest was a man who looked to be around 40, and he seemed pleasant enough, but something about him set off warning bells in Tanner's head. He dismissed the thought by the time they had dinner, and when he went back to his room to get ready, he forgot all about it.\n\nHe forgot about it, because something more important was on his mind. He looked at his wedding ring several times, and after quietly asking Hannah to understand, he took it off for the first time since she'd put it there. \n\nWhat he couldn't know was that Vanessa was doing the very same thing in her room. Her eyes filled with tears as she said to Adam, \"Honey? I'll never stop loving you, but I know you'd want me to be happy. And I'm sure you know I've finally met someone, and well, I think it's time. So...please understand, okay?\"\n\nShe set the modest diamond on her dresser in front of the mirror, dabbed her eyes, then touched up her mascara before going back out for the party.\n\nJust seeing Kayleigh laughing and having fun made her happy. And when her daughter said, \"Mom? This song is for you and Tanner to dance to,\" she had to fight back tears again as she wondered if her father had somehow let her know.\n\n\"May I have this dance?\" Tanner asked.\n\nNeither of them had heard the song before, but it was slow and romantic, and nothing else mattered as they held each other and slowly moved in a small circle. There were no boys there so Kayleigh danced with Becca and their other two friends with each other, something girls often did.\n\nAs the song ended, Tanner realized their guest was missing, but didn't give it any thought as he slowly let go of his beautiful, older girlfriend. As her left hand slid out of his right, he noticed the bare finger and took her hand back.\n\n\"What?\" she asked with a happy smile as he pulled her close.\n\nHe held up his left hand, smiled, then said, \"Great minds really do think alike, I see.\"\n\n\"I often wondered if I'd ever meet anyone who could make me feel like I could take it off,\" Vanessa said as they looked into each other's eyes.\n\n\"I didn't believe I ever would,\" he told her quietly. \"And then I found you.\"\n\nVanessa was tearing up again just as Kayleigh said, \"Mom? Is it time yet? I feel like I'm 14 now!\"\n\n\"I'm being summoned,\" she said to Tanner who let her go.\n\n\"Yes! Let's see if we can find a cake around here somewhere.\"\n\n\"I'll go get it for you,\" Tanner said. He knew it was in Vanessa's room and told her he'd be right back. She'd gone all out and had something almost as fancy as a wedding cake made.\n\nVanessa had the words, 'Happy Birthday, Kayleigh, my daughter and best friend who's always been there for me.' Below it she had them write, 'We made it through it\u2014just like we always do!' \n\nTanner was smiling in anticipation of seeing her face light up when he brought it out. As he turned the corner to go into her room, he stopped dead in his tracks. Their new guest was in there, and he was holding her ring. He held it up, looked at it, turned it in the light, then put it in his pocket.\n\nAlmost too stunned to speak, Tanner stood there trying to process who could possibly do something like that. The shock wore off and anger replaced it as he stepped inside.\n\n\"What the hell do you think you're doing?\" he asked as he approached the man.\n\n\"Doing?\" he said. \"I was just looking around. I saw the cake and wanted to take a look at it. That's not a crime these days, is it?\"\n\nHis blood boiling, Tanner walked up to the man, and said, \"You're under arrest, you sonuvabitch.\"\n\nThe man laughed and said, \"Go ahead. Call the cops. But they're gonna need a warrant.\"\n\n\"Don't move,\" Tanner said as he walked across the hall.\n\nHe picked up his badge, his service weapon, and his handcuffs, things he never imagined he'd use, and walked back in.\n\nHe held up the badge, and the man said, \"That's not an Auburn cop's badge. You have no jurisdiction here.\"\n\nTanner threw him onto the bed face first, cuffed, him, then said, \"I'm an FBI agent, dumbass. I have jurisdiction everywhere in this country. You have the right to remain silent, you have the right to...\"\n\nVanessa walked in to see what was taking so long and, she too, stopped.\n\n\"Tanner? What's going on?\" she said feeling very confused and upset.\n\nTanner stood the man up and said, \"See for yourself.\"\n\nHe turned him around, reached into his pocket, and pulled out her wedding ring.\n\n\"I saw him take it. Your wedding ring. The one your husband, who died trying to save a little girl gave you. Then he denied it.\"\n\nVanessa had never been so angry in her life. She walked over, took the ring from Tanner, and set it back on the dresser.\n\nThen she turned to face the man, and unable to control her rage, she slapped him in the face as hard as she could.\n\n\"I opened my home to you, and this is how you repay me?\"\n\nTanner called the local police who came and picked the man up. He filled out some papers then apologized to everyone for the incident. By then the girls all knew what had happened and thought he was nothing short of a hero.\n\n\"It's no wonder my mom loves you,\" Kayleigh said, once again shocking her mother who'd finally calmed down.\n\n\"Kayleigh, I...why would you...\"\n\n\"Mom, I'm 14 now, remember. And I'm smart. Just like my mom. And it's okay. I kind of love him, too.\"\n\nVanessa smiled as the other girls starting clapping and 'woot-wooting' and saying, \"Kiss him, kiss him, kiss him!\"\n\nVanessa was laughing and Tanner said, \"I believe children should be heard.\"\n\n\"I've heard that, too,\" she said as he put his arms around her.\n\n\"And you can't disappoint your daughter or her friends, right?\"\n\n\"No. I...I can't do that,\" she said before she pulled him close and kissed him.\n\nThe girls hooped and hollered again and when it ended, Vanessa said, \"I kind of do love him.\"\n\n\"Just...kind of?\" Tanner asked, his arm around her.\n\n\"Say it! Say it! Say it!\" the girls all said as Kayleigh led the cheer.\n\n\"Okay. Okay. I...love him!\" she said.\n\nThey cheered even louder then waited for Tanner to speak.\n\n\"And I love her.\"\n\nAnother loud burst followed before Kayleigh said, \"Now that's what I'm talkin' about!\" again. \n\nShe threw up her arms then said loudly, \"Let them eat cake!\"\n\n\"No candles? No birthday wish?\" her mom asked.\n\n\"Hey, I already got more than I wished for, so let's just commence to cuttin' and eatin'!\"\n\nThe cake tasted as good as it looked, and once everyone had a slice, Vanessa brought out several gifts she'd bought her daughter. All of them were things to wear, and things she'd hinted at here and there. \n\nKayleigh was so moved, she started to cry, and her mom said, \"Stop. You'll make me cry, too!\"\n\nShe looked up at her and then at Tanner before saying, \"We've been through so much, Mom. Things looked so bleak sometimes I wondered how we'd ever make it. But you were the reason we did. You're not only my mom, you're my best friend. I love you so much, and I'm really, really happy you've found someone so awesome.\"\n\nVanessa was crying, too, and in order to make her stop, Kayleigh said, \"So...I can I spend the night at Becca's?\"\n\n\"Oh. Well, sure. I think that'd be just fine. I mean, you are 14, right?\"\n\n\"You know it, woman!\" she replied before telling her friends to pack it up so they could move out.\n\nKayleigh hadn't slept over or had anyone at their house since before her father died, so Vanessa was thrilled to let her.\n\nBecca's mom came to pick them up and took all four of them to her house leaving Tanner and Vanessa all alone at night for the first time.\n\n\"That was really nice,\" Tanner told her. \n\n\"Yes. It was very special. Something I'll never forget.\"\n\n\"I love the way you two get along,\" he told her.\n\n\"We have a wonderful relationship,\" she said as Tanner put his arms around her again.\n\n\"I'd like to have a wonderful relationship with you,\" he said as they again looked in each other's eyes.\n\n\"I see,\" she said sweetly. \"And...what kind of relationship are we talking about?\"\n\n\"The kind two people who love each other have,\" he told her.\n\n\"Well, I do love you.\"\n\n\"And I love you.\"\n\n\"Then I suppose we should...love one another,\" she said as she took his hand and led her to her bedroom and locked the door.\n\n\"I'm very out of practice,\" she told him.\n\n\"No more than me,\" he said.\n\n\"So if I'm not so great you won't be upset?\" she asked.\n\n\"You're already great,\" he told her. \"Anything else is just...icing on the cake.\"\n\nVanessa laughed, held him close then said, \"I'm so happy.\"\n\n\"Me, too,\" he said before he kissed her then slowly undressed her.\n\nThey made love twice that night with the second time being even better than the first.\n\nAlthough he returned to his own room well before Kayleigh came home, he and Vanessa became inseparable from that moment on. For the next two weeks, Tanner helped her run the business while he waited for the land to be sold, while tying up other loose ends with his father's funeral, Social Security, paying final bills, and other details.\n\nA week before it was time to go, they were sitting alone having a glass of wine when Vanessa said, \"Have you decided what you're going to do yet?\"\n\n\"Yes and no,\" Tanner replied with a smile.\n\n\"You're usually very decisive. That doesn't sound like you,\" she said.\n\n\"Well, the 'yes' part is easy. I've decided I want to spend the rest of my life with you.\"\n\nHe got off the couch, produced a small, fuzzy, blue box, then opened it as he got on one knee.\n\nVanessa was beside herself as the very thing she'd hoped for was actually happening.\n\n\"We've both said how we felt like we might never find someone, and then fate or something just threw us together. However it happened, it changed my life. You changed my life, sweetheart. And I can't imagine my life now without you. So...Vanessa Sanders, will you marry me?\"\n\nShe was too emotionally wrung out to scream. Vanessa was crying and nodding, and somehow managed to say, \"Yes,\" as he placed the very large diamond on her hand.\n\n\"So what's the 'no' part?\" she asked once she could talk.\n\nHe sat next to her, held her close then said, \"Well, what else I'm going to do depends on you.\"\n\n\"How so?\" she asked as she held her left hand out, unable to stop looking at the ring and all that it represented.\n\n\"On whether you'll come with me to Oklahoma or whether I need to request a transfer to the Seattle Field Office. I'd love for you and Kayleigh to come with me, but this place...this house...is your life, and I would never ask you to leave it.\"\n\n\"There are many wonderful memories in this house. But in the end, it's just a house. You said that about money and it was true. It's also true about the brick and mortar that make up this building. Kayleigh may not want to leave, but I'll ask her and see what...\"\n\n\"Ask me what?\" Kayleigh said, as she walked in on them yet again.\n\n\"Sit down, honey,\" her mom said.\n\n\"Okay,\" she said as she sat across from them. \"What's up?\"\n\n\"Well, first of all...this,\" her mom said as she held out her hand.\n\n\"Holy cow, Mom! That's a rock!\"\n\nBefore she could reply, Kayleigh hugged her and said, \"Congratulations. I'm so happy for you!\"\n\nShe then hugged Tanner and said, \"Both of you.\"\n\n\"There's more,\" her mom said.\n\n\"Okay. Shoot.\"\n\n\"How would you feel about moving? About leaving Auburn and...\n\n\"Oh, hell yeah!\" Kayleigh hollered. \"Are we there yet?\"\n\n\"But you don't even know where,\" her mom said.\n\n\"If it's away from here, I'm all in!\" her daughter said.\n\n\"So Oklahoma City is okay?\" her mom asked anyway.\n\n\"Are you kidding? A chance to start a new life in a new place with my best friend...and her gorgeous boy...fianc\u00e9? Let's roll, people!\" Kayleigh said with that infectious excitement of hers.\n\n\"Do you want to finish out the school year here?\" Vanessa asked. \"You only have a month or so to go, and I need to get the house ready for sale.\"\n\n\"Will you have to leave before then, Tanner?\" Kayleigh asked.\n\n\"Unfortunately, yes,\" he said. \"But your mom does need time to sell the house.\"\n\n\"I can find a realtor to sell it, honey,\" she said, calling him that for the first time in front of her daughter who smiled approvingly.\n\n\"So...are you saying you want to leave with me when my month is up?\" he asked.\n\nKayleigh was nodding and smiling so Vanessa said, \"Oh, hell, yeah!\"\n\nThe three of them laughed and hugged, and Tanner said, \"Well, I better check into renting a U-Haul truck, and you two better get started packing up what you want to take with us.\"\n\nThree days before Tanner was due back at work, the U-Haul was stuffed to the gills, and Vanessa's car was in tow in back. She handed the house keys to an old friend who was also a realtor, and climbed up into the cab.",
        "\"Anyone ready to start a new life?\" Tanner asked.\n\n\"Right here!\" Kayleigh called out as she raised her hand.\n\n\"Me, too!\" Vanessa said, doing what her daughter did.\n\n\"All right then. Let's...\"\n\nKayleigh and Vanessa said it with him at the same time. \"Let's roll!\"\n\nTwo long, full days later they were in Oklahoma City where Kayleigh finished the school year as they limped by in the one-bedroom apartment. Two months later they were in a brand new, five-bedroom home that was nearly 3,000 square feet; one that much cost less than the amount Tanner had received for his father's land, leaving them a whole lot of money to start their new lives together with (and to help Vanessa's aging mother who was now unable to travel.) \n\nTwo months later, Vanessa and Tanner were married with Kayleigh serving as her mom's maid of honor.\n\nKayleigh started her first year of high school with a beautiful new wardrobe but vowed never to be like the girls who'd treated her so horribly. She soon had more friends than she'd ever dreamed of\u2014both boys and girls\u2014and couldn't have been happier with her new life or the gorgeous man she'd started calling 'dad'. \n\nInitially, it was just a joke. But as Tanner became her second best friend and the person she turned to for advice and later even parental love, the word just seemed to fit, and 'dad' it was. \n\nBy the time Kayleigh finished her first full semester at her new school, her mom was pregnant, and by the time the next Fall came around, she had a brand new baby brother.\n\nKayleigh was so thrilled, she preferred spending her time at home to hanging out with friends, and wanted to hold him every chance she got. \n\nVanessa tried not to cry as they all sat around the tree in December on Christmas morning as a family. But it was too much to ask as she recalled the pain of losing Adam, the financial struggles that followed, and the feeling she might never be happy again or even be able to provide for her child. And then one day a gorgeous, younger man walked into her life; a man she fell in love with and married named Tanner Patten.\n\nMoney from Tanner's inheritance allowed her to never worry about finances again and to put Kayleigh through college, but it was him and his love, and his love of their children that allowed Vanessa Patten to once again really live."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "old woman",
        "young man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/va-cay"
}