{
    "title": "Leave the Night On Pt. 01",
    "pages": [
        "I know what you're thinking: \"Oh my God! She's posting a new story without having finished the last one!\" I know, I know, I'm horrible. But here's the thing with that other story: I'm stuck. Big time.\n\nEvery time I write you guys something I need to get that feeling like things are flowing nicely, like \"This is what I want these characters to make people feel\". Unfortunately, with that other story, I'm not getting that. I'm sure you wouldn't want to read something written without any real feeling.\n\nSo I present to you something new I wrote while listening me to some K-Pop (TOTALLY NOT ASHAMED ABOUT IT). I had 35 pages of scattered ideas for this, so it REALLY needed to be written before I lost the vibe.\n\nIn my country, such a thing as \"interracial dating\" is not even an existing term and maybe that's why I feel a shortage of representation for some ethnicities out there. That's why I figured I'd make this hero a very hot non-white man.\n\nI hope you like it because I get a feeling this one's going to be fun to write.\n\nEnjoy it.\n\nXOXO,\n\nNana.\n\nP.S.: I will try my very best to finish that other story and to post the next chapter for this one as soon as I can. Graduating is my top priority, though (and I'm almost there!)\n\n*****\n\n1\n\nSOME days I wake up and I'm just on. \n\nI jolt out of bed at two in the morning, energy overflowing into my body, and I have to put my sneakers on to go out for a run if only to shake those ants in my pants. I don't stop until I'm coated in sweat, the muscles on my thighs burning, and I'm riddled of that electrifying impulse to move.\n\nOther days I take up on cleaning the loft. I pour all of that stamina in scrubbing, polishing, dusting, and even bathing our cat, Mallory. My roommates love it. We probably have the cleanest kitchen -and cat- on our side of town. \n\nWhen my brain is swarmed with a surge of chemicals that lit a fire inside me, I do whatever I can to extinguish it. My job, though, is probably the best therapy for my crazy outbursts. Being an elementary school teacher is what I was crafted for. I love my job. Children are natural powerhouses, like me. Not to mention they are siphons for grown-ups' energy. \n\nWhen the weekend comes along, however, I get particularly frenzied. There's no escaping the heat, there's no work, no daily dose of energy sucking six-year-olds, and I don't have the legs to run all that energy out of my system. But on the plus side, I've no obligations but to throw on a flimsy dress, go out, and unleash myself upon a dancefloor.\n\nWhich is how, on my last Sunday of Summer break, I find myself being yanked out of sleep by that palpitating anxiety only to realize I'm not in my bed. The heat on my back is the kind only another body can produce. \n\nSlowly, and already dreading what I'll find, I turn my head on the pillow and there it is; Last night's leftover. A heap of tanned skin and muscles lying next to me. With a quietness and agility gained by experience in sneaking out of unknown rooms, I find my clothes, and tiptoe out of his apartment at the break of dawn. \n\nIn my defense, I don't usually sneak out on guys. I only ever do it when they're not very skilled in making me come and then drop the line \"Was it good for you too?\" meaning they can't even tell I faked it. I'm not proud of myself for faking it either. I consider it polite to let a man know he needs to work harder, both for my sake and for the sake of the woman who comes -or doesn't- after me. Come to think of it, I sneak out a lot. More than I'd like.\n\nMr. Last Night was a disappointment. A big one. He fell asleep on me. Literally on me, when I could've gone another round or two. Nothing new, though. I've had more than one guy say Enough! on me. It wasn't the worst sex ever while it lasted. I've had worst experiences even if taking into consideration the fact he dry-humped me for longer than it would've been considered acceptable. \n\nAfter walking twenty blocks back to the loft, only to trade my party dress for my workout clothes, I run until I make myself wetter than Mr. Last Night had. My feet return me home when the sun is already up and shining. \n\nHome is almost like a real life sitcom. I share a loft with three other girls and a cat. According to Cami, the place oldest inhabitant, we'd be a sitcom around the lines of The Golden Girls, but suggestively called Four girls and a cat instead. \n\nLimbs exhausted, I climb the stairs to our floor and I'm suddenly assaulted by the scent of freshly brewed coffee. That's a smell that tells me Lil is already up. She's the only one, out of the four of us girls, who knows how to make decently good coffee. \n\nLiliane, Lil, is my favorite person ever. My closest friend and a hopeless romantic. She's a botanist, the reason why our loft looks like a mini indoor jungle. I met her four years ago, the day we both showed up at the loft's front door to see about the vacant rooms Cami was renting. We were both newly graduated young women searching for work and a room in the city. We bonded over Mallory and moved into the loft that same day. We have been friends ever since. Lil is like my soul mate. She's the complete opposite of me, calm and level-headed, and yet she just gets me. Even when I fuck up royally she doesn't judge me; she listens and helps me put my shit together.\n\n\"Lil, light of my life! I love you so much,\" I say, as I enter our home, removing my earphones and sweatband. She is perched on the kitchen counter, sipping coffee from her favorite blue mug that reads I'm a bad bitch in bold white letters.\n\nI make for her, spreading my arms, threatening her with a sweaty, smelly hug. \"Don't you dare touch me. You're disgusting,\" she says, scrunching up her freckled nose.\n\n\"Don't disdain the love, Liliane.\" I pour more coffee than I should drink on my own mug. I can feel Lil's disapproval weighing on me.\n\n\"Don't you think you should ease up on the caffeine?\"\n\nI roll my eyes at her. Caffeine isn't something I'm ready to abnegate. \"Where's the rest of the herd?\" I ask, ignoring her mother hen instincts.\n\nLil traps a tendril of fiery red hair behind her ear. She's beautiful in an ethereal, unearthly way. Lithe and graceful, like a nymph. \"Mel went out to get some eggs. Cami is in the shower,\" she answers, informing me of the whereabouts of our roommates.\n\nI inspect myself, whiffing. I am disgusting. \"Speaking of shower, I think need one.\"\n\n\"You most certainly do.\" She drags her cunning green eyes over me, her knowing expression having nothing to do with my state.\n\n\"What?\"\n\n\"You didn't sleep at home.\" Lil is as smart as a cat. The day I manage to fool her the skies will part in half.\n\n\"I need to pee,\" I mumble in a very bad attempt to evade her.\n\nI hear her tut-tutting as I rush to the bathroom. \"Was he untalented?\" She shouts after me.\n\n\"Oh girl, you've no idea.\" I open the bathroom's door and a billow of steam engulfs me. \"Jesus fucking Christ, Camille, open a window.\" \n\n\"Pearl! Is it you?\" Cami pokes her sudsy blond head out the shower curtain. She flashes me her all shining smile. \"Good morning, my goddess!\"\n\n\"Morning, honey.\" I smile back at her, peeling down my running leggings. Camille is the kind of girl who twists necks on the street. She's half French, has that kind of billowing golden hair you only see in shampoo advertisements. Her beauty is only second to her intelligence, though she tends to be overly honest. She's getting her Ph.D. in Philosophy and likes to use our lives' dramas as her experimental projects. I love her like a sister. I honestly can't count how many nights we spent discussing the meaningfulness of life and the uselessness of useless men over bottles of wine.\n\n\"He didn't give you a UTI did he?\" Lil's leaning on the bathroom door, casting her worried eyes over me. \"You're wincing. Your cooch burning?\"\n\nI smile at her composure while she watches me peeing. One of the greatest advantages about living in an all women environment is never having to worry about locking the bathroom door.\n\n\"Don't call her cooch,\" I object, though my coochie is burning a little. \"And no, I don't think he gave me an UTI, he just dry humped me like a dog. I'm sore.\"\n\nCami snorts out a laugh. \"At least you got rid of the cobwebs, Pearly Girl.\"\n\n\"Wasn't worth it,\" I state, flushing the toilet. I open the window before leaving so Cami doesn't mold the whole place.\n\nI stride back to living room, coffee back in hand. I spare our old purple couch from my disgusting sweaty self and sit on the floor instead. Mallory materializes out of that mythical place where cats inhabit, jumps onto my lap, already purring and offering his little neck to be petted. I bury my red nails in his grey, fluffy fur. Lil lands her skinny ass on the couch with a muffled thud. Her big eyes are like magnets attracted to my face. I swear I can catch her thoughts coming like electromagnetic waves from her brain like I'm her personal antenna. \n\n\"Woke up in the middle of the night again?\" she asks.\n\n\"Yep.\" The girls are all too familiar with my habit of sleeping too little and moving too much.\n\n\"Who did you spend the night with?\"\n\n\"Just a guy I met at the club,\" I say. I feel terrible about it, but I don't remember his name. I don't even remember him telling me his name. There's a chance he didn't say it. Or that he did say it and I didn't register it.\n\n\"I heard you coming home. It was pretty late. Or pretty early. I'm not sure which.\" Lil sips her coffee playing at disinterest. I pretend not to know what she's trying to get at. \"I woke up and didn't find you. I thought maybe you'd found someone you liked and decided to stay over for breakfast.\" She nudges me with her toe, her beautiful face expectant. She never gives up hoping I'll find my knight in shining armor. She thinks we all have our designated perfect partners and I just happen to be unlucky enough to have not found mine.\n\n\"Not this time. Maybe my next try,\" I tease her. Mallory looks up at me, yellow eyes unconvinced.\n\nLil squints. \"Don't tell me you're starting to believe in such things as love.\"\n\n\"I believe in spreading love.\"\n\n\"Spreading love or your legs?\" A comment pinched with acid comes from the direction of the door.\n\nMel.\n\nMelanie. My third roommate. She and I don't get along very well. I don't really know what I did to her, she seems to loathe me. She never misses a chance to push my buttons and narrow her eyes at every damn thing I do. Most specially, she likes to remark on how many men I sleep with -or rather how many men she seems to think I sleep with. Basically, to her, I'm a huge slut. I have tried to get along with her for the longest time until I realized my efforts were once-sided. Luckily for both of us, she's rarely home. She spends most of her time with her asshole of a fianc\u00e9, Mark, who's constantly checking my ass anytime he comes over.\n\nShe just came in and I'm already half hoping she trips over her wicked tongue. Mine's already itching to give her a reply. I know I should be the bigger person here and keep my mouth shut. Fortunately, I am not. \"Perhaps if you minded your own sex life instead of mine you wouldn't be so bitter, my darling.\"\n\n\"We don't all need to be so promiscuous,\" she spits just when I notice she's not alone. Her shithead of a fianc\u00e9 is right behind her, holding her bag of groceries.\n\nI sigh for this little ruining of my good mood. \"Hey, you brought Mark with you without even giving us a heads up. How nice!\" I clap my hands together, loudly. That seems to catch his attention. I always make a point of letting him know how unwelcome he is.\n\nShe throws her dark hair over her shoulder in a mean girl kind of way. \"I pay the rent too, Pearl.\"\n\n\"Yeah, you also live with other people. There are civility rules to respect,\" I tell her, for the thousandth time. One of us could be naked inside or something. Although honestly, if Mark weren't such a dick I wouldn't mind her bringing him over anytime she wanted. It just so happens that he is the biggest dick there ever was.\n\n\"Rough night, Pearl?\" He focuses his attention on me. He usually does. Specially on my most voluptuous parts.\n\nI give him a disdainful look, ignoring his presence completely. I hate the way he looks at me. Lasciviously. Without any respect at all. I wonder, if he's that creepy around Mel's friends, how does he treat other women? How does he treat her when we're not around?\n\nSeeing that I don't respond to Mark's provocation, Mel feels the need to meddle. \"She probably just came straight home from someone's bed.\"\n\n\"Oh, Melanie,\" I almost shout her name, my patience at its lowest levels. \"Could you lay down your usual persecution of my sexual conduct for today?\" Lords knows if I had half as much sex as she seems to think I do, I wouldn't even be able to walk straight.\n\nMel just hisses at me, retrieving to her room and leaving stupid Mark to store her groceries.\n\nShe and I are as different oil and water. She would never understand me. I spent most of my life, all my teenage years, being told I wasn't allowed the same liberties as men, especially when it came to sex. It took me years to understand my own body and my own desires. To her, I'm a slut because I'm not afraid to enjoy sex with whomever I please, even if sometimes my choices prove to be of poor character.\n\nA man is just being a man. Having his fun. Exerting his male right. But a woman? A woman is a whore. A bitch. Easy. Disposable. Meant to be fucked and judged for it. Men slept around all the time. Why couldn't a woman do the same and be left in peace? Why couldn't she leave me be?\n\nI finish my coffee praying for Jesus to give me patience. Lil squeezes my hand, a silent plea to disregard Melanie's petty insults. Just then, I hear Cami come out of the bathroom and decide a shower is all I need to save myself from a cortisol rush. \"I'm going to take a shower.\"\n\nI rise from the floor to deposit my mug on the kitchen sink. Mark, who is taking his sweet time putting away Mel's groceries, positions himself strategically so that I have to brush past him on my way to the bathroom. As I pass by him, he takes the chance to whisper, \"Let me know if you need help soaping your back.\"\n\nI can see, from my peripheral vision, Lil tense up on the couch. Anger dominates me so suddenly, I start seeing red. \"Oh, yeah?\" My smile is seductive. I take in a breath, close my hands around my mug and refill it with hot coffee.\n\n\"If you want.\" The cocky curve of his mouth insinuates he actually believes I would accept his offer.\n\n\"Here's what want, Marky.\" I lean in, put my lips near his ear and say, \"I want you to go fuck yourself, you jerk!\" And I spill hot coffee all over the front of his expensive khaki pants.\n\n\"Fuck!\" He pushes past me in a blur, rushing to the sink where he splashes cold water on his groin while calling me every sexist name under the sky. \"You fucking bitch!\"\n\nLil guffaws. Mallory even meows. Victorious, I laugh my ass off. \"Oh, Mark. I'm so sorry!\" Asshole. He had it coming. \"How clumsy of me. I hope I haven't burned your weenie penis.\"\n\nHe turns to me, face so red he resembles a tomato. \"Your frigid little cunt.\" He spits, coming at me. I don't even flinch.\n\n\"Mark?\" Mel calls from her room. He freezes, but his eyes on me are homicidal.\n\nI lift a brow, daring him to touch me. \"Your fianc\u00e9e is calling.\"\n\nHe points a finger at me. It's an effort not to bite it off. \"You're going to get it one day, Pearl,\" he threatens.\n\nI take a step closer until his finger hits my sternum. \"I can hardly wait, Marky.\"\n\nLil appears by side, steading hands on my shoulders. With a last glare at me, Mark backs away and leaves the kitchen, still cursing. Even when he's gone I don't relax. \"Pearl, you have to be careful,\" Lil warns me, worried.\n\nIf I have to be careful, what about Mel? She might not be the nicest girl I know, but not even she deserves that pitiful excuse for a man. \"I can handle idiots like him. I grew up around them,\" I tell Lil, not daring to admit I'm actually afraid, deep down.\n\n***\n\nI STACK the colorful crayon masterpieces my new pupils hanged on my classroom walls in Meet the Teacher Day into a neat pile on my desk. I've got a collection of ordinary pieces of white paper transformed into amazing works of art by that wonderful imagination only children have.\n\nKids are my spiritual animals. They come in all shapes and sizes, boisterous and brutally honest. Most days at work I have so much fun I go home with a bellyache from laughing so hard.\n\nI'm distracted, counting the drawings, when two knocks on the door announce principal Isherwood's arrival. She's a stern old English woman whose gaunt face displays her perpetual unhappiness with life. Most of the time, she scares the kids. In their little colorful heads, she's a wicked witch. I secretly think she likes me -a little bit.\n\n\"Miss Jones,\" she says in greeting. I jump to my feet. Her voice throws me years back in time, to that little girl who used to get in trouble in school. Principal Isherwood's shrewd eyes inspect me from head to toes. I'm wearing my Special Meet the Teacher Day Outfit; a red polka dot dress, shiny oxford shoes and hair arranged in two puffy Mickey buns. I study her countenance, searching for any signs of disapproval. She hardly shows any emotions by way of facial expressions though. \"We have a parent who couldn't be here earlier,\" she says in her flat tone. \"Is it a problem for you to talk to him now?\"\n\nThere's a retarder every year. That kind of parent who periodically drops their kid off fifteen minutes past the time. The principal rarely forgives their tardiness, which is why I think it strange this particular one should be getting special treatment. \"It's no problem, principal Isherwood. Send him in, please.\"\n\nShe's gone for two seconds before she brings the tardy parent in. As he walks into my classroom it takes less than a minute for my brain to process the information that I know him.\n\nI've seen those enviable high-angled cheekbones, that square jaw and those deep set dark eyes before. My brain does me the favor of reminding me that the last time I saw that perfect combination of facial features I was being fucked to within an inch of my life up against a nightclub's bathroom wall under morally dubious red lights. Now he's here. In my classroom. A goddamnparent. \n\nMy jaw drops. I blink in slow motion and have the sense to shut my mouth before I start drooling. \"Julian?!\"\n\nHe looks right at me, at my core, where my heart beats to pump blood through my body. That is all it takes for my brain to release a storm of adrenaline that has my cognitive functions going into disarray. At first, his face is blank, then recognition hits him. I don't know how I expect him to react, but I don't anticipate such of large display of teeth as his mouth curves up. His eyes are reduced to two half-moon chinks, the telltale wrinkles of a genuine smile like starburst radiating from their corners. I'm almost fooled into thinking he seems happy to see me. Almost. If only the humiliation he put me through weren't still as fresh as a daisy. \n\n\"Pearl?\" It's his husky voice. It's him. He sounds surprised to see me. Happy surprised. He's got be kidding me with this shit...\n\n\"Oh! Miss Jones, you know Mr. Song?\" Principal Isherwood is still there by the door. I'd momentarily forgotten about her.\n\n\"Mr. Song?\" I turn my face her direction, but I can't tear my eyes away from Julian's. \"Yes,\" I manage to mumble, dumbfounded.\n\n\"What a coincidence,\" my boss says, fishing for an explanation. I'm suddenly aware of how much trouble I could be in if my history with Julian ever becomes public knowledge.\n\nJulian is staring at me, a stupid grin plastered to his mouth, one inconspicuous straight brow up in challenge, daring me to come up with an excuse for our acquaintance. I can see it in his face like a movie projection; he's thinking of those things we did and said to each other, too. ",
        "\"Hey, principal Isherwood, Mr. Song and I met at a club where he used to fuck me in bathroom stalls every Saturday night.\" Of course I would lose both my job and dignity if I ever told her that. \n\nI will a cleave on the ground to appear, big enough that it drags me down onto the earth's lava core so I don't have to be here right now. \"It's...Ah...We...\" Fuck. What do I say? Think, Pearl. Think, think, think. \n\n\"College,\" Julian blurts. \n\nI gape at him. For a second there, my eyeballs are in serious risk of bulging out of their sockets. I shake my head at him, panicking. He gives me an elusive nod of encouragement that is barely missed by Mrs. Isherwood. Given the situation we're in, I have to admit his excuse although shit, it's still better than anything I'm presently able to conjure up. \"Yes! We met in college. Ages ago,\" I say, waving a dismissive hand like I didn't just lie to my principal's face.\n\nPrincipal Isherwood's eyes flicker from Julian to me, no doubt seeing us for the bullshitters we are. \"I see,\" she mutters. I don't know what she sees, yet I would bet my very last dime it's more than she's letting on. She turns her eyes on Julian. \"Mr. Song, Miss Jones will answer any questions you have in regards to Hannah's education. If you need anything I'll be in my office.\" She presents me with one of her warning glares, closes the door behind her, and then I'm alone with him.\n\nI know his full name now. Song. Julian Song.\n\nHe is standing a mere few feet from me and he looks good. Really, really fine. Even more handsome in real life size than in the memory I have of him. A memory colored by neon, throbbing lights. I've never seen him in broad daylight. Only in that dimly illuminated night club. \n\nWhen I met him, he had his hair in a crew cut. Now it is longer, in waves that have a dark blue sheen to them I couldn't have noticed before. He's taller than I remembered. God, and he's got such great skin too. All golden and smooth, without a single blemish. No wonder he felt so soft and firm, and fuck, I'm thinking about what touching him is like. A rush of warmth crawls up my neck as an unwanted recollection plays in my mind; my sequin skirt all bunched up around my waist, his fingers digging into my thighs, the force of his hips making me gasp...\n\nThe sound of his chuckle shatters my delirium. \"Look at you, my Pearl,\" he says, licking his upper lip. \"Sweet little teacher by day, sexy little vixen by night. Who would've guessed it?\"\n\nI remember now. I know him and I kind of hate him.\n\nIt makes my blood boil just how familiar he dares be. My Pearl. How dare he call me that after what he pulled on me? I want to kick him in the balls so bad I taste something bitter in my mouth. \"It's Miss Jones to you, Mr. Song, not Pearl,\" I warn him, in what I hope is a deadly serious warning.\n\n\"Miss Jones,\" he repeats, in that same tone he used to whisper obscenities in my ear, eyes traveling the length of me with open appreciation. My traitor of a body responds to it with a shiver. Hopefully, he mistakes it for pure hatred. \"I can't believe I found you,\" he says.\n\n\"Wow.\" I'm so taken aback my nostrils flare a little. \"Found me? Are you fucking kidding me?\"\n\nHe puts a grin on I remember seeing just as he was about to eat me until I was woozy from it. \"You're Hannah's new teacher.\" He shakes a disbelieving head, completely overlooking my acridness.\n\nHannah.\n\nHe has a child. A daughter. \"Oh my god, are you married!?\" I sound horrified. I do a frantic search of his hands for a ring denoting his commitment to another woman. It's bad enough that I fucked him, but if I fucked a married man with a child I am for sure going to hell.\n\nHe raises his eyebrows, seemingly amused by my panic. \"No, Pearl, I'm not married.\"\n\nMy shoulders sag with relief. I don't even reprimand him for using my name with such intimacy. Instead, I scrape together the little information I have. He's got a daughter around the age of six. He isn't married. Is he a single parent? What about the mother? What does he even do for a living to support a child? I know next to nothing about Julian.\n\nAs I realize what I'm doing, I rebuke myself for it. I shouldn't care a thing for his personal life. It's not my problem. He's a parent. Also, his being here has nothing to do with a sudden desire to see me. He's here to talk about his child's education, not to reminisce our past encounters.\n\nI straighten my back, turning on professional mode. \"As principal Isherwood must have already informed you, this year is bound to be a challenge for Hannah. Kids are used to the routine they had in kindergarten, but here things are little more dynamic. I'll explain to you how this school year is going to progress. Did you bring Hannah with you, Mr. Song?\"\n\nMy formal use of his name puts a cocky half-smile in his mouth. It's infuriating. \"No, she's with her mother.\" \n\nI pretend not to pick up on that particular detail. \"You'll find every information you need here,\" I continue, handing him the school's official schedule. \"Drop off time is 8h15 and pick time is 14h15. We don't tolerate tardiness, Mr. Song. So be here in time, if you can manage.\" I don't control my acerbic tone; I just can't help it. It's the being around him.\n\n\"Pearl. Look at me.\" My name on his lips makes me react to him in a way I know I shouldn't. It's like a command I can't fight. I glance up at him, chin up, because I will not keep my head down. \"I'm sorry I didn't come,\" he says, softly.\n\nI wanted to hear him say that. I'm sorry. For weeks I resented him. Then once my initial anger faded, all I wanted was an explanation, an excuse. I wanted him to call me, to tell me why he hadn't shown to our date, to say he was sorry he kept me waiting there, planted to that chair, all by myself, waiting and waiting and waiting for him. The people in the diner whispering to each other \"That idiot of a woman is waiting for a man who's never coming\", until I couldn't take it anymore and rushed out of there before I exploded. I see myself back there and relive the mortification I felt that day. When I was torn between my anger towards him and the anger I felt towards myself for caring so much.\n\n\"I wasn't there.\" I lie. I don't know why. Out of spite, probably.\n\n\"You were. I went there the next day.\" He takes a careful step my direction. I don't move. \"I described you and the waiter told me you'd been there. I even left my number so they'd call me in case you ever came back.\" His voice is so tender I'm tempted into believing him. He's good at that. Tempting me. \"I looked for you, my Pearl,\" he says, and only then do I register he's close enough that I can feel his warm breath on my face.\n\nI take a step back and my ass bumps on my desk, my fingers curl around its edge. \"Stop calling me my Pearl. I'm not yours. You barely know me.\"\n\nSeeing I'm trapped, he comes closer. Every little hair covering my arms stands up in anticipation. My body only knows one purpose for his nearness. \"I know you better than you think. You really believe I purposefully didn't show? Pearl, I've be-\"\n\n\"I don't care, Julian,\" I interrupt him. He's too close. I can smell his cologne. I can't think straight. I hate that, even as I tell myself I detest him, I'm still so affected by his presence a familiar longing tugs at my center.\n\nHis eyes widen at my harshness. \"I can explain.\"\n\n\"I don't need an explanation. I'm your daughter's teacher now. That's how you know me. That's all you know about me. Do you understand?\"\n\n\"We'll see each other every day now. You can't pretend nothing happened between us.\"\n\n\"Wanna bet?\"\n\nWe hold each other's gazes across the classroom. The patch of skin in between his perfect eyebrows crumples. He opens his mouth to speak, I hold myself in anticipation, but then he presses his lips into a hard line.\n\nI let out a sigh, relieved I don't have to waste time countering any of his words. My pulse is hammering in my throat. I need to find an excuse to make him leave. I open the drawer on my desk and pull out a sheet of paper. \"Here's a checklist with everything you need for Hannah's first day,\" I say. He reaches for the paper and his fingers brush mine. It lasts only a second, the contact as sudden as an electric discharge. I pull my hand away immediately. \"If you need anything school related you can contact me.\"\n\nJulian makes a quick inspection of the words printed on paper. \"Your number isn't here. I can't contact you if I don't have your contact info.\"\n\nI don't know if he's trying to be funny or plain sadistic. \"My email is right there. And you already have my number, Julian.\" And I still have his.\n\n\"I lost it,\" he says, already taking his phone out.\n\nI scoff, skeptical. \"You lost it?\"\n\n\"Yes.\" He looks up at me. \"I searched for you, Pearl. I really did.\" His eyes give me the impression of honesty, as they always did. I want to believe that the charming guy I met at the club isn't just an asshole who would stand me up without even a mere text as means of explanation.\n\nI give him my number, not half as reluctant as I think I should be. \"It's only for school emergencies,\" I say, feeling like that needs to be made crystal clear.\n\nJulian keeps his eyes on his phone's screen.\n\n\"You may leave now, Mr. Song.\" I invite him out. I need him out so I can breathe in peace.\n\nHe shakes his head, fingers typing fast. \"If you want to avoid me, fine. But it's not going to be easy,\" he says and a ping!, signaling a text, comes from my phone. He gives his back to me and, before walking out, he turns and smiles that mischievous curl of lips responsible for dropping my panties almost a year ago. \"Love the hairdo, by the way.\" \n\nOnce the door shuts behind him I take in a deep breath. But the air still smells like him.\n\nIn my phone there's a text from him.\n\nI MISSED YOU, MY BLACK PEARL.\n\n***\n\nTHE POOR porcelain plate I vigorously rub the sponge on is the recipient for my still lingering fury. I imagine Julian's face on it. It's actually a blessing that Cami is against dishwashing machines -something about them being hazardous to the environment, she says. That way I have something to do every night before bed.\n\n\"That guy who stood you up?\" Lil asks, loudly expressing her incredulity. \n\n\"He has a child?\" Cami exclaims, clearly confounded by the idea.\n\n\"Yeah. Hannah. She's 6,\" I say, answering both questions.\n\nIt was an unsuspecting Saturday night, I was shamelessly shaking my ass on the dancefloor of my favorite club when I spotted Julian by the bar, ogling me. Our eyes met, he smiled at me and bam! I instantly decided I would drop my panties for him. Blame that smile. Definitely a panty dropping smile. The cutest smile ever. There were dimples, grooves and ears going up involved.\n\nAfter I met Julian, I came home jumping up and down like a happy little bunny, telling the girls about what a funny, hot and smart guy I'd stumbled upon at the club. A few weeks later, after a succession of Saturday nights meeting him at that same club, I was telling my friends I'd discovered Julian was an asshole too. \n\n\"You didn't know about the kid?\" Even Melanie is suddenly interested in the affairs of my life, dividing her attention between my drama with Julian and the painting of her toenails.\n\nI don't take my eyes off my working fingers, already red and pruney under the sudsy water. \"I knew nothing about him, except for his name and what a damn good dick he has.\"\n\n\"Is it big?\" Cami asks, blue eyes large with blatant curiosity.\n\n\"Oh yeah.\" The image leaps to my mind as if summoned. It creates a single pulse that warms my very core.\n\n\"Didn't you say he was Asian...?\" Melanie implies, earning scowls from Lil, Cami and I.\n\n\"Mel, that's kind of racist,\" Cami interjects.\n\nI'm still too pissed at Julian to be bitchy to Melanie. Even though her comment is definitely racist. She doesn't know better, poor thing. She's a white suburban girl whose first non-white friend is me and she doesn't even like me that much. \"It is big, Mel,\" I tell her. \"It's pretty and it's big. Did I say big already\"?\n\nLil makes a face, obviously trying to picture what Julian's dick looks like. \"Pretty?\" \n\n\"State of the art,\" I say, because I remember it clearly, and damn me if it wasn't the most well shaped penis God has ever created. \"I've never seen a dick so pretty, actually. Not even in porn. And he works it like a pro.\" I might be wanting to murder Julian, but I can't lie. I can say he is an asshole with full authority, but I can't deny he was the most amazing fuck ever.\n\n\"I remember you liked him,\" Lil says, catching my ears.\n\nI roll my eyes. \"I was smitten with him, Liliane. It doesn't mean I liked him. I barely even knew him. Hell, for all I know, he might have lied about the little he told me of himself!\" I protest throwing my wet hands up and sending droplets of water into Lil's face. Her answering look makes it clear she doesn't believe my bullshit for a second. She wants to convert me into a goofball of romanticism like herself. \"Okay, I liked him a lot,\" I admit, because there is no point in lying to her. She knows my colors. \"But he ruined everything after he disappeared without a word.\"\n\nCami takes a gulp out of one of the beer bottles she keeps stocked in the bottom of the fridge. \"You had a weird Last Tango in Paris thing going on with this guy. Minus the butter scene,\" she muses in that way of hers that makes you wonder whether she's talking to you or to herself. \"If you liked each other you should've dated like normal people. You know, go out for coffee, talk about your respective lives instead of no names allowed and obscure sex in dirty bathroom stalls.\"\n\n\"I knew his name, Cam.\" And he most certainly knew mine. My Black Pearl, he used to call me. \"I don't know what I was thinking. I liked how mysterious the whole thing was. It made it all so...fun.\" Saying it out loud felt stupid, although at the time it was exhilarating to be with him, to touch him, meet him every weekend again and again and every time have it feel like the first time. I could imagine he was anyone, anything. I could pretend to be more than I was. Sexier, braver, prettier. I could ask him for anything I wanted and he'd give it to me.\n\n\"You liked him. You said he got you to believe in magical things like the G-spot, squirting and unicorns,\" she arguments. \"That was a great slutty phase for you too. Every girl needs a slutty phase.\"\n\nA plate slips from my fumbling hands and almost shatters into a dozen pieces on the sink. \"I told you that under the influence of alcohol, Camille! And,\" I add, plate saved, \"I have a slutty phase almost every weekend.\"\n\nMelanie gasps, loudly. \"Squirting!? Who is this guy? Santa Claus?\"\n\nI throw her a glance over my shoulder. \"He's an asshole.\"\n\n\"He said he lost your number,\" Lil cuts in. \"Maybe if you let him explain himself he'll have a good reason for not meeting you that day.\"\n\nI tip my head back, cutting her a sideways warning glance. We had that conversation a dozen times. She was the one stroking my hair while I cried like an idiot after I came home from the date Julian never showed up to. \"Lil.\"\n\n\"Pearl, your pride never got you anything.\"\n\nI don't want to argue with Lil, which is the main reason why I say nothing. My pride isn't what's keeping me from calling him. I did call him after he stood me up. Every call landing on voicemail. He never answered. Never replied to any of my texts. Finally, I decided I had had enough of being an idiot and stopped bothering him. I have no reason to run after him now, because I certainly don't think he looks even hotter than when I first met him. \n\n\"Call him,\" Cami suggests. \"A man who can tickle your whipple is always a nice luxury.\"\n\n\"What?\" Lil and I both ask.\n\n\"A man who gives you the big O, meaning the screaming of obscenities accompanied by a rush of dopamine and oxytocin to your brain,\" Cami explains, all hands in the air and intellectual voice.\n\nI laugh so hard my eyes water. \"Oh, honey,\" I say, catching my breath. \"When you're born a woman, the first thing you learn about your own body is that men are not a pre-required item for the occurrence of orgasms. You know that better than anyone.\"\n\n\"True,\" Cami agrees with a little wink, \"but it's also nice to have it with company.\"\n\n\"Why are you opinionating so much anyway, you don't even like dick.\" Mel says from the couch.\n\nCami dashes Mel her heartbreaker grin. \"Yeah, but I like talking dick.\"\n\n\"Can't get it out of her mouth,\" Lil teases.\n\nI laugh at my roommates, feeling, for once, a little bit tired. I wasted a lot of my energy on imagining ripping Julian's pretty dick out of his body. \"No,\" I say, decidedly. \"Even if I liked Julian, I can't date him. He's a parent. Teachers can't get romantically involved with parents. It's one of the school policies.\" It's not really a policy. However, I'm pretty sure principal Isherwood would use the excuse of my involvement with a parent to fire my ass.\n\nCami huffs. \"You tell yourself whatever makes you feel better, but we can all see how shaken up you are by this guy, Pearly Girl\"\n\nI am. She's right. I thought I'd never see him again. Julian was that one guy, that one encounter I didn't believe in. Someone I met and instantly felt a connection with. Even if it was purely sexual at first. I liked talking to him. He didn't seem to mind that I talked too much and too fast, didn't vanished after he made me come in some dark corner of the club, didn't act like I was just an easy conquest on a Saturday night. He was the one who suggested we meet in broad daylight, over a nice meal, so we could get to know each other better. He was also the one who ditched our date and disappeared from the face of the earth like the dinosaurs did after that big comet. And yet he seemed happy to see me today. Surprise, but happy nonetheless.\n\n\"I'm shaking because I hate him,\" I say to Cami.\n\n\"Denial\" she sing-songs. \n\n\"Don't you go theorizing about this.\" Camille loves to mull over our lives, using us as lab rats for her philosophical theories.\n\n\"Whatever.\" She waves a dismissive hand my way, walking towards the couch to join Mel. Mallory immediately exchanges Mel's lap for Cami's. That cat is as fickle as they come. \"You're all riled because he affects you and a person only has the power to affect you if you give two shits about them. You like him, therefore you're pissed at him. Plus,\" she adds, \"sex is a great exercise for you, Pearly. You shouldn't waste all that stamina on cleaning this place when bouncing on his pretty big dick would sap you all the same.\"\n\n\"She's still talking dick?\" Lil winks conspiratorially at me.\n\nCami is annoying me already. She usually does when she's right. \"I can have sex with a million other people,\" I state.\n\n\"Yeah, but you like him and his pretty big dick. Okay, Lil, that was the last time I said it.\"\n\n\"Whose friend are you, Camille?\" She's trying her best to get on my nerves today.\n\n\"Yours, honey. And aren't you late for grocery shopping? You better not forget my peanut butter this time. Just because you don't like it, it doesn't mean it isn't necessary in this home.\"\n\nI groan, loudly. I hate grocery shopping week. \"Is it my turn already?\"\n\n\"It is, honey. Grocery shopping week comes for us all.\"\n\n***\n\nI WILL NEVER comprehend the undying love everyone seems to have for peanut butter. The thing is half fat, a quarter carbs and some murderous little nut. I stare, clueless, at the various jars lined, side by side, on the supermarket shelf. The variety of brands out there is truly a conundrum to me. \n\n\"The trick is to choose the one with the most colorful label.\" I whip around at the familiar voice.\n\nJulian.\n\nHe's right behind me, smiling like a fiend. Damn him. He looks so handsome it's offensive. He's got a dark shirt on, sleeves rolled up to his elbows exposing forearms striated by those bulging veins I find so damn attractive. I have not the slightest idea what he does for a living, but I will confess that I've fantasized about him chopping wood all shirtless and sweaty. I mean, those arm muscles are no joke. ",
        "\"I don't see you for months and now it's twice in one day? Must be destiny,\" he says, leaning on the handle of his shopping cart. \n\nI roll my eyes. \"Must be a punishment from God.\" \n\n\"Oh!\" He snaps his fingers, grinning wickedly. \"I just remembered why I like you! You're sassy! It's a fetish of mine. I'm trying to get over it.\" He sucks his bottom lip between his teeth, his eyes wandering lustfully over my barely covered thighs.\n\nI know I shouldn't give a damn about it, but I wish, for only two secret seconds, that I had worn something nicer than battered old shorts and a T-shirt I already owned when I was 18. I should be in something sexier. Something that would make him think Damn, she's so hot, why did I leave her all alone at that diner again? Ah that's right, because I'm an ASSHOLE.\n\nI roll my shoulders to disguise the instinctual shiver that runs through me. \"Fuck you, Julian.\"\n\n\"I bet you'd like that, wouldn't you?\" He brushes a long finger under his bottom lip and I inwardly curse myself for taking notice of the lusciousness of his mouth. I shouldn't remember what it feels like to kiss him. I do, though.\n\n\"If you ever let me that close to you again, Julian, I will rip your dick off your body and fucking feed it to my cat.\"\n\n\"You kiss children with this dirty mouth? I shouldn't be surprised, considering what it can do.\" He looks down at his crotch, suggestively.\n\nI clench my teeth so hard, my jaw hurts. Barely a minute has passed and he's managed to provoke me already. \"Shut up,\" I hiss.\n\nHe smirks. \"Shut me up yourself.\"\n\nI groan in frustration. Julian just waltzed back into my life only this morning and it's already so easy for him to get under my skin. He knows just which wounds to poke to get a reaction from me. And I, never one to rein in my temper, give him exactly what he wants. I'm the mouse and he's the cat. That's just the reason why I liked him so much. He kept me on my toes playing this ping-pong banter game. Right now, he honestly could develop cancer from the radioactive waves of anger I'm sending his direction. \"Ugh! Get the hell out of my face, Julian!\"\n\n\"You can't kick me out of the supermarket, Pearl,\" he says, way too amused by my exasperation.\n\n\"No, but can kick you,\" I threaten and, before he can say anything else, I push my shopping cart forward. I don't even have to glance over my shoulder to know he's following me. He starts laughing. Loudly. I whirl around. \"What the fuck is so funny, you maniac?\"\n\nHe throws his head back, laughter bubbling out of him. \"You still like me!\"\n\nI puff out an incredulous breath. \"Have you gone mad?\"\n\nHis eyes are alight with mischief. \"You wouldn't be so furious if you didn't.\"\n\nI want to throw one of the various tampons boxes I have in my cart at his face. \"You're delusional, buddy.\"\n\n\"Right is what I am.\"\n\nWhat an unimaginable dickhead, so full of himself he is. I try fleeing again, pushing my cart farther away from his, but he catches up with me, his own cart whirling around mine until he's by my side. I scowl at his smug face and fasten my pace. I turn, out of one isle and into another. Julian follows. He's starting to really piss me off and I'm starting to have fun, so I rush, feet trotting along the canned goods isle like I can actually lose him. Then I'm suddenly going faster and faster until we're shopping cart racing inside the supermarket. The people we pass by throw us disapproving glances I disregard. I make a sharp left and almost bump my cart into a lady's. I halt, panting.\n\n\"Watch it!\" She berates me, giving me the ugliest scowl I've ever seen.\n\nThe screeching of Julian's wheels coming to a stop behind me earns him another scowl from the lady. I'm dying to take a look at his face, but I don't dare revert my eyes from the scowling woman. I apologize profusely to her and rush to the register. I hear her cursing Julian and him telling her \"I'm so sorry\" three times in a row.\n\nI get to the register and thankfully there isn't a line. There's no sign of Julian either. Out on the parking lot, my car only a few feet away, I almost think I'm rid of him when I hear footsteps. I turn to peek over my shoulder to find Julian coming my way. Two brown grocery bags on his arms. \"For the love of God! Leave me alone, please?\" I've had enough of him for one day.\n\nHe stops. \"I swear that's my truck,\" he points to the blue Chevy truck parked right beside my old car. My unbelieving eyes go back and forth between my red Prius and his shiny blue truck. In the ginormous parking lot, with all the space available for parking, Julian's car is in the spot next to mine. \"Pearl, can we talk, please?\" He asks, setting his bags down.\n\nPutting on my best bitch face, I ignore him and proceed to unload my grocery bags into my car's trunk. I'm being irrational, yes. I know I should just listen to him; to the explanation I'm dying to hear. It just so happens that I'm burdened by that inherent human flaw called pride. Add some arrogance and stubbornness to that as well and that's me all figured out. Being a bitch is fun I don't ever pass on.\n\n\"Pearl, please. I only need a minute.\" Julian's hand closes gently around my right wrist. I freeze like a popsicle. His hand is roughened, thick skinned. I'd forgotten that about him. I whirl to face him. \"Hear me out, please,\" he pleads, breathing unevenly. Our eyes meet, I concentrate on the spot where his skin is in contact with mine. His hold on me is gentle, not demanding anything. My heart, for a reason I don't care to examine, beats so fast I swear my bones are vibrating. \"If I didn't give a shit, why would I bother trying to explain myself to you?\"\n\n\"As if I'd know what twisted morals motivate you,\" I spit, voice low.\n\nHis brows gather together forming a V of crumpled skin on the center of his forehead. I remember thinking, the first time I ever saw him, that he had the most perfect eyebrows I've ever seen. Thick and straight, drawn on his face like two angular slashes of charcoal. It's a trait that gives his hooded eyes a mystery that drew me to him once upon a Saturday night. \n\nJulian mouth parts. His eyes drop to my lips. He's so damn close I need this staring into each other's eyes thing to stop before something that shouldn't happen happens. I clear my throat and yank my arm from his hold. \"Okay, Julian. Explain yourself,\" I say, crossing my arms over my chest in a protective manner.\n\nHis annoyingly perfect brows rise. \"Really?\"\n\n\"Yeah, really. Tell me why you stood me up and then disappeared from the face of the earth.\"\n\n\"Okay Pearl, listen,\" he says, licking his lips. \"My daughter, Hannah, got sick.\"\n\n\"Julian, you better not be using your child as an excuse for-\"\n\n\"My child was sick, Pearl\" he interposes, harshly enough that I instantly regret what I just said. \"Last Summer, while she was staying with her mother, I got a call saying she was in the hospital with a burning fever in the early stages of pneumonia. Her mother said she wouldn't stop calling for me.\" He gives me a pleading look, but I can already see he's being sincere. No way he could fake the shadow of agony that's settled on the lines of his face at the mere memory of his daughter being sick. \"I'm sorry I didn't come to you, Pearl. I wish I had. But my daughter needed me that night. She is the most important thing in the world to me.\"\n\nI believe him. Mostly because I want to believe him, I suspect. Also, Julian is one of those people with one of those faces. So frank, you can smell the candor on him from a mile away. I've met enough parents throughout my teaching years to tell the good from the bad and it is clear Julian is the outstandingly good kind. \n\nSo he didn't stand me up because he is a jerk. Great. I feel like the world's biggest idiot now. While I was sitting at that diner wishing he choked in his own saliva, Julian was in a hospital room watching his little girl burn with fever. \"You could have called me to say you wouldn't make it. Texted, at least,\" I mumble without meeting his gaze, ashamed of all the bitterness that accompanied the random thoughts I occasionally had of him.\n\n\"I told you. I lost my phone. I left the farm in such a hurry I must have dropped it somewhere. I lost all my contacts.\"\n\nA weird kind of relief sediments in me. At least now I know I am not the reason he didn't show up for our date. \"Is she okay now? Hannah?\"\n\n\"She's perfect,\" he says. He brightens up like the sun. He really must be a good dad. Hannah is a lucky girl if the mention of her is enough to put such a shine on him.\n\nI'm still wallowing in my own shame when his words hit me. \"What do you mean you left the farm?\"\n\n\"I have a farm just outside of town. I'm a vet.\"\n\nI arch an astonished brow. \"You're a farm boy?\" Somehow, I have trouble imagining him tending to cows and pigs and horses. Imagining him chopping wood with no shirt on is easy, though. That would explain the strong arms and rough hands. \n\nA warm smile stretches across his face. The kind that puts dimples on his cheeks. \"Have been all my life,\" he says.\n\nI can't let the chance to make the joke pass me by. \"Fuck a lot of sheep?\"\n\n\"Only the fluffy ones,\" he says with a grin.\n\nMy cheeks inflate. I try to swallow back the bubbles of laughter but they burst out of me. I laugh so hard I almost howl. It comes from deep within my belly. \"I made you laugh! Finally!\" He shows me his trademark lopsided smile.\n\nThat little part of me that is a sucker for that smile of his is completely convinced. He might not be an asshole after all. He stood me up because his daughter was sick; which proves she is his priority, as she should be. He didn't call me because he lost his phone; which is something that could happen to the best of us. And I believe him because here's the thing about Julian: I like him. I've liked him a lot since I met him. He is a guy I met randomly and had inconsequential sex with that left me wishing I'd see again.\n\n\"Pearl, I really wanted to have a date with you at that diner,\" he says, eyes softening. \"I drove there the very next day and I even left my number with a waitress so she'd call me if she ever served a very beautiful, short tempered black woman. She's always asking me if I've found you yet whenever I pop by. Now I can say I have.\"\n\n\"I bet this waitress thinks you're a real romantic.\"\n\nHis mouth twitches. \"I can be, if you like this sort of thing.\"\n\nI bite my lip to hide how much I like the fact Julian always seems to know what to say. \"I thought you'd have a really bad excuse and I would have to give you shit for it, but I believe you,\" I fess up, adding sincerely \"I'm sorry I've been such a bitch. And I'm glad Hannah is okay.\"\n\n\"Good,\" he says. \n\nWe trade smiles. A metaphorical handshake that settles things between us. Julian explained himself away. I accepted, and believed, his explanation. The second I loose my grip in my stubborn resentment of him, that repressed desire to figure him out comes rushing back. I take a position, inclined against my car, that says I'm super comfortable right where I am and I don't want to leave yet, so let's talk some more. \"So,\" I begin. \"You're a vet, uh?\"\n\n\"I am, yeah,\" he says, running a hand over his jet black hair. \"And you're an elementary school teacher.\"\n\n\"Yep. A very good one, I should say.\"\n\n\"Oh, I hope so. As a concerned parent who's interested in his kid's education, I'll be keeping a close eye on you, Miss Jones.\" \n\nI suck in a lip and push myself off my car, out of the pool of light I'm under. \"I think I might like that, Mr. Song,\" I say, stopping by his side, just outside the lamplight's reach. \"Having your eyes on me, I mean.\" For the moment, my motto is dare to be daring.\n\nI put my hands behind my back, on the cool surface of his trucks' door, in an attempt to control the willingness to touch moving my fingertips. Julian takes a step closer, then another, until we're virtually nose to nose. My nipples become instantly hard. \"You know,\" he says, \"sometimes you would invade my thoughts, my Black Pearl.\" Four out of five idiots try to call me that. Only in Julian's rasping voice does it send a shiver racing down my spine.\n\nA few minutes ago I was ready to kick him in the balls. Now, for my all my hurt pride, there is little I can do to resist him. He's under my skin. He's been living there since my eyes fell on him for the first time. Back when we used to meet in that club, I behaved almost as if I were someone else. I told him what I wanted from him without any reserve. I let him hear desires no other man ever knew I had. \n\nHe leans in and I shiver in anticipation of his hot breath caressing my ear. I'm hardly breathing. \"You know you missed me,\" he says.\n\nI splay my hands on his chest, giving in to an ache to feel him. It's all warmth and firmness under his shirt. \"You wish,\" I protest in a weak and unconvincing voice. \n\nAn assuming smile appears on those utterly kissable lips of his. \"I know you missed me, too.\"\n\nI press my thighs together. I'm colder and hotter at the same time. Brimming with a desire to kiss him. I hate it. I want to control it, and it drives me mad that I can't. I find myself trapped by Julian, his tall body barely not touching mine. There's still enough space between us for air to circulate conducting heat my body tries to steal from his. \n\nHe puts his hands on each side of my hips. I'm sure he can see the frantic pulse on my throat. \"What are you doing?\" I whisper, lips trembling.\n\nHe tilts his head. I feel his breath, hot and humid, on my neck. \"Just testing a theory.\"\n\n\"And what theory is that?\"\n\nHe leans in, his lips brush my ear lobe. \"I think you like me.\"\n\nI inhale sharply, suppressing a moan. He smells fantastic. \"Get away from me, Julian,\" I tell him, but my hands are contradictory fists on his shirt, pulling him flush against me. He's hard muscles everywhere his body comes in contact with mine.\n\nHis hands slide down my sides. \"So you don't?\"\n\nI slowly let my hands slip under his shirt, to feel the gloriously strong muscles of his abdomen. He inhales a sharp breath. \"No,\" I lie.\n\nHe puts his lips to my neck. Sucks. \"Not even a little bit?\" \n\nI squirm, arching my body forward, seeking his. \"No.\"\n\nHis palm brushes the inside of my thighs. The heat of his hands pierces the fabric of my shorts and I feel it there. \"You're not even wet for me right now?\"\n\nI'm soaking wet. \"Dry as a desert.\"\n\n\"Yeah?\" He murmurs, as his fingers slide up. My shorts are loose enough that he can sneak a finger right where the fabric of my panties is dampest. He brushes a knuckle over the that damp spot, coaxing my legs apart.\n\nI can't speak so I nod, gasping. I'm conflicted between slapping him and kissing him. His pulls my panties to the side, only an inch from touching me where I want him most. I grab his wrist to stop him, delaying my own gratification. \n\nHe sucks on my ear lobe before saying, \"I haven't forgotten the things you whispered to me. Especially when you said you loved it when I touched you...\" his finger moves to meet the moisture. \"...here.\"\n\nI prove him right. I'm like butter being melted by his warm hands. A helpless little whimper escapes me. \"Shit.\" I bite my lip hard so I don't moan out loud.\n\n\"That's my Pearl, right there.\" Julian might not know me. But he knows how I like it. He slides his finger up and down, applying pressure just the right way, making my clit pulse in a plea for more. It feels amazing. Right at the center of me. I wiggle, so good it is. At the same time, it's frustrating. I want more than I can have. I want skin on skin. I don't want him to stop, ever. I want him to keep touching me. I want him to kiss me and I want him to fuck me right there against his car.\n\nI want him just as much as I did the first time I saw him. It's the unexplainable power he exerts over me. I claw at his back, biting his neck so hard he growls. He pushes his finger a little further, inside. My body acts on its own, tightening around his finger, still wanting more. I let out a small cry. The victory stamped on his face makes want to slap him. \n\n\"So you don't want me, uh?\"\n\nA little wicked smile moves my lips. \"No.\"\n\nAll of a sudden, he takes his hand away and steps back. I almost slide down to the floor without the support of his body. \"If you say so,\" he says, and puts two fingers coated with my lust for him inside his mouth. He sucks on those fingers so deliberately slowly I groan. His tongue darts out, licking his lips. Dear God, do I want to suck on those lips too. Julian casually sticks his hands in his pockets, watching me with the most devilishly sexy look on his face. \n\nI'm left standing on the edge of orgasm, pulsing and wet. Mouth still agape in anticipation of a satisfaction that never came. \"You...asshole.\"\n\n\"Asshole? You're into anal? We could try that too. Let's just climb in the back of the truck. I think I might even have some lube in the glove compartment...\"\n\n\"God, you're unbelievable! Don't you ever shut up, Julian?\"\n\n\"You could find some other uses for my mouth, if you wanted...\" \n\n\"Ugh, damn you. You're such a teasing son of a bitch.\"\n\n\"Teasing implies I don't intend on satisfying you,\" he says, all smugness. \"And believe me when I say I mean to satisfy you. You need only ask.\"\n\nI scoff. \"Your actions contradict your words.\"\n\n\"You need only ask, My Pearl,\" he repeats. \n\nThe thought of being satisfied by Julian makes something cold and wonderful coil down my belly button. I want to ask him to kiss me. I want to feel his tongue in my mouth, his strong hands force me into kissing him harder so that, later, my lips will be flushed and swollen. Rather than asking him for it though, I get what I want. Grabbing the front of his shirt, I pull his mouth to mine and kiss him.\n\nJulian is paralyzed by shock for only a millisecond before he is kissing me back. His fingers slide around my neck, under my curls, up into my hair. A deep groan sends a vibration through him. He sneaks his hands down to my ass, grapples hands full of it, and draws me against his erection. \n\nI grip his hair and it's like warm silk slipping through my fingers. A rush of lust shoots through my veins, pooling on my pulsing clit. I press a hand down to him. He's hard and demanding against his jeans. I can almost feel the throbbing of his desire. I brush my hand up and down the length marking his pants. He makes a sound that is a rumble in his chest. It's insane how it turns me on. My mouth leaves his to suck on his ear lobe. My teeth scrape down his neck. I love his sharp intakes of breath; the little hissing sounds he makes in response to my tongue licking the spot where I bit him earlier.\n\nI fucking missed kissing him. The way it felt to kiss him. I can throw myself into it. Be as hungry and as wild as I want to be knowing he will encourage me to pursue my satisfaction. I claw at his shoulders, trying to pull him impossibly close to me. Julian's leg in between my thighs creates a heavenly friction that has me moaning his name like a queen in heat.\n\n\"Oh that's right, you're a loud moaner,\" he whispers against my moist lips.\n\n\"Shut up and touch me.\"\n\n\"Where?\"\n\n\"You remember where,\" I breath against his smirk.\n\nHe tut-tutts. \"I don't know. It's been a while. You'll have to be more specific. There's a whole lot of you I could touch.\" He makes his point by squeezing my ass. \"Ask me, my Pearl. Ask me.\"\n\n\"Fuck, Julian, touch my-\"\n\n\"Hey, you two!\" Julian and I both jump away from each other as though one of us is carrying a contagious disease. The Scowling Lady from the supermarket is by the line of parked cars across from us. \"Get a room before I call security!\" she yells.\n\nJust like that I am panicking. \"Shit! Julian, if she calls security we're fucked. I'm a fucking school teacher! I can't go to jail for indecent behavior at the supermarket parking lot!\" I can see my whole life coming apart all because I couldn't keep my panties still.",
        "\"Calm down. I'll fix this,\" Julian whispers to me. He advances towards the lady, stopping before he gets too close. \"We're sorry, Ma'am. We didn't mean any disrespect. My friend and I were just saying goodbye. We'll be leaving in a minute. No need to call security over two friends showing a little harmless affection,\" he tells the woman, using one of his charming smiles. Even from afar, I can see her suspicious expression. She doesn't buy into his bullshit at all. That's it; I'm spending the night in jail. \n\n\"You be gone, then,\" she says, after a while.\n\nJulian turns to throw me a wink over his shoulder. \"Thank you, Ma'am.\" \n\nI exhale pure relief. Julian and I don't dare touch each other again. He gets on with safely putting the grocery bags he'd previously set on the floor inside his car and I watch him, stealing glances at the lady. \"She is taking forever putting her groceries into her car,\" I report to him. \"No doubt making sure we don't get tangled up in one another again.\"\n\nHe comes over to me, lips curved over his teeth. \"What's with the grin?\" I ask. Before I can react, he grabs my chin and kisses me quickly.\n\n\"I told you,\" he says. \"You like me.\"\n\nI throw a nervous glance at the woman storing her never ending grocery bags. \"Asshole.\"\n\nAnother grin. \"Maybe next time.\" He climbs on his truck, rolls the window down. \"See you tomorrow, Miss Jones,\" he says, and then drives away with a honk to the Scowling Lady.\n\nI'm left standing there, with no choice but to leave myself, if only to give the poor lady parked across from me the guarantee she stopped two young people from shamelessly fucking on the supermarket parking lot.\n\nI get in my car and can't shake the feeling I'm forgetting something. Fucking Julian getting me all worked up... Oh, damn it. Camille's peanut butter. Scowling Lady's eyes follow me as I get out of my car and back into the supermarket. God forbid I'm made to explain to Camille why I forgot her peanut butter.\n\n***\n\nI SHOULDN'T have kissed him like that. \n\nI'm lying awake in bed repeating it to myself like a mantra. I shouldn't have kissed Julian. I shouldn't have let myself feel up a parent's hard-on.\n\nIt also shouldn't have felt so good to have him touch me. I shouldn't be all slippery down in my panties just by thinking about him. About how his body fit so well with mine.\n\nOf all the nights we had, there's that one I always revisit. Once, Julian finger fucked me in the crowded dancefloor amid all those people to later fuck me so damn slowly in one of the women's bathroom stalls, we had to wait for ten whole minutes before my legs could function again. \n\nAt the recollection, my hands start to wander. I remember how he squeezed my left breast that one time and my own hand is there, chasing a ghost touch. My clit is pulsing already, swollen and slick. I rub it, slowly, just like he would do with a flick of his tongue. I'm in such a state, the barest touch sets a fire in me. I was denied release last night, went to bed still wanting him and now I can't stop imagining Julian in between my legs. I try to push him away but he's in my thoughts. He grabs my thighs, keeps me in place while his mouth on me is hungrier. Wet sounds are made loud by the quietness of the morning in my room. His hair is longer now. It feels so soft when I pull it to bring his face closer to my pussy. Just one more lick of his tongue and I'm so close I think I'm going to-\n\nMy alarm clock goes off.\n\nI sit on my bed bolt upright, panting. My heart beating a million miles per hour. I run a frustrated hand over my face. \"Shit,Pearl Marie. What are you doing with your life?\" I ask myself.\n\nI have to go to work. Work where I'll see Julian again and meet his daughter. It suddenly hits me how crazy it is that I was just fantasizing about a guy who has a daughter I'll teach for a whole year.\n\nI get out of bed, shower, put on respectable clothes and drive to the school. I'm going to see Julian there and I'm going to behave accordingly. We kissed. Groped each other a little. Was it good? Shit, yes. In a I want more, please way. It still doesn't justify the fact I broke a rule I couldn't have.\n\nSchool employees are not supposed to maintain an intimate relationship with parents outside of school. It's unseemly. Which is why I am absolutely going to put a stop to this. \n\n***\n\nOutside the school I receive my new little students. Nineteen faces I already know. The only new one is Hannah Song's. Julian's daughter.\n\n8h10 in the morning I recognize his blue Chevy truck pulling in. I watch as he climbs down his truck and rounds it to open the door for Hannah. The little girl jumps down onto the sidewalk. She has dark short hair styled into two ponytails, one by each side of her head. The blue backpack Julian hands her is almost as big as she is herself.\n\nHe spots me by the school's door and waves a hand. I casually wave back and make myself think of the shape of the clouds and the color of grass and anything unrelated to how hot Julian looks in that shirt he's in.\n\nBy the corner of my eyes I watch as Hannah gestures for her Dad to get down. He kneels, eye level with her. She whispers something into his ear that earns her a bright smile from him. A heartwarming kind I've not seen before. He says something to her and she flings her small arms around his neck. He holds her for a full minute before he pulls away. Julian puts his hands up and Hannah punches each one in what I assume is a father-daughter secret code. A smile tugs at my lips. Suddenly feeling like an intruder, I avert my eyes as he takes her hand and they start my way.\n\nI don't have to fake the smile I give her when they reach me. \"Hello, Hannah,\" I say to her, crouching down to her height. \"I'm Miss Jones. I'm super glad to meet you.\" I don't offer her my hand or anything that adult.\n\nHannah eyes me warily, but I'm presented with a small smile nonetheless. She's a quiet girl, then.\n\n\"It's going to be okay, Han,\" Julian says, bending down too. \"Remember I told you Miss Jones is my friend?\" My eyes widen. He told his kid about me? Of course he would've. He must have told her because I'm her new teacher. To assuage her. \"She's really nice. You don't have to worry.\"\n\nI press my lips together so Julian doesn't see how stupidity glad I am he thinks I'm nice. I focus my attention on Hannah. Today is about her. \"I know first days are scary, Hannah, but I promise you we can make it fun,\" I tell her. She only nods. I think she's an introvert, most likely. Introverts are my favorite kind of students.\n\nJulian receives another doubtful glance from her and smiles reassuringly. \"I promise you'll like it,\" he says.\n\n\"Okay,\" Hannah says after a while, speaking for the first time in her small voice. \n\n\"When you come out I'll be right here, waiting for you.\" The girl smiles at her father signaling she's finally ready to let him go.\n\n\"Do you want to see your new classroom, Hannah?\" I offer her my hand carefully, without imposing myself on her.\n\nShe nods again, takes my hand. \"Bye, Daddy.\" \n\nJulian smiles that wonderful ears-going-up-smile of his. \"Bye, little girl. See you in a few hours.\"\n\nWe wave Julian goodbye and I take his daughter into my classroom.\n\n***\n\nI'm trying to be professional, but I can't help watching Hannah throughout the day.\n\nShe looks so much like him it's hard to guess what her mother might look like. Pointy nose, full lips, maybe. She has lips fuller than his and an upturned nose that contradicts his flat one. The eyes and the smile are his, though. When she smiles she is the spit image of Julian. Eyes two shining half-moons with the ears going up and everything. \n\nAfter their break, I ask each of the kids to introduce themselves by making a drawing of what their lives are like. I'll make one two, I promise. I draw the girls and Mallory. Hannah draws herself in a green field, a dog and three people by her side.\n\nI approach her, gingerly. \"Hey Hannah, do you want to tell me what you drew there?\" \n\nI've come to understand she answers most of my questions with nods. \"This is Daddy.\" She points to the tall figure that's Julian. Finger on the unproportionally big gray dog, she says, \"This is Fluffies, he's my best friend.\"\n\n\"And these two?\" I ask, pointing to the two figures holding hands.\n\n\"This is halmeoni, and this is hal-abeoji.\" \n\nI've seen enough Korean movies to know what she means. \"Your Grandma and Grandpa?\" A vigorous nod. I notice she didn't bother drawing her mother. \"That's really nice, Hannah. Do you want to see my drawing?\"\n\nAfter another consensual nod, I show her the drawing I made. She takes great interest in Mallory. \"This is Mallory. He's the smartest cat ever and my best friend, too.\" I tell her my cat's life story before I move to inspect the other children's drawings. By the end of the school day, Hannah's already taking to talk to the girl, Olivia, on the seat by her right.\n\n***\n\nAs he promised, Julian is outside the school waiting for Hannah when she comes out. She jumps into his open arms and immediately starts talking so fervently I start thinking she's been replaced for a different child and the one who spent six hours in my classroom is in a dungeon somewhere.\n\n\"Did you have a nice day?\" I hear Julian ask her while I'm saying goodbye to my other students.\n\n\"It was okay,\" she says. I can't contain the swell of pride inside my chest.\n\n\"That's great, Han. Fluffies is in the car waiting for you. Why don't you go make him company while I say hello to my friend Miss Jones?\"\n\n\"Yes!\"\n\n\"Bye, Hannah,\" I shout to her.\n\n\"Bye, Miss Jones,\" she shouts back, already running to her father's truck where a gray dog, as big as the one in her drawing, is barely containing his excitement at the sight of her.\n\n\"How was Hannah?\" Julian asks. I detect some concern in his voice that warms my heart a little. \n\n\"She's an introvert, isn't she?\"\n\nHe nods. \"She is.\"\n\n\"Hey, she had a good day. Made a friend already.\" I'm quick to wipe whatever worries he might have. \"She's very bright, Julian,\" I tell him and I'm rewarded by a loving expression that shows he must be that kind of father every little girl wants to have.  \n\nJulian peers over his shoulder, to his girl playing happily with her canine best friend inside his car.\n\nLooking around us, I see most parents who came to collect their kids are already gone. This is my chance to stir our conversation into another direction. \"Look, now I am effectually your child's teacher I need to talk to you...\" I swallow, nervous. \"...about yesterday,\"\n\n\"Ah, yesterday.\" His eyes return to mine flickering with amusement.\n\n\"I shouldn't have...We shouldn't have. It was a mistake. It can't happen again.\"\n\nAn enormous smile exposes his white teeth. He was expecting me to go there. \"Right. So clarify things for me, please. By 'it was mistake' you mean when you put your hand down my pants and rubbed yourself on me in the supermarket parking lot yesterday?\"\n\n\"Shhhhhh!\" I glance from side to side, horrified at the idea someone might have heard him. \"Do you want me to lose my job? I didn't rub myself on you! You rubbed yourself on me!\" To be fair, we rubbed on each other.\n\n\"Mmm.\" He hooks a finger on the collar of his shirt. \"Who did this, then?\" He pulls his shirt's collar to the side to reveal a horrendously purple bruise on his neck.\n\nMy jaw drops in shock. \"Oh, my dear Jesus.\" I have a vague recollection of biting him while in the throes of lust last night. \n\n\"Oh don't worry. I enjoyed it. Actually, I've got other spots for you to suck on if you like.\"\n\nIf looks could kill, Julian would drop stone dead on the floor by the murderous desire of my eyes. His teeth sink down on his bottom lip. He looks like he's having so much fun, it's the best day of his life.\n\nI glare him a warning. \"Stop it.\"\n\n\"Um?\" He blinks theatrically. \"Stop what?\"\n\n\"Looking at me like you're imagining fucking me.\"\n\n\"I don't have to imagine it. I know what fucking you feels like.\" He leans in a little. \"It feels delicious, if you were wondering.\" \n\nI shiver so good I feel it in my toes. \"You really are a fucking asshole. God, I hate you.\"\n\n\"For the human brain, love and hate process as the same thing. I should know, I'm a doctor.\"\n\nI give him a sarcastic little laugh. \"You're a vet.\"\n\n\"A veterinary doctor.\"\n\n\"Whatever.\"\n\nA honk, I suspect was accidental, sounds from his truck. Hannah ducks as Julian and I both glance her way.\n\n\"I better go before my daughter starts the car on her own,\" he says. \"I'll be seeing you, Miss Jones.\"\n\n\"I can't help that.\"\n\nAnother grin. \"You have no idea, my Black Pearl.\"\n\nHe walks away before I can think of a smartass reply to give him. I watch him leave, distracted. The unnerving asshole. I let him play me and didn't even get anywhere near telling him we can't put our hands inside each other's pants ever again.\n\n\"Miss Jones.\" I jump, heart leaping to my throat.\n\nI turn around slowly, faking composure when I'm actually having a little CVA. \"Principal Isherwood?\"\n\n\"In my office, please.\"\n\nOh, fuck. \n\n***\n\n\"Miss Jones, about the field trip you suggest last year.\" \n\nI am so relieved I slump a little on the chair. For a moment there, I thought I'd be fired. \"Oh yes! The field trip.\" I've been trying to get my little pupils to a field trip since I got the teaching position four years ago. Somehow, it never works out. \n\n\"I've just talked to one of the first-graders' parents, Mr. Song. I believe you know him.\" She makes a pause, looking at me over her cat-eye glasses. My performance on demonstrating neutrality deserves an Oscar. \"It seems Mr. Song owns a farm a few miles from town. He has agreed on receiving your class for a visit.\"\n\n\"Oh.\" Shit. \n\n\"You don't seem too excited, Miss Jones. I hope you know taking first graders to a field trip involves a lot of work.\"\n\n\"No, no, no, no! Principal Isherwood, I'm just so- I've been trying to get this field trip for ages! I'm so surprised. That's amazing, principal. Thank you very much.\"\n\nShe scribbles something down on her notebook. It's probably my name on her death note. \"I've scheduled it for the 25th. If you would rearrange your calendar, please,\" she says flatly.\n\n\"Okay, that's great. Thanks again, principal Isherwood.\" I'm still thanking her as I exit her office. I lock myself in my classroom where I can freak out in peace. The 25th...That's two weeks from now.\n\nIn two weeks, I'm going to Julian's fucking house.\n\nSo much for trying to avoid him.\n\n***"
    ],
    "authorname": "Nanaya",
    "tags": [
        "asian man",
        "black woman",
        "bwam",
        "korean man",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/leave-the-night-on-pt-01"
}