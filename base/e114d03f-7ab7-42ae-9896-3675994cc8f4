{
    "title": "My Best Friend Katie Pt. 02",
    "pages": [
        "'Knock it off,' the note read. Katie slid the note over to my desk as our physics teacher was writing something on the board. I had been absentmindedly playing with her hair as she sat in front of me, only half-heartedly paying attention to class. She turned around and smiled at me, betraying her attempt to admonish me. I smiled back, then made a pointed effort to take notes. Her shorts were very short and a good bit of her lower back was exposed to me as I leaned forward in my chair. Her cute back dimples drew me in, as usual. I had always found Katie to be a positive distraction in class, but since we started dating two months beforehand, it was impossible to focus. Luckily I was good at school and the daydreaming did not affect my grades. Katie was wearing a tank top in an effort to fight the oppressive heat outside. I stared at her bare shoulders, already aroused at the thought that, just the day before, I had seen the rest of her naked. It was exciting each time I saw her, clothed or not. Our explorations of each other, while much more covert these days, made our already close relationship even more intimate. I felt like I knew every part of her, that I could make a mental map of her if I wanted to. I was lost in the curve of her shoulder when she suddenly turned around.\n\n\"Class is over, Jimmy, didn't you hear the bell?\"\n\n\"Katie, there's this really cute girl who sits in front of me, and it's all I can do to keep focused. Maybe I should move across the room.\"\n\n\"Maybe you should ask that cute girl out. Oh, I forgot, that's not your style. You like to sit back and wait for girls to make the first move?\"\n\n\"Very funny, Katie. Are you going to give me grief about that forever.\"\n\n\"Probably,\" she said with a sigh. She took my hand as I slung my backpack over my shoulder. \"Now, come on, we'll be late for class.\"\n\nI spent the rest of the day distracted in class, dreaming about Katie, until we ended up at Katie's house after school. We were supposed to be working on a term paper together. I was at her computer, jotting down an outline, while Katie casually looked out the window.\n\n\"Are you going to help me?\" I asked, trying not to sound impatient. She smiled, then looked back to the window. I kept typing, watching her furtively. Her shorts were shorter than she used to wear before we started dating, and her demeanor had changed as well, at least when we were alone. She was twirling her hair absentmindedly, a sure sign something was on her mind. \"What's up, Katie?\" I asked, hitting the period at the end of the sentence a little to hard.\n\n\"What, oh, sorry,\" she said, snapping back to the present. \"I was just thinking about helping you. No, really, don't give me a look like that, I was, really. It's just that I don't think you need help with our paper. I think you need a little different help.\" With that she unzipped her shorts, exposing her underwear underneath and grinning. I was determined to show her I wasn't so horny that I would drop our homework and pounce, which was exactly what I wanted to do.\n\n\"Not in the mood? I don't buy it,\" she said. She pulled at the collar of her shirt playfully, walking toward me with a grin on her face. \"I bet you are,\" she said in a sing-song voice. \"I saw you looking at me in class. In fact, I bet you wouldn't mind if I just took off this shirt altogether. Now, are you sure I can't help you?\" She tugged at her shorts waist and underwear simultaneously, exposing just the top half inch of her short, black pubic hair. I had been hard all day just by sitting next to her, and now I was so aroused my jeans were cramping my erection.\n\n\"I mean, you look so tense, sitting there making an outline of the historical significance of Gibraltar, you could use a break.\" She stood there in her bra, tugging her jeans and underwear a little lower, showing more. \"And my mom won't be home for at least an hour...\"\n\nI didn't let her finish the sentence. I stood up, sweeping her in my arms. She melted into me, and we were fiercely kissing each other as she fumbled to unzip my jeans. She did, and I wiggled out of them as she giggled, taking her shorts off. \"Isn't this better than homework?\" she said.\n\n\"Maybe,\" I said, trying to sound nonchalant, but she didn't buy it.\n\n\"Come here,\" she said, stepping close to me as she peeled off her bra. We embraced, my erection leaving a smear of pre-cum on her stomach as we pressed together. She hopped up onto me, so that I was supporting her weight, and I pressed her back against the wall. The sun was streaming in, and if her parents came home early we would be busted. Katie and I were going to wait, we had said, but that didn't keep us from exploring every other possible way to get each other off. She slowly ground her wet vagina against me, panting as she left a wet trail against my thigh. I was dry humping her as well, but she came first, crying out so loudly that I almost panicked and dropped her. She shuddered as she climaxed, but kept the rhythm going, determined to reach a second orgasm quickly. I let her dictate the pace and movements, and soon she was coming again, panting through a powerful orgasm. When it finished, she clung closely to me, apparently exhausted by the effort. I picked her up more, placing my hands around her firm, round ass as she wrapped her legs around me, and carried her over to her bed. As we moved across the room the head of my penis nudged her labia, and even the entrance to her vaginal canal. While the temptation was intense, I resisted the urge to enter her; I didn't want to do anything she wasn't ready to do.\n\nI set her down on the bed, but she immediately sprang up, pressing her body against me. She kissed me once and then slowly sank to her knees, until she was kneeling with her face an inch away from my erection. She smiled, then with her eyes locked on mine took me into her mouth. She had done this many times before, but each time reminded me of the first time, where she sank to her knees and swallowed my semen in a shop. She had now wrapped a hand around the shaft of my penis, providing added pressure and friction as she took me into her mouth. I suddenly felt a pressure building inside me and started breathing harder. She moaned, taking me into her mouth as I came. My knees buckled and I thought I might pass out from ecstasy, but when I finished she stood up, smiling as she swallowed.\n\n\"Well, now I think we can work on this paper without distraction, don't you think, Jimmy?\"\n\nChapter 2\n\nThree days later Katie and I were at the public library, looking for more books about our paper topic. We always got paired together for assignments, which has its drawbacks when it came to actually getting work done. While I was always up for a little public groping, Katie's sex drive was almost unstoppable. I wondered how much she had waited for me to come around to realize my feelings for her, and how liberated she seemed now. It was for that reason that, as I sat on the floor between two huge shelves, Katie was tugging at her sundress.\n\n\"Come on, you know you want to see them, admit it.\"\n\n\"I do, that's not the problem, Katie. I'd like to keep us from getting banned from the public library, that's all. I mean, don't get me wrong, there is no bigger fan of your breasts than me, but part of my mind is on the librarian who keeps passing by these shelves.\"\n\n\"Does the other part of your mind remember last weekend?\"\n\nHow could I forget. It was the first time I had fucked her between her breasts. We we supposed to be cleaning my pool, but we ended up fooling around, and as she lay on a pool deck chair I fucked her breasts, finally climaxing all over her chest. Our parents returned shortly after I finished, and if Katie had not jumped into to pool to wash herself off we would have been caught. \n\n\"How about just a peek, to stimulate your interest?\". She then tugged at the elastic fabric, revealing her bare breasts for a second before covering them. \"Hmm?\"\n\nI just grinned, causing her to blush. Then, as if nothing had happened, she continued with our previous conversation. \n\n\"I am so excited about our trip to DC. Mom and Dad have been talking about it for weeks.\"\n\n\"I know, I am excited we're going.\"\n\n\"It's too bad that we can't share a room, like last time, although mom said that she'd consider it.\"\n\n\"Are you sure they aren't just kidding around. Letting us share a room, it seems...I don't know, like bad parenting on their part.\"\n\n\"Oh, I think they're serious. They trust us. I mean, I still sleep over all the time.\"\n\n\"But not in my room. Now we're both in sleeping bags in the living room, same as your place.\"\n\n\"But that's never stopped us, has it, Jimmy? Now, come on, let's check these books out and head home, I'm so wet I can hardly wait to get you alone,\" she said. With that we stood up, and, before leaving, she looked over both shoulders. Seeing that we were alone, she kissed me and pressed herself against me. Decided to surprise her, spinning her around so that she was pressed against a bookshelf, her ass sticking out at me. She looked over her shoulder at me as I quickly lifted her sundress, revealing her pink underwear. she nodded feebly, almost in a trance, and I pushed aside her underwear and slowly inserted two fingers into her wet vagina. \n\nShe moaned as I penetrated her, my other hand reaching forward to rub her clitoris rapidly. We had to hurry, because any second and we would be caught. The danger seemed to send Katie over the edge, because her vagina clamped down on my fingers and she reached an intense orgasm. She leaned harder onto the books, panting.\n\n\"One more, please,\" she pleaded. I obliged, quickly sending her over the edge. When she finished, I pulled my fingers out of her and she straightened up to kiss me. as she did (and luckily just after she straightened her dress) the librarian appeared in our aisle, clicking her tongue disapprovingly.\n\n\"The library is for research, not for you kids to fool around. Out, before I call your parents or the police.\"\n\nKatie and I waited until we got into her car to start laughing. We drove away, trying to compose ourselves. It was only a few blocks later that Katie turned serious.\n\n\"I supposed you're wondering when you'll get the chance, since I teased you so bad at the library. I don't want to leave you in a state like that,\" Katie said. She paused, then bit her lip, before adding, \"Jimmy, are we doing the right thing? Isn't all of this, I don't know, this stuff, kind of like cheating in a way?\"\n\n\"Maybe, Katie,\" I said. She grinned nervously. I could tell she was going through one of her pangs of guilt. Katie was an exceptionally sexual creature, but she was also bound to her notions of virtue. It was true that we were stretching the definitions of virginity and sex to their limits of legality. \"I guess in a way, we are. But that's not to say it isn't amazing.\"\n\n\"I know, and I feel excited and terrible about it. I've been thinking about it, and whether or not we've been honest with ourselves. I mean, we're basically having sex. Let's face it, right now, what I want to do more than anything else is give you a blowjob to repay you for fingering me in the library. I mean, when you say it out loud, there's nothing virtuous about it. And it's on my mind because I want to do it, and because I love you.\"\n\n\"Katie, I love you, you know that. I love you more than anything. If you want to stop all of this...stuff, then we'll stop. Completely, we can just kiss and hold hands and I'd be happy to be with you.\"\n\n\"That's just it, Jimmy, I don't want to stop. I think it's time we looked at ourselves and were honest about what we're doing. I think it's time we actually do it.\"\n\nMy jaw dropped. I was prepared for her to change her mind about our sexual activities, not take them to the final act. She smiled nervously, her mind only halfway on the road. I decided a little levity might help ease the tension in the car.\n\n\"Well, we can't right now, we're driving.\"\n\nKatie laughed, causing the car to swerve a little. She regained control of the car and wiped tears out of her eyes as she laughed hard. \"I didn't mean right now, or the next time we're alone. I just think it's time to either do it or stop what we've been doing. I mean, I've been in the pill for years, and neither of us has so much as kissed another person. It's safe. We love each other. I think it's time. But, until then,\" she said as she pulled into my driveway, \"I believe my boyfriend needs a blowjob.\"\n\nChapter 3\n\nThe next day some of our friends joined us at my house to swim. Harry and Denny were there, as well as some girls Katie knew from choir. Since it since mixed company, my parents had to be home, but they were in the kitchen minding their own business. It seemed ironic that they trusted me when Katie and I were alone, but not when we had other people around that kept us from being a tangle of limbs. Katie wasn't there yet, and as we swam Harry and Denny quizzed me. The four girls sat on the pool chairs, sunning themselves.\n\n\"Still no action, not even second base?\" Denny asked in a hushed voice. \"Man, you must be going nuts. I mean, she even gets to sleep over.\"\n\n\"But on the couch,\" Harry corrected. \"Still, it must be tough. I am surprised you put up with it.\"\n\n\"You two have no idea what you're talking about, you know that? Katie and I are happy together, and I don't need you two nosing into my relationship with my girlfriend. All you ever talked about before I started dating her was why I wasn't dating her. And now you still can't stop talking about it. Look, why don't you two nerds talk to the cute girls Katie invited?\". Of course, neither one made a move, but my goal was to shut them up anyway. Whether they were going to work up the nerve or not, Katie arrived a minute later, putting any chances they had with the girls-albeit infinitesimal-on hold. Katie emerged from the kitchen doors, wearing her vintage bikini she bought when we first started dating. \n\nMy friends stared unabashedly, and her friends looked at her in shock and envy. She was certainly built for the suit, and it's cut accentuated her body like nothing else could. She smiled at me as her friends asked her about her swimsuit, while I overheard Denny mutter \"lucky bastard\" in my direction. I exited the pool and walked over to her. Her friends were admiring the suit and asking where she bought it. I walked up and she paused the question and answer session to kiss me deeply. We separated and as I walked into the house to get refreshments she saw me staring at her back dimples and winked.\n\n\"Hey, Jim,\" my dad said as I stepped inside. \"Katie looks nice today, don't you think?\"\n\n\"She looks nice every day,\" I said. My mom nodded in approval, then helped me load a tray with sandwiches and drinks.\n\n\"What are you guys planning for tonight?\" my mom asked. \"Make sure you're not out late, we've got a plane to catch tomorrow.\"\n\n\"We won't, mom, don't worry.\"\n\n\"We never worry about you and Katie, dear,\" my mom said. \"We are happy you two found each other. In fact, your dad and I have been talking, and we wanted to tell you that we trust you and Katie will always do the right thing. You know, when it comes to sex...\"\n\nShe whispered the last line and blushed. My dad grimaced. As uncomfortable as they were, I was more so. I didn't want another sex talk from my mom and dad, especially while my girlfriend and friends were out back by the pool. My dad seemed to anticipate this, and quickly chimed in to break the awkward silence.\n\n\"Don't worry, Jim, we're not going to rehash our birds and bees talk again. What your mom and I want you to know is that we understand you're young and that you and Katie are in love, and we're fine with that. Just understand that as long as you use the proper precautions, well, I guess we're trying to say that we are okay with that.\"\n\nI was blushing now. \"Precautions?\"\n\n\"We're not blind, Jim,\" my mom said kindly. \"I've seen how you two look at each other. Your father and I were young once, we understand. I guess you could say the cat is out of the bag.\"\n\n\"Katie's parents realize it, too. There are inevitable instincts that two young people in love will have to deal with. Now, we don't want to keep you from Katie and your friends, but we want you to know that we know, and we understand.\"\n\n\"Okay, I am totally confused now,\" I said, and they laughed.\n\n\"What your mom is trying to say is that we know things will happen, physically, between you two, if they haven't already. And we know that when the time comes, you will take the appropriate precautions, like birth control. And keeping your mouth shut to your friends about it. What you think is just telling them a secret will be a school wide rumor. Understand?\"\n\n\"Yes,\" I said, wanting to be clear. \"I understand perfectly.\"\n\n\"Good, because I don't want to worry about you two on our trip, should anything happen, physically, that is. We want you to know we trust you, you know, do...um, to do the right thing.\"\n\n\"Got it, Dad. And thanks for the talk, really. It was great. Awkward, but great.\". My parents laughed and looked at me with the same look I used to get as a little kid when I would get straight As on my reported card for the first few times (the novelty had long worn off). I picked up the tray and walked outside, my head swimming. Katie met me at the door, a look of concern in her face.\n\n\"You were in there a while, she said. \"Everything okay?\"\n\n\"Yeah, but I'll have to tell you later,\" I said, beaming at our guests as I served them lunch.\n\nOur friends left a few hours after lunch. I was sitting in the living room, waiting for Katie to finish her shower. My parents were heading out to do last minute errands before we left for DC. As they left, my dad looked at me appraisingly and nodded, before shutting the door behind him. A few minutes later Katie came downstairs wearing a t-shirt and a pair of very short light blue running shorts. She knew I was a fan of how she looked in them. They were tiny on her and framed her toned ass exquisitely. She bounded down the stairs and stopped at the bottom, looking at me quizzically as I set down the magazine I was reading.\n\n\"Your bathing suit was a hit, I think the guys and the girls were both interested, although for different reasons.\"\n\n\"I don't care what anyone else thinks, I wore it for you. I like the way you look at me.\"\n\n\"Well, I like to look at you, so that works out well.\"\n\n\"So what did your parents want this afternoon? You were in there for a while, I was wondering if maybe my bathing suit had caused a stir.\" Katie walked over to me and sat on my lap, kissing me. \n\n\"I got a sex talk.\"\n\n\"Like the one you got in fifth grade. About erections and vaginas and babies?\" she asked, grinding against me a little.\n\n\"No, nothing like that. It was awkward, though, probably even more so. They suspect we're up to something.\" Katie stopped her subtle grinding, but I kept talking. \"And, oddly enough, they are cool with it.\"\n\n\"Jimmy, did I hear correctly that your parents think we are having sex?\"\n\n\"They either think we are, or think we're going to. Your parents have talked with my parents about it, too.\"\n\n\"I can't believe they left us alone together, then,\" she said. She was sitting side-saddle on my lap, and had resumed her almost imperceptible grinding against my lap.\n\n\"That was the weird part. They are cool with, as long as we're careful.\"\n\n\"They are cool with it?\" she asked.\n\n\"As long as we're careful,\" I repeated. My hand was on her thigh, slowly traveling closer to her running shorts. I knew she wasn't wearing anything underneath them, and as my hand traveled up her smooth thigh I could feel my own arousal press against her. \n\n\"Careful?\" she whispered as my hand reached the point where her inner thigh was covered by her shorts. I brushed them gently aside, feeling her damp pubic hair.",
        "\"Birth control, I explained. And they said we should never tell our friends anything, otherwise rumors will start flying.\". As I said this my hand brushed her labia, feeling how wet she was. She spread her legs wider, and I brushed two fingers against the entrance to her vagina, feeling how tight and hot it was. I pushed gently against her, entering her half an inch.\n\n\"It's a good thing I'm on the pill,\" she said as I penetrated her further. She sighed as I wrapped my other hand around her, feeling her round ass and grinding against her. Katie panted, moaning as I rubbed her clit and fingered her. It was exhilarating to be with her, and as I felt her vagina contract around my fingers I was overcome by how amazing she was on all levels. I was overcome with emotion and forgot about grinding my erection upward into her as she climaxed. I kept fingering her, feeling her body tense up a second time, then a third, until she was actually crying, resting her body against me. \n\nWith her fourth orgasm she stood up, letting my fingers slide out of her. She knelt in front of me, pulling down my shorts as I lifted up slightly to help her. She pulled my shorts off all the way, then knelt between my legs and started to lick the shaft of my penis, dodging the head intentionally.\n\nKatie kept avoiding the head of my penis, focusing on the rest because she wanted to prolong things. She was, at this point, an expert in how to make me cum, and she knew how to draw things out when she wanted to. She gripped the base tightly while finally taking me all the way into her mouth. She bobbed up and down, moaning slightly as I ran my hands through her hair. I expected her to keep going and swallow when I reached my orgasm, but she stood up, letting go of my red, throbbing penis. I had no idea what she had in mind, but a thought raced through my brain suddenly 'this could be it...\n\nInstead, she straddled me, still wearing her running shorts, and pressed up against me. The running shorts were the only thing keeping the head of my penis out of her wet vagina. She rubbed herself along the length of my erection, my penis parting her labia as she did so. I kissed her breasts through her shirt, reveling in the feeling. We were so close to actually having sex, but even this variation was amazing. I gripped her ass with both hands and pressed her harder against me, and as I did she climaxed again, panting and pressing her chest against me. She kept riding me this way, and I pushed against her one last time and erupted, flooding he narrow space between us with semen. \n\nWe had never reached orgasm this close to her vagina before, and even with the shorts between us the thrill amplified my own orgasm. Katie came at the same time, panting and gasping as she rubbed against me, smearing semen all over us. We got up quickly, realizing that within seconds we would ruin my parents' couch, and embraced, kissing each other and laughing. \n\n\"Well,\" she said, surveying the mess on her shorts and on me, \"if we hurry we'll have time for a shower before we need to leave for the movies.\"\n\nChapter 4\n\nThe next day we left for Washington, DC. We were at the airport, waiting through what felt like an hour long ride through security. Our parents were in line in front of us, and I brought up the rear. Katie, like me, had opted for jeans since the airport could be cold in some places. She wore a tank top that showed a bit of her bra strap every so often. Even this slightest hint was enough to pique my interest. I was randomly selected to have my bags searched. I was escorted to a waiting area while they checked my backpack and then patted me down. When I was finished I met up with my family and Katie as they exited the scanners.\n\n\"Enjoy the pat down?\" Katie whispered in my ear. \"Next time I'll volunteer to check you.\" She kissed me on the cheek and then added \"it's a good thing they didn't look in my bag.\"\n\nI looked at her in surprise but she just raised her eyebrows and started to catch up with our parents. We boarded an hour and a half later, and quickly settled for the flight. Katie and I had each brought a long book to read, with the idea that we would switch when we were finished. It was a smaller plane, with two seats on each side of the aisle. My parents were in the row in front of us, and Katie's mom and dad were across the aisle from us. Katie, being shorter, took the window seat and quickly settled in with her book. \n\nIt wasn't until the flight attendant announced that the passengers could use electronics that Katie looked up from her book and scanned her surroundings. She waited until her mom and dad put on their headphones before she stood up and edged past me. As she passed I noticed her jeans were riding a little low on her, and that her underwear was peeking out of her jeans. She always opted for cute cotton ones, not to skimpy but incredibly sexy in an innocent sort of way. She noticed me looking and smiled before stepping out into the aisle. She reached up into the overhead compartment, exposing her midriff. I watched in earnest as she retrieved her coat and then nudged past me to sit down.\n\n\"I'm cold,\" she explained, covering herself a little with her coat. \"Mind if I sit a little closer?\". She then lifted the armrest separating out seats and sat so we were touching. \n\n\"So what is so special in your backpack?\" I asked in a quiet voice. The plane noise ensured our conversation was private at almost any volume, but it still seemed prudent to keep our voices down.\n\n\"I really can't say right now, but maybe if you're good you'll find out later. By the way, did you get a good look when I was getting my jacket? I saw you staring.\"\n\n\"I did, thank you very much. I always like to sneak a peek at when you've got on underneath. Nice choice today, by the way. I like them.\"\n\n\"You do? I always thought guys like slutty underwear like thongs and French cut things. I feel like I'm still in middle school with these things on.\"\n\n\"No, I like them very, very much. In fact, you could only wear those all day and I'd be happy. It's hot in its own way. Although, to be fair, if you did wear only that all the time, I suspect you'd be out of them more than you would be in them.\"\n\nShe nestled closer to me and said \"You know, Jimmy, you are a horn dog. I am a very lucky girl.\"\n\n\"You're one to talk, Katie. I didn't think girls were supposed to have sex on their minds as much as you have, not that I'm complaining.\"\n\n\"I only have it on my mind because it's with you,\" Katie said, her eyes locked in a dreamy gaze at me. \"I mean, right now it's about all I can think about. Maybe like we did last time, in your living room. Pressing against each other until we both come...by the way, we were pretty close a few days ago, weren't we?\"\n\n\"Yeah, I didn't know where things were going. I am glad where we ended up, but I mean a little shifting here and there and...\" I stopped just as Katie moved even closer, leaning against me. \n\n\"And you're fine with things as they are?\" she asked. \n\n\"Yeah, of course I am. With you, and with everything.\"\n\n\"Really? Because I was thinking about maybe I should start wearing makeup or doing something different with my look. You know, something more like the other girls do.\"\n\n\"Don't, as least not for me. I like you the way you are. I love that you don't wear makeup; you're so beautiful that you always look amazing. I love you the way you are.\"\n\n\"You're too sweet, Jimmy,\" she said. She leaned against me some more, her head resting on my shoulder. Her jacket was now laying across both of our laps, and I felt her right arm stir as she slowly moved her hand across my leg and rested it on my erect penis. I was already straining against the jeans fabric, and her hand pressed against me, making me take a sharp, inward breath.\n\n\"What did I find here?\" she said. \"Hmm, it seems that my best friend is excited about something, Maybe one day he'll figure out how much I like him he'll make a move. Or maybe I should make the first move? Maybe if I give him a gentle squeeze.\" She then began gently rubbing her hand, running along the length of my penis and also squeezing it. I was breathing very deeply and slowly. If her jacket shifted, her parents were only two feet away from me. She rubbed a little harder, all the while leaning against me. I wanted to touch her back but I couldn't move without exposing what she was up to. \n\n\"You know, I used to get so wet when we would sit around doing homework or hanging out. I wanted you to touch me so badly. I would run upstairs when you'd leave and I'd touch myself,\" she said in a whisper. I realized that she was now also rubbing herself, her left hand tucked underneath her jeans. I was dangerously close to an orgasm, and with a panicked thought I realized that I would not be able to conceal the mess in my pants if I did. I was about to stop her when she climaxed. Her hand stopped moving over my hand and concentrated on herself. She squirmed a little, then, holding her breath for a long time, she slowly shuddered and finished. A second later she withdrew her left hand from her own lap and gave me one last squeeze before taking her right hand away from me.\"\n\n\"I'm sorry I can't finish for you,\" she said, \"but the mess...\"\n\n\"I know, is's okay,\" I said. \n\n\"Maybe later, if we get a chance,\" she said. She then leaned against me again, this time her hands above the jacket, her breathing slow and steady and her hand in mine.\n\nIt took us an hour to get from the airport to our hotel. We were near the Smithsonian museums, and had endured a hot and humid Metro train to get there. A creepy older man kept staring at Katie as we rode the train, and after a sufficient number of dirty looks from me he turned away and ogled someone else. When we reached the hotel Katie and I hung back while our parents checked in. It was a nice hotel that had been remodeled many times over the years, with a large number of oil pantings adorning the walls. Our parents were at the counter for what seemed like a long time, when Katie leaned in close to whisper in my ear. \n\n\"What about that creeper in the Metro, very gross.\"\n\n\"I know, tell me about it,\" I said. \"I'm glad we live in a small city. That way the only creepy pervert is Mr. Walton.\"\n\n\"I know, I hate biology class with him.\"\n\nWe were interrupted by our parents, who had returned from the counter with expressions of satisfaction that seemed a bit extreme for successfully checking into a hotel, albeit a nice one like this. We followed them down the hallway to a bank of elevators, and it was only when we were inside and heading to the fourth floor that we understood their cause for celebration.\n\n\"Well, we didn't want to tell you ahead of time, but we reserved three rooms for the week,\" Katie's mom said quietly. When we both looked at her with puzzled faces she elaborated. \"You've both been so trustworthy, and you're both eighteen, we decided to let you two stay in the same room.\"\n\n\"It's a suite, with two bedrooms,\" my mother added. Our dads both looked on but said nothing. I was not sure if they were on board with the idea, and I couldn't believe this was actually happening. \"We want your word that you'll behave and stay in your own bedrooms. If you can agree to the terms the room is yours.\"\n\nI looked at Katie, who quickly looked over all four of our parents. \"Deal,\" she said, trying not to look too excited. We reached the elevators and stood in the back as our parents packed in with us. I reached behind Katie and squeezed her hand gently. She returned the squeeze and we separated. A few seconds later we were spilling out into the hallway with luggage wheeling behind us. Katie's dad handed us the key card and looked at me for a second before smiling and patting me on the shoulder awkwardly. \n\n\"You two might as well get settled, and come to our room in an hour so we can head out to dinner. There's a nice place a few blocks from here,\" he said, then ushered us in and shut the door behind us.\n\nIt took about thirty seconds before Katie jumped into my arms, kissing me as I tried not to fall over from the force of our collision.\n\n\"What the hell just happened?\" I said, catching my breath.\n\n\"Two things, I think. First, I think they have given up and realized that things are 'going to happen' between us. Second, I suspect the major factor, is that they want their own rooms to themselves. Remember our last trip, they didn't seem to complain about a little privacy. Come on, let's look around.\"\n\nWe threw our bags into our separate bedrooms. A small living room and sitting room separated our bedrooms. We had a balcony that overlooked a busy street. Our rooms were identical, and we separated to unpack, but within a minute or two I heard a quiet squeal and was suddenly tackled onto my bed. Katie was on top of me, and as I rolled over she fell next to me in a quiet giggle. We kissed, with our hands quickly exploring each other.\n\n\"We can't,\" she whispered, \"we can't do anything right now. We've got to meet them in forty minutes.\" Still, we kissed and touched, and Katie was growing bolder, until we both sat upright, panting, our faces flush. Katie's jeans were partially unzipped and my erection was throbbing against my jeans, pulsing with excitement.\n\n\"Well, this is going to be a fun week,\" she said. \"Do you think they'll check on us?\"\n\n\"I'm not sure, we'll have to be careful. Although, come to think of it, they did just let us stay in the same suite. I can't predict what they'll do.\"\n\n\"This is pretty nice, isn't it,\" she said, reclining on the bed. \"It's like we're on vacation together, alone. It's like, I don't know, it's like...\"\n\n\"I know,\" I said, kissing her. \"By the way, what were you going to show me, in your suitcase.\"\n\n\"Oh,\" she said, giggling, \"I don't think I'm going to need it now. But let me show you.\" She darted out of my bedroom, returning a minute later with a what looked like a pen. \"I brought this to keep me busy while we were in separate rooms for a week.\n\n\"Is that a pen? Were you planning on writing me notes?\"\n\n\"This is no ordinary pen, Jimmy. It's a squiggle writer. You know, those pens that vibrate while you write. You got one for me for my thirteenth birthday, remember? It was a cool gift, and well, writing with it was cool, but I soon discovered it had a special capability. Pretty soon I was using it all the time to get off.\"\n\n\"You mean, like a vibrator?\"\n\n\"That's pretty much what it is. It was pretty popular in middle school, all the girls had one as far as I knew. Of course, I could have gotten a real one by now, but I like this one because you gave it to me. I knew you had no idea what I was doing with it, but still, it was special.\" She took it and turned it on, sliding it down her unzipped jeans and over her underwear. She started to breathe deeper, writhing slightly on the bed. I moved closer and kissed her, my hand gently massaging her breast as she masturbated with her vibrating pen. \n\n\"The first time I used this, I was sitting at my desk at home,\" she said between kisses. \"I was wearing a skirt, and absentmindedly put it down there. When I realized what was happening, I started to shake all over from the intensity of it.\" She was panting now, and I wanted more than anything to touch her down there myself, but instead I kept kissing and feeling her as she used her pen.\n\n\"I think of you, you know, when I do it,\" she said, panting now. She started to buck her hips in a familiar pattern, and started to climax. She kissed me, pressing her tongue into my mouth, moaning quietly as she shuddered. She kept wiggling the pen around until her orgasm faded, then removed the pen and set it on the bed.\n\n\"That,\" she said, \"was fun. Now you know what I do in my free time, when you aren't around. Now, come on, I don't think I'm going to need that again for the week, since I've got you here. But we're going to be late, and I need to freshen up.\"\n\nBy the time we got back from dinner, it was getting late and we had an early day of monument sightseeing the next morning. It was awkward, to say the least, to say goodbye to our parents and then head into our own room. When the door shut behind us Katie clicked the lock, making it official. We were on our own. For some reason, I was nervous. Here was my girlfriend, my best friend for twelve years, who I had known as intimately as anyone could know a person, and yet I was scared.\n\n\"Nervous?\" she said. I nodded, and she laughed nervously. \n\n\"Maybe it would be best if we actually got ready for bed, you know, keep the normal routine. We could even watch a movie on the couch,\" I said. She agreed, and we both went to our bedrooms to get our stuff. It seemed odd to change separately, since I had seen Katie naked countless times, but it was also exciting. I was already brushing my teeth when she came into the bathroom with her toothbrush and toothpaste. She was wearing flannel pajama pants and a white tank top, her usual bedtime getup. When we had sleepovers at each others house, one of us would invariably sneak to visit the other, and I'd usually finger her and she'd give me a blowjob. It had always worked well and seemed to be the quickest methods, in case we were caught. \n\nShe stepped up to the sink next to me and we brushed in silence. When I finished, there was a knock at the door. I left the bathroom and opened it to find our dads, who stepped in to say goodnight. I noticed as they did they also surreptitiously checked that each bedroom had a set of luggage and that Katie and I were indeed dressed appropriately. Satisfied with their inspection, they bade us goodnight and left.\n\n\"I wonder if they actually think we're going behave ourselves, or if this is some formality, the last vestiges of parenting us?\" Katie wondered aloud as she emerged from the bathroom to find me on the couch. On her way to the couch she stopped by the front door and locked the extra lock. \"Just in case, you know, the hotel is robbed or something.\"\n\nShe sat down next to me and I turned on the TV. We had set up one of our iPhones to play through the TV, and Katie called up one of our favorites.\n\n\"You know, I am still completely blown away by this,\" she said. \"I never would have imagined our parents would actually let us stay together like this. I wonder if we'll be able to spend the night in each other's rooms when we get back.\"\n\n\"I don't know, maybe this is a 'vacation only' rule,\" I said, as Katie sank into the couch and cuddled up against me. We watched the movie for a little while, until Katie's hand slowly started moving up my leg, toward my twitching erection.\n\n\"Poor Jimmy. You had to sit there on the plane while I fingered myself, and then with the squiggle pen. You must be so pent up.\"\n\n\"No more than I was for years,\" I said as she gently gripped the shaft through my pajamas. I reached behind her as she leaned forward, cupping her ass in my hands.\n\n\"What do you suppose we could do?\" she asked, slowly freeing my erection from my pajamas until it stood up in salute to her. I slipped my hand into her pants, feeling her bare ass. She smiled, looking up at me with her bright eyes, and then engulfed my penis in her mouth. She moaned quietly as she leaned forward, bobbing up and down as she sucked me into her mouth. I was able to slowly stroke her labia from behind, and she stuck her ass out a little bit, giving me better access. \n\nKatie continued to suck my penis, her speed picking up a little. I felt her wet labia and finally pushed two fingers slowly inside her. With difficulty, I was able to slowly alternate between penetrating her and rubbing her clit. She moaned, sucking me harder, now wrapping a hand around the shaft of my penis and gripping it as she took me into her mouth. After the entire day of arousal, I was close to orgasm, and tried to concentrate on her to prolong the pleasure. She paused, looking at me and sighing before I felt her vagina contract and her orgasm take over.",
        "\"Ohhhh,\" she hissed, gripping my penis and sighing hard as she climaxed. My swollen penis pressed against her cheek as she lost herself in her orgasm, her body shuddering with pleasure. When she finished, she pulled my hand away and continued to suck my penis, this time increasing the intensity and speed, until I thrust my hips upward and started to ejaculate. After an innumerable number of blowjobs, Katie knew my movements and could anticipate my orgasms. She took me deep into her mouth, letting me flood her with semen. She waited until I was finished, then swallowed. She sat up, grinning, and cuddled against me as we both readjusted our pajamas.\n\n\"My poor boyfriend, pent up all day. I promise not to let you go so long in the future.\"\n\nWhen the movie ended it was late, and Katie and I shut off the TV and stretched groggily. We walked together to the bedrooms, then paused.\n\n\"Your place or mine?\" she asked. \"I mean, they aren't really going to check on us in the middle of the night, and we have to unlock the door anyway, so...\" she said, then trailed off, looking at me expectantly. I took her hand, and led her to what was officially my room. I shut off the lights, but even in the dim light of the streetlights and moon I could see Katie was peeling off her tank top, pajama pants, and underwear. She slipped, completely naked, into my bed. I followed her lead, and seconds later found her under the sheets, both of us naked.\n\n\"I like this,\" she said, nestling close to me, our bodies touching. \"I could definitely do this forever.\" I didn't say anything, and she stirred a little. \"Sorry,\" she added.\n\n\"For what?\" I asked. We were holding each other close and I was too preoccupied with the naked woman in my arms to register what she was sorry for.\n\n\"I didn't mean to pressure you, with the forever thing. I wasn't trying to imply...\"\n\n\"Katie, you don't have to apologize. I like the idea of forever, where you're concerned. Really.\"\n\n\"Oh, Jimmy, you are amazing. And, I see, interested,\" she added, as she felt my penis pressing against her stomach, pulsing and erect.\n\n\"I am always interested,\" I said, \"and I meant what I said about forever. I love you, Katie.\" \n\nShe kissed me, pressing her body against mine. My hands wrapped around her and held her close, finally reaching her ass and cupping it in both hands, gently squeezing it. We kissed and her hands found my chest, then arms, gripping me tightly. Katie rolled, hoisting herself onto me, so that she was straddling me. Our naked bodies were joined as she sat, her labia parted over the shaft of my penis. A slight change in angle and I would enter her, but she stayed upright, gliding her wet labia over the shaft of my throbbing penis.\"\n\n\"Not yet, Jimmy, but I think you'll like what I have planned,\" she whispered gleefully, indicating I would not be entering her tonight. She slid along my shaft, rubbing her wet labia all over my penis, lubricating it. I held her ass tightly and pressed up against her as she ground against me, our genitals touching and smashed together. Katie climaxed, rubbing herself against me and panting hard. I was close, but Katie had a second orgasm as soon as the first ended, and as she pressed against me and rubbed I climaxed, too, shooting semen between us. \n\nShe continued to grind against me for a third orgasm, finally collapsing against me, panting. She was giggling, too, giddy with delight. Finally, she climbed off of me, her labia and my penis covered in sticky semen. She curled up next to me, spooning into me and pressing against me. I held her close, exhausted, until we both fell asleep.\n\nChapter 5\n\nWe woke the next day, our bodies stuck together. It was a painful separation, as my penis was glued to her lower back, but we separated quickly and winced through the pain. She sat up, her pert breasts heaving, eyeing me as I got up.\n\n\"We need to get ready for breakfast, it's six-thirty,\" she said. \"Too bad, I'd like some more time with you.\"\n\n\"Maybe we'll have time later, if you're good,\" I said. She laughed and winked. I left the room and ruffled her bed sheets, just in case. When I returned, Katie was in the shower. I stepped into the bathroom, peering into the shower to watch her for a second.\n\n\"Do you think you can take a shower with me and keep our hands off each other? I don't want to be late and blow our newfound freedom on day one.\"\n\n\"Of course we can't,\" I said, \"you shower first, that way if they stop in I'm waiting innocently for you to finish.\"\n\n\"Good idea. It's too bad, though,\" she said. \"Maybe I'll need to take a shower tonight, when I won't need to meet up with anyone on time.\"\n\nIt turns out our caution was warranted. Our moms checked in on us in twenty minutes to find me in my room reading while Katie showered. Twenty minutes after that we were dressed and in the hotel lobby, setting out on foot to find breakfast and start the day. As usual, my dad was a fanatical planner, and had scheduled a day of visits. Katie and I wandered around on our own for the most part, giving us the chance to sneak kisses here and there, but nothing more than that. \n\nIt wasn't until dinner that we even had time to sit next to each other, but even then we were surrounded by parents. Katie had chosen a knit top and a short, ruffled skirt that accentuated her athletic legs. As we sat at the table, she put her hand on my knee a few times and I ran my hand up her leg. At one point she spread her legs a little, letting me touch her inner thighs, but I couldn't do anything more obvious than that right in front of my parents.\n\nWe finished dinner exhausted, content with the day and ready to hit the Smithsonian for the next three days. My parents stopped in on us as we brushed our teeth again, and as soon as they were gone Katie clicked shut the lock and bounced into my arms.\n\n\"My Mickey Mouse watch tells me we are way overdue to fool around. I mean, we barely got a chance to even kiss,\" she said, her tongue in my mouth a second later. She wrapped her legs around me and I carried her to her room. It seemed odd to even call it that, but we had decided to rotate beds to given them both the look of being used. We collapsed on the bed together, a tangle of limbs, as I hastily took off my t-shirt. She lay on the bed, wiggling out of her pajamas, but then stopped suddenly, pulling them back up.\n\n\"What is it?\" I asked. She looked at me for a few seconds, not saying anything.\n\n\"Come here,\" she said, getting off of the bed and leading me to a chair. \"Take off your clothes and sit,\" she said gently. I did as she asked, and she smiled. \"I do love the way you look at me, Jimmy.\" She then twirled slowly once, giving me a good look. She grinned, then slowly pulled her pajama pants down. She kicked them off, then unceremoniously pulled off her t-shirt. She then turned around, sticking her ass out and swaying it a little as she unhooked her bra. I was so aroused I wanted to reach out and pull her close to me, but I resisted, waiting for her. She then took off her bra and turned to me, straddling my lap. \n\nShe pressed herself against me, so that only her underwear (Hello Kitty this time) separated us, and gasped as I leaned forward and kissed her breast, gently flicking her small nipples with my tongue. She writhed a little on my lap, and I reached between us and worked my fingers under her waistband. She was slowly grinding against me, and each time she pulled away I worked my hand closer until I was stroking her labia. Katie was panting now, starting to build up to an orgasm, and as I put my free hand on her ass and pressed her nipple between my lips, she climaxed, grinding hard against my hand.\n\n\"Oh, god,\" she said quietly, her body shaking. Katie paused, breathing heavily as her orgasm subsided. She got up off of me, but motioned for me to stay still. She pulled her underwear down, revealing her soft, damp pubic hair, then removed them completely. She straddled me again, and I expected that she would grinding against my shaft, but she lifted herself up, reaching down and gently grabbing my penis, guiding it along her labia downward until it stopped at the entrance of her vagina.\n\n\"I'm ready,\" she panted, looking at me with a determined gaze. We exchanged a look, then she slowly started to sink her body weight onto me. I had penetrated her with one or two fingers for a while, so I knew she wasn't going to feel a great deal of pain or bleed, but still she went slowly. At first she was so tight from her orgasm that the head of my penis barely entered her. She was very wet, though, and she sighed and sank even more, until the head was all the way in.\n\n\"You okay, Katie?\" I whispered as she stopped moving.\n\n\"Uh huh, just being careful,\" she said. \"Is this okay?\"\n\nI nodded, and she smiled, sinking a little lower. She raised herself up, until the head of my penis threatened to pop out of her, and then she lowered herself again, this time letting me in further than before. She repeated this motion again, until she sank completely onto me. I was completely inside her, her warmth enveloping me.\n\nAs Katie slid down to accept me completely inside her she climaxed again. The tightness of her vagina gripped me so I couldn't move, and I waited until she relaxed before I started moving my hips upward slowly. She responded, raising and lowering herself while grinding backward and forward. We moved slowly, my hand gently massaging her breast. The only sound was our shallow breathing, and the sound of our bodies pressing together gently. \n\nKatie reached another orgasm and the tightness was too much for me. I thrust upward, raising her up a little, and climaxed. She gasped as I filled her with my semen, my whole body tensed up and my penis pulsing with release. I held her close to me as our mutual orgasm subsided, whereupon we started kissing, grinding our bodies as I stayed inside her. I felt myself stirring inside her, growing again, lubricated by our mutual lust. She responded, feeling me grow inside her, grinding her body against me.\n\nI sat up, holding her ass as we ground against each other. I was completely erect now, fucking her with greater intensity than before. I kissed her, and our tongues intertwined. Katie pressed herself closer to me and climaxed yet another time. She was still incredibly tight, especially when she reached an orgasm, but I was able to continue the rhythm. When she finished she stopped me and sat up, finally climbing off of me. A thick trail of semen spilled out of her, and she stepped over to the bed and laid down. I followed, and she spread her legs wide as I knelt between them, guiding my penis back into her. I slid into her slowly, grinding against her with each thrust, until Katie came again and I followed immediately, our two orgasms once again blending into one. I was blind with pleasure, covered in sweat and delirious. When I finished I lay next to her, both of us clinging to each other in the darkness until we fell asleep.\n\nChapter 6\n\nThe alarm clock woke us up the next morning. I stirred, watching as Katie sat up in bed, her nude form silhouetted against the morning sun. She stretched, her breasts heaving with her slow breath, her firm body casting shadows on the bed.\n\n\"Good morning,\" I said groggily, patting her on her thigh, the closest part of her to me. \n\n\"It is,\" she said, taking a deep breath and letting it out slowly. \"Well, what did you think? Was it what you thought it was going to be like?\"\n\n\"Better. Better than anything. I was surprised at first, but it felt so natural, too,\" I said. She leaned over and kissed me, laying down next to me on the bed. We had little time to get ready, and she looked at her watch for a second before frowning.\n\n\"What is it, Katie?\"\n\n\"One day, we aren't going to have to rush out of each others' bedrooms in the morning. One day we'll be able to stay like this, and see how the morning develops.\"\n\n\"I can already guess how the morning would develop,\" I said, sliding my hand down her back. She shivered, torn between what we had to do and what we wanted to do. She reached down and started to stroke my already stiff penis, shuddering in delight as I reciprocated and ran my fingers up and down her wet labia.\n\n\"You know what I love about you?\" I said, now slowly inserting two fingers inside of her, rubbing her clit with my thumb. \"Your sense of adventure.\"\n\n\"You know what I love about you?\" Katie asked, stroking me faster, already building up to her first orgasm. \"The way you touch me, the...ahhhhh.\" She trailed off, climaxing. She stopped stroking me to enjoy her orgasm, but when she finished she gently pulled my fingers out of her. \n\n\"We don't have much time,\" she said. \"Otherwise I'd let you keep doing what you were doing. Now, come on,\" and with that she moved closer and took me into her mouth, sucking me and sliding her hand up and down my shaft. It only took a few strokes to bring me close, and I ran my hands through her hair and she took me in as far as she could as I climaxed, exploding in her mouth. She caught it all, swallowing it and then sitting up, looking refreshed.\n\n\"Well, that should hold us over for an hour or so,\" she said, laughing. \n\nWe spent the majority of the day at the Air and Space Museum. Our parents wanted to see the Natural History Museum, and after a few hours with us they made plans to leave us there for a few more hours and explore on their own. When we were finally alone we stopped holding hands and instead walked around with our arms around each others' waist. It was difficult to move this way, but more fun. Katie was wearing another short skirt, this time occasionally flashing me a little as she bent over the adjust the strap on her sandals.\n\n\"So, can you believe that all of these years our pent up attraction is finally out in the open? I mean, I've wanted you for years, and now that I have you, I can't get enough of you.\" She kissed me on the lips, and we started to move in close before we remembered we were in the Smithsonian, and likely to get kicked out for too much contact.\n\n\"I still can't believe I almost let you slip by,\" I said, holding her close as we looked over some exhibits. \n\n\"Why, were you afraid I'd go out with someone else, or did you have your eye on some other girl?\"\n\n\"Of course I didn't Katie. You are way smarter, and cooler than any other girl I know. Add to that you have a perfect body, and, well I guess I always liked you, you know, but I was too scared to act upon it. I mean, what if I had asked you, like a year or two ago, on a date?\"\n\n\"You might have earned yourself a blowjob sooner, Jimmy. I'm just saying! Don't give me that shocked look. I think you like my adventurous side.\"\n\n\"I do. You're like some kind of nerd nymphomaniac. Truly one of a kind.\"\n\n\"Thank you,\" she said, grinning and blushing at the same time. \"It's all your fault.\"\n\n\"That, and the squiggle writer,\" I added.\n\n\"Speaking of which,\" she said, rummaging through her purse. \"Guess what I brought with me? I'm saving it for later. I was thinking maybe it might come in handy. After all, it's been hours since you last touched me down there.\"\n\n\"Well, there is a show about planetary probes in the Einstein theater in thirty minutes. If you can behave yourself that long, maybe we could check it out.\"\n\nAnd exactly twenty-five minutes later Katie and I were walking into the dimly lit theater along with the rest of the crowd. She looked at me with a devilish grin.\n\n\"And how exactly does my boyfriend plan to touch me in this packed theater? I mean, you've successfully attempted it back home, but that theater is a little bit easier to pull off.\"\n\n\"Ah, you'll have to trust me, and also let me sit down first.\"\n\n\"Not very chivalrous of you,\" she teased. But a few seconds later we were at our seats. She sat down second, and jumped in her seat. She grinned as she realized she was sitting on my hand. Katie readjusted her skirt, and sat back down on my open hand, positioning herself. It was an awkward angle, but she writhed slowly on my hand, letting me penetrate her a little after I shifted her underwear to the side. \n\n\"Nice idea, I can't believe we've never tried this before,\" she whisper, leaning over to kiss me once. She moved slowly, barely rocking back and forth, riding my fingers. She got progressively wetter, until my fingers were soaked. It took her a while to climax, but when she did she sank onto my fingers all the way, her vagina pulsing on them, as she controlled her breathing and let her shoulders and neck relax. When she finished, her vagina twitched, and she started again. She reached orgasm only a few minutes later, again sighing slowly. She leaned over to kiss me again, just as the lights came on. \n\nKatie rose slowly, her legs a little unsteady, and tried to adjust her underwear and skirt. I wiped my fingers on the inside of my jacket, and followed her out of the theater. When we left, she pulled me close and reached up to kiss me, her tongue flitting into my mouth.\n\n\"I wish I could do the same for you, sweetheart, it's just that you'd make too much of a mess. I promise I'll make it up to you when we get back to our room.\"\n\n\"You never have to make it up to me, although I will take you up on your offer. I love getting you off, it's fun.\"\n\n\"And you, Jimmy, are amazing.\"\n\nBy the time our parents bade us goodnight that evening, I was so aroused that my penis was swollen and was an angry red hue when I finally stripped off my pajamas. Katie was taking off her clothes, eyeing me with a familiar hunger. \n\n\"It's our last night together, at least for a while,\" she said. \"I don't want to go home. I hate being apart.\"\n\n\"I know, but maybe we'll have a new window of freedom open to us. I mean, I can't imagine they've expected us to keep our hands off of each other in this hotel room.\"\n\n\"True, Jimmy. And speaking of which, my poor boyfriend needs some relief, I think. It's too bad you make such a mess every time you come,\" she said as she crawled across the bed to where I was standing. She touched my penis lightly and a huge stream of pre-ejeculate leaked out. She took my penis in her hand and stroked it. \"Think of all of the fun we could have at the library if you didn't.\"\n\nShe then took me into her mouth, sucking me with wild abandon, her hand running along the shaft as she took me into her mouth. A whole day of seeing her in that short skirt, combined with being aroused since I fingered her in the theater, had it's effect. She took me into her mouth one last time and I ejaculated what seemed like an impossibly large amount of semen in her mouth. Most of it came out of her mouth, hanging like thick ropes off of her chin. When I finished she sat up, the think globs of semen dripping off onto her breasts.\n\n\"Well, I think I need a shower, care to join me?\"\n\nI followed Katie as we raced to the shower. I watched as she set the water temperature, then stepped in. I followed, watching as she lathered up with soap. The soap formed thick streams down her body.\n\n\"I didn't think it was possible, Katie, but you're even hotter when you shower.\"\n\n\"Well, come over her and kiss me, then,\" she said. I obliged, pulling her close as the water rained down on us. She started to grinding against my leg. Katie was so adept at doing this by now that she quickly brought on her first orgasm. She cried out softly as she ground against me, our wet bodies sliding against each other. I cupped her ass and held her close as she kept grinding against me, coming two more times in rapid succession. I finally picked her up gently, and she wrapped her legs around me. We rested with her back to the wall as I slowly penetrated her. She was tight from her recent orgasms but slowly yielded as I pushed into her gently.\n\n\"I love you so much,\" she said as I began fucking her slowly. It was awkward to support her weight and also not fall or drop her, but soon we established a rhythm that worked. Our tongues were intertwined and as I felt her vagina contract more she stopped kissing me to moan softly, coming again. I kept fucking her, the warmth of her body and the water making me feel weightless. She came again, and this time I did too, ejaculating what little semen I had left inside her. When we both finished, I set her down gently, kissing her. We finished our shower, and within minutes we were in bed, in each others arms, asleep.",
        "Chapter 7\n\nI woke to find Katie awake and looking at me. Her eyes were sparkling, and her freckles seemed to glow in the sunlight. She lay on her stomach, her round ass sticking up a little and commanding my attention. She was more beautiful than any girl I had ever seen, and here she was, naked in our bed. I never wanted anything to change.\n\n\"What is it?\" she asked, noting the change in my expression.\n\n\"Hmm? Oh, just thinking. About how perfect this is, about how perfect you are. I was just thinking about us. And the future.\"\n\n\"What about it?\" she said, kissing me. My penis was already stirring to life, and she took notice, taking it in her hand while she kissed me, pressing herself against me. I couldn't answer her immediately, because she was kissing me and had plastered her lips against mine. When she broke free she sat up, staddling me, and sinking down onto my penis with a slow, fluid movement.\n\n\"So,\" she said, as she slowly rode me, \"what were you thinking about?\"\n\n\"Do you want to talk about it right now?\" I said, somewhat distracted by her riding my penis. She stopped, sinking onto me all the way, but slowly ground against me.\n\n\"Well, since you seem incapable of multitasking, I'll sit here and wait,\" she said, laughing quietly. I paused, feeling her around me, before speaking.\n\n\"Well, I can't imagine our lives being any better than they are now. I love you so much. You're my best friend, and I can't imagine life without you.\"\n\n\"Why, you're too sweet, Jimmy,\" she said, rising up one and sinking back down onto me. I paused, shuddering with pleasure. She made her vagina contract once, giving me a voluntary squeeze. \"But you really should say what's on your mind, I don't know how much longer I can wait.\"\n\n\"Well,\" I said, amused by her impatience, \"I was thinking about how we're going to be going to college together next year. And I'd like to share an apartment or house.\"\n\n\"I thought we already agreed on that,\" she said, slowly starting to ride me.\n\n\"Katie...\" I said, losing focus of what I was going to say. She sighed, and stopped riding. She grinned, and I continued. \"I just want to be with you forever.\"\n\nShe looked at me, her head cocked to the right as if she was solving a puzzle. \"What exactly do you mean?\" she said quietly.\n\n\"I mean, that I want to be with you forever, and all that it means. I'm not proposing or anything, I don't think that would fly with our parents. But I will, when we're a little older. If you can handle that, and all that it means, then I'll be the happiest guy alive.\"\n\n\"Well,\" she said, leaning forward to kiss me. Her face was an inch from mine as she broke away from my lips. \"I'm the happiest girl on the planet, and it's because of you. So, I think I'm going to say 'yes,' and everything that that means.\"\n\n\"Really?\" I asked.\n\n\"Really, really,\" she said, pressing her body close to me. She started to ride me again, pressing her lips against mine and grinding against me. She came, and she panted hard and sat up, riding me hard, her breasts bouncing. I gripped her thighs as she came again, and this time I came with her, climaxing inside her as she collapsed onto me. We stayed that way for a long time, my penis finally softening and slipping out of her.\n\n\"It sucks that we have to go home today,\" she said.\n\n\"It doesn't matter, because I have you,\" I said, kissing her.\n\n\"And you always will, Jimmy. You always will.\" And Katie cuddled up against me, our bodies sticky from sweat. \"Come on, we've got a little time. Let's slip into the shower one last time before we go home.\""
    ],
    "authorname": "TxAuthor",
    "tags": [
        "best friend",
        "teens",
        "blowjob",
        "fingering",
        "fucking",
        "exhibition"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/my-best-friend-katie-pt-02-1"
}