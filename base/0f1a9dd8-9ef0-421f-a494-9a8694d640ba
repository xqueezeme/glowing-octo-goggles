{
    "title": "Champagne Pussy and Sodomy Dreams",
    "pages": [
        "Two of Nick's fingers were entwined with two of Anne's as he maneuvered them into her dripping wet core. The quartet thrust several times into the lubricating sheath before being withdrawn. Slowly, both hands moved in concert until they pressed firmly against the puckered skin of her anus. Astonished, Anne's eyes popped open as she stared at their reflection in the mirror. Was Nick really about to plunge all four fingers into her ass?\n\nThat day started out like any other. Anne woke up well before Nick and silently crept out of the bedroom. Down to the basement she went, and spent an hour on the treadmill. As per her usual morning routine, she used the time to surf new stories on her favorite erotic literature website. The only down side to her standard practice was that it left her extremely horny, and morning sex was quite a challenge on workdays. Arriving late to the office was never a good way to start the day. \n\nAfter her workout, she entered the bedroom a sweaty mess. Nick, she noted, was still sleeping peacefully. Tiptoeing into the bathroom, she started the shower and quickly stripped. The water felt refreshing as it cooled her down, not just from the exercise, but \n\nalso from thoughts of sex. Soaping up, she teased her clit briefly but decided to wait until later for satisfaction. Having sex with her husband was far better than masturbation.\n\nAnne hadn't seen or heard Nick approach but felt his body behind hers, while she finished rinsing. His arms gently wrapped around her small frame as he bent down to kiss her neck. He lingered, knowing it was an exquisitely sensitive erogenous zone for Anne. \n\nOpening her eyes, Anne tilted her head and looked up at her beloved husband. Together for nearly thirty years, she still genuinely adored him. They kissed deeply and stood a moment longer, her back against his front, before she turned into his hug. \n\nWith her head against his chest, Anne glanced over to the mirror above the sinks and admired their profile. They fit together perfectly. He stood a full foot taller and draped his body almost entirely around hers, his chin resting on her head. Anne reveled in the security of his embrace and nestled her legs between his. Of course, evidence of Nick's arousal lay between them like a lead pipe. \n\n\"Hey Babe, Happy Valentine's Day. Ya got time for a quickie?\" Anne knew the answer in advance. Yet being an eternal optimist, she held out hope.\n\nNick chuckled at her predictability and shook his head, \"Probably not; I have a meeting in an hour and it's going to be a long day at the office. But, the kids won't be home tonight and I thought we would stay in for a quiet evening. We can open some champagne and just go old school romance.\"\n\n\"Oh, that sounds...nice,\" Anne answered, with a twinge of disappointment. \n\nWith teenagers still at home, having the house to themselves was quite a luxury. Usually, Nick made use of any opportunity to break out the toys, and Anne definitely liked to play. However, if he had a kinky plan for the evening, he surely would have dangled a hint. Teasing her was just his style.\n\nNick stared down at Anne with amusement and replied, \"Come on now, don't pout. Let's just enjoy a low key night.\"\n\nAnne reached up and caressed his face, while smiling sincerely. Nick was right; conventional sex was fun. But, it had been a while since they had a chance to let loose with their deviant side. She mentally shrugged, letting it go. \n\nInstead, Anne focused on the here and now. Feeling horny as hell, she changed tactics. \n\n\"You're right, it sounds relaxing. But Babe, are you sure you don't have time for some fun right now? I'm super horny and you are too, judging by your boner.\" With that, she began to suggestively stroke his manhood, which rested above her waistline. \"Pretty please? You could fuck my pussy, or ass. I just really need some action, and it IS Valentine's Day. PLEEAASE??\" \n\nSince Nick had not yet had his morning coffee, he lacked the ability to resist Anne's shameless begging. His morning erection demanded relief and, as usual, she was ready and wanting. If he was late to the meeting, so be it.\n\nLeaning down, Nick kissed Anne before turning her around. They both faced the mirror through their glass shower door, Anne standing in front of Nick. Realizing Nick had relented, she raised her hands and clasped the sides of his face, which was above and behind her. As her body stretched to its full height it bowed slightly. Nick's attention was drawn to her small but pert breasts as they stuck out proudly.\n\nAnne's hands were soon engulfed by Nick's, and he guided them leisurely down her body. Their fingertips gently skimmed over her scalp, the wet skin of her face and down her neck. With his guidance, her left hand paused at the level of Anne's breasts, while her right hand continued down towards the sweet spot between her legs.\n\nRelinquishing control to Nick was fulfilling to Anne, both mentally and physically. He typically put a great deal of thought into creative ways of having fun in the bedroom. And, after spending nearly three decades together, he had become an expert at eliciting pleasure from her body. She could not have asked for a better lover. \n\nNow, as he literally took command of the morning tryst, Anne's already raging libido kicked into an even higher gear.\n\nNick steered Anne's right fingers along her taut abdomen, inching closer to her pussy. He purposely slowed the pace, as he noticed Anne's breathing had become erratic. Sensing she was desperate for contact, he delayed to increase her level of arousal.\n\nWith her attention focused on the progress of the pussy bound digits, Anne had completely forgotten about her left hand. Adeptly, Nick manipulated Anne's fingers around her tiny, raspberry shaped nipple and squeezed firmly. Anne's focus immediately shifted to her breasts as Nick navigated her hand from one to the other. \n\nThe force of the pinch on Anne's breast was enough to evoke a gasp, as her head was thrown back in delight. Anne's nipples were incredibly sensitive and Nick twisted roughly, just as she preferred.\n\nAt the same time, he led Anne's right hand down to her clit. The long awaited arrival brought forth an inadvertent cry from her lips. Nick 'shushed' her calmly, suspecting the kids were still home. At his direction, her fingers firmly circled the sensitive nub. \n\nLooking at their incredibly erotic reflection in the mirror, Anne felt like a marionette. As Nick pulled her strings, she felt wonderfully wanton. He alternated one hand between her left and right breast, while strumming her clit with the other. Anne was utterly spellbound by the salacious sight. \n\nBefore long, Nick shifted her right hand even lower until it hovered over her cunt. She was quite certain the moisture that was apparent between her legs had come from her pussy and not the spray of the shower. Parting her legs slightly, she allowed better access. Nick took advantage, and plunged two of his fingers, along with two of hers, into the source of her secretions.\n\nAnne was a bit stunned by his action. He had fucked her with many objects over the years: a portable phone, a banana, a beer bottle and a kitchen whisk, to name a few. However, in all their time together, he'd never used Anne's own hand as a sex toy. The idea seemed thoroughly base, and she loved it.\n\nThe presence of his fingers, along with hers, stirred a tremendous reaction in her slippery slit. Nick's show of force caused her pelvis to contract as it tried to grip the interlaced digits that pistoned in and out of her pussy. On the verge of an explosion, she bounced in order to augment the force of the finger fucking.\n\n\"That should do it,\" whispered Nick.\n\nAnne looked quizzically at his reflection in the mirror, not understanding his comment. At the same time, it dawned on her that their fingers were completely coated in pussy juice.\n\nSuddenly, he removed their hands and pulled them behind her hip. Anne tensed as she felt the fingers against her anus, brushing it gently at first. Looking at each other in the mirror, she saw his devilish grin and returned it with pleasure. Now, she understood his game.\n\nAs the finger foursome rolled around the edge of her illicit hole, it quivered in anticipation. The crinkled skin was hypersensitive and needy, as if it had been waiting patiently for a turn at some fun. Without delay, Nick pushed her fingertips into the raunchy recess. \n\nThe initial entry was smooth; Anne was no anal virgin. However, her fingers had never dared breech this unmentionable threshold. The sensation was beyond thrilling, especially as Nick continued his breast ministrations.\n\nWhen Nick forced all four fingers further inside her rectum, past the internal sphincter, Anne felt the rush that came from an abrupt intrusion. She loved a harsh entrance during anal sex. For her, a warm up ruined the moment. \n\nConcentrating on her fingers as they pummeled her own ass, Anne's eyes closed. The wall of her rectum was smooth and warm, just like her pussy. The most noticeable difference was the small caliber of the channel. At that moment, she gained a 'first hand' understanding of why Nick so loved sodomy.\n\nThere was no doubt; Anne also loved anal sex and the incredible orgasms it produced. The nerve endings in her anus seemed to come alive from the pressure of an incoming object. Even without motion, having her ass stuffed full with a dildo or Nick's cock could almost induce an orgasm. When movement was added, the resulting push and pull always made her cum, hard. The taboo nature of the act only served to magnify the allure.\n\nNow, standing in the shower, the friction from the thrusting fingers on Anne's highly sensitive rim was overwhelming. Feeling sexually crazed, she wriggled, writhed and squatted, tying to increase the intoxicating stimulation of her rectum. \n\nThen, just as she was about to reach the peak, the hands were suddenly withdrawn. Groaning, she turned as Nick stepped back with an expression of uncurbed craving on his face. Her frustration immediately turned to sympathy as she watched Nick stroke his engorged, pulsating cock.\n\n\"Fuck, you are such a Dirty Girl,\" he crooned. Watching Anne grind her ass on the fingers, left Nick incapable of harnessing his own desire.\n\nAnne managed to mumble, \"Flattery will get you everywhere, Sir.\" Bending forward just a bit, she pulled apart her ass cheeks. \n\nNick eyed her appealing anus, which gaped slightly from the recent assault. Bending at the knees, he lined his dick up with the target and ferociously shoved it in her ass. \n\nThe impact of his body against hers drove Anne forward so that her forehead lay against the glass door. Short on time, Nick dispensed with the niceties. Her hot ass welcomed him home as he pounded away at her tiny body. \n\nAlready primed for release, it was just a matter of moments before Anne's explosive orgasm commenced. A long, low pitched moan escaped her lips as power gathered in the small of her back and ignited a series of spasms in her ass. \n\nWhile her legs jerked, Anne's pelvis was caught in the momentum, spiraling into a series of rhythmic convulsions. Thankfully, due to Nick's support she managed not to fall to the ground from the force of her mighty climax.\n\nNick's chest rumbled as her ass rippled around his dick. Before allowing himself to cum, he pulled out and released a torrent of semen on her back. Being a very considerate spouse, he generally didn't like sending her to work with an ass full of cum. Pulling her back to him, Nick relished the feel of her body as it continued to flutter from the intense release of sexual tension.\n\nWhen he was sure she was steady on her feet, Nick used soap to wash away the remnants of his love. Kissing her one last time on the neck, he quickly soaped off and exited the shower. Anne definitely required a few additional minutes of recovery.\n\nThey crossed paths again in the kitchen and quickly wolfed down breakfast. Their usually egocentric teens had both already left for school, but managed to tidy up after their morning meal.\n\nValentine's Day cards were finally exchanged by the loving couple. Anne had written hers with heartfelt emotion. She thanked Nick for being a wonderful partner over the course of their many years together. He truly was the only man for her.\n\nNick's card was more simple and direct. \n\n\"I look forward to fucking you tonight,\" read the inscription. Anne nearly choked on her tea, enticed by the promise of her mate.\n\nAnne's face beamed as Nick smiled broadly. Unbeknownst to her, he actually did have kinky plans for the evening. A hint would be dropped, but later in the day. Parting ways, they headed off to work, both enjoying the satisfaction of their recent intercourse and excitement for a future union.\n\n*****\n\nAnne and Nick were both physicians, having met early on in medical school. While Anne worked in a group setting, seeing well established patients on a schedule, Nick was heavily involved in administration. Consequently, he spent very little time doing clinical work.\n\nAnne had a very enjoyable day at work and received several boxes of candy from patients, in honor of Valentine's Day. Then, just before the end of her day, she drew in a sharp breath, having received a shocking text from her husband.\n\n\"Bring home a metal one.\" Nick's text caused an immediate reaction in Anne's pussy, which suddenly felt sadly empty.\n\nAbout a week before, Nick had texted Anne, asking that she bring home a speculum with which to play. After presenting him with the requested tool, he'd been befuddled by the fact that it was plastic, as opposed to metal. Patiently, she explained her group had converted to plastic as a cost saving measure. After removing the speculum from the bag, Nick tried to get the hang of the \"new-fangled\" gadget. Sixty seconds later, Anne heard a loud crack as the speculum broke apart in his hands. Since Anne hadn't been sure of his intentions, she wasn't too disappointed at the time. \n\nNow, looking at her current text, Anne again wondered why Nick was suddenly interested in medical play. Mixing work and sex had never really appealed to either of them. In her opinion, work was best left at the office. But, she was admittedly impressed by his persistence. Well, if he wanted to 'play doctor', she would willingly go along for the ride.\n\nHowever, there was one rather big problem with her kinky assignment. While grabbing a plastic speculum from an exam room was not a big deal. Getting her hands on a metal speculum without being noticed was more challenging.\n\nMetal speculums were kept in a drawer that was in the middle of the nursing station. They were mostly unusual sizes, either very large or extra small, but in the mix were a few of the regular size.\n\nThe main issue was that five support staff members sat in the nursing station. Because they were all extremely attentive and helpful, there was absolutely no chance that she would escape unnoticed. Having finished with patients for the day, a creative excuse was needed, and fast. \n\nShe looked back at her phone; perhaps she had been mistaken. No, sure enough the text was there, plain as day. She briefly considered blowing it off, but was intrigued to know exactly how Nick would put it to use. \n\n\"Fuck!\" she thought to herself.\n\nLooking skyward, she rolled her eyes and started to laugh at the preposterous predicament. With teenagers still at home, she was certainly used to maneuvering so that they remained in the dark about her proclivities. Trying to think of a way to explain her need for a metal speculum to her adult support staff was a bit more difficult.\n\nShe took a minute to come up with ideas, while she walked down the hall towards her destination. Panic set in as she rounded the corner. All five assistants looked at her expectantly as she moved into their territory.\n\nImmediately, the staff members asked how they could help. Anne was uncharacteristically flustered. In her office, she was the team lead. The majority of her work day involved directing both patients and support staff. In the bedroom, however, she preferred a submissive role. It was an interesting contrast that culminated in a clashing together of her two identities at that very moment.\n\nWhile rebuffing their offers for help, she walked towards the speculum cabinet. Nonchalantly, she leaned over while rummaging through the contents. The head nurse walked over to Anne, causing her face to blush bright red.\n\n\"I thought you were done with patients for the day,\" said the nurse.\n\nAnne's heart raced now that she was truly on the spot. \"Yes, well I've... decided... to keep a few metal speculums in my exam rooms because...,\" she looked around wildly for divine inspiration, as she spoke slowly. \n\nThe God's of Kink were surely smiling down upon her as she spied an 'environmental hazard' sign on the wall, next to the dirty specimen sink. Feeling suddenly emboldened, she continued. \"After all, where are the plastic speculums sent when we're done with them? I bet they're just taking up space in a landfill.\" Anne shook her head in disgust, for effect.\n\nQuite sure that all people living in her area code could hear the pounding of her heart, Anne looked boldly at the nurse to see if her ruse was successful. \n\nPausing for a moment, the nurse raised her eyebrow. It seemed to take forever before she responded, \"You're probably right! I've never thought about that.\" \n\nAnne breathed a silent sigh of relief when she realized the excuse had passed muster.\n\n\"Don't worry, I'll have your room stocked with them by tomorrow,\" replied the always efficient assistant.\n\nOnce again, Anne tensed. \"Oh, um... don't worry. I'll just grab a few to... help... out.\" She honestly couldn't remember a recent occasion where she had sounded like such a bumbling idiot. \n\nSummoning all her courage, she dug through the cabinet in front of the spectators. Anne tried to appear thoughtful in her selection. She took a few of each size, and placed them on the counter. After closing the cabinet door, she gathered them in her arms and made a bee line straight for one of her exam rooms. She stuffed the metal utensils in a drawer under the exam table and returned to her office. \n\nAnne hastily packed up to leave, but was decidedly distracted, knowing that Nick had plans involving a speculum. Was this a red herring? He definitely indicated their evening would be conventional in nature. After mulling it over, she finally put it out of her head as she grabbed her coat and bag.\n\nAfter donning her jacket, and with her bag in hand, she snuck back into the exam room closest to her office. Closing the door behind her, she reached down and grabbed the source of her very embarrassing afternoon. Briefly, she considered which size would be best. The large one definitely piqued her interest, but instead, she settled on the standard size. \n\n***** \n\nIt was dinner time when Anne arrived home and entered the kitchen. She definitely was not surprised to find Nick enjoying a glass of his favorite scotch while waiting for her. Leaning against the counter, he looked every bit as handsome as when they first met so many years ago. His smile was broad as he eyed the bag she carried on her arm.\n\nDeciding to tease him a bit, she put the bag over the back of the counter stool closest to him. After walking closer, she pulled him down by his tie, until his face was just in front of hers. She kissed him gently and in return, he embraced her tightly.\n\n\"Hi Babe, did you miss me,\" Anne asked as she brushed her lips along his.\n\nNick pulled back to peer into her eyes, \"Of course, I always do.\" Although quite a pervert, Nick was also a very thoughtful husband who always made her feel loved. \n\nAnne sighed contentedly, \"Well, should we head out to dinner?\"\n\n\"We'll be staying in tonight. Now, show me what you brought home?\"",
        "With a look of feigned innocence, Anne replied, \"What are you talking about, Babe?\"\n\nNick merely chuckled; he could read his wife like a book. There was no doubt in his mind that she received his text and had the requested item in her bag.\n\nNick leaned down and murmured, \"Little One, hand me your bag.\"\n\nWhen Nick combined her Fuck Toy moniker with a direct order, Anne was in heaven. It triggered an immediate flood in her pussy along with a strong desire for a rough fucking. Without hesitation, she turned and picked up her purse from the chair, holding it open for Nick.\n\nHe looked in the bag and retrieved the speculum while grinning, \"Yes! Metal is definitely sturdier than plastic.\"\n\n\"Babe, are we using the speculum tonight?\" Anne asked hopefully.\n\nBeing purposely vague, Nick said, \"Little One, what kind of man would insert this into his wife's pussy on Valentine's Day?\"\n\n\"A very deviant man, Babe! And, you certainly fit the bill,\" she said, while laughing. \n\n\"Come on, the kids aren't home! Let's get crazy! Please?\" Recalling her success from earlier in the day, Anne resorted to pleading.\n\nNick spoke with resolve after pretending to give the matter some thought. \"Little One, let's discuss it while enjoying some champagne.\"\n\n\"Ok, let me grab a bottle,\" she offered. \n\nNick's eyebrows wagged suggestively, \"That won't be necessary. Let's head upstairs.\"\n\nNick moved past Anne, grabbing her hand as he headed for the staircase. She followed dutifully behind her man, encouraged when she noted he had not put down the speculum.\n\nAs they entered the bedroom, Anne had to smile. Candles had been placed around the room, bathing the room with a soft glow. A bottle of champagne sat on a nightstand.\n\n\"Well, this certainly looks romantic, Babe. Thank you.\"\n\nHis voice exuding dominance, Nick said, \"Take off your clothes, Little One.\"\n\nEagerly, Anne shed her dress, leaving on the open toe black pumps. She only paused briefly so that Nick could enjoy her new underwear purchase. The sheer black boy shorts and bra were embroidered with hearts. He smiled as she twirled for him. Then, she stripped completely.\n\n\"I'll open the champagne,\" Nick said, while walking over to the side of the bed.\n\nReferencing the classic Cheech and Chong line, Anne asked, \"Is it a bottle of that 'Fussy Pussy'?\" She then burst into a fit of immature giggles.\n\nGreatly amused, Nick smirked as he replied, \"It's so funny you should mention that.\"\n\nAs Anne scanned the room for glasses, none were seen. Nick popped the cork on the bottle while watching her, sensing concern.\n\n\"Hey Babe, you forgot glasses. Do you want me to run downstairs and grab some?\"\n\nShaking his head, Nick answered, \"No, we won't need them.\"\n\n\"Uh, are we drinking it straight from the bottle?\"\n\nNick appeared unbothered by her question. Instead he reached down and grabbed the speculum off the bed. With the metal instrument in one hand, and the bottle of champagne in the other, he said, \"Tonight, we will be using a very special glass. A fleshy goblet, of sorts. Are you starting to get the picture?\"\n\nAs she put two and two together, Anne's confusion morphed into elation. Like a three year old, she jumped up and down, while clapping her hands. Nick's eyes were drawn to her small breasts as they jiggled from the movement.\n\n\"Ha! I knew you wouldn't let a good opportunity go to waste,\" she said triumphantly. \n\n\"But, how are you planning to drink champagne from my pussy?\"\n\nNick had expected the question, \"WE will be drinking champagne from your pussy, Little One.\"\n\n\"Well, I'm not quite that limber, so I hope you have a backup plan!\"\n\nNick placed the bottle back on the table and the speculum on the bed. After walking into his closet, he returned with a small bag from the local hardware store. From within, he pulled a very long piece of narrow plastic tubing. \n\nAnne recoiled in horror. \"Babe, NO ONE drinks champagne from a straw!\"\n\n\"Think of it as a cocktail. After all, we'll be adding very special nectar.\"\n\nAnne tilted her head and thought it through. It wasn't the idea of drinking champagne from her pussy that bothered her, it was the straw. But, he had a point. Over the years, she had certainly sipped plenty of margaritas through straws. Was this so very different?\n\nFinally coming to terms with the proposal, Anne nodded resolutely. The creativity of Nick never ceased to amaze her. And, if the truth be told, she was very curious to know how much her pussy would affect the taste of the champagne.\n\nRecognizing a look of determination in her eyes, Nick saw that Anne was on board. He hadn't really worried about her reaction. She was always enthusiastic about trying new ideas in the bedroom, which made for a very happy and fun sex life.\n\n\"Babe, I can't wait to enjoy a drink from my pussy with you,\" she breathlessly sputtered the unusual combination of words.\n\n\"Ok, hop on the bed and get comfortable. Champagne we have, but is there enough 'juice'?\"\n\nAnne knew he would find plenty of fluid between her legs. She had been thinking about sex at work and during the long drive home. With the recent events of the last few minutes, she knew there would be more than enough 'special ingredient'.\n\nAnxious to proceed with the kinky activity, Nick quickly undressed. He moved the pillows away from the top of the bed and motioned for her to position herself crosswise, so that her ass was hanging slightly off the edge. Then, he took two pillows and put them beneath her hips, elevating her pelvis nicely. \n\nStepping back, he admired the view. Anne's legs were widely spread, her knees bent. Recently waxed, her bare pussy was on full display. After dropping to his knees, he knelt before her as if worshipping at a very lewd altar. Anne always offered herself fully and Nick considered himself a lucky man.\n\nAnne watched Nick as he studied her intimate space. Before long, she felt his fingers trace her labial folds and circle the opening of her pussy. The ease with which his digits slid over her slick skin confirmed that she would be able to supply her portion of the beverage.\n\nReaching over to grab the speculum, Nick looked serious while opening the hermetically sealed and very loud package. He clapped the instrument open and closed several times, most likely to make sure it wouldn't break. Anne followed the show with interest, knowing full well Nick was enjoying himself immensely.\n\nSatisfied with the durability of the speculum, Nick leaned forward and pressed it into her wet, needy pussy. The cold metal caused her to gasp and curl her toes, but she soon relaxed. Gently, he widened the mouth of the device and locked it in an open position.\n\n\"Get ready, Little One.\" Nick picked up the bottle and held it between her legs.\n\nAnne nodded, having been rendered speechless by the sexually outlandish act. Nick had clearly reached the pinnacle of inventiveness. She watched as he tilted the bottle slightly, so that a trickle of alcohol poured fourth into her open cunt.\n\nWhile Anne registered the cool temperature of the alcohol, she was a bit surprised that the bubbles went undetected. After Nick poured for several seconds, he put down the booze. The long tubing was retrieved and uncoiled. He lowered one end into her pussy and placed the other in his mouth. Looking her straight in the eye, he sucked.\n\n\"Well?\" Anne squeaked, barely holding on to her composure.\n\nNick paused, narrowed his eyes and proclaimed, \"Effervescent and crisp, with just a hint of poon tang.\"\n\nAnne practically convulsed in a fit of giggles, causing some of the mixed drink to spill. She quickly stilled to avoid further waste. \n\nUnperturbed, Nick reached for the bottle and refilled her hole. He reinserted the straw and offered her a sip. Anne's lips closed around the straw and she sucked for all it was worth. \n\nThe taste of the champagne was definitely affected by her pussy juice. The combination was tangy and complex. Savoring it in her mouth, she swished the liquid from side to side. Swallowing the obscene cocktail was a moment she knew she'd forever remember. \n\n\"Oh, I agree. It's quite refreshing. Hey! Quit bogarding the booze,\" she whined.\n\nNick had taken several swigs while Anne was enjoying her initial taste. Being a gentleman at heart, he again offered her the straw. Back and forth they went, while he refilled as necessary.\n\nFeeling a bit tipsy, she mused. \"I wonder why the word 'cocktail' contains the word 'cock'? I'm declaring this a 'pussytail'.\"\n\n\"No argument here,\" agreed Nick, unable to fault her logic.\n\nAnne continued brainstorming, \"You know, Babe, we should come up with a name for our creation and register it on one of those bartending web sites.\"\n\nNick was truly impressed at her suggestion. \"That's a great idea! How about 'Pussy Sunset'?\"\n\n\"Oh! That's a good one!\" Anne deliberated further. \"Hey, there's a 'Bellini' and 'Martini' -- how about a 'Pussini'?\"\n\nAnne and Nick spent a good amount of time debating the merits of several names: 'Pussy Colada', 'Sex on the Bed', 'Pussarita' and 'Pussito'. In the end, they agreed on 'Pussy Fizz'. It was simple and elegant, much like, the drink itself.\n\nFeeling they had imbibed enough of the very intimate mixture, Nick placed the bottle on the nightstand. Looking over to Anne, he noted the kinky cocktail had left her ready for action. \n\n\"Hey Babe, I'm pretty jacked up. Fuck me, now.\" Anne wore an expression that garnered no compromise. Adding alcohol when she was already hot and bothered usually decreased her patience greatly. Her limit had clearly been reached and it was time for action\n\nNick withdrew the speculum and removed the pillows from under her hips as Anne scooted back to the middle of the bed. He positioned himself between her legs which she had drawn to her chest. Sitting back on his knees, he eyed her pussy like a hungry animal. By this point in the evening, he was also quite horny.\n\nAnne was more than ready for Nick's invasion as he lunged forward, ramming his cock into her pussy. The look on Anne's face was one of pure delight as Nick began to bang her, without mercy.\n\nNick pointedly positioned his cock to achieve maximum contact with her G-spot. After a few deep strokes, Nick pulled out, leaving Anne alarmed and on edge.\n\n\"Babe, where are you going? I need more!\"\n\nNick grinned, looking like an errant schoolboy. \"Don't worry, Little One. I'm just moving South.\"\n\nRealizing Nick was about to sodomize her for the second time that day, Anne was ecstatic. Nothing matched the raw pleasure of having Nick's cock lodged firmly in her ass. Even better, she knew his dick was well coated with natural lube when it exited her pussy; the store bought variety would not be needed.\n\nNick's face was strongly set and without emotion as he jammed his dick into her very tempting tunnel. No mercy was shown as he drove in to the hilt. It was just the way Anne liked it and he was happy to oblige. In an instant, he was balls deep and prepared to give her the pounding she so deserved.\n\nLike a little rowboat in a storm, her body was jostled to and fro as he maintained a punishing rhythm. Wanting to lay claim to every possible inch of her ass, his fingers dug into Anne's hips in an attempt to hold her steady. Nick recognized her elated expression and knew she was enjoying the ride.\n\n\"Little One, put your hands by your pussy,\" he managed to say.\n\nAnne was roused from her trancelike enjoyment of the ass fucking. Confused, she did as asked. Both her hands went down and rested on top of her mons.\n\n\"Now, place your fingers inside, all the way.\"\n\nAt this command, Anne's entire body trembled. The explicit direction from Nick spoke to her on many levels. Anne reached her right hand forward and inserted three fingers into the drenched crevasse.\n\n\"Both hands,\" grunted Nick, as he continued to piston in and out of her rear channel. \n\nAn additional three fingers were inserted as Anne took a deep breath. With her ass full of Nick's cock, there wasn't a lot of available space in her pussy. She relaxed, adjusting to the extreme stuffing of both holes. \n\nAnne's previously tight ass became that much tighter after six fingers settled in her pussy. The increased pressure on Nick's cock was exquisite. Knowing he didn't have long, Nick groaned in satisfaction. Once again, his wife had allowed him the honor of using her like a Fuck Toy. \n\nImpressed that she managed to accommodate the fingers, he stammered, \"Fuck... Tell me... what you feel, Little One.\"\n\nAnne's was captivated by the impression of Nick's cock against the membrane separating her ass and pussy. She literally felt the contours of his cock's head, ridge and smooth shaft as it sawed back and forth.\n\nAnne was barely able to whisper, \"I feel your dick in my ass, Babe. It's moving like it owns the place. Please, don't stop!\"\n\nHaving studied the response of his lover for decades, Nick was aware that Anne was on the verge of a massive climax. Since the kids were away, her verbal reaction was quite loud. \n\nArching her back, she began to spew gibberish, \"Ugh! Mmphf! Argh! Harder! Fuck!\"\n\nNick's lost his composure rapidly. His once placid expression changed into one of a man possessed. He finally whispered the magic words as his frenetic fucking of her ass reached epic proportions.\n\n\"I'm... so close, Little One.\"\n\nAnne was beside herself. Her six fingers moved as one unit, in and out of her pussy, while Nick continued hammering away at her ass. It was a true sexual collaboration. After three more violent thrusts, the lovers reached the peak and together fell into an orgasmic vortex. \n\nAnne experienced a pussy quaking, ass shaking climax as uncontrolled spasms overtook her pelvis. On sensory overload from the fingers and cock, an ungodly howl accompanied her earth-shattering experience. \n\nForcing her eyes open, the sight of Nick was like gasoline on her fire. His face had contorted into a frozen mask of euphoria. Muscles flexing, his veins bulged as he was swept away into a blissful release. He finally stilled and Anne knew he was painting her bowels white. Being the consummate Dirty Girl, she would retain his cum all night.\n\nWhen the couple had returned to Earth, they looked at each other and laughed in exhaustion. Still impaled on Nick's cock, Anne managed to disengage her fingers from her pussy. It required a great deal of effort, due to the Jello-like consistency of her muscles.\n\n\"Are you ready?\" Nick asked before extricating himself from her ass.\n\nAnne sighed in contentment, \"If you must...\"\n\nA bit of cum oozed from her ass as it was left vacant. She felt it dribble down her skin and was disappointed to have lost some of her prize. \n\nLooking up at her husband, she laughingly inquired, \"So, did you have dinner plans for tonight, because I'm kind of hungry?\"\n\n\"Don't worry, it should be here in fifteen minutes.\"\n\nAs usual, Nick had thought of everything. Leaning down, he kissed her forehead. She pulled him lower, to her lips.\n\n\"Will you be my Valentine?\" Nick asked quietly.\n\nAnne replied in earnest, \"Always.\" \n\n*****************************\n\nAs always, this story is dedicated to my husband, lover and best friend \"Nick\". He really does keep things FUN in the bedroom. \n\nFor anyone out there who wants to reproduce our Valentine's Day 'Pussytail', we recommend a room temperature bottle of brut. We would love to hear about your attempts and successes/failures.\n\nXO,\n\nSue "
    ],
    "authorname": "SueDanym",
    "tags": [
        "anal",
        "speculum",
        "shower",
        "married couple",
        "finger fuck",
        "medical play",
        "sodomy",
        "titty twist"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/champagne-pussy-and-sodomy-dreams"
}