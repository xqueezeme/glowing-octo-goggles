{
    "title": "The Island Day 02",
    "pages": [
        "Note from the author:\n\nEven though this story set off as an \"Exhibitionist&Voyeur\" short story, it quickly started to evolve and transcend the sub-genre. So, just for the warning, there are some parts of this story which have a little to do with exhibitionism or voyeurism. I wasn't initially planning on such story twists. \n\nStill, it would be even more confusing if I started to publish every sequel in a different category. It will probably get even more complicated in the future sequels - as the same events might be described by multiple characters, giving the individual sequels a completely different tone. Whatever will happen, I will publish the entire story until its end in this category.\n\nOn the point of the accent of the Island's natives - as the Island is not located in the English-speaking country, imitating such a specific regional dialect was a mountain to climb. You might find it to be inconsistent. That will be so - because it actually is inconsistent in the original.\n\nAnyways, feel free to comment and even suggest some improvements - there's nothing that couldn't be made a bit better than it is now.\n\nEnjoy!\n\n***\n\nRest of the day, after the morning spent with Lara, was rather slow and uneventful, especially compared to a morning filled with 'activities'. I made a light lunch, went for a swim in the afternoon, had a lie down under the pines with a book in my hands and earphones in my ears, and then decided to stay in for the evening. Lara said that she'll spend the rest of the day with her friend (Interestingly, she was the first one on my mind when thinking who I could spend my time with), and I had time to meet the locals. Ante was a guy who didn't bother with going around spreading the news about arrivals and departures from the Island, so it was probable that none of the people I liked even knew I came. I had a couple of movies on my tablet, so I decided to hook it up to my TV (one that wasn't even connected to an outside source of signal - it was never used to actually watch TV, and I was rather proud of that fact) and just let myself doze off. I actually noticed that I haven't put one piece of clothing on me since the morning, and I was enjoying it immeasurably. Especially after months spent in winter cold and multiple layers, followed by heat and humidity endured in suits and similar combination.\n\nIt all went according to plan. I was watching some comedy and sipping a cold beer when I heard someone passing by the house. Whoever it was, that person was alone, because I heard only one pair of flip-flops. Steps continued on in the direction of the sea. Night swimming, or rather twilight swimming, since it was around 9:30 PM and some light was still visible in the western sky, just enough to be able to walk around. Still, this part of the coast wasn't so popular for night swimmers. You had to know pretty well where are the safe spots to enter and come out of the sea without getting cut on a sharp rock or stepping on a sea urchin. I presumed it was someone local. Who might, or might not drop in later. I went for \"not\" and continued to watch the movie. Soon a quiet splash was heard, and it became silent again.\n\nSome fifteen minutes later, my beer bottle was empty. So I decided to go to the fridge and have another one. While I was rearranging stuff in the overstuffed fridge, I didn't notice the flip-flop of the flip-flops approaching the house. Just as I sorted everything and started to close the refrigerator, the anti-mosquito door screen opened.\n\nTo clarify the situation: the cottage was small, built of the light beige colored stone and pine wood, with the usual Mediterranean brick-red tiled roof. It was about 540 square feet in size. Inside it was basically just one big open space, except the toilet. It had two doors on the opposite sides - one looking at the beach - let's call them the front door, with a small porch in front of it. The other, \"back\" door opened towards the pine forest and a little backyard consisting of a table with chairs, stone-made barbecue and some trees and flowers. The front door opened directly into the living room/dining room/kitchen. Bathroom i.e. shower and the sink were opened, and the person showering could hide from the view by a provisional shower curtain, which I haven't closed in years. I had plans to separate the bathroom with some drywall, but the idea remained just a theory as I never saw a need for it. The back door was directly next to the tub. Directly above the living space was an open platform with a huge bed and one closet. The house had plenty of windows, as well as exterior shutters that closed only when it was cold or the place was empty for a longer period. As it was in the middle of the pine growth, it was in the shade for the majority of the day and everything was opened up all the time I was there. Only mosquito nets were covering the window frames. I didn't even close the solid doors, just the anti-mosquito door screens which prevented mosquitoes and other bugs entering the house. It was a tiny Island, so thefts and burglaries were an unknown concept here. There was no reason to close anything, especially as the breeze coming from the outside was the perfect air-conditioning.\n\nWhich basically meant that whoever was coming into the house could see everything inside even before entering it. At that particular moment, it was me, naked, holding a beer in my hand. And that someone was Anita.\n\nJust as I closed the fridge, I lifted my head because I heard the screen closing. I saw Anita, standing there wrapped in a towel barely covering her from her bosom to her thighs. She was holding bikini parts in her hands, which meant that she was naked under that towel. And she saw me. All of me. I quickly covered my equipment with a beer bottle, which proved as a terrible idea, since the bottle was freezing cold. I removed the bottle even faster and opened the fridge again, standing behind the provisional cover. Anita started laughing.\n\n\"Oh Jeez... What'cha doin'?\"\n\nI'm really not shy - a point which was proven by the events of the morning - but this was Anita. Little Anita. It felt inappropriate for her to see me naked, especially when I remembered all the thoughts I had about her during last night and this morning. \n\n\"Oh, well... You surprised me.\"\n\n\"Are ya nude? Oh c'mon, what'cha hiding there, like I've never seen a willy on a man. Ya shamin'? Is it small or sumthin'?\" She started laughing.\n\nI looked down. It really wasn't in a showpiece state now, courtesy of the icy bottle treatment. Even more, I couldn't really explain the real reason for my sudden 'shyness.' Hell, I had problems explaining them to myself.\n\n\"Actually, yes. It's smallest ever!\" I tried to be funny. For a moment, there was a disappointed look on her face, but I quickly forced a laugh out so she realized I was joking.\n\n\"Eh, ya blokes. As if the World is spinning roun' your wieners. They all look alike when hanging, who gives a damn. Anyways, I went for a swim, and as I was passin' by I remembered that Pops told me to tell ya' that he'll fish out some munch tomorrow, so we can prepare it over here at ya'r place. Ya OK with it?\"\n\nOK, I was a bit more relaxed now. So, the traditional dinner was gonna be tomorrow.\n\n\"I'm always OK with it. Hell, I'm on vacation. You're also coming, right?\"\n\n\"Of course, wouldn' miss it for anythin', we need to catch up. Haven' seen each other for a century or so. And Pops said ya make nasty fish and squids, so I gotta try me some\" - she winked. She was always a foodie, and I was really proud of my culinary abilities.\n\n\"I'll be honored then to prepare whatever will be on the menu for the young lady.\"\n\n\"Oh! Could ya please give me some water? I'm thirsty as a horse, swam across the cove and back.\"\n\n\"I don't have it cold, sorry.\" That meant that I would have to move from the safety of the fridge and walk a few steps to the tap. Moreover, I would have to carry the glass to her. Or she could just decide to go there herself and pour a glass.\n\n\"Eh, tap's OK, no worries.\"\n\n\"You want a beer? Or juice maybe?\" I was trying to avoid leaving the fridge by any means necessary.\n\n\"Oh, no. I really need water.\" I couldn't miss that the corners of her mouth slightly curved upwards. Damn. She actually wanted the only drink which required me to walk naked in front of her. That cheeky girl.\n\n\"OK... You sure you don't want a beer?\" I tried for the last time, she might change her mind.\n\n\"Nah, not a beer lover. C'mon pleeeease, I'm really thirsty...\"\n\nOK, here it went. I took a deep breath, turned around and closed the fridge behind me. I felt the stare on my ass. I felt good and guilty at the same time. I threw a quick peek down. My cock was back to normal, together with the balls. I had no more options, so I decided to fake coolness, still minding not to turn my front side directly towards her. As I took the glass from the shelf and opened the tap, knowing it will take some time for the cold water to come, I started the small talk routine.\n\n\"So, you come here often for a swim?\"\n\n\"Ah come on, this is my favorite place on the Island, I was comin' here for solo swims since I was yay big\" - she showed about four feet of height with her hand. \"Ever since that Slovenian owned this cottage. If I could, I would evict you out and stay here for the whole summer.\"\n\n\"No way. This is my private little piece of heaven. Anyway, you must have been here a couple of times when I wasn't here?\" I asked the question intentionally, remembering the smell on my bed.\n\n\"Well, no, just... When I was passing by and Pops asked me to open it up a bit.\" She visibly blushed. I knew she came here much more often than she cared to admit.\n\nThe water was finally cold enough and I poured her a full glass. I turned around to give it to her, trying to hold the glass \"naturally\" - covering the important bits. Not only did my plan ultimately fail, but it actually made her look down. And kept her stare down as I approached her. I raised the glass up to her shoulder height, but her stare didn't follow the glass. This stalemate lasted for a couple of seconds until I decide to draw her attention.\n\n\"Your water?\"\n\n\"Eh? Oh yeah... Thanks.\" She flinched suddenly and grabbed the glass out of my hand. She tilted the glass and started gulping too fast. It seemed that the embarrassment transferred from me to her. She drained it in a second and - belched like a lumberjack. We started laughing. It reminded of those past years when I was teaching a 9-year old her how to burp. On one hand, she mastered it excellently, on the contrary, it made me feel guilty again - it's little Anita, for God's sake!\n\n\"There, see how you taugh' me\" - she said while laughing. \"I can sing the anthem when I drink the carbonated drink.\" This made me laugh too.\n\n\"Forget the anthem, you're grown up now. It's time for Mozart.\"\n\n\"Yaaa, Ode to Joy, and the whole quire at that. So that the Island women can go and pray for me in the church later.\"\n\nThe kid had a sense of humor, and it made me happy. I forgot that I was naked. On the other hand, she didn't. She looked down. Her face was facing my face, but her eyes kept rolling downwards.\n\n\"You want more water?\" I asked trying to stop her staring.\n\n\"Ya, sure, thanks...\" She pushed the glass in my hand absentmindedly.\n\nI turned around quickly and went to fill up the glass.\n\n\"Luvly luvly\" - she muttered through her teeth, maybe even unaware of it. But I heard her loud and clear. And it made me proud. Even my dick grew a bit.\n\n\"What?\" I pretended I didn't hear her.\n\n\"Eh? Oh, nothin'... Nothin'.\" She probably just realized she said it out loud.\n\nI brought her the glass, this time without the hiding routine. This time, she was also more focused. She was looking into my eyes, and it seemed that her eyes were a tad brighter than before. She took the glass silently and slowly drank. She left the sip. \n\n\"Ah, now I'm super. Well, I'll be off, Pop's probably got the dinner ready.\"\n\n\"What are you eating? Reheated fish?\" \n\n\"You idiot\" - she laughed at my lame joke and punched me in the chest. \"We'll just 'ave a snack. Some prosciutto and cheese. Are ya gonna go to the Town later?\"\n\n\"Nah, I'm resting tonight. The Sun and the beach wore me out.\" That was part of the truth, at least.\n\n\"Ya, I believe you that.\" The way she said it shook me a bit. I remembered the morning and I probably grinned without control, and she saw it. \"Anyways, ya see there's no problem in ya bein' naked in front of me. Nothin' to be ashamed of, believe you me.\" \n\nI didn't know how to react. That was probably a compliment, but it sounded so unreal when considered that it looked like a girl so much younger than me is pumping my self-esteem like I was some kid. Moreover, the complimentor was a girl I knew since she was of \"Boys, yuuuuck\" age. I just grinned stupidly and muttered: \"Thanks.\"\n\nShe looked down again and smiled with satisfaction. This kid became the devil. I had a feeling that it was all just her masterfully directed role play. Suddenly she hugged me and kissed me on the cheek. In doing so, she practically leaned on me, and I was confident that she managed to brush an exposed part of her body against my dick.\n\n\"I'll go now. See ya tomorrow - for dinner, if not sooner.\"\n\n\"Sure thing, say hi to Ante for me\" - I said, standing naked in front of his daughter. Oh man.\n\n\"Sure will!\" She moved towards the door. Her towel was barely reaching half of her ass, and the view almost made me dislodge my jaw. Her slit was slightly visible through the narrow space between her thighs. My body immediately forgot about all the sexual exercise - nay, one of the most magnificent fucks of my life - it had in the morning, and the pecker began to show signs of life. Although I was not a religious person, I started praying in my mind for her not to turn around. Suddenly she stopped half a step from the door. And decided to put on her panties, there and then. She bent down to pull one leg through them, making her towel raise up and uncover her whole butt. She seemed a bit clumsy doing that, and her towel almost slipped completely off of her. Now she was holding it in place with one hand why using the other to pull the other leg through the opening. I was entirely sure that this was all done on purpose, because she never looked back at me, although she knew perfectly well that I was standing not even 15 feet behind her and then I certainly wasn't looking at the ceiling. Just as I was completing my thought, her towel fell down on the floor. She snorted and bent down to pick it up, before pulling her panties up to her knees, clearly not in a rush to get covered. Her small, narrow, completely shaved pussy was fully exposed. My cock was erect and I couldn't hide it anymore - at least, not without making a disturbance in the scene. Only one thought raced through my mind: 'Oh shit, if she turns around now, I don't even want to imagine what will happen.'\n\nBut she didn't look back. She put on her panties and upper part of her bikini and then wrapped herself in the towel again. All that without a word or even a glance in my direction. She opened the door and exited. She almost turned the corner, when she leaned back and waved bye to me standing in the middle of the room with my raging hard-on. I waved back. If she did notice my erection, she didn't show.\n\nI didn't know what to think anymore, this was all a bit crazy. First the morning with Lara, now this unexpected and most unusual encounter with Anita. With one gorgeous and incredibly sexy young woman. It seemed that karma was rewarding me for something. I stood in the middle of the room and reran the mental recording of the last couple of minutes.\n\nI started to fondle my balls, with beautiful young ass and pussy of Anita in my mind, then shifting my thoughts to Lara and her smile, her ass, her hot pussy that tasted and smelled so amazingly... I played with myself, jerking off and massaging my balls. My dick was as hard as if hadn't came for three days.\n\nAnita and Lara were simultaneously in my head, not as competitors but as one phenomenal compound. I was inside one of her, then the other, entertaining their tits, asses... It started to boil inside of me and I came again. I spurted all over the floor and moaned loudly. I wanted them - individually, together, in any way possible... The possibility that this could be one legendary vacation started to occur to me. If all this continued, of course.\n\nI released my softened schlong from the grip and went to wipe the semen of the floor. As I came by the sink, I looked in the mirror and noticed that I was grinning as if I was high as a kite. Yeah, that was it. Probably the version of life that almost anyone would want. Going from severe sexual drought, in less than 24 hours, to the situation where I had sex with the strange, beautiful woman in the morning, while the other beautiful woman was at the same time apparently showing interest in doing a lot of naughty stuff with me - and me being ambivalent whether my desired response to her flirting would be appropriate or just downright wrong. Like they say: When the wheel starts turning... \n\nI gave up thinking, slumped back in the sofa and continued to watch the movie. I don't know at what moment I dozed off, but I know I did it feeling happy and relaxed, after a long time.\n\n***\n\nThe next day was pure leisure, without any events that would be interesting enough to be a part of the story. I went to my favorite rock in the morning. Afterward, I hopped to the Town to say hi to the people I knew, had some coffee and lunch, then headed back to my cottage for some siesta and an afternoon swim. I still wasn't in socializing mode and full Islanders' \"lifestyle\", which mostly consists of hanging around with one or more different people throughout the day (depending on their schedules), so I was still enjoying my moments of solitude on my beach spot.\n\nFortunately, it was still not the full season, the tourists were rare and no one decided to come there for a swim. Honestly, I was expecting Lara's and mine \"audience\" from yesterday, but it seemed they changed their location. I read half a good book, listened to a lot of great music (Marley, Jazzanova, Calexico...), and then headed back to the cottage around 6 o'clock to prepare everything for dinner. Ante would usually come by around 7 or 7:30, bringing cleaned off fish, squid or other seafood, and I would just season it and toss it on the grill.\n\nI took a walk through the grove around the house, collecting enough pinecones and dried wood for the fire. The drought was visible because there was an abundance of dry, fallen off branches laying around. I set up everything in the fireplace and lit up the fire. It would take at least forty minutes for the live coal to form, and then subside a bit so that the fish don't burn up. I sat in the deck chair next to the grill, lit up a cigarette and started daydreaming. I tried to avoid the prevailing themes, but I just couldn't. I also wondered where Lara was. I haven't met her since our encounter the previous morning, and I had a burning desire to repeat at least some part of that meeting. Still, it's not as if I lamented the thought too much. She was on the Island for as long as I will be, so it was almost inevitable that we will meet in the next few says. Mmmmm, those beautiful perky nipples and contagious smile...\n\nHowever, I quickly redirected my thoughts on Ante and Anita. I was thinking how the yesterday's meeting will affect the dinner conversation. It's not as if she was drunk yesterday, which could make her uncomfortable. Again, her dad would be present, so it was hard to expect any sexual tension in the air. For now, I decided to deposit the whole theme in the safe hidden somewhere in the far corner if my mind's thinking room, and to rather concentrate on the familiar stories that were on the menu of Ante's and mine dinners.",
        "Just as the grill was almost ready for the barbecue, I heard two pairs of legs approaching the house, carrying one strong male and one gentle female voice. The tone of the voices sounded serious, but I was unable to make out the topic. Since the barbecue was in the \"back\" of the house, which was open to the path towards the Town, I saw them soon enough. When Ante realized that I could hear them as well as see them, he told Anita in a very sharp, but quietened tone of voice: \"I've told ya it ain't good! Leave the man alone, please.\"\n\nAnte carried two bags, and Anita was bringing a bottle of wine. She was looking at the floor when Ante was talking, but momentarily looked up and smiled when they came close enough. However, this was the first time I saw her smile not being completely spontaneous. Ante's smile was, on the contrary, entirely sincere. He was always joyful about our dinners. Mostly, he was happy to see me grew up from the hyperactive, 'bad' kid I used to be into the man I am now. He probably thought of himself as one of my tutors - well, the summertime kind, at least.\n\n\"Where are you, my favorite Islanders?\" I asked standing next to the fireplace like and old professional, with the fire rake in one hand and the cigarette in the other.\n\n\"Look at ya, standin' there like sum backwater redneck!\" Ante yelled approaching me. He came to me and gave me a friendly hug. \"Here's the much, just put some of yours voodoo spices on it and toss it on tha grill.\"\n\nI took the bags in my hand and dropped them on the plate lying next to the grill, just by the side of the plate on which I already prepared the vegetables and the foil-wrapped potatoes. I came to Anita: \"Where are you girl, you feeling good?\"\n\n\"Yeah. Hi.\" She hugged me, but it was the coldest and the most reserved hug ever since I came to the Island. But she leaned in and whispered in my ear: \"I 'ad a fight with Pops, I'll tell ya later 'bout it...\" OK, it was clear now, except in what part it had anything to do with me. She might have even gotten embarrassed about our yesterday's voyeur show.\n\nI decided to break the tension: \"C'mon people, take your seats\" - I pointed to the table next to the grill, and then immediately stopped Anita: \"Darling, could you please go to the kitchen and bring out three wine glasses, as well as some water? There's cold water in the fridge.\"\n\nMy last sentence made her smile again, at least. She probably remembered me standing behind the refrigerator door. Or maybe me after moving away from that spot, who knows. Meanwhile, Ante quietly sat down at the table. He never yelled or showed nervousness - if he was troubled by something, he would go fishing and thought about it. If he couldn't solve something, he stopped bothering about it. That's how his marriage ended. I never saw him beating himself up over it, he just couldn't find a solution, then let it fall apart and simply adjusted. Of course, their current fight was obviously not anywhere near that magnitude, so I just hoped that there will be no silent treatment between them this evening.\n\nI checked the bag and got pleasantly surprised. Two large sea breams, at a pound each, and on top of that one beautiful grouper. Fish galore, enough for everyone to get stuffed. \"My dear Ante, great catch. We'll eat like the kings.\"\n\n\"Eh, mate, that ain't sumthin' much. It's too hot, they don't bite. There wasn't enough even for Anita and me last three days, so I wasn't sure that I'll catch anything for dinner tonight. I got some luck, though...\"\n\n\"Ante, haven't you heard about karma? It clearly states that what must happen, will happen. You said 'dinner' and karma made it sure that there will be dinner since she knew we haven't seen each other for a long time and that we want to sit down and eat something.\"\n\n\"Ah, ya're full of wisdom like it's a dog shit... Boy, no wonder I like ya. Ya've been livin' in the worst place in the World, doin' nasty job full of stress, and still ya get here full of optimism.\" Well, my dear friend, that optimism didn't come with me here, it was created here. I didn't tell him that, as I believed that it wouldn't be the wisest thing to go into details of that fact.\n\nJust at that moment, Anita came out with glasses and the bottle opener. The Island didn't have its own wine. It was too small for serious winemaking, so Ante ordered wine from his friend, who had vineyards on the bigger and much more famous island. The wine was excellent the last few years, and I hoped it stayed that way. Anita opened the bottle expertly.\n\n\"There ya go, see what bartending in the summer does? Now my own daughter can open the bottle quicker and better than I can\" - said Ante jokingly.\n\n\"Of course, it was the time that someone starts opening wine for you.\"\n\nShe poured three glasses and passed one to each of us. My hands were dirty from fish handling, so she put mine down next to me. I wiped my hands on the towel and grabbed the glass. \"A toast\"- I called. There's something about raising glasses that makes people forget they are fighting. \"For this meeting after many years, and for every summer to be at least as good as this one, if not even better.\" We clinked the glasses and took a sip. Anita almost drained her glass.\n\n\"Deary, the summer jus' started, how come it's already so good?\" Anita asked curiously. Her hazelnut eyes widened.\n\n\"Well, I'm here where I want to be, with people I like, and everything that's happening is even better than I was imagining.\"\n\n\"Umm... Ya've been her for just two days, what's it gonna be like by the end? Ya may decide to stay sum more, eh?\" This time, I heard a mix of curiosity and wanting in her voice. This sentence didn't sound like a courtesy invitation.\n\n\"Who knows\" - I said quizzically. \"I'll go and toss the fish and the veggies on the grill, potatoes are already roasting.\"\n\nFish was grilling while we had some small talk. I was wondering how come Anita wasn't still in her university now, so Ante quickly bragged that she did her finals well before the deadline, and then came to relax a bit before starting her summer job in the City. She planned on working through July and August, and then to take a one-month trip with her friends to Argentina and Uruguay before coming back to her final year of studying. I congratulated her on the choice of destination. If I had the time, I would go with them in a heartbeat.\n\nThe food was excellent. My secret was to fill the fish with some pesto Genovese so it would get a unique flavor. Anita mixed up a summer salad which we all picked out of a big bowl. The atmosphere became completely relaxed, each bite of food and sip of wine making us laugh a bit louder, and their fight seemed to be a thing of the past. It was great to see father nad daughter acting and understanding each other as if they were friends. If it weren't for the age difference, their characters would make a person think they were siblings.\n\nThey asked me a lot about my life and my career. They were happy about my success but still found it incredible that I was ready to sacrifice so much of my life almost all year long. I explained to them that my next step was to organize everything in a way that my job would be less and less hands-on work, and much more pure supervision. It would enable to have much more free time in the next few years - of which I would spend a lot on the Island, at least in the summer.\n\nWe ate up, and Anita cleaned up the plates and everything else from the table. It was visible that she did it naturally, without any fuss, even though she didn't leave an impression of a person who found household maintenance as something to be desired in life. She came back and poured more wine into our glasses even before sitting down.\n\n\"I hope that's not all of the wine? I'm jus' getting' thirsty, guess I picked that up from Dads, heh heh.\" She said that looking at Ante, who was just gently smiling.\n\n\"Oh-eh, really kid? Ya wanna say I drink a lot, or tha' ya can handle some?\"\n\n\"C'mon Dads, I know ya always put all yar buddies under the table before ya even started slurrin'. I got that trait from ya.\"\n\n\"Oh really? So, ya're getting' yar friends drunk, ya poor lassie? Good thing ya're not drivin' them to sober up in the ER.\" Ante tried to sound angry, but it was just an act. He couldn't blame her for being, well, like him.\n\n\"I know, old man. That's my destiny. So we better be careful not to put our dear host under tha table tonight.\" She laughed. \"I wouldn' want him to go to bed too early, I's a long night.\" Now she looked at me significantly.\n\nTo her luck, I could also hold my liquor pretty well. It wasn't my first time drinking with Ante, and I could boast the fact that I was able to more or less follow his tempo. Truth to be told, he wasn't drinking to get drunk anymore, but rather to stay in a sort of a tipsy state. Still, I was in the open field now and had to be careful not to get wasted by their 'alliance'.\n\n\"There are couple more bottles that I brought with me - there by the fridge - if you feel like bringing them over.\" Anita immediately jumped up from the table and headed towards the kitchen.\n\n\"There ya go. She's at that age, always up for getting' drunk while having fun with people. I know I'm her dad, but wha' can I say - I ain't been different at twenty-two.\"\n\n\"Don't worry Ante, it's not as if you have problems with her. We'd drink it anyway, with or without her.\"\n\nThe wine was poured and drank, we talked and laughed even louder, our tongues were let loose and we hopped from subject to subject. Johnny Cash was playing on the speakers - Ante's favorite. We went through their last year or so, state of the country, the state of the Island, and then somehow the story slipped into our past.\n\n\"Oh my, I remember when we were all together here one year, I think ya were about seventeen\" - Ante started the story in a style of the wise old man. He just needed a beard and a pipe to create the perfect picture. \"Ya were still comin' here with yar folks - ya always stayed at Baba Branka's place in that luvly apartment. Your Pops\" - he pointed the finger at me, then saddened a bit - \"God bless 'is immortal soul, always complained tha' they had to practic'ly drag ya over here as ya were sayin' ya'll die of boredom on the Island, tha' they didn' understan' ya. And then ya mingled with tha' lil' German girl, Inge or sumthin...\"\n\n\"Ingrid\" - I corrected him. \"And I was sixteen. Trust me, I remember that.\n\n\"Well, as long as she was 'ere you jumped 'round 'er like a peacock and suddenly the Island was tha pretties' place in the World for ya.\"\n\n\"Ante, of course I did, I lost my virginity with her.\" As I said that Anita giggled. Ingrid was older than me - she was eighteen - and was very determined to make a man out of me, and I wasn't complaining a bit. Not only did I lose my virginity then, but I had more sex that summer than many summers after that. \n\n\"Ah hah... Tha's why I had to pack home early that summer? I thought ya were mad at me...\" Anita said with fake sadness in her voice.\n\n\"Oh come on, you were a kid following me everywhere. I couldn't have taken you with Ingrid and me to the beach...\"\n\n\"And I thought ya hated me and didn' like me 'cause I was still a kid.\"\n\n\"How could I hate you? You were just in the way when a perky German was giving me some really ambitious sex lessons. It wasn't plausible with you in the vicinity. I think you get it today, right?\"\n\n\"Today I do. Well, I hope she taught you well.\" She threw a deep stare at me, as if she was honestly expecting my reply. Ante looked at her, then at me, but I kept my cool.\n\n\"I believe she did. Never had any complaints later in life. Not even Darling, a creature of its own kind, had anything to object to in that area.\"\n\nAnita frowned at the mention of the Darling. The story went on about our past days, me taking Anita to the beach with my friends, where we all scared her that horrible things will happen to her if she ever spoke about what she saw there (first cigarettes, beers, weed, experimenting between boys and girls...). Ante laughed, and I had a feeling he knew all about it.\n\n\"Do ya know why Anita stopped comin' to the Island?\" Ante asked me. Anita suddenly blushed and slapped him on the hand.\n\n\"Dads, please don't...\" She told him, but somehow the tone of her voice wasn't showing that she really, really wanted to keep that story as secret. \n\n\"Come on luv, i's been seven years, wha's that gotta do with anythin' now?\"\n\n\"Noooo, what'll he think of me?\"\n\n\"Whatever, he's grown up, he'll understan'. Anyhow\" - he addressed me again - \"ya just got together with Darlin' before tha' summer, right?\" I nodded. Well, I've never connected these two moments before - at least not in a sense that seemed to be revealed now. I looked at Anita, who was shifting her eyes between Ante, me and the floor.\n\n\"So I called Anita - it was gonna be the firs' or maybe the secon' summer since her mother and I got divorced - to talk about her comin' over. I casually mentioned that ya'r comin' with yar new girl, and she starts to weep on tha phone. So I was all dumbfounded, askin' 'er wha's going on, luv and such... At firs' she didn' wanna tell me, and then she admits she's in luv with ya, tha' her world crumbled to pieces and tha' she can't bear to see ya anymore. So I told her not to come.\"\n\nEven though I expected something like that, I was a bit taken back. Here is the father, telling me casually about his daughter, then fifteen years old and having a crush on me, while that same daughter sits with us at the table. I looked at Anita again. This time, it seemed as if she was OK with the story, and not as if Ante was giving out too much information. On the contrary, she intervened in the story.\n\n\"Oh my, Dads... When I remember that... I wanted to kill myself, to kill Darlin'. I never met 'er, and yet I hated her more than the devil 'imself.\"\n\n\"See, she always told me everythin'. I understood her crazy teenage head much more than her own mother. Then I told 'er not to come if she'd feel bad. I know wha' it's like, bein' in luv with someone who ignores ya, I've been there when I was young. And, honestly, I was 'oping that yar thin' with the Darlin' will be over soon. Truth to be told, I never liked 'er.\"\n\nI didn't know how to react. Little Anita, that little girl that I always considered to be someone I baby-sitted, was in love with me, and my relationship with Darling was the reason she didn't go to the Island. It was actually a bit of a shock now. Moreover, what intrigued me now if that crush was just a thing of the past or if it still existed, but it just wasn't the moment to be asking that. Anyway, Anita continued with the story.\n\n\"Listen, deary, no worries... I found myself a boy in the City later. I's not as if I 'adn't came to the Island for seven years 'cause of ya and Darlin'.\" She said that while smiling, but I couldn't tell if the smile was honest or fake. \"It was just a teenage crush. Ya were my role model and I thought we were gonna marry as soon as I turn eighteen.\" \n\n\"I think Ante would have a lot to object to such wedding.\" I said that trying to close the subject.\n\n\"Honestly, Ya'd be much better choice than all those other punks she introduced me to. At least I know ya, boy. Tha' doesn' mean ya'd get off easy, she's my only child and I want nothin' short of perfection for her.\"\n\nLovely. I was in a pre-marital interview now. It was all a bit funny now. But at least I somewhat better understood the last two encounters between Anita and me. I wasn't so sure that there were no more feelings on her side.\n\n\"C'mon now Dads, ya can be cal now. There's no boy now, I'm 'ere on the Island with ya now, and look who's with us 'ere. Jus' like good ol' times\" - said Anita consoling her father.\n\n\"Ya said it. It's luvly to see us. Or better said, to see two of ya. I just go old, and ya're like a pretty picture - good lookin', smart, grown-up people.\"\n\n\"As for the looks, you can say that for Anita, but how did you get to pick me in the beauty contest?\" I said jokingly.\n\n\"Whatcha talkin' 'bout?\" Anita got upset. \"Ya look better than the las' time I saw ya. Ya're like wine, the older, the better.\" She took my hand and smiled at me. We were all a bit tipsy now, but now I got convinced there was more to the previous story. Either that or I was drunker than I knew. Ante didn't comment much or react in any way to Anita's words and action.\n\n\"OK, thanks for the compliment\" - I replied and squeezed her hand. I remembered that she had the opportunity to see everything about me there is to see and that she obviously liked it.\n\nThe conversation, however, steered in a different direction. We finished the second bottle, the darkness fell and Ante begun to yawn. \"Kids, I'll 'ead home slowly and leave ya two to continue with catchin' up. I believe ya've got much more to talk about without me around.\" Then he looked at Anita: \"Anita, please jus' remember wha' we talked 'bout before comin' over.\"\n\nAnita's stare pierced through him. I guess that conversation they had before coming to dinner was quite interesting. Still, I wasn't going to interfere.\n\n\"Alright Dads, don't worry\" - she practically hissed those words, but then immediately mellowed her tone: \"I'll be 'ere for a bit more, then I'll jump in the sea...\"\n\nSo, she planned to go for a swim. I didn't see the towel, nor bathing suit. She had a summer dress on her, but no other pieces of clothing were visible through that fabric. An instinctive feeling started to cross my mind, that something interesting was going to happen tonight. I just hoped that Ante didn't have the same feeling. Or, at least, that he didn't mind.\n\n\"OK, ya jus' enjoy yarselves. An' don' get too drunk!\"\n\n\"We won't, Dads (Ante)!\" Anita and I said that in unison, then started laughing. \"There ya go, as if seven years never passed. We both know wha' to say to ya and when, Dads.\"\n\nAnte got up slowly, kissed Anita on her forehead and headed towards the Town. Even though it was dark, he didn't use the flashlight. He lived on the Island his whole life, he knew every inch of every trail and could have walked it in the dark, blindfolded and on one leg.\n\nNow it was just Anita and me. And the Thievery Corporation's 'Lebanese Blonde' in the background. The music was relaxing, the cards were laid out on the table, some by Ante, some that I've learned by deduction. Still, the only person that knew the full deck was Anita. There were some awkwardness and tension in the air, and just as I decided to break it, Anita spoke: \"Let's go down to the beach. Just take the glass with ya.\"\n\nI was still confused, but she was already on her feet and lightly heading towards the familiar spot. I followed her like an obedient boy. The curiosity was too strong, and the wine prevented me to over-analyze the deeper context of the moment.\n\nWe came up to the rocks, the same ones on which I was sunbathing and occasionally (yesterday, that is) fucking Lara. I immediately regressed in my mind, making my dick spurn inside my pants. I quickly sat down, not wanting to raise a tent in front of Anita. She sat next to me. We were staring into the distance for a while, observing the channel and the other islands in front of us, recognizable by the lights scattered around the horizon and dark lines on places where the landmass merged with the sea below or the sky above. After a couple of minutes, Anita spoke. Her tone of voice was, well, momentous.\n\n\"Ya know, I didn' want ya to learn 'bout sum things like that. Dads fucked it up prop'rly.\"\n\n\"Eh, don't worry. We're all humans. Anyway, bygones be bygones...\"\n\n\"Look, it ain't that simple. It never is. I was definitely plannin' to talk with ya 'bout sum things while ya're 'ere. I told that to Dads, to let 'im know I'll confess. He was against it, afraid it'll create problems between us. That's why we got into a fight. Guess he believed if he told the story while we're all together, the story would jus' slip by. I luv 'im, but he can be a bit na\u00efve. Somewhat old-fashioned in sum matters.\"",
        "\"He's your old man, he loves you. He probably thought it'll be embarrassing. But honestly, after last night words can hardly be embarrassing.\" I accentuated the last part on purpose. Whether it was because of the wine, or just because of my personal trait on avoiding protraction on any subject, I decided it was time to resolve this issue for good and to find out what was exactly in her head.\n\n\"Ahem, yeah, last night...\" She thought for a second and then laughed, throwing her head between her knees. \"I rather liked our little rendes-vous last night.\"\n\n\"I haven't doubted it.\"\n\nShe punched me in the shoulder. \"Oh really, eh? Ya liked it, ya old fool, waving your pecker in front of me like tha'?\"\n\n\"That, and also the unexpected viewing of something I never expected to see.\"\n\n\"Whatcha talkin' 'bout?\"\n\n\"Your changing. Or rather, putting on the bathing suit.\"\n\n\"Ah.\" She stopped here as if she wanted to say a lot, but she bit her tongue. She sighed, deciding she was going to tell me everything, either now or never. It was now. \"Let's start from the beginning.\"\n\n\"You mean, from where Ante should have started?\"\n\n\"Yep. When I was fourteen, I noticed... Well, ya know I entered puberty rather late, like, I didn't need the bikini top until then?\"\n\n\"Yeah, I remember. Some girls even teased you over it.\"\n\n\"Don't remind me... Lil' bitches, I ain't even sayin' hi to them when I see 'em. Well, anyways, that summer ya came to the Island, and I saw you and felt somehow weird in your presence. I really wanted to be near ya, always and anywhere, I wanted to touch ya, hug ya, kiss ya... I knew it was a crush, read sumthin' 'bout it. And I was thinkin' ya'll surely notice me at some moment.\"\n\n\"But you never said or did anything to show.\"\n\n\"C'mon, I was ashamed. Ya were already in college, wha'd lil' ol' me mean to ya. And then, one time when ya, Jose and that little Slovenian guy - ya know, he used to come 'ere before - went sumwhere tha' night, so I wanted to go with ya. Ya'll sent me packin' like I was sum vermin. But I followed ya. And saw ya goin' to the beach with sum girls. I watched ya for hours from behin' tha bushes. I think ya were drinkin' sumthin', smoked a joint probably. And then decided to go for a swim. Skinny-dippin', of course. That was the first time I saw ya in the nude - from far away and in the dark, surely, nothing much to be seen. But it was more than enough for me. I was done for...\"\n\n\"Oh, honey, I'm so sorry. But it was the time when we were only looking to drink, get high and score... With someone our age, you were simply too young.\"\n\n\"Yeah, but that was my first time...\"\n\n\"First time what?\"\n\n\"I... Ya know... I was in luv.\"\n\nI couldn't see it for myself, but I believe my pupils just widened drastically. Little Anita was just telling me how I was her first object of love and desire. I choked a bit on my wine.\n\n\"Anyways, after tha' night, it was enough to see ya that day - I'd immediately remember the feeling and then... I mean, I 'ad to tell ya, I've been waitin' too long. Hope I ain't scarin' ya.\"\n\n\"No, not at all. I'm just feeling a bit weird, I wasn't even trying to imagine that I was a subject of your desire. You were a kid, for fuck's sake.\"\n\n\"Well, after that summer I waited a whole year to see ya again. My boobs had grown, I felt like a grown woman, so I thought ya'll finally notice me when we see each other. But when Dads told me the next summer ya're comin' with a girlfriend, I just fell apart. I 'avent gone out of my room for a few days, I cried, tellin' myself and my Mom that the World's gone to shite. I kept thinkin' how ya fucked it up and who's tha' bitch who stole ya from under my nose...\"\n\n\"Oh, Anita... You were fifteen, and I knew you since you were eight or nine. I couldn't imagine looking at you that way. Actually, it would make me a pedophile. And Ante would probably pierce me with his harpoon.\"\n\n\"C'mon, I understan' it now. But then, that was the World's end for me. I told Dads an' he advised me not to come to the Island, 'cause he didn' want me to be all miserable in the summer, lookin' at ya and Darlin' bein' all smoochy and luvin'.\"\n\n\"Yeah, I can imagine how you felt. Especially in your pubescent state of mind, God knows what you'd think of doing.\"\n\n\"Anyway, for a long time after that, I couldn' even feel what I felt when I remembered ya. I lost every need for the... Ya know, luv in any sense.\" I was actually amazed how open she was about her... Well, needs and past desires.\n\n\"Now I feel guilty...\" I said feigning to be crestfallen.\n\n\"Oh, ya dumbass, be quiet! And stop worryin', I found a boy later - quite a bit later really, I was already 18, lost my virginity with 'im - although he ain't been much in shaggin' department - but at least I forgot about ya. Well, almost forgot, as I got my needs back, sumtimes I remembered ya while lying alone at home, in my bed.\" She winked at me suddenly.\n\nI swallowed loudly. My heartbeat increased, it needed to pump extra blood in the nether regions. \"OK, until when did that 'remembering' of your last?\"\n\n\"Who says it stopped.\"\n\nRight in the face. My blood was now pouring down to my groin. I couldn't remember the last time I had a conversation that was weird and pleasant at the same time, inappropriate because of the details and age of the main actor of the story, and still such a turn-on. I kept on repeating the mantra in my head: 'That is little Anita, little Anita, little... sexy...smart... beautiful... Anita...' Shit. I was hooked.\n\n\"You mean...\"\n\n\"Yeah, ya still get to inspire me\" - she stroked my hand while saying it. Not a friendly stroke, but a sensual one. I got goosebumps. \"Pops showed me some recent pics of yars he 'ad. Ya were even better-looking than I remembered.\"\n\n\"You want to say you're still...?\"\n\nShe laughed. \"Nah, don't worry... I mean, not the way it was then. This is now more a kind of a... Permanent attraction.\"\n\n\"So, when we saw each other two days ago, when I got here...\"\n\n\"I knew ya 'ere comin', Dads told me. I couldn' wait. And when I finally saw ya, uuumph... Let's just say I put myself to sleep really fast 'n' easy that night.\"\n\nI sensed that we were minutes away from something much more serious. But this conversation needed a closure. My dick was already at half mast, maybe even more - primarily because Anita was so incredibly open towards me and showed absolutely no shame while she was talking about it, especially considering the subject of conversation. I've never had a chance to talk this way to a woman who wasn't in a relationship with me. I was hoping they existed, and that they weren't just sluts or tiring babblemouths. Basically, at that moment, I was mentally thanking karma, all deities, and everyone or everything else that people show their thanks to at such moments.\n\n\"OK, so now I'll ask: that putting on of panties yesterday evening?\"\n\n\"Oh, completely on purpose, heh heh. Ya bein' naked was still an extra moment, 'aven' been expectin' it. As I said, I've seen ya naked before, but never so up close. And I was so 'appy when I saw what I saw. So I 'ad to treat ya with little sumthin'.\"\n\n\"To be honest, I was extremely satisfied with what I saw. You just have to understand, it was extremely hard for me to switch off that 'little Anita' and turn it into 'grown-up Anita.' But your body convinced me of it.\"\n\nMy dick was hard. Not just hard, but rock hard. If hadn't had really casual pants, there would be some ruptures in the seams.\n\n\"Ya think I'm pretty?\"\n\n\"Anita, you're beautiful from head to toe, each part of you.\"\n\n\"I saw ya get aroused yesterday. But I didn't wanna react in front of ya. I was burnin' up inside from the desire to tell ya my thoughts, but I was still kinda scared it'll go awry.\"\n\n\"Honestly... I needed relief after you left.\"\n\nShe was looking directly into my eyes. Smiling. Her dark-brown irises almost disappeared underneath her pupils. I felt an enormous pressure. I thought she was waiting for me to kiss her or react in some other was, but suddenly she got up and started to take her dress off.\n\n\"Let's go for a swim!\" She said pulling the dress over her head. She had no underwear. She tossed the dress onto the floor, turned around towards me and extended her hand. I stopped for a second. Although it was dark and it was only half-moon above us, the light was sufficient for a goof view of what was in front of me. Wow. Besides having an incredibly beautiful face, now I finally saw her tits that were perfect, round, firm, with small dark nipples and clearly outlining aureolas of the same shade. Her magnificent 5ft6 frame looked like it was gathering from all directions to point at her clean-shaven pussy, fully visible between her lovely shaped legs which were separated at the thighs for just the right width. Her small labia were barely protruding out. I was speechless.\n\n\"C'mon, whatcha waitin' for? Ya've never seen a naked woman before, so it got ya stuck?\"\n\n\"No, I've never seen naked you. Or even thought that I ever will. And this is... I mean, you are... a 10.\" I got up, completely forgetting about my ludicrous erection.\n\n\"C'mon las, stop talkin' and get them clothes off, I ain't gonna be the only... Whoaaaaaa! Look at ya devil!\" She noticed the tent. Now she crouched herself and pulled my pants down quickly, and my cock jumped out like a catapult, pointing directly at her. She smacked it with her hand and got up.\n\n\"Well ain't he a proper Jolly!\" She said through her laugh. \"And a proper spear it is. But 'e should be patient, there'll be time for full attention. Le's go now!\" She turned around, made a couple of steps and expertly plunged, head on, into the sea. I followed directly behind her. What a crazy, funny, energetic woman. If I were any younger and more na\u00efve, maybe I'd already start to fall in love. As it was, I was a bit drunk and strung like a crossbow.\n\nI didn't understand what it was all about. I was in relationships, had a share of one-night stands, half-night stands, even hour- and a few minute-stands, but I've never experienced as much female audacity and shameless desire for action as I have in the last two days. Maybe it was my own special vibe, or maybe it was about the Island and some energy circuit that was currently located directly underneath it, deep inside the Earth's mantle. Generally, I didn't care. I had no more problems with 'little Anita' moment. Now it was sexy, naked, inviting Anita.\n\nShe already swam quite a distance from the shore, and I followed. She stopped in the middle of the cove, floating on the surface while the moonlight illuminated her beautiful hemispheres peeking out of the sea. Her nipples were completely stiff. I swam faster towards her, and she suddenly went under. She was gone for a while, so I became unsure whether I was in the spot from which she disappeared. It is really hard to orientate in the darkness in the sea. Suddenly something grabbed my leg and pulled me under. I sunk and immediately started to grab around blindly. I felt her naked skin under my fingers, but I had no idea what I was grabbing. It was a meaty, soft part of her body. Her ass. I pulled her with both of my hands towards me, but she wriggled out of my grip and surfaced. I did so too, just next to her.\n\n\"Let's see ya, old man, can ya still swim like ya did when ya were a young lad?\"\n\n\"I can still catch you with one arm behind my back and one curled leg, kiddo.\"\n\n\"Yeah, right\" - she said and started swimming. She was fast. Much faster than I remembered. I went after her, full speed ahead. And I was barely catching up with her. Now we were in a part of the cove where the shallow sandy part started. This was the summer location for the families, but now it was deserted. I was a couple of yards behind her when she suddenly stood up. Sea was up to our waists. I got up to and started running after her through the shoal. We started playing like little kids, spraying around and pushing each other to the surf. Suddenly she jumped on my back and latched herself with her limbs onto me. I stood still like a soldier, feeling her boobs and groin touching my skin.\n\n\"Giddy-ya, horsey, c'mon!\" She yelled into my ear.\n\n\"Ooh, I'm the stubborn mule, you're not gonna make me move so easily.\"\n\n\"Ah really? Ya sure?\" And she bit my neck. Too hard. I yelped in pain unconsciously and threw her off of me. She fell in the shallow sea and sand with a big 'Splat'.\n\nI turned around immediately to check up on her. Her curls were covering her face, and she was sitting in the surf and didn't move. I approached her and gently removed her hair from her face. She was staring directly into my eyes, but I was completely unable to figure out if the look was angry, sad or just deceiving. I felt it was the time for action. I crouched and came completely near to her, lifting her chin with my hand.\n\n\"Shall I kiss to make it better?\" I asked, rather rhetorically, now being less than an inch from her face.\n\n\"It's the only thing appropriate, I am a young lady ya threw off of ya.\" Now it was perfect puppy eyes' stare.\n\nI kissed her. She returned the kiss without hesitation. In less than a few seconds we were completely entangled. I had a feeling she was experiencing something she had been waiting for years. She was kissing me firmly, lustfully, as if she still didn't entirely believe that she crossed the finish line. Her hands were on my back, in my hair, and I was doing the same. At one moment, I grabbed her ass and picked her up from the water, and she latched around my hips with her legs. We continued kissing like that, standing in the shallow surf. I started kissing her neck and then proceeded across her collar bone to her tits. She started to breathe more deeply. She was wet and salty, but I still felt her own scent and taste over the layer of seawater. I gently began to nibble and suck on the soft skin of her bosom, which made her whisper: \"Mhmm, just like that...\"\n\nI grabbed her buttock more firmly and squeezed them. Her ass was firmer than I was used to on women, it was evident that she was in a superb shape. I was subconsciously comparing Lara's and Anita's body. I was stupid, each of them had her unique beauty, smell, texture, but it's normal when you end up with two women in two days.\n\nAnita lowered her legs to the ground and stood in front of me while we were kissing. Her hands went down my back, all the way to my ass. She squeezed it hard and then started to lower her mouth over my torso. Only then did I realize that my cock was completely hard and that it was pressed between us the whole time. She kissed my chest, my nipples, lightly nibbling on them, and then went to my stomach. She lowered her head in line with my groin and firmly grabbed my manhood in her hand.\n\n\"Aven' I told ya there'll be time for 'im, eh?\" Her tone of voice was arousing, even a bit slutty. She stared into my eyes and slowly pulled my foreskin over my knob, then massaging the head with her fingers. I didn't want to close my eyes.\n\n\"God, when I remember how much I wanted to see it, feel it... Mmm, it's even better than the one I imagined. This one's real, it's in my hands, and now it'll go in my mouth.\" She winked at me again and immediately swallowed the half of it. Then she squeezed her lips around it and slowly pulled her head back, all the way to the tip. She licked it all over, then played around the hole with her tongue. While she was holding the base of my shaft with one hand, she fondled and lightly squeezed her breasts. This was top-of-the-line, expert level blowjob. I didn't have much experience with women who were at this level. It was clearly visible how much Anita loved sex, how much she adored cock and that she had absolutely no desire to hide it from me.\n\nShe was sucking it and taking it in deeper and deeper. She would get almost to the base, then return while staring into my eyes. I was losing my foothold more and more. My dick was twitching in her mouth, my brain was far above the boiling point. I wanted to fuck her now... No, I wanted to fuck her, over and over, all the time.\n\nI pulled her up. I didn't want to cum now. I had to try her to before that. I kneeled in front of her and spread her legs. I immediately sensed the smell of her pussy juices. As soon as I closed my fingers around her, I felt how wet she was. It wasn't the sea, it was the stream of her own wetness, pouring out of her in incredible amounts. I started kissing her - actually, slurping her juices of her outside pussy lips, while massaging the middle with my finger. Her clit was already hard underneath the cover, her inner lips gentle and soft. They parted without resistance, allowing me to explore her orifice. Anita was already moaning loudly.\n\n\"Yea, deary, yeah... I knew ya'd know... Lick my pussy, com'n com'n...\"\n\nMy tongue was already on her clitoris. I was gently strafing it and circling around it. It didn't need gentle foreplay; it was already so wet that I immediately upped the tempo and got a positive response from Anita.\n\n\"Just like that, yes yes yeees...\"\n\n\"You have a gorgeous pussy. And now is the time for it to cum.\"\n\nI saw that it wouldn't take long. My tongue was working: up and down, around, then on the tip... my fingers toyed with her tight hole, I pushed one of them inside and started to massage her g-spot. I used my other hand to play with her ass, playing closer and closer to her tight pucker. Unlike Lara, it seemed that Anita was at home with this type of the game. Her hands were on my head for a few moments, then moved to her tits. She sucked her own fingers for a while. She was crazy and loud. She moaned, groaned, screamed: \"Yes! Yes!\"\n\nHer whole body started to shiver. Her orgasm was coming, and I attacked even harder. I stuck a finger up her asshole and then suddenly, without warning, the avalanche came.\n\n\"YEEEESSSSSSSSSSSS! FUUUUUCK MEEEEEEE! NOOOOOOW!!\"\n\nShe twisted and moaned. And I had every intention to fuck her, right now. As if we did it a hundred times before, in half a second she was on her hands and knees, her ass pointing up, her fingers manically rubbing her clit, while my steel hard cock was on her entrance. As wet as she was, she was still really tight and I couldn't shove it in her the whole way. Nor was it necessary. A soon as I put the head in, her moans got louder. Her orgasm was still lasting. With every hit of my pelvis into her ass, she let out a new throaty scream. I felt her pussy squeezing, widening, trembling from the inside... I tried my old trick and stuck my thumb up her ass... She bucked, groaned and rammed herself even harder into me, impaling onto my cock and on my thumb.\n\nI was also near the finish now, feeling those first signs of the unstoppable orgasmic rush. Our bodies were moving at incredible speed but also in unbelievable harmony. We knew each other, and obviously our subconsciousness immediately connected on a sexual level. We were two beasts on an empty plateau, releasing years of pent up energy in this one, brief moment. I was inside of Anita, suddenly feeling as if this moment was bound to happen since the beginning of time. She sounded like all the years of waiting were coming out of her, as if this was the one orgasm she wanted to experience ever since that time she made herself cum in the bushes above the beach. I knew that my orgasm was only seconds away, and Anita seemingly read my mind:\n\n\"Cum inside me, I'm on a PIIIIIIL! JEEEEEEEEEEESUS!\"\n\nI almost started laughing, but first I had to cum. I released the brake and fired it out of me. I was loud. Her loudness made me comfortable, so I let my soul to verbally express everything that needed to come out of me. I was moaning, panting loudly, screaming, ramming her as if I wanted to enter her wet, hot, young pussy with my whole body, and she was still squeezing me, pulling me inside of her even though the last spurts were now spraying out of me. I was giving her what she wanted and kept on fucking her as long as my cock remained hard enough. I was still fingering her ass with my thumb, which she enthusiastically took into her.",
        "We started to subside slowly. Suddenly, she laid down on the sand, belly down, and I pulled out of her, turning on my back next to her. We looked at each other and started to laugh. It took us whole life to decide to do it - correction, it took ME so long - and now it seemed as our sex was the most normal thing in the world.\n\n\"Deary, ya're the fuckmeister...\"\n\n\"Darling, you're a fuck queen!\"\n\nWe laughed again. Just like being teenagers learning what sex is for the first time, what the dick and the pussy are for actually. She caressed me gently on my face, I caressed her ass.\n\n\"Eh, did I catch ya or what? Ya weren't expecting it, admit it.\"\n\n\"Never, Especially not such an overt act.\"\n\n\"It's sex! I luv it, I adore it. Why'd I be ashamed of it? Most men 're scared of me 'cause of it, but I saw ya ain't one of those, especially after wha' ya did with that woman on tha beach.\"\n\nI almost choked. She saw me with Lara?\n\n\"How did you...?\"\n\n\"I was going for a swim and ran into... Well, ya two were just in the middle of it, and tha' funny couple was starin' at ya like two idiots. So I knew ya knew 'ow to fuck, and that I needed to act now. But I didn' wanna intrude then an' there, it wasn' the moment.\"\n\n\"Well, it didn't bother you...?\"\n\n\"Deary, what'd bother me? I ain't no lil' girl no more. Ya fucked 'er yesterday, ya fucked me today, so what? She ain't been your girlfriend.\"\n\n\"She isn't now either. I don't know her phone number, nor where she's staying...\"\n\n\"I've seen 'er in the Town, she's pretty... And she's got a lovely friend. I'd do her to, trust ya me...\" While she was saying it, her eyes sparkled.\n\n\"We'll see...\" I brushed off that last remark, only to avoid a sexual overload in my brain just now. This week was getting better and better. \"Let's swim back, we can continue talking back in the cottage.\"\n\n\"Talking?\" Her tone was sarcastic, followed by a loud laugh. It made me laugh too. We got up and entered the sea, swimming slowly back towards the rocky spot under the cottage. \n\n***\n\nWe climbed back up on the shore, picked up our stuff and went back to the cottage. When we got in, we just threw our useless clothing items to the side and turned on the light. I finally saw her, top to bottom, in all of her beauty. She was just stunning, her body looked like it was sculpted by some perfectionist sculptor. She went to the kitchen, hopping merrily, and then drank a glass of water, bringing me one too. I drank it in two gulps.\n\nIt was apparent she had no intention to waste any more of our time as she climbed the sofa and stuck her ass out. Which made me decide not to waste any more time. Her beautiful ass opened up, uncovering her tight, flowerlike asshole and her still inflamed pussy that was just leaking some of my semen out.\n\n\"Soo, where do ya wanna put it now?\" As she was saying that, she spread her cunt with her fingers.\n\n\"In both of them, of course.\"\n\n\"Well deary, ya filled up my pussy already, don't ya think it'd be 'orrible if ya neglected my butt?\"\n\nMy cock was at full mast again. She was slowly playing with her pussy, and then she stuck one finger up her ass.\n\n\"I really, really luv bein' fucked in my butt. Mmmm... Would ya be a sweetheart and come over 'ere?\"\n\nI bent down and slowly licked around her starfish which she was still fingering. It smelled really fresh, as she clearly prepared for all options. She pulled her finger out and dedicated her attention to her pussy again. I took over the task of satisfying her desire for anal pleasure. I licked her, sticking my tongue inside and spreading her slowly, which made her moan in pleasure. And, as it seemed, she loved talking during sex.\n\n\"Oh, this makes me feel sooo good, ya got no idea... I imagined ya doin' this to me a thousan' times, oooh...\"\n\n\"Well, then you'll probably love this...\" I lubed my finger with her pussy juices flowing out of her like a river again, and then pushed it inside of her ass. She groaned.\n\n\"Oooh, yes yes... More, give me more...\"\n\nI spread her entrance some more, and then slowly inserted a second finger. This got her to start twerking her backside, sucking my fingers in and then squeezing them out.\n\n\"Sooo good... Yes baby, just like that, oh yes...\" I was just beginning to realize what a sex expert Anita is. I hated the word \"whore\", and I could never call her that, but it was obvious she was up for anything related to sex. \n\nAnd then, out of the blue, she stopped and gently pulled my fingers out of her. She turned around to face me. \"Wait... Come with me.\" She grabbed my hand and led me up the stairs to the platform. We climbed on the bed.\n\n\"Look. I have this... This fantasy 'bout ya and me, it takes place right 'ere.\"\n\nI looked her in the eyes, and they were lit up like high beams. I sensed this was going to be something amazing. \"OK, I'm all ears. And a cock in one part.\"\n\nShe smiled and patted my manhood with her gentle hand. \"Yeah, and just the right part.\" Then she put her hands around my waist and continued talking. \"I had this fantasy a lot of times when I was on this bed, sooo... Wanna' make it real for me?\"\n\n\"Does it involve kicking me in the balls?\" I asked jokingly, but knowing there is actually a chance she'll say yes.\n\n\"No, I promise. Unless ya wan' to...\" She grabbed them. I shook my head. She gave me a wet kiss. \n\n\"Then I'm all in!\"\n\nShe reached under the bed and pulled out a box. That wasn't mine. It contained a medium-sized dildo and a tube of lube. I didn't even have to ask what it was doing in my house, but she had the need to elaborate: \"Look, deary, ya weren't 'ere, and I coudn' do back 'ome what I luv doin' when I'm alone. And it was empty 'ere, so nice... And it's ya'rs.\"\n\n\"I smelled your scent on the bed that first night I got here.\"\n\n\"Ya better 'ave, I climaxed on this bed at least twen'y times before ya got to the Island. Las' time no more than half an hour before we met at Dad's place.\"\n\nMy mind was blown, and my cock was now so hard I could have probably torn down the house with it. And it was time to enter a filthy mind of this girl. She lay down on the bed and told me to climb onto her in a reverse 69. She lifted her legs and I settled with my cock in front of her face. She was really agile, setting herself so that I could easily approach her pussy and her asshole. She immediately started to fondle my dick and balls. \n\n\"Take the...\" She started saying, but I knew what she was thinking about.\n\n\"I'm already on it.\" I took the dildo out of the box and started to lubricate it. I also put a decent amount of lube on her ass, outside and inside. This made her euphoric.\n\n\"God, ya're readin' my mind... I guess I'm not that 'ard to figure out, right? Now put it in, I luuuuv that! Also, let's see if ya luv what I had in mind for ya.\"\n\nAs she said that, she pushed me a bit downwards. First I felt her fingers gently rubbing my asshole, and then her tongue sliding across it. I was in seventh heaven. What a feeling. She slid her hand across my manhood and my jewels and held my buttock with the other. I grunted rather hard, which she took as a cue to keep on going. As I came back to my senses, I pressed the dildo against her rear entrance. As I began to push it into her, the waves of pleasure traversed her body and she vibrated, moaning with delight.\n\n\"Oh my, oh my... Aaaah!\"\n\nI started to push it deeper into her while simultaneously working my tongue on the wettest pussy I've ever had the pleasure to experience. At the same time, she drilled my ass with her tongue more and more. Although a lot of guys would automatically define this as \"gay\", I haven't even thought of something like that. Basically, it was just fantastic. And she had the urge to say it all out loud, which I found so amusing and sexy.\n\n\"Yummmm... I just luv rimmin' ya, ya've such a cute ass...\" She spanked me as she said that, then moaned and continued: \"Oooh God! Ya're workin' me really good, deary! Put ya'r finger in my pussy now, please.\"\n\nI tried laughing for a bit, but the pleasures of our mutual actions were stronger, so the laughter quickly transformed into a loud groan. She was now seriously jerking me off with her tongue inside of me while I was dildoing her ass and fingering her pussy. My tongue was quickly vibrating on her love button. We were really loud, glued and slippery of our secretions at the same time, I stuck my tongue into her pussy and began fucking her with her dildo without hesitation. She moaned and grunted, jerking me off faster and faster, while not removing her tongue from my ass. Dildo was entering her without any resistance. I felt her perineum stretching as I returned to fingering her cunt, rubbing the thin barrier between my fingers and the veiny, silicone toy. Then I turned my fingers around and found her g-spot, which I started to rub immediately. This made her scream in ecstasy again, so I kept on going. But I couldn't hold on in this position anymore. Just as I began to consider a change of arrangements, she moved her face from my ass and delivered her request.\n\n\"Go down, luv! It's time for ya to put some real meat in my butt and fuck me proper!\"\n\nI got up and flipped her sideways, positioning myself behind her and lifting her leg. I set my knob at the entrance of her already stretched asshole and pushed it inside. I went in like a finger into a glove, which made her scream in pleasure.\n\n\"Oh yes, oooh YEEEES! Fuck me, fuck me, FUUUCK MEEE!\" And fucked her I did. I speared into her ecstatically, but it was evident she could take some more. She seemed too much out of it to tell me anything she wanted me to do, so I decided to improvise. I saw the dildo lying next to her. As I fucked her, I found the mental strength to divide my attention, pick the vibrator up, and then to thoroughly clean it and wipe it off. After which I rammed it into her wide open cunt. She jolted up and began to release the incredibly throaty grunts. Her both holed were filled up. Amazingly, she grabbed the dildo with her hands and started to fuck herself with it like a beast, syncing the rhythm with my thrusts.\n\n\"This is... Oh yeeeeeah... So good... I'm goin' craaaazyyyyy!!\"\n\nShe couldn't take it anymore. She began to convulse manically and to jerk violently, while releasing the deafening moans. She was screwing herself at the speed I couldn't possibly follow. She squeezed her sphincter around ma cock so hard that I thought it will explode inside her, but I wasn't going to retreat for even a second. She was somewhere else. I remembered the moments with Lara the day before, but, as amazing as that was, it was camomille compared to what Anita was experiencing right now.\n\nSuddenly she pulled the dildo out of her pussy and I felt the waterfall of liquid streaming down my leg and my thigh. She was screaming, biting the linen, jerking like someone possessed. She had just ejaculated. As quick as she pulled the dildo out of her, she stuck it back inside and continued to fuck herself, really fast and precise. Her asshole was still tightening; she was still cumming. I was just and appendage, a tool of a sexual champion that needed an equally skilled partner. She was born to do this. As her body began to twitch again, and her screams became louder again, she pulled the dildo out and I felt the stream of her cum running down my leg again. She looked like she was barely conscious. I wanted to know what that orgasm felt like, but it was something I could only dream about.\n\nGradually she slowed down, her jerks stopped, her screaming silenced, and she slowly moved off of my dick. She got up, her balance rather shaky, and kneeled before me. She grabbed my red, swollen glans and started to jerk me off. She extended her other arm between my legs and set her finger at the entrance of my butt hole.\n\n\"Oh, my wonderful fuck-boy... I wanna see ya cum, let yar sperm fly...\" It didn't take long. Her management of my butt was something completely different from anything I ever tried in that respect, so I simply blew up. With only seconds before I felt the approaching eruption, I clenched my fists. Anita saw me coming, and she set herself up so that it would hit her directly. I came with a beastly roar. Jets of sperm were soaking her hair, her face, her tits. I blacked out. Without a shadow of a doubt, this was one of - if not THE best orgasm in my life. I felt the house shaking, the universe around us falling apart while we were floating in nothingness, in a dimension where everything and anything consisted only of perpetual climaxes. I had no idea how long it lasted. I couldn't feel my arms, my legs, my body. Just spurts of semen flying out of me at the speed of sound. The sheer pleasure.\n\nWe collapsed on the bed. More correctly, she just laid down, all sprayed, soaked, sticky, and I just fell down next to her, still in a semi-hard state. We slowly came back to our senses, just breathing loudly. Here and there we'd looked and each other, smiled, and then closed our eyes again.\n\nYes, the moment with Lara was fantastic, fun, different. But this was... Just unbelievable. If this was going to continue in this fashion (and I had no reason to think otherwise), I wasn't going to be rested at the end. But I was definitely going to go home with a grin all around my head.\n\n\"You can...\" I started to speak meekly but didn't get a chance to finish the sentence.\n\n\"Yeah... An' it's yar fault. If it weren' for ya, I wouldn' practice tha' much when I was little and found out abou' it. But it takes jus' the right style and frequency to do it. Of course, it was so much easier with ya in my ass. Many fantasies on mine 'came truth this evenin', I gotta tell ya.\" She kissed me. She had a bit of my sperm on her lips, but it didn't bother me at all. She didn't even try to wipe it off. I pulled some bedsheet and started to remove the semen of her eyebrows and her eyes.\n\n\"Leave it, deary... I like it like that.\"\n\n\"You're incredible. I only got to know the adult you tonight.\"\n\n\"No, ya didn'. There's much more of me to know. And I believe there's a lot of ya to get to know still.\" She cuddled my balls, and then my face.\n\nWe talked for a long time, laying on the bed. She had a strong desire to speak about herself and her experiences. Even though she adored sex and was practically always in the mood, it wasn't as if she would put out to anyone. I figured she had a lot of partners (not as a bad thing), so I was really surprised how small a real number was. Compared to her expertise, that number was small even when multiplied by three, as they always say should be done with the girl's confessions - although I found it hard that she'd lie and lower the real figures. She's been with women also, only it always had to be in secret - the Island, and even the City were too prude to understand such sexual freedom. I understood it completely - understood it and supported it eagerly, as a man who found two women in action as the epitome of sexual beauty. She had her philosophy. Ever since she was little, she approached every subject seriously and with diligence, so she had that approach to sex as well. She read, researched, explored, experimented - never afraid to try anything out. Which was clearly visible in practice.\n\nI told her about my seven years of life since we last saw each other. About hard times, good times, sexual adventures, good and bad anecdotes. We fell asleep like that, just slumped on the bed, covered in juices and lubricants. And we both slept smiling as wide as an ocean."
    ],
    "authorname": "nad3536",
    "tags": [
        "nude beach",
        "voyeur",
        "old friends having sex",
        "exhibitionism",
        "anal",
        "female ejaculation",
        "rimjob"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-island-day-02"
}