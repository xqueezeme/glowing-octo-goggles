{
    "title": "Tribal Bonds Ch. 02",
    "pages": [
        "Hello Readers! This is Part Two of a Six-Part story. All six parts are written and will be posted in order. It takes place in the same universe as my \"Sultanah\" series, but you don't need to read any of that to understand this story (but you really should read it). In Part 1, Kedi was sold into slavery along with a member of a rival tribe, Cilek, but the slavers were seemingly attacked by ghosts. Please, please, please let me know what you think!\n\nChapter 2: Among the Ghosts\n\nI was not dead.\n\nAt first, that was the only thing that I knew. My senses, at least a few of them, returned to me. And I knew that I was alive. I knew that because I was not in the farthest North, beyond the glaciers. I was not at a feast with all of my ancestors. With Buzcu. And I was in pain. I was alone and my body ached. So I knew that I was alive. \n\nBut I had no idea where I was. Or how I'd gotten there. My head ached, it was difficult to think. My stomach swirled and at first, it was all I could do to avoid vomiting. I felt as though I'd been drunk the night before. A hangover far worse than any I'd ever felt before. A hangover just short of death. \n\nI breathed slowly and kept my eyes closed. Eventually, my mind stopped spinning. My stomach settled, and I was able to think. I tried to remember where I was. I thought back to the last thing that I could remember and found that it hazy. My mind cycled through a series of unrelated images. Being sold to slavery, cities I'd slept in, being on the wagon on the road. Finally, I remembered the Kabile girl,Cilek. I remembered humiliating her. Being humiliated in turn. I felt the memory of the orgasm. And then the fear, as the men moved towards me.\n\nThe fear returned now, and despite the fact that it hurt my head to move, I pulled my legs to my chest, making myself small. For half a moment, I felt as though I was back in that moment, totally exposed. But, I took a breath, I controlled the panic. I felt that I was warm. There was no breeze. I wasn't outside. I felt clothes on my body. I did not remember what had happened. The men might have had there way with me. I might be in Topu or K\u00f6le's tent. Maybe that was why I hurt. But the danger had passed. \n\nI was alive.\n\nIf I wasn't still next to the campfire, attached to the Kabile girl, I needed to figure out where I was. Try to remember how I'd gotten here. I knew I had to open my eyes and look around. Still, I felt safe in this moment, because I could not see. I feared that if I looked around, the illusion of safety would evaporate. For perhaps a minute, I resisted the urge to peek. I squeezed my eyes even tighter together. But I could not forget that I was Buz. In the far North, we could not afford to indulge our fantasies. And here, possibly surrounded by danger, I faced the same reality. I breathed in deeply and opened my eyes. \n\nI groaned. There was a fire burning twenty feet away. It was small, but my eyes were sensitive. The pain was nauseating and I nearly closed my eyes again. My stomach rolled and my vision was hazy. But I kept my eyes open. The edges of my vision remained blurry. But eventually, the room around became reasonably into focus.\n\nAnd it was a room. I had been right, I was inside. But it was not a tent. In fact, I could tell right away that the space I now occupied was not part of the caravan I'd lived with the last few weeks. I was in a permanent structure. In fact, it reminded me a bit of the longhouse that my family occupied during the long winter months, when we brought our animals inside for safekeeping. Though, there were no animals here. In fact, as far as I could tell, the entire structure was empty.\n\nI could tell that the building was unoccupied because I realized that I was lying down in the very back of the longhouse. I could see all the way across, to the flap of skin that closed the door, perhaps 40 feet away. I was on a slightly raised structure, a bed perhaps. There were warm animal skins around me. The longhouse was maybe 15 feet wide and made of rough hewn logs. The roof was arched across the width, peaking at about 10 feet tall and then sloping down on either side. The arch ended about four feet from the ground, and the wall was vertical from there, to the ground. The floor, except close to the fire, was covered in fresh rushes. \n\nThat fire sat in the middle of the longhouse. I could see that there was a hole in the roof above the fire, for the smoke to escape. It was an effective method, as the house was warm, but not overly smoky. In addition to the central fire, there were several torches hanging from support beams. The entire structure was well lit, and almost cozy.\n\nIt would be a comfortable place to sleep. And I quickly saw that that was the primary purpose of this structure. I saw other raised structures around the outsides of the longhouse. They appeared to be similar to the one that I was on, if a little bit narrower. There were also mats on the floor, beneath the beds and even on the floor closer to the fire. They sat on top of the rushes. Beds for children, I suspected. I was in someone's home. But whose? And why?\n\nThe answer, it seemed, would not be long in coming. \n\nNo sooner had I gotten my bearings and at least partially conquered my nausea, that the room began to divulge its secrets. \n\nMy eyes were now sharp in the gloomy longhouse and they flickered instinctively to the door, as I saw the animal skin twitching. After a moment, the animal skin was flung open. I could see the torches on the far side of the room flicker as the wind entered. But I was too far away to feel it. Or see anything. For a long moment, there was just inky blackness visible through the open door. \n\nI leaned forward apprehensively, feeling my stomach churn as I moved. I squinted into the darkness and felt my fear growing. I became aware, for the first time, of the absolute silence that permeated the longhouse. I had heard nothing but the crackling of the wood fire since I had awakened. It felt unnatural and I worried afresh about where I was and what was happening to me. But I couldn't focus on those fears. Because something was standing outside of the longhouse. Something totally silent was there and, at any minute it could come in. And there was nothing I could do to stop it. I was too weak to move. Too weak to protect myself. I was barely even a Buz. \n\nThen I saw it. A white figure fluttered into the longhouse. Its movements were quick, but fluid. Elegant. Like a butterfly. Or, perhaps a moth, drawn to the flame inside the longhouse. But much too large to be a moth. I could not tell how large the door was, maybe three feet high, and the white figure had to duck to get inside. It rose to its full height.\n\nAnd everything came flooding back to me. The men approaching after Cilek and I had...performed for them. Kole, the angry man who challenged Topu leading the charge. The feathers sprouting from Kole's neck. \n\nThe Ghosts.\n\nThe ghosts that had suddenly appeared in our midst, surrounding all of the men. Killing them. Knocking me down so that I thought that I was killed. And then they were here. In this longhouse. As I gazed in horror, more white figures, illuminated sinisterly in the guttering torchlight, flittered into the longhouse. They moved silently inside, coming closer and closer to the central fire. \n\nI remained frozen on my elevated spot at the far end of the longhouse. I thought for a moment like a child and closed my eyes. Perhaps, if I buried my head beneath the blankets that covered me, the monsters that were inching closer would disappear. The fear I felt was like something I'd never felt before. It was far worse than anything I'd experienced in the attack on the trader's caravan. Men attacked and raped women. That was the way of the world. I was afraid of it, but it was within the realm of experience. This was otherworldly. These ghosts had captured me or...something. And what they would do to me now, I could not guess.\n\nThere was a snapping sound of the animal skin at the door flapping shut that shook me from my childish avoidance. My eyes fluttered open and I saw that the ghosts had not disappeared. In fact, they had multiplied. I counted quickly and saw that there were nine of them. Four stood to the left side of the fire, four to the right. The final ghost stood directly opposite me, on the far side of the fire. Despite the fact that the ghost possessed no eyes, it felt like that final ghost was staring directly at me. Like it was staring through me.\n\nThe ghosts were completely stone still and silent. For a moment, I wondered if they had been transformed into stone. But then I heard a slight creaking noise and I felt the platform which I sat upon shake slightly. I felt my hear cease thumping and climb into my throat. Suddenly, from beneath my raised bed, a figure appeared. It floating out from underneath of me, white like the other ghosts. As it rose to full height, it was only a foot or two away from my face. I used all of my self-control and self-possession to stifle a cry. That...monster had been beneath me, totally silent, this entire time. Or it had appeared suddenly. I did not know what was worse.\n\nBut the ghost seemed to take no notice of me. In fact, it rapidly fluttered away, moving towards the fire. In a moment, it was standing at the fire, directly opposite the one ghost that stood on its own. I saw the new ghost look to the left, then to the right, and finally straight ahead. This ghost seemed to have some sort of authority. It felt as though it was accounting for the others. \n\nThere was another moment of absolute silence and the room was entirely still. It seemed to me that even the fire had frozen. I expected at that moment for all ten ghosts to turn towards me, for mouths to open in their mute white heads, and for them to devour me in an instant. I do not know why that image sprang to mind. But it did so with such absolute force that I was instantly convinced that I was correct.\n\nInstead, the crushing silence was pierced, \"Nine, still, thank the gods. You are all back,\" a strong, but soft voice rang out. The words were barely above a whisper and I was more than startled to find that it was the voice of a woman. A human woman. A delicate, even beautiful voice that emanated from the ghost that had emerged beneath me. \"Come,\" the voice said, \"you are home now.\" And, as if that was a cue, the ghosts, suddenly, began to...disrobe. \n\nFirst, hands seemed to appear from nowhere on each ghost. They rose up to their heads, throwing back hoods. Hands bunched up white fabric and then began to pull upwards, exposing feet, legs, more. It suddenly became apparent that the 'ghosts' were manufactured. It was a thin, sheer, white fabric. Now that I could see that, I wondered how I had missed it before. In a moment, the white fabric was laying in loose piles on the floor. And there were nine naked women standing before me. The one figure, with her back to me was still clothed. She had thrown back her hood, exposing long, straight, black hair.\n\nTen normal, human women. My fear began to subside, slowly and cautiously, and it was replaced immediately with confusion. Who were these women, and what were they doing? My eyes fluttered over them, trying to glean some clue from their appearance.\n\nThe nine visible women varied in age. The youngest looked to be around 18 years old, with delicate features, small high breasts, and a thin waist. The oldest looked to be the solitary woman standing directly across from me. I figured she was around 35 years old. The woman were all pretty, some were stunningly beautiful. In fact, they all looked somewhat similar with long, dark hair, big sparkling eyes, and dusky, olive skin. They even seemed to have the same dark red nipples. They were all clean-shaven between their legs and looked athletic and fit. Some, if not for apparent differences in age, almost appeared to be twins. I could learn nothing from looking at them.\n\n\"Yes, we took them entirely by surprise. Not only our longhouse, but every member of the patrol returns its full household,\" the woman standing across from me said, her voice clear and sweet.\n\n\"Donus came and she deposited your prisoner,\" the still-cloaked woman said, gesturing her arm backwards towards me, \"But she did not bring me the good news.\" I felt my stomach knot. That confirmed it. I might not know who these women were or what they planned to do with me. But I knew that I was their prisoner. Still, they did not seem overly concerned with me, As the still-cloaked woman spoke, the woman across from her smiled broadly.\n\n\"I wish that I could take credit Orospu,\" the woman said, \"But that is not my prisoner. Gul captured the Cadilar.\" The woman gestured toward another woman, standing on the right side of the fire. That woman, Gul, took a step towards the fire, her cheeks blushing. Gul was the most beautiful of the women around the fire. Her hair shined, her large breasts sat up high on her chest, her legs were thin and delicate. She appeared to be in her early 20s. Orospu turned and looked at Gul and raised her hands.\n\n\"Your first ambush and you manage to capture a Cadilar!\" Orospu said excitedly. There was that word again, Cadilar. I'd never heard of it before, but I gathered that it referred to me. What was a Cadilar? What did it mean?\n\n\"Ruya, Diger's wife, she captured one as well,\" Gul said in a tiny voice. She spoke in a sort of deprecating fashion and her eyes remained on her own feet. Orospu, evidently, would not be swayed by modesty. She waved her hands dismissively.\n\n\"Well that is good for her. But it doesn't diminish your accomplishment! You were so upset when you were 8 months pregnant for the last ambush. I could barely keep you back! And now you've a beautiful daughter, an ambush under your belt, and a Cadilar in our longhouse! You want to pretend to be shy?\" The other women around the fire laughed.\n\n\"Oro...\" Gul began,\n\n\"No!\" Orospu said, waving her hands again, \"No false modesty here, come, brag! I want to hear the whole story from you,\" As she spoke, Orospu began to move around the fire. She shooed the other eight woman away, and they slowly made their way over the benches around the outsides of the longhouse. The two women sat in pairs together, looking at Gul and Orospu. Their eyes shined with excitement as their comrade began to tell the tale.\n\nOrospu's warmth and excitement had apparently overcome Gul's reticence, and the younger woman as now smiling radiantly. And she was the younger woman. As Orospu moved around the fire, I managed to catch a glimpse of her face. She appeared to be around 35 years of age, but she looked slightly different than the other 9 women, though no less beautiful. Her skin, while still darker than mine, was not nearly as bronze as the other women. Her nose was thinner, but longer, her eyes were not quite as wide. Her breasts, still covered in a white robe, appeared to be far more massive than those of the other 9 women. In fact, her body was fuller than theirs, while not at the level of being fat. But whereas the naked women all appeared lean and toned, Orospu appeared voluptuous.\n\n\"Well, we received word from...\" Gul began.\n\n\"I know that part! I was here yesterday morning. A caravan had entered the valley. You all dressed and armed and headed towards the river. What happened then!\" Orospu interrupted impatiently. Gul took the other woman's excitement in stride.\n\n\"We reached them a few miles from the entrance of the valley. They were moving painfully slow because of their heavy wagons. We stayed in the trees, out of view. We moved quickly and no one noticed us. Before dusk, they stopped for the night. They were loud and poorly guarded. But we figured...\"\n\n\"We?\" a voice called out loudly. It was the woman who had been standing across from Orospu when they first entered. The other women laughed.\n\n\"Sorry,\" Gul said, \"Otuzbes figured it would be best to simply wait until nighttime anyway. They broke camp before the sun had completely set. We could hear swearing and anger, and later confirmed that they'd broken a wagon wheel. We hunkered down and ate our bread, while we for them to settle in for the night. They made a fire so large that their eyes would not be able to see in the dark. They didn't post many guards. They ate a great deal of food and drank. They were comfortable and sated. They were ripe for the plucking!\"\n\n\"Well tell me, love, how you...plucked them!\" Orospu said excitedly and, as she spoke, she ran one of her long fingers along Gul's jawline. Gul smiled and the other women laughed. I thought about the caravan and that night...I'd never had any idea that these women were lurking in the shadows. I respected their prowess, even if I feared them now.\n\n\"We waited until it was very dark and then we formed a semi-circle around the caravan. We spread out slowly. I was on the left flank, closest to the river. The rest from our longhouse,\" Gul said, gesturing to the women around me, \"fanning out to my right. We moved slowly, closing into towards the caravan. I moved along the river towards our right flank, so that our semi-circle slowly began to close into a circle around the wagons.\n\n\"Their only guard was positioned on the outside of their wagon train. He was pacing back and forth along slowly. We could all see him, outlined against the sky. He was loud. It was almost as though he wanted us to sneak up on him and slit his throat. Otuzbes was lucky enough to find him in front of her as we closed the noose around them...\"\n\n\"Luck my ass!\" Otuzbes called around from her spot along the wall, \"I was setting the pace for the maneuver. I observed his motions and timed it perfectly!\" she asserted.\n\n\"I believe I was invited to tell the story,\" Gul said, raising an eyebrow at Otuzbes. The other women laughed and Otuzbes swatted her arm playfully. It was clear that there was no real animosity here. A gentle, almost playful rivalry at most. They all seemed relaxed with one another, a strange dynamic. Strange, but somehow familiar in a way that I couldn't pinpoint.\n\n\"Otuzbes killed their lookout before he saw her. They were blind then, and didn't even know it. In the meantime, I had wrapped around their flank and were between the men in the caravan and the river. The right flank had circled around too. Ruya was just a few feet to my left. We had them surrounded. They had circled their wagons, but there was a small gap in the line. I could see them through there. The men were watching as they forced their slaves to...couple.\"\n\n\"Our prisoner and...\" Orospu said, jerking her head back towards me. Gul nodded.\n\n\"Yes, and the one in Diger's longhouse,\" Orospu nodded her head. I knew, of course, what they were talking about. I realized that at least one other person had seen my humiliation. And I also knew that Cilek was still alive and in a nearby longhouse.\n\n\"Was the other one as pretty as your prisoner?\" Orospu asked. Gul smiled.\n\n\"They could've been sisters,\" Gul replied and the other women giggled.\n\n\"Must of been quite a sight,\" Orospu responded, nodding. I felt my cheeks go red, despite the fact that no one was really looking at me.\n\n\"I didn't take the time to think about it,\" Gul said and the other women yelled with derision.\n\n\"You wouldn't look away from someone fucking if you were given six goats as a reward!\" Otuzbes yelled out lewdly, the other women laughed. Gul blushed deeper.\n\n\"Orospu, I was focused on the task at had. The...beauty of the slaves did not concern me,\" Gul responded.\n\n\"I am sure it didn't\" Orospu said in a way that indicated she wasn't quite sure. The other women laughed. Gul, evidently, decided to drop the point.\n\n\"Anyway, it quickly became apparent to me what was happening. The men, for whatever reason, had decided to make their slaves couple and they were all now completely preoccupied with their entertainment. They wouldn't have noticed if we marched in, heavy footed like their sentry, and slit all their throats. They were thinking with their cocks...\"",
        "\"Of course,\" Orospu said and the women laughed.\n\n\"So I was going to keep moving slowly, while our line slowly moved forward and encircled them. We could afford to take our time and be in perfect position. We would not be noticed. But as I got closer, I could better see the two slave girls.\n\n\"I thought you weren't watching?\" A voice called out and the women laughed. Gul laughed as well.\n\n\"I was watching to the extent it was relevant!\" she threw back, \"And it was lucky that I was. Because, as I grew closer, I saw that the slave girls were not just pretty Northern girls with straw hair. I saw that they were both more precious. They were Cadilar! I could barely believe it when is saw it.\n\n\"Ruya says that she noticed first,\" Another woman called out.\n\n\"She lies, I pointed it out to her!\" Gul shot back, \"I said, 'the gods be praised, two Cadilar!' and Ruya confirmed it!\"\n\n\"I believe you,\" Orospu said. Gul nodded.\n\n\"I came to that realization at the exact moment that the Cadilar finished coupling,\" Gul explained, \"And it was then that the men began to argue again. I saw a large man rise, and begin to walk towards the slave girls...I no longer thought it was wise to wait. I knew...Cadilar...Their value. I took out an arrow and shot. We were not prepared. The signal was not given. But I had to act. I fired without thinking at the large man.\"\n\n\"Right through the throat!\" one woman yelled out and the women cheered. Orospu smiled. For the first time, I could place why the atmosphere within the longhouse felt so familiar. It was the same sort of easy, casual environment that I'd seen with the warriors, in my own tribe, after a successful battle. The jocular, semi-lewd camaraderie. It was something I knew from my time with the Buz. But, what was strange, was that women were involved. Not just involved, it was solely women, interacting as warriors. Of course, that made sense, as it seemed that they were warriors. But I'd never experienced anything like it. For the first time since I was sold, I did not feel an intense longing to be home, in the far North. I felt a bit like I was home.\n\n\"The arrow acted as a signal. Thank the gods that everyone was paying attention. And then we were all upon them. We rushed into the camp. The men, they never saw what was happening. I ignored the men and went to the Cadilars. I saw this one get knocked down, her head struck a rock. But I reached her and stood over her, to claim her for our longhouse and to protect her from danger. The danger did not last long, however. By the time I was assured that the prisoner was still alive, the other women had finished everyone off. Unfortunately Ruya had manged to get to the other Cadilar and claimed her.\n\n\"No need to be greedy,\" Orospu said. Gul seemed happy that Orospu was not upset.\n\n\"We sent the Cadilar back. This one would not wake, but she was breathing. The other had to be bound and gagged, blindfolded. We took the valuables from the caravan. We burned everything else, including the bodies, and dumped the ashes in the river. It is like the caravan ceased to exist.\" The other eight women seated by the walls, cheered as the story triumphantly concluded.\n\n\"A perfect ambush. With quick thinking on your part to protect both of the Cadilars,\" Orospu praised Gul, who beamed. The conclusion of the story seemed to create as many questions for me as it answer. The mystery of the ghosts and what, exactly had happened to the caravan was now clear. These women had ambushed us, taken me and Cilek prisoner, and killed all the men.\n\nBut the questions that remained were still confounding. Who were these women? Why did they ambush the caravan (the way Gul discussed valuables on the caravan in an off-hand manner made it seem unimportant, which would be strange for bandits, and they seemed surprised to have found me, so they weren't looking for slaves)? Why were they only women? Why were they dressed in white. What was a Cadilar (though, I suppose, I had my suspicions even then)? And why were Cadilar so valuable, that Gul would risk a hasty assault before the ambush was in place to capture me? Why was she so upset that another longhouse had captured Cilek? My thoughts swirled and my mind ached. It was all too much, too fast. I could not reason my way to any clear answers. \n\n\"Then allow me to officially present this prisoner to you,\" Gul said and she gestured in a way that indicated she was referring to all of the women around. The cheers rose again and then subsided. Gul was gesturing towards me, \"To dispose of as you will.\" I felt my stomach sink at that. Was I valuable as some sort of sacrifice?\n\n\"A worthy gift,\" Orospu said in response, \"More than any one of us could ever ask for! I cannot express to you how surprised I was when this Cadilar was delivered. And when I heard there was another!\"\n\n\"We should have two!\" Gul said, bitterly. Orospu reached forward and grasped Gul's chin lightly. She turned the girl so that they were facing one another. Orospu smiled.\n\n\"Our village has two. We have not had a new Cadilar in the village since...well since before I was born,\" Orospu said, just above a whisper, and Gul smiled. Orospu spoke louder, \"And so, I believe that Gul has earned a reward!\" There were cheers and Gul bit her lip girlishly. \"Do you all agree?\" Orospu asked and the cheers grew louder.\n\n\"Reward!\" Someone shouted. Orospu looked back at Gul.\n\n\"It is unanimous, a reward is owed to you,\" Orospu said, \"Name your price and we shall do whatever we can to accommodate your desires.\" The women around the fire nodded eagerly. Gul paused for a moment, she looked around the longhouse, appearing to be a bit nervous. Finally, she let out a low sigh, shrugged, and spoke.\n\n\"Since the time that I was a little girl, I can remember warriors returning from battle, talking about the...hunger that overtakes when the fighting is over. I always believed that this was simply something that warriors told one another, that it was a lie,\" Gul said and the other women laughed, \"But now, I have fought in battle. I have taken life. And I find that there is a great hunger in me.\" As Gul spoke, her eyes flashed. Orospu nodded.\n\n\"And what do you hunger for?\" Orospu asked. Gul smiled and looked to either side.\n\n\"Something we can all share,\" she said said, and the women in the circle cheered. Orospu didn't speak Instead, she simply smiled and walked over closer to Gul. Orospu took the younger woman by the hand and led her to the middle of the longhouse. They were just a few feet from the fire, directly in front of me, and I could see them clearly. In fact, Orospu was facing me directly, Gul was standing next to her. Orospu dropped Gul's hand and then reached up to her neck. She quickly unlaced the robe, where it was tied around her throat. \n\nI saw that it wasn't so much a robe as it was a large white cape that had been wrapped around Orospu's body. When Orospu untied it and then let her arms down, the diaphanous material sort of melted off of her, landing in a pile on the floor. Orospu's shapely form was exposed. Her breasts appeared thicker, fuller than they had even inside of the thin cape, their large size accentuated by Orospu's thin waist and wide hips. She was beautiful, especially for a woman who, in my tribe would have been well-passed middle age.\n\nBut I was hardly focused on Orospu's curves of her breasts, despite their extreme proportions. That was because something else had caught my eye. I mean, how couldn't it? The instant that Orospu dropped her cape, it immediately became apparent. Orospu, like me, had a cock! A large one too. It was not erect, but hung down thick between her legs. Her foreskin hung down halfway to her knees between her thick thighs. Her balls appeared large, weighty. Like the other women, Orospu had no hair.\n\nSomehow, Orospu's cock looked appropriate on her buxom physique. It looked as though it belonged on her, as I suppose it did. But, that didn't prevent me from being shocked. No matter what else had happened since these strange warrior women had taken me captive, this was totally unexpected. I bit my tongue to avoid calling out in surprise. No one seemed to notice that I was awake and I didn't want to tip them off. And not from fear, which I had overcome. Instead, it was curiosity. I needed to understand what was happening. I kept my eyes slits, controlled my breathing, and watched.\n\nAs soon as Orospu was no longer cloaked, Gul dropped to her knees in front of the older woman. For half a second, Gul looked up at Orospu from her position on her knees, smiling mischievously. Orospu placed her hands on her hips, arching her eyebrows as she looked down. My eyes scanned the other women in the group, who did not seem at all surprised by this sudden submission by the warrior. In fact, they were all leaning forward in their seats, smiling with sparkling eyes. \n\nGul dropped her head further and then turned her face upward. As she she did so, her mouth opened. In a flash, it seemed, Gul's mouth open mouth was hovering just below Orospu's soft cock. I saw Gul's lips slowly close, trapping just the very tip of Orospu's foreskin between her lips in an almost chaste kiss. A little tremor ran through Orospu's body and a general, appreciative murmur through the crowd. I strained to see as Gul's tongue slipped out from between her lips, and pressed into Orospu's foreskin. I saw Orospu's foreskin bulge as Gul's tongue swirled around inside. Orospu moaned and her fingers sank into her own hips. Gul's tongue slipped out of Orospu's foreskin, but continued to lick gingerly along Orospu's tip\n\n\"That is a meal for just one!\" one of the women in the circle called out, and the others tittered.\n\n\"Please leave the preparations to me!\" Gul said archly. She kept her mouth against Orospu's cock as she spoke, and I saw the soft shaft bounce on her lips. \n\n\"I don't think the girls over at Diger's longhouse would complain about the size of this meal!\" Orospu said at the same time. The other women laughed. But Gul was already back to work. She kissed the tip of Orospu's cock once, and then her mouth opened wide. Once again, Gul's lips closed around Orospu's cock, but this time, the entire bulbous tip was inside of her mouth. I could see Gul's tongue moving inside of her mouth as she swirled her tongue around, could see the root of Orospu's soft cock moving in time with Gul's motions. Orospu sucked in breath sharply and bit her lip.\n\nGul did not relent. I could hear a slight slurping sound and I saw Gul's head rising. Orospu's cock, while soft, was still quite long and very thick. Nonetheless, I saw as, inch by inch, the shaft disappeared between Gul's pouty lips. Gul slurped evenly, and slowly, almost as though she didn't have to breathe. I could see Gul's throat moving as Orospu's thick cock moved into it, but Gul didn't gag. Eventually, I saw Gul's chin press into Orospu's balls and the last of the shaft disappeared from view. Rather than pull back, Gul kept Orospu's cock in her throat for what felt like an eternity. She shook her head back and forth, letting the cock move inside her throat. Gul's eyes watered and her hands reached forward and grabbed Orospu's thick thighs.\n\n\"Gods be praised!\" Orospu gasped as her knees buckled slightly. Around the circle, the other women cheered at Gul's virtuoso performance. Finally, Gul turned her head so that she was facing Orospu's body directly, and pulled her head back. From my angle, I could only see the back of Gul's head, but I could hear her gasping breath as Orospu's cock moved from her throat. She pulled back far enough that I was sure that just the tip remained in her mouth.\n\n\"Look at that!\" Otuzbes cried, pointing, \"Orospu is half hard already!\" I saw Gul's hand rise up and grasp around Orospu's shaft, her small fingers wrapping around it daintily. I could see, because Gul had turned to the side, looking at Otuzbes.\n\n\"I've never had the opportunity to go first before, I wanted to show what I can do!\" Gul explained. Orospu's eyes shone and her hand quickly found its way to the top of Gul's head. She tilted the younger woman's head back towards her cock.\n\n\"Keep showing what you can do,\" Orospu said gently, and the other women giggled. Gul nodded and then I saw her head jerk forward quickly again. Orospu gasped, and her hand remained frozen on the back of Gul's head. Once again, the angle was obstructed, but I could see Gul's head bouncing back and forth. It was immediately apparent that Gul was taking Orospu's cock deep inside of her throat. But she was no longer keeping it there. Instead, she was rapidly bobbing her head up and down, letting Orospu's cock glide briskly over her wet tongue.\n\nSince I could no longer see Gul sucking cock, my eyes naturally gravitated up to Orospu. The older woman was looking down at Gul, watching her cock disappear into Gul's throat over and over again. Orospu had sucked her lower lip into her mouth and was biting it gently. Occasionally, a low moan was escape through her lips anyway. Her long hair was draped over her thin shoulders. Gul was sucking Orospu's cock with such force that Orospu couldn't entirely keep her balance. She was rocking back and forth with each of Gul's movements, and Orospu's massive breasts were bouncing lewdly on her chest. I could see that Orospu's nipples had grown very hard and that her muscles were tensing under her smooth skin. \n\nWhile one hand remained firmly on the back of Gul's head, I saw Orospu's other hand rise up to one of her massive breasts. I saw Orospu's fingers sink into the thick flesh of her breast, her palm covering her nipple. At first, Orospu just clasping her breast, squeezing it as she looked down at Gul. But soon, it seem that that wasn't enough. Orosupu's cheeks were red and her breathing was heavy. She started to move her hand around on her breast, squeezing and pulling at the nipple, even as her palm kneaded her flesh. \n\nEventually Orospu's hand sort of slipped down to the underside of the large breast. She rubbed her hand along the swell of her breast for a moment, and then let its weight sit heavy in her palm. Finally, she started to lift her breast up. At the same time, Orospu bent her neck. She positioned her nipple upward, and moved her lips forward. Eventually, they met in what was at first a tacit kiss, Orospu's pouty lips just barely wrapped around her own nipple. But Gul seemed to sense that the older woman was growing excited. I could see her head begin to move faster. Orospu moaned, her lips spreading on her nipples. Then, as her lips closed, I could see that her nipple had disappeared entirely with her mouth. Orospu's lips pursed around her nipple, and I could see her tongue working on it through her cheeks. She was gently sucking her own nipple as Gul licked her cock. Orospu moaned at the sensation, but now kept her mouth closed. \n\nThe women around the fire had grown quiet now. I tore my eyes away from Orospu and Gul, just for a moment, to gauge the reaction of the other women. I wasn't sure what I expected to see. Shock or disapproval would have been the natural reactions in my tribe. But this was obviously not my tribe. Regardless, whatever I expected in now way matched the reality of what I saw.\n\nThe women were rapt. Their eyes were ravenous, their mouths hanging open in naked hunger. Most of the women were leaning forward on the edges of their seats, watching with unconcealed excitement. I saw one pretty young woman lick her lips, her mouth opening almost like she was going to pantomime Gul's actions. I saw Otuzbes spread her legs slightly, and then squeeze them back together. I could feel the energy in the room, feel the way it connected all ten women together, not just Orospu and Gul.\n\nActually, more than the ten women together. As I took a moment to reflect on what, exactly, I was looking at, I came to the somewhat shocking realization that I was no immune. My cheeks felt hot and my heart was thrumming. I knew I was no longer scared, or nervous. This feeling was different, but familiar. I could feel the muscles in my stomach tense, I could feel my nipples harden even though I was warm in the longhouse. In fact, as I lay on the raised platform, I could feel my own cock, plump against my leg. I could feel the slickness of my cunt on my thighs. I would never have expected this reaction. But, at the same time, I could not deny it. It was obvious, physical.\n\nI did not have time to reflect on these strange feelings. Instead, actions in the longhouse over took me. I heard Orospu let out a low groaned, and my eyes flittered up to see what was happening. Orospu's hand dropped her breast as her mouth opened. Her large tit fell back down, bouncing on her chest. Orospu threw her head back, moaning loudly, her mouth wide open. Her hand now grasped the side of Gul's head, joining her other hand. I saw Orospu press Gul's head into her body, and I could heard Gul gurgling and choking slightly. Orospu was shoving her cock down Gul's throat!\n\nOrospu kept her cock buried inside of Gul's mouth. At the same time she seemed to involuntarily rise up, I saw her pushing up onto her tips toes. Her groan sort of faded in her throat, she grew silent, but kept her head back. I saw all of her muscles grow rigid. Gul did not resist. In fact, she shook her head back and forth, letting Orospu's cock push deeper into her throat. Even from my position behind Gul, I could see saliva dripping down into a puddle on the floor, between Gul's legs, dripping from her lips.\n\nFinally, Orospu let a burst of air from between her lips, a burst that turned into a high pitched moan. A the same time, I saw her muscles tense two or three more times, before growing limp. Orospu's toes relaxed, and her feet once again rested on the floor. But Orospu continued to thrust her hips forward, even as she relaxed, and her moan grew quieter. \n\nI knew what was happening. Spurt after spurt of her warm seed was filling Gul's mouth, making some of it splashing down the younger woman's throat. I fought hard to control my breathing, tried to move my hips back, so that my now-hard cock would not press against the fabric of the shift that I was wearing. \n\nFinally, Orospu had finished. She took a step back and I could see her cock, still hard, slip from between Gul's lips. Once the tip fell from Gul's mouth, Orospu took a deep breath and then fell to her knees in front of the fire. \n\nGul did not stay on her knees with her lover. As Orospu remained on her knees, panting, Gul gained her feet. She turned around. For a moment, she was looking in my direction. I could see see the saliva and seed dripping from her chin, see the way that her cheeks bulged with Orospu's sperm. It somehow made her face look more beautiful. Try as I might, I could discern no dishonor or shame in Gul, no sense that she had submitted herself as a warrior. Her eyes glittered with excitement. Her reaction was confusing.\n\nBut she didn't spend much time looking in my direction. Instead, she turned quickly and walked to the right side of the longhouse. She moved towards the bench closest to me, the woman closest to me. That woman was leaning forward, looking at Gul with a longing so deep and pure it was almost lewd in and of itself. Gul stopped when she was standing in front of the woman, her thighs just a few inches from the woman's knees. The woman was looking up at Gul and smiling. \n\nAfter a moment, woman opened her mouth and sort of shot herself up. A long strand of seed and spit was dangling wetly from Gul's chin. I could see it glistening in the low light. The woman had, evidently, seen it as well. As she rose, she positioned herself so that the cum and the spit landed directly on the center of her warm, red tongue. She moaned slightly, but continued to move, more and more of the spit and seed collected on her mouth. Eventually, her mouth came to rest on Gul's chin, kissing it gently. I could hear a slight sucking sound as the woman cleaned Gul's chin with her tongue. ",
        "After a few moments, Gul reached down with both of her hands. I saw them slip into the woman's armpits. She gently started to lift the woman up. The other woman sensed what Gul was doing and began to rise . The two women were about equal height and, as the other woman stood, Gul let her arms slide around the woman's back, wrapping her. The woman put her own arms around Gul's shoulders, than wrap them around Gul's neck. I could see the distance between the women disappear. I saw their breasts, nearly identical, press together, then their stomachs. Their legs intertwined and their faces were just inches apart. Gul's lips still bulged with seed, her chin glistening.\n\nThe other woman tilted her head to the side, her eyes closed. Gul's eyes closed as well. They leaned in towards one another. I saw the other woman's mouth open slightly, just as their mouths came together. Just as their breasts and their legs before, their pouty lips came together and sort of melted into one another. The two women seemed to squeeze each other tighter, their bodies melting into one.\n\nI could see their mouths moving. Their lips were entirely sealed, but their tongues were working back forth. Their mouths opened wider, and I could see Gul sort of rise up on her tops bending over on top of the other woman. I knew she was pouring Orospu's seed out into that woman's mouth. Some actually spilled out between their lips, and I could see the pearly liquid dribble down their chins and land on their breasts. They sealed their lips tighter, their tongues moved more fervently.\n\nFinally, I saw Gul squeeze the other woman's ass, gently, with her thumb and forefinger. I saw their tongues moving frantically and then, their closed together, and then broke. They pulled their heads back, looking at one another.\n\n\"A big meal, plenty to share!\" Gul said. For the first time, I realized that Gul's cheeks were no longer bulging. The other woman's were. Gul had pushed all of Orospu's seed, and their saliva, in to the other woman's mouth. \n\n\"Then keep sharing!\" a voice called out. No one laughed. It wasn't even really playful. It had that same, hungry aspect that the woman's eyes had had when Gul came for her. Gul nodded and slowly slipped her arms out from under the woman's arm. Their breasts pulled apart, and their their stomachs. Finally, Gul took a step back. The woman, her cheeks still bulging, took her seat once again. Gul began to move back to the center of the room, where Orospu was still on her knees.\n\nMy eyes didn't follow Gul, however. I was still looking at the woman who had Orospu's seed in her mouth. And, in fact, to all the other women around the fire. They had grown more excited as they watched Gul's messy kiss. I could see that Otuzbes was no longer just squeezing her thighs together. She was looking in the direction of where Gul and the woman had kissed, her hand was between her legs. I could see her fingers slowly circling around her clitoris, I could see the lips of her cunny glistening with juices.\n\nThe other women were having similar reactions. In fact, most of them were not acting alone. There were four seats, each with two women sitting on them. Most women were...helping their seatmate in some way. I saw one woman who had bent over and was sucking on her neighbor's nipple as the neighbor stroked both of their cunnies, one with each hand. I saw two other women, who had their hand crossed over one another. They were leaning their heads together, both stroking one another's cunnies. But no one was static. No one did anything for too long. Their hands roamed over one another constantly.\n\nThey all moved with practiced ease, as though it was normal to touch one another. As though they craved one another's touch, in fact. As the woman nuzzled into one another, I could sense the affection. And as their hands moved over their breasts and their cunnies, I could feel the animal desire as well. They all seemed like newlyweds.\n\nAnd that went to the woman that Gul had kissed as well, the woman whose cheeks were bulging with seed. No sooner had she sat down, than she turned and looked at the woman sitting next to her. The woman had almost jumped with excitement. In half a moment, their hands were in one another's hair, on their breasts. They were pulling each other closer together. Their lips pressed together, the same sort of tight seal that Gul had made with her kiss. Their tongues swirled around, the sticky, salty seed moving between their mouths. And all the other women, as they stroked each other breasts, and stomach, and cunnies, and thighs, watched the kiss intently. \n\nI was watching too. I watched as they squeezed together, their hardened nipples grazing one another, their trim, round thighs bumping. I felt my mouth watering, my body vibrating. It was almost like...like I wished that they were kissing me instead. That I had Orospu's seed and saliva in my throat. \n\nOnce again, Gul and Orospu interrupted my confused, and confusing feelings. I was still watching The two women on the first bench kiss, the seed passing back and forth between them, when I heard a sharp gasp in the middle of the room. Without thought, my eyes instantly fluttered back to where Orospu had been panting on her knees.\n\nOrospu was still there, still on her knees. However, she was no longer panting. She was no longer resting with her ass on her heels and her hands on her thighs. She had risen up on her knees. And her hands...they were now resting on Gul's hips. While I had been mesmerized by the kissing women, Gul had returned to Orospu. She had evidently gotten down on her hands and knees in front of the older woman, arched her back, and thrust her ass and cunny up towards Orospu. Gul was facing in my direction, but she was looking back over her shoulder at Orospu. Her neck looked long and elegant, her breasts looked tight and small, hanging down from her chest. I understood what had happened. Orospu had still been hard, and she'd slipped her knees between Gul's feet, and grabbed the woman's waist. The gasp I heard had been Gul's reaction, as Orospu pushed her hard cock into Gul's wet cunny.\n\n\"Oh fuck, Orospu!\" Gul groaned, as Orospu's hips thrust forward, burying more of her cock inside of the woman's body, \"Fuck another baby into me! A warrior into me!\" Gul bit her lip as she spoke. Her arms seemed to grow wobbly, and I saw her sort of collapse forward, her arms crossing in front of her, her breasts pushing against the floor. But Gul kept her hips up, kept them pressed into Orospu's body. And Orospu was still thrusting her cock into Gul's wet cunny. Orospu's fingers clench around Gul's hips, holding her in place as her thrusts began to grow faster and faster.\n\nThe sounds of Gul's demands, and the wet slapping sound of their bodies coming together, was not the only noise in the longhouse. As I watched Orospu's large breasts bounce on her chest as she thrust her cock in and out of Gul's ripe body, I became aware of other noises in the room around me. There was murmuring talk, but I couldn't grasp anything that was set. Their were wet noises, and low moans as well. Finally, I managed to pull my eyes away from Gul and Orospu, to look around.\n\nThe women around the fire had completely embraced the moment. Their arms and legs were entangled. Their breasts and thighs were pressed together. Their mouths found one another. Sometimes they kissed each other. Sometimes their licked each other necks or shoulders, or breast, or even stomachs. And the whole while, their eyes remained on Gul and on Orospu, watching with ill-concealed envy as they fucked.\n\nBut, after a moment, I realized that the women didn't remain on their seats the entire time. Occasionally, a woman would break a kiss, rise from her seat, move to a different seat, and begin to kiss again. At first, the sights and sounds (and even smells. The room was growing stuffy, in a wonderful sort of way), were too overwhelming to understand what was happening. But once, I watched a woman rose from her seat and walked around the back side of the fire, to the women who were sitting on the other side. As she walked, I first noticed her small, high breasts bouncing on her chest. But then is saw her cheeks bouncing heavily as well. \n\nWhen she crossed over to their other side, her hands found another woman's cheeks and suddenly they were kissing. Their lips sealed tightly. The meal. For everyone. It suddenly made sense to me. They were sharing the seed. All of them. Passing it from one woman to the next. Sharing it around the fire. It now had Orospu's seed and the saliva of several different women, mixed and frothy in their mouths. Sometimes, there was simply too much and it dribbled from a woman's mouth, leaving a long string of seed and spit dangling from the woman's lips. Coating their necks and breasts. It was disgusting...but somehow in a good way.\n\nIn fact, all of this was somehow wonderful and distasteful all at once. I was more than a little unnerved by what I was seeing. But, for reasons I couldn't understand, this feeling of being unnerved also felt...good. It was good, and it was difficult. I could feel my inner thighs dripping from my wet cunny. I could feel my hard cock, now fully erect, pressing into my belly. And that pressure, my cock against my belly, it felt good. Too good. Frustratingly good. A beautiful, maddening tension that my body called out to relieve. \n\nFinally, I couldn't bear it any longer. I looked around, I saw that all the other women were distracted. I needed something more. No one would notice. Or, I don't even know if I was thinking those things. Or if I was already acting, and then justifying myself after-the-fact. The point is that I pulled up the shift that had been placed on my body, feeling the cool air against my hard cock. And then my hand was wrapped around it. \n\nI tried to lay as motionless as possible, it was still painful to move and I didn't want anyone to notice me. At the same time, I couldn't resist. My cock had never felt harder in my hand, it seemed to vibrate against my palm. Slowly, but firmly, I began to tug at my cock. My fingers were warm and smooth, they slipped easily over the rigid flesh of my cock. I sucked in a hard breath, squeezed my cock tighter, and kept stroking. And watching. My stroke grew faster and faster as I saw Orosupu slamming her cock, over and over again, into Gul's willing cunt. I watched the beautiful women around the fire, stroking and licking one another, kissing and sharing Orospu's seed.\n\nFinally, Orospu's seed passed to the final woman,Otuzbes, who was sitting around the fire. It had passed to her through a particularly passionate, and messy, kiss with the woman who had been sitting next to her. Otuzbe's cheeks bulged with spit and sperm. Her chin was glistening and there was thick, white liquid on her breasts. This vision only made me stroke harder.\n\nAt first, I believed that Otuzbes was going to swallow all of that messy mixture that was resting in her mouth. I could almost taste the frothy, salty liquid in my mouth, feeling it squirm down my throat and warm my belly. I was jealous of Otuzbes, and too aroused to feel ashamed by that fact.\n\nBut Otuzbes didn't swallow. Instead, she rose silently and began to walk towards the center of the room, towards Orospu and Gul. Orospu seemed to sense Otuzbes' approached and looked up. She smiled, but did not stop. Orospu was still grasping at Gul's hips, still thrusting her hips into the younger woman. Gul's body shook with each thrust, and I could hear her moaning louder and louder all the time.\n\nIn a moment, Otuzbes was standing next to Orospu, behind Gul. There seemed to be an understanding between the two women, unstated. Because Orospu immediately threw her neck back, opened her mouth wide. Otuzbes was not particularly tall, but Orospu was on her knees. And Otuzbes rose up on her her toes. She tilted her neck and leaned over Orospu's open mouth. I could see Otuzbes smile in the guttering light, looking down at Orospu. Then I saw that smile crack open. \n\nThe women around the first gasped and whispered back and forth with one another, even as they continued to stroke and kiss one another's bodies. It was clear their eyes were on the thin strand of seed and spit that was dribbling out from between Otuzbes lips. I could see the liquid shimmer, a large ball of it suspend from the end, dripping down towards Orospu's mouth. Finally, I saw the liquid land on Orospu's tongue, a thick white liquid blotting out her red tongue. Orospu stopped thrusting for a moment, groaning as the flavor suffused her. Gul groaned too, in disappointment that Orospu had ceased her thrusting.\n\nNow that Orospu was not moving, Otuzbes forced more and more of the spit and seed out from between her pouty pink lips. It came out in large, frothy globs. Most of it landed thickly on Orospu's tongue, those some coated her lips and chin. Orospu kept entirely still, seeming as though she wanted to get every last bit of it. Her tongue even probed delicately on her lips, trying to get the spilled droplets into her mouth. Finally, the last few drops landed in Orospu's open mouth. Otuzbes smiled, and then spat on last bit of saliva into Orospu's mouth for good measure. Orospu groaned and then closed her mouth.\n\nThe vision of Otuzbes spitting all of the seed and saliva into Orospu's mouth and was so engrossing, I had hardly noticed that Gul was moving. She had raised her face up off of her arms, again climbed up so that she was on her hands and knees. Orospu's cock was still in her cunny, and she was panting with exertion.\n\nBut she wasn't done moving. As Orospu closed her mouth around the seed and spit that Otuzbes had given her Gul picked her hands up off of the ground, and then leaned back into Orospu's body. She arched her back. In a moment, Gul's shoulders were pressed against Orospu's breasts. I could see that Orospu's still-hard cock was buried all the way to the balls in Gul's pussy. Instinctively, Orospu's hands wrapped around Gul's body. One wrapped around Gul high, her arm across one breast and her palm on the other. Orospu's other hand snaked across Gul's hip, finding its way to Gul's clitoris. Her hands instantly began to move quickly over Gul's erogenous zones, and Gul threw her head back to moan.\n\nHowever, it immediately became clear that Gul was just throwing her head back over her shoulder out of sheer joy at Orospu's touch. She wanted more. As she leaned her head back, she turned it to the side, towards Orospu's face. Orospu rose up higher on her knees. This drove her cock more deeply into Gul's body. Gul gasped, her mouth frozen open. Orospu bent her neck and in a second, her mouth was sealed over Gul's. \n\nUnlike the women around the fire who had preserved the seed and the spit in their mouths, Orospu and Gul made no effort to conserve. I saw their tongues messily lapping over one another. The thick, white liquid poured out of Orospu's mouth. Much of it dripped heavily into Gul's mouth, but much of it overflowed her chin and splashed onto Gul's breasts. Orospu's hands found it, and rubbed it, sticky, into Gul's flesh. And while they kissed, Orospu begin to thrust her hips again, driving her hard cock in and out of Gul's cunt. \n\nIt was all simply too much. It couldn't last long. For any of us. Even as Orospu and Gul were messily kissing and sharing the spit and the seed, I could hear the women around the fire moaning. Occasionally, I would tear my eyes to the left or the right, to see a woman's body clenching all over her, her hands on balled into fists while another woman stroked her cunt or licked her breasts.\n\nBut it was Gul's orgasm that really ended things. She was moaning into Orospu's mouth, even as they continued to kiss. I could see her throat moving as she started to swallow down some of the spit and the seed. But then she let out a piercing scream. I saw her arms and her legs move wildly, her thighs opening and closing. I could actually see her cunt, contracting around Orospu's cock as the orgasm took her.\n\n\"Oh fuck, take me!\" Gul groaned, and I could hear the women in the circle moaning louder as they watched as well. But I didn't look away. Because Gul's cunny was milking Orospu's cock, and I couldn't look away. I saw Orospu's hands tighten around her lover's body. I could see Orospu's thighs clench. Finally, I heard Orospu let out a low, heavy sigh. I could see Orospu's cock throbbing inside of Gul's cunny, and I knew that she was pumping more of her hot seed into her lover. Gul was being filled with sperm at both ends.\n\nAnd that thought pushed me over the edge as well. I hadn't even realized how close I was. I had been so intent on watching. But as I saw Gul and Orospu, shaking together on the floor of the longhouse, I tumbled over. It was a bit like stepping off a ledge that you didn't know was there, and landing in a warm pool. A moment of confusion, perhaps even fear, and then an all-enveloping warmth that melted everything else away. I had only the wherewithal to bite my lip, to hold in any noise, as the pleasure covered me entirely. \n\nI could feel my hot seed spraying the inside of my shift, covering my belly and the undersides of my breasts. But my eyes remained on Orospu, on Gul. The rolling waves of warm pleasure than ran up and down my body felt like it was attached somehow to them. Like the seed and spit that they shared was now coating me, and binding me to them. And as their orgasms faded, and they collapsed, panting, onto the floor, I felt my own orgasm subside. All of the women, in fact, had collapsed together on the floor of the longhouse, panting and whispering to one another\n\nAs my pleasure receded, the pain returned, in earnest. It was like the pleasure was draining from my body, and the pain rushed in to fill the vacuum, rushing through every inch of my body. Some of it was purely physical. I had exerted myself in my excitement, I had pushed past the pain. But my body was still there, ready to balance the scales. My stomach was aching again, and my head throbbed. My skin was clammy, and not just where it was covered in my rapidly cooling seed. Cold sweat. Almost feverish.\n\nBut I think that the pain I felt was heightened and sharpened by the fear, which came crawling through my veins in the wake of the surging pain. I had been overwhelmed by...overcome by the women in this room. By watching them move together. The lewd, but alluring, acts that almost seemed like they were performed for my benefit. But as my arousal faded, the thoughts that I had thrust out of my mind, flooded back to me. I still didn't know where I was. Or who these people were. Or, most importantly, what they were going to do with me. I could not but concluded that I was in danger. And anyone might have seen me playing with my cock or writhing on the bed. They might know I was awake. \n\nThey might come for me now, and kill me for their gods. And I was far too weak to fight them off. My hands had dropped to my sides, and felt far too heavy to move. I looked back out into the darkness of the longhouse, to see if they had noticed what I was doing. To look at them critically, now that I was once again in control of my faculties. \n\nBut even before I had the chance to view what was occurring before me, I became aware that something was wrong in the corners of my vision. The fire, in the middle of the room, was clear. But around the outsides of the longhouse, I noticed that everything appeared slightly blurry. In fact, some of the women seemed shrouded in shadow. I blinked twice, but the blackness had closed in further.\n\n\"I hope you enjoyed your reward,\" I heard Otsubes say. Her voice sounded tinny, far away. My heart was still beating quickly, but no longer from exertion. I could feel that sense of anxiety that crawled over my chest and into the pit of my stomach when I felt like I was out of control. My breathing was shallow. I sensed that I was slipping away again, among these terrifying women I could not understand.",
        "\"It was lovely,\" Gul panted, her voice sounding small. I made her out only as a shadow before the fire. The anxiety built like a crescendo, a polar opposite to the pleasure I'd felt just a few moments before.\n\n\"A fitting reward for a warrior of the Hayalet,\" I heard Orospu say. Just barely heard it as my other senses began to fail. \n\nI was barely conscious now, and I was surprised by how fast it was going. I didn't know if I was dying or fainting. Part of me hoped I was dying, as Buz should be ashamed to faint. Regardless, I knew that I was still conscious, because Orospu's last words kept bouncing back and forth in my mind Warrior of Hayalet. I knew that meant something, but my fuzzy brain could not remember. \n\nThe fire disappeared from my vision and everything was just the fuzzy blackness that had grown out the corners of my vision. I couldn't hear or smell of feel anything either. Just those words.\n\nHayalet.\n\nAnd then it dawned on me.\n\nThe lost civilization. Destroyed by their stronger neighbors. All dead and gone. But haunting the valley. The panic stayed with me.\n\nMy last thought before I returned to the darkness: I was right at first. I am surrounded by ghosts!\n\nEnd Chapter 2.\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks."
    ],
    "authorname": "YKN4949",
    "tags": [
        "cum swap",
        "epic",
        "oral",
        "orgy",
        "saliva",
        "spit",
        "translesbian",
        "vaginal",
        "voyeur"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/tribal-bonds-ch-02"
}