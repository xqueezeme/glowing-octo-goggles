{
    "title": "Nerdcam Pt. 02",
    "pages": [
        "They ended the match with a win -- barely. Jack had enjoyed it though. He and one of the opposing team had, in unspoken agreement, begun a personal deathmatch within the team battle. They had been good enough to make it interesting for each other.\n\nJack stretched, yawned, then keyed on the mic on his headset.\n\n\"Good game. I gotta get some actual work done,\" he paused when someone interrupted, then stipulated, \"My version of work. I'm out. Yeah. Later.\"\n\nHe exited the chat, then the game. His headset went back in it's designated cubby on his desk. That done, he clicked around, opening a series of windows. A word processor file titled 'Script.' A folder named 'References,' which held a couple hundred images. And finally a media player program.\n\nClick, click, click.\n\nPlaylist; 'Work.' Play. Minimize.\n\nClick, scroll, scroll, double-click. Click.\n\nOpen a pertinent reference image. Minimize.\n\nClick. Scroll, scroll, scroll down to his current place in the script.\n\nAfter reading over a page of notes, he rolled his gaming chair to the right before turning 90 degrees to face his second desk. Removing a dust sheet, he powered on his art tablet. When it had powered up, he took up a stylus and opened a particular template. He twiddled the stylus in his fingers and stared at the tablet screen, thinking.\n\nEventually he half turned to glance back at the image on the computer screen. And back to the tablet. Shifting in his seat, he began sketching. In the first frame of the template, a somewhat fish-eyed view of a woman smiling for a camera. He sketched, erased here and there, and finished the frame some fifteen minutes later. Leaning back, he considered the work.\n\nSomething about it jogged a memory, and Jack was reminded of the lovely trans woman he had 'chatted' with. Anna. It had been about two weeks since then. It had been her first time trying mutual masturbation on cam with anyone, and it had gone well enough that she had told him to message her so that they might do it again some time. After waiting a few days so as not to seem too forward or insistent, he had left her a message. And waited.\n\nNot that he was particularly bothered. Poeple are busy. Things happen. Shame though. She had actually struck him as someone he could enjoy chatting or hanging out with even if they weren't fucking around. Now he was left wondering if he should bother dropping her another message or not. He wouldn't want to come off like some kind of stalker type.\n\nJack dismissed that line of thought for the time being, instead indulging in the memory of their encounter. He began sketching a beach scene in the next panel of the template while images of Anna competed with his vision of the comic he was drawing. Her smile. Her tattoos. Various distracting parts of her altogether appealing person.\n\nAn hour or so later, the page ready for coloring, Jack saved the work and set the stylus aside. Deciding to take a break, he left the room to go to the toilet, then decided to head out for a bite to eat that he wouldn't have to cook. He pulled on shoes and a second, long sleeve, shirt. Grabbed wallet and keys. On his way through the kitchen he remembered that the trash needed to go out. Might as well take care of that while he was at it.\n\nWith the tied trashbag in one hand, he backed out of his apartment. He reached into a pocket for his keys, at the same time catching a looming figure in his peripheral vision. Too late. He started to turn, dropping the bag of garbage, but a large cardboard box thumped into him before he could move aside. Caught in an awkward stance, he stumbled back, tripped over his feet, and went down.\n\n\"Erp, shit!\" Came a feminine cry from the other side of the box.\n\nNot thinking to simply drop the box and regain her balance, the box-carrier almost went over backward. Instead, she let her knees buckle and dropped where she was, landing on her backside with a pained grunt.\n\nWincing at the pain of a banged elbow, Jack scrambled up to check on whomever had just plowed into him. He found a dark haired young woman wearing jeans and a snug knit sweater, now sitting with the box in her lap.\n\n\"You alright?\"\n\nShe tipped her head back and favored him with a rueful smile.\n\n\"My ass hurts, but I don't think anything is broken.\"\n\nUnsure what to say to that, he settled for \"Oh.\" Then rallied with; \"Here, let me help you up.\"\n\nAs he moved around behind her, she unceremoniously shoved the box aside onto the floor. Squatting, he leaned close and placed his hands over her elbows. Taking the hint, she made L's of her arms and locked them while Jack slowly stood, drawing her up with him. When she had regained her feet, he let go and stepped back. The girl gingerly brushed off her battered backside. After a good look at her, Jack guessed she was around his age. A few inches shorter than his six feet. And very attractive.\n\n\"Uh, sorry about that. I should've looked both ways before stepping into the street.\" he joked, smiling reassuringly.\n\n\"You didn't get hurt though, right? You weren't carrying anything fragile?\" she pressed, bending to retrieve her box.\n\n\"Uh...\" Jack missed most of what she had asked, having been profoundly distracted by something he had seen. The sleeves of the girl's knit top were pushed up toward her elbows. As she reached for the box, Jack caught a glimpse of a tattoo on the inside of her left forearm. A copper colored skull. With diamond shaped eye sockets.\n\nThe girl stood again, box in hand, to regard him curiously.\n\n\"Hello? You sure you didn't bump your head?\"\n\n\"Uh, what? No. No, I'm fine. Honest.\" he worked hard to suppress a grin. \"Just dropped my trash. No biggy. But maybe you could help me with something.\"\n\nThe girl cocked a hip out to rest the box against, then gave him a once over with a look of hopefully exaggerated suspicion.\n\n\"Like what?\"\n\n\"I'd like to confirm something. Could you say 'Is that manga? Are you a weeb?' for me?\" He managed to restrain his amusement and anticipation to a casual smile.\n\nInitially her expression suggested she had realized she was dealing with a mentally unwell individual and she was going to try backing away slowly. Then her eyes drifted off to one side as his words sunk in. Gazing into the middle distance, her eyes slowly grew. Her brow lowered, and she swallowed hard. Finally she looked up at him again.\n\n\"No... you?\"\n\n\"I think the word you're looking for is 'Supernerd'.\" he laughed.\n\n\"Oh my god,\" she shook her head, \"Jack, right?\"\n\n\"That'll do, yeah. I'm flattered you remember.\"\n\n\"Yeah, well... um, sorry about, like, ghosting you...\" she actually did seem bothered by the idea.\n\nJack shrugged.\n\n\"Stuff happens.\"\n\n\"No, I mean, really. Something came up and I had to move, so I've been kinda busy. Believe it or not, I'm moving in here.\" she explained.\n\n\"Oh. No. That's not possible. This apartment is already occupied. I know the guy that lives here. You do seem like his type, but I dunno if he's looking for a roommate right now.\" Jack countered in mock seriousness.\n\nFor just a second Anna began to scowl, then settled for a glower and a half smile.\n\n\"I had forgotten what a smartass you are.\"\n\n\"I can't imagine how.\" Jack smiled proudly.\n\n\"Not this apartment -- this building. Down the hall on the right. You might have noticed if you weren't such a shut in nerd.\"\n\nHe opened his mouth, then closed it again.\n\n\"Hmm.\"\n\n\"Yeah. Then you could've helped me lug all these fuckin' boxes.\"\n\n\"Ah. Shame I missed out on that, but I did notice -- you know, after you hit me with it -- that you're carrying a box right now. Can I help with that one? It heavy?\"\n\n\"Nah. It's just clothes, but thanks.\"\n\n\"I was gonna go out for something to eat after I dump the garbage. You hungry? There's a sandwhich shop near here. Call it a 'welcome to the building' brunch, my treat.\" he offered.\n\nAnna manuevered the box to an angle where she could keep it propped up with one hand and used her free hand to fish a smartphone from a pocket to check the time.\n\n\"Oh, shti. I gotta hurry up or I'm gonna be late for work.\" she dropped the phone back in her pocket. \"Hey, uh, can I get a rain check on that?\"\n\n\"Absolutely. It'll give me an excuse to go out again. Somone recently accused me of being a shut-in, so...\"\n\n\"Shut up.\" Anna smiled, starting off down the hall.\n\n\"And I'm gonna hold you to that free meal. I know where you live, so don't try to back out.\" she called back while Jack recovered his dropped gargabe.\n\n\"Alright Fatal Attraction.\" he called back.\n\n\"That's an out of date reference, Nerd.\" she laughed while fumbling around with the box and her keys. \"Later.\" she called before ducking into her apartment.\n\nJack watched, waiting until he heard her door close behind her to proceed down to the garbage chute. From whence he continued out into the harsh daylight of the city. He had brunch at the sandwhich shop he had mentioned. The food was mediocre, but Jack was in such high spirits that it might as well have been fois gras and fine wine. Or, given Jack's tastes, really good pizza and an ice cold beer.\n\nOnce back home, he did the color work on the page he had earlier finished. That evening he uploaded it to the cue on his website, which would automatically post a new page each day at midnight. Then it was a couple hours of slightly distracted online gaming before nightly ablutions and finally hitting the sack.\n\nThe next day started out in much the same vein as the last. Jack had an apple for breakfast while watching some anime online. Then came work on the next page for his webcomic. After which he finally bothered to shower.\n\nLunch was a bowl of instant noodles. Bringing out an old sketchbook and a pencil, he doodled a bit while waiting for the food to cool. An idea came to him, and it was over an hour later when he paused and looked over the several paneled pages he had sketched up. A little side project using a traditional medium, just for fun. Well, he'd think about refining it and inking it later. Time to get back to the digital comic grind.\n\nLater, with work done for the day and the evening meal eaten, Jack was washing the few dirty dishes when there came a rapping on the apartment door.\n\nSurprised, Jack dried his hands without moving from the sink. He waited, as if perhaps the rapping had been an auditory hallucination, or the wind. He was just thinking that it couldn't have been too important if they only knocked once, when it happened again. Unenthusiastically plodding over, he checked the peephole.\n\nHe saw... a baseball cap. Huh. Maybe it was the guy from across the hall looking for someone to get high with again. Then the caller shifted position and he saw long dark hair. He stepped back and opened the door wide.\n\nAnna tipped the cap back on her head and smiled up at him. She wore a snug black underarmor shirt and black tights. The sleeves of a grey sweatshirt were tied at the small of her back, with the body of the garment falling before her. Which struck Jack as a bit odd, but only momentarily.\n\n\"Hey Nerd.\" Anna greeted him, smiling.\n\n\"Anna. Hey. What brings you all the way down to my end of the hall?\"\n\n\"I wanted to confirm something,\" she slide the sweatshirt around, revealing the front of her tights, and the tent she was making there, \"Can you say 'damn.'?\"\n\nJack stared. She was definitely not wearing anything under those tights.\n\n\"Mmph. Damn. Is that One Punch Man or are you just happy to see me?\"\n\n\"You ass,\" her smile becoming exasperated, \"You're supposed to be speechless, and let me, like, take the lead.\"\n\nExasperation not withstanding, she was beginning to blush.\n\n\"Well, it certainly looks like you've got a head start...\"\n\n\"Shut uuup.\" she laughed, playfully shoving him, \"invite me in already, funny guy.\"\n\n\"Would you like to come in?\" he continued backing up.\n\nAnna followed without bothering to answer. She locked the door behind her. When she turned back to face him, he enjoyed yet another surprise. She had pulled down and adjusted her tights so that her cock and balls hung free and exposed. She pulled her sweater from her waist and lay it over the back of a chair, feigning obliviousness.\n\n\"So... what do you wanna do?\"\n\n\"That depends.\" he replied mildly, shifting his admiring gaze from her face to her overall figure, to her jutting member.\n\nShe arched an eyebrow and waited. He moved closer as he continued.\n\n\"How long have you had this condition? I heard you should contact a doctor if it lasts more than four-\"\n\nBefore he had finished, she interrupted, cocking one leg out and placing her hands on her hips.\n\n\"Okay, suck my dick, smartass.\" she spoke over him.\n\nJack moved closer yet, until they were seperated by just a hair more than the length of the dick in question.\n\n\"All you had to do was ask.\" Jack replied, his voice gone quiet, his tone suggestive.\n\nHe placed his hands over hers, then began trailing them down her thighs as he gradually lowered himself to one knee. Anna raised her eyebrows and tipped her head down to watch him.\n\n\"W-... wait, seriously?\"\n\nJack paused, close enough that she felt his breath play over her cock, which stood out more stiffly than before.\n\n\"Well, I don't have to...\"\n\n\"Uh...\" her mind was clearly taking a back seat to her smaller head, \"As long as you're already... down there.\"\n\nShe slowly shifted her hips forward until the very tip of her cock head, peaking out of her foreskin, touched the end of his nose.\n\n\"Boop.\"\n\nThere was a pregnant pause before Jack cracked up. Realizing what she had just done, and seeing his reaction, she suffered a laughing fit even as she felt her cheeks heat up.\n\nWhen they had both regained control of themselves, Jack reached around to cup her cheeks and give them a rough squeeze. Anna gave an approving murmur and ran the fingers of one hand into his hair.\n\nTaking his time, Jack planted gentle kisses up one side of her shaft, noting the birthmark he had noticed during their cam hook up. He continued up to nuzzle against her balls. He lingered, taking in a mild mingling of scents. Faint perfume, lotion, and warm skin, with just a trace of sweat that carried her unique intimate musk.\n\nLetting his hands slip down along the backs of her thighs, he drew away, trailing his tongue along the underside of her shaft. When the tip of his tongue was poised at her tip, he looked up and held Anna's gaze while he opened his mouth and ever so slowly took her into his mouth. Mild embarassment, vulnerability, arousal, and longing wrought a most endearing expression on her face.\n\nEnjoying her reactions, Jack wormed his tongue under her foreskin and swirled it around her hot, swollen glans. He began to apply some suction, and soon tasted the first trickle of Anna's precum spill across his tongue. Both her hands on his head, Anna languidly ruffled his hair and trailed her nails over his scalp. She responded to his attention with moans, gasps, and the occassional quiet 'fuck'.\"\n\nA couple minutes later, Jack drew away again. Anna's member slipped from where it had been pressing at the back of his throat. He stopped as his lips closed, as if kissing her glistening tip. He caught his breath, but remained still for several seconds.\n\n\"Hm? Hey, you okay?\" Anna asked.\n\nJack opened his eyes and smiled wistfully.\n\n\"Yeah. I was just thinking. I've imagined doing something like this.\"\n\n\"Yeah?\"\n\n\"Yeah. But this is even better than I imagined. I was just savoring it or whatever.\" he replied.\n\n\"Aw. Speaking of, you say this is your first time, but are you sure you're not gay?\"\n\nHe blinked.\n\n\"Uh, yeah. Pretty sure. I mean, unless you consider yourself a-\"\n\nAnna tapped him hard on the forehead with a fingertip.\n\n\"Alright, alright,\" she interrupted, \"I'm kidding. I just meant you're really good at this.\"\n\n\"Mm, well,\" he mused, \"A nice cock is one thing. I just prefer it attached to a gorgeous woman. Er, the gorgeous part is subjective of course, but in this case...\"\n\nAnna arched an eyebrow.\n\n\"You don't have to lay it on that thick,\" she teased, \"you're already sucking my big ol- Oh.\"\n\nWhile she was speaking he had dipped his head. Pressing his open mouth to her sack, he hummed, giving the effect of a vibrator on her balls. He brought his left hand around to stroke her shaft, taking a deep breath to continue humming.\n\n\"Mm, actually,\" Anna spoke haltingly, between soft moans, \"This is a... mmph, a first for me too. Never had a guy...\"\n\nJack kept stroking, but tipped his head to the side long enough to ask, \"Hum on your balls?\"\n\n\"Ha, that too. But I meant, hmp, a guy going down on me period. Um, aslo, I think... I'm getting close.\" She made the last comment sound like a question, suggesting a further, unspoken question.\n\nJack answered by slowing and then releasing her shaft. He stood slowly, staying close enough that Anna's cock was drawn up to stand between them. He slipped his hands up under her shirt to rest on her hips.\n\n\"Not that I would mind making a mess,\" he pressed even closer, \"Or swallowing. But I was thinking, as long as I'm trying things for the first time...\"\n\nAnna pouted for a moment, then, listening, developed a mischievous smile.\n\n\"Really? What did you have in mind?\"\n\n\"How would you feel about sitting on my face?\"\n\nAnna's arched eyebrow made an appearance.\n\n\"You wanna eat my ass?\" she asked.\n\n\"Uh, yeah. What can I say -- I'm an ass man. And you have an amazing ass. Unless you're not into it.\"\n\n\"Another first for both of us.\" she reflected. \"Yeah. I assume it would feel great, so...\"\n\n\"Oh, you've never...?\"\n\nAnna shrugged.\n\n\"I'm not a porn star or something.\" she laughed.\n\n\"Er, yeah, no... sorry. Just, you are really hot.\"\n\n\"Thanks, Nerd.\" she raeched up to put her arms around his neck and pull him close, \"I'm usually busy, and it can be tough to find a guy who isn't a douche or a weirdo.\"\n\n\"Nerds are okay though, huh?\" Jack posed.\n\n\"Well, there's at least one that shows promise. Still a few things to check before I can be sure. Speaking of which...\"\n\nJack smiled gamely, then gave her a questioning look.\n\n\"Before you put your mouth anywhere else, come here.\" Anna purred.\n\nAnna pulled him down, tipping her head and standing on her toes.\n\n\"Oh.\" Jack managed before being pulled into a deep, passionate kiss.\n\nLips crushed against lips, and tongues slipped and twisted along each other, and their kiss became more and more fervant. When they parted again, gasping and breathing hard, they immediately began pulling each others' clothes off. Jack steered them toward the couch, trying to avoid stepping on their discarded shirts on the way.\n\nAnna dropped her bra on teh coffee table, then tripped while working her tights down around her legs. She landed, laughing, on the couch. Jack just managed to kick off his jeans without tumbling after her.\n\n\"Here, let me help.\" he offered.\n\nSitting ont he arm of the couch and bending over, he lifted her legs to rest her ankles on his shoulders. Anna happily gave up on her tights and lay back. Jack worked the snug fabric up from her soft, full thighs, over her calves, to finally hook them over her heels. Ending up with the thin garment wadded against his face, he covertly took a deep breath through his nose before tossing the tights carelessly aside.\n\n\"Thanks, J- Ah!\" Anna laughed, wiggling around as Jack nipped playfully at one of her feet. \"No, don't,\" she complained after a moment, \"Just ignore my big ugly feet, okay?\"\n\nWith a doubtful frown Jack peered down his nose at the extremity upon which he had just nibbled.\n\n\"I don't have a foot fetish, but they look fine to me.\" he assured her. \"But if that's how you feel about them, I'm happy to move on to other things.\"\n\n\"Good.\" Anna drew her legs in and scootched back to sit up.",
        "Moving off the couch to stand next to it, she gestured.\n\n\"Now lay down so I can return the favor.\" she ordered in an authoritarian tone.\n\n\"Yes, ma'am.\" Jack flopped down on his back. \"Definitely ignore my feet, Beautiful.\"\n\n\"Don't worry,\" Anna rolled her eyes, but smiled at 'Beautiful,' \"There's something else I've been waiting to see.\"\n\nThat said, she climbed onto the couch straddling Jack's torso in reverse-cowgirl position. She quickly helped Jack off with his boxer shorts, giving an appreciative murmur when his erection bounded back to slap against his tummy. Shifting back, she hesitated.\n\n\"So, um... you're sure about this?\" she asked, straightening and tossing her hair to look back over a shoulder at him.\n\nJack pried his gaze from her glorious ass, planted, as it was, mere inches away.\n\n\"Definitely. But if you change your mind,\" he developed an impish smile, \"Just use the safe words.\" He tapped a spot high on her ass. \"Hack the Planet.\"\n\n\"Oh Hell,\" Anna laughed, \"I'm never gonna live that down. Fine. Anything to stop you making any more smartass comments for a while.\"\n\nShe rose on hands and knees and inched back, feeling Jack spread his hands over her cheeks. Slowly lowering her bottom, she also leaned low to indulge one of her own little fantasies. First she tickled his ribs with her nails, then, as he tensed, ran her tongue over his flexing washboard abs. She trailed down the center line of his body toward his naval. When she came to his cock, she smoothly took him into her mouth, closing her lips halfway down his shaft.\n\nMeanwhile, Jack nuzzled up into her, revelling in the heat and soft smothering preassure of her against his face. He unwittingly mirrored Anna's licking, but his tongue trailed from the crevice where her balls were pressed against her taint, back over that smooth expanse to flatten over her tight little hole.\n\nAnna inhaled sharply through her nose, then moaned quietly around her mouthful. She had been right. It was a very different sensation, but, as Jack's tongue played over her bare anus, it did feel pretty great. She tried to maintain something resembling a rhythm while she alternated between sucking and stroking him with her hand. This was more and more challenging as he began to tease and poke between licks and kisses.\n\nBut the serious distraction started when Jack hooked an arm around her leg and wrapped those long fingers around her shaft. Given their relative positions, he used what she thought of as an 'overhand technique.' Being stroked while he simultaneously tongued spit into her clenching pink portal was amazing, and brought Anna moaning back to the edge all too quickly. She held out as long as she could, but, paradoxically, her focus on putting off her climax seemed to push her over the edge all the faster. Her hips trembled. As she lifted her head to draw in a shuddering breath, an idea -- little more than an urge -- seized her.\n\nSurprising Jack, she rose on all fours, tugging her cock free of his hand in the process. Biting her lip and whimpering, she slid a hand down along her body to press her shaft back between her legs. Holding it there, she lowered herself, slowly, shakily.\n\n\"Please...\" she managed, as her tip, dripping pre cum, touched Jack's chin.\n\nTaken aback, but very willing, Jack opened wide. He closed his eyes and took a deep breath before his mouth was filled. Then Anna's pre-slick head pressed on his tongue and followed it down toward his throat. Her balls settled gently over his nose.\n\nFeeling her throb and tense in his mouth, Jack set to sucking. After just a few rolls of her hips, he felt telltale spasms, which were followed by the first violent spurt of Anna's cum.\n\n\"Hnn... fuck...\" she gasped, holding onto Jack's legs, her hair cascading as she let her head drop.\n\nJack swallowed, tremendously aroused, but also glad that she was, for whatever reason, not trying to hilt herself while she was at it. Then he was surprised yet again. Anna abruptly lifted herself. In mid-orgasm, her jumping cock sprung free of Jack's lips to launch further sprays of hot seed down his chest and tummy.\n\nJack too the opportunity to breath. He marveled at the volume of spunk raining down on his midsection. While he waited for Anna to come down from her climax, he moved his hands slowly up and down, caressing the soft curves of her thighs.\n\nSeveral seconds later, after a full body shiver, Anna swung a leg over to step off the couch. She turned a guilty expression on Jack, leaning in to lay a hand along his jaw.\n\n\"God, are you okay?\"\n\n\"I think I'll make it,\" Jack smiled, \"And not that I'm complaining, but, why'd you pull out?\"\n\nAnna broke into a grin, shook her head.\n\n\"Sorry, I just... I 'pulled out' of your face.\"\n\nJack rolled his eyes.\n\n\"Yeah, that's definitely the first time I've used the expression that way,\" he admitted. \"But I am still curious why.\"\n\nMoving down the couch a bit, Anna trailed the fingers of one hand through the polls and droplets of semen spread over Jack's midsection.\n\n\"Well, you hadn't cum yet. So I thought, switch things up maybe? Show you what else my ass can do.\" she explained.\n\nAs she spoke, Anna reached to Jack's erection, stroking it with her cum-slicked hand. She repeated the process a few times before re-mounting the couch, again straddling Jack, but this time facing him. He reached to steady her, but she kept her balance, squatting over his lap. Reaching one hand down to lift his now-slippery dick into a vertical position, she rubbed the still cummy fingers of her other hand in between her cheeks, priming her hole.\n\n\"And I thought, why waste the natural lube.\" she finally finished her explanation as she lowered herself until her weight stretched her open around his swollen head.\n\n\"That's-\" Jack broke off, groaning in pleasure, as Anna slowly sank, engulfing him. When she paused to shift position, he tried again, \"That's a good reason.\"\n\n\"Glad you think so.\"\n\nAnna rolled her hips back and pressed down over another inch of his length. She settled down, her breasts pressed to his chest, and nuzzled in to kiss his neck. Jack folded his arms around her, hugging her to him for a moment before sliding his hands down to her lower back.\n\n\"Mind if I move?\" he asked.\n\nAnna nipped his ear, then whispered into it.\n\n\"If that means you're gonna fuck me now... then no, I don't mind.\"\n\n\"Mm, damn,\" Jack replied, \"When you put it that way...\" Jack turned his head to steal a kiss.\n\nPushing his ass into the cushion, he pulled halfway out of Anna before thrusting in again. As he set a slow steady pace, Anna mirrored his movements, so that each in and out saw Jack pull almost completely free before being buried balls deep as she slapped down on his lap.\n\nIn short order Anna rose on her knees again, dragging her nails over his shoulders and down his chest. The moderate pace didn't last long. Anna sped up her bouncing, her gasps and cries soon overtaking the other noises; their labored breathing, the creaking of the couch, and her half hard cock battering Jack's rippling abs.\n\nWhen Anna had shifted position, Jack had moved his hands from her lower back to her pert, bouncing breasts. Anna placed her hands over his, holding them there and wordlessly encouraging him to lift and squeeze, and to pinch her nipples.\n\nSome minutes later they were both beaded with sweat. To judge by the sound, the couch was on the verge of coming apart.\n\n\"Fu-u-uck,\" Anna gasped, \"Gonna cu-u-um again.\"\n\n\"Do it,\" Jack encouraged between grunts, \"I'm... close.\"\n\nClenching tighter than ever around his pistoning rod, Anna let herself go.\n\n\"Fuck, fuck, fuck, UNNF!\" she cried in abandon, just before her head went light and fuzzy.\n\nJack put on an extra turn of speed. The irregularity of Anna's movements, her tightening around him, and her cries all worked together to hurry him to his own tipping point. The two gradually slowed, their jerky movements grinding to a stop as Anna once again showered his body with cum and Jack released over and over, deep inside her.\n\nThey remained locked that way for long seconds, each occassionally twitching or shifting slightly. Eventually, when they had both relaxed some, Anna carefully lowered herself to lay atop him. She gave him a peck on the cheek in passing before resting her ce against his neck and letting herself go limp.\n\n\"'S good,\" she murmured, \"Jus' leave it in for a minute?\"\n\nTo ensure he understood, she deliberately tensed around his shaft, where it was still half buried inside her.\n\n\"Mm, fuck,\" he made it sound like speaking required a serious effort, \"Sounds good to me, Babe.\"\n\nIn her drained, afterglowy state, Anna couldn't be bothered to pass judgement on 'Babe.'\n\nA few minutes later, Jack shifted to check Anna's face.\n\n\"Are you actually asleep?\" he asked quietly.\n\n\"Mm-Mmm.\" Aside from continuing to breath steadily, Anna didn't move.\n\nJack smiled.\n\n\"So it was good for you too, then?\"\n\n\"Mm-hmm.\"\n\n\"Hmm.\" Jack slide a hand slowly up and down Anna's back.\n\n\"And you're not ticklish at all, probably.\" he said matter of factly.\n\nAnna opened her eyes and squinted at him threateningly.\n\n\"A little. Please don't.\"\n\n\"Mm. Would be a shame to ruin this nice, cozy-\" Jack trailed off and both their expressions went a little funny as his flaccid member finally slipped out of Anna.\n\nThe two shared a brief, childishly prurient smile. They spent a couple more minutes in pleasant silence before either spoke again.\n\n\"So... Had it been a while? You didn't last all that long the first time.\" Jack observed.\n\n\"Uh, yeah,\" Anna looked mildly embarassed, \"Sorry. I should've said something.\"\n\n\"No,\" Jack objected, \"No, don't apologize. I'm kinda glad. It can be a pain, not knowing if you've satisfied someone. Like...\"\n\n\"Yeah, I get it.\"\n\n\"Also, it's a huge turn on, seeing and hearing and feeling you get off.\"\n\nCool as a cucumber a short while ago, Anna pressed a shy smile into his chest.\n\n\"It's kind of embarassing, but... I'm glad you like it, I guess. Sorry about, you know, cramming my dick in your mouth. I should've warned you or something. The first time you helped yourself, but...\"\n\nJack chuckled.\n\n\"Yeah. In the future we should probably remember to give a heads up before cramming our dicks places. Worked out in this case, though. I was surprised for sure. But I almost lost it myself when I heard you getting all loud and desperate, then felt you throbbing, shooting-\"\n\n\"Wait-\" Anna began to interrupt.\n\n\"Don't be too embarassed,\" Jack suggested, \"It was-\"\n\n\"Not that. Well, yeah, it is a little embarassing, but... You said 'In the future.'\" Anna cut in again.\n\nLaying with her head on his chest, she noticed when the rhythm of his breathing stilled for a few extra seconds. Where they had both been rather limp and relaxed, he suddenly seemed somehow stiff.\n\n\"Uh, yeah...\" he said at last.\n\n\"I think-\" she began, shifting to look at him.\n\n\"We should talk about that?\" he finished for her.\n\nOuch. He was sharp. And his tone was casual, but it had lost the smile she usually heard in it. She felt a little bad for playing with him this way. But, given his sense of humor, hopefully he'd forgive her.\n\n\"I think I might really like you. Well, the sex is definitely good. But... if it might be more than that... I don't know if I want to get into anything serious right now. And I don't know, well, much of anything about you or your situation. Maybe we should take it slow and see what happens.\"\n\nHe was slow to reply.\n\n\"Uh, okay...\"\n\nAnna shifted and rose on all fours to look at him.\n\n\"So I think we should have those sandwiches before we fuck again.\" she said, as if it were a perfectly normal thing for a person to say.\n\nJack had been looking back at her, though she got the impression he would have preferred looking away. She watched as his eyes flitted away in confusion at her words.\n\n\"Wait. Do what now?\" he asked.\n\n\"I asked for a rain check, remember? When you asked me to go to lunch with you.\"\n\nShe tried to suppress a smile while his expression shifted through a gamut of reactions. He eventually settled on a rueful half smile.\n\n\"Before we fuck again?\" he quoted her.\n\n\"Yeah. I'll make you a copy of my work schedule and we can meet for lunch. Or brunch. Something. Didn't think I was just gonna end things now, did you?\" She leaned close. \"I haven't even gotten to taste your cum yet.\"\n\n\"Mm, you're a little bit evil.\" Jack accused, his smile broadening.\n\nAnna bounced her eyebrows suggestively. When Jack lifted his head, she tipped hers and pressed down into a long, slow kiss. Jack sucked at her lower lip as she finally came up for air. Settling on his midsection, she sat up and poked a fingertip into his chest.\n\n\"'My treat', I think you said.\"\n\n\"I may have said something like that,\" he admitted, \"but could we lay here a little longer? I'm pretty sure they're not open right now.\"\n\n\"I'm sure it would be very nice to lay here with you,\" she replied regretfully, \"But I think maybe we should meet for sandwiches before fucking again, before we start spending the night.\"\n\nShe slowly slid off of him to stand.\n\n\"So I need to get dressed. Mind if I get something to drink first?\"\n\n\"And watch you walk around my apartment naked? Jeez, that sounds awful.\"\n\nAnna turned and gave her ass a little shake before heading into the kitchen. She smiled when she heard a familiar 'damn' behind her. While she padded to the refrigerator, Jack called after her.\n\n\"Should be bottled water, some energy drinks, and OJ. And milk? Maybe. Sorry -- no beer right now.\"\n\n\"Water's good, thanks.\" Anna replied, taking a bottle and closing the fridge.\n\nWhile she rehydrated in the kitchen, Jack considered whether to pull on his boxers or deal with some decidedly sticky patches first. It was crossing his mind to ask Anna if she'd like to join him for a shower before she left when she spoke up again.\n\n\"You didn't tell me you were an artist. You mind if I look at... Huh. This looks familiar.\""
    ],
    "authorname": "Felix921",
    "tags": [
        "trans woman",
        "sole male",
        "oral sex",
        "anal",
        "fun"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/nerdcam-pt-02"
}