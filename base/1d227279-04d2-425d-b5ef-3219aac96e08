{
    "title": "Spring Break Ch. 07",
    "pages": [
        "This is the final installment of my series, \"Spring Break\". If you haven't read the other chapters, it probably won't make a lot of sense. This story is mostly devoted to wrapping up loose ends, so if you are looking for hot and heavy action, you might want to check out one of the other parts. I've enjoyed hearing from readers about this story. If you have liked the series, please remember to vote. If you have a comment, please leave me feedback or send me an email.\n\n************************\n\nEpilogue\n\nKatie and Carl broke up shortly after we got home from Disney World. I don't think they made it two more months.\n\nShe told me that Carl was uncomfortable about their sexual adventures, even though they were exactly what he thought he had wanted. You know what they say, \"Be careful what you wish for, you just might get it.\"\n\nWell, Carl got it, and found that those fantasies were better left to porn videos and internet stories. He certainly enjoyed the physical parts of our week-long romp, but he wasn't prepared for its emotional toll.\n\nI ran into him a couple of times and he seemed shaken by his experience. Maybe he was more of a prude than he thought he was. Maybe he was just insecure. Maybe we should not have given him everything he wanted all at once. He never said it, but I think he partially blamed me for his breakup with Katie. \n\nIt is my opinion that the thing that broke Katie and Carl up was Katie's sexual awakening. Her mother was a very conservative protestant woman who subscribed to the belief that sex was something to be endured, not enjoyed. Katie never believed that, but was raised in that environment.\n\nOnce she found out how much fun sex was, especially with people she cared about and who turned her on to new (and exciting) things, she found that she wanted more than just missionary position twice a month, like her parents did it. Carl wanted to keep her to himself, but for Katie, there was no going back.\n\nKatie dated a couple of guys, but I don't think ever let them get past second base with her. I believe she realised that sex just for the sake of sex can be fun, but it's a whole lot more rewarding when she was with the right person. Melinda and I had a couple of wild weekends with her over the summer. We also bought her a vibrator or two and Katie spent a lot of time exploring her body in ways she had not done before. She also starting reading about sex, not just erotica, but she very became educated. Like I said, it was an awakening for her.\n\nMelinda and I spent a lot more time together. After we dropped Leah off at the airport, we drove out to Jax Beach, took a walk and laid everything out for our future. We talked about what we wanted, what we expected from each other and how much time and energy we were willing to devote to our relationship. Everything was on the table.\n\nI still had to work a lot, but I cut back on some of my side jobs and made a conscious effort to make time for her. She started to spend a lot more time at my apartment and offered to help me out with some of my bills to make up for me working less.\n\nAt the end of the semester, Melinda graduated and moved out of her parent's house. When she got out of high school, they had bribed her into living at home by buying her a car. With her bachelor's degree in hand, she was ready to spread her wings.\n\nWe moved across my apartment complex into a two bedroom apartment. Although we were spending a lot of time together, my studio apartment just wasn't cutting it. With both of us working full-time, my bills were basically cut in half, even after moving into a bigger apartment. The only things that didn't change were my car payment and my auto insurance. This also allowed me to further cut back on my side jobs, devote more time to school and more energy into my blossoming relationship with Melinda.\n\nI still talked to Leah fairly regularly, and once she was living with me, so did Melinda. When summer started, I started to hear from her less and less. Instead of calling every week or so, I'd only hear from her through a stray email or two and speak to her once every other week.\n\nWhat had I done? When we did talk, everything seemed normal, but in looking back, she always seemed pre-occupied with something else or like she was busy. At one point, she had mentioned something about coming to see us in August, but she bailed on that about a week before she was supposed to fly in. I thought that maybe spring break had ruined our friendship.\n\nNear the end of the year, I was worried about my friend. She just didn't seem as responsive. I wrote her a letter and had put it in a Christmas card, but for one reason or another, I never got around to mailing it. Which turned out to be a good thing.\n\nA week before Christmas, Melinda and I were sitting on the couch watching TV when there was a knock on the door.\n\nI got up to answer it and nearly fell over when I found Leah standing outside our apartment.\n\nShe was wearing a red and white Santa jacket, a matching Santa hat and a pair of high-heeled black leather boots. We later found out that she wasn't wearing anything else.\n\nI was dumbstruck. Melinda nearly bowled me over to get to her. I practically had to pry them apart to get my turn.\n\n\"What are you doing here?\" I asked, once we had settled on the couch.\n\n\"I'm looking for a roommate,\" Leah replied. \"Or two.\"\n\nIt turns out the reason why I had heard so little from her was that she was up to her pretty eyeballs in schoolwork. She had taken extra classes over the summer and fall and had graduated a semester early. Now she had come down to live with us and pursue her relationship with Katie.\n\nMelinda and I were glad to have her back in our lives. Leah had a U-Haul full of her stuff which we unpacked the next morning (after a night of vigorous, sweaty sex) and then put what we didn't have room for in storage.\n\nLeah surprised Katie at work the next day and the two of them spent the next 48 hours holed up in the second bedroom of our apartment. I think I saw them twice over those two days.\n\nWhen they finally came up for air, Melinda and I gave Leah a late graduation present. We tied Leah down on our four-post canopy bed and the three of us each had our way with her. We were all walking funny for the next couple of days.\n\nLeah and I took Melinda home with us for Christmas. Leah's parents were surprised that I had girlfriend. I think she may have told them that she was coming to Jacksonville to live with me. Her dad tried to pump me for information, but since I didn't know what Leah had told him, I tried to say as little as possible until we could get our story straight.\n\nAfter the new year, Leah went looking for a job, Melinda continued working hers and I went back for my final semester. With our bills now split three ways, I was able to quit all of my side jobs and concentrate on work and school. Katie spent a lot of time with us; I think her parents believed that she and I were dating, and we did nothing to discourage that.\n\nIt worked for a while, until Carl got wind that Leah was in town. I never figured him for the vengeful, spiteful type, but when he heard that Katie was spending a lot of time with Leah, he told Katie's parents what was really going on.\n\nThey went apeshit. Well, that's not quite right. Her mom went apeshit. Her dad took it pretty well, all things considered.\n\nI don't for a minute think he approved of Katie's choices, but I think he valued his daughter more than what the neighbours thought of her. Katie's mom was another story. She cursed and wailed nonstop. She wondered what she had done to God that would make Him turn her daughter into a homosexual who was going to burn in Hell.\n\nThings got so bad, Katie moved in with us full-time. We did everything we could to support her, but it got ugly. Her sisters were okay with her choices. Although they didn't approve either, they weren't willing to throw her out of the family for it. \n\nCarl stalked her for a little while. He called a lot and showed up at her classes. He talked bad about her to their mutual friends. Leah and Melinda finally went to see him for a \"come to Jesus\" meeting. I don't know what they said or did, but he stopped harassing Katie.\n\nThings got better towards the end of the semester. Katie's dad never came to visit her in our apartment, although he took her out for lunch and dinner a lot. Her mother would only scream at her, but her dad was good about it. He tried to get her to move home, but the situation there was untenable, and deep down, he knew it. But he never gave up on her and he never stopped loving his daughter.\n\nWhat Katie's mom\u2014and Carl, for that matter\u2014failed to understand was that Katie wasn't a lesbian or a homosexual. She was in love with someone who happened to be female. Melinda and I saw it. What had started out as a short fling became a truly beautiful relationship.\n\nThe four of us became inseparable, and not just because we lived together. I now had three best friends, and we shared everything.\n\nI graduated in May, quit my jobs and went to work for a bank doing IT work (great use of a history degree, huh?). For graduation, my parents sent me and a friend on a week-long cruise to the eastern Caribbean. Melinda, Leah and I pooled our money, got a second cabin with an adjoining door and took Katie with us.\n\nIt was the best vacation ever.\n\nBetween port calls, the four of us talked about our future. Melinda and I were in love, as were Katie and Leah. We had a good group dynamic together and didn't want to give that up. Over several dinners, we came up with a plan.\n\nWhile on St. Thomas, I took the girls to a bunch of jewelry stores and had Leah go back and pick up the ring Melinda had been lusting after the most. \n\nThat night on deck, surrounded by our closest friends, I asked Melinda to marry me.\n\nSo added to the list of things for us to do was plan a wedding.\n\nWhen we got back home, we bought a house. The city of Jacksonville was offering low interest loans to people willing to buy \"historic\" homes that were a little run-down and fix them up as part of a neighbourhood rejuvenation program. We found a home that was free of structural problems and just needed a little bit of TLC.\n\nThe four of us moved into that house and went to work. We gutted the kitchen, painted the walls, stained the woodwork, patched the drywall, changed most of the outlets and fixed all the little problems. All the side jobs I had in college paid off. After a year, we sold it for twice what we had in it.\n\nSo we bought two more houses. Melinda and I lived in one, Leah and Katie lived in the other. We did the same thing to those houses and sold them for about twice what we had in them after another year.\n\nThree years after our spring break trip, Katie graduated and Melinda and I got married. We had considered having Katie be the maid of honour and Leah stand up for me, but figured that would freak out our friends and family a little too much.\n\nSurrounded by the people we loved, Melinda and I exchanged vows in a simple outdoor ceremony.\n\nBefore the wedding, I was pacing about (as grooms tend to do). Leah came into my room and handed me an envelope.\n\n\"This is from Melinda,\" she said. \"She looks beautiful.\"\n\nLeah gave me a quick kiss and disappeared.\n\nI opened the envelope and found a familiar note.\n\nThe paper once was light blue. The emblem of the Old Key West Resort was barely visible. It had been folded and accidentally torn several times. The edges were frayed. It got so bad that two years before, I had to laminate it to keep the note from falling apart.\n\nI smiled as I read the familiar words. The ink had faded. We had been passing this back and forth for the past three years. \n\nIt said simply, \"I love you\".\n\nWhen we returned from the honeymoon (which Katie and Leah did not go on, by the way), the four of us moved out of Jacksonville. Katie wanted a fresh start. She felt like a pariah. Carl and her mom had turned many of her childhood friends against her because of Leah, Melinda and I.\n\nI have always loved the mountains of North Carolina and Leah had some friends in the area, so we moved up to Asheville. Leah and I were both able to transfer through our jobs and Melinda and Katie quickly found jobs on their own.\n\nWe had made a fair amount of money from the sale of our houses in Jacksonville, so we were able to buy some extra property when we moved. Then two things happened.\n\nOn the advice of a friend at the bank, we invested some of our money in a couple of tech stocks and we caught the tail end of the mid-90s dot-com bubble. We didn't become as rich as we could have, but we still did pretty well. On the same friend's advice, we got out before the bubble burst and had a nice nest egg ready for us.\n\nThe second thing was the real-estate boom that occurred shortly thereafter. The four of us had bought a house and were living together, but we also bought a couple of fixer-uppers and some land. Having four full-time incomes (and no kids) in one household has some advantages.\n\nWhen people were paying stupid-high prices for property, we sold everything but some land outside Asheville and made gobs and gobs of dough. I almost felt guilty for taking the amounts of money some people were giving us for undeveloped land or a 1,800 square foot house that needed a roof. Almost.\n\nMelinda, Leah, Katie and I still live together. We built ourselves a big house and live comfortably, but not opulently. We have neighbours who aren't nosy and own enough land to be private without being stuck out in the boonies or up on the side of a mountain somewhere.\n\nIt's an interesting dynamic we have. We are clearly two couples, but that doesn't stop us from sharing each other every now and then. I love the three girls more than life itself.\n\nKatie and Leah had a commitment ceremony shortly after our house was built. Following mine and Melinda's wedding, Leah never hid her relationship with Katie from her parents; they just never talked about it. They were a little shocked when it came out in the open, but it was the worst-kept secret in the family. Still, they welcomed Katie with open arms because they saw how happy they were together.\n\nWe called it a \"wedding\", and although legally it wasn't, the two may as well be married. Their love is deeper than many other couples I know, and I have no doubt that they will grow old together.\n\nThe day before the wedding, Katie's dad and her sisters showed up on our doorstep. She had sent them an invitation but didn't expect to hear back. They hadn't talked much since we moved away. Yet there he was, wanting nothing more than for his child to know how much he loved her.\n\nI don't think he ever fully understood the choice Katie had made. Before he found out they were sleeping together, he liked Leah, and after years of soul-searching, he decided he didn't want to lose his daughter, no matter what his preacher told him. Her mom had never come around, and he said he was going to spend the next several months sleeping on the couch for going to visit Katie. It didn't matter, though.\n\nWhen he escorted her into the garden, he looked as proud as any father at any wedding. At the reception, he gave an eloquent toast, which brought tears to everyone's eyes. All our guests and friends knew how hard the rift in her family had been on Katie. He's a regular visitor to our house now, and although I think the group thing we having going on is a little freaky for him, he accepts it as part of having his youngest daughter in his life.\n\nNow that I think about it, the group thing we have freaks out all of our families, which is saying something considering that Leah, Melinda and I come from generally easy-going, progressive-thinking houses. It's a good thing they all live in Florida and we don't.\n\nA year or so later, Melinda's stranglehold on the title \"The Most Beautiful Woman in the World\" was quickly and decisively wrestled away from her when our daughter was born.\n\nMelinda and I named her Kaylee after her godmothers (her birth certificate reads Katelyn Leah) and she is a bundle of joy for all of us. She may as well have seven(!) grandparents, who all spoil her rotten (Katie's mom is still not speaking with any of us).\n\nBoth Leah and Katie were right there with us through the entire pregnancy and birth experience. Come to think of it, I'd say they were probably there for the conception, too. \n\nHaving a newborn in the house put them in the baby mode, too. Kaylee is two now, and Melinda and I have another on the way. Katie and Leah are talking about adopting.\n\nOur lives are far from idyllic, but we're happy. We have a lot of the usual problems that other couples have, only there are four of us involved instead of just two. Still, we are committed to each other and as long we continue to communicate, all of the problems eventually get solved. Plus, the make-up sex is usually extra good.\n\nI don't know exactly what the future holds for us, but I'll give you a hint.\n\n. . . And we lived happily ever after.\n\n************************\n\nI'd like to thank everyone who has sent me feedback on this series. It's been great to hear from you and I'm glad that people have enjoyed it. I had a wonderful time writing these stories and only hope that you guys have fallen in love with the characters as much as I have. If you have any feedback for me, please leave me a comment or send me an email."
    ],
    "authorname": "HLD",
    "tags": [],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/spring-break-ch-07"
}