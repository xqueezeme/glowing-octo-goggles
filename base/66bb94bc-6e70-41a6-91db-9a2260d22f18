{
    "title": "Halloween Party Surprise",
    "pages": [
        "I have always loved parties, even though I never seem to get invited to too many. I also love holidays, and one of my favorites has become Halloween. When I was a bit younger and raising a family it was always fun to dress up and take the kids out trick-or-treating. We usually made interesting costumes for them and tried to be innovative in ours as well. One year my wife and I went as a pair of dice, which was a lot of fun.\n\nBut now my kids are grown and out of the house, leaving my wife and I to tend to the door and pass out candy to all those kids. (sigh) This year however, almost two weeks before the haunting day, I collected the mail and found an invitation addressed to my wife and myself for a party. The interesting thing was that there was no return address, and the location of the party was a public venue, so we had no clue who had invited us. The handwritten card and envelope seemed to hold no cues, no matter how hard I examined them.\n\nWe discussed for a long time if we wanted to attend or not, since we didn't know who was going to be there, or who had invited us, we finally decided that we shouldn't. A week before the party we received another identically hand written envelope. The card inside had a black cat on the cover and the following typed inside...\n\n\"Yes it's safe. No you're not supposed to know who invited you. Yes it will be fun. Yes, you should wear a costume. No, you should not be late, and as the original said... RSVP by placing a paper pumpkin with a black cat drawn on it on your front door. Look forward to seeing if we can guess who each other are! A trusted friend.\"\n\nWell...now if that didn't address almost every question we had. It was almost as if the sender had been listening to our conversation. More discussion, more questions and finally...\"why the hell not?\" \n\nWith the party only a week away we had to decide on costumes. I could think of many things to go as, as could my wife, but I wanted to be different. I briefly thought about going as a hooker...but my wife put the kibosh on that one, saying no one wanted to see my fifty year old body sticking out of a short top and skirt. After much haggling, my wife decided to go as an army soldier, easy for her, since she was one... And I would go as a firefighter. The original invitation was very explicit that the costume must include a mask that prevented disclosure of your identity. In my case that meant that I could use a fireproof \"nomex\" hood to cover much of my face and a regular eye mask to finish it off. My wife would use a combination of camouflaged pain and a dark colored combat eyewear to completely obliterate her features. All in all I thought it was going to be a good combination.\n\nThe days ticked by, and the temperature ticked upward. We were soon in the middle of an unseasonably warm spell, not good for my costume, since I was planning on using an old pair of turnouts from when I really was a firefighter. On an 80 degree day that was going to be darn uncomfortable and sweaty, like wearing a winter coat on a hot summer day. My wife made the perfectly reasonable suggestion, that since I was going to be wearing all that, just wear a pair of shorts and t-shirt under and no one would ever know. \n\nI joked briefly about going naked under my costume, but the response I got was anything but happy, so a pair of shorts and T-shirt it was.\n\nThe party started after dark, and after all the kids trick-or-treating was done, at the local country club. We stood outside the car and donned our masks and headed toward the party. I was surprised at the size of the crowd. There must have been nearly a hundred people there, eating and dancing to some rather spooky sounding music. It didn't take the hostess long to find us, a tall thin woman in an Elvira outfit, which she REALLY filled out.\n\n\"Welcome! I hope you both enjoy your time here. There are only a few rules. First... This is a Sadie Hawkins dance, and gentlemen may not ask to dance and may not refuse any woman as long as they are not already dancing with someone. Second, this one is you can dance with whomever you want until eleven. After that... well it's part of one of the games. We'll give you more information later on that. The last rule is the biggie. You can't tell anyone who you are nor directly ask them who they are. You can guess, you can ask questions to figure it out, but you can't outright ask. Any questions?\"\n\n\"Just one.\" I said. \"Who's paying for this shindig?\"\n\n\"Ohhhh. Well, the food is provided by several local businesses, their names are provided on the tables and the hall is being paid for by the party shop. The bar is a cash bar though.\"\n\n\"Ahhh I see.\" I answered.\n\n\"Well, have fun. I see I have a few more new comers to introduce myself to. Have fun!\" Elvira said as she scooted away to grab the next group of people that just came in.\n\n\"Well, I'd ask you to dance, but it seems I can't.\" I said to my wife as a slower dance started.\n\n\"No but I can ask you. Shall we?\" She said, taking my hand and pulling me toward the dance floor.\n\nIt was surprisingly hard to dance in the boots I was wearing, and I had to be careful to not step on her toes. We like to dance slow, the faster numbers really aren't our thing, so when the next faster number started we retreated to see what the food looked like. There was a lot of finger food from a variety of local places, Mexican, bar-b-que, chicken wings, you name it. We each collected a few things to munch on and found a table to sit down at and watch the variety of costumes. I saw one or two that I thought I might recognize, but for the most part everyone had done a good job of masking their identity.\n\n\"So how would you like to dance?\" I heard from behind me. I turned to see what looked like an oversized Tinkerbelle, complete with wings, standing behind me. I started to decline, but was quickly cut off. \"Uh uh. Not allowed to say no!\" She said as she took my hand.\n\n\"But my wife.\" I said in protest.\n\n\"Your wife can dance with anyone she wants. But if she wants to dance with you, she will have to wait until the next dance, this one is mine!\" she said with a crooked smile under her pee green mask.\n\nI looked back to my wife who chuckled at the sight of the somewhat oversized and overweight Tinkerbelle and told me to go have fun, but not before I gave her money for an amoretto sour. I quickly dug my wallet out and handed her some cash before Tink dragged me bodily out onto the dance floor.\n\nThe dance was a fast one, which I wasn't particularly good at. \n\n\"You don't do this kind of dancing too well, do you?\" Tink asked as I tried to follow her moves.\n\n\"Not really.\" I answered over the DJ's loud music.\n\n\"Just follow me then.\" She said, slowing her motions down and taking my hands. It didn't take me long to get the hang of what she was doing, and I felt like I was just about getting it when the song ended.\n\n\"Thanks for the dance.\" I said as I started to retreat.\n\n\"You're welcome. But don't run off. I'm going to take this next one too.\" Tink said with a grin. The music started, a bit more of a salsa type beat, To which Tink was soon moving and rubbing her back and ass against my front. It was a good thing that I had on heavy fire fighters gear or the huge hardon I was getting would have been obvious. For her part Tink made sure to pull my hands around her far enough that she could put them where she wanted, and that was just under her breasts where my fingers were rubbing against her obviously unbridled tits.\n\n\"Now that was nice.\" Tink said as the number wore down to an end.\n\n\"I think I better take my husband back,\" my wife said, tapping Tink on the shoulder.\n\n\"Enjoy! I just got him all warmed up for you!\" Tink said as she retreated with a huge smile.\n\n\"Well, she seemed quite friendly,\" my wife said, as the next song started a little slower than the last but still faster than a \"slow\" dance.\n\n\"Yeah. She did seem to want to do the bump and grind.\" I said as she and I faced each other, doing a fast trot type step.\n\n\"Uh huh... Like this!\" She said, turning inside my arms and pushing herself against me.\n\n\"Yeah kind of.\" I agreed, hoping she didn't feel my hardon either.\n\nMy wife and I danced the rest of the number, after which I called a break. I needed something to drink. We headed to the bar and I got a cold Pepsi, since I had to drive home later. We went back to our table and dropped into the chairs to enjoy our drinks. She still had a bit of her sour left, which she quickly polished off.\n\n\"You know. He's got an interesting costume, kind of hot too.\" She said, pointing at a guy in a tight fitting superhero costume.\n\n\"Uh huh.\" I said noncommittally. \"Or maybe that swashbuckler over there? Hmm There's a Robin Hood. You always did enjoy men in tights. Oh better yet, there's a batman!\"\n\n\"He's kinda cute. I could ask him to dance.\" She said teasingly.\n\n\"You could, but you won't. Not because I'd stop you but because you're just too much of a wall flower.\" I teased back.\n\n\"OH really?!\" she exclaimed, cocking her head and looking at me like I had just sprouted a third head. I leaned back and laughed, knowing that she could darn well do anything she wanted to do, or that she put her mind to. To my surprise she got up and headed toward Batman and was soon dancing with him, trying to imitate the way Tink had been dancing with me.\n\n\"You look lonely!\" A tall willowy blonde said, her hair falling over one eye and half her face, long red gloves that extended most of the way up her arms and a bright red long strapless dress that seemed almost glued to her curvy body and large tits. \"I think that means you should dance with me.\"\n\n\"OH right.\" I said as I got up to follow her to the dance floor. I took her hand and tried to follow her lead as she twisted and turned back and forth, her long dress flinging out and revealing her long slender legs through the cuts up each side of the garment that extended all the way up to her hips. She was a good dancer and easily put me to shame the entire dance. The next was a slow number and almost without missing a hitch she slipped between my arms, pressed her chest against me and gently ground her hips against mine as we swayed to \"Nights in White Satin\".\n\n\"So I'm trying to figure out who you are, character wise I mean.\" I said quietly.\n\n\"Think rabbits.\" She whispered back.\n\nI thought for several moments before it finally dawned on me that she was Roger Rabbits hot wife. \"I see. Is Roger around?\"\n\n\"Oh he's around some place being a rabbit.\" She said with a giggle.\n\n\"Ahhh.\" I answered. \"Nice costume.\"\n\n\"Thank you. I tried to make it authentic, right down to the...well I'm gonna let you guess.\" She replied with a little giggle.\n\n\"I'm lost.\" I said honestly.\n\n\"Guess what Roger's wife wore under it.\" She whispered before giving me a quick tug on my earlobe with her teeth.\n\n\"I'm guessing nothing.\" I responded verbally, my cock, already partly hard, responding to the thought of nothing under the tight red dress.\n\n\"If you don't believe me, you can find out.\" She whispered.\n\n\"Are you suggesting I feel you up?\"\n\n\"Are you telling me your hard cock doesn't want to?\" She whispered, reaching for one of my hands and pushing it down from her waist to her hip, my palm pressing against a sliver of bare skin on her thigh. \n\n\"Not smart.\" I whispered back.\n\n\"Chicken?\"\n\n\"Only of getting caught by my wife.\" I said honestly.\n\n\"I can see her, trust me, she won't notice. She's keeping busy fending off the caped crusader.\"\n\n\"I see.\" I said quietly as I let my fingers slip into the gap in the dress and slowly slid down and around her thigh. I slid my fingers up between her legs, teasing the inside of her right thigh until my fingers found her completely shaved and very wet pussy lips.\n\n\"Hmmmmm I thought firemen were supposed to put fires out, not start them.\" She half moaned as my finger stroked between her lips and across her already hard clit.\n\n\"Yeah, sometimes.\" I answered, as I felt her hand slide down inside my fire pants and grab my hard cock through my shorts. \n\n\"Damn what a cock.\" She whispered as she pulled her hand away to work both my shorts and underwear down far enough to expose my cock to her hand inside my pants. \"I wish I could get that inside me. Damn!\" she moaned as she stroked me slowly in time with my finger rubbing her pussy.\n\nUnfortunately the song ended and the two of us quickly withdrew our hands from each other before we were discovered. \"I hope we get to meet back up again later.\" She said huskily as my wife walked our direction.\n\n\"Hey lover.\" I asked as she came up. \"Have a good dance?\"\n\n\"Batman had busy hands.\" She said almost disgustedly.\n\n\"Well, you were the one who said he was hot.\" I kidded as we walked back to the bar to get another cold one. \"What would you like?\"\n\n\"I think another sour.\" She said with a devilish grin. \"You know how I am when I've had a couple.\"\n\n\"Oh yeah.\" I said, thinking about the last time she had a couple at a wedding reception and the fun we had in the hotel later. It wasn't every day that I could get her to do something as outrageous as screw in a stairwell, even if we were mostly dressed.\n\nWe danced for a while longer, sometimes with each other, sometimes with others. Several women, some older, some younger seemed to be vying for my time. In particular, Tinkerbelle, Mrs. Rabbit, a good looking and scantily dressed Greek goddess, and a tall thin hooker.\n\n\"Ladies and gentlemen! It's time to start our first game! \" Elvira called from the chair she was standing on, a microphone in her hand. \"My helpers, Mister and Mrs Dracula, are circulating through the group. Each of you needs to take a card, guys from old drack himself and ladies from his wife. On the card you will find a number. I'll give you some music to find your partner with the same number and then we'll begin.\n\n\"Darn. I was kind of thinking that we would stayed paired up,\" she said seriously. \"Especially after the way that lady in the red dress seems to be taken with putting your hands all kinds of places.\"\n\n\"If you feel that strongly about it, we can see if we can switch with whoever your partner is.\" I told her as the room started filling with names being shouted out.\n\n\"Naw. I guess it'll be ok.\" She said. \"Go find your partner and meet back here?\"\n\n\"Works for me.\" I said with a shrug. I moved away from her and waded into the crowd, asking any woman standing alone if she had \"the same number as I did\" on her card. I was pleased to see that Tinkerbell from earlier already had a partner, as did Mrs. Rabbit. As couples paired up it was clear the choices were dwindling. I soon found myself paired with a petite woman with a fair sized chest wearing a Greek goddess outfit that I had danced with a couple times. Her outfit consisted of a plain white, and thin, strip of material running from her waist just right of her belly button, up and over her breast, around her neck and back down the other side, the six or so inch wide strip of material laying over both breasts, but leaving the sides open so that the sides of her breasts peaked out as she moved. The material connected to a short white, and equally thin, skirt that came do mid thigh. The outfit left her entire back, shoulders, arms , most of her legs and a fairly wide strip up her front from her waist to her neck, completely bare. She had on a white feathery mask that covered from her nose to her forehead. As I said, I'd already danced with her a couple times and I could tell that she was just a tad on the tipsy side, and if I thought Mrs. Rabbit had wanted my hands in certain places, this woman had been much less subtle about it, several times pushing my hands inside the thin white material to cup her bare tits beneath.\n\n\"So what should I call you?\" I asked her as I held out my card to match it with hers. \n\n\"Aphrodite of course. And you?\" She said in a quite sexy voice, giving her long hair a flip.\n\n\"Hmmm Mike the fireman.\" I answered, taking her hand and leading her back through the crowd toward where my wife and I were going to meet.\n\n\"Your wife?\" Aphrodite asked quietly as we approached my wife and her new partner.\n\n\"Uh huh.\" I answered as I inspected her partner, a tall man wearing a one piece leotard that was supposed to be part of Fantastic Four. Unfortunately his beer belly was anything but superheroish.\n\n\"Hey hon. See you found your partner.\" I said as we walked up.\n\n\"Yeah. I did.\" She said as she stood almost dwarfed by the tall man.\n\n\"You want to trade?\" I asked her point blank.\n\nShe looked over at my partner and made a wry face. \"Figures you'd draw a floozy\" she whispered to me.\n\n\"Yeah, don't know what the game is, but if involves walking...\" I said with a grin, looking down at Aphrodite's spike heels, \"I'd just as soon be paired with you though.\"\n\n\"yeah. I know.\"\n\n\"Ok everyone.\" Elvira's voice boomed over the PA. \"By now everyone should have a partner... not their spouse. Ladies...Trust me, if you have a competitive husband you probably don't want to be with him!\" Which brought a round of laughs from a number of women. \"So the name of the game here is kind of like an obstacle course. Out on the tee boxes are a number of challenges. Each team will need to complete the challenge to get a punch on a card like this.\" She said as she held up a blue card about four inches wide and twice as long. \"Once you collect the punches from the places listed on your card, you come back. First team back with all their punches wins. Of course there are penalties if you get caught cheating, and if you look on the back under the map there are some bonus points you can earn. Those were my husband's idea.\" She said shaking her head. \"As usual each team will be tied together at the wrist with a piece of nice soft breakable lace. Gentlemen...If you break it, you're disqualified, so you better not man handle your partner!\"\n\nMy wife looked at my partner swaying slowly where she stood and chuckled. \" Look's like you'll be safe enough. Have fun sweetie!\"\n\n\"Thanks!\" I said shaking my head. \n\n\"One more word of warning. The monsters are on the course. If you get caught and they take away your card...well you're out. You can of course bribe them to go away.\" Elvira said with a chuckle. \"So line up, we'll tie you up and let you go!\" \n\nEveryone in the room started lining up in pairs, Lady Dracula tying a red lacy ribbon around each couples hands so that about a foot of the red lace ribbon ran between their wrists, and Drac giving them their punch card as they headed out the door toward the golf course. When it was finally our turn I held my left hand out with Aphrodite's right in mine. Lady Dracula did her job, tying the ribbon and stapling the ends to make sure it couldn't be untied without being discovered. Aphrodite was handed a card with the time written on it and sent out into the moonlit night.\n\n\"Well.\" Aphrodite said with a grin. \"It says here we have to go to the fifth, eleventh, twelfth and sixteenth holes. I wonder what kind of obstacles they have for us there?\"\n\n\"No idea.\" I said as we walked along the paved path. \"So are you married?\" I asked conversationally.\n\n\"Oh yes! He came dressed as Donald Trump.\" She replied. \n\n\"I think I saw him. Kind of a short stocky guy?\"\n\n\"Yep! That's him! Probably busy trying to get into the pants of his partner by now. I think she was dressed as a fairy or something like that.\" She said with a drunken giggle.\n\n\"You don't approve?\"\n\n\"Of him trying to make with any woman he sees? That is the point now isn't it? But I mean if he had a pecker worth looking at it would be different, but hell, most women wouldn't give him the time of day if they knew what they were getting in the bargain.\"\n\n\"I see.\" I answered, not knowing what to say to her obviously drunken rant.\n\n\"I mean hell, I'm a good looking woman. You'd think he would want to fuck me, but hell no...he'd rather chase some other skirt. At least tonight I can get a good fucking!\"",
        "\"I'm not at all sure I understand this party.\" I said honesty. \"Come on, let's head this way. It's a lot shorter than following the path all the way to five.\"\n\n\"Ok.\" she said simply, letting me steer her off the path toward and across the wide fairway.\n\n\"You know, I bet you have a bigger cock than he does.\" She said quietly. \"How about giving me a peek before we get to the first game?\"\n\n\"Huh? You want me to just whip it out?\" I asked a bit surprised.\n\n\"Well, you could, but then that wouldn't be as much fun. How about I just tease it out a bit.\"\n\nMy mouth opened and closed quietly several times, not quite sure what to say\n\n\"Come on, you're not bashful, are you? How big are you? Or are you going to make me show off some of my own first? I'm sure your wife won't mind letting me have a peek.\"\n\n\"Oh, it's big enough.\" I finally answered, not wanting to get into a comparison with her husband.\n\n\"Oh come now. How about a little peek?\" she persisted, reaching across with her other hand to try and undo the big clasp that held the front of my heavy turnout pants closed.\n\n\"Aphrodite, I don't think that's a good idea. I mean after all, isn't that kind of a high school thing, show me yours and I'll show you mine?\" I said, reaching to try and pull her hand away from my pants.\n\n\"Ohhh of course. That would be more fair, wouldn't it?\" She said, taking her hand away from my pants and reaching to the top of her own costume. I stopped in my tracks and stared as she pulled the strips of white material apart, exposing both her large C cup breasts, her nipples rock hard in the middle of the two plus inch diameter pink areola. Each round breast was firm, jutting out sexily from her chest, sagging slightly but not overly so. The nearly full moon lit her bare chest in a slightly bluish hue, but in no way diminished how sexy the two creamy orbs looked. \"Now...Your turn!\" she said with a smirk. \n\n\"You really expect me to just whip it out and show you my cock?\" I asked incredulously.\n\n\"Well, you are staring at my tits. You're not ashamed of it, are you? I mean from what I heard it's one hell of a nice sized cock!\" \n\n\"From what you heard? From who?\" I asked in shock.\n\n\"Oh. Just a little birdie in a red dress.\" She answered with a conspiratorial little giggle.\n\n\"I don't get it. What is it with the women at this party?\"\n\n\"Sweetie, that's what it's all about. A fun sexy time!\" She said looking at me with a bit of surprise on her face.\n\n\"Seriously?\"\n\n\"Sure, look at the bonus points on the card!\" she said, holding the card out to me.\n\nI took the card and looked at the list under the map on the back.\n\n-French kiss your partner for at least a full minute in front of any station helper. (1 point)\n\n-French kiss the station helper for at least one minute (1 point)\n\n-Kiss your partner's most private part(s) in front of any station helper (3 points)\n\n-Using only your hands, determine the state of arousal of your partner to any station helper's satisfaction (5 points)\n\n-Expose all your intimate body parts to any station helper and at least one other person of the opposite sex (3 points)\n\n-Allow one person of the opposite sex ( NOT your partner )to expose all your intimate body parts to any station helper (5 points)\n\n-Strip naked in front of any station helper (5 points)\n\n-Convince any two persons of the opposite sex to allow you to expose all their private parts at the same time in front of any station helper (10 points)\n\n-Pleasure yourself to the satisfaction of any station helper (5 points, Naked, additional 5 points, climax, additional 5 points)\n\n-Make you partner climax in front of any station helper (20 points, 5 additional points for the female member making the male member cum on a third parties exposed breasts)\n\n-Locate one of the hidden objects and bring it back inserted in the female partners pussy (10 points)\n\n-Exchange costumes (20 points)\n\n-Wear each other's underwear at the end of the challenge (10 points)\n\n-Carry your female partner between any two stages (5 points, 10 additional points bonus if it's done cock in pussy)\n\n-Borrow a vibrator at any station and leave it inserted for the duration of that station (10 points)\n\n-Strip naked for the duration of any single station (15 points)\n\n-Leave your most private parts exposed while going between any two stations (5 points)\n\n-All four members of two teams simultaneously engage in sex with the partner of the other team in front of one of the helpers (30 points)\n\n-Show the helper at EACH station the male partners cock in one of the female partners openings. (10 points, 5 additional bonus points if all 3 openings are filled)\n\n\"God these are just...\"\n\n\"Dirty? Yeah, I know. But I wouldn't mind that last one.\" She said with a sigh as she stepped the two steps between us and reached for the front of my pants. I stood there and watched, not stopping her as she undid the front of my fire pants and spread them apart, her hands reaching in to grab the front of my athletic shorts. She quickly pushed them, and my men's bikini underwear my wife likes me to wear, down as far as she could in my pants. \"Ohhhh yeah. Definitely the last one, or maybe a few more.\" She cooed as she wrapped both hands around my quickly hardening cock and stroked it gently, drawing it out into the moonlight through the front of my pants.\n\n\"Okay, you saw. Can we go now?\" I asked breathlessly as she stood there stroking me, her actions getting me seriously turned on. Not that I wasn't already turned on after dancing with, and feeling up, several women.\n\n\"Almost.\" Aphrodite said with a grin, dropping to her knees in front of me and quickly engulfing a good portion of my cock in her mouth. \"Mmmmmm\" she moaned softly around my now hard shaft as she held it in one hand and plunged her mouth on and off of it. \"Much better.\" She said with a grin, releasing it from her grasp so it glistened in the moonlight with her saliva. \n\n\"Okay. Now we can go?\" I hissed quietly.\n\n\"Yep. As long as you leave it out like that. Otherwise I'm gonna have to stop and pull it out again.\"\n\n\"Fine.\" I said with a frown as she took my hand and pulled me along again down the fairway toward the 5th hole Tee box. We cut through the trees between the fourth and fifth fairways and emerged not far from the fifth sign pointing to the start of the fifth hole. There were quite a few other couples making their way down the fairway from the path, so we quickly covered ourselves back up before continuing on to what looked like a huge stack of straw bales.\n\n\"Welcome.\" A young woman dressed as Dorothy from the wizard of OZ said to a small group of us that had gathered in front of what I figured was a hay stack maze. \"A few couples have already completed this task, which is really quite simple. This is a maze, but of course if it were just a simple maze that wouldn't be all that scary. This maze is low enough you have to crawl, and of course it's covered so it's quite dark, making you have to find your way by feel. Some of the dead end's have small amounts of light for those of you who might want to pause to work on some of those bonus points goodies on the back of your cards, or well, whatever you might want to feel up or out. Enjoy!\" she said, stepping out of the way to allow us to head into the maze. \n\nWe were about the fourth couple in line to enter, following directly behind a woman in a VERY skimpy version of a female police officer, tied to a guy wearing what I assumed was a Zorro outfit. \n\n\"You know, we should think about a few of these.\" Aphrodite said quietly, waving the card out in the moonlight as we waited our turn. \n\n\"You're kidding, right?\" I asked her as I looked at the line she was pointing at that read \"Wear each other's underwear at the end of the challenge\"\n\n\"Nope. I'm dead serious. I think it might be fun to do that, and while we're changing if your big fat cock just happened to find its way inside me, well I wouldn't exactly complain!\"\n\n\"BAD idea.\" I said quietly.\n\n\"It's a lot easier than some of these.\" She said pointing to a few other items on the list. I looked down the list, surprised at what was offered as bonus points.\n\n\"I don't even know how the hell I got invited to this party!\" I said with a scowl.\n\n\"Why? This not your thing? Didn't seem like it when you were out there on the dance floor with your hands on my tits.\" She said with a giggle.\n\n\"It's not that, it's, well, hell if my wife found out I did any of these things she'd be pissed as hell. I'd be surprised if she hasn't already called it quits!\"\n\n\"Well, I for one think we ought to do at least some of these.\" She said as we ducked down to enter the maze next to each other.\n\n\"Oh? Like what?\" I asked as I crawled along next to her, bumping my body into hers to maintain contact with her.\n\n\"How about the underwear one for a start? If that's too much I'd be happy to let you expose me, as long as you let me do the same to you.\"\n\n\"We'll see.\" I said quietly as we crawled along, feeling our way along the hay stacked hay bales on either side of us, trying to keep our hands clasped together so we don't break the ribbon.\n\n\"Looks like a dead end.\" She whispered as we crawled out into an open area in the bales, lit by a small light in one corner that was throwing enough light to just dimly light the small space.\n\n\"Okay, back down the way we came.\" I said, starting to turn us.\n\n\"You sure you don't want to stop and swap underwear?\"\n\n\"Yeah, pretty sure.\" I answered as I coaxed her back into the tunnel.\n\nWe wound around several more tunnels before emerging into yet another closed room, this one occupied by a couple that appeared to have chosen to do the underwear swap. The woman, dressed in what I remembered was a black full body leotard, was kneeling over her partner in the small space naked. She had somehow managed to get the whole leotard off except for the single arm that was attached to her partner. Her tits swung around below her as she helped him to work the tiny black satin panty she had been wearing onto his legs, his hardon exposed as he lay on his back, his pants on the ground at his feet. It was pretty obvious that in its current state there was going to be a lot showing after he got them on, but then from the look on her face now hovering over his hardon, I figured that was the idea.\n\n\"Sorry.\" I mumbled as I tried to back out.\n\n\"No problem. There's room if you want to.\" The nude woman said with a giggle. \"I wouldn't mind a hand. This is harder than I thought!\"\n\n\"What, my cock or getting your clothes on and off?\" the guy asked with a chuckle.\n\n\"Both?\" she giggled. \n\n\"Yeah, for sure!\" The guy chuckled. \"How she's gonna get me tucked into these is yet to be seen!\"\n\n\"Doesn't say you have to be all the way tucked in.\" she answered with a giggle. \"But if you want to I'm sure I can arrange to add a few more points to my card, as long as you don't mind an audience.\"\n\n\"If that's what you want, maybe we can arrange one of those nice high pointers?\" he asked suggestively. \"Let's see, two couples was worth how many points?\"\n\n\"Sorry.\" I said, turning to head down the tunnel again. \n\n\"Awww.\" The cat said with an audible pout. \"I think that would have been fun! What's the point in a swingers party if you don't want to share?\" She called.\n\n\"Swingers party?\" I asked Aphrodite as I crawled along. \"Is that what this is?\"\n\n\"More or less,\" she answered with a giggle. \"Not all that hard core, but a fun time for some partner swapping.\"\n\n\"How the hell did I get invited to this?\"\n\n\"Well, someone must have put you on the list.\" She said. \"No wonder you're so reluctant. Hell, most of the people here are EXPECTING to get fucked more than once tonight! I'm quite sure that cat lady back there was hoping you'd join in the fun with the expectation of getting fucked by two cocks at once.\"\n\n\"Well, that explains a lot.\" I mumbled.\n\n\"Yeah, so the question is, what's your wife doing right now? I'm willing to bet she's getting hit on pretty hard, if not fucked already.\"\n\n\"I doubt that.\" I said quietly. \"Swinging isn't exactly her thing. I feel sorry for the guy she's tied to if he thinks he's going to get into her pants tonight.\"\n\n\"I feel sorry for me!\" Aphrodite mumbled.\n\nI stopped and looked in the direction of her voice, not seeing her for the darkness. \"Feel sorry for you? Because you're not getting screwed?\"\n\n\"Pretty much. I've been throwing myself at you since we left the clubhouse and it isn't getting any better.\" She said, pulling my hand to get me moving again. \"Might as well be hooked to a car bumper for all the sex I'm getting tonight.\" She said quietly, frustration and maybe even a bit of anger slipping into her voice.\n\nWe turned and headed down another tunnel, seeing light at the end. I expected it was the end, but turned out to be just another dead end room. \n\n\"Fine. Take em off.\" I said quietly.\n\n\"What?\"\n\n\"Your underwear. Take em off.\" I said.\n\n\"Really?\"\n\n\"Yeah, but you gotta figure out how to get me undressed enough to get them on with this on our arm.\" I said, lifting our hands so that the red ribbon connecting us was visible.\n\n\"You are gonna look so fucking hot in these!\" she said as she rolled onto her back and reached under her dress to pull off a tiny pair of white thong panties. With her underwear off she worked to get my coat off as far as we could, leaving it on one arm, and then doing the same with my pants, held onto my one arm by the suspenders. With my pants off she quickly skimmed my shorts and the pair of men's bikini briefs I had on, off, leaving me naked from the waist down. \"Ohhhh yeah.\" Aphrodite cooed as she worked the thong panties up my legs, pulling them as far as my balls and then leaving them there as she bent her face down to engulf my engorged head into her mouth. \"Um.\" She slurped as she plunged her mouth up and down my shaft.\n\n\"Looks like we're just in time.\" I heard a female voice say, looking past Aphrodite to see the cat lady crawling into the small room. \"You know, if we do this outside we can get a whole fuck load of points!\"\n\n\"Yeah, we could.\" Aphrodite said, with a grin. \"If you can get that off again.\"\n\n\"Not a problem. We had a little accident getting it back on and somehow I have a hole where the crotch used to be.\" She said with a giggle. \n\n\"Smart move.\"\n\n\"Want some help?\"\n\n\"Getting him dressed? Sure. Not the best costume for access.\" Aphrodite said with a giggle before reaching her hand up to grab my cock.\n\n\"Yours is though.\" The guy said, sliding a hand up Aphrodite's thigh and stroking between her legs under the short little costume skirt.\n\n\"Oh hell yeah!\" She cooed as her hand stroked my cock and pushed her ass back out at the guy's hand. \"But if we're gonna wait, let's wait and not start something I'm not going to want you to finish right now.\"\n\n\"Fine with me.\" He said as he stayed behind Aphrodite while she and the cat lady each used one hand to try and work my pants back on. \n\n\"Shame to cover this up.\" Cat lady said, leaning her head down and wrapping her lips around my cock. She bobbed her head up and down half a dozen times before pulling her mouth off with a loud slurp.\n\n\"So don't.\" Aphrodite said. \"As long as his pants are on, who cares? As far as I'm concerned he can leave it hanging out all night!\"\n\n\"I might care!\" I answered as I sat up in the low confines to pull my coat back on my other arm.\n\n\"Come on, don't tell me you don't wanna have these two hot things service you a bit.\" The guy said with a laugh. \"If they'd suggested that I leave it hanging out I'd be jumping at the opportunity!\"\n\n\"I never said you couldn't, but you already kinda made that hard back in the last room!\" the cat lady said with a wry look. \"Take it from me,\" She said looking at me. \"If a sexy woman wants to fuck, make sure she has a good time too!\"\n\n\"Always.\" I answered as she backed up. \"Shall we?\"\n\n\"As soon as I get these on. Unless you want me to wait until we're out. You have lots of pockets.\"\n\n\"I don't care. If you wanna go commando in a dress, go for it.\" I said, as she stuffed my shorts and underwear in one of the oversized pockets in my turnout pants. \n\n\"Okay, Let's go!\" Aphrodite said with a grin.\n\nIt only took us another ten or fifteen minutes to work our way out of the maze, with the cat woman crawling close enough behind me to try and reach under and grab my exposed cock every time we stopped. We ducked out nearly where we went in, Aphrodite leading us to Dorothy to get our ticket punched.\n\n\"And can I see the panty swap?\" she asked politely.\n\n\"Go for it!\" Aphrodite said to her.\n\nWith a grin Dorothy stepped over to me and pulled the front of my pants apart, to look for Aphrodite's panties despite the fact that my cock was hanging out already. She slid her hand down into my pants and cupped my balls through the tiny thong panty before sliding her hand up my shaft and giving it a few strokes for good measure, as she put it. \n\n\"I think we better go. It took us a long time to go through there.\" I said, not really sure I was ready to strip down in public and have sex with a stranger in front of everyone.\n\n\"Well, I guess it's off to eleven then. Quite a walk according to the map. If we get tired maybe we can just stop and have a little fun along the way?\"\n\n\"We'll see.\" I said as we walked off into the dark, leaving cat woman and her friend there getting their punches.\n\nWe walked for a good ten minutes, crossing paths with a number of other groups going across or down the path we were on. Some were naked, or partially so, some were, like me, exposing body parts, but all seemed to be having a good time. \"Hey, I know that soldier!\" I said as an army officer appeared out of the darkness with the tall guy in red spandex.\n\n\"Hey honey!\" my wife called as she walked up. \"What the fuck?\"\n\n\"huh?\" I asked, taken aback.\"\n\n\"Lover. I know you have a big sexy cock, but don't you think it's a bit presumptive to have it hanging out like that?\"\n\n\"Oh shit.\" I mumbled, quickly tucking it in. \"Sorry.\"\n\n\"Sorry you were walking around hanging it out or sorry I caught you?\"\n\n\"Both I guess.\" I mumbled before asking louder. \"Where you headed to?\"\n\n\"Eleven.\" The guy said quietly.\n\n\"Us too.\" I answered, \"come on, it's up this way.\" I added, trying to keep my previously exposed cock from becoming the topic again.\n\n\"So what did you have?\" My wife asked.\n\n\"So far, just a hay bale maze you had to crawl through. You?\"\n\n\"Well it was a pipe tunnel thing. But the pipe was so small that the only way we could fit through was with human torch here crawling in with his head practically in my crotch.\" My wife said.\n\n\"That was probably the point.\" Aphrodite said with a giggle.\n\n\"What do you mean?\" My wife asked curiously in the dark.\n\n\"What she means is that the games are apparently designed to intentionally be suggestive or outright sexual in nature.\"\n\n\"Why do you say that?\" My wife asked.\n\n\"Look at the card. Have you seen the bonus points list?\" I asked.\n\n\"Um. No.\" My wife said quietly, taking the card I pulled from my pocket to hand her. \"Holy shit! These are just downright rude... Oh fuck. Do people actually do this stuff?\" She said as she got to the bottom of the list.\n\n\"Oh yeah. And have fun doing it too!\" Aphrodite giggle. \n\n\"Why do you have a punch mark by the swap underwear one?\" My wife asked, stopping in the middle of the path to look at me in the moonlight.\n\n\"Well, I figured it was a pretty tame one to try.\"\n\n\"So you just got undressed in front of everyone and swapped underwear with...who?\"\n\n\"Me!\" Aphrodite giggle. \"And it wasn't in front of everyone. We did it in the maze where it was nice and cozy!\"\n\n\"So my husband is wearing your underwear and you're wearing his?\"\n\n\"Well, your half right.\" She giggled, lifting her skirt to expose her bare pussy. \n",
        "\"Oh god. I'm starting to get the picture here. No wonder the couple in the tunnel next to us sounded like she was having an orgasm. She probably was with his face in her crotch!\"\n\n\"Well, that is sorta the idea.\" The human torch said quietly. \"You didn't get that?\"\n\n\"I must have missed that memo!\" my wife said a bit crossly. \"So what else don't I know?\"\n\n\"Well, it's supposed to be adult fun. You play a little and have a good time. My wife and I enjoy the hell out of it.\"\n\n\"Don't you get upset that she was playing with other guys or her get upset that you had your hands and other parts on other women?\" MY wife asked.\n\n\"Actually, no. This party is the best because no one knows anyone else. If you come across someone you played with in public you'd never know it. No, we have fun, go home, take a shower and go to bed and what was done at the party stays here. We don't talk about it. But it does have great side effects. Since we started playing at these parties our sex lives and our relationship have never been better. Things were getting pretty bad at home when we came to the first one of these a few years ago.\"\n\n\"So, what happens if some guy tries to do more than his partner wants?\" My wife asked, clearly disturbed at the thought.\n\n\"This!\" He said raising his arm to show the red ribbon. \"This is the safety valve. Any time, if things go to far, you snap the ribbon. Once the ribbon is broken, you're done. You go back to the clubhouse and you don't worry. If a guy tries to do things after the ribbon is broken he's likely to get taken down by any number of guys. It's the universal consent sign for the party.\n\n\"That makes sense.\" I said quietly. \"Come on. Let's keep waking though. There are supposed to be monsters out here.\"\n\n\"Yeah, there usually are. They attack you and don't let you have your card back until they make you climax, one way or another.\" The guy said.\n\n\"How the hell did we get invited to this?\" My wife asked quietly.\n\n\"I've been asking the same thing.\" I answered her as we drew closer to the eleventh hole tee box. \n\n\"Are you having fun though?\" I asked her quietly.\n\n\"I'd be having more fun if I had another amaretto sour. This is all a bit much to handle.\"\n\n\"Then this will be really interesting.\" The guy said with chuckle.\n\n\"Oh?\"\n\n\"Yeah, I did this one at last years. No way to do it without getting really intimate.\"\n\n\"I don't like the sound of that.\" My wife said as we stepped onto the grass, looking at a table of what looked like a variety of dildo's and a long bench, like a locker room bench, with a series of dildos sticking up from it.\n\n\"Welcome!\" A witch said with a smile. \"We call this broomsticks. The challenge is to determine just how big your partners broomstick is and how much of a broomstick you can take. So for guys, your partner can get you as big as possible, any way she chooses, and then measures you. Incidentally there is a prize at the end for longest. Guys, you get to use this interesting assortment of toys to determine just how much she can take. Of course if she prefers to do it herself, she can straddle the board.\" She said, motioning to the bench. \"Though I should warn you, some of them move.\" She said, reaching for a switch on the table, which caused several of the dick shaped dildos to wiggle or pump up and down.\n\n\"Sweet!\" A woman behind me said, another couple having stepped up behind us while we were listening. \"Come on Roger!\" She said, pulling a guy in a sorta rabbit costume around to the table. She was wearing a pair of shorts type coveralls which she quickly undid the suspenders on and let drop. Within moments she was bare from the waist down with her shirt pulled up over her B cup tits. \"You can suck my tits while I test these out, then we'll see how you measure up!\" she said as she stepped across the board and quickly aimed the first, rather short dildo at her pussy.\n\n\"I'm not doing that!\" My wife said sharply.\n\n\"Oh you don't have to.\" The witch said. \"Just bend over and let your partner try different ones on you until he finds the one that goes all the way in but the next doesn't.\"\n\n\"Seriously? You want me to pull down my pants and let him stuff dildos in me?\" My wife said, looking at me.\n\nI started to open my mouth to say something when Aphrodite stepped between us. \"Look sweetie. I don't know how you're gonna have any fun at all tonight if you're gonna be prudish all night. There probably isn't a guy here that hasn't seen more than one pussy. No one is asking you to bend over and get fucked, just play with some toys and enjoy it!\"\\\n\n\"Are you for real?\" My wife asked her.\n\n\"Definitely. Come on. We'll do it together.\" Aphrodite said, pulling me by the hand as she stepped over to the table. Using one hand she lifted her skirt before bending over, one arm stuck out so we didn't break the ribbon and the other holding herself on the table. \"Come on fireman. Put some hose in me and let's see what happens!\"\n\n\"You really want me to do this?\" My wife asked me again.\n\n\"I'm not going to say yes and I'm not going to say no. I think you need to decide yourself. But I think it's a good idea, what he said. Whatever happens here tonight stays here.\"\n\n\"So in other words, you plan on fucking someone else tonight?\" My wife said with a frown. \"Okay torch. Let's do this!\" she said as she undid her pants and then pushed them to her knees with one hand. She pulled him by the wrist over to the table and bent over next to Aphrodite and exposed her bare ass and pussy.\n\n\"Here you go gentlemen!\" the witch said over the moans of the woman working her way down the bench of dildos, handing each of us a box of assorted cock shaped dildos. \"Enjoy!\"\n\n\"Oh I bet I will.\" Aphrodite said with a grin.\n\nI set the box on her back and pulled out what looked like the smallest of the group and gently rubbed the tip up and down her sopping wet pussy, slowly pressing it between her lips until I felt the entrance to her tunnel.\n\n\"Oh finally.\" She moaned softly as I pressed it into her as far as it would go. \"But you can do a lot bigger than that.\"\n\n\"If you say so.\" I answered as I pulled it out, looking over at my wife's bare ass as the human torch worked a modest sized cock into her.\n\n\"Oh shit.\" My wife mumbled as he stroked it slowly in and out of her a few times, teasing her pussy.\n\n\"That's it. Enjoy it!\" Aphrodite said to her as the torch pulled it out and dropped it into the box to pull out a larger one.\n\nI did the same, picking one about half way up the size range. I pressed it to Aphrodite's lips and then worked it slowly into her, stroking it in and out slowly to lubricate it and push more of it into her. \"Ohhhh yeah. That's it baby. Fuck me with that thing!\" She moaned loudly by as I stroked it fully in and out of her pussy, her hips trying to push back at me in time with my strokes.\n\n\"Oh fuck.\" My wife moaned as the torch worked a larger dildo into her, one that was nearly as big as I was.\n\n\"Go bigger.\" Aphrodite coaxed as I pulled the dildo from her. \"I can take a big one!\"\n\nI dug one out of the box that i was sure was quite a bit bigger than I was, began to press it into her pussy, bringing gasps from her as I tried to work the long fat dong into her. \"Ohhhhh god.\" She moaned as I got about half of its length into her and started to stroke it slowly. \"God what I wouldn't give to have your cock in here right now!\"\n\n\"You really wanna fuck my husband?\" My wife moaned as the torch worked the dildo in and out of her. \n\n\"OH god yes. His cock looks so fucking good. You are such a lucky bitch to get fucked by that all the time.\"\n\n\"Well, you want him hard, that's one way to do it. Fuck her with it sweetie.\"\n\n\"I am,\" I said as I stroked the dildo in and out of her.\n\n\"No, your cock. You wanna fuck other women, go for it. Only limit, don't finish inside anyone. I don't want any bastard children running around.\"\n\n\"And you?\"\n\n\"Me, maybe not.\" She answered, a short groan coming from the torch.\n\n\"Don't worry partner. I'll make sure you get something before the nights over, just don't know how far I'm willing to take that yet.\"\n\n\"Right now I'd settle for a good blow job. My balls feel like they're about to explode!\" He said with a chuckle. \"Besides, I don't think you can take the next bigger one.\"\n\nMy wife looked back at him as he pulled the dildo from her pussy and then pushed herself off the table. The two of them pulled the spandex suit down his body until it was to his knees, leaving him naked from there to the mask on his face. My wife squatted down in front of him, grabbing his exposed cock with her ribbon tied hand, her pussy still bare as she knelt on the ground with her legs spread. I looked on as she stroked his cock, aiming it at her face. \"Don't you dare come in my mouth!\" she said just before she engulfed his engorged head with her lips.\n\n\"Ohhhh shit.\" He groaned quietly as she bobbed her face on and off his cock.\n\n\"You wanna put that in my pussy?\" Aphrodite prompted, reaching for my hand and giving it a little tug to draw my attention back to her and off my wife. \n\n\"Um.\" I said looking back at my wife sucking another guys cock for the first time.\n\n\"Tell you what. Why don't I measure you up the same way, okay?\" Aphrodite said, pushing herself up off the table and turning around to face me. She squatted in front of me and engulfed my cock with her hot mouth, sliding her lips and one hand along my shaft the same way that my wife was working the torch's cock.\n\n\"That's about it.\" I heard him grunt. \"Much more and there won't be anything left to measure.\"\n\nMy wife pulled her mouth off his cock and twisted to get the plastic twelve inch ruler out of the box and set it against his dick. \"Just a tad over eight.\" She announced.\n\n\"Good. Now how about we go for that five bonus points? Make me come baby!\" The torch groaned as my wife slowly stroked one hand along his rock hard shaft.\n\n\"On one condition. Don't you dare come in my mouth or I swear I'll kick you in the balls!\"\n\n\"Not exactly sweet talk, but I understand,\" He groaned as my wife closed her lips around it again. Her hand stroked up and down his shaft as her lips stroked the first few inches of his rigid shaft. On and off she plunged her face until he groaned his warning. She pulled her face off his cock and pushed it to the side, aiming it past her as the first huge squirt of cum lanced out of his cock. Over and over he grunted, shooting shot after shot of cum until all that was left was a drool leaking from his tip and dripping across her thigh and to the ground between her still spread legs.\n\n\"God that felt good.\" He said breathlessly as the witch came over and punched holes in their card, a grin on her face.\n\n\"I think you're hard enough.\" Aphrodite said, pulling her face from my cock and reaching for the ruler in our box. Nine and a quarter! DAMN!\" she said from where she was squatting in front of me. \n\n\"Oh yeah.\" I groaned as Aphrodite engulfed my cock again, bobbing her head rapidly on and off my shaft, my head slipping into her throat with each stroke. \"God I'm gonna come.\" I groaned as I felt my balls tighten and my head slip into her throat again.\n\nI expected her to pull her mouth off my cock like my wife does on the rare occasion that she actually does suck me, but instead she held her mouth around my head, pulling slightly back so I wasn't driving into her throat and stroking her hand more vigorously to push me over the top.\n\n\"Oh fuck!\" I grunted as my body jerked, trying to jam my cock into her mouth farther, her hand on my shaft preventing it as a huge surge of pent up cum erupted into her mouth. Time after time my body jerked, pumping more into her mouth as I stood there, panting, my wife staring at me from where she was still on her knees, her pants bunched around her ankles.\n\n\"How can you do that?\" My wife finally asked Aphrodite as she gently stroked and sucked on my cock, my load clearly long swallowed. \n\n\"Easy. I love giving head!\" She answered with a grin, looking up at me lustfully. \"But god now I'm so fucking horny. I want to come soooo damn badly!\" \n\n\"Well. Turnabout is fair game. My husband is good at oral.\" My wife said. \"As much as I hate to do this, might as well make her come now, or she'll be badgering you to fuck her the rest of the night, and I have no illusions that you'll give in.\" My wife said before standing up. \"But if you don't mind, I think I won't stay to watch.\"\n\n\"I wouldn't either.\" The torch said quietly, letting my wife finish fixing her pants first so they could work on getting his one piece spandex suit pulled back up his body. \"We have the eighth next.\"\n\n\"Come on stud. Show me what you can do with that tongue!\" Aphrodite coaxed as she stood up and took my hand, pulling me the few steps back to the table, where she sat down and then lay back, spreading her knees wide and lifting her legs to give me complete access to her pussy.\n\nI looked over at my wife as she turned to face away from me, the two of them heading off into the moonlit night and their next task, wherever that might be.\n\n\"Oh yeah.\" Aphrodite moaned as I bent down and licked up her sopping wet lips. \"Yeah baby. Give it to me. Oh god.\" She moaned loudly as several more couples walked up near us. \"Lick my hot twat!\"\n\nI slid my tongue up between her lips over and over, flicking across her clit with each stroke, making her body jump and jerk with little electric tingles radiating through her body. She rocked and bucked her hips against my face as I slurped up between the lips of her leaking pussy, breaking my attention to what I was doing when I felt a hand slide into my pants and grab my softened cock.\n\n\"Just keep licking honey!\" I heard a soft female voice whisper to me as her hand started to stroke my shaft inside my pants, coaxing it to start swelling once again.\n\n\"OH fuck! SOOOO close!\" Aphrodite moaned, trying to pull her hand, tied to mine, up to her own tits. I pushed my arm up along her body to give her access as I stayed kneeling between her legs, licking her sopping wet pussy, driving my tongue into her as far as I could with each lick before sliding up and flicking across her clit several times. I could feel my cock being stroked and quickly growing in the hands of...well, I wasn't sure exactly who, not with Aphrodite's legs clamped around my head.\n\n\"Fuck her now.\" That female voice coaxed softly, her hand slipping back and forth along my mostly hard cock. \n\nYeah, I was definitely turned on enough to fuck her no matter who was watching. I reached for her hand and pulled it from her tit, trying not to break the lace ribbon, and pulled her hand down to her thigh where I let go so I could spread her legs back apart. I pulled my head from her pussy with a long moaned \"noooooo\" as she looked down at me.\n\nI stood up, my face and her pussy glistening in the moonlight with her juices as I stepped up and rubbed my engorged head against her lips. I pressed easily into her and began stroking in and out with abandon, quickly driving her crazy, her hips humping back at me in time with my strokes as she moaned and gasped in pleasure in front of me.\n\n\"That's it sweetie. Fuck her! And when you're done, fuck me too!\"\n\nI looked over at her in surprise and saw Tinkerbelle standing next to me, her partner standing behind her rubbing one exposed tit while her free hand stroked between her legs.\n\n\"OHHHHH FUCK!\" Aphrodite screamed as her orgasm finally washed over her, her pussy clenching and spasming around my shaft as her whole body arched rigid on the table.\n\n\"Well, that was definitely worth the twenty bonus points.\" The witch said with a grin, her own skirt pulled up, her fingers stuffed in her pussy as she watched along with half a dozen couples that had made their way to the station.\n\n\"Oh shit.\" I mumbled in embarrassment, quickly pulling my cock from her pussy and trying to tuck it back into my pants with one hand.\n\n\"Awwwww don't be shy! I have to stand here all night and watch and all I get to do is ride the board. How about giving me a little of that sexy cock? You do I'll punch you some extra points!\" the tall thin witch said with a grin. \n\n\"I don't think...\"\n\n\"Oh trust me, she won't mind, will you sweetie?\" She asked Aphrodite as she stepped over between me and the table, putting herself between Aphrodite's legs. She let go of her skirt and looked past me while she dug into my pants with both hands, finding my cock and pulling it back out. \"Just go ahead and use the dildo's in the boxes to measure your partner and then ladies, get your man all turned on and measure him. Prize at the end for the longest cock.\" She said to the group. \"If you need help, let me know, but right now I'm going to be a bit busy for a few minutes!\" she said looking back at me and smiling while both hands stroked my fat cock. \"Now how about it? Willing to give me a little bit?\"\n\n\"What the hell.\" I mumbled as her hands coaxed me to ignore the momentary embarrassment of having my cock out again. With a smile she turned around, pulled the skirt of her costume up to expose her whole bare ass and pussy and gently aimed my cock at her wet slit, using it as a handle to pull me toward her. With my hand still tied to Aphrodite, I had to lean part way over the witch while she leaned over Aphrodite. \n\n\"Oh god.\" I mumbled as I watched her lean her face down and suck on one of Aphrodite's bare exposed tits. I pushed my hips forward and drove my fat cock quickly into her, drawing a gasp of surprise followed by a long slow moan of pleasure. \n\n\"Oh yeah. Fuck me!\" she moaned, before going back to sucking the tits in front of her, my cock now plunging in and out of her pussy. She rocked her hips and arched her back in time with my strokes, letting my nine inches drive all the way into her until I bumped the end of her tunnel with each stroke. I only had one free hand, but that didn't stop me from unzipping the back of her dress and pulling it down her body. She quickly worked her arms out of the sleeves and I pulled my cock out long enough to push her black dress down over her ass and down her legs.\n\nI stuffed my cock back into her pussy and started stroking with abandon, her whole now bare body shaking with each impact of my thighs against her firm around ass. I wondered briefly how far you could hear the rhythmic slap slap of my thighs in the night as I reached my free hand up to capture one of her swinging tits. \"Shit, I think I'm gonna come!\" I grunted in surprise as I felt my cock swelling fatter and that familiar tingle racing through my body. \n\n\"Harder. Fuck me harder!\" The witch moaned, pulling her mouth from Aphrodite's tit long enough to coax me to plunge harder into her.\n\n\"YES!\" the witch screamed into the night, less than a dozen strokes later, her pussy clamping and spasming around my cock as I continued to stroke into her, slapping loudly against her bare ass.\n\n\"OH FUCK!\" I grunted as my body jerked, pumping a gush of hot cum into her spasming pussy. \"Ohhhhhhh god.\" I groaned as I stood there, my cock spasming inside her pussy each time my body involuntarily convulsed. \n\n\"Oh sweetie, you can say that again.\" The witch moaned softly, pushing herself up off of Aphrodite and wiggling her ass to move my quickly shrinking cock around inside her. \"God he's got a nice one.\" She cooed softly to Aphrodite who answered with a knowing grin. I think you get points for stripping me and fucking me and hell, anything else I can think to give you for it.\"\n\n\"If you say so.\" I said, pulling out of her and stepping aside to let her move from between Aphrodite's legs.\n\n\"Oh trust me, I do.\" She answered with a grin, stooping to pick up her dress. She quickly stepped into it while Aphrodite slipped off the table and straightened her own costume. \"I hope you saved some of that for later. I might have to find you after the game and see if I can coax another of those from you.\" She said as she wrapped her arms around my neck. She pulled her face close to mine and seductively kissed me long and wet before pulling away and looking to Aphrodite. \"Girl you are so lucky tonight. Where are you going next?\"",
        "\"Um, twelve I think.\" She said, digging in my pocket for the card. \"Yeah, twelve.\"\n\n\"Ohhh nice. Enjoy that one.\" She said as she took the card and found her punch, putting half a dozen holes in it to mark off several bonus point selections.\n\n\"I have a hunch we will.\" She said as she took me by the hand and pulled me off into the night.\n\n\"Sorry. Didn't mean to get carried away.\" I said as we made our way down the grassy fairway.\n\n\"Don't have to apologize to me. I got fucked and enjoyed it. You got to fuck her and enjoy it. What's to apologize for?\"\n\n\"I kinda thought the idea was I was supposed to be your partner for the night.\"\n\n\"Oh sweetie. If I had a nickel for every guy that fucked someone they weren't tied to at this party I wouldn't have to work anymore!\" she said with a laugh as we walked toward the paved path winding around through the golf course.\n\n\"So I'm just supposed to screw anyone who wants it?\"\n\n\"Not if you don't want to, but it sure didn't look like you didn't want to!\" Aphrodite giggled. \"In fact, it looked like you were more than eager to give her a ride on your stick!\"\n\n\"Who's that?\" A female voice asked from behind us as we walked down the paved path, causing both of us to turn and look behind us. \n\n\"Trish!\" A tall willowy woman wearing an outfit that reminded me of princess Leia in her slave outfit in one of the Star Wars movies, said as she stepped closer to us and gave Aphrodite a hug. \"God that looks good on you!\"\n\n\"Hey Karen. Not that you look exactly bad in that outfit either.\" Aphrodite said with a grin.\n\n\"So who was giving a ride to who on his stick?\" she asked, looking me up and down while her partner, a Zorro looking guy with a bit of a bulge around the middle, stood next to her looking a little uncomfortable.\n\n\"Oh, the witch at the last station. Mike the fireman here gave her a bit of a boning out after he finished me off. Had to admit, it was nice having a naked woman laying over me while she got hammered. Haven't had that since we got together the last time.\"\n\n\"Oh god, don't remind me. I couldn't walk straight for days after that one!\" Princess Leia, or Karen, or whatever said with a grin. \"Can't wait to do it again either.\"\n\n\"So where did you just come from?\"\n\n\"We came from the Eight hole. God that was a fun one. I had to lay on my back on a wheelbarrow thing and get pushed around while I picked up things that hung down on hooks from above us. Of course that wouldn't have been near as much fun if Zorro here didn't have to keep his cock in me the whole time!\"\n\n\"Is that required?\" I asked, suddenly remembering that was where my wife was headed.\n\n\"Well, only if you want full points, but I think everyone I saw was doing it. Even that soldier girl, though she was trying to pretend she didn't want to and it didn't feel good. Her moans belied that!\"\n\n\"That soldier girl?\" I asked.\n\n\"Yeah, saw her on the dance floor. She was trying to convince the guy she was dancing with that she really didn't want his hands were he was putting them, but it had to be for show because she really didn't fight all that hard once he had his hand down her panties.\"\n\n\"Ah.\" I said with a frown.\n\n\"That's his wife.\" Trish said quietly to Karen.\n\n\"Oh, sorry. Well, anyway, we're headed to twelve. You?\"\n\n\"Same.\" Trish answered as we turned and started walking down the path side by side.\n\n\"So, just to be clear, my wife was getting wheeled around on her back with the human torch's cock in her?\"\n\n\"Yeah. But it was so cute. She threatened to kick him in the balls if he came inside her. We all thought it was pretty funny, especially since she climaxed at least twice before they got to the end!\"\n\nI shook my head at the thought of my wife laying half naked on a wheel barrow climaxing on some other guys cock. \"I feel sorry for him.\" I mumbled.\n\n\"Oh I wouldn't. He talked her into jacking him off all over another woman's tits. She seemed to be really getting into that part at least.\" Zorro said with a chuckle.\n\n\"So where else have you been?\" I asked, trying to change the subject.\n\n\"Well, we did three, which was a tunnel we had to crawl through. Zorro here had some really good chances to lick my pussy! Mmmmm that felt good.\" Karen said quietly. \n\n\"Don't forget four. You have to move over and under ropes that are stretched at all kinds of angles. If you touch a rope you have to take off a piece of clothing. If you run out of things you can take off you have to do sixty seconds in the penalty box, which requires that you perform some kind of sex act on someone of the opposite sex as long as you're in the box. God that was fun!\"\n\n\"Yeah, I remember. I swear, you kept touching ropes just to get me naked!\" Karen said with a shake of her head before looking over at Trish. \"But then when we ran out of clothes, you think he'd fuck me in the penalty box? Hell no! He wanted to have Roger Rabbit's wife sit on his face leaving me with a stubby little cock on Friar Tuck!\"\n\n\"Sorry honey, but hell, how could I turn down Jessica Rabbit?\"\n\n\"I'm just teasing you. I don't really care if you lick half the rabbits in the county.\" Karen said with a chuckle, \"Just so long as I get at least a couple more climaxes yet tonight!\"\n\n\"Oh, I'm quite sure that'll happen.\" He answered back with a chuckle. \"With a body like yours I'm sure someone will be happy to put something into one of your waiting holes!\"\n\n\"Oh, cute.\" Karen said, rolling her eyes as before turning and walking backwards next to Zorro to look at Trish. \"Just between you and me, finding something a bit bigger to fill my pussy is high on the list. So far I've only had Friar Tuck, and Zorro here, neither of which quite got the job done. \"God, I'm horny!\"\n\n\"Well, maybe you'll have a chance at something bigger.\" Trish said as we walked up to the twelfth hole Tee box, and what looked like a rope net hung over a tall wall. The wall looked to be about eight feet tall and maybe two feet thick with several couples climbing up and down the rope net as we stopped to watch.\n\n\"I'm not sure I get this one. It doesn't look all that sexy.\" Trish said as we looked on.\n\n\"Oh that's because no-one is at the top yet. Just wait.\" a woman wearing what looked like a Christmas Elf said as she walked up. \" I call this one the orgasmic climb. The goal on this is to climb to the top and then back down the opposite side. The fun is that on the way up the man has to coax the woman toward orgasm, in one way or another, and on the way down the woman gets to return the favor. Many couples choose to have the woman go up and down with her back to the ropes, which of course leaves all sorts of wonderful opportunities to play, lick, kiss, suck, fuck, well, you get the idea. Kinda like a sex swing on steroids!\" She said with a grin. \n\n\"Well Zorro? Shall we?\" Karen asked her partner. \"I think I'm definitely in the mood for a good tongue lashing.\"\n\n\"Any time you are.\" He said, leading her by the hand toward the net.\n\n\"Well, Mike the fireman, you up to a little more tongue lashing or would you prefer to plunge your hose into my favorite orifice and fill me with your fire putter outer stuff?\"\n\n\"You're choice, as long as I get to play with your tits along the way.\"\n\n\"Ask and you shall receive!\" she said with a grin, reaching to her front and pulling the material covering her big breasts aside, exposing both of them. \"I think I'm going to do one better. How about I leave this whole thing down here. But you gotta leave your pants here too.\"\n\nI thought about it for a few short seconds and then grinned. \"deal!\"\n\nShe pulled the top of her dress up from behind her neck, bending her head down as far as she could so it wouldn't pull off her mask, and then pushed the combined skirt and top down her legs leaving her in nothing but her shoes and mask. \"Your turn!\" she said brightly.\n\n\"Uh yeah.\" I answered a bit nervously as several more couples arrived. I kicked off my boots, and then undid the clasp on my left suspender before pulling my right arm out of my coat. I let my pants slide down my legs after shrugging off the right suspender and stuck my arm back in my coat, leaving me in nothing below my waist but my socks and a tiny white satin thong panty.\n\n\"Ohhhhh NICE!\" the Elf said, stepping back over to us, having just given the new arrivals the run down on the game. \n\n\"Yeah, we swapped panties before.\" Trish said with a giggle. \"Personally I think they look pretty damn striking on him, especially with his hard-on sticking out like that.\" She added, as she reached over and gave my protruding cock a couple quick strokes. \"Well sexy, time to hit the ropes!\" she said cheerfully, taking me by the hand and leading me over to the rope mesh. I looked up and saw Karen, Princess Leia or whatever I was supposed to call her, half way up the rope mesh with Zorro's face between her spread legs, her hips bucking on the ropes and making the whole thing move and bounce like a spiders web in a wind. \n\n\"Come on. I love feeling you inside me!\" Trish cooed as she backed up to the rope mesh and leaned back, moving her feet to the ropes and putting them a few feet apart. I leaned in over her, letting her find my cock with her free hand and aiming it for her pussy as I stepped onto the first cross rope, lifting myself closer to her. I felt her find her pussy lips with my cock and then pushed gently up, lifting some of her weight from the ropes before she expanded enough to let my engorged cock slip into her velvety soft tunnel. \"Ohhhhh fuck yeah!\" she moaned softly as she started rocking her hips to encourage me to stroke into her.\n\nThe ropes somewhat limited what I could do, and we did have to move from time to time if we wanted to ever get over the wall, so I struck up a slow methodical stroke that slowly plunged my full length into her, over and over, her moans making it clear that she was enjoying every plunge of my cock. \n\n\"You know we're getting close to the top.\" I mumbled as I looked down at her bouncing tits, each soft round mound of flesh rolling and bouncing in time with my strokes.\n\n\"Yeah, me too.\" She gasped. \"You wanna make me come first or you wanna come along with me?\"\n\n\"Not quite there yet.\" I grunted as we moved up another rung on the rope net, making sure we moved in unison so we wouldn't come uncoupled. \n\n\"God you have me there already!\" she squealed as I started stroking into her again, bouncing us on the net as I picked up my pace to push her over the top. \"OH FUCK!\" she squealed as her whole body tensed and her pussy spasmed around my hard cock. In and out I continued to plunge, driving her orgasm even higher as I tried to push mine to its pinnacle as well. \"Oh fuck baby! Come for me! Fill me up baby!\" she moaned loudly, her one free hand pulling my head down to her chest. \n\nI sucked one of her nipples into my mouth, and held it gently with my teeth, while I continued to pound into her, making her gasp even more as the weight of her bouncing tit tried to pull it free of my mouth. \n\n\"OH FUCK FUCK FUCK!\" she cried into the night as her whole body shook and trembled, my stroking cock keeping her orgasm pushed right to the pinnacle of pleasure. \"OHHHHHHHH GOD!\" she cried again as my body suddenly jerked, jamming my cock into her and spewing a gush of cum into her hot wet tunnel. \"FUCK YES!\"\n\n\"Uhhhhgh.\" I grunted, holding onto the net, so the two of us didn't fall, while my body spasmed and jerked over her, filling her pussy with shot after shot of cum. I felt spent for a moment and lay down on top of her, her legs lifting to wrap around me and her one free arm pulling my head down tightly to her chest.\n\n\"Ohhhhh god yes yes yes.\" She moaned softly as my cock, still buried in her, felt her pussy periodically spasm, causing my cock to briefly pulse again, little or nothing left to pump, but trying just the same. \"Ohhh god. Now that was an orgasm!\" she moaned softly to me. \"One mother fucking huge orgasm!\"\n\n\"Glad you enjoyed.\n\n\"Ohhhh I definitely did that!\" She cooed softly. \n\n\"Come on. I don't know about you, but I'd just as soon get down than have my bare ass sticking out like this.\"\n\n\"What are you complaining about? I'm completely naked, remember?\"\n\n\"That was your choice, wasn't it?\"\n\n\"It was.\" She said with a grin. \"It made me come even harder knowing that I was out here completely naked, all these people staring at your cock plunging in and out of me? Oh yeah. Just think. One of them might be my neighbor, or the guy at the grocery store, or my mechanic, or even, hell, my doctor? Oh yeah, the possibilities are endless. I might be walking through the store right next to someone who was staring at me getting fucked and never know it.\"\n\n\"And that turns you on?\"\n\n\"Even more than just getting fucked in public. Knowing that no one will know who it was but I'll know it was me.\"\n\n\"And that assumes you don't try and guess or, like Karen, already know.\"\n\n\"Oh Karen. Yeah. She knows. But then I'd expect her to. We made our costumes together. She lives just down the street and when my husband is away on business we find time to...um...pleasure each other.\" She said with a giggle. \"Though I'm thinking I might want to try and figure out just who you are so that when he's gone you can come and fuck both of us. Would you like that? To come to my house and fuck both of us at once?\"\n\n\"I doubt my wife would approve.\" I mumbled while admitting to myself that it could be fun to try.\n\n\"Too bad, because you have a fantastic cock and you know how to use it VERY fucking well.\" She said, punctuating her statement with a sigh.\n\n\"Come on sex bunny. Let's get over the top.\"\n\n\"We just did, didn't we?\" she asked with a giggle. \"And by the way. I think I know for sure now your first name is Mike. I heard your wife mumble it while she was being fucked with that dildo at the last game.\"\n\n\"Okay, so you know my name is Mike.\"\n\n\"And I know you used to be a fireman. Know how I can tell? You know exactly what to do with all this gear, and of course your hose.\"\n\n\"Cute, but that still doesn't give you more than a first name.\"\n\n\"And a fire department, written on the inside label of your coat, right next to your last name.\"\n\n\"Oh geez.\" I breathed.\n\n\"Don't worry, your secret is safe with me.\" She whispered as she unwrapped her legs from around me. \"Come on.\"\n\n\"Sure.\" I said as I followed her up the last two rungs to the top and then helped her climb over and down the other side, her bare back against the ropes and her sopping wet pussy pushing against my deflated cock every chance she could. Finally we stepped from the ropes and walked to where we left our clothes and dressed.\n\n\"So, one more. Sixteen. I wonder what waits for us there?\"\n\n\"I don't know, but it's a long walk from here. Fortunately it's getting us closer to the club house. I'm getting thirsty!\"\n\n\"Yeah, me too.\" She said as we walked off into the dark, her friend having long since made their way toward whatever their next station was. \"We're having fun, but there's no way we'll win. We're way to slow.\"\n\n\"Yeah, someone has to come a lot and slow us down.\" I chuckled as we cut across a wide fairway to cut some time off the walk.\n\n\"Can you hear that? Someone's getting fucked pretty good.\" Trish whispered as we approached a clump of trees.\n\n\"Sounds like more than one someone.\" I whispered back. \"Maybe we should go around.\"\n\n\"Maybe we should peek and see who it is!\" She whispered back with a giggle. \"Hell it sounds like quite a few someone's\"\n\nWe crept toward the trees and eased into them, trying to get a look without being obvious.\n\n\"Holy shit!\" I blurted in surprise, as I looked out into a clearing within the trees. There were several benches in a semi-circle, each with at least one couple and a some with two couples, fucking in various positions while in the middle of the half circle was, of all people, my wife, completely naked except for her sports bra, which was pulled up above her big tits, and her long sleeved army shirt, still hanging from one arm. Her pants and boots were in a pile and she was sitting on what looked like a small half barrel about a foot or so in diameter, the human torch standing in front of her as she stroked and sucked his cock, his hands groping her exposed tits.\n\n\"SHHHHH!\" Trish hissed as she tugged my hand. \"Come on!\"\n\n\"What the hell?\"\n\n\"It's a monster den!\" she whispered as if that explained it all.\n\n\"NO. I think you won't be going anywhere, at least not yet.\" I heard a loud voice say from the woods a few yards from us.\n\n\"Oh shit.\" Trish mumbled.\n\n\"You still haven't explained.\" I said quietly to her, as a guy in what looked like a variation of a werewolf came out of the shadows.\n\n\"It's a monster den. You get captured and you have to go to the den until you both come, one way or another.\"\n\n\"Ahhhh. Ohhhhh.\" I said finally remembering what we had been told at the beginning.\n\n\"Come on guys. Just take it easy. He's a first timer.\" Trish said quietly.\n\n\"Oh really? That's funny, that's the same thing he said about her!\" The werewolf said, jerking his thumb over his shoulder back toward the clearing. \"That's why we gave her the choice of what we planned or a chance to get more cocks in her pussy. She turned down being tied over a bench until five guys had fucked her in favor of riding the beast until she made him cum all over her tits.\"\n\n\"THAT does not surprise me.\" I said with a slight shake of my head. \"But still, seeing my wife sitting there naked like that sucking a cock is a bit of a surprise.\"\n\n\"Oh, she's not just sitting there. Trust me. She's riding the beast!\" He answered.\n\n\"The beast?\"\n\n\"Think vibrator on steroids. It's a dick that vibrates, wiggles and strokes, all at the same time. And from the sound of the moans she's been making, she's enjoying the hell out of it.\" He laughed. \"Now what should we do with you. Let's see. Lots of pussy! I think maybe when she gets done we'll put your partner on the beast naked until she convinces five women to ride your cock and face. How about that?\"\n\n\"Oh, that's wicked!\" Trish said with a frown. \"I've had to ride that thing before. I don't know if I can take it that long.\"\n\n\"Well, I suppose if you'd rather, we could make his wife lick your pussy while he sucks the flame thrower or whatever his name is.\" the other werewolf that came out of the shadows said. \n\n\"THAT isn't going to happen!\" I protested. \"Not now, not ever!\"\n\n\"Then it's the beast!\" the first one said, as we heard grunts coming from the clearing. \"Good timing. Sounds like the flame thrower guy just unloaded.\"\n\nWe followed the two werewolves to the clearing and saw my wife, shakily climbing off the barrel shaped thing, a pinkish cock sticking up from it, still vibrating and pumping up and down a couple inches. She stood up, cum dripping off her big tits as she stood next to the beast trying to stretch her legs. \"A bit over ten minutes. That's pretty damn good!\" the second werewolf said, as he reached for Trish's arm and pulled us over toward my wife.\n\n\"What are you doing here?\" My wife asked breathlessly, clearly not happy to see me, as she quickly started pulling the sports bra down over her cum covered tits.\n\n\"Got caught too.\" I answered.\n\n\"What are you staring at?\" she snapped uncomfortably as she tried to get her arm back into her shirt.\n\n\"Just enjoying the view. Never seen you do anything like that. You looked pretty sexy riding that thing.\"\n\n\"Seriously? That turned you on, seeing me being exposed like that while all these guys fucked women while watching me?\"\n\n\"I'm not saying that part was sexy, but seeing you naked on there, yeah it was.\"\n\n\"Come on you two. Clothes off!\" one of the werewolf's barked at us.\n\n\"Looks like my turn.\" I said quietly as I started pulling off my coat as far as I could, my pants still held up by only one suspender. I shrugged the one suspender off and let my pants slide down, revealing only the tiny white thong panty still hanging around my thighs but covering nothing.",
        "\"Nice panties.\" My wife said with a frown.\n\n\"Yeah, not that they do much.\" I said, looking over at Trish who was pushing the dress down her body, leaving her naked except for her shoes. \n\n\"Here, let me help you.\" she said, helping me push my t-shirt up and over my head and off one arm, the arm tied together still holding my coat and shirt on that arm. I stepped out of my pants and boots at the same time, and let Trish pull me back slightly so she could straddle the half round wooden box, the cock sticking up still moving up and down and humming quietly.\n\n\"So? What's the deal?\" My wife asked as she stepped into her pants and tried to pull them up with one hand.\n\n\"She has to ride the beast until she can convince five women to ride my face or my cock.\" I said quietly.\n\n\"Okay. I definitely don't want to watch that!\" My wife said a little crossly. \n\n\"Oh?\"\n\n\"Yeah, why would I wanna see you fucking a bunch of other women? I mean you can't really enjoy that kind of thing, right?\"\n\n\"You mean like you weren't enjoying sitting on this thing and sucking his cock? Looked to me like you were enjoying the hell out of the whole thing. Sounded like it too. Could hear your moans all the way to the tree line.\"\n\n\"Yeah, well...\" My wife said a bit lamely. \n\n\"Yeah, well. I'm not going to ask how many times you've been fucked or by who, but just for the record, I know some of these stations you have been to. A little birdie told me you enjoyed the wheelbarrow ride just fine.\"\n\n\"I didn't.\" She protested.\n\n\"Oh hon. Can it.\" I said quietly. The person that I heard talking about you didn't know you were my wife, so I pretty much figure her comments were honest, and she said you climaxed at least once. If you're having fun, just say so. It's not like you're going to hurt my feelings.\" I said as she stood and stared at me, her pants half way up her legs, her pussy still exposed.\n\n\"Okay, I'm having a little fun. I just don't want a whole bunch of cocks stuffed in me. One a night is enough.\"\n\n\"Now was that so hard to admit?\" I asked, feeling Trish tug on my hand.\n\n\"Hey as much as I'm all for a couple getting things sorted out, I'm sitting on this thing!\" she said breathlessly.\n\n\"Huh? Oh yeah.\" I said.\n\n\"Come on. I need five women to sit on his face or cock, your choice!\" she called out to the half dozen couples leaning over the benches or getting dressed again after having finished their penance to the werewolves.\n\n\"I will!\" A woman in an Indian costume said, from across the clearing. \"Come on Pirate man!\" she said pulling him along by the hand around the bench she had apparently recently been bent over.\n\n\"I'm not going to watch this.\" My wife said quietly.\n\n\"Oh honey!\" the Indian said as she stepped closer. \"You're going to miss the fun? Why don't you ride his face while I take his cock!\"\n\n\"You expect me to let him lick my pussy after having to ride that thing?\" My wife asked incredulously.\n\n\"Trust me, It'd be worth it!\" she said as she stepped across my midsection and hiked up the soft looking leather skirt to expose a completely bare shaved pussy. She wasted no time squatting down over my cock and reaching for my hardon, lifting it and rubbing my head on her already wet lips before sinking quickly down on it. \"Ohhhh my god yessss!\" she hissed softly as she began bouncing up and down my shaft.\n\n\"Didn't you just get fucked?\" My wife asked in surprise.\n\n\"UH huh. Sorry Pirate man, but you just didn't get it done like this.\" She mumbled as she bounced up and down on me, her bare ass slapping against my thighs.\n\n\"Oh god.\" My wife said, rolling her eyes. \"I'm headed to twelve.\" She said with a huff.\n\n\"Oh she'll have fun there.\" I chuckled as my wife and the human torch headed out of the clearing. \n\n\"Oh yeah.\" Trish said breathlessly. \"Come on ladies. Any takers for a good tongue? I know he's good at it!\" She called to the other women in the clearing. \"Shit no takers.\" She moaned as the box she sat on hummed and pumped its artificial cock up and down in her. \"God damn I'm going to come any second.\"\n\n\"Not a surprise.\" The woman on my cock mumbled. \"Got stuck on that one year for half an hour. Couldn't walk straight for an hour.\"\n\n\"Oh lord.\" Trish mumbled as her body began to shake.\n\n\"Amanda! Come over here!\" The Indian called to someone I couldn't see. \"Help us out here.\"\n\n\"Oh yeah. Tell you what. I'll let him warm me up if I can have that when you're done!\" I heard a woman say as she stepped into view, wearing a long red dress with slits up both sides nearly to her waist. \"I wanted to get into his pants on the dance floor and couldn't, not going to pass up the chance again.\" Jessica Rabbit said as she hiked her skirt up and stepped across my head. \"Tell you what Johnathan, if you're a really good boy I bet our little friend on the box wouldn't mind sucking your cock a little while!\" She said as she squatted down over me, her full bare lips inches from my face. \"Okay Fireman Mike. Let's see if you can start a fire as good as you put them out!\"\n\nI reached up with my one free hand and pulled her a little lower, drawing her teenage looking pussy closer to my face. I licked slowly along her lips, pressing my tongue slightly between her fat rounded outer lips and teasing the flowery soft inner lips with the tip of my tongue. \n\n\"Mmmmmm that feels nice already!\" she moaned softly, as I stroked my tongue across her lips a second time, pressing deeper and tasting her tangy juices. She pushed her free hand between her legs and used her fingers to spread her lips apart for me, exposing her hard little clit to my flicking tongue, drawing a gasp from her lips. \"OH god that's so sensitive already.\" She groaned as I stroked the tip of my tongue around it in small circles. \n\nThe woman on my cock continued to bounce as I licked Jessica Rabbit, her pussy caressing my cock with each stroke, and my fat head expanding her tunnel with each stroke down my shaft. I couldn't see her any longer, but I could hear her moans growing in intensity with each passing minute. I doubted she was going to last much longer, and I was right. I had just pushed my tongue as deep into Jessica's pussy as far as I could when the Indian on my cock spasmed, her pussy squeezing my cock as her whole body shuddered. \"OH god yes yes yes yes yes!\" she moaned loudly as she pressed her ass against my thighs and ground her pussy against my cock and balls. \"Ohhhhh fucking A yessss!\" \n\n\"I think it's going to be my turn in a second.\" Jessica said as she lifted herself off my face. It took a few moments for the two couples to rearrange themselves, the Indian getting up and walking away with her partner while Johnathan, wearing a caveman outfit, and Jessica Rabbit rearranged so that she could sit on my cock.\n\n\"Holy fuck yesssss!\" Jessica groaned as she pressed her incredibly tight pussy down around my shaft. \"I knew this was going to be tight, but fuck!\"\n\n\"Oh god.\" I grunted as her pussy engulfed my shaft, squeezing tightly as she worked her way down the full length of my shaft. \"Jesus you're tight.\"\n\n\"Just like a teenager!\" she moaned as she started slowly stroking up and down my shaft. \"Oh god yes. Fuck yes.\" She mumbled over and over as she drove my engorged head deep into herself, the end of her tunnel banging against the tip of my head with each stroke. \n\n\"Shit, you keep doing that and I'm going to come in you.\" I groaned as she pistoned her ass up and down in front of me, her tight tunnel quickly teasing me closer to climax. I could feel her velvety soft tunnel caress every inch of me as she bounced slowly, her own moans and gasps growing closer together with each passing second. \n\n\"You're not supposed to.\" She moaned. \"I think you still have a few more to take, right?\"\n\n\"I guess.\" I grunted, trying to hold back the feeling that was building between my legs and spreading through my whole body.\n\n\"Oh shit you feel so big in me. I'm gonna come any second lover. Any moment now!\"\n\n\"Oh shit.\" Grunted, trying hard to hold back the climax that she was quickly drawing from me. \"AHHHHHH FUCK!\" I cried into the night, my whole body jerking as a huge gush of cum lanced up into her pussy.\n\n\"FUCK!\" she screamed into the night as her whole body trembled and twitched on me. I could hear her gasping as her pussy clenched and spasmed around my spurting shaft, my own body jerking with each new surge of cum pushing into her. \"Ohhhh fuck yes. Fuck yes.\" She mumbled over and over as she sat on me, her pussy continuing to clench and spasm around my now softening shaft. \"Jesus that was a good fuck.\" She finally breathed, her body sagging slightly as she sat on me.\n\n\"Oh yeah.\" I breathed heavily, feeling like my cock was done for a while after that massive orgasm.\n\n\"Okay stud.\" I heard Trish say quietly, pushing the caveman in front of her back from her face, his cock clearly shrinking after his own climax, which I apparently didn't even hear as I was coming inside his partner.\n\n\"Okay. All four of you are good to go.\" One of the werewolf's said. Four coming at once is hard to time but you'll get the points for it.\"\n\n\"Who cares about points.\" I breathed as Jessica pulled off of me, letting my softening cock flop onto my body and lay there oozing more cum slowly from its shrinking form.\n\nTrish pulled off the machine and helped me up, the two of us standing, well, me almost naked, and her completely naked.\n\n\"The only thing I regret is I didn't get to see your tits.\" I told Jessica Rabbit. \"After playing with them on the dance floor I was kinda hoping to see them. They felt damn nice.\"\n\n\"Well, we're done with all our stations. We were on the way back to the club. So I'll make a deal with you. You stay naked as you are until we get back and I'll go as naked as she is.\" \n\nI hesitated a moment before Trish poked me. \"Well? Daring enough to go all the way back naked to see two women walk completely naked next to you?\"\n\n\"What the fuck, why not.\" I said, reaching for my pants and boots. I pulled my pants off the boots and stepped into them, throwing the pants over my shoulder. I straightened up to see Jessica undoing the strap over her shoulder and then pulling the tight fitting dress down her body. She stepped out of it exposing her entire body, including her full D cup breasts and rock hard nipples to us in the moonlight.\n\n\"We're suppose to do one more station, but I don't think I can take another one.\" I said to Trish as we started walking back.\n\n\"Who cares. We had fun. That's what it's all about.\" She said, slipping her hand in mine and swinging it slowly as we walked at a leisurely pace down the paved path toward the club house. It took us nearly fifteen minutes to get back, by which time my cock was once again swinging back and forth, nearly rigid, from the view of both women's nude forms and bouncing tits teasing me. \n\n\"Sorry, gotta be dressed in the club house.\" One of the female vampires at the door said. \n\n\"Okay.\" I answered, reaching for my pants.\n\n\"Uh uh.\" Trish said with a grin, reaching to snap the red ribbon. \"Don't need this anymore, or these.\" She said taking my pants. She reached into the pocket and pulled out my bikini underwear and held them up. \"Is this considered dressed?\" she asked the vampire.\n\n\"As long as his balls and most of his cock are covered, fine by me.\"\n\n\"Good.\" She said holding the underwear out to me and letting the rest fall to the ground while she put her own dress on. I walked in to the club house wearing only my face mask, boots and underwear, everything else being carried. I felt a bit conspicuous until I realized that I was far from the only one with less than their whole costume on. We made our way quickly to the bar and I ordered a beer, downing most of it in one swig.\n\n\"God I was thirsty.\" I said as I gasped for breath for a second after the long chug.\n\n\"Yeah, me too.\" Jessica said. \"Isn't that your wife?\" She asked, pointing to my wife, sitting at a table, with nothing but her panties and bra on.\n\n\"Yeah. I better go see how she is. She looks a bit out of it.\"\n\n\"Yeah.\" Trish and Jessica said following me to the table. I pulled a chair out and sat down. \n\n\"Hey sweetie. How are you doing?\"\n\n\"Wasted.\" She said quietly.\n\n\"Wasted?\"\n\n\"Yeah. We came back and I've had three drinks so far. \"I'm not feeling much of anything at the moment.\"\n\n\"Sooooo. You had three drinks because?\" I prompted.\n\n\"I've had three guys dicks in my mouth and four in my pussy. How the hell am I supposed to feel?\"\n\n\"Um. I don't know. What are you feeling?\" I asked quietly.\n\n\"Completely and totally fucked, but also guilty. I mean it's supposed to be for you, not every jack and ape with a dick.\"\n\nJessica scooted a chair over to her and sat down, leaning her face closer to my wife's. \"I don't know your name, and I'm not really supposed to, but let me help here, okay?\"\n\n\"Help? How?\"\n\n\"Well, my job, my real job, is that I'm a relationship councilor. So I know a lot about this kind of thing. You came tonight intending to have fun, did you?\"\n\n\"Well, in a way yes.\"\n\n\"If you didn't feel guilty would you say you had a lot of fun, or just a little fun?\"\n\n\"Well, if I didn't feel guilty it was a lot of fun, but I do feel guilty.\"\n\n\"Guilty about what?\" She asked quietly.\n\n\"Well, aren't I supposed to save myself for my husband? I mean isn't that what we're supposed to do? Hell I know he fucked other people tonight too, but I'm the one that feels guilty now.\"\n\n\"Did you feel guilty then, while you were doing it?\"\n\n\"Not really. It felt damn good. Not the same as when we have sex,\" My wife said, turning her head to look at me. \"I mean sex with you is a lot different, because I know you love me and you're showing me you love me. But yeah, laying on that wheelbarrow thing with a cock in me stimulated the shit out of me.\"\n\n\"Did you come?\" Jessica asked quietly, drawing my wife's attention back to her.\n\n\"Yeah. I did.\"\n\n\"Did you come more times than that?\"\n\n\"Yeah. I did. God I came so hard sitting on that damn box in the middle of the clearing, all those couples watching me suck his cock. I think I came at least twice before I finally got him to climax and spray all over my tits.\"\n\n\"So it felt good. Did you feel guilty then?\"\n\n\"No. I was too damn excited. I didn't know for a while if I was embarrassed or turned on, sitting there naked like that. But when I came it was SO damn hard!\"\n\n\"Well, let me tell you a secret. Most of the women here come to these so they can play. They want to feel another man's cock in their pussy, or mouth or even up their ass. Sometimes they get to do things that their real life partner won't, or can't, do, but they love their partner and they come in agreeing that this is a value to both of them. I don't know of any couples here that have the kind of issues I frequently have to help monogamous couples with. This is a place to let your hair down, try things you might not otherwise try, and maybe, most importantly, realize that there is a huge difference between making love and sex. Your husband makes love with you. But the human body is designed to desire sex. It's built to search for the strongest candidate to father your children. Both men and women are that way. Men aren't built to be monogamous. So a lot of guys cheat. Women are better at it, but biology still makes them look and think about different guys and how they would be in bed. That's all natural.\" Jessica said softly.\n\n\"The advantage here, is that you come, you express that biological side, both of you.\" She said, looking up to me as well. \"And when it's over, your need, your drive to look outside is sated for a time and for most couples here, that makes their loving bonds even stronger. My husband will have sex with as many partners tonight as he can, but when the party is over, he's as faithful to me as any man can be. And I love him for that faithfulness. I know that this kind of thing will ALWAYS stay at the party. No outside meetings, no married guy dating sites online. Nothing like that. If he really really has to get more than I'm giving him, we'll do something about it together. Bottom line is...never go outside of the relationship alone. Never get mixed up between lust and love. You feel both, but love is ALWAYS reserved for your husband. That make sense?\"\n\n\"Sorta.\" My wife said quietly. \"How long have you been doing these?\"\n\n\"Quite a few years.\" She admitted. \"Trish here has been doing them longer. Stay here. I'll be right back.\" \n\nI watched her get up and walk quickly across the club to a table in the corner, coming back with a small clutch sized purse. She reached into the small bag and pulled out a card. \"Look. If you need to talk after this, just call my office. I'd be more than happy to have you come in, or even come out to your house. I do sex therapy, so home visits aren't all that unusual.\" She said quietly. \n\n\"So, I'm not all screwed up because I enjoyed this?\" My wife whispered, looking more at me than anyone else.\n\n\"No, you're not all screwed up. This kind of thing isn't for everyone, but I assumed that since you were here you'd already talked it over and wanted to try something like this. Didn't you?\"\n\n\"Actually, no.\" I answered her. \"We didn't even realize what kind of party this was until well into it. Neither of us had any idea about just how sex filled the games were going to be or we probably wouldn't have come.\"\n\n\"Well, I'm pretty sure you're good with it.\" Jessica said with a grin. \"At least you seemed to be enjoying it every time I saw you. The question is, is your life mate, your wife, your love, good with it?\" She asked, looking back at my wife.\n\n\"It was fun. I mean I didn't think it was going to be, and the first time my partner out there wanted to put his cock in me I was pretty hesitant. The only reason I finally allowed it was that it was the only way to play the game, and I can be a bit competitive. But once we were doing it, damn it felt good.\"\n\n\"What felt good about it?\" Jessica asked.\n\n\"Because it felt so damn naughty. I mean I was laying back with nothing on below my waist, and anyone could see my pussy, and then he pushed his cock into me...oh god it felt good. I wished it was my husband's though. I really wanted it to be his. The whole time I was laying there I was pretending it was Mike's cock.\"\n\n\"So have you ever had sex with your husband in any kind of public setting?\"\n\n\"Not really. We did it in the back of a car once.\" My wife admitted.\n\n\"So, really, this is all new territory for you. You know what I suggest? I suggest you take your husband outside, find a nice public place and have sex. Suck his cock. Get him nice and hard and then ride him until you both come. Then see what you feel. IS that as exciting as what you did out there? Does it make you feel all hot and tingly, or was it having sex with someone else that was the real trigger.\"\n\n\"Really? You think I should do that?\" My wife asked in surprise.\n\n\"Unless you wanna just throw down on this table.\" Jessica answered with a giggle. \"Personally I wouldn't mind. I think he has a pretty damn sexy body for an older guy, and just between you and me, he has one hell of a great cock! Big, but not too big, long but not too long and oh god it hits all the right places!\"\n\n\"So you fucked him tonight?\"\n\n\"I did.\" She said quietly. \"But considering you fucked my husband half a dozen times or so.\"\n\n\"Your husband? I thought he was the rabbit?\"\n\n\"Nope. The human torch is my husband, so go have fun. See me after and we'll talk more.\" Jessica said as she stood back up. \"Come on Trish, let's give them a little space.\"\n\n\"Well, what do you think?\" My wife asked me quietly.\n\n\"About what, having sex or where to have it?\"\n\n\"Where of course. I think she's right. I think we need to have sex, just you and me.\"\n\n\"Well, I have just the place then.\" I answered, standing up. I took her hand and led her, still in nothing but her bra and panties, out the door into the night. As the sidewalk turned to head toward the golf course itself, there was a large fountain with benches around it. I walked her to the first bench, where anyone walking back from the course, and of course the games, would see us. I turned to face her, gently pulling the sports bra up her body. She lifted her arms and let her big thirty eight D tits swing free in the night air. I knelt down in front of her and slipped her underwear down, pulling her untied boots off as well as her socks so she was completely naked. ",
        "I stood up and she reached for my briefs, and pulled them down as she squatted down in front of me, making me lift my feet from my boots as she pulled my underwear off, leaving me as naked as she was. She hesitantly grabbed my half hard cock and aimed it at her open mouth as she leaned toward me. \"Oh god yes.\" I groaned softly as her tongue swirled around it. \"That feels so good.\"\n\n\"As good as those other women that sucked you tonight?\"\n\n\"Better.\" I groaned as she put her mouth back around my cock.\n\n\"Liar, but thank you.\" My wife whispered after pulling off my cock again. \"Tastes a bit funny. Is that what pussy tastes like?\"\n\n\"Like what?\"\n\n\"Kind of tart I guess.\"\n\n\"Yeah, pretty much.\n\n\"And you like that taste?\"\n\n\"When it's yours? Hell yeah.\" I answered as she engulfed my quickly hardening cock. Her head bobbed on and off my shaft, her hand following her lips as she teased me harder and harder, less and less of me able to be contained in her mouth.\n\n\"You like that?\"\n\n\"You sucking me? Always.\" I said as she let go and stood up.\n\n\"I'm really turned on right now.\" She whispered as several couples walked by less than ten feet away, clearly watching us. \n\n\"Yeah?\"\n\n\"Yeah. Fuck me. I want you to bend me over and fuck me from behind. I want to feel your full length sliding into me.\" She cooed as she stood, her tits brushing my chest as she gently stroked my arms.\n\n\"With pleasure.\" I said, leaning down slightly and kissing her softly on the lips. We stood embracing like that, out finger tips gently rubbing up and down each other's arms as we kissed for long seconds before she broke the kiss and turned away from me. She bent over and rested her hands on one of the benches so that we were aimed the same way as the sidewalk, giving those walking down the path a profile of both of our naked bodies. I stepped behind her and gently rubbed my saliva slickened cock up and down her lips before pressing slowly into her, driving my cock deeply into her surprisingly wet pussy.\n\n\"Oh fuck.\" She moaned as I held her hips and started to stoke in and out of her. I could feel her whole pussy practically quivering as she stood there, her head hanging down, her big tits swinging in time with my strokes, our bodies light not only by the nearly full moon, but also backlit by the light of the fountain. In and out I plunged, slapping my thighs to her ass with each stroke, driving my fat cock deep into her and then pulling back quickly to start the trip again. Over and over I plunged into her, her moans and gasps growing with each passing moment, her pussy seeming to spasm and quiver around my shaft as if she were already climaxing.\n\n\"God yes...oh fuck yes!\" she mumbled over and over as I drove my own climax closer. \"Tell me when. Tell me when you're going to come. I want you to squirt it all over my tits. Just like he did. I want to see your cock pumping on my tits!\" my wife moaned loudly.\n\n\"Soon.\" I mumbled. \"Damn soon.\"\n\n\"Good. God damn I can't believe I'm still coming...So long...\" She moaned.\n\n\"Gonna come!\" I grunted, pulling my cock from her sopping wet pussy. \n\nShe quickly turned around, sitting on the edge of the bench and wrapping both hands around my cock. She stroked me furiously, her hands lubricated with her own pussy juice as she pushed my impending climax even closer. \"UH FUCK!\" I grunted as my body jerked, trying to drive my cock toward her, a huge gush of cum squirting out so powerfully that it splattered off her face and ended up on both arms and her tits. She aimed my cock lower, continuing to pump me, each new surge of cum squirting on her tits until she had over half a dozen long strings of cum laying on her tits, starting to turn more liquid and run and slide down her big round tits.\n\n\"God that looked so fucking hot.\" She mumbled, still stroking me and milking the last of my cum from my now shrinking cock.\n\n\"So?\" Jessica said as she stepped around the fountain. \"Was it as intense as out there?\"\n\n\"More.\" My wife said quietly as Jessica squatted down next to us and reached for my cock. She leaned her head in and quickly sucked my cock into her mouth and spent several seconds licking and sucking the remaining cum from my cock. Then with a grin she released it and turned to look at my wife. Maintaining eye contact with her, she squatted down farther, leaning her face toward my wife's tits and began to carefully, methodically, lick my cum off my wife's tits, her tongue working first across the tops of her tits, collecting what she could there, and then working lower until she was sweeping her tongue across and around her rock hard nipples. \"Oh god.\" My wife sighed softly as Jessica closed her lips around one of her nipples and sucked deeply.\n\n\"Play with her tits honey.\" My wife moaned softly. \"I think she wants you to play with her tits.\"\n\nI shrugged to myself and squatted down behind her. It only took my fingers a few moments to find the clasp for the strap that held her dress up and unfasten it. I pushed the stretchy red material down to her waist, exposing her firm round tits and slid my hands around her sides, cupping each orb with my hands and teasing my fingers back and forth across her rock hard nipples.\n\n\"Oh god.\" My wife moaned softly, tilting her head back and gasping. I looked around Jessica and saw her finger deep in my wife's pussy, teasing her clit as she slowly stroked in and out, her mouth moving from nipple to nipple.\n\nI had to admit, I was getting pretty turned on by the thought and sight of my wife being pleasured by another woman, and slipped one of my hands down Jessica's body from her tits to the slit on her thigh. I worked my hand under the material and let my fingers find her full round pussy lips, gently stroking up between them and across her clit.\n\n\"God. I'm going to come again.\" MY wife moaned softly. \"Shit I can't believe she's going to make me come again.\"\n\n\"Just have to know where to touch and how.\" Jessica said softly, moving from one tit to the other. \"But your husband pretty well knows how to do that.\" \n\n\"Yeah?\"\n\n\"Uh huh. Just push your finger in now. As far as you can.\" Jessica said with a little gasp as my finger began to penetrate her tight tunnel. \"Oh yeah.\" She cooed softly before going back to sucking my wife's tits. We stayed there for some minutes before Jessica stood up and looked down at my wife. \"Take my dress off.\" She said softly, but clearly commandingly. My wife reached out and slipped the red material down over Jessica's ass, pushing it down until she could step from it. \"Tell me. No one knows your husband as well as you do. Can you make him hard again?\"\n\n\"I can always make him get hard again.\" My wife said with a small smile. \"You want him hard again?\"\n\n\"I do.\" Jessica answered.\n\n\"You want to fuck him again?\"\n\n\"I do, but it has to be with your permission.\"\n\n\"I guess that's fine with me.\" My wife said, starting to stand up.\n\n\"No. Stay. I don't think you understand. WE'RE going to fuck him together.\" \n\n\"As in both of us at once?\"\n\n\"Yes. You were clearly turned on by the public exhibition of your love making. It was tender and at the same time powerful. I want to use this opportunity to explore your comfort zone a bit farther. You responded well to my touch, but I would have expected you to object to another woman touching you sexually.\"\n\n\"It was kind of awkward at first. But as you sucked my tits and stroked my clit I got more and more turned on, and surprisingly, more comfortable with letting it happen.\"\n\n\"I could tell. So let's see what happens if we push that just a bit farther. How do we, together, make him hard again?\"\n\n\"He loves to have me lick his cock and then tease my nipples with it.\" My wife said.\n\n\"Perfect.\" Jessica said quietly, squatting down in front of me and holding a hand out for my wife. She gently coaxed her off the bench to squat in front of me as well and then reached out to capture my cock. I watched Jessica's mouth close around my shaft and suck me in for a moment before pulling her mouth off and holding it for my wife to suck. My wife looked up at me a bit nervously as she opened her mouth and then closed it around my head. My cock was far from hard, but the view of both their faces in front of my cock, and their bare tits below was going to quickly have an effect. They took turns sucking me until I started to harden a bit and then Jessica rubbed my mushroom head back and forth across her tits and nipples before guiding me toward my wife's tits, where she did the same thing, teasing her nipples with the tip of my head. \n\n\"He does get hard fast, doesn't he?\" Jessica cooed.\n\n\"He does that.\" My wife agreed.\n\n\"I want you to climb up on the bench, and put your head this way. On your back.\" Jessica directed as my wife first sat and then lay on the bench. \"Good. Now let's see what this does for you.\" She said as she stepped across my wife's head, squatting slightly to bring her pussy down until it was nearly touching my wife's face. \"Have you ever licked another woman before?\" Jessica asked quietly before lowering her head down between my wife's legs.\n\n\"Oh god. No.\" My wife gasped as Jessica licked her pussy.\n\n\"You don't have to if you don't want. For now, just draw your husband forward and guide him into me.\" Jessica coaxed. I stepped forward and my wife reached up with her hand and gently guided my hard cock to her fat round lips. I held her hips and pressed forward, slowly pushing my saliva coated cock into Jessica's pussy. \"Ohhhhhhhh. Yes. Perfect.\" She moaned softly. \"Now. Use your hands. Just touch and stroke whatever feels good. Don't do anything you don't want to. But I do want you to watch if nothing else. I want you to tell me how you feel as you watch him.\"\n\n\"Okay. Nervous right now.\" My wife said as started to slowly stroke in and out of Jessica. \"God is that how he looks fucking me?\" She asked after a few strokes. \"Oh god. Ohhhhhh fuck.\" She moaned softly as Jessica started licking her pussy again. I stroked in and out of Jessica, feeling her pussy snuggly caress me as I pushed and pulled in and out of her soft sweet pussy. I felt my wife's hands reach to my ass and gently stroke it as I stroked into the pussy inches from her face. To my surprise her hands left my ass and began stroking her hands in circles around her full round ass before gently pulling down on the creamy cheeks.\n\n\"OH damn.\" I groaned as I looked down and saw my wife, her tongue licking Jessica's clit while my cock stroked in and out of her pussy. \n\n\"You like that?\" My wife asked softly.\n\n\"God it's sexy as hell.\"\n\n\"Pull out of me and let your wife suck your cock.\" Jessica said from between my wife's legs.\n\n\"Seriously?\"\n\n\"Yes.\" She said almost sternly.\n\nI pulled back and let my wife grasp my cock and pull it down toward her mouth. I eased forward and felt her close her lips around my head and swirl her tongue around and around my head. I almost couldn't help myself, starting to push my engorged cock in and out of her mouth.\n\n\"Put it back in.\" My wife said, pushing me back by using my cock as a handle. \"Make her come now.\"\n\n\"You sure?\" I asked\n\n\"Yeah. I'm sure.\" She answered as she guided me back to Jessica's pussy. I pushed into her quickly and started plunging in faster, Jessica quickly starting to moan and gasp in response, muffled by my wife's pussy. Her own groans and moans grew in intensity as Jessica worked harder, plunging at least one, maybe two fingers into my wife's pussy while she licked and sucked her clit.\n\n\"FUCK! I'm going to come!\" My wife called to us. \"Oh god. OH GOD...OH GOD DAMN!\" my wife squealed as Jessica did something between her legs that pushed her hard over the top of another climax. I continued to pump into her as my wife bucked and convulsed below her, her own pussy starting to twitch and quiver around my shaft.\n\n\"My turn.\" Jessica moaned as my wife lay gasping for breath below her. \"God, I'm going to come.\" She moaned as her legs started to tremble. I saw her back arch slightly and her ass push back at me as her whole body suddenly shuddered and shook in front of me. I felt her pussy clenching and spasming around my shaft, drawing me within a hairs breadth of coming myself.\n\n\"Come for me baby. Come hard for me!\" My wife coaxed.\n\n\"Tease his balls.\" Jessica said breathlessly, her body still trembling.\n\nI felt my wife cup my balls and roll them as I continued stroking in and out of Jessica's pussy. \"He's close. I can tell. Now pull out and put it in your wife's mouth.\"\n\n\"You want me to have him come in my mouth?\" My wife asked in surprise.\n\n\"I know, you've never done that.\" Jessica said as I pulled out of her pussy. \"But you need to try. You need to show that you accept that part of him as willingly as he accepts your cum when he licks your pussy, and sweetie, you cum a lot when you climax.\"\n\n\"Okay.\" My wife said, taking my cock in both hands and stroking it quickly back and forth as she closed her lips around it. \n\n\"When he comes, just aim it to the side so he doesn't shoot right down your throat and gag you. Just take it all in.\"\n\nJessica slowly untangled herself from over my wife and turned around, climbing back on top of her again, her big tits pressed to my wife's. She leaned her face toward my crotch and sucked one of my balls into her mouth while my wife continued to stroke my shaft.\n\n\"OHHHH SHIT!\" I grunted as my cock suddenly erupted in my wife's mouth. Over and over my cock surged while I did my best not to force my cock deeper into her mouth. \n\n\"That a girl. Now swallow it down. Don't hold it, just swallow it and then suck his cock until it get soft.\" Jessica coaxed. \n\n\"I can't.\" My wife said pulling my cock from her mouth. \"I need to breath.\"\n\n\"That's okay.\" Jessica said, reaching one hand for my cock and pulling it toward her own mouth, her lips closing around my head and sucking the remaining cum from me. She released my cock from her mouth and looked up at me, her tits still pressed to my wife's. \"So what did you think?\"\n\n\"Incredibly sexy.\"\n\n\"Was it a turn on, even though it wasn't your wife's pussy you were fucking?\"\n\n\"Yeah, it was.\"\n\n\"How about you. What did you think?\"\n\n\"It was interesting to see what it looked like and what he looked like doing that.\"\n\n\"Good. Did it bother you to see him going in and out of me?\"\n\n\"Surprisingly, no.\"\n\n\"Why not?\"\n\n\"I guess because I was part of it too. It was a joint thing.\"\n\n\"Good. Good girl.\" Jessica said as she pushed herself up off my wife and then helped her roll up to a sitting position. She bent to pick up her dress and stepped into it. \"You know, I usually get a hundred dollars an hour for a session like this.\" She said with a grin. \"We'll just call this one on the house.\" \n\n\"Jessica, well, Adrian, whatever your name is.\" My wife said. \"Do you do this with all your clients?\"\n\n\"OH lord no. Only my special ones. Usually I'm just standing to the side watching, wishing I was getting fucked. I actually build time into my schedule every day to use a vibrator to get off or I'd go crazy.\"\n\n\"Well, thank you, I think. I may not feel the same way tomorrow, but right now, I feel okay.\"\n\n\"That's the idea. Now, here's my task for you, both of you. Get your clothes, stay naked and go home. Stay naked all the way home, that's doctor's orders. When you get home, take a shower, snuggle in bed together and, in the morning, talk. If you need me, call me. I'll come over.\" She said with a smile as she fastened her dress. \n\n\"By the way, did you ever figure out who invited you?\"\n\n\"No, we didn't.\" my wife answered. \n\n\"Well, the one thing you do know. Someone you know, and knows you well, already does this and thought you'd enjoy it too. So if you ever figure out who it is, you have a pair of built in playmates, if you want to try something more private, though it seems to me you get off on anonymous public displays.\"\n\n\"It seems that way.\" I agreed, stepping behind my wife and reaching down to cup both her big tits.\n\n\"You can't still be horny.\" My wife chided me softly.\n\n\"Can and am. Just need some time to recharge.\" I answered.\n\n\"Tell you what, If you get hard by the time we get home, you can fuck me on the hood in the garage. How's that sound?\"\n\n\"Sounds fantastic.\" I answered her, Jessica grinning at us. \n\n\"You two will be fine. But call me anyway. If you need to talk, or just because you wanna try more things.\" Jessica said before bending over and giving my wife a kiss and then leaning over my wife to kiss me. She lingered on my lips and gasped gently into my mouth. As she broke the kiss and pulled back I looked down and saw her nipple pulling gently from my wife's mouth. \n\n\"Just thought I'd try that as long as I was feeling bold.\" My wife said.\n\n\"Please. Call me!\" Jessica said with a huge grin. \"I think you two'll be a lot of fun to play with.\"\n\nI watched her walk back into the club and then headed in myself, still naked to get the rest of our clothes. Most everyone had gone, but that wasn't a surprise, it was almost two in the morning. I gathered up our stuff and then walked out to gather my wife, who was waiting with our underclothes. We walked to the car, still naked, passing two couples busily fucking on the hoods of two of the few cars still in the lot. We drove home discussing who might possibly have invited us and finally gave up with no more of an idea than we did earlier in the evening. We did decide however, that after we woke up the next morning we were definitely calling Jessica to see about exploring more of those hidden limits which we suddenly learned weren't as limiting as we had always thought.\n\nWith the car parked in the garage there was only one thing left to do before shower and bed. A task my wife willingly submitted to, on the hood of my car with her legs spread high and wide for me!"
    ],
    "authorname": "m_storyman_x",
    "tags": [
        "halloween",
        "costumes",
        "outdoors",
        "games",
        "groups"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/halloween-party-surprise"
}