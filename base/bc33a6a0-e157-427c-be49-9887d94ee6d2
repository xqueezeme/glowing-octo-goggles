{
    "title": "A Girl Named Mitch Ch. 02",
    "pages": [
        "And we're back with chapter two! This is the second of a four part series, you should read part one first, or you'll be lost. All characters are over eighteen.\n\n****************\n\n<p align=\"center\">Chapter Two</p>\n\nI'd never been more nervous in my life. I've probably said that already a few times during this story, but it was definitely true again. My leg was bouncing as I tried to control my breathing in the visitor's locker room.\n\nI felt more than saw Mitch sit down next to me. \"Cindy, hey.\"\n\nI looked up at her, her blue eyes focused with competitive fire. \"Hey.\"\n\n\"We got this. You and me, together. Right?\"\n\n\"Yeah.\" I nodded, probably a little too fast.\n\n\"Good. What's on your shirt?\"\n\n\"Huh?\" My brow furrowed, not following. Mitch reached out and touched the embroidered letter on my top, just over my breasts.\n\n\"That. What is it?\"\n\n\"It's the Georgia 'G'.\"\n\n\"That's right. And it's not a joke, and it's not a mistake. You earned it, because you are a damn fine tennis player. And we're going to go out and show them that. Understood, partner?\"\n\nShe was wearing a wicked grin on her face, and it made me feel better immediately. Yeah. We were going to do this.\n\nIt turned out she was absolutely correct, the two of us were dominant, moving together as one on the court. We covered each other's lines, anticipated each other's movements, and we only dropped a single game. Overall the team took all three doubles sets.\n\nI sat with Mitch as everyone prepared for the singles matches. Now it was Mitch's leg bouncing with nervous energy, but her eyes were focused, and she took the court at a run. I moved up to the stands, away from the rest of the team and coaches. I wanted to be able to concentrate.\n\nMitch started with the serve. I watched as she bounced the ball, her powerful body coiling gracefully before striking, driving the ball past her opponent. She took another ball, stepped to the other side of the court, and did it again.\n\nIn a word, she was magnificent. I couldn't look away, seeing her move around the court, the raw power of her body and game. Her opponent couldn't come close to handling that power, and Mitch won in straight sets.\n\nAfter match point Mitch raised her arms in triumph. I'd lost track of the score just watching her. That was very unlike me, and I gave myself a shake before heading back down to the court.\n\nMitch was beaming. I was pulled towards her like a magnet, and going into her embrace was the only thing I wanted. She laughed as I burrowed my head into her shoulder, and I held on for just a moment longer than I should have. It was just hard to let go.\n\n\"You were great Michelle. That was amazing.\"\n\nShe stepped away, creating some space. \"It felt good. What'd you think? How did I play?\"\n\n\"You were too much for her. She couldn't hit with you.\" I couldn't help smiling at her.\n\n\"I know, so I tried to think how you would handle that. I gave myself more margin and tried to keep the power high.\" I could see the earnestness in her face. \"Was that right?\" She really wanted me to approve.\n\n\"Yeah, it was perfect.\"\n\nWe sat on the side of Carrie's match, watching as she dealt with her counter-punching opponent. It took forever, but Carrie was able to pull through in two very close sets, and our team ended up taking a clean sweep back onto the bus home.\n\nIt was a little rowdy, and I don't usually go for that sort of thing. Me loosening up is not a pretty picture. Like Willow said on Buffy, wild on me equals spazz. So instead I sat in the back and kind of basked in the happiness of my teammates. After forty-five minutes or so things started to quiet down, and Mitch plopped herself into the seat next to me.\n\n\"So, good day?\"\n\nI smiled at her. \"Yeah. It was. You played great.\"\n\n\"We both did, partner. So, I was thinking, how do we switch it up some? I mean, people are going to start to get tape on us, and we should be ready, y'know, for when they react.\"\n\n\"Look at you, talking strategy. I thought it was just,\" I lowered my voice to caveman territory, \"'Mitch hit ball.'\"\n\n\"Hey, I'm growing here. Have some respect.\" She smiled at me. God, she was so pretty, and those eyes, they were mesmerizing. How could she not have someone?\n\n\"You okay, Spencer?\"\n\n\"No, yeah, I'm fine. Yeah. I tend to poach more when you serve in the deuce court, so that's something.\" We continued to talk shop for the next hour until I let go a huge yawn in the middle of a sentence.\n\n\"Am I boring you, Cindy?\"\n\nI gave an embarrassed shrug. \"No, I didn't get much sleep last night. But if I fall asleep in this seat I'm going to get a crick in my neck.\"\n\n\"You could sleep on my shoulder.\" Mitch popped her eyebrows at me a couple of times, making me giggle.\n\n\"No, I'll be okay. Thanks though.\" I leaned back and looked out the window while Mitch put in a pair of earbuds. I started to nod off, but it really wasn't comfortable. After a while I readjusted, moaning slightly as I tried to stretch. Mitch didn't say anything, instead just lifting the armrest between us and putting her arm around me. I snuggled into her shoulder. I was crazy tired, and she was so comfy, and the next thing I knew she was shaking me gently awake.\n\n\"Cindy, hey, we're back on campus.\"\n\nI opened my eyes. It had gotten dark, and the streetlamps flickered by as we went slowly down the road. I looked at my phone. It was just after one o'clock as the bus pulled up to an upper class dorm. The rest of the team piled off, taking their bags with them, leaving just the coaches, Carrie, Mitch and me.\n\n\"Do we get off here?\" I yawned.\n\nCoach Holiday smiled, which was a little weird. \"No Spencer. We'll take you to your dorm. Or at least closer.\"\n\n\"Okay.\" I leaned back against Mitch, closing my eyes for a second before they snapped open and I sat up. The bus was moving again, and Mitch pulled her arm away. \"God, was I sleeping on you?\"\n\n\"Yeah.\"\n\nI grimaced. \"I'm sorry.\"\n\n\"I'm not.\"\n\nI figured she was going to be giving one of her patented mischievous looks, but if anything she looked mildly embarrassed. I was probably misreading it because it was late. Mitch didn't get embarrassed.\n\n***\n\nI let myself sleep in on Sunday, ignoring calls from both Ethan and my brother. I finally responded to a text from Mitch.\n\nMitch -- Hey, I got pizza and incomprehensible math problems in my dorm room.\n\nI smiled and shook my head. I didn't want to talk to my family, and I really didn't want to see Ethan right now. I did want to be with my best friend, though. Even if she didn't know a logarithm from a differential.\n\nMe -- Okay, I'll be over in an hour.\n\nAs I stood in the shower I wondered how in the world I'd gotten to the point that the only place I felt happy and safe was in the dorm room of a butch lesbian, even if she was the most interesting person I'd ever met.\n\nMitch was true to her word, and we made our way through a large pepperoni and mushroom along with a passel of Math problems. After that there was Buffy. I was sitting next to Mitch, remembering how lovely it had been leaning against her on the bus. Would it be so wrong? It didn't mean anything, did it?\n\nMitch paused the show. \"Hey, you okay?\"\n\n\"Yeah, just tired.\"\n\n\"We can turn it off.\"\n\nGod, the one thing I knew was that I didn't want to leave. \"No, um, I want to finish the episode.\"\n\nMitch reached over and tucked a strand of my blonde hair behind my ear. \"Okay. You know, my shoulder's always available to my friends.\"\n\nI smiled. How had she known that's what I'd been thinking? I didn't pass up the offer. Her arm felt so good around me.\n\n***\n\nThe season continued, and what I most looked forward to were the overnight road trips. Mitch was so much fun to be around, and we always stayed up talking late into the night in our rooms.\n\nI was seeing less and less of Ethan. I'd met with the Nurse Practitioner on campus and managed somehow to explain to her what was going on. She checked my estrogen levels to be sure we weren't dealing with early menopause, which she said would be extremely rare at my age. It all came back normal, making me breathe easier. She asked me a lot of the same questions Mitch had. And the more I tried to convince everyone that I was attracted to Ethan, the less I believed it myself.\n\n\"So what are you going to do?\" Mitch put her hand under her chin, looking at me across the space between the beds in our hotel room.\n\n\"It's not getting any better. And he isn't calling as much.\"\n\n\"So you used what she gave you?\"\n\n\"Yeah. It's just basically prescription strength versions of the stuff I was already using. And it helps about the same.\"\n\n\"Cindy, you should just break up with him.\" I searched her eyes for ulterior motives, but I couldn't see any. She'd never liked Ethan, I knew that, but she was always supportive of me. \"You're not happy, he's not happy.\"\n\n\"Mitch...\"\n\n\"Okay, just humor me. Just for a second. Close your eyes.\" I lay back, and did as she asked. \"Think about Ethan.\"\n\n\"Okay.\"\n\n\"How do you feel? Truth.\"\n\n\"Nervous. Scared. Afraid.\"\n\n\"Okay. Afraid why?\"\n\n\"That there's something wrong with me. That I'll never...\" I couldn't finish.\n\n\"Hey, stop. Now, keep your eyes closed. You see him?\"\n\n\"Yes.\"\n\n\"Now, just blow him out like a candle. Poof. He's gone forever. How do you feel?\"\n\nHow did I feel? I dreaded every time my phone rang, or chimed with a text. What if that were gone? \"Still scared. But relieved. Peaceful.\"\n\n\"So, what does that tell you?\"\n\n\"I know. I've never broken up with anyone, though. It feels like failing.\"\n\n\"See, that's the thing about love. You only have to get it right once.\"\n\nI grinned wickedly across the divide. \"So does that mean you're going to give it a shot sometime?\"\n\n\"Yes. I will.\"\n\nThe intensity in her voice surprised me, and she must have seen it in my face.\n\n\"You don't believe me? I'm hurt, Spencer.\"\n\n\"No, I just, um, God, I don't know. I'm sorry.\"\n\nMitch lay back and looked up at the ceiling. \"No, I have every intention of falling in love. But I'm only going to do it once. And then I'm going to stay in love forever, just like my parents.\"\n\n\"I thought you said you weren't sure about falling in love.\"\n\nShe turned onto her side, propping her head on her hand. \"You remember that?\"\n\n\"Of course I do. It was that night in Oxford, when you told me about your parents.\" I blushed. \"I like talking to you at night.\"\n\n\"You don't get enough girl talk from your roommate?\"\n\n\"Oh, God, all she can talk about is boys and clothes and whatever girl she doesn't like because of whatever stupid jealous reason. I swear, she's like something out of a teen drama show. A bad one. And I've never seen her study. How she ever passes a class is totally beyond me.\"\n\n\"Geez, Cindy. Meow.\"\n\nI giggled. \"Stop that. I was not being catty.\" Mitch just smirked at me. \"Okay, maybe just a little.\"\n\n\"So, I take it you're not going to re-up for another tour with her, then?\"\n\n\"Uh, no. I guess it's back to the roommate lottery for me.\"\n\n\"You don't have to, y'know. We could bunk up. In a completely platonic sense of course.\"\n\nMy mouth dropped open slightly. What would that mean, would she... no, God, stop it. It would be fine. Just like this, separate beds. And I'd get to hang out more with my best friend. My parents would have an absolute cow, but there wasn't any reason they needed to know that I was rooming with a lesbian. I hadn't mentioned Mitch's sexual orientation during the brief conversations I'd had with them, obviously. I'd even been careful to only refer to her as Michelle.\n\nMitch mistook my thoughtfulness. \"Hey, if you don't want to, that's okay.\"\n\n\"No, I, um, that'd be nice.\"\n\nMitch looked at me sternly. \"Are you sure?\"\n\n\"No, I mean, yeah. I'm sure. I'm in. Let's do it.\" I was grinning ear to ear, my anxiety evaporating as I saw Mitch match my expression.\n\n\"Awesome!\"\n\nI tried to give her an appraising look of my own. \"Now you're not just doing this so you can watch me change, right?\n\nMitch scoffed at me. \"Please, Spencer, I've watched you change dozens of times. And I can't help it if you're drop dead gorgeous.\" She grinned, and we laughed at each other.\n\n\"You just behave.\" I reached over and turned out the light and rolled away, pulling the covers up to my neck. She'd called me gorgeous. Why had my heart done a flip when she'd said it? I mean it was a compliment, right? I mean, she is a lesbian, so it's just like a guy saying I was pretty, which I was used to. Except that when guys say it, my brain doesn't go all fuzzy like it just had.\n\n***\n\n\"Check it out!\" Mitch busted into the locker room waving some papers.\n\nCarrie looked up from her locker. \"What is that?\"\n\n\"That is my College Algebra exam. Which I got a 'B' on. 'Cause I'm awesome.\"\n\nI jumped up and grabbed the exam out of her hand. There was a big red '82' circled at the top. \"Michelle, that's fantastic! I'm so proud of you!\"\n\n\"It's all because of you, y'know.\"\n\nI wrapped her in a hug, not even remembering I was only wearing a sports bra on top until I felt her hands on the bare skin of my back. Heat flooded my body as my cheeks turned red, and luckily for me Mitch let me go quickly. I stepped back, staring down at the floor, but Mitch just whooped again, turning away and letting me regain my composure.\n\n\"Kirkpatrick! What's the racket for?\" Coach Holiday came out of her office and Mitch showed her the exam, which allowed me a moment to sit back down at my locker and pull on my top.\n\nI felt her presence a moment before she sat down next to me. She put her arm around my shoulders and gave me a squeeze. \"So, how do I say thank you?\"\n\n\"You haven't passed anything yet, y'know.\"\n\nMitch's eyes got serious. \"I understand, really.\"\n\n\"Good, 'cause it's not just your reputation on the line now.\"\n\n\"Aye, aye, boss.\" She actually saluted me. \"I won't let you down.\"\n\nI looked up into her eyes. They were smiling, her eyes. They were stunning, and I just wanted to stare at them.\n\nMitch let go of my shoulder and pulled away. \"You okay, Cindy?\"\n\nI pulled away and took a deep breath. \"Yeah, fine. Let's go play.\"\n\nOn the court we started to warm up, and I kept getting distracted by the way she moved. I'd seen it a hundred times before, and I was always mesmerized by it. Today, though, there was something more. Maybe it was the extra confidence from passing her exam, but she had an extra bounce in her step, a brighter glimmer in her smile.\n\nMitch was certainly inspired by her success, so we upped our tutoring sessions to twice a week, and occasionally even more than that. And she was confident now, so when I set her problems she didn't have that look of fear anymore. It was wonderful to see.\n\nBut it wasn't nearly as wonderful as hanging out with her afterwards, with her easy humor and unreserved joy in whatever we were doing, be it playing a game or watching a show.\n\nMitch shut off the TV after we finished an episode of Buffy. \"So, what's going on with Ethan? You haven't talked about him much, recently.\"\n\n\"Well, I saw the doctor, or nurse practitioner, or whatever. The stuff she prescribed makes it not hurt. And after talking with him, he understands that I have to put it on first.\"\n\n\"Doesn't sound very romantic.\"\n\n\"It's not. And he tried, at first, but I think he's starting to distance.\" A tear formed in my eye. \"I don't know why I can't be normal. Nobody else has this problem.\"\n\n\"It's okay.\" She pulled me into a hug. I remembered when I'd balk at any contact between Mitch and I. Now I craved these little moments, any time she touched me was special.\n\nFinally the last week of the season was on us, and I was hanging out with Mitch after our last practice of the year. She was showing me her latest exam, another B, which meant that she only needed a C on the final to make a C in the class, and she would have to completely bomb to flunk the course again. We were going over her first exam for the umpteenth time, the one she'd done so poorly on, and I was confident that she finally had it.\n\n\"Alright. You're going to nail this thing.\" I set my pen down just as my phone chimed. I picked it up, and my heart dropped through my chest as I read the text.\n\nEthan -- I don't think this is working. I'm sorry, but we should see other people.\n\nI let the phone tumble out of my hand and onto the floor, sitting back in my chair as a wash of numbness rolled over me.\n\n\"Cindy?\" Mitch's tone was concerned, and she reached down to pick up my phone. She looked at the screen. \"Oh damn, I'm sorry.\"\n\n\"No you're not. You always hated him. You wanted me to break up with him\"\n\n\"I hated that he didn't make you happy. That you for some reason felt beholden to a relationship that you didn't want to be in.\" She reached out and put her hand on my shoulder. \"But I'm sorry you're sad.\"\n\nI shrugged her off and spun away. \"This just reinforces everything for you, doesn't it. We should all be gay, right?\"\n\n\"Cindy!\"\n\nShe was hurt. God, this was not her fault. A tear formed as I closed my eyes and turned around. \"I'm sorry. I just,\" the tears began to flow and I covered my mouth with my hand, fighting my emotions.\n\nMitch stepped forward, putting her hands on my shoulders, and I went into her embrace, sobs shaking loose from my chest. \"What's wrong with me, Michelle?\"\n\n\"Nothing. You're perfect. Beautiful and smart and you have such a good heart.\" Her hand stroked the back of my head as I leaned on her shoulder. God, this felt amazing. Why couldn't being with Ethan feel like this? Would I ever be able to find a man where it did? Was I just broken?\n\nI let myself just rest in the arms of my friend, tightening our embrace as I cried on her shoulder. She held me, firmly but gently, whispering in my ear that it would be okay, until I finally settled.\n\nShe let me go and pulled away, and I felt a definite loss as she did. Her finger lifted my chin so I was looking in her eyes, those gorgeous, intensely blue eyes. \"Okay, Spencer, this is what we're gonna do. We're gonna get the girls together, and order pizza and watch 'Thelma and Louise' or some other man-hating movie, and we're just going to chill out.\"\n\nSomehow I managed a laugh. \"That's the best you got?\"\n\n\"Well, we have a match tomorrow, so the options are limited. But after we finish kicking ass tomorrow I'm going to take you out to properly commiserate.\"\n\n\"Okay.\"\n\nMitch pulled me into another hug, which lasted far too short a time for my taste.\n\nIn less than an hour a bunch of members of the team and a few of our other friends were crowded into the room. We didn't actually watch 'Thelma and Louise'. I don't actually remember what we did see, although I put a hard veto on the suggestion of 'Magic Mike'. There was a lot of gossip and a little male bashing, but mostly I remember sitting on Mitch's bed leaning against her, letting her hold me as our friends surrounded us, talking and laughing.\n\nEventually Mitch walked Carrie and meout of her dorm, and I gave Mitch another hug before we walked across the quad.\n\nCarrie gave me a look. \"You two seemed cuddly.\"\n\n\"She's my best friend. We didn't do anything wrong.\"\n\n\"I didn't say 'wrong', I said 'cuddly'.\"\n\n\"I was emotionally distraught. And Mitch gives really good hugs. Normal, friendly, platonic hugs. Besides, she knows I'm straight.\" Okay, change the subject. \"So did you blow off Stephan for tonight?\"\n\n\"Yeah, I told him a friend needed me. It's not going to survive the summer anyway. It may not survive finals week.\" Carrie had been dating her current beau for just two months, and she was pretty unenthusiastic about him.\n\nBut as we talked I thought about what she'd said. I wasn't a touchy-feely person by nature, but being close to Michelle was so easy. Maybe it was because she wasn't a guy, and there wasn't that tension of me trying to enjoy it. I knew what Carrie was implying, but I'd been on almost a dozen road trips with Mitch, and I'd spent multiple nights in the same room or leaning on her on the bus. If she were going to try something she'd have done it.",
        "***\n\nI actually woke up the next morning feeling great. Maybe it was the fact that I didn't have to worry about whether Ethan was going to show, but I did feel like a weight had been lifted, just like Mitch had said I would. And I was looking forward to going out and partying like a single girl tonight. I never really had let my hair down with Mitch at a party. It was bound to be an experience.\n\nOur final match went well, Mitch and I won our doubles set 6-1, and both Carrie and Mitch won their matches handily. Overall the team went 7-0 to secure the conference championship.\n\nThe party started in the locker room immediately after with, again, much music and an extremely unfortunate amount of dancing. We even got Coach Holiday to show us some moves, which were surprisingly not terrible.\n\nLuckily the seniors were the ones who had to deal with the press, so us three Freshmen were able to sneak away. We parted on the corner, each preparing to head back to our dorms and get ready for our night out. We decided to meet back in front of Mitch's dorm in an hour.\n\nI made it back to my room and was standing in front of my tiny little wooden wardrobe/closet thingy trying to figure out what I was going to wear. I didn't own any party clothes, so to speak, nothing racy or sexy. And I wanted to be sexy tonight. I knew Mitch was going to look amazing, and I wanted her to rue the fact that I was straight. Now why did that thought cross my mind?\n\nI tried to picture what she might wear. Maybe a tight white T-shirt, a pair of jeans, her hair slicked back, a belt accentuating her trim waist. I put my hand to my neck and stretched, trying to banish the image and the uncomfortable heat that I felt when I pictured her.\n\nNo, this was about the boys. Tonight I was going to turn their heads and leave them wanting, but not getting, more. I was going to get a little even. If I could find something to wear.\n\nThe door opened and my roommate walked in, wearing a towel around her torso and another over her hair.\n\n\"Hey, whatcha doing?\"\n\n\"My friends from the team are taking me out.\"\n\n\"Oh, because of Ethan?\" Her voice dripped with pity. Lana thought being dumped by someone as hot and rich as Ethan Richardson was nothing short of a Greek tragedy. \"It's good. Get out there. Just something for fun.\"\n\nShe dropped her towel, revealing her perfect hourglass figure. My eyes went wide and I turned away from the view of her perfect backside.\n\n\"So what are you going to wear?\"\n\nI turned back to my wardrobe, such as it was. \"I have nothing. Absolutely nothing. I want to turn heads tonight.\"\n\n\"You wanna wear something of mine?\"\n\nTo say Lana had different taste in clothes than me was a little like saying Lions and Zebras had different food preferences. She was a sweet girl, but she dressed to kill, and I honestly wasn't sure if there was anything in her closet in which I'd be willing to be seen in public wearing. At least, before today. \"Okay, let's do it.\"\n\nTwenty minutes later we had half of the clothes she owned laid out on the bed. At least Lana had gotten dressed first. \"Ooh, I know, I've got it. Do you have a black bra? A nice one?\"\n\n\"Actually, yes.\" It was probably the one nice piece of lingerie I owned, so I grabbed it out of my top dresser drawer. It was simple, plain black, with a shiny exterior. It gave my modest bust a bit of cleavage. I held it up over my shirt. \"What do you think?\"\n\n\"Oh, that's perfect,\" she turned and pulled something filmy out from her dresser, \"for this.\" She held up a fishnet jumpsuit top. It had long sleeves and a high neck, along with an over the hip cut on the side. My eyes went wide. If I wore that, the only thing covering me above the waist would be that bra. But still, I wanted to be daring.\n\nOnce I had it on I turned slowly in the mirror.\n\n\"Damn, girl you look good.\"\n\nI giggled. \"Thanks. So what's next?\"\n\nLana quickly determined that I didn't have any distressed jeans. My parents would never let me have any, so she pulled out a pair of her own that had holes in both thighs, among others scattered around. I squeezed into them and buttoned the fly. \"They're a little tight.\"\n\n\"That's the idea, and they're perfect.\" Lana stood back. \"Wow, you are going to blow the boys' minds tonight. After we fix the hair. And the make-up.\"\n\nI was five minutes late getting to Mitch's dorm. My blonde hair was pulled over to the side and my make-up was perfect. Carrie covered her mouth with her hand as the shock registered, but all I could really see was Mitch.\n\nHer mouth dropped open, as whatever she'd been saying to Carrie died on her lips. Her eyes went wide, drinking me in. It was the perfect compliment. I could feel her gaze like a caress, and it made me shiver. My cheeks began to heat in the cool night air, and I dropped my head down and to the side, running my fingers through my blonde hair.\n\nCarrie was still laughing as I reached them. \"Oh my God, Cindy, you look amazing! Where did you get those clothes?\"\n\n\"From Lana. You really like it?\" I was looking at Mitch, her perfect blue eyes finding mine, finally.\n\nMitch nodded slowly. \"Yeah, I like it. You're... stunning.\"\n\nMy blush intensified at the desire in her voice. I shook it away. I didn't want her to get the wrong idea. \"Yeah, too bad for you.\"\n\nCarrie shook her head. \"You are going to have guys hanging off you tonight.\"\n\nI made a face and shook my head. \"Mm, no thanks. I just want to go dancing.\"\n\nMitch recovered her bravado. \"Let's make that happen. The Beta Delts are having their traditional pre-finals party, and they have a huge dance floor.\"\n\nI smirked at Mitch. \"Sounds like you've been there before. Sure they'll let you back in?\"\n\n\"Are you kidding? They sent me a personal invitation.\"\n\nCarrie laughed. \"Sure they did.\"\n\nWe started to walk, and I let myself look at what Mitch was wearing. It was almost exactly what I'd pictured, a simple tight white T-shirt and jeans with a wide belt. A loose fitting jean jacket completed the outfit. Her hair was combed and slicked back, which really accentuated the fine features of her face. She was so striking.\n\nWe could hear the noise before we even got to their street, and apparently no one on campus wanted to pass up this one last chance to party before the semester ended. It took less than thirty seconds of being inside before I was being offered a cup of beer, which I gladly took and slammed down.\n\n\"Gaah! That's strong.\"\n\nMitch nodded, just sipping her own. \"Yeah, they're probably putting a little something extra in it. That'll get you drunk quick. Be careful.\"\n\nI shook my head. \"No careful tonight. I want to dance.\" I took another cup and drank half. I could feel the liquid courage course through my veins. Mitch was right, I didn't drink often, and I was definitely a lightweight. But if I wanted to really let my hair down I was going to need some help, and that was it. Besides, with Mitch there I felt very safe. Carrie got asked to dance, and she was quickly swept away onto the floor, and we waved to a few other people we knew.\n\nI grabbed Michelle's hand. \"C'mon, come dance with me.\"\n\n\"Okay, okay.\" She followed me laughing onto the floor. The DJ was pumping out a beat, and I let myself start to move to the music. Everyone who knows me can attest that I am not a good dancer, but with a few drinks in me I wasn't caring much.\n\nThe last time we were off the floor, a girl walked by and smiled at Mitch. I didn't like that, feeling a spike of jealousy, so I immediately pulled her back onto the floor. Once we'd started dancing, I'd felt bad. I mean, I wasn't looking for a guy, and I'd rebuffed the several approaches I'd had tonight, but that didn't mean Mitch shouldn't meet someone.\n\nBut she was my friend and she came here with me. And I liked it when we danced. It was nice. Besides, the more I danced, the more Michelle smiled. And I liked seeing her smile. She really was pretty. Or handsome. Or pretty handsome.\n\n\"What are you laughing at?\"\n\nI tried, unsuccessfully, to wipe the silly grin off my face at my drunken, internal witticism. \"Nothing, I like your jacket.\" I moved closer to Mitch, holding on to her denim collar. It was our third or fourth trip to the dance floor, if not more, and I was well past tipsy from the thirst quenching I'd partaken in between sessions. Mitch wasn't inebriated at all, just sipping her way through a couple of non-spiked beers over the several hours.\n\nMitch created some distance between us, and I pouted internally. If she'd gone off with that girl, she'd be dancing closer with her. Why didn't she want to dance close with me? I was her friend. I weaved a rhythm with my hips, pulling my hair up with my hands and exposing my neck. A glance up told me I had Mitch's undivided attention and I moved closer.\n\nAs I did the music changed, the driving beat from a moment ago changing into a slow, sensuous tempo. Mitch took a breath, centering herself. \"Should we go sit down?\"\n\nI shook my head. \"I don't wanna stop yet.\" I slid my arms around her waist and lay my head on her shoulder. \"Dance with me.\"\n\nI closed my eyes and felt the closeness of her. She was warm and soft and it felt so good. Her arms tightened around me, and that felt wonderful, too. A tear slipped free as I prayed the music would never end. If it did I'd have to wake up, and I'd be alone again. Maybe forever. The music slowed and I started to get scared, but another slow song started without any real silence, and Mitch just kept swaying to the rhythm, taking me with her.\n\nEventually the music did stop, and I looked up into Mitch's lovely eyes.\n\n\"Hey, Cindy, I think it's time to go home.\"\n\nOh my God, she was taking me home! What did that mean? I couldn't think straight, but I let her lead me off the floor. We headed out, and Mitch slipped an arm around my waist as we walked in the bright moonlight. For a moment my alcohol-addled brain thought she might be trying to cop a feel, but looking back I'm pretty sure she was just trying to keep me from falling down, seeing as every random air molecule that struck me was causing me to stagger slightly.\n\nWow, I'd never been this drunk. And I really liked having Mitch's arm around me. God, did I really think that? What was I doing? And why was the street spinning? I leaned against Mitch's shoulder as we walked. That was nice.\n\n\"C'mon, Spencer, let's go.\" Mitch turned me left and up a set of stone steps. She swiped her ID and the door opened, and I stumbled inside. Mitch caught me by the arm and pulled me back into her arms, me giggling like an idiot as she did.\n\n\"Oops. I feel spinny.\"\n\nMitch laughed. \"Yeah, I bet. Let's go to the elevator. I'm not going to try to make you climb four flights of stairs.\"\n\n\"Are we going to bed?\" I giggled at the naughtiness of my statement, or at least what my foggy brain perceived as such.\n\n\"Yes, we are, where you are going to Sleep. It. Off.\"\n\n\"Aww.\"\n\n\"Cindy, stop that. Please.\" There was a definite note of pain in her voice, which confused me, but I had no chance of wrapping my head around it in my current state.\n\nThe elevator door opened, and we, or rather I, stumbled inside, Mitch keeping me upright. I could feel the fatigue start to wash over me when the door closed.\n\n\"No, no. No sleepies for you, not yet.\"\n\n\"Aww.\"\n\nSomehow we made it into Mitch's room. \"Okay, my roommate is gone for the weekend, so you can crash here.\"\n\nCrashing, yeah, crashing sounded awesome. I needed to lie down.\n\n\"Okay, you're not sleeping in that. C'mon, let's get it off.\"\n\nI sat on the bed and tried to unbutton my jeans. God, these things were super tight. I groaned, laying back and trying to push the denim material down over my hips.\n\nMitch went down on one knee. \"Just a second, shoes first.\" She picked up my left foot and slipped off the red canvas tennis shoe I was wearing. She peeled off my ankle sock and stuffed it into the shoe, then repeated on the other side. \"Okay, now jeans.\" I flopped around, trying to get them off while she pulled them down by the ankles, and the jeans finally came free. The bare skin of my legs revelled in the cool air, and I stayed prone on the bed. I heard Mitch open a drawer in her dresser.\n\n\"Okay, come on, sit up.\" I gave a pathetic whimper as she pulled me up before slipping the body suit I was wearing off my shoulders. She drew it down my body, and I lifted my hips so she could slide it off. I was disappointed she hadn't tried to release the snappy crotch. No I wasn't, that would be touching too close, but the thought of it made me tingle all over.\n\nWithout thinking I reached back and released my bra, letting it fall onto the floor. Now the only thing I was wearing were my panties. I was almost naked. In Mitch's room. Oh my god. I started to giggle, particularly after I saw Mitch pull her eyes away from my bare breasts.\n\n\"Okay, arms up.\" She was a little breathless, but her voice was strong, and I obeyed. She stood over me and pulled a T-shirt down my body, covering me to below my waist. \"Comfy enough? Can you sleep in that?\"\n\nI was frowning. I didn't want her putting clothes on me. That wasn't fun, but I nodded and she tucked me under her roommate's covers. My jaw dropped open as Mitch shimmied her own jeans off, revealing a pair of blue boxers underneath. She turned away, and I watched, mesmerized, as she unbuttoned and dropped her shirt and pulled off her sports bra, revealing her muscular back and trim waist.\n\nMy mouth began to water, and I couldn't look away. She reached into her dresser and pulled out a tank top, which she slipped on before shutting off the light and climbing into her own bed. This wasn't right. I didn't like this. I don't sit over here. I sit over there, with Michelle. Where she could hold me. I liked it when she held me. I gave an unhappy moan. I didn't like these sheets.\n\n\"Go to sleep, Cindy.\" There was a begging note in Mitch's voice, but hearing it just made me want to be closer to her. I pulled off the covers and climbed out of bed. Two shaky steps got me across the room.\n\n\"Cindy?\"\n\n\"Don't wanna sleep alone. Wanna sleep with you.\" I pulled back the covers and climbed into Mitch's embrace, snuggling into her warmth. Oh, yeah, just like on the dance floor, this was heaven. Mitch drew the covers around us and held me close.\n\n\"Okay, just for tonight.\"\n\n\"Mmm.\" I put my arms around her, burying my face into her neck. God, she smelled good. My cheek brushed against hers. She pulled away slightly, and my face turned towards her. My eyes closed, and I felt my lips brush against hers. Energy coursed through my body, and the drunken fog in my brain lifted for a single moment, and I kissed her. Her lips moved against mine, and I could feel my body tremble.\n\nHer mouth left mine as she pulled me close, and wrapped in her warmth the haze closed back around me, this time bringing blackness with it.\n\n***\n\nWhen I opened my eyes, I had about thirty seconds before the pounding in my head started, and they were wonderful. Mitch's warm body was pressed against mine, her arm draped over my middle, and my hand was resting on hers.\n\nIt felt nice, comfortable, and I was happy for a beautiful second before the splitting headache and blind panic set in. Oh my god, what happened? Why the hell am I in Mitch's bed? What did I do?\n\nI took stock. I was wearing clothes, a T-shirt at least. And, um, I slid my hand down over my hip just to be sure, yes, I was wearing underwear. Thank God. I could see the jeans I'd had on laying on the floor, and my bra was over there. I had a vague recollection of taking them off, or Mitch helping me take them off. Oh my God, Mitch had undressed me. What had she been thinking? What'd I been thinking? The fog lifted a little and I remembered staggering back to the room and Mitch tucking me in. Her roommate's bed was unmade. That's right, she'd put me in the other bed to start. And then I'd, oh, shit. I had to get out of here, I needed to go somewhere and think. I lifted Mitch's arm as gently as I could, sliding out and putting my bare feet on the cold floor. Mitch rolled away, facing the wall, but she didn't give any sign she was awake.\n\nI grabbed the jeans, pulling them on and tucking in the shirt I was wearing before gathering up the rest of my clothes. I put my hand on the doorknob and looked back at Mitch for a moment before heading out into the hall.\n\n***\n\nThe sun was well above the horizon, beating its incessant light into my aching head as I made my way back to my dorm. I slipped into my room, closing the door as quietly as I could, but even the soft click from the latch made my head throb. I slipped off my shoes before pulling open the top drawer of my dresser and grabbing a bottle of Aleve and shaking two into my hand.\n\n\"Hey, girl. You hook up?\"\n\nOh, brother, I hoped not. \"No, no. Got drunk. Stayed in my friend Michelle's room. Her roommate was gone.\" I pulled a bottle of Gatorade out of our mini fridge and used it to swallow the pills before flopping down onto my mattress and burying my head under my pillow.\n\nJana chuckled. \"You need to eat something.\"\n\nI groaned, my stomach doing a flip in protest of that idea. I didn't want to think about food.\n\n\"I'm serious.\" Jana rolled towards me. \"Go get a shower, get dressed, and go down and have some breakfast. Make sure to have a glass of OJ. It'll help, trust me.\"\n\nI didn't want to believe her. I wanted to just lie here until this feeling went away. Or until I died. At this point I'd take either one. But I couldn't lie around all day. I had to study for finals, which started Monday.\n\nThe water running over my body felt good, and surprisingly the food made me feel better, giving me some energy. I was just starting to feel human again, my econ book and notes open on my desk, when my phone dinged.\n\nMitch -- Cindy, are you okay?\n\nI couldn't talk to her right now. I mean I'd climbed into bed with her. I remembered her holding me. And, oh my god. My phone tumbled out of my hand and onto the desk as the memory of the kiss blared to life inside my head.\n\nI'd kissed her. I'd kissed Mitch. ^ding^\n\nMitch -- Please at least let me know you got back to your dorm.\n\nWhat was I going to do? How the hell was I going to ever talk to her again? And the kiss, I remembered the way it felt. It had been amazing. No, no, I couldn't think about that. I'd been drunk. It hadn't meant anything. I was not interested in Mitch like that. I wasn't gay. I needed to breathe.\n\nI turned my phone to silent, putting it face down on my desk.\n\nI tried to focus, but my brain just wouldn't cooperate. My phone buzzed, and I couldn't help turning it over.\n\nMitch -- You know nothing happened last night.\n\nMitch -- I mean between us.\n\nBut that wasn't true. We may not have had sex, but something did happen. I picked up my phone.\n\nMitch -- Please talk to me.\n\nI took a deep breath and typed something out.\n\nMe -- I'm okay. Need time to think.\n\nMitch -- Okay. I'm here when you want to talk.\n\nI turned back to my studies, and my phone stayed silent for the rest of the afternoon.\n\n***\n\nI let myself immerse in my studies, each exam looming up like a monster to slay, and I let each upcoming academic battle distract me from the war going on in my head about Michelle. She texted me after her College Algebra final on Tuesday.\n\nMitch -- Nailed it! And by that I mean, of course, I didn't totally bomb. All 'cause of you!\n\nMitch -- I miss you.\n\nThat brought a tear to my eye. I hadn't gone this long without talking to her since Coach had paired us together. And I missed her, too.\n\n***\n\n\"So, Mitch says you're not talking to her? What happened?\"\n\nI dropped my gaze at Carrie's question. \"Nothing. I just want to do well on my finals.\"\n",
        "She looked at me askance. \"I thought you disapproved of lying.\"\n\n\"What? Hanging with Mitch isn't exactly conducive to study, and you know it.\"\n\n\"She's been studying. Really. She's also been in a bad mood.\"\n\nI felt a spike of guilt in my heart. \"Really? Like angry?\" Was she mad at me?\n\n\"Not angry, more, um, sad. Distracted. What happened after that party?\"\n\nI could feel my cheeks turning red, and I took another bite of my grilled chicken sandwich to hide it. \"Nothing. I was drunk. First time ever. She took me back to her room, and I passed out.\"\n\n\"She took you to her room?\" Carrie's eyes were wide.\n\n\"Yeah. I've been in her room a bunch of times. She wouldn't do anything.\"\n\n\"I know that, but still. Are you sure it wasn't more?\"\n\nI put an edge on my voice. \"I was clothed when I woke up. And I'm not gay. Mitch wouldn't do that. Not to me.\" My voice dropped at the end.\n\n\"Sounds like you're trying to convince yourself.\" I just played with my food for a second until she continued. \"You don't seem like yourself either. Cindy, I saw the two of you dancing. That isn't how friends dance. I know you two have gotten really close. Are you sure you're being honest with yourself about this?\"\n\n\"Honest? About what?\"\n\n\"Cindy, you guys spend all kinds of time together, I've seen you cuddling when we've watched movies and on the team bus.\"\n\n\"We weren't cuddling!\"\n\n\"Fine, you were leaning against her while she had her arms around you. And she hasn't been joking about hooking up at all for the last few months. And you're supposed to be rooming together next year. I'm not the only one who's wondered.\"\n\n\"We're just friends! I don't know how she feels, but I can't be anything more to her. I'm not gay, I can't be gay. My parents would disown me, literally.\" I felt a cold wash of fear as I said it. It was true. They weren't the most hateful kind of bigots, but they'd never accept one of their children in a same sex relationship. I shook myself internally. It didn't matter. That wasn't what was happening.\n\nBut, god, that kiss. No, this was the last time I was going to think about it.\n\nMy last final was Thursday afternoon. My mom would be coming to pick me up in the morning. Mitch was done Thursday morning, with her education basics final. I knew she wasn't worried about that one. I wondered how she'd done on everything. I hadn't heard from her since her Algebra final, but when I finished with Calculus on Thursday there was a text.\n\nMitch -- Cindy, I hope your finals went well. We need to talk, at least, if you want to switch roommates we have to do that soon. Otherwise you'll be stuck with me next year. And that might be awkward if you're not speaking to me.\n\nI made it back to my dorm. Lana's half of the room was empty; she'd headed out a few hours ago. I sat on my bed and stared at Mitch's text. She seemed like her normally goofy, flippant self, but I could feel the hurt underneath. Or maybe I was projecting. This had been the worst week since I'd been in Athens, without question, and the reason was simple. I missed my best friend. I stared at her contact icon for a moment before I took a deep breath and pressed the button.\n\nIt didn't even finish the first ring before she answered.\n\n\"Hey! Hi! How are you?\"\n\n\"I don't want a different roommate.\" I was crying. Why the hell was I crying? Damn, but it was good to hear her voice.\n\n\"God, Cindy, I don't either.\"\n\n\"Are you still here?\"\n\n\"No, sorry. I'm about an hour south of the Florida/Georgia line. My dad picked me up. You?\"\n\n\"My mom is coming to get me tomorrow morning. By Saturday I'll be wearing that stupid uniform, I guarantee it.\" I'd worked all last summer in my Uncle's diner, complete with green and white checked waitress outfits.\n\nMitch lowered her voice to trucker territory. \"So what are the specials, peaches?\"\n\nI smiled, not able to stop myself. \"Whatever they are, they'll be disgustingly fattening and wrapped in bacon.\"\n\n\"Sounds delicious. 'Course, I'd cause a minor panic just walking into town.\"\n\n\"Not until they realize you aren't a guy.\"\n\n\"I'll just wear an extra tight shirt when I visit. 'Mommy? Why does that man have boobies?' And then they'd chase me down the street, holding crosses and throwing holy water at me.\"\n\nI laughed hard, wiping the tears from my eyes. \"We're Baptists, we don't use holy water. Probably torches instead.\"\n\n\"Well, I guess that's a plus.\" There was silence for a moment, while I tried to find my voice against the emotions rising in my chest. \"Cindy...\"\n\n\"I'm sorry.\" The evident concern in her voice shook me, and I was able to get out an apology.\n\nMitch's voice was soft and gentle. \"It's okay. I just was afraid I'd screwed up our friendship. Did I?\"\n\n\"You? I'm the one who ran away.\"\n\n\"Yeah, but I, uh, you know nothing happened, right? You just fell asleep.\"\n\n\"Mitch, I kissed you.\"\n\n\"You remember that, huh?\"\n\nDid I remember it? The kiss stood out like a beacon among the rest of my admittedly fuzzy recollections of the night. The simple fact that it had happened, on top of the way it made me feel, was incredibly confusing. But the most mind bending part was that I had kissed her. If it had been the other way around, well, god, I don't know what I'd be feeling. But that wasn't what happened.\n\n\"Yeah, I remember it. I'm sorry.\"\n\n\"I meant after, nothing happened.\"\n\n\"I know.\" What a lie. I'd woken up in Mitch's arms, and that had been amazing. And the dancing. I pushed that thought away. I wasn't gay. I couldn't be gay. And I was pretty sure Mitch was immune to whatever charms I possessed, anyway, since she'd never hit on me. At least, not since we'd become friends, and before then it'd just been her normal joking around. Right?\n\n\"Good, 'cause I have strict rules about seducing my friends.\" Her voice got softer, like she had the phone away from her ear. \"Yeah. There's a Culver's at the next exit. Stop there?\"\n\n\"You with your dad?\"\n\n\"Yeah. I said that. Did you think I was hitchhiking?\"\n\nI giggled. \"No.\"\n\n\"I'll just be glad next year when I can bring my truck.\"\n\n\"Of course you have a truck.\"\n\n\"What self-respecting butch doesn't?\"\n\n\"Some drive Jeeps.\"\n\n\"I've heard that, but that's a type of truck. In my opinion.\"\n\nI smiled, pulling my knees up to my chest and hugging them as I talked with my friend. The world hadn't ended, and everything was going to be okay.\n\n*****\n\nI tried to remind myself of that Sunday morning as I sat in church. I'd dutifully put on my best smile, answering all the well-meaning inquiries from people I hadn't seen since Christmas. Yes, my studies were going well, no I wasn't seeing anyone. Not a single one asked about my tennis season. Nice girls didn't play competitive sports, after a certain age at least.\n\nI thought that was prehistorically chauvinistic, but I wasn't surprised by it, and it wasn't going to stop me from playing. The sermon had started about something random, but somehow it swung back around to families, and I listened as the pastor bemoaned the loss of family values in the country, how the acceptance of things like homosexuality were eroding the foundations of our society.\n\nI thought about Mitch, and the night we'd talked in the hotel room. She wanted marriage, a family, someone to love and who'd love her in return. Someone to invest her life in, to raise children with. How that wasn't conducive to family values I had no idea. Why the hell did it matter, to God or anyone else, who you chose to do that with?\n\nOf course the first time Mitch had called I'd almost had a heart attack, since the picture on my phone showed her very short hair and her name came up as 'Mitch', even though the picture was clearly a woman. I didn't want to answer any awkward questions regarding who that was. I quickly took down the picture and changed her contact name to Michelle. I also made sure that when I talked about my roommate for next year I called her Michelle, and I made a casual reference or two to her boyfriend, Jimmy. Looking back, it's not something I'm terribly proud of, but it seemed both clever and expeditious at the time.\n\nMy mother bemoaned the ending of my relationship with Ethan, as did my little sister, Charlotte. She was ten, and just starting to wonder if boys weren't quite as icky as she had once thought. Mom was almost instantaneous in bringing up several of the recently single young men in town. I'm pretty sure she kept a list, in case I ever needed it.\n\nDuring every wedding we'd attended over the years I saw the envious look in her eye, and I know she desperately wanted to be the one getting all the compliments. It wasn't an unhealthy obsession or anything; I think she just wanted her turn. And, naturally, I just had no interest in providing it right now.\n\nSo it was summer. Boring. I had the traditional awkward get-togethers with high school friends that I hadn't seen since graduation, and with whom I no longer had anything in common.\n\nI talked to Mitch most days. She was spending her summer pulling and delivering auto parts to service centers, but she seemed to be out on the water and at the beach half of the time. I was jealous, but she was constantly telling me I needed to come visit, and looking around my small, extremely boring, town, there's nothing I wanted more.\n\nOne thing I did notice was that she never mentioned any girls, either relationship-wise or just casual hook ups, even when I gently teased her about it. I think she actually got a little flustered when I would. She never asked if I'd met anyone here, which of course would have been met with a resounding 'no'.\n\nThe best thing about being home was about one week into June I got a phone call from Tiwana, my friend from my high school tennis team, asking if I wanted to go hit. I answered with an emphatic yes, and we met out at our old stomping grounds at the school.\n\n\"Hey, girl!\"\n\nI squealed and ran toward her, my arms outstretched for a hug. \"It's so good to see you! How was school?\"\n\n\"It was amazing! Getting out of this redneck town, so good. Almost feels weird to be back.\" She set down her Hampton bag. \"And it's kinda cool not being the only black girl in school.\" Hampton is a historically black college, and it was where her parents had met. Quite a change from the lily-white high school we'd attended, I'm sure.\n\n\"Yeah, I can imagine.\"\n\nWe went from just hitting around to playing a full match. Tiwana had improved substantially, shoring up that backhand that had been a weakness before and serving more confidently and smarter. But I'd improved too, and I took both sets. Afterwards we drove over to the local ice cream stand and sat at a shaded table.\n\n\"So what's Georgia like?\"\n\n\"Big. SO big. Any one of the buildings on Campus is twice the size of Marin.\"\n\n\"Yeah, but that doesn't take much.\"\n\n\"True. How about you? Good year?\"\n\n\"Oh, yeah. It's really starting to feel like my place, instead of my parents', if you know what I mean. Every time they'd take me up there they would talk in this, like, secret language. But now I get it, like I'm really in the club. And mom and dad are ridiculous. Just like, beaming. They came to every one of my matches this year.\"\n\nI shook my head, feeling a little jealous. \"My parents still haven't come to see me. But then again that might be a good thing.\"\n\nTiwana's brow crinkled. \"Why?\"\n\n\"Because of who I'm playing doubles with. Short hair, won't wear skirts, we call her Mitch.\"\n\nTiwana covered her mouth with her hand. \"Oh, my god. Is she gay?\"\n\n\"Oh, yeah. Out and proud. She's also hysterically funny and hugely outgoing.\"\n\n\"So kinda like the anti-you.\"\n\n\"Yeah. But she's great. We've actually gotten really close. I coached her through her math class last semester. We're rooming together next year.\"\n\n\"Your dad is going to let you room with a lesbian?\"\n\n\"My dad is letting me room with a girl named Michelle, who as far as he knows has a boyfriend named Jimmy, and whom he has never met. And I think it should stay that way.\"\n\n\"You are just rooming with her, right?\"\n\n\"Tiwana!\"\n\nShe laughed and held up her hands. \"Sorry. That's on me. Illicit love affairs, and all.\" She was blushing.\n\n\"What do you mean?\"\n\nShe got real grinny, her eyes twinkling. \"I'm dating a white boy from Old Dominion.\"\n\n\"Seriously? Do your parents know?\"\n\n\"God, no.\"\n\n\"I think they'd be okay.\"\n\n\"Maybe. He'd win them over eventually. He's a sweetie.\" She pulled out her phone, and we spent the next thirty minutes showing each other pictures. As we did, I noted how many of the pictures I'd taken over the year had Mitch in them, and also in how many of those she was touching me, and how similar we were in those shots to the pics Tiwana was showing me of her and her boyfriend.\n\nTiwana's voice got serious. \"Are you sure there's nothing going on between you two? You know you could tell me if there were.\"\n\nI laughed it off. \"No. That's just how Mitch is, she's really touchy-feely. With everyone. It's just her way.\" But I knew that wasn't true. I mean, it was, she touched everyone, the girl was very free with her hugs and back rubs and such. But she didn't sit casually with her arms around anyone but me. I wondered how hurt I would be if she did.\n\nI shook the thought away as Tiwana and I planned out the next time we'd be able to sneak away to the courts. When Mitch called that night I was almost a little scared to pick up, since the questions Tiwana had raised were still swirling around in my head, but as soon as I answered everything was fine. She was just so easy to talk to, and the sound of her voice made everything okay.\n\n***\n\nAnd so the summer passed, agonizingly slowly. It was odd. I remembered when I was a kid the summer's had gone by in a blink. Now I just wanted to get back to my real life in Athens.\n\nThe one thing that was an issue was move-in day. My father had taken a day off work so he could help me, since I still couldn't afford a car, but it was paramount to my mind that he not meet Mitch. I was really nervous to bring it up with her, but as it was she took it like a champ.\n\n\"I'll try to get in late. I'm driving so there shouldn't be any issue. Just call me when the coast is clear.\"\n\nSure enough, when my dad and I arrived Mitch's half of the room was still empty.\n\n\"I was really hoping to get to meet this roommate of yours, Cindy.\"\n\n\"You never met my last roommate. I survived that.\"\n\n\"Your last roommate was randomly assigned. This one you chose. That's the difference. It's important to be able to work with all kinds of people, but those you choose to surround yourself with, you have to be more discerning.\"\n\nYears of practice allowed me to refrain from rolling my eyes. Dad loved his little mini-sermons, and it was best to just endure them. It kept him in a good mood.\n\n\"Yes, daddy.\"\n\n\"When do you think she'll be here?\"\n\n\"She's driving in from Tampa, so not till late.\"\n\nEventually I managed to shoo him out the door with a hug and enduring a few more stern words about not compromising my ethics and morals. I went to the window and watched him walk out to the car and actually drive away before I sat down on my bed and called Mitch.\n\n\"Yell-ow?\"\n\n\"He's gone.\"\n\n\"That's good. 'Cause if I have to drink any more coffee, I'm not going to get any sleep tonight.\"\n\n\"You're already here?\"\n\n\"Yep, just down the road, friendly neighborhood Starbucks. Be there in five.\"\n\nI almost ran down to the parking lot to wait for Mitch. I knew she'd be driving a pickup, but I had no idea what it looked like. So I watched the incoming traffic, of which there was a lot, with an amazingly high percentage of trucks, I might add. Somehow I knew hers when I saw it, though. It was blue, a little muddy, and just so her.\n\nI waved, and she was close enough for me to see the smile that spread across her face when she saw me. She was able to pull right up to the dorm entrance, and she stepped out of the cab.\n\n\"Hey!\" I could feel my cheeks stretching into a huge grin of my own, and I found myself running to her. She spread her arms and I went into them without thinking twice. She just pulled me close and rocked me back and forth.\n\n\"God, Spencer it's good to see you.\"\n\nI didn't pull away, even though I was not the PDA type. She was so warm, and it felt like I was home. The hug lingered for a moment longer, and I could feel myself relaxing into it when she pushed me away. I almost said something to protest, but then I remembered we were outside the dorm with a dozen other students looking on, so I stepped away.\n\n\"Okay. Boxes?\" I was flushed, and I knew it, but it was hot out. Mitch just nodded, that smile still on her face as she thumbed towards the back of the truck.\n\n\"Yup.\"\n\nHalf an hour later we had everything up into the room and the two of us were unpacking. I'd been surprised how neat Mitch's room had been when I'd seen it last year, but I wondered if it was that way because she'd cleaned for me. But that didn't seem to be the case, as she carefully organized everything she put away.\n\n\"Finally.\" Mitch stuffed her suitcase into the little closet. \"We can relax. Pizza? My treat.\"\n\n\"Absolutely.\"\n\nJust then there was a knock on the open door, and we turned to see Carrie standing in the doorway. \"I'm in for that.\"\n\nHugs were exchanged, and I noticed a significant difference between the way Mitch hugged Carrie and the way she hugged me. Well, we were better friends, I guess.\n\nAn hour later we had an extra large pepperoni and mushroom and an order of breadsticks. Mitch had managed to get the TV attached to the cable, and we had the night session of the U.S. Open starting.\n\n\"Who's the women's match?\"\n\nI squinted at the TV. \"It's Simone Halep vs. a new Russian girl, Baraskova, or something.\"\n\nCarrie was staring fixedly at the T.V. \"She's not Russian. She's Ukranian. And she's amazing. Have you seen her play?\" We both admitted we hadn't. \"You're in for a treat.\"\n\nThe match started and it was fierce from the get go. Halep was more experienced, but Iryna Baraskova played with a youthful exuberance that made up for it. As they went to a third set, Mitch spoke up while Iryna was on the screen preparing to serve..\n\n\"I'm calling it. She's gay.\"\n\nCarrie turned around. \"She is not! And you couldn't possibly know that. Besides, you say that about everyone.\"\n\n\"No I don't. Halep isn't gay.\"\n\nCarrie looked back at the screen. \"I don't care if she is or isn't. She's an amazing tennis player. She's gonna be number one in the world someday. And I like watching her play.\"\n\nI was sitting right next to Mitch, and she gave me a significant look Carrie couldn't see, and I remembered what she'd said that one night about Carrie herself. I didn't believe it, but still. I wondered if I'd ever be able to get a straight answer about the way she felt about me. She'd said she was always right, and since I wasn't gay, she wouldn't feel that way about me, so I guess it wasn't an issue.\n\nThe match ended, Iryna pulling off the upset. That made Carrie happy, like really happy, and for a moment I wondered if Michelle was correct, that Carrie had herself a little girl crush. Not like it would matter, but it was something to think about.\n\nCarrie went back to her room, and Mitch and I got ready for bed. \"You want to watch the men's match for a while?\"\n\nI grimaced. \"Who's playing?\"\n\n\"It's Federer vs. Brian Dabul.\"\n\n\"Ugh. That's going to be ugly. How about just an episode of Buffy instead?\"\n\nMitch smiled and nodded. \"Sure thing. Wanna come over here?\"\n\nI looked over at her while she stood up and loaded the DVD. She was wearing what she always did to bed, a pair of boxers and a tank top. I was fully covered in my cotton PJs. Still, it hit me that this was our room, no roommates to worry about coming back, no coach knocking on the door. It was just Mitch and me, alone, in a room, all night, together. And the weird thing is that I wasn't nervous at all.",
        "\"Sure.\" I crossed the room and sat on her bed, grabbing the blanket we usually used and spreading it out, holding her side open. Mitch snuggled in, putting her arm around me as she pulled up the DVD menu. I leaned against her shoulder, loving the feel of being close to her again.\n\n\"Mmm. I missed this.\"\n\nMitch gave me a squeeze. \"Me too. You remember where we were?\"\n\n\"Oh, yeah. I know right where we were.\" I slipped my arm around her waist, something I'd never done before, but it felt so perfect. Friends did this, right? I looked up at Mitch, to see if it was bothering her, but she just smiled at me, those perfect blue eyes dancing a bit.\n\n\"Okay, then here we go.\" She hit play.\n\n***\n\nThe first few weeks of school went great. I felt like I was back home, eating in the cafeteria, working out at the athletic center, going to classes again. And the classes were better, smaller, and with real chances to interact with my professors now that I'd gotten past the freshman weed-out classes. And Mitch was done with math, so she was a happy camper, academically at least, again.\n\nWe went to a few parties; there were always a few good ones right after everyone got back from break, but there was something about Mitch that was different. She always left alone, usually with me. Maybe she wasn't sure about bringing someone to the room.\n\nWe were getting ready for a night out. \"Hey, you know, if you want to have someone over, I'd be okay with it. You just have to let me know.\"\n\n\"Hang a tie on the doorknob, you mean?\"\n\n\"I mean, you just, um, you haven't gone out with anyone since we got back.\" Why did saying that make me feel vaguely sick to my stomach?\n\n\"Just haven't met anyone I'm interested in. You haven't either, y'know.\"\n\nI waved my hand. \"No, no, I told you, I'm taking the year off from boyfriends.\"\n\n\"That doesn't mean you can't hook up.\"\n\n\"It does for me. I don't do hookups.\" I finished putting in my earrings, fake diamonds. \"Y'know, Sherri was asking about you.\"\n\nMitch smirked at me. \"Sherri from downstairs?\"\n\n\"Yeah, she's in 215. She was asking if you were seeing anyone.\"\n\n\"What did you tell her?\"\n\n\"No one that I know of. So, what do you think? Gonna ask her out?\" I tried to keep the fear out of my voice.\n\n\"Sherri?\" Mitch shook her head. \"She's nice, I guess, but I don't think I'm interested.\" I had to hold in my exhale. I hadn't realized it, but I'd been nervous about telling her. I mean, I didn't want to lose her to a relationship. Carrie had gotten herself a new boyfriend a few weeks ago, and we hadn't seen much of her since. Mitch didn't think it would last, but still.\n\nBut at the same time I wanted her to be happy. I definitely didn't have the highest E.Q. in the world, but something told me Mitch wasn't really happy. Don't get me wrong, she was still sassy and bombastic and a lot of fun, but there was something off. I'd asked Carrie and some of our other friends about it, but they all said they hadn't noticed anything. I couldn't shake the feeling, though.\n\n***\n\nI was being chased. Running through the streets of my hometown, but the buildings were strange, wrong. They were bigger, like the ones here on campus.\n\nIt was night, and I couldn't see, but whatever was chasing me was getting closer. I could hear it breathing. I was so scared. I ran. There was an alley to my left, and I turned into it. I could feel their footsteps echoing between the buildings. I dove into a small room, pulling the door shut. There was no way out, and something was pounding on the door. The room got smaller; they were going to get in. I tried to scream for help, but no sound would come.\n\nI heard my name, someone calling for me, looking for me. Oh, God, please find me. The door cracked open, and a hand reached in, inhumanly long fingers, the fear bone deep in my soul.\n\n\"Cindy!\"\n\nHelp, oh god oh god help me please! I cowered into the corner, closing my eyes and curling into a ball. Something touched me, and I screamed, my voice finally finding purchase in my throat. I kicked and lashed out. Something was on top of me and I pushed it aside as I opened my eyes.\n\n\"Cindy! Cindy, wake up.\"\n\nI was in my room, in my bed. Mitch was kneeling next to me, her hand on my shoulder, eyes wide with concern. I scrambled into a sitting position, my heart still hammering away in my chest.\n\n\"Are you okay?\"\n\nI started to cry, the emotions tearing through me. Mitch pulled me into a hug, and I clung to her, weeping on her shoulder as the adrenaline started to leave my system.\n\nMitch held me gently to her, stroking my hair as my body shook. \"It's okay, I've got you. You're safe, shh.\"\n\nI let myself rest in her strength for a second, her soft voice running like cool water over my nerves. My breathing slowly returned to normal and I pulled away, wiping my eyes on my sleeve. \"I'm sorry.\"\n\nMitch's fingers ran through my hair, which was wet with sweat. \"Were you having a nightmare?\"\n\nI nodded, sniffling once. \"I get them sometimes, really bad ones.\"\n\nMitch's eyes were concerned. \"God, you're soaked.\"\n\nI pulled on my pajama top, which peeled away from my skin. I could feel the moisture on my back, too. A hand testing my pillow and sheets told me they were also uncomfortably wet. I made an unhappy little noise, bending down to the floor and picking up the covers I'd kicked off in my panic.\n\n\"Okay, you want to change?\"\n\nI nodded. Mitch stood and helped me to my shaky feet. I went to my dresser and pulled out a fresh set of sleepwear, a loose pink top and shorts. As I changed I took a moment to towel off, while Mitch was doing something next to me.\n\n\"You don't have another set of sheets, do you? 'Cause these need to be washed.\"\n\nI shook my head. We got new, clean sheets once a week on Fridays, which was several days away. I could take them down and wash them myself tomorrow, of course. Nothing like an evening in the laundry room. At least I could study there. Tonight was going to be uncomfortable though. And it was barely midnight.\n\nWhen I finished changing and turned back around Mitch had pulled the linens off, setting them in a pile at the foot of my bed.\n\n\"Where am I supposed to sleep?\"\n\n\"Sleep with me.\" My mouth dropped open, and Mitch grinned and held up a hand. \"I mean, in my bed. I'll even sleep on the floor if you want.\"\n\nI blushed and looked down. \"I should be the one sleeping on the floor.\"\n\n\"Huh-uh. You've had a bad enough night already.\"\n\n\"I'd feel bad.\"\n\n\"Do you want me to sleep up there with you?\"\n\n\"Kinda, yeah.\" I swallowed heavily, feeling my cheeks heat up. A vague memory of falling asleep in her arms after the infamous kiss swam to the front of my mind. \"Would you just, um, hold me tonight?\" Tears stung my eyes. \"So the nightmares don't come back?\"\n\nMitch nodded. She looked scared, but I had no idea why. Shouldn't I be the one scared? And I was. But I was afraid of falling asleep again without her arms around me. I knew, instinctively, I guess, that I'd be safe there. There'd be no nightmares. I gave her a pleading look. I couldn't tell what her face said, even though I knew it was speaking volumes. Mitch nodded, sitting down on her bed and pulling back the covers. She slid under them, scooting as far back toward the wall as she could.\n\nShe held open the covers, and a tear ran down my cheek as I joined her. I turned my back toward her, and she situated the sheet and blanket around us. Our legs touched under the covers, and her palm rested on my waist. I could feel the warmth of her breath on my neck.\n\n\"You okay, Cindy?\"\n\nWas I okay? God, this felt so good. Yeah, I was okay. I reached up and put my hand on hers, pulling her arm around me. I pressed myself back against her. Her arm slipped under my head and I rested in her warmth. \"Yeah. I'm good.\" It was amazingly easy to fall asleep.\n\nI woke still there, wrapped in her arms, and it was the most wonderful feeling. I glanced over at my digital clock. It was still twenty minutes till I had to get up for class, and I wasn't going to move from this spot until I had to.\n\nI ran my finger over her arm, which was draped softly over my waist. She stirred, her hand sliding up and holding my shoulder. She pulled me back against her, sighing softly into my neck, which sent a delicious shiver down my body. I'd been right, there were no more nightmares, and I felt rested. My mind told me I should be confused or scared, but I just wasn't.\n\nUnfortunately the numbers on my clock kept changing, and eventually I had to slip away to the showers and class. Mitch was generally adamant about no classes before ten, so she had some time, and I tried not to wake her.\n\nShe was still asleep when I headed out to class, but when I finished my nine o'clock there was a text.\n\nMitch -- Hey, how you doing?\n\nMe - I'm good. Slept good. After, at least.\n\nMitch -- Awesome. See you at the gym tonight?\n\nMe -- Yeah. Thanks for last night, for being there.\n\nMitch -- Always.\n\nThe day passed as normally as possible, and if I had any anxiety about strangeness when I was with Mitch again, it evaporated as soon as I saw her bright smile. When we got back to the room I noticed my bed was made.\n\n\"Did you...?\"\n\n\"Yeah, I kind of washed your sheets.\"\n\nI looked at her, touched. \"You're kind of awesome, you know that?\" She started to say something, but I cut her off with a hug. \"But I do need to get some work done.\"\n\n\"Okay. I'll leave you to it.\"\n\nWe looked at each other, and for a passing moment I thought she was going to kiss me. And I wasn't sure I'd stop her. But the moment passed, and I pulled away.\n\nI hit the books while Mitch went down to the lobby to watch a baseball game, mostly to get out of my hair, I think. She came back up to the room just before eleven.\n\n\"You still working?\"\n\n\"Do you ever do homework?\" She laughed and sat down on her bed. I rubbed my eyes and closed my laptop. It was late, and I was tired. \"Are you going to bed?\"\n\n\"Yeah, I think so.\" Mitch flopped down. \"You?\"\n\nI nodded, standing up and stretching. \"I'm gonna change and head down to the bathroom.\"\n\nI slipped on my pajamas, the same pair as last night, and headed down to the bathroom to wash my face and brush my teeth. When I got back to the room I was fighting back a yawn. I really was tired. I opened the door and stepped inside, putting my toiletry basket in its spot on my dresser. I looked at my bed. It was made, all nice and neat, and with clean sheets, thanks to Mitch. That was so sweet.\n\nMitch was already under her covers. I looked at her, then back at my bed. I needed to just lie down. But last night had been so nice. And I didn't want another nightmare, and they tended to come in groups. I just stood there for what felt like an eternity, looking back and forth from bed to bed, and I felt so confused and scared.\n\nThen, Mitch looked up at me and just raised her covers in invitation. The confusion in my mind vanished, and I crossed the room and climbed in next to her. My anxiety just vanished as she put her arm around me. This was perfect.\n\n***\n\nI stood in the shower the next morning, just letting the water run over my body. Last night had been the best night's sleep I'd had in months, maybe longer. But I wasn't going to sleep with Mitch, um, I mean, sleep in MItch's bed tonight, though. I could sleep in my own bed, and I really didn't want Mitch getting the wrong idea. Not that she hadn't been the perfect gentlewoman, but she always was around me.\n\nI had a hard time concentrating on class today, which was not like me. I'd always been good at compartmentalizing my life. School, tennis, family, church, they had always been their own little circles, but now in college everything seemed to run together. Even in a huge place like Georgia, college was a microcosm of life.\n\nAnd my life was getting complicated. I needed some distance, and that started by sleeping in my own bed tonight. Luckily I had a study group after dinner. When I got back to the dorm Mitch was in the common room, watching football with a bunch of other people.\n\n\"Hey? Join?\" She motioned to the pseudo empty spot next to her.\n\nI took a deep breath and shook my head. \"I got some stuff I gotta do.\"\n\n\"Okay. Oh, come on! That's a hold!\"\n\nOne of the guys laughed. \"He only tackled him. Big deal!\"\n\nI took the opportunity to slip to the stairwell door, but I glanced back at Mitch as I went through. She looked back over her shoulder just at that moment and smiled at me. I felt my heart do a little flip, and I couldn't help but smile back.\n\nI was able to get an hour or two done on my Money and Banking reading, and I was finally starting to flag when the door opened and Mitch came in.\n\n\"Hey, Cindy.\"\n\n\"Hey, you have fun?\"\n\nShe walked up behind me. \"More than you.\" She picked up my textbook. \"Geez, this is dense.\"\n\n\"Hey, I like Econ.\" She set it back down, and I turned back to it for a moment before I felt surprisingly gentle hands on my shoulders, rubbing softly. I couldn't help letting go a sigh and leaning back. \"Mmm, that's nice.\"\n\n\"You're tense. Rough day?\"\n\n\"Just stuff on my mind.\"\n\n\"Like what?\"\n\nI looked up and smiled at her. God, she has beautiful eyes. \"It's nothing. I'm just tired.\"\n\n\"Okay. You coming to bed?\"\n\nEverything I'd been arguing with myself came to a head in a moment. No, I was sleeping in my own, less confusing bed tonight. I had to. I opened my mouth to say so. \"Yeah. I'll be there in a minute.\"\n\nHer smile just melted me, and twenty minutes later I was in her arms, and my heart sighed in happiness. This was so nice. I put my arm over hers and relaxed into sleep.\n\nI had a similar argument with myself every night for the next week, my internal protestations getting weaker and weaker with each passing day. And each night I looked more and more forward to sliding under the covers and into Mitch's arms. After a fortnight I'd stopped fighting it.\n\nIt was Sunday, a lazy morning. Normally I had to get up way before Mitch did, and even on Saturday I was always up first. But Sundays were different. I just lay there, feeling her arms around me.\n\nShe stirred behind me and pulled me tighter. \"Good morning.\"\n\n\"Morning.\" I ran my fingers absentmindedly over the soft skin of her arm. \"So, do you hate that I keep hogging your blankets every night?\"\n\nShe nuzzled into my hair, which sent a deliciously pleasant shiver down my body. I had to stifle an audible sigh. \"Yeah, it's horrible, having someone who keeps me warm.\"\n\nI turned around. It was incredibly intimate, our faces inches away from each other, legs touching under the covers, my arm on her waist, but it didn't feel awkward at all. In fact, it was the most natural thing in the world.\n\n\"But wouldn't you like, um, someone, who'd, you know,\" I started to blush, \"keep you warmer?\"\n\n\"You mean someone to have sex with?\" The heat in my cheeks doubled in intensity, which made Mitch smile. \"That'd be nice, but I don't think all three of us would fit.\"\n\nI giggled. \"Stop it. You know what I mean.\"\n\nShe kept her smile, but I thought her eyes looked sad. \"Don't worry about it. I'm just wondering how you're going to get any sleep when I'm gone next weekend.\"\n\nI felt a pang at the remembrance. Her cousin was getting married in Jacksonville on Saturday, and she was heading down to meet her parents there for the weekend.\n\n***\n\n\"So she's going to be gone all weekend?\" Carrie set down with her grilled chicken sandwich.\n\n\"Yeah. A wedding. I reckon she's aiming to find a curious bridesmaid to defile.\" It was weird. We used to joke about such things all the time, but now just saying it made me feel bad.\n\nCarrie gave me a funny look. \"I don't really think that's something you have to worry about.\"\n\n\"Pfft, I'm not worried. Why would I be worried? She can sleep with anyone she wants.\" And I'd have to sleep alone. I hated that idea. But I couldn't say that to Carrie. I hadn't confided in anyone regarding our recent unconventional sleeping arrangements. And, mind-blowingly, Mitch had been the soul of discretion.\n\nCarrie's strange look hadn't gone away, and I decided to push a little. Maybe Carrie'd noticed something I hadn't. \"It is weird, though. She doesn't seem to be going out as much this semester. And I don't think she's been gone overnight once since we got back.\"\n\n\"She's spending a lot of time with you, though.\"\n\n\"Well, yeah, she's my roommate, and my best friend. Why would that...\" realization broke over me. \"She is not interested in me like that! Besides, she's knows I'm not gay.\"\n\n\"Right, 'cause no lesbian has ever fallen in love with her straight best friend.\"\n\n\"In love?\" My head swam for a second. Mitch, in love with me? A vision of her holding me in bed while kissing the back of my neck appeared in my head, me turning in her arms, us pressing our lips together. That same shiver passed through me, this time lingering in my, well, my somewhere. You can use your imagination.\n\nCarrie's face got serious. \"Just be careful. I don't want one of you to hurt the other.\"\n\nI nodded. I didn't want to hurt Mitch. God, she was the most important person in my life, and that thought stayed with me all through my afternoon classes and study time. What if Carrie was right, and Mitch was in love with me? Or, at least, if she had feelings for me? Was I the reason she hadn't been out with anyone. And I'd pushed it, sleeping in her bed every night. God, that was so stupid. What had I been thinking?\n\nBut the thought of her with another woman made me hurt inside. I knew our intimacy wouldn't survive either of us being really with someone. For the first time in a while I hesitated before climbing into bed with my friend. It was Thursday night, and Mitch would be leaving tomorrow afternoon. I told myself one last night here, and that I was going to enjoy it.\n\nOn Friday night Carrie tried to get me to go out, but I refused. I ended up watching movies in my room alone until early in the morning. I woke up the next day in Mitch's bed, holding one of her shirts. I barely remembered grabbing it. What was going on with me? This is my decision. I would sleep in my own bed from now on. And I had to remind both Mitch and myself what I was.\n\nIt didn't take much to find out where the parties were on Saturday night. I was going to go, I was going to dance, I was going to find a guy I was actually attracted to. I might even hook up.\n\nI worked out with Carrie as usual, and we went out and hit some. I told her about my plans for the night like they were no big deal, trying to convince myself more than her I think. She said she wanted to go with me, but she had a date tonight. That was fine. I wasn't sure I could do this with an audience.\n\nWhen I made it back to my room I pulled out my tightest pair of jeans with a white, spaghetti strap halter top that I only owned because I'd promised my parents I'd never wear it without an over shirt. It showed both a bit of midriff and some cleavage, and it would do.\n\nI took time with my makeup, trying to be a little more daring while pushing the voice of my mother, which insisted on slut shaming me, to the back of my head. One foot in front of the other, and found myself walking up the steps into the frat house, where the lights and music pulsed out into the night.\n\nI went straight to the drinks and grabbed a red cup, which I filled from the keg myself. I felt really vulnerable, being here by myself, and I remembered seeing a thing online that warned people to never take a drink from a stranger. Everyone here was a stranger, so I was going to hold on to this cup all night if I had to.\n\nI scoped out the scene. There were plenty of guys, and one of them was looking at me from across the room. I felt like I wanted to shrink into the wall. Apparently he got the hint, because he didn't approach me, and I made my way around the house. The dancing was going on out back on a huge back patio, where lights had been strung up all over the place. To be honest it was more than a little tacky, but then again, few people would accuse the average frat boy of being an expert decorator.",
        "The music system, on the other hand, was slammin'. I stayed on the outskirts, doing my best impression of a wallflower. Saying I was nervous was an understatement, but I needed to get the show on the road before I lost all my nerve.\n\nI moved out onto the dance floor, pushing aside my nerves. I tried to focus on the music, and had almost succeeded when I felt a hand on my hip.\n\nI started, turning around a little too quickly, bumping into a tall, broad chested young man. I took a step back. \"Oh, I'm sorry.\"\n\nHe smiled at me. It was a nice smile, I guess. It didn't creep me out too much, at least. \"It's okay. You here alone?\"\n\n\"I have some friends around.\"\n\nHe grinned and moved a little closer. \"That's not what I meant.\"\n\n\"Oh. Then yes.\"\n\n\"Good.\" He slipped his arms around my waist. \"In that case would you like to dance?\"\n\n\"Sure.\" I forced myself to reach up around his shoulders. My smile stayed intact, not without effort. I had a lot of practice dancing with Ethan when I really didn't want to, and I put that to use now. I rested my head on his chest and tried to relax. He did smell good, at least. Maybe if I just gave it a chance, this time it would be different.\n\nThe music stopped. \"Hey, you want to go get a drink?\"\n\nI nodded. \"Sure.\"\n\n\"So what are you studying\"\n\n\"Economics. How about you?\"\n\n\"Criminal justice.\"\n\n\"So you're going to put bad guys away?\"\n\n\"That's the idea.\"\n\nHe got me a beer, which I watched him pour and hand to me. We talked about my playing tennis, and he told me some crazy stories about frat life. He was funny, but obviously on the prowl, as he was getting a little closer every chance he got. Eventually he led me back out to the dance floor, and he held me close, cheek to cheek. After a minute he turned his face toward me, pushing my nose to the side and kissed me.\n\nUntil that moment I had hope. He was nice, tall, well made. Maybe this one I'd like. Maybe this time all those things I'd read about and seen in the movies would happen, finally. Maybe it would feel as wonderful as it had when Mitch and I had, no, don't think about that.\n\nNothing. God bless it, nothing. He deepened the kiss, apparently completely oblivious to the way I was feeling. I allowed it, because that was what I did. But I wanted it to stop. After a few moments it did. He looked down at me, completely misreading my expression.\n\n\"C'mon, let's get out of here.\"\n\n\"I don't...\"\n\n\"It's fine, it's my house.\" He pulled me back deeper into the building and I followed. Looking back now I don't know why I did. The dancing, the kissing, it was all wrong. And this, going upstairs with him, it was beyond stupid. But I did it, my last, desperate attempt to deny what was happening in my life.\n\nSuddenly I was alone with him in a room, his room, I guess. He moved me back to the bed, pushing me back onto the mattress before covering me with his body and kissing me again. My brain was reeling. Why was I here? I wanted to be in my room. I wanted Mitch to be holding me. As his hand slipped under my shirt I finally found my voice.\n\n\"Stop, stop, please.\"\n\nFor a horrifying moment I didn't think he was going to. Panic was just starting to fill me, and I was getting ready to fight when he rolled off me. \"What's wrong?\"\n\nI scooted up the bed, tears streaming from my eyes. \"I'm sorry, I can't do this. I'm sorry.\"\n\n\"What? Fuck. Seriously? Goddamn, you fucking tease.\"\n\nThat made me sob harder, pulling my knees up to my chest and wrapping my arms around my legs. He rolled off the bed and left, slamming the door behind him as he went, leaving me crying in the dark\n\nWhat was I doing? Why the hell was I here? What was I trying to prove, and to whom? That I wasn't gay? Ethan and I had broken up in May, so I'd gone five months without a boyfriend, the longest span since I'd started dating at sixteen. Honestly, I hadn't missed it at all, and I knew the biggest reason for that was Mitch. I couldn't even begin to describe how much I wanted her to come rescue me, how badly I wanted to feel her arms around me.\n\nBut she wasn't here. She was six hours away in a hotel, probably making some other girl really happy. I hated that girl, whoever she was. How dare she put her hands on my Michelle? But Mitch wasn't mine. Why did I think of her that way?\n\nShe'd been my other half for months. The one I wanted to talk to when something good happened, the one I wanted to spend time with. I looked down at my phone, pulling up our text string, reading over the little jokes and everyday notes we sent to one another. She was so easy to talk to, always funny, always available. To me anyway. I'd seen her ignore things from others when I was with her, but she never ignored my texts. Maybe Carrie was right, and that meant something.\n\nThe door opened, and another couple stumbled in, kissing and fumbling with each other's clothes. I needed to get out of here.\n\nThe young woman noticed me, \"Oh, shit, sorry.\" She looked closer at me. \"Are you okay? Aaron, stop.\"\n\nThe guy pulled his face out of her neck. \"What's wrong, babe?\"\n\nThe girl pointed at me and took a step forward. \"Sweetie, are you okay? Did something happen?\"\n\nI shook my head. \"No, I'm sorry. I'll go. Sorry.\" I walked quickly past them, wiping my eyes before making my way back through the house and out into the night, alone with my thoughts.\n\nIf what Carrie said were true, Mitch deserved more than I was giving her. She needed a real girlfriend, not some confused straight girl who'd tease and cuddle but never really be hers. She deserved someone who wanted to be with her in every way, and someday she'd want that, too. And then she'd end up resenting me for putting her through this.\n\nSomehow I managed to end up in front of my dorm, and I made my way up to my room. I stripped off my clothes and grabbed my robe, heading down for a hot shower. I needed to wash this whole experience away. As the water ran over my body the tears came back. They weren't in response to what had just happened, it would be quite awhile before I grasped how truly lucky I had been regarding that, rather it was the thought of losing Mitch, what it would feel like when she inevitably found someone who'd give her what she needed.\n\nAn image of Mitch with another girl jumped into my brain. Mitch was laughing as they hugged, while the other girl's face was beaming with happiness. Then they kissed. I remembered what kissing Michelle had felt like, the warmth that had flowed through me. Oh my god, I might never feel like that again.\n\nThe bathroom stayed blessedly empty while I washed my face, and afterwards I stumbled miserably back to the room. I never even considered climbing into my own bed, instead curling up under the blankets that Mitch and I usually shared. The shirt I'd slept with last night was still tangled up in the sheets, and I pulled it to my face and breathed in Mitch's scent. I felt so alone, the wrongness of it bringing back the tears, and I cried myself to sleep.\n\nLooking back I feel so stupid, with the answer staring me in the face. But at the time I was heartbroken. I was also exhausted, but I couldn't sleep, so I dragged my sorry self out of bed and down to the cafeteria for some breakfast. I was so nervous about Mitch coming home. I wanted to see her so badly it was hard to think about anything else, but at the same time I was terrified about listening to any stories she was going to bring back from the wedding.\n\nI sat alone in the corner, picking at my eggs, when two girls came into the cafeteria. One had short red hair, the other's was longer and brown, and they were dressed nicely, like they might be headed out to church afterwards.\n\nThe place was empty and I could easily hear their conversation. They set their trays down and the redhead put her hand on the small of the other's back, making my eyes go wide.\n\n\"You want some OJ, babe?\"\n\n\"Sure, sweetie, thanks.\" The brunette smiled at her girlfriend, and I knew they were together. Red went up to the drink station and grabbed two glasses. When she made it back to her table, the grin on her girlfriend's face made it obvious how they felt about each other.\n\nJust before Red sat down she ran back up to the front and grabbed a handful of napkins, and when she came back I could see her face, how she was looking at her girlfriend. My mouth dropped open, and I snapped it shut. I recognized that look. I'd seen it dozens of times. It's how Mitch always looked at me. It was the way she always smiled at me. Maybe Carrie was right.\n\nI took a good look at the other girl. She was very feminine, not at all what I imagined a lesbian would look like. And I realized that I'd always made a distinction in my head between someone who might succumb to Mitch's charms for an evening, and a real lesbian. But there was the antithesis of my prejudices sitting right in front of me. Seeing her walk down the street I never would have known. She could have been sitting next to me in class or in one of my study groups, and I'd have had no idea.\n\nI watched them as they ate and talked, the easy way they were together. It made me miss Mitch even more. Could I have that with Mitch? The romantic thing to say would be that I had some thunderbolt moment, but the truth is I struggled with it. The concept that I was straight was so central to my way of thinking about relationships that the possibility of anything different was going to take a lot to penetrate my thick skull, but that was the start.\n\nThe couple I'd been watching ate quickly, and I watched their hands slip into one another's as they left. What would it be like to hold Mitch's hand as we walked, to lean against her knowing there were no boundaries between us? But could I do it?\n\nI'd always prided myself on being a no-nonsense, bottom-line kind of girl. I made decisions with my head, not my heart, and that included relationships. I'd always made decisions, what courses to take, what shots to hit, even who to date, based on what I thought was the smartest thing to do. I mean, if it was the smartest thing, it was the correct thing, right?\n\nAnd the bottom line was this: I couldn't be in a relationship with Mitch. I'd lose my family. They'd never accept me as a lesbian. I'd find it hard to get a job, we wouldn't be able to get married, have children. I wouldn't be able to have a family. I'd face ridicule and persecution every day. No, it just wasn't possible. It was the right decision, so why did it hurt so much?\n\nAs the day wore on I got more and more upset. I stayed in my room the whole time, trying to study and both hoping for and dreading Mitch getting home. But when the door opened, and I looked at the smiling face of my best friend, all my resolve broke.\n\n\"Hey, Cindy. What a drive.\" Her face was tired, without her customary grin.\n\n\"Hi.\" I stood up as Mitch dropped her bag on our bed. I took a hesitant step forward. \"You okay?\"\n\nA tired smile. \"Yeah. Long weekend. It's good to be home, though.\"\n\n\"I'm glad you're back.\" My voice cracked as I said it. Mitch's face was concerned, and she put her hand on my shoulder.\n\n\"You okay?\"\n\nI went towards her, my face screwing up in emotion as she pulled me into her embrace. I rested my head on her shoulder as her strong arms went around me. It had been literally only two days, and I had missed this so badly I was almost crying. \"I missed you.\" I don't think I let her go for the rest of the evening, and we cuddled together until the sun was long down, only stopping long enough to find some dinner at some point.\n\nWhen Mitch finally pulled the covers around us for bed she whispered in my ear. \"I missed this.\"\n\nI held her arm. \"You didn't, I mean, with anyone?\"\n\nShe pulled me a little tighter. \"No. No one else.\"\n\nI let go of the metaphorical breath I'd been holding since she'd left. She was still mine, and only mine. And that made me giddy inside, just for a moment, before I remembered how selfish that was. If I were her girlfriend I'd turn around and kiss her right now. I'd let her roll me onto my back as she nuzzled my neck, her hands running over my body as I breathed in her scent.\n\nAnd as I thought about it, and as my body relaxed toward sleep, I felt a tingle build deep inside me. My lips hummed at the memory of our one kiss; my skin was electric everywhere we were touching.\n\n***\n\nI had a dream that night. I walked into a house from the garage. I didn't recognize it, but it was my house, I knew it was. Something smelled amazing, and I set down my briefcase on the counter.\n\n\"Mommy!\" A little voice sounded and little feet ran towards me, and I scooped up a little girl who kissed me on the cheek. \"Mama's making pasghetti and me-balls!\"\n\n\"She is?\" I spoke with mock astonishment and made my way into the kitchen where a tall, short-haired woman was standing at the stove. She turned towards me, and she smiled.\n\n\"Hey, sweetheart. Dinner'll be ready soon.\" She stepped toward me and I kissed her, like it was the most natural thing in the world. Suddenly we were standing in our living room, and there was music, and we were dancing slowly together.\n\nMitch whispered in my ear. \"Think she's asleep?\"\n\nI looked upstairs towards our daughter's room. \"I hope so.\"\n\n\"Then it's time for me to take you to bed.\"\n\n\"Yes, please.\"\n\nShe leaned forward and my eyes closed as she kissed me, and I woke up. My heart was beating fast. I shifted slightly, and I could feel the wetness between my legs. Mitch's arms were still around me, where they always were, and it took me a second to remember that we weren't married.\n\nBut that little girl had been our daughter, the two of us, together, somehow. And I wanted it. I wanted to come home to Mitch and our children, I wanted her arms to be waiting for me every night. Mostly, I wanted to know what it was like to be with someone I loved.\n\nAnd I did love Mitch. That wasn't even an issue. The question was could I be what she needed? Not just someone to love, but a lover. That thought plagued me over the next two days, and I thought about it a lot. And, of course, me being me, I did research, finding the quietest corner of the library and typing in a search I never, in my life, thought I would.\n\nI looked at the positions on the screen, closing my eyes at times and imagining the drawings were Mitch and I. I got those tingles again, and they were getting stronger. And when we went to sleep at night, and Mitch would touch me, I wanted more. What we were doing was starting to feel, well, incomplete, I guess.\n\nI wasn't sure what else I wanted, exactly, but the more I studied lesbian sex, the more I was starting to get an idea. To be honest, the thing that scared me most was whether or not I could do the things I kept seeing for Mitch. I mean, let's face it, you don't really have to do much to keep a boyfriend happy. Usually just lying there and letting them do their thing is good enough. But that definitely wasn't the case here. I was going to have to be a lot more, um, proactive about things if I was going to be the lover Mitch needed.\n\nThe surprising thing was, to me at least, that I wasn't revolted by the idea of going down on her. I wasn't sure I could do it, but the more I read about it, the more I was willing to try. And, additionally, the more my knees went weak at the thought of Mitch doing it for me.\n\nOnly one of my boyfriends had been willing to try, and that one experience had lasted less than thirty seconds. But even so, it might have been the best thirty seconds of my sexual life. Granted that wasn't saying much, but still. I'd never asked again, because I knew he hadn't liked it, and good girls didn't request such things.\n\nBut I'd heard Mitch talk about how she'd sent girls screaming into the heavens, and I knew she'd spend a hell of a lot longer than half a minute on me if I let her. And god, I was beginning to be sure I wanted to let her.\n\nThursday night, after we got ready for bed, after Mitch pulled the covers around us, she whispered in my ear.\n\n\"Cindy, you okay? You've been nervous.\"\n\nI cringed inside. \"Really? I'm not nervous.\" Oh, hell, I was so nervous. Especially since every night I'd been relaxing a little more into Mitch's embrace, wanting to get closer and closer to her.\n\n\"Uh-huh.\" She clearly didn't believe me. Damn, why did she have to be so good at reading people? \"Is this okay? Do you, do we need to stop doing this?\" There was real concern in her voice, and a bit of hurt, though she was trying hard to hide it. Okay, maybe she wasn't reading me as well as I thought.\n\n\"No, I, uh, I love doing this. I mean,\" I snuggled closer to her. \"You know what I mean.\" I hesitated for a second and took a deep breath. \"Do you really want to go to that party tomorrow night at Epsilon Chi?\" She'd mentioned it tonight at dinner, but I decided, right at this moment, that I couldn't have another week like this one, and it was time to fish or cut bait, as my grandfather would say.\n\n\"Mm, take it or leave it. Why? Do you have a better idea?\"\n\nOh, so many ideas. \"I kind of just wanted to hang out with you. Just the two of us.\" God, my heart was in my throat.\n\n\"Okay, sure. Just me and you. Maybe some Buffy?\"\n\n\"That sounds good. Goodnight.\"\n\nThe next day was absolutely interminable. I was going to try to seduce Mitch tonight. Holy crap, what the hell was I thinking? I was completely insane! I couldn't do this. But I knew I really didn't have to. If Carrie were right, and I thought she was, all I had to do was give Mitch permission, and she'd take it from there. At least for the first part, the her going down on me part. I assumed that's what would happen, anyway. And I'd made the decision I was going to reciprocate, no matter what. I'd run across the term 'pillow princess' in my studies, and I was not going to be one of those.\n\nMy classes dragged on, and I studied in my off hours. I wanted nothing schoolwork-wise hanging over my head this weekend, in case things went really well.\n\nI was changing at the sports complex for our usual, and generally abbreviated, Friday workout when Mitch walked into the locker room. She smiled at me, and I felt the butterflies erupt in my stomach. She was so handsome. And those eyes. God, I could lose myself in those eyes. Any question in my mind about whether I was doing this evaporated. I wanted this. So help me, I wanted her.\n\nI just wanted dinner to be over. I had almost no appetite, although I made myself eat something, just to keep Mitch from asking if there was anything wrong. I was scared to open my mouth and talk, lest everyone at the table figure out something was up. Mitch wasn't fooled though, and she asked about it as soon as we got back to the room.\n\n\"You're quiet tonight. I'm gonna figure out what's going on in that ridiculously pretty head of yours. You know that, right?\" She had mischief in her eyes, and I couldn't help but smile back. If only she knew.\n\n\"If you're nice to me maybe I'll tell you.\" I put a tease in my voice that made Mitch cock her head in curiosity.\n\n\"Fine, be mysterious.\"\n\nI threw in some popcorn as Mitch connected her computer to our little TV and started up Buffy.\n\nI emptied our buttery snack into a bowl and snuggled up to Mitch, holding it in my lap and leaning back against her. \"Is this a good one?\"\n\n\"Absolutely. 'Hush' might be the best episode in the whole series. The only other stand-alone episode even in the conversation is the musical episode from season six.\"\n\n\"There's a musical episode?\"\n\n\"Yup, it's amazing. But we'll get there.\"\n\nShe started the show and put her arms around me, and I made myself relax. It wasn't nearly as hard as I thought it was going to be. I was with Mitch, after all. My favorite place to be.\n\nWe watched two episodes before I decided it was time. The sun had gone down, and we hadn't turned on a light other than the TV.\n\nMitch pressed her cheek against the side of my head. \"Another one?\"",
        "\"Um, not yet.\" My heart was thumping, and I extricated myself from Mitch's embrace, wondering if another, more intimate one was coming, or if that would be the last time she ever held me. Please, please, don't let it be the last time. \"Mitch, I need to ask you a question.\"\n\n\"Okay, shoot.\"\n\n\"No, I'm serious, and you have to promise me that you'll tell me the truth.\" My voice was shaking.\n\nThe playful smile evaporated from her face. \"Cindy, what's this about?\"\n\n\"You have to promise. Even if it's hard, even if it's scary. The truth.\"\n\n\"Okay, I promise.\" Her eyes were scared, so I reached out and took her hand.\n\n\"Michelle, are you in love with me?\"\n\nThe terror on her face quadrupled instantly, and she looked like she wanted to run, but she didn't. \"Cindy...\"\n\n\"Mitch, you promised.\"\n\nThe fear drained away, replaced by abject misery. \"I'm sorry. I know it's stupid, and you can't, um...\"\n\nI moved closer to her. \"It's not stupid, but you haven't answered me.\" I reached out and cupped her cheek, brushing away a tear with my thumb. God, she was crying. I'd never seen that before. \"Are you in love with me?\"\n\n\"Cindy, you're my best friend.\" Tears were running freely down her face now. \"You're the most beautiful, smartest, most incredible woman I've ever known, and when I hold you I feel like I can fly. Of course I love you. But I don't want to lose this.\"\n\nI was crying, too, but I had to speak. \"Mitch we can't keep going on like this, not like it is. I've been using you, like, in place of a relationship. And you, you need more than what I'm giving you.\"\n\nHer eyes went wide. \"No I don't! I'm happy like this, with you. It's enough.\"\n\n\"No, it's not, sweetheart.\" I touched her beautiful face, wiping away a tear. \"You deserve so much more. Someone who wants to be with you. I mean, in every way. A girl who can't wait to kiss you, who wants to make love to you. You need that.\"\n\n\"No, I don't! I just need you.\" Her voice was terrified and desperate, like her worst nightmare was coming true, and it broke my heart.\n\n\"No, Mitch, you need more. And I want to give it to you.\"\n\nDumbfounded disbelief spread over Mitch's face. \"Wh-what?\"\n\n\"I want to be yours, in every way. And I want you to be mine. I want to try, y'know, to be an us.\"\n\n\"Cindy?\" She didn't believe me. I needed to try harder.\n\nI moved closer to her, wrapping my arms around her, whispering in her ear. \"Do you have any idea how much I missed you last weekend? I pictured you with someone else, and it hurt so much. I don't want there ever to be a someone else. And you're not the only one who loves it when you hold me. I've been trying to tell myself for weeks that I needed to get some distance, to sleep on my own. And every night I end up back in your arms, because it's wonderful. You make me feel safe, and loved, and I can't live without it.\"\n\nShe reached out almost reverently and touched my waist with both hands. Her body was shaking. \"Cindy, I don't know what to do.\"\n\n\"Kiss me. We'll figure it out from there.\"\n\nHer forehead rested against mine, and I could feel the heat of her like a furnace. My own body was raging with desire, like nothing I'd ever felt, and as our noses touched and our lips feathered against each other, I knew I'd never wanted anything more than I wanted this.\n\nAnd then she kissed me. I remembered the heat of our moment last spring, the way the energy had coursed through me. I'd told myself a myriad of times that it hadn't meant anything, because I'd been drunk. In a way I'd been right. It was nothing like this. Every nerve ending in my body seemed to explode with electricity, my whole body humming and singing, doubly so for the parts of me Mitch was touching. I sighed lustily into Mitch's mouth, pushing myself against her as she wrapped me in her arms.\n\nOur mouths opened in unison, tongues touching gently, seemingly doubling the pleasure of the kiss. I don't know how long it went; minutes, days, but it was perfect. When we finally broke apart I was breathing heavily, my pulse pounding\n\nMitch's eyes danced. God, they were so beautiful. \"Good?\"\n\nI sighed. \"Oh, yeah. More, please?\"\n\nHer mouth found mine again, but only lingered a moment before moving to my neck, my chin lifting as the most exquisite sensations filled me. Her hand cupped the back of my head, her fingers digging into my blonde hair, and I rested against her.\n\nHer hand moved down over my leg, tracing along my bare skin, and back up over my soft cotton shorts. A single finger slipped in between the waist of my shorts and my top. Mitch pulled away and looked me in the eyes as the rest of her hand slid underneath and rested against the bare skin of my back. She was silently asking permission, and, oh my god, the answer was yes.\n\nI reached down and grabbed my halter and pulled it over my head, tossing it onto the floor, watching Mitch's eyes go wide as she took in the cleavage created by my bra. I'd worn a nice one, just for this moment, and it totally paid off. She looked up into my eyes again, and this time her wicked smile was back.\n\nI stroked her hair. \"All for you.\"\n\nShe growled, burying her face into my chest, kissing along my collarbone over the skin of my chest, trailing fire behind. I moaned and threw my head back, wishing her lower. I didn't have to wish for long, as Mitch's hands traced up my spine, and moments later the tension in my bra released. I shrugged the material over my shoulders, letting it fall away to the floor.\n\nOne last kiss, and Mitch pulled away. \"You are so beautiful.\" Her fingers traced along the crease in my skin left by the underwire, back to front, until she was cupping my breast. I'd always considered them to be solidly average, big enough, but nothing to get excited about. Given the look on her face, though, I don't think Mitch agreed. Her mouth hung slightly open as she gazed reverently at what had been revealed, and I could barely breathe with anticipation.\n\nHer thumb turned a slow circle around my nipple, and a shiver of pleasure radiated down my body. I felt it in my fingers and toes, but mostly between my legs, which I realized was humming with warmth. I shifted in Mitch's lap, and the feeling intensified. That was new, and I liked it.\n\nI didn't have long to ponder, though, before Mitch leaned forward and took my other nipple into her mouth, and I threw my head back.\n\n\"Oh, my GOD!\" I'd never felt anything like it. My whole body, already buzzing in anticipation, seemed to explode in joy. I held her head to me as her mouth worked and suckled. It was pure heaven. Her tongue flicked, her teeth nibbled, and I pressed myself against her as the exquisite sensations echoed through me.\n\nJust as I started to get used to it she switched sides, and I moaned with abandon as I ran my fingers through her short, dark hair. I rested my face against her head, kissing her gently on the crown, inhaling the scent of her.\n\nI shifted, wrapping my legs around her waist as her mouth trailed up my neck and our lips came together. This kiss was completely different. The first I'd wanted. This one I needed, and desperately. Eventually our mutual need to breathe forced us apart. I rested my forehead against hers, trying to control my breathing.\n\nI wanted to say something, but I couldn't. All I could do was feel the heat of Mitch's body, and I wanted to just drink it in. The intensity of her gaze was amazing. I'd never seen anyone who wanted me so badly, and I wanted to give myself to her.\n\nMitch leaned forward, gently holding me as she lay me back onto the bed. My head settled into the pillow, and she overshadowed me. I ran my hands over her back as she kissed me, feeling the material of her T-shirt. I needed to feel her skin against mine, so I tugged at it, but with our bodies pressed together I didn't make any headway.\n\nMitch sat up, swinging her leg over my waist. She towered above me as I reached up to touch her, and as I did she stripped off her top, and I ran my hands over her firm, flat stomach and up to her sports bra.\n\nShe gave me one of her wicked little grins. \"You want me to take this off?\"\n\nI stared at the garment in question, mouth open slightly, and nodded. I was desperate to see it off. Obviously I'd seen her in shower, I mean, she wasn't exactly shy, but this was so different. This was for me, just me, and I couldn't wait.\n\nOff it went, joining her shirt on the floor, Mitch's breasts bouncing free. They were smaller than mine, tipped with dark brown areolae no bigger than a nickel. But her nipples were good sized, and they looked delicious. I reached up so slowly to touch them. They were warm and soft, a strange dichotomy with the rest of Michelle's hard, lean body. And they were incredibly beautiful. I pinched one, making Mitch close her eyes and hum.\n\n\"Mm, that's nice.\"\n\n\"Yeah?\"\n\n\"Oh, yeah.\"\n\nI stared at them for a moment. \"Can I...?\"\n\nMitch nodded and scooted down my body so I could sit, pulling myself up using her back. I kissed her once right in the center of her chest before moving my head to the right and taking her breast into my mouth. I can't really describe what it felt like. I'd given a lot of thought over the last few days about my ability to kiss other parts of Mitch's body that I hadn't really thought about this much, and that was a real shame.\n\nIt was so intimate, her gently holding me to her as I suckled her breasts. They were so soft, though the tips were just firm enough, and I lost myself in them for a few moments. The feel of her warmth, smell of her skin, the soft sounds she was making, they all filled me up. I switched to the other breast, going back and forth as I wanted, until Mitch slid a finger under my chin and lifted my face to hers and I melted into her kiss.\n\nShe broke away, cupping my cheek with her palm. \"Lie back.\" Her eyes were intense and mesmerizing, and all I could do was nod and obey. She lay next to me, our eyes locked onto each other. She kissed me softly before moving her lips down to my neck, which I did my best to expose. Her hand caressed over my hip and down my leg, circling around my knee and tracing back up my inner thigh.\n\nA shudder coursed through me, the two points of ecstasy ricocheting against each other in my body. I opened my legs, desperately hoping she would touch me there. The tips of her fingers slipped under the leg of the pair of loose shorts I was wearing, finding the crease my leg made with my body.\n\nMy eyes shot open and I gasped. Mitch immediately pulled away. \"Cindy?\"\n\n\"No, it's just... intense.\" I looked her in the eyes, those perfect, beautiful blue eyes. \"But I don't want you to stop.\" My voice dropped to a desperate whisper. \"Please don't stop.\"\n\nThat little grin spread back over Mitch's face as she pulled her hand away for a second, just long enough to move it around to the front, and she began rubbing my pussy through the soft material. My eyes closed, and I moaned into the night as the most exquisite feeling I'd ever experienced rolled through me.\n\nI'd wondered many times if I'd chicken out when we actually started doing this, assuming I ever got the nerve to start. That had been a needless worry. I'd literally crawl across hot coals to keep feeling like this. The thrill of being touched, held close, laid down and loved on, it was all new.\n\nMy hips undulated against Mitch's hand, and I felt myself being carried higher and higher. Just as I was about to ask for more, or harder, or something, Mitch pulled her hand up and rested it against the flat of my tummy, her fingers playing with the waistband of my shorts for a second before sliding underneath.\n\nMitch's eyes searched mine for permission, and I nodded hastily, desperate to feel her touch me. I thought she would stay above my panties, but Mitch was too impatient for that. God bless her.\n\nHer fingers slid under my shorts and my cotton panties below them, two diving directly into my soaked sex. I cried out, my back arching as she began to caress my clit. I turned and buried my face in Mitch's shoulder, clinging to her as they glided up and down my most intimate places.\n\nThe pace slowed. Mitch obviously wanted this to last, and her voice was soft in my ear.\n\n\"You're so wet.\"\n\nI looked up at her. She was grinning ear to ear, and I returned her smile. We both knew what it meant. I wasn't broken. There'd never been anything wrong with me. I'd just been with the wrong person. And now I was with the right person, and my body was responding just like it was supposed to. I should have been with Mitch all along.\n\nThe realization of that made a tear leak free from my eye.\n\n\"Oh, baby.\" Mitch pulled me close and kissed me as her fingers began to move faster over my sex, and I just dissolved into her, moaning and gasping into her mouth until the spring coiling in my body finally snapped, and I began to buck and pulse as my orgasm claimed me.\n\nIt wasn't my first, of course. I'd managed to give myself a few before. But I'd been taught masturbation was wrong, and the guys I'd made myself think about the infrequent times I done it hadn't helped matters. I'd never come even close with anyone else.\n\nBut this, this had been beyond amazing. I had no concept it could feel so good. And as Mitch kissed me I knew I wanted more, and I wanted them with her.\n\nShe gently nuzzled my hair. \"Did you like it?\"\n\nI nodded, not trusting myself to speak quite yet.\n\n\"I loved doing it for you.\"\n\n\"I...I didn't know it could be like that.\"\n\n\"That was just the beginning.\" The husk in Michelle's words made me shiver, and my response came out as a girlish whisper.\n\n\"Really?\"\n\n\"Oh yeah.\" She ran her hand through my hair, her eyes inches away from mine. God, I couldn't breathe. \"I wanna taste you.\" She lowered her mouth to mine and we kissed. God, I loved the kissing, and the touching, she was so gentle. I just nodded, the thought that this was going to get better making me tremble inside.\n\nI lay back, and Mitch's mouth moved over my chin and down my neck. She spent some time worshipping my breasts, which felt as amazing as before, but there was something in the way she shifted her body that told me she wasn't going to stop there. Her mouth moved lower, over my tummy. I was breathing heavily and my heart was racing just in anticipation.\n\nWhen her mouth moved below my belly button her hand gripped the sides of my shorts. I guess this was it, the point of no return. Oh, goodness, who am I kidding. That'd already come, or maybe it was still coming. In either case, I just lifted my hips, and Mitch peeled off both my shorts and panties in one fluid movement.\n\nI gasped as the cool air came in contact with the heat of my pussy, then moaned as Mitch ran a finger through my dripping folds.\n\n\"God, Cindy, you're so beautiful.\"\n\n\"Mitch, please.\"\n\nI thought she was going to tease me more, and I wasn't sure if I could take it, but instead she just wrapped her arms round my thighs and lowered her mouth to my sex. Nothing in my life had prepared me for the intensity of this single sensation, and I almost screamed into the evening as I pushed against her mouth. Her tongue slipped inside me and swirled around for a second before moving slowly up through my cleft. It surrounded my clit just before her lips pulled it into her mouth, sucking steadily for a few moments before letting it pop free.\n\nShe alternated between the flat of her tongue and her soft lips, caressing up and down, sucking on my labia, flicking my nub, generally driving me insane. Nothing had ever felt so good, so intimate, and I surrendered myself to my lover on a deep, primal level.\n\nShe was everywhere, but each time she came back to my little pearl she spent more time there, and after a bit it was the center of her attention, for which I was eternally grateful. I was soaring into the heavens. I grabbed my breast, squeezing and pinching, while my other hand reached down for Mitch. Her hand somehow found mine and our fingers intertwined. She sucked my clit into her mouth, and my body detonated in orgasm.\n\nI cried out in one long tone, the volume rising and falling with each blissful pulse of joy. I collapsed back into our mattress, breathing heavily as my now super sensitive clit popped free from Mitch's mouth. She ran her fingers over my sex, me jerking with each aftershock.\n\n\"Oh, wow, Mitch, that, I, oh, ooh!\"\n\nMy lover's fingers circled my vagina for a moment before dipping inside, and an entirely new source of ecstasy began to flow through me. First one, then a second, curling up and caressing my front wall as her other hand feathered over my clit, rolling it between my swollen outer labia.\n\nI could feel my muscles clenching down around her digits, my eyes fluttering closed as my body tensed to orgasm again.\n\n\"Oh, Mitch, so good, so... ooh, don't stop, please, Please!\"\n\nAnd I came again, writhing around on the bed as the rolling waves of pleasure claimed me. Her fingers never stopped as I tried to rip them off with the intensity of my contractions, but when I calmed she did replace the ones playing with my nub with her lips and tongue, which, let's face it, is just better.\n\nThe combination of sensations was immediately overwhelming, particularly given the already over-stimulated state of my body, and I shot back into orgasmic insensibility only a few moments later.\n\nWhen I floated back down Mitch's fingers slipped out of me, and her kisses were gentle and soft, all around, but not in, my sex. She kissed my outer lips, nuzzled in the soft blonde hair on my mons, tickling up my inner thigh. It was exquisite, and she slowly worked her way back to my cleft, but even once she did she was almost feather soft in her kisses and licks.\n\nThe others had come so quickly, but obviously she wanted this one to last. I was so okay with that plan, and I just let myself sink into both the mattress and the feelings coursing through my body. I just floated along as she pleasured me, saying her name, cooing and moaning, it was luxurious and wonderful and beyond sensual, and when Mitch finally tipped me over the edge and my orgasm filled me, I let it just carry me away into heaven.\n\nWhen I finally came back to myself, Mitch was kissing her way back up my body. I needed her to be kissing me, so I reached down and pulled her up so she could. I hadn't given a thought to the fact I'd be able to taste myself on her lips, but by the time I realized what that odd tang was I was feeling so good I didn't care. It didn't really taste bad though, certainly nothing that was going to get me to stop.\n\nOur tongues danced and swirled, and I reveled in the weight of her on top of me as my hands traced over the bare skin of her back. Eventually our kiss ended, and she rested her forehead against mine.\n\n\"Good?\"\n\n\"Oh, Sweetheart, so good.\" I gave her another little peck.\n\n\"I've wanted to do that for you for so long.\"\n\nI grinned at her. \"I'm sorry I made you wait. Like really sorry.\" Mitch's eyes glinted with mischief and we spent a few more lovely moments just kissing before I asked the only salient question. It was the one I'd been wondering about since I'd decided to try to do this. \"Is it my turn now?\"\n\n\"Cindy, you don't have to.\"\n\nAnd finally reality dawned on me. Regardless of anything else, there was one simple truth. \"I know, but I want to.\"\n\nMitch looked worried. \"Are you sure?\"\n\n\"Yes.\" I looked into her lovely eyes, the ones shining with concern and love. I wanted to make her feel as good as she'd just done for me. Not out of obligation, not to prove anything, to myself or her, but just because I loved her. I let some serious minx drip into my voice. \"I'm very sure.\"\n\nShe returned my grin. \"Okay then.\" Somehow we managed to get flipped over on that little Twin XL we shared every night, and I was on top of her, doing what she'd done to me, slowly kissing my way down over her body. Her skin tasted wonderful, and eventually I managed to pull myself away from her breasts and work my way down over her firm stomach.",
        "\"Why are you still wearing these jeans, missy?\" I scolded her, but she just smirked at me.\n\n\"Cause you haven't taken them off yet.\"\n\n\"Okay then.\" I undid the button and unzipped the fly, drawing them down over Mitch's toned legs. I took a moment to divest her of her socks as well, leaving her only in a pair of boxers. I took a moment to admire her shapely legs, running my hand up and down her smooth skin. I pressed my lips to her inner thigh as I settled my body into position. There wasn't much room, but I was determined to make it work, to get it right.\n\nI slipped a hand up the leg of her blue and red plaid underwear, feeling the heat of her sex on my skin. I ran my hands over her for a moment before taking a deep breath and stripping the boxers off. I stared into Mitch's bare sex. She had puffy outer lips, with darker, pear shaped inner labia, all glistening with her essence.\n\nThe reality of the situation came rushing back, and suddenly I was terrified. Not of doing it, but of doing it poorly, not making her happy.\n\n\"Cindy? You okay?\"\n\n\"Yeah, I just, um, I'm not sure what to do.\"\n\nI was scared she'd be annoyed, but she just grinned at me. \"Sweetie, you're gonna do great.\" She ran a hand over my cheek, and I leaned against it. \"Just take your time and enjoy me.\"\n\nI was still worried, so Mitch sat up enough to kiss me for a moment before lying back. I turned my attention back to the job at hand. I reached out a single finger, touching the inside of her inner lips and sliding down to her opening. It was so silky and warm, and I ran my fingertip around the edge.\n\nI breathed her in, savoring her incredible aroma, rich and earthy with just a touch of sassy sweetness. I'd heard the term 'fishy,' but I didn't get that at all. I pulled a sticky finger away and pressed it to my tongue. If anything, she tasted even better than she smelled, so I took a deep breath and leaned forward, pressing my tongue as deep into her as I could.\n\nMitch moaned loudly, and I matched her outburst with one of my own. My brief taste hadn't prepared me for the intensity of her flavor, and I was overwhelmed for a moment. She was delicious. I wrapped my arms around her thighs, burying myself in her, pushing my tongue as deep as it would go.\n\n\"Ohh, that's nice.\"\n\nMitch's words gave me confidence, and I swirled my tongue around her entrance, pushing in and out. Mitch started to move her hips in rhythm with what I was doing. She kept sighing and moaning, and I licked up higher, suckling on her inner lips.\n\n\"Yeah, sweetie, just a little higher. God, that's good.\"\n\nI let my tongue trace up her slit until I reached her hard little pearl, just barely peeking out. I flicked it, and Mitch's whole body jerked. Wow, that was awesome. I flicked it again, and then pressed the flat of my tongue against it and turned my face in small circles. Mitch matched my movements, grinding her core against my face.\n\n\"Suck on it, baby, just a little, please. Feels sooo good.\"\n\nSucking! Why the hell hadn't I done that yet? That had felt so amazing. I immediately wrapped my lips around Mitch's clit and pulled it into my mouth. Mitch's body seemed to levitate off the mattress.\n\n\"Oh, fu-u-uh, Cindy.\"\n\nI smiled, knowing she'd stopped herself swearing for me, just because I didn't like it. I really should reward her for that, so I doubled down in intensity, and Mitch's moans increased in volume. To be honest I'm not sure how long I went. It really was mesmerizing, the heat of her, the way her body moved, her incredible, musky, sweet flavor.\n\n\"Sh-geeze Cindy, I'm almost there, I'm, ah, so close, so, unnnh!\"\n\nShe began to seize and jerk underneath me, and I held on tight as a fresh flood of wetness surged out against my face. I just kept going until Mitch scooted up the bed and pushed my head away.\n\n\"Stop, stop, oh, god, too sensitive.\" She sucked in a few deep breaths, and I didn't try to touch her with my mouth. She was right there though, so I reached out and caressed a finger over her still quivering labia, making her jump.\n\n\"God, Cindy.\"\n\n\"It's just so cute. I wanna touch it.\"\n\n\"Just give me a second. Wow.\"\n\nI leaned in and kissed her outer lips and up her smooth thighs while I gently rubbed her pussy with my flat hand. Once Mitch had relaxed I moved back in, but this time, almost without thinking, I slid a single finger inside of her. I had no idea how intimate that would feel, truly being inside another person, feeling her warm, wet strength pulling on me.\n\nMitch was breathless. \"Cindy, curl the finger up. Yeah, right there, right, oh, god.\" I could feel the difference in the spot she'd indicated, and I caressed it as I took her clit back into my mouth. She was so tight. Mitch had had two fingers inside of me, but I doubted I could do the same. I guess that made sense, though. I can't imagine Mitch had ever been with a guy.\n\nI pushed that intrusive thought away and sank into what I was doing. Mitch was fully absorbed again, rolling her hips in time with my ministrations, deep throated moans issuing from her throat. This time I caught that she was about to come before she told me, and I was ready to ride the waves when it happened.\n\nA gasping Mitch pulled me up to her, kissing me desperately as my body rested on hers. Somehow in our embrace she managed to turn so she was on top again, and I surrendered to the power of her presence. I just wanted to be hers, and I wanted her to be mine, and we were each other's right there.\n\nI drew my left leg up over hers, sliding the sensitive skin of my inner thigh along her. Her leg dropped between mine, and my sex pressed against the top of her thigh, making me gasp. Mitch shifted, parting her legs slightly, and I could feel her wetness against my skin as well.\n\nShe broke our kiss, her gaze locking me to her, and pressed together, we started to move. It was so gentle, rocking back and forth, each movement sending an exquisite flush of pleasure through my body. It was far less intense than the oral had been, but it built with every second. Also, it let me do what I'd wanted to do since Mitch had walked into that training room when we were freshmen.\n\nI got to just stare into her beautiful eyes. I got to search them, to revel in them. I got to wonder at the expression she was wearing. There was lust there, of course, but it came from a place of love. This woman loved me, and she wanted nothing more than to be mine, to be close to me in every way. To have someone look at you that way, to realize that someone so incredible is offering their heart to you so completely, it does something to you. It might be different for everyone, but it does something to you.\n\nFor me, it crystallized what had been coming on since the moment I'd met Mitch. I knew, in that moment, as the pleasure built in me, that I was in love with Michelle Kirkpatrick. That I belonged to her, mind, body, and soul. And as that reality settled over me, my body came apart and the bliss of orgasm carried me away as I clutched to her.\n\nWhen I floated back to earth she was still moving against me.\n\n\"Are you close, sweetheart?\" I whispered in her ear.\n\nShe nodded, and I shifted slightly to give her more stimulation. Moments later, she buried her head in my shoulder and shuddered and shook in my arms as I kissed her neck.\n\nWhen she quieted she rolled to her side, and I went with her, our legs still intertwined, arms wrapped around each. I could see the emotion in her face as we gazed at each other. I stroked her short hair and spoke in a whisper, my feelings making my voice shake.\n\n\"I love you.\"\n\nWith that Mitch's expression twisted, and a sob broke free from her chest.\n\nOh, crap. What did I do? \"Mitch, what's wrong?\"\n\n\"I don't want to wake up.\"\n\nI ran a finger through her hair. \"What?\"\n\n\"This is when I wake up. We make love, and you say that to me. And then I wake up. And it hurts.\"\n\n\"I'm so sorry.\" Now I was crying. \"I'm so sorry it took me so long.\" I kissed her. \"But I'm yours now. And you don't have to wake up.\" She clung to me and wept, and I held my beloved to me until she quieted. \"I'm sorry I hurt you.\"\n\n\"Cindy, I'd have waited for you forever. You probably don't believe that, given my track record, but I would have. Even if you never, y'know, part of me would still have been waiting for you.\"\n\n\"You would have found someone who made you happy.\"\n\n\"Cindy when I walked into that training room, and I saw you talking to Carrie, you were glowing. I remember all the times my dad had told me about the first time he saw my mom. I thought he was crazy. But then there you were. I was dumbstruck\"\n\n\"You were not! You were very boisterous, from what I remember.\"\n\n\"I get loud when I get nervous.\"\n\nI laughed. \"And then I didn't want to have anything to do with you.\"\n\nMitch laughed through her tears. \"No, no you didn't.\"\n\n\"I'm sorry.\"\n\n\"Baby, you don't have to apologize. Not ever. Oh, and I love you, too.\"\n\nMy cheeks were literally aching from smiling. \"That's good.\" Our lips found each other, and we kissed and nuzzled together, before I finally turned in her arms while she pulled the covers around us. Finally there were no more boundaries between us, and we fell asleep in each other's love.\n\n***\n\nEND CHAPTER TWO\n\n***********\n\nI hope you enjoyed. Please rate and give comments, they keep me going. I'll post part three as soon as possible. All parts are written, so it shouldn't be long.\n\nA note on Buffy. It's my favorite TV show. I can't tell you how heartbroken I was when I heard the allegations regarding Joss Whedon, who I considered a genius and one of my favorite writers in Hollywood. Much of this was already written when that story broke. I considered changing it, but regardless of how big an asshole it's creator turned out to be, the show itself was so seminal to my sense of self that I didn't want to. I still love it. I will admit it's been tainted somewhat, but the powerful female characters, and of course, the first positive lesbian relationship I was ever exposed to on screen, they mean something to me, and I'm not going to throw all that away over the inexcusable actions of one horrible person. If you feel differently I understand, and I won't argue with you. It's just my decision for myself."
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian",
        "college",
        "tennis",
        "romance",
        "lesbian romance",
        "love",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-girl-named-mitch-ch-02"
}