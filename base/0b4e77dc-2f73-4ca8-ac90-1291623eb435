{
    "title": "The Choosing Ch. 04",
    "pages": [
        "I took special notice on the return trip from Roth's chambers to my own. I was careful to note and remember the direction as I had already decided to return for the dawn meeting. It would be in Roth's chambers I was sure and I intended with the help of Nadar's ink markings and whatever lay within The Key to conceal myself and hear the truths I knew had been hidden from me.\n\nHatha dragged at my elbow. The woman did not like me. I did not know why and I did not particularly care, the feeling was mutual. After one vicious tug too many I broke free of her grasp.\n\n\"You hurt me servant.\"\n\nShe paused, eyes flashing with anger. \"Sorry, Mistress,\" she lied after averting her eyes.\n\n\"As well you should be,\" I said in anger. \n\nI held out my arm for her to take. She did so, lightly resting her fingers at my elbow to guide me. We walked at an easy pace, both of us masking our seething anger and frustration behind our calm fa\u00e7ade. I knew from whence mine came but I did not understand hers. Why did she resent me?\n\nWhen we were back at my chambers I dismissed her early. \"I can undress myself Hatha. You may go.\"\n\nShe paused at the door. I waited for her to protest but she did not. Instead she sighed and said softly, \"As you wish Mistress.\"\n\nShe looked tired. Defeated. I did not care. \n\nIt was a struggle but I twisted the bindings of the corset to the front and unlaced myself. The chemise came off easily. It was but a mere slip. I used it to wipe clean my face. No doubt destroying the expensive fabric but I did not care. I had no wish to ever wear it again. I looked down at the painted smears on the black and silver.\n\nBlack and Silver\n\nRoth and Nadar.\n\nA red smear on the black made me think of Nadar's blood stained lips. Of Roth's. I ached for their bites. Both bites. At once.\n\nConfusion and lust ripped through me. The feelings overwhelming. My chest hurt and my sex throbbed.\n\nAnswers. I needed answers.\n\nI went down on my knees to reach under the bed. The book was wedged right at the back near the wall. I had to scoot on my belly across the cold stone floor. I cursed my impatience, wishing I had dressed before this task. I was shivering when I came out from under the bed. I forwent my nightdress and instead wrapped myself in the heavy blanket of my bedding. I crossed my legs and shifted on my buttocks closer to the candle on my bedside. By the light of the flickering flame I opened the heavy leather bound book.\n\nThe pages were vellum, gilt edged. Beautiful and fine. I first looked at the chapter listing and then flicked to the back of the book in search of an index. I ran my finger down the alphabetical listing searching for any mention of The Vessel. There was one listing, anticipation thrummed in my veins as I opened up to the page.\n\nI skimmed the words, seeking out the relevant information amongst the flowery prose. Whomever partakes of The Vessel shall have the power of influence. Extended life and strength. The Vessel is from the Sarran Coven. She is a Sarran witch.\n\nI knew of Sarran Witches. We were warned of their power. My Uncle had once threatened to send me to them for punishment. He had shown me a parchment picture of a Sarran witch. A hideous Crone, her pock marked skin lined with strange symbols. My heart raced. I read on, my eyes flicking across the words;\n\nIn times past The Vessel served as an adviser to the Vandarran Crown...Misuse of the Sarran and fear of their power lead to a purge of The Covens...Few Covens remain...hiding from Vandarran Masters.\n\nMisuse. How had The Vessel been misused?\n\nThe power of The Vessel lays within her, but can be harnessed if she is freely Claimed by one. Once Claimed her power can be drained by the direction of that Master alone. The Master of The Vessel has great power, strength, longevity and influence. The Vessel is in his total control. \n\nClaimed. Roth wanted to Claim me. He thought I was The Vessel.\n\nEven as I read the words\u2014rebelled at the idea of being Claimed and drained\u2014I wanted it. I wanted Roth.\n\nNausea rolled through me. I dropped the book and my blanket. I barely made it to the bathing chamber before I emptied my stomach. I wiped the back of my hand across my mouth and took a drink from the water jug that sat atop the small bathing chamber armoire. Even after my mouth had been rinsed the bitter taste remained. It was the taste of betrayal. Roth had betrayed me. Used me.\n\nNadar had to know. That was why he refused to take me. Why he had not bitten me as Roth had.\n\nI stood up. Using the remaining water from the jug I washed my body. With the freezing water I did all that I could to scrub the residue of Roth's betrayal from my skin. Once clean I dressed. Dark blue was the closest I had to black. It would have to do. I was not concerned about the humans. I knew the symbols would protect me. I wanted a dark shade to hide from the sight of any Master.\n\nIf I was The Vessel I needed to know what Roth and Lord Malchard wanted from me. The only place I could learn that was at the dawn meeting. I could only hope that it was at Roth's chambers. \n\nIt was not yet near dawn but I decided to go now. I reasoned that his chambers would be now empty of his guests and that he had not yet returned. I knew I could bewitch my guards and I hoped the symbols would do the same to the four that guarded Roth's chambers.\n\nWhen I reached Roth's chamber I was relieved to see that the four guards had been whittled down to two. I was more confident of being able to bewitch two than four. I raised my forearm to the guards. \"Is the chamber empty?\" I asked.\n\n\"Yes,\" came their dull monotone answer.\n\n\"Hide me inside where they hold their meetings.\"\n\nThey had not yet opened the red lacquer doors when I felt a hand at my wrist. Heart thumping, I turned to see who it was.\n\nHatha.\n\nI raised my arm and pointed the Sarran symbols at her barking out the order, \"Go back to your chambers. You did not see me.\"\n\nShe laughed. A bitter sound. \"That magic has been worked on me by much stronger than you whelp,\" she hissed.\n\n\"Who?\" I asked.\n\nMisery crossed her face at my question. Sorrow hung heavy in her eyes. She did not answer me. She just shook her head and tightened her grip on my arm. The guards did nothing. Still locked in their magic induced haze they stood still and silent.\n\nI tried to wrench free. \"I need to know Hatha. Let me go. I need to know!\"\n\n\"Know? What? Knowing will change nothing.\"\n\n\"It will change me,\" I said, my voice beginning to break, weary sorrow tightening my throat.\n\nShe softened, and for the first time I saw a flicker of compassion in her hard gaze. She released my arm and brought her hand up to cup my chin. \"It won't change the fact that you have been Chosen by the Dark Prince. You must accept it. It is the only way. She fought. It did her no good. It broke her heart. Broke mine too.\"\n\n\"Who? Who do you speak of?\"\n\nHatha did not answer me, out of the darkness came his dark honeyed tone and a flash of silver. \"My mother,\" he said.\n\nNadar.\n\nI turned to where he still stood, bathed in half shadow. \"Your mother was Chosen?\" I asked him as Hatha tugged on my arm trying to pull me away.\n\nHe came forward into the light. \"More than Chosen. She was The Vessel. The last Vandarran Vessel.\"\n\nHatha let me go and I stepped closer to him. \"What is The Vessel?\"\n\n\"A power source from the Sarran Coven. The balance of power. Her blood gives strength, longevity and powerful magic to any Dark Master that partakes.\"\n\n\"And if she is Claimed?\"\n\nHis gaze dropped from mine. \"If she is claimed that power goes only to the Master that Claims her. He holds the power and distributes it at his pleasure.\"\n\n\"Am I The Vessel?\" I asked, my heart in my throat.\n\n\"Roth thinks so,\" he answered.\n\n\"And you? What do you think?\" I held out my hand to him.\n\nHe nodded.\n\n\"They come Mistress,\" Hatha said, coming forward to once more tug on my arm, \"Your magic will not work on them. We must go.\"\n\n\"Will you come to me? Tell me more?\" I asked him. He did not answer again. Instead he pushed me back into an alcove off the corridor. Frustrated, I was about to go back to him when Hatha clamped a hand across my mouth.\n\nMy heart jumped into my throat as I heard Nadar speak. \"Astrid. Valco.\"\n\n\"Nadar,\" I heard Astrid mock. \"I thought this would be beneath you.\"\n\n\"This matters to me as much as you. Even more so perhaps.\"\n\n\"You should not have made yourself known to his Chosen,\" she hissed.\n\nNadar's bark of laughter echoed off the stone walls. \"You Astrid? You deem to speak to me of what should be done? That is priceless.\"\n\n\"Time is past for what should be done,\" Valco's voice joined the conversation. Low and buzzing with anger he said, \"Vandarra lies on the brink of war Nadar. There is no time for should, only what must be done. The Dark Prince does what he must.\"\n\n\"No,\" Nadar said softly, \"he does what he wants. He always does what he wants.\"\n\n\"And yet you are still here my son. At my side,\" Roth's voice rumbled out of the darkness.\n\nSon? Nadar was Roth's son. Hatha's hand clamped harder over my mouth, stifling my gasp.\n\n\"Come, we have not time to bicker in the hallway. We have much to discuss.\" The guards opened the doors and a flood of light filled the hall. Hatha shuffled back further into the alcove. I pressed back into her.\n\nIn the light I saw them both. It was obvious they were father and son. How had I not known before? They stood, walked, spoke the same. One light, one dark they were halves of the same whole.\n\nThey met with the same reason.\n\nMe.\n\nLies and secrets they withheld for their own purpose.\n\nI was a pawn, caught between two forces I could not understand because they hid the truth.\n\nThe doors closed. My knees gave out and Hatha held me as I sobbed. She murmured soothing nothings in my ear as she stroked a hand over my hair. \n\n* * * *\n\nHatha returned me to my chambers. She did not speak, but murmured soothing sounds as we walked. Stroking my arm she crooned at me as if I were a babe to be comforted. With each step I began to move out of shock into anger. I did not want comfort. I wanted the truth. I wanted answers.\n\nRoth and his lies. Nadar and his half truths. I was not Chosen. I was stolen. Deceived.\n\n\"All is not as it seems,\" Hatha said after she had closed the door to my chambers and led me over to sit on the bed.\n\n\"Really?\" I laughed. Hysterical sounds issued from me as if I were crazed woman. I could not stop them. Could not calm the barking laughter.\n\n\"Shhhh,\" Hatha soothed as she sat beside me and rubbed gentle circles on my back.\n\nI shoved her hand away, stood and started to pace the floor. I did not want her comfort. My breath came in pants. My words poured forth in an angry staccato beat. \"No! No! No more. I want the truth. The truth Hatha! I know you know. I know it. No more lies. No more soothing words. You tell me now! Or... or...you leave. Leave!\"\n\nHatha stood, brought forth her arm and gently pressed her hand to my stomach bringing my angry pacing to a stop.\n\n\"Please Hatha,\" I said meeting her eyes with a desperate plea.\n\nShe raised her hand to her head and tore free the black winged cap. \"Fine. Mistress I will tell you. Please, just sit. Sit and I will tell you what I can.\"\n\nI sat on the edge of the bed with Hatha standing before me. She did not speak, her fingers went to the long row of pearled black buttons at the front of her gown. She started at the high neck and quickly opened her bodice. I burned to ask her why she was undressing but I did not. I feared that she would leave if I interrupted. She stripped her arms free of the bodice until it hung about her waist. She wore a dark, short sleeved chemise under her gown, her arms were bare, but not uncovered. I stood from the bed. She was marked. Black symbols like the ones on my forearm covered her whole arms like black sleeves or swirls. I touched the skin of her left arm, tracing my finger along an ivy like black drawing.\n\n\"It's not painted. Not like yours Mistress,\" she said answering the question that I was just about to ask.\n\n\"What is it?\"\n\n\"Tattoo. Sarran tattoos.\"\n\n\"Tattoo?\"\n\n\"Permanent ink placed in your skin with a needle.\"\n\nA needle. It would be painful. My nipples hardened, points of aching need that throbbed with the thought of a needle piercing skin.\n\n\"Oh.\"\n\nThey were beautiful. Stunning swirls, some thick and powerful swipes of black others intricate almost filigree, in their detail. I trailed a finger over one that appealed to me and I felt a jolt of power race up my arm. Hatha gasped and looked up at me. She felt it too.\n\n\"So it's true,\" she said, her voice thick with what seemed to me to be sorrow.\n\n\"What's true?\" I asked, still tracing the patterns on her arm, loving delicious surge that came with each brush of my finger on her flesh.\n\n\"The power you hold. Even untrained you make spells. I feel it in your touch.\"\n\n\"Am I The Vessel?\" I asked. No longer as afraid at the thought now as I touched her, almost comforted by it instead.\n\n\"Yes,\" Hatha said, her voice dipping into a moan.\n\n\"Who are you Hatha? Tell me.\"\n\n\"I am Hatha of the Coven Sarran Vere. I am handmaiden to The Vessel.\"\n\n\"Nadar's mother? You knew her? But, you look too young.\"\n\n\"As Handmaiden to The Vessel I have been the recipient of her powers. The years pass with little change to my body.\"\n\n\"Was Nadar's mother Roth's chosen too?\"\n\n\"Yes. She was. She loved him and was claimed and destroyed by him.\"\n\n\"How?\"\n\n\"Please, Mistress touch me no more. I cannot think clearly when you do.\"\n\nI nodded and removed my finger from Hatha's skin. She shuddered and took a deep breath. I motioned for her to sit and she did, perching on the edge of the bed. I sat cross legged on the flagged stone at her feet.\n\n\"I will begin with some history. You should know what came before.\" She nodded to herself as she spoke, as if confirming she was on the right path. \"In the past the Sarran worked with the Vandarran Masters. Equals, they shared power and resources, working together to rule. The Vessel had always been, like air, water, stone. She was a constant.\"\n\n\"How was she chosen? How did she know she was The Vessel?\" I asked.\n\n\"Novitiates, those with early power and promise were taken from all Covens in their sixteenth year and trained in preparation.\"\n\n\"At sixteen, that's when The Vessel appears?\" I asked. At sixteen I had been taken to live in Hawthorne. I showed no promise or power. If I had, surely I would have realized.\n\n\"No. Not so early,\" Hatha said with a shake of her head, \"The Vessel comes of age at her twenty fifth year.\"\n\n\"Is there always a Vessel? Who was the last? Is there more than one?\" The questions spurted from me. It was difficult to stop the surge. I had so many. So much I wanted to know. I bit my lip to gain control.\n\n\"There was once always a Vessel. There is always only one. I do not know who came before, if the last was Nadar's mother or if there was another between who passed. The Sarran ways have been lost by so many, it is possible that a Vessel could live and not know of her power. Perhaps even die because of it.\"\n\n\"What power?\"\n\n\"The Vessel's blood and release gives great power. Dark Master's sense it, they long for her blood and release. Crave it. To humans it comes as desire, a wanting that is ceaseless in her presence. Sarran know it in your touch. The power that crackles beneath your skin. Once, long ago The Vessel was balance of power between humans, Sarran and the Dark Masters. A Council advised her. She shared her power as needed and kept the peace between us all with her wisdom and grace.\"\n\n\"What happened? What changed?\"\n\n\"Two hundred years ago a Vessel novitiate fell in love with a visiting Dark Master. She pledged herself only to him; he Claimed her and through the Claiming took control of her power. It was then that the Vandarran Master's discovered that The Vessel could be seized for their own gain. With control of The Vessel they did not need to share power with the Sarran or humans. Sarran Covens were attacked by the Vandarran Crown. Humans feared us, hunted us too. Killing Sarran killed the source of the Dark Master's power. We went into hiding. Always in hiding. Always hunted. Many died.\"\n\nHatha paused and gave a shuddering sigh.\n\n\"Were you attacked? How did you get here?\" I asked.\n\nShe gave a sad little smile. \"Anja. She is why I am here. Nadar's mother. Roth's chosen. The last Vessel. Anja of the Coven Sarran Vere. She was always the bravest. Always the strongest.\" \n\nShe raked a hand across her face. Hanging her head she directed her words to the floor. \"The Village where Coven Vere was hiding was searched by a Vandarran Battle Group. They were close to finding where the children were hidden so Anja showed herself.\" Hatha lifted her head, stared out across the room as if seeing the image played out before her. \"It was stunning. She stepped forth right into the throng of invading Masters and stripped, removed her clothes, slowly revealing her Sarran tattoos. Once they saw her they were no longer interested in searching. She saved the children. Saved us all.\"\n\nI could see it all in my head. I saw her silver haired. Like Nadar. Standing naked and marked amongst the battle clad Masters. I felt her power.\n\n\"What happened to her?\" I asked.\n\n\"Roth. Roth happened to her. He was in the battle group. One look at her and she was his Chosen. She was captured to be taken back to the then young Queen Beatrix. But Roth came to her cell and set her free. He arranged to have her taken to his castle and hidden.\"\n\n\"He forced her Claiming?\"\n\nHatha barked out a sorrowful laugh. \"There was no force. She chose him too. She went willingly. Submitted passionately. Has he forced you?\"\n\nI blushed, knowing the truth of her words. \"No. There has been no force.\"\n\n\"The Crown was searching for her. No one knew that Roth had her hidden. He kept her, drank from her and grew stronger. With his growing power he masked her, hid her tattoos and brought her forth into society as his Chosen. He belonged to the Loyalist forces, those who wanted the old ways.\"\n\n\"Old ways?\"\n\n\"Loyalist Vandarrans wanted a return to The Council of The Vessel. Or so they said.\"\n\n\"Did he try?\" I asked, still hoping to redeem Roth in some way. Find a reason for why I still wanted him, craved his bite.\n\n\"He would not share her. The more he took from her the less he spoke of a return to the old ways.\" Hatha sighed once more, closing her eyes a moment, as if speaking pained her. \n\n\"He used her.\" \n\nAnd he intended to use me.\n\n\"Yes he used, but to bring stability to the Crown. With the power of influence he kept the radical forces behind the new Queen Beatrix from corrupting her.\"\n\n\"So he used The Vessel for good?\"\n\nDid that make it right, I wondered. Should I have to submit for the good of all Vandarra?\n\nHatha spoke slowly. Each word seemingly weighed and considered before passing her lips. \"Yes. He did what he thought was right. And he thinks to do the same now.\"\n\n\"What of Nadar?\"\n\n\"I came to Anja when she was increasing with Nadar. I had heard that she was in the Night Palace and I came forward seeking out the Dark Prince to find her. I showed him my tattoos to prove my tale of knowing Anja. At great risk because it was punishable by death to be found with Sarran markings. \"\n\n\"She must have been so glad to have you,\" I said, feeling a twinge of longing for a connection to anyone who truly cared for me alone.\n\n\"And I her. I stayed with her until the end.\"\n\n\"How did she pass?\" I asked.\n\n\"She faded more than passed. The Vessel was meant for many. As she distributes power so it comes back to her. When she is chained to one she cannot live long.\"\n\n\"Roth knows this?\" I asked, even as I knew the answer.",
        "\"Yes,\" Hatha replied, \"He did not at the time of Claiming Anja, but he knows it now.\"\n\nHe intended to Claim me and drain me. Nadar knew it too. While he had not taken from me he had also not told me the truth, or protected me from Roth. I thought then on Astrid's comment to Valco and asked, \"Roth would not share Anja. Would he?\"\n\nHatha shook her head briefly, met my gaze and turned away. \n\n\"But he will share of me. Won't he Hatha? You know this.\"\n\nHatha nodded, \"There is thought that if he does your power will increase as will your life expectancy.\"\n\nI brought my knees up to my chest and hugged them tight. So, I had the truth I had been seeking this night. Where now were my easy answers? The simple choices I expected to come with this knowledge.\n\nThere were no easy answers.\n\nThere was no black and white. \n\nRoth had Chosen Anja in love. Taken her power with the best of intentions. I felt for him, for her, even understood it perhaps. But understanding and acceptance were separate things. I could not accept this for me. I would not accept it.\n\n\"Does Nadar support his father?\" I asked\n\nHatha shook her head but her answer was not as clear, \"Yes and No. He supports his political purpose but not his use of The Vessel. Sarran blood runs strong in him, but that does not make him Sarran. He is Master too. The son is caught between two worlds. Sarran Coven law has no Claiming. Sarran witches give of their body and Magic to who they choose. The longing to claim and the need to share battles within Nadar.\"\n\n\"Because of me,\" I whispered.\n\nHatha nodded. \n\nI had seen that battle rage within his silver rimmed eyes myself. He wanted to take me but did not, could not as his father's claim was still upon me. Nadar was caught between his loyalty and his conscience. For all his want to befriend me Nadar could not be trusted. And Roth, the Master I thought had set me free was truly just blind to all but what he could take from me.\n\nWho stood for me? I wondered.\n\n\"Hatha, you were Anja's handmaiden.\" \n\nShe nodded and I asked, \"Are you mine?\"\n\n\"I am handmaiden to The Vessel,\" she answered softly.\n\n\"I am the Vessel\" I said, half statement, half question.\n\n\"Yes. I have no doubt.\"\n\n\"You are sworn to help me then?\"\n\n\"Yes I am,\" she said, tracing a finger along an ornate band of markings that ringed the bicep of her right arm, \"it is marked into my skin.\"\n\nI stood from the floor. Pushing back my shoulders I jutted out my chin and in a voice I hoped worthy of The Vessel I said, \"Hatha of Coven Sarran Vere I beseech you to take me to my people. If I am to be The Vessel I will learn my place with the Sarran, not Vandarran.\"\n\nHatha did not answer and for a moment I thought she meant to refuse me and my heart sank. She was still tracing the band around her arm, her finger moving faster and faster and then I noticed that her mouth moved too in a murmured chant.\n\nShe jerked to a stop and slid from the bed to the floor. Coming up on her knees she nestled her face to the juncture of my thighs. I felt a surge of desire thick and fast as her lips moved against my mound. She chanted words in a language I did not understand. Heat poured from her mouth, through her words and threaded into me, through me. Tendrils of heat searched within and clenched me in pleasure. My muscles seized, heat crackled beneath my taut skin. Blistering, white hot, as if my pleasure came from the very center of the fire. I came hard, without touch, without anything other than her breathing chant. My sex spasmed, wetness spurted in a warm wave to my thighs. As I came down from the magical climax Hatha pressed her lips to my mound and kissed the still pulsing point of my pleasure.\n\nI reached down to thread my fingers in her hair. Without her trademark cap and sneer she seemed much younger. Her hair was pretty, a light shining auburn. Loose from the fixed cap it fell to her shoulders in sleek waves.\n\nShe looked up at me. Eyes not pinched in anger I found her quite beautiful. \"I will take you Mistress Vessel. I will follow you where you lead.\"\n\nAnd so, with Hatha's arms wrapped around my legs and her face nestled against my sex I made my first choice. \n\nMy choice.\n\nMy decision.\n\nTomorrow we would leave. Escape Roth, Nadar and their web of secrets and lies and find my people. I would learn what it truly meant to be The Vessel and make my own choices from no one.\n\nChosen no more.\n\n- - - - - - - - - - - - - - - - - - - -\n\nYou may have noticed that I've played around with the name of the Dark/Night Masters. I found myself swapping between the two and it became confusing so I decided to just go with the Dark Masters. Thanks again needs to go to the lovely Pacofear who worked his usual magic. And of course my Mistress Red Pen.\n\nI hope you're enjoying the series and I do love to hear your thoughts so please leave a comment. Oh and a rating. I love those too.\n\nDarcy Sweet."
    ],
    "authorname": "darcysweet",
    "tags": [],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-04"
}