{
    "title": "Beginning Again Ch. 05",
    "pages": [
        "Author's notes:\n\nThank you again for reading. Your feedback has been welcome and greatly appreciated. This is the fifth of six chapters.\n\nAny medical and/or legal details in this story should not be considered factual.\n\n** \n\nMac woke to the buzzing of his alarm clock, and for a brief moment was surprised to find a warm body pressed against him. The disorientation passed and he smiled contentedly. Even after a month, waking up next to Nadja hadn't lost any of its appeal; it still filled him with a mix of delight and wonder. In six weeks he'd gone from sharing a cell with a shaggy car thief to sharing a bed with a pretty girl. \n\nHe silenced his alarm and rolled on his side, facing her, then slid his arm over her and rubbed her bare stomach. She responded almost automatically, turning away and pressing into his bare chest, snuggling closer and wiggling her hips in a silent invitation. She slept nude, always available to his hands. \n\nHe leaned in and kissed the back of her neck and she sighed happily in response. She hadn't been a fan of kissing at first, but the last couple of weeks she'd come around. She still didn't initiate kisses but seemed to enjoy receiving them on her neck and shoulders, though not the face. \n\nHis thumb and index finger sought and captured her left nipple and gently pinched and rolled. Her hand came up and stroked his forearm. He loved the intimacy of touching her this way, loved the notion that her body was his to enjoy. They lay together for a few minutes, breathing and touching and enjoying the closeness. \n\nHow could waking up at five in the morning feel so good?\n\nSoon enough, he decided he wanted more \u2013 there was a long day of work ahead, so why not get it started on a high note? He rocked his hips forward, nudging her ass with his semi-hard cock. She knew what he wanted and wiggled again in response. Her hand left his forearm and slid between them, closing over his shaft and gently stroking it to full erection.\n\nHe wished he could just pull her against him and slide into her pussy from behind, but he knew the preparation required for that kind of sex would be too ambitious for so early in the morning. \n\nInstead he lay on his back, kicking off the bed sheet and comforter in the process. The apartment was cool but not uncomfortably so given how hot he felt. \n\nNadja rolled out of bed and stretched; he could barely make out her slim silhouette in the darkened room. She crouched briefly next to the bed, then climbed between his knees, nudging them gently apart so that she could kneel between his thighs. \n\nHe felt her hands on his cock, warm and slippery \u2013 she'd dipped them in the bowl of olive oil that was left over from the massage he'd given her the previous night. \n\nHe enjoyed giving her bed-time massages as much as she liked receiving them, and the rub-downs were becoming a welcome fixture in their nightly routine. When he had his hands on her, his stress and aggravation melted away. Her presence seemed to dissolve his headaches. She was better than Tylenol.\n\nShe slid both hands up and down his shaft, knowing exactly how hard to grip, how fast to go, when to caress his scrotum and when to smooth her palms over the sensitive head. \n\nHe'd always thought that hand jobs were the lowliest of the sexual acts \u2013 the consolation prize \u2013 something you got when you didn't get what you really wanted. Not so with Nadja \u2013 the pleasure he felt from her expert touch was intense and exquisite. His orgasm was coming on fast. His breath was rapid now. His body burned with arousal.\n\n\"Tell me when,\" she whispered, the first words spoken that morning. Somehow she could tell when he was getting close.\n\nHe didn't want to come. Not so soon. He wanted to stay in bed, naked and spread as she knelt over his cock, her fingers working their magic, sending throbbing waves of ecstasy through him. But before long the need for release became undeniable. He felt his core tighten. He couldn't keep his hips still, they lifted, thrusting into her hot hands.\n\n\"Now,\" he gasped.\n\nShe bent and took the head of his cock into her mouth while her hands continued to squeeze and caress his shaft. Her long hair fell forward onto his stomach and he slid his fingers into it, delighting in the softness.\n\nHe felt a tightness, a clenching at the base of his cock and he groaned as his orgasm hit hard. He thrust upward, trying to bury himself in her mouth. In response she took him in deeper, her lips tight around his shaft, her hand still pumping, squeezing, milking. She sucked and stroked and swallowed, prolonging his pleasure. \n\nEven as his spasms began to fade she kept him engulfed, her hands and tongue gentle now, guiding him down from his climax. Only when he'd regained his breath did she release him from her mouth and kneel back on her heels.\n\n\"How was that?\" she asked. She knew he loved it, but she liked to hear it said out loud \u2013 his pleasure made it good for her, too.\n\n\"I never wanted it to end.\"\n\n\"Maybe I'll slow it down next time? Make you beg for it?\" her voice was teasing and he chuckled. \n\nNadja had come a long way in just a month. She had opened to him fully \u2013 her wariness was gone and new aspects of her personality seemed to emerge every day. Her growth was welcome and gratifying.\n\n\"I'll beg now if you want. A down payment for next time?\" he said.\n\n\"No need to grovel,\" she replied, \"although I should mention we're out of ice cream. If you wanted to stay in my good graces...\"\n\n\"I'll pick some up on the way home.\"\n\n\"Good boy,\" she said, planting a series of hot kisses on his softening cock, then sliding out of bed. \"We're getting low on milk, and we're down to half a dozen eggs, so if they're on sale...\" \n\nNadja walked through the darkness toward the kitchenette to put the kettle on. She'd eagerly seized control of the household duties \u2013 not that he'd put up much a fight. She helped him in so many ways.\n\n\"Ice cream, milk and eggs. Anything else?\" \n\n\"Olive oil. You've been getting more of it on my body than in your mouth.\"\n\nHe laughed, then pulled himself out of bed and headed for the shower. It was time to begin what promised to be a busy day.\n\n**\n\nHannah's Hope was a support group that met in the evening twice per month in a sterile but well-appointed boardroom on the second floor of the Central Library. Its mission was to provide education, friendship and resources for women in the sex industry.\n\nIt had been one of the organizations that Brenda, a nurse at the STI clinic, had recommended to Nadja during her checkup. The results of those tests weren't available yet, but in the meantime Nadja wanted to attend the support group and see what it was all about \u2013 and how it could help her.\n\nMac didn't know what to expect from the gathering as he led Nadja to a seat around the huge oval desk that dominated the middle of the room. Part of him had expected to see hard-bitten street walkers and sleazy, jaded strippers but the truth surprised him \u2013 the dozen or so women who gathered for the meeting wouldn't have looked out of place at a shopping mall or a restaurant. They looked like...normal women. \n\n\"I'm sure you'd be welcome to stay,\" Nadja whispered as she removed her winter coat.\n\n\"Maybe,\" he said, \"but I'll grab a book and wait outside. I want you to be able to speak freely.\"\n\n\"Okay. I think this finishes by eight-thirty. If we go long, come and get me...we don't want to miss your curfew.\"\n\nHe left Nadja there, wandered out into the library and found a nearby magazine rack. He picked out a few sports magazines and found a seat where he could keep an eye on the boardroom. He was probably worried over nothing, but he couldn't shake the idea that if her former pimp was looking for Nadja, this might be someplace he could turn up. If that happened, help would be close by.\n\nMac's feelings for her had only intensified over the past month, and he got the sense that she felt the same way about him. They'd never discussed it \u2013 Nadja shied away from displaying a lot of emotional intimacy and he didn't want to make her uncomfortable by broaching the subject with her. In any case, what was the rush? Neither of them was going anywhere in the near future; they had time to let things develop at their own speed.\n\nThe meeting lasted ninety minutes, enough time for him to read through three sports magazines, the world news and four National Geographics. When he started to see people filing out of the room he got up and made his way back inside.\n\nHe was surprised to see the normally reserved Nadja standing up at the front of the room with three other young woman, deep in conversation with a twenty-something man in a suit and tie. He decided to hang back rather than intrude on their privacy.\n\n\"Can I help you?\" a nearby woman asked, politely but also pointedly. He guessed she frowned upon strange men hanging around the proceedings, and he couldn't really blame her for that.\n\n\"I'm just waiting for Nadja. I can wait outside...\" he said and turned to leave.\n\n\"Mac, come over here,\" Nadja called, obviously having recognized his voice.\n\nHe reversed course and joined her at the front of the room. When she felt him next to her she quickly found his left hand and held it. He found the gesture surprising \u2013 Nadja rarely initiated anything so...romantic?\n\n\"This is Bob Gordon. He was the guest speaker tonight. He's a lawyer,\" she said. \n\nMac dutifully extended his hand and the lawyer shook it. Inwardly he groaned \u2013 he'd dealt with lawyers plenty over the years and he'd yet to meet one that did him any good at all.\n\n\"Bob, could you please tell Mac about what you were discussing?\" Nadja asked.\n\n\"Sure. There's legislation called the Victims of Trafficking and Violence Protection Act,\" Bob said, \"and the purpose of it is to empower victims of sex trafficking and give them options for escaping from that life...\"\n\n\"I could get a Visa, Mac!\" Nadja interrupted, the excitement obvious in her voice. \n\n\"Yeah? How does it work?\" he replied, trying to match her enthusiasm but falling short. He knew from experience that the law usually worked against people who didn't have money. More than that, once the government learned that Nadja was in the country illegally she'd be at the mercy of a bunch of faceless, merciless bureaucrats. Not an enviable position for a poor blind girl.\n\n\"There's not much to it, really. Nadja would need to send in a couple of forms explaining who she is, how she came to be in this country and outlining why being deported would represent an extreme hardship. Her visual impairment would work in her favour, actually,\" Bob explained.\n\n\"Nice. What's the catch?\" Mac asked, hoping he wasn't being too discouraging. But with lawyers there was always a catch, somewhere.\n\n\"No catch, although it certainly improves her chances if she can get a declaration from a law enforcement agency. For that to happen she'd have to present herself to the police and make a complaint against her traffickers. The police would fill out a supplemental form...\"\n\n\"But...what if I can't identify my traffickers?\" Nadja asked, and Mac could hear a healthy skepticism creeping into her tone.\n\n\"Well...the more information you could provide, the better it would look for you. The police would ideally like some sort of evidence to support your claim that you were the victim of trafficking. In any case, the police declaration is just one factor in the overall decision to grant a Visa.\"\n\n\"Is there a time limit for applying?\" Mac asked.\n\n\"No specific limit, although the application is usually looked on more favourably if it's done sooner rather than later...\" \n\nOne of the other women interjected with a question of her own, eager to steer the conversation in a different direction. Mac supposed that having free access to legal advice \u2013 even for a few minutes \u2013 was an opportunity that no one would want to pass up. \n\n\"Do you have a card?\" Mac cut in. \n\nBob continued to speak to the other woman but fished a business card out of the inside pocket of his suit jacket and handed it to Mac.\n\nHe put the card in his pocket and helped Nadja bundle up for the chilly walk home. It was fifteen minutes to curfew and he didn't want any black marks on his record for being out late.\n\n**\n\n\"What do you think about applying for that visa?\" Mac asked.\n\nThey were back in the apartment. Nadja was naked and lying on her back on the bed while Mac \u2013 also naked - straddled her hips. Her arms were stretched above her head, her long, dark hair splayed out on the pillow. Half-lidded, blue-gray eyes looked up at him languidly. How had he ended up with such a beautiful woman? \n\nHe ran his hot, oiled palms side by side from her navel up her abdomen and between her small breasts, feeling the soft ridges and contours of her ribcage and sternum beneath his fingers. She was still a little on the thin side, and maybe always would be, but over the course of the month she'd put on a little weight. \n\nWhen he reached the base of her neck his hands went their separate ways, following the lines of her collarbone to her shoulders, then down the outside of her ribcage at a leisurely pace until he reached her hips. She rewarded him with a quiet, satisfied sigh, and his hands began all over again.\n\n\"Mmm. Something to consider. What do you think?\" she said.\n\nHe slid slippery hands over her breasts, feeling her nipples under his palms. It was hard to resist the urge to pinch them; instead he focused on applying firm, even pressure against her skin. Patience and attentiveness were the main ingredients in a good massage.\n\n\"I think you should do it. And soon, like the lawyer suggested,\" he said.\n\n\"But if I apply and get turned down...\" she let the thought hang there. \n\nShe didn't need to finish it \u2013 he knew what the stakes were. If they gambled and lost, she'd most likely be deported. There was no way he'd have the money to fight her deportation in court. And since the terms of his parole required him to stay within the city limits, he wouldn't even have the option to accompany her. Well, not legally in any case. Nadja was a woman he'd consider breaking the law for.\n\n\"I was thinking we could hire Bob to help with the application.\"\n\n\"How much would that cost?\" she countered.\n\n\"A lot,\" he conceded, \"but we could cover it. I have some savings...\"\n\n\"Mac, that's all the money you have.\"\n\nHe smiled to himself as he continued to rub slow hands over her torso. Even a few weeks ago she wouldn't have dared disagree with him, let alone engage in a debate. But now she seemed comfortable speaking her mind; he read no anxiety in her face, only a relaxed enjoyment of his touch. He found her trust gratifying.\n\n\"I think this is something worth spending the money on.\"\n\n\"You're going to insist, aren't you?\" she sounded resigned but not upset.\n\nHe didn't reply immediately, instead pushing his hands up along her armpits to her shoulders, biceps and triceps, focusing on her body while collecting his thoughts.\n\n\"I will never, ever force you to do anything you don't want. You know that, right?\"\n\nShe gave a warm smile and tried to find his eyes with hers. \"I know, Mac. Thank you for that.\"\n\nThere was another easy silence.\n\n\"I do have a concern with keeping things as they are now. Your legal status, I mean.\"\n\n\"Mmm?\"\n\n\"If something happens to me \u2013 if I fuck up and get sent back to prison, or get hit by a bus \u2013 what happens to you?\"\n\nShe didn't respond, but he could read in her expression that she was working the scenario through in her mind. \n\n\"If you had this visa, then you'd have options, social services that you could turn to for help,\" he continued, \"You could even go to the cops if you had to.\"\n\n\"I see what you mean,\" she said quietly, sounding far from convinced.\n\n\"As it stands now, you're in a vulnerable position \u2013 a heartbeat away from being back on the streets.\"\n\n\"But even if I wanted to apply, we'd never be able to get the declaration from the police, and Bob said that was an important factor for getting the visa.\"\n\n\"I think we could get the declaration,\" he said.\n\n\"We can't make a complaint against Aden. We have no idea where he is. I don't even know his last name,\" she protested.\n\nHe felt her tense up at the mention of her former pimp, and her fear of him was easy to read on her face. Mac worked his fingers over her shoulders and neck, determined to erase that tension.\n\n\"I know where he lives,\" he said, \"Or at least, I'm pretty sure I do.\"\n\n\"Your memories came back?\" she sounded surprised.\n\n\"No, that night in the alley is still a total blank. But I think I've figured it out just from what you told me about it.\"\n\n\"How?\"\n\n\"Well, that evening I left the apartment to get some Tylenol. It was raining, I was in pain and it was almost curfew, so I would have taken the most direct route to the drugstore.\"\n\n\"That sounds reasonable.\"\n\n\"You told me you fled down a metal fire escape from the fourth floor, into an alley that had garbage cans in it. So a while back, on my way home from job hunting, I checked out all the alleys between here and the drugstore. Only one of them had the fire escape and the garbage cans.\"\n\n\"You never told me you tracked him down.\"\n\n\"I know Aden's your least favourite topic, so I never brought it up. There didn't seem to be a point. But now...\"\n\n\"So that means...you know what building he lives in?\"\n\n\"Yup. We know the building and we know the floor. And I bet we could find the room number, maybe even his last name.\"\n\n\"Oh?\"\n\n\"The front door is secure access...there's a two-way intercom system where you can call up to the apartment in order to get the door unlocked remotely. So I figure we could use the com system to call each apartment. Eventually you'll hear Aden's voice, and at that point we'll know the apartment number and maybe his last name too. Depends what's listed in the directory in the lobby.\"\n\n\"And then we go straight to the police,\" she finished, \"Not bad, Mac. It might work.\" \n\n\"Well, FIRST we hire Bob and get him to represent you, THEN we go to the cops and get the declaration.\"\n\nShe lapsed into silence, her expression pensive. \n\n\"Would I have to testify against him or anything like that?\"\n\nHe could tell from her tone that this was just about the last thing she wanted. \n\n\"Well, maybe. But there would be cops everywhere in court \u2013 believe me, I know. It's not like he could do anything to hurt you.\"\n\nAnother silence followed. He ran his slippery thumbs firmly up the undersides of her forearms, certainly in no hurry to bring the massage to a close. \n\n\"I suppose...it couldn't hurt just to find him. Just to figure out where he is,\" she said, sounding very tentative.\n\n\"We'll locate him, and then we can decide what to do next. You're calling the shots here. We can go as fast or as slow as you like,\" he assured her.\n\n\"So...when?\"\n\n\"How about Friday, after burger night?\" \n\nWorking at Maria's Grill had none nothing to diminish his appetite for hamburgers. He was their dishwasher AND their best customer.\n\nShe thought about it for a while. \n\n\"We can go in hats and scarves, right? So even if he sees us, he won't recognize us?\"\n\n\"Absolutely. We're not going to leave anything to chance. Safety first,\" he replied, with conviction.\n\n\"Okay, let's do it...just find him, nothing else, okay?\"\n\n\"Nothing else. In and out, fast. We'll keep it nice and simple, so nothing can possibly go wrong,\" Mac said.\n\n\"Now you've jinxed it,\" she joked, and her smile returned.\n\n**\n\n\"This is it. I recognize the smell,\" Nadja whispered.\n\nIt was a dark, unseasonably cold Friday evening. The two of them stood in the tiny vestibule of the Millbank Estate apartment building, wrapped from head to toe in winter clothing. Nadja clung to his arm fiercely; her body language wasn't difficult to read. The less time spent there the better. It was where Aden lived; where she'd spent four awful years.",
        "\"The directory shows the first letter of the first name, the full last name and the apartment number,\" Mac replied using the same hushed tone, \"There are two A's on the fourth floor. McDougall and Halloway. Either of those sound familiar?\"\n\nShe shook her head.\n\n\"Okay, we'll try McDougall first,\" he said, then pressed the call button. There was a long, tense pause as they awaited a response.\n\n\"Yes?\" came an elderly-sounding female voice from the speaker. Definitely not Aden.\n\n\"Uh...sorry ma'am. I pressed the wrong button by accident,\" Mac said. The lady disconnected.\n\n\"Aden Halloway it is,\" Mac whispered, \"Let's be sure.\"\n\nHe pressed the call button. There was a much shorter wait.\n\n\"Hey. We're running late. She'll be down in ten,\" muttered a man's voice.\n\nHe heard Nadja's sharp intake of breath. No doubt about it now \u2013 it was her former pimp. They had him!\n\n\"Sorry...wrong button,\" Mac replied. Aden cursed and disconnected.\n\n\"Apartment four-eleven,\" Mac whispered.\n\n\"Great. Let's get out of here,\" Nadja said, already tugging him in the direction of the exit. \n\nShe didn't need to say it twice. He quickly moved them to the door, opened it...\n\n...and came face to face with a middle aged man hobbling towards them, leaning heavily on a wooden cane and favouring his right leg. He wore a dark trench coat to ward off the wind and chill. Probably a businessman or something.\n\nMac stepped back and held the door. \"After you,\" he offered.\n\n\"Thanks. Much appreciated,\" came the reply. The other man hobbled past them and into the foyer of the building.\n\nMac tried to lead Nadja out but she stood rooted to the spot, then started to tremble violently. \n\nAnother panic attack? Jesus, not here of all places! \n\nAs casually as possible he slipped his arm around her waist and half-carried, half-dragged her out the door and into the frigid evening. When they were alone he spoke to her in calming tones even as he continued to bear her away from the building.\n\n\"We're going home. We'll be there in a few minutes. Just relax.\"\n\n\"That voice...it was him,\" she whimpered.\n\n\"It's okay, don't worry about Aden. He didn't see us. We'll be in the apartment before...\"\n\n\"No...the man we passed...he...\" she started, then her voice broke and she went quiet.\n\n\"They guy we passed just now? You know him?\" Mac quickened his pace, eager to get Nadja home in case she melted down completely. At least she was walking on her own now.\n\nShe nodded. \"The devil.\" \n\n\"Ten minutes. We'll be home in ten minutes. He can't hurt you.\"\n\nSuddenly she stopped dead. Mac tried to get her moving again but she shook off his efforts. She definitely wasn't faring well.\n\n\"Nadja, just a few more minutes. Hang in there...\"\n\nShe stood still, trembling, her eyes closed, fists and jaw clenched. \n\nA couple of minutes passed in that state and he began to wonder if she'd gone catatonic. He just stared at her silently, helplessly, not having any idea what was wrong. Stupid! Stupid of him to bring her out here like this. He should have guessed the trauma of hearing Aden's voice again would be too much. How did the guy with the cane factor into all this?\n\nHe quickly glanced up the street, gauging the distance to his apartment. Two blocks, maybe slightly more. He could carry her, but it would attract tons of attention. He considered trying to flag down a taxi instead.\n\n\"We have to go back,\" she said in an even tone. She'd stopped shaking, and now seemed calmer. Maybe a little too calm, given the circumstances.\n\n\"Back?\"\n\n\"To Aden's building. We have to stop that man who passed us on the way out.\"\n\n\"Why?\"\n\n\"Aden said 'she'll be down in ten'. That means he's got another girl now. Another girl he's forcing...\"\n\n\"Okay. Let's go home. Go home, call the lawyer and go to the cops right away. Tonight, I mean.\"\n\n\"That man we passed, his name is Gammage. He's...\" she searched for the right word, then gave up and shook her head. \"He needs to be stopped. Now, before he gets his hands on the new girl.\"\n\n\"There's a pay phone a block away. We'll call the cops.\" He cursed inwardly \u2013 if cell phone plans weren't so fucking expensive he'd have one and this would all be simple.\n\n\"By the time the police arrive it'll be too late. She'll already be alone and helpless at his house. Mac, he'll hurt her...in ways that won't heal.\"\n\nHe didn't need to ask how she knew these things; the answer was obvious. Anger welled up inside him at the thought of anyone hurting Nadja. Anger...and a new appreciation for her strength. As terrified as she clearly was of this Gammage guy, she was willing to intervene to save another girl from a horrible fate. \n\nHow could he do any less?\n\n\"Alright. Let's get you someplace safe, then I'll hurry back and do...something,\" he said, looking around for someplace he could leave her. A convenience store, maybe, or a coffee shop? There were plenty of stores still open, but he didn't want to leave her someplace sketchy.\n\nHe felt her hand slide into his.\n\n\"No. We do this together.\" her voice was quiet, but firm.\n\n\"What? Forget it. Way too dangerous.\" he protested.\n\n\"There's no time, Mac,\" she said, and began pulling him back towards Aden's building.\n\n\"This is stupid. You can't do any good if it gets violent. I'd feel better if you were out of the way,\" he said.\n\n\"I'm not leaving you,\" she said, and it sounded final.\n\nReluctantly, he followed, and turned his thoughts towards the conflict to come. He figured one older guy with a bum right leg shouldn't be a big problem. He'd walk up to Gammage casually, then kick him hard in the right knee. Or maybe sucker punch him in the gut. The guy would go to the ground, they'd grab the girl, flag down a cab and go straight to the cops. Nice and simple.\n\nMac knew it would be an unprovoked attack; a flagrant violation of his parole. The sidewalks weren't crowded but there would still be a few witnesses to the incident. The cops would throw him in jail, but he'd get a phone call. He'd call Bob Gordon and enlist the lawyer's help getting Nadja her police declaration and eventually her visa. \n\nBottom line: they'd save the girl and Nadja would probably get her visa, but he'd go back to prison on a parole violation. \n\nFuck. \n\nWell, maybe whatever public defender got assigned to his court case would be better than the last one was. Or maybe the judge would believe the story that he was just trying to save a girl he'd never even met. Heck, the girl might even testify in his defense. Not goddamn likely, but not impossible.\n\nIt wasn't a perfect plan, but good enough. Sometimes 'good enough' was all you could ask for. He wished he could have more time to prepare, or that he were smarter, but unfortunately he'd have to play the hand he was dealt. A couple of minutes wasn't enough time to come up with anything better. \n\nHe fished his wallet out of his back pocket as they walked, removed his cash and debit card and stuffed them into the deep pocket of Nadja's winter coat.\n\n\"Listen, you've got eighty dollars in cash. My debit card access code is one-two-nine-eight,\" he said in a low voice as they walked, \"If anything happens and I'm not around, the very first thing you should do is withdraw six-hundred dollars from a cash machine...\"\n\nNadja tried to stop as the implication of his words dawned on her. \"Wait! Let's think about this. There's got to be some way...\"\n\nMac pulled her forward. They were a few steps away from the walkway to the apartment foyer. There was no time, and no backing out now.\n\n\"The rent is paid until the end of next month,\" he continued, \"After that, talk to Maria. She likes you \u2013 she'll help you.\"\n\nHe stopped suddenly, dragging Nadja to an abrupt halt at the end of the walkway.\n\nThe middle-aged guy \u2013 Gammage \u2013 was limping slowly down the path towards them, leaning heavily on his cane with each step. A dark-haired guy \u2013 younger and taller, wearing jeans and a white hoodie \u2013 was walking with Gammage and the two men were talking. A young girl stumbled along between them, trying to keep up.\n\n\"Jesus, she's just a kid,\" he said quietly.\n\nThe girl looked to be in her early teens \u2013 fifteen, tops. She was black-haired and petite \u2013 rail-thin and dressed only in a red negligee and some ill-fitting high heels. Her thin arms were folded over her chest; she had to be cold. The expression on her face was one of hopeless dread. He could see a lot of Nadja in that young girl.\n\nThe thought made him even more determined to put a stop to this.\n\n\"There are two guys with her \u2013 Gammage and a tall guy,\" he whispered as he awaited them at the end of the path.\n\n\"It has to be Aden,\" she replied, and he heard the determination in her voice waver, \"he usually walked me out to the customer's car. What should we do?\"\n\n\"No idea,\" he replied, trying desperately to sort out a strategy. A two-on-one fight was a very different scenario than what he'd prepared for!\n\nHe could take out the limping guy fast \u2013 then at least he'd only have to deal with Aden. The pimp was taller, maybe six-two, but didn't look all that beefy. And Mac didn't actually have to beat Aden...even if he kept him occupied until someone called the cops it would amount to a victory either way. Suddenly, he liked his odds a lot more.\n\nMac was out of time; Gammage and Aden were right in front of him, oblivious to his presence. Holding hands and bundled up as they were, Mac and Nadja looked like any other unassuming couple out for a walk. \n\nThat would quickly change, but Mac was grateful that at least the first move would be his.\n\nAs soon as Gammage came within range, Mac unloaded his hardest punch into the older man's soft midsection. \n\nCompletely unsuspecting and unguarded, Gammage took the full force of the blow. He squeaked, let go of the girl, doubled over and collapsed onto the pavement. \n\n\"Take her,\" Mac growled, grabbing the girl's skinny arm and shoving her into Nadja. Both women stumbled off the walkway. He quickly turned back to Aden, hoping the surprise attack had caught the pimp off guard.\n\nNo such luck. A searing, shooting agony exploded on his right side just under his ribcage, a pain so intense that for a moment it consumed his awareness, shoving everything else aside. \n\nHe'd been stabbed. \n\nMac grabbed Aden's right wrist with both hands, trying to immobilize it and prevent the blade from twisting and jostling around in his guts. Aden pressed the attack, raining left-handed punches down on Mac's head and face. A few of them connected but Mac could only feel the point of the knife; it twitched and jerked inside his abdomen, doing serious harm, hurting badly enough to weaken his knees. But underneath the pain there was wrath, and as one increased so did the other.\n\nAden was taller, and he had the knife. But Mac was stronger \u2013 he'd spent seven years lifting weights and fighting with inmates in prison.\n\nAnd Mac was angry.\n\nHe welcomed the rage \u2013 a pure, righteous, all-encompassing fury that began to drown out the burning pain of the knife wound. He looked up into the other man's eyes.\n\nAden was the man who had abused and dehumanized Nadja. \n\nAden was the man who had subjected her to pain and humiliation and the risk of lethal disease. \n\nAden was the man who had terrorized her and left her fearful and timid.\n\nMac snarled, gritted his teeth and tightened his grip with both hands on Aden's wrist. Tighter. Tighter. And then a slow wringing motion. \n\nThe punches continued to land on Mac's face; his ear, his jaw, his nose...but they were clumsy now. Glancing blows. Hurried. Panicked. Aden wasn't trying to injure him anymore. Aden was trying to disengage, to escape. The knife sawed and slashed as Aden struggled to free his wrist. Mac barely felt the damage.\n\nSNAP.\n\nThe wrist broke. The hand holding the knife handle went slack. Aden howled. Mac grinned. \n\nA couple more vicious twists of the ruined arm brought Aden to his knees, shrieking. Still clutching Aden's wrist with his left hand, Mac drove his right fist into the side of his opponent's head. The taller man lapsed into unconsciousness.\n\nBut Mac didn't let go. He wasn't finished \u2013 not even close. There was more damage to do. More bones to break \u2013 many, many more. And when he finished with Aden he would start on Gammage. The older man was still writhing on the ground, clutching his stomach. He would suffer for what he'd done...\n\nHe felt a hand on his shoulder and whirled, expecting an attack.\n\nIt was Nadja. \n\nShe was saying something. She'd shed her hat and scarf \u2013 given them to the girl \u2013 and he could see her lips moving, an expression of desperate concern on her face. It gave him pause, and he dropped Aden's limp arm. \n\nNadja was important. She was the only good thing in his life. He should listen to what she had to say.\n\nHe loved her.\n\nBut her voice was far away, and he couldn't make out the words. And then the world spun and she was above him, looking down at him with her beautiful, sightless eyes. Her mouth was moving but there was no sound. \n\nHe felt cold. \n\nThen there was darkness.\n\n**"
    ],
    "authorname": "North200",
    "tags": [
        "consensual",
        "romance",
        "massage",
        "love"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/beginning-again-ch-05"
}