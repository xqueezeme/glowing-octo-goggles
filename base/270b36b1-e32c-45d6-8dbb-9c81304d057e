{
    "title": "The Artifact Ch. 03",
    "pages": [
        "It was late morning when I woke up with the urgent feeling that I'd left something undone. I thought for a moment, replaying in my mind the vision I'd had last night and remembered that the artifact had told me to try reading my own mind. I was upset that I'd let myself forget to do that, it might be important and I'd nearly forgotten.\n\nI relaxed and directed my focus into my own mind. I could feel my thoughts being invaded by myself. It was a weird, very subtle feeling. The scary thing was, the longer I did it, the more I was sure that I'd been scanned the previous evening, when I'd seen the man from the limo.\n\nI refocused on what I needed to find out, and looked deep into my own mind. According to what I was able to read, I was quite a shallow fellow, flitting from thought to thought, without any planning what so ever. I pressed harder and was unable to find any trace or evidence of the artifact. I thought for a moment and looked for a seam between solid truths. I pushed in on a laser sharp front; a memory that I knew to be false and managed to punch behind the fa\u00e7ade a little. What I saw was a little scary and awe inspiring.\n\nI appeared as a giant marble statue, surrounded by nearly a thousand strong ancient soldiers with swords and spears. They stood between my vantage point and the marble statue without moving. It was very impressive, and had I had a body, it might have even been frightening.\n\nI pulled back and saw the false memory that I'd pierced with my mind being repaired better than it was before. It would appear that I was safe from all but the most determined attack. \n\nI said to the artifact, \"I see how well you've protected me.\"\n\n\"This was something that you needed to learn before your confrontation with the pure evil one. You must learn three more things before you face him. I will keep you safe until you are ready.\" The artifact told me ominously.\n\nHearing the tone that the guide had used, I paid very close attention as directions were given: as I once had during classes taught by army instructors about small unit tactics, being taught by people who had been where I was headed. What I was told was the least likely thing ever; \"Get everyone up, cleaned up, get dressed, get something to eat and then go into the casino and gamble.\"\n\nThe girls were excited when I woke them up. Both of them thought that I wanted to molest their luscious bodies once again. They were right of course, but first we had work to do. I managed to get them into the shower with me and we thoroughly washed each other. I stayed in the shower after I was done to watch Kathy help Julie shave her pubic hair off completely and then left as they continued to do her legs and under arms.\n\nI assume that Julie returned the favor while I went to the sink and very carefully shaved as closely as I could and then brushed my teeth. The girls came out of the bathroom, wrapped in towels a few minutes after me, looking at me puzzled.\n\nI was sitting on the bed, considering what I should wear when the girls asked me, \"What are we going to wear?\"\n\nThe answer came to me as they asked, \"Look in the closet and see if you can find something that you like.\"\n\nJulie and Kathy both squealed in delight as they rushed over to the closet and then cooed in pleasure as they examined the clothes that they found there. They dropped their towels and held dresses in front of each other, choosing something to wear that made them look spectacular.\n\nI was fascinated that neither of the girls seemed to find anything unusual in the fact that they both had brand new wardrobes. Julie and Kathy came over to me carrying their choices to the bed, still wearing nothing more than wide smiles. I smiled back at them, examining their new shaves. I reached out and lightly stroked the new bare areas, enjoying the smooth feeling.\n\n\"I thought that you were in a hurry,\" Kathy said with a sigh and a smile.\n\n\"I am,\" I said as I stood, dropped my towel and began walking toward the closet. \"I just thought that I ought to tease you a little bit first.\"\n\nThe girls were both giggling with excitement as we all quickly got dressed.\n\nI put on a knit mock turtle neck, long sleeve shirt with a new pair of khaki slacks and a navy blazer. I opened the briefcase and pulled out a packet of $5 thousand, putting it in my pocket and then put the briefcase in the closet. I knew that the case would be safe in my room, and was unconcerned about the possibility of the cash being stolen.\n\nWe walked down the hall toward the elevator. The girls looked fabulous on their dresses. The low back and scoop front clearly showed that they were being worn bra-less. Their skirts fell to mid thigh, and were tight enough in the ass to suggest the total lack of underwear. They both wore matching high heels and were carrying small matching purses as well.\n\nAs we entered the empty elevator, Julie looked at Kathy and said, \"Your nipples are as hard as mine.\"\n\n\"I think yours are harder,\" Kathy replied, smiling back at her.\n\nThe girls were pinching each other's nipples through the thin material of their dresses and giggling wildly: while I was leaning against the rear wall of the elevator car and smiling widely. The elevator door opened two floors below and a couple got onto the elevator with us. The embarrassed looks on Kathy and Julie's faces as they let go of each other and moved into my side was so funny, I began to laugh heartily.\n\nAs we rode down to the lobby, the dark glare projected form the woman was only exceeded by the jealous look of her husband. I managed to keep my expression mostly neutral as the woman's expression began gradually to change into desire. When we reached the lobby and exited the elevator, the woman pushed the button to take her husband back up to their room. I hadn't intentionally tried to influence her attitude, but in reading her mind, I found that she was surprised that she was horny. I figured that her change of attitude must have come from me. I looked back as the door was closing and saw her flowing into her husband's arms, knowing that the day would be better for them both.\n\nI was hungry as we were seated in the coffee shop: I was seated in the middle, with Julie and Kathy on either side, snuggled in close. Our waitress dropped off our menus and went to get us our coffee. \n\nAs the waitress came back to our table and began filling our cups, I looked at her closely. She appeared to be in her very late fifties, or early sixties. I confirmed that by looking into her mind. Clara was sixty-one years old. She'd been married to her husband Ben for thirty-nine years. Ben was ill, and had probably less than a year to live. For the last five years, Ben's illness had rendered him impotent. Before Ben's illness, the two of them had enjoyed a passionate, exclusive, loving relationship. Clara, despite having her five year enforced celibacy, loved Ben, and would never betray him. I decided to help her with my special power.\n\nI locked eyes with Clara over top of the menu, and began stimulating her very subtly. At first her face reflected confusion and then her rising passion brought color to her cheeks. The girls looked up and noticed the expression on her face. Without words, I shared her situation with them to let them know why I was doing this. Both Julie and Kathy kissed my cheek as I kept my gaze locked with Clara. \n\nClara's orgasm was small, quiet and came almost as a surprise to her. It both satisfied and scared her. She picked up the coffee pot and hurried away, without speaking. I sent a calming thought to her quickly retreating back as she hustled away.\n\nAs she left my line of sight, I noticed a man walking toward me. When he reached me he pulled out a large, ornate Celtic cross on a heavy silver chain. Before he began speaking I read his mind to find out what he was thinking. His name was Salvatore Colacecchi. He had inherited the cross when his father died a few years before. Sal had gambled away all his money and needed to sell the cross to make it home and to feed his family. \n\nI listened politely as he began speaking. \"I made a mistake, and started gambling again. I'm trying to sell this cross and was hoping you might want to buy it.\"\n\nI reached out my hand to take and examine the cross, as I reached into his mind to fix his problems. The cross was intricately engraved, and quite heavy. Even though it was tarnished, I realized that it appeared quite valuable. I had no real use for it and was about to give it back to him, when I heard the artifact tell me, \"Buy it, and be generous.\"\n\n\"How much do you want for it?\" I asked\n\nHe looked at me with desperation in his eyes and replied, \"It's probably worth two or three grand, but I'll sell it for five hundred.\"\n\nHis eyes looked down at the floor as he waited for my decision. I made him wait for a few seconds and then I said, \"I'll tell you what, you promise to try to quit gambling I'll give you a thousand for it.\"\n\nSal stammered out a yes as I reached in my pocket and counted out the money. \"Thank you sir, and may god bless you.\"\n\nI put the cross on and scanned everyone nearby who might have overheard and made them forget the transaction, including the girls. I heard the spirit of the artifact say, \"You're beginning to learn.\"\n\nI was smiling as our waitress came back over with another waitress. When Clara stopped at our table she said, \"This is my friend Sally, she'll be waiting on you, I'm leaving for the day.\"\n\nSally was eighteen years younger than her friend. She was divorced and had a much harder edge to her personality, but despite that, she was a MILF.\n\nI felt guilty as I realized that I'd not helped Clara at all, and what's worse I'd made her feel bad. As she was leaving I made it so when she woke up the next morning to come to work, she wouldn't remember the incident and would think that she'd left work due to a headache.\n\nSally was looking at us smiling with a hungry look in her eye as she took our breakfast orders. As Sally turned to leave, Kathy asked her, \"This is a little early for the morning shift to leave, when do you get off?\"\n\n\"As often as I can Honey; as often as I can.\" Sally replied as she walked off to turn in our order. We were still occasionally chuckling when she finally brought our meal.\n\nAfter we finished eating our meal, I pulled out the rest of the money that I brought with me. I peeled off a thousand dollars for each of the girls. As I handed them their money I told them quietly, \"You are both going to go gambling. I'll help you win ten thousand dollars each. Just do what I direct you to do and you'll win.\"\n\nIt was a measure of the confidence that they had in me, that they believed, without question, that I could perform this impossible task. I paid for the meal, tipped generously and led the girls to go buy chips.\n\n****\n\nThe girls and I wandered through the casino after we got our chips. They each had a thousand, while I started out with a hundred. I knew I was looking for something, but I had no idea what. I was finally drawn to the roulette tables.\n\nThe girls both stood closely to me, with their arms around my waist, as I observed the play and the bets. After watching for a few spins of the wheel, I instructed the girls without speaking out loud. Julie would bet odd or even, Kathy would bet either black or red and I would bet on first third, second third or third third; whichever third which had a number which would satisfy both their bets.\n\nWe won steadily; with every spin of the wheel. The head man of that area was sure that we were somehow cheating, and would have shut the table down if I would have let him act; however, I kept him from doing anything so that we would continue to win. It was ridiculous how easy it was to win the money. Each of the girls won their ten-thousand, and I won twenty thousand before we quit.\n\nAs we left the table, I felt the subtle tingle letting me know that I was being scanned. I reached out with my mind and protected the girls, modifying their memories so that they would match the cover story that the artifact and I had designed. As we headed over to cash out our chips, my adversary walked up to us.\n\nI looked into his face, seeing his dead eyes. His eyes fastened on the cross I'd purchased earlier and he said, \"You seem to have done pretty well. Where did you win all those chips?\"\n\n\"We were playing roulette at that table over there,\" as I glanced over my shoulder, \"but it looks like they shut that table down.\"\n\nHis intense gaze focused in on me as he said, \"They really don't like to lose. When they lose too much they shut down the table. I'm surprised they didn't shut it down earlier.\"\n\nI noticed that his gaze dropped down to the cross I'd purchased earlier as I said, \"I didn't know that. I've never been to Vegas before. I really don't know much about gambling except a little about poker.\"\n\nHis eyes traveled back up reluctantly to my face, \"That's an interesting cross.\" He put his finger out to touch it. I let him feel the power of four of the entities through the cross. \"Where did you get it?\"\n\n\"It's been in my family forever. My grandfather was going to give it to my dad, but he died while I was in basic training. Grandpa died just a few weeks ago. I got this in the mail just before I got out of the service. It's my lucky charm.\"\n\nHe looked at me and finally asked, \"How much longer are you going to be in Las Vegas?\" \n\n\"Just a couple of days, I really just wanted a little R and R before I got home.\" I told him.\n\n\"I was going to invite you to a private poker game in a couple of days. The buy in is one hundred thousand. If you win, you'll walk out with a half million dollars,\" He said, trying to tempt me. He pulled out a business card, wrote down his suite number and handed it to me. \"Call me if you change your mind.\"\n\nI thanked him as I felt him pushing on me to get me to change my mind. I shook my head as if I was confused. \"I'll call you if I change my mind,\" I told him, acting as if his manipulations were effecting me, as I put his business card in my pocket.\n\n****\n\nI was surprised to see that it was lunch time already. I'd cashed out all of our chips and was discussing with Julie and Kathy what we should do next when Kathy said, \"I'm hungry.\"\n\n\"Me too,\" Julie added.\n\nI was a little hungry as well, but didn't care what we ate, so I let the girls take me back to the coffee shop. We ordered and were waiting for our food when I gave the girls their money. They managed to fit the cash bundles into their small purses.\n\nWe ate quickly, and went back up to our room. The door had barely closed before they attacked me. Clothes flew as they quickly stripped me and pushed me on to the bed. \n\nWe spent the afternoon in bed, pleasuring each other over and over. I introduced a new element into our activities. Kathy and I moved out of the way and watched Julie as she masturbated. It was one of the hottest things I'd ever seen. I concentrated on Julie's expression, which was at first, mostly embarrassment, changing into excitement and then resolving into pure lust.\n\nKathy was breathing as hard as Julie after the exhibition. She lay down beside her after Julie's breathing got back to normal and began her own show. Julie reached out to caress her breast as Kathy built her orgasm, one hand rubbing her clit as the other thrusting two fingers deeply into herself. Watching as she became more and more vocal with excitement, I noticed that I was stroking myself as well. When Kathy came, every inch of her body seemed to flush and quiver, from the top of her head and bottom of her feet to her juicy pussy. \n\nI moved right beside her, pointing myself at the two girls as I continued to stroke myself. Kathy and Julie were both fascinated, as they watched me.\n\n\"I'm going to cum on your tits,\" I told them as my point of no return was reached. \n\nThey got closer to me and each other as jet after ropey jet flew out of my highly excited cock and splashed onto their ample chests. When the last few dribbles had come out they were rubbing it into their skin, as if it might be a magic breast growth cream. I lay down beside them, and after a couple of minutes we began to talk.\n\n\"I don't remember ever being so embarrassed and excited at the same time before.\" Julie said. \"I know that I've never cum that hard from masturbating before.\"\n\nKathy added, \"I've never seen anything so hot before. I almost came with you without even touching myself. When you finished, I had to show you too: but the best was watching Jack.\"\n\n\"I've never seen a man do that before,\" Julie said.\n\n\"Every man does it,\" I said. \"If you ever run into a man who insists that he doesn't, you know one thing about him right away,\" I added with a smile.\n\n\"What?\" Julie asked.\n\n\"He lies,\" I answered with a chuckle.\n\nThe girls laughed with me for a few seconds, and then Kathy said, \"My boyfriend use to tell me that he didn't jack off; but he used to cum in the cups of my silky bras that I had to hand wash, so I knew every time that he did it.\"\n\nAs they continued to talk, I realized that they were including me in girl talk, as a measure of how much they valued and trusted our relationship. I'd done nothing supernatural to encourage this kind of intimacy, so I was touched by it.\n\nI listened to the two women talk for a time when Julie finally said to Kathy, \"Honey, your boobs are all white and flaky. Jack's cum finally dried.\"\n\n\"You just want to suck it off, don't you?\" Kathy said to her with a smile.\n\nInstead of answering, Julie leaned over and began licking the crusty dried cum from Kathy's chest.\n\n\"What does it taste like?\" Kathy asked her curiously.\n\n\"In between dried caviar and licking the salt off of fish jerky.\" Julie responded. \"I've got some here that you can try.\"\n\nI continued to watch as they cleaned each other off with their tongues. At first, I thought that they were doing it out of desire for each other; but when I looked into their minds, I realized that they were doing it to tease me. I decided that it was time for us to get ready to go out for the night, so I got us all into the shower.\n\nI came out of the bathroom, after a very pleasant shower and was unsurprised to find that the room had been totally cleaned, our clothes were hung up and unwrinkled and my shoes were shined. The girls came out shortly and we all quickly dressed, ready to go out to dinner. I made sure that I wore the cross, although I didn't expect to run into anyone who would need to know I had it. It's always good to be cautious.\n\nOne thing about the casinos that I never expected was the food. Casinos make money on gamblers. Even the most addicted gambler needs to eat; but doesn't want to waste money or time away from the action. Casino owners had figured this out and built several restaurants into their buildings.\n\nA gambler, who has a hungry wife, is dragged away from the casino to take her to get something to eat. If the best, cheapest restaurant around is twenty feet from the tables, and he can get a table quickly, he can be back losing money in less than an hour.\n\nThe girls and I went to the buffet. For only $.99 each, we had an amazing, all-you-can-eat meal. Beef, pork, chicken, seafood, baked, fried, roasted almost everything: there were even small shrimp cocktails. In addition to the meats there were dozens of side dishes, salads and an entire table of desserts.\n\nI watched the girls eat what seemed to be 3 thousand calories each. I've never seen women eat like that before. When I was in the service, I was told that a c-ration box that had three meals contained thirty-six hundred calories. They told me that the only reason that we never seemed to gain any weight was the fact that burned off the calories so fast humping the boonies. I figured that I was exercising Julie and Kathy so much that they need the extra fuel, that's why they were eating so much.",
        "We were lingering over coffee, after our desserts when I saw Wendy walking over to me.\n\n\"Hello Jack,\" she said as the girls looked curiously at her, \"Bill and I are eating dinner over on the other side of the restaurant and when I saw you, I thought I'd see if you were able to help me with my problem.\"\n\n\"Kathy, Julie, this is Wendy. Wendy, this is Kathy and this is Julie.\" I said as I made the introductions. \"I met her last night and decided to help her out of a jam.\"\n\nI could tell as I watched Wendy shake hands with the girls that she was on the verge of tears, so I told her, \"Let's take a walk over by the rest room.\"\n\nWhen we got to the alcove by the rest room entrances, I pulled out the large envelope containing the twenty thousand dollars I'd won earlier and handed it to Wendy saying, \"It's more than you lost, but enough for you to put the down payment on your house. I started out with a hundred, I just need you to pull out a hundred and give it back to me.\"\n\nWendy took the envelope from me and then began crying as she fished out a hundred dollars. She handed me the money and began crying in earnest as she threw her arms around me, hugging me tightly. I looked into her mind and saw that she didn't think that I'd be able to help her, and had still thought that her life was over. Her tears were tears of relief.\n\nI had the girls take her into the rest room to get herself together and repair her makeup. I went back to the table to finish my coffee and wait for the girls. When they finally reappeared, Julie told me, \"Wendy and Bill are going to take us to meet her sister. I think you'll really enjoy it.\"\n\nWhen I heard that, I was surprised: but let myself be pulled from the table. I paid for our meals and waited outside the restaurant until Wendy and Bill joined us a moment later, and we were all introduced. We all got into their sensible car and took a short ride off the strip, headed to a topless club where Wendy's sister worked.\n\nI wasn't all that enthusiastic about looking at stranger's naked boobs, particularly when I knew that it was unlikely that any of them were as nice as Julie's, let alone Kathy's, which in my opinion were God's finest work ever. I could tell however that both the girls were excited.\n\n\"I've always wanted to see what goes on in a place like that.\" Julie told me quietly.\n\n\"Me too,\" Kathy said. \"When I was working as a waitress, a lot of truckers used to tell me that I should work in a club like that. They told me that I'd make a lot of money and the thought of it always makes me so wet.\"\n\nKathy discretely pulled her skirt up just high enough for me to see the wet spot on her panties. I was chuckling as I noticed Bill looking in the rear view mirror, trying to see what Kathy was doing.\n\nThe parking lot was less than a third full when we pulled in. Kathy and Julie's excitement kept my mind occupied as we walked into the club. Coming from the dazzling light outside, into the dark of the club, it was a couple of minutes until my eyes adjusted.\n\nThe club was massive. There were two large bars with stools, one against either side wall. Next to the end of the bars there was a small, semi-circular stage, with a stripper pole in the middle and seats all the way to where the stairs led to the stage on either side. There was a large mirror in the back, and ample lighting to highlight every womanly curve that was revealed during the show.\n\nOn the far side of those small stages were busy waitress stations. Scanning the tables and booths, I estimated there were only one-hundred twenty or so men. I figured that they could seat at least four times as many as were currently here. I looked at the back corners where they had another small stage.\n\nThe back wall had a wide hallway that matched up with the aisle way. There was a sign for both restrooms and exit near both hallways on either side of the large center stage. There was a catwalk to another circular stage twenty or twenty-five feet out toward the center of the room. Chairs were packed tightly around the stage as a talented dancer managed to pull tips from nearly all the men who were sitting there. Even if those were only ones, I figured that by the time she worked her way around all the stages she would make at least a hundred dollars.\n\nI looked at Julie and Kathy, smiling as I noticed their expressions. Julie was in awe of the spectacle and Kathy was turned on. I wasn't surprised by either reaction. I glanced over at Bill and Wendy, Bill was gawking at the stripper on the center stage with his mouth open, and Wendy was looking around for her sister. I finally noticed her waiving at a girl coming out of one of the hallways.\n\nWe'd been seated at a large booth, and received our drinks by the time Wendy's sister Sarah worked her way over to us. I don't know exactly what I was expecting, but Sarah certainly wasn't it. \n\nI could see the family resemblance between the two women, but where Wendy was plain, Sarah was beautiful. Her face was delicate, ethereal, and angelic; however, her body was built for sin. A look or a smile from her would make a gay man have second thoughts about his lifestyle. Although her manner of dress was fairly conservative for this location, I could tell that she would look as phenomenal out of her clothes as she did in them. I was stunned when I finally got around to looking into her mind. Within a couple of seconds, I knew one of the things that the artifact had wanted me to learn. \n\nWhat I saw in that brief span of time will take quite some time to write out. I'll tell it as I heard it, directly from Sarah's mind.\n\nSarah's story:\n\nDaddy was always larger than life. He retired from the Air Force as a Major General. He shot down twelve Germans in the Second World War, and three MIGs in Korea. He was older than momma when they got married, and it took a long time for them to have their first baby. From the time she could talk, my big sister Wendy told momma that what she wanted more than anything was a sister. Wendy was eight years old before I was born.\n\nMomma was nearly the age some women have grand children, so Wendy often took care of me. Daddy died when I was eight years old. I don't remember much about him except for his smile, and that he always had time for me. His pictures and all of his medals were on the wall of the living room, right across from the sofa, so momma used to tell me stories about daddy all the time: how everyone looked up to him and wanted his respect. That's what I thought of when I saw this man Jack for the first time.\n\nWhen I graduated high school, momma decided to retire and move to Florida. \"Phoenix was too hot,\" she said, \"besides, there are a lot more people my age down there. I've talked to your sister, and she wants you to come and live with her while you go to college.\"\n\nI was always pretty ignorant about sex, but I wasn't a virgin. In high school, I went out with a guy. He took me to a movie, bought me a hamburger and then took me parking. For him, sex involved putting on a condom, pulling down my panties and sticking it in me. It hurt a lot, and I bled heavily. He came within a few seconds and just drove me home without talking to me. I didn't go out again in high school.\n\nWhen I moved in with Wendy, I knew that things would be better. I knew that she loved me and would take care of me; even though she was a little bit controlling. Wendy had a double size bed that we slept in together. \n\nThe second night I was there I woke up because the bed was shaking and Wendy was breathing hard. She stopped breathing for a few seconds and then started gasping for breath. I thought something was wrong, so I asked her, \"Are you okay?\"\n\nWendy was startled, and looked at me, \"Have you been watching me?\"\n\n\"I woke up and wondered what you were doing,\" I answered.\n\nWendy got up to her knees, dragged the covers down and to my surprise, pulled my 'jammie-bottoms down. I was too shocked to stop her. \n\n\"So now it's my turn to watch you... start rubbing.\" Wendy ordered.\n\nI didn't know what she meant, but she jammed my hand into my crotch and I began to rub. It was really slimy down there. It was even more exciting than the dream. Before long, I was highly excited.\n\nWendy told me, \"Take off your top.\"\n\nI was so turned-on; I just did what she said. When I was totally naked in front of her, she had me resume rubbing. She began instructing me to open my legs wider, shove one or more fingers inside myself, raise my hips, whatever was the most humiliating thing she could think of. Within a couple of minutes, I had a massive orgasm. The first one I'd ever had while I was awake.\n\nThe only other orgasms I'd ever had, was when I had the dream. Ever since I was about twelve years old, two or three nights a week, I'd dream that I was naked in public. In the dream, the more people who saw me, the more turned on I'd get. Most of the time, I'd have an orgasm and wake up. The more humiliating the situation, the harder I'd cum. \n\nAfter this experience with Wendy, I made the mistake of telling her about the dream. From this time on, nearly every night Wendy made me masturbate in front of her. At first, it was in the bedroom at night before we went to sleep; but before long I'd have to get naked in the living room and masturbate while we watched TV at night (she didn't like watching the commercials).\n\nBy the end of my second year in college, whenever Wendy was home, I was naked, usually on the floor with my legs spread and my pussy wet. When Wendy had her friends over, she let me stay in our room until they left, until that night.\n\nWendy had a couple of friends that she went out with from work. About once a week, she'd go out with her friends. They'd go out, have a few drinks and try to pick up guys: but on that night, there was a different agenda.\n\nI decided to shower, and went into the bathroom. When I got out of the shower, all of the towels were missing. I finally decided to put on Wendy's robe and go into the room and they were all three sitting on the bed waiting for me.\n\n\"I didn't say you could wear my robe,\" Wendy said as she came up to me and stripped me naked in front of her friends.\n\nI nearly came right then. Being naked in front of strangers was such a turn on that I was immobilized. I could feel my juices beginning to flow as Wendy told me, \"Get on the bed and show them what a horny slut you are.\"\n\nI was beginning to cry silently as I lay down on the bed and spread my legs, exposing my sloppy wet pussy. Tears were rolling down my cheek as Wendy told me, \"Go ahead and show us how quickly you can cum.\"\n\nMy humiliation fed my libido so much that it didn't take a minute for me to masturbate myself to completion. My orgasm seemed to go on for at least a half an hour; but it was probably just over a minute. After cumming in front of her friends, I was even more humiliated than before. \n\nI didn't think it could get any worse until I heard Wendy say, \"If you think that was something, pinch her nipples on those big floppy titties and watch her cum again.\"\n\nHer friends giggled as they each grabbed a nipple and began pinching, pulling and stretching them. It felt like there was a direct connection between my nipples and my clit as Wendy had me masturbate again. Lisa and Jenny were talking back and forth between their selves, ignoring me and humiliating me even further.\n\n\"Do you feel how hard these nipples are?\" Lisa asked Jenny as she pinched and pulled hard for emphasis.\n\n\"Her nipples are hard, but I can't get over how big and floppy her boobies are. Watch this,\" Jenny said as she grabbed my nipple and began pulling and shaking my tit for her friend.\n\nMy humiliation peaked as Lisa matched Jenny's actions, and they all began laughing at me. I began to cum, over and over again. I'd never felt anything like it before and I crave it like nothing else.\n\nI was still cumming as Wendy told her friends, \"She's probably a lesbian now, and I bet she'd eat your pussy if you want.\"\n\nI spent the rest of that night, and at least once a month for the rest of the time I lived with Wendy being humiliated by her and her friends. Despite the fact that I loved it, I knew that if I didn't get out of there, I would be sucked down into despair. \n\nI know that Wendy loves me, and that only reason that she treated me that way was because I wanted it so badly. She never touched me inappropriately, or had me touch her. She only stayed in the room to keep me safe. When I graduated, I worked near her for a few months, but soon decided to move here, to Las Vegas.\n\nI needed a job right away, so I took a job here serving drinks. I've never stripped, but I think about it all the time. The only time I can cum when I masturbate is when I imagine that I'm naked in front of a room full of people.\n\nThe funny thing is that I make more than all but two of the strippers: I don't even wear revealing clothes but everyone tips me a lot. I make five times more money than I could at any other job I could find, so I stay here; but lately I begun to want to find someone to share my life with.\n\n****\n\nSarah hadn't even stopped moving before I had formulated a plan and began to implement it. I quickly scanned the people throughout the club, and sent home four of the women and eleven of the men, who for one reason or another would not be able to handle what would come next.\n\nWendy introduced us and I began working on Sarah to help her resolve her issues. I took control of the situation saying, \"Your body seems to be at least as good as any dancer here. You need to get naked now.\"\n\nIt was either her desire, or my tone of command, but tears began streaming out of her eyes as she began slowly unbuttoning her blouse to comply with my order. Julie and Kathy were in shocked disapproval at what I was making her do until I let them see into Sarah's mind. When they saw that this was the best way to make her happy they both got up and began stripping her even quicker.\n\nWendy, despite her personal discomfort, knew that what I was doing was the best way to make Sarah happy. Bill was frozen in place, speechless and shocked as he watched his beautiful sister-in-law stripped in public. He'd always had a thing for her, and had jerked off to thoughts of her often, but he never thought that he'd ever actually see her naked.\n\nI saw the waitress glance over at our table, and then do a shocked double take. She then began hurrying around the club informing the other waitresses and dancers that Sarah was finally taking off her clothes. Within a few minutes, nearly a dozen women and half again as many men were standing around her watching her be disrobed and making comments about her body.\n\nJulie and Kathy had taken off her blazer, her blouse, her belt, her knee length tight skirt and were releasing the catch on her bra as tears flowed frankly down her face. Sarah looked at me as her breasts were exposed to the appreciative stares of the crowd. Sarah was being displayed for her audience in just her garter belt, stockings, high heels and panties.\n\nSarah's emotions were whipsawing between fear that I would tell her to take off her panties and an even greater fear that I wouldn't. A wet spot quickly grew on the gusset of her briefs as I watched, stretching out her uncertainty. \n\nI looked up into her eyes until the tension was nearly unbearable for her and then said, \"You need to take those panties off before they get so wet that they're unwearable.\"\n\nJulie and Kathy stood close beside her to make sure that she didn't fall as she pulled her now soaked panties down. The girls grabbed her elbows to steady her when she came as she straightened back up.\n\nTwo thirds of the people in the club were standing around her as I had Sarah lie on the table and masturbate for the group. I heard a zipper being pulled down as Sarah's next orgasm began.\n\nI noticed that a couple of the girls had begun jacking off the guys beside them as they watched Sarah, mesmerized. Suddenly, half the people in the club were stripping as they paired off. Too much was going on to follow as the entire place became the largest public orgy since ancient Rome.\n\nI moved out of the line of fire as half a dozen men let their cum fly all over Sarah within a couple of minutes. I looked over at Wendy and Bill and sat that his pants were around his ankles, while Wendy bounced on his lap, holding her panties. I told Wendy, \"I'm going to take care of Sarah; you don't have to worry about her anymore.\"\n\nI saw gratitude in her eyes as I turned to go. After eight orgasms, an exhausted Sarah had a hard time pulling herself to her feet. Julie and Kathy had picked up her clothes and purse as we prepared to grab a cab back to the hotel. Walking outside, Julie and Kathy were still carrying Sarah's clothes when the taxi pulled up. \n\nThe cabbie's eyes bugged out as we all piled into the back seat. I paused for a moment before I climbed into the cab, and sent a significant amount energy toward the club ensuring that a good time would be had by all, for the rest of the evening. I got into the cab, having done all that I could to keep everyone in the club safe for the evening.\n\nI let a grateful Sarah put on her blouse and skirt for the walk through the hotel lobby, but made her carry her underwear in her hand. A close look at her would reveal the blobs of only partially dried cum in her hair, and the shiny patch on her cheek that was there for the same reason. Knowing that there was a high likelihood of being caught in an embarrassing situation was ramping up Sarah's libido; however, I used my abilities to keep anyone from noticing anything amiss. We made it back to our room without incident. \n\nSarah had spent much of the last several years alone and was deliriously happy that we all cared for her. Now that we were alone in the room, the desire to be publicly humiliated changed into much simpler submissiveness and desire to serve.\n\n\"I want you to cum for us again,\" Kathy told Sarah after we'd spent two hours satisfying each other.\n\n\"You know that you want to,\" Julie said as she and Kathy pulled her knees apart to display the spectacle to me.\n\nI helped Sarah by ramping up her shame at showing us once again. Kathy and Julie watched closely as Sarah completed the task. I kept her from cumming for so long that her orgasm was one of the best she ever had.\n\nSarah was exhausted, trying to recover her breath when Julie and Kathy both turned to me and Julie asked, \"Can we keep her?\"\n\nKathy was nodding as she added, \"Please...? We'll take care of her. She needs us.\"\n\nI thought about it for a moment. On the face of it, it was ridiculous, they were relating her to a stray puppy; but when I scanned Sarah, I saw that she wanted to come with us more than anything else. I looked at her until she cast her eyes down toward the floor and finally said, \"Oh, alright; but you'll both be responsible to make sure that she behaves.\"\n\nAll three women launched their selves at me, hugging my neck and kissing me. I took a few minutes getting them ready for bed. I needed to talk to the artifact, so I sent them to bed and had them go to sleep. Sarah was happier than she'd been in years, drifting off to sleep between Julie and Kathy.\n\nI went into the bathroom and waited, knowing that the artifact wanted to talk with me too. \n\n****\n\nI sat down, closed my eyes and waited for spirit of the artifact that I knew would come. I've never been a patient person, but I've always been able to compose myself and wait as long as needed when it was required. \n\nI realized that I had been in a meditative state for nearly an hour when I sensed the old man coming toward me. I waited until he began talking, taking my cue from his previous behavior.\n\n\"It is good to see you again, my lord,\" the old man said with tremendous dignity. \n\nI nodded patiently as I waited for him to continue. He began smiling as he said, \"You have learned much,\" ",
        "I kept myself from smiling as I realized that he had wanted me to be patient and composed; to give nothing away as I absorbed knowledge without giving anything away. I waited quietly for him to continue.\n\nHis gentle laugh flowed as I waited for him to continue. I knew that he was trying the limits of my patience, trying to make me break down. I didn't give him the satisfaction as I continued to quietly wait for him to get to what we were both here for.\n\nFinally he said, \"Today, you should have learned three things. What did you learn?\"\n\nI began to deliberately answer him as I said, \"First I learned that if I don't pay close attention, I can miss a lot of things when I read peoples' minds. I'd read Wendy's mind and never even seen anything about her sister, despite the fact that it was a large part of her life.\"\n\nI continued with, \"Second, I learned that if I'm not careful, I affect people with my mood alone. If I'm sexually excited I get others excited too, even if it's not what I intend.\"\n\nI was a little less certain of the third lesson that the artifact had tried to impart, as I tried to maintain my confidence. \"Third, I learned that I'm able to affect things physically, not just mentally manipulate people, but to move and change things with my mind.\"\n\nThe old man's eyes glowed brightly with approval as he said, \"You have done well; but we need to go over how our presentation made us appear to the evil one.\"\n\nTo let him know that I understood his plan as a trap, I said, \"You had me purchase this cross to make him think that I wasn't bonded to you. You also masked all but a tiny portion of your power to make him feel less threatened. Finally you had me tell him a story that made him think that I was unaware of the pieces of power and thought that my good fortune was just luck. I'm sure that he thinks that it will be easy for him to take advantage of me.\"\n\nHe appeared surprised and pleased as he said, \"You understand. You will need to be careful, but you should win without any real problem. Your real danger will come after you win.\"\n\nThe old man arose, and bowed out of my presence, warning me, \"Consider carefully what I've told you lord. We'll watch over you as much as we can; but, there is real danger on the horizon.\"\n\nAs the old man left, I realized that I was quite tired, but not at all sleepy. I decided to go back downstairs and get a drink as I thought about what I had been told. I noticed that the advertisement for the show that was scheduled had a canceled sticker over it as I walked into the bar. I wondered what had happened as I found a booth to sit at.\n\nThe waitress that came up to me was young and cute, with a really big smile. We flirted quietly back and forth as I ordered, but I wasn't looking to get over on her, just to pass the time. When she went to the booth next to mine to take their order, I overheard something that caught my interest.\n\n\"I can't believe that the sum-bitch just up and died.\" The older of the two men said.\n\n\"I can,\" The younger man replied, \"I just don't believe that it was a heart attack. I was sure that he'd be shot by a jealous husband. He was only just over fifty and hadn't ever been sick. I sure didn't see it coming.\"\n\nThe first man looked over at him, incredulously saying, \"You're kidding, he was only five foot six, weighed three hundred pounds, smoked three packs of cigarettes a day and the only exercise he got was fucking any women he could get to hold still for thirty seconds.\"\n\nThe younger man looked over at his companion and asked so quietly that I wouldn't have been able to hear him without my ability, \"Did he ever get you laid?\"\n\nThe older man smiled as he answered, \"A couple of times. I used to wonder how he was able to find all those hot women and to convince them to fuck him, let alone anyone he pointed out.\"\n\nThe younger man smiled as he said, still keeping his voice low, \"Every time I booked him in here, he'd get me the hottest woman. That's the reason I'd keep booking him in here. It wasn't because his act was so good.\"\n\nHis older companion chuckled as he replied, \"I thought as much, he really wasn't all that good. So, what are you planning to do about tomorrow?\"\n\nThe younger guy looked puzzled as he replied, \"I've talked the main stage manager and he can't help me. The agency will look around to see if he can find something tomorrow, but you know what it's like on Sundays. I probably won't be able to get any in here until at least Monday.\"\n\nWhen the waitress came back over, we began flirting again, but his time I added enough volume for the two men to hear me as I asked her, \"So what happened to the show that was supposed to be here tomorrow?\"\n\n\"Manny had a heart attack after the last show. He was shaking hands with a man who'd seen the show and he keeled over dead.\" She told me.\n\nShe began to chuckle and stage whispered to me, \"The two guys in the next booth are panicking. They're trying to find someone to take his place, but its Sunday and they'll never find anyone.\"\n\n\"Maybe I can help them,\" I told her, \"Let me talk to them.\"\n\nI stood beside her as she grabbed my arm and took me over to the next booth.\n\n\"This gentleman thinks that he can help you with your problem with the show,\" She told them when we stood in front of them.\n\nThey both looked up at me and I bold slid into the booth beside them. \"I can do a good show for you for tomorrow night.\"\n\nThe younger guy looked at me and asked, \"What kind of act do you have?\"\n\nI smiled as I told him, \"I do a little sleight of hand, tell a few jokes, read minds and do a very fast hypnosis. It's fun and a little sexy. It'll be perfect for an adult crowd.\"\n\nThe young man looked at his companion who asked, \"Can you give us a demonstration?\"\n\nI thought about it for a moment, scanned the waitress and then smiled. \"I think that I'll be able to show you something.\"\n\nI waved the waitress over. When she got back over to us I stood and whispered in her ear, \"I know what you want, and I'll make sure that you get it.\"\n\nI'd read her mind and found out that she wanted to dance in the show. She'd tried out before, and done quite well but she'd been second best. I worked on her to make her glow on the inside so that she'd be the first choice next time.\n\nI motioned the younger of the two men to stand and told her, \"This is your boyfriend for the next sixty seconds. Let him know how you feel.\"\n\nShe reached over, grabbed him and began kissing him. She pressed into him so tightly that it seemed as if she was trying to fit herself into his clothes. Her hands grabbed his ass, pulling him even closer as she ground her boobs into him. When her sixty seconds were up, she suddenly pulled herself away as if startled.\n\nThe other member of the group looked at me and asked, \"It seems that you can do the hypnosis, what else can you do?\"\n\nI looked at him for a moment and smiled, \"You're wondering if I can actually read minds and if I could, would I be able to give you what you want with my sleight of hand. Check your inside coat pocket.\"\n\nThere was a smug look on his face. I'd not gone anywhere near him, so he was convinced that I wouldn't have been able to put anything in there. There was a confused and frightened look on his startled face, and he froze for a second. He then jerked his hand out of his pocket, pulling out a pair of women's underwear.\n\nThere was a puzzled look on his face for a moment as he held the panties out in front of himself. We all stood looking at them until a puzzled expression came over the waitress's face. She tried to be discrete as her hand went to her skirt, feeling her ass. A moan/screech left her lips as she grabbed the undergarment from his hand and ran into the women's restroom.\n\n\"I'm impressed,\" the young man said, handing me his card. \"Come to my office tomorrow, after ten am and we'll sign the contract.\"\n\nI nodded as I turned to walk out of the bar. I stopped by my table and left a sizable tip. I waited by the restroom for the waitress to appear. When she came out, I asked her, \"Can you describe the guy who was shaking hands with the performer when he had his heart attack?\"\n\nHearing her description, I knew that it was the evil man that I still had to face. It appeared that he was a victim of the man who was trying to kill me as well.\n\n\"I'm not sure that I'll forgive you for what you did to me in there,\" she said to me.\n\n\"I used the time to make sure that the next time you audition, you'll get that job as a dancer,\" I told her. \"Thank you very much.\"\n\n\"In that case I forgive you,\" she said as she kissed my cheek.\n\n****\n\nI went back toward my room, thinking about everything that I'd learned over this very long day. I'd been wondering why I decided to put on a show, doing something I'd never done before, in front of a live audience. I figured that the artifact wanted me to find out about the murder: but why?\n\nThe answer must be that the performer had one or more pieces of power. The evil man had tracked him down and prevailed in the struggle, which meant that he was even stronger now than when I'd first scanned him. I knew that I'd have to be even more careful now than before.\n\nI wonder how long it had taken the evil one to track him down and isolate him. I had a feeling that the only reason that he was moving so fast with me was because he felt that I still was unaware of the full implications of having pieces of power. He must figure that he can quickly win our battle before I even know that we were going to fight. Since he hadn't bonded with his pieces, I hoped he thought that I hadn't yet bonded either. I idly wondered how often the pieces of power bonded with their host, and how long it usually took.\n\nI got back to the room and got undressed. It would be a tight fit sliding into that king size bed with the three girls, but I figured that I was willing to make the sacrifice. As I lay there spooning behind Julie I thought about the scope of things that I had learned over the past nearly year that I'd had the artifact; and the speed that things were now changing. I knew that things would never be normal for me again, and as I allowed myself to relax into sleep, I was glad.\n\n****\n\nMany people requested that I submit this chapter as soon as possible, so I wrote it as quickly as I could, hoping to be able to submit it in time for it to be up in time to be my Christmas gift to you; Merry Christmas and happy New Year.\n\nAs an author on this website, the only way I get paid for all my hours of work writing these stories for you is by your feedback. If you enjoyed this story, take the few seconds that it takes to vote. (Fives are appreciated.) As always, I enjoy receiving public and private feedback. It's the only way I managed to motivate myself to finish this story when I had a bad bout of writer's block."
    ],
    "authorname": "doc87123",
    "tags": [
        "artifact",
        "las vegas",
        "masturbation",
        "naked in public",
        "humiliation",
        "read mind",
        "jack",
        "gamble",
        "mff"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-artifact-ch-03"
}