{
    "title": "A Proper Young Woman's Guide to Anal Etiquette Ch. 07",
    "pages": [
        "Disclaimer: The following is a work of pure sexual fantasy and is intended for adult audiences ONLY. If you are under the age of 18, please stop reading NOW and go tell your parent and/or guardian that you need stricter internet supervision. Any physical resemblance to a real person that any fictional character herein may bear is probably intentional and is meant as a compliment. Furthermore, all fictional characters in the following fantasy are professionals and good at what they do. So please, don't try this at home; if such things were even physically possible. If you still insist on trying this at home, please send all pictures and feedback about the experience to myself via the CONTACT form in my profile.. If I can't stop you I can at least make sure you're doing it right. Consider yourself disclaimed.\n\nWilder Nights\n\nAs Amanda walked down the hall towards Naomi's room, she briefly paused at the doorway to her two kid sisters' room. Just as her mother had observed half an hour ago, Cora was still jackhammering her sizable toy into the exhausted ass of an obviously orgasmed-out Emily. The poor girl simply lay where she was - not that she was going to go anywhere, restrained wrist and ankle to the bed like she was - and took the vicious pounding to her nether hole with exhausted-sounding grunts and moans. Despite the vacant look in her red and puffy eyes, it was obvious to Amanda that Emily was still very much enjoying all the loving attention she was getting from her sister.\n\nWe'll get that tight little ass of hers nice and opened up before not too much longer, Amanda thought to herself, as she watched the continuing anal violation of her eighteen-year-old sister. After all, there're a lot of horny women in this house who'd love nothing better than to break in a brand new hole! Amanda smiled slyly and made a mental note to arrange for some sisterly bonding time in the next few days for Emily and herself. She and the young woman had a lot of catching up to do; not that she intended anything like talking to be involved in their bonding!\n\nDespite wanting to stay and watch the wickedly hot scene play itself out, Amanda hurried off to Naomi's room to check in on her.\n\nUpon entering the room - without knocking, and uninvited - Amanda crossed to her sister's bed and flopped herself down. \"So. How're you doing, sis?\"\n\n\"I'm late, that's how I'm doing,\" Naomi responded as she finished getting dressed for work at Gapers: 'Fine European Dining at an Affordable Price'. Unlike a certain restaurant chain from earlier in the century named after the call of an owl, Gapers didn't try to pass itself off as a family restaurant. In actuality, it was what strip clubs from the previous century had developed into when they'd had to evolve along with an ever-changing society. Topless women pole dancing had long since become pass\u00e9. After all, you could see more flesh at most public beaches since America had adopted Europe's more liberal attitude toward bare-breasted women in public. The new risqu\u00e9 was women publicly displaying their distended anuses to a paying audience. While Naomi wasn't a performer herself - Laura would have kicked her out of the house if she'd ever found out - she was 'merely' a waitress (although the waitress uniforms at Gapers left very little to the imagination). Laura still didn't approve one bit, but at least she allowed Naomi to continue to live under her roof despite her distasteful job.\n\nHer work schedule was erratic, but this week's work hours had been more sporadic than usual and Naomi was none too happy about it. She had to be at work early tonight and she'd be leaving pretty soon; Naomi would be home in the early morning hours, after she helped close the restaurant. Of course, she should have been gone twenty minutes ago, but Amanda's help in ensuring Naomi was properly cleaned out had delayed her by almost half an hour.\n\n\"Mother hates me wearing these things out in public,\" Naomi commented as she pulled on one of her many pairs of black satin French cut gape panties, \"which I think is just a bit hypocritical of her since I've seen her wear them on quite a few occasions when Dad was around,\" she added rebelliously.\n\nAt first glance, gape panties, or gapers, looked like normal crotch-less panties worn by most women on a daily basis - if panties were worn at all that was - before the differences became apparent. While most panties had a string in the back to ride over the base of a plug that was inevitably packed into the nether hole, the back of gapers instead came together in six adjustable straps ending in smooth metal hooks. Two straps went between the legs on either side of the pussy mound, two passed around the back of the legs where the ass cheek met the top of the thigh, and two came over the butt from above. The hooks were then inserted into the anus and pulled firmly apart until a wide fleshy pink cavern could be seen between two heart shaped ass cheeks. The more shapely the ass, the better the gape's effect; and it went without saying that all the Wilder women - regardless of their shape - had amazing asses!\n\nNaomi had purchased these particular gapers from an online retailer in Berlin; and they came equipped with some extra features that were hard to find over here in the New World. While most traditional gape and crotch-less panties were designed to fully display the entire genital region, Naomi's pair only displayed the bottom two thirds of her cleanly shaven pussy lips. This allowed a standard or dilation catheter to be inserted into the urethra and become locked in place as the rest of the undergarment was secured around it. A small hole was conveniently designed into the front of the panties for the drainage port of the catheter to slip through.\n\nNaomi held the panties in place with the tube extending from the base of the dilation catheter poking through the small hole. She'd already inserted the catheter and expanded up her pisshole before Amanda came in.\n\n\"True, but most women wear them with little black dresses or something,\" Amanda countered, \"for occasions where corsets may be inappropriate and the abdominal bulge of a normal dilator plug would be... embarrassing. And what size is that thing anyway?\"\n\n\"Oh, this?\" Naomi asked motioning to her plastic piss plug. \"It's only five eight's inches thick; I'm still working on wearing larger ones for extended periods of time. I'm really glad Nana gave us these things; they're great!\" she said enthusiastically.\n\n\"Why am I not surprised you'd love them?\" Amanda said shaking her head. \"Anyway, your uniform skirt barely passes for a thick belt, that could be one of the reasons mother doesn't approve,\" she added holding up Naomi's deep red micro-mini skirt. When properly secured around Naomi's waist, the garment barely covered the top half of her firm bottom; leaving her wet pussy in front and gaping hole in back plainly visible to anyone who cared to look, and there would be a lot of people wanting to look when she got to work. After all, the girls with the biggest gapes invariably got the best tips. Naomi prided herself on being one of Gaper's top earners; for non-performers at least. If her mother would allow her to go up on stage she could probably double or triple her weekly pay check.\n\n\"Semantics!\" Naomi insisted as she inserted one hook after another and tugged at the reinforced satin straps. \"I'm not wearing anything at the restaurant that you wouldn't see walking down any street in Paris or Milan. It's not my fault that America is twenty years behind Europe in social development!\" Naomi turned to look at her backside in the full length mirror and adjusted the straps to get her gape as round as it could; oblong or egg shaped gapes just looked odd, after all. The last few adjustments elicited grunts from the twenty-two year old brunette as the diameter of the growing darkness between her cheeks expanded again and again with each firm pull. \"There. Perfect,\" she declared and reached for the garter belt laying on her bed to go over her purpose built lingerie.\n\n\"Really? Perfect you say? Honey, who the hell taught you how to properly fit gape panties?\" Amanda inquired. \"Certainly not our loving mother. She's the one who taught me and Mary when we were younger and that's not how you do it at all.\"\n\nNaomi looked slightly hurt at her older sister's comment, \"What do you mean? You put the hooks up your ass and shorten the straps until they're uncomfortable. How many different ways can there be to shorten straps?\" she asked slightly annoyed as she placed her hands on her hips and shifted her weight to her left leg in the unimpressed-stubborn-little-girl gesture that she'd never grown out of. The gape panties were all Naomi had had a chance to slip into yet and her medium sized free breasts swayed back and forth with the jerkiness of her movements.\n\nAmanda allowed her eyes to track the motion of the incredibly perky twenty-two year old tits in front of her before she answered. \"Quit being such a prissy little bitch and come over here and I'll show you,\" she commanded as she half turned to fetch Naomi's nighttime dildo that rested conveniently on the night table next to her bed; exactly where Naomi had left it when she'd woken up and taken it out and tongue washed it clean before heading to the showers. \"That is if you want to learn the right way. It may help your tip total,\" she added helpfully.\n\nThe thought of better tips took the edge off of Naomi's annoyance and she walked over to stand next to her big sister. \"I'm listening,\" she said as her sister hefted the thick toy. The shaft was four inches wide and eleven inches long. It was the very same veined toy she's used to masturbate herself with yesterday morning after she'd abused her mother while the older woman had been preoccupied. It wasn't as big as Naomi could take, but it left her rectal cavity comfortably full all night. And what more could a masochist ask for?\n\nTo be uncomfortably full, that's what. Naomi made a mental note to shove the next size larger plug up her ass when she got home tomorrow morning. That should take the edge off.\n\n\"Good. Now turn around and bend over slightly,\" Amanda said and Naomi instantly complied, like the good little masochistic submissive slut-bunny that she was. Lining up the four inch bottom stretcher up with her sister's forcefully gaped anus, Amanda quickly worked the thick toy about halfway in. She smiled to herself as she listened to Naomi's pitiful grunts and groans as the younger woman's back passage was once again stretched to a full four inch diameter. Actually, it was a little larger than four inches since the hooks of the gaper panties were still fully seated around Naomi's somewhat straining anal ring.\n\nAh, to be young again, Amanda thought to herself. It'd been years since a meager four inch plug sliding past her own well trained sphincter had gotten a similar reaction out of her. Not that she was a stranger to the sensations she knew her sibling was experiencing - her husband Todd ensured she felt very similar sensations every day they were together. The sizes of the tools involved were just considerably larger and much longer, but the idea was the same.\n\n\"Alright, now that your hole is being held open to a consistent size, go ahead and retighten the straps. I can tell just by looking at them that they're pretty loose now,\" Amanda commented.\n\nContinuing to whimper at the latex intruder forcing her tender hole wide open, Naomi did what her older sister commanded and began adjusting one strap after another. \"How does that look?\" she asked when she felt everything was nice and tight.\n\n\"Let me check you out,\" Amanda responded. \"Here, hold your dildo for a minute so I can use both hands,\" she said. Naomi quickly took over control of her latex violator as Amanda checked the tautness of each strap. From her superior angle, Amanda managed to get every single one of them just a little bit tighter. By the time she'd finished, Naomi's intermittent whimpers had turned into soft sobs of pain at her widely stretched ring of rectal muscle. Small cracks of blackness could clearly be seen around each hook as they shared Naomi's asshole with the thick plug; a plug that was no longer doing a very good job at stretching anything.\n\n\"There you go. Now it's perfect,\" Amanda commented as she took the dildo away from her sister and extracted it from the widely expanded nether hole once again. As the thick phallus slid out of the pink hole with a soft wet sound, the size of the cavern stayed at the original four inch diameter. The six straps of the gape panties bit deeply into Naomi's flesh as her abused back hole attempted in vain to re-close itself. The attempt failed utterly and it maintained its near perfect circular shape.\n\nSetting the, now unnecessary, latex tool back where she found it, Amanda returned her attention to admiring her handiwork more. Placing a hand on each of her sister's hips and holding the younger woman steady, \"I think you need me to help you into these things every day before you head off to work. What do you think?\" she asked as she admired Naomi's succulent bubble butt and obscenely gaping asshole.\n\nDespite the ache emanating from her horribly stretched hole and the straps biting into her pale flesh, Naomi couldn't argue the fact that she was getting off on the pain. The chances of her having an orgasm on the way to work were very high and she hoped she didn't wreck her car when it happened. The life of a masochistic pain slut was never easy, but at least it was usually eventful. \"I think you're right,\" was all she could say in response.\n\nAmanda took two of her fingers and easily inserted them into Naomi's drenched pussy and pushed backwards. The fingers pushed the thin membrane of flesh that separated the two holes upwards and outwards. As she wiggled her fingers she actually managed to get her sister's rectal wall to stretch past the ring of her muscle to be outside of her body. Closing the finger loop with her thumb, Amanda massaged the thin layer of flesh firmly between her digits and listened to Naomi's groans of pleasure as her lower holes were roughly played with.\n\nGlancing at the clock on the wall, Amanda realized that Naomi was going to be late if she allowed her sister to have an orgasm. \"That's enough for now, Naomi,\" she said. \"You need to get dressed for work or you'll be late.\"\n\n\"Don't care... Just a little... More...\"\n\n\"Nope. That would be irresponsible of you. Now pull yourself together and finish getting dressed!\"\n\nVisibly shaking herself back to the present, Naomi pouted and moved back to the foot of the bed to finish putting her garters and stockings on. She grunted loudly as she bent over to slip the stockings onto her feet as the position yanked her already maximized hole open just a little bit more. \"Can we play more when I get home from work?\" she asked her older sister.\n\n\"Of course!\" she answered. \"It's been a while since we've had some good old fashioned sister/sister bonding. Although, it may have to wait until this weekend; I've got a big day tomorrow at the convention.\n\n\"I do have a question for you though. Do you actually like working at Gapers? I know mother hates it that you do.\"\n\n\"Actually, I do,\" Naomi answered as she hooked her stocking to the clamps on her garters. \"I know it's not a proper place for a nice girl to work, and dad would not approve at all, but I enjoy it. Have you ever been to a European style club before?\"\n\n\"Me? Once or twice while I was in college. Mom and dad never found out, of course. You can get away with working at Gapers being the middle child, but me, as the oldest daughter? I would have gotten my tits caned and then spent a week wearing punishment a dildo!\"\n\nThey both laughed at the truth of it. Parents inevitably got less strict with each successive child. That was the way of things. The youngest kids always had the easiest time of growing up.\n\nAmanda refrained from mentioning to her younger sister that the second time she'd gone to Gapers she'd actually been drunk enough to participate in their weekly amateur contest. They'd lined up successively larger dildos, each a full twelve inches long, from one side of the main stage to the other and opened the competition to all the girls in the audience. The winner got all the cash thrown onto the stage and free drinks for the rest of the night. The evening she'd participated there had been fourteen other tipsy 'Woo Girls' up on stage with her who'd stripped from the waist down and left their plugs at their tables. One by one they'd lowered their assholes onto one dildo after another in front of a full house of onlookers as tips rained down onto the stage. The only rule to advance was that the girls had to bounce their ass cheeks on the stage three times for the penetration to count.\n\nAfter half an hour there were only two girls left: Amanda and a twenty something Asian beauty with monstrous - and obviously fake - tits named Ling. For the final showdown, all the lesser dildos they'd already passed were removed and a second set of colossal anal destroyers were secured to the stage. At the same time the pair would impale themselves and bounce their butt cheeks off the stage. If it wasn't for all the booze they'd obviously both imbibed that night, neither girl would have made it as far as she had. But in the end it was while Amanda - exhausted and resting her weight on the stage, fully impaled by a massive dildo - was waiting for Ling to bounce her tight butt cheeks off of the stage, that the Asian beauty finally called out in surrender.\n\nThe announcer then came out to proclaim the winner. Rather than let Ling extract her sore bottom from the oversized phallus, he'd simply placed both hands on her shoulders and pressed downwards firmly and impassively as he announced the impressive size to the excited crowd: Five and a quarter inches. It'd been a personal record for her at the time. Ling fought only for a moment before exhaustion took over and she allowed herself to be fully impaled on the massive dong. Amanda had tried to stand herself, only to be pushed back down, by the slightly bored announcer. Once all the patrons had finished throwing money at the stage, and most likely the owner got his sizeable cut, Amanda and Ling were allowed to extract themselves and Amanda was given a fat stack of cash $9,600 deep.\n\nUpon returning to her table and her ecstatic girl friends, she'd been surprised to see that as a parting gift the management had helpfully attached her winning dildo to her chair. Initially, she'd been too tired and sore to play anymore, but with the taunting, chanting and general peer pressure of her girl friends she'd reluctantly agreed to re-impale herself at the table. And so she'd spent the rest of the night drinking with friends while the huge five and a quarter inch ass destroyer continued to dilate her blown-out rectum to new widths.\n\nShe still had that dildo at home in her closet. It often times came out when she had those same girl friends over to drink. Of course, it was never out for very long before it found a nice moist bottom to hide in; usually hers.\n\n\"But I only ever observed from the back,\" she lied. \"It's an interesting place. No trappings of the proper society we were raised in, but an interesting place nonetheless,\" she added truthfully.\n\n\"That it is,\" Naomi agreed, \"and thanks for showing me how to fit these things correctly. I can't wait to see how I do with the tips tonight! The customers can see right up me half way to my stomach. That should be worth some extra cash.\"\n\n\"I'm sure you'll knock them dead!\" Amanda exclaimed as her eyes stared at the fleshy pink hole leading up into the depths of her sister's abdomen. The four inch wide anal cavern between Naomi's athletic butt cheeks should get her more than enough attention; no doubt about that.",
        "Naomi's work top was much quicker to slip into than her work bottoms, as it simply consisted of a tight red tank top cut so that it stopped just below the young woman's perpetually rock-hard nipples. The skimpy garment left the bottom half of her perky breasts clearly visible. Amanda was tempted to give her sister a healthy tip right then and there, but she didn't have her wallet on her. She always had been a huge fan of sexy under-boob; especially when it belonged to one of her sisters!\n\nThe pi\u00e8ce de r\u00e9sistance was a stopper plug with a small red bow on it for the drainage tube of her dilation catheter. A lot of the waitresses at Gapers evidently wore these and the customer's knew what would happened when the bow was pulled out. Of course, the management got pretty upset if a woman's wine glass or mouth wasn't immediately available to catch the flow of unsealed urine. Amanda had to admit that the cute little red bow looked amazing when contrasted against the black satin of Naomi's gapers.\n\nFinally dressed for work, Naomi grabbed her yellow, threadbare spring jacket and turned to head for the door. Despite her taboo job and very liberal outlook on life, she wasn't about to be seen walking down the street wearing such a skimpy outfit. At least their mother had managed to embed a tiny notion of modesty in her most rebellious daughter.\n\n\"Aren't you forgetting to say goodbye, little sister?\" Amanda asked as she stood up and admired the well toned butt cheeks and the wide black nothingness between them that was walking out the door. \"The least you could do in appreciation is to give me a proper good night kiss. I won't see you until tomorrow evening after all.\"\n\n\"Well...\" Naomi responded, feigning hesitation, \"You are the reason I'm running so late, but I guess you did help a little bit there at the end. So let's make it fast,\" she said turning from her bedroom's door-less entrance.\n\nThe two sisters came together and embraced each other in a soft, lingering, sensual kiss. The thin materials each was wearing did nothing to hide the mutual arousal of pert nipples and radiated body heat. Naomi gasped - while she sucked on her sister's tongue - as Amanda's fingers found the moist slit between her legs and quickly slipped two fingers inside. Barely a heartbeat later, Amanda's own slight intake of breath - as Naomi's fingers penetrated her wet front opening - was also heard in the large bedroom. The kissing and fingering lasted for perhaps a fifteen seconds before they finally, reluctantly, broke apart. As they did so a thin sting of saliva stretched between their lips momentarily before breaking and falling into Amanda's large cleavage. Naomi giggled as she watched it fall and splatter on the white skin of her big sister's left breast.\n\nIn unison, fingers were removed from horny cunts and brought up to equally horny mouths for cleaning: Amanda's fingers to Naomi's mouth and vice versa. It was a time honored and loving goodnight kiss that two women who were close to each other - normally sisters or mothers and daughters - normally gave to one another at bedtime.\n\nThis was one of the many things that Amanda missed when she'd left home to be with Todd. Just the simple affectionate intimacy to be had from sucking her own pussy juice off of her mother's fingers before bed had always warmed her heart; and her loins. Ever since she'd become of age, Amanda had always found it easier to spend the first hour or so after going to bed masturbating; once her mother had let her taste her own wetness before exiting the room to go make love to Daddy. And Amanda had always loved watching her mother go: The sway of her sexy hips; the sides of her massive breasts clearly visible even from the back. The large yet shapely derri\u00e8re all the Wilder women were popular for. And, of course, the huge anal plug that was always clearly visible beneath her mother's favored semi-transparent baby-doll nighties.\n\nThe fact that Amanda could clearly hear their parent's sounds of lovemaking from down the hall also fueled her nightly jilling sessions. Her mother's loud moans of pleasurable ecstasy as Daddy fucked her to multiple orgasms were almost as exciting to an eighteen year old Amanda as her mother's screams of agonizing rapture as Daddy lovingly worked on mommy's anal wellbeing long into the night. She would just lie on her side in bed and work her slimy pussy with one hand while her other hand would concentrate on her own rectal happiness.\n\nFingers finally cleaned off, Naomi thanked her sister once again with a quick peck on the cheek, donned her jacket, and headed out the door. Amanda was left alone and frustrated in her sister's bedroom. Although it had scarcely been half an hour since her last thunderous orgasm, she was already so turned on again that she could barely stand it.\n\nFuck it! she thought as she sat down on her sister's bed and reached for her masturbation kit. I've got at least twenty minutes before dinner. I can take at least some of the edge off of my libido.\n\nJust as she'd selected a nice thick veined dildo - which she'd determined would feel amazing sliding through her poor, vulnerable sphincter - the sounds of Emily and Cora starting up again came down the hall.\n\nWow! Those two certainly have a lot of love for each other, Amanda thought to herself. I don't even think Mary and I fucked that much when we shared a room together. Years ago, on Mary's eighteenth birthday, she and Amanda had moved into the same bedroom; and had shared many intimate nights together before Amanda had moved out.\n\nAmanda smiled wickedly as a wonderful idea came to her out of nowhere. The decision made, she picked up her selected butt toy and took off down the hall to her kid sisters' room. After all, the two of them were only using one of their beds; Amanda intended to use the other to give her own nether hole some much deserved attention. And the thought that she'd get a ring-side seat to watch her teenage sisters plow each other's pert backsides should provide enough mental stimulation for a memorable masturbation session.\n\n* * *\n\nCora and Emily didn't even notice their big sister enter their bedroom; they were far too intent on their own sisterly bonding activities. Only when Amanda finally hit a hard enough orgasm that her own screams drowned out the screams of the two sweaty teenagers did they finally take notice of their sister and the mammoth dong she was ramming into her stretched out ass. Cora and Emily only smiled at each other and went back to their own passionate rutting.\n\n* * *\n\nIn the kitchen, Laura had her tablet hooked into the house's security system as she went about preparing dinner for the family. Originally, she had intended to playback the prior evening's punishment session when her eldest daughter had shown her mother the error of her slutty ways. Laura's bottom was still quite sore from the horrible pounding she'd taken from the five and three quarter inch wide, twenty inch long, heavy grit punishment dildo. That soreness had been reinforced by spending the entire night with a smooth five and seven eights inch dilator plug lucked deeply into her raw intestines.\n\nLaura had slept better last night than she'd slept in months. After all, none of Wilder women had even bothered to pretend that Laura hadn't enjoyed every second of her severe punishment; not that her loud screams of orgasmic rapture gave anything away.\n\nThe most surprising thing of the whole ordeal was waking up to find Amanda similarly retrained next to her. Amanda had discussed her own punishment session with Emily and Cora - and the resulting increase to her maximum anal expansion to five and five eighths inches - during the family's morning enema regime. All four of the Wilder women participating had had a good laugh at Amanda's unexpected increase as they took turns on the enema bidets.\n\nLaura had enjoyed watching her frequent punishment sessions ever since she was a teenager and undergoing her own anal training at the hands of her strict mother. As she'd logged onto the security network to bring up the time-stamped archives from the master bedroom, she had changed her mind as her eye caught the live feed from her youngest daughter's bedroom. Being Emily's mother she was probably biased, but the girl's facial expressions during hard orgasms were cute as hell. So Laura had decided to watch Cora remorselessly pound the thick latex dong up her bound sister's spasming backside. Laura smiled to herself as she went about her cooking with the sounds of her children's lovemaking filling the kitchen through the tablet's stereo speakers.\n\nAs she was taking the chicken out of the oven, Naomi passed though the kitchen on her way to the garage and her car. She had on an old windbreaker to hide what Laura assumed to be something she would not approve of; considering the younger woman's job.\n\n\"Taking off then?\" Laura asked.\n\n\"Yup. I'm really late too,\" she said as paused very momentarily to deeply French kiss her mother. Fingers briefly found wet pussies and two front holes were quickly penetrated before she broke the kiss. \"And I'm off! I'll see you guys tomorrow night,\" she added as she headed for the garage door sucking her mother's sweet juices off her fingers.\n\n\"Alright, sweetie,\" Laura responded before popping her own wet fingers into her mouth to clean off her middle daughter's cunt nectar. Pausing just as her fingers were at her lips, she added, \"And anytime you want to start a respectable job, TBTF is hiring young women for the secretary pool again. I know Kelly Jarvis over in Acquisitions is looking for a new receptionist. I think you'd like working for her.\"\n\nLaura knew her little masochist would love working for Mrs. Jarvis actually. Every time she'd gone to Kelly's office for a business meeting or \"lunch brainstorming session\", her secretary was always a little teary eyed and constantly moved slowly and slightly bent over.\n\n\"Can we not get into this now, mom?\" Naomi said in exasperation at the age-old argument between herself and her mother. \"I like my job just fine.\"\n\n\"Just think about it. The position comes with full benefits that I think you'll find very enticing.\"\n\nBoth women knew Laura wasn't talking about the health coverage and paid time off.\n\n\"Fine. I'll think about it,\" Naomi said as she closed the door behind her.\n\nLaura shook her head at her daughter's bad decisions. Oh well, she thought. I'll just keep trying to get her to make better career choices. I guess sometimes a parent just has to let her children make bad decisions for themselves and hope they eventually make the right ones.\n\nReturning to her cooking and the live fuck show playing out on her tablet, Laura was surprised to see that Amanda had joined Emily and Cora on screen with an impressive dildo of her own. She was still feeding the lengthy tool up her shapely butt and looked to be mentally preparing herself for a good reaming of her own.\n\nThat little nymph! Laura thought to herself. Rest our holes she said? My gaping ass! Look at the size of that tool she's putting up there! That's one hole that is not going to be getting any rest! If she thinks I'm going to go easy on her tonight just because she can't go half an hour without shoving something huge up her butt she is sorely mistaken! Where does she get that behavior from?\n\nWell, okay. So everyone know where she gets her behavior from, Laura admitted grudgingly to herself.\n\nHer own backside felt odd being empty. It just wasn't right for a perfectly accommodating asshole to not be plugged with something! As Laura paused in her cooking to watch three of her five daughters bring themselves to orgasm, her right hand reached around behind her back and under her camisole to her gaping nether hole. Laura's closed fist effortlessly slipped past her stretched out anus as her sphincter closed around her wrist.\n\nFuck it! Laura decided.\n\nThe horny cougar laid her torso across the kitchen counter to get a good angle at the annoying itch up her butt; it was pretty far up her butt after all. A soft moan escaped Laura's lips as her fist found a matching rhythm with the large dildo being fucked into the gaping asshole of her youngest daughter on screen. A corner of her mind noted that the rhythm of the huge toy sliding in and out of Amanda's ass had matched that of Cora's pounding as well.\n\nWithout even realizing it, the fist that was soon popping in and out of her asshole soon matched the beat of the onscreen fucking as well. While her fist was not the size Laura needed to truly enjoy herself to the fullest, it was the best she had available to her at the time. The makeshift masturbation aid was doing its job effectively, though - Laura soon felt the rumblings of a pleasant pre-dinner orgasm welling up from the depths of her horny rectum.\n\nThe end result was that three of the Wilder women were soon orgasming in perfect cadence to the direction of Maestro Cora Wilder. It's just too bad that conducting an all-girl anal orchestra wasn't a paying gig!\n\n* * *\n\nAmanda, Cora and Emily ended up being over twenty minutes late for dinner. Despite their tardiness, their mother did not seem to take any offense.\n\nNo one made a comment about the slightly burned chicken as they hungrily ate and talked and laughed together; just as any close and loving family would do at mealtime. The fact that all of the Wilder women sitting at the dinner table were naked from the waist down, had sore, gaping and well lubricated buttholes, as well as cream filled cunts from experiencing recent multiple orgasms, was actually a common enough occurrence that it wasn't worth mentioning.\n\n* * *\n\nThe evening continued to unfold uneventfully in the Wilder home. Sometime after dinner, Laura and Emily were in the great room watching the most recent episode of Survivor; which had long since secured its position as the longest running American TV show in history. Although the show had long since jumped the shark - according to most people - it had a large enough fan base to ensure its continued existence in the prime time lineup. The current season was reaching its climax and the cast had just finished voting off the bubbly blond from Las Vegas with the amazingly large breasts. Those stupendous mammaries had spent most of the season barely restrained by string bikini tops which had left almost nothing to the imagination; the wholly inadequate clothing basically only covering her perpetually rock hard nipples with small triangles of cloth, and that was pretty much it. Laura and Emily were in a friendly argument as to why she'd made it this far into the competition before being eliminated by her fellow survivors.\n\n\"Well, obviously, the other girls in her tribe got tired of her flaunting those melons of hers at the cameras every chance she got!\" Emily concluded emphatically. \"I mean, Jesus! If I had those things on my frame I'd fall over every time I stood up!\" she added for extra effect while cupping one of her own, significantly smaller, 32B breasts with her left hand and pretending to appraise its weight.\n\n\"Your breasts are perfect, honey,\" Laura reassured her. \"Not all men and women go for the massively titted girls like her. Quite a few people prefer girls with smaller, perkier sets of athletic boobs like you and Naomi have.\"\n\n\"That's easy for you to say, mom,\" Emily replied. \"Your breasts are huge!\" she stated matter-of-factly. She emphasized her point by crushing her mother's erect nipple between the thumbnail and forefinger of her right hand; that hand had slipped into Laura's lingerie to play with the hard nipples hiding underneath almost an hour ago when they sat down to watch this week's episode of Survivor.\n\n\"Ouch!\" Laura winched. \"That's not a nice thing to do to your mother when she's not expecting it!\" she scolded her youngest daughter. Laura scowled down at the slender women, who was currently sitting across her lap, with her best impression of being emotionally devastated; but she made no attempt to extract her daughters hand as it resumed softly stroking and playing with her now painfully erect nipple. \"Be nice to mommy's nipples or I won't let you play with them anymore\" Laura threatened without conviction.\n\n\"Yea, like that would happen.\" Emily countered. \"How you prefer your nipples to be treated isn't exactly a secret around here, and that was a gentle caress by comparison.\" she stated truthfully. \"For punishment, you've forced us to wear some of the clamps that you wear for just fun, remember?\"\n\n\"That's not the point!\" Laura fired back. \"And those times were for you and your sisters' own good. Nothing focuses the mind on what's going on down below as a health amount of pain up top. But that's neither here nor there. Right now we're just trying to watch TV, and I'm trying to pay attention to what's going on. I need to know what happened for tomorrow's scuttlebutt discussions.\" The various ploys and schemes on Survivor were a common chatting point for the women at TBTF and Laura needed to stay current.\n\n\"Oh really! We're 'just trying to watch TV'? And what is your left hand doing right now as you're 'just trying to watch TV'?\" Emily inquired innocently.\n\nLaura and Emily were comfortably reclining together in a large, over stuffed recliner in the family's great room. Emily was sitting across her mother's lap with her head resting on Laura's right shoulder as they'd been watching Survivor on their modest 196 inch hyper-plasma TV. She still wore the same tight dark blue sweater she'd worn to school, leaving her naked from the waist down. Emily's left leg was lying on the chair's left arm while her right leg was propped up at a 90 degree angle. This was the best position to give her mother unfettered access to her lower two holes, still recline comfortably, and give both women an unobstructed view of the television.\n\nThe aforementioned fingers of the hand in question had finished questing for the thick juices manufactured in the younger woman's dripping pussy just a few minutes ago and had returned to the bottom hole located just an inch or so below the wet top hole. Although, calling the top hole the 'wet' hole at this point was largely a misnomer since Laura had spent the entirety of the hour long episode of Survivor transferring homemade girl nectar from the top hole to the bottom one. By this point in time both holes were equally wet, loose and sloppy with Emily's sweet, young cunt juice.\n\nWhat had started with Survivor's opening credits as just two fingers in search of moist Emily Brand lubricant had progressed in number as the episode wore on to three, four, and then finally to all five fingers. Laura's expert hand was now up to her extended thumb in Emily's nether hole as she twisted it this way and that, fingers wiggling and tickling the whole time, to make sure that every square inch of the interior surface of her daughter's rectum was thoroughly coated with as much slick juice as she could cram up the cavernous hole. Laura would alternate keeping her hand flat and blade like while rotating her wrist 180 degrees back and forth and slipping her fist in and out of the tightest asshole of all the Wilder women. She did this again and again, ensuring that the teenager's butt loosened up to its fullest potential. Since Emily's ass had spent the whole day being painfully dilated by the plug Amanda had selected for her, working the unresisting hole up to its current dimensions had been no problem at all for this loving mother of five insatiable anal sluts. After all, all four of Emily's older sisters had spent many evenings curled up in their mother's lap receiving the exact same anal treatment Emily was enjoying right this very minute; and, by now, Laura knew exactly what she was doing and how best to go about it.\n\nPresently, the first two stops on Laura's circular journey completed, she extracted her pussy and ass juice soaked hand and fingers from her daughter's most private hole to bring the glistening digits up to her daughter's waiting mouth. Emily let a small moan of protest pass her lips at the uninvited sensation of emptiness she suddenly felt between her toned and muscular butt cheeks. But, to her credit and training, she didn't even hesitate to take the offered fingers into her mouth to suck and tongue wash them clean for the umpteenth time that evening. In fact, her head never left her mother's shoulder as she did so.",
        "\"I haven't the slightest idea to what you're referring, young lady.\" Laura quipped while trying to maintain her best poker face. All Emily could manage to get out in retort around the dirty fingers in her mouth was a soft, questioning \"Umm, hmm?\" as she licked and sucked them with all due diligence. In no time at all, her mother's fingers were again clean and Laura pulled her hand back to return it to the wet snatch below.\n\n\"All I'm saying is that... ungh... she shouldn't be so surprised she got voted off with the way she played to the camera with those massive things.\" Emily continued her original argument as if nothing noteworthy had interrupted her while Laura's fingers returned to the first stop in their three-stop journey once again by burring themselves into the shaved, teenage pussy. Emily let out another soft \"ungh\" as her mother's thumb began rubbing against her engorged clit yet again; her young hips were soon gyrating in time to the thumb stroking her engorged clit.\n\nThe best way to keep her daughter producing copious amounts of her very own lubricant was to give the young woman's nub some much appreciated attention. Laura was not disappointed as, in no time at all, she felt her hand once again begin to slosh around the inside of her daughter's stretched pussy as it produced another batch of tangy wetness.\n\n\"I think it has more to do with the hot sauce stunt she pulled last week than the size of her breasts,\" Laura argued, at last stepping up to the plate. \"Of course they're not going to come right out and say it on national television, but it was implied pretty heavily that she laced her tribe's supply of Bottom's Eve lubricant with a healthy dose of the stuff.\" While all the niceties and luxuries of modern life were removed from the participants of Survivor, most of the basic necessities were still provided: food, water, personal hygiene items, anal lubricant, prophylactics, medicine and such. While they had pixilated out the label of the bottle in last week's episode as the bubbly blond played to the camera to insinuate where she was planning on putting the hot sauce, the entire viewing audience recognized the shape of the bottle as Bottom's Eve. This was a common, name brand anal lubricant; \"Specifically Formulated for Her Pleasure,\" as their ads went.\n\nThis was the same brand of lubricant that could be found in every room of the Wilder home. Personally, Laura was partial to the cherry flavor Bottom's Eve.\n\n\"That was just the straw that broke the camel's back, mom,\" Emily said. \"I'm pretty sure she was going to get voted off even before everyone figured out who spiked the lube. And speaking of that, I mean, how dumb of a bimbo can she be?! I realize she's blond with a huge rack, but come on! When you're the only one not running around with your ass literally on fire, it's not hard to figure out who did it. At the very least she could have faked it!\n\n\"Not that her acting would have been very convincing.\"\n\n\"Well, at least I agree with you on that last part,\" Laura agreed as she slipped her glistening fingers out of her daughter's puffy vagina, made a fist, and gently pressed her hand into Emily's gaping anus. It took only a second or two for Emily's sphincter to come comfortably to rest around her mother's wrist. This elicited only a small gasp from the young woman; both mother and daughter never took their eyes off the screen as a teary eyed blond made a final plea to the camera during her exit interview. Apparently, she just didn't understand why she had just been voted off.\n\n\"Dumb and oblivious,\" Emily commented as she readjusted her position to give her mother better access to her slicked bottom hole.\n\nLaura didn't let her daughter's anus rest comfortably for long, as she began to rotate her hand around inside Emily's tight anal cavity. She would alternate this movement by extracting her closed fist just enough to pull the younger woman's straining sphincter out away from her body as it struggled to adjust to the diameter of Laura's hand. Not allowing her hand to fully escape from her daughter's taunt ring of muscle, she would keep the widest portion of her first right at the tight opening before fully sinking it back into the moist hole and resuming her hand rotation.\n\nEmily only moaned and whined softly at her mother's continuous intrusions into her rectal cavern. With the increased workouts her nether hole had received over the past few days, the penetration was much easier than it normally was when they watched Survivor every week. A part of her was glad that her anal dilation was progressing nicely from all the extra attention; perhaps she'd make a decent Wilder girl after all.\n\n\"Again, that's something I think everyone can agree upon.\"\n\nAt that moment, Cora walked past the television on her way to the bedrooms. She slowed down to observe her sister and mother spending some quality family time with each other on Laura's favorite chair. Her own bottom tingled with a tiny amount of jealousy seeing her mother's fist slipping in and out of her sister's small butthole. Cora and Laura had their own television schedule though; but she'd have to wait until next week's episode before she could occupy Emily's place on Laura's lap while her mother packed her backside full of her young pussy juice.\n\n\"What are you up to, honey?\" Laura asked as her daughter passed slowly.\n\n\"Just heading to my room to do some homework, mom,\" Cora replied. \"Amanda got a call from Mary over in London, so I left her in the kitchen to let them catch up.\"\n\n\"Mary? How is your older sister doing?\"\n\n\"Fine. She's looking forward to vacation back home when school recessed for summer in a few weeks.\"\n\n\"Great!\" Laura exclaimed. She hated the fact that Mary lived in the UK these days, but she always came home for a few months over summer. \"And how's her lovely wife, Victoria, these days?\"\n\n\"Umm... Fine, I guess,\" Cora answered. She honestly hadn't paid that much attention to the opening niceties between her older sisters. \"I'm sure Amanda can fill you in on all the details,\" she added as she left the great room for her bedroom and her waiting homework. Of course, the only homework she had any intention of actually doing came in a large box full of latex tools under her bed.\n\n\"Well, that was informative,\" Emily commented as her sister left, and then gasped audibly at a particularly forceful shoving and twisting motion her mother's hand made inside her sloppy bottom.\n\n\"I'm sure Amanda will fill me in after she gets off,\" Laura said, and then smiled to herself at her unintentional double entendre.\n\nI guess whether her getting off consists of finishing her phone call or her next orgasm really doesn't matter; either possibility can't be too far off in the future, Laura thought. And she'd better fill me up in more ways than one!\n\nFinally, the blubbering blond with the amazingly huge tits bid her farewell and walked off camera and the program went to its last commercial break.\n\n\"Good riddance,\" Emily said vehemently.\n\nSerendipitously enough, the first advertisement was a commercial for Bottom's Eve brand lubricant. Two attractive women, a mother and a daughter, were walking through the park talking as the scene opened up. The daughter asks, \"mom, do you ever feel... not well lubricated... back there?... You know...\" Mom smiles matronly and replies, \"Of course I do, honey. That's why I make sure I use plenty of Bottom's Eve lubricant every day. It's specifically formulated for her pleasure, after all.\" The commercial then went on to talk about viscosity over long term use, being pH balanced for a woman's body and blah, blah, blah... All the while skirting around the probable fact that both the actresses, as well as the vast majority of women in the world, wore incredibly thick butt plugs on a daily basis. Such a blunt revelation would never pass the censors for prime time television though. So, other than the product's name, all other references to the anal stresses suffered by the target audience were cleverly written to only touch on the subject matter obliquely, while still getting the selling points across. It was a tribute to the art of advertising a sensitive female hygiene product to the masses while still keeping the conversation G-rated.\n\n\"So now what are you going to do now that you don't have that bimbo's boobs to complain about during Survivor?\" Laura asked as she extracted her closed fist from its hiding place with a wet, audible pop. Testing the slickness of her fingers by rubbing them together, she determined that it was time to start the circuit of holes over again for some fresh girl lube.\n\n\"Enjoy the show?\" Emily said and then opened her mouth to accept the pussy and ass juice-soaked fingers that her mother brought in front of her face yet again.\n\n\"Will you now? You've spent the entire season bitching about them. I'm beginning to think you just don't like large breasts.\"\n\n\"I love big boobs!\" Emily affirmed around the fingers she was dutifully washing off in her mouth. \"Especially yours,\" she added with a smile, and pinched her mother's hard nipple again for added emphasis.\n\n\"Ouch!\" Laura complained. \"I warned you about pinching mommy's poor nipples like that!\"\n\n\"And I told you that you were full of it,\" Emily shot back now that her mouth was again free of fingers.\n\nLaura wasted no time before she buried those fingers back into her daughter's drenched cunt in search of more of Emily's sweet lube once again. \"Now that the show is almost over,\" she said intentionally changing the subject, \"It's time to start getting all of this pussy juice out of you little butt.\"\n\n\"It's not that little, mom,\" Emily protested. \"I wore a three and a half inch dilator plug all day!\"\n\n\"Oh, sweetie. That's too cute,\" Laura sad patronizingly as she worked her fingers around the inside of Emily's front hole, coating them in the succulent juices to be found there. \"And how big were your sisters' plugs today; or your mother's? You have a long way to go with your anal training before people stop referring to that bottom hole of yours with words like 'tight' or 'little'.\"\n\nEmily sighed in resignation. \"I know, mom. I'm trying though.\"\n\n\"I know you are, honey; and I admit I'm partly to blame. We'll increase the frequency of you training sessions and get you caught up to Cora in no time. At least there'll be someone in this house who can't pick on you!\"\n\n\"Thanks, mom. I'd like that,\" Emily said, and then realized that she'd just agreed to participate in more frequent sessions of her mother's painful anal education. A few days ago she'd have questioned her sanity at the very idea, but now she found herself actually looking forward to the training; as agonizing as she knew it would certainly be.\n\n\"That's good!\" Laura said proudly. Noticing that Survivor was now over and the credits were rolling, \"Alright, young lady, it's time to get you cleaned out,\" she said pulling her questing fingers out of her daughter's snatch at last. This time, however, she brought them up to her own mouth for a thorough cleaning.\n\nGod! Laura thought as her tongue swirled around her dipping fingers. She really does have the best tasting cum in the world!\n\nEmily only giggled and slid herself off of her mother's lap.\n\n* * *\n\nA few minutes later, Amanda - still on the phone with Mary - passed through the great room on her way to the master bedroom for her smart phone's charger. The sight there in the room was reminiscent of her own early training. Emily was sitting on the couch, her butt hanging off its edge, with her ankles behind her shoulders as she roughly played with her nipples under her shirt. Their mother was kneeling on the floor hungrily devouring her daughter's two nether holes; sucking and licking for all she was worth.\n\nAmanda remembered her mother had always been able to produce particularly powerful vacuum with her mouth and she doubted it would take her very long to drain every drop of sweet nectar out of Emily's holes.\n\nTo Mary, Amanda commented, \"Remember that thing mom always did with us while watching TV?\"\n\n\"With the fisting on mom's lap? Of course. Why?\" Mary responded.\n\n\"Well, I guess now it's Emily's turn. We're in the cleanup phase over here,\" Amanda commented gleefully. Her continued conversation with Mary going completely unnoticed by her baby sister and mother.\n\n\"Oooo... I love that phase!\"\n\nAmanda paused on her way through the room to watch the spectacle; and to greedily admire the gaping chasm between her mother's firm butt cheeks, which even now, after hours of disuse, was still easily four inches across. As out of practice as her mother's nether hole was in the grand scheme of things, no one could deny how exquisitely trained that orifice actually was.\n\nShe paused only a moment longer to snap a quick pic to send to Mary; she would enjoy the familiar sight.\n\n\"Hey, sis. I'm sending you something to remind you of home and why you should look forward to your vacation,\" Amanda said as she navigated the smart phone's screens to attach the image to the conversation.\n\n\"Delicious!\" was all Mary had to say.\n\n* * *\n\nAs the evening drew to a close that night, Emily, Amanda and Laura were in the family's communal bathroom preparing for bed. They were finishing up their normal bedtime preparations: brushing their teeth, flushing out their bowels, and other such personal hygiene things. Cora had just left the bathroom on her way to bed, having completed her nightly ritual first.\n\n\"So our mother tells me she caught you jilling yourself off the other night while only touching your pussy; and completely neglecting that shapely ass of yours,\" Amanda asked her baby sister out of the blue.\n\nEmily's cheeks reddened noticeably in embarrassment. \"Yeah, she did,\" she admitted. \"And I got punished for it right there.\"\n\nAmanda sighed. \"Some of the women in this house are just weird,\" she declared. \"First, you two each get caught masturbating incorrectly, and then I find Emily getting reamed out with only pussy juice as lubricant and mom getting off way too many times during her own punishment session. You two may need some serious psychological help to address your split personalities. At least Cora, Naomi and I are consistent!\"\n\nLaura only giggled at the truth of that assessment. Emily smiled sheepishly. It was no secret amongst the Wilder women that their matriarch had been punished last night; and for what.\n\n\"I am serious though. How long has it been since you and the girls have had a full checkup?\" Amanda asked her mother.\n\n\"Actually, it's been quite a while,\" Laura responded thoughtfully after a few seconds.\n\n\"Tell you what: I'll give Veronica a call first thing in the morning. Hopefully, she has an opening available for the three of you. Our company provides quite a lot of supplies to her clinic after all, so I'm sure I could ask it as a personal favor,\" Amanda said helpfully. Doctor Veronica Dermott had been the Wilder family's OBGYN, proctologist and general practitioner for years. Veronica's husband had been a personal friend of Laura's late husband, Dave; the two had played golf together almost every Saturday.\n\n\"That's actually a good idea,\" Laura agreed.\n\n\"Ungh! I hate getting checkups,\" Emily complained. \"You'd think in the twenty-first century, we'd have the technology to at least warm up a speculum!\"\n\n\"You'd think,\" Amanda agreed; giggling.\n\n\"Oh, it's not that bad you two!\" admonished their mother. \"And it'd be good for us to get a checkup.\"\n\n\"Okay, fine then. Well, I'm off to bed,\" Emily announced have completed all she needed to do. \"Good night, mom,\" she said as the two women exchanged tongues and pussy fingering.\n\n\"Good night, big sis,\" and the process was repeated again before the eighteen year old left the room.\n\n\"And why don't we retire to the bedroom ourselves, Amanda?\" Laura asked. \"After all, I believe punishing your own mother is a punishable offense in and of itself.\n\n\"Mommy may need to discipline her sweet little girl's bottom tonight!\" she added with a wicked twinkle in her eye as she turned and headed for the master bedroom and its waiting shelves full of imposing castigation equipment.\n\nAmanda felt her pussy immediately begin dripping as her mother slipped into the third person. \"I think mommy's little girl deserves that too,\" she said and followed her mother obediently.\n\n* * *\n\nAs the eldest Wilder sister and matriarch headed to the master bedroom, Emily entered her and Cora's bedroom wearing nothing but a loose white crop top. While it did a good job at covering her perky young breasts, the shirt did little to hide the stiff nipples mounted on top of them. She was looking forward to a good night's sleep; maybe after a little anal playtime with her masturbation kit, of course.\n\nThe eighteen year-old redhead was surprised to see Cora laying in her bed, under her covers, in the dimly lit room. Normally, Cora would be in the middle of her usual bedtime masturbation session when Emily came into the room. Cora's preferred M.O. of self-pleasure was to mount a largish veined dildo on a magnetic hard point built into her mattress and ride the latex phallus - cowgirl style - until she'd had enough orgasms and went to sleep; after securing a sizable nighttime plug into her orgasmed out butt, of course. Her sister's moans of pleasure and screams of ecstasy usually helped Emily drift off to sleep.\n\nBut tonight, things looked like they would play out a little differently.\n\nCora smiled at her perplexed sister and threw back the top of the covers to reveal her own nighttime attire: a tight pink tank top. Emily's eyes were immediately drawn to the hard, bra-less nipples poking out through the thin, skin-tight material; almost as if they were asking to be suckled. Despite her momentary surprise, she felt her pussy moisten at the thought.\n\n\"I thought we could sleep together tonight, sis,\" Cora said as she patted the empty mattress next to her. \"We really haven't done that much since you decided that maybe butt-play wasn't your thing. Now that you've come back around to embracing the Wilder family tradition, I figured we could spend more nights together!\"\n\nEmily knew that the simple invitation was probably far from all that her slightly older sister had in mind. Despite her reservations, she responded, \"I guess that'd be okay. Although, honestly, I figured you'd be well on your way to your umpteenth orgasm by now. I know how much you love your nightly masturbation sessions!\"\n\n\"Of course I love them! What healthy young woman doesn't?! What did you think I was doing earlier when I said I was heading to my room to study? Although, I guess you were too concerned at the time to catch my subtle hint; what with mom's fist packing your backside with your pussy juice.\"\n\n\"Yeah, I guess I missed the hint on that one,\" Emily agreed as she crossed the room to her sister's bed. She couldn't help but notice that her helpful sibling had already laid out their night plugs on her nightstand. They looked like a pair of large pop cans sitting on slightly narrower podiums. She assumed four and a half inch wide butt blaster was Cora's while the smaller three and a half inch thick anal trainer was for her. How thoughtful of her!\n\n\"You did seem like you were enjoying yourself. I know I do when mom and I watch American Idolater every Tuesday and she works my butt over like that for an hour or so,\" Cora added wistfully as her younger sister climbed into the bed and under the covers with her.\n\nCora had been laying on her side and Emily had joined her in a similar position so that the pair were now spooning. Cora moved her arm to drape over her sister's torso; managing to get her hand inside the loose top's arm hole - as Emily adjusted the sheets over them - to play with the naked breasts she found hiding underneath. It only took one hard pinch and a firm rolling motion to the first already erect nipple she found for Emily to moan softly and turn her head back to look into her sister's eyes from a distance of mere inches. Cora smiled down at the petite young woman sharing her bed before moving in for a passionate kiss. As their tongues danced and played with each other, soft moans of pleasure began to escape Cora's mouth to match those of her sister's. Emily's own groans of desire only grew stronger as the torment Cora was administering to her rock hard nipples grew in intensity.",
        "\"And here I thought you actually just wanted to sleep,\" Emily managed to get out in between their tongue play and the cruel treatment her nipples were enduring.\n\n\"Wrong again, little sister!\" Cora corrected lustfully before shutting Emily up with even more powerful spit swapping. Emily's will dissolved submissively from her dominant sister's advances.\n\nAfter a few minutes of this loving abuse, the younger sister began to spread her legs open to give her fingers access to the dripping cunt between her slender legs. This was the opening Cora was looking for in her cunningly devised ambush. Relaxing her own legs, the three and a quarter inch wide, twenty-two inch long strap-on fixed to her waist sprang free and flung itself upwards to collide with an audible 'whack' against Emily's drenched pussy.\n\nEmily's eyes shot open at the unexpected impact and looked at her sister questioningly. To her credit, she neither paused in her passionate kissing nor pulled away from what was clearly a sizable phallus strapped to her sister's pelvis; knowing full well its intended target. Emily's eyes slowly closed again, in acceptance to her fate, as Cora moved her hips back and forth; causing the thick tool to massage her sister's engorged vaginal lips.\n\n\"Could you give me a hand here, Em? My hands are kind of out of the way to help us much,\" Cora asked her sister softly before returning to their kissing.\n\nWithout verbally responding or opening her eyes, Emily reached in between their bodies with her free hand and leaned forward. Finding the pre-lubricated shaft with her hand, she skillfully lined the brutally thick - for her tight and untrained ass at least - dildo up with her loosened sphincter and helped Cora guide the first few inches inside her needy rectum. Only a few slight gasps escaped Emily's lips as Cora fed more and more latex up her nether hole.\n\nWith only about eight inches in total buried up her sister, Cora began a gentle back and forth fucking motion. She intended this to be a soft and extended lovemaking, not a brutal fucking like their normal sisterly activities seemed to revolve around. Of course, Emily had no idea of the true length of the twenty-two inch rectal rooter that she was soon to be fully impaled upon. To Cora's knowledge, the young waif had never peen penetrated that deeply before. She wondered how many inches she could fit into her younger and less experienced sister before Emily figured out that something special was happening.\n\nIf she was a betting woman, she'd wager about fourteen inches.\n\nWith the initial penetration accomplished, Emily reached her hand back to rest on her sister's hips. She pulled forward gently to encourage Cora to fuck her ass deeper. If only she knew how deep Cora's strap-on could force itself into her guts, she might not have been as eager.\n\nTrying to avoid tipping off Emily to her true plight, Cora continued her gentle rhythm; allowing her tool to penetrate a little deeper into her oblivious sister with each inward thrust. Emily only moaned with desire as the violation of her tight hole became deeper and deeper. Throughout it all, Cora kept her little sister distracted with their energetic spit swapping and the cruel manipulation of the younger woman's now very sore tits.\n\nAfter nearly five minutes of gentle butt reaming, Cora estimated that she was about twelve inches deep into her sister's most private orifice. Emily was out of her mind with masochistic desire. Over and over again she would beg her older sister to ram the huge butt splitter into her pert ass hard, fast, and without regard to her comfort or likely pleas for mercy; and over and over again Cora would refuse. It was a pace that Emily was unfamiliar with. Their parents and older sisters were fond of much more rigorous sex - especially where anal sex was concerned - and they had trained their daughters and younger sisters to both love and crave a vigorous rectal pounding; the more forceful the better. Because of this, Emily had yet to reach a single mind-blowing orgasm; and after five minutes of intercourse without one was something Wilder women were just not accustomed to. Cora could admit to herself that if the roles were reversed, she too would be going out of her mind in frustration.\n\n\"Please, Cora!... Quit... teasing me!\" Emily demanded in between Cora's slow, yet deep and deeper, thrusts into her bottom hole. \"I need... to cum... so bad!\"\n\n\"Shhh, now baby sister,\" soothed Cora at the other woman's growing frustration. \"Just let your big sister work out that tiny little bottom of yours. If you'd quit whining constantly about needing to cum so bad and just enjoy the nice fucking your big sister is giving you, you might actually come to like this,\" Cora lied. No Wilder woman alive today would willingly submit to such a slow and drawn out butt loving if they had the choice between that and a fast and furious anal pounding that could last the same amount of time. The latter was infinitely more productive in the creation of pleasure producing hormones.\n\n\"But... Coraaaaaaaa!\" cried Emily. \"I need... to cum... so fucking... baaaaaaad!\"\n\n\"No buts!\" Cora shot back. \"You'll take your nice butt fucking like a big girl and you'll like it! Is that understood?\" she said as she forced at least another inch of lengthy bottom plunging toy up her sister's horny backside. She pulled at Emily's raw nipple extra hard so that her sister wouldn't notice the deeper penetration which by now had to have been well past fourteen inches. Emily only groaned animalistically and arched her back to give her sadistic sister even more access to her poor tits; this had the added effect of also forcing another inch or so of thick latex up her back hole. In Emily's lust-filled mindlessness, she didn't even seem to notice.\n\nIt's a good thing I didn't bet any real money on the fourteen inch mark, Cora remarked to herself. I think I'd have just lost my investment!\n\nFinally, after only three or so more thrusts, Emily started to notice something was up. Grunting in unanticipated discomfort as Cora's strap-on violated reaches of her colon that had never before known the taste of latex, Emily's eyes shot open to stare at her sister questioningly.\n\n\"God, damn!... How long... is that thing... Cora?\" she asked seriously.\n\n\"Oh, only about twenty-two inches or so,\" Cora commented dismissively. \"I borrowed it from mother's full length set earlier this evening. I figured you'd appreciate it!\"\n\n\"Twenty-two inches! Are you nuts!\" Emily demanded as she actually got a full sentence out in a single breath. \"I can't take anything that deep!\"\n\n\"Of course you can, you silly goose!\" Cora said reassuringly. \"You've already taken three quarters of it,\" she added as she thrust her hips forward more firmly than she had previously to split her sister's lovely butt by almost two full additional inches of the three and a quarter inch thick latex column. Emily cried out softly in pain and clamped her eyes tightly closed.\n\nKnowing that the cat was out of the bag now, Cora began to pick up the pace slightly and press forward more deeply with each slow and purposeful thrust. She knew from firsthand experience how uncomfortable the first few times were with truly deep anal penetration. Their mother had introduced her to the act only a few months ago as part of their more and more frequent training sessions.\n\nCora had cried and begged her mother to stop as Laura had plunged the twenty-two inch long, three and three quarter inch wide dildo deeper and deeper into her sore and protesting bottom. Had it not been for Naomi's energetic cunnilingus - Laura had asked her middle daughter to assist in Cora's training that night - distracting her while their mother violated her deeper than she thought possible, she might actually have tried to get away. As it was, once Laura had bottomed the thick and incredibly long dong up her spasming butthole and started a truly grueling ram-fucking with her chosen tool, Cora found out how pleasurable truly deep anal violation could be. She's cum so hard and so long that night that Cora herself had requested her mother fuck her deeply during their next three training sessions. Laura had happily complied with her daughters requests for a time before finally denying them as she had more to teach the young girl than deep fucking with a mere three and three quarter inch dildo.\n\nSo Cora knew how much Emily would appreciate what she was doing for her younger sister; as long as she could keep her distracted long enough to complete the soul-deep desecration of the younger woman's aching bottom. After a dozen more slow thrusts, Cora knew she only had a few inches to go before she was completely bottomed out in her sibling's butt.\n\n\"Fuuuuuck!... Coraaaaaa!\" panted Emily. \"Stop! I can't... take anymore!\"\n\n\"Sure you can!\" Cora responded quickly, not slowing her pace. \"You only have an inch left to go!\"\n\nWell, it was more like two, but who was counting, Cora corrected herself.\n\n\"Nooooo... No more...\"\n\n\"Come now! Wasn't it you who demanded that I fuck you despite any protests you might utter?\" Cora reminded. \"It couldn't have been more than a few minutes ago. Surely, you haven't forgotten your request already?\"\n\n\"Not... what I... meant!\" Emily grunted as the thick and realistically veined dildo started to ram into the bottom of her lungs on its never ending quest to get to the deepest point inside Emily's resisting body. \"Please... stop...\"\n\n\"Nonsense! You're almost there,\" Cora said reassuringly. \"Trust me. Once you get this all the way in you have a few solid cums, you'll be begging for this every night!\"\n\n\"Fuck you, Cora! Take it out!\" Emily said vehemently, but made no move to try and escape the painfully deep violation of her tight backside.\n\nUndeterred by her sister's anger, Cora continued to force more and more of the thick shaft deeper and deeper into her now crying sister. She had cried too when their mother had penetrated her this deeply for the first time.\n\n\"Trust me,\" Cora repeated. \"I know it hurts the first time. Mommy only fucked me this deeply a few months ago and it hurt like Hell!\" she confided in her agonized sister. \"Just remember how much it hurt when mommy started stretching you back there in the first place, and now you're a certified anal masochist; just like the rest of us. And I know you've seen mother and Amanda take things deeper than this up their butts, so you know it's possible. So will you let your big sister make you feel good?\"  \n\nEmily bit her lower lip and breathed in and out brokenly a few times before answering, \"Yes,\" very softly.\n\nCora knew Emily's last defenses had finally fallen. \"Good,\" she said and smiled down into the tear filled eyes of her favorite sister.\n\nWith one final thrust of her hips, Cora buried all twenty-two inches of three and a quarter inch thick bitch tamer up the protesting backside of the youngest Wilder. Emily only groaned pitifully and the extreme violation of her shapely backside.\n\n\"Good, girl!\" Cora announced happily. \"All twenty-two inches!\"\n\nEmily only moaned brokenly.\n\nWith her hips now flush with her sister's muscular butt cheeks, Cora asked, \"Are you ready for your big sister to make all this suffering worthwhile?\"\n\nEmily only nodded her head sharply and kept her tear filled eyes tightly closed as she dealt with the intense feelings of the organ-rearranging penetration of her rectal tract.\n\nCora pulled her hips back about six inches or so before slamming the long faux-dick right back up to the hilt in her sister's bottom. Emily cried out in pain at the unexpected thrust.\n\nNot letting Emily recover from that first epic, tooth-rattling plunge, Cora immediately pulled out and pushed back in again. And again. And again! All Emily could do was cry out silently in agony at the immense violation.\n\nAfter a dozen or so thrusts, Cora could tell that the motion took noticeably less effort on her part as Emily's colon accommodated to this new and exciting way of anal intercourse. Emily's mouth still hung open silently as Cora continued the obscene desecration of her pert backside.\n\nFinally, Emily made a sound. Not a cry of anguish or a scream of pain, but a long, low groan of masochistic pleasure. Cora smiled to herself as a small part in the back of her brain paraphrased a line from a classic movie: Your journey to the Dark Side is now complete, young Wilder!\n\nPausing momentarily in her rough fucking of her sister's now squirming butt, Cora slowly rolled Emily onto her front as she simultaneously lifted herself up onto her hands over her sister's back. Using her superior position, she spread Emily's legs with her knees to open the eighteen year-old's rearmost hole as wide as it could go and to align herself with the optimum angle to gain access to that orifice's deepest recesses.\n\nPulling back a full foot, Cora paused only momentarily to look down and enjoy the sight of her thick tool splitting two toned butt cheeks before slamming all twenty-two inches of thick ass breaking latex back into her beautiful, redheaded sister. Emily only groaned with unabashed lust at the violent shove as her sister bottomed out once again. From that point onwards, the pace and viciousness of the ass fucking was what any self-respecting Wilder woman would appreciate.\n\nEmily had asked Cora to fuck her ass hard, fast, and without regard to her comfort or pleas for mercy. How could Cora refuse a request like that?\n\nShe didn't.\n\nAnd as the pounding continued, and Emily was reduced to an orgasmed-out wreck, her only response to her older sister's frenzied pounding was to arch her butt to give Cora a better angle and to reach back with both hands to spread her cheeks to give her easier access.\n\nWelcome to the Dark Side, Emily, Cora thought.\n\nWelcome to the Dark Side..."
    ],
    "authorname": "lordodie",
    "tags": [
        "anal toys",
        "anal dildo",
        "toys",
        "butt plug",
        "urethra penetration",
        "lingerie",
        "fisting",
        "masochism"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-proper-young-womans-guide-to-anal-etiquette-ch-07"
}