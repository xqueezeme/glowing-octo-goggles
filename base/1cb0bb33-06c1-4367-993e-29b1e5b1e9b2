{
    "title": "Just a Little Magic Ch. 09",
    "pages": [
        "\"She's what?\"\n\n\"She's one of the 13. You know: the 13 women you have to save.\"\n\nI was suddenly glad that I was sitting down; my knees wobbled. Oh my God. The list. All this time it had been nothing more than a concept to me, a remote, distant idea - like a kid in Grade 1 being told which high school they would eventually go to.\n\nSophie was on the list?\n\n\"We narrowly avoided a disaster, Pete.\" said Lillian.\n\n\"What kind of disaster?\"\n\n\"Well ... the kind doesn't matter. That's not what's important. But it's absolutely vital that you not keep secrets from us. Do you understand?\"\n\nI didn't. \"Well ... it's just that ...\"\n\n\"Just what?\" said Lillian. \"No more secrets.\"\n\n\"Sorry. It's just that Janine ... well, generally she hasn't liked me having a girlfriend. She didn't like Michelle, or Danielle. And Danielle didn't like her. I still don't know what happened, but ... I didn't want to cause any trouble.\"\n\nLillian shot her daughter a look. Janine rolled her eyes, but then her expression changed. She knelt on the floor in front of the couch and put a hand on my knee.\n\n\"Pete, I only want what's best for you. You're going to save my life - mine and 12 other women's.\"\n\n\"We're a team.\" said Lillian. \"No more secrets. No more surprises. Okay, Pete?\"\n\nSophie was one of the 13?\n\n\"Okay.\" I said.\n\n\"Good.\" said Lillian. \"So - tell us about your girlfriend ... how did you meet?\"\n\nI did most of the talking for the next half hour. Lillian and Janine wanted to know everything.\n\nI didn't have any problems with telling them about the pool party. But I was reluctant to talk about our first real date - the 12 hour marathon that took us to High Park, after Dim Sum, and before drinks and dinner. For some reason, that felt private - something that belonged to Sophie and me alone. I was not going to describe our first kiss.\n\nThere didn't seem to be anything wrong with telling them the basic facts: that Sophie had an exciting new job as a lab technician, and that she was committed to living in Montreal for the near future ... that her father was there, while her mother lived here.\n\n\"You've ... been intimate?\" said Lillian.\n\n\"Yes.\" I wasn't about to go into detail, but there didn't seem to be any reason not to admit it. 'No secrets' wasn't quite the same as revealing that Sophie was the most exciting, most wonderful woman I'd ever met.\n\n\"How was she?\" asked Janine.\n\nI just blushed. There was no right way to answer that question.\n\nJanine had been the star - no, let's be honest - the center of the entire firmament of my fantasies and sexual experience from the moment I turned 18, when she knocked on my door. She'd been my obsession, the focus of my constant lust.\n\nI'd wanted to please her, to impress her, to earn even the slightest nod of approval.\n\nSophie, though ... I wanted to please her, but also to comfort and protect her - most of all, to see her smile (ideally, because of something I'd done). There was lust, too. But if I was going to be totally honest, she gave me a warm feeling, which I wanted to return in full measure.\n\n\"Janine.\" said Lillian. That was the closest to a reprimand I'd ever heard between Lillian and her daughter.\n\nSomething told me, though, that it was dangerous to leave this question hanging there unanswered. I looked at Janine, and then lowered my eyes.\n\n\"It's, ah ... it's good. I mean, there's nobody like you ... but ... yeah - it's good.\"\n\nJanine smiled. That was all she wanted to know. Her throne was secure.\n\n* * * * *\n\nWe did a short U.S. tour: Detroit and Toledo (Ohio), Gary (Indiana) and Chicago, Milwaukee and Madison, Minneapolis and Duluth. The venues were mostly small, and I wasn't sure that we were making all that much money, but Janine assured me that it was a good idea.\n\nOn the brighter side, she wasn't bothering me to go out with groupies. Meanwhile, Sammy and I were both missing our girlfriends, so we were able to commiserate with each other. I just couldn't tell Sammy that Sophie was on the list - or mention the list at all.\n\n\"Did you ever think that we'd be in Duluth, Minnesota together?\" I asked him. \"Or Gary, Indiana?\"\n\n\"I didn't know there was a Gary Indiana.\"\n\n\"C'mon, Sammy. It's just down the road from South Bend. Notre Dame.\"\n\n\"Yeah, yeah. But we're not here for college football.\"\n\nHe was right about that. Janine and I were trying out new material, new approaches. We'd been invited for a second appearance on Penn and Teller - we needed another crowd-pleasing routine.\n\nBut we were back in Toronto at the beginning of October, which left me free to join Sophie and her mother for Thanksgiving. She must have been watching for my car, because she immediately came out to greet me with a kiss and a big hug.\n\n\"You're so beautiful.\" I told her. \"Even more beautiful than I remembered.\"\n\n\"I missed you, too.\" she said.\n\nIt was so strange: Sophie was so real, so warm and alive, in my arms. But in the back of my mind was the utterly bizarre realization that I had to save her from being raped, impregnated and murdered by my own father - and that to do so, I had to impregnate her myself. It just didn't make sense.\n\nThe future was too strange, too daunting. I took refuge in the immediate present.\n\n\"Any last-minute instructions for dealing with your Mother?\"\n\n\"She's a little uptight.\" Sophie warned me. \"And her partner is ... difficult. But Mom will like you. And my Aunt Anna is pretty cool. She'll like you, too.\"\n\n\"As long as you like me.\" I said.\n\nSophie smiled at me - her classic smile, which showed no teeth, but revealed every one of the dozen best dimples on her face. Then she kissed me again.\n\n\"You'll be fine.\"\n\nSophie hadn't gotten her looks - or her personality - from her mother. Her Mom was ... brittle, for lack of a better word. A fragile personality, in need of constant support and reassurance.\n\nHer Mom's boyfriend introduced himself as 'Sophie's stepdad', while trying to crush my fingers. He was just ... creepy. Patronizing and creepy.\n\nAunt Anna, on the other hand, was a treat.\n\n\"So pleased to meet you, Pete. Sophie talks about you all the time. I saw the video of the night you met - that pool party. Then I had to go back and watch your appearance on Penn and Teller. Wow! What a great show!\"\n\nAunt Anna was Sophie's Mom's sister, but she looked more like Sophie: dark hair, dimples, and cleavage.\n\n\"That's very kind of you to say, Aunt Anna.\" I said. \"I'm very pleased to meet you, too. Sophie didn't provide a lot of details, but I know that she's very fond of you - and that you've been very important in her life.\"\n\nAunt Anna smiled, showing her own collection of dimples. \"I've tried to keep in touch with her. It hasn't always been easy. My sister doesn't always approve of my ... lifestyle.\"\n\n\"Oh?\" Sophie hadn't told me anything about a split between her mother and her aunt.\n\n\"Sophie didn't tell you?\"\n\n\"Umm ... no.\"\n\n\"Let's just say that while my sister went to university for her MRS, I got myself a job.\"\n\n\"MRS? I'm sorry - what type of degree is that?\"\n\nAunt Anna grinned. \"It's not. MRS - Mrs. She went to university to meet her future husband. She succeeded. She got married. They had Sophie - the only bright spot of that unholy union - then they divorced.\"\n\n\"Here's a tip for you: if Sophie ever wants to introduce you to her father, just say that you're busy. Or sick.\"\n\nFamily drama. The odd thing, though, was that Sophie loved her Aunt. Anna had been there for her throughout her childhood and teen years. I wasn't at all impressed by Sophie's Mom - and her stepdad was repulsive. Aunt Anna seemed like the sane one of the family.\n\n\"What type of job did you get?\" I asked.\n\n\"I answered the phone at a rape crisis centre.\" she said. \"Then I gravitated to suicide prevention.\"\n\n\"That must be ...\"\n\n\"Too difficult. Painful. I changed career paths. Now I'm a psychic.\"\n\nI didn't know what to say. A psychic?\n\nSophie appeared at my elbow.\n\n\"It's true.\" she said. \"Aunt Anna helps people.\"\n\n\"You mean ... like ... seances?\"\n\nBoth Anna and Sophie laughed.\n\n\"No! Anna helps people find things. She gives people advice, too. Whether to buy a car, or a house. You know what's amazing, Pete? She's almost never wrong.\"\n\n\"Oh, Sweetie ...\" said her Aunt.\n\n\"No, really. It's incredible how often you're right.\"\n\nI had a great meal with Sophie's family. I probably had two more beers than I should have, and a couple of shots of ouzo. Sophie sat next to me, and her hand was on my thigh through most of dinner.\n\nAfterwards, I volunteered to help clear the dishes.\n\n\"Isn't that nice?\" said Sophie's Mom, who'd apparently had more to drink than I had. Her boyfriend looked at me as if he was wondering about my sexual orientation.\n\n\"I'll do the dishes, if Pete helps me.\" said Aunt Anna.\n\n\"I can help.\" said Sophie.\n\n\"We've got this.\" said Anna. \"You spend some time with your Mom.\" From the tone of her voice, I guessed that that was more of a command than a suggestion.\n\nI carried all of the dishes into the kitchen, where Anna began washing. She directed me to various Tupperware containers so that I could salvage the leftovers.\n\n\"Sophie really seems to like you.\" said Anna.\n\nI swallowed, and took a deep breath.\n\n\"I sure hope so.\"\n\n\"Oh, she does. And how do you feel about her?\"\n\nThere it was.\n\n\"Anna, I love your niece. I've never met anyone like her. She makes me so happy ... that's all I want to do - make her happy.\"\n\nAunt Anna smiled at me.\n\n\"Well, you're doing fairly well so far.\"\n\n* * * * *\n\nWe did a couple of fair-sized shows in November. I was more than a little surprised when after one of them, I saw a familiar face among the fans who stayed around after the show. There were the autograph hounds, the magic nerds, and a couple of wanna-be groupies and ...\n\n\"Aunt Anna?\"\n\nShe laughed. \"Just plain Anna, to you. Pete, this is my best friend, Eileen.\"\n\n\"Pleased to meet you.\"\n\n\"Great show.\" said Eileen.\n\n\"It really was.\" agreed Anna. \"Hey - why don't you talk to your other fans, here? We can wait.\"\n\n\"Are you sure?\"\n\n\"Absolutely. You go ahead.\"\n\nAnna and her friend waited until I'd signed a few autographs, answered some questions, and turned down a rather straightforward offer from a petite brunette.\n\n\"Does that happen often?\" asked Eileen, when the little brunette had gone.\n\n\"Umm ... sometimes.\"\n\n\"Don't embarrass him, Eileen.\" said Sophie's aunt. \"Listen, Pete, we were hoping that you were free to join us for a drink, or a light meal. Whichever you'd prefer.\"\n\n\"I could go for something to eat.\" I said. Turning down Sophie's Aunt didn't seem like a good idea. And I was hungry.\n\n\"Oh - do you think we could meet your partner?\" asked Eileen. \"She's amazing.\"\n\nI glanced over at Janine, who was talking to the last of her own set of fans and admirers.\n\n\"Sure.\" I brought them over, and made the introductions.\n\n\"You were fantastic!\" said Eileen. \"I love that outfit. Do you read minds, too?\"\n\n\"No - that's Pete talent.\" said Janine.\n\n\"Come on - you're just as much a magician as he is.\"\n\n\"That's nice of you to say.\"\n\nAnna and Eileen took me out to a late-night eatery. Eileen turned out to be something of a magic nerd herself; she must have had a dozen questions about our performances. She also wanted to hear the story of how Sophie and I had met - 'firsthand' as she put it.\n\nAunt Anna insisted on picking up the bill. The two ladies thanked me for spending time with them.\n\n\"It was my pleasure.\" I said. \"Thank you both.\"\n\nIt wasn't until much later that I realized that Eileen had carried most of the conversation. She'd done almost all of the talking from their side of the table. In fact, Aunt Anna had been completely silent for long periods of time.\n\nThat was when it struck me that Anna hadn't said a word to Janine, either.\n\n* * * * *\n\nSophie came to Toronto for her Christmas holidays. She spent Christmas Eve with her mother, but joined my family for Christmas dinner.\n\n\"Oh my goodness!\" said my Mom. \"You're so pretty! Peter - she's so pretty!\"\n\n\"I'm not blind, Mom.\"\n\nSophie smiled. \"Thank you, Mrs. Grey. And thank you for inviting me.\"\n\nMom and Bill were both very impressed. They'd been stunned when they first met Janine - Bill had spent most of the time with his mouth open. Mom couldn't believe that a girl as hot as Janine would be with me (unless I was selling drugs, or something like that).\n\nDanielle had been more believable. She was more 'my type' as far as Mom was concerned. Bill wasn't going to object, either, once he'd seen her bust.\n\nWith Sophie, though, it was different. They saw how attractive she was, but they were won over by her warmth and kindness. She asked them questions about themselves, and listened attentively to the answers.\n\nIt only took an hour for her to win them over completely.\n\nIt was my mother who suggested that Sophie had to stay over, because she'd had a couple of glasses of wine.\n\n\"You shouldn't be driving. It wouldn't be safe. Besides, the police will be out in force.\"\n\n\"If you're sure it won't cause you any trouble ...\" said Sophie.\n\n\"It won't be any trouble at all. I insist.\" said Mom. \"Bill - pour Sophie another glass of wine, before she changes her mind.\"\n\nThat was how it came to pass that I shared my old bed - in my old room - with my incredible girlfriend. Mom hadn't changed a thing; she probably thought that I'd be moving back home when my career as a magician tanked.\n\nSophie loved my old room.\n\n\"Wow - this bed must've seen some action.\" she said.\n\nI shook my head.\n\n\"None.\"\n\n\"Really?\"\n\n\"Zero.\" Unless she wanted to count my masturbatory exploits - in which case the number would be in the thousands.\n\nSophie came closer, and pressed her beautiful body against mine.\n\n\"Let's change that.\" she said.\n\nSophie created a host of new memories for me to associate with my old room. My first blowjob there, first 69, first missionary, doggie, cowgirl, reverse cowgirl, spoon fashion ...\n\n\"I can't believe ... how lucky I am.\" I managed to gasp, after out 3rd coupling.\n\n\"I'm feeling pretty lucky myself.\" she said.\n\n* * * * *\n\nSophie made that entire holiday season memorable for me. We double dated with Sammy and Trish, and met Aunt Anna for coffee and cakes.\n\nShe also met Janine and Lillian, when my Mom had them over for dinner.\n\nI'll admit that I was on pins and needles for most of the evening. Lillian was near-perfect - but it wasn't her that I was worried about.\n\nThere were no scenes, no explosions. By the time we got to the coffee, I was beginning to relax a bit, and to breathe normally.\n\nJust before they left, Lillian hugged me, and whispered 'Good job'. Janine hugged me, too, and kissed my cheek.\n\nLater on, Sophie joined me on my old bed, in my old bed (Mom had insisted that she stay over again).\n\n\"So ... what did you think of Lillian and Janine?\" I asked.\n\nSophie rolled onto her stomach, and looked me in the eye.\n\n\"I'm sorry, Pete. Lillian was okay. And I know that Janine is your partner. I just ... I didn't care for her all that much. I don't want to double date with her, or anything like that, if that's what you're asking.\"\n\n\"Did she ... do something? Or say something?\"\n\n\"No ... it's just ...\"\n\nI turned and put my arm around her.\n\n\"It's okay. You don't have to be friends with her.\"\n\n\"We're just different. Oil and water, you know?\"\n\nI kissed Sophie. She responded, and we soon began to work on creating some more new memories for my old room.\n\n* * * * *\n\nSophie had to go back to her job. I had to meet with Lillian and Janine.\n\n\"We have two years, Pete.\" said Lillian. \"Two years for you to meet and seduce 12 women.\"\n\n\"Eleven.\"\n\n\"Yes - but you can't neglect Sophie in all of this.\"\n\n\"I won't.\" That was the only thing I was sure of.\n\n\"Time to get serious.\" said Janine.\n\nLillian handed me the first of a series of papers.\n\n\"We'll arrange your schedule so that you can meet the women, and so that you go back to see them again. But that same schedule will also be the explanation for why you can't see them regularly.\"\n\n\"You'll perform a show in their hometown - or close enough. Janine and I will make sure that the target attends your show, so that you can meet her.\"\n\n\"The target?\" Was that what they were?\n\nLillian quickly corrected herself. \"The woman in question.\" she said.\n\n\"And how can you be sure that she'll come to the show?\"\n\n\"Free tickets.\" said Janine. \"A friend who'll invite her. Let us worry about it.\"\n\n\"Then Janine will select her as a volunteer.\" continued Lillian. \"Once she's on stage, you can get a better idea of how to approach her. Plus you'll have that connection to begin with.\"\n\n\"What if she's really shy?\" I asked.\n\n\"What?\"\n\nI was thinking of women I knew. Sophie wasn't shy, but Danielle would have needed some persuasion to get her up on stage. Michelle would have been paralyzed.\n\n\"If you drag an unwilling volunteer up on stage, it won't be a positive experience.\"\n\nLillian looked thoughtful. \"He has a point.\"\n\n\"But if we don't bring them on stage, how is Pete supposed to meet them?\" said Janine.\n\nFor some reason, I thought of Danielle. Specifically, how I'd run into her at Sick Kids' Hospital after she'd been to one of our shows.\n\n\"Serendipity.\" I said. It was one of my favourite words, mostly because both Danielle and Sophie had used it to describe our first meetings.\n\nLillian and Janine allowed me to explain it to them. Janine looked sceptical, but Lillian was immediately won over.\n\n\"That's brilliant!\" she said. \"It'll make it seem like fate - or destiny!\"\n\nThe three of us began to suggest ways that I could meet the women the day after a show. Chance encounters, in unexpected places, strange coincidences ...\n\nAfter we'd brainstormed a whole slew of possibilities (some clever, some crazy), Lillian brought us back to business.\n\n\"You may not be able to 'seal the deal' right away.\" she warned. \"Some of these women are ... well, let's call them 'good girls'. They may require a little more work.\"\n\n\"You may need to take them out a few times. We can set up 'breaks'' in your schedule here and there, so that you can spend more time in certain locations, if and when we think it's necessary.\"\n\n\"That means communication, Pete. No secrets, remember? You need to tell Janine exactly how you're doing with each ... woman in question. That way, we can help when you need it.\"\n\nLillian handed me another sheet of paper.\n\n\"It's time you saw what we're dealing with.\"\n\n1. BREANNA Atlanta, Georgia January 9, 2001 January 14, 2028\n\n2. ELODIE Brugges, Belgium February 8 February 13\n\n3. VICKY Singapore March 9 March 13\n\n4. SOPHIE Montreal, Quebec April 7 April 12\n\n5. IRENE Limassol, Cyprus May 7 May 11\n\n6. SANDRA Taipei (Taiwan) June 5 June 10\n\n7. ASHLEY Chicago, Illinois July 5 July 9\n\n8. MIRELLA Sao Paulo, Brazil August 4 August 8\n\n9. KAVIA Vadodara, Gujarat September 2 September 6\n\n10. ESTHER Johannesburg, S.A. October 2 October 6\n\n11. TAMARA Tampa, Florida November 1 November 5\n\n12. RI Osaka, Japan November 30 December 1\n\n13. JANINE Toronto, Ontario December 30 December 31\n\nJust like that ... it was suddenly real.\n\nUp until now - even with the discussion of how I'd meet these women - it still seemed like a hypothetical exercise, some kind of simulation a college professor could create. It was always years away, more fantasy than reality.\n\nBut here it was. There was Sophie's name. And Janine's. There were the dates. The first were their birthdays - April 7th for Sophie, December 30th for Janine - I knew those two well.\n\nAnd that final column. Janine was going to be raped and impregnated the day after her 27th birthday.\n\n\"Are you okay, Pete?\" asked Lillian.\n\nI must have been staring at the sheet of paper. I'd clearly lost track of time.",
        "\"Yeah. Sorry.\"\n\nJanine wrapped her arms around me, and softly kissed my cheek.\n\n\"You're going to save me. Pete. I know you can do it. Me and Sophie, both.\"\n\nThe ladies understood when I went to the bathroom, to splash some water on my face. Holy shit - what had I got myself into? It hadn't been real ... until today.\n\nI sat down on the toilet (with the lid closed), and tried to figure out just how I'd gotten to this point.\n\n* * * * *\n\nWe had several meetings to plan our strategy. Yes, I'd be the one who was doing the seducing, and the impregnating, but Lillian and Janine made it clear, again and again, that they would help me in every way they could.\n\n\"What if one of these women doesn't want .... I mean ....\"\n\n\"Magic, Pete.\" said Janine.\n\n\"We have to save their lives.\" said Lillian.\n\n\"What if they have boyfriends? Holy crap - what if they're married?\"\n\n\"Don't worry about it.\" said Janine.\n\n\"What the hell does that mean?\"\n\n\"I've looked it into it.\" said Lillian. \"None of them are married. None of them have a boyfriend.\"\n\n\"Really?\" That seemed highly improbable to me.\n\n-\"I did the research.\" she assured me. \"They're all single.\"\n\nExcept for Sophie, I wanted to shout. Sophie has a boyfriend. What were the odds that the 11 other women were all single? It didn't seem possible.\n\n\"Trust me, Pete - it will all work out. We can do this.\" She suddenly shifted to another topic.\n\n\"You'll have to keep in touch with these women - every day. You have to constantly remind them that you're thinking of them, that they're important to you.\"\n\n\"I'll help you with that.\" said Janine. \"You'll need a dozen email accounts - and you have to avoid using your name in any of them.\"\n\n\"I do?\"\n\nJanine rolled her eyes. \"What if #1 wants to brag to her friends about her relationship with you? What if #6 wants to go public? What if she wants to tell everyone that she's fucking a celebrity? And how will it look if #4 and #9 find a picture of you and #10, looking all lovey-dovey?\"\n\n\"Sophie is #4.\" I said.\n\n\"Well ... still. The point remains the same. We have to manage your exposure. We'll set up a daily schedule for texts and photos.\"\n\n\"Daily?\"\n\n\"They have to be reminded that they're important to you.\"\n\n\"Wait. Wait.\" I remembered what Sophie had told me about email and texting. She didn't want to be poked three times a day, or made to feel that she had to respond to every single message I sent her.\n\nI tried to explain what Sophie had told me about my longer, more thoughtful, weekly missives.\n\n\"Oh, come on.\" scoffed Janine.\n\n\"I don't know.\" said Lillian. \"Pete might have a point here - if it works for Sophie, it might work for others.\"\n\nWe talked and planned for another hour.\n\nIt was too real, at this point. What was Sophie going to think? How was Sammy going to take this?\n\n* * * * *\n\nSophie first.\n\nI went to Montreal for the weekend.\n\n\"I'm going to be on the road, for a while. We have some big appearances scheduled, and this is the year we start expanding our tours. Europe again, the Far East ...\"\n\n\"You're going to be away for a while.\"\n\n\"Part of me doesn't want to do this at all.\"\n\n\"Well, I knew you were a magician when I met you.\" she said. \"Not right away, of course: for a while there I thought I was talking to a guy named Robin ...\"\n\n\"I'll be back as soon - and as often as I can.\"\n\n\"I know you will.\" said Sophie. Then she kissed me.\n\n* * * * *\n\n#7 Ashley Chicago\n\nSammy was surprised to learn that Lillian would be accompanying us on this tour. He was already off-balance, having been told that many of the dates had been booked without his input. For now, he was relegated to the position of publicist, equipment manager, and #1 trouble-shooter.\n\n\"This is the way you want it?\" he asked me.\n\n\"Not exactly - but it has to be this way, for now. You realize that I'm only a partner in this enterprise, right?\" Sammy was well aware that Lillian and Janine had taught me magic from the very beginning.\n\nThe first leg of our tour was familiar territory: Chicago.\n\nOn my advice (slightly refined by Lillian), we'd added a gimmick to our routine. I pretended to be an usher, helping people to their seats, or handing out programs of upcoming events. I wore a cap and glasses. This would give me a chance to 'hover' near the woman in question, and try to get a feeling for how willing she'd be to volunteer.\n\nLillian told me which seat the WIQ would be in, and I worked my around the auditorium.\n\nOur first attempt was almost a train-wreck. The 'woman in question' and her friend were late. We delayed the start of our show by almost five minutes. The audience were getting restless, so Janine came on to warm them up.\n\nI was about to give up on our 'special guest' when two women came trundling down the aisle in high heels. One of them stumbled, and uttered a loud \"Shit!\" - which didn't go unnoticed by many of the other patrons.\n\nOh dear.\n\nAshley was #7 on the list. I just wasn't well prepared to meet her in person.\n\nWhere had I ever gotten the idea that all 12 of the women on the list would be attractive? Sophie and Janine, quite obviously, had skewed my expectations.\n\nAshley had long, straight, corn-coloured hair. Her lower lip was pierced, and she had studs in her nose, eyebrow, and tongue. She also had enough eye makeup on to make Cleopatra jealous.\n\nIt still wasn't enough to make her attractive; all those piercings and all that makeup just made her look trashy.\n\nHer best attributes were her tits: 38 DD, if I wasn't mistaken. She wanted everyone to be aware of them; her low-cut top showed more cleavage than the Panama Canal. She was built like the proverbial brick shithouse from the waist on down.\n\nAshley and her friend had stopped for a couple of drinks before the show - I could smell them from several yards away.\n\nI moved level with the front row of seats - the signal for Janine to start the show for real.\n\nWhere the hell is Peter?\" she asked.\n\n\"Right here.\" I said, as I climbed the stage steps. The audience were properly surprised to discover that I'd been wandering among them for at least half an hour.\n\n\"What were you doing down there?\" said Janine.\n\n\"Reading minds.\"\n\n\"Anything interesting?\" she asked, one eyebrow raised.\n\n\"You wouldn't believe what people in Chicago get up to.\" I said. As I passed close to Janine, I gave her a hug, and whispered: \"Not her. The friend. Seat 4.\"\n\nThen we started our routine. Some of it consisted of old favourites, but we also tried out the material we were going to use for our second appearance on Penn and Teller. It was, if I do say so myself, a damned good show.\n\nThe fourth volunteer was Lindsay - Ashley's friend. She was dressed to kill, too, but her makeup wasn't so ... demonstrative. She just looked like a hottie out for a good time. The males in the audience obviously appreciated Janine's choice of a subject.\n\nLindsay was still a little tipsy, and a little giddy, which only made her that much more uninhibited. The audience laughed more than once at her obviously unrehearsed responses.\n\nAt one point in the routine, Lindsay and I were isolated in the soundproof booth.\n\n\"You're doing great.\" I told her.\n\n\"This is so cool.\" she said. \"Is this going to be on TV?\"\n\n\"Could be. Say, Lindsay ... who's that sitting beside you? Your friend?\"\n\n\"Oh - Ashley?\"\n\n\"Ashley. Mmm ...\"\n\n\"Oh - you like her? D'you want to meet her? She thinks you're hawt ...\"\n\nThe show was a success - on all fronts. The audience left happy, and Lindsay and Ashley were among the fans waiting in front of the stage afterwards.\n\nAfter reading Lindsay's mind several times, I had two more pieces of information to share with Janine.\n\n\"Lindsay is bi. And she is completely into you.\"\n\n\"Is she now?\" said Janine.\n\nAshley was an open book. She would've fucked me backstage while Lindsay waited. Instead, I had Janine invite the two of them to join us for 'a drink' at our hotel. Lindsay was up for it right away; Ashley agreed instantly when she heard that I would join them.\n\nI went back to the hotel with Sammy and Lillian.\n\n\"I don't know if that was a fluke, or what.\" said Sammy. \"But that first time with the new material was excellent. Perfect.\"\n\n\"Thanks.\"\n\n\"Oh - Sam.\" said Lillian. \"Would you have a moment to check over a few things with me? Shouldn't take more than half an hour.\"\n\n\"Go ahead.\" I told him. \"I'll catch up with you later.\"\n\nThat wasn't true. Lillian was going to keep him busy for an hour, and then treat him to a couple of drinks. I wasn't going to see Sammy until tomorrow.\n\nLillian had rented a third hotel room for us - which was where I found Janine, Lindsay and Ashley. They'd already had a drink (or two); Lindsay was practically sitting in Janine's lap.\n\nI'd already read Ashley's mind, briefly; it was easy to re-connect. She wasn't very drunk yet, but she was down for just about anything - especially if it involved me.\n\n\"Hello, beautiful.\" I said. \"I'm Peter.\"\n\nAshley knew my name. She was not accustomed to being called 'beautiful', though.\n\nShe was a party girl - a heavy drinker, with a big laugh. Ashley was used to guys who wanted to get her wasted, and then fuck her face or her pussy. That was the key word - Ashley was used to being used.\n\nThat was why I'd decided to treat her better than she was accustomed to.\n\n\"Can I take you for a drink? Or something to eat?\"\n\nJanine had begun to kiss Lindsay, and already had a hand on her ass. Ashley glanced at them, and then back at me.\n\n\"Really?\" she said.\n\nI took her hand - and as I did so, I released just a little magical energy. It wasn't like getting a shock from static electricity. It was much warmer, and much more stimulating. Ashley's eyes opened wide.\n\n\"Don't be fooled, Ashley. After a drink - and maybe something to eat - I'm going to bring you back here. Then I'm going to fuck you. Actually, I'm going to eat you, first - then I'm going to fuck you. Several times.\"\n\n\"I hope you don't have to work tomorrow - because you're going to be late.\"\n\nAshley was lost for words. She had no idea how to respond.\n\n\"Drink first.\" I said. I took her to the little piano bar at the back of the hotel.\n\nAshley was in completely unfamiliar territory here. I'd taken her to a nice place, and I was treating her like someone that I wanted to impress. On top of that, I was talking to her, asking her questions, instead of going straight for her tits. She was a little bit confused, but she was enjoying it.\n\nI didn't have to remind her of our eventual destination, to keep her lusts at their peak.\n\n\"Don't forget to call the dealership. Leave a message that you're going to be late.\"\n\n\"You know where I work?\"\n\n\"I know everything about you, Ash. And I don't care about any of it - before today.\"\n\nAshley worked at a car dealership in the suburbs of Chicago. She wore revealing clothing, and too much makeup. For the price of a few drinks, or a couple of joints, almost any male had a better than average chance of getting into her pants.\n\nBut I didn't care about her past. Her present, and her future, though - those were my immediate concern.\n\nShe didn't really know what to make of me. But I was a celebrity, and hot - that's what she thought - and I wanted her. That was more than enough.\n\nBut then I delayed the inevitable, so that I could talk to her, and flirt with her. Ashley didn't know too many men who flirted. Usually, they went straight to propositioning her.\n\nI bought her an expensive cocktail, and then a Spanish coffee. She wasn't drunk - far from it. She was intrigued, though. And horny.\n\nWe went back to Lillian and Janine's room. I wasn't sure where Lillian was going to sleep, tonight. With Janine and Lindsay? That wasn't my concern.\n\nAshley was my focus. I led her into the room, and then held her from behind. She could feel my erection pressed against her ass, and she moaned when I kissed her neck.\n\nI undid the remaining buttons on her top (there weren't many) and helped her remove it. Instead of continuing to strip her, I kissed her neck some more, and then her shoulders, while stroking her bare arms. At the same time, I admired the overhead view of her cavernous cleavage.\n\nHer bra came off next, releasing her large, heavy breasts. Ashley was prepared for me to grab her tits; she was used to being squeezed and mauled. She was surprised again, though, when I caressed her sides, and then cupped her big boobs in my hands, helping to support their weight.\n\nShe had a tattoo of angel wings on her lower back, just above her ass, and another tattoo, a butterfly, on her lower stomach. She's had her navel pierced, too.\n\nI steered her to the bed, and sat her down so that I could remove her heels, and then peel off her super-tight pants. She had one more tattoo, of a bunny rabbit, on her ankle.\n\nAshley was in completely uncharted territory, for her. She didn't know what to do when I knelt on the carpet between her knees.\n\nI pulled her head down, just a little, so that I could kiss her. Ashley moaned and wrapped her arms around me. I placed my hands on her hips, but then I couldn't resist reaching up to fondle her big dangling tit.\n\nWhen I asked her to, she moved further up the bed. I propped a couple of pillows under her head, so that she'd have a good view, and then moved back between her legs. I'd told Ashley that I was going to eat her, but she was still taken by surprise when I actually did.\n\nThe tattoo was distracting. So were Ashley's thoughts: OhGod, OhmyGod, OhmyGod ... She briefly wondered what she'd done to get so lucky, and then gave up thinking to return to her mantra: OhGod, OhmyGod, OhmyGod ...\n\nShe was clutching the sheets and moaning when her first orgasm hit her. I rolled on a condom as she recovered.\n\nAshley called on the Creator again when I entered her.\n\nShe wasn't pretty, and she had terrible taste in personal adornment, but Ashley was an enthusiastic bed partner. She liked to roll her hips and thrust her pelvis upward to take me even deeper.\n\nHer big breasts came into play in every position we tried where she was facing me. I have to admit, though, that taking her from behind had its own attractions. The hotel room had a strategically placed mirror on the wall. As I fucked her doggy style, Ashley's big breasts swung beneath her - it was an arousing sight.\n\nThanks to a little magic, I was able to fuck her straight through two more orgasms. I certainly achieved my goal: to give her a night to remember. Ashley was exhausted. I pulled the sheet up over her, and let her sleep.\n\nI took a shower, and then left Ashley a short note in case she woke up. Wait for me - I'll be back, I wrote. Then I returned to the room I shared with Sammy.\n\nHe was out cold. I crawled into my bed, and caught two hours sleep.\n\nI got up, dressed, and returned to Ashley. She was still sleeping, but she'd obviously been stirring in her sleep: the sheet had slid down to her waist, exposing her enormous tits. She also had a rather angelic expression on her face.\n\nAs I slid into bed beside her, Ashley jerked awake. Her head snapped around, but when she caught sight of me, she broke into a huge smile.\n\n\"Hey ...\" she said.\n\n\"Hey.\" I said. \"You were amazing, last night.\"\n\n\"I was? Peter, you ... I don't even know what to say. That was ...\"\n\n\"Can I see you again?\" I said.\n\nAshley's eyes went wide. That wasn't something she'd heard very often. Men tended to mark her down as a sure thing, a late night booty call when they'd struck out elsewhere. Whereas I wanted to see her again - and I was asking ... it was too good to be true.\n\nWe fucked again - spooning first, then missionary.\n\nShe didn't complain, afterwards, when I suggested that she get a shower, so that we could meet Lindsay and Janine for breakfast.\n\n\"Oh my God - Lindsay! I forgot all about her.\"\n\n\"You didn't answer my question, though.\" I said.\n\n\"Which question?\"\n\n\"Can I see you again, Ashley?\"\n\nShe looked at me closely, and then looked again, just to make sure that I was serious.\n\n\"We have another show tonight. I was hoping that I could see you, afterwards.\"\n\n\"Oh my God ...\"\n\nAfter making arrangements, I passed Ashley to Janine, who was ready to have breakfast with Lindsay. Then I went back to my room, where Sammy was just getting up.\n\n\"Where were you, last night?\"\n\n\"With Janine.\" I said. \"She wanted to have a heart-to-heart.\"\n\n\"Oh, shit. Tell me you didn't let her mess with your head.\"\n\n\"No. We have ... you know, some things to talk over. But I think she's okay with me and Sophie.\"\n\n\"Really?\"\n\n\"Really. We're going to have dinner after tonight's show. Just the two of us.\"\n\n\"Okay.\" said Sammy. \"Hey - did you sleep alright? You were gone when I woke up, Dude.\"\n\n\"Yeah. Just woke up early. I thought I'd let you sleep - you looked out of it.\"\n\n\"Breakfast?\" he said.\n\n\"Sounds good.\"\n\nYes, I was lying to Ashley. I didn't feel too bad about it, though, since I was already - quite plainly - one of the highlights of her romantic and sexual life.\n\nI was deceiving Sammy, too. That didn't sit so well with me - but what else could I do? Lillian and Janine had made it very clear that I couldn't tell him about ... anything.\n\nWe performed again that night. Lillian kept Sammy busy after the show, and Janine made herself scarce, while I took a cab to Cicero, where Ashley lived.\n\nAs I'd instructed, she'd ordered in a feast of Chinese food. We ate, and fucked - three times. She desperately tried to go down on me, which I finally permitted as long as I could reciprocate in a 69.\n\nI left her place at 4:30, thoroughly exhausted.\n\nAt 5:30, I crawled into bed in the room I shared with Sammy.\n\n* * * * *\n\n\"I don't know if I can keep doing this.\" I confessed to Lillian and Janine.\n\n\"You can go to bed early, and sleep in tomorrow.\" said Janine.\n\n\"No - I mean the ... trying to fool Sammy. He's going to wake up early one morning, and find out that I'm not there.\"\n\nLillian frowned. She didn't like leaving things to chance.\n\nFor the next few days, I could return to normal. Sammy and I shared meals, talked nonsense, and then talked about Trish and Sophie.\n\nYes, I was lying to Sophie, too.\n\nHow could I possibly explain this to her? One day, perhaps ... when it was all over. Or was I just dreaming? My head hurt, when I thought about it.\n\nWe did seven more shows, working our way east and south. We also did a couple of interviews and even filmed a commercial before we reached the second key part of our trip.\n\n* * * * *\n\n#1 Breanna Atlanta\n\nIn my role as usher, I got a close up look at Breanna as she took her seats. She was a big black girl, with a cute face, who could have taught Ashley a thing or two about the proper application of makeup.\n\nBreanna was just a little bit vain; she expected that people would be checking her out at all times. She was happy to be at the show (she'd seen us on Penn and Teller), but disappointed to be seeing it with her mother, instead of with her man.\n\nHer long-time boyfriend had broken up with her only 3 months ago - and he'd informed her of his irrevocable decision by sending her a text. How cold was that?\n\nWhen the show began, I only had to give Janine a nod to let her know that Breanna would make an excellent volunteer.\n\nJanine called her up towards the end of show, to participate in the biggest part of our routine. Breanna was happy, bubbly, and enjoying her time in the spotlight. Did I say that she was a little vain? Borderline narcissistic.\n\nWhen we were isolated together in the sound-proof booth, she was very excited.\n\n\"You look great.\" I told her.\n\n\"Why, thank you.\" she replied, batting her eyelashes.\n\n\"You're doing so well, I'm thinking that we should make a permanent part of our show.\"",
        "She knew that I was kidding, but she flashed me a big smile. \"Oh, I couldn't quit my job.\"\n\n\"What is that you do?\" I asked - even though I already knew.\n\n\"I work for the city, in animal control.\"\n\n\"That must be a tough job sometimes.\"\n\nShe looked at me and nodded. \"It is, you know. Lots o' people don't realize that.\"\n\nThat was all the conversation I had time for. Breanna was plainly amazed by the way the routine ended, and she basked in the warm applause she received.\n\nNo, she didn't stick around after the show, though I did see her look back at the stage as she left the theatre with her mother.\n\nThat was fine; we hadn't expected her to. Now it was time for Operation Serendipity.\n\nWhen Breanna went for lunch the next day, she sat at the table she usually shared with her good friend Keisha. She was looking forward to telling Keisha all about the magic show she'd starred in the night before.\n\nImagine her surprise when the magician himself walked into the restaurant. She couldn't believe what she was seeing.\n\n\"Breanna?\" I said.\n\n\"You remember my name?\"\n\n\"Of course. You made quite an impression on me.\"\n\nShe liked hearing that. Keisha was late, and it was a table for four. When Breanna realized that I was alone, she hesitantly offered me a seat.\n\n\"I can't believe that you're here.\" she said. \"This is beyond coincidence.\"\n\n\"It is.\" I agreed. \"It's serendipity.\"\n\n\"But ... what on earth are you doing here?\"\n\nI told Breanna a story about having friends in Atlanta that I visited regularly. Yes, I lied to her - but remember why I was doing it.\n\nYou may not be surprised to learn (I certainly wasn't) that Keisha called to let Breanna know that she wouldn't be able to make it - she had a flat tire. We had a wonderful lunch without her. Breanna was interested in magic, and in me.\n\n\"I don't know how you do it - in that booth, you spent the whole time talking to me. Shouldn't you have been reading my mind?\"\n\n\"I was.\"\n\nShe didn't know whether to believe me or not. She was flattered by my attentions, though. It certainly felt good to be appreciated, after her painful breakup. Breanna was even more thrilled when I asked if she was free to have dinner with me tomorrow night.\n\nI named an upscale restaurant only a few blocks from our hotel.\n\nBreanna had to think about it. I'd stroked her vanity, and my celebrity status (however minor) impressed her. She was shy about going anywhere with me where friends of hers might see us. Breanna was black, and I was white - even in Atlanta, that could be an issue in some places.\n\nBut the unusual coincidence of our meeting appealed to her.\n\n\"That sounds nice.\" she said, with a little dip of her head so that I could appreciate her luxurious eyelashes.\n\n\"I'll send a cab for you.\"\n\nWe performed a second show that night. I got plenty of rest afterwards. The next night, I met Breanna at a moderately expensive Italian restaurant.\n\nShe was dressed to the nines, in bright green and pink. She'd had her hair done, too. I didn't miss the lovely half bra, which supported and revealed the upper halves of her sizeable breasts.\n\nBreanna wasn't a BBW. I wouldn't have described her as chubby, either. Rubenesque ... that's what she was. Voluptuous. Big arms, thick thighs ... but it was all collected into one attractive package.\n\nI learned, through the course of our dinner, that Breanna was shy about taking me somewhere that we might encounter people she knew. That wasn't all because she was ashamed or embarrassed to be seen with me. She was also thinking of me, and my comfort zone.\n\n\"You're very kind.\" I told her.\n\n\"I can be selfish.\" she admitted.\n\n\"I'm having selfish thoughts right now.\"\n\n\"Are you? What kind?\"\n\n\"I'm thinking that you should come back to my hotel for a drink, after dinner. I can get you a cab from there just as easy as from here. Besides ... you don't work on Saturdays ...\"\n\n\"What exactly are you hoping for, Mister Grey?' she asked.\n\n\"I'd like to get to know you better. To get closer to you. One can never have too many good friends in Atlanta.\"\n\nI was hitting key words for Breanna, there. She wasn't really interested in a one-night stand. But I'd stoked her vanity, and added that exotic element of serendipity. The unsubtle hint that I wanted a more long-term friendship - that I had friends in her city - was enough to convince her.\n\nOnce again, Lillian had booked us an extra room in the hotel, and Sammy was being kept busy. I brought Breanna back to my suite.\n\nThe decision made, she abandoned any pretense of shyness. Breanna held my hand on the short walk back to the hotel, and pressed her leg and thigh against me in the elevator.\n\n\"I've never been with a white guy.\" she said\n\n\"Neither have I.\"\n\nShe loved my answer.\n\nI loved the smoothness of her flawless light-chocolate skin. I was amazed to discover her tan lines: her large breasts were much lighter than her upper chest. It was easy to see the lines of her rather modest bathing suit.\n\nShe pretended to be demure, though she kept flashing looks from beneath her eyelashes. Breanna had healthy appetites, and I indulged them to the full.\n\nHer ex-boyfriend had broken her heart; he also seemed to have thought that oral sex was a one-way street. Breanna was delighted when I went down on her. She responded quite passionately to everything I tried - her vanity wouldn't allow anything short of incredible, amazing sex.\n\nShe was extremely responsive when I finally penetrated her.\n\n\"You're amazing.\" I told her, as I thrust into her.\n\n\"I hope you have more.\" she replied.\n\nI did. I wasn't done with Breanna, and I was keen to let her know it."
    ],
    "authorname": "AspernEssling",
    "tags": [
        "magic",
        "magician",
        "nerd",
        "dupe",
        "harem",
        "romance"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/just-a-little-magic-ch-09"
}