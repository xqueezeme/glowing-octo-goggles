{
    "title": "Starlight Gleaming Ch. 18",
    "pages": [
        "Summary: \n\nNewly promoted Field Commander Ranji Kandikan has returned to High Guard War Base. With the help of the Empress' Personal Household Guard and the 67th Armored Division, as well as Janetta, Doyya, and Sowitwee, those loyal to Commander Voyacherno are defeated and Voyacherno himself is taken away under arrest. Tonca was beaten in personal combat and killed. \n\nRanji has been placed in command of the 602 Air Security regiment. Using the warrant given to him by the Air Marshal, he issues a base-wide Protection Order. He is also tasked with ending the reign of terror and the growing tensions between the Air Service and the Ground Service, and rebuilding the shattered regiment. \n\nImpending is the inspection by the Air Marshal to review the situation at the base and Ranji's solutions within sixty days. Many of those experienced in patrol duty are either dead or transferred out. CAPT Doyya Lovyanchiti, SLT Yalcamara Tchanoonka, SrSGT Chita Wanwari, Senior Lieutenants Jaynobro Raltikon and Penimits Fortri and others join Ranji's command, filling critical positions within the fractured unit. \n\nJanetta's crew of Zinja, Cholan, and Ixma, as well as Ranji's Personal Servant Calia and Ranji's daughters Sisi and Mina have just returned to the war base, where they have been greeted by Ranji and Janetta. \n\nWelcome back to the weird and violent world of Starlight Gleaming and the Empire of Chimorro. This chapter picks up immediately after the events of Chapter 17. \n\n------ \n\nFor what it's worth, on a standard word-processor page, using one-inch margins and 12point Arial, this chapter starts with page 1070. That's three decent-sized novels to this point. I still make way too many mistakes, even with my dedicated reader. For those who have waited, thank you. I wish I was able to write faster. There are other stories screaming to get out, but Starlight Gleaming is my priority. I've pretty much given up on other activities, typing away whenever I can put two coherent thoughts together until I can't see straight; then when I reread it, it has to make sense and be good storytelling, or it goes in the digital bin. \n\nFor what it's worth, I have more than forty pages of notes, and still errors slip through. Like misspelling Charunt in chapter 17. What? You thought I kept this all in my head? Heh heh heh. That's actually pretty funny. \n\nUnfortunately, my health issues continue. For all those patiently waiting for my next story, a hearty and appreciated thank you. I'm actually very close to finishing chapter 19. I originally planned this to be one chapter (368 pages!), but decided that there was a natural break near the middle, so I am posting chapter 18 now and I'm going to add a bit more to the end of 19. \n\nThanks to TerrytheTraveler for lending a hand with catching errors. For my past readers, ThatEditorGuy and gyfurune, a shout out to you. Slaint\u00e9, and I hope life is treating you well. Any gaffs, typos, dropped words, usage errors, omissions, commissions, permissions, WTFs and OMGs are totally my fault. Enjoy! \n\n* * * * * \n\nBook 4 - Rebuilding \n\nPart 1 - Welcome Home \n\n* * * * * \n\nAll of us gathered on the tarmac in the shadow of the huge Condor spent several minutes hugging and kissing, happy to be reunited once again. \n\nIt had only been two days since we'd left my parent's estate. And yes, I wished I could have had more time to visit my parents, and actually see them interact with my girls. Even with the orders, I'm glad we came when we did. High Guard War Base had been sick, and Orchid's work was finally being completed. Yes, I didn't see this as my chance so much as my carrying on what Melannee Siroptic acting in her role as Commander Orchid had started. \n\nI had thoroughly enjoyed the private time spent with Janetta, and I think she did, too. As much as I wanted more of that, I had also missed the rest of my family, the warmth of their presence, and the sounds of their voices echoing in the hallways and filling rooms with their laughter. \n\nHappy to be rejoined with us and reassured the danger had passed, the adults were eager to learn about what had happened. Janetta informed them they would hear the full story once we were home. Despite Sisi's precious hug, I could see, too, that she and Mina were tired from a full day of traveling. \n\nWe spent several minutes packing all the luggage, and then shifting things around so we could squeeze everyone into two vehicles. If Sowitwee and Nariya had been there, we couldn't have done it. As it was, we did need to use both ChoCacs. Once the luggage was secured, my girls were belted into their safety seats, and the adults found places to squeeze into, we were ready to go home. \n\nJanetta, as she climbed into the driver's seat of the cargo wagon, gave me a daring look, and asked Sisi if she wanted to have the lights and siren on while we drove home. \n\nSisi, joined by Mina, yelled her approval. \n\nMy mouth fell open, pausing midpoint while getting into my cruiser. \n\n\"Janetta! No! You can't-\" \n\nMy voice was lost over nearby people chatting and scattering and the noise of idling aircraft engines. \n\nToo late. The doors slammed shut and they were off. Lights flashing in the back window. The siren gave several short bursts, then remained on as they zoomed across the airfield. \n\nBecause of space, Calia and Cholan rode in the front seat beside me. I quickly buckled in and shot off after them. Because of our speed, I engaged the lights. \n\nSeeing my grim face, Cholan and Calia both showed worried glances as I worked to catch up to my speed demon. Whatever their thoughts, neither woman ventured to speak on the matter. \n\nThree streets later, two Ground Security cruisers accelerated, joining in behind me, their own lights flashing. \n\n\"Seven hells, that's what I was afraid of,\" I muttered. The AI reported the contact ping they sent to my cruiser, and I gave it permission to reply. \n\nLess than a minute later we pulled up in front of the house. Janetta turned off the lights and siren, using the remote as she pulled up to the garage. As the big door lifted, she drove inside. The door was nearly closed when I parked in the driveway, shutting off my own lights. \n\nGetting out of my cruiser, I stood waiting by the open door for Ground Security, keeping my hands in plain sight. \n\nCalia asked, \"Should we-?\" \n\n\"Stay right where you are,\" I quietly ordered. \"Wait until I get things settled. Because of the lights and siren, they are going to be alert for danger. I'm not expecting trouble, but I don't want you two moving around to cause them undue anxiety. Because of the recent fighting on the war base, security forces are still on high alert. You just got here, and I do not want any accidents.\" \n\n\"Yes, sir,\" they echoed quietly, their eyes big. \n\nTwo troopers in the lead ChoCac cruiser stepped out cautiously, looking perplexed, one with his hand near his pistol. Both remained behind their open vehicle doors. \n\n\"Commander Kandikan? Your vehicle reports no injuries or coercion. We need visual and verbal confirmation. Is everything all right?\" \n\nThe driver of the second vehicle also got out, also waiting by his own open door. A good move all around, as the nano-hardened doors in the newer vehicles could provide real cover if things got dangerous. The fourth trooper stayed inside the vehicle, probably chatting with Ground Security C&amp;C. It's what I would have done. \n\n\"Everything's fine,\" I assured them, trying to look as non-threatening as possible. \n\n\"So there's no emergency?\" the security corporal asked. \n\nUsing lights to warn others of higher than normal speeds was acceptable. While not always enforced, using a siren for personal use was a fineable offense, even for Security forces. \n\n\"No emergency, I'm happy to say,\" I confirmed. \"Some unauthorized liberties were taken to impress my little girls. Your alertness and concern are appreciated. I assure you, I will deal with the driver.\" \n\nThey visibly relaxed, but weren't terribly happy. False alarms are never a laughing matter, and Janetta's joy ride was now part of their shift report. The whole thing reflected poorly on me as the new Air Security CO, but I'd rather that than involve Janetta's name. \n\n\"Thank you, sir. Good night.\" The corporal turned to go. \n\nThen his partner spoke up, surprising us both. \"Commander, can I ask you a question?\" \n\nI grinned. \"Of course. Don't promise to answer, but ask away.\" \n\n\"Is it true that Sergeant Yalcamara's now an officer?\" \n\n\"It's true. Sublieutenant Yalcamara Tchanoonka is a good warrior and an experienced field trooper. Stimmi has been promoted to sergeant and is her platoon NCO. I'm sure you've heard about the bullet wound that Captain Lovyanchiti has?\" \n\nThe Ground Security troopers openly grinned as they nodded. Everyone at Ground Security knew the story of Janetta making Doyya bare her scar at our dinner table. \"Yes, sir,\" the corporal answered. \"Captain Tlacotli sounds pretty hard core.\" \n\nI laughed. \"She is, indeed. She fought beside me at the temple, and it was a real privilege. As for Lieutenant Tchanoonka, from the first day she joined my command, she approached each day with an eagerness to serve and professional skill and dedication. Captain Lovyanchiti was doing undercover work for me and was shot in the line of duty. By the time we found the captain, she had lost a lot of blood, and her wound had become infected. Circumstances dictated that she be treated at a local medical facility. Lieutenant Yalcamara Tchanoonka volunteered to stay with her. She kept watch a full day and night, staying awake until relieved late the following day. \n\n\"She probably never said anything, but in a separate incident, she and Sergeant Stimmi rescued two Air Service women so badly injured they required surgery to live, and they arrested both of the men who did it. Several Air Security under my predecessor arrived to free the men they arrested, and they proceeded to beat them up - in the lounge of the Naval hospital no less. I happened to arrive and put a stop to it, and saw the men punished. Lieutenant Tchanoonka and Sergeant Stimmi were both at work the next day. They both deserved their promotions.\" \n\nI also remembered how she and Doyya readily helped Chita preserve the dignity of two dead JAG officers. \n\n\"Air Service,\" they murmured appreciatively. \n\n\"Ground Service, too. Llam nuqan.\" \n\nAs I'd hoped, their demeanor was no longer irritated. \n\n\"Good night, sir.\" The troopers got into their cruisers. Lights off, one cruiser continued down the street, while the other turned around before driving off. \n\nExhaling in relief, I said, \"Okay, it's safe to get out now.\" \n\nI glanced up and down the street filled with the larger domiciles assigned to officers. Lights on here and there, families inside went about their business. A few window curtains closed upon seeing that the ruckus was over. \n\nI took in the two women moving about, and was grateful they and the others were alive and well. \n\nThinking about Corporals Rilli and Meba reminded me that Rilli and Sosha were both later murdered by Tonca and his men. Which in turn, reminded me that several others had also been slain while I was away. Perhaps an inquiry about Corporal Meba's health and whereabouts was in order. For curiosity's sake. Last I'd heard, she was happy working with the busing program. \n\nSowitwee and Zinja came out just as Cholan came around and opened the rear door. \n\n\"Cholan!\" Zinja barked out. \"How come you aren't out and unloading already! Turn to, Sergeant!\" \n\nCholan spoke quietly to Zinja while Calia opened the other rear door, loading up on bags and suitcases. Zinja's eyes widened briefly as she glanced at me. The four of them worked quickly at unloading the cruiser. \n\nI opened the trunk and took out three large suitcases, and closed it back up. I carried them inside, and set them down in the main room, off center from the main traffic flow. Then I headed out to the garage. Glancing around as I walked by, I saw the girls at the table with cups of juice, both munching away on their chocolate pecan cookie. Ixma busily chopping vegetables at the counter. \n\nSpying Sowitwee come in behind me, I said, \"There's more bags in the trunk of my cruiser.\" \n\n\"Yes, sir.\" Setting his load next to mine, he went back outside. \n\nOnce inside the garage, I opened the driver door to the ChoCac, sliding onto the seat. I turned the power switch on, and the dash lights lit up. \"Vehicle AI, respond.\" \n\n\"Ready.\" \n\n\"Can the siren and lights be used without the power switch on?\" \n\n\"Negative.\" \n\n\"Perfect. AI, do you recognize my voice?\" \n\n\"Processing. Voice print analysis match. You are Field Commander Ranji Kandikan, Commanding Officer, Air Security Regiment 602, currently assigned to High Guard War Base. Greetings, Commander.\" \n\n\"My instructions are that if the siren in this vehicle is turned on, that you ask for verbal confirmation of an emergency before allowing the siren to engage.\" Lights could be used as a caution to pedestrians and other drivers, and did not necessarily mean an emergency. Also, some emergencies required a silent approach. \n\n\"New protocol confirmed, Commander.\" \n\n\"You have video of the interior during the last time lights and siren were engaged?\" \n\n\"Affirmative.\" \n\n\"Play back video, no sound.\" \n\nThe monitor in the dash came on, and I saw Janetta grinning like a maniac at the others. Behind her, Sisi clapping in delight. Mina's eyes were wide as she gripped the safety seat as she looked about. Zinja's amused and affectionate smile at her officer. Ixma holding Mina's hand, trying to reassure our daughter. \n\n\"Transfer video file to Air Security HQ, my email address. Basic encryption. Delete record after transmission.\" \n\n\"Processing. Task complete.\" \n\n\"Thank you,\" I said, then realized my mistake. The programs were smart in a cunning sort of way, and were adaptable to a point, but they really weren't sentient. It was just really good programming. I turned off the power and exited. \n\nI saw Janetta standing by the doorway. The kitchen door behind her opened, and she looked over her shoulder. \"Give us some privacy for a few minutes, please. And close the door.\" \n\nThe door behind Janetta shut. I didn't see who it was. \n\nGetting out, I closed the door, then parked my butt against the hood of the ChoCac. \n\n\"Did I get you into trouble?\" she asked. \n\n\"I'm the new CO for Air Security. But they don't work for me, so... maybe.\" \n\nShe arched her eyebrows at me. \"Did I get me into trouble?\" \n\n\"Only with me. Sirens are only for emergencies, Janetta. Well, technically for parades, too.\" \n\n\"I see. Should I be worried?\" \n\n\"If I were you, I'd start running.\" Then I stood up, narrowing my gaze at her. \"You still owe me five belly bubbles from last night, Janetta. Now I'm inclined to collect.\" \n\nEyes suddenly wide. \"No fucking way!\" \n\nShe turned and blew through the door, and it crashed against the counter behind it. \n\nI strode after her. Everyone in the kitchen and dining area watched me walk through with intense interest. \n\nZinja and Cholan were sorting bags in the main room. Janetta was already on the landing at the top of the stairs, hands on her hips. \n\n\"Stop, Kandikan. Stop right there!\" \n\nI walked across the room to the foot of the stairs. \"Sowitwee? When you're done unloading, please make sure my cruiser outside is secure.\" \n\nHe'd just unloaded another armful of smaller carry bags and satchels. \"Yes, sir.\" \n\nI took two steps up and paused, keeping my gaze on her. \n\nJanetta pointed her finger at me. \"Kandikan! I'm warning you.\" She took a step back. \"Come on, Ranji. I'll... I'll wash your back!\" She looked at me hopefully. \"What do you say to that?\" \n\nMore steps, then I paused midway up the staircase, my face serious. I called out loudly, \"Anyone here want to wash my back?\" \n\nJanetta's mouth dropped open in shock. \"I can't believe you just did that. You... you fucking prick!\" \n\nCalia and Ixma both came around the corner from the kitchen. \n\n\"Right now, Commander?\" Ixma asked loudly, large cutting knife in her hand. \n\n\"Yes, my lord. A moment to take off my apron,\" was Calia's response. \n\n\"I'll wash your back, Commander,\" Cholan offered, grinning. \n\n\"I'm offering, too,\" Zinja happily added in. \"Might not be enough room for all of us at the same time, but it'd be fun trying.\" \n\nJanetta's face fell. \"You, too, Zinja? My loyal sergeant? You're supposed to have my back!\" \n\n\"Captain, I will happily wash your back, too,\" she replied with a snicker. \"I'll do you both at the same time, if you like.\" \n\n\"You're not helping, Zinja!\" Janetta protested loudly. \n\nThe tall Oexecan woman just grinned, shrugging her shoulders in a helpless gesture. \n\nI resumed climbing steps. \n\nJanetta stepped back, putting one hand up toward me. \"Ranji! Wait, wait!\" \n\n\"Take your medicine like a warrior, Janetta.\" \n\n\"In your dreams, asshole!\" she snarled, her face darkening. Then dashed for the bedroom. \n\n\"Commander?\" Zinja called. \n\nI paused and turned at the landing. \"Yes?\" \n\n\"Should I be worried, sir?\" \n\n\"Janetta had me take her on the dining table last night. Said she needed to be first, and she said she didn't care who was second. She also had me take her on your couch, Cholan.\" \n\nZinja laughed. \"Every woman for herself, huh? Well, that clarifies things. No prisoners, Commander. Give her what for.\" \n\nWhispering quietly and grinning, Ixma and Calia returned to the kitchen. \n\nCholan looked at me, her face a mix of emotions. \"I know she's my officer and she's the mistress here, but... but that's my couch! In my room. I should have been the first!\" Her face hardened. \"Make her beg, sir.\" \n\n\"I'll do that.\" \n\nI headed down the hall. Entered the open bedroom. Janetta stood in the second Eagle defensive stance, poised to fight. Her face, though, was flustered. \n\n\"Are we going to wrestle first, Janetta?\" I didn't approach any closer, but unbuckled my weapon belt. \n\n\"I do not want to be tickled again, Kandikan. I'm not kidding. Try it and I will hurt you.\" \n\n\"I thought you had a good time yesterday.\" I double-checked that the weapon safety was on. Removed the magazine and charged it, forcing the unspent cartridge to eject onto the dresser top. Catching the cartridge before it rolled off, I replaced it into the magazine. \n\n\"I did,\" she admitted, scowling, and obviously conflicted. \"It was a really good time.\" \n\n\"It was the first time you and I actually played together. Your laughter was music to my ears. So what's the problem, Janetta?\" After reloading the magazine, I put the weapon back into the holster. \n\n\"Everything was great, Kandikan, except for the tickling. I laughed because I had no choice! It was unnerving. And...\" Her voice trailed off. \n\n\"And?\" \n\n\"I almost peed my pants! I'm a grown woman, damn it. A warrior! I felt helpless and it was fucking awful!\" She glared, defiant as she firmed up her defensive stance. \n\n\"Aren't you vulnerable every time I enter you? Aren't you helpless when you're coming on my cock?\" \n\nHer voice was a mix of anger and vulnerability. \"It's not the same, Ranji. Tickling is not fun to me. It's hard to even tell someone to stop.\" \n\n\"Fair enough. You told me and I'll respect your wishes. No more tickles.\" \n\nShe looked relieved, relaxing. \"So, no punishment for the siren?\" \n\n\"Nope. You were showing off for the girls. I get that. However, I made it a requirement that anyone who turns on the siren needs to verbally okay the command. When the siren engages, it tells the AI there's an emergency. Both the dashboard and cabin cameras turn on so that whatever happens is added to the official record. You might not have seen them, but there were two Ground Security cruisers following us home, thinking there was trouble and ready to jump in and risk their lives for us. Creating a false alarm, like using the siren for personal use - well, it doesn't happen often, but it is a fineable offense.\" ",
        "Realization crossed her face. Then she narrowed her gaze. \"You're still staring at me.\" \n\n\"Get undressed, Janetta.\" Took off my neckerchief and started unbuttoning my shirt. \n\n\"Because...?\" \n\n\"I haven't seen you since breakfast, my lovely warrior, and I've missed you. Right now, I need to be inside you.\" \n\nHer eyes narrowed belligerently. \"Maybe I shouldn't. I offered to wash your back and you threw it back into my face. What kind of shitty thing was that to do?\" \n\n\"You offered that only because you wanted to bargain with me. If I have a problem with you, Janetta, I will discuss with you, warrior to warrior. After the chase last night, and seeing you run from me just now, you've aroused me, Janetta. I need to feel your wet, tight heat wrapped around my cock while I kiss your sweet, wonderful mouth. I am asking you, the most beautiful woman in the world, to share your body with me.\" \n\nAfter kicking off my shoes, I pushed down underwear and trousers, and my hard cock sprang free, bouncing about for emphasis. \n\n\"Okay, that's a decent save.\" Her face flushed, Janetta eyed my erection as she unbuttoned her shirt. \n\n\"Did you really like me chasing you last night?\" I stretched. \n\n\"Yes,\" she admitted quietly, tossing her shirt. It landed on a chair near her desk. \n\n\"How about when I caught you? Did you like that, too?\" \n\n\"All of it made me wet for you.\" She unhooked her bra and tossed it next to the shirt. She carefully set her own weapon belt onto her desk. \n\n\"Do you need me to chase you now?\" \n\n\"No. Between last night, what you just said, the look you're giving me right now and seeing your hard cock is enough persuasion for me to fuck. As in fuck me hard and fast, Kandikan, no messing around.\" \n\nShe smirked as she turned her back to me, then leaned over and opened the fancy brass clamps on her combat boots. Stepped out of them, she stood up long enough to unbuckle her belt, open her trousers, and push them and her panties down. Paused as she bent over, looking at me over her shoulder to see my reaction. \n\nMy heart skipped a beat seeing her beauty. Smooth copper skin, hint of breast and the flawless round globes of her smooth butt cheeks. The droopy pouch and fur-covered cleft between long, lean legs revealed as she briefly bent over. My pulse quickened and I clenched my groin muscles, hardening my cock even further. \n\n\"Another second or two, and I'll mount you right there,\" I warned. \n\nShe rose and turned. \n\n\"Aren't you going to close the door?\" she asked as I advanced to embrace her. She stepped back, sat and then clambered backwards toward the center of the bed. \n\n\"Nope. Don't care who knows what I'm going to do to you.\" I followed her. \"Besides, they know what's going to happen anyway.\" \n\n\"What about your girls?\" \n\nFreezing, I winced. \"Good point.\" \n\nShoving the door closed, I quickly closed the distance between us. \n\nHer black eyes glittered at me, her chin out. \"You're getting pretty demanding, you know that? Coming in here, telling me you want me to fuck for you. Like I was one of your other women. Like my pussy at your beck and call.\" Her legs parted as I moved over her. \n\n\"There is no one else like you, Janetta.\" \n\n\"Damn right, Kandikan.\" \n\nShe bit her lower lip as I rubbed my engorged crown along her folds. I coated her outer lips and my tip with her juices. Once I was lined up, our eyes locked. Pressing into her, the head of my cock passed her outer barrier. Just beyond that, I found the liquid heat pooled inside her pink tunnel. Almost withdrew, then pushed back in into her for depth. Inhaling at the sensation, her eyes widened as I began opening her up. Using my cock to excavate down into her heated core, digging for all her inner-most secrets, revealing and touching all those intimate places a lover learns. \n\nI paused once I was fully engulfed within her tight, yielding sheath. My weight settled onto her hips and I leaned close, brushing my lips across her chin, cheek, and mouth. \n\n\"I love you so much,\" I breathed. \"I never get enough of you.\" \n\nRunning her hands along my shoulders, her face looked at my body with approval, then she arched up briefly, watching as I plunged and disappeared into her center. Feeling me impale her. \n\nJanetta moaned and laid back. \"Gods, Ranji, you are so deep inside me, and you are so damned thick. We've done this so many times, yet every time it surprises me with how incredible you make me feel. Almost overwhelming.\" \n\nShe gasped, her fingers tightening as she gripped me harder. Her legs wrapped around me, her hips thrusting back, urging me on even as she engulfed my length again. \n\n\"It's the same for me,\" I grunted. \"You feel amazing.\" \n\nBraced on my elbows, I worked away, giving her slow, firm strokes, opening up and stretching her tight sheath. \n\nBreathing deep and eyes dilated, her face flushed with growing arousal. More wetness spilled out as I probed her heated pussy. \n\n\"You put up with me because you love me.\" I brushed her swollen lips again, and she opened her mouth so our tongues could briefly touch. \n\n\"Apparently, I am a love-struck woman controlled by her pussy. Or controlled by your cock.\" Reaching down, she pushed up against my hips, then pulled me back down, grunting, urging me to pump faster. Deeper. \"Probably both.\" A grunt and a sigh, then, \"Oh yeah, it's both.\" \n\n\"Just thinking about you gets me hard, Janetta.\" Pushing until I was fully ensconced within her sheath, I rolled my hips in a wide circle, exploring her intimate depths. \n\n\"I love you, Ranji. Uh! Sometimes it overwhelms me how much I feel for you. But sometimes I wonder why I put up with you. You aren't... ah... the easiest man to live with. Gods, you make it hard for a woman to think straight.\" \n\n\"It's because I love not only your body, but also your mind and fierce warrior heart. Besides, your pussy loves my talented cock.\" \n\nShe snorted as I lifted up her legs and put them onto my shoulders, spreading her wide. Her eyes grew bigger then rolled back as I slipped just ever so much deeper into her body. I loved the feel of her ridged, muscular flesh wrapped tightly around my length. I also loved how her wet pussy lips kissed my balls. \n\n\"You do have first-rate equipment. Oh! Mmm. Not over large, but respectable. Insistent and demanding. Dangerous if ignored. Oh, fuck, Ranji. Fuck!\" Her hands wrapped around my arms braced on either side of her. My hips bounced up and down, pumping into her depths, stirring up her frothy center. \n\nJanetta's face echoed the pleasure she felt. Panting as her nipples hardened and her breasts rolled with my thrusting into her. Again and again, savoring the frisking of our joining. Looking down, I watched her lower lips disappear with each insertion into her core. Then watched dark tender petals glistening wetly as they reappeared as I nearly withdrew, only to return to her pussy's loving, intimate caress of my hard shaft. \n\n\"Janetta, I love you so much sometimes I can barely contain myself.\" \n\nSliding down, I worked my tip just inside. My mouth latched onto one nipple, sucking and flicking it with my tongue while my free hand squeezed the other globe. \n\n\"What you're doing feels good,\" she grunted. \"But I'm not seeing stars yet, Kandikan.\" \n\nI paused, enjoying the feeling of my erection buried within her wet, snug folds. \n\nSeconds ticked by, and she frowned. \"What? Why did you stop?\" \n\n\"I'm supposed to make you beg.\" \n\nHer mouth dropped. \"Gods of North and South, I don't fucking believe it! You did it to me again! You are balls deep in my pussy, getting me all worked up - and now you have the gall to say you want me to beg you? You came to me, Kandikan. Told me you needed to fuck. Not the other way around. I agreed because I love you. I could be downstairs right now - eating chocolate-pecan cookies!\" \n\nPursing my lips regretfully, I shrugged. \n\nHer black eyes looked up at me, proud and full of challenge. \"I'm giving up delicious, mouth-watering cookies for you because I think you're special.\" Her voice rose a notch. \"Chocolate-pecan, Kandikan! Every second, my need for cookies gets stronger. Stop dicking around! Either fuck or get off!\" \n\n\"Glad to know I rate better than cookies.\" \n\nJanetta growled dangeroulsy. \"Do not underestimate the power of cookies, Kandikan. Especially chocolate-pecan! Keep it up and I'll buy me a bag of new boyfriends every week.\" \n\nI growled back, nipping at her neck. \n\n\"I feel guilty for getting you in trouble,\" she grumbled. \"and you're milking this for all you're worth. Prick. Asshole.\" \n\nI not only resumed thrusting, I picked up the pace. My hips began dropping onto hers, slamming her with my weight. Again and again, I opened her sheath from vulva to womb with my hard shaft. Her anger gave way to sensation as her eyes lost focus and her mouth opened. \n\n\"Better?\" I panted out. \n\n\"Cookies losing now,\" she gasped, still sassy. \"Barely. Need more ass work.\" \n\nMy balls slapped louder and wetter against her rear. Stretched her pussy around my length as I speared into her tender, wet, yielding center. \n\n\"Still not enough asswork, Kandikan,\" she grunted. \n\nShe made noises of approval at my renewed efforts. \n\nEvery half-dozen strokes or so I switched it up, grinding and twisting my hips, forcing my fat knob from side to side as I probed her depths. Followed by more slams against her swollen, wet center. Her wetness spilled out, coating my balls and our thighs. \n\nJanetta began crying out as I vigorously pumped and prodded her pussy, my hips slapping hard against her wet mound. Locked eyes with her as I took her. \n\nShe huffed for air as I stirred her center to a heated, squishy boil. \n\nPressure built in my balls. Janetta's grip tightened, and she grunted out, \"Fuck me!\" \n\nI slowed down, raising my eyebrows. \"What was that?\" \n\n\"Ranji!\" she growled, and punched my shoulder. \"Argh! Damn you! Fucking move, Kandikan! Stop teasing me, damn it. Fuck me with that cock, or I will roll you over and you will learn the meaning of begging!\" Then she punched the other shoulder. \n\n\"Say it again, Janetta,\" I insisted. \n\n\"I said fuck me, damn you! Fuck me!\" She glared at me in growing frustration, digging her fingers into my arms. \"Merciless prick! I was so damn close!\" \n\nOnce again I piled hard into her. \n\nMoving the angle of entry higher, I moved my hands and pushed her thighs downward, folding her in half. Pinned to the mattress, her mound lifted off the bed. The curly hair framing her ruddy, enlarged pussy lips glistened wetly around my shaft. My hips bucked as I pistoned within her trembling cavity, my pubic bone thrummed against her hidden clit. She moaned almost continuously as she hung on. I thrust harder into her pussy, my hips slapping against her sex. \n\nTension coiled tighter. When I felt the release begin, I let go her thighs and grabbed her shoulders. Dropped hard onto her hips and shoved roughly into her depths. \n\n\"I love you, Janetta.\" \n\nI grunted, trying my best to push even deeper into her loins. My cock spewed out lines of sperm, dousing the gateway to her womb and filling her with my sticky heat. \n\n\"Oh, gods!\" \n\nHer hands flew to my ass, nails digging in as she tried to pull me inside even deeper. Her legs wrapped around me, rolling her hips and clutching tight as she whimpered, grinding out her need against my body. Then she froze, shuddering as her walls suddenly convulsed around my pulsing cock. Rippling inward, her pussy milked my entire length as her senses were overwhelmed. Each tease had worked to intensify the final explosive detonation within her core. Our mouths sought and found each other, eager and hungry for yet more contact. \n\nHeart-hammering seconds as we blissfully hung on, kissing, putting off the growing need for air while her body welcomed my offering into her inner sanctum. \n\nAs the ejaculations faded, Janetta loosened her grip, both of us heaving for air. Beads of sweat blossomed on her forehead. Her face was a fascinating mix of intense love and desire to commit murder. \n\n\"You are such a shitload of complications, Ranji Kandikan. If I weren't coming so good right now, I swear I'd bite you till I drew blood.\" \n\n\"Any stars, my fierce warrior?\" \n\n\"Not saying,\" she grumbled.\"All right, Kandikan. Which one of my bitches told you to make me beg?\" \n\n\"I am sure revealing that would be a bad idea. I'm supposed to protect and love them, too.\" \n\n\"Kandikan,\" she warned, her eyes narrowing. \n\n\"Nope.\" \n\n\"Fine. I will find out without your help.\" Nodding to herself, she continued. \"Yes. It will be good to remind them all that I am the Queen Bitch and they are my bitches first and yours second. In the meantime, you are not allowed to fuck anyone else on those other couches until you and I break them in.\" \n\nI tried kissing her, but she pulled away. \n\n\"You may have pleased my pussy, but I am more than a little peeved at you.\" She pushed at my shoulders. \"Get up, Kandikan. Payload's been delivered and it's leaking everywhere. I'm hungry and I'm going to have cookies before dinner - because I fucking deserve it!\" \n\n\"Hang on.\" Pulling her to my chest, I slid one arm around her and another behind her butt. \n\n\"What-?\" she said as I lifted her up. Her arms clutched me tighter and her legs squeezed my waist. \n\nI carried her to the bathroom, setting her down in front of the toilet. \n\nAdjusting onto the seat after she let me go, she squatted and emptied her bladder as her pussy drained. \"You get me irritated, and then you do something considerate like this. Stopping both times was flat out mean. You don't need to work at being more complicated, you know.\" \n\n\"It wasn't that awful. Delaying release can intensify the final result.\" \n\nIn the mirror, I saw her frown as I began to shave. \"Are you going out?\" \n\nMy face lathered up, I picked up the razor. \"After dinner, I'll read to the girls, but yes. I need to head back to work.\" \n\n\"Okay, maybe I\"m not that peeved.\" Her demeanor softened. \"Will you be coming home tonight? I don't sleep well when you're not here, Ranji. You were gone so long, and I just got you back.\" \n\n\"I know what you meant. I hope to be back later,\" I assured her. \"It depends on how much I can get done. Tomorrow morning at start of shift there's going to be three hundred plus people looking for things to do. Some of the things they were working on need to be reviewed to see if it was being done correctly and not for criminal purposes, and that any victims were treated fairly. With Doyya, Jay, and Pen, I have senior officers I can depend upon. But I'm short an XO and I also need two company commanders. Pen will be there sometime tomorrow, but Jay won't join us for at least a week because he has to wait until he's relieved. My command, if they even have a morale rating that registers - it's in the toilet. I'd love to stay here and hold you, gazing into your eyes and whisper how much I adore you - which I do, by the way. Voyacherno left behind a shattered regiment with a shit reputation. I'm the CO, and that means I\"m in charge. First thing I need to do is take stock of the situation and give those who remain direction and a sense of purpose.\" \n\nFinished with her business, Janetta wiped, then washed her hands in the adjacent sink. \n\n\"What am I going to do with you?\" The irritation in her voice was gone. \"You gave me a raft of shit while you fucked my brains out. I understand what it means to wear your grade on your shoulders. Yes, more powerful people gave you steps up, but each time you proved yourself capable.\" Her hand touched my back as she moved behind me. \"You won a huge victory, Ranji. Huge! Voyacherno and Tonca turned this war base into a no-man's land. The law is back in town, and you've already made it safer for all of us. I can run my crew and fly my aircraft, and I can even plan a sortie. I guess it never occurred to me about how much work you have ahead of you. The woman I am isn't happy, but the officer understands the call of duty. How much will we even see you?\" \n\nI scraped away at my face. \"In the days ahead, I will do my very best to be home for dinner every night, to spend some time with you and the other women, intimate and otherwise, and to spend time and read to my girls. I don't plan for this schedule to be permanent, Janetta, but I do expect I'll have a lot of long days. The Air Marshal or his representatives will arrive in about sixty days to see how I measure up. Because of my age, I may have rank, but I lack command experience-\" \n\n\"Stop right there, Kandikan. Yes, you lack years of experience that others of your grade have. But I've seen you interact with your people. I heard from Ixma and Calia about the volunteers who helped move us into this place while Zinja, Cholan, and I were laid up in the hospital. An entire busload of people, Ranji! They weren't ordered to help. They volunteered - because of you. You had that kind of effect on others after being in charge for a couple of months! I've talked to Chita and Doyya and some of the others. Trust me. Don't worry about your leadership ability.\" \n\n\"Thank you, Janetta. I appreciate your support. That's why I'm going in tonight. I need to hit the ground running. I need to learn procedures and processes I'm not familiar with, and I need to learn them fast. Besides the morale issue, I need to recruit heavily to rebuild the unit's strength. Those we have left are probably in shock, wondering what all the changes mean, and where they will fit in the scheme of things. By the gods, I don't even have a head count yet. I have a vision of what I want, and I need to see what's possible. I want to coordinate more closely with Ground Security, like possibly shared patrols and shared training. Get our hand back into supporting the bus service. I want the civilian dependents to stop being afraid of Air Security. First, though, I need to focus on the basics. If I don't satisfy the Air Marshal, my next posting could be at Southern Star War Base.\" \n\nSouthern Star War Base was a research facility on the frozen continent at the south pole. There was a Ground Service company there, and maybe two hundred research scientists. Rumor was the penguins were friendly, and sometimes the aquatic birds gave pity dates to those especially hard-up with cabin fever. That was the rumor, anyway. \n\nTruthfully, I was more than a little afraid that I'd fail. There were good people I knew I could depend upon. And after the examinations, those still in the regiment were at least willing to do their jobs. If I failed, ending the Protection Orders might be the least of the fallout. \n\nIt was Janetta's words that she used over and over to her crew and to Doyya that came to me, giving me resolve. \n\nI am a warrior and I am still standing. Keep repeating that to yourself, I thought. This, too, is just another battle. \n\nDistracted, I nicked myself, and grumbled. \n\nJanetta stared at me. \"If you got transferred out, Ranji, I think that would about kill me. My crew, too. You have two girls, but their mothers work for me. How would that even work?\" \n\nI shook my head. \"That doesn't even bear thinking about. I know this time ahead will be a hardship for all of us.\" After rinsing the blade, I quickly finished up the edges. \"I made a commitment to each of you, and the most I can give is a few hours in the evening, and some time sleeping in bed with you. Part of me fears it may come back to haunt me. But I myself need that time with you and the rest of my family. I know I can be a hardship to live with, Janetta. Here I am, like a beggar, asking for even more sacrifices from you and the others. For that, I am truly sorry.\" \n\n\"We'll get through it,\" she assured me. \"I'll talk with the others. Dinner and the reading time will mean a lot for all of us, Ranji. Not just your daughters, but for us, too.\" ",
        "I paused, smiling. \"You like listening to the stories?\" \n\n\"I do, actually. I hear the love for your girls in your voice. The voices you use are... inventive. It's something the rest of us can share in. My own father died too early for me to have many memories of him. When I listen to you, I sometimes imagine this is what my own father would have done with me. It comforts me and I fall just a little bit more in love with you.\" Then she scowled, shaking her head. \"Enough of the touchy-feely stuff. Just don't try to do everything yourself. You have good people. Use them and delegate! Also, don't neglect your other women. Even a hump and dump is better than being ignored for weeks at a time.\" \n\nGlancing at her, I chuckled as I finished up. \"I'll remember that.\" \n\n\"You going to wash your dick before you get dressed?\" \n\nI rinsed and put away the razor, then washed my face. \"Isn't your scent on me how you mark me as yours?\" \n\n\"That only matters if they know who I am,\" she replied. \"Save it for after they start liking you. The men will admire you for all the pussy you get. Once they learn you have five women, all of whom live openly with you, your reputation will skyrocket. That kind of thing earns you a lot of male-mojo points.\" \n\nMale-mojo points? I grinned in amusement. \"All right.\" \n\n\"Oh. And another thing, Ranji. You don't seem to have any trouble getting women to fall for you. Remember, you have five women right here who love you and are eager to fuck for you. You best think real hard before you dip your wick elsewhere.\" \n\nI raised my eyebrows. \"Not something I'm even considering, Janetta. I appreciate knowing there are five who are eager, though.\" \n\n\"Women are attracted to strong men. You're a young officer, you're wealthy, you have power, and you are kind to women and children. You are out there making positive changes and you are becoming well-known. Trust me, you will get offered pussy. Probably more than you can shake a stick at.\" \n\n\"Duly noted, Lady Tlacotli.\" Deedee had also warned me about that possibility. \n\nJanetta momentary narrowed gaze to see if I was being sincere. Satisfied, she tied up her hair and went to the shower, turning on the water and testing it before stepping under the stream. I stepped in right behind her. A gentle kiss here and there, a quick lather and rinse and we got out. \n\nWe both dressed for dinner; Janetta in a casual blouse and shorts and sandals. Her shorts emphasized her lovely, long, lean legs. \n\nI put on a clean Class B uniform, putting on both sidearms. Checked for my metal cuffs. Keys, phone, lanyard, belt knife. Went into the closet and took out the reinforced vest. \n\nI had rarely seen Janetta in civilian dress, and even in casual wear, she looked incredible. Lustrous black hair and large, intelligent black eyes that took in everything around her. Bright perfect teeth and pert nose. Long, smooth, copper-skinned legs. I wanted to pick her up and toss her back onto the bed, rip off her clothes and bury my face in her pussy. Do my best to inhale her tits. Make helpless from the pleasure. Grab those tight globes and impale her all over again. Then I'd make slow love to her all night long, relishing the prolonged union of our bodies. \n\nEven that short image forced me to readjust my trousers and underwear. She caught me looking at her, and grinned knowingly at my discomfort. I was a lucky man and I knew it. \n\nAs we exited the bedroom, Cholan was just stepping onto the landing. \"Dinner's ready.\" She turned around and went back downstairs. \n\nDinner was good, though I don't recall what it was. The women took in my clean uniform right away. Janetta explained that after story time with the girls, I was returning to work. \n\nI added, \"Late nights and long days will likely be a thing for me. Hopefully it's just for the next two months. In the meantime, I will do my best to be home for dinner every night and to read to Sisi and Mina.\" \n\n\"We will do our best to support you, Ranji,\" Janetta replied, gazing meaningfully at the others around the table. \"You have made us safe, and now you need to make sure that High Guard War Base is safe, too.\" \n\nThere were murmurs of assurance from my family, but the other women became subdued. There were thoughtful looks from Sowitwee and Nariya as well. \n\nLifting a forkful of food, I said, \"Lady Tlacotli, unless I'm mistaken, you might be the ranking Eagle Warrior. You should consider your position with them.\" \n\nJanetta gave me a thoughtful look. \"Thank you, Commander. I do believe Aerie Captain is open. I will consider it.\" \n\nI resolved that when she returned to the Eagle Temple, there would be eyes on Janetta to make sure she walked out again. Perhaps see which of the women officers in my command were interested in joining. \n\nAfter the meal, Calia, Ixma, Cholan, and Sisi cleared the table, then we all retired to the living room. Sisi and Mina each picked a story, which I read aloud. Then it was hugs and kisses goodnight. Even though Ixma extolled my virtues, Mina still expressed some reservations about me. On the other hand, she didn't fight me either. I counted it as another small victory in winning back her heart. \n\nSisi asked me if I was coming home later. \n\n\"I will do my best,\" I replied, getting to one knee to look her in the eyes. \n\nShe hugged me tight. \"It's an extra magic hug, Tenant. Just in case.\" \n\nI hugged her back. \"Thank you, Sisi. I needed that.\" \n\n\"My lord?\" Calia said. \"Your mother was concerned about our journey. Perhaps a call to let her know we arrived safely before the girls go to sleep?\" \n\nPleased at the notion, I nodded. \"Excellent idea. Will you please take care of that? Have the House AI make the telephone call from the master bedroom. Let the girls see their grandma and say goodnight. Regular follow up calls, too. At the end of the week during the afternoon, so the girls can enjoy a longer chat. Hopefully their grandpa will be available, as well. Maybe some time for Sisi to keep in touch with Powan and Mika.\" \n\nCalia beamed at me. Sisi blinked, looking thoughtful. \n\n\"What do you think about that, Mina?\" Ixma asked, picking up her daughter. \"After you brush your teeth, you can say goodnight to your grandma Shanti. How about that?\" \n\n\"Grandma Shanti?\" Mina looked around for her. \n\nI noticed Janetta carried a tray of glasses and a fresh bottle of Blue Label metl juice into the living room. She announced she was going to have a talk with her crew. \n\nSowitwee reappeared then, wearing a fresh Class B uniform, with his vest over it and armed with his belt knife. \n\nRaising my eyebrows at him, I said. \"You've been away from Nariya a long time.\" \n\nNariya stood by the door to their bedroom, already in her nightgown, a shawl wrapped around her shoulders. She watched us intently. \n\nHe gave her a nod and turned back to me. \"Yes, sir. She and I agreed. Llam nuqan, sir.\" \n\n\"Thank you, Wit. I appreciate your support. Let's go to work.\" \n\n* * * * * \n\nPart 2 - Taking Stock \n\n* * * * * \n\nI knew there was at least going to be a skeleton crew present at the HQ building. Doyya had already established an evening and night watch crew for both the base C&amp;C and our building. \n\nWhat I didn't expect but found upon arrival was four of my people already there, talking loudly in an open conference room near my office. Doyya, Chita, Yalcamara, and Stimmi sat around a long table, empty food containers from the Commissary Diner pushed off to one side. \n\nAs soon as I entered, they stopped talking and grinned at me. \n\nDoyya handed me back my charge card. \"Thank you for dinner, Commander.\" \n\nI laughed as I put it back into my wallet. \"You aren't even surprised to see me, are you, Doyya.\" \n\n\"Uh, no, sir?\" My Second sat back down. \"We knew you'd be along eventually.\" \n\n\"Okay, what are you four working on?\" \n\n\"Going over about what needs to be done, sir.\" \n\nI grabbed a cup and poured myself some cahault from an urn on a side table. Pulled up a chair. \"All right. Show me what you have so far.\" \n\nThey talked and discussed and even a few times argued about what needed to be done. I let them go on for an hour, and even heard a few good ideas, which I wrote down. Doyya and Yalcamara got bogged down in talking about shift rotations, so I stood up and they quieted down. \n\n\"The person here with the most time in Air Security is Yalcamara, with what, six or seven years service time?\" Then I winked at her. \"Stuck at the rank of corporal before I led you astray and corrupted you.\" \n\nThere were snickers at that from around the table. Yalcamara blushed as she grinned back at me. \n\n\"Let's start with basics, shall we? What is our mission, Stimmi?\" \n\n\"Security Services are both warriors and peacekeepers. We lead warriors, protect lives, and ensure property is maintained on military installations.\" \n\n\"That's good, Stimmi.\" Rising, I grabbed a marker. Finding an open whiteboard, I wrote down his words. \"To that, I would add that we enforce military regulations. What is our creed?\" \n\n\"Loyalty to the Emperor, to the Air Service, and to our fellow warriors,\" answered Yalcamara. The others nodded their assent. \n\n\"Perfect,\" I said, writing quickly. \"What's our motto?\" \n\nThat one I got in stereo. \"Llam nuqan! We work together!\" \n\nI laughed as I wrote it down, then continued speaking. \"All right. The 602 Air Security Regiment is a battalion of three reinforced companies of security troopers, one company for each duty shift. Additionally, there is a company of CID specialists, and a company of administration and specialized support staff. Correct?\" \n\nNods from everyone. \n\nI looked at Sergeant Chita, who was trying to look around me. I glanced at the corner of the board and moved out of the way so she could see the wifi-address written. \"You logged into this board?\" \n\nTapping away on her tablet, Chita nodded. \"Got it saved now, Commander.\" \n\nWiping down the board, I wrote out tasks. \"What do our Security troopers do?\" \n\n\"Gate duty.\" \n\n\"Control traffic.\" \n\n\"Handle family disturbances.\" \n\n\"Stockade duty.\" \n\nI wrote down answers, and after much discussion, we ended up with seven main tasks, with some supplemental sections. And, for the record, these tasks didn't exactly match those outlined in my course in Air Security Basic Procedures. \n\n\"So in review, here's what we have. First task is security. That includes monitoring the gate, patrolling the fence line, both in coordination with Ground Security. We also patrol Air Service mission-critical areas of this war base. Guarding dignitaries that show up. Second, control of traffic, especially at choke points and busy intersections. Third, we respond to emergencies. Fourth is investigating minor crimes, forwarding anything that needs additional investigation to our CID specialists. Our fifth task is to support combat troops by maintaining security, including checking ID and manifests, to prevent theft of vital supplies, and to keep out or deal with imposters and enemy agents. We also provide supplemental heavy weapons units for defense of the war base. Sixth is public bus protection. Finally, seventh is internment operations, that is, processing, guarding, and transporting inmates. \n\n\"In the past, the field trooper companies have been of unequal size. That ends now. We are doing Air Security duties at all times, regardless of time of day. Am I clear?\" \n\n\"Yes, sir.\" Nods of agreement from everyone. \n\n\"Next are the two Specialty Companies. CID is now designated Company D. They handle major crimes, auditing, police intelligence gathering, and counter-intelligence.\" \n\nWriting quickly on the whiteboard, Chita tapped away, keeping up with me. \n\n\"Specialty Support, Company E, will include everything else. The Safety Division is new and attached to Specialty Support. They will incorporate some of the duties that the 945 once did, such as inspections of emergency shelters. They will also have troopers assigned to remain at the schools. They will be expected to interact with the students, and need to complete basic classes in teaching and developmental psych. They will look for signs of trouble, such as illegal drugs, bullying, and watch for safety issues. My initial thought is two troopers each for both the primary school and the secondary school. We'll evaluate their status in six months and go from there. The troopers can interact, yet they need to keep in mind their other goals, too. \n\n\"Other divisions in Company E include Human Resources, Training, Motor Pool, Records, Armory, Logistics, and Supply. Oh, and Office Manager. Agreed?\" \n\n\"Yes, sir,\" Doyya confirmed. The others nodded in agreement. \n\nI put down the marker on the rail beneath the whiteboard. \"I'm at the top. Right now, there is no Executive Officer to handle some of the paperwork that the Air Service requires. At the moment, Doyya, it means you have to pick up the slack as my Second. That means you are juggling your duties as my Second, as XO, and duties as company commanding officer. I know I'm asking a lot of you. I'm well aware that's three fires with only two hands to manage them. My task, with your help Doyya, is to get an XO to get that load off your shoulders as soon as possible. Even after we have an XO, your load is going to be a handful. Let me be clear, Doyya. This is going to be a lot on your shoulders. You are a capable officer. But if I see you are burning yourself out, I might make you give up the field command, so pace yourself and delegate. Am I clear?\" \n\n\"Crystal, sir.\" \n\n\"Doyya, you and Lieutenants Raltikon and Fortri will each command a company of the Security troopers. You will need to work out with Raltikon and Fortri who is covering what shift. As the ranking officer, you get final say on who gets what, and you get your choice of preferred shift. Besides Jay, Pen, and you two, how many other officers are there, alive and assigned to the 602?\" \n\nDoyya glanced at her laptop before answering. \"Fifteen. The breakouts are two senior lieutenants, five lieutenants, and eight sublieutenants.\" \n\n\"Okay, let's talk numbers,\" I said, turning to write on a fresh whiteboard. \"A full reinforced company is eight platoons of forty troopers each. A platoon is led by an officer and three supporting NCOs. That makes four fire teams of ten led by an officer or an E4 or above. Or, it's twenty pairs of field troopers who work together as partners. \n\n\"To avoid confusion, the company CO will hereafter be referred to as the Shift Commander. Company second in command is the Deputy Shift Commander. The executive officer is the Assistant Deputy Shift Commander. Each of those people will have an NCO aide to help them complete their duties. Extra paperwork will be farmed out to the Office Manager as needed. \n\n\"That means Doyya, you will need to pick yourself an NCO aide to be your shadow and to help you get things done as Shift Commander. You will also need to pick a second NCO to help with your duties as my Second. They need to be separate NCOs. The workload demands it. Your sergeant as Shift Commander needs to be a qualified field trooper. Your aide as my Second, however, does not have to be field qualified.\" \n\nI did some math on the whiteboard. \"Optimally, each full reinforced company is three-hundred-twenty-six troopers. Three companies, plus three officers and three NCOs makes six more added in... that comes to nine hundred and eighty-four personnel. A total of thirty-three officers and nine-hundred forty-eight enlisted.\" \n\nI wrote out columns for Companies A, B, C, D, and E. I duplicated the numbers under the first three reinforced companies. \n\n\"Company D, which is our Criminal Investigations Division, is supposed to comprise two-hundred-forty special investigators. If I'm reading things right, Lieutenant Jondeen Laroks is the ranking CID officer at the moment, with two sublieutenants also currently assigned to that unit. Laroks doesn't want command because he wants to stay in investigations. I've agreed to let him. For now, anyway.\" \n\nDoyya and Chita both nodded as I wrote out two-forty under Company D. \n\n\"Company E, the Specialist Support Company, is supposed to number two-hundred-thirty-five.\" I wrote that under the last column. Above that, I added the entry CMD. \"Command of the regiment, including administrative sergeants, is nine, but at this time, Sergeant Chita and Captain Lovyanchiti are doubling up, so we're under-filling two slots. Counting the two under-fills, total fielded strength is supposed to be one thousand, four-hundred-and-sixty Air Security personnel. Doyya, what are our current actual numbers?\" \n\nShe looked at her laptop, then sat back, pursing her lips. \"Three-hundred-and-twenty-seven Air Security. Not including the fifteen officers.\" \n\nI whistled. \"We're supposed to have fifty six officers. There's three here, plus Lieutenants Raltikon and Fortri are joining us, plus the fifteen. That means we need to find thirty-six more officers. Doyya? What's the total unit strength supposed to be?\" \n\n\"Fourteen and four, Commander.\" \n\n\"That means the regiment is currently under twenty-five percent of strength. We have to find one thousand and seventy-nine new bodies to fill slots. From what I understood, the regiment was operating below strength before the fight.\" I looked to Doyya to confirm that statement. \n\n\"That's correct, sir. The last status report shows the regiment was operating at seventy-two percent of normal, at a thousand-and-thirty-four people, sir.\" \n\n\"A good portion of those we do have are part of Company E, the Specialist Support Company, correct?\" \n\n\"Yes, sir.\" Doyya fiddled with her pen. \"Support has one-ninety-seven out of two hundred and seventy-nine. CID should have two-hundred-forty, but currently has only twenty-nine. Six are office staff, which is short by four. That leaves us ninety-five for splitting into the patrol units and for stockade duty.\" \n\nYalcamara shook her head. \"So basically, we have most of the support company, and we have to fill both CID and the field trooper companies.\" \n\n\"That's about it,\" Doyya confirmed. \n\nFaces became pretty grim as they looked to me. \n\n\"Anyone currently assigned to internment is now a field trooper. Once we reach fifty-percent strength, they can apply to return to that specialty if they so wish. Right now, Ground Security has the manpower to do the job. I'll talk with Ground Security about them taking anyone arrested until we have enough staff to fill the ranks.\" \n\nChita spoke up. \"What about Building Maintenance?\" \n\n\"What about them?\" I asked. \n\n\"They aren't on our chart, but they really should be. Six are foreigners, contracted civilians from the Seven Nations. One plumber, one HVAC specialist, one for communication services, two electricians, and a building supervisor to oversee remodeling and repairs. The rest are indentured or slaves, doing clean up. I'd like to ask that we re-verify background checks on the civilians. Or shift to military personnel for our maintenance.\" \n\nI nodded. \"Thank you, Chita. Those are good ideas. Add them to the Org Chart in the Support Section where you think appropriate. Make a request to get guild-trained military personnel to take over those maintenance tasks as soon as possible. You're right. Those jobs should be done in-house. Letting foreigners into Air Security is asking for trouble. They may be upright workers, but they aren't Imperial citizens. We can't submit them to Truth Drugs without causing diplomatic issues. In the meantime, ask our own CID people to do the background checks. Chita? I'm placing Building Maintenance under your command, too. Class B coveralls to identify them, and they get to wear 602 patches and name tags. If they have been slaves or indentured longer than five years, begin the paperwork to emancipate them, and enlist them into the Air Service as provisional E1s. Supervisors, at your discretion can be upgraded to E2 or E3, but no higher. Set a tickler. In six months, you and I will review this. Evaluate who would benefit from being sent to basic training for full Air Service status. Make the educational classes available to them as well. Let me know the costs. ",
        "\"Isn't that a kick? Because they weren't on the previous chart, and being either foreigners, indentured, or slaves, they weren't counted as part of the unit. Invisible. And a potential source of security issues.\" I added their numbers to the total. \"That brings us to fifteen hundred and six total. Fifty-six officers and the rest enlisted.\" \n\nI lifted up my arms and stretched. \"Placement of the people we have is imperative, followed by intense recruitment for more bodies. Anyone already with CID experience and wants to stay, they can stay. But priority is filling our companies of field troopers, and if anyone in support wants to try field duty, we'll give them that opportunity. They can be trained alongside any new recruits we get. Yalcamara? How long is the standard field trooper training program?\" \n\n\"Twenty weeks. There are additional programs beyond that, of course.\" \n\n\"Well, the sooner we get Air Service bodies, the sooner we can start training them. As for the officer shortage, getting green sublieutenants is usually not a problem. I seem to recall that when I arrived here last year, I was one of them. And you know what kind of trouble-maker I turned out to be.\" \n\nThere were chuckles at that. \n\nI went to my laptop and checked my e-calendar. \"Doyya? Tomorrow, at fifteen hundred hours, we have a meeting with our Ground Security counterparts. All right. If they haven't already requested it, let anyone who used to work for the 945 know we are back in business so they can make their transfer requests to the 602. Anyone who used to be on Yalcamara's squad and comes back, bump them up two grades and notify Chita so I can authorize the promotions. They get priority placement with the field company of their choice. However, no one goes higher than E5.\" \n\nYalcamara and Chita made notations on their tablets. \n\n\"This is important. Don't tell them of the promotion until after their paperwork has cleared and they're here. I want people because they want to work here, not because of the advancement opportunities. Yes, we'll give them those, too, but only after they are here. Yalcamara, you assist Doyya on company placements of any who transfer in. Make sure we split the experienced troopers evenly between the three field companies. \n\n\"Chita, if there are any of the office staff from our former unit that want to join the 602 and there are slots available, I'll sign off on them, and I'll consider any promotions that you recommend. Chita, I'll appreciate any recommendations there that you wish to make.\" \n\n\"Yes, sir.\" The look on her face told me she was already contemplating people and things. \n\nI finally took a drink of my cahault and immediately spat it back into the cup. \"Seven hells! That tastes like something died in it!\" \n\nThen I pushed it out of my reach so that I get distracted and repeat that mistake. Standing up, I dug out my charge card and looked at my watch. \n\n\"Stimmi, you and Sowitwee head over to Commissary Shopping. It's open for another half-hour. Buy seven brand new large brewing urns, and two cases of cahault. Urns for this room, my office, and Doyya's office. Yalcamara, Jay, Pen, and Chita get the other urns. Two dozen boxes of filters, too. Grab us a bunch of sandwiches and snacks as well. Also, pick up a case of bottled water. None of that vendor crap. Turn to, gentlemen.\" \n\n\"Sir!\" Stimmi collected my card, and both sergeants hustled out. \n\n\"Ick,\" I said. \"That really is foul. How long has the cahault been in that urn?\" \n\n\"No idea, Commander. Days, probably.\" Giving me a sympathetic look, Yalcamara picked up my cup. \"I'll go rinse this out for you, sir. Be right back.\" \n\nThe remaining two women looked on my bitter face with amusement. Doyya reached into her laptop bag and handed me a partially full bottle of water. \"If you don't mind sharing, Commander.\" \n\n\"Thank you.\" I took it gratefully, downing most of what remained. It helped some. \n\nYalcamara soon returned. We talked and Chita wrote down notes of what we decided. \n\nWhen the sergeants returned, Sowitwee returned my card, washed out the new urn and started a fresh pot brewing. After that was done, he took the other urn away to clean it. Stimmi delivered the remaining urns to the respective offices before returning. \n\nThe rest of the evening was four hours of reviewing personnel files and comparing notes. Grinding detail work that had to be done. Fortunately, the consensus was two senior lieutenants looked like good possible candidates for both the XO and Company E slots. And yes, I let Chita, Stimmi, and Sowitwee give their opinion. Chita was a no-brainer. But the other two didn't know them, so they could give an honest assessment based on their military record. \n\nChita and Yalcamara found us a printer, and we worked out an new org chart. I reviewed the final version, and Chita sent a copy to all the command staff and company commanders and their staffs - even though some of those slots were still unfilled, as their email address was by title, not by person. \n\nNext, we worked on filling some positions. More record profiles were reviewed and we read and discussed their suitability for various slots. I wished then that Jay and Pen could have been there to provide input. Pen was due to arrive sometime the following afternoon; hopefully there weren't going to be any snags. \n\nAround midnight, people were beginning to nod off a bit, so I told them to wrap it up. \n\nThe policies and practices that we had established with the 945 were to be folded into the 602. First aid training for all field troopers. Bonuses for completing extra training. Electronic adjustments would have to be made to include these new tracking functions we needed on their personnel records. \n\nIf I was worried about Doyya, I was also worried about Chita. As my senior NCO, she had a lot of duties. She was also going to have a handful as the new Office Manager. I gave her a free hand to pick who she wanted in her office. I also informed her as Regimental NCO, she was being promoted to Senior Sergeant, and that she needed to prepare the paperwork for me to sign. \n\nChita gave me a tired yet gleeful smile that made me chuckle. The others congratulated her on the promotion. Then she and Doyya departed. \n\nWhen Yalcamara and Stimmi rose from their seats, I asked them, \"Are you two unpacked yet?\" \n\nWhat I saw were two guilty faces. \n\n\"All right, you two. Here's the deal. Morning shift tomorrow is at zero-seven hundred. I don't want to see either of you here before ten-hundred hours. Is the house you got okay? Or are you going to have to move?\" \n\n\"The quarters are fine, Commander,\" Yalcamara answered meaningfully. \"Thank you. It means a lot that we can live together and have some privacy.\" Stimmi nodded his assent. \n\n\"Then get settled. Use that time tomorrow to at least get your clothes out and hung up. Pretend like you live there. It'll feel like you don't for a while. It'll probably feel like boot camp all over again. But I will demand that things around here improve, so that each of us had down time away from our jobs. Am I clear?\" \n\n\"Yes, Commander. Ten-hundred hours. I'll email the captain in the morning, so she doesn't freak.\" \n\n\"Ah. Good idea. Thank you. At least one of us is thinking ahead. Is there going to be a SNAFU about your pay, transferring back to the Air Service?\" \n\n\"I don't know, sir,\" she answered. Stimmi pursed his lips but said nothing. \n\nI wrote a task reminder to follow up with that. All the people transferring from Ground Service might run into pay snags. That included Pen, Jay, Doyya, and Chita, too. \n\n\"Inquire about your pay status and let me know. Don't hedge it or attempt to soften it. And track the other field troopers coming in, too. When they start duty, I don't want them having to dodge laundry or having to skip meals because Finance is screwing around. I mean it!\" \n\n\"Yes, sir.\" \n\n\"Now take off and get some rack time.\" \n\n\"Good night, Commander.\" \n\nSowitwee had already returned the printer to its previous location and now worked on clearing the trash. I started helping and he looked unhappy about it. \n\n\"It needs to be done, right? I've got no use for officers who don't get off their ass and get their hands dirty with their troops. Llam nuqan, Sergeant.\" \n\nSowitwee put the last of the trash into the bin. \"Yes, sir. I'm just worried is all, sir.\" \n\n\"About what?\" \n\n\"You're a nobleman and an officer. Others don't know you like we do. Some of the men won't respect you if you do tasks traditionally beneath your station, sir.\" \n\nI leaned my butt up against the table. \"I expect I will have no difficulty disabusing them of my elite status. Do you know why I promoted you, Wit?\" \n\n\"Not exactly, sir.\" \n\n\"When I had to leave, I asked you to look out for Captain Lovyanchiti. When she went to the War College at Tik\u00fan, you went with her, doing what I asked you to do instead of staying here with your pregnant wife. I know that was a real sacrifice for both of you. I hope you were able to keep in touch?\" \n\n\"We did, sir. The captain made sure of it.\" \n\n\"There you go. And a good point to Doyya for that. Anyway, Wit, another man would have stayed behind, thinking Doyya would be safe at the war college. You also showed your loyalty to me when you were questioned by the Household Guard Captain, and then again when you fought beside me and the others in the temple. Over and over, you stepped up, Sergeant. Your promotion was not a gift. It was well-earned.\" \n\n\"Yes, sir. Thank you, sir.\" \n\nAfter locking up my office, we exited the building and got into the ChoCac cruiser. Since it had been a long day for both of us, the ride home was quiet. \n\nI parked out front and secured the vehicle, and we both went inside. There was a muted light on in the kitchen to our left, and another muted light on the wall on the staircase. We both saw Nariya sleeping on the couch in the front room, wrapped in a blanket. \n\nI left him to help her to bed. I headed upstairs. \n\nThere was another night-light along the baseboard in the hallway, next to the second bathroom, between Cholan's room and the master bedroom. \n\nI was going to go straight to bed, but I remembered as a child that my father often checked on me before retiring for the night. As quietly as I could, I opened the door to Ixma's room and crept in. There in the large bed were Calia and Ixma, and between them Mina and Sisi slept peacefully tangled together. The four of them were so adorable I wished I could burn the image into my mind forever. \n\n\"Ranji? Is something wrong?\" A sleepy Calia raised her head. \n\n\"Everything's fine,\" I whispered. \"I just got home, and I wanted to check on all of my girls before going to bed. Since you're awake, I will give you another kiss goodnight.\" I moved around to her side of the bed, and leaning down, made good on the kisses and caresses that she happily responded to. \n\nNaturally, the whispers caused Ixma to stir. \"Is something-?\" \n\n\"It's okay. It's Ranji,\" Calia whispered. \n\nI moved around to Ixma. \"I didn't mean to wake you, Little Mama. I just got home, and I just wanted to make sure all of you are safe and sound. I'm sorry I woke you.\" \n\nLeaning down, I caressed Ixma's cheek, and gave her a couple of slow kisses. \n\n\"For kisses like that,\" she murmured with a sleepy smile, \"feel free to check on me anytime.\" \n\n\"Sweet dreams, all of you.\" Another kiss, and then I left, closing the door softly behind me. \n\nAt the end of the hallway, I pushed aside the curtain and looked out the window. The new deck looked great. Lawn chairs and a couple of picnic tables. The reinforced wooden lattice for the railing looked sturdy. From what I could see, I was pleased with the construction. Thank you, First Sergeant Kitam and your crew of mobile construction engineers. A superb job. \n\nI yawned and checked my watch. Zero-one-thirty. I adjusted my alarm to go off at zero-five hundred, then quietly opened the door to the master bedroom. Saw two adjacent lumps under blankets. The second lump was undoubtedly Zinja. Ever since my trip to Sparantzlo, they'd taken to sleeping together; Janetta for comfort and Zinja because she loved her officer. \n\nEntering the bedroom as quietly as I could, I undressed to my underwear, leaving my clothes on the floor in front of my dresser. I double-checked that both safeties were on by feel, then both weapon belts and pistols went into the closet and were hung it up. \n\nThere was only a trace of light. Just barely enough to see lighter shadows against darker ones. My eyes quickly adjusted to the darkness. Another check. I was pretty sure which side Janetta preferred to sleep on. \n\nA quick bathroom break, then yawning again, I went over to Janetta's side of the bed and slipped under the covers. Scooted closer and put my arm around the sleeping woman. \n\nAs I spooned up to her, I discovered she was quite naked. Running my hand over the small breast told me it was Zinja, not Janetta. The caress was enough to elicit a sigh and a wiggle of her butt against my groin. Apparently what she wiggled against was enough to prompt another wiggle, followed by a soft sigh. \n\nA sleepy Janetta propped herself up on her elbow. \"Ranji? Is that you? Thank the gods. Now I can sleep easier. What are you doing over there?\" \n\n\"Trying to go to bed without waking anyone and failing miserably at it.\" \n\nZinja took my hand from her hip and moved it to her breast. Then cupped my hand with hers. Slowly rolling her hips, she made a pleased noise as she ground her butt against me. \n\n\"Well, you might as well poke her,\" Janetta told me with a smirk. \"Zinja comforted me earlier, but I'm afraid all I did was leave her hanging.\" \n\n\"I had a good time, Captain,\" Zinja protested as she stretched. \"What matters to me is taking care of you.\" \n\n\"You needed comforting?\" I asked Janetta. \n\n\"I wasn't sure you were even coming home tonight,\" Janetta admitted. \"I just got you back, and after everything that's happened... I needed to be held.\" \n\n\"He's your man, Captain. You're allowed to miss the man you love.\" \n\n\"Ranji, what time are you getting up?\" \n\n\"Zero-five hundred.\" \n\n\"Fuck, Ranji. That's not even four hours. Hurry up and poke her pussy so you can get at least some shut-eye.\" \n\n\"I'm happy to just snuggle,\" Zinja offered. \n\nI think if I tried, I could get Zinja to come just from playing with her breasts. \n\nBoth she and Ixma had smaller-sized breasts that were quite sensitive to stimulation. Some men consider a smaller-breasted woman to be short-changed. To me, it was part of who they were, and I enjoyed trying to inhale an entire breast into my mouth like I was devouring them. It was something that was harder for me to do with Janetta, Cholan, and Calia. I rolled Zinja's nipple between my fingers, tugging gently on her sensitive nib, encouraging it to thicken and harden. \n\n\"Sure about that, Zinja?\" \n\nShe arched her back against me, gasping. \"That's not fair, Commander. Ah!\" \n\nMy mouth nibbled along her neck, and Zinja whimpered as she shivered. \n\nWaking up a bit, Janetta scooted closer to Zinja's front. \"She says she doesn't need an orgasm. But if you give her your cock, I think she will come for you, Ranji.\" \n\n\"Maybe she'll come for both of us,\" I said, grazing my teeth along Zinja's bare shoulder. \n\n\"She was so good to me earlier. Licking my pussy and eating up any of your sperm she found. Like you, she seems to like it when I come on her face.\" Janetta kissed Zinja. \"I fingered her earlier, but I am certain it wasn't enough. Give her your cock, Ranji, while I rub her love pearl. Together, I'm sure we can make her feel loved.\" \n\nZinja suddenly twitched, then she lifted her knee, planting the flat of her foot onto the mattress, giving us more access to her center. Zinja moaned as Janetta kissed her. \n\nI moved my hand down Zinja's lean flank, cupping and caressing her tight butt. Then slid my fingers between her heated center from behind. Running my fingers over her soft curls and along her tender folds, I traced along her fragile, soft lips. Brushed gently along the hair covering her hidden treasure. I could feel those damp lips being gently tugged from above as Janetta worked her clit. \n\nThe tall, wire-strong woman whimpered between us. As her pussy swelled, her inner lips pushed their way out. Feeling along her heat, my fingers found her liquid arousal seeping out. Probing gently, I stroked her lower lips. Zinja rocked her hips back and forth, the heat in her loins igniting. She rocked her hips, trying to get more contact for her needy pussy. \n\nFeeling and hearing Zinja's panting noises, I grew hard. Withdrawing my hand, I pushed down my underwear, kicking it off. Guiding my erection to her leaking crevice, I pressed against her soft flesh. I parted her lower lips, causing Zinja to gasp. Janetta's hand briefly reached down and caressed my shaft before returning to rub around Zinja's clit. \n\n\"There he is, with his mushroom knob, and long, thick cock. Feel him going in, Zinja?\" Janetta asked her. \"He's going to open you all the way up. Make you stretch open wide for his pleasure. Make you take his cock deep, bury himself to the root inside your pussy. He's going deeper, isn't he? Feel that hot, thick bar of flesh of his sliding further inside, filling all those special empty places.\" \n\nI moved my hips lower to enable more penetration, setting one hand along the vee of her groin, keeping her there while I probed into her wet, snug sheath. Janetta's hand lightly moved along our connection. I withdrew until only my crown remained, and then pushed back into her folds. Moisture spread, and each stroke became easier and easier. Feeling Janetta's wet fingers tantalize along my balls caused me to push harder into Zinja. Zinja groaned in approval. \n\n\"Do you love me?\" Janetta asked Zinja between kisses. \n\n\"By all the gods, yes!\" Zinja moaned. \"I love you, Captain!\" \n\nI began a slow thrusting into Zinja's slick sheath while playing with her sensitive breast. Janetta's fingers continued her circular motion around Zinja's nubbin of joy. \n\nJanetta slowly kissed her. \"I'm glad you love me, Zinja. A sergeant should love her officer.\" \n\n\"Yes, I do,\" she husked out. \n\n\"Good. I love you, too, Zinja. Do you love Ranji?\" \n\nShe moaned, her voice shaky. \"Yes, Captain.\" \n\n\"Does he make you glad you're a woman? Sliding his big cock inside your tight, wet pussy?\" \n\n\"Gods, yes!\" \n\nZinja met my movements with her rocking hips, pushing back to envelop my shaft within her heated, slick folds. I could already feel my balls beginning to tighten. \n\n\"Not going to last long,\" I grunted. \"Gods, you feel good, Zinja. So hot and tight!\" \n\n\"Hear that, Zinja? Ranji loves your pussy. He loves it so much he's going to fill your pussy with his cum straight from his hard cock. Think of it! No, not a cock. Rather, an injector rod, spraying all his hot, sticky seed deep inside your womb. Using his cum to mark you as his woman. Just like he marked me earlier. You wear his neckerchief. Are you his woman, Zinja?\" \n\n\"Yes, Captain. I'm his woman,\" she whimpered. \n\n\"Are you going to come for us?\" \n\n\"Oh... yes!\" \n\nMy cock was pumping faster into her depths, plunging into her heat, nearly pulling free, then driving back into to her core, the frisking of my shaft within her folds a wet, squishy sound. \n\n\"Tell him you're his woman, Zinja!\" \n\nMy hips slapped more firmly into her backside. \n\n\"I'm your woman, Commander! Yours! Ahhh!\" \n\nJanetta used her mouth to flick Zinja's engorged nipple, then lightly bit down. Zinja arched back into me, hissing with ecstasy. Then I felt her pussy suddenly convulse around my length. Pulling her hips flush to mine, my cock and balls answered. I swelled within her undulating walls and exploded, shooting out pulse after hot sticky pulse, coating her intimate depths with my essence. ",
        "\"Are you coming for us, Zinja?\" Janetta asked. \n\n\"Uh... oh, yes,\" she grunted, her body tense. \"Coming... Oh, Captain! So, so... good.\" \n\n\"Is he coming inside you? Filling you with cum? Marking you as his woman?\" \n\n\"By the gods, yes! It's hot and gooey and so very deep inside me.\" \n\n\"Would you breed for him?\" \n\nZinja suddenly stiffened, her head snapping up. She reached over and framed Janetta's face with her hands, angling close to her officer even as I held her hips in place. \n\n\"Oh, my sweet captain. Yes, I would breed for him. It would be an honor to give him children. You are Lady Tlacotli, first among his women, and he loves you for your warrior heart.\" \n\nShe gave gentle kisses across Janetta's face as she spoke, struggling to master her breathing while pleasure throbbed away in her core. \n\n\"I love you for the same reasons. For your brave, strong heart and your real beauty. When you are ready to give Lord Kandikan children, I will gladly and proudly breed for him beside you. I love him, I do. But you are first in my heart. You are my warrior officer, my captain, and mistress of my heart, Lady Tlacotli. While you wear the uniform and I have breath in my body, I will serve and protect you and your House with everything I have.\" \n\nShe kissed Janetta until another shudder wracked her body, forcing her to break contact. \n\nJanetta cradled Zinja against her chest, caressing her shoulders and back. \"Such loyalty is a prize rarer than the purest diamond. I was truly blessed the day you and I met.\" \n\nA long emotional pause. Then Janetta asked, \"Does anyone need to move?\" \n\n\"S'all good,\" Zinja mumbled, snuggling against Janetta. Her officer and her lover. \n\nHolding her snug, my cock still ensconced within Zinja's tight, wet heat, I felt good. I didn't even remember closing my eyes. \n\n* * * * * \n\nPart 3 - The Cockroach Escapes and Doyya Takes Steps \n\n* * * * * \n\nWhen my alarm went off, I rolled out of bed. I was surprised when Janetta and Zinja began moving. \n\n\"Computer, lights at thirty percent, bathroom at full,\" Janetta called out, and we climbed out of bed. \n\nWhile I shaved and brushed my teeth, I noted both women put their hair into towels and got in the shower, washed each other's backs and themselves quickly. As I stepped into the water, they stepped out. Both slapped at my butt cheeks. \n\n\"Watch it,\" I warned. \n\nThey smiled back, amused. Zinja started brushing out her hair. \n\nJanetta paused as she applied deodorant, giving me an arch look. \"Or what? You don't have time to make good on any threats, Commander Kandikan.\" \n\n\"No threats,\" I said as I lathered up. \"Promises. How come both of you are getting up?\" \n\n\"Morning air duty,\" Janetta said, then started brushing out her hair next to Zinja. The Oexecan mechanic quickly braided her hair and tied it off. \"While you were at work yesterday, my crew and I checked out a new bird, and ran it through its paces yesterday. So we're back on the flight boards.\" \n\n\"That's terrific.\" I rinsed off, and grabbed a towel, slowing down to enjoy the sight of both naked women at the sink, their long legs, firm butts and the curves of their bodies. The taller, older woman next to the younger one. Both pouty, fur-framed slits fully visible from the rear between their legs. Janetta leaning over to scratch an itch on her leg, further revealing her fur-lined treasure. I moved behind her and grabbed her hips as she stood up. \n\n\"What are you doing?\" She tried to turn around, but my hands held firm. \"We don't have time-\" \n\n\"Stay right there. You are the most beautiful woman in the world, Janetta. I just want to pay homage to your perfect, smooth ass.\" \n\n\"What? Don't you-!\" \n\n\"Relax!\" I slapped her butt in warning. Kneeling behind her, I caressed her tight, smooth globes and gently kissed each perfect cheek. \n\n\"The Commander just kissed your ass, Captain.\" Zinja laughed, vastly amused. \n\n\"I see that,\" she responded, her eyes narrowed, watching me intently as I stood up. Gave a disapproving glare at my half-hard cock. \"You best get dressed, Kandikan. You don't have time to play with your poke-stick. The sun is already kissing the night sky.\" \n\n\"Looking good yourself, Zinja,\" I told her, giving her butt a quick pat as well. \n\nThe sergeant blushed as she smiled, striding past me with a flirty bounce as she exited the bathroom. \n\nJanetta put down her eye shadow and I pulled her close. \n\n\"What do you think you're doing?\" \n\n\"I'm going to kiss you.\" \n\n\"By all the gods, Kandikan, you are such a damn pervert! It's bad enough you lick my pussy and then kiss me afterward, but you just had your mouth on my ass!\" \n\n\"Your perfect ass also happens to be freshly showered so it's nice and clean, Janetta. Now give me a kiss. I need something to last me all day.\" \n\n\"If I must,\" she protested, but her heart wasn't in it. We kissed and her hand briefly tracing my jawline. \"You'll do fine, Ranji. I believe in you.\" \n\n\"Be careful on your patrol, Janetta. That boat that tried to shoot us down could mean Atlantis is gearing up for something.\" \n\n\"Ship, not a boat, Ranji. A Delos-class Corvette. I looked it up.\" \n\n\"You know what I mean. Safe flight and safe return, Captain.\" \n\n\"Thank you, Commander. I should be home for dinner. Are you going to fuck me again before our evening meal?\" \n\n\"After I have my fill from your feminine fountain. As many times as it takes for you to become a quivering, helpless mess, whereupon I will have my way with you.\" \n\nShe applied her orange mist perfume.\"You take such obvious delight from your perversion, and you've corrupted me into liking it. You are such a bad influence - on me and my crew! Commander Ranji Kandikan, defender of women's rights and devourer of pussies.\" \n\nFrom the other room, Zinja burst out into laughter. I had to chuckle, too. \n\n\"You think that's funny? Careful, Ranji. I might put that on your tombstone. Right next to a picture of you with a huge, drooling tongue hanging out of your mouth. Tourists will visit your grave just to see the funny headstone.\" \n\n\"You think that worries me at all? If I pass on, I think I would be pleased to have that on my headstone. It'll give every woman who sees it something to ponder - and maybe get wet over.\" \n\n\"By all the gods, Kandikan, you are a pervert! And a scoundrel, too! Thinking about making other women's pussies wet!\" \n\n\"My reputations grows.\" \n\n\"Ass kisser!\" \n\n\"A most lovely and sweet ass it is, attached to the most beautiful woman in the world. Don't you agree, Zinja?\" \n\n\"It truly is a fine ass, Captain,\" she called out from the other room. \n\nEven as Janetta grumbled at me, I could see both women were also amused by the banter. \n\nOnce we were dressed and downstairs, all the adults gathered at the table. With Calia and Zinja working together at the stove, we soon ate a simple hot breakfast of chopped onions, cilantro, tomatoes, celery, scrambled eggs, and cheese. Instead of panbread, Calia made rotis. They were similar, yet different than the flat bread Ixma and Zinja usually made. Both were great for helping to scoop up the hot food, and delicious in their own right. \n\nBeing too early yet, the girls were still upstairs asleep. \n\nI remembered when I'd first arrived at High Guard, and a nervous Ixma trying to fix me freeze-dried MRE eggs. Ground Service MREs no less - because it was all they had and they couldn't afford anything else. To save both of our digestive tracts, I had taken her to the cafeteria and bought us breakfast. Now, Ixma was happily chatted with Calia and her mother as food was served and we ate together. \n\nMy initial energy faded a bit. I felt a tad sluggish from being tired, but I took in the people gathered at our table, making another picture in my heart. We had a nice home. Not a house, but a real home. Janetta, Cholan, Zinja, Ixma, and Sowitwee in their uniforms. Nariya wore a Mayan-patterned nightgown - black with a repeating pattern of three small, white interlocking rings - though as I recalled, Nariya herself was Tlacan, not Mayan. Calia was dressed in a pale-green and yellow cotton salwar-kameez. We were together and safe. Best of all, there were smiles on every face as we hurried through our meal. \n\nCalia did most of the clean up, insisting that Nariya rest while the rest of us prepared to leave. \n\nJust as Sowitwee and I were heading out the door, Calia called to me. \"My lord?\" \n\n\"Yes, Calia?\" \n\nWit waited with me by the front door while she hurried over. \"Is it all right if I take the girls over to see the Primary School? Give them a chance to meet and interact with other children? It's only half a day, and I'll stay with them the whole time. Maybe take Nariya with me, to show her around?\" \n\nSowitwee gave his assent for Nariya to attend. She beamed happily back at him. \n\n\"Sounds great,\" I said. \"How do you plan to get there and back?\" \n\nJanetta and the others grabbed their lunch kits and disappeared into the garage. \n\n\"It's not that far. We could walk, my lord.\" \n\nI frowned. \"No, Calia. No walking. And it's not about the exercise. Yes, we took care of a lot of villains. However, there are still people who are angry about what's happened here on this war base. They may try to hurt you or the girls to get back at me. There are also enemy agents who will want to hurt me to get at my father. When the girls are ready for school, you call me or Doyya for a ride. You have her phone number, right? Good. I'll let Doyya know you might call. You and my girls will be driven to school, do you understand? Even my parents have armed patrols inside their home to help keep them safe. It's not like when we were younger.\" \n\nHer large brown eyes gave me a sad look but accepted my decision. \"Yes, my lord. I will do as you ask. I believe your daughters will enjoy meeting and playing with other children.\" \n\nI pulled her in for a quick kiss. \"Thank you, Calia. For everything. Janetta says you an important part of our household-\" \n\nJust then, the horn blasted from the garage. Then Janetta yelled out, \"Come on, Kandikan! Turn to! Gods of North and South, at least move your fucking vehicle so we can leave!\" \n\n\"Goodbye, my lord! Have a good day!\" \n\nSowitwee and I dashed out and jumped into my cruiser. Backed it up, giving Janetta plenty of room to exit the garage. A wave from Cholan and Ixma as Janetta hit the accelerator. The ChoCac wagon sped off, heading east to the airfield. \n\nI reflected on the changes. I drove a cruiser checked out from the motor pool and she drove the vehicle assigned for my use. Her own assigned vehicle sat in the garage. Well, her vehicle could barely fit three people, so it made sense. Funny how that worked, though. \n\nI drove us to work. \n\nI have to say, walking up to the building's entrance, it was nice to see Air Security instead of Ground Security standing guard. I paused to greet and shake the hands of the two men on duty, then proceeded inside. As required, we both signed in at the front desk. \n\nSowitwee took my laptop and bag to my office, and prepared the new urn to make fresh cahault. \n\nDoyya and Chita were already there, each talking to clusters of people in the large, open-spaced work area. \n\nPeople scrambled around, and I could tell some weren't sure what was going on yet. I settled in to help the process. Officers generally accepted whatever posting was offered, and I interviewed Senior Lieutenants Sinocaya and Hachan to see if either one fit the XO slot. \n\nJust before ten-hundred hours, Calia called for their ride to the school. I snagged Stimmi, and told him what I wanted. He grabbed three troopers and they left. \n\nI had Doyya sit in for the second set of separate interviews for Sinocaya and Hachan. Afterward, she and I talked. Rather, it was mostly me asking for her impressions. I didn't get much of a hit from either one of them. She suggested we bring them back in together, explain what the two slots available were, and have them make their pitch for why they were right for the job. \n\nLong and short of it, Senior Lieutenant Treygar Hachan became my XO. Senior Lieutenant Pinapen Sinocaya accepted the CO slot for the Specialty Support Company. While Doyya started dumping tasks onto Hachan's lap, I took Sinocaya upstairs to the Specialty Support section to introduce him to his new command. \n\nYalcamara took the patrol troopers we had down to Supply to get fully equipped and their cruisers checked out. She and some corporal reviewed the cruiser's standard equipment with an eye toward improvement. For example, first aid kits and fire extinguishers were previously not standard equipment. \n\nBy lunch time, people were getting assigned to open slots, and those with tasks proceeded with their work assignments. Pen arrived shortly after lunch, and as soon as Doyya spotted him, she dragged him into her office and shut the door. The look of surprise on his face was priceless. \n\nWhen they emerged about two hours later, Doyya and Pen let me know what they'd decided on shift assignments. Since it was expected that I would be on site during the day, Doyya decided as my Second to take swing shift, from fourteen-hundred to twenty-two hundred hours. Jay was assigned Company C covering graveyard, from twenty-two hundred hours until zero-six-hundred the next day. That left Pen with Company A, handling day shift. We now had shift commanders, and barely two platoons of patrol troopers for each work shift. A small bit, true, but it felt good having that established. \n\nThe huge numbers of open slots nagged at me all day. We needed field troopers, and preferably those with prior experience. Having an idea, I went to the second floor to the HR unit. I picked a sergeant walking toward his desk behind the front counter, read his name patch, summoned him over and started talking. \n\nSinocaya saw me and I waved him over to listen in. \n\n\"Are you planning on staying in HR, Sergeant Kenoka?\" \n\n\"Yes, sir. If I can.\" \n\nI smiled at him. \"Excellent. Your job is to collect lists of previous members of the 602. Write this down. One list will comprise all those that transferred out to other units, and note their gender on the list you submit. The second list will be of those who were exited from service, including for dishonorable discharge. The information you compile also needs to include why they were mustered out, where they were sent, last known contact phone number and address. The third list will be all those killed in the line of duty, both male and female. Indicate their sex, their occupational specialty, and date killed. \n\n\"Start from today, and work your way back to when Commander Voyacherno first assumed command. At the end of each day, you will send to me and Sergeant Chita what you've found on those transferred or mustered out. Don't worry about having to have a set number. Even if it's only one, at the end of the day, you send it. We'll take it from there. Keep digging until you're done, at which point I want you to send me the list of the dead. Whatever else you were working on, Sergeant Kenoka, this now takes first priority. I want to be clear. I want daily reports sent to me and to Sergeant Chita. The list of names should include service file links. It might be helpful to keep discrete folders with the records you find as well.\" \n\n\"Yes, sir.\" \n\nSinocaya said, \"Come into my office, Kenoka. We'll get your duties re-assigned, and see who else we can get to help you. You'll have those daily reports, Commander.\" \n\nI went back downstairs and conferred briefly with Pen and Doyya on their progress, then worked on the enormous list of emails that suddenly filled my inbox, most of which were forwarded to me as the new CO of the 602. Sowitwee kept my cup filled. He also brought me, Chita, and the officers congregating in my office food from the Commissary diner, and in general ran errands. \n\nDuring a lull, I pulled Chita aside, and let her know what I'd done. \"Follow up on the lists you get, either you or those you designate. We need troopers, and experienced troopers are better. Ask them if they have the chance to return to the service, would they do so. If they're worried about their children, assure them we will make provisions for them, including child care. They may be in dire straights, needing immediate food and possibly clothing as well as transportation vouchers. You have my charge card information. Assure them it's all real, and that things have changed. Put a copy of the Air Marshal's warrant to me into their file, and prepare induction and travel orders to be wired to them. Make sure the orders include any dependents. It probably won't be more than a hundred, probably less. Every person that returns gets us closer to rebuilding the 602.\" \n\nChita said quietly, \"I'll get on it right away, sir.\" Then she hurried off, saying she had something in her eye. \n\nAt half-past fourteen hundred hours, Yalcamara strode into my office, handing me a printed dispatch. \"Commander! You need to see this!\" \n\nI took the printout from her. \n\n*** High Alert! Attention Security Forces All Branches and Imperial Security! High Alert! *** 11:47 hours Imperial Standard Time 318.17.17.04.12 *** \n\nBe On The Lookout for \n\nAir Security Corporal Sheem Sarketko \n\naka Ground Service Second Sergeant Charunt Tsagoya \n\naka Naval Service Lieutenant Chottam Bareksi \n\n** Imperial Security records pending ** \n\nKnown photos attached. \n\nAs of 0700 hours at morning shift change, Air Security Corporal Sheem Sarketko escaped from Ground Service Maximum Security Detention, High Guard War Base. \n\nThree stockade personnel confirmed killed during prisoner's escape, including a Ground Security officer. Names withheld pending notification of next of kin. \n\nConsider suspect armed and extremely dangerous. Believed to possess electronic jamming device(s). Suspect proficient with disguise. See attached photos. \n\nDo NOT attempt to apprehend suspect alone. REPEAT, do NOT attempt apprehension without backup. If suspect spotted, notify Ground Security C&amp;C ASAP for support and further orders. \n\nNext 48, confirm ALL identification checks ALL stations and checkpoints both visually and by ID card. All critical areas will include finger-print scans. NO exceptions. Seven Nations' state and local LEOs have been notified. \n\nGroup Captain Hakar Chochoonitsi, CO, Ground Security CID \n\n67th Armored Division, High Guard War Base \n\n*** Attention All Units, All Imperial Security Services *** End Notice *** \n\nI jumped to my feet. \"Kali's throbbing cunt!\" \n\nAll side conversations ceased and heads whipped toward me. \n\n\"What's happened, Commander?\" my Second inquired. \n\nI handed Doyya the notice. Yalcamara looked unhappy. \n\nI turned to Pen. \"Jay and I found a man two days ago that we believe to be Sergeant Charunt. Ground Security has confirmed Charunt's identity. This morning he killed three guards and escaped.\" \n\nPen looked stunned. \"Charunt? Here? He's dead! Jay told me he killed him!\" \n\nDoyya handed him the printout. When he finished reading, he looked disturbed. \"Charunt could have been anywhere in the Empire. Even anywhere else in the world. Why here, Commander? Why High Guard? And why was he attached to Air Security?\" \n\n\"Good questions. Deedee and I both noticed Charunt preferred Atlantean weapons. He might be a Huginn agent, potentially with access to Grey technology. Doyya, talk to Laroks. I want someone looking at his duties as Corporal Sarketko. What did he work on? What areas did he have access to? Interview anyone who worked in HQ who's still here. If Laroks can't spare anyone, contact Killayana and ask for someone at Ground Security to come by and dig around. The Atlanteans might be planning something. ",
        "\"In the meantime, I'm not taking any chances. Lieutenant Fortri - you don't go outside this building without a pair of armed shadows at all times, you hear? Twenty-four seven. Same for Lieutenant Raltikon as well. Even if he's not coming here for a week yet, he gets guards, today. You are to be armed, even when off duty. \n\n\"I also want a pair of troopers patrolling exclusively down at the aerodromes. I will call Flight Operations and make them aware. I also want those safety troopers selected and down at the school. Captain Lovyanchiti and Sergeant Chita, this fugitive knows who you are and that you're both important to me. You are also to be armed at all times, and you do not go anywhere alone. Until this maniac is found, I want everyone to be careful. Am I clear?\" \n\n\"Yes, sir,\" they echoed. \n\n\"Pen, do you think I'm over-reacting?\" \n\n\"No, sir. Charunt is a sociopath. He is capable of casual cruelty that most people would be shocked to contemplate, much less attempt. We need to implement the same rules and cautions as Ground Security.\" \n\n\"So ordered. Make it happen, Pen. Tonca hurt some of you, and he was a brute, a savage. Trust me, Charunt is much worse. He is at least cunning if not intelligent. He is a violent sadist. Charunt might casually bump into someone and walk away before those around realize the person he bumped into was fatally stabbed.\" \n\n\"Sowitwee, close the door, please.\" It was Doyya. \"Commander, do you trust everyone in this room?\" \n\nI looked around. Doyya was my Second. Yalcamara and Stimmi. Chita. Sowitwee. Then there was Pen, who like me, survived Sparantzlo, the Seventh Hell. \n\nNodding, I said, \"Yes, I do. Every one of you, with my life.\" \n\nSeveral pleased smiles at my praise. \n\n\"Then tell us how you and Pen met this Charunt,\" Doyya demanded. \"We need to know about him. The more we know, the better Air Security can deal with him.\" \n\nPen raised his eyebrows as he looked at me. \n\n\"You have a point, Captain. However, at this time, it will have to be the edited version. When I left last summer, it was supposed to be for a training mission. On my way there, I stopped off at my parents because there was word of a pending assassination attempt targeted at my father. With the aid of Styen Topangiti and my brother Bilan, we saved my father, but my mother was critically wounded. I flew her to Sentry War Base for treatment, but was detained for seven hours because someone had tampered with my service record, deleting important information.\" \n\nI sighed. \"Then Commander Herroto Chaltoklan showed up and I was suddenly free to go. I was to fly to my training site, using a P-15 Albatross. I did so. And was shot down in the middle of a snow storm, high in the mountains. I nearly died. Lieutenant Deedee Marrin rescued me. I was badly frostbitten and injured from the exploding aircraft. It took us three days to climb out of the ravine. When we arrived at our training site, all of us were tortured for nearly three weeks. Each of us suffered such major trauma to our bodies that it required regular use of nano-technology to repair our bodies. Two or three days of utter agony, then a day or two in the tanks, depending on how badly damaged we were. I... I'm not afraid to say that I cried, screamed, and even wept like a baby. Tied down, all I could do was take it. Clubs and bullet ants were used. Knives, however, were a favorite. Sometimes I was beaten or cut up so badly I lay in my blood, urine, and feces, too broken in body to even move, sobbing because at least they had stopped hurting me. Pen and Jay endured the same hell I did. I don't know about them, but three men were responsible for my own torture. Captain Stryker, Corporal Belton, and Second Sergeant Charunt. Just before we finished our training, Stryker and Belton tried to murder me and five other men. Jay shot Belton, but was then shot by Stryker. Then Stryker shot and killed Deedee, but not before she killed him in return. Charunt somehow escaped and came here.\" \n\nI stared at the wall, half-listening, yet at the same time lost in the memories. \n\nPerplexed, Doyya scrunched up her face. \"To what purpose, Commander? Why did they torture all of you?\" \n\n\"To break us,\" Pen answered quietly. \"They asked us questions they already knew the answers to. They weren't interested in the answers. But they hammered at our memories and perceptions. They asked who in our previous deployment we had sex with. If so, how many times? If not, why not? They also wanted to know about our families. Inferring we had sex with our parent and siblings. If we denied such, they wanted to what was wrong with us for not taking the women. Sick, twisted questions. Day after day, they wore us down. Broke us into little pieces. The only thing that mattered was answering, because then they didn't inflict pain. All of it was geared toward making us into monsters like them. People so battered and broken down we would do anything they said to please them in order to avoid being hurt like that ever again.\" \n\nPen gave a ragged sigh, and at a nod from me, he continued. \n\n\"There were twenty-seven in our initial training cohort. Three women survived the torture. Deedee, Prina, and Bacholet, and seventeen men. Think on that. They killed seven of us by torture before we ever saw them. Anyway, we were finally released, allowed to rest and eat, then ordered into a room. Everyone was ordered to strip naked. Except Stryker, Belton, and Charunt.\" \n\nPen looked embarrassed about the next part, but he kept on going. \"It was Stryker's plan that the men fight for the women. The winner got to keep her as their personal sex slave. The remaining men were to be paired as well, and like with the women, the loser became the sex slave to the winner of the personal combat. We were told that the losers would be inspected daily for sperm, and anyone found delinquent in ejaculating inside their slave would be punished. After the fighting, the plan was we would take turns raping the women, and we would gang rape them weekly.\" \n\nThe women were clearly uncomfortable, but they kept quiet while Pen talked. \n\nPen gave me a grim smile. \"That was the plan, anyway. What Stryker and the others didn't count on was Ranji Kandikan. Four men tried to claim Deedee from him. Ranji beat three of them with hardly any effort at all. Each fight was over in under twenty seconds. Jay was to be the last one to fight. However, instead of fighting, he surrendered. Ranji accepted his service under the accepted rules for dueling between Warriors. \n\n\"Enraged, Stryker tried to shoot Jay but Ranji blocked it. Saved his life. When Ranji challenged him to a fight over it, Stryker turned tail and ran. Ranji then tried to do the whole honor thing, allowing the others to challenge him for leadership, but Deedee and Jay didn't let him. With a nudge from Jay, I joined in. We said that anyone who challenged Ranji had to go through us first. Since he was the highest rank, Ranji took command of us. He ordered us to get dressed while he talked. I hadn't realized it, but I had been lost. All of us were. Lost emotionally and psychologically. \n\n\"Ranji reminded us that all of us were noble-born, that we were officers in the service of the Empire. He had us sing the first verse for each of the service branches, and the Imperial anthem. Then, together, we recited our oath of fealty to the Emperor and our respective service. He also instituted his Protection Order. By the time Stryker returned to challenge the situation, all of us were Warriors again, and we belonged to Ranji Kandikan. Jay and I are here, ready to serve him because he literally saved us, and our honor. Llam nuqam, Commander.\" \n\n\"Llam nuqam, Pen.\" I snorted, then shook my head. \"I know this is going to get out.\" \n\nThere were immediate protests, but I waved them down. \"That's not what I'm worried about. I'm human. I make plenty of mistakes.\" \n\n\"Charunt threatened your family, Commander,\" Doyya persisted. \"He threatened to rape, torture, and murder them, didn't he.\" \n\nI nodded. \"Each of the women who live with me. Even my little girls.\" \n\nSowitwee spoke up then. \"I wanted to shoot him because he threatened you and your family. But you told me that even you needed to follow the rules. I didn't understand at first, but now I do. You are a wise man, Commander. An honorable officer. With you, everyone gets a fair and equal chance. You care about us, officer and enlisted alike. We aren't objects to you. The others in the regiment? They will likely learn of your harrowing experience. You promised those who remained that they would work hard, but that you would also restore the regiment's honor. You will do it, too, I have no doubt. They will come to love you like we do.\" \n\nJanetta had warned me, saying I'd bound Sowitwee to me in chains stronger than steel. \n\n\"Thank you, Wit. I hope I am worthy of such loyalty.\" \n\n\"Do you need reminding, Commander?\" Sowitwee asked. \"Lieutenant Fortri, Commander Orchid herself was here at High Guard last year. She rescued Nariya and spared my life. She gave me to the commander, to serve him as his aide. What was the first thing you did, sir? You gave me time to be with her while she was in the hospital. I was penniless, and you gave me money to live on. You paid to heal her, erasing the terrible scars inflicted on her by her kidnappers, and you gave her back her voice. Then you paid off her indenture, freeing her. I can never repay any of that.\" \n\nBefore I could say anything, Chita spoke up. \"The first time I met you, you sent the captain and lieutenant with me in an effort to save any women officers, when the birth control drugs across most of the war base had been tampered with.\" \n\n\"I heard that it was bad here,\" Pen observed. \n\nThe others nodded their heads. \"People were afraid,\" Doyya replied. \"Graft was so bad, people were going into debt just to pay for their housing. Crooked gambling, embezzling. Every woman I knew had to have sex two or three times a day, myself included. Sometimes more. Commander Orchid came because of the commander here. Yes, she saved us, and for that, Commander Orchid is a hero to every woman in uniform on this war base. She brought in Imperial Security and the Imperial Guard. Over a thousand men were executed, and hundreds of others demoted. Crime rings were smashed left and right. Unfortunately, we weren't able to save Chita's bosses. A pregnant officer is condemned to execution. I'm proud to say I was there to see the commander get his first command. The 945. He took me in. Promoted me to an officer and made me his Second. Then he shocked everyone present when he issued the first Protection Order.\" \n\n\"I was happy to transfer to the 945,\" Yalcamara added. \"From the first day, I was treated with respect, and I was given my own command. The only man I shared my body with was the man I chose.\" She looked meaningfully at Stimmi. \"There were six of us security troopers at first. Then more. The commander started the bus program, to protect others being hurt, so they could get to and from work. During that short time, we made a real difference. I was proud to wear my uniform!\" \n\n\"Me, too,\" Stimmi echoed. \n\nPen laughed. \"It's official, Commander. You are a hero, and we are your loyal paladins, one and all.\" \n\nGiving them a nod of my head, I said, \"I thank you for your kind words, and I appreciate your loyalty more than I can say. Unfortunately, it's also past time we get back to work. Doyya, how many working vehicles do we have-\" \n\n\"No, sir,\" Doyya said. \"We aren't done yet.\" \n\n\"Excuse me?\" \n\n\"You are my commanding officer. I am your second in command,\" she answered. \"We got sidetracked a bit because you needed to hear how we feel about you. However, we were talking about Charunt and the danger he poses. You issued orders to add protection to the school, the airfield, and your senior staff, but you did nothing for yourself, or specifically for your family. With all due respect, as your Second, that's not acceptable. I assume Captain Tlacotli is going armed these days?\" \n\n\"I haven't made the request yet, but she did leave armed this morning. I will make sure she knows when I see her tonight.\" \n\n\"While she's in the air, her flight crew are vulnerable. You've ordered there be guards for Jay, Pen, and myself, and that everyone else be on alert and be armed with at least a stunner. Until further notice, I am ordering a pair of troopers will be assigned to guard Captain Tlacotli's flight crew. There will also be a pair of troopers be assigned daily to pick your daughters up from home, drive them to school, remain there until school is out, take them home, and remain on duty there until you or Captain Tlacotli return home in the evening. Another pair will guard your home while you are here on duty, until relieved by those guarding your daughters. Agreed, Commander?\" \n\nI sat back in my chair and gazed at Doyya. \"Who are you and what have you done with my Second?\" \n\nLooking flustered, she nonetheless managed to keep eye contact. I was impressed. \n\n\"Commander! I assure you-\" \n\nHolding up my hands, I said, \"A poor choice of words. I meant it as a compliment, Captain. Your time at Tik\u00fan has improved your skills and your confidence. And, your points are well taken. I have always believed you to be the best Second I could ever hope for, and you have never given me cause to think otherwise.\" \n\nYalcamara smirked at her, and Chita grinned as she nodded. \n\nDoyya flushed at the praise. \"Thank you, sir.\" \n\n\"If that's all, Captain, we have other things to deal with.\" \n\n\"There still the matter of you, Commander.\" \n\n\"Seven hells, Doyya. I often wear two holsters and I'm pretty sure I can hold my own in a hand-to-hand fight.\" \n\n\"Even one warrior can be overwhelmed by sheer numbers,\" she countered. \n\nOuch. I remembered when I told that to Janetta in my effort to convince her it was okay to love me. \n\nDoyya continued speaking. \"Last year you were shot in the leg by an assassin. A Ground Service officer was critically injured in that same encounter. You showed up at work, popping painkillers, and acting like everything was normal. Sergeant Chita and I both had to insist you get it treated. Indeed, I had to send Yalcamara and Stimmi to make sure you actually went to the hospital. Good thing, too, because we learned it was infected.\" \n\nPen looked at me with interest. A new story for him. \n\n\"And while you were there at the hospital,\" Yalcamara said, joining in, \"two draconian assassins tried to murder you while you were strapped to the table. The captain is right. You need protection, too.\" \n\nPen sat back, marveling at the revelations. \"Once Jay's here, Captain, promise me you'll take us for drinks? You can tell us more about our illustrious commanding officer.\" I snorted. \"Yalcamara and Stimmi should join us,\" Pen added. Then he nodded to Chita. \"Probably good to hear your take on things as well.\" \n\nImpatient, I rapped my knuckle on the desk. \"If we're done, can we move on?\" \n\n\"We just agreed you needed protection, Commander,\" Doyya protested. \"The matter is still at hand.\" \n\n\"Pick a couple of volunteers. It would be politic if Janetta met and okayed them. She's of the opinion that my male-mojo as she calls it will eventually overwhelm all the women I work around and they will begin throwing themselves at me. That's not a problem here, is it?\" \n\nSeveral startled glances. \n\n\"Not at all, Commander,\" Yalcamara assured me. But I noticed she did nudge Doyya. \n\n\"We admire you, Commander, but we aren't ready to swoon just yet,\" Chita said with a chuckle. \n\n\"Glad to hear it. Make a few selections, and send them to me and I will have Janetta vet them to her satisfaction. In the meantime, I have Sowitwee. He's a very good man to have in a fight.\" \n\n\"Yes, sir,\" Doyya replied unhappily. \n\n\"I'm afraid I must be firm about this. I respect your desire to do your job even when I'm being bull-headed about things. Captain Tlacotli is normally a professional, but she does have a temper, especially when it comes to personal matters. Do you remember what happened on the Condor, when Captain Tsocotchi suddenly hit me in the face?\" \n\nShe nodded, pursing her lips. \n\n\"Even threatened with death, she was ready to kill Captain Tsocotchi if she didn't stop attacking me. I remember that with pride. I also remember my Second, ready to join her. People ask me why I fight so hard for women warriors to be treated with respect. Yes, one on one, men are often stronger. But being a warrior isn't always about strength alone. A warrior's heart is just as important. So are their brains. You yourself showed me the latter, Doyya. When we were challenged by the temple guards at the entrance, I was prepared to argue and fight to get passed them. You shot them with the stunner and ended the entire problem. Which, by the way, was brilliantly done.\" \n\nShe accepted the praise without a word, but I saw the gratitude in her eyes. \n\n\"My point,\" I continued, \"is that you have been on the wrong end of Captain Tlacotli's verbal lashings. The last time she went off on me was the day before we met on the Condor. I had been back less than a day, and I'd managed to set her off. There was a wall clock in the office when she started in. It lasted over ten minutes, and she not only didn't repeat herself, she taught me a few new phrases.\" \n\nStimmi burst out in laughter, but at Doyya's baleful glance, he quickly recovered, saying contritely, \"Sorry.\" \n\nSmiling at him, I continued. \"Captain Tlacotli is the mistress of my household, and she is not afraid to take me on if she is unhappy about anything at all. Letting her vet any guards assigned to me would show her I'm taking her opinions into account. Any troopers you send with my daughters, to guard the house, or to guard me need to be able to stand up to her. She will likely bully them to take their measure. If they aren't intimidated, they will probably pass, and she will likely ignore them after that.\" \n\n\"Volunteers, then,\" Doyya said thoughtfully, making a note on her tablet. \"I'll work on it, sir.\" \n\n\"Now, about the number of vehicles. How many do we have that are in working condition? We need to review what comes as standard equipment in each cruiser. There's riot gear and heavier arms, but we've already identified that each cruiser should have an advanced first kit and a fire extinguisher. A few secured blankets to help treat shock. Yalcamara, you're in charge of that project. Review what's there and what's missing. Stimmi, you help her. Poll other troopers for their suggestions. Our cruisers need to support us in a variety of ways. We can't cover every contingency, but we can certainly do better. Chita, we're going to need get a count of how many stunners we have on hand, both 110s and 570s, and how many we have issued. Stunners can easily diffuse a potentially dangerous situation. If someone takes a hostage, just shoot them both, secure the target and render aid as needed. Whatever we're short of, we need to order more.\" \n\nChita tapped rapidly on her tablet. \"On it.\" Yalcamara and Stimmi quietly conferred as he wrote on a paper tablet. \n\nDoyya raised her eyebrows. \"Do you currently have a stunner, Commander?\" \n\nPursing my lips, I sighed. \"No. I gave mine away and I've neglected to replace it. My bad. Which of you still have your stunners from our days at the 945?\" \n\nDoyya, Chita, Yalcamara, and Stimmi raised their hands. \n\n\"I'm impressed. Then we need at least four,\" I said. \"One for me, Sowitwee, and Pen, and also one for Jay for when he gets here.\" \n\n\"Stimmi?\" Yalcamara said. \"Go down to the armory and sign out four light stunners. Save Chita some work here and ask them to get those lists the commander just asked for.\" \n\n\"Yes, Lieutenant.\" He winked at her and she grinned back at him. Pen noticed, but the other two women ignored the exchange. "
    ],
    "authorname": "TJSkywind",
    "tags": [
        "alt history",
        "atlantis",
        "consensual",
        "early earth",
        "military",
        "native",
        "poly"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-18"
}