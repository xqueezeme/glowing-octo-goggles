{
    "title": "Head Above Water Pt. 05",
    "pages": [
        "I sometimes wonder if I mix my feelings up with alcohol. \n\nI'm not much of a drinker, but when I do drink, it's straight. Vodka gives me bad memories, and rum, while delicious, tasted like the breath of one of my foster dads. There was something about whiskey that tasted like a fire, like something was being set ablaze inside of me. It was my poison of choice. \n\nSo while I lay here alone in my room, Alexa playing music on the Echo, a glass of whiskey in hand, I wondered if I missed him so terribly because of the alcohol or... something else. \n\nBlue eyes you could drown in, but warm hands that will always pull you out of the water\u2014that's what he was, like he was both the sickness and the cure. \n\nAnd sometimes it truly felt like I was dying, like I'd fucking suffocate if he didn't call me and remind me that he still wanted me. If I changed, if I became this ugly thing with no teeth or hair, would he still love me for the hell of it? Did he just lie awake at night staring up, looking for meaning in the popcorn ceiling? Did his mind become infected with me; did I make him sick too? Did he know that I could be the cure, too? \n\nOr was it just me?\n\nI looked out the window, finding the moon in the distance, a sliver hung in the air, still bright enough to light up the whole night sky. I hugged a pillow, looking up into where the universe lay before me, up where suns and stars and galaxies waited to be discovered and explored, and I wondered were they better off not knowing what it meant to be loved? Weren't things supposed to be simpler without feelings?\n\nThe relentless beat of my heart thudded in my ears, thumping to let itself be known, reminding me that I was still alive, and that I was still fighting. Twenty-nine years I've been kicking in the water, rising to the surface, refusing to let myself drown, and it's funny, all I had to do was trust someone. Wes came into my life, and it was like a trust fall, one where you close your eyes and just fall, and he caught me just before the water drowned me. And it wasn't just that\u2014he taught me how to float.\n\nHe taught me how to live.\n\n\u2014\n\nI shouldn't be hungover but I was. I was sprawled out on the bathroom floor, swallowing down the urge to hurl. I hadn't even drunk the whole bottle. Hell, I don't think I'd drunk half. \n\nWhy was I constantly getting sick? Was I fucking cursed?\n\n\"Babe.\"\n\nI felt a hand come and check my forehead. I opened my eyes, my vision a little blurry, and found Wes looking down at me. It was weird seeing him in a t-shirt and jeans all the time now that he'd graduated from residency and wasn't working in a hospital anymore. \n\n\"Hey,\" he said softly, giving me a small smile. \n\n\"Hi,\" I replied, coughing to cover the gag from needing to throw up. \n\n\"Am I really that disgusting to look at?\"\n\nI rolled my eyes. \n\n\"No fever, at least,\" he murmured. \"Was it something you ate?\"\n\nI shook my head. \"Drank,\" I croaked. \n\n\"Too much whiskey?\"\n\nFuck, he knew me. He read the look of shame on my expression and laughed. \n\n\"Come on, let's get you to bed,\" he said, gently taking me into his arms. He lifted me off the floor and carried me back to my room. \n\n\"What if I throw up on you?\"\n\n\"There's this great invention I have to tell you about, Celie,\" he said, pressing his lips to my temple. \"It's called a washing machine.\"\n\nI punched him in the chest. \n\n\"Don't call me that,\" I grumbled. \n\n\"It's been over a year now and I still don't have the right to give you a nickname?\"\n\n\"I don't like nicknames.\"\n\n\"And I don't like Mondays, yet here we are.\"\n\nI snorted, but it was replaced a moment later with a groan. \"I should be at work,\" I complained. \"I can't keep slacking off like this.\"\n\n\"Slacking off? Celine, that company runs just fine because of you. Give your employees some credit. They know what they're doing.\"\n\n\"Really? That's why we're six points behind goal in quality assurance?\"\n\n\"No idea what that means. Don't speak call center to me this early in the morning.\"\n\n\"Well, you're always speaking hospital to me so this should make us even.\"\n\n\"Actually, I changed my mind,\" he said. \"You talk call center, I talk hospital, and we drive each other up the wall.\"\n\n\"What the hell does that achieve?\"\n\n\"Mind-blowing make-up sex.\"\n\nI laughed, and immediately my head throbbed. Ouch. \n\nWes grinned, gently setting me down on the bed. He took the hair tie from my bedside table, putting it between his teeth as he carefully braided my hair. Yeah, my boyfriend knows how to braid hair. Give a man a little sister and a job working with kids, and he'll learn how to braid hair. I didn't really mind at all, considering how good it felt to have his long fingers brushing through my hair. I sighed in relief when my hair was finally out of my face. If I had to throw up again, at least my hair wouldn't be getting in the way. \n\n\"I'm going to go make us some breakfast.\"\n\n\"Wes, I'll throw up,\" I protested. \n\n\"You'll like it,\" he said. \"You need a hangover meal.\"\n\n\"You don't know what I need.\"\n\n\"I'm a doctor. I know exactly what you need.\"\n\n\"If you could stop shoving that in my face, that'd be great.\"\n\nHe laughed. \"What's the matter, baby? Medical degree too stiff for you? I've got something else a whole lot stiffer if that's what you're into.\"\n\n\"Disgusting.\"\n\nWes went to go make the hangover meal, whatever the hell it'd be, and I slid my phone over from across the bed. A few missed calls from work, a text each from Addie and Rita asking after me, and one from Janie asking if I'd help her convince her mom to let her go on a trip to Big Bear with some friends for a week. At seventeen? If I was her mother, I sure wouldn't let her go unsupervised to the mountains either. \n\n\"You're on your own, kid,\" I mumbled as I typed it into a text. \n\n\"Celine, the place has burned down in your absence,\" Bethany, the new senior supervisor said when I called her a moment later. Lisa had retired, and I'd picked Bethany to take her place. She worked hard, was never late, and had plenty of experience. Plus, I liked her and that didn't hurt. \n\n\"Well, why don't I just get in my car and drive over to kill you?\"\n\nBethany giggled. \"I'm totally prepared to defend myself with a fire extinguisher.\"\n\n\"You'd lose the fight. Guaranteed.\"\n\n\"You're probably right, but I'm going down guns blazing.\"\n\n\"Talk numbers to me, Beth.\"\n\n\"I love it when you ask me to talk dirty to you.\"\n\nI laughed. \"I'm serious. How are we managing?\"\n\n\"Looking good. Up a point in quality assurance, if that makes you feel any better.\"\n\n\"It does.\"\n\nWes walked in with a plate of sunny side eggs and sliced avocado. Sure enough, my stomach grumbled. He handed me the plate and took the phone from my hand. Before I could protest, he shoveled a spoonful of avocado into my mouth. \n\n\"Hi,\" he said into the phone with a high-pitched voice to imitate me. \"What? This is Celine!\"\n\nI swallowed down my food and opened my mouth to say something, but he fed more avocado into my mouth. I glared at him as I chewed. \n\n\"Honestly, Beth, you're just insulting me now,\" Wes said, sounding mockingly shrill. \"You are fired, madam!\"\n\n\"Give me that,\" I snapped, taking the phone out of Wes's hand. \"Hello?\"\n\nBethany was giggling like mad. \"If I wasn't married, I'd probably steal that one from you.\"\n\n\"You can have him. No returns though,\" I said as Wes disappeared back into the kitchen. He returned with a plate of his own food. \n\n\"Deal,\" Bethany said. \"Now, are you coming in today or should I have Darlene cancel your appointments?\"\n\n\"Just cancel up to noon,\" I said, checking the time. That gave me another two hours to get it together and Uber to work. \n\n\"No,\" Wes said. \"You need to rest.\"\n\n\"Are you sick?\" Bethany asked. \n\n\"Just hungover,\" I admitted sheepishly. \"Please don't tell anyone.\"\n\n\"I was just about to announce it to the entire call center. Thank god you told me not to.\"\n\n\"Beth?\" \n\n\"Yeah?\"\n\n\"Shut the fuck up.\"\n\n\"Why don't you shut the f\u2014\"\n\n\"Don't finish that sentence if you're on my Floor.\"\n\n\"...fuck up,\" she finished. \"I'm in your office, actually. I was picking up your walkie to walk the Floor. Also, stay home, Celine. I'll have Darlene clear your schedule, and I'll pick up the workload for you today. Just stay home and for god's sake, please eat something.\"\n\n\"Am I really that predictable?\" I grumbled. \n\n\"Yes,\" Wes and Bethany both said. \n\n\"Whatever. Call me if anything comes up.\" I hung up the phone and reluctantly ate another bite of avocado. \n\n\"That's my girl,\" Wes said proudly, acting as if I'd just won gold at the Olympics. \n\nI flicked a piece of egg at his face. \n\n\u2014\n\nThat night I didn't drink any alcohol, but oddly enough, I woke up hungover the next morning too. No joke, I rushed to the bathroom and dry-heaved for fifteen minutes into the toilet. It was not my most elegant moment. \n\nWes wasn't there to take care of me this time. He'd spent the night at his mother's, and she was likely cooking him up a grand breakfast. It was a work day for me, so he probably wouldn't be dropping by anytime soon. \n\nI brushed my teeth, gurgled some mouthwash and hopped into the shower. I took a quick hot shower, and hissed involuntarily as I ran the soap over my breasts. They felt almost... swollen. And sore as hell. \n\n\"Oh, no,\" I said, swaying in the shower. I put my hands out and steadied myself against the tile wall. \"Oh, fuck.\"\n\nI have to be honest here: I hadn't been counting the days since my period. I never counted. So sue me. Of course, at moments like these, I could see just why women bothered.\n\nI slid to the tile floor and wrapped my arms around my knees. Maybe this was nothing. Maybe I was just imagining it.\n\n\u2014\n\nI threw up the next morning. \n\nNope, wasn't imagining it. \n\nI called Darlene to cancel my morning and got dressed. I tied my hair up since I didn't have time to brush it, and washed my face, brushed my teeth and practically ran out of the apartment. I took the elevator down, my foot tapping impatiently when I felt the second wave of nausea hit me. I slapped a hand over my mouth and held it in. \n\n\"Oh, dear,\" said an old lady from my building when she found me throwing up in the parking garage. \"Your first?\"\n\n\"What?\"\n\n\"First child,\" she said. \"I was completely unprepared when I had mine too. Of course, that was over fifty years ago. Here,\" she got out a small package of tissues and a few sticks of gum from her bag and passed them to me. \"You keep these, honey. You'll need them.\"\n\n\"Th-Thank you,\" I said, stunned. Were strangers really supposed to be this kind?\n\n\"Does the good doctor know?\" she asked me. \n\n\"I\u2014what?\"\n\n\"Dr. Spenrath. Have you told him yet?\"\n\n\"I'm not\u2014no... I don't know. I was just about to go buy the test, actually.\" I didn't know this woman, but she clearly seemed to know me. Wes knew all the neighbors so I guess that should be no surprise. \n\n\"Get the cheapest one,\" the old lady said. \"They all do the same thing and the cheap ones work just as well as the expensive ones. And get some water from a drive-thru on the way there. You need to fill up your bladder.\"\n\n\"Thanks,\" I said awkwardly. \"I, um, really appreciate the advice. Please... please don't tell Wes.\"\n\n\"Oh, of course, sweetheart,\" the woman said. \"I wouldn't dream of stealing that moment from you. I'm in 219 if you need any more advice. Come see me anytime. My name's Nancy.\"\n\n\"Thank you, Nancy. I'm Celine.\"\n\n\"I know who you are,\" the woman said, smiling. \n\n\"Of course you do.\"\n\n\"Now go on, go get that test. Buy two or three to be sure, actually.\"\n\n\"I will, thank you.\"\n\nNancy. I'd seen her around, but I don't think we've ever exchanged more than a smile before today. She was nice, probably a lot nicer than I deserved considering that she'd never even crossed my mind before. I stopped off at a Starbucks and got some free iced water in the drive-thru before heading to the CVS. It was pretty early, but the one on Main Street was open 24 hours so it didn't really matter. \n\nA store clerk greeted me as I walked in, but there didn't appear to be any other customers. I trailed down the aisles until I found what I was looking for: a pregnancy test that cost literally a dollar. I grabbed a handful and went to the register. The store clerk thankfully didn't comment on my purchases, instead asking me how my day was going. It was going shit, but I lied and told her it was a great morning. \n\nI couldn't delay this any longer. I asked to use the bathroom and was directed to one in the back of the store. My hands shook as I turned the knob to the door, and it was a small and cramped bathroom, but I just had to get this over with. I peed into a little styrofoam cup the cashier had graciously given me when I'd asked. I won't go into detail about how this was all done, but I will say that it's gross as hell. \n\nI did all five tests at once. \n\nNow it was a waiting game. I paced in the small bathroom, round and round, tugging at my hair as my eyes brimmed with tears. This was fucking terrifying. What would I do? Wes and I had always been pretty clear about not wanting kids. A child just wasn't in our plans. We'd talked about spending a lifetime together, and we'd always been enough for one another. I wasn't one of those women that needed a child to feel fulfilled\u2014not that it was wrong to be that way, but it just wasn't me.\n\nOkay, I needed to calm down. For all I knew, the tests would come up negative. In fact, it could be some stomach bug or even a phantom pregnancy. Maybe my body wanted me to be pregnant and this was its way of telling me. I went through what felt like a hundred different scenarios where I wasn't pregnant. And then I looked at the tests. It was time. \n\nNo. \n\nTwo lines. All of them. Two fucking lines. \n\nI was pregnant. \n\n\u2014\n\nWhen I got home, I threw up. \n\nI'm not sure if it was because I was pregnant or if it was because I was absolutely sick with this information. Maybe a bit of both. \n\nIf I'd had a mother, I probably would have called her first. I would have rang her immediately, maybe before I'd even left the store. I would have cried and asked for advice, and she would have told me that everything was okay, that we'd find a way to deal with this... together. \n\nBut I didn't have my mother. She was long dead, taken from me when I'd been too little to remember her face and the distinct accent of her voice. All I could remember was that she didn't sound like the other moms, that she'd sounded different. I'd wanted to be just like her. I'd imitated her, had walked through the apartment on a hill, and we'd had a cat\u2014and just like that, memories began to flood my mind. It was like something clicked, like I'd been blocking out my past to protect myself. \n\nMama and Papa. Their faces were blurry, but I remembered how tall they were compared to me, larger than life, especially Papa with his big, warm hands, calloused from the work he'd do. I didn't know what his job was, but I remember running around with his hardhat on my head, and it occurred to me that he might've been a construction worker. Mama had been going to school. She'd sit with her big textbooks on the kitchen table, deep in thought and chewing on the end of her pencil. And I remembered now that she'd smelled like watermelon, maybe from a favorite shampoo or body lotion. \n\nTears streamed down my face as I remembered bits and pieces of them, the people who'd given me life, the ones who'd loved me, really loved me. \n\nAnd I'd loved them. \n\n\"Mama,\" I whispered. \"Mama, I need you.\"\n\nI cleaned myself up and crawled into bed. I'd be missing another day of work, but for the first time, I felt that it was justified, that I really needed this day to pull myself together. I'm not ashamed to admit that I spent the morning crying into my pillow, missing my parents, missing how real they'd been. They'd been alive, not just a dream and a hope, but real and tangible and true. \n\nI didn't want to think about what I'd do about the pregnancy. All I wanted to think about was how Mama and Papa had skin like mine, light brown that would tan in the summer heat from days at the beach. I remembered a red tricycle, and a yard, a little one in front of the apartments we lived in, and Papa teaching me how to use it. I'd spun my little legs, making him laugh, and he'd push me around, making me laugh and scream until Mama would come downstairs, smiling as she leaned against the gate. After some time, she'd walk over and kiss Papa and take me into her arms, peppering my face with kisses. \n\nGod, how I missed them. \n\nI bawled like a fucking baby. I wanted them so badly. I wanted Mama to tell me what to do, to tell me how to handle morning sickness and mind sickness. I didn't want to keep this baby. Would she have scolded me for it? I remembered the silver cross that hung from her neck, the chain long enough that I'd been able to play with it when she'd held me in her arms. She'd never minded when I'd tugged and tangled it. So she'd been religious, at least a little bit, as far as I could remember. Maybe she'd want me to keep this baby. \n\nBut I couldn't change my life on a maybe. I needed to talk to Wes. \n\n\u2014\n\nWes's apartment in Anaheim Hills was still out of the way, far on the edge of Orange County, just barely within the zip code to be considered a part of civilization. It was miles of nothingness after his exit on the freeway, and small towns, little dusty ones until you got to Chino or Riverside. I parked in his carport and made my way upstairs to the second floor to reach his front door. I had my own key, and I let myself in. \n\nI could hear some muffled talking. Wes's serious voice, from what it sounded like. I walked through the apartment, making my way up the second set of stairs to reach his upper-story bedrooms when I didn't find him in the kitchen, living room or bathroom. I followed the sound of his voice. \n\n\"Yes, thank you so much. I really appreciate the opportunity,\" Wes said into his phone. I walked into his room and found him facing the window, looking out into the hills, over the freeway and to the mountains on the other side. It was a beautiful sight, the greenery and beauty of the view. He had his back turned to me, so he didn't yet know that I'd walked in. \n\n\"I'll wait for the email and package in the mail. Thank you again,\" Wes said, hanging up the phone. He turned around and smiled when he found me standing there. \n\n\"I-I have something to tell you,\" I said. \n\n\"Me too,\" Wes said, grinning. \"You want to go first?\"\n\nHe looked excited, like he could barely hold it in. I decided to let him go first. \n\n\"No, go ahead,\" I said. \"I need some good news.\"\n\n\"Your news is bad?\" he asked. \n\n\"No,\" I lied. \"But yours sounds better than mine. Go ahead.\"\n\n\"I just got off the phone with Johns Hopkins.\"\n\nHoly shit. \n\n\"What did they say?\"\n\n\"They offered me the fellowship. I guess someone else dropped out of the program, and it's early enough that they could take me since I was next on the waiting list. I've been putting off the fellowship at CHOC, hoping I'd get it.\" \n\n\"Wes\u2014that's... I don't know what to say,\" I said. I tried not to sound too shocked. Wes was incredible and smart and charming so of course he'd get the fellowship, but I was also caught off guard. This changed everything. Everything. \n\nWes walked over and wrapped his arms around me, pressing a kiss to the top of my head. \n\n\"'Congratulations, let's have sex to celebrate' probably would work,\" he suggested. I forced a laugh to keep from giving away how fucking terrified I was. Wes read me easily. \n\n\"Babe,\" he said, hooking my hair behind my ear. \"What's wrong?\"\n\nI looked up at him, tears escaping from the corners of my eyes. Traitorous bastards. \n\n\"I-I'm so happy for you, Wes.\"",
        "\"No, that's not it,\" he said, looking concerned. \"Tell me what's wrong. What was your news?\"\n\n\"I, um, forgot,\" I lied as the tears swam in my eyes. I couldn't tell him about the pregnancy. What if he changed his mind and wanted to keep it? He'd give up the fucking fellowship to be here. He'd give up his dream. \n\nNo, I couldn't tell him. \n\n\"Liar,\" he said, frowning. \"Tell me the truth, Celine.\"\n\n\"I'm... I'm going to go to college,\" I said. It was true. I had decided that recently. \"Um, the next coming semester, I think. I already applied.\"\n\n\"Babe,\" Wes said, taking my face in his hands. He pressed a kiss to my lips. \"I'm so happy for you. We'll both be studying, huh?\"\n\n\"You're almost done,\" I reminded him. \n\n\"I'll never be done. I'll always be learning,\" he reminded me. \"Medical journals, studies, new procedures, technology. It never ends in my field.\"\n\n\"Well, I'll never catch up then.\"\n\n\"That's not the point. It isn't about catching up to me. You're going to take your own path, and I'm gonna support you every step of the way. And you know what, Celie? You'll excel, just like I know you will, and I'll be the one struggling to keep up with you.\"\n\nI smiled a watery smile. \"Don't call me that.\"\n\n\"That's my girl,\" he said softly, brushing my tears away with his thumbs. His hands were warm, and I felt my stomach drop from feeling alone, like he was growing hotter by the second, burning my skin. What I really needed was that connection that we had, how our bodies lined up and fit together, how we were two puzzle pieces that interlocked without being forced. \n\n\"Wes, I need you.\"\n\n\"I'm right here,\" he whispered before his lips crushed against mine, kissing me like it'd be our last kiss, like this was all that was left of us, this last moment. We always made love like the world was ending, like there'd never be another chance to be together, but we'd never had a kiss like this\u2014where the world fell away like burnt pieces of paper, crumbling and turning to dust as we concentrated on nothing but these lips, these hungry, aching lips. \n\nWe fell into bed together, tangled limbs and a soul-consuming kiss that burned up inside, setting us ablaze like a roaring wildfire. I tugged his shirt off his body, and he ran his hands along my stomach, making me flinch. I was acutely aware that without sex, he was already inside of me, a part of him growing and needing me in a way that the real Wes never could. I was terrified. \n\nWes looked hurt when I untangled myself from him and got out of bed, rising to my feet. \n\n\"Celine?\"\n\n\"I-I have to go.\"\n\nHe reached out, catching my wrist in his hand. He tugged and I fell into his lap. \n\n\"Something's up,\" he said. \"I want to know what it is. Now.\"\n\n\"It's none of your business,\" I lied. It was absolutely his business. As the saying goes, it takes two to tango, and we'd tangoed like a couple of teenagers. Now I was in this mess and I couldn't even tell him. It wasn't fucking fair, but I cared about Wes more than I cared about what kind of shit I'd be knee-deep in now that I was carrying his child. Women always get stuck with the short end of the stick. A guy could just fuck a girl, live that brief moment of bliss, emptying himself inside of her, and what about the woman? She'd have the confusion, the fear, the loneliness because no one\u2014no one\u2014but her knew what it was like to be fucked over like this. \n\nExcept other women who got fucked over, of course. \n\nAnd I was one of them. \n\n\"Babe, I'm yours\u2014you get that, right?\" Wes said. \"And, you know, I hoped that it meant that you were at least a little bit mine.\"\n\n\"Wes, of course I'm yours,\" I said, looking away. \"I just... You can't get everything, okay? There are some things I want to still bemine. I need to own parts of myself, and I need to have my secrets. Do you understand that, even a little?\"\n\n\"I get that,\" he said. \"I get you needing to be independent, but what about when you're hurting, babe? Am I just supposed to witness your pain and do nothing?\"\n\n\"I'm not in pain, Wes.\" \n\nBut I was.\n\n\"Yes, you are.\"\n\nI felt the weight of the world on my shoulders, and here was Wes trying to share my burden, but for once, I couldn't let him; I couldn't allow him to throw his future away for a small clump of cells growing inside of my body. I had no plans to keep it anyway. I wanted it out of me. I wanted things to be as they were before. \n\nBut something told me that nothing would be the same ever again. \n\nI forced a smile. \"Wes, don't be dramatic. We're five points down in quality assurance at work. I'm fine.\"\n\n\"Promise?\"\n\nMy smile faltered, but only for a second. \n\n\"I promise.\"\n\n\u2014\n\nI carried the secret inside of me. \n\nLiterally. I thought of it as a little bean, a little kidney bean-sized clump of cells that had never been invited to the party. I didn't want it there, didn't want it inside of me, like a little parasite. I wanted it out of me. \n\nWhen I called to make the appointment, they told me to find someone to support me, preferably the father. I would need someone to drive me home and take care of me after the procedure. \n\nI couldn't tell Wes, so I told the one person in the world that I knew I could trust no matter what. \n\nI told Addie. \n\nI'd told her over glasses of fresh strawberry lemonade in her apartment on a Sunday, just a day before the procedure was planned to take place. She had one of those glam apartments, all white furniture, and fuzzy throw pillows and gold accents with marble counters. It was a beautiful little disastrous apartment. \n\n\"You're joking,\" she whispered, and I'd never seen her look so serious before. She was shocked. \n\n\"I'm really not.\"\n\n\"You? Pregnant?\" She sounded dumbfounded. \"That's\u2014that's not possible, is it?\"\n\n\"Birth control isn't hundred percent effective,\" I said. \"It could have been anything, honestly. Maybe the antibiotics I took, fuck, I don't know. All I know is that it crapped on me and now I'm pregnant.\"\n\n\"I mean, there could be worse things than a baby Wes,\" Addie said gently. \n\n\"I'm not\u2014no,\" I said stiffly. \"I can't keep it.\"\n\nAddie was silent for a moment before she spoke. \"Have you talked to him?\"\n\n\"No,\" I said. \"And I won't be. This is my decision, not his.\"\n\n\"Wes would support you,\" Addie said. \n\n\"It's... complicated.\"\n\n\"Fair enough,\" Addie said, looking torn. I understood that Wes was her friend too, but I needed her more right now. \n\n\"I need an emergency contact and someone to drive me home,\" I said, getting to the point of my visit. \"I'd ask Rita, but she's busy planning a wedding. She's stressed enough as it is.\"\n\n\"Fair, fair,\" Addie said. \"But Celine, I have one condition.\"\n\n\"A condition,\" I repeated. \n\n\"Yes.\"\n\n\"Well, what is it?\"\n\n\"If you're going to get this abortion, I want you to get an ultrasound first.\"\n\nMy eyes almost bulged out of its sockets. \"What? Why?\"\n\n\"Because I want you to be sure, hon.\"\n\n\"I am sure,\" I insisted. \"I've thought about this day and night for weeks. I know what I want.\"\n\n\"I think if you heard the heartbeat...\" \n\n\"Addie, absolutely not.\" The anger boiled in my veins, red-hot, and I felt my heart rate spike. How dare she ask this of me?\n\n\"Well, it's my condition. Take it or leave it,\" she said, folding her arms. Jesus Christ, why would she do this to me? I was turning to her because I had no one else. Now I was supposed to waste an afternoon listening to something that didn't even matter to me?\n\n\"I'll go with you,\" she said softly. \"I just... You should be sure, you know? If you want me to be a part of this, I'm only doing it if it's really, really what you want\u2014and you won't know that without seeing that baby.\"\n\n\"Stop calling it that,\" I snapped. \"It's just a clump of cells! It's a fucking fetus is what it is.\"\n\n\"Okay, okay,\" Addie said, backing off. \"Whatever it is, it deserves to be heard. If only once, Celine, it deserves it.\"\n\n\"Addie, I talked with a doctor and a counselor and went over all of my options. I'm absolutely sure about my decision, but if this is really what it's gonna take to get you to support me then fine. Whatever. I'll get the ultrasound.\"\n\nAnd that was that. \n\n\u2014\n\nAddie held my hand in the waiting room, but when a technician called my name, I decided to go alone. This was going to be something that I would need to do on my own. I needed to face the little parasite growing inside of me. I needed to be able to look at it and know with certainty that I did not want it. \n\nI didn't really have a stance in the pro-choice/pro-life debate. I'd never thought I'd be put in a position like this, where it would actually be relevant to me. Now, I was realizing how important it was. I respected those that wanted to keep their pregnancies, and I completely understood those that wanted to terminate theirs. I sympathized with all women in my position.\n\nThe ultrasound transmission gel was very cold, and the technician apologized.\n\n\"I usually keep it warm, but I forgot with this batch,\" she explained. \"Let's see, how many weeks along are you?\"\n\n\"Thirteen,\" I said. I had the abortion planned for two hours from now, but she didn't need to know that. \n\n\"Okay, let's begin. This is the probe. I'm just going to press it on your tummy, and we'll get a good look at Baby, okay?\"\n\n\"Um, okay.\"\n\nShe pressed the probe down on my stomach, and that's when I got the first look at my little parasite. There it was, baby-shaped and everything. I hadn't been expecting that. I'd thought it would still look like a little clump of cells, but it had arms and limbs and a big head and a delicate spine. I could count all the bones if it stood still, but it was constantly moving around. \n\n\"We're going to do what we call a heart tracing now,\" the technician said. \"We'll get the beats per minute. There's Baby's heart, see it?\"\n\nI did. A little heart, beating fast. Thumping, probably faster than mine. \n\n\"Looks like the heart rate is steady. The measurement reads 149 beats per minute, which is completely normal. Let's take a look at Baby. See the ribcage there? Hands, arms, spine. You can make out the brain anatomy here. And the legs! Look at them move.\"\n\nI was silent. \n\n\"There's where the cord is inserting into Baby's tummy. Now, I'll take some measurements.\"\n\nI watched the technician as she explained everything to me as she went. We witnessed my little fetus dance in my womb, moving around so much that it made the technician laugh. \n\nMy heart was stuck somewhere in my throat. \n\n\"Oh, look, we've got the perfect angle to get an idea of the sex of Baby,\" the technician said, excited. \"That's not always possible, and you'll want to wait until 20 weeks to start buying clothes for Baby's gender, but from what I can see... I mean, only if you want to know.\"\n\n\"I do,\" I said breathlessly. \"Please tell me.\"\n\n\"A girl,\" she said, smiling. \"You've got yourself a little girl.\"\n\nMy eyes filled with tears. \n\n\"Would you like to hear her heartbeat?\" the technician asked. \n\n\"P-Please,\" I choked. \n\nThen came the sound, penetrating every corner of the room, so loud, so steady that I felt tears escape from the corners of my eyes. Her heartbeat was wild, untamed, like an uncaged animal, and I instinctively reached to put a hand over my belly, feeling the sticky gel. She was down there, beneath the flesh and hiding in my womb, growing. \n\nA girl. \n\nAddie was waiting for me right outside, thumbing through a magazine in the waiting room. She looked up, caught sight of me, and hopped up to her feet.\n\n\"How'd it go?\" she asked, linking her arm with mine. \n\n\"Fine.\"\n\n\"Have you changed your mind?\" Addie asked. \n\n\"No.\"\n\n\u2014\n\nThe abortion clinic had me sign a lot of paperwork. I didn't even read it. I was too numb. \n\nAddie didn't say anything. She could tell that something had changed, that I'd been altered somehow, right down to my bloodstream where there pumped blood, so much blood carrying right into my belly, giving sustenance to the little girl who no one wanted. The little girl who just wanted to be loved. The little girl who belonged to nobody. The little girl who was too young, too innocent to understand just how hard life could be. \n\nThe little girl I was about to lose. \n\nThe doctor entered the room, explained the procedure to me, and began to pick up the tools. I watched, still numb, still feeling as if time was moving on without me, as if this was all happening to someone else. \n\nI was asked to spread my legs, and I thought of how I'd done this for men, had welcomed them into my body to fill the pain, to fill the emptiness. \n\nAnd now, for the first time in my life, I wasn't empty, and I was throwing it away. \n\n\"Stop,\" I whispered.\n\n\"What did you say?\" the doctor asked. \n\n\"She said stop,\" my counselor said. \"Put down your tools, doctor.\"\n\nClarity came swimming into my vision, and I saw clearer than I ever had in my entire life. The numbness vanished, and my hand went to my belly. \n\nAnd I cried. I cried so hard that they couldn't console me. I cried so fucking hard that they had to ask Addie to come help me. And when she did, I cried into her arms. \n\n\"I can't give her up,\" I sobbed. \"I love her, Addie.\"\n\nAddie held me tightly, stroking my back. \n\n\"I know, babe,\" she said softly. \"No one's going to take her from you.\"\n\nAn entire life of being unwanted, of being treated like some kind of burden, of being that one lost lonely girl... how could I do that to her? To my own daughter?\n\nThe answer was simple:\n\nI couldn't.\n\n\u2014\n\nMotherhood wasn't for everyone. I understood that, respected it, and I knew deep down that if I'd never gone to that ultrasound, my daughter would have been taken out of my body, and I would've never thought twice about it. There was nothing wrong with that either, and I refused to let myself feel bad about it. I was a woman. It was hard enough being shamed by the world\u2014I didn't need it from myself either. \n\nI named her Bean; temporarily, of course, but it fit her nonetheless. Bean with her rapid heartbeat and constant movements, dancing in my womb, like she was always celebrating being alive. I was learning a lot from Bean, like how to be happy for no reason at all. \n\nI loved her. It was a love I couldn't even begin to describe, a love that swam up from an ocean inside of me, and it was an ocean that just couldn't drown me because it wasn't water\u2014it was love. Big love, enormous love. I was constantly overwhelmed by just how much she meant to me. I'd do anything for her.\n\nThe clouds began to roll away, and I felt all the sadness begin to drift away for a while, and then I remembered Bean's father. Guaranteed, he'd love her too. He'd give up everything for her... even his dreams. It killed me to think of Bean growing up without a father, but if he gave up his dreams, there would be countless mothers outliving their Beans. There were things in this world bigger than my Bean and I. \n\nAnd so we sacrificed the life we could have had with Wes. \n\nIn a day's time, he'd leave for Johns Hopkins in Maryland, and it would be the last time I'd ever see him. I'd made my decision, had already planned a future with Bean, a life where we could live with pride knowing that her father was a hero, saving lives every single day. He'd get his training at Johns Hopkins, and then he could work anywhere in the world. He could end up at St. Jude's, something he'd mentioned once in passing. I had no doubt that he'd end up at one of the best hospitals in the world, and from a distance, Bean and I would be proud of him. \n\nBut we weren't going to get in his way. We weren't going to hold him back. \n\n\u2014\n\nThe party was planned by Elena. She was overjoyed for her son, and she wanted to send him off with all of his friends honoring him for a night. It was going to be a classy event, held at an intimate upscale restaurant with an elegant-casual dress code. \n\nWe arrived at The Hobbit in Orange at half-past seven, Addie and Rita carpooling with me from the salon. We'd all gotten our make-up and hair and nails done professionally. Addie looked like a damn queen in her long red sequined gown, like she was Jessica fucking Rabbit. Rita was in an off-the-shoulder mermaid dress, tight on all her curves, which she both loved and hated because she'd had to wear her tightest Spanx. I was simplest of all, black A-line V-neck floor-length chiffon evening gown with cape sleeves. It sounds complicated, but it's just a black dress. \n\nElena was in the restaurant, talking to the staff and going over the wine list. Janie was standing beside her, arms crossed, probably upset over something her mother had told her that she wasn't allowed to do. She perked up considerably when she saw us. \n\n\"Holy shit,\" Janie said, her jaw dropping. \"You guys are too good for this place.\" The host shot her a look, making Addie laugh. \n\nI hugged Janie, blinking away some tears. I had come to love this girl, and tonight would be the last time I'd ever see her. If I was going to keep Bean a secret, I had to cut them all out, including all of Wes's friends and family. It hurt like hell, but if I was going to ensure that Wes had the future he'd always dreamt of, it was what I would have to do. \n\nThe hors d'oeuvres were set on a table, and we all mingled as we waited for the rest of the guests. Wes's friends arrived sporadically; they were surgeons, after all, and their schedules were unpredictable. Wes arrived dressed in slacks and his nicest shirt, a blazer hung over his arm, laughing at a joke that James was telling him. They both looked so handsome, tall and built like runners, lean muscle, and trim waists with arms that could make any human drool. \n\nWes caught my eye from across the room and gave me such a radiant smile that my heart seemed to shatter from it; his Hollywood smile. God, was it really our last night together already? Where had the time gone? He'd come into my life like the thunder and the rain, that deafening laugh, showering me with so much love that it was almost like I was brimming with it, overflowing. I wanted him near me. \n\n\"Celie,\" he said as I approached him. \n\n\"Celine,\" I corrected.\n\n\"Isn't that what I said?\" he asked with an easy, casual grin. \n\n\"Jesus, just kiss me and get it over with already,\" I said, echoing those lines from so long ago when we'd shared our first kiss. He'd been so obnoxious, the creepy stranger who'd returned my car keys and dared to pull me into the farmer's market. I'd bought him that stupid avocado and a coffee, and we'd forgotten about the world around us. What had changed? Nothing. We were still like that, and I was still just as terrified about how I felt about him. \n\nWes kissed me, pulling me into his arms. Our friends made stupid noises in the background, 'Oohs' that made me smile against Wes's mouth. He put his hands on my waist and dipped me, deepening the kiss, and I swear, it was like in the movies. I'd never been kissed like this before. \n\nWhen he pulled back, he pressed his lips to my ear and whispered, \"I love you, Celie. And yes, I'll fucking call you that.\"\n\nI laughed. \"Whatever, Westley.\"\n\nWe had our fancy, expensive dinner. Wes kept putting his hand over mine as we ate, almost like he was making sure that he could touch me, that I still belonged to him. It hurt. It hurt so fucking bad. This was our last night together and he didn't even know it. \n\nI hugged everyone that night. Tight squeezes, and biting back the tears. I would miss all of those surgeons and doctors, those selfless crazy geniuses, the ones that had sacrificed their sleep and sanity to become the professionals they were today. They were my friends; they were my tribe. \n\nAnd I would never see any of them again. \n\n\u2014\n\nWe stumbled into my apartment, Wes a little tipsy from all the wine he'd drunk at the restaurant. I held him up, giggling as he sang \"Dark Side\" by Phoebe Ryan. ",
        "\"At your worst, you're the best,\n\nBaby I, don't want another version, no\n\nAll the love, all the trust, but don't change\n\nDon't be a better person, for me\n\n'Cause I'm in love with your dark side\n\nI'm in love with your dark side\n\nI'm in love with your dark side\n\nSo don't turn on the light\"\n\nI laughed and ended up not turning on the light. Wes dropped his blazer on the floor, turned me around, and unzipped my dress. He pulled the straps down from my shoulder, and I shivered in the sudden cold air as the dress fell to the floor. He pushed my hair aside and kissed the back of my neck, making me gasp. \n\n\"Wes...\"\n\n\"You're mine,\" he murmured, kissing along my neck and then my shoulder blades. \n\n\"Yours,\" I whispered. It was true. I'd always be his. \n\n\"You're the most perfect woman, Celie,\" he said, turning me back around. He walked me back to the wall and caged me in with his hands on either side of my head. I looked up at him, trying so hard not to cry. His gaze was worshipful, and I knew there was nothing in this world he was devoted to more than me. \n\nIf only he knew about Bean. He'd throw away his dreams for her. \n\nI couldn't let that happen. \n\nI took his face in my hands, and pulled him down, crushing my lips desperately against his. I tasted him, red wine and confidence, kindness and compassion, right there on his lips where he wove dreams with his words. I could swallow them all, could collect every last word he was willing to give me just so I could cherish them for Bean and me. \n\n\"Tell me you love me,\" I choked when I'd pulled back. \n\n\"I love you,\" Wes said gently, his eyes soft.\n\nI love you, too.\n\nI love you so fucking much. \n\nFor so long, I'd loved him. Too afraid to face it, too afraid to give in and trust someone with my heart. But there was no more denying it. \n\nI loved Dr. Westley Spenrath. \n\nI just couldn't say it. I wanted to. God, how I wanted to. I wanted him to know that he was loved, that he was wanted, that he was my entire fucking world, but I couldn't. \n\nBecause this was goodbye. \n\n\"Make love to me,\" I said breathlessly.\n\nHe picked me up, I wrapped my arms around his waist, and somehow we made it to the bedroom, mouths locked in the darkness. I ended up on the bed, my panties pushed aside, his slacks still on, zipper and button undone, and then he was inside of me, his cock already thick and hard. His belt slapped my skin as he fucked me. \n\nI whimpered, suddenly unable to stop crying.\n\n\"Christ, Celine, did I hurt you?\" he immediately asked, stilling. \n\n\"Don't stop,\" I said, wrapping my legs around him, grinding down on his cock. The tears were streaming down my face. \n\n\"Celine,\" he said, so seriously that it stunned me. \"You're hurting.\"\n\n\"It's not you,\" I said. \"It's me.\"\n\n\"Babe, what are you talking about?\"\n\n\"This... this is the last time, Wes. I can't\u2014I can't do the long distance thing.\"\n\nI saw him flinch, as if I'd slapped him across the face. He pulled out from inside of me, and I felt the emptiness instantaneously. I knew he wouldn't enter me again. I watched as he silently sat back on his knees and zipped up his slacks. \n\n\"Wes...\"\n\n\"I understand,\" he said, his voice thick. \n\nA part of me wanted him to fight for us, for me and Bean, but he didn't know about her, and I wasn't going to tell him. I wanted him to change my mind, to make it impossible for me to keep this secret to myself. But this was bigger than me. \n\nAnd this was bigger than Bean. \n\n\"I love you,\" he said. \"I always will.\"\n\nHe crawled over and kissed me, pulling me into his arms as I cried. I'd just broken his fucking heart and he hadn't fled; he was still here, making sure that I was okay. Selfishly, I took what he gave me.\n\nHis time. \n\nWhen I woke up the next morning, he was gone. \n\n\u2014\n\nWe've all quit something. \n\nSmoking, soda, sugar. The three S's. But how do you quit the 4th S\u2014the biggest one? \n\nSomeone.\n\nQuitting someone is fucking hard. It comes with its own withdrawal symptoms, the kind where you feel something eating into your bones, biting under your skin, making it impossible to feel anything but the pain of their absence. The emptiness is as wide and as vast as an ocean... the kind that can drown you. \n\nAnd that's exactly what happened: I started drowning again. \n\nWes left the next morning on a plane to Maryland, and I sat in my apartment, hugging my knees and watching something on the History channel, something about aliens probably, and the world seemed to pass me by. As ancient Egyptians built their pyramids with the help of aliens, it began to rain and I found that it became increasingly harder and harder to see clearly. \n\nI was crying. \n\nHis plane was halfway across the country when I reached for my phone to call him, to beg him to please, please, please forgive me and to take me back. I wanted it to be us again, to see his stupid Hollywood smile, to see the weird way he'd walk with a spring in his step when he was happy, to laugh and laugh and laugh at all of his jokes, even the ones that we so lame that I had to cringe. I wanted to experience what it felt like to belong to Wes again. \n\nBecause belonging to him meant that I belonged to somebody who loved me. \n\nBut Bean and I had to let him go. We couldn't shatter his dreams, couldn't reel him back to us like he was some kind of catch because he was meant to be so much more than ours. He was meant to be the world's, and he was meant to save it. We couldn't starve the world of someone like him, someone so selfless and kind and generous. There were kids out there that would need the opportunity to live. \n\nBean and I would be just fine.\n\nAt least, that's what I told myself as I forced myself to move on. I signed up for college to start the next fall after Bean was born, and slowly taught Bethany everything I knew so that she'd be able to take over after me. I was going to be leaving the call center in her experienced, trustworthy hands. I wouldn't be coming back, not to that position, anyway. I'd finally get the opportunity to climb the corporate ladder after college, with the help of Flynn Hawthorne, the young VP from the eastern offices. He'd been making a lot of promises, and with assistance from a good lawyer, I was able to secure a nice contract that would make the company deliver on each and every one of those promises. In just a few years, I would be qualified to climb all the way to the fucking top. \n\nAs I reached the fifth month of my pregnancy, I began to show. All the peplum dresses in the world couldn't hide a pregnancy bump, so I gave my two weeks, left a detailed binder full of advice for Bethany, and hugged everyone goodbye.\n\n\"I never thought I'd see you walk out those doors for the last time,\" Bethany said with a sniffle. We were in the break room, eating cake. Most of the supervisors were with us. \n\n\"I'll be back,\" I said. Damn these pregnancy hormones. I was pretty close to crying myself. \n\n\"Yes, Terminator, you'd better,\" said a voice from behind us. It was Addie, holding up one end of a giant card. At the other end was Rita. \n\n\"From all of us,\" Addie said, tears in her emerald eyes. \"To the best boss ever.\"\n\nThe card was signed by every single person in the company. Even the CEO had signed it, though I'd only seen him over the years in meetings and had never known him personally. Then came the people, sharing stories, making speeches.\n\nI'm a single mother of three kids. I could barely feed them, much less myself, when I started working here. You saw my potential and gave me managerial training. Now, I'm a claims manager. Thank you for changing my life, Celine. \n\nI was a young kid fresh out of high school with no future. You gave me one, Celine. \n\nWhen my father was dying, you approved my extended leave of absence personally. You understand what it means to be human. Thank you for giving me those precious last few months with my dad. \n\nYou taught me how to sell insurance, and now I'm a manager in the sales department. You believed in me when no one else did. You gave me a chance when no one else would. Thank you. \n\nI tried not to cry, but how could anyone help it? So many people had walked in through those double doors of the Floor, and their lives had all touched mine. I just never knew that I had touched their lives too, not this much, anyway. I'd always thought I'd just been doing my job, looking out for the company, training those that showed potential. There had always been more to it. \n\n\"Thank you for seeing the best in all of us,\" Bethany said, her eyes swimming with tears. \"You were the best thing about this company. The Floor will be a dimmer place without you in it.\"\n\nAs per protocol, Bethany walked me out of the break room and through the Floor\u2014my final walk. I handed my walkie talkie over to Bethany and she handed hers to Addie, who would be taking over her position as Senior Supervisor. She took my badge, and then as we walked down the Floor, the agents, nearly three hundred of them, all rose from their chairs and clapped. \n\nBean turned over in my belly, just as moved as I was. \n\nI hugged Gary, the head security guard, and Rita and Addie carried my giant card to my car. I looked up one last time over the Administrative Office, at the University building and the Cafeteria, at the beautiful grounds with the greenery and the water fountains. I watched as the resident ducks waddled by, and smiled through my tears, catching sight of signs from the third floor, my Floor, with signs of \"Goodbye Celine! We love you!\" taped to the windows. I laughed. So not allowed, but it wasn't my department anymore. \n\n\"Please tell us you changed your mind,\" Rita said, her lower lip trembling. \n\n\"Yeah, this is like some kind of prank, right?\" Addie chimed in. \n\n\"This baby needs me now,\" I said, placing a hand over the small swell of my belly. \"Bean and I have to build a life for ourselves. Long hours at the office... I can't do that anymore.\"\n\nAddie and Rita were the only ones who knew about my pregnancy. I'd sworn them to secrecy. \n\n\"I don't know what you guys are complaining about. I'm literally moving closer to the two of you,\" I reminded them. We'd decided that it'd be best if I moved to a point between the two of them. I'd need the support now more than ever. Pregnancy was no fucking joke. I needed help. \n\nI needed my best friends. \n\n\"Who's gonna drink that disgusting sea cream black coffee from 7 Leaves?\" Addie asked, crying. \n\n\"And who's gonna bark like a rabid dog when we go a point below in quality assurance?\" Rita asked, her face scrunched up from holding in her tears. \n\n\"Who's gonna buy the department pizza whenever Portal crashes?\"\n\n\"And who's gonna walk the Floor breathing fire down everyone's backs at the buttcrack of dawn?\"\n\nWe all laughed; we all cried. \n\nThe girls hugged me, sobbing, and I wiped my eyes before starting up my car. The card had been stuffed into the back seat. As I drove away, security saluted me from the guard post, the gate arm lifting for the last time to let me out. I waved, gulping down breaths, turning onto the road. \n\nIt felt like my life had ended. \n\nMy hand protectively covered my belly. \n\nAnd a new one had begun. \n\n\u2014\n\nI moved into my new rented townhouse in Yorba Linda, right up in the hills so I could be reminded of Bean's dad every single morning when I looked out my window into the world. I remembered his apartment on the hill, the one that looked over the very mountains that I now lived on. I could almost pretend that he was still there, looking up at the mountains as I looked down at his hills. \n\nOnly Addie and Rita knew where I'd moved, and honestly, I only spoke to Addie and Rita these days. They helped me pick out the baby stuff, all the latest technology that overwhelmed me until they were delivered and I read the manuals. On a sunny Saturday, Rita and Addie came and helped me paint the nursery yellow. Rita, who'd always been artistic, painted a mural of zoo animals on one wall. We assembled the crib with Brian's power tools, and it was nice doing it ourselves. \n\nAs we planned for Bean, we also planned for Rita's wedding, which would take place approximately three months after Bean would be born. Rita made Addie and me go check out venues with her and Brian. As we visited venue after venue, the rustic ones and the glam ones and the elegant ones, I realized how this might've been something that Wes would have wanted: happily ever after. \n\nAnd I'd gone and broken his fucking heart. \n\nI still remembered the look on his face, as if I'd kicked him in the soul. The pain in his eyes had been immeasurable, an ocean of grief, swallowing me, drowning me. And sometimes... sometimes it got hard and I wanted to give in, wanted to drown. \n\nBut I had Bean. \n\nShe was the light at the end of the tunnel, my reason for living. I thought of her, this little girl, so innocent, so helpless, so... mine. Never, not ever, would she feel alone. I'd always be there for her, and hell, I was a strong woman; if I could fill the role of a mother, I could damn well fill the role of a father too. What was there to it? Teach your kid how to throw a ball? Talk about how shitty boys were? Teach her how to change a tire? \n\nI could do all that. \n\nI didn't need a man. \n\nBut I wanted one. I wanted Wes. \n\nHe just wasn't mine anymore. \n\nSometimes I'd lie awake at night, staring up at the ceiling, wondering if he thought of me too, or if his busy life had led him down a path that I couldn't ever follow. What if he'd met someone already? There were smart brains like him at that institution, and no doubt, there'd be staff he'd run into on a daily basis that would want him. He was beautiful\u2014not just handsome, not just easy on the eyes, but also kind and selfless and giving. He had that casual, easy way of talking to people, and it was in that casual, easy way that he'd burrowed himself under my skin. He lived within me, making my heart beat, a ghost in my every breath. \n\nHe haunted me. \n\nAnd I loved him, a man that I'd never see again. \n\n\u2014\n\nIt was a frigid sort of day, and I was feeling like a frigid sort of woman. \n\n\"Which one?\" Rita asked, holding up two bridesmaid dresses. Both were frumpy and drab. \n\n\"Neither,\" I said. \"They're hideous and you know it.\"\n\n\"You're going to have to meet me in the middle here, Celine,\" she said, sighing. \n\n\"Stop ruining her day,\" Addie snapped at me. \"You're not getting away with being a bitch just because you're pregnant.\"\n\n\"I'm just being honest,\" I said defensively. \"Why am I the one choosing my bridesmaid dress, anyway? Isn't that supposed to be Rita's job?\"\n\n\"Not in my wedding,\" Rita said. \"My cousin chose our dresses for her wedding and we all looked like squashed cupcakes, which she absolutely did on purpose so she could look the best. Fuck that noise. I picked a color, now get off your ass and pick a dress, Celine, or so help me god\u2014\"\n\n\"Okay, okay,\" I said, and groaned as I pushed myself up from the plush armchair I'd been sitting in. We were in a boutique in Anaheim, and Rita's sister, three cousins, and Addie were all in the store going through dresses. I'd located the nearest seat and had planted my butt down in it. \n\n\"Jesus, Celine, you just get huger and huger every day,\" Addie said with a smirk. \n\n\"Thanks,\" I said dryly. \"It's not like I'm eight months pregnant or anything.\"\n\nMy feet throbbed as I waddled through the store. They'd become so swollen lately that it hurt to walk, and I couldn't even begin to describe the pain in my lower back. \n\nI loved Bean, but I didn't love being pregnant. \n\n\"You look like you swallowed a watermelon,\" Rita said with a giggle. I flipped her off and started trudging up the stairs to the second floor. The first floor was mainly wedding dresses, and the second floor had all the bridesmaid dresses. Rita and Addie had been going up and down the stairs to show me dresses, but they could only do that so many times before they lost their patience. I didn't exactly like anything they'd brought down. \n\nI'd have to go see myself. \n\nI was out of breath when I reached the top of the stairs. When you start carrying around an extra thirty pounds, you tell me if it isn't harder to go up a flight of stairs. \n\n\"Are you okay?\" asked Cynthia, Rita's older sister. \n\n\"Fi-Fine,\" I huffed. \"Thanks. I'm just gonna look around.\"\n\nFor the next half an hour, I walked around the store and eventually ended up in the back, looking for something that wouldn't look terrible on my new body type. I'd always been tall and athletic, but now I had a curvy body to think of. Pregnancy curves didn't always go away. Sometimes those baby-bearing hips stayed with you. \n\nRita had picked sky blue for her summer wedding's bridesmaid dress color. It wasn't the most flattering color on me, but her wedding day wasn't about me. I began to go through some dresses in the back when I heard glass break. I looked to my right and lost my breath. \n\nIt was Elena. A glass of champagne she'd been sipping was now shattered on the floor.\n\n\"Celine,\" she said, shocked. \"You're\u2014\"\n\n\"I have to go,\" I said and swept past her, tears already pricking in my eyes. \"Bye.\"\n\n\"Celine, wait!\"\n\nStanding at the top of the stairs was Janie, her eyes already brimming with tears. \n\n\"Celie,\" she said, and I brushed past her too. She reached out, closing a hand around my wrist. \"Celie, please\u2014\"\n\n\"Let go of me!\" I said as the tears began to fall. I struggled out of her grasp, and she let go. \n\n\"CELINE!\" Addie screamed from the bottom of the stairs. \n\nBut it was too late. \n\nI was already falling. \n\n\u2014\n\nWhen I came to, there was blood between my legs, flowing in rivers right onto the cold tiled floor. The paramedics lifted me onto a stretcher, and I sobbed, gripping one by the arm. \n\n\"Save my baby,\" I cried. \"Forget about me, okay? Save my baby!\"\n\nAnd then I fainted again. \n\n\u2014\n\nI woke up just as I was being wheeled into an operating room. \n\n\"Bean,\" I gasped, realizing why I was here. \n\n\"It's okay,\" a nurse said, taking my hand. \"You're okay, honey.\"\n\n\"My baby,\" I said, crying. \n\n\"We're doing the best we can,\" a doctor said, and then turned and nodded to a man in scrubs. It was the anesthesiologist. \n\n\"Count back from one hundred,\" he said, and a nurse put a breathing mask over my mouth and nose. \n\nOne hundred, ninety-nine, ninety...\n\n\u2014\n\nI woke in a dark hospital room with the beeping of a heart rate monitor penetrating my ears. I was bandaged up and the pain was eating away at my bones\u2014but I couldn't think about that. The first thought on my mind was Bean. I put a hand over my belly and hoped against all hope that she was still there. \n\nBut I was in so much pain that I couldn't tell. \n\nI fumbled around, looking for the remote so I could press the button to call a nurse. \n\n\"Baby's fine,\" said a voice from a corner in the room. Sitting on a chair in the dark was Rita, her eyes red from crying. \n\n\"Is she still in there? Inside of me?\" I asked in a voice thick with tears. \n\n\"Yes, but you really scared the shit out of us, Celine,\" she said, beginning to cry. \"We thought we'd lost you... both of you.\"\n\n\"Where's Addie?\"\n\n\"They would only let family in,\" she said, wiping her tears. \"If anybody asks, I'm your older sister.\"\n\nI laughed, and then Rita did and a moment later, a nurse peeked his head in. \n\n\"Feeling better?\" he asked. \"You gave everyone a good fright.\"\n\n\"Is my baby really okay?\"\n\n\"Your baby is just fine. Gotta be one of those miracles,\" he said. \"Doctors were puzzled. Anyway, you've got a few people in the waiting room.\"\n\n\"Is there a redhead there? Her name's Addie. Please let her in.\"\n\n\"That smart-mouthed\u2014?\" the nurse began, clearly well-acquainted with her already.",
        "\"Yes, that one,\" I said. \n\n\"There might be someone else you should be seeing first,\" the nurse said. \"There's a man out there...\"\n\n\"No,\" I said quickly. \"No men. Just Addie, please.\"\n\n\"You sure, honey?\" Rita asked. \"He's been waiting for hours.\"\n\n\"I...\" But I couldn't find it in me to think up an excuse. \n\n\"I'll go get him,\" the nurse said, and Rita rose to her feet. \n\n\"I should go too,\" she said, and walked over and kissed my forehead. \"Try not to have make-up sex in a hospital.\"\n\nI shot her a look and she laughed as she left. \n\nThe second she was gone, I felt the fear claw up from my chest, and a million thoughts began racing through my head. I knew exactly who they meant by \"there's a man\" because there could only be one man who'd be waiting outside to see me. I looked down at my bandaged body, broken but somehow still strong enough to carry my baby to term. I could feel pain on my face and knew that I was likely bruised... I was ugly. I'd never really cared much about how I looked on the outside. A little makeup to look presentable, some curling of the tips of my hair to look like I tried\u2014but other than that, what was I outside of business suits and unflattering maternity clothes? Everything I'd bought had been for comfort, and now I was lying here in a hospital gown, broken and bruised and ugly.\n\nI couldn't understand why it mattered so much. I hadn't seen him in months, and I guess a part of me had always imagined that if we ever ran into each other again, I'd be my old self: strong, put-together, confident. I was no longer any of those things. I was still shaken up over what had happened. \n\n\"You know, in the medical world, this is what we call job security,\" said a deep voice from the direction of the door. I looked up and found Wes standing there, leaning against the doorway, arms crossed, eyes red from crying. I knew him well enough to know that cracking a joke was just his way of trying to keep himself together. \n\n\"G-Get out,\" I whispered. \n\n\"Not a chance,\" he said, striding into the room. He glanced at my belly, protruding with his child, and a flash of pain crossed his face. I read that as disgust. He was disgusted by my condition. After all, we'd never planned for this baby. The only Celine that Wes knew was one that had sworn up and down that motherhood would never be in the cards for her. \n\nWes was at my side before I could protest again. I looked into his eyes, the saddest blue I'd ever seen, and felt tears prick in the corners of my eyes. \n\n\"Celie,\" he said, brushing his knuckle down my cheek, wiping away a tear that had escaped. \"Don't cry. It's okay.\"\n\n\"Don't call me that,\" I responded, my lips trembling. He managed a half-hearted grin, but I could see that he was still struggling to keep his composure. \n\n\"Why didn't you tell me?\" he asked very suddenly. I looked away, staring at the wall to look at anything but him. \n\n\"Not yours,\" I whispered. \n\n\"What?\"\n\n\"She's not yours,\" I said, wiping my eyes. It was no use; the tears wouldn't stop flowing.\n\n\"A girl,\" Wes said, his voice cracking. \n\n\"Yes, and she isn't yours,\" I repeated. He shouldn't have come. I'd sacrificed him for the greater good. It was out of character for me, something so selfless that the old me wouldn't have even considered it\u2014but it was all done and over with now. All those months of crying myself to sleep, of my heart seizing whenever I thought of him, were all in vain. I should have known that the universe never cared about what I wanted. \n\n\"Liar,\" Wes said. I looked at him and found his eyes were brimming with tears. \n\n\"She's mine,\" I said, my lips trembling. \"Just mine.\"\n\n\"She's mine too,\" Wes said, taking my hand. He kissed it, and I felt my skin burn. Even after all this time, he could still set me on fire. \n\n\"I-I met someone,\" I said, scrambling for an explanation. I tugged my hand out of his grasp. \"After we broke up. It... It's his baby. Not yours.\"\n\nWes smiled, tears running down his cheeks. \"That math doesn't add up.\"\n\nI wiped my nose with the back of my wrist, sniffling. \"It does,\" I lied.\n\n\"You look really pregnant, Celine,\" he pointed out. \"There's no way you're only four months along.\"\n\nWas that really how long it had been since I'd last seen him? It burned. Four months without him had been near torture, but I had endured it. For him, for Bean, for the world that would need a skilled surgeon to save its children. \n\n\"What do you know?\" I said. \"I... I just got fat, okay?\" \n\nWes snorted. \"I've delivered babies before, Celine. You're almost to full term,\" he said. \"Don't think you can sit there and lie to my face. It won't work. That baby is just as much mine as she is yours.\"\n\nI put my face in my hands and cried. I was frustrated. I'd never been much of a crier, but here I was, crying because I couldn't win. I wanted him to believe me and then go back to his new life in Maryland. He had a fellowship at a very prestigious institution that he needed to return to and focus all his attention on. A broken woman and a baby was the last thing he needed. I'd been reading every spare second, and I knew for a fact that newborns were no fucking joke. They required constant care, and as someone who'd quit her job and pushed school to the fall, I was prepared, but Wes? Wes had hardly had a life in residency, so there was no doubt he wouldn't have much spare time during a fellowship either. \n\nHe couldn't do this. I wouldn't let him. \n\nBefore I could say or do anything, I felt gentle hands wrap around my wrists. Each movement was deliberate, confident, like he'd done it a thousand times. His hands were steady even without a scalpel held in them. He pried my hands from my face, and I saw that he was crying. \n\n\"I love you, Celine,\" he said. \"More than you could possibly imagine.\"\n\nI love you, too. So fucking much. \n\n\"Your fellowship,\" I whispered. \n\n\"Fuck the fellowship.\"\n\n\"No,\" I immediately responded. \"No, Wes! You earned your spot. You have to complete it and save lives, Wes.\"\n\n\"Right now, the only lives I care about are yours and our child's. Forgive me if I can't look that far into the future when the woman I love is heavily pregnant and lying in a hospital bed. I still can't understand why you would do this, Celine. Why didn't you tell me?\"\n\n\"That fellowship is your dream, Wes.\" \n\n\"No, Celine,\" he said softly, taking my face in his hands. \"You are.\" \n\nMy heart could have burst. It was everything I wanted to hear; it was everything I didn't want to hear. \n\n\"Wes, the world needs you more than me...\"\n\n\"I don't care. I need you and I'll fucking rewrite the stars themselves if I have to,\" he said, pressing his forehead against mine. I looked into his eyes, and felt his love wash over me like a strong current... only this time, it couldn't have drowned me.  \n\nIt saved me. \n\n\"I love you, Wes.\"\n\nHis pupils were blown wide from crying, but somehow, my words shocked him enough that they looked as if they might burst. I glanced at his lips, he glanced at mine. \n\n\"Are you gonna kiss me, Gutierrez?\" he asked. \n\n\"Only if you kiss me back,\" I said. \n\n\"Deal.\"\n\nHis lips touched mine, and my heart burst into flames. \n\n\u2014 \n\nThere's an old Cherokee tale about two wolves. It's said that inside every person there is a dark wolf, representing every terrible characteristic, and then there is a light wolf, one who stands for humility and compassion and kindness, and everything good. The wolves are in a constant battle with each other. Want to know which one wins?\n\nThe one you feed. \n\nI'd been feeding the dark wolf for most of my life, and because of that, I'd ended up with all those ugly feelings: loneliness, sadness, anger, resentment. I'd carried those feelings that had weighed so heavily on me that for every step I took, I sunk deeper into the ocean, deeper into the water. For the longest time, the light wolf inside of me had been ignored, starved, forgotten\u2014just like me. \n\nWhen I began to feed it instead, that's when things changed. The good feelings began to surface: happiness, tranquility, positivity, love. It was Wes, actually, that had taught me how to feed the light wolf. He was gentle yet pushy, barging into my life in a whirlwind of sex and avocados and long days at the beach. He was the ice cream on a hot summer day, the most wonderful, delicious piece of chocolate you could imagine. He taught me that to feed the light wolf, you had to embody it. You had to become kindness, you had to become happiness. And once you did, it became a part of you. \n\nIt was a no-brainer that I'd pack up and immediately move to Maryland. I followed my heart, and my Heart had a fellowship to return to. After I was discharged from the hospital six days after the accident, I boarded a plane with the father of my child, holding his hand tightly as the plane took off. He squeezed my hand to reassure me that everything would be okay, and I believed him because I knew that as long as he was there, everything would be fine. \n\nWhen we got to Baltimore, it was apparent that Wes's apartment was not ready for a baby\u2014but he had been ready for me. Everywhere I looked, there were the comforts of home. My favorite cookies in the pantry, my favorite tea, my favorite candles in the living room, an extra pair of house slippers just my size waiting by the front door. \n\nWes shrugged, grinning. \"I hoped you'd come home eventually.\"\n\nI threw my arms around his neck, kissing him all over his face, overjoyed to be in this moment, to be with him. He put his hands on my waist, probably wider than the last time he'd put his hands there, and steadied me as I swayed. \n\n\"Can I have this dance?\" he asked. \n\n\"Yes,\" I said breathlessly. Honestly, anything he asked for, I was willing to give. I owed him so much. \n\nHe began to hum and I playfully kicked him in the shin. \"My Heart Will Go On\"? After all this time, he still hadn't learned how much I hated that song? He laughed anyway, his body shaking, and kissed me on the cheek. \n\n\"No music,\" I said, holding out my arms. He took them, guiding one on each of his shoulders. \n\n\"No music,\" he agreed, putting his hands back on my waist.\n\nWe swayed in his living room, no music, nothing but our heartbeats to guide us. I was looking into his eyes, a blue so blue that it was pure. The longer we stared into each other's eyes, the pinker my cheeks became. I wasn't really one to blush\u2014Dragon Lady and all\u2014but with us swaying there, standing so close, I felt the heat crawling up my neck. My hands glided up from his shoulder until I had his face in my hands. \n\n\"I love you, Wes,\" I said, and as I blinked, a single tear slid down my face. Wes wiped it away with the pad of his thumb. \n\n\"I love you, head, ribs, fingers, toes and all,\" he said. \"So much, you have no idea.\"\n\n\"I'm trying to understand,\" I said, pulling his face down. I kissed him; soft, sweet, slow. \"Help me learn, Wes. I'm not... good at this.\"\n\n\"There's nothing to it,\" he assured me. \"All you have to do is let go. Whatever tries holding you back, bark at it to fuck off.\"\n\nI laughed. \"Kiss me, you goof.\"\n\nAnd he did. It was a kiss of the ages, the kind of kiss that put other kisses to shame. His lips were hot against mine, pliant and giving; searing, scorching. The cold and fucked-up world melted away like butter, smooth and bright as sunlight, filling me with a warmth that spread from my fingertips to my toes. I knew it wasn't easy to love me, knew I was difficult and mean and stubborn and moody, but Wes had picked me anyway. He'd picked me, and now I was being kissed as I'd never been kissed before. He deepened the kiss with each passing second, drawing my breath from my lungs, kissing me until I was hopelessly breathless, barely able to breathe. \n\nWhen he pulled back, his pupils were blown wide, and his lips were swollen. He had a soft smile on his face. \n\n\"You're everything, Celine,\" he said, his forehead coming down to lean against mine. \"Everything.\"\n\n\"You're making me cry,\" I said, and it was true; I was dangerously close to bawling. I'd never been so emotional in my fucking life. This was what I'd been searching for: this completeness, this wholeness, this fullness. I'd been so lost without him, but right there in that crowded farmer's market, the pervert with my keys in his hand, grabbing my bag and yanking me to a halt, right there my life had changed. I'd bought him that avocado and that coffee, and the rest, as they say, was history. \n\nAfter these last few months of heartache, I'd learned my lesson. It wasn't that I couldn't live without Wes. I certainly could. But it'd be a dreary, broken, sad existence. I didn't want to live without him. I could, but I didn't want to, and that mattered. It mattered to follow my heart. \n\nWes picked me up, and before I could really prepare myself for what was about to happen, I was in his bed. I looked up at him with what I hoped were bedroom eyes. He began to undress me, gentle but a little hurried. I helped him. The anticipation was already killing me. With each passing second, his lips trailing over my bare shoulders and up my neck, I felt myself shiver, the heat traveling right down to the taut muscles inside me, right between my legs. It was slick there, the result of my growing arousal. \n\n\"Wes,\" I moaned as he nipped my throat with his teeth. \"Hurry.\"\n\nHe sat back, grabbed his shirt from the back, and pulled it down over his head. Next off were his jeans, and then his briefs. I was already naked beneath him. He gently ran his hands over my belly, leaning down to kiss it, and then spread my legs, bending down and pressing his hot mouth right against my sopping wet slit. I let out a sharp gasp, trying to put my hands in his hair, but I couldn't quite reach because my elbows bent awkwardly around my belly. I gripped the sheets instead, throwing my head back as he began to eat me out, his tongue working wonders on my sex-deprived pussy. His hands were on my thighs, pushing them farther apart, fingers digging into my skin. \n\n\"Please,\" I said, not even sure what I was pleading for. I just knew that he couldn't stop or I'd scream. \n\nMy pussy was sensitive, and it had been so long since I'd last come that as soon as his tongue roughly circled my clit, I came with a cry and a shudder, shutting my eyes to ride out my orgasm on his face. I was grinding up on him, my hips lifting off the bed, toes curling. The spasms in my pussy were empty, and that was when I knew I needed him inside of me. \n\nWes seemed to understand. He climbed into bed with me, spreading my legs further apart with a nudge from his knees. He looked powerful above me, his body corded with muscle, stomach flat, waist trim, looking at me with such lust that I forgot for a moment that I was this big awkward pregnant thing. He leaned down, kissing me, tasting me, making the heat spread all over my body as he slipped two of his fingers inside of me, curving inward. I gasped. \n\n\"Wes, please,\" I begged. But he didn't seem to hear me and put pressure down, jerking his hand, fucking me hard there, just there. I came again almost instantly, this time squirting right into his hand. Tears slipped from the corners of my eyes, my pussy still clenching on his fingers, desperate and needy. \n\n\"Please,\" I whimpered. \n\n\"Shh, it's okay,\" he murmured, kissing me. His hands ran over my belly again, and I realized it was the first time that he was really seeing my pregnant belly with my clothes off. He looked at me in awe, as if he couldn't believe how much my body had changed to accommodate his child. There was warmth in his eyes, and I knew that his heart was as full as mine was. We'd made this; we'd made Bean. \n\n\"I've missed you like you wouldn't believe,\" he said hoarsely, running his hands down my body. \n\n\"I missed you too,\" I said. \"I was... I don't know what I was without you.\"\n\n\"You love me,\" he said with a sudden grin. \"I still can't believe it.\"\n\n\"You probably knew it long before I admitted it to myself.\"\n\nHis gaze was worshipful. \"I might have had some idea, yeah.\"\n\n\"Come to me,\" I said, holding out my arms. He melted into them, supporting himself with his arms, his cock sliding between my legs, making me squirm. I didn't want to squirm; I wanted to come again. \n\n\"Patience, baby,\" he said softly, and planted a kiss on the tip of my nose. It made me laugh. \n\n\"How can you restrain yourself?\" I asked, surprising us both. \n\nWes raised an eyebrow, impossibly amused. \"Okay, enough talking,\" he said, and pressed his lips to my neck, kissing, nipping, biting and sucking. I closed my eyes, toes curling again, and gave into the pleasure. I did my best to wrap my legs around him, and he began to grind his cock down between my legs, right along the slit of my wet pussy. It was heat unimaginable, a sickeningly beautiful moment that made me sigh because he was here and this was now and it was ours. \n\nWhen he finally entered me, we both let out a hiss of satisfaction, clutching at one another. The friction slow, drawn out, was enough to numb my mind. It felt like a borrowed moment from the heavens, as if this was something so beautiful and so pure that it only belonged in the afterlife. My fingers dug into his back, his hands gripped the sheets, and he made love to me, driving inside of me with careful, deliberate movements. \n\n\"Wes,\" I moaned, and it could have been nothingness, could have been something unintelligible because he didn't hear me anyway. He was concentrating, looking at me like I'd brought him the moon. My heart had been a desert, this barren hopeless land, but then Wes had come and made life grow, and the moon was the moon no more; it was lush, bursting with life, more than just a lonely rock orbiting in space. It was more than what it was, more than being in something else's orbit. \n\nIt was me, and I was it. Free at last. \n\nWes and I adjusted, getting familiar with one another again, our bodies moving in slow grinds as he snapped his hips, making me shift mine off the bed. His pace quickened, and so did my breathing, and in one swift motion, I was a shuddering mess, feeling his cock hit that spot, making me shatter. He always knew how to find it, always searched for it, and when he did come across it, he was relentless, pounding into me, making me cry out. I gripped his shoulders, fingernails leaving crescent marks behind, little slivers of moons, leaving my mark. \n\nHe was mine.\n\nAnd I was his. \n\nI writhed under him, my pussy clenching around his thickness. His hands visibly shook, his breath wild as he moved in me, kissing me almost roughly, mashing his lips against mine, and in seconds, his tongue was sliding against mine as we tasted each other. I anticipated each movement, feeling the bulge of his cock hard inside of me, filling me and filling me. Just when I thought I'd come again, he withdrew and helped me to my knees, and when he entered me from behind, it was a whole other experience. He was deeper, and we seemed to... drift. I could smell his spicy aftershave, could smell our coupling in the air, thick and hazy, making me dizzy with desire. \n\nMy bones seemed to ache from the feeling of his stomach muscles clenching hard against my back as he rutted into me. This was biblical, and he was the fallen angel that had become the demon, damning me, damning us. I pushed my ass back against his cock, and we found our rhythm, bodies slapping, panting and grunting in the darkness. \n\nThis was heaven. \n\nThis was hell. \n\nHe was thrusting into me and with each passing second, I came closer and closer. I was whimpering, my entire body a mess of tightened muscles. An all-encompassing moan left my lips as his fingers found my clit, and as he rubbed, circling it, I came. ",
        "Blinding gratification. Earth-shattering spasms. A delicious high, an overdose of emotions. \n\nWith a soul-tugging groan in my ear, he came. I could feel his cock jerking inside of me, filling me with his seed. \n\nFire. We were fire. \n\nHis name was on my lips, but I couldn't say it; I couldn't say anything. What had just happened? We'd transcended above where sex was supposed to take us. We'd hit a new high, had connected so deeply that it felt as if we'd become one. I could feel every pulse inside of me, could feel every grunt and groan slip underneath my skin, could feel his taut muscles flush against my body. \n\nThis wasn't sex. \n\nThis was destiny.\n\n\u2014\n\nThe day that Wes returned to the hospital, my contractions began. It was mid-morning, right as I was sitting down for breakfast when I felt it slam into my body like a fucking truck. I breathed harshly, completely taken off guard. It was painful, but it could've been nothing. When it happened again a couple of minutes later, I knew. \n\nBean. She was coming. \n\nI went and packed myself an overnight bag, taking all the things I'd planned. Some extra clothes, toiletries, a few outfits and booties and headbands for Bean to wear in the hospital. I packed up everything I needed, all the while biting my lip through the contractions, needing to sit every time one rolled through my body. It was excruciating. \n\nI called Wes. \n\n\"Hey, babe,\" he said, and I could hear the click clack of a computer keyboard. He was likely researching for surgery or doing reports. \n\n\"It's time, Wes.\"\n\nThere was a pause. \"Now?\"\n\nWe were two weeks early, but Bean was ready. Another contraction, and I was left groaning and gasping. \n\n\"Yes, now,\" I said through gritted teeth. \n\n\"Fuck, holy fuck,\" he said, suddenly sounding frantic. \"I'm gonna call you an ambulance. I'll meet you at the hospital, okay?\"\n\n\"You're already there,\" I said. \n\n\"Right,\" he agreed. \"I'm gonna call them now. Hold on, baby.\"\n\nLess than five minutes later, I was letting the paramedics help me onto a stretcher. \n\n\"Deep breaths,\" an EMT said, giving me a warm smile. \"You've got this, Mama.\"\n\nMama. Holy shit. That's what I was about to become. \n\nIt all happened so fast. A few hours of labor later, she was in my arms. I'd reached for her instinctively, and they gave her to me, let me have her because she was mine. Wes had cut the cord, already beside me, wiping my sweaty hair back from my face, looking adoringly down at our daughter. \n\nShe was... perfection. She had golden-brown skin, the color of honey and milk, and a single drop of chocolate. I kissed her head as she squirmed, wiggling in my arms, sniffling and scared. \n\n\"It's me,\" I said, my eyes heavy with tears. She seemed to recognize my voice and looked up at me. I was immediately struck by how beautiful her eyes were. She had Wes's eyes, a stunningly deep tapestry of blues. I wondered if she'd keep the blue, or if it would change to brown like mine. She'd be perfect either way. Her hair was dark and black like her father's, though considerably less thick. She had that wispy baby hair. \n\n\"She looks like you,\" I said to Wes. I still couldn't tear my eyes off our daughter. \n\n\"She does,\" he agreed. \"But she's got your fire.\"\n\nHe was right. She was feisty with the nurses, already showing the world who was boss. \n\n\"Dragon Lady,\" Wes said to me and then turned to our daughter, \"Dragon Baby.\"\n\nI laughed and laughed and laughed. \n\n\u2014\n\nBean kind of stuck. We called her that, even though her name was Charlotte and she should have been called Charlie for short. Things don't always work out the way you plan.\n\n\"Come here,\" Addie said, taking Bean. She rocked her in her arms, cooing to her. I warned her that she was going to get baby vomit on her dress, but she didn't seem to care. \n\n\"Oh, thank god you're here,\" Rita said. Her hair and makeup had already been done. She looked so fucking beautiful that it made my heart ache. It was her wedding day. \n\n\"Sorry I'm late,\" I said. \"California traffic. Forgot how fucking awful it was.\"\n\nThe cosmetologist did my makeup and hair next, and then I slipped into the sky-blue long summer bridesmaid dress. My hair had been curled in voluminous beach waves down my shoulders. After I'd finished, Addie and I helped Rita into her wedding dress. We zipped her up and then tied the corset, pulling it as tight as she asked us to. Her waist looked ridiculously tiny, and the beautiful curve of her body made me almost jealous. I was still trying to get my pre-baby body back, but it was a slow process and I'd only barely started to accept that. \n\nBean was happy to receive all the attention from the bridesmaids. Rita didn't mind. She was rocking Bean in her arms before walking down the aisle, laughing as my daughter babbled happily. Wes came ten minutes before the wedding march to collect Bean, and then I walked down the aisle with a groomsman, taking my place as one of the bridesmaids. \n\nThe wedding was beautiful. Brian, surprising us all, cried as he read his vows. Rita punched him in the arm for making her cry. The church smelled of old, rich wood and flowers, the day was bright and sunny, and my daughter didn't fuss through the ceremony. It was a perfect day. \n\nWes found me at the reception, pressing a kiss to my lips. I saw the way he interacted at the wedding, dancing on the floor with our friends, raising his glass for all the toasts, grinning through the speeches. He seemed so at ease, and I realized that Wes fit naturally in a wedding. He blended in so well that he might as well have been the groom. He gave free medical advice to the guests, danced with Rita, fed me cake while I held Bean. \n\nLike Rita and Addie had said so long ago, he was husband material. \n\nI tried not to think about it. We were already happy. \n\nWeren't we?\n\n\u2014\n\nElena and Janie moved to Maryland right before I started school in the fall. Janie had just graduated high school, and Elena wanted to be close to her grandchild. As I began my journey of classes and homework and lectures, I was infinitely grateful for their help. Elena and Janie were always happy to take Bean, and on night classes, sometimes I took Bean with me to school where she'd sleep in her wraparound sling, cuddled up against my body while I'd take notes in class or research topics at the library. The professors were accommodating and kind, one even holding Bean while I took my exams so I could concentrate. \n\nWes worked hard at the hospital, I worked hard at school, and Bean worked on being a baby, learning new tastes and smells and textures. She hit all the major milestones right on time, and began walking early, toddling across our hardwood floors, which we'd quickly covered with rugs to help cushion the blow on her little knees when she'd topple over. We'd rented a house and began to furnish it slowly, putting our lives together with each piece, cementing this future that we were building together. \n\nAfter Wes completed his fellowship, he took a job at the hospital and I continued studying in school. Janie had started going to the same college as me, and it was nice running into her on campus. Elena took Bean to the park often, helping her work off all her energy before Wes and I got home in the evenings, already exhausted from our long days. On the long weeknights, Wes and I would make love, spending ourselves in each other's bodies. With each passing day, I thought harder and harder about what I knew I had to do. \n\nI waited until I'd graduated (with honors) before I did it. Bean, now four, was on my hip that day as I walked through the hospital. She was on my phone playing a game to keep herself busy while I took the elevators up to the surgical floor. I'd spoken to a nurse there just moments before and knew that Wes was in between surgeries, taking a break. He was at the nurse's station when I found him, being a total clown as he made them laugh with a joke. When he saw me, he came and kissed me, a wide grin on his face. \n\n\"What are you doing here?\" he asked, taking Bean from my arms. She threw her arms around her father's neck, peppering his face with kisses, which he returned immediately. \n\n\"What I should have done a long time ago,\" I said. \n\nAnd then I got down on one knee. \n\n\"What are you doing?\" Wes asked. I was sure he knew exactly what I was doing, but he couldn't quite let himself believe it. \n\n\"You told me a long time ago that if I ever wanted to get married, I'd have to be the one to propose. So here I am, proposing. Marry me?\"\n\n\"Say yes, Daddy,\" Bean said. Her blue eyes sparkled, and so did her father's. \n\nIn fact, Wes's eyes were wet, glistening with tears. \n\n\"You're joking,\" he said, still in disbelief. \n\n\"My knee is starting to hurt,\" I said. \"Christ, just say yes already.\"\n\n\"Yes,\" he said immediately. \"I\u2014Jesus, Celine. Of course. Yes!\"\n\nHe helped me to my feet and pulled me close with one arm, the other still supporting Bean. \n\n\"You sure this isn't too fast for you?\" I teased with a grin, pressing a kiss to his lips. \n\n\"What do I always tell you, Celie? Fast is our speed.\"\n\n\u2014\n\nWe moved back to California, and I got the career I'd always wanted. I climbed up the ranks in the company quickly, and in just a few months, I was the director of operations. Director. I'd done it. My dream had come true, and it had been thanks to a man that had supported me through all of it, a man that I would soon call my husband.\n\nWe didn't really plan for a big wedding, but we had one anyway. There were just too many people in our lives, too many work and school friends, and plenty of family from Wes's side. I wore a simple white gown, and Wes wore a nice black suit. We looked the part of bride and groom. \n\nThe ceremony was held on the beach on a sunny summer afternoon. It passed like a fresh breeze, entering all my senses, leaving me rejuvenated and smiling. Wes held my hands through it, and Bean, standing just behind me, kept a hand on the train of my dress, patiently standing on her best behavior. We'd told her how important the day was, how Mommy and Daddy hadn't really planned for this, but now that we were doing it, nothing had ever seemed so right. It had taken me over half a decade to figure out that this was the natural course of things for us. We'd do our taxes together, and when the time came to medical decisions, we could make them because we'd be legally married. Those things were important, and so was the thought of forever. \n\nThis was for forever. \n\nWe read our vows. I won't go into detail because it's all stuff we've said to each other over the years. I love you's and you're my world type of things. We made promises to one another. Promises to be there, to be present in each other's lives, to love and cherish and do all the things we'd already been doing since day one. \n\nBecause yes, from day one, he'd been the one. \n\n\"It's always been you, Celine,\" he said at the end of his vows. \"Always.\"\n\nWhen we kissed, it was like everything had been cemented. Together forever. \n\n\"Daddy,\" Bean said, tugging on her father's pants. He looked down at her, giving her such a bright smile that she couldn't help but return it. \n\n\"What is it, baby?\" he asked her. \n\n\"Will you marry me too?\" she asked. \n\n\"I'm married to being your daddy. We celebrate it every single day.\" \n\nIt was the perfect answer. She looked relieved, sufficiently convinced that she was important too. \n\n\"And Mommy,\" she said, rounding on me. I held out my hand and she took it. \"Are you gonna love the baby more than me?\"\n\nI put a hand over the slight swell of my belly. \n\n\"Never, honey. You have a piece of my heart, and so will the baby. Your piece won't ever be smaller than the baby's.\"\n\n\"Good,\" Bean said, satisfied again. Wes took Bean's other hand and we swung her on the way to the beach. \n\nI looked out over the ocean, and remembered the days I'd lie in bed and feel as if I was sinking into the water. Drowning. Wes looked at me, giving me a soft smile because he knew, he understood. When I later decided to head into the water in my simple gown, he did not stop me. I faced the crashing waves and swam against the tide until the water was chest-high. The horizon was a magnificent splash of colors, and the scent of the salty ocean air was in my lungs. I looked at this ocean that I had once feared. \n\nAnd I knew that I would never drown again.\n\nThe End\n\n_______________\n\nCredit must be given where it is due; I would like to give a big thanks to my team of betas and editors, listed in no particular order: MsCherylTerra, chasten, Laura R., and Bebop3. I cannot express in words how much their help has improved this story. \n\nThis story would not have been possible, also, without the support and kindness of these people: BuzzCzar, AJ, Dan F, DetroitRockCity, Andyhm, S. Y, Adam and many more who have wished to remain anonymous. You know who you are. \n\nAnd lastly, a big thank you to you readers! To the ones that have been here since the beginning, and to the ones who have just joined us now, thank you for taking the time to read this story. \n\nI am always happy to bring you these stories for free. Please remember to vote and/or comment as that is my only reward. \n\nIt was a pleasure going on this journey with all of you. \n\nCheers, \n\nNora"
    ],
    "authorname": "norafares",
    "tags": [
        "head above water",
        "pregnancy",
        "doctor",
        "businesswoman",
        "strong female lead",
        "angst"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/head-above-water-pt-05"
}