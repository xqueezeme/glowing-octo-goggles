{
    "title": "Renascence Ch. 04",
    "pages": [
        "Authors Note: \n\nThank you for letting me share this story with you. Those who have been voting, commenting and emailing, thank you so so much. Your continued support has been inspiring me to dig deep and write something truly meaningful. I've been trying to face the uncomfortable emotions to honor the integrity of Grace's character. It's been hard, but also very rewarding. \n\nI hope reading this story will touch you as deeply as it has touched me to write it for you. \n\nMore to come soon :)\n\nCheers, \n\nNora\n\n\u2014\n\nRenascence\n\nNoun:\n\nThe revival of something that has been dormant\n\n\u2014\n\nI always slept in the fetal position. \n\nIt was like I was still in the womb, swimming in all the red, taking no breaths but still existing, still living even though I wasn't born, wasn't alive. But I hadn't been alone in the womb. Emma had been there, her heart ticking in that way that watches do, slow, methodical, calculated by her brain, running the factory of her body, her mind the foreman, giving orders while all she did was existed. And I'd existed too, right beside her, my body growing faster than hers, as if I was sucking out all the life force, taking everything and leaving her the leftovers. I'd taken so much from her then, and I've taken so much from her now. \n\nThat was why she'd been the smaller of the two of us. Shorter than me by a quarter of an inch, stunted by all that I had stolen from her. She hadn't minded it when she was alive, hadn't cared because I suspected that she loved me more than herself, almost as if loving me was loving herself, but I wondered if she would care now. I'd never asked for forgiveness, never given it a second thought until she wasn't there anymore, until it was too late to ask all the questions never asked. It was like an argument, the kind you'd think about in the shower later, replaying it and thinking of all the things you should've said \u2014 that was my life now, an argument with myself. I was angry because there was so much I wanted to say and I only had myself to blame, like I was stealing from myself too, taking away the opportunities that would've helped me win the goddamn argument. \n\nWe might've been middle-aged before I would've realized that I had a lot to apologize for. I'd always been a burden on her, always sticking to her like plastic wrap, molding myself around her, becoming her second skin, clinging to her because the only real purpose that plastic wrap serves is sticking to things. \n\nThe anxiety attacks hadn't started because she'd died. It wasn't as if they'd been a dormant disease, the fire only ignited the second things began to fall apart. No, I'd always been weak, always anxious, always rethinking and reevaluating and wondering if I was doing anything right. As long as Emma was there to lead the way, as long as she set the example that yes, this is the way we do things, I'd been able to live with it. Skinned knees were okay, crying was okay, getting a C+ on a paper was okay because that was life and that was the way the world worked. Like darkness and light, failure was the absence of success. Without it, you might not truly understand success at all. \n\nBut now Emma is not here to show me the way. Now I'm on this dark path that I can't escape, planting one foot in front of the other, trying to fill the void in the center of my chest with heavy emotions, the kind that weigh me down and make me tired, so fucking tired. \n\nAnd so I sleep in the fetal position, making room for a person that is not there. \n\n\u2014\n\nGabriel Hart was not Emma's replacement. She was clear weather on a summer day, but Gabe was the thunderstorm, rumbling in the darkness, flashing bolts of lightning to show me that things could still be bright, but then taking it away because he was still a storm, and storms always mean destruction. And if he was the thunder, then I was the rain\u2014something that the clouds wanted to get rid of, something that weighed too much to deal with, something that only existed to fall. \n\nWe acted as if nothing had happened. Tender touches, tender kisses, tender gazes, all swept under the rug so that we could walk over it, stomping out the ashes from the fire. We shared the same air in the classroom, whispering breaths that had meant something one day, and then the next it was lost amongst all the other breaths, all the other people that mattered as little as we pretended that we did to each other. \n\nChemistry was supposed to be some bullshit made up by Hollywood, but I couldn't kid myself\u2014chemistry was fucking real. Gabe and I were elements that reacted badly, but under the right conditions we might've created something new, like some advancement worth telling the world about if only we hadn't been some fucked up experiment in the back of the school, sharing kisses and sharing secrets that could never be told. We had radiated toward each other, magnetic, drawn by forces that didn't really make sense because science really hasn't come that far. There was no way to explain feeling so much for a person that you barely knew. \n\nAnd so I wrote it off as chemistry. \n\nWe kept on ignoring each other all the way up to the day before Christmas, the day that we were being let out for a short break to celebrate the holidays that we didn't really deserve. We didn't exchange hellos or goodbyes, but sometimes we caught eyes, speaking across the room in silence, trying not to look like we wanted the same thing. Our eyes said all the things we couldn't, speaking its own language, sharing the madness. Sometimes his eyes would soften, looking at me like I was a tragic little teenager, and it sucked because I couldn't even correct him. I wanted to tell him that I could survive this. I was surviving everything else, things like death and despair, so yes Gabe, I'll survive this. I'll survive you. \n\nI tried to work on my speech. I had to give it in front of the class on January 2nd, the last day in the torture chamber winter session class. I thought about writing about wine because Mrs. White had given me the idea, but wine sounded stupid when I put my pen to paper. Who gives a fuck about wine anyways? Dad maybe, but fuck Dad. \n\nI could only write poetry that didn't really make sense. The words strung together in cobwebs in my brain, linking together but not creating anything that could catch flies. I wrote in my little purple notebook, scribbling nonsense just so I could transfer that nonsense out of my brain and leave it on paper instead. I wrote about this, about Gabe being a thunderstorm, about Emma in the womb, about the void that I kept trying to fill.\n\n\u2014\n\nChristmas was exactly as depressing and stupid as I'd predicted it would be. Mom and Grandma fought about trivial things, getting into the little things until somehow they got lost in the big things, bringing up shit that was twenty years old. Resentment was so heavy at the dinner table that you could almost taste it, until you could taste nothing else. Turkey and mashed potatoes and green beans and everything American sat on the table, a feast made for a group of people that were pretending really hard that they were a family when they didn't know the first thing about it. \n\nA few days after Christmas I got an express delivery box from Dad. It was almost like I'd been an afterthought, one that kept gnawing at him in the back of his mind until he just gave in, sending me gifts so he could make himself feel better. I dropped off the box at the post office without opening it. I wasn't feeling that generous this Christmas. Satisfaction wasn't cheap, and I couldn't afford to give it him. \n\nThings changed a little on New Year's Eve. We didn't watch the ball drop on TV or anything, but we all sort of sat together in the living room and tried existing around each other. Grandma knitted like she was on the cover of Grandmother Weekly, and Grandpa whittled a piece of wood making something that I couldn't be bothered to make out. Mom went through her phone, probably stalking old high school boyfriends because she could afford satisfaction and it was a gift she fully intended on spoiling herself with. I read Pride and Prejudice because I was really hungry for a bullshit love story. I wanted to read about Mr. Darcy, the shittiest love interest of all time. The arrogant, egotistic bastard that had to buy Lizzy's love. Sometimes it was nice to read about shitty guys to distract your brain from thinking about nice guys\u2014the nice guy. \n\nHe texted me at midnight. \n\nWe were only human. Humans aren't really good at resisting temptation. Read a history book if you want proof. We destroy everything, and its all rooted from temptation. \n\nGabe: I'm sorry about everything.\n\nMe: I am too. \n\nGabe: I didn't check to see how you were doing. I should have texted you sooner. \n\nMe: There's no rulebook for this. You're just protecting yourself. It's understandable. \n\nGabe: I'm not protecting myself. I'm protecting you. \n\nSee, I wish he hadn't said that. They're 'nice guy' words. The genuine kind, not the kind that come from neckbeards that pretend to be your friend so they can get in your pants and then call you a whore when you reject them. I think Gabe did get tempted to get in my pants after I acted like a deranged cocktease, but his intention had never been to hurt me. For a few hours we'd lost control together, but then it was over and we just sort of pretended that we were okay with it. His texts suck because it confirms that he's just like me\u2014that he's been pretending. We both cared too much and I don't think either of us understood why. \n\nMe: I'm sorry I did this to you.\n\nGabe: I did this. I hurt you. \n\nMe: You didn't. We'll get over it. How are you?\n\nGabe: I'm alright. How are you holding up? How's break?\n\nMe: It's a nightmare. My family is pretty dysfunctional. \n\nGabe: I get that. Mine is too. How's your speech coming along?\n\nMe: I haven't written a word. I don't know what to write about. \n\nGabe: Emotions are powerful. Write about something that you feel strongly about. \n\nMe: Would it be a bad idea to write about you?\n\nGabe: Lol probably. Anything else come to mind? Something sane maybe?\n\nMe: I don't function within the confines sanity. \n\nGabe: You will. I promise you will. \n\nMe: I could write about Emma. My sister.\n\nGabe: That might be good for you. I used to write letters to Kev. It helped. \n\nMe: Does it ever stop hurting?\n\nGabe: No. But it does become bearable over time. You just have to learn how to cope with it. \n\nMe: Were you the one driving? In the accident?\n\nGabe: Yeah. I was about your age when it happened. I was so excited about getting my drivers license that I started driving around everywhere. Kev always wanted to tag along. My mom didn't want us wasting the afternoon at the mall but I didn't listen to her. I still wonder how different things could have been if I'd just listened to her. \n\nMe: Emma offered to drive because I was really anxious about getting behind the wheel. I insisted on driving. I wanted to conquer my fear. I still wonder how different things could have been if I'd just listened to her too. \n\nGabe: That's how it is at first. You'll replay that day over and over. You'll wonder what you could have done differently. You'll stop being present in the world. You'll stop trying. You'll stop living. But you have to remember that your sister loved you. She wouldn't have wanted this life for you. Make your peace with it. You can spend the rest of your life wasting away or you can live enough for the both of you. You can honor her memory. Coping is not about forgetting what happened or even forgiving ourselves. It's learning how to live with it. Some things really are out our of control. We don't control fate. We just control how we feel about it. Took me a long time to come to terms with that. \n\nMe: Why do all this? This goes beyond the requirements of your job. \n\nGabe: I don't think I'm capable of watching you suffer. You shouldn't be going through this alone. I know I'm playing with fire here. I shouldn't even be texting you right now, but the clock struck midnight and the only New Year's resolution I could think of was helping you. You may not need me, but I'll be here anyways. I just wanted you to know that. \n\nMe: Does that mean we're friends? \n\nGabe: We are. \n\nMe: I've never made a friend without Emma's help before. I've always been shy.\n\nGabe: You're capable of making friends. You just got used to letting someone else do it for you. You're funny, intelligent, perceptive and a little infuriating, but I like that about you. Anyone would be lucky to have you as a friend. \n\nMe: Aren't you scared of me?\n\nGabe: I'm terrified of you.\n\nMe: Haha so why do you want to be my friend? Why are you doing this?\n\nGabe: Because the thought of you fucking up your life scares me more.\n\nMe: Wouldn't you get fired for texting me?\n\nGabe: Probably. \n\nMe: Then this isn't a good idea. This could ruin your life. \n\nGabe: I really don't give a fuck as long as its saving yours.\n\nI realized then that all the friends I'd ever had were superficial ones, the kind you'd hang out with and celebrate birthdays with and laugh about stupid shit with, but Gabe was teaching me that this is what friendship was really about. Being there for someone, putting yourself on the line, being selfless and supportive and kind, so fucking kind that it fills up your whole heart, until it feels like it'll burst because there's no way to contain all the feelings. I was so overwhelmed that I honestly felt like crying. \n\nMe: How did you learn how to be such a good person?\n\nGabe: Years ago when I was a fucked up teenager someone showed me kindness. That person pretty much saved my life. \n\nMe: You've mastered the art of paying it forward. \n\nGabe: I wouldn't put it that way. I haven't mastered anything. \n\nMe: That's bullshit. You're an amazing person. Whoever that person is, you're making them proud.\n\nGabe: That's the nicest thing you've ever said to me. \n\nMe: I'm a fucked up teenager. Someone showed me kindness. I'm a pretty fast learner ;)\n\nGabe: Lol you're such a smartass.\n\nMe: You like it :) \n\nGabe: I do so I'll take full responsibility for encouraging it. Get started on that speech. \n\nMe: It's like one in the morning. \n\nGabe: Then go to sleep. Or would you rather work on that speech?\n\nMe: There's no third option?\n\nGabe: No :P \n\nMe: I think I'll pick sleep. I'll work on the speech in the morning. \n\nGabe: Goodnight, Grace. Sweet dreams. \n\nMe: You too :) thanks for everything btw \n\nGabe: Anytime :) \n\nWhat was that saying? When life closes a door it opens a window or whatever? That's probably not how it goes, but I like to think it does because right now it felt like a window had been thrown wide open. The clouds were clearing, if only for just a little while, and maybe for now I could enjoy the clear summer day, remembering Emma and remembering the way she had made everything beautiful. I could go back to those skinned knees, of falling in front of everyone on the playground, of feeling that humiliation until Emma was pretending to fall too, pretending to cry because she knew that as long as she was with me, as long as we fucked up together then it was all going to be okay. \n\nEmma's not here anymore, but she taught me that you could still be okay after bad things happened to you. \n\nAnd so I slept in the fetal position, feeling the emptiness beside me where she should have been, but tonight I didn't cry. Tonight I just tried to remember how it felt to be okay. \n\n\u2014\n\nGabe had said that emotions are powerful, but what he hadn't realized was that the most powerful emotions are the bad ones. I had to shut those emotions away for a few hours, making room for some of the good so that I could write my speech. My good emotions aren't as powerful as they used to be; they're dim, bleak, muted, but I'm stripping them out of my brain, digging through all the files, looking for where they hide because I needed them today. I look for all the memories, the beautiful ones that don't taste like blood in my mouth, the ones that don't remind me of big blue eyes, vacant and lifeless, the eyes that looked just like mine, just as blue as the sky on a clear summer day. \n\nI wrote about Emma, but not really. Mainly what it was like to have a twin because for some reason that has always fascinated the world. The difference between monozygotic (identical) and dizygotic (fraternal) twins, getting right down to the biology and of it without getting into the sex aspect. I didn't really want a room full of hormonal teenagers thinking about my parents having sex. \n\nI touched a bit on twin telepathy, how there's no science to really prove it, but I wrote a few pretty good points because let me tell you, it exists. I gave examples that were really weird, like how Emma broke her wrist and I felt it for weeks; how I wanted an ice cream from McDonald's and across town Emma was eating one; how Emma got nauseous on a cruise ship and I threw up even though I was fine. \n\nIt was a good essay. I made strong points backed up with sources, and tied everything together with a conclusion that I hoped was going to leave a lasting impression. I probably could've gotten an A if it wasn't for the fact that the damn thing was a speech and a big part of the grade would come from how I delivered it in a room full of people I really didn't give a shit about. \n\nI practiced it in my room, pacing like a goddamn lunatic, saying the words out loud until I couldn't recognize my own voice anymore. I wasn't sure if I was going to be able to do it. I even texted Gabe to see if there was any way to get out of it, but he told me not to push my luck. No favoritism, I guess. \n\n\u2014\n\nThe class clapped. Like seriously. They fucking clapped. \n\n\"Any questions for Grace?\"\n\nI shot Gabe a look. As if giving the fucking speech wasn't bad enough. The corners of his lips twitched, suppressing a smile, a cheeky little fucked up smug type of smile that he was lucky he couldn't show in class because otherwise I might be fully tempted to wipe it off his face. \n\n\"Go ahead, Charlie.\"\n\nThe girl with the pink hair lowered her hand and gave me one of her warm smiles. I think her name was short for Charlotte, but I could see why she would prefer Charlie. She didn't look like a Charlotte, not because she wasn't sweet enough for it, but because people with pink hair and neon green nails and a tattoo of stars behind the ear were better fitted for a Charlie. I liked her though, Charlie or Charlotte or whatever. She was nice. \n\n\"The twin telepathy stuff was really interesting. Do you know if it works from a distance too? Like across the world?\"\n\n\"I don't have any personal experiences of it since my sister and I never travelled out of the country without each other, but I did hear some stories at a twin convention from twins that were separated at birth. I don't know if they could read each other's minds when they met, but they did have a connection right away.\" \n\nMiranda raised her hand and I wished like hell that Gabe could read my mind because I didn't want to fucking deal with her. \n\n\"Miranda?\"\n\nFuck. \n\n\"Where's your sister now? Do you still 'feel' her or whatever?\"\n\nHa, Gabe looked mortified. Served him right. \n\n\"I think that's all the time we have for questions. How about we move on to the next speech?\"",
        "But I was staring Miranda dead in the eye. It was kind of satisfying because I had a feeling that she was genuinely interested and it was bothering her that she was curious enough to ask. Twins really are so fucking fascinating. She just couldn't help herself. I was ready to make her regret it.\n\n\"She died,\" I said, watching for her reaction. \n\nThe shock on her face made me want to fucking fall to the floor and laugh and laugh and laugh. It's funny, I never really suspected that she didn't know until she asked me that question. Wasn't everyone supposed to know everyone's business in small towns?\n\n\"I thought that was just a rumor,\" she said, getting up from her seat. She grabbed her bag, shoved her pencil case in it and ran out of the class, her long black hair flying like she was the fucking wicked witch of the west escaping away on her broomstick. \n\nGabe got up from his seat to go after her, but I beat him to it. \n\n\"I've got this,\" I said, running out of the classroom before he stop me. I wanted to see her squirm. Death makes everyone uncomfortable. Even assholes. \n\nI caught up with her in the parking lot, and looking at her almost made me feel sorry for her. She was bent over in the snow, shoving things into her bag because she'd apparently dropped it on her wild escape from the world. For that moment I was the one who had it together and she was the one falling apart. \n\n\"Are you okay?\" I asked. \n\nShe looked up at me and I took a step back. She was fucking crying. Like ugly crying, the kind that's puffy eyes and snot and streaking mascara. \n\n\"I thought you hated us,\" she spat, angrily wiping her tears away. \"I thought you thought you were better than us.\"\n\n\"What the fuck are you talking about?\" Seriously, what the fuck was she talking about?\n\n\"You ignored us,\" she said. \"You didn't talk to anybody. You acted so Hollywood. I thought you were a fucking snob.\"\n\n\"Napa is in northern California.\"\n\nShe flung the strap of her bag over her shoulder and got up to face me. \n\n\"I treated you like trash because you acted like you were better than us. You treated us like trash first.\"\n\nWhat the fuck?\n\n\"I never thought I was better than anyone. And I didn't think you were trash until you started acting like trash,\" I said, crossing my arms uncomfortably. \n\n\"I guess I am trash,\" she said, laughing in a way that sounded like she didn't think it was funny at all. \"All this time you were just fucked up from losing your sister.\"\n\n\"So what, you feel bad now because my sister died? Give me a fucking break.\"\n\n\"I was a bitch to you,\" she said. \"I'm fucking sorry, okay? I won't bother you anymore.\"\n\nThen she got in her stupid little red BMW and drove away before I could even register what she'd said. I just stared after her, my eyes unblinking, my mouth hanging open in surprise. \n\n\"I'll have to call her parents.\"\n\nGabe had appeared beside me, hands in his pockets. His breaths came out in mists in the cold air, and with it came out a hardened look. I couldn't figure him out. \n\n\"You saw that?\"\n\nHe sighed.\n\n\"Yeah.\"\n\nHe looked down at me, his eyes blazing. I tried to imagine what it was like to be responsible for a classroom full of kids. He's been proving everyday that being a teacher isn't just about the tests and the curriculum or even the subject matter. His purpose wasn't just to teach. It was to guide. \n\n\"People aren't as one-dimensional as you think,\" he said, touching my arm to motion for me to follow him back inside. I tried to mask how good that made me feel, that brief contact. \n\n\"What do you mean?\"\n\n\"Real bullies aren't like cartoon villains. She isn't inherently evil, even though it feels like that when you're young. She made bad decisions, but she isn't a bad person. She's feeling remorse. That's got to count for something.\"\n\n\"Thanks, Dr. Phil,\" I said sarcastically. I wasn't ready to look at Miranda like she was human yet. One guilty apology didn't mean shit to me. \n\n\"Smartass,\" he said, shaking his head. He was pretty shit at suppressing his smile this time. \n\nAs we walked I tugged his sleeve until I'd pulled his hand out of his pocket, and then I took it, lacing my fingers with his. His hand was warm and calloused, the scars pressed hot against my palm. I felt that void in my chest fill up to the brim, and it should have made me feel silly for getting so weak in the knees over some guy\u2014except Gabe wasn't some guy. He was the guy. I knew he'd cave if I really tried hard enough because at the end of the day he was still a man, still as starved for sex as the next guy when seduced by a lunatic cocktease, but I didn't feel like fucking him anymore, not because my body didn't want him\u2014because holy fuck did my body want him\u2014but because I was starting to learn a little about what it meant to be selfless. \n\nHolding his hand was a compromise, but it was also a sacrifice. I wasn't going to allow myself to want anything more than this so it would be cruel to deny myself this one little moment alone in an empty parking lot, just this one innocent interaction. I craved the contact like I craved nicotine, as if touching him was as satisfying as a drug, like it was something that was both a delicious high and a fatal overdose. Wanting him was intoxicating; wanting him was suicide. \n\nHe brushed his thumb over my knuckles, soothing me before he let go. \n\nLetting go was okay. It wasn't what we wanted, but it was what we needed. And that was okay. \n\n\u2014\n\nThe second semester officially started the next day. \n\nThe halls were packed again, the sea of gray school lockers opening and closing; and everywhere there were people, so many fucking people. My mind was buzzing with all the energy, all the talking and laughing and the blah, blah, blah. I ignored them all, keeping my head down, trying to look as invisible as I felt, ghosting through the halls, stepping around people, saying nothing because I had no one to greet, no one to talk about the holidays with. I didn't care; I preferred it that way. \n\nI'd decided that I'd pass my classes with A's again, but I was doing it more for myself than for Mom and Gabe. I could keep leaving my mind empty for the bad thoughts, or I could fill it with notes and homework. Strategizing and studying and succeeding was all familiar, all things I could do because I'd done them before and I could do them again. I didn't have to go to college, but I didn't have to sit around feeling sorry for myself either. I just needed a distraction and this was my best option right now. \n\nI was ten minutes into second period when I got called to the office. I'm not going to lie, I was scared out of my fucking mind. I started going over everything in my mind, pulling up every excuse in the book to protect Gabe. It was my fault. Don't fire him\u2014seriously, it was me. \n\nBut I guess I was being overdramatic because it was just the guidance counselor that wanted to see me. \n\nI read her name off the little plaque on her desk. Miss Melissa Hanley. She was pretty young, but she looked like the kind of woman who probably went grocery shopping with her dog in a baby stroller. Curly red hair bunched up in a bun on her head, glasses that hung on one of those neck straps that only old librarians wear, and maroon lipstick that made her pale skin look really washed out\u2014yeah, I kind of felt sorry for her. She looked like a hot mess, but just like Charlie, she was nicer than she looked. \n\n\"I had an interesting meeting before school this morning,\" she said when I took the seat across from her. She was going through a file, probably mine. \n\nWhat was she expecting me to say?\n\n\"Wondering why you're here?\" she asked, peering up through her glasses. She had very pretty emerald green eyes and I decided that she wasn't actually ugly, just weird. \n\n\"I'm guessing you're about to tell me.\" \n\nShe laughed. \n\n\"Gabriel was right about you. Cheeky, cheeky.\" \n\nI felt like an idiot for blushing at the mention of his name. I wasn't worried about her noticing though. A lot of young girls have crushes on their teachers, especially ones that looked like Gabe. \n\nShe winked, reading my mind. \n\n\"Your teacher told me about what happened,\" she said, her voice softening. \"Honey, I'm really sorry. I wished I'd gotten around to you sooner. I just had so many seniors to sort out this year. Too many failing that needed my attention. I kept putting you off to address later. Your transcript was great so I didn't realize you'd need any guidance right away. I guess I was wrong.\"\n\nShe put my first semester report card on the desk. \n\n\"I\u2014\"\n\n\"Don't worry,\" she said, cutting me off. \"I didn't call you down here to scold you.\"\n\n\"I'm not going to slack off anymore. I want to graduate.\"\n\n\"Your teacher told me that too,\" she smiled warmly. \"I've been spending all morning working out your schedule. I'm dropping you from all your current classes.\"\n\nWhat?\n\n\"I don't know why nobody noticed it before, but you already have enough credits to graduate. This is really my fault. I should have realized, especially with your transcript from your old school. You could graduate early if you want, but I have a better idea.\"\n\nI was trying to process what she was saying. Graduate? This could all be over? High school completely done with?\n\n\"Okay, so here's the plan,\" she said, sliding over a paper. It was a new class schedule. AP Spanish, P.E., Art, and Creative Writing. Only four classes\u2014four classes that I didn't even need. \n\n\"You took three years of Spanish back in California so I figured it'd be a shame not to get the AP credits if you want to pursue it in college. You had an A+ all three years so I think you'll still be able to pass with a 5 on the AP test even with the semester missed if you really put your mind to it. The Art and Creative Writing classes are to spiff up your transcript a bit. I know you made up the credits for the classes you failed, but it'll still be on your transcript that you failed them in the first place. You didn't even need the classes so I'm sorry, I really wish I could do something about it, but I can't. However, I think a college admissions office could excuse it for a well-rounded student. That's why I put you down for Art and Creative Writing. Spanish helps too.\"\n\n\"I don't want to go to college,\" I said almost immediately. \n\n\"So I've heard,\" she said with a sad smile. \"You worked so hard those first three years. Why not wrap it up so you'll have the option to pursue college if you ever change your mind in the future?\"\n\n\"I'm really not interested.\"\n\n\"Alright, how about this,\" she said, pushing the schedule closer towards me. \"Give it until the end of the week. That's only three days. Follow this schedule and see how you feel. If you don't change your mind after that then I will personally make sure to speed along the early graduation process for you. Deal?\"\n\nWhat other option did I have?\n\n\"Sure.\"\n\n\"Alright, so we don't offer AP Spanish in this school, but our sister school in the district does. It's only twenty minutes away so I put you down for first period and then you'll have second period free to give you enough time to get here. Third period will be P.E. which you're technically excused from anyways so you can probably hang around in the gym with Coach Andrews. He might assign you essays. You'll have lunch after, then fifth period Art with Mr. Young. You'll like him, he's great. Creative Writing will be your last class of the day. You'll have Mr. Hart as your teacher. He's covering for Mrs. White for the semester.\" \n\nGod she'd really been saving that last one, like Gabe was the delicious cheese on top of a mountain of broccoli that you wouldn't have been able to stomach otherwise. She probably figured I was some hormonal teenager who'd love nothing more than to have an entire period to stare at the hottest teacher alive. She isn't entirely wrong, but I know that it's a recipe for disaster, cheese or no cheese. \n\n\"Three days,\" Miss Hanley said. \"That's all I need from you.\"\n\nWithin three days of meeting Gabe I'd almost fucked him in his car. She had no idea what she was asking for. Three days could make or break everything. \n\nBut what choice did I have?\n\n\u2014\n\nMe: Some warning would have been nice. \n\nGabe: What are you talking about?\n\nMe: The guidance counselor. I thought I was being called to the office to watch you get fired. You almost gave me a heart attack so thanks for that. \n\nGabe: Lol wow calm down, drama queen. Not everything has to be a Shakespearean tragedy. I was just keeping my promise. You better get your shit together this semester. \n\nMe: You gonna kick my ass if I don't?\n\nGabe: Yup. Stop texting in class. \n\nMe: I'm not exactly in class. It's PE. Why don't you stop texting? You're a teacher for fucks sake lol. Get your shit together :P\n\nGabe: I really should kick your ass. \n\nGabe: Why aren't you participating in PE?\n\nMe: I'm anemic. I haven't had to participate in PE for like 5 years now. I mean I'm here on the bleachers in the gym but I'm literally just sitting here doing nothing. \n\nGabe: You're so tiny. Doesn't surprise me that you're anemic. Eat a steak or something. \n\nMe: Words of wisdom from Dr. Gabe, Ph.D. from the University of Bullshit\n\nGabe: You watch your fucking mouth, drama queen\n\nMe: Lmao you're so lame\n\nGabe: Maybe I'll go back to get my Ph.D just so everyone (especially loudmouths like you) has to start calling me Dr. Gabe for real ;)\n\nMe: Sounds like too much work lol. Wouldn't you need to have a Masters first? \n\nGabe: You think I don't already?\n\nMe: You doooooo? :O In what?\n\nGabe: Education/mathematics \n\nMe: Mathematics? Seriously? Why aren't you a math teacher? Hahahaha nerdbrain \n\nGabe: I'm just a sub. I'll take what I can get. And we'll see who's laughing when you need help with your multivariable calculus homework in college. \n\nMe: Ugh don't get me started on that 3D calc bullshit. I can't wrap my brain around it. And it doesn't matter anyways. I'm not going to college. \n\nGabe: I guess you really do want your ass kicked. \n\nMe: Stop telling me how to live my life.\n\nGabe: Then start living it and maybe I'll stop. \n\nMe: I feel like 'maybe' is the keyword here. \n\nGabe: No comment.\n\nGabe: Bell's about to ring. Eat some lunch. Preferably a steak. \n\nMe: Thanks for keeping me company. I'll get started on finding a steak at the cafeteria lmao maybe they'll even have lobster thermidor and chocolate souffl\u00e9 too\n\nGabe: Lol ok smartass. See you 6th period. \n\nMe: Later nerdbrain :p\n\n\u2014\n\nMs. Hanley had said that the art teacher Mr. Young was great, but what she probably really meant was that he was just as weird as she was. Completely bald, really short, really skinny, and really, really weird. He did look like an art teacher though; dirty ancient apron, paint under the fingernails, a deep sort of pretentious voice that talked about the philosophy of art, how things didn't have to be beautiful to be a masterpiece, how art could be technical, could be calculated by numbers, could be emotions on a canvas, could even be the gum on your shoe as long as it meant something to you. \n\nThe walls of his classroom was lined with artwork by past students, and he was right about the beauty thing\u2014some of it was really fucking ugly. When he asked my opinion, I told him so and he laughed and said that I was right, but that was the point; they were meant to be ugly because sometimes, life was ugly. I thought about that for a long time as I studied color theory, writing down what primary colors, secondary colors and tertiary colors were. Then there was color harmony, how certain colors complimented each other, but none of it really made sense to me. If art was really subjective then why did we need to learn this?\n\n\"You should master the fundamental rules before you start bending them,\" Mr. Young said. \n\nAnd then he asked me if I had to choose, what my preferred medium would be. I looked around the classroom, looked at all the beautiful and the ugly, passing over realistic pencil sketches and watercolor sceneries and ink calligraphy and oil paintings of bowls of fruit, and stopped at a painting that looked like it was screaming. Red, black, blue and yellow \u2014 like all the stages of a bruise, stark against the white background, screaming things, screaming a story, screaming that someone had taken a paintbrush and thrown it at the canvas, just like when I took the nonsense out of my brain to transfer it to my purple notebook. \n\n\"That one,\" I said, pointing to it. \n\n\"Acrylics,\" Mr. Young said, looking at the painting like he was looking at it for the first time. Maybe he was trying to imagine how I was looking at it, how it was making me feel. \n\n\"Study the fundamentals on your free periods. Pass the tests,\" he said, putting a textbook in my hands. \"But in this classroom the only thing you will do is paint.\"\n\nSo yeah, Mr. Young was weird. But just like Charlie, just like Ms. Hanley, and\u2014even though I hate to admit it\u2014just like Miranda, he's multidimensional, his personality formed by the life he'd lived, by the things he'd experienced, by the people that he'd met, by everything that society had handed him\u2014like a paintbrush, and with it he'd created ugly and beautiful things. \n\nJust like all of us. \n\nWe are all of us ugly. \n\nAnd we are all of us beautiful. \n\n\u2014\n\n\"Dante, Nietzsche, Dostoevsky, Woolf, Hemingway, Faulkner, Twain, Dickens.\"\n\nListening to Gabe talk was like becoming Alice, falling through the rabbit hole, falling headfirst into the world of the upside-down, where nothing made sense but everything was interesting. He voice was so low, so deep, so passionate; with darkened eyes, talking like the world ended and began with books. The same 26 characters made up the entire English language, and how fucking crazy it was that those same 26 characters made up all the books we'd read, all the words we'd written \u2014 the same 26 characters that had created the most influential works of all time. \n\nAll this coming from the mouth of a math major. \n\nI took a good hard look at him, past the beautiful hazel eyes; past the tall, lean body; past the hard chest, the strong arms, the forearms that rippled with muscle, the scars on his palms; past everything beautiful about him on the outside...and I saw him. Really saw him. He was that screaming painting, the bruise, the emotions that had to get out, the beautiful with all the ugly hidden away\u2014because even beautiful people bleed; even beautiful people are scarred. \n\nAnd when he looked at me, when his eyes briefly paused, when he made the world stand still, I could see all of our secrets there; all the things we had done, all the things we hadn't done; all the things we'd said, all the things we hadn't said; all the things that could've been but wouldn't be. The connection that rippled, like we were reaching for each other, like we both knew that this was crazy, this was madness, this was more than just a stolen kiss in the back of the school. \n\nI couldn't write it off as chemistry anymore. \n\nBecause he was the thunder. \n\nAnd I was the rain."
    ],
    "authorname": "norafares",
    "tags": [
        "renascence",
        "teacher student",
        "student teacher",
        "forbidden love",
        "student",
        "teacher",
        "romance",
        "depression",
        "healing",
        "slow burn"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/renascence-ch-04"
}