{
    "title": "Curtis Woodman Ch. 01",
    "pages": [
        "I can never thank enough the people who help me with these stories. Thank you Hal1, you're a star. My thanks as always to those who stand behind me, so that I can take the blame. You all take time out of your lives to help me and for that I really appreciate it. To those of you about to read this, please enjoy. We did our best.\n\nPlease note. This is a story.\n\nIt came from my head and not from any history books. It's a story.\n\n*******\n\n\"Boss. Headquarters wants you.\"\n\nI put the binoculars down and slid back about half my body length before reaching behind me for the radio. \n\nLewis still had the headset on, so he reached out with the handset. \"Control this is Eagle Four-Two, send over.\"\n\nEagle Four-Two this is control. Braithwaite, I say again Braithwaite. Stand by for emergency extraction, over.\"\n\n\"Confirmed. Out.\"\n\nWe all backed further down the hillside and stopped while we packed what little we all had out of our pouches. I pulled my map out and revised every decision I had made since we had been here. Braithwaite was our authentication code for whatever was to be said after that, which judging by the order to extract immediately, left little to ponder. We needed high ground and I certainly wasn't considering the hill we were on.\n\nMy finger scanned the map just as I knew my boss would have done before sending such a cryptic message. With my finger resting on the only place on the map high enough above the green canopy for an extraction, or even a clearing we could put a helicopter down safely. \n\nI paused, even drummed my fingers for a moment as I slowly ticked off the fore's and against of every available place. Two miles. I looked up and directly at it while pulling out my binoculars for a closer look. I felt my people close in around me. When I dropped my glasses and pointed, they knew. \n\nChad took lead, he always did. Jackson would relieve him about halfway. My eyes quickly scanned the area we were about to leave, I trusted my people, what I was doing was just habit and I found exactly what I expected, nothing. To those curios enough to come to this very spot, my people and I simply weren't here and never had been. We were quick but cautious. We also all had the safeties off, even the Sig in my hip holster was combat ready. \n\nThe first time I instigated such a move. Jackson looked at me and smiled before saying. \"Oh, if the health and safety people could see us now.\" \n\nI trusted my people, not one of them had shot a toe off yet. \n\nWe were swift but careful. Having received the move order and the emphasis placed on it, we were in unknown territory and I disliked the fact I seemed to have placed my people in such a predicament. It's not very often you will find a group of people willing to follow you into such situations, and yet all six of these folks would do and had done just that. We sweated and grunted our way across two miles of bush and not one of my people bitched about it, well not to my face anyway. \n\nAs we crested the hill, I could hear a helicopter in the distance. The boss had timed all of this real well. Out of habit I pulled my binoculars from their pouch and took a closer look, swore and then added out loud.\n\n\"Harnesses on boys.\" That alone caught everyone's attention.\n\nChad was the only one throwing out expletives as he strapped himself into his harness, the rest of them let him have his say. It was his pressure valve; theirs was to smile as they watched him do it. We were all experienced halo jumpers, so shit like this shouldn't bother us, but Chad was the only one that voiced how uneasy we all were about what we were going to do next.\n\nI pulled my strobe marker from one of my pouches, ensured the IR cover was in place and allowed it to cycle three times. The chopper immediately altered course and in the half light of the day, I watched it wave slightly from right to left in acknowledgement that the pilot had seen us. Now for the fun part. \n\nMy team squatted down, and the helicopter lowered itself so close to the ground that I could see the machine gunner smile and stick his thumb up before he said something into the headset he had on. The cables dropped from the bottom of the chopper and one by one my team attached themselves to the cables as the helicopter lifted itself upwards.\n\nSo, there we all were, hanging under a helicopter feeling very vulnerable and our only protection was the two machine gunners on the helicopter and the skill of the pilot. I had faith in my team, but these people I knew nothing about. Hell, I didn't even know where we were going. \n\nThe whole journey took seventeen minutes, with the sun now growing in strength. My people saw the landing zone and adjusted as best they could. As boots touched mother earth they unhooked and took up a defensive position. Two cloth bundles were thrown out by one of the gunners and the cables moved back inside the helicopter. With a throttling of the rotors, it rose up and to the side before heading back to the growing heat haze of the horizon. \n\nThe cloth bags revealed extra ammo and a replen of food and water. I took the envelope that got handed to me and took it to one side while Freddy, being my second-in-command, took charge of the two cloth bags and set about distributing the contents to all the team while we held this defensive position. They effectively, left me to look after the new orders as they re-stocked.\n\nTo say I wasn't impressed as I read on, would be a gross understatement. I pulled a map over and married it up with what I already had, and then briefed my team. They shared the same opinion I had. My orders reflected what we all suspected, something had gone wrong and we were the closest good guys to it that could fix it. A bit like taking a Katana to a fencing duel, as Chad so eloquently put it when we had one of these missions before. \n\n*******\n\nI gave Chad the coordinates and then checked my compass before pointing and telling him \"just shy of four miles\". He adjusted to his own compass and set off at a fierce pace. I asked JoJo to take up the last position; she nodded but could tell there was going to be more. So, I took a breath and told her that when we got to our final position before waiting for dark she was to receive her own orders. JoJo just nodded, squatted down and watched for anything following us. \n\nAs tail-end Charlie, she was the buffer. The terrain would dominate the distance she would keep between us and herself, to her it was down to line of sight or instinct as to how far she would allow herself to travel away from us. \n\nAs my team moved I was more on auto pilot than I should have been. The new orders made little sense, but then again not a great deal made any sense in this country. For now, we moved swiftly and safely, since Jackson had now replaced Chad, it was up to him to get us there. When Jackson suddenly stopped and took a knee, we all followed his lead. He did nothing for a good three minutes. Slowly the sounds of small animals grew as they became accustomed to us within our small area. Eventually Jackson lifted his left hand and made a circle motion with his finger. For the next six hours this area would be our home.\n\nThe team looked towards me and I nodded, each had a job to do and fanned out to do it. I waited for JoJo. She was not going to like this. My job for now was to build a map of the area out of what I could find on the ground. I was a good halfway through that when her hand came into view and moved part of my map a couple of inches to the left, I knew she was probably right but I still checked the aerial photo to confirm it. Its fun keeping my people on their toes.\n\n\"I have a job for you, you're going to hate it and give me a ration of shit about it, but I can't give this to anyone else.\"\n\n\"You want me to baby-sit someone?\"\n\nThis time I looked directly at her before I said anything.\n\n\"What makes you say that?\"\n\nHer face was as neutral now, as it was when we first started this conversation. Her eyes gave her away though and it was confirmed when she said. \"Because you're cornering me to ask me, and I'm a girl.\"\n\nMy jaw tightened and I paused for a moment before saying. \"Lay that shit on me ever again and I will accept your request for a return to unit, whether you've made one or not. Are we REAL clear on this JoJo?\"\n\nShe paused. She could see the line and JoJo was really close to stepping over it. I then gave her wriggle room and mentioned that I was about to brief her on what I wanted from her, and she was then going to accept with a nod of her head only, and then go away and think on how best to do what I'd asked of her.\n\nShe went a shade of red around her neck, or at least the small part of her neck I could see. Joan Carmichael was the newest member of my team; I had actually sought her out. A friend of mine phoned me and suggested I take a look at someone who didn't fit in her own unit but could well fit into what we did. I took notice of this person since at least two of my team over the years had come from this source. \n\nShe was a member of the 12th Intelligence Unit. Her personnel file was a lot harder to get hold of since the intel people always liked to keep their own secrets, and their own people were always a secret. I went to my boss and mentioned her name. He simply nodded, and a week later, I not only had a copy of her file, but a pass to go to their base for an intelligence gathering meeting with her department head.\n\nLittle did he know that he was about to lose one of his own people less than a month later. Joan Carmichael, or JoJo as the rest of the team quickly dropped on her as her nickname, was smart, real smart and I often thought she had a higher IQ than any two of my team put together. Her one weakness was that she actually didn't realize that she was in this team on her own merit, and although there is no test like the SAS selection or Parachute regiment training. Her test, like everyone else's in the team, came from their own past experience and of course, the school of 'hard knocks'.\n\nWe were God's brother's soldiers, there was no selection training here. Although a large part of our job had an emphasis on fitness, we each brought one or two (sometimes three) skills to the unit that filtered down to the rest of our Unit over time. If there was a specific talent needed to add to the team, we searched for ourselves and then went out and drafted them in. \n\nJoJo was that type of person, and once she got over the shock of knowing there were units out there more secret that her own, she was interviewed by my boss and me. At first, she took it as some sort of joke. In the end even my boss gave up and we both stood, thanked Joan Carmichael for wasting our time, and left. \n\nLess than a month later I had my people on one of Salisbury Plain's rifle ranges testing a new assault rifle. A military vehicle from the camp we were staying at turned up and dropped Joan Carmichael and her combat kit a few feet away before leaving. We all watched her pick her shit up and drop the lot next to us and then look towards me.\n\n\"I went from the rank of Lieutenant to nothing in the space of an hour of talking to my boss about the two people in the interview room. My pay grade hasn't changed, in fact it has gone up and I also now seem to have dropped off the grid. Who the fuck, are you people?\" \n\nJackson held one of the new assault rifles, he was supposed to be the next on the range. He also knew that had changed when I looked at him and held out my hands. The rifle changed hands and I walked towards Joan. When she took it in her hands, she may not have known just then, but everyone watching knew. It was as though the rifle had just become an extension of her.\n\nIt had been easier with the rest of my team, but Joan had her own self doubts about being here. None of the team cut her any slack. She carried as much as the rest of us, dug holes in so many countries the same size as the rest of the team. Hell, the bugs sucked on her blood as much as they did ours and still, she thought we were carrying her because she was a girl. I knew that one day she would figure it out, I just hoped it was soon.\n\n*******\n\nJust as it started to get dark, I pulled my team together in a huddle around the make shift map on the ground.\n\n\"Ok folks this is where the fun starts. Three days ago, Judith Chapman and her daughter were snatched from their holiday home. That was mistake number one. Number two was that they drove her and her daughter as far away as they thought safe from any help. The problem with that thinking was that the further east they went the closer to us they became.\"\n\nI gave instructions to each of my team as I pointed to the map on the ground. When each of them had nodded in understanding I left the map as it was so each of my team could make their own minds up about infiltration and probabilities of where security would be standing or hiding.\n\n\"I'm now about to throw a rock into the pond on this mission, folks. Apart from the Chapman women, there is another person we have to look out for. She will be wearing a full Burka with face veil and everything. She will have a blue scarf around her head. She's one of the good guy's folks so please refrain from putting holes in her if she has a gun in her hand when we get there.\" \n\nJoJo and I exchanged glances; I had told her that Burka girl was C.I.A. Other than that. I knew nothing since the information I had about her stopped right there. That left me real uneasy and I put JoJo on her to act as her shadow from the time she had eyes on her until we got rid of everyone. Losing even one of my team to act as a babysitter wasn't sitting easy with me, but three letter agencies have a tendency to worry me. For instance, why was she even in this area in the first place?\n\nAs each of my people stood up from the map, I exchanged a word here and there, but mainly left them to their thoughts for a moment before discussing in more depth what every person in that clearing had to do tonight. Close to an hour later I set about destroying the map on the ground. Thirty minutes later we were almost ready to move. I swept the area once again, but my people had destroyed and buried everything we had no use for. \n\nOnce again it looked like we hadn't even been here. It was also here that I dropped my last rock into the pond.\n\n\"Folks, we do have one more problem. You all know that at times like these we face mask up. I can't allow that on this mission. Judith Chapman's daughter is deaf. What's going on at the moment must be scaring her shitless, and people wearing face masks will make her even worse. Paint up, night goggles will cover the rest. But we have to give her the chance to be able to read lips, so be conscious about what you say around her and keep the swearing to a minimum.\"\n\nEach of my team nodded and buddied up to become face artists. JoJo stood in front of me, so I set about painting her face and neck she did the same to me, and ten minutes later I finally nodded, and out of habit, I looked up at the sky. My boss would have had us all on our HQ's big screen ever since we got the job. Me looking up as he looked down on us from either a satellite or a drone flying overhead just sent him the signal that we were going in.\n\nIt took me two hours to get to my own position; I added another half an hour since Jackson had the furthest to travel, not to mention dealing with anything on the way. \n\nI thought I spotted JoJo off to the left. Since our target was the hostage hut, we were coming at it from front and back. The second hand of my watch hit twelve and I moved. The shadow over to my left moved along with me. JoJo got to the hut first. I had just put my back to it when the shooting started.\n\nThe timing between us was uncanny, reinforced when both doors exploded inwards and slamming against the wall. The mother had grabbed her daughter and pulled her to the ground, a woman in a burka stood over them with a gun in hand. JoJo got the two she was aiming at while I got the one that hid beside the door that JoJo came through.\n\nWhile all this was going on, Burka girl had knelt, gun at the ready and aimed at the door I had just come through. Fear finally gripped the little girl and she screamed into her mother's chest. We came in and JoJo kept watch from the window while I kept watch through the open door for any unwanted visitors. Other than some sporadic fire going on at the furthest end of the group of huts, things started to settle down.\n\nI gave it an extra minute when the firing ceased. Eventually the signals of all clear individually came over the radio and I closed the door so I could walk over to the group in the middle of the hut. JoJo was checking on the condition of the kidnappers. To her, dead was an acceptable condition. \n\nBurka girl continued to aim her gun at my chest and finally said. \"Identify yourself.\"\n\nStanding there while Burka girl centered her gun at my chest, made me think that this really was so surreal. \"You're wearing a burka and want me to identify myself. Now that's funny.\"\n\nI think she figured it out via the accent.\n\n*******\n\nTime was now our enemy. We had to put distance between us and this place and do it now. Between JoJo and I we stripped down our helicopter harnesses and built a crude strapping system so I could carry Trisha, our little deaf girl, on my back. We strapped her on so she didn't need to hang on and I had my hands free to continue to carry my weapon. Lewis was given permission to finally break radio silence with a simple acknowledgment code that stated we had completed this part of the mission and were now headed for the rendezvous point.\n\nWe all had little doubt that our boss had watched everything from a satellite feed or from drone pictures. It was more a morale thing than anything else. I also felt that with the sun up now and all of us no longer using night sights, that too much of our faces were showing so we all went the sunglasses route. God how I miss face masks. \n\nI looked at the two women now my responsibility and said. \"You two need to keep up.\"\n\nThe spook hadn't taken long to remove her head cover and tucked it under a belt around her waist. A brunet and features that I would probably forget within five minutes of not seeing her again. \n\nShe looked at every one of us before saying. \"You're all carrying more than either of us; trust me we'll keep up.\"\n\nI gave Chad the coordinates and he checked his compass before moving out. Jackson followed as soon as we lost sight of our lead man. JoJo handed both women a candy bar each and told them it will help. The spook dropped hers on the ground and proudly announced to us all that she didn't need drugs. It was then that we both looked at each other trying to figure out when sugar became a drug. I did see JoJo pick up the candy bar and place it back into her pouch before I turned and followed in the direction of Chad.\n\nThe rest of my team were a stalling action if needed, they were tasked to slow down anyone following us. My hands rose above my head and I signed to Trisha that I'm going to go fast, so if she has to, then hold on tight to the harness. I repeated that part to emphasize its importance. Her hands appeared in front of me and all she did was acknowledge what I had said to her.\n\nWith one more look at the carnage we had already caused, I set off at our pace. The forest floor slowed us down, but we picked up the pace over some of the open ground and areas of little or no vegetation. The shooting started ten minutes into our speed march. \n\nI fingered the button on my vest, a million and one computations ran through my brain. As we picked up more speed, I moved a few thoughts around, reminded myself yet again that I had the best team ever and then pressed down on the transmit button. \"Three (Chad,) hold your position, four (Jackson) reinforce three and punch a hole through anything that gets in the way of both of you.\" ",
        "I used a codeword that only JoJo was going to understand. After all, we all knew Burka girl was a spook, but it wouldn't fit into radio traffic if I actually called her one over the air. \"Seven (JoJo) leave the nun to me and help two (Freddy) back there. Since he seems to be having all the fun. Six (Lewis) and five (Bradley,) fan further out and make this pocket more secure.\"\n\nEach of my team acknowledged with just one word and radio silence was once again resumed. The spook came up to my now kneeling position along with Judith Chapman who knelt and started signing her daughter. Whatever she signed back made her smile and nod once.\n\nThe spook tried that authoritative tone once again. \"We have to move.\"\n\nThis time I glared at her before replying. \"No shit Sherlock. I tell you what, why don't you just shut-up and be a meek and mild passenger in all this.\" \n\nMy comms clicked twice in my ear and I knew why, Jackson was now with Chad and were on the move. The noise behind me grew louder and let me know that JoJo had joined Freddy. \n\nI touched my comms and said one word. \"Moving.\"\n\nWe had drilled everything that happened next into ourselves over countless hours and days of practice on military training grounds, both over open ground and wooded areas, in so many different countries. We would stop and hold a committee meeting on what worked and what didn't. It was only when the consensus of opinion was unanimous did we try it again and again, but at speed this time. \n\nThe importance in this was keeping the pocket secure. Two in front to punch a hole, one either side to open up the hole if needed and two behind to seal it if they could. If that meant killing anything that followed us then so be it. Me in the middle as a last resort, and moral support for these three people we were sent to take back and return to a normal life, well for the Chapman family perhaps. The antics of this spook were already shredding my patience. \n\nFor the next hour we moved at an increasing speed, Chad and Jackson were doing an outstanding job, twice we had come across the bodies of people who were trying to stop or slow us down. My team must have been running on adrenaline alone; I had to keep passing up bits of candy to Trisha when I broke one down for myself and even handed Judith Chapman another candy bar, fuck the spook. \n\nThe heavy breathing voice of Jackson came over the comms next. \"We're here. I see dots in the distance, get here in five minutes or miss the ride home.\" \n\nIt was time to pull the team in close again. I touched my comms button and said. \"The two in front are on holiday already let's join them.\"\n\nMy people on either side and behind us picked up the pace and we became a tight little pocket. By the time we had all burst through the forest two helicopters had landed. I pointed to JoJo and she joined me. Freddy would take the rest of the team out of harm's way and back to our base while I handed these people over.\n\nAs both helicopters lifted off the ground JoJo set about unstrapping Trisha from her harness. When she was clear Trisha came around to the front and hugged me. There was no sign language of any kind that could replace that universal gesture. She then turned and sat on my leg and her fingers went frantic, even her own mom had to place her hand on her daughter's arm and sign that she needed to slow down. Trisha's eyes rolled at her own impatience and we all smiled back at her.\n\nThe spook sat in the corner with a look of total disdain on her face while Trisha and I talked the whole journey. As I suspected our bird landed on its own, two guys with shoulder rigs and dark glasses waited for the lady spook to get out and join them before even we could disembark. The door to the dark-windowed sedan opened and all three got in.\n\nI looked at JoJo and smiled before saying. \"You're welcome.\"\n\nShe smiled and followed my lead by putting the safety on every piece of hardware I had on me. Best not upset our cousins by wandering around with live toys that may go off. We were taken to the base commander's tent, and he offered us food and a place to wash up. We politely declined. Both the Chapman women hugged us, and I relayed Trisha's message to JoJo; she knelt down, pushed her personal weapon aside, and held out her arms. Trisha fell into them, hugged JoJo tightly to her and cried as the tension finally burst within her. \n\nMy partner just held onto her to let her tears be her emotional release from these last few days. It was a good way to get it out of her system, even more so now as she was in the hands of friendlies.\n\n*******\n\nOur boss was waiting for us when we got back. \"Freddy took the boys straight to the canteen when he got here. The cook shit himself when they walked in covered in blood. I had to warn Jackson about his humor. I don't see the funny side of telling the cook you're a vegetarian when you have that much blood over your uniform.\"\n\nJoJo was trying hard to stifle a laugh and pretending she wasn't listening to our conversation.\n\n\"And the spook?\" I asked.\n\nHe shrugged his shoulders and said. \"I've heard nothing.\"\n\nWe both knew he wouldn't take this further unless they did first. Our boss told us to get changed and cleaned up. We both nodded and headed for our tent. The boys were resting outside waiting for us.\n\n\"JoJo, hand over your weapons and we'll get them cleaned up while you take a shower. She knew better than to pull out the girlie card, she was running on candy bars and adrenaline; and, since I wasn't that far behind her, I knew how exhausted she was. The boys had her weapons stripped and were already cleaning them when Freddy stood up and went to see his friend the cook. Twenty minutes later he came back with two plates and a fresh-smelling JoJo tucked into hers like it was her last meal.\n\nI went to see the boss the next morning. The speed we left our original target meant that task had been shelved; he'd also gotten the inside intel on the spook. It seems her own extraction had gone south for some reason. She knew of the house holding the kidnapped Americans and got a message out to her own people.\n\nIn the time it took for us to be withdrawn from our own mission and brought up to date on this one, the female spook had succeeded in infiltrating into the house as a maid and simply waited for us to turn up. She knew when we came for the Chapman women, all she had to do was hitch a ride home. \n\nWe were being sent home for now and out of harm's way in case the spooks took a disliking to one of their own effectively being told to drop dead. We were scheduled to leave in three days and head back home. My team packed as I sorted out a container for our kit.\n\nFreddy took charge of all of our kit and we were at the military end of the airport waiting for our plane. The boys were feet up reading porn magazines. JoJo was on her cell doing Facebook or twitter or whatever she was into. She would occasionally lean over Jackson's shoulder and look at the naked women in the magazine; they even got into an argument about the nice lady on page five. \n\nJoJo was adamant that her tits were a gift from the operating table; Jackson would move the double page picture from side to side for either a better look or to see if they moved when the page did. I noticed the smirk on JoJo's lips. She was at home with these guys and knew what buttons to push with all of them. \n\nI was at the huge window looking out over the runway when a little hand went into mine and squeezed. Instinct made me reach for my sidearm as I turned and looked to my right, then down and into Trisha's sparkling eyes, quickly overriding my instincts with my personal weapon, and I smiled.\n\nA familiar sounding voice came from the side of me. \"I'm sorry sir, I had hold of my daughter but she suddenly broke away and I couldn't stop her from annoying you.\"\n\nJudith Chapman sure looks really good when she gets dressed up, and didn't have the weight of being a kidnap victim on her mind. I knew why she didn't recognize me, a face covered in camouflage paint and both night-sights and then later in the morning, sunglasses covering the top half of our faces will do a lot to disguise a person's features. It worried me that Trisha had known though. I knelt down on one knee and looked directly at this cute little angel. \n\nOut of the corner of my eye I could see my team had also instinctively taken up a secure defensive position in a half arc around all three of us. My hands asked her how she knew. She replied that she just did. Judith Chapman read both our hands and gasped, her own hand went to her mouth in an attempt to stifle herself. Trisha used me kneeling in front of her to prove her point and hugged me again. I lifted this little angel into my arms and just managed to hold back my own emotions.\n\nJudith Chapman then turned and looked behind her. I don't know how she did it either but she walked up to each of my team standing amongst the crowd of people at the airport, hugged them, then kissed their cheek as she thanked them. These are all time-served and battle-hardened soldiers and yet each of them had something in their eyes right at that moment.\n\n*******\n\nThe man from the embassy wasn't happy when he found Judith and Trisha Chapman talking to the rescue team. I reminded him that if he hadn't been late in getting to the airport then she wouldn't have. It's amazing how his objections came to a screeching halt when he realized how vulnerable his own position was right then.\n\nLess than thirty minutes later JoJo and I watched from the big window as both the girls got into a very impressive private jet and took off. \n\nTo me, this felt like just another day in the life of God's brother's soldiers. There was no medal attached to this event, if anything we got something better than a medal to pin on our chests and brag about in later life. We got the hugs of a mother and daughter, and in a roundabout way, thankful that we were in the right place at the right time to return them to their own loved ones. \n\nI've shared a hole in the middle of nowhere with each and every one of these people in front of me, and, although they would never admit it, when they get home, they're going to hug their own children just a little tighter I think. \n\n*******\n\nMy team and I followed the rest of our troops onto our plane home. Freddy gave the thumbs up when he sat down so I knew that our container was on board and we all slept the sleep of the exhausted until the jolt of the landing woke us up.\n\nOver the next month, the repercussions of both our original failed mission and the rescue mission came to light. Some I filtered down to the team, others I kept back, although I had little doubt that they knew that the rescue of the Chapman women was a smoke screen to get the spook out of what for her was potentially a very bad situation. In the end I lost the plot and took my team over to, the military training ground at the Brecon Beacons. We set up an impromptu meeting place at one of its highest sections while I went into my own rant.\n\nI reminded them that they were all soldiers first and last.\n\n\"We got both the Chapman women out of what would have been a long term hostage situation. Deal with it. They are both in the arms of their family now and grateful to every single one of you for getting them home. Deal with that as well.\"\n\nI paused, they all knew what was coming and they were good enough not to interrupt when I mentioned the spook.\n\n\"None of you are stupid; if you were you wouldn't be part of this team. We all know she was the original target for us, but you all have to let that go. You all did good and if I remember rightly you each got hugged by a very grateful seven-year-old and her mother. Hold onto that guys, grasp it and keep it close to your heart because I sure don't want to let my mind wander to how long both woman would have been there if we hadn't got them out.\" \n\nThey mumbled and grumbled for a minute or two, I felt I owed these guys that much before they came up for air once again. I then went on to tell them we had a hike to our next destination. As we all picked up our kit I went on to explain that I had booked the pistol range.\n\nChad just stopped dead in his tracks and asked. \"So you dragged us up here to have a little speech therapy session and now we have to walk ten miles over these shitty hills to the place we're supposed to be at for the day?\"\n\n\"Well I could have just got us transport to the pistol range.\" Came my reply before adding with a wave of my hand. \"But you would have missed all this pretty sunshine, flowers and shit. I just felt that I couldn't do that to you.\"\n\nThe raucous jibes and banter lasted for a few miles before I once again added fuel to the flames.\n\n\"Besides folks. I am just so sure I will beat JoJo's winning score on the handgun range today.\" \n\nThat got a laugh from JoJo and the boys. When she first joined the unit, JoJo had scored the highest ever score. It was almost like any fire-arm placed in her hand became an extension of her. With her personal weapon she was way above average, with a handgun she was lethal. \n\nThe pause in the conversation was intentional; it was also now time to drop another rock into the pond. \"And besides, we have to walk to the range so it will give the range marshal time to place some very well positioned holes in my targets for me.\"\n\nThe shriek of \"Hey that's cheating; you all heard that, he's cheating.\" Came from JoJo.\n\nAs I picked up the pace and refused to look back, the banter between the guys kept them moving on. The guys had even pitched in with telling JoJo that they hadn't heard me say such a thing, which of course poured more fuel onto the conversation. By the time we got to the range JoJo was almost bent out of shape and promptly dropped her kit and went looking for the range marshal.\n\nHer demand to look at all the range targets as she practically leaned over him got him smiling as they walked over to the waiting targets. JoJo went through every single one before she slowly shuffled back to the marshal and apologized to him. All the guys suddenly looked real busy when she came back, not one of these guys wanted her to see their smiles while she had a fully loaded gun in her hand.\n\n*******\n\nTwo months later found us in sunny Scotland before a 'return to base' call came in. We made it halfway down the country before two police cars with lights flashing got in front and the rear of our three vehicle convoy. As one, we all pulled over and I got out, then watched as two got out of the rear police car carrying guns and looked ready to use them. Another guy got out of the lead vehicle and came over to me.\n\n\"My apologies Major Woodman.\"\n\nIt was easy to stare at him.\n\nHe seemed to wonder why I had said nothing until a smile of realization came to him and he said. \"Where are my manners, I'm to tell you Braithwaite.\"\n\nIf he was waiting for a reaction, I couldn't think why, since the only thing he had done is tell me our authentication code. He did go on as though nothing had changed.\n\n\"I'm under instructions to escort you all to RAF Brize Norton. You will receive further instruction from the base commander.\"\n\nI decided to stall and told him that we needed to fuel the vehicles on the way. This got me the feeling he wasn't expecting us to need to stop again. He shrugged and agreed before going to talk to the two officers behind us.\n\nAs I passed Freddy I told him to spread the word that I wanted everyone locked and loaded by the time we stopped for fuel. His shocked face amused me and a part of me still reveled in the fact I can still keep him off balance. \n\n\"Boss, you want to go up against armed Police Officers?\"\n\nI shook my head, glanced at the three of them in a huddle before I said. \"I'm not planning on it, but the second their lights came on I checked my cell phone and it has no signal, Jo Jo pulled hers out of her pocket and that has no signal either. The sat phone is packed since I didn't think we would need it. So in effect Freddy we have been made blind and that is making me nervous, and, until I'm not nervous, then we prepare for the worst.\" \n\nFreddy did no more than pull his own phone from his pocket and I watched his features tighten; I didn't need to ask, just watched as he put it back into his pocket and left to talk to the others.\n\nThe nod from Freddy came an hour later when we all stopped for fuel. The rest of the journey was as uneventful as a convoy racing along the roads of Great Britain with a Police escort can be. They peeled off at the gates to Brize Norton and we drove in. One of the security people pointed to an area already taped off. My people got out and tooled up while slowly walking around our own vehicles.\n\n\"With all due respect Sir, they can't do that.\" \n\nI turned and looked at the duty security sergeant. \"With all due respect Sergeant, being dragged here without being given a reason why has put us all on alert; and, until I know otherwise, we will look after ourselves; so I suggest you warn your people to stay away from us.\"\n\nWatching the look on the Sergeant's face warned me that trouble was coming. He opened his mouth to say something, and then turned to see a car traveling faster than the base speed limit towards the gate. It stopped alongside the Sergeant and me. \n\nMy boss got out of the passenger side of the car. He talked to the security people for a moment and they both nodded and walked back into the gate-house. He then turned to me and I knew trouble was brewing.\n\n\"Get Freddy, I want you both to hear this.\"\n\nBy the time I had waved Freddy over, our boss had moved further away from everyone. We both joined him.\n\n\"Three days ago Rick's wife Brooke and her child were in what was initially thought to be a car accident. It was rigged to look like that, even down to the paramedic ambulance that was called to the scene. Eye witnesses say that both mother and daughter walked to the back of the ambulance and stepped inside. Nothing has been heard from Brooke or the child since then. Last night Rick went native and hasn't been seen since that night. Brookes' parents of course know what Rick can do if left to his own devices. Brooke's family has some heavyweight influence and they bent the President's ear, he of course phoned God's Brother.\"\n\nHe didn't pause for effect; Rick was with the unit long enough that we all knew his abilities, not only as a sniper, Curtis knew that back in the day he was well qualified to lead this unit, But Rick chose the solitary life of a sniper. Now all that knowledge would be turned towards those out there that have his wife and child. \n\nOur boss turned and looked directly at Freddy before saying. \"The plane is on the tarmac waiting for you, so get your kit checked and loaded.\"\n\nHe nodded and they all mounted the vehicles and followed the car that our boss came in. We watched them leave and I followed my boss over to a bench by the gatehouse. He sat and pointed to the spot next to himself.\n\n\"No one can get a handle on this case Curtis. We both know why Rick would go rogue, he loves that woman to death and she gave him that sweet little girl in return. What's worrying a lot of people is going to be the body count once Halo gets up a head of steam.\" \n\nI was going to say something and then realized he was just thinking how next to say what he didn't ever want to say.\n\n\"This comes from Gods Brother, Curtis. Find Halo and get his wife and child back if you can. The President has assured us that all the three letter agencies will help in any way they can in this matter, as well as keep some space between your team and the local law enforcement.\" \n\nMy boss stood when he saw his car returning along with one of my vehicles, both stopped at a discreet distance from us and waited.\n\n\"I've got his late wife's parents and his two daughters who are visiting their grandparents in protective custody, they will stay that way until I hear from you.\"",
        "His hand came out and we shook on it. Just as I was about to release his hand he said. \"I know I'm dumping a lot on you and your team, Curtis, but you're the only people he will break cover for.\"\n\nI watched my boss get in his car and leave through the gate. Only then did I get in my vehicle and join my team. We taxied to the end of the runway and minutes later the engines roared to full life. We sure had leg room on this flight; my team and the flight crew were the only people on it. Once the plane left the ground and the seatbelt sign went out I pulled the team together. All but JoJo had known Rick. Hell, three of us were at his wedding. \n\nThe feelings around my team as I told them what I knew, and also emphasized that it wasn't much, ranged from anger that one of our own was under attack to some very vocal ideas about what they wanted to do once we had found Rick and joined in the fight. I was pleased to be the leader of this group right at that moment.\n\nThere is a saying, watch out for the quiet ones. JoJo had said little all through our add-hock meeting. When we were done I followed her to her seat and sat right next to her; she looked around at all those empty seats and had one of those light bulb moments.\n\n\"What's up?\" I asked.\n\nIt took her a moment or two but I was ok with waiting her out.\n\n\"I could give you the exact date but you already know it.\" Her eyes wandered to the seat in front of us, she held the headrest so tightly that her knuckles turned white.\n\n\"When I was at 12th intelligence unit, we were listening to the radio chatter on a raid into a village being run by our cousins. It was down to me to detail how a single sniper of British origin kept an American medic alive for a full day against intensely insane odds and was also given an order from the Commanding General of the area that he is to sacrifice his own life to keep said medic alive.\" \n\nMy own thoughts raced back to that time and I smiled. That was Halo, more so when he told said General to piss off out of his life.\n\nJoJo was clearly thinking back to that day and those conversations with her friends in her old unit when she spoke again. \"No sooner had I handed in my findings, then said file was sent to Whitehall to brief other ranking individuals. Out of habit the file of that day was dismissed from my thoughts. Some months later, you and the boss come into my life and I'm forced to see with my own eyes that superman does exist.\"\n\nI knew she had come as close as she dared in discussing parts of her life with the 12th Intel unit. They answered to only the very top brass in our army, and yet she was sitting here with me talking about that very day and her own passive participation.\n\n\"Now I'm sitting in on that briefing you just gave and I'm told that Halo Two-Five is real, and we have to track him down before he could possibly drag our country into an internal war between our cousins and us.\" \n\nShe paused, it was clear to see that she was conflicted about something. I had seen this look on her a few times when her old job clashed with this one. It had happened to a couple of my team and over time they manage to resolve the issue; however, JoJo was still struggling with it.\n\n\"He was right you know.\"\n\nI looked at her, more confused than ever.\n\n\"I was one of the personnel writing those files remember. The insurgents were monitoring some of the same radio chatter. They caught the conversation Halo had with the man he called shithead. When shithead ordered him to protect the medic at all costs, we started to observe heavy movement of men and vehicles towards the town.\"\n\nJoJo quickly looked out of the aircraft window and took a deep breath; when she once again looked at me, her eyes were holding back a tear or two.\n\n\"If Halo hadn't got that medic out of there that night, over thirty of the leader of the insurgents' own bodyguards would have taken her back behind their own lines by first light.\" \n\nOne of the flight crew announced that food was going to be served. Since we had been traveling on nothing more than coffee, water, and candy bars all day, we got fed first before allowing my team to bed down and rest for the remainder of the flight. My own thoughts were truly torn. In the end I was the boss here and I had to nail down this one problem on this flight. \n\nWe both took a coffee each and JoJo and I walked to the end of the plane to talk. Since my people were fully fed now, it was nap time for them; but in the back of my mind I still couldn't make peace with the opinion JoJo had of my friend. To her Rick was someone she had heard bits of on a radio, backed up by pieces of paper. We were being sent to find and bring him back from going nuclear. The knowledge in that man's head could well be his undoing.\n\n\"You may not have figured this out yet, but I've got a whole team of Halo's. As individuals you are all awesome; but, as a team, you're a destructive force that I would pitch against anyone.\"\n\nFiguring that JoJo knew some of what I was saying, I still said it anyway. She listened and I'm sure took mental notes. In a street fight or a bar brawl I would match Rick against anyone; but the day he found out his wife was dead, a part of him died right then and nothing we or his two little angels could do seemed to bring back that life in him. His two daughters kept him breathing, but it was his job that stopped him from stagnating.\n\nThen Kitten came into his life, or should I say blundered into it. Brooke Madison Armstrong was her own force to be reckoned with and when they gelled, that bond became unbreakable. The love they have for each other and the children in their lives is as real as anything I've ever seen. \n\nThe mission that forced Rick into retirement also brought Brooke to his side and she's never left. When we knew that Rick was cut off and was preparing to die rather than be captured, I gave each of my people the chance to stay back and wait in our forward position.\n\n\"I actually stood in front of each of them and ordered them all to stand down. I was going to get my friend and bring him back and that was against orders. As an officer I could be court martialed for this and I wasn't taking my team with me. To a man, they all refused and I was proud of my people that day; their silence was their bond.\" \n\nWhen they each started to strip off any non-essential items so they could travel lighter and faster meant that we couldn't afford an all-out battle. We moved in an explosive pocket at a speed that would get us to Rick but in no condition to do much more than drag him away while each of us held a defensive position. Although my boss suspected but never put it into words, the day we went to get Rick back, we had just about enough ammunition on us for personal protection. If anything had survived the rolling barrage when we got to Rick's position, then it would have been hand to hand. \n\nWe walked and ran into fire that day, not because we were asked to, actually we were told not to, but one of our own was out there and bleeding. Every person in my team had the same thought as the shells exploded in front of us and we crawled forward. 'Not on our watch.'\n\nIt would also have taken a person braver than any of my team to keep Brooke away from Rick when we got him back and in medical care, that was for sure. Although I touched on the wedding with JoJo, I'm sure she had figured out the mindset of Rick by now. Two loves in his life were stolen from him and out there somewhere, it was down to us to assist in any way we could, just don't try to slow him down when it came to getting Brooke and his little girl back.\n\n******* \n\nI did see JoJo talking to one of the flight crew when I opened my eyes. They both looked at their watches and then smiled as JoJo handed over an empty coffee cup. It was as she turned to return to her own seat, JoJo noticed me awake, then changed her direction, and sat beside me.\n\n\"We are due to land in an hour; we're scaring the flight crew as well.\" I looked at her; the confused look didn't go amiss either. \"One moment they were all feet-up and doing standby duty, and the next they get a cargo load and just seven people to take to the states.\"\n\nWe both watched the same flight attendant reappear, only this time another person stood next to her; and, judging by what weighed his shoulders down, I would say he was the driver of this bird. \n\nThe way he looked at me sure made me feel he wanted to talk. JoJo moved out of the seat and I joined the captain halfway down the aisle.\n\n\"We make land in less than an hour. Please inform your people not to freak out; I've been informed that we will have two fighters escort us to our final destination.\"\n\nI thanked the man. Judging by his years and rank, he's seen and done most of it. To him this was just another one of those flights that his wife would never get to know about over the breakfast table. We both knew this would also be our first and last conversation, I shook his hand and thanked him. He just nodded his head, then turned and left me standing in the aisle.\n\nThe two fighter jets ripped past us twenty minutes later. They must have done an impressive hard braking turn somewhere behind us, since it only took them a moment or two to turn around and position themselves on either side of our plane. They held my team's interest for all of twenty seconds before they sat back down and proceeded to ignore them. Once the plane touched tarmac the two fighters picked up speed again and disappeared into the sun. When we came to a halt the nice coffee lady opened the door and some mean looking suit walked onto the plane, took his sunglasses off and I joined him by the exit.\n\n\"You Curtis?\"\n\nI nodded.\n\n\"You're making a lot of people nervous around here; but, orders are orders, so welcome to the states.\" This time he smiled. \"We have a truck down by the cargo doors, so if your adjutant can get down there now, my people will help unload the plane.\" \n\nFreddy must have been listening to the suit because he was instantly onto his feet and past him. I looked over at Chad, tilted my head towards the door; and, other than a nod from him, we didn't say a thing to each other as he followed Freddy down the steps. \n\nThe suit left the door and walked down the flight of steps. I followed and my people thought it best to tag along. It was only when he got to the bottom that he turned to me again.\n\n\"I'm sorry, it's that manners thing. My names Cooper.\" We shook on it. \"Once we have your stuff out of the plane, we have a three-hour drive.\"\n\nWhen I asked where we were going he just looked at me. To help him along I did point out the obvious; that we were still all in combats and we may just stick out a little if he was going to park us in the middle of civilians. This time he smiled and told me that we were going to be based at a semi-retired airfield. \n\nIt was then I had my own light bulb moment, and a quick look at his hand to see if he was married just confirmed that this would work. \"Say, Cooper. Look it's kinda personal, but as you can see one of my people is female and we were dragged out here rather sudden. So on the way to where we are going, can you arrange for one of your people to take her shopping when we get there?\" \n\nHe just stood there wearing a really confused look, until I took a step closer and whispered. \"We left so quickly that she left her feminine products behind.\"\n\nHis cheeks went a shade of red and his head nodded in understanding. Yep, he clearly was married.\n\n\"I will phone ahead and one of the female security team will take her into town to get what she needs once she's changed into civilian clothes.\"\n\nNodding and thanking Cooper before detaching myself and standing away from him while my team pulled our kit out of the aircraft hold. When JoJo noticed me watching and then gently tilt my head to one side, she broke from the group and came to stand by me. \n\nI kept my voice low. \"We left in such a hurry that you left your feminine products behind.\" She continued to watch the team, the slight nod of her head was only noticeable because I was looking for it. Our kit was almost packed into a truck before she said. \"But the real reason?\"\n\n\"We all know you're like a savant when it comes to languages. I'm hoping that carries over to accents as well. They are going to send you into town with a female security guard. Take as long as you need but work on the accent, the priority of course is that I want you to make sure she doesn't catch on to what you're doing. I may need you walking and talking like an American before this mission is over.\"\n\nThis time she looked directly at me. What I was asking of her slotted nicely into her last job, she smiled and said. \"You got it boss.\"\n\nWe were divided into the vehicles; the suits weren't happy that we carried our weapons with us. But they kept their mouths shut and it always seemed to be Cooper that did the talking for these guys. \n\n*******\n\nCooper was right, exactly three hours later we pulled up against the gate to a very ram shackle airfield. A woman stepped out from the gatehouse and introduced herself as Carla. Her accent sat squarely from New York and inwardly I smiled. That would do nicely I thought.\n\nShe followed us to a row of buildings. When JoJo got out of her vehicle, Carla got out of hers and the two talked for a moment before JoJo pulled a bag out of the truck and ran inside the first building. The rest of us set about moving our kit into the second building while all the suits stood around and watched.\n\nI heard the wolf whistle. It was Cooper telling the owner of the whistle to keep his opinion to himself that finally made me stop and look and almost drop the box I was carrying. JoJo walked up to me and I sure thought it best to put the box down. I followed her naked legs as I stood once again. Thank goodness for the cycling shorts she had on, the belly-button piercing threw me for a moment; at least the t-shirt she had on kept her modest.\n\nThe shade of her cheeks forewarned me. \"I'm going to need local clothes and well as 'feminine products' for what you're asking of me.\"\n\nInwardly I smiled and was relieved that she was still one step ahead of me on what I was planning for her. I pulled out my card and gave her the number, then told her I would take it out of her pay if she went too far. Her eyes went as wide as I have ever seen them, she then snatched my card and whispered, \"thank you, daddy.\" Before she ran to the car and both women got in, I glared at everyone that was within earshot, the fact my hand was clutching my sidearm may have had a lot to do with the silence I got in return. \n\nIt still took us another two hours to get things sorted to how we wanted them in one building and make the second livable. Cooper hung around but he sent his people away. I figured they would be close by, just not too close.\n\nWhen Cooper got a call on his cell he let me know I had a visitor. A few minutes later a black sedan pulled up and two people I hadn't seen in a while got out. Cooper held the door for the woman and then stood away from the couple. I suspect that he had been told that what was said between us wasn't his business. \n\nShe held out her hand and I grasped it before shaking her hand. \"It's been awhile Curtis.\"\n\nI nodded in agreement. \"It sure has ma'am.\"\n\nA flash of annoyance crossed her face before she reminded me that it would be best to call her Constance.\n\nThey both started to walk away from the buildings we were using, I got the hint and followed along.\n\nIt still took Constance some time to talk, but I was sure going to give her as much time as she needed. \"My husband and I have had to go over so many heads to get you and your team here Curtis. When Rick went missing I had to pull the one card I had left and involved the President.\"\n\nBoth stopped and I turned to look directly at them.\n\nConstance took a deep breath and then let it out so she could continue. \"When Rick disappeared from the ranch I didn't know who I could trust any longer. It's why I've gotten you involved. Get changed Curtis I will explain everything in detail on the drive back to the ranch.\"\n\nI nodded, it was pointless asking anything else, she had obviously set out what she needed to do, so for now I had to adjust my planning to her. My walk back to my team was done at a quicker pace than Constance and her husband. I waved Freddy into the building and held a quick brief while I changed. It was also Freddy that handed me a shoulder holster for my Sig. He agreed that we needed to keep half the team in combats until we got a proper handle on this.\n\n\"Check our ammo, make sure it's up to combat level. If it isn't, then talk to Cooper; he's been told to help in any way he can, let's see if it comes to put up or shut up.\"\n\nOnce changed, I joined Constance and her husband who were waiting in the sedan. The car moved seconds after I had the door closed. I also figured out why we were located at this ramshackle air base; it was twenty minutes from the ranch. \n\nThe place was just how I remembered it when some of the boys and I came for the wedding. The fact that we were here now for a much different reason saddened me greatly. The sedan stopped at the gatehouse, Constance and her husband got out and I followed them. Constance stuck her head into the gatehouse and said something to one of the guards. I watched him nod his head but that was all he did. It was when Constance closed the door that my jaw dropped.\n\nThe word 'Judas' was written by hand, although I would probably say two fingers dipped in something red judging by the trail of red that seeped from each letter.\n\n\"He killed a rabbit and used its blood to smear that across the door.\" She turned and stared at me before continuing. \"They didn't see or hear anything Curtis. There is nothing on any of the surveillance tapes either.\"\n\n\"No, there won't be Constance. He's Halo now. You know he's blamed one of the guards for this don't you?\"\n\nConstance turned and opened the gatehouse door once again. \n\n\"Charley? Has any of the security team not come in today?\"\n\n\"Franklin Ma'am. I sent one of the team over to his apartment but no one has answered.\"\n\nShe stared at me. I tilted my head towards her car and she nodded before thanking the guards once again and walked to her car. I followed her as she got in and her husband once again drove us; this time to the ranch. I pulled a notebook from my pocket and wrote 'Get Cooper and his people to check if your house and cars are bugged', before turning it towards her. She read it and turned a real bad case of red from the neck up.\n\nThe wheels of the sedan had barely stopped when Constance got out, her cell phone already in hand. Judging by the pacing and her spare arm waving around. I didn't need to lip read the conversation. My thoughts that Cooper would be saying an awful lot of 'yes ma'am's' into this conversation may have amused me a little.\n\nCooper and his people turned up two hours later. By four o'clock that afternoon seven listening devises and two GPS trackers now sat on the dining room table. As two more came into the room from the stable, no one, not even her husband, wanted to go near Constance. That woman had murder in her eyes and just wanted someone to inflict it on. We watched her stand at the window that looked out across the back lawn. For a full five minutes she didn't move. In the end she took in a deep breath and turned to join us once again at the table.\n\nShe turned to Cooper and said. \"I'm sorry to ask this of you and your people, since you have been here so long already, but please ask them to do another sweep of the house and paddocks.\" \n\nCooper just said \"yes ma'am.\" Turned and left the room.\n\nHer glare rested on Charley now. \"You and everyone of your team, apart from Franklin that is, have been with me for nearly ten years. Go back to the gatehouse. You all have an hour to decide. Get the next ten years right and do the job I pay you for or get the fuck off my property.\" ",
        "Charley nodded his head and left.\n\nConstance went to the liquor cabinet and poured herself a large one. She downed that in a single gulp; and, with speed I wasn't expecting from her, she threw the glass against the far wall. I watched the remnant of what was in the glass make its way down the wall. \n\nThis time Constance was looking at me. \"How are you going to find Rick?\"\n\nThe emotions in her voice were barely under control.\n\n\"I'm not. He's Halo now and no one is going to find him until he is ready. I'm going to let him find me.\"\n\n\"I'm sure I don't need to remind you that my daughter and grandchild are still missing?\"\n\nI didn't take offense at her remark, if anything, I understood that she needed to get that out. \n\n\"Judging by the way Cooper is sticking like glue to this case, I would say that's Cooper's department, not mine. You sent for me to find Halo; and, I suspect that from what I've seen so far, you need an unbiased sounding board.\"\n\nI made sure we were looking at each other before I finished with. \"Just remember, I said sounding board, not whipping boy.\" \n\nThe murder in her eyes eventually started to dissipate and I'm sure her husband was as relieved about that as I was. Slowly she nodded her head.\n\n\"I make no apologies for my past actions in this room Curtis.\" This time she made an effort to smile, and for that I was oh so grateful. \"A sounding board you shall be.\"\n\nThis time she sat down and her husband and I followed. I then went into detail. I was going outside to get my second in command on my cell phone. Using the memories of the last time I was here, I told Constance that I wanted the guard dogs locked up at night, until Halo surfaces again. My people would be watching the gatehouse and I would set up a fire over by the creek that ran through the property and sit and wait for him. \n\nAfter a pause her brow creased and then she asked. \"Is that it? That's your master plan?\"\n\n\"I'm not turning your estate upside down looking for him Constance. Even with the aid of tracker dogs, I wouldn't get anywhere near him. This is Halo, he may have been out of the loop for a while now but he's still got all the instincts he had before he retired. So I'm not wasting time on that. He will come to me once he realizes we're here.\"\n\nConstance wasn't impressed, but she knew there wasn't any alternative. For a start, no one even knew if Halo was even still on the estate. Charley came back while I was leaving; he got out of his vehicle and I waited by Constance, just in case.\n\n\"The boys and I have talked Ma'am. This estate is not only our livelihood but our home. All our families live around here and it would be hell moving again. We made a promise to our wives and we're making the same promise to you Ma'am. We're staying, but please remember, Franklin came to us when Douglas moved to be close to his wife's folks.\"\n\nHe paused for just a second before he drew himself to his full height and said. \"Give me the right to hire and fire and we will do everything in our power to make this estate air-tight.\"\n\nConstance had used the time to calm down, and then nodded. A small smile came to her and she nodded to Charley. \n\n\"Agreed, although I make no apologies for my outburst. I'm sure you understand why. When the dust settles we will go into details on our new agreement.\"\n\nCharley nodded and headed back to his vehicle. I stopped him at his car and we talked for a moment. He was uneasy with what I asked of him, but right now he was a realist, and we all knew we had to find Halo and find out what he knew. Charley agreed to lock the dogs up at night and the night guards were going to be restricted to the gatehouse only until we got Halo back. \n\n*******\n\nJust how do you catch a ghost? The boss has me watching him through my night scope; I just wished he would sit still. Every damn time he moves my scope whites-out because of the fire he's built in front of himself to keep warm, and to let Halo know he was here of course. Yes, how do you catch a ghost? \n\nIt was time to tense and relax my muscles again, I'm too hyper for the role of a sniper. It was Bradley that taught me to do this; every fifteen minutes, or I could run the risk of my body being inactive when I needed it to be active. The boss moved again and instinctively I closed my eyes to save my night vision. I was about to pull air into my lungs when I had the strangest of feelings.\n\nThe hairs on the back of my neck sprang to life and I desperately had to calm that fight-or-flight instinct. My Sig was too far down my body, and a dead give-away that I was reaching for it. I let go of the rifle grip and pulled my knife out. When I went to roll away something stopped me. It was big and black and stood over me. I had rolled against a leg. Instinct made me strike out with my knife, but the grip of whatever was stood over me, held on tightly. The form above me suddenly knelt down on my stomach, forcing the air out of me and for the first time in my life, I was afraid. The form's other hand came out of the blackness and my whole world went dark. \n\n*******\n\nI heard a slight rustling as a couple of bushes parted to allow someone access. When I looked, Halo had JoJo over his shoulder, the sniper rifle in his hand. When he got close enough he tossed me the rifle and I grabbed it out of the air while he gently placed JoJo by the fire. Until I figured out how he wanted this to go, I stayed sitting.\n\n\"A woman, Curtis. What the fuck?\"\n\nWhen he stood up again I tossed him a cup and he grabbed the coffee off the fire and made himself comfortable.\n\n\"She's going to be real pissed at you when she wakes.\"\n\n\"Oh yeah, and how the hell was I supposed to know you now had a woman in the team. What the hell happened to Desmond?\"\n\nMy inward smile brought back those very memories, and I told Halo that Desmond walked into my office one afternoon and told me he had had enough, or rather his soon-to-be-wife had. I couldn't blame him. She had a child on the way and she wanted the child to know the daddy.\n\n\"I talked to the Boss and we got him a full time job; he's an instructor at the sniper school now.\"\n\nThis time we both smiled, that was the job that the Boss wanted to give to Halo if he came back to England. Instead Halo stayed in the States and married Brooke. A thought came to me just then, and I wondered if his mind had already shifted her name back to Kitten while he set about killing anyone in his way to finding her.\n\nA low moan from JoJo brought us both back to this moment. We both watched as she slowly rolled onto her side, adjusted her legs before moving onto all fours, and then lifted her torso so her back was straight; she was now staring directly at Halo.\n\nHer Sig appeared in her hand faster than I could tell her to stand down. The look of pure hatred for the man sitting next to the fire sipping from his cup was plain to see by the fires light. The click of her Sig and the chamber opening and locking in the empty position led me to breathe a sigh of relief that Halo had thought to remove the magazine's rounds and the round already in the chamber. \n\nShe was too good an operator not to know an empty from a loaded Sig, JoJo must be really bent out of shape at the moment and clearly not thinking straight. JoJo simply threw the Sig at him and practically leapt on him, her legs wrapped around his waist and her hands went around his throat. I was up and out of my seat as Halo shot his head forward and butted JoJo. Blood spurted from her nose and instinctively her eyes closed. That shocked her for the second it took me to pull her off the man who was about to kill her and toss her flailing body the other side of the fire.\n\nWhen she sprang to her feet I was standing between them both. I pointed to Halo and shouted. \"You, sit back down and behave.\" She was quick, but I had expected her movement and my boot came up and tripped her, when she fell to the ground I put my foot on her chest and pointed at her before shouting. \"And you, calm down, and I damn well mean it.\"\n\nWhen peace returned to my corner of the world I radioed Bradley to bring him and his medical kit with him. For the next few minutes I sat and watched them both glare at each other. Bradley sure wasn't in stealth mode when he came crashing through the undergrowth, took one look at the scene, sneaked a quick nod over to Halo, and then set about trying to stop the blood seeping from JoJo's nose and busted lip.\n\n*******\n\nThere are times like these that I sure felt I was getting too old for this shit. I've got two of the best people I know wanting to have at it and I'm sitting in the middle trying to keep them apart. Bradley had packed out JoJo's nose. She looked ridiculous and I felt sure that Bradley would agree with me. I asked him if she would be carrying a couple of black eyes for a day or two, but there was no way in hell was I about to point that out to her. \n\nBecause I'm paranoid, I left Chad watching the security office with Jackson if he needed back-up. The rest of us were sitting around the fire when Constance walked into the light. She clearly hadn't slept at all this night. \n\nAlthough she spotted Rick sitting next to me with his hands wrapped around a cup of coffee, her stare was at JoJo. \n\nIt took a moment but she walked over and held out her hand. \"Come with me.\" She then looked at me and said. \"Make sure the fires out when you're done here. Since you've locked my security team in, it's down to you to form a perimeter around my house. I'm getting a doctor for this.\" \n\nShe was nodding her head at JoJo who had already stood and Constance had anticipated her reluctance and grabbed the sleeve of her combats and disappeared into the darkness once again. \n\nI looked at Halo and said. \"Well I'm glad we cleared up that awkwardness.\"\n\nRick had the decency to look a little embarrassed; although I needed to give him some major slack since his wife and child were out there someplace. Up until we turned up, he simply didn't know who to trust. Keeping the two at the gate was not negotiable and so with some creative thinking between Freddy and I we got the outside perimeter of the house secure while Rick walked into the house.\n\nChad called a half an hour later that Cooper was at the gate with another person in the back of his car. The car crawled up to the house and stopped. Both people got out and walked to the door. Constance opened it and stood to one side before closing it once they had gone in. The reverse happened close to forty minutes later. It would be sun-up in just over an hour and Freddy and I would have to have a chat soon, dependent of what was going on in the house. \n\nI was checking my watch once again when the door opened and Constance came out and leant against the support rail for a moment before walking about halfway to the paddock and stopping. I joined her a few minutes later.\n\n\"Pull your team back Curtis, I'm sending Rick out and he's going with you, but I'm keeping JoJo here with me in case of concussion. You can have her back later in the afternoon once the doctor has checked on her again.\"\n\nEven in the darkness she seemed to pick up on my reluctance. \n\n\"It's ok Curtis, despite what we found yesterday, I do actually trust my security team. If it all goes south then I will call on Cooper and his people but I need you away from here and back at the airfield. Rick has information that Cooper has tried to drag out of him and so far he's refusing to talk.\"\n\nThe iron in her voice returned with a vengeance when she said. \"Talk to Rick. You can have JoJo back later, then I want my daughter and my grandchild back Curtis. Once you're done and gone from this country, my husband and I plan to burn certain individuals to the ground for this and we can't have you here when we do.\"\n\nAlthough I nodded my head, I doubt she could see me do it. I touched my comms button, walked back to my position, and we all met up at our transport. We paused by the gate for the last two of my team to get in and then I had a 'fuck this' moment, and got out of the vehicle. Freddy followed me into the security hut.\n\nMy eyes scanned the room, looking for the one in charge. Charley stood and nodded his head before walking outside with us both. I stopped and turned to Charley; Freddy stood directly behind him.\n\n\"You're ex forces, I can tell by the way you walk.\"\n\nThe head of security nodded his head once but still remained tight lipped.\n\n\"Don't let the accent fool you.\" I pointed back at the house, nestled in the trees and only just becoming visible in the slowly growing light of dawn. \"That's our family back there and it's their security I'm placing in your hands. We're all entitled to make one mistake as long as we learn from it.\"\n\nIt felt like a staring competition, then his hand came up and he nodded his head. I held his hand and we shook on it. We both left that spot knowing that if I and my people ever had to come back for more than a social visit, then he and his team would be history. \n\n*******\n\nCooper was waiting for us all when we got back to our hut. We all knew, and I will even place Halo in that statement, that Cooper had a job to do. Just as we all knew that somewhere along the line, he was going to need plausible deniability if his career was ever going to proceed. \n\n\"I got Freddy to give me the sizes of all your team, so there are H.R.T. uniforms in the back of my car. Cameras are just too common now to get away with British uniforms on our streets.\"\n\nFreddy and I liked his logic. He didn't like or want us here, but he knew that when we were done and gone, his own team would reap the benefits. My mind did wonder if he was ready for the fall-out once Constance got to the bottom of all this as well.\n\nJoJo made her appearance around mid-day; she walked up to me and asked for a moment, I turned to Freddy and nodded to him. He would keep our people busy while JoJo and I walked and talked. I was in no hurry, this was her moment and I let her have it.\n\n\"I will understand if you return me to my unit when we get back home. I let you down. What I did was grossly unprofessional and I will apologize to Rick when I see him as well.\" \n\nI tried to take the heat out of her emotions when I said. \"Rick has that effect on people from time to time.\"\n\nShe stopped and I turned to look at her, my heart went out to her but I still kept my mouth shut. The emotions that played across her face were interesting to watch. I'd seen some of them on various missions. When she wiped away a tear I saw one emotion I've never seen in her since I've known her; fear. \n\n\"My concentration was on you and my surroundings last night and I never heard his approach.\" She shrugged her shoulders and added. \"Hell, I didn't even feel him, sense him, nothing until he stood over me.\"\n\nJoJo looked down and uttered the words that made her human and she was now being forced to recognize that emotion. \"I was afraid.\"\n\nIt took her a moment but she looked up at me, resigning herself to whatever punishment I was going to give her for what happened that evening. She knew that I had her in this unit long enough to know that had Rick not taken the rounds out of her Sig, she would have emptied the whole thing into him.\n\n\"The man had his wife and child stolen from him, he realizes that he doesn't know who to trust and I'm getting ready to blast him full of holes in an effort to exorcize my own demons. What kind of selfish bitch does that make me?\"\n\n\"It makes you human.\"\n\nShe spun around to be confronted by her tormentor once again. Rick was standing less than three feet from us both, listening to everything. Neither of us had heard his approach.\n\n\"WILL YOU STOP FUCKING DOING THAT?\"\n\nIt seems what JoJo screamed at Rick was like water off of a ducks back, the shy smile I recognized though and knew he was putting in the effort with his new friend. \n\nWe both watched his hand come out and say. \"Rick Chalmers, pleased to meet you.\"\n\nIt was interesting to watch these emotions pour from JoJo; the screeching to a halt of her feelings as she looked at Ricks hand. This was a man that not long ago she wanted nothing more than to put as many holes in him as physically possible and be happy to bury the body, standing there, offering friendship.\n\nWell if nothing else, life in this unit could sure get interesting from time to time. I turned and walked away while they had some sort of staring competition going on between themselves.\n\n*******\n\nMy respect for Cooper grew over the hours and days I knew him; the man was a pit-bull. Now armed with the information that Rick gave him and the paranoia that seemed to come with this job, Cooper disappeared and came back two days later with a folder and a design drawing of a building not more than an hour's drive from here.\n\nFreddy and I poured over the details with him and asked if we could keep everything on the table. It was clear he had no problem with that and left us alone for the rest of the evening. We did find out later that he went to see Constance and inform her of how far his own investigation had gone. Both mother and father had the hardest time at the moment; they knew where their daughter and grandchild were, but it was going to be left to us to get them out alive.\n\nConstance came by first thing in the morning. Rick went with her and they spent an hour talking and sharing a pot of coffee. She came to see me before she left and we walked around some of the buildings; I was going to let her lead on this.\n\n\"This is the hardest part, I know that. I desperately don't want to heap any more pressure on you than there already is, so I will keep this simple. I brought you and your team here for one specific reason; if anyone can get my baby and grandchild out alive its Rick, you, Curtis, and your team.\"\n\nThis time she stopped and turned to look directly at me. \"Those you don't kill I will do my best to make sure they spend the rest of their lives in jail. Do your job Curtis and bring my girls back, please.\" \n\nI got a farewell hug from Constance before her car pulled up and took her away. Freddy followed me back into our hut and we set about pinning all the information we had been given from Cooper, onto the walls.\n\n*******\n\n\"Boss, you've got to come out here and see this.\"\n\nWhen I turned towards the door Chad was already walking away. When I looked at my watch I realized that the sound of gunfire had been going on for close to an hour now; with my attention on the finer details of the mission, I hadn't even noticed. Halo and JoJo were told to zero in the sniper rifles, but even I knew it didn't take that long.\n\nAs I cleared the corner of the hut, all but Lewis were watching from a safe distance. He was standing behind the two laying down, loading magazines from an ammo box on an upturned box. JoJo and Rick had placed a couple of sandbags together and were laying on the ground, their rifles pointed down the runway. \n\nFreddy stood next to me and handed me a scope and pointed to the four cardboard targets.\n\n\"How far?\" I asked.\n\n\"A thousand yards to the inch, they asked me to measure it out myself.\" He couldn't hide his smile as he did.\n\nWhen I looked through the scope again it was obvious that those two were sure getting competitive. Every shot was either a head or chest shot and all on target, although I did notice more than an uncomfortable few holes in the groin area of JoJo's two targets. \n\nI handed the scope back and said. \"Tell them to knock it off before I make them run around the damn base in full kit.\"\n\nNo one saw me smile as I made my way back to the hut and the board I was looking at, trying to glean any other ideas that Freddy and I hadn't had yet, before we left this evening.\n\n*******\n\nFinally finding no more answers to my questions I called Freddy and we again bounced ideas off of each other. When we had exhausted even our own imaginations and 'what if scenarios,' Freddy set a final briefing in an hour. I went in search of Cooper and showed him what we had in mind. He kept his opinions to himself. That must have been the hardest thing he had done in a while. He even sat in on the briefing of my people and I watched his eyebrow raise a couple of times during that as well.",
        "Cooper's own people were watching the building at the moment, other than seeing movement through the windows, nothing was going on. It had just started to get dark when Cooper made the call and pulled his own people out of harm's way so they could be ready to set up a perimeter further up the street.\n\nHalo took the rooftop of the six story building to the east, JoJo took over the roof of the eight story building to the west and radioed in an acknowledgment. I heard them in my ear from the helicopter I was sitting in, once again checking my Sig. A hand rested on my shoulder and the hand then showed me two fingers, I nodded and holstered my Sig and once again checked every pouch was buckled down.\n\nThe only thing worrying me was the rope, I had done the calculations and figured it was within tolerance, the arguing point between Freddy and I was that the length of the rope I needed from the roof down, in weight, would mean I needed to travel light. Light as in a Sig as my only weapon and no body armor. I could see the concern in his eyes and thanked him, even placing my hand on his shoulder when I overruled him.\n\nHad this been a Halo jump, then this conversation wouldn't have been necessary. But the airport was too close to the building, so I would have planes and helicopters, either commercial, personal, police or even television owned helicopters to contend with. We had thought to clear the sky for a few minutes while I jumped and landed, but the sudden silence would have been too conspicuous. It all came down to the winged suit and lightening the load so I had the maneuverability. \n\nRather than end up like a fly on the windscreen of a Boeing passenger jet. My mind didn't want to think what the rotors of a passing helicopter could do. I knew Freddy, he wasn't happy but was faced with the same math I had; we needed to lose the weight to get the rope on board. I also figured now was the time I would find out if my math was up to standard. The hand touched my shoulder once again and I pulled in a breath and jumped, the Wingsuit flapped and seemed to want to make far more noise than I wanted it to.\n\nThe descent and wide circle around the area had started. I couldn't get rid of an odd thought so decided to let it play out. 'So tell me Curtis, what did you do today? Who me? I dressed up like a bat and flew round in circles until I landed on an abandoned office block roof to rescue my friend's wife and family. Just the usual then? Yep.'\n\nI could now see the laser-light that JoJo was using to mark the building and adjusted my flight trajectory ever so slightly. The light went out a second before I landed so JoJo must have seen me. I landed feet first, but rolled before coming to a halt flat on my back. Thank God no one saw that.\n\nPulling the suit off was a relief. While I tied the rope off I touched the button to my comms button. \"One. Sound off.\"\n\n\"Halo, three to the east on the fifth floor.\n\n\"Seven, (JoJo) two to the west on the fifth floor.\"\n\n\"Two, (Freddy) six on the ground floor, charges set.\"\n\nI dropped my rope over the edge and harnessed myself to it. I stood on the parapet for a second looking out over the city and its lights, paused for a moment more to admire the beauty of this fare city and then pushed my comms button.\n\n\"Let's do this. Two, I need that door.\"\n\nI then leaned over the edge and with Sig in hand, I speed rappelled down the outside of the building. If anyone had been able to part the darkness, they would have seen a man dressed in black and running down the outside of a supposedly abandoned building.\n\nI knew I wouldn't hear the silenced sniper rifles Halo and JoJo were using. Both buildings they were on were residential and we didn't want to scare the crap out of the residents. Counting the floors as I rappelled passed them, the shattered window I came to was a big hint that I had arrived, the extra five feet of rope a sharp reminder that this is where I get off. The two dead bodies further in were a gift from JoJo as well.\n\nNow unhooked and free of my harness I again pressed my comms button. \"Two, (Freddy) do your thing. Halo and seven, (JoJo) I'm in your hands, let's go.\"\n\nI ran past another shattered window and three dead bodies, the forth almost made it to the stairs and' safety. My running must have alerted the person inside the tent in the far corner of the fifth floor. When I pulled open the flap she recognized me instantly even through the HRT uniform and face mask. I cut the ropes on her wrists and handed her the knife.\n\n\"Remember how to use one of these?\"\n\nShe smiled, she sure looked dangerous when she did that. \"Hell yes.\" Was her immediate reply. The explosion from the ground floor meant that help was now in the building. As Kitten cut through the ropes binding her daughter, I heard six more explosions and that worried me. \n\nWhat came over the radio next only confirmed it. \"One, this is Halo. They have cut the roof off, incendiaries. The roof's already ablaze, they must be using an accelerant.\"\n\nDon't you just hate it when all those hours of planning, turn to shit so quickly.\n\n*******\n\n\"Kitten, we need to get you and Cub out of here and now. We have five floors to get to the ground, we've got to head for the fire exit.\"\n\nI didn't have the time for her to fight me on my next statement and fortunately Kitten only nodded her head when I told her that it would be quicker if I carried her daughter. The fact I had reverted to Brooke's call-sign wasn't lost on her, or that her daughter had a designation either. \n\nKitten grabbed a blanket and wrapped her daughter in it. \"Uncle Curtis is going to carry you sweetie, mommy is going to be right next to you but we can go see daddy faster if we let uncle Curtis carry you. Okay baby?\" \n\nEven at such a young age she grasped key words her mom was using and looked at me, she was sure her mother's daughter. The face mask didn't fool her, she looked directly into my eyes and I smiled behind the mask in the hope she caught that smile.\n\nShe did and her smile grew as mine did, her arms came up and she said. \"Carry, Uncle Curtis.\"\n\nLifting her into my arms I showed her what to hang onto, she only nodded once. Then Kitten pulled the blanket over her daughter's head and promptly poured every water bottle over her she could get her hands on. \n\nCub screeched and then giggled. \"All wet momma.\"\n\nThe noise from my radio gave us a fresh impetus. \"One, this is three (Chad). The fire is fully engaged, they set the building to burn to the ground with you all in it, get out now.\"\n\nAgain clicking down on my comms button, I said. \"Halo, you and seven (JoJo) keep them away from us from above, the rest of you secure the doors to the east of the building.\" \n\nThankfully all acknowledged. The last to do so was Halo. He knew I had his family in my hands and now in the process of getting them out. All I asked in return was that he team up with JoJo and do the best they can to keep the scavengers off of us.\n\nThere was no, ready, set, go... We just nodded and ran for the fire exit. The scavengers knew instantly that the fire exit was the only chance we had. Between Halo and JoJo they cut right through that delaying action; we found all four of them dead by the door. Kitten kicked it open and Cub seemed to seek some comfort in holding on just a little tighter, my right hand had my Sig in it, my left arm was around Cub. I held onto a spare mag in my hand but I wasn't even sure I could change mags in a hurry when I was empty. \n\nAs we ran I listened to my comms, a strange sniper talk was going on between Halo and JoJo, if targets moved out of direct line of fire, they would hand over the target to the other and have that one waiting in anticipation for said target to come into line of sight. This night would have made them the most lethal pairing I knew of.\n\nWe managed the first three floors with ease and that alone worried me; however, the gunfire from below told me a great deal. I grabbed Kitten's shoulder and stopped her journey down the stairs. My boot attacked the fire door and it opened, Kitten followed.\n\n\"Three and Two, (Freddy & Chad) keep making noise at your position, I need the rest of you to concentrate your firepower at the west of the building.\" \n\nKitten had already crossed the second floor and used her shoulder on the door, which caused the guy behind it to take a step back and me to drill a hole in him. He was making a quicker exit from the building than us when he toppled over the rail. Unknown to us both, we failed the last test. Kitten tripped a wire on the last step to the ground floor and the foyer beyond the only door in front of her; a homemade incendiary exploded behind me, covering my whole back with sticky fire.\n\nI didn't shout, it would have slowed Kitten down. Cub must have sensed something because I felt her hang on tighter. It was that one act that kept me moving. I had promised my best friend that I would get his wife and child back. That promise wasn't negotiable.\n\nI had to compartmentalize everything. That's a dangerous thing to do in this situation but I just prayed the cavalry would arrive before the fire reached its conclusion. Cub was safe, tucked into my chest and holding onto my webbing as I ran. Because of my forward motion the fire couldn't grab a firm foothold on my HRT uniform, something that would rapidly change when I came to a stop. \n\nKitten flung herself at the door and kept running into the foyer. The scavenger standing in her way now rested in peace, due to a bullet to the head. That was when I just couldn't keep running anymore. \n\nI fell to my knees and let go of Cub. Her head popped out of the top of the blanket and she looked at me. Her silence spoke volumes; she had tears in her eyes and I said. \"Please don't be sad, you're safe now.\"\n\nKitten scooped her daughter into her arms and screamed as I fell forward. This time the pain was winning. I heard the familiar sound of boots on floor. The cavalry had arrived and breathed a sigh of relief. I could stop now, they were safe. But that safety brought with it its own price and it was time to pay up.\n\nI was facing my own hell now. Kittens scream followed me there. \"Curtis your backs on fire.\" \n\nThe pain was so real and with the remaining air in my lungs, I screamed. My body was held down and yet felt like it was being thrown about. Something was stuck into my neck, the darkness came and the pain went away. \n\n*******\n\nI was told sometime later that Freddy took over command seamlessly. The cordon around the building was lifted just long enough for an ambulance to arrive and disappear, never to be heard from again. Halo and JoJo joined the Unit, masked up and all marched out in a blaze of publicity shots with Brooke now carrying her child in her arms and a bunch of masked up, ugly looking HRT folks almost surrounding her.\n\nFreddy let Cooper know that the whole building was booby-trapped and not to let the fire people inside. So, one part of the news crews watched the team pack up and leave, the other half watched the building burn to the ground. Forensics were going to be busy for a while, that was for sure.\n\nFor the next few hours, Cooper stood in front of the burning building letting the news crews know that enough information on the kidnapping had been seized from the burning building to continue his own investigation. Meanwhile across town a couple of shredding machines were busy when Cooper's men crashed that little party, waving warrants and arresting some very interesting people that really didn't want the cameras from the press that followed Coopers people taking pictures of them in handcuffs.\n\nThe ambulance pulled up at Walter Reed Hospital. The fact that the burn victim was wearing a HRT uniform raised a few eyebrows, but everyone knew where this call came from. Asking questions that weren't medical was something that these people didn't do.\n\nI was just told fragments of what went on at the hospital by my people, when the medical staff heard it they asked my people to stop. I was a big target when that boob-trap went off, my back was one big burn area, from my neck, upper arms/shoulders, and lower back. Bradly had managed to stop the drizzle spreading any further and I sure owed him a damn good bottle of Malt Whisky for making that happen.\n\nAfter pulling the shrapnel out of the mess that was once my back, the surgical team placed auto-skin grafts on the worst burned areas. The surgeon talked to Freddy when he came out of the operating theatre. The English accent was noted but not asked about, it was going to be the next few hours that where critical. The grafts needed to take before infection managed to grab too big a hold. The surgeon did note that due to the high physical fitness of the patient, it was going to be a positive.\n\nAll Freddy did was thank the surgeon and asked him to convey said thanks to the rest of his team. I don't think he was expecting so much and yet so little from the man in front of him. \n\nAs hours turned to days and days turned to weeks the list of people allowed to see the patient slowly increased. There was always a man or sometimes one single woman that sat outside the patient's room. The hospital tried to discourage this, saying that the patient didn't need to be guarded in a hospital. Within the hour the Hospital's administration people told the nurses and doctors to offer food or drinks, but to leave the guard alone. \n\nWhen the hospital deemed the patient fit enough to travel, another ambulance came for him. His file was handed to one of the people that sat outside his room and Mr. Smith was never heard from again.\n\n*******\n\nRick was there when the ambulance took me to the ranch, Constance was close to tears and had to excuse herself for an hour before Brooke went in search of her and dragged her back into what was now going to be my room, it must have cost a damn fortune converting this room into a mirror image of a hospital room. I'm sure the full time nurse didn't come cheap either. \n\nThe new doctor tried cutting me out of the information loop and always talked to Constance rather than me. I put a stop to that straight away, much to his annoyance. Rick came back a week later with a woman, a nice lady until she told me that she was going to be my physical fitness trainer, the tattoo of the Marine Corps on her upper arm told me I was in for one heck of a ride When I was allowed out of bed I was given something akin to swim shorts and told that was it.\n\n. \n\nAnd so began the balancing act of getting fit again, using stretching techniques that didn't figuratively pull the skin off my back. The lack of anymore clothes was also a contributing factor since Marine girl didn't want anything rubbing on the new skin. So the pool was a great equalizer in both getting me fit and keeping the grafts from drying up. \n\nIt took months to get me back to good health. Every time I tried to push the boundaries the hardened skin would break and bleed. Between Constance and Brooke, they took turns applying cream to my back and arms. It was as embarrassing as hell and I sure felt uneasy about it. Both women ganged up on me and told me that it was the least they could do. \n\nLife at the ranch was slow and perfect for me to get better, I sent the Unit home to their families, except JoJo stayed, although she would disappear for a day or two from time to time. It seems she was helping Cooper mop up and used her old job under the joint relationship we have between our countries to circumvent those trying to monitor Cooper's investigation. \n\nHe saw a great promotion looming. I got to see a child's smile every time she came into the room, and that hug sure does make my heart beat more loudly in my chest. \n\nJoJo and I watched the news as those that had managed to evade the law, suddenly succumbed to it. We had a quiet dinner party that evening and our plane left late the next day.\n\nMy boss was sitting in my chair when I got back. Good thing I knew the drill, I was officially placed on leave, pending a medical review of my fitness. \n\n*******\n\nSome months later, I was sitting alone on a bench that had one of the best views of our countryside contemplating my life and future. I was alive because I had six of the best people in this man's army not only looking out for me, but each other. I loved my job, and even better, I got paid well to do it.\n\nMy back was now healed, or at least as healed as it could be given the damage to it. The skin grafts had knitted well enough that it no longer cracked and bled, my bodies own fluid system had simply learned to re-route, to keep the skin alive. I had done a couple of walks with a backpack, slowly adding weight to it over time and that was thumbs-up time as well. An hour ago I sat my final assessment with the doctor who took over when I came back from America. He had now signed me off and sent that same information to my boss. \n\nIt was as my thoughts were just turning to another peaceful evening aboard my boat that my cell rang. My boss welcomed me back and said he would be leaving my seat no later than six this evening, ready for me to take over tomorrow. My eyes once again scanned the beauty of this landscape. I thanked him; he knew why and harrumphed down the phone before severing the connection.\n\nMy eyes once again scanned the beauty of this parks landscape. A young family stepped out of their car, the mother put the stroller together and a small child emerged from the child's seat in the back. They all smiled at each other and set off to walk the trail around the lake.\n\nYes, I loved my job, my friends, and as I watched those three people walk that trail, my heart missed a beat or two before I realized what had crept up on me. I chased it away; it had no place in my thoughts at the moment. The smile also took a hit as my thoughts turned to the doctor's last words to me.\n\n\"You're not getting any younger Curtis, your body was able to find its way back from this and in a way I hope you look on this as a second chance.\"\n\nI shook his hand and wished him well; he noticed I didn't answer him.\n\nYes, I love my job... But what else is out there for me..."
    ],
    "authorname": "markelly",
    "tags": [
        "kidnapped",
        "rescue",
        "halo",
        "kitten",
        "cub",
        "the unit",
        "friendlies"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/curtis-woodman-ch-01"
}