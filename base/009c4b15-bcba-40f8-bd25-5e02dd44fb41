{
    "title": "If I Knew Then... Ch. 10",
    "pages": [
        "I remember my fiftieth birthday. It was fun. A party, with my lovely and loving wife, friends and family. There was cake and music and some reminiscing. At the end of the evening I drank a last toast with my old pal Owen, who had come over from London for the party. I hadn't seen him in years, although we kept in touch by email. The toast was \"Absent friends.\"\n\nIt rang in my ears for days. Weeks. Years. What if I could go back, what would I say to them? What would I change? What paths untrodden would I take? What would I have done if I knew then what I know now?\n\nI thought I would run wild, seduce and abandon girls all round me, try all the drugs I was too scared to take, bet on the right horses, tell the bad guys what I thought if them. \n\nOf course what I didn't count on was that a more knowledgeable me would still be me. Same basic values, same basic ideals and desires. Same old me. Yes, I desired many women, but I also desire stability and love and trust and self respect. I believe in promises and love, protecting others and being honest. \n\nSo now, this time around, with a chance to do it again but with that experience to draw on, I remember it all. I'm eighteen, and it is the 1980's. I know 'then' what I knew in 2020 (now? Time travel will be so confusing.) Which is why I am rich with the ill-gotten gains of gambling on certainties and the woman I didn't choose (regrets...) is now my girlfriend. The woman I did choose (I've had a few...) is also our girlfriend. And this weekend coming one of the life shaping events of my friend Mike's life will take place, at a party that we will be going to. The last time round I remember turning down the advances of a lovely girl called Liz, (but then again...)\n\nThis time I think I will try to take the opportunity. After all, even with the advantages of experience, opportunities are rare enough (too few to mention...) Although this time I will need to square it with both girlfriends...\n\nI met the girls at the usual place and we went for coffee at our usual caf\u00e9. They had both been pleased to see me but both were also out of sorts. I asked what was wrong but Jill said \"Coffee first.\"\n\nSo with two Americanos and a Latte on the table, I asked again \"What's wrong?\"\n\nJill sighed. \"Nothing serious. Just bad news and bad news and bad news.\"\n\n\"Okay, let's start with the bad news then.\"\n\nJill looked at Penny. Then started \"My Aunt is fifty on Sunday. We are going to her party on Saturday. In Preston. My parents are picking me up on Friday from school then it's off to the boat to Scotland, not back until eleven on Sunday.\"\n\n\"Oh. Oh bugger.\" I said. \"That is bad news.\"\n\nPenny chipped in. \"It gets worse. My parents are taking me to Cork. Leaving Thursday, not back until Monday. They have got me two days off school for the trip. Granny died. Funeral is on Friday.\"\n\n\"Oh, Lord. Oh that is terrible. I'm so sorry,\" I said.\n\nPenny shrugged \"We weren't close. I mean I only saw her once or twice a year. But it means I won't see either of you for days. Which is horrible. And I feel really bad about feeling that. I mean I should be more upset about Granny, but I'm most upset about you two. And then that bitch Elaine had to butt in!\"\n\nShe was almost in tears. I took her hand, and said \"What's up honey?\"\n\n\"More bad news.\" said Jill, grimly. \"Penny was crying at lunch, she had just told me about her Gran, and I hugged her and I forgot myself and I kissed her. Just a peck. And Elaine saw us and blabbed.\"\n\n\"Oh. Ah. Awkward.\" I said. \n\nOur unusual arrangement was not public knowledge. Of course we expected that one day it might be, but we knew how lesbians were treated in Northern Ireland. And we could guess that a three way partnership would more than raise eyebrows. And of course girls in a girls-school can be vicious, especially about same sex relationships. \n\n\"Oh I covered for it.\" said Jill, and she looked heartbroken. \"I told everyone Elaine was being mean and silly, I was only hugging Penny because her Granny died and she was crying, and of course I didn't kiss her, and not to be daft. But the word is out. So we will have to be extra careful now. And I feel so bad about denying it. I feel bad about lying. I want to take Penny and snog her in front of the whole school and say I love her and tell them all to shove it.\"\n\nShe looked so fierce and strong that my heart leaped. I held her hand and so did Penny, and I started to say \"I'm so proud of you. Both of you.\" as Penny said \"Oh don't! You can't. I know it's hard but it's only for a few more weeks then we are out of school and we can live the way we please.\"\n\nJill shook her head. \"I know. I know. But I feel sad. And ashamed for not standing up for you. For us. And I don't think that even when we leave school it is going to be easy. Easier, maybe. But not easy.\"\n\nPenny nodded. \"Well, yeah. But at least we will have our own place and can close the door on them all. But now we won't even see each other all weekend. And then the following week is Easter, and then two weeks after that the exams start.\"\n\n\"Yeah.\" I agreed glumly. \"And there is a big party this weekend, Steve is having a house-warming.\"\n\nJill perked up. \"Which Steve?\"\n\n\"Year above me Steve. Sax player and all round good guy. Haven't seen him in a couple of months so I don't think you have met him.\"\n\n\"Blonde? Sharp nose? Wicked smile? Nice ass?\" said Penny\n\n\"Well, I'll give you the first three, but I refuse to comment on the niceness or otherwise if his backside. You know him then?\" I said. \n\n\"I saw him play with Owen's band. Good sax,\" she grinned. \n\nTalk passed on to other things. Our house, mostly. A few weeks more and we would have the keys. But we still had to square it with the girls parents. I suggested a man-to-man chat with their fathers. Both of them weren't sure. So we left it open, but I knew we would have to resolve it soon. \n\nThe week flew in. I took Penny out on Wednesday as usual, and we spent some time semi-naked in the car parked in the driveway of the house that was soon to be ours. It was good to know the garden was so secluded. Then we picked up Jill to each share a kiss, and drop Penny home. I spent a precious few minutes with Jill before I had to deliver her to her parents' door. We arranged to meet on the the next day. \n\nI took Jill to our (nearly) house, and we made love in the car on the same spot as I had made out with Penny the day before. Jill had no qualms about stripping off entirely, and I was again struck dumb by the beauty of her taking off her blouse and bra and jumper all in one go. She had simply the most perfect bosom I could imagine. And she kissed me so softly, so openly, so completely, that I almost wondered why I ever wanted to kiss anyone else. Which made me feel bad about Penny, for a moment. And bad about my ideas for Saturday night. \n\nAs if she had read my mind Jill said \"This party on Saturday, are you going?\"\n\n\"Yeah. I promised Mike a lift, so I'm duty driver. I'm taking Owen and Lenny as well.\"\n\n\"Hmm. Well that will make it hard for you to be discrete if you pick up a girl.\"\n\n\"Ooh, you think I might score if you aren't there to put them off?\"\n\n\"Darling,\" she said, kissing me, \"You are too gorgeous not to score. And you know if you wanted one, and I was there, I'd help you get her.\"\n\n\"Yes, I believe you would. But only if you got to play with her too?\" I teased. \n\n\"Hmmn. Well, maybe. I do like playing with girls. Well, with Penny. I've not had any others. But I do like the idea. And I do like watching you with Penny, and I'm sure it would be fun to see you driving someone else crazy. You are so good at that.\"\n\n\"Flattery will get you everywhere. So if I pick up a foxy chick on Saturday you will want to snog her on Monday?\"\n\n\"Hmmn. Maybe. But, well, not all girls do. But more importantly, I wanted to say, well,\" she hesitated. \"Well, I don't mean to tell you what to do, or not do. We've talked about this. But I know late at night, a girl and drink and a good looking and charming Sean is a devastating combination. It's just if you do go with another girl and the word gets round at school it will make it difficult for me, perhaps. And if you invite her to play with me too, then that could backfire and that would give me a bad reputation. Which would hit Penny as well. Elaine hasn't let up. She is going round saying she'll tell you that I'm a lezzie and you will dump me.\"\n\n\"Well, I'd love to have that discussion with her. But I get your point. If opportunity and temptation arise I will be the soul of discretion.\" I promised. \"Do you want me to have a discussion with Elaine?\"\n\nJill looked surprised. \"What would you say?\"\n\n\"I'd tell her that I am very annoyed that she is trying to hurt you, and Penny. That I am very much in love with you, that I know you love me, that you are quite clearly not a lesbian. That it wouldn't matter to me if you kissed Penny or a thousand girls. That jealousy and small mindedness are ugly, and she is getting a reputation in my school for both those ugly attributes, as well as in hers.\"\n\n\"Oh. Well, that might work,\" she smiled. \"But I'm getting goose bumps, despite your lovely warm body against mine, and it is time to go. So give me a kiss to keep me warm until Monday, and then we have to dress.\"\n\nI did my best. \n\nIt was weird on Friday, not seeing the girls. I worked on the car. And all day Saturday. But at seven I picked up Owen and then Len, and then Mike and then a carry-out for the lads (a slab of Carling Black label) and I bought a nice bottle of wine for our hosts, and a couple for my own purposes. We rolled up outside Steve's place in Lisburn at about a quarter to nine. \n\nIt was still quiet. Civilised. Sober. By half ten it was in full swing, by midnight it was a night many wouldn't remember, but many would look back on fondly. But that is jumping ahead. \n\nStevie was a year older than me, already at University, and now living with his girlfriend, Oonagh. So the party was full of people I had never met, University students and people in the local music scene, as well as a few guys I did know from school who had been in Steve's year and above, and us four schoolboys. \n\nAnd in the middle of it was Stevie's little sister, Lizzie, and her friends, one of whom was called Tara. Usually Mike and Lenny and Owen would have got drunk and talked to other guys while eyeing up girls they hadn't the courage to talk to. But Mike had changed. Virginity gone, confidence raised, Mike was able to mix and mingle, and small talk and join me in conversation with mixed groups and even, amazingly, single girls. \n\nI was actually worried at one point that he might hit it off with a couple of them. He was tall, handsome, blonde haired and blue eyed, his voice was deep and rich, he was good humoured and affable \u2013 he was more likely to pull than anyone else in the room. \n\nThe thing was I knew that in a previous version of this life Mike and Tara had met at this party and started a ten year relationship. This night changed both of them and defined their lives (and their child's life). That time it had all started because shy Mike (virgin with no confidence around girls) got talking to Tara because met in the queue for the loo, thrown together by mutual calls of nature that ended up with them both in the bathroom semi naked and drunk. Okay, not perhaps the ideal way to meet, and yes they did have an acrimonious and dreadful separation in the end, but it was a huge part of both their lives and I felt that I shouldn't act to change that. Now, because of my actions and choices they might never get together. Because this time round the first time they talked was in the kitchen, both sober, and Mike was being far to attentive to a blonde called Mary who kept cutting Tara out. \n\nThe only hopeful sign was that Tara was obviously interested in Mike. So I had to engineer things. I chatted to Tara. Not flirting much, just enough to flatter her. But enough to establish that I thought Mike liked her, and that he was too shy to say so. I counselled her to intervene, and I would help. Which meant that I cut in on Mary, and drag Mike off to see an old school chum who had just arrived, and brief him about Tara. He was a bit annoyed. \n\n\"Look I was doing fine with that blonde girl. What did you butt in for?\"\n\n\"Because Mary is a class-A bitch, Mike. She led Jim McCartney on so he took her to the School Formal last year, then dumped him after the dance. Then she led Frank Bradley on up to Christmas, got the very nice pressie she had hinted at, bought him socks or something crap and dropped him on New Years Eve at a party, going off with a guy with a sports car. Then dumped him and went out with Phil for two weeks before the Formal this year - guess what happened to him the day after the big party? Okay, she's pretty and funny, and her hair matches yours, but she doesn't put out and she is a user. And she is just chatting to you to block Tara, the pretty redhead, of whom she is jealous,who really does fancy you.\"\n\n\"Seriously?\"\n\n\"Seriously. Look I'm not saying she'll shag you tonight, or next week, but Tara is a nice girl, and she has the hots for you. So, if you fancy her even a little... your in. So if you like I will distract Mary while you talk to her.\" I said. \n\n\"I dunno. Tara, the little red head? I mean. She's pretty enough, okay, but she is little. I mean really short.\"\n\n\"Okay, she isn't tall. But neither are you when you are lying down, even if you are a ridiculous waste of height standing up. Look I'm not saying you have to, but she's nice, and Mary isn't. Give it a whirl.\"\n\nSo I spent two hours talking to Mary, who was quite a smart girl and, it must be admitted, very pretty when she smiled, but at core an ice cold harpy. And Mike talked a bit with Tara, and a bit with Lizzie, who interrupted, and then with a girl called Diane who wanted to talk about synthesisers, and then with Stevie about music in general and getting the band a gig, and then with other guys about their bands. And all the while I sank into despair, and began to find Mary too vapid and unpleasant to tolerate. Finally I saw Tara heading for the stairs. I broke off my conversation with Mary and grabbed Mike. \n\n\"You need the loo.\"\n\n\"What?\" he said, looking blankly at me. \n\n\"Trust me. You know how I know things sometimes? Well, this is one of those things I just know. Go to the loo. Now. Quick.\"\n\nSome things are fated. Even if sometimes fate needs a hand. \n\nMy memory of this party had me leaving early, partly because I wanted to escape the attentions of Liz. So that time just after Mike had encountered Tara in the loo, I had dragged him away. This time I had hardly got a chance to speak to Lizzie, and I although I did have to run the guys home, I could wait another hour or so. It was only just past eleven. I turned back to the party, looking for Liz. \n\nI found her. She was talking to a guy called Rain. Who was rolling a joint and telling her about his pad in London, and the band he was playing with. Tough competition. Especially since he was dressed in London fashions, and was, to be honest, quite handsome and exotic with his streak of electric blue hair and his gold rings and ear stud. But since I knew his real name was Ciaran, and his dad was an accountant, and at school he had been called 'Dozer' I reckoned I could take him. \n\n\"Hi Ciaran, how's it going?\" I asked, slapping him on the shoulder. \"Not seen you in ages - from the look I guess you have got out of that Punk group.\"\n\nHe looked at me with barely concealed dislike. \"Yeah, man, I'm in London now, with a new group. We are recording a new single next week.\"\n\n\"Great, I'll have to get a copy, if it is on sale in Belfast. So if you've split the group is Seonaid still with you?\"\n\nHe looked shifty. \"She's still doing backing vocals, yeah.\"\n\n\"I keep saying you should put her out front - she has a great voice and, well, she's got the looks. I mean, no offence, and I know she's your girlfriend and all, but I'd pay to see her on stage before I'd go to see you. Anyway, good to see you, Dozer, but I have to steal Lizzie away here. Her friend Tara needs her help with something.\"\n\nLiz looked at me with curiosity and exasperation. Ciaran's look was pure loathing. \"What does she want?\" asked Liz. \n\nI smiled and held up my hands \"I'm just the messenger, but if you would follow me...\"\n\nI turned and gestured toward the kitchen. She shrugged at 'Rain,' saying \"Catch you later.\"\n\nThe kitchen was \"L\" shaped, and I led her round the corner through the crowds. Tara wasn't there. Liz looked daggers at me. \"Where is she?\"\n\nI shrugged. \"Not here. Sorry. But I'm sure she will be back in a minute. Maybe she went to the bathroom. Here, while we wait, why don't you have one of these?\"\n\nI reached deep into the fridge and pulled out a bottle of white wine. I had stashed three there at the start of the party, but only one remained. She accepted. We chatted. I gradually won her round and warmed her up. And she began to flirt. And made a derogatory comment about 'Rain'. And I flirted back, and when Tara appeared with Mike, both a little flushed looking, Liz didn't ask what Tara had wanted her for. We shared the wine, and Mike came up with an idea.\n\n\"You know how you have to run Owen and Len home? Well why don't you do that now, and then come back. You could have a drink then. After all, you did say to your folks that if you had a drink you wouldn't drive, and you might stay over at my place anyway, and my parents aren't waiting up for me, so I don't have to go home. We can party all night. It's our last chance before the exams.\"\n\n\"Well, I suppose I could. But am I going to get back here and find you unconscious and have no one to party with?\" I asked. \n\nOn cue Liz spoke up. \"If he's out of it I'll still be here. I can party all night too.\" The look that accompanied that statement was quite saucy. \n\n\"I'm sure you can. But you may be stolen away by Rain by the time I return.\" I chided. \n\n\"Well why don't I come with you? Keep you company on the run?\"\n\n\"Good call.\" said Mike. \"And I'll stay here and keep Tara company.\"\n\nIt took a little while to herd Len and Owen to the car, and I explained Lizzie's presence (and Mike's absence) by saying she had to get home soon, so I was dropping her off before going back for Mike. Owen insisted she sit in the back with him. Which was okay, they were old friends, since he had played in bands with her brother quite often. \n\nShe moved to the front seat when Owen got out, Lenny having been dropped off first. \n\nOn the way back to the party she put her hand on my knee. \"You know we don't have to hurry back.\"\n\nI was fairly sure that Liz knew I had a girlfriend, but I wanted to check. \"Where would you like to go?\"\n\n\"There is a car-park down by the dam. It's nice and quiet.\"\n\nI knew the spot well enough. It was often not that quiet on a Saturday night. \"Are you sure you want to go somewhere quiet with me? You do know I have a girlfriend, don't you? I did mention her earlier.\"\n\n\"Yes, but she's not here.\" Lizzie said in seductive tones. \"And I won't tell her.\"\n\n\"Why do you think I'm that sort of guy?\"\n\nShe laughed and ran a finger down the inside of my thigh toward my crotch. \n\n\"Because I'm that sort of girl. Because I think all guys are that sort. And anyway, I asked Mike.\"\n\n\"What did you ask him and what did he say?\" I asked with a slight chill of fear. How indiscreet had he been?\n\n\"I asked if you had a girlfriend, and he said 'Yes, at least one.' Which I took to mean you may be two timing her. So three timing, just this once, shouldn't be a problem.\"\n\n\"Did he say anything else about these multiple girlfriends he thinks I have?\" I asked as casually as I could. \n\n\"No. In fact he was quite embarrassed at what he had said. He covered up for you as well as he could. He said something about your girlfriend having a clingy friend who was always hanging about, so you ended up going everywhere with the two of them. But I didn't believe him. Should I? Are you really such a paragon of virtue?\"",
        "\"What if I told you that my girlfriend and I have an understanding. That she is away for the weekend and knew I was going to this party and told me that I was free to pick up another girl if I wanted to?\"\n\n\"I'm not sure if I would believe you. But if it is true, will you tell her about me?\" Liz asked boldly. \n\n\"Yes. We have no secrets. It's how it works.\" I said, as I turned the car into lane that leads down Duncan's Dam. It is called 'Dam Road' which I have always found a little amusing. \n\n\"You are serious,\" she said with surprise. \n\n\"Very.\" I said, pulling up under a tree, and switching off the engine. \"How serious are you?\"\n\nShe gave me an appraising look. \"Very.\" She looked at me boldly. \"How serious is she?\"\n\n\"Very. And we do very serious things.\" I said.\n\n\"In this car? With her?\" Liz looked excited and curious again. \n\n\"You want me to tell you or show you what I can do?\" I countered. \n\n\"Hmm. Come here and we'll see.\"\n\nShe slipped a hand behind my head and drew me to kiss her. It was a good first kiss, confident and gentle, and quickly building in passion. \n\n\"Hmmn,\" she said \"Not a bad start.\" \n\nShe kissed me again. Things got more heated. We started to explore each others bodies over our clothes, and as I squeezed and pressed and caressed her I was rewarded by sighs and moans that carried a depth of meaning and promise. \n\nWe were both in jeans, which have advantages, in that everything is both covered and available, but disadvantages in that uncovering anything is a major operation. \n\nIt wasn't long before major operations started. \n\nLizzie had quickly gone for my belt, and button and zip. I had been less direct, not wanting to rush her, but it seemed that she was set at a different speed. \n\nHer hand was in my fly and quickly inside my underpants, gripping me quite firmly as she cooed \"Nice,\" against my neck. \n\n\"Thank you,\" I said as I slid my hands up inside her blouse to cup her breasts inside her bra. \n\nI gently squeezed them and then reached around her back for the hooks, but she laughed and said \"Wrong way, boy.\"\n\nIt was front opening. I laughed too and found the clasp, and she sighed as my palms brushed over her bare skin. We kissed again for a few moments, her hand squeezing my cock as I rolled her nipples with my thumbs, and then I moved my hands outside her blouse, reaching for her buttons. As I unbuttoned the first one she placed her free hand over mine, and said \"Before you undo these I have to warn you.\"\n\n\"Warn me? About what?\" I asked, jokingly, but then I saw she was serious. \n\n\"I, I'm a bit different from other people,\" she said nervously. \n\nVisions of huge birthmarks, hairy moles and burn scars flashed in my mind. What could she mean?\n\n\"I, I have no belly button,\" she almost whispered. \n\n\"What?\" I said in relief and disbelief. \"How can you have no navel?\"\n\n\"When I was a baby I got an infection in the bit of cord that should have been my bellybutton. So they had to cut it back and stitch it up. I used to have a little scar, but even that has just about gone now. So I just don't have one. Which looks weird. I know. A couple of guys have been very freaked out by it. So I thought you should know.\"\n\n\"Wow.\" I said. \"This I have to see. Or not see. But I definitely need to look and check.\" I grinned at her.\n\nShe looked relieved, and helped me undo her blouse, and pulled it open. \n\n\"Wow.\" I said again. \"Okay, no tummy button, but these are beautiful.\" I leaned in to kiss her nipples and suck on her firm breasts. They were smaller than Jill's, and her nipples were prominent, what is sometimes called 'puffy'. She was obviously a late developer. But they were sensitive and erect, and as I sucked each in turn she squirmed and sighed. Then I moved my kisses down to where her navel might have been. There was not much light to work by, but I couldn't see even a trace of a scar. \n\n\"I don't suppose you are just tricking me. Is it just that your navel is set low down, below the top of your jeans?\" I said with mock seriousness. \"I think I should check. If you don't mind.\"\n\nShe raised her bottom off the seat and made to undo her jeans and pull them down to mid thigh. She was wearing quite skimpy cotton panties, with stripes. There was still no navel in sight. \"See?\" she said. \"Nothing hidden.\"\n\n\"Well, now. I wouldn't say that. If you have nothing to hide why are you still wearing these?\" I asked, as I ran a finger down from the top of her pants, over the spongy mass of hair beneath the thin material and into the softly outlined cleft below. I rubbed up and down, feeling the material become wet and slick. She moaned softly and enticingly as she closed her eyes. \"What have you got in here then? Shall I have a look?\"\n\n\"Oh, you know damn well!\" she groaned. \"Ah, ah, oh yes, here let me help.\"\n\nShe pushed them down, and her jeans as well, so both were round her ankles and she could open her knees. I was still leaning over with my head at her waist height, and now I could clearly see the thin lips of her complex and crinkly pussy. I was hardly covered by the quite sparse and straight brown hair that sat in a tuft on her mons and lightly fringed her opening. \n\nShe was wet and her lips were open where I had run my finger over them. I took a second to admire her almost entirely naked form, noting just how strange she looked without a navel, which was subtly disconcerting in a way I would never have thought about had I not seen it. But she was beautiful nonetheless. She was very different to both Jill and Penny. Penny was generously curved, and middle height. Jill was slimmer, but womanly, and taller than Penny. Lizzie was shorter than Penny, thinner than Jill, and lacking in curves. She wasn't anorexic or supermodel skinny, just undeveloped, gamine. Her thighs were tiny, her bottom a round peach, her arms willowy. She weighed nothing. I was almost afraid I would break her, but that delicacy, and the smoothness of her skin, the hints of bosom and hip, pubic hair and crinkled nipples, beaming smile and lustful eyes, gave her an elfin charm. \n\nI dipped my face to taste her, lifting one leg to the side so I could run my tongue from clitoris to the depths of her opening and back again, sucking on her hard little nub and sliding my tongue-tip inside her. \n\nShe leapt and writhed and cried out and almost screamed. It was a more excessive reaction than I expected, and I hesitated as she grabbed my hair and nearly shouted \"What are you doing? Oh, oh Christ, oh bloody hell! Oh!\"\n\nShe went rigid as I held still. Then I sucked on her clit again and licked it, flicking it rapidly. She squeezed my head and half screamed \"Oh Jesus, oh Jesus!\"\n\nIt occurred to me that this was perhaps the first time anyone had done that for her. I smiled to myself, and determined to carry on. \n\nShe kept swearing as I slipped a finger into her, then a second, and as I licked and sucked and buzzed and finger fucked her to a breathless quivering orgasm. She gripped my head ever tighter, finally forcing my face hard into her crotch, as she bounced on the seat and let out a series of short sharp barking noises that ended in a wail. Liz finally released my head as hers was thrown back and her body spasmed. \n\nI let her rest for a moment and sat up, stroking her hair and holding her hand that had grabbed mine tightly. \n\n\"You okay, Liz?\" I asked gently\n\nShe opened her eyes and nodded and drew breath. \"Oh yeah.\" She breathed deeply and looked at me and grabbed my head. Dragging me to kiss her. As she sucked my tongue into her mouth she pulled at my shoulders and waist, moving me over on top of her, between her legs, and she grabbed my cock and pulled me towards her pussy. \n\nI went with the frantic flow, entering her, pushing deep into her, and responding to the urgent pulls on my hips, penetrating her fast and hard, pumping hips quickly, driving her to another orgasm with rapid strokes. She arched her back and held her breath, and I kept going, my hips had their own urgency now. I took her hard and fast, and deep, feeling my balls tighten as I drove into her, looking down on her tiny body spread beneath me. \n\nI was about to come when I was struck again by how strange the lack of a navel looked. This was what Adam would have seen when he fucked Eve, if ever the pair existed. My cock didn't care. It was doing the oldest dance in the world, and the explosion of pleasure that filled my body with light, and hers with my come, swept away all thought. \n\nShe clung to me, and I hugged her, she kissed my chest and neck and shoulders as I grunted and pushed her body down on my cock. When I was again in control of my breathing I bent my head to kiss her, and found her fierceness gone. It was a soft kiss, long and gentle and sweet, trailing off in little kisses and smiles and sighs. \n\nShe leaned her forehead on my shoulder and whispered \"Thank you.\"\n\n\"My pleasure.\" I murmured. \"Thank you, Liz, that was lovely.\"\n\nShe looked up. \"I'd heard that was nice. Being kissed there. None of the boys I've been with have done it before.\"\n\n\"I'm glad you like it. I like doing it.\"\n\nShe smiled shyly, \"Do you want me to suck you now? I've done it before, I don't mind.\"\n\nI smiled back. \"Do you only 'don't mind' or do you actually like it?\"\n\n\"Well, I suppose, these days, I do like doing it.\" She smiled again, less shyly. \"Yes. I do. I didn't the first few times, but now I think of it, actually I would like to.\" Then she looked shy again. \"Is that alright?\"\n\n\"Lizzie dear, that is more than alright,\" I said and gently pulled back, my semi hard cock slipping out of her pussy. \n\nShe bent forward to take it and brought it to her lips, then sucked me deep and used her tongue to rasp the mix of her fluids and mine from it. \n\nI groaned, and reached to hold her breasts in my hands as her head bobbed over my cock. \n\nI got hard again, but I knew it would take a while to get me back to orgasm, if that was her goal. And I realised I was kneeling on a piece of grit on the floor of the car. And my head was hitting the roof. And I really wanted to pee. \n\nI gently raised her head. And she looked worried for a moment. \"I'm sorry, am I not doing it right?\"\n\nI laughed and pulled her up and hugged her. \"Don't be silly, Liz. That was lovely. But this car is too small, and I was wondering if we would have more room in the back.\"\n\nShe grinned, and said \"Okay,\"as she glanced round to the back seat, and then looked panicked and said \"Oh shit. Landrover.\"\n\nA vehicle was coming down the road to the car-park.\n\nLandrovers were used by the police and the army. The dam was near an army barracks. They would probably be checking out the car-park, to see that we weren't planting bombs. \n\nIt is bloody awkward getting dressed in a Mini. But by the time the cops pulled into the car-park we were at least fully covered, even if not neatly buttoned. Police jumped out and shone torches in on us. I'm sure they were disappointed not to get a look at a naked teenage girl getting shagged. \n\nA brief conversation followed. The usual nonsense. \"Evening sir, do you have a driving licence? Is this your vehicle? Do you have any ID Miss? May I ask you what you are doing here? Well if your conversation is finished perhaps you would like to move on? Goodnight sir.\"\n\nWe drove away. Lizzie burst out laughing. \n\n\"Did you see that bastard? I bet they catch people doing that all the time. They knew what we had been up to. Bugger just wanted to see my tits!\"\n\nI laughed too. \"Well, I can't blame him. They are very nice tits,\" I said. \n\n\"Thank you. Ah, bugger, I suppose we ought to head back now.\" Liz shrugged, and we drove on to her brother's house.\n\nI had expected that the party would have thinned out in the hour or so that we had been away, but although some people had left many more had arrived. They had come on late after a gig in the Ulster Hall.\n\nIt was wild. I have rarely been to a more exuberant and unbridled event. The whole ground floor was full of crazy dancing drunk and stoned people, average age nineteen, with libidos and morals to match. \n\nWe plunged into the melee, grabbing a toke on the way past, snagging a beer, dancing together and with others. \n\nLizzie found Mary bouncing topless with three other girls, Rain was kneeling in front of her licking her stomach and trying to get into her jeans. Even with that much dope and drink in her I thought he had little chance. I couldn't see Mike and Tara anywhere, and given his height Mike is usually easy to find. I grabbed Lizzie's hand and shouted in her ear \"Mike isn't here. Shall we check upstairs?\"\n\nShe nodded, and we pushed through the crowd. \n\nUpstairs, when we fought our way through the people sitting on the the stairs themselves, was even crazier. \n\nIt was an orgy. Or nearly one. Thirty or forty naked people were shagging and sucking and stroking and licking each other, filling three bedrooms and the landing between. And on the landing was a queue for the toilet of mostly dressed people who were either openly ogling or averting their gaze. My guess was that Mike would be somewhere among the unclothed. \n\nWe found them in the second bedroom. There were several other couples, and a threesome as well. Tara was topless and had her skirt up around her waist, riding Mike as he sat on the floor, his back against the foot of the bed. He was also being kissed by a long haired brunette woman, probably in her early thirties, who was kneeling on the bed being fucked from behind. She had her hands on Mike's shoulders, and would raise her bottom as she dropped her head to snog him. The young man screwing her didn't seem to mind, and Tara didn't object either. \n\nShe was leaning back and just slowly rising an falling on his cock, long slow strokes, trying to fit him all in. Liz stood watching the scene for a moment and then said \"Fuck me. Look at the size of that cock!\"\n\nI was just behind her, and reached around her to hold her body, one hand across her breasts, the other going for her jeans button. \"I don't need to look. I've seen it before. But I'll certainly fuck you.\"\n\nShe laughed and turned her head to kiss me and then helped me remove her clothes and mine. \n\nThat party had been legendary. I remembered the stories about it, and had never believed them, but now I was part of it. It wasn't quite the hedonistic free for all that the tales made out. There weren't many multiple partner pile ups and while there were a few partner swaps, and one girl did demand several men take her in turn (pushing off the first who came too fast and beckoning another to finish the job, and another and a fourth for good measure) there weren't queues of men having shagging races, and I didn't see any girl sucking more than one guy off at once. There were just dozens of couples making love. Most were naked, some part dressed, some clothed. True, quite a few were pairs who had just met, like me and Liz. But others were long term partners, enjoying the freedom of the suddenly unrestricted atmosphere. \n\nLizzie had turned in my arms and kissed me, and her hands went straight to my belt. I began unbuttoning her blouse, but before I had got very far she had my fly undone and pulled wide, and then she grabbed the top of my jeans and my underpants on each side and pulled them down as she lowered herself to her knees. I watched her face as she slid down. She was smiling at me all the way until she came level with my cock and just opened her mouth and took me in. \n\nI leaned against the door frame for support as she quickly brought me to hardness. She was good at it. For a moment I closed my eyes and put my head back, and just enjoyed the feel of her lips on my shaft as she sucked me deep. \n\nWhen I opened them again my eyes were caught by the couple on the bed. The older woman was now on her back, the young man was enthusiastically fucking her and I was, as always, drawn to the sight of her full breasts rocking wildly in counter rhythm to his thrusts. And then my glance drifted to Mike and Tara. She was still riding him, but was held close now, wrapped against his chest in those huge hands. Only her hips were moving, in a steady rolling grind. Mike was looking at me. His cheeks were flushed, but unusually he wasn't grinning. He was trying not to come. He looked torn between ecstatic joy and desperate worry. The look in his eyes was ancient, hopeful, protective and grateful. \n\nI grinned. \n\nLooking down on Lizzie I saw her look up, and her eyes smiled even though her mouth was otherwise engaged. I thought of Penny, and Jill, and how they looked on their knees with my cock in their mouths. I wanted to see her naked, so I could see her nipples and know her pussy was uncovered, available, even as I pressed my shaft between her lips. \n\nI pulled my shirt off over my head, and got my shoes off. Lizzie helped with my socks and trousers and knickers. Then I reached down to pull at her blouse and she took the hint, stripping as she sucked me. I saw a flash of her bush and her breasts jiggling as she moved and bobbed her head. I wanted her. \n\nI dropped to my knees and kissed her mouth and took her body in my hands, touching and grasping and rubbing her all over, squeezing her breasts and ass, and running a finger into her pussy, finding it wet and ready for me. I spun her round to face Mike and Tara and grabbed her hips. She bent forward as I dragged her bottom back, and I entered her from behind. Liz gasped, and gasped again as I thrust deep and hard, and set a fast rhythm. She was tight an wet and slippery, her little bottom bouncing against my stomach as I shafted her, and I felt my balls swing forward as I completed each stroke deep inside her. I could have come then. Balls deep, fucking this little body from behind, taking her at my own pace for my own pleasure. But I wanted more. \n\nSo I pulled her up off her hands and let myself sit back on my knees and bounced her up and down on my lap. She got her feet underneath her and started to take control of her movements, pumping her bottom down hard on my shaft, and I'm sure giving Mike and everyone else in the room a good view of her gyrating body, and my cock penetrating her. \n\nThen I spun her round. I wanted to see that pretty pussy on my shaft and her She did it without my cock coming out of her, which was impressive, and she started riding me again. She was tight and lithe and I loved the look of her tiny tits as she rose and fell on my shaft with her hands in her hair, her head thrown back and her eyes closed and orgasm building as she gasped and grunted and sighed. \n\nI held out until she came, and she flung herself onto me, demanding kisses, grasping my shoulders. So I rolled her over, onto her back, and grabbed her to me, and ploughed her. It was hard and deep and I drive the air out of her, and she came again as I hit her clitoris with the base if my shaft and my balls tightened and I gasped in her ear \"I'm going to come. Oh god Lizzie I'm going to come in you!\"\n\nI had forgotten the others in the room. I had forgotten the party. I was for a moment in that bright white cocoon of warmth and pleasure that only a girl's arms and legs and breasts and lips and pussy and tongue and hands can build. \n\nAnd then I was kissing her. Kissing and hugging and smiling and laughing with her. And then I realised where we were, and looked around, and saw that no-one else was watching us, or cared about us, because they were all in their own worlds of joy. \n\nWe were lying facing each other, she on her right side, me on my left, and she stroked my face wordlessly. I could see that she was thinking something, but not saying it. \n\n\"What's up Lizzie? You look sad.\" I asked gently. \n\nShe shook her head and gave a not quite convincing smile. \"I was just thinking. I'm off to Liverpool, if I get the grades, in October. I've been dying to get away for years. I don't want to live here, I don't want to settle down here, I don't want to, well l, to have kids here. I want my children to grow up somewhere safe. Somewhere with hope. You know.\"",
        "I nodded. All this was years before the 'peace process.' Stupid people were killing each other, and innocent bystanders, for stupid reasons. It was a pretty hopeless era. \"Yeah. I know what you mean.\"\n\nShe went on \"So I've avoided boys. Well, not really, I mean, I've had a few. But I've avoided boyfriends. Relationships. Falling in love. I didn't want to fall for a boy and find that he wanted to stay here. You want to stay here don't you?\"\n\n\"Yes. But I don't think it's hopeless. Things will get better. I want to help that along.\"\n\nShe smiled then, with rye amusement. \"I'm sure you will. But I'm going anyway, and you have a girlfriend. So I had better not fall in love with you. Even though I think it would be nice to do that.\"\n\nI looked at her then for a long moment and touched her face. \"That would be nice. But it would break your heart, and mine, when you go. I wouldn't want to do that. But that means we have a problem.\"\n\nLizzie's expression was serious as she asked \"What do you mean?\"\n\n\"I like you, Liz. Tonight has been great. You are clever and charming and witty and fun, and lovely, and pretty and very good in bed. Well, in car and on floor, but I imagine you would be good in bed and I would like to confirm that. I would like you to join me in bed sometime. But maybe you won't want to do that. Because you don't want to fall for me, and the more time we spend together the harder that gets. So maybe you won't want to see me again.\"\n\nShe nodded. It was a tiny movement as she thought about it. And then she said \"You are right. And you do have a girlfriend. Three's a crowd, after all.\"\n\n\"Well, three can be fun, you know.\"\n\nShe looked puzzled for half a second and then said \"You randy sod! Are you suggesting...?\"\n\n\"Don't look so shocked. I told you Jill and I had a tolerant attitude to each other, and we are pretty open minded in general. I have no secrets from her. And I know she wouldn't mind. No, I should say I know she would be more than happy. And it isn't as if you have many inhibitions about being naked with other people in the room.\"\n\nThat last line caught her. She glanced around, and then laughed. \"Okay, you got me there. But are you suggesting we meet up with your girlfriend and ...\" she tailed off, but her eyebrows moved suggestively. \n\n\"If you like.\"\n\n\"You are serious. Good lord. I thought your line about her not minding was just a cover story. Have you done that then, with her? And another girl?\"\n\n\"Yes. Which is why Mike was indiscreet enough to say he thought I had more than one girlfriend. She is his ex. It got complicated. He's cool with it, so is she and so is Jill, and so am I. And we all had a good time and we are all good friends. And if you would like to join us...\" I said, and drew her closer so my rising cock was against her body and her bottom was in my hand, \"I'm sure we could all have a good time again.\"\n\nMy lips were close to hers. My hips flexed. She moaned, but resisted. \"All have a good time? You mean Mike and your two girlfriends?\"\n\n\"No. Just me, and Jill. Mike isn't part of my plan. He went out with Penny, and they slept together, and Jill and I were together in the same room, like we are now with Mike and Tara and all these other folks. Jill never slept with Mike and I never shared Penny with him. However, Jill has shared me with Penny. Anyway, you would have to negotiate with Tara if you want to play any games with Mike.\"\n\n\"So you want to have sex with me while your girlfriend watches? And me to watch you with her?\"\n\n\"No,\" I laughed and let my hands wander a little. \"I want to kiss you while she sucks my cock. I want to lick your pussy and suck your nipples while she wanks me as I finger her. I want to have her sit on my mouth while you ride my cock, and kiss her tits when I take you from behind. I want to feel her hand on my back pushing me down into you while we make love. I want you to hold my cock for her, help her suck me or slip it into her pussy. I want to suck two nipples at once, one from each of you, and finger two pussies, and hear you both come together. And I want to show her how beautiful you look with my cock in you like this.\"\n\nI had kissed her and touched her and manoeuvred her onto her back and opened her up and penetrated her. She moaned again and whispered \"You dirty bastard,\" but she smiled and kissed me then. After that we didn't speak for a while. \n\nI couldn't come again so soon, but she could. She was so different to Jill or Penny. Her skin was somehow tighter, the muscles just beneath the surface, and she was so light and small I was almost afraid I would break her if I let all my weight bear down. But she writhed and pulled at me and did things with her hips that drove me on to shaft her deep and hard. I felt her hand squirm between our stomachs, over the spot where her belly button wasn't, to frig herself, while her other hand was on the back of my neck. As she came she held my lips to hers and gasped and groaned and kissed and sighed. \n\nI held still inside her as she trembled and relaxed. I kissed her again, little kisses, and said \"You are beautiful when you come. You are always pretty, but when you come you are stunning.\"\n\nShe laughed. It was a deep, soft sound. \"You are ridiculous. Lovely but impossible.\"\n\nBefore I could defend myself I heard someone else say \"Aren't they all? How are you doing Lizzie? We are going down to get a drink. Do you want me to bring one back for you?\"\n\nIt was Tara. She was dressed again, and Mike was with her, still sorting out his clothes. He was grinning then. \n\n\"No, we'll be down in a mo.\" said Lizzie. \n\nSo we dressed and went down stairs, leaving the on-going love-in. We drank, we danced, we talked with other people, we sat in the garden as it got light and chatted with Tara and Mike, and shared a joint they had snagged. I didn't take much. I wanted to be able to drive in a few hours. The others mellowed and weariness started to show. We went inside, to find the party thinning out, and upstairs were couples in various states of dress and intoxication were now sleeping on the floor where they had made love. The four of us found room together, and snuggled down. I was the last to sleep, Lizzie in my arms, Tara at my back, Mike behind her. I wondered what the morning would bring. \n\nAs it turned out the morning was less awkward than I expected. We awoke in a room of people with hangovers, and we were all still dressed, so a strategic retreat to the kitchen seemed best. Tara, Mike and Liz were all the worse for alcohol and THC, so a pot of tea was consumed and some toast was attempted. \n\nTara wanted to go to the beach. So we went. \n\nHer house was sort of on the way, so we called in and she picked up some towels and a couple of tee-shirts and knickers, and she and Liz got freshened up. Mike fell asleep again on the road, and Tara snuggled against him in the back seat. They looked cute in my mirror. \n\nWe built a sandcastle. We paddled barefoot. We got fish and chips for lunch and ice-creams afterwards. It was bright and almost windless, so it was warm but we didn't burn. At tea time we hit Newcastle, got burgers and candy-floss, and played the slot machines, and had a go on the dodgems. And then it was time to go home. Tara first, after several good bye kisses and arrangements to meet with Mike the next day. Then Mike. Then Liz. \n\n\"Well, here we are then,\" she said as I pulled up at her parents' house. \n\n\"Yeah.\" I agreed, eloquently. \n\n\"Do you want to see me again?\" she asked with a nervous smile. \n\n\"You know I would like to. But you know how things are with Jill.\"\n\n\"What if I said 'Okay ' to that?\" she looked unsure, but said more steadily \"If I said I would meet you and Jill.\"\n\n\"Then you would have to give me your number and I'd speak to her and we'll arrange it.\"\n\nShe gave me her number, and a quick kiss, and said \"Call me.\" And then she was gone. \n\nJill got home late that night. She rang me and we arranged to meet the following day. I told her I had missed her and she laughed. \"Didn't score at the party then?\"\n\n\"I didn't say that, I just said I missed you. And I meant it. You know it is the first time in three months that I haven't talked to you for over twenty four hours? Haven't seen you for nearly three days? It is terrible. But I'll tell you all about it, and we can make up for lost time tomorrow.\" "
    ],
    "authorname": "MVPrimetime",
    "tags": [
        "sex in car",
        "orgy",
        "second chance",
        "seduction",
        "straight sex",
        "first time",
        "multiple partners",
        "penny",
        "young lovers"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/if-i-knew-then-ch-10"
}