{
    "title": "A Legacy of Shadows",
    "pages": [
        "----------------------------------------------\n\nContent Warning\n\n----------------------------------------------\n\nContent Warnings:\n\nIn this work, characters discuss sexual assault, abuse, murder, and similar vile acts. This is NOT part of the erotic content of the story, nor is it described in detail. Still, the plot is more of a dark thriller/mystery than standard incest erotica. \n\nThere is detailed/eroticized BDSM and rough/violent (although very much consensual) sex. Some of my readers really aren't into it, and that's understandable. You can skip this one if certain BDSM-related activities turn you off. The people engaging in this sex still have a great deal of affection and love for one other.\n\nThere's some action/thriller-style violence in here as well.\n\nEvery family has secrets. Some are much darker than others. Come learn those of the De Heer family.\n\n----------------------------------------------\n\nAuthor's Note\n\n----------------------------------------------\n\nFeel free to skip to the next section if you want to get to the good stuff. \n\nThank you for taking the time to read this. I have put a lot of blood, sweat, and tears into this story over many months. Originally it was supposed to be rather short and self contained. Now it's around 68,000 words, and there have been quite a few edits, changes, and re-writes. I do hope that you enjoy it.\n\nI also wanted to address the matter of priorities. Some people have quite eagerly wanted me to attend to a particular sequel or type of story next, and may wonder why I have written this instead. \n\nThere are a few reasons why I release the things that I do. First of all, I write for pleasure. I do not, at this time, get any sort of payment for my longer-form stories. So, naturally, I am going to write what interests me, and sometimes that deviates from what my readers expect. I ask only for your patience and understanding.\n\nSecondly, I never work on one thing at a time. I am simply not capable of it. So I always have multiple projects in the works. I won't ever post a real schedule, because sometimes I need to stop one item and work on another. That's just how I write. What that means in practical terms is that there are some stories, including requested sequels or spinoffs, which are being worked on.\n\nLastly, I have been guilty of releasing stories too quickly in the past, and it's led to my work being of a lower quality than I would like. So, I will be patient, edit for grammar and wording, rearrange chapters, and listen to feedback. That adds time, but I think it also makes a better final result.\n\nThank you for reading my work at all, and, in any case, I hope you enjoy reading about Reuben and Isa De Heer (and the other characters) as much as I enjoyed creating them. Their world is a dark place, but full of delights for those who seek them.\n\n----------------------------------------------\n\nDedication\n\n----------------------------------------------\n\nThis work is dedicated to hannahslamma from reddit. Their thoughtful and incisive feedback added much-needed clarity, direction, and subtlety. \n\nAll errors, plot issues, and poor writing still belong to me.\n\n----------------------------------------------\n\nDe Heer\n\n----------------------------------------------\n\nCelebRumors.corp, October 14th, 20xx\n\nby Victoria Evans\n\nReclusive Matriarch of De Heer Family Dead at 63\n\nThe secretive and ultra-rich De Heer family has long been a source of rumors and hints of scandal, but none ever seemed to touch Tess De Heer. Known for her charity work and gentle method of applying her family's extensive and powerful influence to what she deemed as good causes, her absence is already being felt by those in the highest echelons of power. Financial experts are cautiously optimistic that her passing will not affect the family's fortunes or investments. Tess passed after a three-year-long struggle with ovarian cancer.\n\nTess' husband Rudi passed away several years prior due to complications related to the sudden onset of heart disease. She survived by her twin children, Isa and Reuben. Isa, who is expected to be Tess' primary heir, has been managing the family's business operations for the past five years. Reuben, on the other hand, has been estranged for years and is rumored to have been disowned. One can only wonder what kind of depravity finally disgraced him from his debauched family.\n\nAs always, when we dig up more dirt, you'll be the first to see it!\n\n----------------------------------------------\n\nThe Funeral\n\n----------------------------------------------\n\nShe watched me through the entire funeral. It was unnerving, to say the least. Every time I looked over, my sister's eyes met mine. Once, she even curled her lip in dark amusement. Mostly she just kept an expressionless mask up, one that she'd been very good at presenting to the world even when had been children. \n\nI sighed and turned back around in my pew. I only had to sit through the rest of this service, then go to the burial. Technically there was a will reading later, but I'd heard from the lawyers well in advance of this. Unsurprisingly, I'd been written out of it. I wasn't upset. It was what I wanted, in any case. \n\nAs the disowned scion of the De Heer family, I wasn't even sure if I would be welcomed at my own mother's funeral. Still, I was pleasantly surprised to be treated as roughly an equal most of the attendees, if not my sister.\n\nIsa, or Ms. De Heer to her friends, was my last living relative, and my twin. We'd been very close once. Some would say too close. But that changed when I finally learned the depths of my family's sins. Granted, much of it wasn't anything that would surprise most people, but the darker stuff would shock even the most jaded members of polite society. At least those who weren't also actively participating in it. I spoke to my mother and father about making the family finances ethical, redistributing investments, ceasing our involvement with predatory organizations like the Brigantine, and perhaps even giving some extra funds to charity. They reacted to me with laughter at first and then anger. Was I not grateful for how I lived? For the vacations and tutors and private schools? I was, but I wouldn't back down. After the fight, I had expected Isa to back me up, at least a little, but she joined with our parents and called me naive. It hurt quite a bit to realize that she was quite happy to inherit the profits of murder, war-profiteering, drug smuggling, and money laundering, to name a few of our family's more commonly known achievements.\n\nSo at the wise age of twenty-one, I left, and my family cut me off completely. They even sent a friendly notice on attractive letterhead asking me to change my last name, which I ignored. I finished college at a state school rather than at the Ivy League institution that I had started at. The education compared favorably but didn't put me in nearly as much debt as remaining would have. \n\nI never apologized, and they never contacted me, although I reached out when my father died. He had never liked me, but I would have attended his funeral had I been allowed. A year later, at twenty-five, I had reached out to both mother and Isa, attempting to salvage our relationship. I was sent another letter on even more beautiful stationery, stating that neither their fellowship nor their money would be forthcoming. To my credit, I never wanted a dime of that bloodstained fortune, but I would have liked to have seen Mom before she died. I had never thought she would bear a grudge that long.\n\nFour more years passed. I became a respected academic in a small sub-field in history. I struggled and taught and earned a reasonably early tenure at a decent state school on the west coast. I wrote papers and attended conferences. I dated and was married, very briefly, to a lovely woman named Nina. It was unwise, and both of us realized it after a month. We separated amicably enough, and we still have lunch and, on occasion, sex. \n\nI suppose what I'm saying is that I made a life for myself. I didn't make a lot of money, nor did I have much in the way of creature comforts, but I did have a small group of good friends (including Nina). What I had never been able to do, however, is open up romantically to virtually anyone. At the ripe old age of twenty-nine, when I'd gotten the phone call from some legal secretary informing me that my mother had passed away, I had given up on dating and romance altogether, if not casual sex. \n\nI'm not even sure why I attended the funeral, except maybe for closure. I'd sent one last email to the only address I had for Isa, and she hadn't even bothered responding. Hence, I assumed that she had no interest in seeing me. I had no illusions about being in the will. I suppose I loved my mother and wanted to say goodbye, even if she never quite returned the favor. \n\nThe service, simple and rich and protestant, ended. I watched my mother's casket as she was carried into the family vault. Then the door was sealed again with great finality. Finally, it was all over. I made for my rental in the parking lot of the ancient cemetery, but, to my dismay, I could not find it.\n\nI found the space. I was sure that it was the right one. It was in the corner, and there had been an oil stain in the space next to it. The car itself was nowhere to be found. There was no broken glass, and the burial had been swift, taking around twenty minutes. I looked around, and there didn't appear to be anyone else having similar issues. I sighed. Of course, the one person here who was not rich would have their property stolen. I took my phone out and was about to dial 911 when a voice startled me.\n\n\"Sir,\" she said, and I spun on my heel. I hadn't heard her approach. She was about three years older than me, with short auburn hair and a rebellious glint in her eye. She wore a men's style suit, but it was tailored to her very feminine frame. I recognized her at once. \n\n\"Rachel,\" I said, raising an eyebrow, \"you startled me.\"\n\nShe smirked, and I knew that had been her intent.\n\n\"My apologies, Mr. De Heer. I simply came over to invite you to make use of your family's transportation. I'm parked right over there.\"\n\n\"How kind. However, I already had a rental car with my baggage in it, although it appears to have gone missing...\"\n\n\"No, sir, not missing. It has been returned to the airport. Your baggage has been sent forward to the residence.\"\n\nI blinked. I wasn't surprised that Rachel was involved in mischief. We'd known each other for a very long time, and very well at that. I pulled the rental keys out of my pocket. Rachel smiled even more widely.\n\n\"The agency was kind enough to provide us with a spare set of keys when we informed them that the son of the De Heer family needed to make alternate arrangements.\"\n\nI gave up on subtlety.\n\n\"Did you do this, Rachel? Or was it Isa?\"\n\nRachel's smile turned genuine, and she put her hand on my arm. \n\n\"It's good to see you, Reuben.\"\n\n* * *\n\nRachel wouldn't say any more about what was going on, and I knew it was useless to call an uber. Isa would probably just buy the bloody company rather than let me leave. Still, part of me took this as a net positive. Maybe she wanted to see me and have some kind of relationship. On the other hand, all of this reeked of the sort of power move my family was known for. Just slightly outside the law, not quite kidnapping, only an invitation you couldn't refuse. I sighed. I didn't miss this part of my family. Or the oppressive atmosphere of the mansion for that matter.\n\nIt only took five minutes to arrive. Not really a surprise considering that the town was still small, and the community virtually sprung up to support the sprawling grounds. Parts of my family home were older than the United States, and it was synonymous with the De Heer name.\n\nWhen we pulled in, Rachel insisted on opening the door of the expensive black SUV as well as the entrance to the residence itself. I didn't resist. She took pride in her job, which included not only driving but also body-guarding and occasionally being a friend to lonely young men growing up in cold households.\n\nRachel led the way down the halls. They were all familiar, of course, but work had been done, and clearly, changes had been made to the use of the various rooms. I couldn't help but watch the way her ass swayed back and forth in her well-fitting pants. While she was a bit curvier than the last time I'd seen her, I bet that her body was still toned and fit under her suit.\n\n\"You can do more than look if you want, Reuben,\" she said, without turning around. I sighed again.\n\n\"I understand that this is funny to you, and Isa is probably laughing as well, but please don't tease me. I think I deserve better than that.\"\n\nRachel stopped suddenly and opened a door. This had been my father's study at one time. Probably Isa used it for business now. Rachel's face had lost its smirk, and her light blue eyes had something of a sad cast to them.\n\n\"I'd never tease you, Reuben. Never.\"\n\nWe met eyes, and I smiled at her by way of apology. She'd never mistreated me. I wasn't sure why she was flirting with me quite so forwardly, but if I said I minded, I would have been lying. I guess I was just tired of feeling in the dark, and when I lived with them, my family always seemed to be using me for one thing or another. I made up my mind to talk to her later and at least get caught up. She was more than an old flame, she was a friend.\n\nFor the moment, however, we both knew that I had more urgent business. I stepped through the door and heard Rachel close it behind me.\n\n\"I'm glad you could join me, Reuben,\" Isa said, her cold green eyes showing me no welcome. She had no smile for me. I wasn't really surprised at that. She sat on the edge of Dad's old oak desk, arms crossed. She hadn't bothered changing out of her classy black dress. It didn't show anything but back, but it was tight enough to show her graceful, curving frame. She had grown into an hourglass while I was gone, proportional and lovely. I knew that under that dress, she'd be toned if not muscular, with full hips and breasts just on the large side, the picture of a fantasy come to life. Her glossy black hair was full of natural curls, and cascaded down to the middle of her back. She'd always been proud of her hair. Still, nothing about her appearance could really soften the effect of the cold expression on her precise features. \n\n\"Of course you are,\" I said, not bothering to hide my sarcasm. \n\nIsa rolled her eyes slightly, evidently ready for a conflict, and nodded at the plush leather chair in front of the desk. She sat in our father's old chair behind it, leaving no question about who she thought was in charge.\n\n\"Why did you come to the funeral, Reuben?\"\n\n\"I wanted to say goodbye. I wanted to come to dad's funeral too, but you wouldn't let me.\"\n\n\"That was mom's decision. She didn't think it would be wise. So, you mean to tell me that you have no interest in the will?\"\n\nNow it was my turn to roll my eyes. I sighed in exasperation.\n\n\"For fuck's sake. I don't know what happened to you since I left, Isa, but I'm doing all right. Thanks for asking, by the way. Lots of people live without being ultra-rich. I don't want your fucking money. You can have Rachel drive me to the airport now if you don't mind.\"\n\nI made to stand up, but Isa held up her hand. I stayed seated, but my eyes hardened. I felt like a little kid again, being made to listen to one of my father's lectures about responsibility and power. I even caught a whiff of his old pipe tobacco.\n\n\"I didn't think you came here for the money, but I had to ask. I needed to be sure that you weren't going to interfere. The decisions that I have to make are difficult, and they affect a lot of people. If I were to be involved in a legal conflict in the middle of this transition...\"\n\nIsa looked relieved and I felt a slight tremor of suspicion. Perhaps I should have just reassured her and left. I didn't.\n\n\"What kind of changes are you talking about?\"\n\n\"Well, for starters, moving investments away from areas of dubious legality...\"\n\n\"That sounds like something I wouldn't interfere with...\"\n\n\"Yes, but, I need to ensure that I reinvest the funds into something guaranteed to make money, and for a long time. We already have contacts with the military in quite a few nations, so...\"\n\n\"Oh, god. So what is it? Guns? Missiles?\"\n\nIsa smiled blandly at my obvious discomfort. \n\n\"Yes, and even better. Drones. Land, sea, and air. Long battery life, AI that learns from enemy behavior, complex networking and solo behaviors. Of course, they'll all be useful for all kinds of HAZMAT or harsh labor environments, but they'll really shine on the battlefield. I don't need the bad publicity a lawsuit could bring.\"\n\n\"Then why did you tell me? For fucks sake, Isa, I could have lived the rest of my life without knowing that. I'd love to interfere with that, and you know it. I'm not stupid, however. I was disowned, nice and legally, and the lawyers know it. So I can't do anything about it. Happy?\"\n\nIsa had a shark's grin now. She reminded me so much of our father that it made me feel a little queasy. She had me where she wanted me, I realized. This wasn't about the inheritance, after all. She was playing a bigger game.\n\n\"Reuben,\" she started, \"I missed you, but I'm also not the same kind of fool mother or father were. I mean that they wrote you off and wished you well. They truly did, you know, and kept tabs on you. But they also thought that you were harmless. I know better. When father started passing more responsibility to me, I increased the surveillance on your life. I know you've been involved with a radical anti-corporate organization, for example.\"\n\nI blinked, honestly confused, then laughed as I realized what she meant.\n\n\"You can't mean the Increased Pay Initiative, can you? That's just hippies and petitions and some sit-ins for higher minimum wages.\"\n\n\"Maybe to you, that's all they are, but they haven't realized who you are yet. And they did push to try to unionize one of our weapons factories in Texas. Luckily we pay very well there, so there wasn't any incentive, but it worried me.\"\n\n\"You think that they'll want to use me as a tool? A spokesman against the family? I wouldn't do it, even if I hate what you're doing.\"\n\n\"You say that now, but what about in five years? Ten? When you're making the same amount of money that you are now and struggling to pay the bills. No. You have become an unacceptable risk to me, our family's organization, and the employees that I am responsible for. I didn't act on these concerns before, because mother was alive, but now I don't have any such compunctions.\"\n\nI felt my blood turn to ice. Before today, I'd never have thought that Isa would sink to such lows as having me killed, but I knew that father had connections that specialized in the tidy elimination of troublesome people. I eve suspected that he had killed people himself, with his bare hands. I had no illusions. I was in the center of De Heer power. She could have me killed, and the corpse disposed of without even a hint of trouble. She owned the building, the town, and the people.\n\n\"So, what is this when you make Father proud by having me executed in the backyard?\"\n\nIsa's gaze softened a little. If I didn't know her so well, I might have thought that she looked hurt.\n\n\"No one's killing anyone, Reuben, but your little excursion into the world ends. Or, I should say, it must become more limited. I would never take you away from your friends, like Nina, for example. You have such fun with her, don't you?\"\n\nNow I was really confused by her sharp turn of words.\n\n\"Wait, are you threatening my Ex? Why? I don't understand any of this.\"",
        "\"Well, try harder. You're not stupid, so don't act like it. I don't want to hurt you. I don't want to threaten anyone, but you're not leaving me much choice. You need to become involved with the family now. There's only the two of us, and there's no heir, so if something happens to me...I don't want to disinherit you, but I also don't want you to simply close all of our industries down and pretend that you helped anyone when thousands will have lost their jobs. You've behaved idealistically and impulsively. Your marriage and now relationship with Nina, for example.\"\n\n\"Uh, ok, you do kind of have me there. The marriage was not a good idea, but we're friends now, and that's it.\"\n\n\"Oh? Friends? Friends who fuck, you mean?\"\n\nIsa seemed so outraged by the idea that it was almost comical. \n\n\"Well, yeah. Pretty much. Not that often but...wait. You've been watching us fuck, Isa? What the hell is wrong with you?\"\n\nIsa sighed.\n\n\"I didn't watch anything. I just received...reports of sexual liaisons. I'm sorry, all right? I had you under surveillance because I was concerned. I didn't like hearing about the marriage, but the sex after your divorce was...troubling to me. I didn't know if the two of you were still together or you had something else planned...\"\n\n\"Like what? Taking over the De Heer family fortune?\"\n\n\"For starters? Yes. Or causing trouble. Or maybe she'd figured out how wealthy your family was and wanted a piece of the pie. Or one of any number of nightmare scenarios where you are used as leverage.\"\n\n\"Nina does know that you have money. She has money, too. Well, nowhere near this much, but enough.\"\n\n\"See, that's what I mean. You showed no discretion whatsoever! That's why your freewheeling lifestyle has to end. You're coming back into the fold. Starting today.\"\n\n\"No,\" I said, starting to get really angry again, \"I'm not. You can't just tell me what to do like I'm some sort of...\"\n\n\"Servant? Yes, I can, because in the end, that's what you are in this situation. I'll never hurt you physically, and I don't want to hurt you emotionally, but...I will if you push me to it. I have all the cards and the power here, although I'd prefer to come to an equitable arrangement with you. I'm not asking you to give your old life up. I'm asking you to split your time. You live here for the majority of your time, and you're free to do what you want with the other portion. You shift away from teaching and more into research and writing. The university has already approved this, after a substantial donation. You keep your friends, and yes, even your 'arrangement' with Nina if you want, but you get more involved in the company. If I wanted to hurt you, really ruin your life, think about how easily I could have accomplished it, given what I've done with the merest exercise of my influence.\"\n\nThe fear had returned it not as severely as before. I realized now how much thought Isa had put into this. She was smart, far smarter than I was, to be honest. I was on thin ice. If I did the wrong thing here, it was very likely someone else would suffer first, probably Nina, or one of my other friends. Or my academic reputation. My family had always known how to play dirty.\n\n\"Fuck. I don't even know what you want. Do you want me to help you run weapons programs and then sell then to the Pentagon? What else, maybe buying some orphans for cheap labor offshore? Running a drug operation? I mean, really, the sky's the limit for the De Heer family.\"\n\nIsa actually chuckled at that.\n\n\"Don't be so dramatic. If you agree to my terms and make a good faith effort to get involved, then yes, you will have real power. And if that means shifting some investments away from what we could both agree on as being unethical, then so be it. But we do it together. You don't dictate anything to me, and we don't do mass layoffs. Jobs must be guaranteed to a reasonable level. And, of course, the more you participate and involve yourself, the less restrictive I will be. Make no mistake, I will always be in charge of your future from here on out. But I can be a pleasant mistress. I want to be. So, are you in, or are you going to make this more difficult than it has to be?\"\n\nI let the silence hang in the air between us, trying to ignore her choice of words. I didn't want the money, but I didn't want the responsibility either. Now that it was offered to me, however, I had to consider it. If I didn't improve things where I could, didn't that make me as much of a hypocrite as my father? And if anything happened to my friends, or Nina especially, I'd never forgive myself. Fuck, Isa had trapped me with my own idealism. In the back of my mind, I knew that I was making a devil's deal, but I really didn't feel like I had any choice.\n\n\"Fine.\"\n\n----------------------------------------------\n\n10 Years Ago - Rachel\n\n----------------------------------------------\n\nSeeing Rachel had brought a lot of memories back for me. It was a confusing mix of nostalgia, lust, longing, and if I'm honest, real love. Three years before I left, things had changed between us. Forever.\n\nIsa and I had kicked off the summer after our Junior year with a mutual 18th birthday party, which was rather formal and truly for our parents' friends. Our parents' plans for us mostly revolved around something of a lightning apprenticeship in the family business. We spent some time shadowing various De Heer personnel during the week, primarily acting as interns. Only a very few knew the truth of our identities, which was father's intention. Beyond our opportunities, he wanted no special treatment for his children. We spent time together in quite a few financial capitals, and more importantly, to us, cultural and entertainment centers. For the first time in our lives, we had limited freedom during the evenings and on weekends. We ate the best ramen in the world in Tokyo, saw Shakespeare in London, took some exclusive studio tours in Los Angeles, and even saw some burlesque theater in New York. We were followed by security and often accompanied directly by Rachel, of course. However, it was still a lot of fun.\n\nWe were in Chicago when it happened. On the Friday night before we were to leave, Rachel came to my door and told me to come with her. I followed her to Isa's room, and I was surprised to find my sister packing her bags, dressed in business clothes that I recognized as her preferred traveling attire. \n\n\"What's going on?\" I probably came off a bit annoyed, which was unfair. Isa looked up, eyes apologetic, but Rachel answered for her\n\n\"Don't blame her. Your mother wants her to meet her in Toronto for something of a girls' weekend.\"\n\n\"Really?\" I asked. \"That's...odd.\"\n\n\"I know,\" Isa said, \"and I'm a bit suspicious of her motives. She says that she wants to introduce me to her friends in charitable NGOs. Apparently, that kind of thing is only appropriate for ladies. I think that she's taking me to meet some potential suitors. I don't really want to be shown off as a piece of meat, but I guess that good daughters obey their mothers.\"\n\n\"I suppose that I'm not invited,\" I noted with a little bitterness. This had been a fun time for us, and I was looking forward to at least a few more weeks with Isa. And despite not admitting it to myself, I felt a twist in my gut at the idea of Isa dating or marrying some other man.\n\n\"Well, don't feel left out,\" Rachel said with a strange smile on her face. \"I've been instructed by your father to take you to meet some of your more...secretive business associates.\" \n\n\"She means criminals,\" Isa said with a small moue of distaste. \n\nRachel all but confirmed this with her expression, and I did not push it, knowing that she wouldn't answer any of my questions. I said my goodbyes and hugged Isa before Rachel took her to the airport. She would take some of the bodyguards with her, but I knew that at least four more would be close by and probably more monitoring everything from wherever the security room was. Still, my mind wasn't focused on my security. As I returned to my own room on the same floor, I had one thought on my mind: I was going to be alone with Rachel for the foreseeable future. \n\n* * * \n\nThe following morning I got up early and met Rachel in the well-appointed lobby. She'd clearly been up for a while, and her face was stony as she spoke softly to two much larger men, who I knew were part of my detail. After a moment, they hurried out the sliding front doors.\n\n\"What's up?\" I wasn't apprehensive, but I knew something odd was going on.\n\n\"We've had threats. We're just ensuring that everything is covered.\"\n\n\"Threats? Against me?\"\n\nRachel frowned.\n\n\"That's the problem. They were made against the organization as a whole, by a different family. Very few people even know you're here, but we're still taking extra precautions. Our car is being brought around right now. I won't be driving. Today my only job is your bodyguard.\"\n\nRachel said it like a challenge. \n\n\"All right. I trust you to make the right decisions.\"\n\nRachel sighed, and for a moment, we were quiet. The only noise was people talking at the front desk and the sound of traffic from outside. It wasn't bustling where we were on a Saturday morning, but it was still Chicago.\n\nA black SUV pulled up outside, but Rachel didn't move. I waited, knowing her well enough to know that she had something to say.\n\n\"Don't trust me too much,\" she said, barely over a whisper.\n\n\"Why not? I know you'd never betray me.\"\n\n\"Maybe, but it's good practice. Think for yourself, see things as they are, not how you want them to be. Maybe you'll catch someone before anything bad happens. Maybe you'll even save someone else.\"\n\nI just nodded and followed her out to the car. I rolled the brief conversation in my mind as we traveled in silence, her, only a few feet away in the backseat. Usually, Rachel was the 'cool older girl' that I never had a chance with. She was friendly, funny, and even kind when others were or could not be. No matter what, she had previously kept things lite. Even the slight flintiness with me was understood by me to be a joke, just her teasing me. \n\nI won't pretend that I didn't have a massive crush on her, though. I did. And the fact that she stayed in touch while I was away in boarding school was enough to make my late-teenaged brain think that I had a chance. Of course, in my rational moments, I knew that she was just a good friend, and I had few enough of those that I wouldn't ever risk our relationship by clumsily trying to seduce her. \n\nI was expecting a skyscraper or at least a mansion. What I got was the alley behind a restaurant. Rachel got out first, smiling at me in her infuriating, knowing way. \n\n\"This place has the best Italian Beef sandwiches in town,\" she said, as she held the filthy door open for me. I stepped inside. The kitchen was busy but clean. All of the cooks and waiters studiously ignored us, doing their jobs. I noted that there was not a single woman there, save Rachel.\n\nWe entered a small space, busy for the early lunch. Couples ate, only eyes for each other. At other tables, people did business, legitimate or otherwise. In the back corner, at a circular table, sat three men. None of them looked how I expected, which I suppose was like extras from Goodfellas. They could have been any three retired men, albeit well dressed, eating lunch together.\n\nThey stood, and Rachel made introductions as I shook hands.\n\n\"Mr. Artelli, Mr. Rendstadt, Mr. Joseph, may I present Reuben De Heer, heir to Rudi De Heer.\" \n\n\"I will speak for us,\" Mr. Joseph said, with strange formality, \"Please sit, and eat with us, Mr. De Heer.\"\n\n\"Thank you,\" I said, sitting. Food was brought to us, simple, sandwiches, but delicious. Beef and sausage covered in giardiniera on rolls soaked in au jus. Wine was poured for us, deep and red. No attempt made to card me. \n\n\"We run import and export for many firms, Mr. De Heer, but you are our most important client. We do not question the product, and we make good on every delivery. Failures are refunded at double what you pay, so we do not fail often. For these services, we are at your beck and call, twenty-four hours a day, seven days a week. No holidays or vacations. We have yet to have an order from the De Heers that we could not complete. Questions?\"\n\n\"Yes,\" I said, with some hesitance, \"but I will wait for them later. Why don't you explain the ins and outs of what I need to know, and maybe after that we can speak about the future.\"\n\nThe three men smiled, almost in unison. The next hour was spent with Mr. Joeseph explaining the logistics of crime. Real crime, I mean. The movement of people, guns, drugs, dangerous biological or chemical products. Anything. God help me. I thought it was cool. I had no understanding of the depths of human misery behind this kind of work. In my defense, I was naive then, and at no time was there mention of sexual slavery, or what happened to couriers who failed, or any other messy details. It was all a high-level view of routes, times, needs, and pricing. When the lunch was done, I was stuffed with both illicit knowledge and food. \n\n\"I hope this was edifying for you, Mr. De Heer,\" Joseph said, standing to show us out the way we came, \"We look forward to doing business with you.\"\n\n\"It was,\" I said, \"and thank you for your hospitality.\"\n\nAs we strode out the back into the alley and the warm summer stink of the alley struck me, I frowned.\n\n\"Rachel,\" I said, \"that was...odd.\"\n\nShe smiled at me as we got into the back of the waiting SUV together. \n\n\"How so?\"\n\n\"We sat there for an hour with three men, and only one spoke. I swear that the other two barely even breathed. What are they, really? The Mob?\"\n\n\"That's what you're here to understand, Reuben. Before today would you have thought that you could have made a phone call and had anything delivered anywhere? No matter how dangerous or illegal, with little to no chance of it being intercepted by any governments?\"\n\n\"No,\" I admitted.\n\n\"We, and by we I mean the De Heer family and its interests, are not simply rich. We are powerful. We don't deal simply with the corporate overworld or the criminal underworld. We live in the shadows, in what your father calls the demimonde. Outside of the four families, very few have access to it. It makes all the difference.\"\n\nAs the car pulled away, I considered what she said.\n\n\"Father had you memorize that speech, didn't he?\"\n\nHer rare blush gave me all the answers I needed. The way her skin complimented her auburn hair did something to me, then. More than ever, I was affected by her beauty. She wore the barest amount of makeup required by the society that she moved in and wore male suits tailored for her body, as father required of her, but it just enhanced her athletic frame. I felt a bit submissive in her presence. I wouldn't have been able to acknowledge it, as father had taught me that men must be dominant and in charge at all times and in all things, but I felt safer with her. Protected. And that mixed with my attraction to her in exciting ways.\n\n\"Well, I didn't memorize it word for word, but you get the idea. It was important that you see these men, strange as they are, and understand that the real power in the world doesn't drive flashy cars or live in the limelight. Celebrity is one thing, and you will always have some of that attached to you because of your name, but power is understated, dangerous, and easy to underestimate. Men like that can kill you if you become dangerous to them. Just as you can kill them.\"\n\nThat was the first time I'd ever even thought about having someone hurt, much less killed. The idea excited me and then disgusted me. I wasn't somehow who thought of themselves as \"good,\" but I found murder for profit to be very disturbing. Rachel must have noticed that I was affected because she changed the subject immediately.\n\n\"Do you want to go out tonight? With me, I mean? See the sights, maybe get into some trouble?\"\n\n\"Yeah,\" I said, \"sounds like fun.\"\n\n* * *\n\nThe rest of the afternoon was a bit of a blur. I had some free time, but my mind kept drifting to the night ahead of me. I tried to read, but the way Rachel had looked at me earlier made me sweat. By the late afternoon, I just gave in and went to work out in the hotel gym. I sweated the frustration, attraction, and nervousness out. Not all of it, but enough to avoid making a complete ass of myself. \n\nA little after eight pm, my phone buzzed with a message. Meet me downstairs in 20. In theory, I was her boss, but I had no illusions about who was in charge.\n\nI dressed up in a slick suit coat, slacks, shoes. Daring black shirt, first few buttons left open, and a plain silver chain completed my look. I wasn't exactly the height of fashion, but I thought I looked good. I knew what I expected to find waiting for me downstairs: Rachel in her suit and several bodyguards discreetly placed around the lobby waiting to follow us out.\n\nInstead, I only saw Rachel. To be honest, there could have been a hundred men pointing guns at me, and I wouldn't have noticed them. To me, Rachel was always a tomboy. If she wasn't in a suit, then she was off duty and in jeans. If she wasn't in jeans, then she was maybe training Isa or me and in some kind of form-fitting athletic wear. She was hot in all of these outfits, but all were masculine or at least androgynous, even f they were tailored for her feminine form. Tonight was different.\n\nRachel was dressed in a tight black dress, which stopped just above her mid-thigh. She was athletic and feminine in every way, and this outfit showed off every curve. She was facing away from me at first, and her ass was incredibly well-defined. As she turned and smiled at me, I could see that the dress went up to her neck and wrapped around to her back. Although it displayed no cleavage, it did nothing to conceal her breasts and left her arms and shoulders exposed. Her short auburn hair was styled in an artistically messy way. Thigh-high stockings and strappy black high-heels completed the ensemble.\n\nBefore I realized what I was doing, I stopped and stared for a long moment, then met her eyes. Thankfully, she just looked at me with amusement dancing in her eyes. I noted that she'd very carefully done her make up as well, including some red lip gloss that made me imagine what her mouth could do. All she held was a small purse.\n\n\"Ready?\" She said as if we were just going to a meeting.\n\n\"I was when I left my room, but then I got off the elevator and saw you.\"\n\nShe smiled more widely.\n\n\"Flatterer.\"\n\n\"It's not flattery if it's true, Rachel. You look amazing.\"\n\nAt that comment, she actually blushed a little, which was gratifying. I looked around.\n\n\"No security tonight?\"\n\n\"Oh, they'll be there, but I've instructed them to hang back a little tonight and give us...well, you, some space.\"\n\n\"Really? And why might that be?\"\n\n\"Well,\" Rachel said, as she started walking towards the exit, \"part of it could be that you've been working very hard while under a great deal of scrutiny this summer. You could use some space.\"\n\n\"Hmm,\" I said, catching up to her and offering my arm, which she took. \"It could be that. Or it could be that you just wanted me all to yourself.\"\n\nWe passed through the automated doors into the cooler night air. Rachel stopped and looked at me. I was slightly taller than her, but her heels more than made up the difference.\n\n\"I think you could be right,\" she said, her voice strangely breathy. Then she kissed me. It was light, on the lips, almost chaste, but it had an impact like I'd just been punched in the gut. It took me a moment to recover, and by then, she was chuckling a little as she spun and walked away. I caught up with her quickly.\n\n\"No car tonight?\"\n\n\"No need. There's a great restaurant and some clubs nearby. They won't be carding you. I've made arrangements. I was assuming you don't mind walking.\"",
        "\"You assumed correctly.\"\n\nWalking down the street of a major city with a woman like this on my arm was a feeling of freedom that I'd never experienced before. I smiled, and soon Rachel broke the amicable silence.\n\n\"Penny for your thoughts?\" she asked. \"You look delighted.\"\n\n\"I am. Can I confess something to me?\"\n\n\"Oh, please do. I'm dressed for all kinds of confessions.\"\n\n\"Um. I fantasized about this a lot. Taking you out somewhere. On a date, just the two of us. Is that weird?\"\n\n\"No. It's flattering if you think about it.\"\n\n\"How so?\"\n\n\"That's what I lo...like about you,\" Rachel said softly. \"You're humble. I think you're a bit innocent, too, but you never think of yourself as better than anyone. You're confident and handsome, but you don't use it as a weapon, or expect people to bow down to you because of your family.\"\n\nI was glad for the shadows of night covering my intense blushing.\n\n\"I don't know how much of that is really virtue, though. I guess I've just never seen myself as anything beyond what I am.\"\n\n\"What are you, though?\" Rachel asked. We both stopped, apparently at the restaurant. Belatedly I opened the door for her. The building was very humble from the outside, a simple brownstone-lined up with others between more significant structures. The entry read 'Pulaski's Fine Dining.' We walked through a small foyer to another door, which was opened for us this time. The doorman and maitre d' were in tuxes, and the waitstaff were all in smart black outfits. The bar was filled with well-dressed high-end professionals, flirting, and chatting. The walls had oak paneling, and the elegant red tablecloths combined with the candle and gas-light to make the place exude class. We were recognized immediately and led to the very back, where a small alcove awaited us. Soon we were seated and alone again for a moment.\n\n\"I guess I'm just a regular person in irregular circumstances,\" I said, after a moment, belatedly answering her question.\n\n\"No,\" Rachel said, \"that's not true. You're more than that. Like it or not, you've got some of your dad in you. And you've had experiences and exposure to things that a lot of people, even wealthy people, don't even know exists. You should, by all reason, be a bit more arrogant and cruel. It would make sense. But you're not. I guess I'm just wondering what keeps you grounded.\"\n\n\"You do,\" I said. \"So does Isa. And Dad's better advice. And Mom. And Earl's Diner in Capuchin. And knowing that whatever else I might do, I don't truly deserve this wealth and power. I have to earn it, in a way, by being more than it. Or at least not being awful.\"\n\nRachel sighed and reached her hand across the table. I took it eagerly.\n\n\"That's what surprised me most about you,\" she said. \"At first, I wondered if you would be a great deal like your father. Not that there would be anything wrong with that, but I was pleasantly surprised. It was easy to see by how well you responded to my instructions when I was teaching you, or how you treated your sister, that you were your own person.\"\n\n\"If I'm honest, what surprised me most about you was your appearance. When Father said we'd be learning self-defense, I imagined a veteran. And then you show up, just three years older than me, and beautiful. I had a tough time, not staring at you. I still do.\"\n\n\"So,\" Rachel said with a wry grin, \"am I just a hot body with some surprising skills?\"\n\n\"No,\" I answered immediately. Her tone had been joking, but I suddenly felt very serious, as though I needed to express what I felt right then. I felt an opportunity coming, and even in my naive state, I knew that some doors open briefly and may never open again. \"You're my friend, and I trust you. I don't trust many people. I rely on you, yeah, but I don't think of you as a teacher or a bodyguard or a driver. I...honestly I really care about you. Maybe I haven't done a good job of showing it, but I do. Beautiful women have always worked at the house, and most of them are smart and skilled, but you're special. I don't know what I'd do if you left.\"\n\n\"Reuben,\" she said, and while I couldn't see very well in the dim candlelight, I knew that her eyes were misting over a bit. The table was too wide for it, but I felt a sudden urge to pull her body against mine and kiss her. I settled for squeezing her hand instead. The waitress politely interrupted us then, but we were both famished, so we welcomed the intrusion. \n\nSoon we were drinking wine and flirting and eating the best steak I'd ever had. I gathered later that this place was a hidden gem in Chicago, expensive and generally with a long waiting list, but open to us that night. Rachel was hemming and hawing over dessert, so I stepped up and ordered cannoli, splitting it with her. \n\nI paid, which made me feel important. It was a silly thing, but I think Rachel understood it to be a compliment to me. She could take care of herself. I realized as she waited to take my arm that she had only really behaved in a submissive fashion to two men: my father and myself. I couldn't put that out of my mind. \n\nWe left arm in arm, but it was chilly out, and soon Rachel was leaning into me. When we reached the club that she'd picked out, I opened the door with one hand and put the other on the small of her back, gently guiding her. I felt her tense for just a moment and worried that I'd misread her, but when we got inside, under the dim light, I could see the flush on her cheeks. Something about what I had done had gotten to her, and in the way, I wanted it to.\n\nThe club was too loud to hear each other properly, so we didn't speak. I got Rachel and myself each a whiskey on ice, which we drank quickly. The flashing lights did nothing to tame the heat that was growing between us. We met eyes, then I stood up and took her hand, going to the dance floor.\n\nI can't dance for shit, or at least I don't think I can, but I can let loose, and that's what was important in the moment. I'm coordinated enough to move with a partner, and Rachel is a hell of a partner. She moved and shifted like a serpent, and her dress showed off her tight body when she did it. I could tell that others were enjoying the show. Men and even women shouted vulgar encouragements. She wasn't looking at them, however. The entire time she shifted and gyrated, just a few feet from me, her eyes were on mine. Two college girls came over and danced with her, grinding on each other and her. Rachel looked at me, cocking her head slightly. She was asking for permission, and I gave it. The three really tuned up the crowd, and their dates, as they moved and shifted. One went to kiss Rachel, but she just shook her head, so the two college girls kissed instead. The crowd went wild.\n\nIt became too much, and I moved to her. The display had aroused me but also angered me just a bit. I knew it was a display, and I knew it was for my benefit, but I was still jealous. I knew that I should feel bad, but I didn't. Instead, almost instinctively, I did what I needed to. I pulled up close to her, put my arm around her waist, and pulled her into me. She whimpered, a noise that only I was close enough to hear, but did not resist. As I crushed her to my chest, I kissed her for the first time.  \n\nI'd never kissed anyone like this. It started out strong, her arms around my neck and mine around her waist, her body melting into mine, our lips colliding and tongues dancing. Then it intensified. She ground against me, and I moved my hand up under her skirt to grab her ass. She gasped, then reached down and took hold of my cock through my pants. I grunted, and she moaned. We stopped for a moment and looked at each other. \n\nWe'd only been there for a half-hour, maybe forty-five minutes, but some hidden communication moved between us. As one, we turned and left the dance floor. Perhaps someone noticed our urgency and laughed, knowing what we were going to do, but we didn't care. We walked at a fast pace back to the hotel, my arm casually around her bare shoulders. We didn't speak, but we both knew what was going to happen. Our breathing was a little faster than it should have been, our faces a bit more flushed.\n\nWe passed through the lobby at light speed, ignoring the doorman's smirk. As soon as the elevator closed behind us, we were making out again. I moved into Rachel and pushed her into the wall. She breathed hard and started unbuttoning my shirt. I noticed with a little bit of satisfaction that her hands were trembling with excitement. She wanted me, really and honestly.\n\nWhen the elevator door opened, Rachel danced out of my grip, giggling and practically running to our room. I followed at a slow step, partially out of a need to draw things out but also because I was a little tipsy and didn't want to fall down and embarrass myself. As we neared the door, Rachel turned around and faced me. I pushed her into the door, harder this time than at the elevator. I half-expected her to ask me to slow down or be more gentle, but she just wrapped her arms around me and kissed me again. Somehow, I fumbled the card key out and got the lock open. As the door swung open, Rachel almost fell backward, but I steadied her, with my hands under her ass.\n\nRachel made a small noise of shock as I lifted her up. I worked out then, and I do now, and while she was in good shape, she was rather small. As I pulled her up, her hemline lifted to her waist, and she wrapped her legs around my waist. Anyone watching us could have seen her lacy red panties. Neither of us cared. I kicked the door closed behind me then carried her to my bed, throwing her down upon it. She giggled and looked up at me, then stopped smiling, sitting up. The mood hadn't soured, but it had changed.\n\n\"What is it?\" I asked.\n\n\"Do you really want me?\"\n\n\"Jesus, Rachel, if you can't tell by now...\"\n\n\"You're a healthy eighteen-year-old man, and I'm a girl. You'd want to get in my pants regardless. But do you want me? I need to know, Reuben. I need to hear it.\"\n\n\"Rachel, I want you. I've wanted you since you first showed up at our house. The first time you put your arms around me to help adjust my shooting stance is a memory that I can't forget. I dream about you, Rachel. About your body, about your lips on mine, about...god. I care about you, but yeah, Rachel, I want to fuck you. I want to fuck you so bad it hurts.\"\n\n\"Oh god, Reuben,\" Rachel said, standing up, \"That's what I needed to hear. I need to know that I'm...important to you. You'll have so many women, and so few of them will end up mattering to you. I need to matter to you. Even if this is our only night together.\"\n\n\"It won't be,\" I said with confidence that shocked me. \"I won't be able to keep my hands off of you. Not after tonight.\"\n\nRachel smiled but didn't answer. Instead, she took me over to the window. We had a balcony with a beautiful view of the lake. We could see the lights of boats on the water and airplanes coming into land. She slid the door open, and a breeze came in, crisp and refreshing. \n\n\"I've wanted to do this as soon as you turned eighteen. Let me prove too you how much I want you. Let me show you how I...how I love you.\"\n\nThe word shook me. I didn't let it show, although I probably should have. I didn't expect it. I cared deeply for Rachel, and yeah, I'd even call it the beginnings of love, but it was far from my mind. How long had she felt this for me? She was older than me, although admittedly only a few years. Had she wanted me for a long time? Even when I was underage? I had difficulty focussing and just nodded in response. Rachel smiled and turned around. \n\n\"Help me get out of this. I want you to see me,\" she said.\n\nI found the well-hidden zipper and pulled it all the way down. Then I pushed it down off of one shoulder and then the other. Rachel let gravity take it the rest of the way, shimmying her hips slightly to get it to fall all the way to the floor. She wore no bra, and I saw gooseflesh break out on her back in the cool breeze. She kept her red panties, thigh-highs, and heels on, and somehow that was far more arousing than pure nudity. She turned around to face me. She was a vision. Her pale skin glowed in the night. She bit her lip and dropped to her knees.\n\nRachel fumbled with my belt and zipper, more eager than I'd ever seen her. She fished my cock out, and it looked large in her smaller hand. She made a hum of satisfaction and leaned into its hardness, rubbing her cheek on it, affectionately. I placed my hand in her hair and stroked her head. She rewarded my touch by licking me once from the base of my cock to the head. I groaned loudly, and she giggled.\n\n\"I'm going to make you cum in my mouth,\" she said. \"I don't want you to hold back. I know you've got more than just one time in there for me. I want to make you feel good and then...then we can get to fucking. Don't worry if it doesn't take you long. That's fine, I want to take the edge off for you. Oh, and when you get going, don't be gentle. Just put your hands in my hair and fuck my mouth. I...I love that. I'm going to take care of you, Reuben. I'll always take care of you.\"\n\nI nodded, and she took me in her mouth. I knew then that she had a lot of practice, and it didn't bother me. Mainly because her technique made me forget about anything other than what she was doing. Her left hand played with my balls gently while her right moved at the base of my shaft. Her mouth moved quickly up and down, and her tongue stimulated me in ways that my naive mind had never imagined it could. Over and over, she moved, her mouth making the lewdest slurping and sucking noises. Now and again, she would make eye contact with me, and she would look at me with such pleading, such complete devotion that even in the midst of that much excitement and pleasure, it took me aback.\n\nI put my hands in her hair and groaned as I felt her tongue twist and turn. I let my hips move naturally, and soon I as plunging into her mouth. I had to go deeper. I needed it. I pushed hard, and she released my shaft, but she never fought me, never resisted. I heard her gag and choke, but I didn't stop. As I built up speed, I looked down and caught a glimpse of what she was doing. One hand braced herself on my thigh, but her other was clearly down her panties. She was so excited that she was touching herself while I fucked her mouth. I remember thinking how amazing she was as I slammed into her once more and let go. \n\nRachel moaned as I filled her throat and mouth with my cum. I pulled back slightly, letting her recover and giving her a chance to release me, but she didn't. Instead, she kept up the suction, gulping my cum down eagerly. She kept it up until my pulses of sperm slowed and then stopped. She let me out with a slight pop and then looked up at me. A tiny trickle of cum had escaped her mouth and dripped down her chin. As she looked at me, she wiped it up with her finger and then licked it clean.\n\n\"A good girl always drinks whatever her man gives her,\" she said and smiled wickedly up at me. I didn't notice at the time, but later I would think back and wonder if that was something she had memorized, a kind of lesson she had learned before she had met me.\n\nI held my hand out to her, and she took it, and I helped her back up onto her feet, kissing her deeply. I tasted a bit of myself on her lips still, but it didn't bother me. I was falling for Rachel much harder than I had imagined possible. It didn't hurt that she'd just given me my first blowjob, and I wasn't going to waste time returning the favor. I led her to the bed and then took off my shoes, socks, shirt, pants, and boxers in the time it took her to take off her panties. She giggled at my eagerness.\n\nI was already getting hard again, and Rachel looked at my cock with satisfaction. \n\n\"Are you ready to fuck me now?\" She asked.\n\n\"No,\" I said. \"I want to make you feel good first. I've fantasized about it before. What you taste like.\"\n\nRachel's expression changed slightly, and she blushed. I was far too driven by hormones to really notice at the time, but later I would wonder. How could a woman like this not have men lining up to go down on her? How was that even possible, given how attractive she was? Did her previous partners not care about her?\n\nRachel slid up the bed and laid back, parting her legs. I ran my hands up her legs. She'd left her stockings on, and the transition from their slightly rough texture to the smooth warmth of her inner thighs did something to me. I slowly took off each high heel, kissing her on her each calf as I did so. I took my time, enjoying the feel of her firm, athletic body. When I looked back at her, her lips were parted, and she was absently pinching her own nipple. Her pussy was trimmed, but not shaved, and was a slightly darker auburn than her other hair. Her labia was swollen and wet, and I could smell her arousal from where I was. I moved down, kissing her on her inner thigh as I did so, before finally tasting her.\n\nRachel gasped, and I felt her hands in my hair. Her touch was light, almost tentative and unsure. I looked up at her.\n\n\"Tell me what you like...or just move me where you want me, I've...I mean obviously, I've never done this before. I don't want to fuck it up.\"\n\n\"You're off to a great start. Just keep it up, and I'll...oh god...I'll tell you what to change.\"\n\nI didn't wait for her to finish before I started licking and lapping at her. What I lacked in experience I made up for in enthusiasm. After a bit, I felt a slight pull on my hair, too light to cause pain, but I liked it anyway. I responded by moving up until I was licking around but not directly on her clit. She stroked my head absently as I heard her moan.\n\n\"Fuck, Reuben. You're good...at this...at loving me...\"\n\nIn response, I moved my hand over her taut belly and up to her chest, where I followed her example and pinched her nipple, lightly at first.\n\n\"Harder,\" she said. \"Oh fuck, pinch them harder, and move up...just a little. There, oh fuck there...\"\n\nRachel's words degenerated into a stream of noises and exclamations, meaningless but telling me I was doing it right. Her grip in my hair became painful, and her legs locked around my head. I felt her body go rigid, and she cried out, gasped, and then cried out again, her body locking and unlocking as she was taken by orgasms. I wanted to watch her, but I didn't dare stop. I kept it up until she started pushing my head away.\n\n\"Oh, god, enough, enough. I can't take any more, baby...\"\n\nI looked up and was very pleased with myself. Rachel was panting, her expression one of satisfaction, her whole body flushed with pleasure, her eyes half-lidded. She crooked a single finger at me, and I moved up her body, kissing her, belly, breasts, nipples, neck. I wanted to be inside her then, badly. That's what she wanted, too. As my cock slid along her wet slit, I groaned, unable to control this fire-like need, and kissed her, clumsily but with real affection. After a minute, we paused, and she looked me in the eyes.\n\n\"This is your first time, isn't it?\"\n\nRachel asked the question simply, with kindness.\n\n\"Yes.\"\n\n\"Good. I want to be your first. I want to be special for you.\"\n\nI don't know what I expected at that point. I had ideas about the way men and women should fuck, and they were pretty simple and a bit naive. Rachel corrected me. As soon as she stopped speaking, her eyes turned predatory, almost merciless, and she rolled hard. She was strong, at least as strong as I was, from constant exercise and training, and other activities. I found myself on my back, her straddling me, my wrists pinned as she kissed, no, attacked my neck and ears. She bit and nipped, and I cried out more than once. I never asked her to stop.\n\n\"Say you want me,\" she breathed, her voice hard.\n\n\"I want you.\"\n\n\"Say you need me.\"\n\n\"I need you, Rachel. Please!\"",
        "\"Beg for it.\"\n\n\"I...please, Rachel. Please, I need...\"\n\nRachel did something then that I won't ever forget. It wasn't entirely pleasant, but it aroused me further nonetheless. I didn't understand any of it. Not why she did it, or why part of me liked it. She released my wrists and slapped me, hard, across the face.\n\n\"Say that you belong to me. Say it!\"\n\nRachel's voice had lost the affection that it had only moments before. All that was left was hunger and an aggressive dominance that, to be honest, frightened me a little. Inside, I knew that I deserved the punishment. I knew somehow that I had been bad, and this was what I deserved. I was simultaneously more aroused than I'd ever been, and also close to tears with emotions I didn't understand. \n\n\"I'm yours, Rachel. I belong to you. Please...please stop it.\"\n\nJust like that, Rachel was herself again, looking down at me with familiar affection and new want. Something dark had passed over us, and I wouldn't understand it for many years. She kissed me, deeply, her hands on the side of my face, my arms around her back. She met my eyes as she reached down and guided my cock inside of her. This time we moaned together. I never understood how much she had wanted me. \n\n\"Fuck, Reuben, you feel like steel inside of me...and you're so hot. God...\"\n\nRachel fucked me then. She was on top and in charge, and that felt right, at least for our first time. She knew what she was doing. Her body flexed, and her hips rolled, and her internal muscles squeezed my cock. I groaned and responded, and my hands explored her breasts, squeezing gently then roughly. She preferred the latter, and soon I was fondling her body hard enough to leave bruises. I didn't want to hurt her, not really. I just wanted to do what pleased her. \n\nAfter what seemed like hours but was probably only a few minutes, we were both close. Rachel wasn't moving in the same way but was simply bringing herself up and down on my cock. I had my hands on her waist and was helping her move, up and down, harder and faster, and with more need. \n\n\"Rachel, I'm going to...\"\n\n\"Do it, baby. Cum inside me, please. Please, Reuben, please cum inside me. I need it, and I'll be good for you, so good just cum inside me and...\"\n\nI did cum, and even then, a part of me wanted to truly fill her and make her pregnant. I'm sure a lot of that was just my eighteen-year-old hormones, but some of it was something more profound. I knew that she was for me, or I at least wanted her to be. I groaned as I did so, too focused on pleasure to speak. \n\n\"Oh god, Reuben, yes, god, yes, I love you!\"\n\nOne last time, Rachel's body turned rigid and shook, her pussy milking my cock of every last drop, squeezing and pulling my cum out of me. I felt myself still thrusting up inside of her, even as I knew I was dry. Then it ended, and she fell, almost limply, down on me, kissing me on my lips and face and forehead and neck.\n\n\"That was so good, Reuben. So good. Thank you so much.\"\n\nI couldn't respond. I felt all kinds of emotions pour through me, and the largest of them was definitely love. Real love. The first, if not the strongest, of my life. I think she felt it too. After a few moments, she rolled off me, releasing my cock. She settled in beside me. I had expected for her to lay on my chest, but instead, she guided my head until it rested on her breast. Then she sighed as she played with my hair. I was so full of love for her that I was almost in tears. I was embarrassed. Men weren't supposed to behave like this, or so I thought.\n\n\"I don't want this to be one time,\" I said, admitting my fear, now that we'd fucked.\n\n\"Me neither,\" Rachel answered, \"but we have to keep this a secret. I could get in trouble, and I guess you could too.\"\n\n\"I won't tell anyone. Ever.\"\n\n\"I know you won't. I trust you completely. I'm sorry for hitting you, Reuben. I'm so sorry. I...I guess I thought you might like it. Someone did something like that to me, my first time. I guess I didn't like it either, not really, but it turned me on a lot. It still does when someone hurts me during sex.\"\n\nFinally, I understood something about Rachel that I hadn't before. It wasn't a particularly deep understanding, but it was real. She was three years older than me, and much more sexually experienced, but not all of those experiences had been positive for her.\n\n\"I...I forgive you. I loved everything else. I love you, Rachel.\"\n\n\"I love you too, Reuben. Even more than...\" Rachel trailed off then, and I realized that she had been close to saying something that she didn't want to admit. I looked up, and pain and guilt flashed across her face, briefly. \n\nWe slept together that night, never far apart, always touching or holding one another. We woke and made love twice more, once fiercely, and once slowly and tenderly. When I woke up, she had left me for her own room, but her side of the bed was still warm, and her scent lingered in the air.\n\nOur relationship only intensified from there.\n\n----------------------------------------------\n\nWelcome Home\n\n----------------------------------------------\n\nI rested uneasily in my old bed. The room had been redecorated, but Isa assured me that my childhood things had never been discarded. I didn't have much interest in them as any memories I had associated with them were not of the nostalgic variety. When I had left home, the room had been a discordant shade of light blue and full of old dressers and antique furniture. Now it was done in a modern minimalist style. The color was a relaxing forest green, which Isa knew was my favorite. I had spent a lot of time out in the woods surrounding our estate when we were growing up. We both had.\n\nI slept a few times but only for an hour or so at a time. I had nightmares of events, both real and embellished by childhood fears. In one, the corpse of my long-dead father crept in through the window while I slept and then ate me. In the logic of the dream world, I then somehow became him, which was worse than being simply consumed. \n\nIt would be fair to say that I was terrified of being here. I knew that Isa wasn't lying to me directly, but she was leaving something out. Could this be related to some strange requirement of the will? I didn't know, but I was sure that I would find out.\n\nEventually, I gave up on sleep. I pulled on some old pajama pants and a shirt and padded down the long carpeted hallways. I passed a maid doing some overnight cleaning. I was going to say hi, but then she spun neatly in place, faced the wall, and looked down. From my own memories, I knew that here eyes would be closed tightly. \n\nI sighed again. Yet another depraved De Heer tradition. In many manors, the servants would have been required to curtsy, even in this day and age. Here, the maids and administrators, while few in number, were selected and informed that they would be expected to service the residents or anyone the residents specified, in any way they chose. There was no coercion (in theory anyway), and the compensation was incredibly generous. My father always found it to be an ethical solution, given that the women were selected based on a psychological predilection for submission and a need to be used.\n\nIt still felt wrong to me, perhaps because I'd seen how my father treated them. It was one thing to objectify someone in play. It was quite another to regard human beings as nothing more than something to be discarded. All of the staff signed waivers/contracts demanding non-disclosure and providing for a significant payout to loved ones in the \"unlikely event of death or permanent injury.\"\n\nThere was a nice girl who went by Raja, a few years older than I was. When I was seventeen, I awkwardly flirted with her, but nothing ever came of it. One day she was simply gone. When I asked my mother, she simply said that Raja quit. I later found suspicious stains in the corner of her small room, missed when whoever had cleaned up had taken the sheets and mopped the floor nearby to a mirror shine. Just one of many crimes I suspected my father had committed. Casual exercises of power that he believed he had a birthright to. Truthfully, it was only my cowardice that prevented me from standing up to him sooner. I believed that he would have had me killed if I became enough of a nuisance.\n\nI found myself letting my hand run down the maid's back. She shivered, and it wasn't from disgust. I realized then that there probably hadn't been many men here recently. If she had both a tendency and a need to be submissive, then she was probably very pent up. Why, if I fucked her, I'd probably be doing her a favor. \n\nI jerked my hand back, disgusted with myself. Some of that might be true. And yeah, I'd had sex with the staff here before, when I turned eighteen. I justified it by being less of an ass than my father, but that was a low bar. I caught him once brutally fucking a girl my own age right in the hallway, in the middle of the day. \n\nI wanted to apologize, but I knew it wouldn't make any sense. Instead I just sighed and continued down the hall. The truth was that it had been a while for me as well. Nina had met someone that she was serious about, and when one of use was seeing someone else, we didn't cheat. \n\nI walked down the long halls to one of the back stairways. I always felt ridiculous using the massive twin staircase in the main foyer. I managed to make it to the kitchen without any more encounters with the staff. Most were asleep, and it appeared to me like there were far fewer working here than there had been earlier. I wondered if the family had fallen on hard times or perhaps with father's death, they didn't need as many around. Many did tend to quit after only six months or so. \n\nMost of the furnishings in the kitchen were different than when I'd last been here, including the large stainless steel refrigerator which gleamed in the dim light that I turned on. I opened it, expecting to have to dig around a bit, but there, stacked on the left, was proof of Isa's planning. There were simple foods there, but I knew then that she had indeed been monitoring me, and that she had paid attention to my eating habits. \n\nYogurt, cheese, meats, berries. All simple and at least somewhat healthy things that I enjoyed. She'd even had the kind of soda that I preferred, Cheerwine, shipped in. I was at once both touched and a little bit taken aback. Isa hadn't had to do this. She had her plan to trap me here, where she could keep an eye on me. At least she intended to keep me a little comfortable. \n\nI took a small package of raspberries and a soda and turned around to leave. I almost dropped them in shock. There was someone in the kitchen with me, standing beside the sink. \n\nShe looked unsure, like a deer caught in headlights. I got the impression that half of her wanted to run out the door, and the other half wanted to just stay still and hope that I wouldn't notice her. I probably should have nodded a greeting, apologized, and gone straight back up to my room, but I didn't. The truth was she was rather striking in appearance.\n\nI'd never seen her before, of that much I was sure. She was really too young to have been working here when I lived here. I guessed her age at twenty-one, maybe twenty-two. She was short, if not petite, and even in the dim light I could see that she had striking platinum blonde hair. Her face was heart-shaped, and where Isa's was beautiful but sharp, this woman's expression was open, giving. Her glacier-blue eyes were wide with something like shock and she held her arms across her chest. Belatedly, I noticed that she was dressed rather formally for the hour. A simple white blouse with what looked like light blue designer's jeans. She even wore heels. \n\n\"I'm sorry!\" Her voice expressed dismay that wasn't called for. Then again, she probably knew who I was. And if she knew me, maybe she had known my father as well. Perhaps the reaction wasn't so extreme after all. She looked down but didn't turn around as I had expected. \n\nI put my food down on the counter and extended my hand, doing my best to smile warmly. \n\n\"Hi,\" I said, \"I'm Reuben. I guess I just moved in.\"\n\nHer eyebrows raised, but she shook my hand firmly and professionally. It was the kind of handshake you gave before presenting to the board.\n\n\"Oh,\" she said, \"I know who you are. I guess I wasn't expecting to see you in the kitchen at this hour. Isa, I mean...um, Ms. De Heer usually calls if she wants something from down here. I'd just finished up the last of my, um, tasks, and I was going to eat something and go to bed.\"\n\n\"By all means, then, don't stop on my account,\" I said, holding the berries out to her. She took one very carefully, much like an animal that desperately wanted to eat and befriend someone but didn't entirely trust them yet. Her caution was advisable, and not just because of family history, but because I had an agenda. If she was on a first-name basis with my sister, then I wanted to know more about her.\n\n\"Oh,\" she said with almost a comical expression of embarrassment after quickly eating the berry, \"I forgot to tell you my name. I'm Sarah Huriens. I'm your sister's personal assistant. I set up everything to her specifications, once she told me that you'd be staying here for a significant part of your time.\"\n\n\"She must be working you very hard if you have to eat this late.\"\n\nSarah blushed almost immediately, telling me what kind of work she had been doing for Isa. I shoved away my mixed feelings of both arousal and jealousy. Those days were well behind me now. That being said, there was something very appealing about this woman beyond her attractive appearance. Perhaps it was her seeming eagerness to please or the way her face projected kindness.\n\nOr maybe it was just the part of me that was like my father, scenting innocent prey. \n\nAfter a moment, I realized that we were standing in silence, and Sarah's eyes had turned down again. \n\n\"Well, I apologize for getting in your way,\" I said at last, \"it was nice to meet you, and I'm sure that I will see more of you, soon.\"\n\n\"Oh, thank you, sir. Please don't think anything of it. It was wonderful to meet you, sir.\"\n\nI chuckled at her formality as I left. I had gotten used to the way real people lived.\n\n\"Call me Reuben, please, at least when it's just the two of us. I don't want to get you in trouble with my sister, but everyone here seems to regard me as something to fear, and if you would be all right with it, I'd like to have the chance to prove to at least one other person here that I'm not.\"\n\n\"Yes, sir, er, Reuben. Yes, I would love to get to know you better. Until you get your own assistant I believe I will be filling in. I've been looking forward to meeting you, to be honest. Your sister speaks very highly of you.\"\n\nWell, I won't pretend that didn't shock me, but I covered it up, waved good night, and snuck back upstairs with my snack. As I ate, I found myself unaccountably optimistic. Sarah had given me something to look forward to, and try as I might to keep my thoughts gentlemanly, it was effortless to imagine her full lips on my body, and what she might look like out of her clothes. \n\nI sighed, pledged to whatever spirit looked out for me that I would be at least somewhat good, and then lay down. \n\nI slept surprisingly well.\n\n* * *\n\nThe following day I woke up to the leftovers from my snack, having disappeared. The maids here had always been like ninjas, cleaning whenever you weren't looking. I found it a little creepy now that I was an adult, and I wondered if locking the door at night would make any difference. \n\nI had woken up naturally around seven am, the time I usually got up to get ready to go to work. Although it was a Sunday, I typically tried to keep a regular schedule, because otherwise getting up for a morning class on Monday could be a real pain. I supposed that I wouldn't be doing a lot of teaching now. I realized that I should probably quit or go on sabbatical. Isa's arrangements aside, they might need to backfill for someone who couldn't be there often. Though it hurt a bit, Nina and the rest of my friends would probably be safer with some distance from me. \n\nI went downstairs and found a maid waiting for me. She was young, even younger than Sarah, and she smiled and gestured for me to follow her. Wordlessly she led me into a small room that I recognized as my mother's office. It had been redecorated a little bit but was otherwise very similar. A single working desk with what looked like a modern laptop sitting on it, a table that could seat two had breakfast and a large binder on it. I smiled in understanding, and the maid left me there, closing the door behind her. The room had the same decor, tasteful and relaxing greens and browns which matched the trees that I could see out the picture window. I stepped closer and enjoyed the early morning view of the lake. A crane patiently waded in the shallows, eager to find its own breakfast. \n\nI sighed, sat down, and began to eat and chug coffee while leafing through the binder. I knew what was expected of me. Truthfully, I preferred digital media, but I suspected that there were things in here that no one wanted me to have access to in a digital format just yet.\n\nThe binder was a complete layout of the De Heer organization as it currently was. It had an excellent introduction, which took me through the changes, sales, and acquisitions that things had undergone in my absence. It wasn't poorly written, either. Before I knew it, I had a better understanding of what was going on that I ever had when I was a resident at the mansion. When I heard a knock at the door, I was startled to have realized that almost two hours had passed.\n\n\"Come in,\" I said, standing up and stretching.\n\n\"Good morning, sir...I mean, Reuben,\" Sarah said, poking her head around the door. Her smile in the morning light was brilliant and eager. She wore a beautiful blouse that showed a bit of cleavage and a tight white skirt that made it just above her knee. Around her neck was a simple silver chain. I found myself cheering up already.\n\n\"Have you come to test me on what I've learned?\"\n\n\"Actually, I'm here to get you for your morning meeting with Ms. De Heer. I mean Isa. You'll be meeting with her every morning on the weekdays that you're here and having dinner with her every evening. I know that today is Sunday, but we have a lot to catch you up on. After the meeting, you and I will sit for a while, and I'll help you get up to speed.\"\n\nI made to walk to the door, but Sarah stopped me.\n\n\"You can um, leave the binder there on the desk. It will always be here if you need it.\"\n\n\"She doesn't even trust me with this?\"\n\nI didn't bother keeping the bitterness out of my voice, although Sarah had nothing to do with it. She looked away diplomatically as I set the binder down on the desk, and followed her out.\n\nWe went back to my father's old office. Isa was there, working hard on what I guessed was a critical email. She smiled and stood after a moment and I saw that she was dressed in a mirror of Sarah. Black, simple blouse with a low neckline and a slightly shorter black skirt which showed off her amazing legs. I realized that, to my chagrin, the feelings that I thought I had left behind long ago were still there, just waiting to come out again. I vowed to keep them in check. There wasn't any world in which they would be welcome.\n\nIsa gestured to the table on the other side of the room and sat in one of the chairs. So this was to be a meeting of equals, then, not Sarah and I sitting on the other side of the desk. I sat opposite Isa, but to my surprise, Sarah moved and stood beside my sister with what looked like long practice, slightly behind and to the left, hands crossed modestly. Both Isa and Sarah held tablets. I felt silly for not bringing at least the laptop, and Isa caught on right away.",
        "\"Don't worry about taking notes. This isn't that kind of meeting.\"\n\n\"What kind is it?\"\n\nIsa sighed and looked down briefly. Others wouldn't have been able to tell, but I knew that as a tell of hers. She felt guilty but her pride prevented her from just up and saying what she wanted to. I decided that after yesterday, I'd give her a chance to speak.\n\n\"Reuben, I'm sorry,\" she began.\n\n\"You're going to need to be a little more specific,\" I said, a bit testily. Sarah looked a little startled. I suspected that no one spoke to Isa in the tone that I used. I expected a witty remark back form my sister, but she remained in silence for a moment, gathering her thoughts. \n\n\"For all of it, I suppose. I really do think that it's best that you've returned here, for the reasons that I mentioned, but...also for my own. I missed you. I missed just talking with you and being with you and the times that we...we spent together. I hope you missed me as well, but...\"\n\n\"I did,\" I said cautiously, \"but honestly, this has been a bit of a shock. You're not the same person that I knew. You've made that abundantly clear.\"\n\nIsa sighed deeply before speaking again. It was hard to know if it was sincere or just some kind of emotional manipulation.\n\n\"I should have started out by telling you how much I've missed you. Perhaps you feel that I'm paranoid, unfair, or even cruel. I assure you that I am not. For the time being, I just want...I need you to trust me. I know that's a lot to ask, given yesterday but...if you can, then I promise that I'll do my best to...to let you live as you want. Once you have a true involvement in the family's interests and have demonstrated your good intentions, I'll step back. I don't want to hold you here against your will for the rest of your life. I'm hoping that given time, you'll see my side of things, and perhaps even enjoy your time here.\"\n\nI blinked for a moment, stunned. I only spoke again because I realized that the other two people were expecting an answer. \n\n\"Isa, you must know how that sounds, right? You're making vague promises of 'stepping back,' but what does that mean? Yesterday you threatened me. Not just me, but my friends as well, the few that I have. I've built a life. Perhaps it doesn't seem important to you, but it's mine. It's what I made after having to leave everything behind. If you want my trust, then you'll have to give me something to work with. The thing with the binder for example. That's a bit excessive, don't you think?\"\n\n\"Oh,\" Isa said, \"That. Believe it or not, that's not just for you. It's for me as well. Certain documents remain checked in by security in certain rooms. Even in this house. There are things in here which I may not remove. Granted, I wrote the policy with our head of security, but I follow it. We had thefts and some rather...extraordinary incidents while you were gone. It probably is excessive, but for now, we have to keep things this way. I hope you can understand.\"\n\nI was very curious about what she had meant by \"extraordinary incidents.\" Still, I knew that if I asked, I'd just get more diplomatic evasiveness. I hated myself a bit for it, but in a way, I was kind of excited about the situation. Even if I was being forced into it, I was seeing my sister now, and probably would every day. Maybe time would explain what she would not.\n\n\"I don't understand, but it's nice to see you, at least. I'll ...do my best to assume that your intent is positive.\"\n\nThat was true, and Isa actually blushed ever so slightly. She nodded, and we sat for just a moment in what had become an oddly comfortable silence. Then my sister held out her left hand in an offhand gesture, and Sarah stepped forward. \n\n\"I have a great deal of material to go over with you, and we'll get into business, money, and all kinds of ugly stuff soon, but this is a bit delicate. Please try not to be angry, all right? I know none of this is fair to you, but I also want you to enjoy your time here. I want you to relax, and maybe even spend some money on yourself. Get a car, maybe even, um, have a fling.\"\n\nThe words were so strange coming out of Isa's mouth that I almost laughed. I was glad that I didn't. There was a lot of emotion hidden behind her reserve, I knew. There were real feelings that both of us had for each other. Some healthy, some less so, but all were bonds that could be broken with the wrong word or act. I was torn between calling her out and taking a deep breath and biding my time. In the end, I decided to try the latter course.\n\n\"Um, all right. I saw that you'd stocked some of my favorite foods in the fridge. That actually felt oddly welcoming.\"\n\nIsa smiled again, and a little more of that too-formal-but-kind girl I knew escaped from her mask. I noticed then that her left hand had drifted behind Sarah. Clearly, she had been caressing her personal assistant on her ass, and now Isa was stroking her inner calf. Sarah blushed and looked down, but it was hard to say if she was more embarrassed or aroused.\n\n\"So you've met Sarah, obviously,\" Isa started, \"she's been vital to both my success and my well being here. She'd tell you that she wasn't any more important to me than any other of my staff or employees, but that would be her modesty. The truth is somewhat different.\"\n\nI found myself sitting forward, suddenly very interested in where this conversation was going. As I did, Isa's hand slid up under Sarah's skirt and disappeared on her inner thigh. Sarah didn't pull away, but I heard the tiniest whimper escape her. She was most definitely more aroused than ashamed, and I bet that the latter contributed to the former.\n\n\"What is the truth?\" I asked, almost blandly. I was incredibly turned on by this display, however, and Isa probably knew it.\n\nIsa's arm moved up a bit more, and Sarah moaned.\n\n\"Sarah is my trusted friend and my lover. She has proclivities that match well with mine and...well, there is a depth of feeling that I feel for her that I never expected.\"\n\nI made a mental note not to flirt with Sarah. Despite my urges and frustrations, I did not want to ruin Isa's happiness or complicate matters, but it turned out that my sister was ready to do the latter, at least.\n\n\"So,\" Isa began, looking sidelong at her lover/assistant, \"when I showed you my brother's picture and explained that he'd be coming to live with us, do you remember what you said.\"\n\nSarah bit her lip and wobbled just a bit. To my shock, I realized that Isa was most likely fingering her, right there. I was harder than I'd been in years.\n\n\"Tell Reuben what you said, please.\"\n\nIsa's voice was kind but very firm. I could tell that Sarah responded to that kind of instruction.\n\n\"Yes, Ms. De Heer. Mr...um...Reuben, I told her that you were very handsome and that I was looking forward to meeting you.\"\n\n\"And?\" Isa said, arching one eyebrow and smiling wryly.\n\n\"A-and...that I would be amenable to being...used by you, in whatever way you so desired. Please. S-sir...\"\n\nSarah leaned forward then and steadied herself on the table, as Isa withdrew her hand with faint amusement and great affection in her gaze. I wasn't really sure how to react, so I simply sat quietly and enjoyed Sarah's flushed panting.\n\n\"Well,\" Isa said finally, \"no one is asking you to answer now, or ever. I feel Sarah is very beautiful and giving as a lover. While it may be unorthodox, I have no qualms about sharing her with you, if she wants. And she does want, Reuben. Quite a bit. If and when you want to take things to that next step, just let her know, and she will be most pleased to serve you. I know that you have misgivings about using the staff as father would. While quite a few of them would welcome your attention, you are correct in that they tend to be very young and unworldly. Sarah is young, but she is not foolish, and she has made me very happy. I think that she will be good for you as well.\"\n\n\"I'm ...happy to hear it, although I'm not sure if there is proper etiquette to respond to an offer of this nature,\" I said, meeting Sarah's eyes, \"I will note that I am very interested in seeing where this goes. Sarah made quite a strong impression on me last night.\"\n\nIsa's eyebrows raised as she was evidently unaware that we had met the perilous evening. It didn't seem to bother her, however.\n\n\"All right then. I'll let you get to your business then. No euphemism intended, unfortunately. You'll get your own assistant soon, one of your choosing, but for now, I have meetings, and I need to be in Chicago by this afternoon and New York by early tomorrow morning. I won't return until tomorrow evening. While I'm gone, Sarah will take you through your training, guide you in your first decisions, and help you get settled.\"\n\n\"All right,\" I said, eager to get started, \"but I assume that we'll actually be spending time together when you get back, right?\"\n\n\"Yes. I have many questions for you, about your life, your work, even your marriage. I'm sure you have some for me as well.\"\n\nWe made small talk then, idle, not deep, about Isa's travel arrangements and what hotels she liked. I was unsurprised to discover that she preferred to fly under the radar and stay in reasonably standard lodgings, with our own security close, of course. She had always been modest. After a few minutes, Isa left, and I followed Sarah back to what was my mother's office, although now it was plainly mine.\n\nWe spent a pleasant if somewhat dry day together. She was so professional and focussed that I found myself able to mostly ignore the proximity of her body or the way she occasionally touched my forearm or shared a smile before blushing and looking away. In any case, I did learn quite a bit about the De Heer operations, and I understood it much better than had I simply read about it in the binder. \n\n\"Well,\" Sarah said, looking at her phone, \"It's about five pm, and I think I've probably worn your brain out. Isa actually asked me to stop sooner but I thought you might want a complete picture. There are still a lot of details to fill in, but this should get you started. Your first big decision will what parts of the business you want to be involved in.\"\n\n\"How so?\"\n\n\"Your attention is like any other resource: finite. You only have so much time and energy. Most things run smoothly if you put the right people in the right positions. Still, if you want to divest from, um, less ethical interests to more ethical ones, you'll need to have your hand on the wheel if you don't want things to spin quickly into chaos.\"\n\n\"Huh. And before I can decide, I need to understand what we're doing everywhere and how it all ties together? And what the risks are for the family and the employees.\"\n\n\"Exactly!\" Sarah said, smiling at me, \"I will, of course, help guide you, but I can't make the final decisions.\"\n\nI closed the binder for the last time that day and was relieved that I had to leave it in the secure office.\n\n\"Do you want to eat dinner with me? This is a request, not an order. I'd love to, but if you want alone time, then I'm fine on my own as well.\" \n\nThe question surprised Sarah as well as me. I hadn't planned on offering. Honestly, with Isa gone, I just didn't want to be alone that night. And I will admit that the more time I spent with Sarah, the more I wanted to know what she looked like out of that skirt and blouse.\n\n\"Yes. I would love that, sir. Sorry, I meant Reuben.\"\n\n\"Great, meet me in the foyer in about an hour.\"\n\n\"Oh, we're going out? Should I dress up?\"\n\nI laughed.\n\n\"No, you should dress down.\"\n\n----------------------------------------------\n\nSarah\n\n----------------------------------------------\n\nAs promised, Sarah was downstairs and ready. She hadn't dressed down, not really, but I hadn't expected her to. She wore a sleeveless white shirt, a pair of simple capris that hugged her ass just right, and some very high heels. It was a big step up from my worn jeans and black Danzig t-shirt.\n\n\"You look great,\" I said sincerely, \"I love your choker.\"\n\nIt was white, which matched her typical color scheme, but it also had what looked like a single black pearl in the front. When I mentioned it, Sarah touched it reflexively and blushed.\n\n\"Th-thank you. The choker was a gift from your sister.\"\n\nI smiled wryly. I had assumed as much. Isa always did like to mark her property. \n\nPer my merciful sister's instructions, I had been granted access to use the cars in the garage, many of which were ridiculous toys collected by my father. They were beautiful and fast, but nothing like practical, and they drew too much attention. I ignored them and chose a black Nissan. The keys were all kept on a neatly arranged board by the door, and no one had ever dared to even attempt to steal them. \n\nSarah sat quietly, hands in her lap as I waved at the security checkpoint at the main gate. I didn't bother looking back, but I knew that we would have at least one car following us. Nothing I could do about it, and I wasn't looking to piss off Isa, so I drove cautiously and relatively slowly.\n\nI took us in the opposite direction from town, down a long winding road which followed the small river that emptied into our private lake, then took a right turn onto another, slightly straighter street. Eventually, the silence got to be too much for Sarah, as I knew it would. Training could only take you so far.\n\n\"Um, where are you taking me?\"\n\nI heard it then, a slight fear in her voice. She was eager, yes, but this was unusual, and maybe she'd heard horror stories of what had happened to staff in the past. I wanted to surprise her a little, but not like that.\n\n\"We're going to a diner out in Capucin. We're coming up on the outskirts now.\"\n\nDespite living close to it, Sarah may never have even so much as driven through Capucin. It was a tiny main-street town with a little historic downtown and not much else. It was in the opposite direction from the main town, the interstate, and the closest big city. There was no reason to come here unless you lived here, or you knew about Earl's Place.\n\nWhen I pulled into the parking lot, Sarah's eyes lit up with delight. So much different than my sister, she was open in all things. I was happy that they'd found each other and again wondered why Isa had encouraged her lover to go out with me. \n\n\"This place is out of the 1950s!\"\n\nI got out and opened her door for her. I was going to give her the full traditional date experience. When we entered, we seated ourselves. It really was a typical diner, but it was packed already, and that was because of the quality of the food. It had been on at least one tv show, and I'd missed living near it.\n\nWe sat in a booth with red vinyl that had been repaired many times, and there was a tiny jukebox with a coin slot on the side closest to the window. Sarah saw it and giggled.\n\n\"How did I never know about this place?\"\n\n\"I doubt Isa would remember it to tell you. We used to come here sometimes, and I'd come here by myself, often just to get out. It's got good burgers, but uh, I never asked if you were vegetarian.\"\n\n\"I'm not. I love meat! All kinds.\"\n\nShe winked then, and it was so ridiculously lewd that it made me laugh. Earl himself then ambled up to our table. He was a big man, kind and respectful, but not to be trifled with in his own establishment.\n\n\"De Heer,\" he said, by way of acknowledgment. He'd never call me mister or sir, but I was honestly just flattered that he had remembered me. \"Ma'am. Do you know what you want?\"\n\n\"Um,\" Sarah said, \"no, but you could order for me?\"\n\nSarah looked at me hopefully, and I began to understand more of her relationship with Isa. \n\n\"Sure. We'll both have the bacon cheeseburger with fries with large chocolate shakes.\"\n\n\"Coming right up,\" Earl said, walking off like a friendlier version of Bigfoot.\n\nI looked over at Sarah, inquisitively.\n\n\"How do evenings go with Isa? I mean, I'm not looking for the details. I'm just curious.\"\n\n\"Oh, we usually stay in and eat together. It's actually pretty informal. If we're traveling together, we stay in, um, adjoining rooms. I sleep near her but not with her. And we'll go out to nice places together. Sometimes, um...she takes me to places where she can show me off a little.\"\n\nSarah touched the pearl again unconsciously as she told me how things were.\n\n\"Like private clubs? BDSM places?\"\n\nSarah nodded and blushed, looking down.\n\n\"We don't have to talk about that. I was mostly curious as to how things are between you. I may want, um, more from you, but I don't want to ruin anything.\"\n\n\"We're very close, Reuben. I love her, I think. She's never said anything like that to me, but she cares for me a lot and makes sure that I know it. No one, man or woman, has ever been both so...so vigorous in giving me what I needed but then also so concerned with my well-being. Before I met your sister, I was successful professionally but a mess romantically. I kept getting involved with men who, um...well, the sex was often good, but that was because they were just jerks. There was no love or even consideration there. I had just gotten out of a relationship with an abusive asshole, and then I saw the posting here. I think that the hints of danger were what sold it to me. I had virtually no self-esteem left, and I was looking for an easy way out of everything.\"\n\nThat was a lot of information, but it didn't surprise me. \n\n\"And Isa and you hit it off?\"\n\n\"Not at first. At first, things were strictly professional. Your mother was still alive, and she was distant with me but kind. Isa wasn't all that kind. She was harsh when I failed, but her demands weren't impossible. I got better and better at anticipating her needs. Each time she yelled at me, I got turned on. When she praised me for finally succeeding, I got even more turned on. I was kind of a wet mess.\"\n\nSarah laughed.\n\n\"What happened?\"\n\n\"Isa got drunk. No, really. She rarely drinks, but that night, she and I were working late in her hotel room. I think not being in your family home helped. She downed most of a bottle of wine by herself. I was afraid that she was having too much, but then she just leaned over, grabbed a fistful of my hair, and kissed me. I'd never been so helpless with anyone. It wasn't that I wanted to stop her or say 'no.' It was that I couldn't. I was aroused and just hers. I knew then.\"\n\nI probably should have stopped asking questions, but this was getting good.\n\n\"Knew what?\"\n\n\"That I loved her. She tore my clothes off. Really tore them. And forced me to, um, pleasure her. The thing was, it was perfect. It was exactly what and how I needed it, and I wondered if she'd been checking my internet activity. You know, what kind of sites I visited and the stories I read. What was different from all the other people was that I felt safe, too. Isa had never really been cruel to me, and she'd mentored me when others would have fired me. I knew that if I had asked her to stop, she would have, right away. I didn't, though. I did whatever she wanted. When she was done with me, she got me off too, and she was just as merciless. That time I did have to beg her to stop, it was just too much.\"\n\n\"Wow.\"\n\n\"Yeah, that was um, probably too much information. I'm sorry. I'm a talker, and I like to share, but you're the first person I've really been able to talk about Isa with. She told me that you're safe and that I can tell you anything, so it's not like I'm breaking confidence. She's amazing, you know. I just wish I could take her to meet with my parents.\"\n\n\"Why can't you?\"\n\nSarah's face turned briefly sour.\n\n\"They're religious and stuck in the nineteenth century. I haven't bothered asking Isa because of it, although I think, probably, she would go. The irony is my family is incredibly proud of me. Working for the famous De Heer family. If they only knew that I went down on the boss.\"\n\nI laughed, and she did too. From that point on, we kept things pretty light, joking, flirting. She asked me about what teaching was like, and I asked her about living in the house. She told me that she worked out early in the morning most days and when she found out that I did sometimes as well, she invited me to go with her. I got the impression that the worst part of the job for Sarah was the isolation. She loved crowds and having lots of friends, and, at least ask things stood now, that was impossible. I wondered if Isa knew how she felt. ",
        "Eventually, it grew late. We'd passed hours after being done eating, so we went home. I was exhausted, far more than I was accustomed to for so early an hour. As we drove back, I felt Sarah's hand on my leg, moving up and down in a rhythm that was making my cock respond eagerly.\n\n\"Hey,\" I mockingly objected, \"I'm not easy.\"\n\n\"That's not what I heard. I heard you slept with a lot of women.\"\n\n\"From who?\"\n\n\"Isa. She said you were pretty shy when you lived here, but since you left, you've had a ton of lovers.\"\n\nI did some quick mental math.\n\n\"I don't normally tell women this on a first date, but I think I've had sex with a grand total of five women. The number jumps to seven if you count hand and mouth stuff. Only two were serious.\"\n\nSarah wrinkled her brow in a way that I was finding more and more adorable.\n\n\"That's not a lot, no. I've been with more people than you have, I guess. Maybe I'm the...\"\n\n\"No,\" I said fast, stopping her, \"I understand. It took me a long time to accept that the De Heer family wasn't normal, but when I did, I loosened up a bit and just let myself be myself. I never expected to get laid ever again or find new friends. Ironically, when I was relaxed, I found it easy to meet new people and talk to women. Isa never left. For her, the idea of having multiple partners as a woman has been taboo to her since she realized what sex was, and when men do, she's going to associate the behavior with dad. Maybe it's not a ton of lovers, but I know why she'd disapprove of it.\"\n\nOr at least I thought I did.\n\n\"Still,\" Sarah said, \"I sometimes wonder with the way she talks. She's actually pretty experienced but...does she really think I'm someone to keep around?\"\n\n\"I think you'd know if she felt that way. Like I said, it's less that I'm promiscuous and more that it makes her see me like our father.\"\n\nWe drove in silence for a little while, Sarah's breathing intensified, her hand gradually moving upward. \n\n\"Sarah?\"\n\n\"Yes?\" Sarah's voice was husky and full of need. There was no doubt as to what she was thinking.\n\n\"I'm trying really hard to focus on getting home, but if you keep doing this, I'm going to have to pull over and bend you over the car hood.\"\n\nSarah laughed.\n\n\"You make it sound so appealing. But fine, I can wait. I just don't want you to lose interest.\"\n\n\"There's no danger of that. You're an extraordinary woman.\"\n\nSarah laughed, a little more scornfully than I expected.\n\n\"If you say so.\"\n\n\"I do.\"\n\nI drove through the checkpoint, followed immediately after by the black SUV that I hadn't seen but had known was out there somewhere. I parked and looked at Sarah. After hesitating for a moment, she spoke.\n\n\"So, I know its a bit forward of me, but do you want to come inside?\"\n\n\"Are you inviting me into my own house?\"\n\n\"No, I'm inviting you into me. I just happen to live in your house.\"\n\nSarah smirked at me, and I kissed her. She wasn't expecting it, and she leaned into me, her tongue dancing with mine. She pulled away but was breathing heavily. As she did, I caught her perfume, light, and fruity. Beneath it was the scent of her body, musky and exciting. \n\n\"You can't say things like that to me without consequences,\" I said, softly.\n\n\"I'm looking forward to them,\" Sarah said as she got out of the car. Her walk was slow and sultry, intended for my viewing pleasure. She turned and looked at me as she entered the side door by the garage. I got out and followed quickly. As I came inside, I saw her petite form just turning the corner of the small side staircase leading upstairs. I got upstairs just in time to watch her turn into what must have been her room.\n\nI followed, feeling that old intensity come over me. I understood what she wanted from me, and I had it in spades: cruelty, ferocity, and maybe a little danger. I followed Sarah through the door. It was a beautiful room and felt like her. She had decorated it well in a spectrum of light blue colors with beautiful landscape pictures on all of the walls. A small desk sat in the corner, adjacent to her bed.\n\nSarah turned to face me, her mouth in a teasing little smile. It went away when I kicked the door behind me closed. I didn't ask for anything. I put my hands on her shoulders and pushed downward. She didn't resist. Her eyes got wide, and she fell to her knees, mouth parted slightly. I looked down at her, grinning coldly.\n\n\"You know what to do. Don't make me remind you.\"\n\nSarah nodded. Hesitantly, she undid my belt, and my fly then pulled my cock out. Her hand looked so small gripping it, and she looked up at me, her eyes full of need. I nodded, and she took it in her mouth. She gagged a little but took me all the way to the balls before releasing me and doing it again. I groaned. \n\n\"You're a good little cocksucker, but you know that, don't you?\"\n\nSarah nodded, half of my cock still in her mouth. I got angry. Angry with the way her eyes pleaded, angry with the way I had been treated. \n\nI kept it under control. Used it. I had a way of knowing what women wanted from me, and Sarah wanted to be used. She was a natural submissive, beautiful and kind and pleasing. I looked her in the eyes as I took her head in my hands. Then I began to fuck her.\n\nSarah didn't resist me. She braced her self on my thighs with her hands, but she otherwise gave herself to me. Her mouth was just a hole to be used. I sped up and fucked her harder, feeling my cock head it the back of her throat as she gagged on it. Soon I'd had my fill of her mouth. I wanted the rest of her. I pulled out of her mouth, and she almost fell forward, gasping.\n\nI looked down at her, my insistence abated for a moment.\n\n\"Are you all right, Sarah?\"\n\nShe nodded and smiled at me, her mascara running. She bit her lip. This had excited her, as I thought it would. I smiled honestly and warmly at her, then I lifted her by her shoulders and practically threw her onto the bed. She gasped, but I didn't wait. I pulled her blouse apart, tearing buttons off. I heard them clatter onto the hardwood floor. She had small, perky breasts, as I had guessed, and wore no bra. I mauled them in my hands before I nipped and sucked at them.\n\nSarah moaned, and I unbuttoned her capris. After I had bit her once, marking her, I pulled her pants and underwear off in one smooth motion. Her blonde pussy was trimmed, swollen and wet and ready. I forced her legs open and thrust my cock inside of her mercilessly. She cried out, but I ignored her.\n\nI fucked her hard then. Bruisingly so. I may have been too rough. I didn't stop, though, and she didn't ask me to. I sped up, thrusting harder and harder until she had wrapped her arms around my neck, holding on for dear life. I felt her tense then, cumming, hard. Screaming my name. After a moment, she breathed out into my ear.\n\n\"Cum in me. It's okay. Please.\"\n\nI buried myself inside her and released. I hadn't cum that well or hard in a long time. I emptied myself in her, not caring if she was on the pill or not. I was a De Heer, and we used our property how we wanted.\n\nAfter a moment, all was calm. I was panting, and Sarah was crying. I kissed her head and lips. I helped to undress her.\n\n\"Are you...leaving?\" Sarah asked, almost mournfully.\n\n\"No,\" I said. \n\nI undressed and then got into the bed with her. I pulled her to my chest, and she eagerly complied. I stroked her back and told her what a good job she'd done for me, and what a good lover she'd been. She sighed, and I continued to tell her the things that I appreciated of her. How wonderful she'd been with helping me get prepared, how she was funny and smart, and kind.\n\nSome people call this aftercare, but I really just wanted her to know that I wasn't just fucking her. I may have had the De Heer temperament. Still, I hated the idea of using someone for sex without caring for them, especially someone like Sarah.\n\nSo I held her, and we dozed off together. She was, I reflected, a lovely gift from my sister. Even then, however, I wondered what the catch would be.\n\nI woke in the very late hours and watched Sarah's chest rise and fall. There was something peaceful about her face at rest. She was still for so long that I assumed that she was still asleep, but I must have woken her up when I did. She sat up on one elbow and spoke. I could hear something like concern in her voice.\n\n\"I think you're wrong about Isa. I mean, why she's upset that you've had sex with so many women.\"\n\n\"Really? Why?\"\n\n\"I...I think she's jealous, Reuben. I shouldn't even say anything, but...she got so upset when she read about you and Nina getting married. She hates her, and even she knows that its irrational. There's no reason for it. Nina hasn't ever done anything that would be suspicious to us. God, I'm going to get in so much trouble for telling you this.\"\n\n\"Then don't tell Isa that you did. Why do you think it's jealousy?\"\n\nI was afraid I knew the answer.\n\n\"Because, I, uh, shit. Look, please don't be mad at your sister. We talk about everything. I know about you and her. I mean, I know about what happened between the two of you.\"\n\n\"Fuck,\" I said. I couldn't believe that she'd told Sarah.\n\n\"Please don't be mad at her. She made me understand why and how it happened. You're both very intense, smart, attractive people. And you had no one else you could rely on. Your father was...well you know. Your mother wasn't bad, but she wasn't protection. You protected each other. And...well...things happened...\n\n\"That's one way to put it,\" I said, maybe more bitterly than I intended. I sat up, suddenly wanting to be far away from here. Sarah's hands caught my arm.\n\n\"Please don't go. Please. I'm sorry I even mentioned it. I just...I think that she still feels some of those feelings, and maybe they confuse her a little. That's all.\"\n\nI let myself be pulled back down on my back. Sarah settled in on my chest, and I put my arm around her. For all of what we did and had discussed, she had an air of innocence to her that made me want to protect her. \n\n\"She might be confused, and I do think she cares about me, but she doesn't love me like that.\"\n\n\"How can you be certain?\"\n\n\"Sarah, when I left, she could have come with me. She could have tried to stop me. She could have contacted me, or responded when I tried to contact her. It's been years, and she never did anything but keep tabs on me, so she knew that I wasn't a danger to the family interests. If she loved me the way I...the way I had loved her, then she would have found a way to let me know.\"\n\n\"You're probably right, Reuben. I don't know much about the time before I showed up, but I knew that there were awful times. Please don't be too harsh with her.\"\n\n\"Isa can take care of herself. If she wanted me to trust her, then she would have chosen a different way to bring me back into the fold.\"\n\n\"Maybe, but I think that she wants you to be happy. Just give her time. Please.\"\n\nI sighed. I knew that there was no way Sarah would take my side in this particular issue, and I really didn't want to fuck up the rest of the night for either of us.\n\n\"Time is something I appear to have, so I'll try and keep an open mind. I mean, she shared you with me, that has to count for something, right?\"\n\nSarah made a noise of approval. It was a weird situation, but I was, for the moment, happy.\n\n\"Reuben?\"\n\n\"Yes?\"\n\n\"Can you sleep here tonight? All night I mean? I don't get to sleep with Isa very often...\"\n\n\"Of course. Sleep well.\"\n\nWe both did.\n\n----------------------------------------------\n\nRoutine\n\n----------------------------------------------\n\nThere was something about having sex with a beautiful young woman who was eager for more made my involuntary life-changes a bit more appealing. I decided to make the best of it for the time being, despite knowing that it had been at least partly overt manipulation on the part of Isa.\n\nI sent an email to the Dean of my university, thanking him profusely for his tolerance of my unusual situation, and asking what he felt would be best for the organization. If he asked me to step down so another could replace me, I would. I could just as well do academic work independently as I could there. Then I sent a note to Nina, explaining in the vaguest terms possible about family business emergencies and reconnecting with my sister. I informed her that I'd be spending more time here and less there, and asked her to tell our mutual friends that I was fine and I would, in fact, return in a few months or so.\n\nI settled into something like a routine. Every day I'd educate myself on some new part of the De Heer business. I'd acquaint myself with the details, call a few key people at each corporation or organization, and introduce myself. All were very helpful and answered my questions to the best of their ability. Quite a few were nervous. I guess they'd all heard the rumors of how my father had dealt with disobedience and failure. I could attest personally that some were true.\n\nOn my back, in a neat crisscrossing of lines, were the scars that proved it. He didn't do it all at once, or even very close together. In my youth, like a lot of people, I'd made mistakes and engaged in some misbehavior. There was had always been a price for disrespect and disobedience, and a De Heer always revenged himself or made good on his penitence. I clearly remembered the first day that Father had literally etched that lesson into my skin.\n\n* * *\n\n\"Come on. This is bullshit. You're not going to do it.\"\n\nIsa's voice was sharp and taunting. She enjoyed needling me sometimes. At the time, I hated it, but now I think I was just one of the few people that she had any actual influence over. \n\n\"I can. I mean, I think I can, anyway. And if I can, then I can help you up, too.\"\n\nIsa rolled her eyes at my childish display of optimism. Granted, we were both children still. We'd turned fifteen a scarce week before. It had been a rough year. Our tutors had been changed, and our new ones were generally harsh and unaccepting of failure. Father never pulled strings to get us in anywhere. He made sure that we had the best education, but he also made sure that we worked hard to learn. Isa was already quite pretty, although she was still relatively thin and waif-like, years away from growing into the sophisticated beauty that she would become. I have such vivid memories of her that day. She wore a black sundress and had her hair up in a bun. Her makeup was, even then, flawless. I was in jeans and a simple t-shirt. There were no graphics of any kind on it, of course. That would be too vulgar for a De Heer.\n\n\"Come on. Even if they don't notice us leaving, Rachel will see us coming back over. She lives right there!\"\n\nWe were both considering a particularly old section of wall at the edge of the De Heer Mansion. It was well concealed behind one of the smaller houses for servants. Rachel had just moved in a few months before and had started as one of our new regular drivers. She also taught Isa and me basic self-defense and firearms skills. Let me tell you, as a boy full of hormones, having an eighteen-year-old redhead tomboy basically press herself against you to adjust your and aim was the height of my day.\n\nThe wall itself was crumbling, a large chunk having fallen off the top. There were handholds and ivy everywhere. We'd discovered the flaw by chance. Everywhere else, there was barbed wire at the top of the structure. Granted, this was just the interior wall, and there was a sizeable uninhabited area on the other side. Still, it seemed like an opportunity to me. \n\n\"She won't see anything, Isa. And who says we have to come back?\"\n\nIsa's eyes grew large at the idea of honestly running away. Then they hardened. I didn't particularly understand what that meant, but I did now. For the moment, I was just a foolish boy who wanted to impress the girl he liked: in this case, my twin sister. Isa had deeper thoughts, and looking back, I think that she believed me to be mocking her. She'd always been very sensitive to that sort of thing, at least from me. \n\n\"Hmm. I'll tell you what. You go over, and if you can get to the main road and back without being discovered, then I'll go with you the next time. We can go to that stupid diner you keep talking about and everything.\"\n\n\"You mean it?\" Even to my own ears, I sounded naively hopeful and excited. Isa smiled like a cat who'd just caught a mouse by its tail.\n\n\"I never lie to you,\" she said, \"do I?\"\n\n\"No, but you can be pretty creative with the truth, or in withholding it,\" I answered. I wasn't quite as dumb as I sounded.\n\n\"Well, in this case, I mean exactly that. If you make it back without being caught, I'll go with you. Otherwise, I'm not really interested in taking the risk.\"\n\nI nodded, and without another thought, I jumped up. I'd climbed trees on our estate before, and this wasn't much different. It was easier to be honest. I found handholds and pulled myself up. I was in decent shape. Isa was encouraged to exercise a little, but I was pushed hard. Father wanted me to be in prime shape. I kept up that habit even after I'd left the family home and was a mild-mannered academic.\n\n\"Ow!\" \n\n\"Are you all right?\" Isa asked, almost letting human concern break through her controlled veneer.\n\n\"Yeah. There's still some wire up here, and I guess there's broken glass embedded in concrete up here as well. I cut myself, but its pretty minor.\"\n\n\"Well, be careful. You don't want to mess up your clothes and get mom asking questions.\"\n\nI rolled my eyes.\n\n\"I'll be back soon, you'll see,\" I said, and then dropped over the other side with what I hoped was daring aplomb. \n\nI looked back briefly. The climb back up would be harder, but there was a tree close by that I could use to get to the top if I couldn't find handholds on the outside of the wall proper. I wasn't worried about that. I had a task to perform, after all.\n\nGetting out to the road was smooth. I ducked behind some bushes when I saw some guards strolling down the main driveway up to our estate, but other than that, it was a quick walk, maybe fifteen minutes. I wasn't unaware of the various electronic sensors and cameras. While my efforts were probably somewhat amateurish, I think I managed to avoid most of them. It didn't matter. Isa had no intention of letting me be caught by machines. That wouldn't be any fun at all.\n\nI'd made it to the street and took a deep breath of the spring air. It felt free out there. It was just a country road, like a million more in America. Here I was just a kid, not someone with wealth I didn't deserve and expectations that I didn't want. I couldn't get Isa to understand this feeling, no matter how hard I tried. She was, I suppose, looking forward to being in control.\n\nI was so enjoying the blue sky and bird song that I never noticed the car creeping up until it was too late. I heard the doors opening and turned around. My first thought was I was about to be kidnapped, but then I saw Rachel behind the driver's wheel and relaxed. I shouldn't have.\n\nTwo men, people that I'd known most of my life, who were friendly with me, got out. They wore black suits and stern looks. I'd been caught, but I still didn't understand what was going on. Not until one grabbed me and slammed me on the hood of the car hard enough to knock the air out of my lungs did I fully realize what was happening. \n\nThe men probably honestly liked me and were decent people, but I wasn't their employer. My father was, and clearly, he wanted to make an example of me. I knew then that Isa had told him, the fucking brat. Rachel wouldn't meet my eyes as the larger of the two men cuffed my hands behind my back. They used double-locking ones, just like the actual cops. With practiced efficiency, they hauled me into the back seat, seating on either side so that I couldn't make trouble. ",
        "\"Take us back,\" one said. Rachel obeyed, driving us smoothly back. I kept my face firm and blank. It's not that I wasn't afraid or worried what was going to happen, I just knew that it would be worse if Father saw me allowing myself to appear weak. I felt weak, in any case. \n\nTo my surprise, once we got back, I wasn't led inside, but around to the back. One of the picnic tables had been set up. Father stood there. In the warmth of the sun, he'd taken off his suit jacket and rolled up his sleeves, exposing well-muscled forearms. He was smiling, his chiseled features and steel-gray hair making him look more like a hardened soldier than a man born into wealth. Then again, he did like to do his own dirty work.\n\nMother was there, pristinely dressed as always. She looked at me with such intensity, then stalked off back towards the house. I knew that she was mad at me for my foolishness, but I didn't understand that she couldn't watch what was going to happen. That's when I should have genuinely been worried. \n\nIsa was there, too. She had her hands folded over her chest and a little smirk on her face. I hated her then, more than I ever had before. I couldn't understand her betrayal. Granted, she'd informed on me previously, but that was when we were younger. What had motivated her to do such a thing? \n\n\"You're a little old for excursions of this nature, Reuben,\" Father said, gesturing to the picnic table. One of the thugs slammed me face down on it, harder than he had on the old of the car. My head rebounded off of the hardwood, and I tasted blood. I was bent over now and felt humiliated and terrified. One of the guards held my head while the other stood behind me. \n\n\"Stay still,\" the guard behind me said. I heard the metallic snap of a flick blade opening, then there was a tearing noise as my shirt was cut away. I felt the warm spring air on my back. The blade was put away, and now both of the guards held me down by my arms. I turned my head in a vain attempt to see what was going on. I couldn't, but I could see that I still had an audience of two. Rachel and Isa. The former's eyes were hard, but she was pale. I knew then that she honestly cared about what happened to me. Rachel stood behind Isa, her hands on my sister's shoulders. Isa's face was a surprise to me. Her eyes were huge, and if Rachel was pale, then she was ghostly. No longer was she standing with a confident pose, but both of her hands were closed into tight fists at her side. She had anticipated a different result, maybe a dressing down of some kind. Had someone put her up to this? I saw her open her mouth to say something but shook my head as subtly as possible. Her intervention on my behalf would just make this worse for both of us. I didn't know how, but Father had always been inventive.\n\n\"Perhaps I've been too lenient. I've never used the lash on you, Reuben. I find that while it doesn't ensure compliance, it does embed the lesson in both the flesh and the memory.\"\n\nI couldn't see it at the time, but I learned later that the \"lash\" was a horsewhip, well over a century old. There hadn't been horses kept here for decades, but the patriarchs of the family had always found a use for it. \n\nThe first blow felt like a dull sting, then like sandpaper as he drew the old, rough material over my flesh. The second made me tear up. The third made me cry out. I expected my father to be angry at me for that, but I suppose he expected it. I lost count. I felt my knees go weak, and a warm wetness slowly spread over my back and the sides of my torso. I was shouting with each stroke now. I had no conscious control over my body. The guards were no longer pinning me but instead holding me in place so I wouldn't slide off the table unto the floor.\n\nI know that I didn't lose consciousness for a while after that, but my last perfectly clear memory was that of Isa shaking her head and silently sobbing, before collapsing suddenly. Rachel caught her and lowered her gently to the grass. \n\nI woke to Isa cleaning and dressing my wounds, while simultaneously crying. She nursed me back to health, changed my bandages, and apologized about a thousand times. I had already forgiven her, having seen how much she suffered by watching me in pain. The first few days were the worst for both of us, as the wounds were hideous and required a lot of attention to prevent infection. Although we had an on-site medical specialist, she'd taken on this role as penance, and her gentle and competent care was appreciated. All the doctor did was ensure that the wounds were healing correctly. I knew that he was under instruction from my father to deny me pain medicine, had I asked. I didn't bother.\n\nEventually, he gave me a shot to help me sleep, which on reflection was quite brave of him.\n\nAs Isa was changing my bandages on the second day, I decided to simply ask her the obvious question.\n\n\"Why did you do it?\"\n\nI didn't have to explain what I meant. Isa's hands froze in mid-movement. \n\n\"Reuben, I...I never thought that this would happen. I thought you were childish, and it annoyed me. It reminded me of something father had said a few days ago...so I went and told him.\"\n\n\"What did he say?\"\n\nIsa sighed.\n\n\"We were just reading together, you know? In the library. He started asking me how I'd make decisions for the company. He showed me some of the things that he was dealing with. I felt close to him. He told me that he wished that you showed the same interest that I had. He said that you needed to grow up. Almost as an aside, he told me to come to him if you did anything silly or childish so that he could have a chat with you. I honestly thought that was all there would be to it.\"\n\n\"You really thought that he'd just have a heart-to-heart in his office and send me to bed without dinner? Maybe ground me for a week?\"\n\nI was upset, but even then, the anger had started to fade, ever so slightly. She should have known better. Isa was always the one being praised for her practical thinking. Maybe she did know better. Maybe all this was an act, and she had truly wanted to see me be punished.\n\nI doubted it. I didn't think of Isa as sadistic. It didn't matter. Our father taught us two lessons that day, although we only truly understood the first: to trust no-one, not even family. The second was far beyond us that day. We were still children, even as Isa cared for my injuries and held my hand, and we spoke of things that didn't matter. In the end, we were somehow both more distant and closer than ever before.\n\n* * *\n\nIsa's attempt at being mischievous had created something that she wasn't prepared for and didn't want. She had paid for it, probably more so than I had. When the punishment was complete, it took me weeks to fully heal, but I was accepted as a full member of the household again as if nothing had happened. \n\nAfter this incident, I knew that our behavior was going to be under scrutiny. Any moderation that our mother might have had on our father's behavior would be ineffective now. We would face much more severe consequences for any misdeeds.\n\nIronically, that was when Father started letting us out of the house with Rachel or a minimal guard presence. We paid with pain for our freedom, I suppose.\n\nI was only truly beaten three more times before I left home, although my father struck me more casually when I annoyed him. Two of the punishments were for silly rebellious fights as any teen has with their parents, and once after I had turned eighteen. Mother found a set of black lacy panties in my room. When I wouldn't answer her pointed questions about who I was sleeping with, and in fact told her that it was none of her business, she grew angrier than I had ever seen. Father wouldn't have cared, probably, but he didn't like me disrespecting mother, and besides, I wouldn't tell him either.\n\nI took the beating gladly. That time, no one held me down or kept me up. That time, Isa didn't have to witness it, but she waited inside to care for me when it was done. She nursed me as she had before, and as before, we grew closer.\n\n\"I'll be more careful next time,\" was all she said. It was all that needed to be said.\n\nLooking back, I wonder what Mother and Father truly knew.\n\n* * *\n\nI was shaken from these morose memories but a knock at my office door. \n\n\"Reuben,\" Sarah said, peeking in, \"Isa would like to speak to you. Alone.\"\n\nI barely had time to nod before Sarah left, heading in the opposite direction of my sister's office. She had been efficient and professional, but I had seen the stiffness in her step and the odd coldness of her voice. She was excluded from this meeting, and she didn't like it. Interesting. \n\nI strolled down to Isa's workspace. I didn't hurry. It wouldn't do to look as though I was at my sister's beck and call. I was, of course, but appearances had to be maintained for my own pride if for no other reason. How easy it was to slip back into old habits. \n\nI sighed as I knocked and then opened the door and entered without waiting for a response. Isa was sitting on the edge of her desk, looking out over the lawns. There was a fog that seemed to cling to everything that day, and it made the grounds look dreamlike. She looked at me and smiled. She, too, had tension in her posture. To my surprise, rather than sit behind her desk, she came and sat on the couch and patted the space near her. I sat there after a moment. \n\nThis was really the closest that we had gotten in the entire time I'd been back. As Isa leaned forward, I caught a faint whiff of wine. That set off internal alarms. She drank very little, as a general rule, both before I left and after I had returned. You made mistakes when you were drunk. You did things that you regretted later. Things like me.\n\n\"I...I have a favor to ask of you,\" Isa said.\n\n\"Ask? I was under the impression that I was your minion.\"\n\n\"Please, Reuben. I'm sorry. You've done all that I've asked and more. This is...different.\"\n\nHer voice was soft and almost pleading, and she couldn't quite meet my eyes.\n\n\"All right,\" I said. I cursed myself because whatever I might say now, I had an urge to help her.\n\n\"Do you remember the Brigantine?\"\n\n\"How could I forget that place?\" \n\n\"Well, I...I haven't been there myself.\"\n\n\"I went with Father three times. Once on my own.\"\n\n\"What's it like?\"\n\n\"Beautiful. Stately. Gorgeous people everywhere. Lots of masks. Debauchery of all kinds. The staff all seem happy and are quite...willing, but...\"\n\n\"But what?\"\n\n\"I wouldn't be surprised if that place disposed of multiple bodies a night. There's something sinister about it. I guess I shouldn't be surprised since our ancestors helped found it.\"\n\n\"Well...then you probably know better than I do that many of our contacts and relations are with members.\"\n\n\"Yes,\" I said, \"what do you need me to do? Go to a meeting?\"\n\n\"Um,\" Isa said, and then looked away. Was she ashamed? \"It's more complicated than that. We're members, both of us, by blood. Once father passed, there wasn't any pressure to attend, only occasional requests for money and voting on various decisions. We're still on the board, you know, with the other three families.\"\n\n\"All right,\" I said, \"so what's the problem?\"\n\n\"Part of being a member is being...complicit...with the other members. You can't blow the whistle on someone that knows about your darker escapades, can you? And I'm told there's a certain bond, especially between men, if they...if they share a woman.\"\n\nI frowned involuntarily. Although I shouldn't be surprised, I did not like that Isa was aware of what I had had been pushed into many years prior. That was something I had done very reluctantly. It didn't matter that the woman was stunning. I hadn't chosen her, and I couldn't be sure that she was there of her own free will. Not really. \n\n\"Yes,\" I said, simply, \"there can be.\"\n\n\"Well,\" Isa said, \"since mother died, the other board members have been getting nervous at our continued absence. Some of them have seen how we've been moving investments around from shadier businesses to legitimate ones. They fear that we're going to divest ourselves from them. More than that, they fear exposure. As one of the four founding families, we have more power and information on what goes on there than anyone else. We could, in theory, ruin a lot of people.\"\n\n\"All right,\" I said, \"so you need me to go and be seen and shake hands and act all chummy? I can do that.\"\n\n\"Yes, but also...more than that. I need you to...participate.\"\n\nI looked at her, shocked for a moment.\n\n\"So you're pimping me out?\"\n\n\"No,\" Isa said, looking me in the eyes, \"I'm not I just...I can't. I can't do it. You can.\"\n\n\"Isa, I'm willing to go. I don't really want to, to be honest, but I'll do it. Why can't you though? You're an adult, you're available, well, mostly. I think Sarah would understand, given that you share her with me.\"\n\n\"It's different for women. I made inquiries,\" Isa said, coldly, \"and the expectations would be...more severe.\"\n\n\"More severe?\"\n\n\"I'd have to...service...more than one man. Probably members of the other families. Maybe fuck more than one too. Things can get rough.\"\n\n\"God. That shouldn't shock me, but...I guess it still does. How did you find out?\"\n\nIsa laughed bitterly.\n\n\"Oh, they don't hide it. I simply asked. Then they told me quite plainly what would be done to me, at a minimum. They assured me that no permanent harm would come to me, but I would be expected, if I was indeed the head of the family, to 'demonstrate obeisance' to at least three men. I objected, and then they politely informed me that our mother had no such problems.\"\n\n\"Mom went there? Father allowed that?\"\n\n\"Yes, and I think it was before they were together. You know that her side of the family's always been a bit of a mystery. Well, apparently, before they were married, our mother was sent there as...as a learning experience. I found her diaries after she had passed and she wrote all about it. It made me ill, but I read all of it. I had to.\"\n\n\"Jesus,\" I said, sitting back in the plush leather and trying not to think about our mother, who had generally been good to us as children, being roughly used by older men, \"well, all right. I'm going then, it's decided. I would never let someone put you through that.\"\n\n\"Thank you, Reuben. You don't know what it means. Truly. I...I can't bear to be touched by men. It makes me panic and...and...this would be torture. I'd break, and make us all look weak. I'd be weeping and useless and...\"\n\n\"Hey,\" I said, more softly. I wanted to embrace her then, to tell her that it would be all right, but I was very aware of her boundaries. \"I know things happened while I was gone. I'm not stupid. If you ever want to talk about it, I'll listen. In the meantime, if I can help by going, I will. That should reassure the rest of the board that we're still just as bad as they are.\"\n\n\"Thank you,\" Isa said again, tears in her eyes. Then she touched me on the leg, an offhand movement of unthinking familiarity, but jerked back as if she'd been shocked. Perhaps I would have taken it personally if I didn't see the look in her eyes, full and afraid like a deer about to be claimed by a wolf. \n\nEven then, I didn't have a real understanding of what had happened in my absence. Sometimes I wish that I was still so ignorant.\n\n\"Well,\" Isa said, wiping her eyes quickly and standing, suddenly all business again, \"If you like, I can find someone...appropriate for you. A partner who would be receptive and safe for you.\"\n\nI laughed, and she looked over at me.\n\n\"You seem to be choosing all the women in my bed lately. Well, I'll trust you here. Sarah has been...extraordinary. I imagine anyone you pick from the Brigantine will be someone I enjoy, and who would be there willingly.\"\n\nFor a moment, I thought I'd gone too far by mentioning Sarah so casually like that, but Isa smiled. Sarah was someone she cared about. Someone we both cared about, to be honest. Not a toy, or a prize to be fought over, but a valued friend, confidant, and lover. And, as twins, I suppose we were somewhat accustomed to sharing everything. \n\nAs the conversation turned to lesser things like travel arrangements and appropriate clothing, I couldn't help but wonder what kind of person Isa would pick for me. Would she be young? Mature? Demure? Forward? \n\nTime would tell. I ignored the part of me that was excited that my sister was choosing my partner. Much like having sex with Sarah, it felt like this was a way of making love to Isa by proxy. And that was, despite my internal denials, something that I wanted very much. \n\nI wished that Isa wanted that too.\n\n----------------------------------------------\n\nThe Brigantine\n\n----------------------------------------------\n\nThe day of the event was a bit odd. Isa was quite nervous and kept checking in on me and asking me if I was sure that I wanted to go through with it. It seemed like she felt as if she were imposing or asking a great favor of me, but it did not feel that way to me. The idea of anonymously fucking a willing and beautiful woman did have a certain appeal. Someone that I could use and then leave, never have to see or worry about again. Someone that might expect to be a little bruised at the end of a good fucking. In any case, I got dressed in my recently tailored tuxedo, passed a brief inspection by Sarah, who gave me a special card for my rendezvous and headed out to the front, where Rachel was waiting for me with a limo.\n\n\"Very nice,\" Rachel said, opening the door for me, a wry smile on her face.\n\n\"Thank you,\" I said, adding, \"I've always liked a woman in uniform, myself.\"\n\nRachel chuckled, but she basically wore men's suits that were tailored for her form, and her form was beautiful. Tonight she was in all black and white, the epitome of the professional, short auburn hair arranged to perfection, held with a simple band. \n\nAnd, as I may have observed before, her ass was still fantastic. The drive would be two hours, but air travel there wouldn't be optimal for reasons of both security and profile. I had to be seen, but I didn't need to be noticed by everyone, just a few people. I allowed myself to be lulled by the sound of the road and the soft classical music playing from the front seat. I dozed, feeling safe.\n\n* * *\n\nWe were close to the Brigantine when Rachel spoke again\n\n\"Safety check.\"\n\n\"Really?\"\n\nI woke, alert, and a little annoyed at the old instruction.\n\n\"Yes, really. There have been a few changes.\"\n\nI turned to the minibar, beneath it was a small panel, I depressed it, and it opened with a swift click. Inside two matte black handguns with matching holsters that sat next to several magazines and what looked like smartwatches. I took one of the pistols out, careful to keep my finger off of the trigger. I verified that there was a round in the chamber, then checked the magazine. The ammunition was slightly larger than I expected. All was done swiftly and with care. I put the holster on under my jacket. Most people couldn't walk armed into the Brigantine, but things were different for the Founding Families.\n\n\"Safety check confirmed. You got rid of the Sig Sauers,\" I said.\n\n\"Yeah,\" Rachel answered, \"Glocks aren't perfect, per se, but they're very reliable and maybe better for amateurs. Isa also requested that I up them to .40 caliber. You should go out back and fire a few rounds when you have some spare time.\"\n\n\"All right,\" I said. \n\n\"Grab one of the smartwatches, too. It tells the time and has some other apps on it, but most of them are for show. You'll get fake mail on it in case anyone thinks you're stupid enough to utilize wifi for that sort of thing. The important thing is the button recessed into the bottom. Do you see it?\"\n\nWhile she spoke, I'd taken one out and put it on my wrist. The band was magnetic and adjustable and fit well. The button wasn't prominent, but I found it and realized that it had an indent in it for a thumb that would make it easy to find without looking.",
        "\"Yes. What does it do? Explode?\"\n\nRachel laughed.\n\n\"Better. It sounds an alarm, and then I explode. It also notifies our security network. They can't be here, for obvious reasons, but they have a helicopter on standby.\"\n\nAs I slid the panel back into place, Rachel had taken the final turn to the small, almost-residential road leading to the Brigantine. In the dark, the trees seemed to cluster around us, making us feel isolated. I knew that cameras, sensor networks, and armed men were around us even then. This was a place where the ultra-rich gathered to misbehave in shocking and nearly-always illegal ways. It was as secure as anywhere could be.\n\nAs Rachel parked, I stilled my breath and looked out at the magnificent mansion. It looked like someone had cut a chunk of Versaille out and dropped right in the middle of an American forest.\n\n\"I don't like this,\" Rachel said, after long consideration.\n\n\"It's your job not to like this. If it makes you feel better, I don't like parts of this either.\"\n\n\"Really? It's an excuse to fuck hot women. I thought you'd be excited.\"\n\n\"Rachel, I worry about the women and men employed here. There's too much money, power, and secrecy. I can't help but think that some are here voluntarily while others are bought and sold like livestock.\"\n\n\"I know that they are Reuben. I'm glad that you've given it some thought. She thinks you're like your dad sometimes, but you're really not. Not at all.\"\n\nI looked over at Rachel, and we shared a smile. We both knew that she'd paid me a compliment. \n\nI got out and slipped on the silver demi-mask that Isa had given me. It was Venetian, I was sure of it, and it was masculine with hints of wolfish features. Perfect for a place like this. I knew that it matched my simple black tux. I stood before Rachel.\n\n\"How do I look?\"\n\n\"Like a dangerous predator. Are you sure you don't just want to stay out here and fuck me?\"\n\nWe laughed, but I could tell by the way her hands sat on my chest that she was at least partially serious. I found it odd, to an extent. She was never one to be jealous, and she knew how important it was that I made a good impression. She reminded me one more time of the switch on my watch, and let me go.\n\nThe gravel crunched under my feet as I approached the door. The guards might have been dressed in carnival finery, but they still had matte black submachine-guns slung over their shoulders. This was a center of power, and they wanted everyone to know it. \n\nThe interior was shocking to me the first time I'd attended. All was dark, muted. The only lights were from gas lamps scattered appropriately around. The walls were covered in draperies of deep reds, purples, and blacks. The stairs were stained ebony black, and everywhere were couches, recesses, places where people were coupling. The masks we all wore didn't keep me from recognizing people. They were there for plausible deniability and nothing more. I nodded to a few people, mostly friends of my family and associates of my father. I needed them to see me there and see me as both confident and powerful. \n\nEvery man was in a tuxedo, and every woman accompanying them was in an elegant, if sometimes skimpy, gown. The only exceptions were the women and men who belonged to the club. They were dressed in lingerie or nothing at all. Some were painted in garish colors. Others wore girdles and tight leather. A woman in what looked to be a three-thousand dollar dress was on all fours on a table, pleasuring one man with her mouth while another fucked her roughly from behind. I didn't recognize the men, but I went to college with her my freshman year. She seemed to be enjoying herself, at least, and I hoped what she was doing was voluntary. The truth was that there was no way to know. There were more methods of coercion than violence, and manipulation could form chains as unbreakable as iron.\n\nPart of me wanted to rush upstairs, fuck my preselected partner, and get out. I didn't feel good about any of that, but Isa assured me that she'd made sure that I would be with someone who was there voluntarily and who wouldn't be forced into having sex with me. She wouldn't lie about that. \n\nUnfortunately, I needed to be seen by damn near everyone. I was, in theory, on the inner circle here. Even if it rarely met officially any more, it was a thing of importance, and my family hadn't been present in far too long. That became evident shortly.\n\nI decided to spend some time and make some friends, in as much as any of these people were capable of friendship. I found a table where people were playing some pool. Not even billiards but honest-to-god 8-ball. Thank god for small miracles. I was soon drinking expensive whiskey and joking as I played in turns with others. The joviality was relaxing me a little. Despite the suits and masks, it was at least somewhat like being back in college. Both men and women participated. One woman in a green gown of startling clinginess and a black cat mask always managed to bend over to take her shots right in front of me. After the third time, she'd found an excuse to briefly grind on my leg, I found out that she had a date. Whoops. I was lining up my own shot when I heard a sneering voice behind me.\n\n\"Goddammit, De Heer, you could at least have some fucking dignity. There's no need to cheat.\"\n\nHis voice didn't carry far, but silence reigned in a small circle around the table. I stood and turned, pulling a stray ball out of the pocket and tossing it and catching it casually. He had a reddish-gold fox mask, gaudy, and with what appeared to be real jewels in it. He stood with the false confidence of youth, and I could see that the woman who had been flirting with me was whispering something in his ear, perhaps trying to calm him down. He grabbed her forearm hard enough to make her whimper and then shoved her aside.\n\nIf I had any qualms of making an example of him before that, they no longer applied. I walked over to him and was thankful for Isa's impromptu history lesson earlier.\n\n\"Cheating is a strong accusation.\"\n\n\"Well, if you don't like being accused, don't do it.\"\n\n\"I didn't, but I suppose that doesn't matter.\"\n\nHe laughed.\n\n\"What, you think that the De Heer blood protects you from consequences?\"\n\n\"Yes,\" I said, stepping into his personal space suddenly. He didn't fold, but I didn't expect him too. He probably worked out, just like I did. But his father hadn't taught him the things that mine had about sudden violence, self-defense, and how to dominate those beneath you.\n\n\"Be careful,\" he said, the faintest quiver in his voice. He was afraid, but also a little eager. He wanted to fight.\n\n\"My grandfather beat a man to death, right here, you know. A man accused him of cheating at cards and wouldn't withdraw his complaint, so he beat him to death with an oak chair. Then he went back to his game. Do you know what happened to him?\"\n\n\"No.\"\n\n\"He won the next hand while they cleaned up the body.\"\n\nI let the silence hang in the air between us. When I had walked over, I had intended to intimidate him, perhaps making an impression on others. I realized then that things had gone too far, and that were he to maintain his accusation, I would have to act. I would have to kill him.\n\nTo my disgust, the idea of beating him to death excited me. I felt the smooth, cold weight of the ball in my hand. It could crush a skull if appropriately used. A few blows to the temple would do nicely to start. I was about to strike when he played his last card.\n\n\"Do...do you have any idea who I am?\"\n\nI smiled, and I knew my grin matched the wolfishness of my mask.\n\n\"No,\" I said simply. I could feel rather than see his collapse. He knew that he had pushed too hard and too far. There were ways that he could have embarrassed me, had he been more intelligent, but he had chosen physical confrontation, and over the date that he had arrived with. I mean, this was literally a place where group sex and spouse swapping was considered relatively vanilla. You didn't take a woman here that you wanted all to yourself. He appeared weak and foolish.\n\n\"Fine ...it's nothing to me,\" he said and stalked off. After a moment, the green-gowned woman looked at me briefly, and I could see her considering whether or not to speak.\n\n\"Please excuse us, sir. I apologize for the...misunderstanding.\"\n\nShe said it with deference and dignity that belied her situation, then turned and followed her companion into the milling group. I made a note of both of them. That he'd known me by sight hadn't shocked me, the masks were for plausible deniability more than anything else, but the fact that he used my name broke one of the oldest rules of the Brigantine. Maybe Rachel could find their identities for me. It wouldn't do to be surprised later.\n\nI turned back to my game, conversation springing up around me again as if nothing had happened. I took a few more shots, controlling my fear, although I could still feel the adrenaline telling me to flee or fight or just shake. I kept Isa's advice in my head and did none of them: Show no weakness.\n\nAfter about twenty minutes, I finished my whiskey and headed to the stairs. There was a nude girl at the top, maybe nineteen years old, covered in gold paint. She engagingly smiled at me, and I felt a sudden and almost overwhelming urge to take her, right there in the hall. A little voice in my head reminded me that while some might be shocked, no one would stop a De Heer from fucking a nameless woman on the plush carpet, even if I hurt her. Sometimes I disgusted myself. She held out her hand, and before I did something to embarrass myself, I handed her the card that Isa had provided. The hostess looked at it, then turned and led me down the hall. We turned three times, each time the hall getting a little more narrow. At the end of the last, was a door. The girl gestured to it, then when back to her post at the top of the stairs. It was quiet. The plush red carpeting was deep and seemed to absorb all sound.\n\nThere was a note on the door, handwritten in neat, flowing lettering. It was feminine and bold, and a little familiar, in the way that all neat cursive writing is.\n\nUse me how you wish, for I am yours.\n\n-Tonya\n\nI felt the same sort of urge as I did just a few moments ago, but now, I couldn't hold it back. If she wanted me to use her, then I would. I entered without knocking and closed the door behind me quickly.\n\nThe room was even darker than the general ambiance of the Brigantine. I stood still for a moment and let my eyes adjust. It didn't pay to act too hastily before you knew the situation, or so my father had taught me. Slowly the scene in front of me became more visible.\n\nIt was a bedroom, unsurprisingly. The floor was covered in the same red plush carpet, and there was a fire in the small marble hearth which filled the room with warmth and even a bit of cheer. Along the walls were couches and frames, for a variety of activities, most involving chain and rope. The bed itself wasn't very large, but it looked comfortable, dark mahogany wood with golden silk sheets. Naturally, my eyes were drawn to who reclined on them.\n\nEach of us, I think, has an ideal of beauty that they are attracted to (for those of us who feel sexual or romantic desire). It can be the same as society's, or it can be completely different. From what I could see of her, Tonya fit my ideal almost perfectly. She had an hourglass figure, with full hips and breasts. I forced myself not to be reminded of the other woman that I knew who had curves like her. I was painfully hard.\n\nTonya was on the bed, presented to me as if a gift. Her arms were bound to the bedposts, but her legs were free to writhe and squirm. She was obviously already excited. She wore a bodysuit of what looked like perfectly fitted latex, black and glossy. It covered almost all of her, leaving her mouth and nose free, but not even slits for eyes. There was, of course, an opening where I could see her swollen and wet vulva. I took off my jacket and laid it on a nearby chair\n\n\"So you must be Tonya,\" I said, removing the gun and holster and placing it carefully near the jacket.\n\nTonya nodded enthusiastically. What I could see of her skin was pale but gleamed in the light. Her lipstick was a deep, almost obscene shade of red. She smiled.\n\n\"I'm to do what I want with you,\" I said as I took my shoes off and placed them by the foot of the bed.\n\nTonya giggled.\n\n\"So does that mean I can take your suit off? It's not like you could stop me.\" I knew the answer, but I wanted to see her afraid. I took off my belt and pants.\n\nTonya's expression grew serious, and she bit her lip, shaking her head vehemently. \n\n\"Let me guess. You're someone that might have a lot to lose back in the world if anyone knew that you were into these games. But you have needs that only sex with a brutal stranger can meet.\" I stripped out of my underwear and socks. I was enjoying drawing this out.\n\nTonya smiled again and gave a hesitant nod. There was something of a little girl to her movements like she was teasing or taunting me. It made me angry. I climbed on the bed, and she gasped. I reached out and grabbed her breast. I did it hard, testing her. She moaned but did not protest, pushing back into my hand. I let her go, knowing that I had bruised her. I ran the back of my hand down the side of her face, and she shuddered.\n\n\"I'm going to be harsh with you. You understand that, right?\" \n\nTonya nodded, and I ran my thumb over her full lips. She sucked it into her mouth, and I felt her tongue exploring it as if it were my cock. \n\n\"Good girl,\" I said, removing my hand. Then I slapped her once, hard across the face. Tonya cried out, and I recognized the familiar mix of pleasure, pain, arousal, and fear. Yes, my sister had chosen her very well.\n\n\"Spread your legs,\" I ordered. Tonya instead squeezed them together and tried to look pouty. She wasn't bad at it, but I knew what she needed. I slapped her again, this time with the back of my hand. Both times had been controlled, hard enough to sting, but not to bruise or cause serious harm. I'd had enough experience to understand these things. Tonya moaned and sobbed, and her legs parted.\n\n\"God, you're beautiful,\" I said, thrusting my finger inside of her without any warning. She was tight and wet and ready. Fuck, I wasn't sure I'd ever felt a woman so ready. She moaned and tried to roll her hips back at my hand.\n\n\"Do you know who I am?\"\n\nTonya paused, then shook her head.\n\n\"You're a bad liar, Tonya,\" I said, pistoning two fingers inside of her while I abused her little clit with my other hand. She moaned again, this time so loud it made the room reverberate.\n\n\"You understand that knowing who I am makes you more dangerous to me, and therefore puts your life in danger too,\" I said, never stopping my fingers. She nodded and shook all over as she came. It was as though she was trying to resist the orgasm from taking her uselessly. I knew what she wanted, so it was easy to coax them out of her. She wanted fear and a powerful man to hurt her, dominate her, use her. I pulled my fingers out, and she cried out, rolling her hips forward and lifting them in the air, begging with her body for more.\n\n\"Do you know how many girls my family has killed here? Not even I do. I haven't murdered anyone. Not yet, anyway,\" I moved over her, squeezing and then kissing and biting her breast through the tight latex, and sliding my engorged cock over her slit, but not entering her. I moved closer, to her ear, and whispered.\n\n\"You're so perfect. Why I might have to strangle you afterward to make sure that no one else gets a chance to defile you...\"\n\nTonya didn't react at first, and for a moment I was worried that I'd pushed her too far, then I felt her body. She was tight and shuddering. She'd come again, and I knew that most of it had been from my words. I waited for a moment, gave her a chance to fall limp.\n\nThen I rammed my cock inside of her in one smooth motion, giving her no time to prepare or stop me. I buried myself deep, and I did it hard. Tonya gasped, and I wondered if I had hit her cervix. It was too late for me to care, however. The games had aroused me. Now I lost control. \n\nI'm ashamed of how it played out after that.\n\nI slammed into her, hard, again, and again. I was fast. I heard her moan and cry out over and over. I mauled her neck through the latex and bit her, hard. At that moment, Tonya was every woman who I'd ever wanted and been frustrated by. She was Nina, so far away, and Rachel, with her strange teasing, Sarah with her half-truths. She was my mother, loving but distant. \n\nMostly, though, she was Isa. Isa, that bitch who said she loved me but let me go as if I never mattered at all. The cold-hearted woman who dragged me back with threats and played with me. I wanted her so badly at that moment. I wanted to punish her. I wanted to hold her.\n\nI'd lost track of my actions, and I was fucking her hard enough to leave severe bruises. Tonya was simply doing her best to ride it out. She never said no. In fact, she never said anything, but it didn't matter for much longer.\n\nI was close, nearly there. I felt my hand close around her throat, in the way another lover so enjoyed, right at the moment of orgasm. I wasn't careful enough, I was fierce, and I came. Her expression changed from pleasure to shock, but she came again none the less, much harder than before, and her legs instinctively wrapped around my waist, holding me.\n\nI came, again and again, filling her. I didn't care if she was bruised inside and out. I didn't care that she couldn't breathe. I wanted to fill her with my child and never speak to her again. I wanted to ruin her. I wanted to die.\n\nI released her throat, and she dragged in a long and ragged breath. Thank god. I was shaking. \n\n\"Good...girl,\" I managed to get out. I undid the straps holding her arms, one at a time. To my surprise, she wrapped her arms around my neck and pulled me in. She kissed me passionately. I responded. We were both very grateful to one another for what had happened, although I reviled myself for how I had lost control and how much aggression I had in me towards the women in my life. I was damaged like my father, but I couldn't blame him for this. \n\nAfter a while, we stopped kissing, and I rolled over, and she lay on my chest. I caressed her back gently. Apparently, she had nowhere to be, as soon her breathing was coming regularly and slowly. She slept as only the well-fucked can, deep, and satisfied. \n\nI slid out from under her. She made a noise of protest but did not wake. I dressed and left, closing the door quietly behind me. \n\n* * *\n\nThe trip back was uneventful. Rachel, seeing my expression, left me alone. Inside I was a strange mix of relaxation, self-loathing, and anger. I had to get the latter under control. I had to. I never wanted to hurt someone beyond what they wanted. I went to the study in the back of the manse, where I'd spent many evenings reading or talking to Isa or Rachel. I'd replaced the gun and holster back into the compartment in the car. I took off my jacket and loosened my bow tie, then I poured myself a whiskey and sat down. Despite my internal conflict, I felt terrific. Fulfilled. It had been a very long time since sex had made me feel this good. It somehow made me feel more guilty, as the sex with Sarah was also excellent, but it didn't meet my need for cruelty. I closed my eyes for a moment.\n\n\"Wake up,\" a voice said. It was firm and commanding. I did.\n\n\"Oh,\" I snapped, without thinking, annoyed at being pulled out of a restful sleep \"it's you...\"\n\nIsa stood before me, dressed in relaxed jeans and an elegant black turtleneck sweater. She must of gotten back from her trip early. Or I'd been asleep for longer than I had intended. Her facade cracked a bit and her small smile turned down. I could see the beginning of tears in her eyes, which made no sense to me at all. Regardless, I hadn't meant to be such an asshole.",
        "\"Do you really hate me that much?\" Isa asked.\n\nI took a deep breath. I was too tired to lie to myself or her.\n\n\"I don't hate you. I hate myself. I'm just taking it out on you. I'm sorry.\"\n\nIsa looked less sad, but her eyebrows furrowed in confusion. \n\n\"Why?\"\n\n\"Because,\" I sighed, \"because I almost attacked someone at the party. Because I took this girl, Isa. I really took her. I was brutal with her. I couldn't stop myself. And when I was done with her, I felt fantastic. I lost control, Isa. I could have really hurt her. In fact, I just let her fall asleep afterwards. I never even asked if she was okay.\"\n\nI felt a dim sort of panic and made to stand up, but Isa smiled at me, very gently, and pushed me back down. She sat next to me, close, like she would have many years ago.\n\n\"Then perhaps you need to think less. If she would have been hurt beyond what...what she wanted, then I would have been informed. If she wanted you to use her and you did, then both of you are happy. This was consensual. I was also informed of the verbal altercation. You didn't attack him. You were ready, and you didn't back down. Normally both of us would think that to be juvenile behavior but I know that you did it for the appearance of strength. For the family. For me. Don't think I'm not appreciative. Besides, Tonya did leave a rather glowing review, as it were.\"\n\nIsa smiled again. She had obviously had some kind of report from Rachel or someone else at the Brigantine, but I had expected that. Without thinking, I put my arm around her, as I would have many years ago. She flinched back, hard, almost standing up. It was so fast that I was stunned. I was hurt for a moment before I saw her eyes. There was real fear there. I was suddenly aware that I had been gone for many years, and had no idea of what might have happened to the girl that I knew and loved all those years ago.\n\n\"Are you okay?\" \n\n\"I'm sorry. I...I don't like to be touched by men without warning first. I swear it's not you at all, it's something that... I've developed.\"\n\n\"Then I won't touch you again without your permission,\" I said, feeling stupid. Isa nodded and smiled again. Then, cautiously, slowly, as if she were deer exploring a place to spend the night, she moved into me. She leaned into my arm, wrapping her own around it. After a moment, she moved it, so I was holding her around her shoulders, and she curled into my chest.\n\nIsa was, at that moment, the most vulnerable I'd seen her since I left those many years ago. She cried softly, for reasons that I did not understand, but I could tell that she was grateful for the contact. I held her close to myself, and we sat there for a long time before we went to our separate beds.\n\nI felt, not for the first time that something else was going on here, something that I couldn't quite see.\n\nI had to figure out what I was missing. If not for my sake, then for Isa's.\n\n----------------------------------------------\n\nClues\n\n----------------------------------------------\n\nIf I was going to live in the family home, then I couldn't afford to be naive or ignorant. I started digging. I wasn't subtle about it, but I didn't exactly tell anyone either. My residency before this had focussed on getting acquainted with the business side of things, and that continued. I had a flight early the next week that would take me through the east coast holdings and then out to the Caribbean for a few days. I'd get about a half-hour of sun because I'd be there to meet the various shady bankers and fund-managers that we relied on to keep our wealth secret and safe. I found out on the way that the entire island was a De Heer property, vaguely associated with the Bahamas but ours in reality. \n\nIn the meantime, I started my investigation by getting to know the numerous staff in and around the manse. It wasn't truly all in use. The west wing was closed, and we wouldn't re-open unless we had a lot of overnight guests. It was something like a hotel over there if hotels had bespoke rooms for different tastes and requirements. Outside the manse, there were around twenty buildings in various states of use. I visited most of them, especially the barracks, where the security staff stayed when they were \"on assignment.\" They typically worked here for two weeks and then rotated out for a month. They were intentionally insulated from the inner workings of the manse, even at the level of security for the De Heer organization. The closest thing to someone \"in charge\" was Rachel, and I would have to be very careful about how I approached her. She was professional enough to protect the secrets of her employers and friends.\n\nThe groundskeepers were polite and efficient, but they were even more isolated from the manse than the security staff. They mostly lived in town. Also, if they saw something, they were so well paid (and had actual benefits in an age where corporations continuously canceled pensions) that they wouldn't talk about it.\n\nThat left the people who worked inside the house itself. There were around 20 \"general staff.\" This included maids, assistants, and cooks. All wore black and white uniforms that varied according to their roles. The suit was necessary. It told us, and any privileged guests, who was available for free use. \n\nThey knew that they were there to do a job and to be our sexual servants. It was that simple. All were attractive, although they varied tremendously in look and personality, save that they had a predisposition to submission and service, and a tendency to avoid monogamy. That might change later in life, but it was an excellent way to make a lot of money in a relatively short time. Most stayed for five years. There was one particularly attractive woman named Senga, tall, olive-skinned, blonde, and very fit, who had been here even when I was a child. She had been one of Father's favorites, I think, because she could take anything he threw at her and be back up and ready again in under a week. \n\nSince everyone else was new or simply had no frame of reference for the questions I needed answered, I started with her. She had a room in the northern tower, towards the top. I waited until she was off duty and ensured via the simple and frankly intrusive RFID card scanning app on my phone that she was in her room. Then I walked up the spiral staircase and knocked.\n\nSenga answered quickly and smiled broadly. She was in her mid or even late forties, but she still looked stunning. Perhaps not in the Cosmo fashion, but she was slender, athletic, and tall. She dressed in simple tights and a pullover for the night. Every part of her looked toned, and her brown eyes were as I remembered them, soulful and intelligent. The room was large, but that was all there was, except for a bathroom. Her bed was on one side, a kitchenette on the other, a small set of shelves was scattered arranged in the remaining free space, filled with a wide variety of books. She didn't have very much space at all. What she did have was one of the best views in the building; three-quarters of the walls had windows.\n\n\"Sir,\" she said with an appropriately demure smile, \"Would you like to come in?\"\n\nShe didn't miss a beat. From surprised to inviting and welcoming in seconds. I entered.\n\n\"Thank you,\" I said, \"It's late, and you're off duty, so I'll try to be quick.\"\n\n\"I think we both know that I'm never really off duty, and there's no need to rush,\" Senga said, running her hand down my chest.\n\n\"Oh, uh,\" I said, having had no thought whatsoever as to how my visit would be interpreted, \"I, um...actually, I'm here just to ask some questions.\"\n\n\"Oh,\" Senga said, with an adorable pout, \"well come in. I'm making some tea if you'd like some.\"\n\n\"Thank you. It's cold up here.\"\n\nShe smiled as I sat down at her small table.\n\n\"It is, but that's how I love to sleep. And the view is just wonderful.\"\n\n\"I was surprised to see that you were still here. Pleasantly so.\"\n\nSenga laughed, pouring steaming water into a mug for me.\n\n\"Did you expect me to leave after your father passed? Oh, I hope you like mint.\"\n\n\"I love mint. Thank you.\" I sipped the tea carefully as Senga sat down, then looked up in surprise. \"This was my father's favorite.\"\n\nShe laughed again, delighted.\n\n\"I thought you'd like it. I'm pleased that you remember. You're a lot like him.\"\n\nI managed to only flinch a little bit at the intended compliment.\n\n\"I suppose I am. What made you stay after my father passed?\"\n\n\"Well...to be honest. I never intended to. I was going to do five years and then leave. But...I fell in love with this place...and at least a little bit with your father. Is that weird to hear?\"\n\nIt was my turn to laugh.\n\n\"It might be, but this is a weird family.\"\n\n\"I guess it is. The thing is, I knew that I never would be your father's only woman. I never intended to replace your mother. I had no illusions about romance, in any case. It started as a job, then turned into more. When your father died, it was hard for me, and I was honestly preparing to leave. I thought most of us would be fired. But your mother kept me on, even promoted me. I'm good at organization and administration, and I guess she knew it. The money is still good, the benefits are wonderful, and I get to live here. It won't last forever, but nothing does.\"\n\n\"Hmm...and you don't have any problem with...with the arrangements?\"\n\n\"You mean with having to fuck whoever you want me to? No. I date, of course. A lot of us do, but I keep it casual and tell them that I'm not exclusive. And...I mean, let's be honest. You haven't exactly been taking advantage of our services.\"\n\n\"It feels...wrong.\"\n\nSenga laughed at that as though it were the funniest thing in the world. \n\n\"I mean...wow. You're so much like him. You look like him when I first met him. I was eighteen then, you know. But you're also so different. It's all right to use us. We're here for that. Some people love it. I know that I do.\"\n\nSenga put her hand on mine, and I didn't move it.\n\n\"So...you've probably seen a lot then.\"\n\nFor the first time, I saw her smile fade. I got the impression that she was a very open person. My father would have found that uniquely appealing, given all the false fronts he dealt with.\n\n\"Yes. I guess you're not really here to get to know me.\"\n\n\"No. I'd like that, though.\"\n\n\"All right. What do you want to know about?\"\n\n\"What happened while I was gone. Specifically, in my family, not the business or the manse.\"\n\n\"A lot happened, Sir.\"\n\n\"Call me Reuben. Please.\"\n\nA faint trace of her earlier smile returned. \n\n\"Your father told me to call him Rudi. Anyway, Reuben, a lot happened.\"\n\n\"What about with my sister, Isa?\"\n\n\"There was something...I...Reuben...I don't know if I should talk about this. I don't want to violate her privacy. I know that you're my employer, but...\"\n\nI didn't disabuse her of her notions of who controlled the money.\n\n\"I'm not doing this because I want to have something over her or to hurt her. I'd never do that. I want to help her, or at least understand what's going on. I feel like I'm missing something, and while I understand that what happened in her work life, I'm concerned that it's having a severe impact on her life.\"\n\n\"You won't tell her that I spoke to you?\"\n\n\"If she asks, I'll say I just came here for amazing sex.\"\n\nSenga laughed, then grew more somber.\n\n\"Fine. At some point, after you left, your father changed. He got darker. I know he hurt your mother. I don't think it was precisely abusing her, or at least she wouldn't have described it that way. He loved her, you know.\" I nodded, and she went on. \"He hurt her more. He was much rougher with me. I thought I'd done something wrong, but, again, I could take it. It took me longer to recover, and once...once, he choked me out completely. I really thought that I was going to die. When I came to the on-duty nurse was there with me, and your father was standing behind her. He looked very concerned, which worried, and if I'm honest, flattered me a little. He never allowed himself to show that.\"\n\n\"He must have been...out of control.\" I couldn't help but think about my incident with Tonya. How close had I come to choking her just a little too much, or hitting her a little too hard? \"So, he got worse. Do you think Isa knew?\"\n\nFor the first time in our conversation, Senga looked away, out the window.\n\n\"Yes. She definitely knew. He hurt her or allowed someone else to. I don't know how or why, but...he did.\"\n\n\"As badly as he hurt me?\" \n\n\"You mean the beatings? God, that was awful. I'm sorry that you had to go through with it. No, I don't think he hit her...at least not so bruises would show but...Reuben, this is very hard to say. I loved your father, but I think someone was sexually abusing your sister, and he knew about it. Even allowed it.\"\n\nI must have looked like an idiot with my jaw open, tea forgotten halfway to my lips. My mouth was dry, and I could hear my blood pulsing in my ears.\n\n\"Did you witness this?\"\n\n\"Somewhat. I caught him leaving one of the drawing rooms that he used to entertain small groups of guests. He was with someone that he obviously thought was important. Older, obviously being treated like a VIP, but I never learned his name. I went in to clean up after them and save some work for the maids. Isa was in there, sort of sitting on the desk. She was crying, her shirt was torn, and she was pulling her skirt back down. Of course, I recognized the smell of sex right away. I didn't know her well, and I didn't want to make things worse, so I left before she noticed me. Around that time was when Isa started to get more distant. She probably thought she was hiding her feelings well, but I'd known her or at least observed her for a long time. The difference was obvious to me. I know what you're going to say. Why didn't I do something or call someone?\"\n\nI shook my head.\n\n\"I'm not going to say that, Senga, because there was nothing you could have done, not really. Whoever you called would have likely been in Father's pocket. Whatever you did to intervene might lead to your death or Isa's situation getting worse. I...I think I feared this was the case. I wonder if...if it was happening while I was still here.\" It would explain why Isa wouldn't leave with me, but Senga shook her head.\n\n\"No. I mean, she was depressed after you left. You were close, obviously. But she recovered as best she could. This happened maybe a year or so later. Honestly, your return has been the best thing for her. She's been more open and outgoing then I've seen her in years, even with your mother's death. Please...please be gentle with her. Whatever the circumstances, I guarantee you that she was under duress and alone.\"\n\nIf what I was seeing was an improvement in Isa then I had reason to be worried. I looked at Senga. Did she know about Isa and me? It was possible. We tried to be secretive, but we were basically hormone-driven eighteen-year-olds. No, she simply feared that my response to finding out about what happened might be the same as my father at his worst: punish everyone, ask questions later.\n\n\"I won't, Senga. You've been a big help, and I won't forget it.\"\n\nI finished my tea and stood up to leave. She caught up with me at the door.\n\n\"If you want to pay me back, come visit me some night when you're not on business. I promise I'll make you happy, and if what Sarah says is true, then you'll make me very happy.\"\n\nShe giggled charmingly and closed the door. I hadn't expected Sarah to gossip about me. Ironically, Senga had mentioned my other nagging concern. Sarah. What did she know? Isa trusted her, but could I? Did she have an agenda? Perhaps I was paranoid, but I had a notion that she was holding something back from me.\n\nI had to find out what.\n\n* * *\n\n\"So,\" Sarah said at dinner a few nights later, \"I found out who the jerk was like you asked.\"\n\nI smiled at her, and she blushed under my pleased reaction. It was hard not to like someone so cute.\n\n\"Really? That was fast.\"\n\n\"Who is the, uh, 'jerk'?\"\n\nIsa looked at both of us in confusion, and I chuckled. Sarah answered for both of us.\n\n\"The 'jerk' is the man who tried to start trouble with Reuben last week at the Brigantine. I made some calls today. They were all about denial and discretion until I demonstrated that I was calling on behalf of the De Heer family. Then I got the security footage and gave it to Rachel. She ran it through the facial recognition programs that our security staff has. The masks made it difficult, but I asked her to just run them against people of a particular net value or higher, you know, people that your father might have offended or been in business with. The only person who matches his height, weight, and facial characteristics is Vincent Trevante.\"\n\nI didn't know who she meant, but Isa did.\n\n\"Hmm,\" Isa said, \"he's young. About our age. And if I'm not mistaken, he recently inherited access to the Trevante Syndicate. That's what they call themselves. They're a bit like us, in that they have a polite legal facade and then a deep connection with various unsavory types. I think that they specialize in smuggling and human trafficking. They don't have the kind of wealth and influence we do, but they certainly aren't to be ignored.\"\n\n\"Well,\" I said, \"then I suppose we should keep an eye out for any moves he could make against us. I have no idea why he wanted to cause trouble with me, however.\"\n\n\"He's a man, driven by arrogance and insecurity,\" Isa said bluntly, \"He probably just wanted to make himself look more powerful by bringing you down. It certainly backfired on him.\"\n\n\"You're probably right,\" I said in return, then added, \"Good job, Sarah. I expected that to take a week, not a day.\"\n\nSarah blushed and locked eyes with me. She was pleased by my praise, and I knew by the look she had just given me that she'd visit me later that evening. I looked forward to it.\n\n* * *\n\nI heard the knock at my door, perhaps a little later than I had expected. That wasn't the only surprise. I wasn't prepared for the sight I beheld when I opened the door.\n\nTypically, Sarah and I were reasonably causal in how we dressed for our night encounters. Whether I went to her or she came to me, we were basically just in what we liked to sleep in. One of us might bring a bag with toys or a change if we intended to stay the night (the house was big enough to feel like less like a mansion and more like a series of apartments). Sarah usually slept in an oversized tee-shirt and boy shorts-style underwear. There was no doubt that she made that outfit look amazing, but she was really dolled up tonight.\n\nSarah had her hair done neatly, and her makeup was simple and in a \"natural\" style that I knew took a lot of time to get right. Her lipstick was a bright, shameless red that I loved on her. She wore a loosely belted and very short black robe. As I watched, she indeed the belt and let it open to reveal what was underneath. She wore a white, lacy bustier, which pushed her small breasts up as if holding them for display. It only had a half cup for support, so all of the top and half of each nipple was revealed for my enjoyment. Her panties were tiny and sheer. I could easily see that she had shaved entirely, and the transparent material couldn't hide how swollen and wet she was. I didn't know what the occasion was, and to be honest, I didn't much care. I knew that I wanted her badly.\n\nI wrapped my arms around her waist and pulled her inside quickly. She yelped and giggled in surprise, and then slipped out of my grip as I shut the door. I was left holding only the black silk robe, which I carelessly cast on a chair. Sarah sat down on the bed, crossing her legs with false modesty, before sitting back and posting as pretty as any pin-up. She patted the bed next to her, and I sat eagerly. It was a bit unusual to see her taking charge, but we both were enjoying it. Sarah leaned in and whispered into my ear."
    ],
    "authorname": "LateStageInfernalism",
    "tags": [
        "action scenes",
        "bdsm",
        "brother",
        "incest",
        "long",
        "love",
        "romance",
        "secrets",
        "sister",
        "thriller"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-legacy-of-shadows"
}