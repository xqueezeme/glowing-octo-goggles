{
    "title": "FOC - Uleni's Gamble 04",
    "pages": [
        "Chapter 13\n\nThey all made their way into the castle, Justin's mind moved quickly and he looked at Anton, a glimmer of an idea formed in his mind. Going back to destroy the altar was important, but there was an opportunity here that shouldn't be thrown away.\n\nHe waited until they were eating, the scared servants jumped to keep them happy which just reinforced the idea in his mind. He considered Ross and the three mages, and wondered if he would have any issues there, but he dove in and made the suggestion.\n\n\"Anton, I think you should keep the troops and talents we brought with us, and the two mages, and claim the kingdom of Egeria.\"\n\nAt the shocked look on everyone's face, he thought maybe he should have led up to it a little better. Still, it seemed obvious to him. He glanced meaningfully at Sara, who looked calm, so he hadn't ruffled any feathers from the Uleni yet.\n\nAnton coughed and said, \"You think what?\" Anton looked a little shocked at the idea.\n\nHe blew out a breath, then said carefully, \"Well, let's look at the state of things. Riese killed or converted all the mages here, as well as the nobility. The kingdom of Egeria needs direction and a strong hand. If we make it yours, Abelaweth gains a peaceful neighbor to the south that until now has been a threat. You are already royalty, so no one is going to argue with you too much since you have the only troops in the area as well as the strongest magic.\n\n\"On top of that, this place needs to move away from its brutal practices toward women, a view I know you share with me. What better way to do so, than to lead them from the top. It won't be easy, but it will happen over time. Especially with your troops coming from Abelaweth, they won't look the other way when a man rapes a woman or beats her like others from Egeria who grew up expecting it. \n\n\"None of it would be easy, I would understand if you refused, but really, if you do the people down here will remain downtrodden, and your enemy. Did you see how terrified the servants looked? Or the towns we passed through? The city? With a firm but gentle hand you could turn this place around, make them an ally. The common people certainly won't complain, and there aren't enough of the entitled left to squeak.\"\n\nAnton said dubiously, \"I had always expected to rule Abelaweth when my father passed. What if we simply absorbed Egeria, made it ours?\"\n\nHe frowned and shook his head. \"There are a few issues with that. One, the people will resent it, they are Egerians. Instead of a new king they could trust, they would be conquered in essence and never truly feel a part of the kingdom. \n\n\"Second, it's too much ground to properly rule from so far away, we are two weeks from the capitol in Abelaweth, things wouldn't change as quickly, and your father couldn't deal with them as effectively as you could close up. There are too many problems here to clean up at a distance.\n\n\"Lastly, and I think Ross might back me up on it, if Abelaweth swallows this kingdom, the new peace which is still fragile with Uleni might break. For those not here, the decision will seem to be self serving and your father seen as having plans to rule the whole continent. They would be suspicious of your father's true intentions. Keeping it a separate kingdom will be hard enough for them to deal with.\n\n\"There is still time on the succession issue it would cause in Abelaweth. You should think about it, but not too long, you'll need to move quickly on it if it's going to work.\"\n\nAnton turned to Ross and asked, \"How do you feel about this, and if I do what the Flame suggests do you think Uleni would object?\"\n\nRoss looked thoughtful for a second, then smiled, \"Not if it was a joint effort, if you would appoint me as the head of your military?\" Ross rubbed his chin thoughtfully then continued, \"And perhaps one of these two mages on your council? I think Uleni would trust we wouldn't attack them if you did those things. Just a suggestion... your majesty.\"\n\nAnton frowned, and they all ate in silence as the young man thought it over. It was a shit storm he had offered him, but also a chance to make a real difference. He liked the idea of Ross, the man had grown on him, and he certainly wasn't against woman mages, or the abuse of woman.\n\nAnton scowled at him when they finished lunch, but immediately started making plans.\n\n\"Very well, Ross, I need you to prepare twenty troops for each town with either a fast moving shape shifter or air talent in each. I am going to go over the laws, make changes, and give them to the groups tomorrow. If any of the village elders have a problem with the changes, they should send back a report. Either way, the soldiers should stay a month, make sure they have enough cash to pay their way, they should be examples of how we want the people to act, understood?\"\n\nRoss nodded. \"It will be done your majesty.\"\n\nAnton said, \"We can handle the city after they leave. I'll also review the taxes, I have a feeling they are much too high, so at least we can give them good news along with the stuff they won't want to swallow,\" turning to Nicole he said, \"Nicci, you'll have to explain all this to father, and make sure he knows it was your man's idea, would you?\"\n\nNicole laughed vibrantly and said, \"You bet I will. I'm sure our father will have words with him about the succession.\"\n\nHe tried to look innocent and failed. He already had an idea about that. Actually a couple, but he didn't think the world was ready for a queen yet, which was a shame. Nicole would look incredibly hot in purple, and be a brilliant leader. Of course, if the dragon child they had was a girl, they might not have a choice, unless the king gets another mate... \n\nStill, it was the best thing he thought, putting Anton in charge here, for Abelaweth, for the people of Egeria, and hopefully for peace...\n\nThey decided to leave in the morning and head back to Uleni, possibly stopping at the capitol of Abelaweth on the way and letting the king in on Anton's plans that he reluctantly admitted was suggested by him. The now King Anton, had the servants set them up a permanent suite in the guest wing. No doubt he would miss his sister and hope for visits in the future. This suite actually had three bedrooms, the extra for Trina.\n\nStill, just moving as their group it would take two or three days instead of two weeks to visit, if it wasn't so dangerous he might try and persuade Sally to learn travelling. He hoped however that their constant trips across the continent would be cut down drastically in the future.\n\nAt dinner Anton looked annoyed and filled them in.\n\n\"You wouldn't believe how many oppressive laws there are here, I have done a lot of crossing out and adding. I might have to put off tomorrow's expeditions another day, or at the least they will get a late start, possibly around noon tomorrow for me to finish up. The tax part is easy, I just wrote up a simple code and threw out the crap they had.\"\n\nNicole and Sally offered to help, but Anton shook his head and said, \"It's a one person job really, but thanks for the offer. I should be done before lunch tomorrow, if I work on it some more tonight,\" he made a face, \"You could talk my intended mate into moving here though, and set her up with an escort if she agrees when you get back to Abelaweth?\"\n\nNicole grinned, \"Consider it done.\"\n\nAfter dinner they retired to their rooms, and Sara claimed his hand and pulled him into the second room. He smiled as the sound cut off when he entered the room, Sally must have already spelled it for privacy. She pulled him into a passionate kiss that had his pleasure hardening as she pressed her soft supple body against his.\n\nHe felt his heart race as he broke the kiss, cupped her face and asked, \"Sara, I love you, for a long time now, long before we ever touched and you are more precious than life to me. Would you be my mate, have my children, and spend the rest of our days together?\"\n\nShe had tears in her eyes when she said, \"Yes, please yes.\"\n\nHe felt his magic reach out, as hers did, and a bond formed between them, sealed by their love and oath.\n\nThey came together and kissed, softly at first but then it built, became hungry, passionate. He was fully extended, pushed up against her stomach as she melded her perfect sexy body to his. He slowly started to strip her clothes off and she eagerly returned the favor.\n\nShe whispered, \"I love you, take me hard my mate.\"\n\nThere was no doubt or fear in her voice, yet he still worried about her feeling trapped, so he would avoid missionary, and hope that was enough.\n\nHe lifted her up by her ass, and felt her legs go around him. He could feel the moist heat against his member, the promise of her tight silken delight caused his manhood to jump, pushing against her swollen wet lips. She was more than ready, so he picked her up a little higher, and dropped her down, his length impaling her velvety folds and driving into her hot wet heaven.\n\nHe carried her toward the bed as they kissed still fully joined. He put her on the edge of the bed, grabbed her legs and pulled them up and over his shoulders. Her beautiful full lips parted as she gasped and her piercing green eyes rolled back with her body. She arched her back and swiveled her hips as he started rocking in and out of her tight passage.\n\nHer breasts started to sway and rock as he pumped in and out of her harder and harder. When he reached out his hands and pinched her nipples while gently twisting she cried out.\n\n\"Goddess Justin, fuck that's amazing, don't stop!\"\n\nHe couldn't take his eyes off her beautiful face as he brought her to ecstasy, her every reaction and sound coming through her lips held him captive. His length was squeezed and milked by her lush silken heat. It was harder to pull back during her bliss, he only did so half way, but didn't slow down as he continued to slam into her hard and fast. He could feel her body tremble as her orgasm rolled directly into another.\n\nHe gasped as his legs went numb, her passage got tighter as he swelled inside of her, \"Sara, I can't hold on any more.\"\n\nShe said breathlessly, \"Fill me, I want to feel you fill me, make me yours and give us a child.\"\n\nHe felt her body tremble a third time as her velvety core started to greedily milk his baby batter. When he started to come down, he gently caressed her long legs from foot to inner thigh, up and down as he stared deeply into her eyes.\n\nHe decided to try doggie style for their next round, not only did she not feel trapped by it, she was wildly enthusiastic as he hit places in her that she had never felt before. They spent quite a bit of time with each other before retiring for the night, completely sated, to the main bedroom with the other ladies.\n\n-------------\n\nCytherea was both happy and troubled. Happy that Justin had found a way not only to stop Riese, but initiated the process that would make Egeria a better place to live for women. She didn't interfere at all because of free will, but that didn't mean she had no opinions on how things should be. He also took the unplanned fifth as his mate, which made her smile, she thought he deserved every happiness he could find.\n\nWhat worried her though, was him giving her his free will and allowing her to work through him wouldn't be enough this time, and she had no idea at all what would be. Ares was not truly evil, he was just a petty vindictive child of a god. She wished he would just withdraw from her world now that he had no mortals worshipping him. It had to be a drain keeping that connection with no power coming back to him.\n\nShe sighed, he would never do that though, he'll bide his time until someone else decides they want to worship another god, then pounce on the person and make them an offer. Maybe he would grow up one day as she had, but she didn't want him playing with her world in the meantime. She just wasn't sure what was needed.\n\nShe smiled as she felt a hand on her shoulder.\n\n\"Do you not already know the answer daughter? Would it surprise you, that you not having it yet makes me proud of you? The old you would have figured it out right away. Not that it really matters, the question is, will Justin figure it out...\"\n\nShe pondered what he had told her and she knew she must be missing the obvious. What did her old self want that no longer held appeal to her? She flushed when the answer came to her, it was something her old self would have wanted, demanded, and abused.\n\n------------\n\nNothing quite drove home the fact how far Sara had come from the scared mousy maid she had been than the looks of respect and fear from the people she used to work with, and for. She didn't really feel that different inside, but as a mate of the Flame of Cytherea, things were vastly different for her now as far as how she was treated by the people around her.\n\nIt felt odd to her, and wasn't truly important, what was significant to her was her new family. She couldn't remember a time in her life she had been happier. She didn't like the way the servants feared her though, and had considered trying to talk to them about it. She realized though, that it wouldn't help, back then she wouldn't have believed it either.\n\nShe hoped it wouldn't take long for them to come to the truth of it, Anton would not be a harsh king and changes were coming, good changes that would take time to be believed. She caught herself touching her abdomen again and blushed. She was hoping she was pregnant, but if she wasn't yet, she knew it wouldn't be long...\n\n------------\n\nJustin kissed Katrina fiercely after she woke him up in the usual way. They would be travelling in a little while, although now they could do so in their group of seven and at higher speed. It would only take a few days to reach the capitol in Abelaweth, then maybe two more days to reach Uleni and end this. Then he could get back to what he wanted to do, help run an inn, heal people, and help raise his family.\n\nHe released Kat as she got up, then enjoyed waking his other mates with roaming hands and kisses before escaping their sleepy wrath. He slipped into the main room of the suite as breakfast was being delivered. He waited until the ladies joined him, then they dug in before the food could get cold.\n\nAnton came in as they were finishing up packing and handed him a letter.\n\n\"I expect you will explain things to my father, but give him this for me will you? It has my own thoughts on it all, and will tell him what he needs to know, about things that you won't be able to answer.\"\n\nHe nodded and said, \"I will. Good luck Anton, we will be back to visit before you know it.\"\n\nThey all said goodbye to Anton, and gave Nicole a few minutes in privacy with her brother before leaving. It felt good to run again at such a high speed and he enjoyed the adrenaline rush. He would have to figure out a way to find an excuse to do so more often. Although he was sure he would be tired of it after a few days. It had to be exhausting for Nora and Sally as well, but he kept them restored more or less constantly. Just their small group didn't take too much out of him.\n\nHe still wasn't sure what they would do about the altar and Ares. He had strong feelings what he had done last time wouldn't work, and it didn't feel like a pessimistic worry, it felt more like the morning he had awoken with that bad feeling. Eventually though, he stopped focusing on it, the answer not coming to him, so he let it settle in the back of his mind.\n\nWhat he felt wasn't exactly a new feeling either, he had known for a while it wouldn't work. At first he had just ignored the feeling, choosing instead to focus on the immediate problem of Riese and his army. With that behind him, and only five days until they confronted it, maybe six if they spent a day with Nicole's father, it became his focus.\n\nHe wondered if maybe the books currently sealed up with the stone altar would reveal a way, perhaps he could get in the room and back out and look for another way. He continued to let his mind work on the problem though, he wouldn't depend on that being the answer.\n\nThe one thing he hated about this form of travel was it made it impossible to hold any meaningful conversation, though he did have a really nice view of Katrina's and Sara's sexy asses. Shallow perhaps, but something to distract his mind. For him, most of the time, new ideas happened when he wasn't focused on the problem and just let it simmer in the back of his mind.\n\nSomething did occur to him, but it wasn't very helpful for dealing with Ares. It was all the other things that had been bothering him. Things that he hadn't had time to really think through. The fact there were humans on this world. The half truths Celia the high priestess had told in her story. The books of forbidden knowledge written in Latin...\n\nPerhaps the goddess did come to this world a couple of thousand years ago, if that were true, maybe she didn't come alone. Could she have come with her devout followers? Maybe those devout followers had texts and books about the other gods, and demons. But why hide that?\n\nHe sighed, he would probably never know the full truth, but he was pretty sure the ancestors of the people on this world were from Earth. Nothing else really made sense to him, although he had to admit he had huge gaps in his knowledge. Maybe there was another way to explain it, but it felt right to him. As for why they came here he would never know.\n\nThe animals were further proof. Deer, rabbits, tigers, birds, and many other animals that could be found on earth were here as well. Even if as unlikely as it was, there was some kind of convergent evolution that created humans here, the idea of adding other animals to that was absurd.\n\nIt was an odd concept, the Greek gods were real, perhaps they all left earth at the same time for different worlds? He never did pay much attention during English class when they went over Greek mythology and was regretting that now. He was burning with curiosity about it. Still, if he had to die before he could get answers to the reason why, he was more than happy to delay the learning of it.\n\nThey stopped for lunch at one of the villages, none of them were very into the idea of eating trail rations or even having to cook. After the long hard run they just wanted to relax a bit before continuing for the rest of the day. They stopped at a tavern and ate in the common room.\n\nHe said after trying the meat, \"This isn't all that bad, good really.\"\n\nNora asked, \"Where you expecting it to be bad?\"\n\nHe shrugged, \"They don't have much, between taxes and then Riese stripping the villages as he passed...\"\n\nKatrina pointed out, \"True, but they can still hunt for more meat, it will be the winter they'll have trouble with, unless they can get another harvest in before then.\"\n\nNicole said softly, \"My brother won't let them starve; if he can't supply aid from the kingdom's food stores he'll contact my father for help.\"\n\nThey talked about Egeria, and how long the country would take to recover from recent events for the rest of the meal before heading out. The people there seemed wary, but friendly enough, and they didn't have any problems...\n\n------------\n\nKatrina happily hunted for dinner as the others set up the tent. They had planned to stop at a village again, but when it started to get dark they realized they wouldn't quite make it, so stopped instead. By the end of tomorrow they would be back in Abelaweth and a good ways towards the capitol.\n\nShe didn't mind, a hunt is just what she needed to settle her nerves. She was still happy, not having to worry about warriors taking her magic any longer. This is how she was meant to be. She was concerned about what was coming, but an altar was a nebulous threat, something she couldn't sink her claws, or teeth into. She also had faith that her mate would figure things out.",
        "She caught a few rabbits, skinned them, and headed back for their camp. Nicole had already gathered wood and had a good fire going, she skewered the meat and hung them over the waiting fire. They were all hungry from the energy expended in their run and looked forward to a good meal.\n\n------------\n\nNora felt herself relaxing as well. Her stress over the last two weeks and more was slowly releasing. She realized they still had a god to deal with, but strangely that didn't stress her out as much as the idea of assassins or enemy soldiers attacking. Those were her concerns, there was nothing she could do about their remaining problem, except trust that Justin would take care of it as he had last time.\n\nShe still trained with Trina that night though, it wouldn't hurt to develop her other skills despite having her magic to depend on again...\n\nChapter 14\n\nJustin got a little worried over the next two days of travel. When he had faced the dark god, the answer had come at the last minute, just seconds from death. If at all possible he wanted a plan before going in this time. Last time he hadn't really known what to expect at all, this time, he knew it would be a fight for his life.\n\nHe just couldn't figure out an answer. If giving his free will away to have a goddess work directly through him wouldn't be enough, than what would be? The power he had felt that day was beyond his comprehension, how could he possibly make a difference to that?\n\nHe should be worried about normal things, like how to be a good father, and how to keep his mates happy. But he wouldn't shy from his responsibility. He was a little scared that he would let his goddess down, there had to be a way, he just didn't know what it was.\n\nAt the end of their third day of travel, they were close to the city but decided to spend the night at their home instead, and go visit the king in the morning. The building seemed undisturbed but he checked all the rooms anyway, made sure no squatters had moved in during their absence. \n\nKatrina and Sara got to work in the kitchen on their evening meal while Sally used the cleaning spells to remove all the dust and stale air, refreshing their sheets and bedding. Nora cut up some wood and Nicole helped carry it in and light it, getting one of the stoves ready for their cooks.\n\nHe smiled, it felt like coming home. Sally came in and sat on his lap, snuggling her nose into his neck and shoulder. This place, and Sally in his lap reminded him why he was doing what he was doing. He had to find a way to destroy the altar, keep his family free and their world free from that influence. He was also doing it for his goddess, he owed her his life, and so much more, he truly would do anything she asked of him.\n\nSally kissed him, then got up and started to set the table in the kitchen. In a short time they all enjoyed a meal together, for tonight, in their own little world, alone with their family...\n\n------------\n\nNicole stepped into her father's suite wondering how he took what Justin told him. They had been closeted for a couple of hours. Her first impression of his mood was resigned, it really was a good idea to get a hold of Egeria, but she knew it would cause complications for her father. Still, she thought the new problems were a good tradeoff to stop the raiding and even the suffering of the people in Egeria under a brutal rule.\n\nShe gave him a familial hug and sat down at his gesture.\n\nHe said without preamble, \"I never wanted another woman after your mother. I don't know if you remember, but I even tried when you were younger. I couldn't help but compare, and it was also hard to discern if a woman actually cared for me, or if she simply wanted to be queen.\n\n\"With your brother out of the picture now, ruling in Egeria... I feel I don't have a choice, and will pursue it again, perhaps enough time has passed. In the interim however, I have officially named your child my heir, male or not, until I do my duty and produce another son. Cytherea willing, there will be a woman out there fool enough to want your old man.\"\n\nShe smiled, \"I'm sure there is father, and if you want to weed out the social climbers, feel free to throw a large ball and invite us. I'm sure Sara would be happy to help you out that way.\"\n\nHe grinned conspiratorially, \"That is an ingeniously sneaky idea daughter, and will put my mind at ease. I'm glad you were paying attention growing up. I'll set something up for a few weeks from now. Hopefully everything will settle down by then.\"\n\nThey talked for a while longer until duty pulled her father away, she returned to the guest suites in high spirits. It looked like her and her father wouldn't take too long to redefine their relationship after all.\n\nShe and the others could tell Justin was concerned and bothered, so they sat him down, and with wheedling and threats got the whole story from him. He had never shared with them before, what it had taken, the way he sacrificed his free will and put his life on the line for the goddess. Apparently if he did that again it wouldn't be enough, and it didn't take her long to figure out the answer, and realize why he hadn't yet.\n\nWhen she explained her idea, he hadn't liked it very much. In fact he argued about it vociferously. She got why of course, and although she was a little angry at his stance, her and the other ladies decided to let him think about it for a while. There was no point in arguing about it, at least, not yet. She would give him the time he needed, within reason.\n\nDinner came and they dropped the subject completely as they ate...\n\n------------\n\nSally stretched, displaying herself decadently, her body was pleasantly sore from last hour spent with her mate. She laughed when Justin took the opportunity to both tickle her, and suckle one of her nipples. She moaned as her nipple tightened, delighted her bait had worked so well.\n\nShe loved how he worshipped her body with his eyes, mouth, tongue and fingertips. It was only fair after all, she couldn't get enough of his either. He didn't disappoint, she sighed in pleasure as she felt his mushroom head enter her eager velvety center, filling her completely as he drove deep within her limber and supple body.\n\nShe moved her legs around and up, so she was pinned beneath him. She smiled up at him while reaching under her own ass, which was hovering over the bed as she was held up by her legs on his shoulders. She started to tease his balls, gently rolling them in her fingers.\n\n\"Goddess Justin! You're so deep.\" Demandingly she said, \"I want more of your cum in me, fuck me hard, fill my needy pussy with your baby batter.\"\n\nShe gasped and pinched her own nipple with her other hand as she rose quickly to orgasm. His long thick pole stretching her as he pounded deeply into her needy body over and over again. She was delirious with the pleasure of her mate using her body so roughly. He had a lot of stamina after already cumming twice and drilled into her without mercy as she was brought to bliss over and over.\n\nShe loved Justin but this was primal, a hard and fast coupling out of lust and barely controlled passion. She encouraged him to fill her again when she felt him start to expand within her, and his balls tightened and slightly raised off her fingertips.\n\nShe loved having the power to make him lose control, and it got her off so well every time he did. They cuddled and kissed, her body felt used and sore, and she was sated and quite content, for now...\n\n------------\n\nJustin was trying to figure out another way as they moved through Uleni, but was pinned by the logic of Nicole's argument yesterday. He also knew he was on thin ice, but it was one thing to risk his life for his family and goddess, it was another to risk his and his mates' lives. It should work, but if it doesn't they would all die.\n\nHe just couldn't wrap his head around that risk.\n\nThere was another more practical issue with the plan, while they were taking care of the altar both he and his mates would be fully occupied. He was glad they had a truce and a starting peace with Uleni, but he wasn't sure he trusted them with his unprotected back. If they could get rid of him their dreams of world conquest, that he had basically forced them to abandon, would be that much more reachable.\n\nHe had no doubt Trina would defend them, but against a couple of mages she really wouldn't be able to in his opinion. Maybe one, if she was fast enough... Either way he didn't like it, not at all. On the other hand, he was close to getting sent to the doghouse, all of his mates were strong and did not want to be coddled.\n\nHe would probably have to give in, if only to respect their right to choose the risk, but he would hate every moment of it. He also realized it was a bit hypocritical, since they had been risking their lives to protect him and each other from mundane threats all along. Of course, they had never been faced with an all or nothing threat before, he knew he needed to calm down or he would start losing it, if he hadn't already.\n\nThey stopped at a village for lunch, their group received a few suspicious stares as they went into the tavern for lunch. The tavern owner seemed reluctant to have them there, but was too afraid to refuse them service. There may have been a treaty in the works and a tentative peace, but that didn't mean everyone in the kingdom knew about it.\n\nHe decided the course of wisdom was to compromise, and said if they couldn't figure out another way to get things done, they would go with Nicole's plan. They were about halfway through eating when an older man walked in and stared at the group, then stepped back out. He was worried what that meant and suggested they get out of there.\n\nHe wasn't too worried about anything happening to them, but if they were forced to defend themselves it wouldn't look good. They were getting up when the older man came back in, this time with ten soldiers.\n\nOne of the soldiers said, \"Halt! You are under arrest, all of you.\"\n\nHe furrowed his brow, \"The capitol is expecting our return, for what reason do you accost us?\"\n\nThe soldier glared, \"This mage has told us you harbor a witch, you will all be tried and dealt with accordingly.\"\n\nHe asked carefully, \"Did the mage also tell you who I am? Surely if he checked our magic he would know?\"\n\nHe guessed the mage only bothered to check the ladies, because the blood drained from the mage's face as he met the old man's eyes with his.\n\nHe smiled coldly, \"You might want to talk to him, he clearly knows who I am now. Better late than never.\"\n\nWhat he said made him feel like a pretentious jackass, but it was better than explaining a fight, and perhaps a chase across the kingdom. He worried it may come to that anyway.\n\nThe guard looked uneasily at the mage, who seemed incapable of speech right at the moment.\n\nThe mage finally bowed low and said, \"My apologies Flame of Cytherea,\" turning to the soldiers he said, \"We must allow the foul witch passage, they are on a mission essential to our survival.\"\n\nHe relaxed slightly as the guards nodded and left the tavern. They watched as the old man glared at Sally again in disgust, as if not quite believing what he was doing, and left. \n\nHe sighed. \"That was fun, we might as well finish our lunch. We'll need the energy this afternoon.\"\n\nThey sat back down and ate quickly, all of them eager to get out of this village. They decided it was probably better not to push their luck and avoid stopping in any more villages. They wouldn't reach the capitol until tomorrow night, it would be better if they could avoid any incidents.\n\nThey got back on the road and moved quickly, putting the town far behind them. It seemed clear to him there was no love lost here in Uleni. Perhaps one day Egeria would be safe but clearly they would need to keep an eye north. Uleni was too set in their ways at the highest levels. When they stopped for the night, set up the tent, and started cooking dinner he brought up his concerns.\n\n\"I'm a little worried what will happen once we destroy the altar and the books. I don't want to borrow trouble, but I have a feeling if it wasn't for needing me to get rid of the altar, Uleni wouldn't be quite so tolerant. I wouldn't be surprised if we broke the altar and found a dagger in our backs.\"\n\nSara said, \"I think you are right, they are worried about you. Not all of them, some like Ross and the other mages that were with us simply want to help make things better. But King Luis? I wouldn't trust him.\"\n\nHe frowned, if Sara was concerned he knew there was a good reason to worry.\n\nNicole said, \"If we need to, we can fight our way out,\" she shrugged, \"I don't think they have the troop strength to take us. Especially when we are in their castle with limited directions to come at us, we could hold them off easily. I think we will be mostly at risk while leaving, in the city.\"\n\nHe pondered that for a moment, \"Okay, how about if Sara thinks they are going to betray us, we will take the secret way out Trina knows, avoiding the city altogether, then run for it. Some of them could keep up, but not enough to truly threaten us I don't think. The trick will be leaving without setting off a war they can't win and we don't want to fight.\"\n\nNora nodded, \"I can get behind that plan, although I'll be honest, it is tempting to clean house. I hate the idea of baby girls that could grow up to be just like Sally being killed. Still, that isn't the best way to get people to change either.\"\n\nNicole added, \"That is tempting, but it could screw up what we have going in Egeria as well. Ross might object, and possibly retaliate against my brother. I hate politics getting in the way of saving the young female mages though. Maybe we could help without starting a war. Send in teams to monitor villages and get female mages out of the country somehow? I don't know.\"\n\nThey discussed a number of possibilities as they ate their dinner. He wasn't sure what would come of it, but he planned on talking to the king when he got back to Abelaweth. Surely something could be done, perfect or not, to save at least some of them.\n\nNicole pulled him into the tent after dinner, and made him forget all about enemy kingdoms and the fact they would be facing off with a god in just twenty four hours...\n\n----------\n\nNicole wouldn't admit it to Justin, but her plan scared the crap out of her. If she were wrong about it, they would all die. Justin, her, all the other mates and their unborn children, just gone. Still, it was their best and possibly only chance at success. \n\nShe lost herself in his arms and opened her body and soul to him as they made love. She just couldn't imagine this being the last time. It couldn't be, she wouldn't allow it. When he angled his stroke and started hitting her g-spot, she stopped worrying about anything, for quite a while...\n\n----------\n\nThey packed up in silence, all of them lost in their own thoughts. Justin found himself praying to Cytherea, but she wasn't giving him any hints either way on if it would work or not. He hoped they would be able to snag the books and find another way, although he doubted it would make a difference. If there was another way, the goddess would not have needed to create his talent in the first place.\n\nThey were barely traveling for an hour when Nicole landed in front of them, a couple of hundred yards out and changed. They slowed and stopped and he wondered what the heck was going on now?\n\nNicole reported, \"There is a group of large soldiers a half mile ahead, blocking the road. I also saw a couple of people dressed like the mages do here.\"\n\nNora asked, \"Is there a way around, should we just avoid them?\"\n\nHe pursed his lips in thought and said, \"Let's go see what they want. I was expecting this on our way out, not on the trip in.\"\n\nNo one looked thrilled at the idea, but they walked that half mile at a normal pace. He was all set to respond quickly to any attack and trying to keep his anger at bay. The people of Uleni were starting to really piss him off, and for him and his magical talent, that was a deadly mistake.\n\nWhen they came in sight of the road block, one of them started to walk toward them. As Nicole had told them, he could see the man was dressed as a mage. As they got closer together he could make out the mage's expression, it was neutral, and a little nervous. Still, he didn't relax all that much.\n\nWhen they were close enough not to shout the mage said, \"Greetings, I'm mage Stephen. We had reports you were coming back, and that there was a confrontation yesterday that was averted? King Luis sent me to escort you the rest of the way to avoid misunderstandings, and he thanks you for showing forbearance in dealing with the mage and guards.\"\n\nThe mage continued after making an apologetic face, \"Some of our law enforcers can be rather... insistent. He had assumed when you returned Ross would be with you to smooth things over, and he only recently got word of what happened there.\"\n\nHe looked at Sara and she shrugged and nodded. He wasn't too happy about an escort, it would be exhausting watching their backs constantly, and it would slow them down. He didn't really see an alternative though, outside of starting another war.\n\n\"Very well, it would be good not having to worry about a repeat of yesterday. Do you know how long it will take us to get back to the capitol?\"\n\nStephen looked surprised by the question, then a rueful look came over his face, \"I wasn't very clear was I, by escort I meant travel. If you agree I can have us outside the capitol in moments. The soldiers behind me are local to the village straight ahead, I am the escort.\"\n\nPerversely, now he was panicking about there not being enough time. He had his mind set on having the day before facing the task of the altar. He was more or less resigned to the battle for himself, but his emotional reaction toward putting his mates in danger so soon had him reeling. He managed to keep it from showing on his face, but it wasn't easy.\n\nStephen gave an understanding smile, completely misinterpreting their reactions. \"I'll give you time to talk it over, but I assure you it's completely safe.\"\n\nWhen he was far enough away not to hear Katrina asked, \"Is it safe?\"\n\nSally said, \"It should be, he can't do anything to us without doing it to himself anyway.\"\n\nTrina chimed in, \"I have travelled a couple of times, it is uncomfortable, but not dangerous. It can be for the mage on their first attempt, but once a mage learns to do it...\"\n\nThey talked about it for a minute, but they all knew they really didn't have much of a choice. They called Stephen back over. He warned them not to move around too much, or panic at the sensations, then started.\n\nIt was strange, he felt something like a tube wrapped around him, crushing him, but before he could even start to worry something was going wrong, the feeling receded and they found themselves a few hundred yards from the city walls. It was a bit jarring as his mind caught up.\n\nHe blew out a deep breath and said, \"That was different.\"\n\nStephen smiled. \"You did well, most of the time people get vertigo the first time when their surroundings change like that and empty their stomachs. Just let me know when you're ready and I'll escort... walk you to the palace.\"\n\nNow that the mage mentioned it, he did feel a little queasy. They did a quick check of their gear as they recovered. Everything seemed good.\n\n\"Lead the way...\"\n\nAt first the streets were crowded, some people gazed at them fearfully through the guard that escorted them from the gate, and others looked suspicious as they cleared out of the way. But a short way in, word must have travelled ahead because the crowd thinned out and they were able to travel faster. \n\nIt was a tense walk, he was pretty sure if they were going to do anything, it would be after the altar was taken care of, yet, people often did the unexpected. The soldiers were fairly close to him, and he felt like he was on a hair trigger. But the soldiers stopped at the castle gates and Stephen led them by himself up the stairs and into the large structure.",
        "He felt a shiver go through him, as he once again felt the altar against his magic. It felt like a cold steel blade was held against his throat, and he could swear he could feel blood dripping down his neck. It was eerie. He wondered how anyone could live here when he noticed he wasn't really seeing anyone. Maybe they had abandoned the place for now?\n\nStephen had a hitch in his voice, \"This is as far as I go. Take those stairs down and follow the corridor, you won't miss it. Your witch can take down the stone wall we put up. Good luck.\"\n\nHe watched as Stephen went back the way they came in, at almost a run. That answered his question on if anyone was still in the castle. \n\nNora said, \"Well, at least we know we won't be ambushed right away, there isn't anyone here to do it.\"\n\nThey started down the stairs, and when they were halfway down it felt as if the blade at his neck was digging into his skin. He embraced his talent, but sparingly, surrounding him and the ladies in a thin cover of dancing white flames. He took a deep breath and continued down the stairs and followed the corridor. When they reached a wall in the corridor, Sally took it down, and they stepped through the exposed door.\n\nThey looked around the room with the altar in it. It was well lit, another reminder this was not a dark god they faced, but a true god of their universe. It was also the treasury, so they saw gold, jewels and what must be important papers. They did not see any books.\n\nThe books were gone.\n\nHe just stood there, looking around the room again, mad at himself they did not at least destroy the books last time they were there. They had agreed it was too dangerous to do so when they weren't ready to face the altar, but that was scant reassurance in the face of having lost the opportunity to destroy them.\n\nHe sighed, letting go of the anger, it wouldn't help them right now, or ever.\n\n\"Are you ready?\" he asked, not quite hiding his nerves.\n\nChapter 15\n\nThey surrounded the altar and held hands. Without the books there was no choice, he was confident it would work, but not certain, and that bugged him quite a bit.\n\nSally said, \"Wait! The ceiling is spelled to collapse when the altar breaks. I can barely feel it with the aura of the altar messing with us. I would have missed it had I not been so sure they would betray us.\"\n\nHe flared his power, pushing out white flames to cancel any nearby magic.\n\nSally looking relieved said, \"Good, you got them, and probably others that I couldn't sense.\"\n\nHe said, \"Ready?\"\n\nThey all nodded and he bowed his head to pray to his goddess as the others did the same.\n\nNicole's plan was simple if incredibly risky. If him giving up his free will to the goddess gave her great power and the ability to act, how much more powerful would she become if they all did it? The sacrifice of their family, bound together by love, their mate bonds, and his magic as the Flame of Cytherea.\n\nOf course, there were risks. If they failed, they would all die. The other issue was they all had to mean it, it wouldn't be a sacrifice otherwise, they all had to be willing to die, and give over their souls to Cytherea's care. The last concern was the power that was channeled through him last time was almost overwhelming; would his body be able to deal with six times the power? That was even assuming the rise in power would be linear, it may be more than that.\n\nHe had no more time for doubts though, and gave everything he was to the goddess in hope and love. He closed his eyes at the bright white light that filled his vision, but it was so blindingly bright closing his eyes didn't make much of a difference. He felt power, and the love of the goddess fill him, but his body screamed in pain at the same time as if he was being burned from the inside out. He thought he heard a scream of rage and the altar crack as he lost consciousness.\n\n-----------\n\nKatrina caught Justin as he collapsed. Justin had been the focus of all the power so the rest of them had at worst, spots in their eyes from the light. She noticed the books against the wall and pointed them out.\n\nSally said as Nicole burned the books to ash, \"Ares must have hidden them somehow in the altar's aura. I guess he was trying to preserve a chance to get back here if we succeeded.\"\n\nSara looked down at her and the unconscious Justin with concern and said, \"I feel people approaching, coming in the castle doors now. What do we do...\"\n\nShe understood what Sara had left off at the end, what could they do without Justin able to protect them? They might hold their own for a while, but eventually... His body felt warm in her arms, too warm really, as if he was in a fever.\n\nShe knew how Justin must have felt that day when she looked to the door, and saw Trina staring at them all with awe and reverence on her face.\n\nTrina said, \"Follow me, I think I can get us out of here.\"\n\nThey heard from out in the hallway, \"The structure is still intact, the spells didn't work, go get more soldiers and mages, hurry.\"\n\nShe gave Justin to Nora and transformed, darting into the hall quickly she saw there were only three people there. Two were mages, and much more powerful than she would ever be.\n\nBut she was quicker. Spells take the marshalling of thought and will, her claws, speed and instincts won out as she mauled all three in a blink. Perhaps that would give them some time. She wasn't sure how long others would wait before checking up on the three she killed.\n\nTrina shook her head and said, \"This way,\" and led them deeper into the underground hallways.\n\n----------\n\nNora carried Justin in her arms and held her magic tightly in her mind's grasp. She reminded herself over and over he was still alive. They hadn't been able to wake him though, and he was the only one who could heal his injured body. She very carefully tried not to let that panic her.\n\nNora had forgotten that since Trina was once an assassin for Uleni, she would know the layout of the castle. She tried to focus on what was going on, rather than the life in her arms that was far more precious to her than her own. King Luis had made a mistake only sending a few people to verify their deaths, hopefully that would be enough for them to escape.\n\nAlthough she was tempted to turn around and fight, without Justin they would have no chance against the numbers Uleni could bring to bear.\n\n----------\n\nWhen they came out of the tunnels they were behind the city. They made for the tree line and entered the wilderness away from any roads. Nicole knew they needed to find a place to hide and plan, but it still bothered her they were going the wrong way, deeper into Uleni. They travelled for most of the day on foot, not using magic at all, and made it maybe five miles into the forest before setting up camp.\n\nShe watched as Sally cast her magic on the tent, hiding it and them from magical detection. She was relieved when Sally explained.\n\n\"Even if a mage flies over as a bird, he won't detect our magic, as long as we aren't using it.\"\n\nShe checked on Nora and Justin, he was still out. Nora was trying to get some water into him and she was a little freaked out by everything, and angry. They hadn't planned for this at all. All their plans had assumed they would either be dead, or all okay, no one had guessed Justin would be struck down.\n\n\"What should we do?\"\n\nNora shrugged, \"Lay low until Justin recovers...\"\n\nThey all went to bed reluctantly when Justin didn't stir for the rest of the day, if only he would wake up, she knew he could heal his body...\n\n------------\n\nSally woke early and got Justin to drink some water, using a trickle of her magic to make sure it went down the right pipe. They really hadn't had time yesterday in it all, but she couldn't help the awe she felt at her experience. All the goddess's power went through Justin, but they had all felt her presence, and the love she felt for them all. It had been a life changing experience for her.\n\nShe knew of course the goddess loved her, she felt it each time she used her magic, but yesterday's experience had been so much more... intimate. As if her soul was cradled by the goddess herself. She struggled to truly define it.\n\nNow if only Justin would wake, it would all be worth it.\n\nSara woke up, so she asked her, \"We still alone?\"\n\nSara tilted her head for a second, then said, \"No one in range, I think we are okay.\"\n\nThey spent the morning making plans. It would take a week, but they decided to go back under cover, rather than quickly over the road. The mages in Uleni communicated and moved too quickly for that to be an option. They even brought up the idea again of simply attacking when Justin woke, but they decided there was little chance of getting anyone better to run the country. Uleni was one enemy they would have to suffer.\n\nNone of them thought Uleni would push the issue if they escaped back into Abelaweth, they were simply too weak right now to go to war. Sally sighed, they were a bunch of ungrateful bastards is what they were.\n\n-----------\n\nSara was worried. She hadn't told anyone, but she couldn't feel any emotions from Justin. None at all. It was like he wasn't even there. She refused to give up hope, she had never felt nothing from a living body before now, but that didn't mean his soul was gone, did it? How could it be?\n\nThey were finally done, all they had to do was escape this cursed kingdom and they could settle down in their tavern and enjoy life, raise their children. That was all she wanted for her whole family. A normal life well earned by service to the goddess.\n\nWas that too much to ask?\n\n-----------\n\nTrina was shaken. She still didn't thinks he was especially deserving of Sara, but after yesterday's experience she was sure the goddess loved her despite what she was in the past. She could tell Sara was bothered by Justin's condition even if she wouldn't talk about it, and she hoped he would recover. \n\nThey had all been through so much, it seemed unfair if they lost him now in the end. But if there was one thing Trina knew, life wasn't fair...\n\n-----------\n\nCytherea smiled as she felt the presence behind her.\n\n\"Do you plan on keeping him daughter?\"\n\nShe turned and looked at him curiously, \"You know I do not. I am simply waiting for his body to recover enough. Though it is tempting, he did give himself to me, why should I not keep his soul with me? I could use good company.\"\n\nIt was his turn to be curious, \"Are you teasing me daughter?\"\n\nHer lips twitched, \"Me father? Maybe a little, though I do get lonely.\"\n\nHe replied, \"Yes, you wait for one worthy of you, but why do you not spend time in the world with the mortals you love?\"\n\nShe frowned, \"Are you teasing me now? You know I cannot, not without influencing them as I had done in the past. You yourself have forbidden it.\"\n\nHe slowly disappeared as he said, \"Daughter, I simply said you can't go as yourself without impacting their free will... think about that for a while.\"\n\n------------\n\nJustin groaned, his body felt abused, and he had a splitting headache and couldn't think straight. It took all his concentration to get his talent going, and he started to feel better almost immediately as the healing took hold of his body.\n\nHe cracked his eyes open and saw Nora lying next to him. He was in the tent and wondered how the hell he'd gotten there; last thing he could remember was drowning in both love and pain. He was curious to ask what had been going on, and how long he was out, but Nora looked so peaceful and adorable asleep he didn't want to disturb her.\n\nHe looked around as his head started to clear, and everyone was asleep, so he closed his eyes, yawned and fell towards sleep himself. Being unconscious was exhausting...\n\nWhen he woke up the next day he found himself drowning in kisses from his beautiful mates. He must have been worse off than he thought. Eventually he got someone to explain their situation, which wasn't good. They fed him and he had to insist he was perfectly fine many times before they relented. His power had healed him after all, he didn't need to be coddled.\n\nHe agreed with their plans to head south without using magic, and it was close to noon by the time they started out. They made slow but steady progress as they made their way through the woods. He wasn't quite as bad a woodsman as he was when he showed up on this world, but he was thankful they had Katrina to take the lead. She seemed to be able to instinctively find game trails heading in the right direction without any problems.\n\nWhen they stopped and set up camp, had dinner and relaxed by the fire, he realized he must have been very close to death. They had been treating him like glass all day, and now no one had dragged him off. He laughed, grabbed Nora's hand and pulled her to the privacy blanket. Apparently he would have to prove he was very much better.\n\nNora resisted at first, looking worried, but when she gave in and kissed him it was a deep desperate kiss. As if she was afraid he would disappear on her.\n\nHe said softly, \"I'm here love, I'm safe with you. I'm sorry if I scared you,\" as he caressed her hair and neck.\n\nNora kissed him, her wandering hands making short work of their clothing. She didn't say anything, but the look in her eyes told him exactly how scared she was that she almost lost him. She pulled him down as she laid back onto the bedding. They kissed hungrily as he explored her petite supple body. When he checked, he found her ready but teased her core to orgasm with his fingertips, putting off his own pleasure for the moment.\n\nHe loved the scent of her skin as he kissed and licked her neck and shoulders. Her breath was short and fast, sweet sounds of pleasure exhaled from her lips as he brought his mate to bliss. His fingers were soaked with her sweet nectar, and he tasted them as he knelt between her legs.\n\nHe lined up and slowly impaled her in one firm forward thrust while staring deeply into her eyes. He could see the tears in her eyes as the emotions of the moment overwhelmed them both. He sighed in pleasure when he was fully buried, filling her, and he could feel her body clamp around him as she got used to his welcomed invasion.\n\nThere was so much love, passion and emotion in her eyes, and every touch, that he wondered if he would ever be worthy of it. He started to pump his hardened flesh in and out of her tight supple body, her wet heat pure pleasure. Their bodies came together in a physical manifestation of the deep love they held. It was all just too much for him to hold out when she screamed his name in pleasure and her center locked tightly around his manhood he felt his body preparing to explode in pleasure.\n\nHe rocked in and out a few more times, burying himself hard in her heaven as he released his seed deep within her willing body. They cuddled and kissed for a while, no words spoken as their eyes shared everything they needed to hear. A short time later it was time to start again...\n\nThe next few days passed as they made progress toward the border. They were sure Luis had groups hunting them, but they didn't run into any. On the fourth day, they did run into someone, but certainly no one that they had been expecting. They all froze and looked around when they heard the crack of a stick breaking. An animal wouldn't have done that.\n\nHe looked to Sara and to his surprise, she called out, \"It's okay, we won't hurt you. Come out.\"\n\nA young girl, no older than six came out with a guilty look on her face.\n\nSara said, \"Who are you? How did you get here?\"\n\nThat was something he was curious about too, they were far from any kind of civilization.\n\nThe girl made a face, \"Kelly, I'm not allowed to be out here.\"\n\nSara asked, \"Where are your parents?\"\n\nKelly pointed the way and started walking. They all looked at each other then started following. After about a ten minute walk, one moment they saw nothing but forest, the next step they could see a village. He heard a loud noise, maybe an alarm? He watched Kelly run to a couple of women in the village, who looked up at them and frowned.\n\nSally whispered, \"They are both mages, as is Kelly. There are a lot of them here.\"\n\nA number of women, and men, ran from the buildings, none of them looked friendly. He sighed, of course they didn't.\n\nHe cleared his throat as no one had attacked yet, \"Hi, we're just passing through.\"\n\nA woman said, \"And we live here in secret, it is our lives if the location gets out.\"\n\nNora almost growled, \"I suppose you won't take our word that we won't tell anyone? We are from Abelaweth. For that matter, you would all be welcome there if you don't want to hide in the middle of a forest anymore.\"\n\nHe heard whispered conversations of varying opinions. Some were tired of hiding and wanted to look into Nora's offer, some wanted to let them go. The worst being they were spies and should be dealt with. He wasn't about to let that last happen. These people were some of the ones he had been trying to figure out how to save. But that didn't mean they couldn't be on the wrong side of things as well.\n\nStill, they didn't seem bad, just scared. Which kind of surprised him, there were a lot of witches here, more than enough to fight if they had to. He wondered how this village had come to be.\n\nHe asked, \"There are a lot of you here, why are you hiding? You can come with us, Abelaweth will be safe for you.\"\n\nA man shook his head and said, \"We need to remain here, to rescue pregnant mothers that will bear a witch.\"\n\nHe guessed they must have some system in place, he rather doubted they would fill him in on it though. He almost suggested they fight, take over Uleni. But these people were clearly not warriors, they were just people who wanted to live in peace, who happened to be witches.\n\n\"We'll leave you be now, but remember our offer.\"\n\nA few looked nervous at the idea, but no one stopped them from leaving. He took that as a good sign but they didn't truly relax until they had a few miles lead from the village.\n\nAlmost another full week passed as they slowly made their way to the border. The twisting trails and terrain slowing them down more than they expected. There were a couple of close calls at the border, but they made it through without violence and headed to the capitol to let the king know what was going on. Whatever peace had been made wasn't worth the paper it was written on. \n\nOnly the reduced military of Uleni stayed their hand, he wondered how long that would hold true, and what would happen then. He promised the king he would be there to help, should Uleni invade again. It didn't feel like enough, but it was all he could do.\n\nNone of them talked about the hidden village they had found, spies were common, and though they would probably be safe even from a search, it would be better to keep their existence a secret.\n\nThey spent a few days at the castle, but ultimately left to go home. The tavern was undisturbed and it took them a day to get it back to the point they would be able to open. Even better, the beer they had brewed had aged enough to serve.\n\nAs the days turned into weeks, they truly made it their home and business picked up. First just passing merchants, then others came from the city.\n\nThey all celebrated when Sara was confirmed pregnant. He had five children coming, and plenty of work to do. The nursery he had thought so damn large when he first saw it, now looked impossibly small. He didn't imagine for one second they wouldn't have more after the initial group of five.\n\nBesides work for the tavern, he was sought out for healing almost daily, and at least once a week went into the city for the day. Usually Nicole joined him for the trip and spent the day at the palace as he healed anyone who needed it, often not charging for his trouble. The king supported this, by not charging him for the office space.",
        "It wasn't easy, and would get harder when the children came, but he'd never been happier.\n\nEpilogue\n\n...Five years later.\n\nShe was a stunning young woman, just twenty two, and quite tall for a Cytherean woman at five foot ten inches. She had long curly golden blonde hair, blue eyes, and a body with curves in all the right places. She had started out a few years ago selling spices and herbs from Egeria in northern Abelaweth thanks to the peace brought by King Anton.\n\nBut today was the day she opened up her own shop. She chose the village a few miles outside the capitol city. It was a new village, sprung up around the tavern that used to stand alone. She knew her business would do well there as she had always sold out her large cart when passing through, and even had buyers lined up in the city.\n\nOf course, there were other reasons for her to set up here. The Flame of Cytherea worked at that tavern, as did his five mates. He also had a large number of children, twelve last time she had come through. He had been the reason behind the relatively quick growth of the village, and she was more than willing to jump on that bandwagon. She had a very personal interest in his life.\n\nShe got her stock organized and shelved, then crossed the street and entered the tavern for lunch. She chose a table in the corner so she could see the whole room. She loved to people watch; it was endlessly fascinating to her. Although, she wasn't here to just watch, she was here to be a part of it all.\n\nSara smiled at her from across the room carrying a plate of food and a beer her way.\n\n\"Hi Reah, it's nice to see you again, we are running low on those spices.\"\n\nReah returned the smile and said, \"Even better, I'm the one opening a shop across the street. No waiting for me and my rickety cart any longer.\"\n\nSara snickered. \"You'll have to watch for our children, no doubt they'll be bugging you for those stories you tell every time you come through.\"\n\nShe shrugged, \"I have a lot of stories, I won't be running out anytime soon.\"\n\nSara said regretfully, \"I need to get back, Katrina is a slave driver. We'll catch up later?\"\n\nShe nodded happily and said, \"I'll be here.\"\n\nThere was truly no other place in the universe she would rather be...\n\n\n\n\nHoped you enjoyed it! This story is done...\n\nI figured I'd leave it up to your imagination on what, if anything, happens between Reah and Justin, because, I'm just mean that way. :)"
    ],
    "authorname": "Magicwrtr",
    "tags": [
        "magic",
        "mage",
        "polyamory",
        "harem",
        "other world",
        "goddess"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/foc-ulenis-gamble-04"
}