{
    "title": "Captured Ch. 04",
    "pages": [
        "Sorry for dragging my feet on this one! Have to admit, this series is more work than the others. Not sure when or if I'll continue, it's getting complicated! At least there's finally some action in this one ;)\n\nThanks for your feedback and votes. \n\n~I write for pleasure. I post for joy~\n\n******\n\nCrouched by the edge of a cliff, Thoran emptied a coarse wicker bag upon a pile of smoking coals. The items gently smouldered, before a small amber flame flickered to life. With a satisfied smile, Thoran retrieved a long, single blonde hair from his pant pocket. Once added to the pile, the flame quickly flared to a fierce, blue blaze.\n\nBored, Thoran ran a hand through his tidy black hair, and sat back. The muscles across his broad back rippled as he relaxed, his dark eyes moved to the large expanse of wilderness while he waited. An hour passed and still the flame burned, slowly decreasing to the size of an egg. The remaining blue tremored, spluttered and then all trace of light was gone. Thoran's interest returned as a wave of sparkling blue rose in the air above his head. Then the sprinkling carried off, like a tiny flock of birds.\n\nThoran abruptly gathered his things to follow its direction. While he travelled, his thoughts centred on Sirah, particularly their upcoming binding that she had yet to accept. But it was not her choice. Pondering her physical beauty, her shy, innocent nature and the occasional streaks of rebellion, Thoran contemplated their future. The captured nymph was something of a new discovery, having already displayed various curious snippets of unknown power. Power untypical of a nymph, or any species he knew.\n\nAnother day's journey passed with the sun disappearing rapidly at the horizon, and Thoran chose to sleep under the stars. It was well into the night when he woke. He briskly sat up and stared around, his sharp, black eyes noting every detail in his line of sight, until he saw her.\n\nIt was a mortal girl, unwittingly drawn to his presence. Thoran frowned, unaware humans resided nearby. She was young, and clearly at the peak of adolescence. It was the time weaker beings were most susceptible to desire.\n\nThoran rested his forearms across his knees as she watched him breathlessly. He knew the girl thought herself hidden, and knew her heart pounded with fresh, voyeuristic excitement when he looked her direction.\n\nThe idea of seducing the girl only mildly interested him, and Thoran realised the true weight of his preoccupation with Sirah. Though pleased to have found an exceptional mate, he was irked by his weakness. Resentful of the fact that if Sirah somehow escaped him, Thoran could not revert to his prior life. He would find and claim her again, even if it took all eternity. He would always hunger for her.\n\n\"Come out, girl,\" he called, and heard her gasp. The girl timidly stepped out of hiding, and walked right up to him.\n\nNo older than fifteen, she seemed shocked by her quick approach to a complete stranger in the night. With long, chestnut curls and dark brown eyes enlarged with stunned desire, the girl's innocence was palpable.\n\n\"Why have you left the safety of your home?\" Thoran asked, not unkindly. The girl tremulously smiled, still nervously gripping the front of her ivory nightdress.\n\n\"I don't know,\" she answered honestly, her long locks spiralled about her waist as she shook her head with confusion.\n\nThoran pursed his lips as the girl's eyes boldly roamed his muscular physique, every toned shadow enhanced by the moon. Thoran was glad to be wearing pants, feeling in this rare instance he was the one needing protection.\n\n\"Go home,\" he brusquely ordered, laying back. \"If you feel restless again, wake your parents. They will explain the danger of your actions.\" Thinking the matter settled, Thoran closed his eyes.\n\nThey flew open with astonishment when the girl ignored his advice and crawled atop him. Her trembling hands stroked his strong chest and arms, a small keening moan escaped her lips when she pressed her lower body against his groin. Thoran cursed, forgetting how powerfully humans felt their desires.\n\nHe wondered if he should sear the girl with pain to make her run from him, screaming. Though he cared little for the welfare of vulnerable beings, the girl's determination to ruin herself was frustrating. But Thoran was angrier with himself that his desire was lacking. Even with the virgin straddling him, he did not want her.\n\n\"You are the most handsome man I have ever seen,\" the girl confessed in an honest whisper. \"My father would have me wed a boy I've never met. I would rather give myself to you.\"\n\nThoran sensed the vibration of her beating heart, quickly accelerating as he met her eyes, shining with hopeful invitation. Thoran caught the scent of her wet arousal creeping down her thighs. Not sweet as Sirah's unearthly nectar, but still tempting with virginal allure.\n\n\"Be grateful to be matched with a boy, and not an old man,\" he murmured, sitting up to firmly lift her from his lap, somewhat bemused by his gentle manner. He'd not intentionally harm the girl, but he certainly had an abrupt, careless way with innocence.\n\n\"Go home,\" he commanded. \"If you will not be harshly punished for leaving your bed, tell your parents. Your actions are dangerous.\"\n\nIn silent disagreement, the girl reluctantly got to her feet and resumed wringing her nightdress. Inadvertently pressing the bunched material against the throbbing ache between her thighs, she wistfully watched the unusually large, irresistible male abruptly gather his belongings and disappear into the night.\n\nWith his mind disturbed by a loyalty he never expected to show before binding, Thoran continued his journey without rest. The sparkling essence had settled at his destination, the sugary scent easy to follow, laced with Sirah's unique sweetness. None had attempted to stunt, destroy or otherwise interfere with the trace. His approach was welcomed.\n\nDawn broke, and Thoran's limbs mildly ached from climbing a steep interface for several hours. Heaving himself to higher ground, he stood tall and stretched, his black eyes alert to the surroundings.\n\nRolling green fields filled his vision, the hills lush with blades of grass shimmying in unison with the morning breeze. There was a scattering of red and yellow wildflowers, and a wide dirt path neatly cleared of flora led to a tidy cottage upon higher ground. It was an unexpectedly pleasant sight to behold. Thoran started when the voice of a woman disrupted his perusal.\n\n\"Greetings, demon.\"\n\nThoran made out a trim female figure in a pale-crimson dress, delicately perched upon a rock some metres away. She chuckled when he discerned her presence, and shed the glamour shielding her form.\n\nThoran stared at the pretty woman's long, purple-white hair that tumbled lustrously to her calves as she stood to greet him. He recognised her expression of impish amusement as the same mischievous glint in Sirah's eyes.\n\n\"You know my name,\" Thoran said finally, uncertain what manner to approach the witch.\n\n\"Aye, Thoran.\" With a playful light in her dark blue eyes, the woman gracefully curtsied, the gesture slightly taunting.\n\n\"You are Sirah's mother.\"\n\n\"By the reaches of dark magic, we learn many things,\" she bowed her head with more mockery than acknowledgement.\n\nThoran's lip curled, not liking her flippant manner or insinuation about him. \"Do you know why I am here?\"\n\n\"Of course,\" she answered with a sharpness that belied her frivolous demeanour. \"You have my daughter.\"\n\n\"Her father, Devan, has permitted me to bind her.\"\n\n\"Then why do you wait?\" she asked sweetly, her striking eyes flared with challenge.\n\nThoran hesitated. He could deal with demonic evil, with Devan's righteous dignity, and Sirah's petulant rebellion. But not something so ambiguously in-between. Thoran noted the witch's emotional mannerisms were her only resemblance to Sirah; almost all of Sirah's physical form was inherited from Devan.\n\nDeciding to take the conciliatory route, Thoran sighed.\n\n\"Your daughter will be well-treated, witch. I will treasure her.\" He straightened as the woman laughed merrily in a manner that made him feel like a fool.\n\n\"Have you any choice but to worship her, Thoran?\" she tittered, her tone jeering. \"You physically captured her, true. But who is beholden?\"\n\nThoran took a deep breath, disliking the truth of her words. \"Why does she not know you?\"\n\n\"I am a witch.\" The words were sharp and simple.\n\n\"You loved a nymph, and bequeathed him your daughter?\"\n\nPain crossed the woman's face and was quickly buried. \"It was a choice of two futures.\"\n\n\"Ah.\" Thoran nodded his understanding. Witches were evil creatures, with great gifts of foresight. So Sirah's mother sent her daughter the innocent path. \"How did you seduce a nymph king?\" he queried.\n\nThe witch stared, her blue eyes malevolently fierce. \"Keep to the purpose of your call. What you mean to ask, Demon, is what your union with Sirah will breed.\"\n\n\"Has she capacity for evil?\"\n\nThe witch laughed scornfully. \"Are you evil, Thoran?\" she countered, wryly smiling at his uncertainty. \"Since time began, your kind earned the title, 'Demon', and maintained it.\"\n\nAt Thoran's silence, she sighed whimsically. \"You are a demon. And yet, Thoran, you are not evil. Your brothers recognise and accept you as their own, despite your differences. Though if you were a weakling, I have doubts about the outcome.\"\n\nGiggling her amusement, she eyed Thoran's powerful body. \"Even your blood-brothers would not shield your demise. But with your unique...advantages, I am certain they would welcome you back with open arms.\"\n\nThoran glared at her with no reply. He did not make the journey to debate his own race.\n\n\"What do appearances tell us?\" Sirah's mother continued. \"Demons are beautiful sculptures of men, are you not? With such ugliness inside.\"\n\n\"What does that mean?\" Thoran demanded. \"Sirah's beauty masks something malevolent?\"\n\n\"No.\" The witch shook her head, her beautiful hair following the movement in a gentle sway that somehow resisted the breeze about them. She smiled at Thoran's unease.\n\n\"It means that appearances are not what they seem. But this is the first rule of demons, after all,\" she shrugged, aware her mysterious flippancy was maddening.\n\n\"There are no rules for what is unknown.\" Thoran raked a frustrated hand through his dark hair, aggravated, as predicted, by a fact that gave him no answer.\n\nThe witch arrogantly tossed her head. \"I do know this - should death befall Sirah, do not resurrect her.\"\n\nThoran's broad shoulders quickly tensed at the prospect his chosen might die and not return. Within a short space of time, he could not imagine his life without Sirah. The witch cocked her head at his brooding countenance, registering his silent refusal.\n\n\"Do not heed my advice, if you wish. I am only a witch, after all,\" she remarked with a careless shrug, though her features were grave.\n\nBefore Thoran could pursue the topic, the witch straightened with a sudden alertness, her fine brow pinched with concern. When she turned to Thoran, her eyes were genuinely troubled as they moved beyond him to the rising sun.\n\n\"Sirah is in trouble,\" she said distantly, peering out on the landscape as though receiving a message delivered by wind across many miles.\n\nAfter an unsettling moment, Thoran dismissed his inking of doubt. \"She might be discomfited, but I have prepared for-\"\n\n\"No.\" The witch appeared suddenly older by the piercing glare she fixed upon him.\n\nIt was a look carrying ancient wisdom that roused a fear in Thoran he'd forgotten himself capable. It was an expression that conveyed a grim message he could decipher without her speaking. Nonetheless, she voiced it.\n\n\"Hasten home, Thoran. Your mate is in danger.\"\n\nWithout another word, Thoran turned and took a running leap back the way he'd come. The witch's words followed him as he raced home, floating through his mind.\n\nNo harm will come of a binding. Love her, protect her, and be her Master. But know the union may yield a heavy price for your kind.\n\nThoran snarled at a group of stunned rabbits in his path that immediately scattered. \n\nWhat price? Thoran frowned heavily as the landscape passed him in a blur for the speed he travelled.\n\nSilence followed for many miles before a response came through. The witch's last reply painfully echoed between his ears in an ominous tiding.\n\nWar.\n\n********\n\n\"Back!\" Scarn hissed, and the blonde blood-brothers reluctantly moved behind him.\n\nSirah stood against stone, her rainbow wings flat against her back as she strained away from the demons cornering her. Pale-jade eyes wide with terror, she barely managed to quell the urge to scream for help. It would only give them satisfaction.\n\nPlyon and Vertar hovered restlessly behind Scarn as he slowly advanced on the petrified nymph. Sirah wanted to close her eyes, but couldn't bring herself to. All three would ravage her, for certain. There would be nothing left but a tattered dress to greet Thoran's return. Thoran seemed enamoured with her, and attentive to her comfort. How could he abandon her to this fate?\n\n\"Be easy, little nymph,\" Scarn spoke serenely, his eyes glowed with predatory desire. \"We will not harm you.\"\n\n\"Then let me go!\" Sirah whimpered, turning away from Scarn's outstretched hand. His fingertips traced her elegant jaw, sending tendrils of discomforting lust from her neck to her toes.\n\n\"Come, now.\" The purring male voice was suddenly by her ear, and Sirah squealed as Scarn encased her in his muscular arms, lightly crushing her against the disconcerting heat of his bare chest.\n\nA deep, relieved sigh escaped Scarn when he clasped the nymph to his body. Smoothing his hand to flatten her frantically fluttering wings, a sharp, tingling pleasure flowed down his fingertips. The desire that drew him to her intensified with contact, and he learned firsthand how the girl uniquely affected him.\n\nScarn was visually alluring, but Sirah infinitely preferred Thoran. Bewildered and miserable, she squeezed her eyes shut, wishing she could close her ears to the chuckles of the watching Demons.\n\n\"I claim you,\" Scarn suddenly announced. His clear, deep voice cut loudly through the tunnels as though making declaration to a crowd of spectators.\n\n\"I pledge to be your mate. I pledge to be yours, as you will be mine. You will be shielded from harm by my nation of brothers. I will be your master, and you will serve me. You will forever exist beneath my protection and accept my word as the highest law inferior only to that of the council...\"\n\nNo longer sniggering, both Plyon and Vertar's jaws dropped and they exchanged a startled glance.\n\nSirah cried out and fiercely struggled. A terrible warmth emitted from Scarn's body, the earthy surrounds shuddered by his words. Sirah trembled, acutely aware of an uncomfortable sensation. It felt like a rusted, invisible chain trailed up her body like a hungry serpent, cruelly scraping her soft flesh. The chain's end slowly fastened about her neck to form an intangible, unbreakable collar.\n\nThe blood burned in Sirah's veins, thickening as the bind took hold. By the awful sensation, she imagined her blood blackened like congealed oil boiling deep within the Earth. Weak and overwhelmed, she dimly realised Scarn was speaking to her. As she scrambled to clear her tormented mind, her chin was pinched in a vicelike grip and forced up to face her tormentor.\n\n\"Your name, nymph. I command it.\"\n\nSirah sighed deeply, her beautiful eyes fluttered open.\n\n\"You are not my Master,\" she feebly uttered.\n\nImmediately she screamed as blinding pain answered her disobedience. It seared every inch of her, and she writhed desperately in Scarn's unyielding hold. Despite Sirah's suffering, her senses warned it was vital to refuse his demand.\n\n\"How long can you resist?\" Scarn's handsome mouth formed a cruel smile against her parted, gasping lips. \"Your name, nymph. Tell me your name. I command you.\"\n\n\"I...No, please! I...\" Sirah stiffened as more agony passed through her. Tauntingly, Scarn's lips caressed her ear in a sensual murmur.\n\n\"I adore your voice, sweetling. Little do you know, I am being gentle with you. Now, answer me.\"\n\nSirah stubbornly shook her head, and Scarn pursed his lips at her spirited nature that was both irksome and captivating.\n\n\"Very well...\" he drawled, with that familiar evil smile of accepted challenge.\n\nSirah shrieked and almost slipped free. But Scarn held her steady and enjoyed her torment, aware she endured a pain few creatures could survive. Her resilience was impressive, but nonetheless an obstacle.\n\n\"Enough foolishness, nymph. What is your name?\"\n\nIn addition to the pain pulsing through Sirah's limbs, a pounding headache surfaced as Scarn's voice mercilessly pierced her mind. Every word delivered staggering pain, as though he pressed the tip of a thin blade through her skull.\n\nAnswer me.\n\nAccept me as your master.\n\nI will stop the pain.\n\nAnswer me. \n\nTell me your name.\n\nI will stop the pain.\n\nTell me your name...\n\n\"Sirah!\" she sobbed miserably, relenting as her body again defeated her mind.\n\nAs the disclosure escaped Sirah's lips, her regret was instant. Scarn did not hesitate, and deftly trailed his hand through her long, blonde hair to form a fist. For a moment his lips kissed her cheeks, relishing in the taste of her tears. Then, keeping his grip amongst her fair locks, he forced their foreheads together.\n\n\"I bind you to me, Sirah. I bind you now as my...\" Scarn trailed off, recognising something was awry. With Sirah still clasped to him, he spun to Plyon and Vertar, who stood watching with their mouths still hanging open.\n\n\"What have you done?\" Scarn snarled.\n\nSirah gasped relief as the invisible clasp about her throat dissipated. The mysterious chains entwined about her body dissolved into a bad memory.\n\nPlyon shook his head. \"We did not interfere. But Scarn, this is a great wrong-!\"\n\n\"What have you done!\" Scarn shouted, releasing Sirah to step threateningly toward the blood-brothers.\n\n\"They have done nothing,\" Thoran silkily answered from behind Scarn.\n\nThe flustered demon turned back with a curse to see Thoran standing with Sirah, who looked dazed but wholeheartedly pleased as she leaned against him for support. Though Thoran spoke lightly, his tone was lethal.\n\n\"You could not bind her, when I have this.\" Thoran dipped a hand into his pocket to display Devan's glowing purple stone. \"Willing permit from her father to claim her as my own. She is no mere prisoner to be happed upon by any scum. She is rightfully betrothed to me. I alone am entitled to her.\"\n\n\"What fool would bequeath his daughter to a demon!\" Scarn spat, glaring at the precious gem.\n\n\"A king who loves his daughter.\"\n\nOpening his mouth heatedly, Scarn changed his mind. Turning to Plyon and Vertar, his eyes were desperate. \"You saw what she can do. She is wasted on one demon. She could be Queen to all our kind!\"\n\n\"And I suppose you should be King, as mastermind of the scheme?\" Thoran bluntly mocked.\n\nScarn's cheeks darkened to a deep red, aware his motives were increasingly transparent. His typical equanimity was diminished by his growing desire for the nymph.\n\nBut Scarn was consumed by a jealous rage that he could barely contain, and he was not one to display emotional conflict. He had never experienced such bitter anger to memory, not for several centuries, at least.\n\n\"The council should weigh in!\" he savagely argued.\n\n\"The rules exist for a reason,\" Plyon said slowly, unsettled by Scarn's erratic passion. \"If there were doubts, they would not have held so many centuries-\"\n\n\"They might reconsider knowing she is different!\"",
        "Plyon stubbornly shook his head, feeling quite relieved for Thoran's interruption. Though only a witness, his mere presence would have implicated him in a punishable betrayal. \"The laws are clear. It does not matter what species a demon chooses.\"\n\n\"Why are you so averse to my binding her, Scarn?\" Thoran said curtly. \"It will make little difference to our ways. Whatever the council determines, I am entitled to the mate of my choosing.\"\n\n\"And I want him.\" Sirah surprised them all as she unexpectedly joined the fray.\n\nThoran was particularly taken aback by the resolute tone in her soft, tantalising voice as she challenged one of the most feared demons of their race. Who would have thought a traumatic encounter with his brothers would have her accept him?\n\n\"It wouldn't matter if you didn't!\" Scarn sneered, infuriated that the delectable creature dared openly spurn him for Thoran. \"And it will not matter if the council decides that I am a better mate for you-!\"\n\nScarn extended his hand, but Thoran laid his own upon Sirah's shoulder and drew her back into his protective energy before Scarn's lure could envelope her. Though Thoran's movements were controlled, he was profoundly angry, and a black smoke much like Devil's Mist shot toward Scarn's face. Scarn dodged, skill keeping his hand out to Sirah, who, although alleviated by Thoran's touch, suffered unsettling vibrations from the lure.\n\nThoran stepped in front of Sirah to face Scarn, and the two demons snarled at each other, braced to fight.\n\n\"Cease!\" Plyon bellowed, stepping between them.\n\nScarn looked Plyon in the eye. \"The day will come when you regret this foolish loyalty. When you will rue having scorned an opportunity that will never come again.\"\n\n\"You would end the codes that safeguard and strengthen our existence?\" Plyon accused angrily. \"You would destroy it all, and create anarchy among us?\"\n\n\"Just look at her, fool!\" Scarn hissed, shuddering with the urge to send another lure Sirah's way, but she was now blocked from him, by both Plyon and Thoran.\n\nBlack, seething hate clouded Scarn's mind. \"Do you think as the years go by, the power of her lure will lessen?\" he snarled. \"Do you think after a hundred years, or as little as ten, she will cause no upheaval among us?\"\n\nThe painful image of watching Sirah from afar lit an unfamiliar fire within Scarn. That Thoran, of all demons, would have the privilege of kissing Sirah's sweet, innocent mouth and using her soft, virginal body to satisfaction whenever he pleased, seemed an unendurable offence.\n\nScarn imagined the exiled demon claiming Sirah, thrusting against her, their mouths hungrily merging. Whilst at that very moment Scarn could still feel Sirah's unusual magnetism, clawing under his skin as though she called to him alone. He was a feared warrior, more worthy of her than Thoran. At this last thought, something inside Scarn snapped.\n\n\"Do you think anarchy will not follow from a creature all demons desire?\" he screamed in a rare rage, wishing he could tear off the heads of his brothers and steal off with the nymph.\n\nPlyon and Vertar exchanged an uncertain glance. If a demon bound an invaluable mate, that was one thing. But there had never existed one that attracted all demons with a compelling lure. Lures were weapons only malevolent creatures possessed to entrap, control or torture.\n\nIf other demons were half as affected as Scarn, there would certainly be war. Looking to the girl, Plyon imagined watching her over the years, tantalised and tempted by her bewitching aura. He would certainly not visit Thoran often.\n\nDespite Scarn's argument, Plyon had faith in the basic code of his kind. He enjoyed a simple life and would rather maintain it than break the laws by crossing a brother he respected.\n\n\"Take the matter to council,\" Plyon growled.\n\nVertar tentatively nodded agreement. Thoran merely raised a smug eyebrow, though his black eyes sparked with loathing.\n\n\"You worthless crusts of dirt!\" Scarn roared.\n\nSirah cried out and turned her face to Thoran's wide chest, his thick arms encircled her protectively. The demons stood otherwise unmoved as Scarn was engulfed in a circle of black and red flame. The thick smoke rapidly snaked from their presence to the cavern exit.\n\n\"Always one for display,\" Thoran remarked, his eyes still glowing with ferocity.\n\n\"Aye. We must go,\" Plyon muttered. \"I have never seen Scarn beset. Not even in war.\"\n\nStill simmering with anger, Thoran didn't comment. Though grateful his brothers' took his side, they also stood idle while Scarn attempted to bind Sirah in his very own abode. There were only two demons who might have intervened on his behalf, but he had laid eyes on neither for decades.\n\nPlyon hesitated. \"If you wish to have Scarn before the Council for trespass-\"\n\n\"I may count on your testimony?\" Thoran sweetly finished.\n\nPlyon and Vertar nodded. Vertar's eyes were fixed on Sirah's small, tremoring wings.\n\n\"I thank you,\" Thoran said curtly. \"But to proceed that path will inevitably draw my mate into the proceedings, being the core of the matter. I wish to avoid her exposure.\"\n\n\"Wise, Thoran. You always were,\" Plyon grinned, his ice-blue eyes flickered Sirah's direction. \"You should bind her, and quickly.\"\n\nThe blood-brothers turned from Sirah and Thoran, and quickly vanished toward the exit.\n\nThoran glanced down to where Sirah still pressed her cheek to his chest. He indulgently tucked a silken gold strand behind her soft ear.\n\n\"So, you choose me, little one?\" he teased, making light of the intense circumstances as his eyes scoured her for injuries. \"They did not hurt you?\"\n\n\"Only a little,\" Sirah sighed, preferring to answer the latter question as Thoran's large hands touched and stroked over her body, igniting a natural chemistry she found difficult to resist.\n\n\"And you want me?\" he asked, half-believing he misheard her adamant declaration.\n\nSirah bit her lip, tracing the firm contours of his smooth chest with the tip of one finger, feeling the familiar enticement she craved since his absence. It was only now that he was with her, she realised how much she wanted him. Though pleasant, it was also humiliating after being so determined to resist him.\n\nThoran gently tilted her chin to look up at him. His face was beautifully masculine, and his passionate gaze created a strange urgency that made Sirah's heart race. The demon was huge, muscled, and nothing like any nymph she might have imagined wedding.\n\n\"And you want me?\" he persisted, his dark gaze boring into hers.\n\n\"Y-Yes,\" Sirah blushed, and shamefully lowered her head.\n\n\"Look at me,\" Thoran demanded, the intensity on his face softened when she reluctantly complied. \"Are you ready to be mine, Sirah?\"\n\nThe simple question held no threat, menace or imperious order. It held nothing less than pure enticement.\n\nSirah gazed at his handsome face, marvelling that her terrorising captor was now welcome in her presence, so much that she wanted to belong to him. After such misery for being taken from her home, she was now grateful for it. Realising he awaited an answer, she held her breath and slowly nodded.\n\n\"Do not be afraid,\" he murmured.\n\nWith the purple stone still in his hand, Thoran pressed closer. He bent to gather her into his arms so their foreheads could meet.\n\nRibbons of nervous excitement coiled within Sirah's stomach. She closed her eyes, aware Thoran continued to stare at her face. His deep voice melodiously echoed about her ears, not forcefully arrogant like Scarn's speech, but calmly determined.\n\n\"I bind you to me, Sirah.\"\n\nSirah immediately felt an invisible link coil about her legs and journey up her waist. It was flexible, sinuous, and less stilted than the coarse one Scarn summoned. It moved gently across her body, creating thrills rather than panic.\n\n\"I pledge to be your mate. I pledge to be yours, as you will be mine. You will be shielded from harm by my nation of brothers. As your accepted master, I am beholden to you. I will honour you as my mate, and will never act to endanger you, or your kin. I will forfeit my own life before harm comes to you.\"\n\nI bind you to me, Sirah.\n\nAn unseen, silken collar gently caressed her body, rising to clasp about Sirah's throat in a perfect fit as Thoran's charming voice entered her mind for the first time. The welcome, unusual sensation made her gasp. Her eyes flew open to meet Thoran's smouldering stare.\n\nI bind you to me.\n\nPanting, Sirah gripped the sides of Thoran's large arms for support as fresh, unfamiliar energy flowed through her. Though Thoran appeared unmoved, Sirah knew it affected him too. She felt it pulsing between them, as though their very essence merged into one.\n\nI bind you to me. Accept.\n\n\"T-Thoran?\" Sirah said unsteadily, almost jerking her head back with fear, but Thoran tightened his hold so they remained connected.\n\nAnswer me. Accept.\n\n\"I accept!\" Sirah whimpered pleadingly, frightened by the channelling energy.\n\nThe edges of Thoran's lips curved in a triumphant smile.\n\nSpeak to me, Sirah. Accept.\n\nSuddenly Sirah understood his demand. Her brow furrowed against his as she strained to comply.\n\nI accept.\n\nSirah's offering was so faint, Thoran barely registered it.\n\nAgain, little one.\n\nI accept.\n\nGood. More.\n\nI accept you as my Master.\n\nGood, little one.\n\nThey both jumped, fiercely clutching each other as the energy convulsing through them peaked, and slowly dissipated.\n\n\"Oh...\" Sirah moaned, and was quickly lifted before she fell. \"Is it over?\"\n\n\"Yes.\"\n\n\"Thoran?\"\n\n\"Yes?\"\n\n\"Your pledge was...different,\" she said dizzily, unsure exactly what she was asking.\n\nSirah knew nothing of demon bindings, but she was surprised he included her family in his promise, and that he would place her welfare wholly above his own. Then again, all nymphs knew was to avoid demons at all costs. Little was known about the particulars of their race, or none lived to tell if they did.\n\n\"From Scarn's?\" Thoran said distastefully, the glowing warmth ebbed from his face. \"Our oaths are of a similar vein, but individual to the demon and nature of binding. I imagine Scarn devised his binding oath to serve his own purposes. To bend you to his will.\"\n\n\"And you?\"\n\n\"I would have bound you by force, I won't deny it. But I want you for a companion, never to enslave you. I am rather fond of you, Sirah.\"\n\n\"But...nature of binding? What other reasons do demons take a mate?\"\n\nThoran sighed. \"Many reasons. Rarely for lust, as we do not want for victims. And almost never for love.\"\n\nWondering at his answer, Sirah opened her eyes as she was gently placed on her soft bed. Whether for briefly fainting or the speed of Thoran's steps, they'd arrived at the familiar part of his lair that he'd altered to her taste.\n\n\"And now?\" she shyly ventured, avoiding from his shrewd stare.\n\n\"And now, we are one. Or did the binding fail?\" Thoran smiled, knowing full well it was complete. A new addition of energy continued to surge through him. And he could sense Sirah's energy. He felt he could engage, absorb, exchange and manipulate it to his will.\n\n\"No, Thoran. I feel it,\" Sirah meekly confirmed, her eyes downcast as he checked her dainty wings were fully smoothed, before laying her back. \"But...I...\" Sirah forced herself to continue, blushing with embarrassment as Thoran's eyes intently rested on her. \"Now that I am yours...\"\n\nThoran laughed and caressed her cheek. \"And I am yours. We belong to each other. Now, rest. I must keep my promise to your father.\"\n\n\"But...\" Sirah wistfully protested, even as her eyelids became incredibly heavy.\n\n\"Sh.\" Thoran's fingers slightly trembled as he stroked sleek, light-blonde hair from her brow. \"I know what you desire. It will come.\"\n\nThoran indulgently watched his mate succumb to exhaustion. His eyes slightly hardened, knowing his brothers cruelly toyed with her. At least they were not foolish enough to hurt her. Scarn certainly knew better than to harm Sirah.\n\nThoran's lip curled with anger as he remembered the other demon's vindictive audacity in the binding attempt, and knew the matter with Scarn was far from resolved. In Scarns eyes, there would be a reckoning for his failure to steal Sirah.\n\n*******\n\nA day later, their arrival at Sirah's homeland caused quite a stir. All were curious to behold the fearsome demon who had, without violence, captured their princess and struck an agreement with their proud king.\n\nAwe and confusion greeted Sirah and Thoran as they strode hand-in-hand toward the castle. The petite, lovely princess docilely walked by her mate's side, seemingly unbothered to be united with the rather giant, enthralling male. Some claimed he was no more than an unusually large, attractive human, but retracted their assessment after managing a closer look at Thoran's lightly reddish skin tone and catching the flash of black fire in his eyes. Though Thoran kept his lure in check, many female nymphs found themselves eagerly tailing the couple for reasons other than curiosity.\n\nDevan was not there to greet them at the border, though the reasons for his marked absence were fairly predictable. A great part of him was still deeply upset about the loss of this daughter, and he could never approve or celebrate it. He was also afraid of what condition he would find Sirah. If he was to mourn her abuse or despondency, it would be privately with few present.\n\nThe crowds were left behind, and eventually the great hall doors slowly opened to admit Sirah and Thoran, who let Sirah walk slightly ahead of him.\n\nFrom his throne Devan watched, seemingly unmoved as Sirah's friends raced toward her. Tears flowed and laughter was abundant as Sirah was swamped by loved ones. Thoran cast his eyes to the tall ceiling with mild scorn as the nymph posse playfully circled Sirah. It was clear they appraised her for injuries by the way they continued to inspect her, then cast furtive glances his direction as though imagining the ways his intimidating size may have been applied to damaging effect.\n\nThoran slightly raised one eyebrow as Noah found his way to Sirah and planted a big kiss on her cheek. Within minutes, Thoran's mate was almost completely obstructed from view amongst a number of bustling wings, an array of bright colours. It was quite a beautiful display. None were inclined or daring enough to approach Thoran.\n\nLosing sight of Sirah, Thoran realised Devan watched him the entire time. Devan jerked his head, and Thoran immediately followed the hostile king into an adjoining room. It was a large library, with various old relics displayed throughout. Completely closed up from natural light, it was rather gloomy compared to the main hall.\n\n\"You kept your promise.\"\n\nThoran looked sardonic. \"As you knew I would. Why have you not greeted Sirah?\"\n\n\"She is occupied enough at present.\"\n\n\"Or perhaps you worry how she might receive you, after you forfeited her to me?\" Thoran perceptively suggested. \"Have more faith in your daughter's wisdom, Devan. She is not blind to the choice forced upon you. Your aloofness hurts her.\"\n\n\"And you know her feelings so intimately?\" Devan snarled, feeling helpless. It was true, he was terrified; haunted by the possibility Sirah might return as a brutalised shell of what she was. That she might look upon him accusingly.\n\n\"I do. An effect of the binding,\" Thoran sighed. \"And it is best you know now, that she can never visit you without my escort.\"\n\nDevan's good-looks were marred as he bared his teeth with uncharacteristic aggression. \"We had an agreement. Are you so fond of our lands?\"\n\n\"She is not safe without me.\"\n\n\"You lie. Demon brothers are obliged to respect each other's mates!\" Devan snapped angrily, his lip curled with disdain as he readied to debate a matter of custody. Thoran calmly interrupted the budding tirade.\n\n\"Do you know what Devil's Mist is?\"\n\n\"I do.\"\n\n\"Sirah broke through the strongest kind.\"\n\nDevan swallowed, looking uncomfortable. \"And?\"\n\n\"The ability is known to my brothers. But worse - she is desired. She has a lure, of a kind.\"\n\n\"She was always beautiful.\"\n\n\"No. More precarious, Devan. She has a lure attractive to demons.\"\n\n\"Did you not recognise this, when you first stole her?\" Devan sneered.\n\nThoran paused thoughtfully, remembering his excited chase. \"Not immediately. Her beauty caught my eye, so I thought. But after a short time in her company, I was certain in my decision to bind her. That is not a decision I take lightly.\"\n\n\"Enough.\" Devan waved a hand with contempt. \"You know her welfare is my priority. If you must be at her side for her safety, so be it.\"\n\nThoran narrowed his eyes. \"You knew about her lure. Is the enticement another black spell?\"\n\nDevan bitterly shook his head. \"No. The lure is natural, and only affects malevolent folk. Humans, nymphs, and the like, are enticed by appearances. But others are attracted in a way that has little to do with beauty. Even out of sight, some might sense her presence. It is the reason she was forbidden to leave our lands, even with escort. She would endanger others as well as herself.\"\n\n\"But you underestimated her wilfulness. Do you know where I journeyed, and why?\" Thoran asked slowly, approaching a new topic as Devan's face became masklike.\n\n\"What do you wish to say to me, Demon?\"\n\nThough Thoran shrugged, his eyes were accusatory. \"I am encountering a number of surprises the more time I spend with your daughter,\" he remarked. \"I believe you were always aware of her abilities, and yet she knows so little of herself.\"\n\n\"Yes, I arranged a charm to protect her virtue!\" Devan spat as his composure cracked. \"Yes, I knew she tempted malevolent species, and I warned you-!\"\n\n\"You warned without explanation, which I naturally presumed a father's empty bid to save his daughter. I suppose even now, you will not explain how the unworldly, sheltered half-nymph crafted a deadly blade from nothing?\"\n\nDevan paled. \"She, what?\"\n\n\"It's no matter,\" Thoran said pleasantly, tilting his head at Devan's bleak dismay, before lifting his eyes to the tall, tautened tips of the nymph King's brilliant violet wings. \"I can handle her.\"\n\nThoran strode to the door and paused, turning back when Devan did not move, his eyes fixed to the floor with sad bitterness. Thoran understood what the regal nymph had lost, for his gain. But Thoran had no regrets; he was very grateful.\n\n\"Not that you give weight to the words of a Demon, but I will guard Sirah with my life. I am not prone to cruelty. She will only know comfort with me,\" he said simply, and departed.\n\nRemembering Sirah's protesting screams as he withdrew his protection and abandoned her, Devan bit his lip. It seemed the more he knew of Thoran, the more he was surprised, and Devan was not often surprised. Most shockingly he was aware that Sirah was still a virgin. That Thoran maintained discipline over a lust that Devan knew held a large appetite, was quite inexplicable.\n\nDevan looked up to see Thoran usher Sirah into the room and close the door behind her. For a moment father and daughter tensely watched each other. Emerald eyes bright with emotion, Devan hesitantly held out his arms at the same time Sirah burst into tears and threw herself into them.\n\n*****\n\nTired from the exhausting, overwhelming experience of seeing her homeland and family again, Sirah was limp in Thoran's arms when they returned to his lair.\n\nPlacing her in bed, Thoran observed his desirable mate. His obligations were complete, and now there was only one thing left for him to do. Something he decided to save until last.\n\nSirah's eyes fluttered open, suddenly alerted by the way Thoran stood watching her.\n\n\"W-What is it?\" she faltered, running her eyes over his tall figure.",
        "Thoran chose not to answer, but joined her on the bed. Sirah stiffened with fear as he slowly crawled over her, dwarfing her small frame. She held her breath, fearing one wrong move, one slip and he might crush her by accident.\n\nThoran's large, warm hand smoothed over her shoulder and searched down her back, settling her nervously twitching wings. His other hand traced the gleaming blue edge of her dress, and began to peel it down.\n\n\"Thoran!\" she gasped, seizing his wrist. \"What...why?\"\n\n\"I want to see you,\" he murmured, hungrily watching her breasts peep into view.\n\nSirah fretfully tried to cover herself, but couldn't deny his proximity was pleasant, that she wanted more. But she was embarrassed to be exposed for the first time. Thoran had certainly inspected her lower area, but he had not perused all of her. And now he seemed determined she bare everything to him.\n\n\"Would you prefer I undress first?\" he whispered, kissing her jaw. Gently placing his hand on her soft, perfectly-rounded breast, he felt her heart leap under his palm.\n\nSirah's eyes were wide and startled, but not afraid like the first time he tried to take her. Thoran licked his lips at her lovely, innocent pout, before giving in. Sirah sighed against his mouth, her lips parted without prompt to let his tongue tease her. Thoran continued for a time, all the while gently edging her dress lower until it gathered about her mid-section.\n\nSo carried away with his intimate attention, Sirah hardly noticed she was now half naked, until he pressed his chest closer and she felt the heat of his bare skin stimulate her rosy, untouched nipples.\n\n\"Oh...I...\" Sirah panted, but Thoran captured her mouth again, feeling her energy lift with giddy excitement.\n\n\"Tell me you want me to take you, Sirah,\" he demanded huskily, moving his hand lower to tug her dress up her smooth thighs.\n\n\"I want you to take me,\" she answered in a hushed whisper.\n\nThoran groaned, reaching between them to release his straining cock from his pants. As it sprung free, Sirah curiously glanced between them and immediately regretted it. The member appeared excessively, terrifyingly thick and long. Certainly too large for her; too large for anyone. \n\n\"Wait! I can't!\" She squeaked, straining away as he pressed closer. \"No, Thoran! Stop! I can't!\"\n\n\"You can. Shh,\" he breathed, closing his eyes. Concentrating, he tried to contain her nervous tension, to soothe her building panic. \"I won't hurt you, Sirah. Trust me.\"\n\n\"No! Thoran, please!\" she begged, genuinely fearing for her life. The rumours of demons taking females and releasing them alive had to be terrible falsehoods. Thoran would split her in two. Bound or not, he was going to kill her.\n\n\"Sirah. Trust me.\"\n\n\"But...But...\" Somewhat calmed by Thoran's reassurance, Sirah kept her frightened gaze averted from that fearsome part of him, but could not forget what she saw.\n\nThoran could taste her frantic emotion, dancing sporadically along his tongue like tiny spikes. Exhaling heavily, he considered his lure. It was, after all, what made females accept and encourage demons.\n\nGuessing his thoughts, Sirah shook her head with a shaky sigh. \"I don't want the lure. Not now, Thoran. If you say you won't hurt me-\"\n\n\"I would never hurt you, Sirah. Do you trust me?\"\n\n\"Yes,\" she whimpered.\n\n\"Hmm,\" he replied doubtfully, and withdrew down her body.\n\nSirah gasped when the dress hitched up her hips. It settled like a shimmering blue band across her midsection, and but for that, she was naked. Thoran spread her legs and his tongue teased, tasted, then delved into her. It felt surreally wonderful, and Sirah arched and bucked against his face.\n\nThoran chuckled, and his amusement reverberated within her. Sirah realised his tongue was deep inside her, almost impossibly deep. Afraid to look, she imagined his tongue lengthened and forked, tickling untouched sensitive areas to drive her insane with lust.\n\n\"Oh, Thoran, why did we not do this sooner?\" Sirah moaned, forgetting all demure uncertainty and reservations about his size. She gasped when his tongue slowly slid out of her, and his lips warmly caressed her trembling inner thigh.\n\n\"Because I had an obligation to see to,\" he murmured. \"Now, you have seen your father, there is nothing to distract from our desires. Believe me, the delay was no easy feat.\"\n\nThis explanation suited Sirah perfectly. With parted thighs, she tentatively invited him to take her. Thoran immediately lowered himself between her legs, careful not to crush her.\n\nHer breasts were as he knew they would be - full, deliciously rounded, her skin like warm silk to touch. Sirah stared at him bewilderedly, but without any reluctance or regret.\n\nThoran couldn't resist bending to taste her flesh; coveted flesh that he knew no other had the daring or privilege to access. Even more tempting was her gasp, or possibly whimper, as he ran his tongue around each nipple until they stood alert to his attentions. Then he moved forward so the stiffened peaks exquisitely grazed his broad chest.\n\nFinally, at last, his throbbing member found and pushed against Sirah's wet entrance. Gasping delightedly from the stimulating contact, she nodded encouragement. Thoran held her gaze and angled his head, warning her to be patient, and slid a further two inches.\n\nSirah moaned with bliss, and Thoran felt his throbbing tip press against the wall of her virginity. Taking a deep breath, he gently eased forward and the barrier gave. Sirah shrieked and gripped his arms, her nails digging into his skin in marks of desperation that would bruise a day or so.\n\nThoran immediately stilled, watching her closely, feeling her tight walls tremble and pulse exquisitely around him. Sirah's brilliant eyes were snapped closed, her face flushed with heated discomfort. Still, she didn't refuse him or beg for reprieve, his lure. Shaking with the urge to continue, impatience tugged at Thoran.\n\n\"Sirah, my lure - do you need it?\"\n\nFace drawn with pain, she briskly shook her head. It was her first time, their first time, the most important time. Perhaps in future they could toy with alternatives, but Sirah wanted him to take her as he was.\n\n\"You're in pain,\" Thoran ground out, fighting to curb his lust as he watched tears drip from the corners of his mate's closed eyes. It was true he would not hurt her, but the stilted pace was beginning to take its toll. \"This is not how I would-!\"\n\n\"I am not a tender, mortal virgin, Thoran,\" Sirah hissed through clenched teeth, breathing raggedly with exertion. \"For this time, I will take you as you are. I insist upon it.\"\n\nThoran scrutinized her innocent, perspiring face, strained with pained desire. When she opened her eyes, the fear and determination mingling in her gaze stoked the fire within Thoran. His mate was overtaken by a primal, wild lust that momentarily buried her tentative, apprehensive demeanour. He beheld so many fascinating facets to Sirah's character. She was perfect. She was his.\n\nThoran's eyes burned with an unknown passion from her words, her acceptance of him. She stood by his side and dared interject an argument between demons, in his favour. And now she denied a comfort that would shield her from pain, because she wanted to experience him, without illusion. They were truly destined for each other.\n\nFinally, the pain began to wear off. New pleasure trickled from Sirah's core to her extremities, increasing with Thoran's gentle movement as he slightly withdrew and re-entered her. Now, the way her body stretched accommodatingly around him turned pleasant. Sirah knew this was how it should be. Raw, powerful, and compelling. But she had not yet taken all of him.\n\nSirah cried out and clenched as his length trespassed further inside her. Unknowingly and without warning, she actively released her own lure, never before applied or known to exist. It crashed over Thoran with a shocking yearning that had him fighting for control.\n\n\"S-Sirah!\" he gasped, taken completely off guard. \"Sirah, withhold!\"\n\n\"What?\" she sighed distractedly, now actively moving against him. Delight and something else, supremacy, coiled about her torso. It felt foreign and wonderful. An empowering indulgence she never imagined she might experience.\n\nThoran grunted and arched above her, struggling with strange energy encompassing him. Forcing his eyes open, he stared down at his happily writhing mate.\n\n\"Sirah, withhold!\" he groaned. But she didn't listen, and the waves of crippling pleasure continued to reverberate through him.\n\nClosing his eyes Thoran fiercely concentrated. It was difficult, but he tuned into the energies encircling them.\n\nSirah suddenly whimpered as the invisible collar manifested about her neck and lightly constricted, stifling her lure. Dazed and confused, she relaxed, still panting. When her eyes fluttered open they clashed with Thoran's glare. He looked exasperated with her.\n\n\"Be still!\" he breathlessly ordered. His lips seared her neck and jawline with delicious kisses and he cautiously released his own lure. \"Be still..\"\n\nThoran exhaled with relief as Sirah's harsh, incapacitating lure ebbed from his limbs, and gently increased application of his own. A lure was pleasure, but foremost a weapon, and clearly Sirah needed to learn how to use it.\n\nSudden, blissful sensations flowed through Sirah. She nodded deliriously, caught up with Thoran's wonderful lure, taking her enjoyment to an impossible height. \"Yes, Master!\"\n\nThoran moaned at her delectable words, feeling himself stiffen inside her as his pleasure peaked in a way he'd never felt with any creature before her. He slowly withdrew, and re-entered, feeling her stretch to an unaccustomed girth that she now embraced. But despite taking rare delight in her body, ultimately her sweet voice that stoked the fire inside him.\n\n\"Again, little one.\"\n\n\"Yes, Master!\" she gasped, wrapping her legs about Thoran's waist as he began to rhythmically move inside her.\n\nIt hurt, but the pain was mild and mostly gratifying. Just like Thoran decreed -- she never wanted it to end. He was beautiful to behold, his toned, rippling body above her, those sultry dark eyes locked on her face as he rolled his hips and rocked her toward unimaginable levels of ecstasy.\n\nHad Sirah known such sensations existed, she would have run away long ago to seek him out. Likewise, Thoran marvelled his acquisition and how incredible the union felt, never before so affected by the reaction of a female to his intimacy.\n\n\"Again!\" he hoarsely demanded.\n\n\"Yes, Master!\" she moaned, now delighting in his size and bucking to meet his hard thrusts.\n\n\"Uhhh-!\" Thoran grunted, losing composure for the first time to memory. \"Sirah...!\"\n\n\"Yes, Master! Take me! Take me!\" \n\nThoran groaned and drove forward as Sirah cried out and arched against him. In the throes of a climax she unwittingly clawed his unmovable thick arms, and Thoran relished in it, imagining he might be marked for days.\n\nOn that thrilling notion, he erupted inside Sirah, filling her with hot seed. Buried to the hilt, he came to a standstill, his chest shuddering with sated bliss. Snugly sheathed within her newly used walls, they gripped his girth like a soft, wet vice.\n\nIn a flash of a memory Thoran saw the nymph envoys trading the priceless orb for their princess, and knew he'd decline all the orbs of the world rather than lose Sirah.\n\n'What will come of this?' he silently wondered. Sirah's virginal tightness continued to tremor, lightly squeezing his thick length relaxing within her.\n\n\"I don't know...\" Sirah answered in a dazed whisper.\n\nThoran froze, realising she read his thought. Then he carefully rolled onto his back, with her atop him, still joined together. Drawing a smooth blanket over them, Thoran stroked Sirah's lustrous hair as her breathing steadied. Recalling the powerful, incapacitating lure she unleashed on him, a compelling force he'd never experienced, Thoran remembered one of Devan's first warnings.\n\n'She could become very powerful. Dangerously so.'\n\nThoran dismissed the caution. He was Sirah's master, the binding decreed it and she acknowledged it. With a small smile, Thoran remembered her eager words, uttered in the throes of passion.\n\n\"Sirah, are you hurt?\" he quietly asked.\n\nSilence answered him, and Thoran realised his mate was deeply asleep, with him still tightly embedded inside her.\n\n\"Our union is the beginning of something wonderful,\" he solemnly promised, trailing a finger down her smooth cheek, his austerity fading to affection as he heard her gentle snore.\n\nThoran hoarsely chuckled and softly kissed the top of Sirah's head. Her pretty wings contentedly fluttered, and Thoran gently traced their delicate, paper-thin texture with his fingertips. In response to his touch, they tremored delightedly, and Thoran anticipated he would spend many hours caressing the fluid sheets of rainbow. Never had Thoran such beauty within reach. And now she belonged to him.\n\nThoran took a moment to breathe the refreshing scent of Sirah's blonde tresses, now mingled with his own essence, and closed his eyes.\n\n*****\n\nTwo naked demons sat quietly before a large fire. Though one's dark hair was cropped short like Thoran's, his companion's lengthier black locks were carelessly bound at the back of his neck to flow midway down his muscular bare back. As the rest of their kind, they were remarkably handsome. Tareg, the short-haired demon, had stronger, more broodingly masculine features than his blood-brother, Marun.\n\nMarun was more elegantly attractive, with soulful light-brown eyes that belied the vicious nature within. Comparatively, Tareg was physically formed as a great warrior, where Marun was oft mistaken for a powerful noble. The differences mattered little when their lures were in play.\n\nThe demon's conversation quickly ended as the fire before them seemed to retreat within itself, before exploding into a fiercer blaze than they'd prepared for. They stared speechlessly at each other, both experiencing the same strange sensation through the chest. Though neither had felt it before, the cause was well-known.\n\nMarun slowly shook his head. \"Impossible.\"\n\n\"And yet, it is.\" Confusion showed in Tareg's black eyes. \"But why? He never cared for power or alliance. He chose exile.\"\n\n\"Perhaps he wants to battle?\" Marun said thoughtfully.\n\n\"Thoran hated war. He would not return without joining us first.\"\n\n\"Then to consider a binding, the female must be exceptional,\" Marun mused.\n\n\"She'll be no field troll, for sure,\" Tareg chuckled.\n\n\"Perhaps he fell in love?\" Marun suggested, and Thoran's blood-brothers indulged in a bout of harsh laughter.\n\nThe edges of Tareg's mouth turned up mischievously. \"I admit I am curious. Thoran guards his privacy.\"\n\n\"He forfeited that right with the binding. He has chosen a mate. You know what that means. Should the need arise...\"\n\n\"We are compelled to protect her,\" Tareg slowly finished Marun's sentence, his black eyes thoughtful.\n\n\"Come.\" Marun had risen and stood ready to travel. \"We must meet our new sister.\""
    ],
    "authorname": "Bellie444",
    "tags": [
        "demon",
        "dominant male",
        "non-con",
        "non-human",
        "noncon",
        "princess",
        "romance",
        "supernatural",
        "witch"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/captured-ch-04-4"
}