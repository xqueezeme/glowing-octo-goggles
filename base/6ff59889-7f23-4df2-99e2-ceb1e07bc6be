{
    "title": "Home for Horny Monsters Ch. 74",
    "pages": [
        "Hi all!\n\nI'm back with the next chapter of \"So many monster girls, so little time.\" I am your host, Annabelle, and today we will be returning to Oregon to observe the fallout of our fight with the Jersey Devil.\n\nIf you're new to the story, the summary sounds ridiculous, but only because you've missed almost a million words of back story. Start at the beginning where Mike inherits a house with a nymph haunting his bathtub. Don't worry, I'll wait for you, the story is very bingeable.\n\nReturning reader? I missed you! I've been busy plugging away at this little tale so you could stuff your eye-holes with it. I hope you're still enjoying yourselves, because some serious shit is about to go down in this chapter.\n\nDon't forget to click those stars for me when you're done. My release schedule may be screwy for a bit, so check the bio for when I plan to release the next chapters. Nothing to worry about, just real life and the holidays approaching. You can also just follow me and get notifications when new chapters pop up, whatever makes you happier.\n\nAnyway, I shall keep you no longer. Let us give in to\n\nTemptation\n\nThe flames fully engulfed the barn, sending the structure crumbling to the ground. Mike had pulled himself further from the fire, the throbbing in his knee blooming into full-blown agony. Abella walked behind him with her wings outstretched to protect him from the heat and burning embers while carrying Dana. After being thrown out of the barn, she had injured her last remaining limb and had been trying to roll away from the fire.\n\nBigfoot came charging around the barn so fast that he slid sideways across the snow. \"Velvet is gone!\" he cried as he came to a stop. \"Leeds did something to her, she went after him!\"\n\nMike tried to stand but fell down with a groan. \"Why didn't you go after her?\"\n\n\"She's way faster than I am and can jump along the treetops. Without knowing where she's going, I can't exactly cut her off.\" He turned his eyes on Abella. \"But you. You could track her, right?\"\n\nAbella frowned, then looked down at Mike.\n\n\"You realize Leeds is trying to separate us, yes?\" she asked.\n\nMike let out a grunt, then nodded. There was no doubt that this was all according to Leeds' plan, but they couldn't just leave Velvet to whatever fate he had in store for her.\n\n\"And you still want me to go?\" Abella looked uncertain.\n\n\"We need to regroup. If you can catch her now, you can bring her back. We need to find Quetzalli, Yuki and that damn owl. Something went wrong, and until we know what, we're going to be stuck here while he picks us off.\" He fixed Abella with a hard stare, trying his best to hold back tears of pain. \"He's planning to kill us one at a time. I think Velvet is his first target.\"\n\nBigfoot roared, his body expanding as he slammed a fist into a nearby tree. The trunk cracked, the impact causing the branches to shed their snow.\n\n\"I will make him suffer,\" he declared. \"Even if it takes me the rest of my days!\"\n\n\"I'll be safe with this guy,\" Mike continued. \"We're stronger together than apart. Please.\" His eyes now shimmered with tears as he tried to shift his leg. \"Bring her back for me.\"\n\nShe responded by spreading her wings and taking to the sky. He watched her go with a tight feeling in his chest, followed by a chill. Leeds had outplayed them again, and he wouldn't feel good until they were all together.\n\n\"We need to find the others.\" He laid both of his legs out and frowned. His injured knee was swollen, but he was able to bend it a little. It was probably just a sprain, which was preferable to pretty much anything else knee-related.\n\nDana grunted. She had finally got one of her arms twisted back into place and was flexing her fingers.\n\n\"Fucker couldn't bite me, so used his tongue to crush me against the roof of his mouth.\" She grabbed onto her other arm and twisted it. There was a loud crunch and a bone popped through the skin. \"Can someone help me with this?\"\n\nMike gagged, then turned away.\n\n\"I can help.\" Bigfoot knelt down and, with directions from Dana, helped get her bones realigned so that her rapid healing could take over. The luster faded from her hair and her skin paled until she nearly matched the snow, but she was back on her feet. Her eyes were still rimmed with red as she pulled out her sword.\n\n\"The good vibes are officially gone,\" she growled. \"Gonna have to straddle the line between apathy and rage, I guess.\"\n\nA gray figure descended from above. It was Emery, his hands fidgeting as he darted around.\n\n\"Emery. We need you.\" Mike let Dana help him up. The pure agony in his knee had faded to tolerable levels, allowing him to put a bit of weight on it. \"With Abella gone, you're our eyes in the sky. We need to find Yuki, Quetzalli and the owl.\" He looked over his shoulder at the forest, then pointed. \"Last I saw the owl, she was headed that way.\"\n\nEmery nodded, then shot into the air.\n\n\"Then we shall head that way as well.\" Bigfoot moved ahead of him. \"I will ask the trees if they've seen them.\"\n\n\"Good thing the others are memorable,\" Mike muttered with a wince. He wasn't entirely certain how a tree's memories worked, but imagined the magical trio would be fairly distinct. He took a step that became a hop. \"Do we have anything I can use as a crutch?\"\n\nBigfoot looked over his shoulder. \"We've never had a shortage of legs around here, but I'll see if I can find you something.\" He disappeared into the trees, leaving Mike with Dana.\n\n\"Glad to see he still has a sense of humor,\" Mike said.\n\n\"It's either that or scream.\" Dana helped him walk toward the trees where Bigfoot disappeared. Once they were there, Bigfoot appeared with a large branch with a scoop that would fit beneath Mike's armpit. Dana used her sword to cut it to the right size.\n\nHis knee was already feeling better, but the crutch helped immensely. Bigfoot moved ahead of them and would come back every few minutes to check in. Emery would dive down to hear the report, then take to the sky once more.\n\nMoving through the dense woods, Mike felt the familiar humming return. If he tried to focus on it, he could hear individual whispers in a language he couldn't quite grasp. Every now and then, he would get the impression that someone had passed by recently, or hear two trees speaking with one another. If he closed his eyes, he could almost see the words translated to images in his head, like a waking dream.\n\nIt was nearly an hour later when Emery dropped down and flitted about like a hummingbird. At the same time, Mike detected a dead spot in the ramblings of the woods, as though a part of it had gone silent.\n\n\"There's something over there!\" Emery pointed off to the left. \"There was a fight!\"\n\nMike limped ahead as fast as he could but was grabbed from behind by Bigfoot, who pulled him through a portal with Dana. For just a moment, he could hear the forest as it shouted in his ears, and then it went quiet when they came out of the portal and into a small clearing. At its center was a spiked dome made of ice, the ugly lovechild of an igloo and a morningstar. All around the dome, dead Nirumbi with bloody handprints on their foreheads lay on the ground. A small group of Nirumbi who were attacking the dome froze when they saw Dana.\n\nDana let out a shriek before diving into their ranks, causing panic among the Nirumbi. The sword whipped through the air, removing limbs as the zombie carved up the remaining attackers.\n\n\"What the hell?\" Mike knelt down to check one of the dead Nirumbi. The handprint was distorted, a definitive match for Leeds' claws. The body was riddled with bloody wounds, some still packed with shards of ice.\n\n\"Quetzalli?\" Dana moved up to the dome and knocked on it with the butt of her sword. \"You in there?\"\n\n\"We're all in here!\" The muffled voice that answered was Yuki's. The ice crumbled and turned to slush, revealing the kitsune standing over Quetzalli. The dragon was kneeling over a bloody figure on the ground.\n\nIt was the owl. Her body was broken, and her wide eyes darted back and forth from Mike to Bigfoot as they came near.\n\n\"It was an ambush,\" she whispered, her cracked beak clacking. \"These Nirumbi were loyal to Leeds, please do not punish...\"\n\n\"Easy.\" Mike knelt by her side and tried to maintain a neutral expression when he realized that there was no way she was going to survive her injuries. He was fairly certain there were bones protruding beneath her thick feathers and wasn't about to ask. \"We won't punish the others for the crimes of the few.\"\n\nThe owl relaxed, letting out a sigh mixed with a gurgle.\n\n\"I don't understand.\" Bigfoot knelt down by the owl. \"Leeds shouldn't have been back until nightfall at the earliest.\"\n\nThe owl coughed, then tilted her head toward Mike.\n\n\"I underestimated him,\" she said. \"These Nirumbi weren't just looking for...a leader, they... wanted a god. We stumbled on...shrine...\"\n\n\"Shhh.\" Yuki knelt and put her hand on the owl's forehead, then looked at Mike. \"The Nirumbi built an altar in the woods. When we found it, they ambushed us. They were using ritual sacrifices to summon him.\"\n\n\"How does that even work?\" Mike asked.\n\n\"A life for a life. They were able to shorten his revival at the cost of many of their own. He is technically a demon, and they can be summoned for a price.\" She looked sadly at the owl. \"We thought we had him. The Nirumbi were only armed with spears, but then Leeds summoned this giant floating head from deep in the woods. It bit down on her and then spit her out when Quetzalli zapped it. That's when I summoned my barrier, but we thought it was still out here waiting.\"\n\n\"I killed the head,\" Dana added. \"It's just Leeds now.\"\n\n\"Don't...assume...\" The owl looked at Mike. \"Caretaker. I am unable to hold up my end of the bargain.\"\n\nMike gritted his teeth. He couldn't exactly hold it against her. The plan had been to lure Leeds into a set of runes powered by the owl's magic. The runes had been carved into a large log that could be carried as a mobile prison. Bigfoot was going to carry it out of the woods, thereby breaking Leeds' barrier.\n\n\"We'll figure something ou\u2014holy shit, no, stop!\"\n\nThe owl, using her clawed finger, had jammed the talon into the soft flesh of her orbital socket. With a yank, she pulled her eye free as light burst from her socket. She handed it over to Yuki.\n\n\"All my knowledge,\" she explained. \"In exchange, someone must care for the forest children. Please...\" she begged, blood now leaking from her beak.\n\nBigfoot put her hands together and placed them on her belly, his massive hand covering both of them.\n\n\"I will guide them, sister owl.\" He stroked the feathers on her head. \"I regret that I couldn't know you better. Now sleep and be one with the woods.\"\n\nYuki took the bloody orb from the owl. Upon touching her fingers, it solidified into a crystalline sphere, which she tucked into her robes.\n\nThe owl gasped for air, and then fell silent. Her chest fell one last time and an ominous wind blew through the clearing. The feathers blew off her body and filled the air, blinding Mike temporarily.\n\nWhen the wind was gone, so was the owl.\n\n\"Shit,\" he muttered to himself, then looked at Yuki. \"She ripped out her own eye and just...handed it over. How does that even work?\"\n\n\"It's an old-school thing you should be familiar with. Far preferable to having someone else rip it out for you.\" She stood and looked at everyone else. \"Where are the others?\"\n\n\"Chasing Leeds.\" Mike looked at Bigfoot. \"We're good here if you want to try and track them down.\"\n\nBigfoot nodded, then stood.\n\n\"I'll try and bring him to you in one piece,\" he said. \"But no promises. You can survive without a limb, right?\"\n\nWith that, Bigfoot took off, vanishing into the woods. Mike sighed and looked down at the remaining feathers still on the ground. Everything had gone sideways fast, but he felt as though he should be used to it.\n\n\"Hey.\" Yuki put a calming hand on his shoulder. \"We can still do this.\"\n\nHe put his hand on hers and sighed. \"I sure hope you're right.\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThough the battle for the fate of the world continued for countless millennia, Beth experienced it as a matter of hours.\n\nJenny's turns had become so long that the Earth rotated in fast forward from Beth's perspective. It was little more than a whirling blue and green mass, the landscape often changing drastically as a result of whatever hell the doll unleashed.\n\nPestilence, despite hours of pleading that sounded like a hive of caffeinated wasps, had been forced to continue playing. Every round they had lost always ended up with their body being separated into individual bugs and then spread apart. Beth got the impression that Pestilence, as a hive mind, was forced to endure everything that each insect experienced. Between rounds, Pestilence sat on the ground and rocked, hugging their legs close to their chest.\n\nFamine lasted a bit longer, but Jenny's troops had developed a real taste for him. Jenny cackled in glee, forcing Famine to endure being consumed at the end of each of his rounds and then slowly digested for an amount of time that Famine was unable to describe to his siblings. Her real masterstroke had begun when she had the mimics become microscopic and eat him from the inside. This method of torment soon evolved into a single mimic eating Famine's brain cells while War and Pestilence were forced to care for him as he wasted away into madness.\n\nWar, true to his name, put up a much tougher fight. While Jenny found new and interesting ways to make him spend years with nothing to do, he attempted to fight back by doing the same. As the two of them tried to one-up each other, it was clear that Jenny was completely unphased.\n\nEventually, Famine and Pestilence lost the game. They were disheartened between rounds and made terrible decisions. Beth noticed that both of them started going all in, wagering the maximum number of troops regardless of strategy. Once beaten, neither of them spoke or even seemed to be paying attention to the game anymore, rather, they looked absolutely exhausted. Their former bluster was gone, as they seemed to know that they had been thoroughly beaten.\n\nBeth thought back to how Murray had made sure to rebuild her mind each time to prevent her from going mad. For the horsemen, the sheer dread of starting each round seemed to have broken them.\n\nAs angry and bitter as War had become, it was clear that Jenny refused to give him what he wanted. In rounds she lost, she always showed up wherever he was. In rounds she won, she stole his troops away as silently as possible and then made War come looking for her.\n\nThe end came for War when he had the bright idea of encasing Jenny in a giant metal cube and then using a drill to bury her deep beneath the ground in Yellowstone National Park. He seemed extremely proud of the fact that Jenny would have to sit around for hundreds of thousands of years in quiet contemplation until the supervolcano beneath finally erupted.\n\nBeth actually got to watch the blast from her viewing position and had been terrified that something had happened to the game itself. Murray had appeared to reassure everybody that all was well and then reminded them that only a couple of minutes had passed in the real world.\n\nBeth had no idea what War had done while stuck on Earth for so long, and his shit-eating grin of victory turned sour when Jenny appeared in a blaze of golden light.\n\nBoring, Jenny had exclaimed, then mimed a yawn. Beth was a hundred-percent convinced that Jenny was bouncing her consciousness out of the game, but didn't want to risk confirming it. But since you want to play dirty, let's do it.\n\nOn her next victory, she had blinded War at the beginning of the round and then hid deep in the mountains. Next round, she blinded him again, then had him captured and took his legs. She made him squirm, crawl, and roll across entire countries looking for her while she taunted him with nursery rhymes when he got close. The Earth was now spinning so fast during each turn that Murray declared he was having to reset geological events just to prevent game issues due to continental drift.\n\n\"How long has it been?\" Beth finally asked Murray before the next round could start. He opened his mouth to reply, and she quickly added \"Inside the game, down on the virtual Earth.\"\n\n\"Eons,\" he replied as War reappeared.\n\nThe horseman only lasted a couple more rounds before he finally broke apart. Heavy muscles sagged as he dropped his sword to the ground and wept.\n\n\"I can't go on any longer,\" he cried. \"I don't even remember what killing feels like. I'm just so numb, that I...that I...\"\n\nAw, c'mon, mister. Jenny rocked her horse violently, making it scoot closer to War. This is the most fun I've had in years!\n\n\"Stay away from me!\" He backed away from Jenny and hid behind Murray. \"She's done things to me! You've seen it, you even told me it was getting hard to rebuild me!\"\n\n\"Rest assured that each round is only\u2014\"\n\n\"I don't care!\" War yanked on Murray's robes, causing the man's head to snap back and forth. \"I quit! I quit! Please, send me back!\"\n\nQuitterquitterquitterquitter...\n\nBeth felt light-headed, as if she was falling, and then the world beneath them was flattened like a giant ball of clay, turning into a map. A golden fire rolled across it, destroying all of War's remaining troops. The scene dramatically transitioned again, and now she was staring at the game board proper.\n\n\"We're back,\" she whispered.\n\n\"Agh!\" War looked over at Jenny and fell backward out of his chair. Screaming, he ran away from them and out into the surrounding mists, leaving his massive sword behind.\n\n\"And with this, I conclude our mediation.\" Murray clapped his hands together. The pieces of the board game floated neatly back into the box, and then the box slid toward Beth.\n\n\"Good game,\" she told Famine and Pestilence.\n\n\"Fuck you,\" Famine replied, then stood and stormed off. Pestilence stayed behind only to slump forward with their face in their hands.\n\nBeth's initial reaction was to feel bad. Despite how they had treated her, she knew well the effect of Jenny's in-game wrath. They had received it on a scale she couldn't possibly fathom.\n\n\"Fuck those guys,\" she muttered. With a deep breath to steady herself, she turned away from the table.\n\n\"It was very boring to watch.\" Death held out Tick Tock. \"Though you did make my brother cry during one of the last rounds. That was amusing.\"\n\n\"It was far more interesting from our point of view. Especially when we were winning.\" She took Tick Tock, then stuffed the Risk game inside. Reggie hopped down from his seat as Beth took Jenny in her arms. The doll's laughter filled her head, and she chuckled.\n\n\"You did good,\" she told Jenny. \"We couldn't have won without you.\"\n\nThat's because I'm the house champion, Jenny declared. They didn't know what hit them.\n\n\"Let's talk about it later,\" she muttered, then looked up at Murray. The angel was trying to smile in her direction, but had opened his mouth into a comically wide grimace.\n\n\"So you're taking them back?\" she asked. \"We're done, everything goes back to the way it was?\"\n\n\"Almost.\" Murray stared at Death for a moment. \"I will have to dismiss the horsemen first before returning you to your realm. Since they have wandered off, it may take me some time to find them. But I must warn you that there will be consequences to your actions.\"\n\nBeth narrowed her eyes. \"Why the fuck should we have to suffer consequences?\"\n\nMurray held up his hands. \"Peace, child. These are natural consequences, and this one cannot be avoided. I fear that the horsemen have been permanently damaged by your actions here.\"\n\n\"We're not paying for their therapy,\" Reggie declared.",
        "\"The horsemen of the Apocalypse are physical manifestations of an idea or construct. They aren't people like you or...\" Murray looked at Reggie, then Jenny, then back to Beth. \"Or other humans,\" he finished. \"Death is the exception, for he is merely the cessation of life. The others have been intricately woven into your society. Upon our return, the idea of Pestilence, War, and Famine will have shifted. I cannot promise that it will be for better or for worse.\"\n\n\"Then I demand compensation,\" Beth declared. \"For all of mankind.\"\n\n\"Denied.\" Murray licked his teeth, then his lips. \"Though you were the victors of your game, your actions while playing were based solidly on free will. My job here was never to fix your mistakes, but to investigate a complaint.\"\n\n\"Who complained? In a court of law, you are entitled to face your accuser.\"\n\n\"The complaint wasn't filed in a court of law. Rather, I chose to indulge you before for the sake of the Father and His divine will.\"\n\nHis divine will can suck a...\n\nBeth covered Jenny's mouth, knowing it would do no good. Luckily, Jenny took the hint.\n\n\"Are you going to do that hideous screaming thing again?\" she asked.\n\nMurray nodded.\n\n\"If you need us, we'll be inside.\" She turned away from the angel and walked toward the house. The mist swirled around her ankles until she made it onto the steps. Death rushed ahead of her to open the door, and they all walked inside.\n\nDeath closed the door behind them and locked it.\n\n\"Oh my god, we fucking did it!\" Beth let out a whoop of delight, then knelt down to high-five Reggie. The rat king did a little dance on the floor, then tossed his crown into the air before catching it.\n\nTears of joy and relief sprang to her eyes, and she wiped them away before turning around and giving Death a big hug. This, of course, was a huge mistake. It felt like the air had been sucked out of her body upon contact, and he patted her delicately on the back like she might break. Each touch of his hand felt like a jolt to her nervous system.\n\n\"We beat them, we won,\" she muttered into his robes, then shivered. Her teeth were chattering now, and she stepped away from Death. \"Shit, I'm freezing.\"\n\nNo sooner had the words left her mouth did she see the cloud of condensation form in front of her and then disperse. Death always left her with a bit of a chill, but this was more than that.\n\n\"Um, Lady Beth?\" Reggie looked around the living room. \"Doesn't it seem far too quiet in here?\"\n\nShe looked around the front of the house and frowned. Someone should have come to congratulate them already...right?\n\n\"Lily? Kisa?\" She walked toward the office and frowned at the sight of a rat lying in the boundary of the door. It was on its back and breathing slowly. Further into the office, there were even more of them. It looked like they had all grouped together in a defensive phalanx, but their weapons lay on the floor as if discarded.\n\n\"Are they...\" Reggie's question went unasked. He stood away from them, as if afraid to know the truth.\n\n\"They're asleep, not dead.\" Beth looked at the door to the parlor with a frown. It was coated in a light green substance that she recognized immediately as chunks of Opal. She took a tentative step forward and something crunched beneath her foot. Startled, she stepped back to reveal the corpse of a scarab beetle, its metallic wings damaged.\n\n\"Motherfucker,\" she muttered, then turned the corner into the lounge.\n\nThe room had been destroyed. The statues of Anubis were missing, and most of the artifacts were strewn around the room and broken. Opal's plastic tub was cracked and lying on its side with traces of green, blue, and red slime everywhere. Of Tink, Kisa and Lily, there was no sign.\n\nHer attention was drawn to the middle of the room where the thick marble table was. The top had been moved away from the base, revealing the empty void within. Decorated in glowing hieroglyphics, it held a few loose pieces of rotting fabric that definitely resembled gauze.\n\nThe table had been a sarcophagus, and its occupant was on the loose.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nWith darkness coming, Abella had to rely largely on her ears to track Velvet. The Arachne was making a horrid sound as she ran, something between a growl and a wheeze. If she didn't know better, she would assume that it was a wild animal she tracked and not Velvet.\n\nShe could also hear Leeds. The bastard was laughing, but Abella got the impression that he was being deliberately loud about it. He wasn't traveling in a straight line either, and the terrain made it impossible for Abella to land. She could try to outpace the Arachne and crash down in front of her, but that would only work if Velvet decided to stop. If she didn't, it would take too long to get back into the sky and she might lose them both.\n\nA band of shadows burst from the canopy below, but Abella had been watching for just such an event. She rolled to the left, which cost her altitude but caused the shadows to miss. Spreading her wings once more, she used the sudden burst in downward speed to power her new ascent into the sky. The dark bands trailed her upward, but eventually could reach no further. Hands formed on the end reaching for her before the long tendrils retracted into the forest below.\n\nAt her new altitude, she could barely hear Velvet over the wind. However, there were a few low-lying clouds she was able to fly through and hide herself from sight. She lost track of Velvet a couple of times, but eventually caught her voice on the wind as she shouted at Leeds.\n\n\"Give it back!\" she cried, her voice distant.\n\nGive what back? Abella tilted her wings and dropped out of the clouds, mist clinging to her wings and tail. Had Leeds taken something from Velvet? When would he have had the chance to do that? Velvet had been nowhere near the barn when...\n\n\"No.\" Abella was hit by the horrifying possibility that one of the eggs had survived. Had Velvet hidden it from her? Or had she missed one when she broke them?\n\nDistracted, she lost track of Leeds and Velvet. Cursing inwardly, she looked around, hoping to figure out where the two of them could have gone. The sun was officially over the horizon, leaving inky pools of blackness beneath her. Some of the stars had already come out, but it was nowhere near bright enough for her to navigate by.\n\nScowling, she realized that the treeline wasn't as far away as she thought it was. There was a mountain beneath her, and the topography was immediately familiar. It was the mountain where the Nirumbi lived. Velvet and Leeds hadn't moved out of her range. Rather, they must have gone underground.\n\nShe found the clearing from the previous night and landed. There were dead Nirumbi scattered around the entrance. She knelt by one of the corpses and frowned. It had been dead for long enough that it had become cold like the stone beneath.\n\n\"Fils de pute.\" From the entrance, she could hear Leeds' raucous laughter. She hadn't been inside a cave in centuries, the last time being with her clan. It had been after her brother's death, right before her banishment.\n\n\"I don't understand why we have to find a new cave.\" Abella groaned, her hands full of stone. She placed the loose rock into the basket that her mother had brought. The opening to this cavern wasn't big enough for some of the elders to pass through, so it had fallen on the smaller members of the clan to widen it.\n\n\"Because the old one was discovered by smugglers, you know this,\" her mother responded. She carved a chunk of granite away with her talons, then crushed it beneath her feet. Abella knelt down to pick up the rubble, then handed the basket to another child, who carried it up the tunnel.\n\n\"I still think we should have just chased them off.\" Abella examined one of the stones that had broken off. It was some kind of gemstone, and she imagined it would sparkle if she could carry it back up to the surface. What little light there was down here didn't do it any justice.\n\n\"That is not our way.\" She could hear the smile in her mother's voice, but decided to say it anyway.\n\n\"Instead of chasing them off, maybe we could make friends with them?\" It was an old argument, but one she was willing to make every day. She loved watching them, seeing their clothing swish behind them as they walked, hearing their hair rustle in a stiff breeze. What would life be like if she could just befriend one?\n\n\"That is also not our way.\" Her mother put her hand against the stone and frowned. \"No more digging on this side. We need to shift.\"\n\n\"Or it will collapse?\" Abella asked.\n\nHer mother nodded. \"The stone here is strong and stable. We can widen the other side without any issues, but tampering with this would be a gamble.\"\n\nAbella put her hand against the wall. \"How can you tell?\"\n\nHer mother smiled. \"It's always easiest to hear the Earth Mother's heartbeat through the sturdiest stone. Can you hear it?\"\n\nAbella put her ears against the rock and frowned. \"I don't hear anything.\"\n\n\"It isn't something you hear with your ears, my gem.\" Her mother knelt down and took the stone from Abella's hands. \"It's something you can only hear with your heart.\"\n\nThe cavern walls were narrow, and she crouched down to crawl inside. So many centuries ago, she had finally learned to hear the beating heart of the Earth Mother. It wasn't a heart at all, but the flow of natural magic through the stone. The magic traveled best through the strongest rock, and she was unnerved by how quiet the tunnel itself was.\n\nWithout the open sky above her, she fought off a case of the shivers. Her clan had rarely gone more than a hundred feet into the mountain and she always preferred to be outside if possible.\n\nUp ahead, she could hear Velvet shouting obscenities, but the echoing of the cave made her words unintelligible. Leeds would laugh on occasion, but there was nothing else to be heard.\n\nThis troubled Abella, because she knew there should be a whole tribe of Nirumbi beneath the earth. It wasn't long before she crawled over a couple of bodies in the darkness and then moved into a large chamber with a massive column in the middle. The chamber was decorated with glowing stones that had been tossed about the chamber, yet still provided enough illumination to see by.\n\nThe column resonated heavily in the silent chamber, and was likely the primary support. All around, she saw the empty abodes of the Nirumbi, along with their dead scattered around. The moisture-laden air was heavy with the smell of blood.\n\nIt had been a slaughter. She nudged a Nirumbi with her foot and scowled at the claw marks on its body. How long ago had this been done? There were arrows everywhere, but no sign of who or what killed them.\n\n\"Give it back!\" Velvet's shrill cry echoed from up above. \"Please, I'll do anything!\"\n\nLeeds laughed in response.\n\nAbella gritted her teeth. It had to be an egg, nothing else made sense. Instead of scaling the ramp, she started climbing the rock. Her nails sunk easily into the stone surface, allowing her to scale it quickly. The whole time, all she could think about was Velvet's deception.\n\nWhen she had destroyed Velvet's clutch, the Arachne had been an emotional mess. If it had been a charade, it was a good one. But why fake such a thing when she could have just hidden them in the woods?\n\nMaybe it was bad timing, Abella thought. She had arrived at the barn shortly after they had been laid, and Velvet had only been able to hide one. That didn't make much sense either, because they weren't very large. Velvet could easily have stuffed a few into her pockets.\n\nVelvet's cries right now were that of a terrified mother, filled with rage and worry. She begged and pleaded between shouts of rage, and Abella winced at the sound of gunfire. Hearing the pain in Velvet's voice, Abella continued onward, swearing to kick the Arachne's ass after she saved it.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nBeth moved to the sarcophagus and knelt down, her hands on the side. There were chunks of slime smeared all along its edges, which she scooped into her hands. Frowning, she realized she had no idea what to do with it, so promptly wiped her hands on the couch.\n\n\"I don't understand.\" Reggie hopped onto the sarcophagus and sniffed the air. \"There was someone here all this time?\"\n\n\"Are we really surprised?\" Beth gestured at the room.\n\n\"I guess not.\" Reggie jumped into the sarcophagus, then slipped on a piece of Opal and landed on his face, causing his crown to fall off. Jenny laughed, but the rat king ignored her.\n\n\"What are you doing?\" Beth leaned in to help him stand.\n\n\"I wanted a closer look at the glyphs. They're heavily enchanted.\"\n\nShe would ask how he could tell, but considering that all of the symbols were glowing, it would be a dumb thing to ask. With a groan, she stood and turned to face Death. \"What do you make of all...\"\n\nHer voice trailed off. Death was holding a large chunk of slime in his hands, his jaw hanging down as the fire deep in his sockets swirled like miniature tornados. He lifted his gaze to meet hers, and she felt her soul freeze in place as anger washed over her.\n\n\"Whoever did this shall pay.\" Though he whispered, Death's voice penetrated her entire body like a maelstrom of nails. \"THEY! SHALL! PAY!\"\n\nHis scythe slid from his sleeves and opened by itself before he snatched it out of the air. With agony in his eyes, Death tucked the chunk of slime into his robes and hefted his weapon. With a yell, he swung it into the sarcophagus, spearing one of the larger runes and sending a wave of hot magic through the room. Beth and Reggie fled as Death destroyed the vessel, the room awash in stray magic that made her feel sick to her stomach.\n\n\"Death, stop!\" Beth tried to get close to him but was scared of getting hit by accident. \"This doesn't help!\"\n\n\"Ah, but it does, General Bethany.\" With a final slash, he cut the coffin in two. \"For I am not only angry for Opal's sake, but for my own. You see, these runes were designed to hide the occupant from my sight and forestall their inevitable demise. Whoever was inside has perverted the laws of nature itself. For this, I shall reap them with prejudice.\"\n\nBeth looked at the rubble. \"So a creature that avoided death in a sarcophagus. My assumption is that we're dealing with a mummy of some sort.\"\n\n\"I don't think so, lady Beth.\" Reggie picked up one of the chunks of stone and contemplated it. \"From what I know of mummies, their intent was never to return to life but to honor their place in the afterlife.\"\n\n\"Where did you learn that?\" she asked.\n\nReggie gestured at the room they stood in. \"There were plenty of books here. Jenny read many of them to me. She found them fascinating and I found it preferable to playing Sorry. And even if our perpetrator was a mummy, this knowledge doesn't help us.\"\n\n\"Damn.\" Beth turned to face Death. \"I guess we search the house?\"\n\nDeath nodded. \"And I know where we should search first.\" He scooped up another piece of Opal and stuck it in his pocket. \"The room in the basement, across from the Vault. The perpetrator used our absence during the game to secure their freedom, and that room is our only lead.\"\n\n\"That's very astute, Death.\"\n\n\"Thank you.\" He turned away from her. \"I've been enjoying Encyclopedia Brown lately. I like how you can turn to the back of the books to see if you have solved the mystery.\"\n\nStunned, she followed behind the grim reaper as he led them all to the basement. Nobody was surprised to see the door to the basement open, and Beth waited at the top for Death to declare the area as safe. Reggie and Jenny hid inside of Tick Tock as Beth descended the steps. Whatever enchantment had been there before hadn't been reset, and she stepped onto the cold concrete of the basement and clicked on the flashlight she had grabbed from the kitchen.\n\nShe swept the beam over the entrance to the Vault and was happy to see that it was still sealed. Despite this, Beth could hear the troublesome whispers from the other side, so she tuned them out and turned toward Death.\n\n\"I sense something in there.\" He pointed at the room opposite. Beth pointed her light and saw that Tink and Kisa had been placed on the table inside. Cecilia hovered in the background, but there was no sign of Lily or Opal.\n\n\"Should we take them upstairs?\" Beth asked.\n\n\"Not yet.\" Death walked into the room and looked around. \"I fear a tra\u2014\"\n\nA dark figure stepped between her and Death. It was one of the Anubis statues, and it pushed Death further into the room. The wall slammed shut, trapping them inside. Beth ran to the wall and pounded on the concrete with the palm of her hands.\n\n\"Death! Hey, Death!\" Inside the wall, she could hear Death howling in anger, followed by the sound of metal on concrete. Realizing that he was trying to battle the statue and free himself, she stepped away from the wall.\n\nBehind her, something clicked. Turning around, she saw that a few scarabs watched her from the floor, their mandibles moving excitedly. The stairs creaked as someone walked down them, and Beth raised her light to reveal a figure in an advanced state of decay and wrapped in bandages being helped down the stairs by another statue.\n\n\"I told you it was a mummy,\" she muttered. The scarabs took off and flew around the room, but not before their eyes glowed an ominous green color matched by the mummy itself.\n\nYou will make a perfect vessel. A voice filled her head as a wave of drowsiness struck.\n\n\"Who are you?\" Beth asked, her voice slurring. Her eyelids fluttered as she felt the presence invade her mind.\n\nI am the one who takes, the voice replied, stronger this time. It was a woman's voice, and Beth now stood in a palace. Her bare feet were on a stone floor that had been polished and inlaid with beautiful gems. She was in a white gown with a blue belt that hung to her ankles.\n\nYou are a strong one. The pressure increased, but Beth pushed back. Her mind had been invaded too many times to topple so easily, and she felt the presence ease off a bit.\n\n\"I've had a shit day,\" Beth replied. \"I'm not about to let you be the cherry on top of it.\"\n\nOh, I differ. The air shimmered in front of her and a woman stepped out. She had golden skin with dark ringlets of hair that draped over her naked shoulders. Linen fabric hung from her body, just barely covering her breasts. Armlets depicting a monstrous serpent decorated both of her biceps. \"Tell me, child. What is your name?\"\n\n\"My name is Fuck Off.\" Beth raised her fists and sneered. \"I'm known for punching bitches who come in my head.\"\n\nThe woman scowled, then toyed with a leather bag she wore around her neck. The instant she touched the bag, Beth felt a wave of energy pass through her and her hands went numb and fell by her side.\n\n\"Your name is Beth.\" The figure sat down, a golden chair appearing underneath her. \"Well, Beth. My name is Neferisfet, and I am the last priestess of Apophis, the Great Serpent.\"\n\n\"Never heard of him.\"\n\nNeferisfet nodded. \"I don't expect you would. As his last follower, I have spent thousands of years entombed, waiting to be discovered and resurrected so that I may return him to glory. My spirit has hovered between life and death, sanity and madness, just to bring me to this moment.\"\n\nBeth bit her lip and grunted, then managed to take a step toward Neferisfet.\n\n\"Your spirit impresses me.\" Neferisfet steepled her fingers together. \"Tell me more about yourself, Beth.\"\n\nBeth took another step forward but fell to her knees when Neferisfet touched the bag around her neck once more. This time, warmth flooded her chest and it was suddenly hard to breathe.\n\n\"Hmm. You have an aura of magic. This will make things easier.\" Neferisfet stood from her throne and walked around Beth, inspecting her. \"I was once a powerful sorceress, dedicated to assisting my master in his fight against the sun god. Together we sought eternal darkness, to return the universe to its original state.\"",
        "\"You must be great at parties.\" Beth's limbs surged with power and she swung her fist at Neferisfet. The woman vanished and reappeared next to her.\n\n\"Oh, we had quite the parties. Feasts that would last for days.\" Neferisfet licked her lips. \"If not for that wretched Caretaker, I would be well on my way to restoring the glory of Apophis. Alas, she not only turned me down but trapped me in that room.\"\n\n\"Do you mean Emily?\"\n\nNeferisfet nodded. \"That woman double-crossed me before I could double-cross her. Milked me for magical knowledge and then sealed me away before I could make my move. But her loss is your gain. Observe.\"\n\nShe raised her hands in the air and clapped. Tables covered in luxurious meats and cheeses appeared and the air filled with the sounds of music and people chatting.\n\n\"Oh, so I give you my body and you get to live it up. No thanks, hard pass.\"\n\n\"It's more than that.\" Neferisfet circled Beth now. \"I don't take over your body. Rather, we merge and become one entity. Since I cannot dominate you, then I must take a different approach. You will require finesse, some kind of bargain.\"\n\n\"I'm not in the mood for bargains. I've had a shit week.\"\n\n\"If you had just given up the reaper, it wouldn't have been a problem.\" Neferisfet frowned. \"Why didn't you give him up when the others came?\"\n\n\"You seem to know an awful lot about the situation, considering you've been living in a box...\" Realization dawned on her. \"It was you, wasn't it? That reported Death to the angel?\"\n\nNeferisfet nodded. \"I fear very few things in this world. The personification of death could easily undo me, I am in no state to fight.\"\n\nBeth fought the paralysis and managed to take another step. \"This whole time, that was you? Do you have any idea what I've been through?\" Her voice was loud enough that the invisible party went silent.\n\n\"Please. I have spent centuries hovering on the edge of life and death. Each breath was like drowning. I care very little for the discomfort of but a few days.\" Neferisfet sneered. \"Why bother hanging on to the reaper in the first place?\"\n\n\"Because he's family. It's something you wouldn't understand.\"\n\nNeferisfet bit back a retort, then tilted her head. Her bright green eyes were flecked with gold, and her face softened.\n\n\"This is true,\" she muttered. \"Yet another reason why a merger makes more sense. We need each other. I have lost touch with life itself, and you could be my guide.\"\n\n\"Again, hard pass.\"\n\nThe sorceress sighed and turned away. \"I have so much to offer you, how can I make you see this?\" She waved her hand and summoned a staff with a serpent's head. \"I could instruct you in magic, teach you to become a power unto yourself. You could protect this house for eternity if you wished, for that is in my power.\"\n\n\"After what you did to my friends, I don't think they would just let you hang around.\"\n\nNeferisfet groaned. \"That was...regrettable. The beetles were supposed to find me a human host. How was I to know that so many humanoids lived in this home and none of them were true humans? The bugs can't tell the difference.\" She spat the words with much venom. \"I spent hours inside of that goblin's head, feeling like my world would cave in on me. I can free them from their dreams, it is an easy task if you know how to do it.\"\n\n\"If you couldn't find a host, then how did you get out?\"\n\n\"Desperation. I knew I wouldn't be able to get you alone. You are always with someone. So I spent the last couple of days absorbing energy from the house that I could open the sarcophagus myself and activate my guardians. The cat would have made a wonderful host, but she is someone's familiar. Her bond with her master was far too great. So I had the scarabs put her down, as well as anyone else who might stand in my way.\"\n\nBeth took a deep breath. Out in the real world, Death would eventually fight his way free. She needed to stall in the hopes that he would end the sorceress, so she decided to use the oldest trick in the book: keep them talking about their evil plan. \"And what about Opal?\"\n\n\"The slime girl? When I tried to press myself into her, she exploded. I thought maybe she was made of sterner stuff, but alas...\" Neferisfet waved dismissively. \"I didn't see where the succubus went, but she is no threat to me. The cat and the reaper were all that I feared, but I have plenty of time in here with you now.\"\n\n\"It won't work.\"\n\nNeferisfet grinned and touched the pouch at her neck. \"Please. I know your weakness.\" She stepped behind a pillar and disappeared in a flowing of robes. Asterion and Suly stepped out in her place, both of them grinning maniacally.\n\n\"They aren't real,\" Beth said. \"Not even here.\"\n\n\"Of course they aren't real.\" Neferisfet's voice came from the ceiling. \"This is just a taste of the greatness you could achieve with me at your side.\" The music started back up, but this time it was a pulse heavy beat. Beth shivered as the two of them came close. She knew they were just images, but the sight of the two of them only brought her happiness.\n\n\"It's been a long stretch, lass.\" Suly stepped behind her and started rubbing her shoulders. \"Why not let us work some kinks out fer ya?\"\n\nAsterion crouched down and picked up one of her feet, then placed it on his knee. He rubbed her ankle with strong hands that caused her belly to fill with fire.\n\n\"You're not going to fool me so easily,\" she muttered, yet allowed the illusions to pamper her.\n\n\"Come now, surely there's something I could offer you?\" Neferisfet's hands appeared around Beth's stomach. Somehow, the sorceress was standing where Suly was. \"I can feel the want inside of your aching body. After a hard day at the office, there's nothing better than coming home and opening up that briefcase of yours, is there?\"\n\n\"Ha! That thing has been gathering dust ever since...since...\" her thoughts trailed off as Neferisfet tugged upward on the fabric of Beth's gown. The air was cold against her revealed thighs, and Asterion took this as an invitation to run his hands up them.\n\n\"They're so smooth,\" the minotaur noted, then leaned in to lick her skin. His rough tongue sent shivers up her spine.\n\n\"You realize I could have this without you?\" Beth swatted away Neferisfet's hands when they tried to dip beneath the band of her panties. \"Once the horsemen leave, I could invite my boys out for a walk, let them take turns leaving me a dripping mess. I could probably convince Suly to eat Asterion's creampies, they're very salty and\u2014\"\n\n\"Shh.\" The masculine hand around her waist belonged to neither Neferisfet nor Suly. Suly's hands slid up her gown and caressed her breast from beneath as the figure moved into view.\n\n\"Oh. Hey, Mike.\" Her confidence fled as she faced him. He was radiating an energy that made her light-headed as he stroked her jaw. His fingers were gentle, yet strong, tiny sparks danced along her skin.\n\n\"You could have me,\" he told her. \"The dance would finally end and you could find out whether you truly desire the man or the magic.\"\n\n\"Not real, not real, not real.\" She whispered the words like a mantra, trying her best to concentrate. With all these hands on her body, it was getting harder to do so, and she was becoming wet.\n\n\"It's real enough.\" Mike put his hands around her waist, turning sideways so that Asterion could continue touching her thighs. Suly pushed Beth's bra aside and was playing with her nipples as Asterion's hand found its way up to her crotch and was teasing her through the fabric of her panties.\n\n\"Not fair, not fair.\" The mantra had changed, and Beth tried to distance herself. Death wasn't the only one outside her head right now, and maybe one of the others would bail her out.\n\n\"You just need to let me in,\" Mike told her. \"You can have it all.\"\n\nSuly pinched one of her nipples just as Asterion moved her panties to the side and pressed a thick finger against her wet labia. It slid in with little resistance and she moaned.\n\n\"I don't know,\" she told Mike with a gasp. \"Looks like I'm going to be rather full in a minute, might not have any room for you.\"\n\nSuly was kissing her neck now, occasionally nibbling the sensitive spot beneath her ear while he squeezed her breasts. Asterion had shifted to her side and was fingering her with one hand while squeezing her butt with the other. Mike moved forward, effectively pinning her between everyone, and her resolve melted.\n\n\"Every day could be like this.\" Mike took her hand and moved it down to the bulge in his pants. It was warm, even through the fabric, and his magic sparks spiraled up her arm and settled into her chest. \"Living out every fantasy inside your brilliant mind.\"\n\nShe tried to respond, but a moan broke free of her lips. Leaning backward into Sully, she raised her leg even higher to give Asterion better access, which allowed her to place her foot on the minotaur's shoulder. When she looked down, she could see Asterion's cock hanging out of his loincloth. It looked even bigger than usual, and she closed her eyes and tried to block the scene out.\n\nMike ran his hands over her hips while the others continued to tease her. She tried to shut them out, but the temptation kept drawing her in. Mike kept asking to be let in, and she made sure to stay quiet.\n\nSuly's cock was pressing into her ass now, and she couldn't help but grind against it. Neferisfet had been right about her preferred method of stress release, and she was desperately in need of it.\n\nAsterion used his horn to hold Beth's leg up so that he could start licking around her labia, his rough tongue teasing her clitoris. The sensation made her whole body buzz, and it was now just as hard to breathe as it was to think. Suly was getting rough with her, and when she opened her eyes, she saw Mike reach past her to undo the buckles on Suly's pants.\n\n\"Feel their desire for you,\" Mike told her as Suly slid his cock between her butt cheeks, his glans touching the small of her back.\n\n\"Still not real,\" she whispered, holding in a gasp when Asterion's finger teased her g-spot.\n\n\"These feelings you have are very real.\" Mike leaned forward, his breath hot against her lips. \"And why fight them?\"\n\nHe kissed her, and she felt a surge of magic flow through her body. It traveled down her throat and radiated outward from her heart, warming her limbs. At that moment, she could tell that it was Neferisfet's best estimate of what Mike's magic actually did. Though she had never experienced it first hand, she had both seen it in action and heard talk of it later.\n\nThis wasn't magic that connected her to him. Rather, it was heightening her senses and filling her to the brim with sexual energy and a strong desire for release. It was nothing like Mike's magic, a mere imitation created as a best guess effort. In pushing the issue, Neferisfet had overplayed her hand.\n\nBeth felt the magic spin through her body as her belly muscles fluttered. Asterion lifted Beth off the ground to help Suly penetrate her from behind, the cold radiating from his body mixing with the heat of her own. She expected the dullahan to fuck her mercilessly, but all he did was get his cock nice and wet before pulling it back out and pressing it against her ass.\n\nOh, fuck yeah, she thought as Suly pressed himself into her. There was no pain, only pleasure and pressure as he slowly moved into her. Was this how her body would feel if she tried it in the real world?\n\nBlack straps of leather wrapped around her wrists as Suly used his buckles to bind her arms behind her. Asterion laid down and pushed his loincloth aside, revealing his massive member. She licked her lips in anticipation as Mike assisted Suly in lowering her onto it.\n\nHer labia spread wide as a tingling sensation flooded through her loins. She stretched to accommodate him, letting out a strangled cry at being penetrated so completely. The bony ridges of Suly's cock pressed through the thin membrane that separated her ass from her vagina making her dizzy.\n\n\"Every possible combination you could ever imagine,\" Mike told her as he stood over Asterion and unbuckled his pants. His cock was now level with her face, shining magnificently in the torchlight of the palace. She had accidentally seen it so many times, but never this close. \"With me at your side, you could have your fill every day, just like the nymph. And the power, Beth, so glorious! I have centuries of spellcraft to share with you.\"\n\nHe grabbed her jaw and pinched, causing her mouth to open. When he slid himself into her mouth, her eyes rolled up into her head as an orgasm exploded through her body, turning her brain to mush. She couldn't even focus on any one sensation, it was simply too much to comprehend, so she rode it like the waves in the ocean.\n\nA ripple of energy formed inside her chest, but the others took no notice. She was pounded violently from all three sides, but her mind hung onto that stray sensation as she felt something inside her body expand.\n\nThere was very little that she understood about her own magic, but she recognized it immediately. Able to separate her mind from her body, she pulled deep within herself and pictured her magic as a glowing pool of water. She only had a single finger inside it, sending out ripples into the darkness of her mind.\n\nLaughing, she realized that if there was one thing that would empower magic given to you by a nymph, it would definitely be sex.\n\nMike was now practically shouting, telling her all the things he was going to do with her body, but she ignored him. The three of them were having their way with her as she charged herself up, building her own power until it was no longer a pond beneath her, but a full-blown lake.\n\n\"Just let her in, lass,\" Suly whispered in her ear. \"I be bettin' she'll feel good inside yeh much as I do.\"\n\n\"Mmph,\" Asterion grunted as his balls smacked into her. \"Let her in, friend.\"\n\n\"Just let me in,\" Mike whispered. \"It can all be yours.\"\n\nBeth filled herself with power, then wrapped it around her like a cocoon. She tilted her head back, allowing Mike's cock to pop free of her mouth. This wasn't the real world, there was no need for breathing here, but she still took in a huge breath before speaking.\n\n\"I...\" she began, feeling the men stop as they waited for her to speak. The tension was suddenly high, and with two cocks twitching inside of her, she held onto that beautiful moment for as long as possible.\n\n\"Yes?\" Mike finally asked with a whisper.\n\nThe magical pressure inside her had built to critical mass, and she giggled.\n\n\"I want you out of my head, you undying bitch.\" She released it all at once, and watched as a wave of light tore through the palace and turned it all to dust. Mike screamed and took a step back as the magic blew him away and revealed the decaying body of Neferisfet, holding up her arms as if to ward away a blow.\n\nHer Anubis guardian moved toward Beth, but Tick Tock rustled on her back, and both Jenny and Reggie leapt from their hiding place and held onto the statue's face. The guardian stumbled around, trying frantically to rip them both off, but they were tiny and motivated.\n\nNeferisfet hissed and moved toward Beth, but several bladed arms popped out of Tick Tock, making Beth look like a cybernetic spider. The mummy clutched the bag hanging around her neck and made a run for the stairs while casting dark green fire behind her.\n\n\"That's right, get the fuck out of my basement!\" Beth yelled, then turned her attention to the guardian. It had grabbed Reggie by the scruff of his neck and tried to throw him, but its arm seemed to be caught on something.\n\nJenny's laughter filled the room as the arm trembled, then cracked. Beth unfolded the fingers as Tick Tock slashed away at the statue, pushing it back until she could free the rat king.\n\n\"We have to free Death,\" she yelled, then moved toward the wall. \"Jenny, try to get this thing over here. Maybe we can trick it into breaking down this section of the wall.\"\n\nJenny cackled, and the temperature of the room dropped so hard that it took Beth's breath away. An eerie glow surrounded the guardian moments before it rocketed across the room, just missing Beth, to crash into the wall. The concrete cracked\u2014but held.\n\nBeth ran up behind the statue and tackled it into the wall. One of its ears snapped off, and it spun around and cocked its fist. She felt a chill in her belly and ducked in time to avoid the blow. It came for her again, but that eerie glow surrounded it again and spun it around. The statue's fist connected solidly with the wall. Small cracks formed along its knuckles, but the cracks in the wall widened.\n\nTick Tock yanked himself free of Beth's shoulders and leapt over her head. Sharp talons embedded themselves in the wall and ceiling as the mimic wedged itself in place. With a pair of bladed arms, it smashed the statue into the wall over and over until Anubis cracked and fell apart.\n\nA hole formed in the wall and a skeletal finger poked through it.\n\n\"Death!\" Beth knelt down and looked inside, but she could only see darkness.\n\n\"I have been bamboozled,\" the Reaper responded. \"It will take me some time to get out of here. There are runes in here meant to trap me.\"\n\n\"Don't worry. He isn't alone.\" The voice was Lily's. A glowing red eye appeared in the hole and winked.\n\n\"How? I didn't see you in there!\"\n\n\"You did, actually. When that cunt blew out of her sarcophagus, I could tell things were going sideways so I took Kisa's place. Bitch had no clue, but she did knock me out for a bit.\"\n\nBeth frowned. She wasn't aware that Lily could even sleep.\n\n\"Where's Kisa?\" she asked.\n\n\"No idea. I told her to hide and she took Opal with her. What was left of her, anyway. But listen, that's not what's important. That bag around her neck is what is keeping her alive. You get that away from her and she's toast.\"\n\n\"What is it?\"\n\n\"It's a Divine Object, but that's all I know. But there's something else. Romeo is stuck in Oregon. He's trying to come back, but we're probably on our own on this.\"\n\n\"How do you\u2014\"\n\n\"Fucking hell, would you go snatch that mummy's magic coin purse already? Shit!\" Lily moved away from the wall and mumbled something to Death. Death's fiery orb appeared in the hole.\n\n\"You must make haste, Director Bethany. That woman is more powerful than we realized.\"\n\n\"Why? She needs a human body to inhabit, and the only one within a million miles just booted her out.\"\n\n\"Wrong.\" Death's flames intensified. \"There is one other human nearby.\"\n\nBeth frowned. \"You mean Murray? He's that angel's bitch already.\"\n\nDeath was shoved aside and Lily was back. \"All she has to do is hide from you until we're back on Earth. Then it's open season on the first person she sees. You cannot let her get away.\"\n\n\"Got it. You can count on us.\" Beth looked over at Jenny. \"You up for one more round of hide and seek?\"\n\nThe doll clapped her hands in glee.\n\n\"Good luck,\" Lily yelled through the wall as they all ran up the stairs.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nVelvet's hearts were pounding as she scrambled across the ceiling of the cave. Leeds had led her through the woods, his magic flooding her mind with images of shattering her egg, consuming it, or even letting it hatch and tormenting her child.\n\nHe had brought her to the goblin caves. Down below, in the darkness, she could hear him scrambling among the bones. The bastard was up to something, she just couldn't tell what.\n\n\"Please,\" she begged. \"Just give it\u2014\"\n\nA shadow tried to grab her leg, but she released her hold on the ceiling and fell about fifteen feet before grabbing the edge of a stalactite and swinging over to stick to the wall.\n\nWhat could I do with the child of a cursed union? he wondered in her head. Perhaps it would be best to turn her loose in the city, where there is plenty of prey.\n\n\"Not going to happen!\" She aimed her pistol at a moving shadow and fired. The brief muzzle flash illuminated the cave and revealed that he was actually hiding far to her left, just beneath a ridge of stone. With a powerful leap, she crossed the space in a moment, her fingers briefly closing on his cloak.",
        "I will be such a good father to her, Leeds told her.\n\n\"She already has a father!\" She scanned the darkness, the sensitive hairs on her body allowing her to sense his movements. When she felt him, she made another leap and crashed face-first into another stalactite. With a grunt, she fell and landed clumsily on the ground.\n\nI can teach her to be a monster like her grandparents.\n\n\"Fuck you!\" She fired the gun again\u2014but didn't see him in the flash this time. By a quick mental count, she was nearly out of bullets.\n\nThis place is a shrine to their transgressions, little spider. There is no hiding where you came from.\n\n\"What matters more is where you're going, you sick fuck!\"\n\nHow old will she need to be until she can mate? Leeds actually laughed out loud, his voice echoing from every direction. I would be such a good grandpa to\u2014\n\nLeeds made a choking sound, followed by the impact of flesh on stone. For several moments, all Velvet heard was the sound of dripping water from somewhere in the darkness.\n\nThe silence was broken by the sound of rustling fabric.\n\n\"If he took something from you, it isn't here.\" It was Abella's voice, and she didn't sound very happy.\n\n\"It's not what you think,\" Velvet whispered.\n\n\"Enlighten me.\" There was another meaty thunk, followed by a groan from Leeds.\n\n\"Do you have him?\" Velvet asked.\n\n\"For now. Have to be careful not to kill him is all.\"\n\nThere was a small rush of movement, and Velvet could almost picture Abella smashing Leeds' face into a nearby wall. The devil was being repeatedly stunned.\n\n\"Abella, I\u2014\"\n\n\"Had you smash my eggs but hid one from you?\" In the silence that followed, Leeds groaned.\n\nVelvet wasn't sure how to respond. She moved toward Abella's voice and got her hands on Leeds. He tried to fight her off as she searched him again, then grabbed his throat.\n\n\"Where is it?\" she asked. A shadow grabbed her by the leg, but vanished when she squeezed his throat hard enough that something popped.\n\n\"So I was right.\" Anger and disappointment laced Abella's words.\n\n\"Listen. There's a lot I need to say about\u2014\"\n\nShe's going to attack you, Leeds whispered in her mind. Your betrayal has enraged her!\n\nVelvet stepped back and put up her hands. \"Please, just hear me out before you do something you regret.\"\n\n\"Huh?\" There was genuine confusion now. \"I'm not going to risk letting this piece of shit go, even if I'm pissed at you.\"\n\nShe lies. There was just a hint of desperation in Leeds' tone.\n\n\"Leeds says you want to hurt me,\" Velvet admitted. \"I can hear him in my head, he keeps taunting me.\"\n\nThere was a loud snap, followed by a scream from Leeds. She felt him withdraw his presence and let out a sigh of relief.\n\n\"You only have one wrist left,\" Abella growled once he quieted down. \"You go in her head again, I'll break the other one. Or the first one again, whichever hurts worse.\"\n\nVelvet let out a sigh. \"It's true, I did hide one of my eggs from you. But it wasn't like the others, I promise. When Mike and I...when I held those eggs, they really were bad. Each one of them was a killing spree waiting to happen, but the one I hid was different.\" The other eggs in the clutch had all been a mottled grey, but the one she had kept had been the most beautiful blue she had ever seen in her life. Upon touching it, she had received a static shock that had set her hair on end. Whereas the other eggs had radiated hunger and intensity, this one had an aura of curiosity to it.\n\nShe didn't know how to convey all of these things to Abella, not in the dark where they couldn't even see each other. She needed the gargoyle to see how genuine she was, to know that these weren't just lies spoken in the dark.\n\n\"Look,\" she began, her hearts pounding loudly in her throat. \"You know it exists now. This bastard said he had it, and since he was on the roof of the barn, I figured he stole it out of the jeep. It was in the glove compartment. After we take care of this, you and I and Mike can sit down and discuss what happens next. I need you to trust me, to trust that my kind can be different. Despite our differences, you should know that I trust you. Maybe it's just because Mike does, and I'm in love with him, or maybe it's something more, I just...I need you to give me some time. \"\n\nThere was a long moment of silence, broken only by a groan of agony from Leeds.\n\n\"Velvet.\" Abella's tone had shifted drastically. \"The jeep was the first thing to burn. If he didn't take it, then...\"\n\nThe beating of her hearts was like a pair of hammers now, and Velvet's limited vision blurred in anger. She lunged toward Leeds and grabbed him by the shoulders.\n\n\"Did you take it? DID. YOU. TAKE. IT?\" She was shouting now, her veins filled with ice water as her human heart dropped through the floor and spiraled toward Hell itself. She was hyperventilating, waiting desperately for his response. When he said nothing, she shook him violently, his head flopping back and forth.\n\nLeeds let out a cough-filled chuckle.\n\n\"Never even went inside,\" he declared. \"I was too busy here, slaughtering the Nirumbi with the help of their own. You see, we're all monsters here, inside and out. And to be honest, even if I had stolen your egg, I would have smashed it on my own, because we all know that your kind are little more than\u2014\"\n\nVelvet let out a roar and ripped Leeds free from Abella's grip. She smashed the demon into the stone walls of the cave, her fingers digging into the horse-flesh of his head. Leeds let out a strangled cry, and the air grew thick around them.\n\nThe hairs on Velvet's body stood on end as a wave of darkness picked her up and smashed her into a nearby wall. Abella was shouting something, but Velvet couldn't make out a single word of it. She fought to stand, her legs weak beneath her as Leeds ran back out into the main cavern, his cape flapping noisily behind him.\n\n\"Grab him!\" Abella cried as she moved toward the exit. The ceiling was too low for the gargoyle to fly, and her running speed was very slow. Velvet could feel the impact of her massive steps as tremors that reverberated throughout her body.\n\nCursing, Velvet bolted past Abella in time to see Leeds gliding down to the bottom of the Nirumbi's main chamber. He cackled maniacally as the shadows thickened and broke free from the ceiling, each one a massive tentacle that reached for her. She dodged a few and took aim with her pistol, but Leeds had moved around the massive pillar in the middle of the cave.\n\n\"Shit!\" She sprinted along the nearest wall, her feet slipping on the wet surface of the cave. When she fell, she scraped up her arms as she tumbled to a stop near the bottom of the cavern. Her head was spinning now, and she stumbled sideways and tripped over a pile of bodies.\n\nUp above, the shadows were no longer reaching for her. Instead, they were wrapping around the main pillar of the cavern like a nest of anacondas. Each coiled shadow squeezed, making the rock beneath them groan.\n\n\"Velvet!\" Abella shrieked in panic from up above. \"Run!\"\n\n\"Abella, I...\" She was simply too dizzy. The dim light of the cave plus the odd echoes of laughter and breaking rock had thoroughly disoriented her. Stumbling forward, she heard a loud groan from the stone above, followed by a sharp crack.\n\nUp above, the ceiling broke apart. The shadows continued to squeeze as large fragments rained down from above. Stunned, Velvet looked up in time to see Abella swoop down through the chaos and grab her by the shoulders with her talons. Pain bloomed through her upper arms as the talons dug in so deep that she bled through her shirt, and the world fell apart as the main pillar shattered.\n\nThe opening to the chamber was close, but Abella had to tuck in her wings for them both to fit. Unable to fly, the two of them crashed into the tunnel and then slid to a stop. It was becoming impossible to breathe. Up ahead, Abella let out a cry of agony, which helped Velvet find her.\n\n\"Come on,\" she whispered as her fingers settled on stony flesh. She hooked her hands around Abella's waist and pulled. It was hard to maneuver in the narrow passageway, and the gargoyle had gone completely limp. Stumbling forward, she realized that her gait was off. She had lost one of her legs in the crash.\n\nThe ground rumbled again, and something else collapsed behind them. The passageway was so choked with dust she could hardly breathe.\n\nLeeds had planned this all along, she realized. To lure her away from the others. Had he known that Abella would follow? Or maybe he thought it would be someone else.\n\nDisoriented, it occurred to her that she might be moving deeper into the tunnels. The air was so clogged, she couldn't sense where it was flowing to or from.\n\nThe ground shook, and a chunk of rock fell in their path. Velvet let go of Abella and tried to push it out of the way.\n\n\"Leave...me...\" Abella's voice was muffled.\n\n\"No man left behind,\" Velvet rasped. \"Family motto.\"\n\n\"Not a man,\" Abella replied. \"Just a rock with...wings.\"\n\nVelvet shoved the rock around a corner and grabbed Abella by the wrist. \"You're family as far as I'm concerned, damn it!\"\n\nShe pulled, tears flowing down her cheeks. The world was closing in and she couldn't see. Her hands had gotten wet somehow, and Abella kept slipping free, so she wedged herself beneath the gargoyle's body and crawled forward on her belly, hoping they were headed toward freedom.\n\n\"This is my fault.\" Velvet was on her abdomen now, using her legs like poles to push them both forward. \"I shouldn't have let him trick me.\"\n\n\"Not your fault,\" Abella replied. \"Leeds. Huge...bastard.\"\n\nVelvet wanted to laugh, but couldn't. It was too painful. She moved down the tunnel, her fingers searching for purpose. A rock fell from the ceiling and clipped her in the head, and it felt like the world was sideways.\n\n\"Must get out,\" she mumbled to herself.\n\nThe tunnel widened and she lost her way. Sliding free of Abella, she moved around in an attempt to explore her options. There were three directions she could go, but which one was right? Crawling deeper into the earth would do them no good.\n\nSobbing, she wrapped her hands around her father's dog tags. What would he do if he were here?\n\nVelvet. Her father's voice startled her, and she turned her head to hear it better. It had come from the tunnel to her left.\n\n\"Daddy?\" She waited, not sure what she would do if she heard him again. There was only silence now, and she pondered waiting longer, but the ground rumbled beneath her again. The main cavern's collapse was triggering more activity in the tunnel, and she didn't have time to indulge her hallucinations.\n\nPicking up Abella, she moved toward a bigger opening to her right.\n\nVelvet. This time, his voice was stronger and from the same place.\n\nGasping for air, she crawled toward his voice. She had been in the dark for so long that she was seeing lights where there weren't any. Abella had gone silent, which concerned her even more. Was she just unconscious? Had the gargoyle died? Abella definitely wasn't breathing, but did she even need to?\n\n\"No man left behind,\" Velvet growled, crawling forward a few more feet. She could feel him now, always just around the corner. If she could just make it a little bit further, she would get to see him again. The minutes stretched into hours, and the flashes of light were becoming images. She saw her daughter first, a young woman with intense eyes that sparkled with magic. Mike came next, his smile warm as he laughed. They were connected in a way that she couldn't explain, and a strange sense of peace overcame her.\n\nShe saw her sister, then Uncle Foot, then Mike again. The images flickered rapidly now, and she realized that she had fallen asleep. Groaning, she grabbed onto some rocks and pulled herself forward. The tunnel behind her collapsed, jettisoning another blast of dirt and gravel.\n\nIf she put Abella down, maybe she would make it. In a moment of weakness, she tried to shrug herself free of the burden. Maybe the gargoyle would be fine and the others would come rescue her later.\n\nVelvet. His voice was disapproving, and she felt a chill on the back of her neck.\n\n\"I'm sorry, I...Abella, I'm sorry.\" She grabbed onto the gargoyle's wrist and pulled, but was too tired. \"I want to, I really do, but I can't. I can't!\"\n\nWe can. She felt him now, standing right behind her. The sound of boots on stone filled the narrow passageway and she felt their hands on her body. She couldn't tell how many of them, numbers had become a foreign concept, but they pulled on her, helping her to drag Abella further into the tunnel.\n\n\"No man left...behind. No man...left...\" She was light-headed, the air insufficient for breathing. Her thoughts were like balloons, each one floating away until she only had one thought left.\n\nNo man left behind. It had been her father's mantra, one he even said in his sleep. The words repeated in her head as the others helped pull Abella to safety.\n\nThe cavern widened, and she felt a cool breeze over her shoulder. She thought she could make out the twinkle of a star or two over the distant pines, but her vision was too blurry to see much.\n\nShe needed to rest. There was a good spot not far from the entrance, a smooth one that looked borderline comfortable. The others guided her as she slumped over, her eyes on Abella. The gargoyle wasn't moving, but the two of them had made it.\n\nThe earth rumbled once more, and the cavern belched out stone and dirt from where they had come. Gasping, Velvet turned her attention to the shades who had guided her.\n\n\"Daddy?\" She let out a chuckle. \"There are two of you.\"\n\nMy Velvet. Her father put his hand against her cheek. She was surprised at how warm it felt. I'm so proud of you.\n\n\"I'm tired,\" she mumbled, her eyes closing.\n\nI know, he replied. Rest now. You're in good hands.\n\nWith a sigh, she let the strength leave her body as the darkness swooped in to claim her. Her father took her by the hand and gave it a squeeze.\n\n\"I missed you,\" she whispered to the darkness.\n\nNobody is ever truly gone, fluffy girl.\n\nShe wanted to say more, but couldn't. Somewhere in the darkness, she heard singing and knew it was just for her.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nDear reader, we have moved into the endgame of Book Five. I hope you enjoyed this chapter, it was both fun (and difficult) to write. Some of you have made some phenomenal guesses at who was manipulating things from behind the scenes, so great job!\n\nBefore you go, make sure you leave me some stars, it's an easy (and free) way to support my writing. Thank you to everyone who has taken the time to send me feedback letters, I've been super busy this month and have been catching up on them (often I have to choose between writing or reading emails, I tend to choose the former to keep up my release schedule).\n\nIf you're looking to fill the void (and maybe gain some additional insight into this chapter), make sure to check out The Last of Her Kind here on Lit to learn more about Velvet's parents.\n\nMuch love to all of you, and special shoutout to those of you who have been going through tough times. It's a special feeling for an author to read that they've helped you through a difficult time.\n\nUntil next chapter!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "monster girls",
        "harem",
        "double penetration",
        "airtight",
        "temptation",
        "secret enemy revealed",
        "game night champion",
        "maybe we shouldnt play with dolls",
        "call back to last of her kind",
        "nobody is ever truly gone"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-74"
}