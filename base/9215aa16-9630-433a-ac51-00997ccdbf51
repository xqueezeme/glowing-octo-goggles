{
    "title": "Life as a New Hire Ch. 16",
    "pages": [
        "This story plays fast and loose with Ancient History and Linguistics; be warned.\n\nDo you think you know who you are? Step outside your comfort zone.\n\nReader edited - the faults are mine.\n\n*****\n\n(11:00 p.m. Thursday Night)\n\nRhada stood by the Lily Pond. She'd looked at her phone once. A couple had walked past, causing me to delay my approach and heightened Rhada's unease - an unexpected bonus. It wasn't too difficult of a shot with my air pistol. The only light functioning in the area went out in a crash of light.\n\nShe jumped slightly then crouched and scanned the surrounding overgrowth. The light had robbed her of her night vision which allowed me to get close. I snapped the air pistol off into its three parts. Running around with any kind of gun in NYC wasn't wise. In the same vein, the 'stun gun' I now brandished was all light and no shock. It was all theater for Rhada's imagination.\n\nWith the flash of my weapon, Rhada's eyes bore in on my location. Her small knife was now over-matched, so her only option was flight. A smart 'victim' would race for the well illuminated road close by. Hunters who hunted hunters did what Rhada did - she raced into a geographic feature in Central Park called the Ravine.\n\nIt was tough, uneven terrain off the beaten path. I had walked it once before, in dim light. This night I was aided by a half-Moon and the faintest clue of where the chase was leading while Rhada was having to figure things out as she ran. At the last second, she sensed she had lost the race. She spun around to slash at me - she was playing for keeps.\n\nI swung down, losing my false stun device while I knocked her knife free. I had lashed downward so that I could find her knife later; it was important to her. My tool cost $3.00 and I could live without it. We struggled. Rhada tried to scream so I covered her mouth with my sweater-covered forearm.\n\nDutifully, she bit down. More close body wrestling ensued and I could tell Rhada was truly famished for the attention. I cuffed her hands behind her back, slapped some Christmas tape over her lips - I swear that stuff has no adhesive - and retrieved her knife.\n\n\"What is it going to be, little Sweet-meat?\" I taunted her softly as I caught my breath.\n\nI had Rhada pressed face-first in the loam. Despite her strenuous efforts to keep her legs together, I rubbed my hand between her legs and over her cunt.\n\n\"Fuck it,\" I mused. \"You are a real whore. You are soaking wet over some guy running you down and making you a fuck-hole.\" I wasn't sure she was wet and being called 'fuck-hole' really excited her.\n\n\"You are probably so loose I couldn't feel a thing if I did fuck you,\" I kept up the pressure. \"Maybe I'll strip you down and leave you tied to a lamp post - write 'Free Slut' and see who is desperate enough to screw you. If I said '$5 per hole', do you think anyone would leave some sort of payment?\" She whimpered.\n\nSoon enough, I located her knife. Without warning, I slipped it past her waistband and began sawing/cutting her pants down past the crotch. She was wet alright. I loudly unzipped my pants and readied my rod. After slapping my cockhead against her molten labia a few times,\n\n\"What? You don't want to be used by every diseased homeless deviant and drunk rapist roaming the park?\"\n\nRhada shook her head rapidly in the negative.\n\n\"Do you really think you can do a damn thing to make me want to keep you?\" I egged her on. Rhada thrust her ass back. My cock rose up, Rhada whined, repositioned and managed to capture my penis on her second attempt. She wept with rapture as I began pushing in.\n\nAll I had to do was lean forward slightly and let Rhada do all the work. She hammered her pussy into my pelvis with a voracious yearning. I was rather concerned what she would have been like if it had been a whole month. Rhada was sobbing and shuddering as pleasure wracked her body. I almost missed the soft crunch of leaves right behind me.\n\nI snatched up Rhada's knife and rolled halfway over. Oneida, tears in her eyes and her face etched in horror, was poised to strike me.\n\n\"No,\" Oneida groaned in a small, devastated voice. Yeah, this was going to be hard to explain. Rhada, on hearing the noise, rolled on her side so that she was mostly shielded by me.\n\nDo not scream 'this is not what it looks like', or 'let me explain' to a traumatized girlfriend. Wait until they are not traumatized to escape the disaster.\n\n\"What are you going to do?\" I whispered. Suggest that she make a decision because, guess what, she needs to make decision, not stew in the madness of the moment.\n\n\"How could you?\" Oneida lowered her attack stance and took a half-step back.\n\n\"There is no way I can explain this,\" I sighed. My legs came up to shield my exposed crotch plus I dropped Rhada's knife. \"Even if I could make this sound rational, I wouldn't put you in that spot. This is an impossible reality.\" Okay, that last bit was bullshit.\n\n\"Is Rhada okay?\" Oneida began to focus on the immediate and relegated the past five minutes and the forthcoming repercussions to 'things to do later'. I freed Rhada's hands and then removed the tape. Rhada picked up her blade and readied it.\n\n\"Ask her yourself,\" I suggested. Sensing Rhada's insanity rising up. \"No Rhada, you cannot stab her. I won't allow it.\"\n\nRhada glared pure, un-distilled hate at Oneida, something the poor girl couldn't understand.\n\n\"Rhada, I came here to save you,\" Oneida gasped. She also prepared to fight.\n\n\"You came to take my C\u00e1el for yourself,\" Rhada spat. Oneida was back to not understanding anything. It would come soon enough. Women are women after all.\n\n\"I need to...get something from my backpack,\" I warned them both. No one attacked me so I pulled out a set of black jeans and black panties for Rhada.\n\n\"You brought a change of clothes for her?\" Oneida was still playing 'kinky games' catch up.\n\n\"Of course he brought me clothes, you insipid fool,\" Rhada seethed.\n\n\"How could we bind our souls into one if I had to walk around...?\" Rhada stopped. The idea of walking around naked in my presence appealed to her.\n\n\"None of this makes any sense,\" Oneida protested. It didn't matter.\n\n\"Oneida, are your guardians close by?\" I asked. I knew the answer, but getting that information out to these to ladies was relevant.\n\nOneida nodded.\n\n\"Rhada, get dressed and go home. Oneida, go home. I'll try to have this make sense to you one day,\" I said.\n\n\"No!\" Rhada yelped as if I'd stuck her. \"I cannot wait any longer.\"\n\n\"Rhada, unless you want Madi to find out and then have ringside seats as starving dogs tear me to pieces, you have to go,\" I insisted. I wasn't afraid of hungry dogs. The Amazons wouldn't waste the time when they could slit my throat and be done with it. We all three heard a rustle of footsteps maybe fifteen meters away.\n\nRhada looked at me as if she'd witnessed the murder of every kitten on the planet, then shot venom Oneida's way and finally snuck off, new clothes in hand. Oneida gave me a different look, one etched in sadness and unspoken heartache. She went off to bump into her bodyguards. I holstered my 'junk' and sat back, wondering why I dated crazy women. The answer was always the same - the sex was fantastic. I'd pay the bill later.\n\n(Friday Morning)\n\nI was damn tired getting into work. I locked my bike, walked into the lobby and realized something was horribly wrong. A dozen pairs of eyes riveted me with their aggression. The security chicks were in their usual places and unsettling in their nervousness. The dozen sets of eyes - those were Full-Blooded killers, not the standard 'Runner' security types.\n\nAdding to my discomfort, there was no Constanza, or even Naomi. A few of the normal ladies from the Security Detail where there - sadly, I had never caught their names, but they didn't look like they were waiting for me specifically. I walked up to the security booth, took out my ID badge and offered it up.\n\nWhat followed was mere formality. Of all of the hundreds of males in biker clothes coming into this masculine version of the Sixth layer of Hell, they needed to be absolutely sure it was me.\n\n\"C\u00e1el Nyilas,\" the women at the guard station intoned and in they swarmed. Armed with personal defense weapons (read: SMG's) with hair-triggers, I had a split second to decide who I really was.\n\nA few were clearly SD. The rest - House Guard for families I didn't recognize.\n\n\"Have I just won Publisher's Clearing House sweepstakes, or what?\" I grinned foolishly. I'm sure you can be very cool, calm, collected and rational while you laugh at death. I'm not that guy. One of the brutes tried to run off with my valise, a quick tug of war developed and four gun barrels were pushed into me.\n\n\"Let go,\" one of them hissed.\n\n\"Do I at least get a claim check?\" I countered. What I got was a gun barrel slammed down on the back of my hand. My fingers automatically flexed and my carrying case was taken away. The remaining seven members of the Welcome Wagon hustled me to a stairwell...not an elevator and down I went.\n\nTwo proceeded me into a moderately sized conference down two levels with the rest following behind. We were doing fine until the coffle chains came out. That was my 'fuck it' moment. It took me two seconds to realize they were no longer going to shoot me. I came to this revelation when I smashed the face of the guard right behind me.\n\nShe stumbled into guards four through seven behind her. Guards one and two, already in the room, holding my chains, rushed in. One came in with a low sweeping kick. I went even lower, caught her leg and whipped her into the wall. I was on my back as number two advanced. Our legs tangled up, we both grappled, but I had strength and leverage. I pounded her temple against the corner of the table twice - hard.\n\nThen came the pain. The rest flooded the room. Number two was down, number one was momentarily stunned and the other five were deadly serious and coming on fast. To all our credits, they didn't try to overwhelm me with numbers. They closed in from both sides of the table, backing me against a wall.\n\nI was pretty good at fighting. I had damaged three of them striking from surprise. Surprise was gone now, as was their sloppy arrogance. This was all business and there was no way I could take on even two of these skilled warriors at the same time. Any advantage I gained over one, I'd lose to the other one so down I went. I was chained up before I could stop seeing double.\n\nCollar, hands cuffed at the back, leg shackles and all linked by twin chains. I wasn't going anywhere fast. I wasn't done yet. I tried to squirm around to a sitting position.\n\n\"Stop that,\" one of the guards stated.\n\n\"I'd like to sit up, please,\" I requested. \n\nWith barely a pause, two guards came up, put my back to a wall then went back to their positions.\n\n\"Thank you,\" I responded. Several guards looked at me and smirked. Huh?\n\n\"They all said you would fight,\" the leader grinned. \n\n\"We were getting a little disappointed then you chose that chokepoint to make your stand. That was clever,\" she informed me.\n\n\"Actually it was the sight of the chains that set me off,\" I said. \"Against seven of you I had no realistic chance. If I let myself get chained up, I knew I was completely out of options.\"\n\nSeveral of the women nodded. Were any of them pissed? Apparently not. Even the one I'd cold-conked rubbed her temple and smiled at me. I worked in an insane asylum.\n\n\"Is there any way I could make a video message?\" I inquired.\n\n\"No,\" was the reply.\n\n\"Please. Aya of the Epona is at Summer Camp and I want her to know that I'm okay, but won't be able to see her for a while,\" I pled my case.\n\n\"You will never be able to see her again, so why bother?\" another asked.\n\n\"I love her. Better to give her the illusion I may one day return than the harsh reality that she is doomed to end up like the rest of you,\" I explained.\n\n\"Save some of that defiance for your relocation,\" the leader snickered. \"You'll need it.\"\n\n\"Thanks. I will,\" I sighed. There was a pause. They were being rather gregarious.\n\n\"You've accepted your fate?\" the one I'd knocked out questioned.\n\n\"The fate you want for me? No. That this will mean my death - yes,\" I shrugged.\n\n\"Bravado,\" a different Amazon snorted.\n\n\"You think so? Once I am relocated I have nothing left to live for. Every ounce of my being will be devoted to ending the hollow parody of an existence I'm left with,\" I stared at her. \"I've beaten your ilk enough times to know I'll escape that life before too long.\"\n\nThat earned me some silence. They began talking amongst themselves. The group was a mixed group of House Guard and Security Detail reinforcements from other facilities. They either knew each other, or knew someone in common. An hour in, this had become incredibly boring.\n\n\"When is the meeting?\" I asked a women temporarily not in a conversation.\n\nShe didn't look surprised. She hid it well.\n\n\"What meeting?\" she countered. I lowered my chin to my chest.\n\n\"Do you know where I work, what I did yesterday, or how easy it was to figure this out?\" I looked up.\n\n\"What do you know?\" she prodded. The others were now watching.\n\n\"I work for Executive Services, I spent much of yesterday making housing arrangements for a ton of emergency visitors, and since I've been doing so many stupid things, plus my reception this morning, I assume the New Directive is under attack,\" I laid out my case.\n\n\"If you figured all that out, why did you show up today?\" the leader wondered.\n\n\"I work here. I have a 6:00 am session on the firing range. Work starts at 7:00 and normally goes to 5:00 with a 3:00 pm break for knife training. Then I either bike home, or work out in the gym, or the pool. Barring being called back to work on a special order, I get a date, a meal and then sex until midnight,\" I mused.\n\n\"I came to work today for the same reason I came in yesterday and last week - I work for a bunch of homicidal lunatics, a few of whom I care for,\" I answered. \"Their friendship and affection is pointless. I'm good-looking and amusing, a passing distraction in their lives and none of that matters one iota to my survival. I face my condemnation alone and I am okay with that.\"\n\n\"You sound angrier than your words indicate,\" an Amazon noted.\n\n\"I am angry. I don't desire death,\" I shrugged. \"I don't think I deserve this fate yet here we are. Personally, I know I put my hope in karmic rewards for all of us.\"\n\n\"What would that be?\" the leader said. She was making small talk to alleviate the boredom.\n\n\"Today - today I think you deserve a lingering, 24 hour torturous death. Starting with the very youngest followed by the next youngest and the next youngest proceeding in quick succession so that the oldest of you watch your lineages waste away. I want you gripped with hopelessness and despair as you are rendered powerless to control your futures. That's a fitting ending for the Amazon race today,\" I stated.\n\n\"Does that fantasy make you feel better?\" she pressed, somewhat amused.\n\n\"Of course not,\" I laughed. \"That is surrendering to hate and that would make me as bad as all of you.\"\n\n\"You know nothing of us,\" she said and the others laughed.\n\n\"Yeah...right. So, how many of you have murdered your paternal unit? Did you herd them into gas chambers, shoot them in the head, or slit their throats?\" I grinned. \"Do you dump those men and your sons in a massed unmarked graves, or burn them like rubbish? Those poor bastards have gotten the last laugh,\" I chuckled. \"Sterile females, deformed babies...you taught those men a lesson alright.\"\n\n\"You are all such epic bad-asses, you've butchered your way to extinction. But, hey, you've got your racial superiority, right?\" I chortled.\n\n\"You should shut up now,\" the leader's eyes narrowed. I shrugged. This time, I had killed the mood so we sat in silence.\n\nAn undetermined time later, Constanza stormed in and threw my clothes at me - no sign of the rest of my gear, or valise.\n\n\"Get dressed,\" she ordered.\n\n\"Why?\" I asked. She kicked me. The kick was aimed at my ribs, but I able to set up a knee block up in time.\n\n\"You will do it because you've been told to do it,\" Constanza snapped. I stayed where I was. \"Help me get him dressed,\" she addressed the room. I lost the fight if there was any doubt. I looked like a re-dressed corpse. No one would think I'd dressed myself. A few minutes later, the whole troupe plus Constanza frog-marched me to the elevators. I was shackled up thus taking small steps.\n\nI ended up farther down that I'd ever been before. Along the way I was given several quick examinations before being taken to two massive wooden doors with two SD guards, one being Naomi. She looked at my chains speculatively.\n\n\"He has been summoned,\" Constanza informed the door guards. \n\nOne of my initial capturers began unlocking my restraints. I debated putting a knee to her head. That seemed rude so I refrained from violence. Naomi took me by the elbow while the other guard opened one of the doors. She led me into the nearly empty, cavernous room. Eight SD troopers were along the walls and Elsa stood at attention close to what I reasoned was Hayden's chair.\n\n\"Stand there,\" Elsa pointed to a large piece of slate with a rune upon it.\n\n\"Sure,\" I did as I was instructed. \"Why am I here?\"\n\n\"Your only real hope is to be quiet and well-behaved, C\u00e1el,\" Elsa told me, resuming her statuesque stance. I honestly figured this was it for me.\n\nMy jacket came off. I threw it to the closest chair. The tie came off next, looping it through my belt...because it looked weird. I kicked off my shoes and removed my socks, stuffing the socks in the shoes and tossing them to the chair with my jacket. Then I started my morning warm up routine.\n\nSure enough, groups of paired women began entering the room, giving me odd looks before taking their seats. I was doing some handstand push-up (thanks Yasmin) when Katrina walked in with a woman I didn't know.\n\n\"Good morning C\u00e1el Nyilas,\" she said. \"This is my cousin, Arwen.\"\n\nThe push-up, tuck, flip and finishing up with landing on your feet ain't easy. I added to the difficult by successfully landing on my designated piece of slate floor.\n\n\"Did your clothing magically fall of, or did they fail to finish dressing you?\" Katrina smirked.\n\n\"Cut me some slack, Boss. I'm three insults away from slinging poo,\" I grinned back.\n\n\"Nice to meet you, Arwen,\" I offered my hand. She looked at it, but didn't shake. \"She's your apprentice?\" I groaned to Katrina. She nodded. \"That is so not good for me. What did I do wrong this time?\"\n\n\"She thinks I have invested too much of our House prestige in this New Directive and you in particular,\" Katrina enlightened me.\n\n\"What is her survival stratagem then?\" I ignored Arwen while addressing Katrina.\n\n\"Have her cake and eat it too,\" Katrina mused. \"She thinks we recruit males then kidnap them and make them our slaves...because that has worked so well for us until now. To be fair, she favors genetics while ignoring such things as spirit, courage and loyalty.\"\n\n\"I'm about to die so any insight I might provide is pointless,\" I shrugged. \"Take care Katrina.\"\n\n\"Male, we are not here to kill you. You will be taken to a facility for breeding,\" Arwen 'clarified' things for me. Katrina and I both broke out in laughter. Arwen didn't get it. More and more women came in. With them arrived more House Guard. Soon the once vast room seemed to not be big enough.\n\nAmong other fans of yours truly was Ursula, the woman who sent Leona to kill me with her bow. It didn't take me long to determine there were four distinct groups. The smallest group hated my heart for daring to beat. The largest group seemed uncertain that me having a functioning cerebral cortex was a good thing. \n\nThe second largest group was worried - about their very existence, but weren't sure I was the answer. The final group, nearly as big as the next largest group, was Hayden's pro-New Directive faction. As a plus, they also weren't afraid to show me some affection personally. When there were only seven chairs left unfilled, Hayden rose for the opening prayer.",
        "The 'junior' members started the chorus as the last 'senior' joined the main intonation. When the chanting ended, everyone but Hayden sat back down.\n\n\"A small number of issues necessitate this unheralded meeting,\" Hayden began. \"A male knows our language, our nature and the secret. I seek guidance.\"\n\nAnd then the shit-storm began. The only people not involved were Hayden, St. Marie on Hayden's right, and an unknown older Amazon I didn't know. My life was being debated and I was losing in a bad way. Beyonc\u00e9 rallied support for me. She was sadly outnumbered but persistent. Among the oldest houses I saw Oneida sitting junior with house Arinniti.\n\nHer house was the only one silent, which seemed rather odd. A consensus was reached. I would get to live, but I would be imprisoned for the rest of my existence - not even a breeding male. That was my 'reward' for channeling the ancestors thus saving Oneida's life. Hayden rose once more, took a hand count and raised her hand for quiet.\n\n\"I will consult with the ancestors on this matter,\" Hayden announced. \"Does anyone have other salient points to add?\"\n\nThat was perfunctory. Everyone had already spoken so when the head of House Arinniti stood up, everyone around her whispered in confusion. She lightly slapped her hand on the table for attention.\n\n\"I do, High Priestess,\" the woman stated. Even Oneida looked worried and confused.\n\n\"I recognize Shawnee, Head of House Arinniti,\" Hayden nodded then resumed seating.\n\n\"My sisters, I seek your agreement that you refrain from comment before I have made my three key statements,\" Shawnee requested. She looked around the room, getting nods - some reluctant.\n\n(1)\"First, I must confess to a crime against the Host and the Council,\" Shawnee began. There were hushed murmurs. \"At the end of the Second Betrayal, my house argued tirelessly for the salvation of the males who remained loyal. The Council voted against us so the head of my house defied the council and spared three of our sons.\"\n\nMurmurs became shouts of outrage. Hayden used a subtle voice of menace to restore order.\n\n(2) \"Second, Two Ash Men arrived after the rest; a veteran fighter of three and a half decades and a young man of twenty years. Knowing there was no hope for our sons, we took these two aside and instructed them to take our sons south, to a dubious future. That was our crime and it might never have been revealed if it wasn't for the New Directive.\"\n\n\"As you now know, Oneida, my granddaughter and heir, gave her Death Pledge. C\u00e1el Nyilas intervened and, acting as a vessel for the Ancestors, he showed Hayden that her pledge had been rejected - for the first time in 3000 years,\" Shawnee looked around the table. \"At first I was simply grateful for my granddaughter's life.\" \n\n\"As that euphoria faded, I began to ask why he acted as he had. I began wondering why, while in dire pain, C\u00e1el refused water and comfort, instead asking for songs in our tongue? That made no sense...unless,\" Shawnee's face deepened in thought as she let the implications of that thought hang in the air. \"Thus I had C\u00e1el's genetic identity tested, to see if...\"\n\n\"To see if he was one of your bastard male offspring returned after all these centuries,\" Ursula stood and seethed. Hayden slapped her palm on the table for order.\n\n\"Oh Ursula,\" Shawnee smirked, \"the ancestors are wiser than you, or me. Had I received my heart-wish and had one of those boys return, they would be condemned by Arinniti's sins and the Council's decision.\"\n\n\"But...\" Shawnee persisted. Several Amazon's looked my way, clearly bewildered.\n\n\"We had to check the skulls of the ancestors for that,\" Shawnee stated. \"We took a tooth and it confirmed his lineage. He is the descendent of the young man. He never broke faith with the Host. He was unaware when ordered by the Arinniti what the Council had decided, thus he was guiltless.\"\n\n\"Who?\" Hayden demanded. Shawnee looked down the table, but not far.\n\n(3)\"C\u00e1el Nyilas is of the blood of Ishara,\" Shawnee stated. I waited to see which house leader freaked out. None did. Then I realized they were all staring at an empty chair and it just happened to be one of the chairs closest to Hayden. NOT good.\n\nThe screaming, shouting and yelling began. The house leaders were standing up, shaking fingers and launching threats at one another. Me? I was trying to recall who Ishara was. She eventually became Ishtar, Goddess of War. In the Old Kingdom Hittite she was also the Goddess of Oaths, Love and Medicine. The only three people at the table not going nuts where St. Marie, Hayden and the woman at her side.\n\nThat woman was looking at her tablet intently. Once more the group reached consensus and I was still boned. I was still a male, so my lineage meant nothing. I wasn't part of the Host. Hayden took another deep breath, acknowledging this second decision.\n\n\"You are all incorrect,\" the unknown tablet-reader spoke.\n\nEveryone looked at her and nobody was yelling.\n\n\"Elsa, who is that?\" I whispered.\n\n\"Krasimira, Keeper of Records,\" Elsa quietly informed me.\n\n\"What...what do you mean?\" Messina, Fabiola's Mom stammered.\n\n\"Only nine males went unaccounted for at the end of the Second Betrayal. The rest are recorded meeting their deaths in battle, or death by our hand. Of those nine, only one was of House Ishara and he would have barely been of mating age,\" Krasimira related.\n\n\"So?\" Ursula remarked. \"He's still a male.\"\n\nKrasimira looked at Ursula as if she was talking to a five year old.\n\n\"He was a member of the Host. If Shawnee of Arinniti is to be believed, Vranus, C\u00e1el's ancestor, lived and died in service to the Host. He was never removed from our records, so he died a member of the Host, so his descendants are also members of the Host.\"\n\n\"He married without permission of his house, thus he is illegitimate,\" an old enemy from Egypt chimed in.\n\n\"Perhaps,\" Krasimira nodded. \"That is a matter he must take up with the Head of House Ishara.\"\n\n\"There is no Head of House Ishara!\" Ursula stated the obvious and pointed at the empty chair.\n\n\"Again, you are incorrect,\" Krasimira shook her head. She half turned in her chair. \"There is a Head of House Ishara and he's standing right there.\" Even Hayden had a problem with that.\n\n\"But he's male,\" Hayden declared.\n\n\"That is Irrelevant,\" Krasimira said.\n\n\"To be the head of a house, one must either be elected by the peers of your house, succeed in accepted ritual combat, or, in extremis, it shall be the eldest surviving member of the Host of that house. C\u00e1el Nyilas is clearly the oldest member of House Ishara currently in the Host,\" she quoted Amazon law, \"so he is House Ishara's head.\" Silence reigned.\n\n\"Gun,\" I extended my hand to Elsa. She looked at me as if I'd lost my mind. \"Don't make me repeat myself.\" I growled. Elsa didn't look for guidance. She wasn't that type. She drew her .45 automatic and put in in my hand.\n\n\"The safety is engaged,\" she enlightened me. I left my spot and began rounding the table to 'my' seat.\n\n\"One more step and I'll shoot you where you stand,\" Ursula threatened.\n\n\"No you won't,\" St. Marie stood. \"I'll kill you first.\"\n\n\"Ursula of Marda, you have no justification to attack House Ishara,\" Hayden explained. \"I don't like this anymore than you do. We do not pick and choose which laws to follow. Accept the will of our ancestors.\"\n\nThere were between fifteen and twenty women close by aching to put bullets in me. I didn't stop because that wouldn't be me. I ended up by the chair and absorbed the essence of this tiny shard of reality. Was I the son of some lost 'First' House? Without a doubt, the placement of this chair was in the top ten on this side. The ones across from me were all clearly 'First' Houses as well.\n\nThe chair was old - maybe two hundred years. It held a sadness to it - no one had ever sat in it. It had been built knowing no one would ever sit on it. I thought about Pamela. I thought about holding Oneida up and refusing to let her die. That effort was me, physically conditioned over years, but I had never discounted willpower.\n\nIt was possible that man could indeed be found back somewhere in my ancestry. Few invaders wipe out all the indigenous inhabitants. Usually they intermarry with the invading culture overwhelming the previous one. I couldn't forget my present and future while examining my past. I put the gun down. Hostility washed over me in palatable waves.\n\nI pulled back the chair. The room was about to explode. I kept moving it back, farther and farther until it was clear I wouldn't be sitting in it.\n\n\"I will stand for House Ishara,\" I announced. \"I will not vote though I will speak my thoughts on matters. I will hold this spot until I have a daughter of age.\"\n\n\"No man of House Ishara has ever voted in the Council of the Host and no man will now,\" I kept going. \"Outside of those concessions to my Mothers, I am House Ishara. I am right here. If you have a problem with me, I will be easy to find. I have never hidden from you bitches and I'm not going to start now.\"\n\n\"You insult us,\" Messina stood up. Five other women joined her.\n\n\"By all means,\" Katrina stood, \"we eagerly await your challenge.\" Eight other women joined her. I hadn't suddenly become more popular. Between my refusal to vote, the bizarre revelation of Shawnee and the gravitas of the 'First' Houses, the more conservative women were retiring to regroup.\n\nMessina's backing down lasted only seconds. She immediately proposed that no male be allowed to be a member of the Host - disqualifying me by fiat. Krasimira wasn't going for that. Amazons could not legislate a member of the Host, or a House, out of existence. That's why they had killed the Ash Men in the first place. Technically, they had been Amazons.\n\nThey couldn't make them 'not-Amazons' and there was no exile in this society. Eminently practical, they made them dead instead. That was coming back to bite them in the ass now, because they killed them - they'd never taken them off the rolls. Poor, young Vranus had loyally led his charges away on orders. Had he fled, they would have put him under a death sentence - which I would have to fulfill.\n\nNo, my ancestor was unsurprisingly pig-headed. One senior warrior and three children...sure, let's walk off into the wilderness with hostile tribes all around. Why? They told him to and like a loyal little mutton-head he'd obeyed. If I believed in magic, or mysticism, I'd worry about how I ended up in that first board meeting speaking this fucked-up language.\n\nI'd re-examine how Leona had missed that crucial first shot because Aya had missed hers. Aya herself and the same spiritual twist that caused Oneida to hurl her life into my unsteady hands. I'd like to put that to accident and genetic abnormalities. Then there was Pamela. I'd like to think she was delusional, suffering from an acid flashback, or whatever.\n\nShawnee slid a wooden box - a meter by 70 cm - to me. Whatever parliamentary etiquette Amazons followed was unknown to me. I opened the box. Inside was what looked like a lamb, or sheep, skin pressed in some kind of glass. The artifact looked horribly old and was faded to the stage where it was barely legible.\n\nI let the buzz die down around me as I squinted at the picture. There were five figures - from the left was a tall one with a shield and spear, three small figures, and another tall man...with two axes. That was...no I couldn't accept that, not right now. Along both sides and the top were prayers of some kind, though they were too faded to make out accurately. On the bottom were five names. The right-most was Vranus.\n\nOneida hadn't been trapped by madness and pride. She'd been a slave to destiny. She had seen this skin, I was sure. She'd seen me with my two axes and when it turned out to be more than show, she'd had to save me and she couldn't tell anyone why because of the Arinniti sin. Perhaps she had some delusion we were distantly related. Now wasn't the time to ask.\n\nI closed the box and slid it back. In my absence, the verdict for House Arinniti was narrowed down. Some wanted Shawnee's head because she was the inheritor of those lies. Others wanted Oneida's head because it would be a more terrible lesson for her house. I didn't like those ideas.\n\n\"Are you seriously arguing about the paint on the doghouse while your home is burning down?\" I mocked them.\n\n\"You don't...,\" a different, yet still hostile, Amazon choked out.\n\n\"They didn't sell your sisters to the Roman coliseum,\" I glared. \"They valued bravery and loyalty over conformity. Did they defy the Council? Yes. I think we all agree with that. Put in context though, the rest of you fucked up.\"\n\nTons of 'how dare you' and descriptive insults to my family, gender, species and intelligence.\n\n\"Answer me this - Ursula, can you turn around right now and slit your 'apprentice's' throat?\" I posed. I could see the 'no' forming on her lips before the Great Wall of Implications fell on her head.\n\n\"Everyone in this room that voted for the slaughter of the Ash Men broke your own laws,\" I explained. \"You had every right to kill your sons. They were legally and physically helpless. The Ash Men - they were members of the Host...and there is every indication you butchered them without trial, or attempt at redress. Correct me if I'm wrong, but those men did not break the law; you did.\"\n\n\"You are correct,\" Krasimira said. \"All members of the Host must be informed of their crimes and seek trial if they disagree. Any sentence of Death can be appealed to the High Priestess, who can commute the sentence, assign an ordeal of some kind, or have it carried out.\" What doomed Leona was the obvious nature of her crime in front of the High Priestess.\n\nThe only person who protested was Ursula, the Mistress of Leona's house. Looking back on things, Ursula had acted insanely sending Leona to kill me. Yes, she would have derailed the New Directive for a few years. She would also have alienated every neutral member of the Council. The vote for the New Directive was distasteful yet deemed necessary by enough houses for it to pass.\n\nThe vote at the end of the Second Betrayal...that was the issue now. Ms. Senior Egypt made one last end-run around the process.\n\n\"What is to stop him from bringing more men into the Host?\" she muddied the water. Me? I pulled out my shirt and looked down at my chest.\n\n\"Is someone making fun of my A-cup sized breasts?\" I appealed to Hayden. A tiny smile crossed her lips.\n\n\"I am not sure C\u00e1el,\" Hayden responded. \"Fatima, be precise with the nature of your worries.\"\n\n\"He should not be allowed to recruit into his house until his status is decided,\" Fatima stated.\n\n\"His status is not in question,\" Hayden purred. That was the 'I'm about to lose patience with you' purr.\n\n\"I would never recruit anyone into House Ishara who was not qualified. It is insulting to think otherwise. Is there a specific male you are worried about?\" I inquired.\n\n\"I don't know you, or your ways,\" Fatima spat.\n\n\"You need to think about what you just said, Fatima,\" I snorted. \"So, not knowing anything about me you are making assumptions about what I might do? As you said yourself, you don't know me.\" \n\n\"If you did, you would know that while I wish virtually every Amazon alive would drop dead, thus making the world a much better place, I would never embarrass Katrina, or betray her. Now, are you going to keep looking stupid, or are you going to accept that House Arinniti not only acted in accordance to Amazon law 2500 years ago, they continue acting so today,\" I stated.\n\n\"After all, they risked everyone's anger for the restoration of one of your eldest houses. When I turned out not to be one of Arinniti's long-lost sons, they could have kept quiet. They did not. Arinniti bravery means one day a daughter of Ishara will bring her voice to this council once more. They certainly didn't do this for themselves. Ask yourself if you would have the courage to bring such possible shame to your family prestige,\" I challenged the Host.\n\n\"You trained your monkey well,\" Messina mocked Katrina. \n\n\"Ah...\" I mused as I picked up my pistol. \"Safety.\" I got a feel for the weapon. \"Messina, what's the name of your 'apprentice'?\"\n\n\"You wouldn't dare,\" Messina hissed.\n\n\"You dare to insult me and my House, Whore-Bitch,\" I smiled insanely. \"Why do you think I'll let you get away with that? I'm not going to kill her - just gut-shoot her.\"\n\n\"Pull that trigger and you will die,\" Messina spat. Her junior looked far less pleased with the turn of events.\n\n\"Not relevant. My House Prestige is too great to suffer such an insult. You did call me, the choice of a hundred generations of House Ishara ancestors, a monkey,\" I pointed out.\n\n\"C\u00e1el of Ishara, put the gun down...please,\" St. Marie sort of asked. I clicked the safety and put the gun back down on the table.\n\nMessina was looking terribly pleased with herself, ignoring 'The Golden Mare' coming around her side of the table. The hair-yank St. Marie inflicted made me recoil in shock and I was some distance away Messina. Slap-backhand-slap-backhand. St. Marie released Messina's hair. Messina stumbled back, fearful and furious at the same time.\n\n\"Are you going to exert some common courtesy, or shall we continue?\" the Marshal of the Amazon Host glared at Messina. \"I don't like him, or where he stands, but I am far more embarrassed by your behavior. At least the male exerts some restraint. The rest of you are acting like he is a weakling-idiot. He is not. Know your opponent dammit.\"\n\n\"Wait! Hayden, now that I'm...\" I got all excited.\n\n\"No, C\u00e1el, you still may not refer to the Marshal of the Amazon Host as 'Pony-Lady',\" Hayden scolded me. I snapped my finger over the lost opportunity. A pregnant pause was suddenly vacated by a snicker and then several more until half the table had to hold their hands over their mouths.\n\n\"Did you really call '****' St. Marie, 'Pony-Lady'?\" this unknown House Leader asked. She wasn't one of my fans.\n\n\"Only after she kicked my ass, totally humiliating me,\" I revealed. \"I got one punch in. Next thing I knew I was wondering how regularly they changed the fluorescent lighting in the Firing Range while I was on my back, soaking up the cold comfort of the concrete floor.\"\n\nIt took them a second to figure out what I meant. St. Marie was already marching back to her chair.\n\n\"You are very poetic,\" another commented.\n\n\"That is how I learned your tongue - I was taught Old Kingdom Hittite erotic and love poetry. I know the same in nine other forgotten languages, as well as four current languages,\" I informed them.\n\n\"Hayden, you would not dare chastise any other Head of House the way you treated - him,\" Ursula griped.\n\n\"In what possible universe would C\u00e1el Nyilas be considered normal?\" Hayden countered. \"He is not like any other Head of House. He forgoes voting because HE values our traditions.\"\n\n\"He does not sit in his designated seat at our table because he takes into consideration our sensibilities. This from a man we all decided to imprison forever not five minutes ago. If any of you think he does this out of fear, you are sorely mistaken. He is a person of many failings without question yet he is courageous to a fault,\" Hayden lectured the room. \"St. Marie, what was the first thing he said to you after you crushed him?\"\n\n\"He said 'What. Had enough already?'\" she snorted. \"Those were his exact words, lying on his back, looking up at me. I thought I had concussed him.\"\n\n\"This is not a humorous matter,\" Egypt Senior was still cranky.\n\n\"I don't know about that,\" St. Marie reposed. \"I found it to be fun actually.\"\n\n\"Even the part where he had the gun pointed at me was interesting. I was certain he was about to shoot me,\" St. Marie continued.\n\n\"Pity he missed you,\" Messina glared.\n\n\"He didn't miss me, Messina,\" St. Marie sneered. \"I told him to give me the gun and he gave it to me. He's not disloyal, just pugnacious.\"",
        "\"What of Arinniti's crime?\" Beyonc\u00e9 prodded. She wasn't feeling self-righteous. Quite the opposite; the mood had shifted away from bloodlust to uncertainty. Amazons liked decisiveness. They also liked only having to do something once and being done with it. That was the riptide of the New Directive - some houses couldn't let go of the fact they'd lost.\n\nThat constant pecking away at the plan were the half-measures Katrina was complaining to Hayden about. From my experience, the Ash Men was Katrina's goal all along. Had she been open and honest with this desire, there was no way any aspect of the New Directive would be implemented.\n\nIf you believed in conspiracy theories, Katrina had groomed me for some time. If you believed in luck, Katrina was cosmically lucky our paths collided. If you believed in mysticism, I was fucked. Let's not forget that there were three millennia of bad ass bitches on the other side of the spiritual divide who thought nothing of guiding me into a life full of fear, heartache and pain.\n\nA lengthy debate ended in a classic Amazon compromise - they forgot about it. Literally, they erased the crime against the Ash Men and Arinniti's 'omission' of sparing three of their sons. What had happened to all my 'Ash' brethren? Whoops - they were misplaced. They weren't erased from the rolls - that would make my existence inexplicable, so we remained honorary Amazons.\n\nI was sure their angry ghosts were totally mollified. I was sure me and the first female Pope would get it on too. As the meeting was breaking up, one of the 'unfriendly' Amazons shot me a remark.\n\n\"I supposed you are elated,\" she grumbled.\n\n\"Really? You think so? Here, let me sell all your underage daughters to Romany gypsies so that you never see them again and you'll have an inkling of how I feel,\" I smiled serenely.\n\n\"You should be happy you are allowed to stand in our presence,\" she got truly pissy.\n\n\"Lady, I won't be happy until I get to hunt hate-filled monsters like you for sport,\" I kept smiling.\n\n\"Until then, I'm afraid we are both going to have to live unsatisfying lives,\" I added.\n\n\"Perhaps we should handle this with a blood feud?\" she salivated at the prospect.\n\n\"Sure. I'll get the Neutron Bomb we have in the Armory. You chose whatever you like. I'll meet you downtown at noon,\" I proposed.\n\nIt is much better to make a nuclear weapon joke and not have every authority figure in the room glance at you nervously. Did we really have a nuclear warhead in the basement? Fuck if I knew. They'd have never told me if there was. I felt a hand on my shoulder and recalled the touch.\n\n\"C\u00e1el Nyilas, you are forbidden from engaging in blood feuds - in your case, feuds of any kind until one lunar cycle is completed,\" Hayden instructed.\n\n\"Thank you. I appreciate that,\" my honesty, heartfelt reply slipped forth. \n\n\"My judgment wasn't for you, C\u00e1el. You've caused catastrophic trauma to our society as an outsider. I tremble to think what you can do now that you are one of us,\" Hayden gave me a truly serene response. \"Give me a little time to prepare.\"\n\n\"Oh! Great idea,\" I exclaimed. \"Gotta go!\" and I raced for the door, tossing Elsa her gun.\n\n\"Should I shoot him?\" Elsa suggested. \"Only to slow him down a bit.\" I made it to the elevator carrying my jacket and shoes. With me were four sets of Amazons that wanted me dead and one set who were rather ambivalent about the whole matter.\n\nI caught one of the 'hater' juniors looking at me. I turned my head enough so we could make prolonged eye contact. I smiled. Reluctantly she smiled back. I leaned in slightly.\n\n\"Can I borrow your phone? SD beat me up earlier and stole all my stuff,\" I innocently requested. I was pretty sure she was as surprised as every other man-hater in the box that she handed it over.\n\nLike shooting fish in a barrel. I began making a few quick texts to the three crucial people in my scheme.\n\n\"What did you do that for?\" her senior hissed. With my brand new Stinky Pooh-Bah status, she couldn't knock the device out of my hands.\n\n\"I don't know,\" she pleaded to her superior. I finished up then handed it back.\n\n\"Your 'apprentice' has rendered House Ishara an important service that shall be entered into our records of boons and debts,\" I nodded gravely. \"What is your name?\"\n\n\"Gale,\" she batted her eyelashes. \"What did I do?\"\n\n\"What are you doing for lunch tomorrow?\" I magically conjured up her hand in mine with my fingertips coursing over her palm and wrist. \"I'll explain it then.\"\n\n\"You may not spend time with this...person,\" Senior insisted.\n\n\"We should not overlook an opportunity to make an alliance with a First House,\" Gale countered.\n\nBang! Looking like trout for lunch. Gale won, I won and we were meeting at my place so we could figure out where to eat - yummy. Somewhere in the episode, I'd introduce Odette into the mix. It was only fair. I was asking her to hide in Timothy's room until I got Gale warmed up after all.\n\nI was the first one of the 'team' to arrive. I was nervously pacing Katrina's office when Desiree and Paula showed up. Desiree took a casual seat on the sofa while Paula hovered around my desk.\n\n\"Is this going to be really bad, or really good?\" Desiree mused.\n\n\"Why should you have to choose?\" I laughed. \"Besides, we are aiming for epic status today.\"\n\n\"Why are we here?\" Paula worried. I stopped. I had a 'Eureka!' moment. There probably was a Bible for what I was planning to do, but they hadn't given it to me. I ran to the bathroom and came back with a glass.\n\n\"Desiree, I need two things. I need your sharp, pointy thing and for you to slap me until I cry,\" I looked at her expectantly.\n\n\"My pleasure,\" Desiree rocked up from her seat. \"Slapping then knife?\" I nodded. I was still in the painful smacking process when Buffy and Violet entered.\n\n\"Can anyone join?\" Buffy asked Paula.\n\n\"I...I don't think so,\" Paula shook her head. \"He's got a plan. I don't know what for.\" I dodged Desiree's final swing. I had gathered enough tears - I hoped.\n\n\"That was truly therapeutic, C\u00e1el,\" Desiree stated. \"Let me know if you need a repeat performance.\" She handed me her small knife.\n\nHelena and Daphne finally strolled in. I wove past them, retrieved a piece of paper which I tore in two and two pens.\n\n\"Helena and Buffy, please write your names down on these pages,\" I requested.\n\n\"What the hell?\" Buffy growled. \"What is this about?\"\n\n\"Trust me,\" I met her gaze.\n\n\"Buffy, C\u00e1el is an ass, but he's not crazy. He's up to something,\" Desiree intervened. Helena stepped up and wrote her name. Buffy followed suit. I took the pages to Katrina's desk.\n\n\"Come forth and kneel before me,\" I commanded.\n\nThis was the point in the ritual when I figured my death was most likely. Buffy shot an evil look at Desiree then very reluctantly complied. Helena followed. Hmmm...Amazons kneel with both knees on the ground. That puts their mouths almost...I had to keep with the program. I burned the two autographs and scattered the ashes.\n\n\"There is no Buffy DuBois. There is no Helena Shultz,\" I began. I dipped a finger into the shallow pool of my tears. I ran one down under the left eye of each lady. \"With this, I open your eyes to the joys and sorrows of our ancestors.\" That brought on a hush and the anger in Buffy's eyes evaporated.\n\nI cut my left forefinger then motioned them to do the same. First Buffy: I linked our bloody digits.\n\n\"With this, our blood is mixed. You are Buffy of House Ishara from this moment forth. You are the first of this House. You are our spear and shield,\" I met her gaze. She started crying.\n\n\"You are Helena of House Ishara from this moment forth,\" I continued on. \"You are the second of this House. You keep the records of our Host, keep track of our deeds, sins and accounts.\" Helena began weeping too. Had I said 'just joking', the cleaning team would have been finding torn pieces of me weeks later.\n\n\"House Ishara is dead,\" Daphne stated the obvious.\n\n\"Suffice it to say, long ago, House Ishara brought a male into their ranks as a member of the House,\" I started. I motioned for my two House-mates...members to rise.\n\n\"The Second Betrayal,\" Violet interrupted.\n\n\"Yes. During the Second Betrayal, some males remained loyal. My descendent was sent on a mission for the Host. The mission took him past his lifespan. His offspring continued on until you end up with me - being here - today. Suffice it to say, he was never removed from the rosters of the Host, thus every offspring was a member too,\" I recalled recent edited events.\n\n\"By Amazon law, House Leaders are selected by their peers, victors in a challenge for leadership, or...\" I continued.\n\n\"The eldest of the house,\" Daphne gasped. \"Since Ishara is...since all the female members of the Host are dead, you are the eldest member of the Host.\"\n\n\"You don't have to be a female?\" Desiree muttered. \"That's insane. We are Amazons.\"\n\n\"There hasn't been a male in the host for over 2500 years,\" I explained. \"It never came up. Back when they had them, there simply weren't enough men to worry about. Afterwards, there were NO men to worry about. Apparently your ancestors thought writing down 'eldest female' was redundant.\"\n\n\"That had to have gone down like a mouse passing an elephant turd,\" Paula muttered. We all looked at her. \"What? Since I met C\u00e1el, I've been writing down little phrases to use in situations like now. This was the first one I could recall.\"\n\n\"Actually, they wept tears of joy, lifted me up on their shoulders and sung paeans to my glory,\" I lied.\n\n\"So, when do you think the first assassination attempt will be?\" Desiree shook her head. This was a lot for her to take in. Not only was my tale fantastic, Buffy was her friend and Desiree knew that Buffy bled for a chance to join the Host and had done so for years.\n\n\"Why do you think I called Buffy first?\" I snickered.\n\n\"I won't let you down,\" Buffy declared with grim determination.\n\n\"Calm down, Buffy,\" I assured her. \"I don't think me being casually snuffed out is on their agenda. They've already gone through a torturous compromise to end up with this screwed up situation.\"\n\n\"So why did you pick me...and Helena?\" Buffy studied me.\n\n\"Buffy, you are the most amazon-Amazon I know,\" I told her. \"You like Helena and she said nice stuff about Daphne which showed her character, so I chose her next.\"\n\n\"Hey, this means I can finally slap Fabiola around,\" Buffy's eyes grew bright.\n\n\"Which reminds me - can I get any volunteers for Old Kingdom Hittite lessons for these two,\" I begged my 'new hire' companions.\n\n\"I'll take two nights a week,\" Daphne offered.\n\n\"I'll take one night,\" Paula added.\n\n\"I'll take a fourth,\" Violet completed the set.\n\n\"Damn it,\" Desiree cursed. \"This means Buffy must be taught the Prayer of the Ancestors.\"\n\n\"You are right,\" Buffy gasped. \"I accompany C\u00e1el to Council meetings now.\"\n\n\"One note - I don't vote,\" I informed them. \"I made that decision. House Ishara has never had a male vote for it and I'm keeping that tradition. I can speak, but not vote. When my daughter comes of age, she will have full rights.\"\n\nDesiree, Buffy and Helena were confused. Daphne, Violet and Paula, on the other hand, were enraptured. This was the only life - only traditions - they had ever known and I had sacrificed something of importance to them out of respect to their sensibilities.\n\n\"C\u00e1el's decision makes it easier for you, Buffy and Helena,\" Daphne explained.\n\n\"This allows the other Heads of House to get used to him being there - less of a culture shock,\" she continued. \"In a few years he may end up getting a vote anyway as they learn to respect him and House Ishara. You are one of the First Houses - reborn, I imagine.\" Buffy's eyes grew wide and her mouth gaped open.\n\n\"Yeah Buff,\" Desiree shook her head. \"One of the first twenty war leaders of the Host. You have the blood of Mycenaean warriors on your hands.\" \n\n\"C\u00e1el, I...\" Buffy began.\n\n\"I gave you nothing, Buffy. If you think there is someone more deserving than you, please point them out,\" I touched her tear-drenched cheek.\n\n\"I do want something from you,\" I said compassionately. Buffy was attentive. \"I want you to undergo a sex change operation and become a real woman.\" Ow! Buffy punched me.\n\n\"Buffy, you might not want to damage your House Head in public. It is bad for his prestige,\" Paula pointed out.\n\n\"Good point,\" Buffy frowned. \"C\u00e1el - bathroom - now.\"\n\n\"Uh-oh, no way, no how,\" I back-pedaled. \"Today has been painful enough. I had a run in with some Security Detail and House Guard on the way to the podium.\"\n\n\"What did they do to you?\" Helena inquired.\n\n\"For starters, they haven't given me back my valise,\" I complained. \"Also, who do I report these additions to House Ishara to? Finally, Buffy promised me she'd wear a thong and those little, circular Band-Aids if I got her into the Full-blooded gym again.\"\n\n\"Decorum, Buffy,\" Desiree stopped Buffy from punishing me. \"Decorum.\"\n\n\"Why don't you have to behave?\" Buffy glared at me.\n\n\"I'm the ghost of a man dead for over 2500 years,\" I winked. \"I'm allowed to be eccentric.\"\n\n\"I'll start calling around to find out who gets told what and where your stuff is C\u00e1el,\" Helena grinned. She was full-blooded now; the goal of every Runner who joined.\n\n\"What is next for you now?\" Daphne questioned.\n\n\"I imagine I have a job to do,\" I replied. \"I mean, Katrina works and she's head of House Epona. I'm an intern, just like I was yesterday. That hasn't changed.\"\n\n\"Oh goodie,\" Buffy smacked her hands together, \"you can still work for me.\"\n\n\"Oh - yay,\" I groaned sarcastically.\n\n\"What's wrong now?\" Katrina said as she waltzed into the room. I caught sight of a few SD chicks hanging around outside. \"There are for your protection if you feel you need it.\"\n\n\"Nah,\" I shook my head. \"I have that taken care of. I brought Buffy and Helena into House Ishara.\"\n\nKatrina stopped and looked at me. There was definitely some tension between us.\n\n\"You might want to consult with - others before you do something like that again,\" Katrina cautioned me.\n\n\"I'll definitely consider your offer. For now, I chose the best for the future of Ishara,\" I said, \"as is my duty and responsibility.\"\n\nWe locked gazes once more. Things had changed between us. They had to have.\n\n\"I seem to have missed my Firing Range practice today as well as the morning meeting,\" I reminded Katrina. She'd known what fate awaited me when I walked in the door and not warned me. I didn't blame her. That was what she was looking for - the anger.\n\nBefore, I couldn't have acted on it.\n\n\"C\u00e1el, get dressed. I saw Helena running off on some sort of errand which I imagine is your fault, so you are working with Daphne for the rest of the day,\" Katrina resumed her pace to her desk. She examined the nearly empty glass.\n\n\"My tears,\" I answered. \"It is part of my ritual for induction into House Ishara.\" In case you missed it, I never said 'my house'. This was on purpose. As long as I made no open claim to such a lofty spot, they could ignore me hanging around a bit better.\n\n\"You may want to talk with House Arinniti, or \u0160au\u0161ka about such rites,\" Katrina advised.\n\n\"He burned their old names to ash, scored their left cheeks with his tears to remind them of his ancestors and mixed his blood with theirs so they would be known to all as members of House Ishara from this day forth,\" Daphne related. \"It was very touching - simple and to the point.\"\n\n\"That's C\u00e1el for you, simple and straight to the cultural jugular,\" Katrina shook her head.\n\n\"He did nothing wrong,\" Buffy protested. I was getting dressed.\n\n\"Buffy, I have wanted to initiate you into House Epona for years. Family politics have prevented that. Sixty years after the First Initiative, fewer than a fifty 'Runners' have been brought into the Host. Mutual condemnation has kept each house in check - restrained from recruiting new blood into the Host.\"\n\n\"And now we have C\u00e1el,\" Desiree groaned.\n\n\"Who does care not one bit about social ramifications of bringing a hundred runners into one of the oldest houses of the Host,\" Daphne sighed.\n\n\"But, we deserve this,\" Buffy proclaimed.\n\n\"That, Buffy, is the point and the problem - you and others like you do deserve it,\" Katrina fondly regarded her 'now-Full-blooded' friend. \"Most of the other houses would disagree though, but they won't be able to convince C\u00e1el of this - thus begins the next quagmire of C\u00e1el's creation.\" It was the prejudice laid bare.\n\nThe 'Runners' knew they had very little chance of being accepted into a House. They had a long history of neglect to look back on. The few who had graduated had been virtually superhuman to be accepted. Then I came along. Suddenly, for some of the best and brightest of the 'Runners' there was a serious likelihood they could be brought into a highly prestigious House, because its leader was a nutjob.\n\nThis morning, when the meeting adjourned, House Ishara had been a tiny blip on the Council's radars. Those women so disregarded the 'Runners' they hadn't even thought about my reaction to the dilemma of the miniscule size of my house, despite the answer being all around them (though safely contained upstairs in their minds).\n\nHouse Ishara with a lone member, a male at that, wasn't a threat - not really. The specter that Katrina foresaw was something different. She saw a House Ishara with a thousand members, and all hardened, dedicated and trained Amazons - formerly 'Runners'. Loyal to me? No. Loyal to House Ishara? To their dying breaths.\n\nThe reasoning for this was Amazon-simple. They weren't fighting for, or honoring, me. They were doing it for my unborn daughters who would one day rise up to lead them. Daughters they would train to respect both Full-Bloods and Runners equally. That was the rejuvenation of our House. In the interim, they would do what I said because that was the will of their ancestors. \n\nThere were 52 - now 53 - existing Houses and 7 - now 6 - extinct ones. One house having a thousand members would be a serious headache and concern for the others. I didn't know the numbers of any of the houses. Working in Executive Services, I had the faintest inkling of overall Havenstone numbers. \n\nThey hid their secrets well so the best I could do was between 15,000 and 40,000 souls and I was starting to think the latter number was more accurate. Having a 1000 members in House Ishara was bad. What made it worse was that half of that total number were 'Runners'. If I made Ishara the largest House, the others had few options.\n\nThey could suck it up, attempt to destroy me, or begin their own recruiting program - making the First Directive finally successful.\n\n\"Katrina, I beg two more favors from you,\" I looked at my Boss. She nodded.\n\n\"I need nine names of people who can help me screen recruits for House Ishara,\" I began.\n\n\"I want them to join with Helena to work out a suitable number of prospective members as well as the ones to be initiated,\" I requested. \"Which is the second favor - needing Helena freed up to take care of House Ishara business.\"\n\n\"What is in it for me?\" Katrina regarded me with a witty smirk.\n\n\"I'll...I'll go visit Aya at Summer Camp,\" I sacrificed. Katrina blinked.\n\n\"Unexpected,\" she nodded. \"I can see you are serious about this. Done.\" No one who knew me would think me going to see Aya was a concession of any kind. It was still a favor for Katrina. I was getting to go because, while they had refused the male intern, they could not refuse a House Head.\n\n\"It will take me some time to make arrangements...how do you want to be referred to now?\" Katrina inquired. She meant as 'C\u00e1el Nyilas', or 'C\u00e1el Ishara'.\n\n\"Oh - oh, cool,\" I gleefully rubbed my hands. \"Big Mack Daddy - no, wait - Big Chief No-Tits - no, wait - how about...\"\n\n\"Everyone look away,\" Buffy snarled. \"Ignore the blood splatter, sound of breaking bones and the screams of terror and pain.\" She smacked her right fist into her left palm. Katrina arched an eyebrow.",
        "\"It is considered damaging to C\u00e1el's prestige to be public beaten by his 'First',\" Daphne clarified.\n\n\"There is no 'First' position in the house structure,\" Katrina noted.\n\n\"It's not my fault. I haven't gotten the 'Resurrecting a Dead House' guide yet,\" I retreated. \"Daphne we should be going. Buffy, keep looking promiscuous...and our House's chosen form of punishment shall be defenestration.\"\n\nAs Daphne and I fled, I heard Buffy say something behind me.\n\n\"What's defenestration?\"\n\n\"Throwing your victim through a closed window, preferable from a fatal height,\" Katrina informed her.\n\n\"Cool,\" Buffy mused then we were gone."
    ],
    "authorname": "FinalStand",
    "tags": [
        "amazons",
        "humor",
        "dark humor",
        "ash men",
        "roleplaying",
        "bondage",
        "bdsm",
        "ancestors"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/life-as-a-new-hire-ch-16"
}