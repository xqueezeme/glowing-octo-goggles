{
    "title": "Hannah's Night",
    "pages": [
        "\"You have been staring at him since we came in.\" Lisa complained, \"Either hit on him, or give me a shot at him.\"\n\n\"No.\" Hannah said with exasperation, \"To both. He's just doing his job. How much do you hate it when guys hit on you at work?\"\n\n\"Yeah, but like... He's a guy.\"\n\nHannah glared at her, \"How the hell are we friends?\"\n\nThat shut her up, but Lisa clearly wasn't understanding it. She was too busy salivating over the waiter at the bar like he was a hooker advertising their wares on the street.\n\nIt wasn't the first time a night out had ended up this way for them. It wasn't even the first time that Lisa had threatened to get in first and steal Hannah's opportunity. And had. Successfully.\n\nBetween the two of them, Lisa wasn't just the extrovert. She was the extrovert with no sexual inhibitions and the body of a model. Blonde, dimple in her cheek, startlingly blue eyes.\n\nHannah never had a chance whenever Lisa got involved.\n\nThankfully, her friend did usually offer a consolation prize. Either taking her out to dinner or taking her to bed, sometimes both. Lisa was probably Hannah's most regular sexual partner at this point in time.\n\nShe did always enjoy it, but she actually want to hook up with a guy without her friend stealing them away from her.\n\nProblem for tonight was that the guy who was hottest by far was the one working, and that was just awkward. Compliments and the occasional flirting is generally okay, but asking out the bartender was one of those things that felt wrong to Hannah.\n\nShe didn't want to imagine the number of skanks he had to deal with on the average night.\n\nLisa waved him over, causing Hannah to stomp on her foot. The girl glared at her, \"Hey! I just wanted a drink.\"\n\n\"Wanna drink him.\" Hannah said in a hiss.\n\n\"That too.\"\n\nThe waiter made his way over, \"Enjoying the night, ladies? Another round of shots?\"\n\n\"Nah, want to ease it back. Cocktails?\" Lisa said with a smile at him, \"Anything that you'd recommend for two disappointed women?\"\n\nHannah's jaw clicked as she got pissed at the lazy segue.\n\nHe frowned, \"Disappointed? Atmosphere isn't what you wanted?\"\n\n\"Oh, atmosphere is fine.\" Lisa shrugged, \"Good music. Drinks are nicely mixed. It's just... I was really hoping to find someone to take home, other than Hannah.\"\n\n\"Hannah.\" The waiter picked up on it immediately, \"Not so sure you'll find a one night stand here, I'm sorry. Most of the regulars, they look for an actual connection.\"\n\nLisa turned up her nose, \"Connection doesn't mean we can't just have some fun. But, I suppose I'm settling for Hannah. She usually takes an appletini. Boring. Got something more fun to offer her?\"\n\n\"You're the more talkative one, aren't you?\" He smiled at Lisa with amusement, and then turned to Hannah, \"What's the deal with her saying she's settling for you? You two an item?\"\n\n\"S-sometimes.\" She stammered, flushing red.\n\nHe laughed at embarrassment, \"Nothing wrong with that. I was trying to gauge if it was serious. Some couples like to play.\"\n\n\"No.\" Hannah swallowed, \"Not like that. We're just... Lisa is kinda... Forceful. Sometimes. And I don't mind. Sorry. I'm... Not that talkative.\"\n\nHe nodded and pulled a stool over, \"So, if I'm guessing correctly, my challenge for the night is to find a drink that you like, that makes you feel calm, and indulging. Make you feel like a princess.\"\n\n\"Perfect!\" Lisa lit up, \"Me, too. If you can.\"\n\n\"Oh, you're easy.\" He replied, \"A French Kiss. Champagne, lemon, raspberries, few other things. Fruity and exciting, but refined and smooth to the tongue.\"\n\n\"He's got you.\" Hannah tried a half smile.\n\n\"Well, I've got both your names now. Hannah and Lisa. One bubbly and a hell of a time. The other... Hmm. Haven't quite got you worked out. The shyness is just the surface.\" He scratched at his chin, \"Hamish, by the way.\"\n\n\"Hamish.\" Lisa said, as if she were a lioness growling, about to pounce on her prey.\n\nHis attention was still on Hannah, which almost made her feel like squirming. She was used to disappearing next to Lisa, not the fixed gaze of someone she was extremely attracted to.\n\nHis green emerald eyes with flecks of hazel were unshaken, barely even acknowledging the flirting of her friend.\n\n\"I think I've got an idea. Tell me if I'm barking up the wrong tree, here.\" He eventually said, surprising her as she realised she'd just been silently staring back into his gaze. \"Apple Kneel. It's basically a mix of sour apple and cherry brandy. Playful, light, but taste has a little bit of a kick. More than you expect at first.\"\n\nHannah flushed, and rubbed at the back of her head nervously, \"That... Sounds kinda fun.\"\n\n\"Coming up.\" Hamish stood up, ending the conversation.\n\nLisa waited until he was probably out of earshot and elbowed her, \"He was totally hitting on you. That's like, permission, now. You still not going to ask him out?\"\n\n\"That's probably just because you were doing everything except flashing him.\" Hannah said with annoyance, \"Can you ever keep yourself under control?\"\n\n\"No.\" Lisa laughed, \"But he was. Why not try and give it a chance?\"\n\nHannah bit her lip, and then shook her head. \"No. I'm not going to ask someone out whilst they're working. He's just doing his job, keeping women interested and around.\"\n\n\"Ugh. You're so boring.\" Lisa pouted, \"Well, because neither of us are getting anything, you get to go down first.\"\n\n\"You're pretty sure I'm coming home with you. Maybe I won't.\"\n\nLisa looked at her with wide and innocent eyes, \"I don't mean to take you for granted. You're the only one who can put up with me.\"\n\n\"You just want to get laid.\" Hannah ignored her.\n\n\"No, seriously.\" Lisa said, begging.\n\nHannah sighed and turned, giving the woman a quick kiss on the cheek, \"You are way too cute to stay mad at. Just tone it down a little.\"\n\nA hand landed not just on her thigh, but in her lap, and threatening to brush up against her panties. \"Promise.\"\n\nHannah flicked her in the head, \"Okay, do that again and you're going home alone.\"\n\nThe hand quickly pulled back as Lisa laughed at her, but it was more restrained. Her friend had heard her, loud and clear.\n\n\"You know I prefer getting romanced.\" Hannah shook her head, \"Why do you always default to... Owning me?\"\n\n\"Well, mostly because I was jealous, this time.\" Lisa said with a pout, and nodded at the bar, \"You made Hamish drop a glass when you kissed me. Imagine what he'd do if we started making out.\"\n\nHannah glanced over in surprise, and saw he really was cleaning up something. She didn't know if that was a good thing or a bad thing. She did want his attention, but she didn't want to ask. Had she just killed her remote chances?\n\nThen she turned to Lisa, \"Jealous? That's not really like you, either. Did you take me out because you were missing me?\"\n\n\"Sorta. Yeah.\"\n\nHannah sighed heavily, \"So that's why we're at a bar lacking in the usual hot factor. You were really hoping I'd settle, weren't you? You don't have to get me tipsy to convince me. You know I like the corny things. Could have read me a poem, that's cheaper.\"\n\n\"Well, maybe the drinks were a bit for me, too.\" Lisa shrugged, \"I mean, look at yourself, Hannah. You're not exactly that easy to approach. Even for me.\"\n\n\"Huh?\" She stared in confusion, \"You're the hot one.\"\n\n\"I'm the horny one. You're the hot one.\" Lisa retorted, \"Do you know how long I take to get my hair this wavy? It ain't natural the way you get that. Even your morning bed hair barely needs a damn brush.\"\n\n\"You'd know.\" Hannah teased.\n\n\"She'd know what?\" Hamish arrived with their drinks.\n\nLisa seemed almost annoyed at the interruption, as if she was trying to make up her mind on something. \"Oh, just girl stuff. Hannah doesn't think she's the hot one. Care to give a guy's opinion?\"\n\nHer eyes widened and she kicked her friend, \"Hey! Stop that. He's working.\"\n\n\"I don't mind.\" Hamish shrugged as he handed them their drinks and sat down again, \"Honestly, you two are hilarious. But, there's something you could do for me, too.\"\n\n\"Eh?\" Lisa raised an eyebrow.\n\nHamish shrugged, \"Nothing big. There's a bit of a bet going with the staff. About which of you is going to kiss the other first. French kiss. My money is on Hannah, obviously. Everyone else thinks it's going to be you, Lisa.\"\n\n\"You want us to help you make some money.\" Lisa glowered, \"Have a mind to ruin it for you. But... I suppose I can't let Hannah's insanity pass.\"\n\nHannah, for her part, was bright red. Red enough to almost hide her freckles, and blend in with her hair. \"I... I am not okay with this bet.\"\n\n\"Girl, you always kiss me first.\" Lisa rolled her eyes, \"So, french me, which I would very much enjoy, and then the guy you have the hots for can tell you how damn sexy you look. That's a win-win, right?\"\n\nHannah picked up her drink and sipped at it, almost wishing she could climb inside it and hide.\n\nHamish had been right, she really did like it. The tang and fizz made it fun, but it was also easy to drink.\n\n\"Well, suppose I'm being unfair.\" The waiter said carefully, \"I have to say, I go for the redheads, usually. Especially when it isn't quite curls, like yours. Did you know most redheads have brown eyes? Yours are blue. That makes you some kind of rare beauty. Hard to approach. Almost like a mirage.\"\n\n\"Guy has game.\" Lisa said jealously.\n\nHannah wanted to hide under the table with all the attention pointed in her direction. She smiled sheepishly, staring at her feet, \"Th-thanks. You're not bad yourself. But I guess you know that. I'm sorry.\"\n\n\"I've been flirting. Very obviously.\" Hamish stated openly, \"And maybe the bet started as an excuse to at least see something before the two of you take off.\"\n\nLisa elbowed her, \"See? This is the part where you ask him when he gets off shift.\"\n\n\"It doesn't feel right.\" Hannah whispered.\n\nHamish leaned forward just a little, \"You know, the concern about whether or not I'm accepting... That's exactly why I decided it was okay to flirt with you. You won't take it too far.\"\n\nHe slid a piece of paper onto the table, \"And now, here's me hoping I haven't taken things too far. I'll leave the two of you to it.\"\n\nLisa snatched the slip before Hannah could, and giggled, \"He totally gave you his number. I don't really want to give this to you. You'd choose him over me, any night.\"\n\nHannah glared at her, \"Give it back.\"\n\n\"Nah.\"\n\nShe moved her feet uncomfortably, \"Lisa. Come on. Give it back. Don't play this game. You know how hard this stuff is for me.\"\n\n\"Make him some money and I will.\" Lisa tried to extort her.\n\nHannah turned her attention back to her drink, sipping at it and feeling down. \"You are crazy possessive tonight. It isn't fun anymore.\"\n\n\"Sorry.\" Lisa put the note down beside the drink.\n\nShe shrugged, \"Is there... A reason?\"\n\n\"Doesn't matter.\"\n\nHannah sighed and glared over at her friend, \"No, spit it out. You took me out to drinks, to calm your nerves, just to ask me to sleep with you? That doesn't add up. You've sent me text messages that are as subtle as a single word to ask me to fuck you, before. What's up?\"\n\n\"Another time. When you're not getting tapped by a freaking sexy guy.\" Lisa said with disappointment.\n\n\"And there you go, again!\" Hannah said in frustration, \"Assuming my choices for me. I hate it when you do that.\"\n\n\"Tell me I'm wrong.\" Lisa rolled her eyes.\n\nHannah thought about Hamish topless and went a bright red, \"Well, probably not. But that doesn't matter. You're still not supposed to assume. Maybe I wanted carpet today.\"\n\n\"I was getting up the courage to ask you something. That could ruin our friendship.\" Lisa said tiredly, \"Moot, now. You managed to get the guy, even without trying. So you should try it. He seems the romantic type. Could play out as more than a night of fun.\"\n\n\"Huh? Ruin our...?\"\n\nLisa shook her head, \"Forget about it.\"\n\n\"We've been friends since we were twelve. Half our lives. Got to be something huge if you think it could possibly wreck things.\" Hannah said seriously.\n\nThe blonde took a large mouthful of her drink, \"Okay. Fine. You know how you said we weren't a couple? And didn't hesitate? That... Really hurt. Because I was maybe thinking of asking you. And it isn't just the sex.\"\n\n\"Are you in love with me?\" Hannah blurted it out in shock.\n\nLisa finally blushed, shrugging without saying anything.\n\n\"Seriously, Lisa? How long for...?\" Hannah said in consternation, \"This better not just be because you're jealous I finally might have a date. If this is about Hamish, I will get so mad at you.\"\n\nThe woman smiled sadly, \"No. It isn't about the date. I wouldn't have brought him up if I knew this would happen. I just wanted you in the mood to settle for me. Because you always settle for me. Just never see me.\"\n\n\"How long have I missed this for?\"\n\n\"Do you remember the first time we settled for each other?\" Lisa asked.\n\nHannah nodded, \"My twenty first. Caught my date with his hands down someone else's pants. So I announced I was bi and dragged you off to my bedroom to try and ruin the party atmosphere.\"\n\n\"I was hoping it wasn't a one time thing.\" Lisa stared into her glass, \"Made sure it wasn't just a one time thing.\"\n\n\"Three years.\"\n\nShe shrugged.\n\nHannah bit her lip, struggling not to cry. \"My best friend has been letting me use her for three years, because she has a crush on me, and I didn't even notice. Fuck. I am a total piece of shit.\"\n\n\"No!\" Lisa exclaimed loud enough to draw attention, and cringed, \"Look, that was my choice. Just like tonight was. So I'm going to walk away, you're going to have fun with Hamish, and we're going to forget this conversation ever happened. Better that way.\"\n\n\"I don't want to get laid anymore. I want to work out if we're compatible. I want to think this through.\" Hannah shook her head.\n\nLisa looked sullen, \"It was unfair of me to even bring it up. But you pushed me. It'd wreck our friendship.\"\n\n\"You're so... Stubborn.\" Hannah complained, and then a wicked thought occurred to her. It made her feel wet and mean at the same time. The kind of naughty that she loved about Lisa.\n\nShe waved the bartender over again.\n\n\"Don't you dare turn him down.\" Lisa complained.\n\nHamish threaded the crowd to them quicker, \"Something else for the talk of the night?\"\n\n\"I'll help you win your bet. Even go on a date with you. But there's conditions.\" Hannah said quickly, before she had a chance to back out, \"It'll be a competition. You and Lisa. Whoever can romance me better. Playing for keeps. Interested?\"\n\n\"Oh.\" Hamish said in surprise, \"Not just a one night stand?\"\n\n\"Might have misled you. She likes romance.\" Lisa said guiltily.\n\nHe smiled at Hannah, turning her stomach into butterflies, \"I was sort of hoping to impress. Not so keen on competing with someone who both knows you and is hot as hellfire. I might lose.\"\n\n\"Does he deserve a handicap?\" Hannah teased, beginning to feel confident.\n\n\"No. You always prefer guys. It isn't fair.\" Lisa retorted, and then looked somewhat pathetic, \"I don't want to lose this way, Hannah.\"\n\nHannah turned and planted the kiss on Lisa. She pulled the woman into her lap by the front of her dress, making sure to let not just her friend but the whole world know her intentions.\n\nLisa tasted as sweet as she always did. As hesitant as she always was. A moment from giving in and letting her violent passions show, but afraid of doing too much, too soon.\n\nHannah pulled their mouths apart, a trail joining them momentarily. \"You've won that bet, Hamish. Question is, are you up for a challenge?\"\n\n\"Holy shit.\" The man very nearly stuttered, \"I wasn't wrong about your hidden side, was I?\"\n\n\"Nope.\" Lisa practically purred, and tried to resume kissing Hannah. Who pushed her back into her seat.\n\n\"Lisa's got tonight to impress me. I'll send you my number. But don't wait too long. She wants to win. And she cheats.\" Hannah said, using the last dregs of her confidence and adrenaline.\n\nHamish smiled and nodded at her, \"I... I won't.\"\n\n\"Leaving. Now.\" Lisa ordered.\n\nHannah laughed and put her money on the table, including a generous tip, and let the extremely horny woman hustle her outside, and away from the hot bartender.\n\nThey got about three steps outside the bar before Lisa had pushed her up against a wall and was kissing her neck, lifting up one of her legs to ride up the tight dress. Her other hand held Hannah through her panties, pushing lightly but firmly against her.\n\nApparently the competition was all it had taken.\n\n\"Mmm. We going home, yet?\" Hannah asked, enjoying the attention.\n\nLisa spoke between kisses on her neck, playfully nipping at the end of each, \"Taxi... Is on... The way.\"\n\n\"Fuckin'... When did you do that?\" Hannah struggled not to moan at the attention, keenly aware that they were in public and that Lisa did not seem to care.\n\nLisa's teeth sank gently into her exposed shoulder, making Hannah shudder in excitement. \"Oooh. Stop it. Wait... Until we're home.\"\n\nThe blonde reluctantly released her, taking her hand and half-pouting. \"I used the app whilst you were convincing Hamish and ignoring me. It was only like three buttons. Your place or mine?\"\n\n\"Yours.\" Hannah shrugged, \"You are supposed to be doing more than just sleeping with me, you know?\"\n\n\"Oh, yeah.\" Lisa grinned and leaned over to kiss her neck again, \"You're... Just... Irresistible.\"\n\n\"You're ruining my underwear.\" Hannah complained as she shuddered under the touch.\n\n\"Good.\"\n\nHannah groaned quietly, \"Not for whoever's car I have to sit in. That's mean.\"\n\n\"You think about other people too much.\" Lisa was completely lost to her lust. She always got like this, focused. It was embarrassing in public, and amazing in private.\n\nHannah tried to lean away from the kissing, \"Where the hell is the -. Thank god. Taxi.\"\n\nThe vehicle pulled to a stop and Hannah dragged Lisa towards it quickly, whilst the woman stared at her with a deep and growing hunger. Any hope that Lisa would be more contained on their way home was absolute folly.\n\nThe driver had to remind Lisa to sit in her own seat more than once, as she tried to lean out of her belt to take more of Hannah's attention. Though, he didn't seem annoyed. More amused by the lustful display he was getting an eyeful of.\n\nBy the time Hannah found herself heading inside Lisa's apartment she was certain she had three or four hickeys clearly showing on her neck.\n\n\"God, you're possessive.\" She complained, as Lisa pushed her into another wall, this time biting her neck from behind.\n\nAn agile hand snuck inside her panties, a slender finger slipping down passed her ass and dipping into the edge of her pussy.\n\nHannah bit her lip at the intrusion, moaning loudly, and continuing to try and resist her best friend. \"I know... You offered me a drink... But seriously.\"\n\nLisa kissed gently at her ear, and eased the finger up to the first knuckle. \"Tonight is mine, isn't it?\"\n\n\"Y-yes.\" Hannah gasped.\n\nThe finger moved in to the second knuckle, beginning to gently probe her. \"You're mine for tonight, aren't you?\"\n\n\"T-technically.\" Hannah shivered, \"Oh, shit. That's sensitive.\"\n\nLisa kissed at her neck, \"Then, tonight, I want to show you. I want you to understand that this isn't just some crush. That what I feel for you goes beyond just fun. That I want all of you to myself.\"\n\nWith that, the finger was inside and beginning to curl against her most sensitive parts. Not just making her flow, but making her knees shake as she gasped, leaning her forehead against the wall.\n\n\"S-s-sensitive.\" Hannah moaned loudly.\n\nLisa bit her, pushing her towards her edge. Making her cum whilst she was forced up against the wall, at the mercy of this lustful beast. Ignoring her cries.\n\nHannah jerked, hitting her head against the wall as she grunted and stiffened enough to hurt her neck.",
        "Lisa tucked an arm around her waist to try and hold her upright, before breaking off the bite with a laugh as the two of them ended up on the floor.\n\nHannah glared at her, rubbing at the most recent bite, \"Damn it. Do you know how much cover up I am going to have to wear tomorrow because of you?\"\n\nLisa shrugged sheepishly, \"What can I say? You're tasty?\"\n\n\"Go the fuck to the bedroom and wait for me.\" Hannah said angrily, still rubbing at her neck, \"I need to pee, first.\"\n\nThe blonde stood up, twirled happily, splaying out her tiny dress and showing off the black lace panties beneath it, before running off.\n\nHannah shook her head with annoyance.\n\nShe cleaned out her first orgasm of the night, and half a full bladder, before dumping her sodden underwear in the laundry on the way passed.\n\nLisa was lying on the edge of the bed, one knee raised, as she tried to strike a sexy pose. Hannah could see the humour in it, the barely concealed grin, and the awaiting excitement.\n\nShe crossed her arms, \"How many bruises do I have, right now?\"\n\n\"Oh, don't be like that.\" Lisa stuck out her bottom lip. \"Can't you just punish your bad girl, instead?\"\n\nHannah rolled her eyes, \"God, fuck are you horny tonight! What did you do, pop a blue pill?\"\n\n\"Well, I've got a plan. For when you finally get around to making me cum.\" Lisa said sheepishly.\n\nHannah laughed softly, \"Let me guess, you're going to tell me you love me for the first time? That was obvious.\"\n\n\"Still gonna.\" Lisa pouted.\n\n\"How. Many. Bruises?\"\n\nThe blonde sighed, \"I dunno. Five? I'm sorry, but I know you love being bitten, and I like biting. Is it really that big a deal?\"\n\n\"You pinned me to the wall, you brat.\" Hannah said with irritation, \"You're being really forceful. So, yes, I think you need to be punished.\"\n\n\"Oh.\"\n\nHannah's mouth curved into a devious grin, \"So... You wouldn't happen to have those handcuffs lying around, would you?\"\n\n\"Oh, no.\" Lisa breathed out, \"Oh, you always tease me so bad with those.\"\n\nHannah shrugged, \"If you want this tongue to touch that cunt, you're going to need to be tied to the bed first.\"\n\n\"Fuck.\" Lisa shivered, and scampered up the bed, leaning over and pulling open her drawer to reveal a variety of toys and tools for sex.\n\nHannah walked over determinedly, and picked up the leather handcuffs. She grabbed Lisa's proffered wrists and pulled them above her head, making her lie down as she tied her to the headboard.\n\nThen she walked to the end of the bed and pulled out her phone. She grinned as Lisa looked at her in confusion, and then pulled out the scrap of paper and called Hamish.\n\nLisa's confusion increased, \"You're not just leaving me here, are you?\"\n\n\"Hey Hamish, it's Hannah.\" She ignored the woman, \"I got the feeling your shift was close to wrapping up. You off, yet?\"\n\n\"Eh, yeah, yeah. Is something wrong? You leave something at the bar?\" He asked in confusion, \"I thought you were putting me off until another day.\"\n\n\"Actually, I noticed something.\" Hannah's confidence held firm, pushed onwards by her own lust, \"You were a little bit into Lisa, weren't you? She was a bit of a handful, so you preferred me, but you did kinda like her, right?\"\n\n\"Kinda.\" He said suspiciously.\n\nHannah grinned, \"Oh, good. You see, I've got her tied to the bed. Begging me to play with her. I'd really like to make her watch. You feel up to something like that?\"\n\n\"You... Want me to fuck you... Whilst your friend watches? Your friend who wants to be your girlfriend?\"\n\nHannah laughed wickedly, \"Aha. Interested?\"\n\n\"Fuck, yes.\"\n\n\"Text you the address.\" Hannah laughed and hung up on him as Lisa stared at her in disbelief.\n\nThe woman shook her head, and then yanked at the cuffs, to little avail. \"Oh, come on! You can't be serious, Hannah! That's too much. Even for you.\"\n\n\"He'll take a while to get here.\" Hannah purred, stalking up the bed on all fours until her head was in position. She ducked down, kissing gently at the blonde bush, \"Plenty of time for us to play before he gets here. But you don't get to cum. Not before then.\"\n\n\"Oh, fuck.\" Lisa shivered, \"What have I done to you?\"\n\n\"You deserve to be punished, don't you?\"\n\nLisa swallowed, \"Maybe. But... Someone else? We've never involved anyone else before. I don't know if I'm okay with that. Not tied up.\"\n\n\"How else am I going to stop you stealing his cock?\" Hannah raised an eyebrow, \"You're totally going to want to fuck him. Look, I just kinda want you to eat his cum out of me. If it's too much, we've got our safety word. Right?\"\n\nLisa considered it, but didn't seem that convinced.\n\nHannah pouted, \"Really? I let you be all aggressive, didn't I? Do I need to call him again? It's up to you.\"\n\n\"It sounds like one of those things that is hot in theory and terrible in practice. Like eating melted chocolate off me.\" Lisa said hesitantly.\n\nHannah sighed and reached up to take the cuffs off.\n\n\"I'll try it.\" Lisa said quickly, \"It does sound hot. I really do like performing for you, and I don't feel trapped. It's just... Is he going to realise how much of what we say and do is an act?\"\n\nHannah leaned down and kissed her gently, \"Thankyou. For trying it. For me. I know I have a habit for going too far.\"\n\n\"You are making up for teasing me, right?\" Lisa asked cautiously, \"It isn't actually a punishment, is it?\"\n\nHannah shrugged, \"I guess a lot of it will depend on Hamish and what he can handle? But I'll try. Worst comes to worst, we'll stop, and then I'll wake you up in the morning the way you like it.\"\n\n\"Okay.\" Lisa agreed, \"But, in future, do you remember that conversation about discussing fetishes before we try them?\"\n\n\"Sorry.\" Hannah's face fell, \"I just... Get caught up in the act.\"\n\n\"I know, sweetie.\" Lisa replied, \"Now... How about you kiss me until we're back in the mood, again?\"\n\n\"I love the way you taste tonight. The drink is almost as good as the real thing.\" Hannah smiled before she began frenching the woman, again.\n\nShe was busy dancing tongues, and her fingers running along Lisa's thighs when the front doorbell went. She sat up slowly, letting Lisa pull at her tongue as she did, \"You ready for this?\"\n\n\"Remember our safeword.\" Lisa cautioned carefully.\n\n\"Frumpkin.\" Hannah shrugged before dancing off to the front door.\n\nPeeking through the hole in the door she saw Hamish standing there, looking anxious. He was wearing a casual black hoodie, that somehow made him seem even sexier.\n\nHannah opened the door and smiled nervously at him, \"Hi.\"\n\n\"It wasn't a prank, was it?\" He saw her face.\n\nShe shook her head quickly and stepped back, \"No. No. I'm just... Never done this before? If it helps, Lisa is pretty nervous, too.\"\n\nHamish nodded slowly as he stepped inside, \"So, eh... What do...?\"\n\nShe took his hand, marvelling at how firm it was, and dragged him quickly into the bedroom. She saw him stare in surprise at the flushed blonde lying on the bed, her dress up around her stomach. Her black lace panties on full display and obviously wet.\n\nHannah swallowed nervously, \"So, um... We should probably start with some rules? Lisa and I have a safeword. Either says it, everything stops.\"\n\n\"I'm fine with that. Do I get to know the word?\" He asked quickly, \"I'm not doing anything to hurt anyone. Tied up is fine, hurting isn't.\"\n\nLisa smiled at him, \"Oh, he's a gentleman. Hannah, skip the kiss. I reckon you should blow him.\"\n\n\"Holy shit. You are into this.\" Hamish was surprised.\n\nHannah lifted her dress to reveal she wasn't wearing any panties, \"Very. Oh! You thought the bruises were me getting hurt? No. Lisa's just... We both like biting. Don't worry, I won't bite you.\"\n\nHe laughed nervously, \"Never been with anyone willing to share before.\"\n\n\"Being unwilling is one of my kinks.\" Lisa explained calmly, \"I'll look like I'm uncomfortable, but I'm not. Okay? It's my act. Just let us know if it's too much.\"\n\n\"Sure.\" Hamish frowned, \"How?\"\n\n\"You can just say stop. It's me who that word doesn't mean anything for.\" Lisa said with a smile, \"And now, to get into the act... Don't pay attention to him, Hannah. Pay attention to me. My wet pussy. Can't you just eat me, first?\"\n\n\"You've been a bad girl.\" Hannah's eyes lit up, and her hands tugged at his belt, undoing it quickly and dropped his jeans to the floor. Revealing a sizeable bulge in his boxers. \"So you get to watch what you want, but not get it.\"\n\n\"Holy crap.\" Lisa said as Hannah pulled down his underwear to reveal his semi, \"You're right. If I weren't tied up, I would totally be jumping on that.\"\n\nHannah licked at the head gently, \"But you are. So it's all mine. You don't mind, do you, Hamish? If I go ahead and put this in my mouth?\"\n\n\"No.\" He groaned audibly.\n\nShe slid his cock into her mouth, and then continued expertly, down her throat until she was nuzzling his bush. Not a single scrape.\n\nHe grunted, feeling it as she opened and closed her throat around him, massaging him gently. She pulled her head back, swirling her tongue around him before sheathing his whole cock in her throat again.\n\nHannah continued, following a gentle rhythm as he quickly hardened to his full size.\n\nOut of the corner of her eye, she saw Lisa lying on the bed. Squirming and shifting uncomfortably. She couldn't keep her head up to see them, and she couldn't reach for her pussy to masturbate to the sight.\n\nLisa bit her lip, \"Oh, fuck. That's hot. Don't make him cum, not yet. Oh, god, yes.\"\n\nHamish began to encourage her to go fast, taking a handful of her hair and gently pushing at her to bob along his length. She stopped deep-throating him and began to sloppily oblige him.\n\n\"Oh, shit, shit.\" He cursed, \"Oh, god, yes. Suck that cock. Eugh.\"\n\nHannah built up a frothy lather with his precum, moving to only bobbing her head on the end as her hands went around his dick and began jerking him into her mouth.\n\nShe toyed with the end of his dick, her tongue gently flicking over the end of the head, before she finally pulled off him with a gasp.\n\nHannah smiled up at him, \"Uh ah. No cumming just yet. This girl wants to get fucked, first.\"\n\n\"Yes.\" Hamish stated.\n\nHannah turned her head to Lisa and raised an eyebrow. The woman was confused for a moment and then gave a firm nod of her head.\n\nShe grinned, \"But first, I think Lisa looks kind of sad, don't you? Abandoned?\"\n\nHamish glanced over at her, \"You going to eat her out?\"\n\n\"Nah.\" Hannah said, and slunk up the bed, leaning on all fours over her friend and kissed her gently, exchanging the taste of his cock with the hungry woman.\n\nShe waggled her ass at him and felt him mounting the bed, coming up behind her and rubbing his cock against her wet pussy.\n\nHannah moaned and looked back at him, \"Mmm. Whilst I can't deny I want it... Would you mind terribly if you put it in Lisa, first? Not like she can stop you.\"\n\n\"Reluctance.\" Hamish said, reminding himself.\n\n\"No!\" Lisa moaned, \"I wanna be yours, Hannah.\"\n\n\"Put it in her.\" Hannah said a little bit more firmly.\n\nHamish hesitated, uncertain.\n\nLisa broke character, \"Dude. Fuck. Me. This is a fucking dream come true. I can take the cuffs off whenever I want. There's no lock.\"\n\nWith that, his doubts vanished, and Hannah grinned as she watched the cock that had just been in her mouth descend and rub against Lisa, who twitched at the touch.\n\nShe spread her legs for him, whilst at the same time moaning, \"Oh, that's not fair. I wanted Hannah, first.\"\n\n\"Sh.\" Hannah ordered, knowing Hamish was having a hard time with the roleplay, \"You're being punished. So you're going to be quiet and kiss me, whilst he fucks us both.\"\n\nLisa gasped loudly as the cock pushed inside her.\n\n\"Oh, shit. That's... Wow.\" Lisa's eyes widened in shock. Hannah kissed at her playfully, but the woman was distracted by the thing filling her, which almost made Hannah think she'd made a mistake by choosing to go second.\n\nHamish began to fuck her, Hannah hearing his cock as it pushed into the wet cunt beneath her with each stroke. Gaining in pace as he became more comfortable with it.\n\nShe waggled her ass at him, and smiled gleefully as a moment later she felt a hand playing at her pussy. She kissed Lisa's open mouth again, sucking gently on her tongue. \"Mmm. I like his hand. How's his cock?\"\n\n\"I... Eugh.\" Lisa grunted under the impact, \"I... Oh, shit. Shit. He's going to make me cum. I can't help it. Fuck. God!\"\n\nHannah laughed and then leaned over to return the earlier favour and bit the woman. A love bite is an artform. Gentle, but firm. Not exactly painful, just intimate. Given at the right moment, it turned ecstasy into blinding light.\n\n\"Holy fuck! Tight!\" Hamish yelled as Lisa began to tremble, shaking beneath Hannah. The combined assault of them, too much to handle.\n\n\"My turn.\" Hannah pouted, \"Come on, Hamish. Fuuuuck meeee.\"\n\nThere was a slurping noise and a disappointed moan from Lisa. Before Hannah could make a coy comment she felt his dick split her open, and then the full rod slide inside her.\n\nHer eyes went wide, and she gasped. She would have fallen and collapsed into Lisa if he didn't grab her hips.\n\nThe other woman smiled up at her, \"Right? Holy fuck.\"\n\n\"Eugh.\" Hannah nodded, and bit her lip, \"Maybe... Mmm. Oh. I need a minute, here.\"\n\nHamish paused, \"Not hurting you?\"\n\n\"Dude has no idea.\" Lisa laughed weakly, \"You're gifted, Hamish. Maybe not longer than most, but fuck are you filling. She's trying not to cum... So... Go ahead. Fuck her. She punished me.\"\n\nHannah opened her mouth to complain, but it was too late. Hamish pulled back, and then drove into her. He held her hips as he immediately launched into a decent pace and Hannah was lost to the feelings.\n\n\"F-fuck, f-fuck.\" She swore, groaning loudly as she struggled to stay upright over Lisa. Her own pussy was almost noisier than her moaning and groaning, as she flowed and overflowed, dripping onto Lisa below.\n\nThe woman glared at her cuffs, feeling too much, wanting desperately to get off.\n\nHannah nodded, giving permission.\n\nLisa snapped them open, causing Hamish to jerk to a dead stop.\n\nHannah glared back at him, \"Don't you dare stop. We're just enjoying this too much.\"\n\n\"Lisa?\"\n\n\"Fuck the shit out of her!\" The woman yelled, her hand frantically rubbing at her pussy, \"Do it!\"\n\nPermission given, he duly did as instructed.\n\n\"Oh my god, oh my god.\" Hannah panted as he plunged in and out of her faster than her mind was able to grasp, pounding her hard and fast. She'd never felt anything like this before. \"Mmm. Oh. Mmm. Ye-es.\"\n\nHer eyes just up rolled up into her head as she began to cum. Her pussy attempted to tighten around the furious cock, which didn't even slow down as she heard Hamish grunting with his efforts.\n\nHer legs completely gave out, and she slipped off him to fall atop Lisa. Hannah's sweaty forehead lay against her friend's breast as she struggled to catch her breath.\n\n\"Hannah? You okay?\" Hamish sounded worried.\n\nShe rolled aside tiredly so she was on her back, beside Lisa. She nodded weakly, \"Holy shit. I am so glad I have someone to share you with. You're too much. Speaking of... Up for round two, Lisa?\"\n\n\"Fuck yes.\" Lisa said excitedly, one leg wrapping around Hannah's, so that the two were side by side, both exposed and waiting for the man kneeling above them.\n\nHannah smiled at him tiredly, \"Go for it.\"\n\n\"So... I'm starting to get close.\" Hamish hesitated, \"That last... Was amazing.\"\n\n\"Yes. You are.\" Hannah laughed weakly.\n\nLisa kissed her cheek, \"If you don't say anything, I'm totally going to take his cum.\"\n\n\"I don't care which of us he cums in.\" Hannah shook her head, \"So long as the other one eats it. Hamish? You up for that?\"\n\n\"I don't know.\" He hesitated, \"Might be better not to -\"\n\n\"Both on the pill.\" Lisa assured him. \"But if it's really something, considering this is the first date, I do swallow.\"\n\n\"No fair. Have to share.\" Hannah complained.\n\nLisa laughed, \"Fine, you can swallow. I'll drool.\"\n\n\"Take your pick, Hamish. Creampie or swapping.\" Hannah said, smiling up at the man who had awe written all over his face.\n\nHe looked from one to the other, both girls getting impatient and beginning to rub at themselves, \"I really can't decide.\"\n\n\"Well, you could decide whilst you're fucking me.\" Lisa demanded.\n\nHannah smiled cheekily, \"Or me. I think I'm up for some more.\"\n\n\"No! Me.\" Lisa demanded, \"You've punished me enough. It's my turn with his cock.\"\n\nHannah rolled her eyes and then gestured, \"Go ahead and fuck her. She does deserve some attention.\"\n\nHe leaned forward over the top of her friend, and Hannah's hand began massaging at her clit as she watched him push himself inside Lisa.\n\nHannah felt a hand grab hers tightly as Lisa moaned loudly, clearly still sensitive from her orgasm. She grinned and rolled onto her side, untangling her leg to let her get her mouth to one of the tits.\n\nThe blonde shivered at the attention, moaning louder and slower now that Hamish wasn't just pounding away but taking his time with long and deep strokes. Trying to keep himself going.\n\nHannah pulled her head out of the way, releasing the nipple from her mouth hesitantly, \"You should kiss her. She likes that, when a guy is low and slow on top of her.\"\n\nHamish kissed Lisa, who went from surprised, to bliss. Her eyes closed as he showed that he had skills in other areas as well.\n\nWhich allowed Hannah to quietly reposition herself whilst Lisa was distracted by the practically loving fucking. She moved behind Hamish, dumping her dress, before dragging his tops off, briefly interrupting the kiss.\n\nHannah wrapped her arms around him and kissing at his neck.\n\nShe felt himself struggling with the sensation of Lisa beneath him, and the breasts against his back. Surrounded on every side by womanly softness.\n\nShe whispered in his ear, doubting that Lisa could hear her, \"You don't need to hold on. Cum whenever you want, I won't mind.\"\n\n\"Oh, fuck.\" Hamish groaned loudly, and plunged down.\n\n\"Deep!\" Lisa gasped, arching for a moment.\n\n\"Fill her up.\" Hannah encouraged him quietly, kissing at his neck.\n\nThe man grunted loudly, and Lisa's hands grabbed at the bed frantically, \"Oh, yes! Ugh! H-Hannah?\"\n\n\"I'm here.\" She asked quietly, as Lisa's eyes went wide, looking for her and feeling for her.\n\nThe blonde grinned as she saw her behind him, \"Oh, you sneaky... You made him... Oh, yes. Oh, shit. So much.\"\n\nHamish fell onto his hands, breathing hard.\n\nHannah pushed him back slowly, until he popped out of her friend noisily. Followed by a small and slow river of white cum. Hannah moved around to lift up his sensitive cock and took it into her mouth.\n\nHamish groaned, \"Oh, shit! Sensitive! I just -\"\n\nHe trailed off into a series of moans as Hannah cleaned the combined juices of all three off him, keeping it in her mouth as she did. Then she leaned over Lisa and gave a curt nod.\n\nThe blonde obediently opened her mouth, and Hannah drooled the sticky mess down into the cute and willing receptacle as Hamish seemed to groan and shudder at the sight.\n\nHannah then pushed him aside, and put her head down to lap up the cum trailing out of Lisa's cunt. The blonde flinched at the touch, \"Oh, no. Gently, gently. Oh, you're hungry, aren't you? Shit.\"\n\n\"You two... Are crazy.\" Hamish breathed out weakly.\n\nLisa laughed tiredly, \"You know this is just my date, right? That you've got more of this waiting for you?\"\n\nHannah paused for a moment, \"That is, if you show me a good time first.\"\n\n\"Show us both a good time, first.\" Lisa retorted.\n\nHannah looked up at her friend, \"Oh? You decided it won't be a competition, then?\"\n\n\"Oh, we're still competing.\" Lisa grinned evilly, \"That doesn't mean that we're not both keeping him. That is... If he doesn't mind.\"\n\nHannah rolled a mouthful of cum around, and then crawled up and drooled it down to the waiting blonde again. \"I love the way you swallow, Lisa.\"",
        "\"I hate it. But I love that you like it.\" The blonde retorted.\n\nHannah shrugged and then kissed her briefly, \"I was punishing you for winning. I'll stop. So, Hamish. You've gone kind of quiet.\"\n\n\"Considering whether dating the both of you at the same time would literally kill me or not.\" He said slowly.\n\nLisa sat up, and gestured for him to come closer, and then kissed him. Hannah smiled as she watched them for a moment, and then she got jealous and shuffled closer, stealing Hamish's attention, and then his tongue.\n\nLisa got revenge by taking one of her sensitive nipples into her mouth. Hannah moaned into his mouth, causing Hamish to back away, as if afraid that they might be about to try some more.\n\nHannah smiled at his trepidation, \"Nah, we're just playing. You fucked me good, and I didn't even get the end product. Though... Do you think we can fit three in the bed?\"\n\n\"Tight squeeze.\" Lisa spoke around the breast, \"But... We could sandwich him. If he wanted.\"\n\nHamish frowned, \"Are you two trying to butter me up, to stay?\"\n\n\"You're an amazing fuck.\" Hannah batted Lisa away to have the serious conversation, \"I really want to know if you're as kind as you seem, too. But, it looks like if you're going to date me, you're going to date her, too. And that seems like something that might scare someone off.\"\n\nLisa put her arms around Hannah, \"She's the sensitive one that always cares what other people think. Me, I think you're hot. I think that cock has skills. So long as I'm not totally ignored, I'd be happy to be a throuple with you two.\"\n\n\"She did let me fuck her for three years before she told me she liked me.\" Hannah giggled, \"Don't take her stand-off-ishness too seriously. She really liked the loving at the end.\"\n\nHe laughed and shook his head, \"Do you know how many people would kill to be in my position? How exactly am I supposed to say no?\"\n\n\"By saying no.\" Hannah said, deadly serious. \"I like dominating people in sex. Lisa likes being dominated. And apparently we like sharing. That's a lot to take in. Not for everyone.\"\n\n\"Can I sleep on it?\"\n\nLisa tapped her chin, \"I dunno. I might get frisky in the night, and obviously we want you to stay.\"\n\n\"I'm totally going to wake up with you fucking him beside me, aren't I?\" Hannah said with irritation, and sighed, \"Fine. I guess that's understandable.\"\n\n\"Like you weren't planning to do the same.\" Lisa stuck out her tongue.\n\nHamish held up a hand, \"So... Seriously? This wasn't a one night stand? Or a trap? I really did just stumble into some kind of triangle?\"\n\n\"Yes.\" The two women said simultaneously.\n\nHe laughed slowly and looked down at his flaccid cock, \"Sorry buddy, you're about to get broken.\"\n\nLisa giggled, and then jumped to her feet, \"I get first shower! Sorry, only fits one. We've tried.\"\n\nHannah lay back on the bed and spread her legs, \"Oh good. That means Hamish can make up for not giving me another turn. Feel like eating me?\"\n\n\"Oh my god, I'm going to die.\" The man breathed out slowly.\n\n \n"
    ],
    "authorname": "shakna",
    "tags": [
        "threesome",
        "cuffs",
        "reluctance",
        "ffm",
        "two women one man"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/hannahs-night"
}