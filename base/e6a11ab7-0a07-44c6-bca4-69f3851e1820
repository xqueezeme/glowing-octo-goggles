{
    "title": "The Artifact Ch. 02",
    "pages": [
        "This is the second chapter of this story. It will be much more fun and make more sense if you have read the first chapter. Doc\n\n<p align=\"center\">****</p>\n\nEven though the room I had rented was not a suite, it was the largest motel room I had ever been in. There was a King size bed, a table with four chairs a sofa and a loveseat.\n\nI looked into Julie's mind and saw that she was choking with lust for her first bisexual encounter with Kathy. On the other hand, Kathy was just ready for action. She was nearly always ready. Kathy had been raised that nice girls don't... (Add your own phrase here); but, she always wanted to. She had decided that she was destined to be alone, since her experience had led her to believe that her desire so out stripped those of any men she'd ever known. \n\nJulie was the first woman that Kathy had ever thought of as an equal, because of the way they had been introduced. The whole thing had Kathy so turned on that she was having a hard time not attacking the both of us.\n\nI pulled a chair up to the bed as the girls drifted to me and each other with frank curiosity. I looked at Kathy and said to her with a wide smile, \"Honey, this is Las Vegas, why don't you give us a show?\"\n\nI could almost hear the juices begin to drip as she struggled to strip down out of her clothing all at once. Julie was nearly dripping with lust as she nearly dropped into my lap without removing her eyes from her new object of desire.\n\nWithin ten seconds, Kathy's shoes and socks were in a pile on the floor, and her blouse was flying through the air toward us. Julie caught it and tossed it toward the other discarded items while I examined the nearly sheer bra that we had seen some of earlier.\n\nThe bra was a light grey color in the satin fabric underside and the lace portions. The rest was filmy nothing with just a hint of a grey cast. Tan lines were evident through the bra, showing that she was no stranger to an abbreviated bikini top and sun. I watched the jeans roll down and saw that her panties matched in color and style.\n\nKathy looked up at us with her shining eyes; a smoldering lust was projected toward us with an intensity I'd never experienced. Julie was nearly bouncing on my lap in anticipation. When Kathy reached us, she turned around, straddling Julie's legs and took her hands, guiding them to the catch on the back of her bra.\n\nJulie was nearly hyperventilating as her shaky hands released the catch. Kathy took a step away, wrapping her arms over her chest as she looked back at us and rolled her shoulder, allowing the strap of her bra to slip down her arm. She then slipped her arm from the strap, never losing eye contact with us and moved her arm back to hold her bra in place.\n\nKathy continued to roll her shoulder in a slow sensual display of the art of strip tease. With a deliberate wink of the eye facing us, Kathy turned her head the other way to look at us over her other shoulder. Her actions on this side were a virtual mirror image of her previous display. Julie was even more into the show than I was.\n\nWith her bra now completely free from her body, only held in place by her arms, Kathy approached us at a sensual glide, with her eyes focused on Julie. She took one of her hands, still holding the bra in place with the other arm, and brought Julie's hand to the material between her breasts, under her shielding arm. When Julie had a hold on the material, Kathy backed up slowly, allowing the bra to slip from beneath her arms.\n\nKathy was now topless, but we could see little more than we had when her bra was on. She began moving one hand, tracing over her skin underneath the breast tissue bulging past the limit of her arm. My eyes were drawn to the movement made by her hand, as it moved over her skin. \n\nKathy's other hand squeezed and caressed her breast flesh, in a well practiced movement. Her moving hand on her breast, occasionally allowed flashes of her areola to show through; but just small sections at a time.\n\nJulie leaned back into me. Her breathing was deep and rapid, highlighting her excitement. Her focus on Kathy's display was overwhelming her other senses as she squeezed her thighs together unconsciously. I flowed my arms around her waist as I held her in place.\n\nKathy's free hand had worked its way down, and was now skimming just over the elastic of her smoky grey panties. A sigh issued forth from Julie as I began to unbutton her blouse. I noticed that the buttons were on the wrong side of her shirt. I was finishing with the last button when I noticed that Kathy's whole hand was into her panties. She was staring intently into Julie's eyes, while rubbing her sex.\n\nKathy's panties easily showed the evidence of her abundant lubrication. She came closer and closer as I hurried to undo the waistband on Julie's skirt. I hadn't used any of the power so far. I was fascinated by how turned on the girls were without it. I was running my fingers just under the waistband of her panties. Her hips were moving as energetically as her breathing.\n\nKathy made it to right in front of us, and watched as my fingers ran through Julie's slit. Kathy very slowly took her hand from her panties, dripping with her juices, and sucked one of them dry. She looked intently at Julie as she put her hand up to Julie's mouth.\n\nJulie enthusiastically began sucking on the soaking fingers, moaning as I continued to work on her. Kathy pulled her hand from Julie's mouth and finally moved the arm hiding her breasts. They were quite simply magnificent. Large, round, firm and all natural; the light brown areola were the size of silver dollars. The nipples were as big around as the tip of my index finger and nearly 1/2 inch long.\n\nI was staring at the bounty before me when Julie moaned loudly as she began to orgasm. I was shocked, but continued with my manual effort. Kathy was moaning with desire as well as she grabbed each side of Julie's face and pulled her into a kiss.\n\nI began nuzzling her neck, below her ear at the same time. Time stood still for almost two minutes as Julie's orgasm and aftershocks wound down. Kathy finally pulled back, taking Julie with her to the bed saying, \"Come on Honey, let's give the stud a show he'll never forget.\"\n\nJulie and Kathy practically ran to the bed. Kathy removed her tiny, wet panties and helped Julie remove hers as well. I was amazed at how quickly they had moved. Their bodies intertwined, and their hands explored each other's bodies. \n\nJulie soon had Kathy on her back, and was kissing down her neck. Kathy's hands soon guided Julie to her large erect nipples. I was watching with increasingly noticeable interest as I began slowly undressing. By the time I was naked, I saw that Julie was on her knees between Kathy's legs, licking her pussy with obvious satisfaction. \n\nI decided to finally begin using my gift to enhance the experience for the girls. I bound their sexual response; both of them would feel everything done to both of them. Julie was working on Kathy's clit, but both of them were feeling it. Julie was also feeling it as Kathy squeezed her own breasts and pinched her nipples. I moved around behind Julie, got on my knees and slowly slipped my incredibly hard dick into her wet willing pussy. Both women moaned as I began thrusting. \n\nKathy was watching me closely with her eyes wide in surprise. \"Oh my god, Jack you're beautiful.\"\n\nSeconds later her eyes scrunched as she began cumming hard in tandem with Julie. I felt her spasming cunt clutching me as I continued to pump out even more pleasure for the women. I began rubbing Julie's winking asshole with my thumb as I continued to fuck her.\n\nIt was at this point that I had a thought, why not intertwine my sexual response with theirs as well. I practically giggled as I tried it. They were both howling as I began bellowing out with surprising ferocity. The sensations were amazingly intense and prolonged. I came, triggering another orgasm from both women; which triggered another orgasm from me. For what seemed like an eternity, we ping-ponged orgasms, back and forth. I must have had ten or twelve orgasms, each one triggered a similar response from the girls. \n\nIt finally became too much, and I disengaged. Kathy bent down, pulling Julie into her arms, held her lovingly and kissed her. I stayed on my knees, watching until Julie rolled over onto her back, staring at me. She looked like a little kid who's had ice cream for the first time when she asked, \"Is that what sex is suppose to be like?\"\n\nI smiled as I told her confidently, \"Unfortunately, that's just what it's like with me. I seem to have a unique talent for it.\"\n\nKathy began giggling as she said, \"Well, I guess I don't have to masturbate after you go to sleep.\"\n\nI saw Julie looking at her curiously as Kathy continued, \"My ex was pretty lame in bed. He thought that he was so good; but his ego couldn't stand any correction. He tried to make me come with oral sex, but he was so bad that I'd fake an orgasm so that he'd fuck me and go to sleep. As soon as he was asleep I'd masturbate a few times. We were together for over a year, and you gave me more orgasms than he did in all that time.\"\n\nI had read her mind so I asked, for Julie's clarification, \"When did you break up?\"\n\nKathy smiled as she answered, \"I knew for sure when I picked up the coffee pot from your table at the restaurant. I told them I was leaving, changed and rushed out to catch you in the parking lot. I didn't know that it'd be this good, but I knew that it was better than what I had.\"\n\nKathy looked at me and asked with frank curiosity, \"When you started fucking Julie, I felt it in my pussy to, did you do that?\"\n\nI smiled as I said, \"Yes, I wanted us all to feel the same thing at the same time.\"\n\nJulie smiled as she said, \"I felt every lick I gave her on my pussy too, but when you came, I felt like I had your orgasm as well. Every time you came I came. I didn't know that men could do that. My ex only came once a night, maximum.\"\n\nI felt Kathy's eyes on me, and felt her becoming aroused again as she said, \"I can't believe you're still hard.\"\n\nJulie's eyes got wide as she looked down at my hard-on, and said, \"I can't believe that thing fit inside me.\"\n\nI looked down and realized that I was much larger than I'd ever been before; both longer and thicker.\n\nKathy's arousal was becoming apparent to both Julie and me. She finally forced her eyes to my face and asked, \"Jack, would you please fuck me? It's my turn.\"\n\nJulie's eyes were laughing as she said, \"Go ahead Jack, it'd be like you're fucking my other pussy.\"\n\nKathy meanwhile was looking down at the bed when she said, \"We better clean that up, or it'll never dry.\"\n\nI looked down where she was looking and saw the pool of semen she was referring to. It must have been at least ten inches in diameter at its thinnest spot. I immediately got up to grab a towel and told Kathy, \"I'll get a towel for that one if you take care of the one in Julie.\"\n\nKathy and Julie were both smiling as Kathy looked down to see my cum sliding from Julie's still twitching cunt. Small dribbles would occasionally appear and slide silkily down toward the bed.\n\nI was in the bathroom when I realized that Kathy was eating Julie's pussy, and that I was feeling every lick. I almost forgot why I went in there as the sensations threatened to overwhelm me. I grabbed the towel as quickly as I could and hurried back out to join the girls. \n\nWhen I got back to the room, I saw that the girls had moved into a sixty nine position, with Julie on the bottom. Julie hadn't yet started working on Kathy, but had dragged her fingers through the pool of cum on the bed and was putting her fingers into her mouth. I didn't even stop to clean it up, but just threw it over the mess and got behind Kathy. Julie was licking us both as I thrust myself into her. \n\nI had a second of rationality and thought that maybe I shouldn't cum so much, and then I was in the throes of our first mutual, three way orgasms. Our frenzied wiggling produced another, even stronger orgasm. I continued to climb the stairs from peak to even higher peak. I lost track of time as pleasure piled upon pleasure. I was unsure how many times I'd cum when Kathy finally pushed away, but certainly at least three times as many as before, all of them were more intense than the one before.\n\nI was a little tired, but the girls seemed totally exhausted. I moved to clean up the pool of cum that I'd just covered up, and saw that it had disappeared. The towel was dry, and the cum was totally gone. I picked up the towel and handed it to Kathy with a smile, so that she could wipe herself off.\n\n\"When did you fold our clothes?\" Julie asked, eyeing the neatly stacked and folded individual piles on the table. \n\nI tried to keep my expression neutral as I said, \"I don't remember, I must have done it unconsciously while I was watching you two.\"\n\nKathy was laughing as she said, \"I didn't know that men could fold clothes. My ex didn't even do his own laundry. If it wasn't for me, he would have probably worn the same dirty clothes over and over until they fell off.\"\n\nWe all laughed as we got up and went into the bathroom to shower. When I looked in the drawers, there were various full size female grooming products, along with a razor, shaving cream, toothpaste and new toothbrushes.\n\nWe were soon in the shower washing each other off, enjoying our time together when Julie groaned to Kathy, \"Oh my god, he's still hard.\"\n\nKathy was giggling as she got down on her knees and took my rod into her mouth. The feeling was incredible as I quickly got into the rhythm. Kathy had a hand on my hip and the other was on Julie's. Julie was kissing me while rubbing my ass with one hand while exploring my chest with the other. \n\n\"This is incredible,\" Kathy said as she paused her efforts for a moment. \"You have to try this,\" She said as she pulled Julie to her knees as well. \n\nThe two women traded back and forth for the few moments before we all came. I began cumming in Kathy's mouth, but quickly overflowed what she was able to contain. When she pulled out the spasming cock from her mouth, it immediately coated her face and hair. Julie almost started laughing until Kathy pointed it at her. The echoes of moans, shrieks and laughter filled the bathroom as I was treated to one of the sexiest sights of my life.\n\nI decided to let myself begin to wilt a little when I realized that the girls were too tired and hungry to continue. I was starving as well, and began thinking of what I wanted to eat. My mouth was watering at the thought of hamburgers and French fries as we got out of the shower and dried each other off.\n\nI left the bathroom shortly before the women, with a towel wrapped around my waist, intending to call for room service. Before I even got to the phone I heard a knock on the door. I opened the door just as the girls came out of the bathroom wrapped in towels that did little to hide their phenomenal figures.\n\n\"Room service,\" The uniformed man said as he rolled the loaded cart into our room.\n\nHis eyes were wide as he handed the bill to me for my signature. I realized as I heard the exchange from the girls why he was so focused.\n\n\"... but if you don't take it off, you'll probably spill food on it.\" Julie said as she stripped Kathy's towel from her otherwise nude body.\n\nKathy was laughing and sputtering, \"You're every bit as messy as me,\" as she jerked the towel from Julie as well.\n\nThe girls wrestled each other to the bed as the man stood, staring in open mouthed amazement. It took me nearly a minute to get his attention, hand him the signed chit and usher him out of the room.\n\nThe girls were shrieking with laughter at the mayhem they had caused. I looked at them and said, \"I can't take you anywhere can I?\"\n\nJulie looked at me with a wide smile that shone even through her eyes and said a little tiredly, \"Not tonight, but we'll do better tomorrow.\"\n\nKathy was smiling just as widely as she added, \"Maybe.\"\n\nWe all went to the cart and saw a covered platter of maybe a dozen hamburgers, a tub of French fries, plates, pitchers of soda, glasses, ice and condiments. We moved everything off the table, filled our plates and began eating. When I could no longer eat any more we noticed three large slabs of chocolate cream pie.\n\nWe managed to eat the desserts, but the effort wiped the girls out. I wanted to go out, but the girls were tired, so they got into bed. Just for fun, I disconnected myself from their sexual response and began to give then a desire to hold each other. I could tell that they missed me in bed with them, but cherished the sensations they had in each other's arms. I watched them as they had gentle, loving orgasms in each other's arms and fell asleep.\n\nI closed the door softly; I didn't want to wake the girls. I worked hard at wearing them out and after the room service; they'd both fallen asleep in each other's arms. Since finding the artifact, I no longer seemed to need sleep, so I decided to look around.\n\nLance, the desk clerk that I met earlier appeared to be getting off of work soon, and was greeting his replacement. I didn't say anything, but looked into his mind to find out where he would meet his wife after work. His wife, Janet, would be by to pick him up in twenty minutes. I walked outside to where he was expected, calmed my mind and listened to the rhythms of the new environment I found myself in.\n\nI was aware of the pain and unhappiness of many of the people nearby. I'd sensed it earlier, when I'd been in the casino, but it seemed even more pronounced now. I was too far away to do more than scan groups of people, but I felt the financial despair some of them were feeling. I realized that I had a lifetime of work to do at this one location, if that was what I wanted to do.\n\nAs I was pondering the things I'd discovered, I heard the spirit of the artifact speaking to me, \"You now know one of the reasons why I wanted you to come here. It is good that you have compassion for those you rule; but before you make any decisions, I've got something else you need to see. Pay close attention and be cautious, there will be a small amount of danger.\"\n\nI was thinking about what the artifact told me when I felt Lance coming up behind me. He smiled and said, \"Hello.\"\n\nI smiled back and said, \"Hi Lance. Are you just getting off work now?\"\n\nHe looked puzzled as he said cautiously, \"Yes I am. Do I know you?\"\n\n\"I'm sorry,\" I said as I held out my hand, \"You probably see a hundred people a day, and I was just one of them. I'm Jack, you checked me in a few hours ago.\"\n\nA genuine smile lit his face as he reached out his hand to shake mine. \"I remember you now ELL TEE. I haven't talked to anyone about the army since I got out, except you. You didn't say anything, but I have the feeling you know what it was like over there for me. I still dream about it every night ELL TEE.\"\n\nI felt his pain as I told him, \"Call me Jack, I'm out of the army now. I was in the field, and I know how you feel. I did my best, but I couldn't keep all of my men alive, but I did better than most. Are you meeting someone?\"\n\nI felt the sadness that he felt over the state of his relationship as he said, \"My wife is going to pick me up in a couple of minutes.\"\n\n\"Let me take you both out to dinner, I don't know anyone here; you'd be doing me a favor.\" I told him as I reached into his mind to guarantee his agreement.\n\nLance took a deep breath and smiled sadly as he said, \"We'll do it if I can talk Janet into it.\"\n\n\"I'm sure that she'll say yes,\" as I smiled and put my hand on his shoulder.\n\nJanet pulled up in their car a few seconds later as Lance walked over to her and said. \"Hi honey, Jack here has invited us out to dinner.\"\n\n\"I don't know honey, I've been on my feet all day and I'm really tired.\" She said.",
        "\"That's perfect,\" I said as I walked up to her smiling, \"This way, you get to sit down and have other people wait on you; hand and foot, while you enjoy your meal.\" I worked on her mind while my smile radiated harmlessness.\n\nJanet looked back and forth between Lance and me and finally said, \"Oh, alright but we need to go right away so that we'll be home early.\"\n\nI climbed into the back seat of the car. It was a '65 or '66 Mustang convertible; a really nice car for two people, but the back seat was little more than a storage shelf. I stuffed myself in sideways as Janet asked, \"So, where to?\"\n\nI knew that I'd have to eat with them to ally her apprehension, so I removed the food from my stomach that I'd eaten earlier and gave myself a little bit of an appetite. I thought about what she'd asked for a moment and then I said, \"I really don't know the area, just pick the nicest restaurant nearby where you'd feel comfortable and we can talk.\"\n\nI could tell that Janet was a little puzzled about me as she drove to a diner nearby. \"I don't want to go to anywhere real nice. I'd hate for you to spend too much on us.\" Janet said with a smile.\n\nI smiled and said, \"I'm not worried about the money, I've got more than enough.\"\n\n\"Are you a gambler?\" Janet asked me suspiciously. \n\n\"Not really,\" I told her as she parked the car, \"This is my first trip to Las Vegas. There seems to be a lot of other things to do other than just gamble. There are a lot of shows playing around town too.\" I concluded as I pulled myself from the car.\n\nJanet smiled as Lance put his arm around her. She looked at me and smiled saying, \"Don't forget to check out some of the smaller shows too. Many of the hotel bars have stages that put on small shows and acts that are worth watching.\" She looked at her husband and then continued, \"Lance and I used to go to see those shows often. They're sometimes very good and you can sit close enough to see them. Sometimes they're free, or just the price of a couple of drinks.\"\n\nWe were seated and ordered our meal. We made inconsequential small talk until our meal came. I could tell that she sensed the changes I'd made in Lance, and was cautiously happy. I reached into her mind and released her apprehension and intensifying her love for her husband. By the time we were finished with our meal, I was watching two people once again happy and in love. \n\n\"Did you meet Lance over there?\" Janet asked when she found out that I just got back from Viet Nam.\n\n\"No, I just recognized the look in his eyes. I've seen it before.\" I told her quietly.\n\n\"Jack here was a Lieutenant in the infantry honey.\" Lance interjected.\n\n\"But, I'm still not ready to talk about it. Let's talk about something more pleasant.\" I turned to Lance and asked, \"When did you and Janet meet?\"\n\nI knew the answer already from my previous look into his mind, but I wanted him to tell me and I wanted Janet to hear the answer. Lance took a deep breath and began talking. \"I met Janet in grade school right here in Las Vegas. Our parents both worked for the casino. When her parents moved to a larger house, she went to a different grade school.\" \n\n\"When I was going to eighth grade, my parents moved us just down the street from her. By ninth grade, we were going out. We married right after high school. I went to work and Jan went to UNLV to get her degree in hotel management. We were happy, but I got drafted after a couple of years. When I got back from overseas, I was the only one I knew that still had my wife or girlfriend waiting for him. All the others were single again, or their girlfriends had left them.\"\n\nI looked at Janet smiling and said to Lance, \"I envy you, to have the woman you love, love you back so much; it's very unique and beautiful.\"\n\nBy this time Lance and Janet were barely aware that I was there. When we got up to leave, I left the tip and took the check. I sent Lance and Janet out to the car while I paid for our meal. I was alerted that someone was in pain nearby.\n\nI saw a woman in tears, sitting near the register and went over to her as soon as I paid for our meal. I smiled at her and asked, \"Do you mind if I sit here with you for a moment?\" I ensured her consent with the power of the artifact.\n\nShe surprised herself by agreeing and I read her mind as I sat down. Wendy was in her mid thirties and married. She'd just discovered the depth of her problem with gambling, having just lost the last six years of savings that she and her husband had saved for the down payment on their own house. She didn't even have the money to pay for the meal she'd just eaten. I let her tell me her story briefly as she cried openly in front of me. I took her hand, and told her, \"I'll help you.\"\n\nI pulled her along with me as I paid her check and took her out to the parking lot with me. Lance and Janet were leaning against the car kissing like honeymooners. I heard the word loudly in my head, \"TRIPWIRE.\"\n\nI gave them mental instructions to give me a call if someone came looking for me, and disguised it heavily so that no one would be able to find it if they were scanned. They wouldn't even know that I'd given them these instructions.\n\nI told them, \"I'm going to walk back to the hotel, why don't you kids go home and finish what you've started.\"\n\nJanet blushed furiously and Lance smiled. Janet walked over to me and kissed my cheek as she said, \"Thank you Jack. I don't know how you did it but I have my husband back again.\"\n\nI reached into her and ramped up her sexual response. She would be able to have multiple orgasms, and being with her husband would always be her greatest desire. I kissed her cheek and shook Jack's hand, ramping up his desire for his wife as well. When they left, I knew that they would probably be the happiest couple in Las Vegas for the rest of their lives.\n\nWendy looked at me curiously and asked, \"You seem to have some very good friends.\"\n\nI smiled at her as I told her, \"I just met them today.\"\n\nShe stared at me mutely. When she finally recovered her voice she asked me, \"But, they seemed so comfortable with you.\" Her voice trailed off.\n\n\"I'm easy to talk to,\" I said with a smile.\n\nThe walk was only about ten minutes. In that time I let her retell me the story, adding the details she'd skipped before, in her own way. She and her husband lived in Red Rock Arizona. They both had good jobs with the municipal government and had saved for the last six years to get together a large down payment for a house. They had been married for nearly seven years, and had managed to make all the adjustments they needed to remain happy. They'd won a trip to Las Vegas and she decided to visit her sister who lived here.\n\nEverything was going well for her until her friend came over with a book on how to play blackjack a couple of weeks earlier. They practiced several times, and she thought that she'd win the four thousand they had left to reach their goal. She withdrew all their savings except $1 hundred without telling her husband. Wendy didn't want to wait the year and a half she figured that it'd take to get into her new house. Her husband, Bill didn't want to start having kids until they had moved into the house, and she felt her biological clock ticking.\n\nWendy went to visit her sister after lunch, and was going to stay with her until late; but she decided to come back early and try the casino. She started out with the sixteen thousand dollars, and thought that she was doing okay until she counted her chips and she was down three thousand. Within four hours she had lost the entire $16 thousand. She just couldn't make herself stop. She knew that her marriage and her life were over because she couldn't stop gambling, but mostly that she had deceived her husband.\n\nI didn't condone deception, but I could understand her not knowing how to control an addiction that she didn't know that she had. Since I had fixed her problem with gambling, I knew that if I helped her recover the money she could explain to her husband in her own time what happened.\n\nWe were nearing the hotel when I told Wendy, \"I'm usually pretty lucky when I gamble. I'll start with a hundred... \"\n\nI stopped in the middle of what I was telling her. I felt the presence of something so evil that there were no words to describe it. My eyes were drawn to the limousine opening in front of the hotel. Two women exited the door and waited for the third passenger. I carefully masked my expression and watched the tall man exit from rear door. \n\nHe looked around as if he was startled and scanned the crowd with his dark piercing eyes. I was with Wendy, who was nothing special as far as looks went, so he just bypassed me. \n\nI tried to read his mind, but it was like trying to push a soap bubble under water. I decided to look into the minds of the two women with him. It was an interesting mixture of excitement and terror. The more I looked into their lives, the more I realized that this must be the most evil man I'd ever seen; and I'd seen men acting without the restraining influence of civilization. War can bring out the worst in men; however this man didn't have this excuse.\n\nWendy was looking at me, puzzled as I resumed talking, \"I'll take a hundred dollars of my own money and try to win back enough to cover your losses. Meet me in the bar tomorrow night at eight and I'll give enough to cover your loss if I win.\"\n\nWendy looked at me hopefully and then hugged me as she said, \"Thank you Jack.\" As she turned to go, I made sure that she would sexually wear out her husband. No matter what happened, they would both enjoy their Vegas vacation.\n\nWendy left to rejoin her husband and I went to a quiet area to query the artifact about what I'd seen. I decided to go to my room and make sure that Julie and Kathy remained asleep.\n\nI went into the room and saw the women spooned together, sleeping happily. I quietly went into the restroom, sat on the edge of the tub, closed my eyes and began my enquiry.\n\n\"That man had an artifact of his own, didn't he?\" I asked.\n\nI began seeing visions, as the old oriental man walked slowly toward me with all of his previous dignity. When he reached me he got down on his knees and bowed. When he looked up, he smiled and said, \"It is good to see you again my Lord.\"\n\nI breathed deeply and tried to control my impatience for answers as I, once again asked, \"That man had his own artifact didn't he?\"\n\nThe man smiled kindly as he set about answering my question, \"It is time for you to understand the mission that you are on. Have you never contemplated the origin of language of magic? I suppose not, Americans seem far too busy with their own lives to think about things outside of their selves. You seem to be an interesting exception. It is time for you to know about the struggle you've entered.\"\n\nThe old man continued with his interesting tale. \"Many years ago, we came to your earth as a gift to your emerging planet. Long before your recorded history we were here to help you develop into a harmonious, industrious and peaceful world; but something went wrong.\"\n\n\"We shattered; greed was a foreign concept that we absorbed from your race. When the contamination got too bad, we broke apart into thousands of pieces. Do you know how many languages there are of have been in your world?\"\n\nI was fascinated by the story and guessed, \"I would guess more than a thousand now, but there have been many that are extinct.\"\n\nThe old man looked at me with surprise and then smiled saying, \"I'm impressed with you every time I'm allowed to talk to you. You didn't know the answer; but you stepped out with an intelligent guess that you were sure to let me know was a guess. Most people would simply say with a blank look, I don't know.\"\n\nThe old man smiled, took a deep breath and continued, \"When we broke apart it was into ten thousand six hundred and forty pieces. Each piece had its own personality, language and magic. All humanity was gathered together and the pieces were taken by the strongest men. Whole clans, families and tribes began speaking different languages according to their allegiance. I believe that this is the origin of your legend of the tower of babble.\"\n\nI was absorbing this information as the old man continued, \"Suspicions grew between peoples of differing languages. Tempers flared and hatreds began. The smaller and weaker tribes moved away for self preservation. Over the next five hundred years, the entire earth was populated.\"\n\n\"The memory of the gift was lost to all but holders of the pieces of power. To disguise the pieces they were enclosed in various ways: scepters, rings, crowns, seals necklaces medallions and a few more unusual things.\"\n\n\"Wars began to break out. The real reason for the war is nearly always the quest to recombine the gift. When two holders of the pieces of power come together, the one that prevails wins the piece or pieces of power from the loser.\"\n\nI think I knew what was coming when I asked, \"The artifact, or medallion disappeared, what happened to it?\"\n\nThe old man was quiet for so long, I was unsure that he would answer me. When he finally began talking he told me what I somehow suspected. \"We all evaluated you and decided that you were the one. We bonded with you totally. The artifact is gone, but the pieces of power are inside you.\"\n\nIn my vision, I looked at him and asked calmly, \"So that means that for someone to take the gift from me, they have to kill me?\" It wasn't really a question, since I knew the answer.\n\nThe old man looked at me, smiling sadly as he nodded.\n\nI smiled widely as I told him, \"Somehow, I knew the answer and I'm not afraid; maybe I should be, but I'm not.\"\n\nDelight shown in the old man's face as he said, \"You are very wise lord, not to waste fear on something over which you have no control. I knew the right decision was made when we chose you. You didn't understand at the time, but you chose your fate. You did it, knowing subconsciously you were the best chance for your world to survive. If the wrong person wins and puts the last pieces together; the world will suffer without end and all may perish. Until we found you, that is what we expected for the world. We now have hope.\"\n\nI thought for a moment, considering the mission that I now knew was coming, and asked, \"The pieces of the gift have been combining for many years; how many are left?\"\n\n\"There are nearly a thousand left; however, there are only two who are stronger than you. We were the most powerful in the world when we were sealed into our artifact. The magician foolishly split us to give half to each sister, diluting our power. When the Trung sisters sacrificed themselves to keep us from being taken, we rejoined. We forced the magician to hide us and began our search for a warrior to champion our cause.\"\n\n\"We sensed you weeks before you found us, and set events in motion so that you could find us. We had your bombers destroy the road near the temple so that your enemies would travel on the other side of the river. When you finally came near enough, we turned on a light only you could see. We were pleased to see you choose the way you did, and bonded with you immediately. There was so little we had to fix, to make you into a leader of men that we remained mute during your tour of duty. We watched your decisions and actions saw how you suffered when you experienced loss. We knew that we had made the right choice.\"\n\n\"We began showing you tiny pieces of the power, and were pleased how you used them to unselfishly help others and your cause. We had to be careful because we didn't want you to become too well known for being invulnerable: that would have given you away to the other artifacts. We were careful to hide what we did to save your life. Do you remember feeling danger, and stopping your unit several times?\"\n\nI thought about it and answered, \"Yeah, I'd get a feeling and stop, I'd usually figure another route to continue the mission. I never knew why, but I learned to trust my gut instincts.\"\n\nThe old man looked at me smiling and said, \"Those times we saved your life. There were traps in the trail, or you avoided a planned artillery attack or an ambush that a member of your unit would have set off. We did allow your unit to enter some ambushes where you would be able to win, and a few times we had to interfere with the enemies aim to keep you alive. We tried to protect as many of your fellow warriors as possible, but could not save them all.\"\n\nI thought about what the old man had told me and eventually said, \"Thank you for saving those that you could. I always wondered why I lost so few compared to the other commanders.\"\n\nAs I thanked the old man, I began to wonder about the other members of the company who were left over there. How were they doing now that I was gone? \n\nThe old man looked at me and smiled saying, \"The man we sent to take over your company is an excellent warrior. He'll take care of your men very well.\"\n\nI once again thought about the task I had in front of me and asked, \"Tell me about the man I saw tonight, what do I need to know to defeat him?\"\n\nThe bright eyes of the old man watched me closely as he gave me the information that I needed to prepare for battle. \"The ring he wears on the little finger of his right hand is his artifact. He was an evil man before he stole the ring, and is much more evil now. He has had the ring for many years and has killed once to add pieces of power to his artifact. He has twelve pieces of power in his artifact, we are nearly a thousand. There is danger; but you have many advantages. You have merged with us, he has not yet merged. It is much easier for you to disguise yourself from him.\"\n\n\"It seemed like he knew that I was nearby, but he couldn't tell who I was.\" I said as I replayed the incident in my mind.\n\nThe old man paused and then stated, \"You've never tried to read your own mind. When you lay down later try it, I think you'll be surprised.\"\n\nWe talked for another hour, discussing specifics about artifact battle. The old man spoke about the darkness, and how to overcome it. Dark power is more powerful against people because it ignores social limits and the feelings of others; but the light power will usually win in a struggle between equals.\n\nI learned to pierce the darkness with less possibility of being caught. The soap bubble analogy was a good one. You can't push a soap bubble under water, but you can push a thin straw into it and suck out all the air. I needed to be careful and not hurry so that it would be less likely to be noticed. I could also block their power to influence me or other people.\n\nThere were many more questions that I wanted to ask, but having visions is real tiring. The old man saw my fatigue and said, \"You need your rest, so get some sleep; you will be busy tomorrow.\"\n\nI left the bathroom and saw the girls snuggled together so contentedly and knew that I had a mission that needed doing. I felt as I did Vietnam, the mission needed to be done, and I was the best one to do it. It was the only way I could protect everyone else, so I would set aside my fear and Charlie Mike.\n\nJulie gave a contented sigh in her sleep as I spooned in behind her. I thought about the evil that I was soon to face as I drifted off to sleep.\n\n<p align=\"center\">****</p>\n\nThe plot will become more complex as the story continues. As you can see, I'm trying to put more than just sex into this tale. I hope it adds to your enjoyment. Take a minute and send me some feedback, either public or private to let me know what you think.\n\nAs an author on Literotica, it is the only form of payment that we receive, and the way I motivate myself to put in the hours of work required to write these chapters for your entertainment. In any event, please vote for the story. Fives are appreciated, and it only will cost you one mouse click. Doc"
    ],
    "authorname": "doc87123",
    "tags": [
        "mff",
        "gambling",
        "evil",
        "danger",
        "group shower",
        "facial",
        "science fiction",
        "exposed to stranger",
        "charlie mike",
        "mission"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-artifact-ch-02"
}