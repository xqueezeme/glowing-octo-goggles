{
    "title": "Toll Booth",
    "pages": [
        "The service drive was barely wider than her car, and in the darkness, Makayla missed it the first time she drove by. When she realized that she must have gone too far, she turned and backtracked until she saw it in her headlights, just a single lane of gravel leading back through the trees. The only indications of its purpose were a small metal sign on a post reading Turnpike Authority Employees Only, and a smaller one beneath it that said No Turnpike Access.\n\nShe turned and slowly crept along the access road. It made a turn to the right, then another to the left before emerging into a brightly lit cleared area. As she entered the lot, she heard a loud rumbling and a whoosh of air as a large semi truck roared past less than fifty feet in front of her. \n\nShe had been told when she was hired that the exit 99 toll plaza was the smallest in the state and that it saw the least traffic, but she was still surprised at just how small it actually was. She had driven the turnpike many times, but always further south, where there were four or more lanes in each direction, and the toll plazas were even wider, with as many as a dozen booths. In front of her, across the dirt parking area, was a small building which she assumed was the office, and beyond that, four traffic lanes, separated by concrete dividers, with a single toll booth in the center. \n\nShe parked by the office and went inside. It was comprised of a single room and a small bathroom. There was a row of lockers, a desk, a refrigerator and not much else. No one was there.\n\nShe stepped out the door on the highway side and saw a burly woman in a Patriots cap and the brown uniform of the Turnpike Authority sitting in the booth. The woman saw her approach and waved, then climbed out of the booth and walked toward her. Makayla noticed that the woman did not even glance to see if there was oncoming traffic.\n\n\"You must be the new girl. MaKayla, right?\" \n\n\"Yeah, that's me.\"\n\n\"I'm Joanne,\" the woman said, shaking Makayla's hand. \"Welcome to the last outpost. I'm going to work with you for a couple hours tonight, get you all set up and make sure you know what's what...\"\n\nJoanne spoke fast, barely pausing to breathe. Probably because she has no one to talk to all night, Makayla thought.\n\n\"...after that, you'll be on your own,\" Joanne continued, \"Did you bring a lunch? Used to be a vending machine in the office, but the last idiot governor cut the budget and they took it out.\"\n\n\"Yeah, I've got a sandwich and some chips. Is there a cooler or something out here? I brought a couple of drinks. I put them in the fridge inside.\"\n\n\"There's a mini fridge in the booth. Best to put everything in there, then the only time you need to go back to the office is when you need to use the toilet.\"\n\nJoanne led Makayla into the office.\n\n\"Time clock is right here,\" she told her, \"Just write your name on a card and punch in. Don't know why we don't do it on a computer like the rest of the world. I guess the Turnpike Authority is still pretty old fashioned some ways.\"\n\nMakayla found an empty locker and hung up her jacket, and they went back out to the toll booth.\n\nThere was barely enough room for the two of them to squeeze inside together.\n\n\"I got to tell you, honey,\" Joanne said, \"This is one boring ass job. But overnight shift is where everybody starts. Weekends you get some good traffic, especially in the summer, but most nights... honey, you can go hours and not have anybody drive through here, so bring yourself a book or some magazines.\"\n\nShe tapped on a portable radio on a small shelf above the counter. \"You can listen to the radio but you won't get much on it. And don't even think about getting the Internet on your phone to watch movies or anything like that, you ain't going to get a damn bit of reception out here.\"\n\n\"I like to read,\" Makayla said.\n\nJoanne nodded. \"I read a lot of the romance type novels. One thing I would say is don't be bringing out your Stephen King, your horror stories, vampires and ghosts and such. Reading things like that sitting out here alone in the dark all night, well, that ain't gonna be a good idea.\"\n\nMakayla liked Stephen King but gazing into the darkness surrounding the little plaza, Joanne's advice seemed wise.\n\n\"I'm a little concerned about being a woman out here alone at night,\" she said.\n\n\"Of course you are,\" Joanne said. She opened a drawer underneath the counter. \"You got pepper spray in here. Usually anyone giving you any grief will drive off once they see you got it. I only had to use it once. Drunk driver. Think I got more of it in my face than he did.\"\n\nMakayla did not find that very reassuring.\n\n\"The phone there is a landline, so it will always go through, unless maybe in an ice storm or something. The red button goes straight to the state police post over in Houlton. Can't say as to how fast they'd get here, but at least you would know they are on the way, and so would anyone giving you trouble. You like animals?\"\n\n\"Sure. I mean, who doesn't like animals?\"\n\n\"Well you'll see a good few of them here on a slow night. Deer. Moose sometimes. All sorts of critters. Once in a while a bobcat or a fox will run by.\" \n\n\"That would be cool.\"\n\n\"Yep, it breaks up the monotony. Of course, there's plenty of bugs as well. Not so bad this late in the year, but in spring and early summer, they can be miserable. You'll want to use plenty of bug spray. You could get eaten alive out here.\"\n\nMakayla saw a pair of headlights approaching from the north.\n\n\"One good thing on this shift,\" Joanne told her, \"They can't really sneak up on you, you see him coming a long way off.\" The lights drew closer and a pick up truck slowly rolled to the booth. The driver held out a dollar bill.\n\n\"Have a good evening, sir,\" Joanne said as she took it and deposited it in the cash drawer. \n\n\"Pretty much all the big trucks, and about half the cars use the EZ Pass lanes,\" Joanne explained as the pick up drove off. \"All you have to do is watch them fly by.\"\n\n\"What if someone uses the EZ Pass who shouldn't?\"\n\n\"No problem. They get caught on the camera.\"\n\n\"So, what do you do? Do you rewind the tape and get their number or something?\"\n\n\"No, that's all automatic. I guess you could rewind, but I don't know why you would bother.\"\n\n\"Okay, I was just wondering.\"\n\nA big logging truck came down the road and zoomed through the plaza, causing the booth to shake as it blew past.\n\n\"Jesus, that felt close,\" Makayla said.\n\n\"You'll get used to it.\" \n\nJoanne turned up the radio. It was set to a country station out of Presque Isle. They made idle chitchat for another hour or so. Only two more cars and a lone semi passed through. Finally Joanne looked at her watch.\n\n\"That'll do it for me, dear. I think you'll be all right. I wrote down my personal number. That's my cell phone right there. You give me a call if you have any problems. It will usually go through. I'm not sure I'll get out of bed for you, but if there is anything you need to know you can call me up.\"\n\n\"Thank you, I appreciate that.\"\n\n\"All right then, have a good night. Jasper will be in a bit before seven to relieve you. He's pretty reliable.\"\n\nMakayla watched Joanne go into the office and a few minutes later, saw her headlights come on and her car pull out of the parking lot.\n\nI wish I had brought a book, MaKayla thought. She got out her phone to see if the reception was as poor as Joanne had described. She tried to connect to the internet, but after a couple of minutes of watching the little wheel spin on her screen she gave up. I could download some movies at home, she thought, maybe some audiobooks.\n\nA few cars went through the tolls in her first hour, and she had no problems. Only one needed change made, all the rest had their dollar bills ready to hand over.\n\nAfter two o'clock no there was no traffic at all. She ate her sandwich, then spent some time cleaning out her email box and deleting old photos. She realized there was no reason she couldn't get out of the booth and move around. If she didn't stray far, she would see the lights of any oncoming traffic in plenty of time to get back in the booth before it pulled up.\n\nShe stepped out of the booth, stretched and walked around it in a circle. She heard a low chittering sound overhead and looked up. Several bats were swooping around the tall floodlights, feasting on the moths who had been drawn to the illumination.\n\nShe flopped back into her seat in the booth. Thinking she might find something more interesting on the radio, she spun the dial. She tried to pick up WKIT, the rock station out of Bangor, but it faded in and out. Her choices were Joanne's country station, a brimstone and hellfire sermon or a sports talk discussion about the Bruins' chances for the Stanley Cup. Christ, she thought, I may have to learn to like hockey if I keep this job.\n\nBut did she want to keep this job? The money was pretty good, but the hours were awful. The uniform was hideous, but it couldn't be easier work. \n\nShe was still upset about losing her job at Eaton's Store. She'd started working there part time when she was still in high school. After graduation, while most of her friends went off to college or the military, she stayed, showed up every day, did her job. She thought about leaving, looking for something better in Bangor or Waterville, of maybe even moving down to Mass. But she didn't, she just worked Eaton's cash register. She didn't expect to ever go anywhere. She would still be there if not for Eric Miller.\n\nShe had still been dating Paul when Eric started working at the store, but she had been restless and ready to move on from that relationship for a while. Eric was tall and good looking and started flirting with her on his first day. He asked her out on his third.\n\nThey dated for the next few weeks, and began sleeping together regularly. At work, they tried to keep things cool, but it wasn't easy.\n\nOne night, when she was closing the front of the store, and he was locking up the back, they got playful, started kissing in the stock room, and thinking they were alone in the store, Makayla knelt down in front of Eric to give him head.\n\nThey had not been alone in the store. Makayla didn't think she'd ever forget her profound sense of embarrassment when she glanced up and saw Mr. Eaton staring at them, his mouth hanging open and his eyes bulging in shock. Nor did she expect to forget the rage she felt when he fired her and not Eric.\n\n\"Eric wasn't doing anything,\" he explained when she confronted him about it, \"He was just standing there.\"\n\nShe snapped out of her reminiscing when she thought she saw something moving beyond the bright circle of illumination from the plaza's floodlights. There it was again, something glittering. Then it was gone. She stared intently into the darkness and thought she might've seen it again, a bit of glimmer a short distance away from where she had seen the first one. She opened the half door of the booth and stepped outside, peering into the black distance. Suddenly she froze, realizing that she was staring into pair of piercing red eyes. Another pair blinked into view alongside the first, and then a third a short distance behind the others. Makayla jumped back into the booth and slammed the door shut. She reached into the drawer and pulled out the pepper spray. A face began to emerge, low to the ground. A dog, she thought at first, before it moved closer, further into the light.\n\nCoyotes, she realized, as the light found the second one's face. There were more at the edge of her vision. Slowly, one by one, they stepped forward, until she was staring at a semicircle of snarling canine faces.\n\nA coyote is not going to attack you, she thought, even a pack of coyotes are not going to attack you. You're in the booth, you can close the top half of the door. They won't be able to get to you. You can pepper spray them if you have to. Eventually, a car is going to come by and when it does, they'll run off.\n\nThe lead coyote... the alpha? moved completely into the light and stared at her. She couldn't help but stare back. She felt as if some silent conversation that she could not understand was taking place between them. \n\nAfter a moment she saw a growing light coming from behind her. She glanced over her shoulder and saw a logging truck barreling towards the plaza. When she looked forward again, all but the lead coyote were gone. The leader stood his ground, still staring directly at her, until the truck was no more than a few seconds away, then bolted off into the blackness.\n\nThe truck, an oil tanker, rattled the windows as it went by. Makayla relaxed. They probably ought to give us a rifle or something, she thought, then dismissed the idea as silly. The coyotes may have tried to intimidate her, but she was never in any real danger.\n\nThe rest of her shift was uneventful. Shortly after the sky began to grow brighter in the east, she saw headlights coming through the trees behind the office. A car door slammed shut and a moment later, a squat bald man came out of the office, carrying an old fashioned metal lunchbox. He smiled at her and waved. \n\n\"I'm Jasper,\" he said as he reached the booth, \"How was your first night?\"\n\n\"It was all right. Pretty quiet mostly. A little busy the last half hour or so.\"\n\nA southbound car stopped and paid their toll.\n\n\"Not the most exciting job, though, is it?\" Jasper asked.\n\n\"There was a pack of coyotes hanging around for a bit. That's probably not too unusual, though, I guess.\"\n\n\"I've seen a few over the years, I don't believe I've ever seen a whole pack.\"\n\n\"Well, they were out here last night. Hunting for something, I guess.\"\n\nJasper shrugged. \"I expect you are probably ready to go home and hit the hay.\"\n\n\"Yeah, I'd say so.\" \n\n\"Alright, see you tomorrow.\"\n\n****\n\nMakayla arrived for her second day on the job with her phone loaded with new music and a couple of movies that she had been anxious to see. Watching them on the tiny screen wouldn't be optimal, but it would do. Perhaps after she got caught up on the bills she had missed paying while out of work, she could buy a used iPad or something.\n\n\"How did it go last night?\" Joanne asked her.\n\nMakayla shrugged. \"Fine, I guess. Pretty quiet.\"\n\nJoanne laughed. \"Believe me, I know. But Jasper is less than a year from retirement, and unless someone from another station wants to transfer up here, which don't seem at all likely, you'll move up a notch and take my shift while I go on days.\"\n\n\"That would be great,\" Makayla said, but in the back of her mind she thought, that would mean more work for the same money, wouldn't it? Sitting in the booth all night watching movies or listening to music seemed like a pretty sweet gig.\n\nJoanne gathered up her things and once again, Makayla was alone in the booth. The first hour of her shift was surprisingly busy. Although most of the traffic used the EZ Pass lanes, she did collect tolls from at least a dozen cars.\n\nThat's more than I did all last night, she thought.\n\nBut after midnight, the traffic slowed to a trickle, then stopped. When she had not seen a vehicle in a half an hour, she decided to start one of her movies. But before the opening credits had finished, she saw approaching headlights from the south. \n\nThe car stopped several yards back from the booth and sat idling for a moment. MaKayla wondered what was going on; she couldn't see the driver through the dark glass even when she poked her head out the open top door. After a moment the purring of the motor grew louder and the car crept forward until the driver's window was even with her booth. \n\nShe had never seen a car like it in real life, although she's certainly seen similar ones in movies and old TV shows. It was bright red in the light of the plaza. The headlights protruded like a crab's eyes and the rear end sported two sharp fins. There was no backseat but there was a little round window behind the drivers head. \n\nThe window came down and she saw the driver. The first thing she noticed was his hair. It was long but combed up from his forehead and straight back across his crown. It reminded her of Elvis or that old time actor, the one who got killed in a car crash. \n\nWhen she looked more closely at him she realized he was quite handsome. His features were boyish but at the same time there was a little roughness about him, although perhaps it was just the black leather jacket he was wearing over a plain white T-shirt that gave her that impression.\n\nHe looked Makayla up and down, while rolling a toothpick from one side of his mouth to the other. She suddenly felt self conscious about how she looked in her drab brown uniform.\n\n\"Hey doll face,\" he said, \"How's it shakin'? What's your name?\"\n\n\"That'll be one dollar, please,\" she said.\n\n\"Is that one dollar for the toll or is that one dollar to find out your name?\" he asked, showing a broad grin.\n\nMakayla blushed. \"You think that finding out my name is only worth a dollar?\"\n\n\"A dollar is a lot of money, baby doll.\"\n\n\"The toll is a dollar and this road goes nowhere. Isn't my name worth more than that?\"\n\n\"I can't say,\" he replied, \"Because I don't know what it is. A really good name might be worth more.\"\n\n\"I don't know if it's a good idea to tell people coming through the toll booth my name. There are a lot of weirdos on the road.\"\n\nHe threw his head back in a hearty laugh. \"Baby, don't I know it.\"\n\n\"You can't sit there all night, you know,\" Makayla said, even though she was enjoying the conversation. The flirting, she realized.\n\nHe peered intently into his rear view mirror. \"Is the traffic piling up behind me,\" he asked with mock concern.\n\n\"I don't think that's a problem. It's pretty lonely out here.\"\n\n\"Which is why I think you'd be happy to give a guy your name. But you're giving me the brush off. Heck, they should give you a name tag to wear with that crazy uniform. I mean, don't get me wrong, you look great in it.\"\n\n\"Gee, thanks. Baby shit brown is really my color.\"\n\n\"Oh! The mouth on you!\" He laughed and dug in the pocket of his blue jeans. He pulled out a crumbled dollar bill and held it out toward Makayla, but when she reached for it, pulled it back.\n\n\"Your name?\"\n\n\"Your toll?\"\n\n\"You drive a hard bargain,\" he said, handing her the bill.\n\n\"My name is Makayla,\" she said as she dropped it in the cash drawer.\n\nHe knotted his brow. \"Makayla? That's your name?\"\n\n\"Something wrong with it?\"\n\n\"Nope, just never met a girl named Makayla before. Where you from?\"\n\n\"I'm from Mapleton.\"\n\n\"Are your family immigrants or something?\"\n\nIt was her turn to scowl. \"No. But really, everybody's family was immigrants once, right?\"\n\nHe scratched his head. \"I never thought of it like that. I guess you're pretty smart.\"\n\n\"Smart enough to know you still owe me a dollar.\"\n\n\"I just gave you a dollar!\"\n\n\"That was to tell you my name. You still didn't pay your toll.\"\n\nHe chuckled and shook his head. \"You're a real whippersnapper, you know that?\"\n\n\"I don't even know what it means.\"\n\nDistant headlights flickered in the southbound lane.\n\n\"You here every night?\" the man asked Makayla.\n\n\"Five nights a week. I just started, so you probably didn't see me before.\" \n\n\"Baby, I never seen anybody like you before.\"\n\n\"I could say the same about you.\"\n\nHe laughed again. Makayla smiled. She really liked the sound of his laugh. \n\n\"Honey pie,' he said, \"I guarantee you, you have never seen anyone like me before.\"\n\n\"I've got to get this,\" she said as the headlights drew nearer. She turned to the far side of the booth as a tow truck, emblazoned with the logo of Barker's Collision pulled up and paid the toll.\n\nWhen she turned back, the car was gone. She poked her head out the top door and looked down the northbound lanes. She didn't see any tail lights, only darkness.",
        "The fucker ghosted me, she thought.\n\n****\n\nThe rest of her shift was uneventful, and when Jasper relieved her in the morning and asked her if anything interesting had happened during the night, she shrugged and shook her head. The next night, she didn't even think about the strange encounter during the first hour of her shift, but shortly after midnight the red car appeared again.\n\nUnlike the first night, he drove right up to the booth.\n\n\"Hey, Miss MaKayla, how's it shaking,\" he called out, showing a big toothy grin.\n\n\"It shakes like a leave on a tree every time one of these big ass trucks goes past. By the way, you didn't tell me your name.\"\n\nHe hesitated for a second before answering, and Makayla had the odd impression that his own name was some half forgotten bit of information.\n\n\"Tommy,\" he said. \"My name is Tommy.\"\n\n\"So what kind of car is that? I never saw one like it before.\"\n\nHe ran his hand lovingly around the steering wheel. Makayla had a flashing image of him running it down her body.\n\n\"Oh baby doll, this is a '57 T-bird. It's got a 318 V-8 under the hood, dual exhaust, leather seat, white wall tires. Wait until you ride in it, you're going to love it.\"\n\n\"Oh, you think I'm going to go for a ride with you?\"\n\n\"Yes, Ma'am. One of these nights, I'm going to drive up and you're going to hop in.\"\n\nMakayla laughed. \"I don't think so. You'll have to come back when I get off in the morning.\"\n\n\"Nope,\" he shook his head, \"Gotta be night time. It's like the song says, the night time is the right time.\"\n\n\"I don't know that song. Why do you drive such an old car, anyway?\"\n\n\"Old? This baby is cherry.\"\n\n\"Well, it's red, anyway.\"\n\n\"Flame Red, they call it.\" He revved the engine and winked at her. \"Like me, hot as a pistol.\"\n\n\"I didn't know if I was going to see you again,\" Makayla said.\n\n\"Oh baby, don't think like that. I'm gonna keep coming back until you go for a ride with me.\"\n\n\"I don't think that's going to happen,\" she said, \"I'm at work. I can't just take off on a joy ride. You know, what most guys do is ask a girl out on a date.\"\n\n\"Yeah, no can do, baby. But I'm gonna keep coming by to see you anyway.\"\n\nOn an impulse, MaKayla stepped out of the booth. She leaned down with her elbows on the edge of his window, propping her chin on her hands. She looked around the car's interior, and, surreptitiously, checked out a little more of Tommy.\n\n\"It really is a bitchin' ride,\" she said, \"Seriously, I'd go for a ride if I wasn't working.\"\n\nHe smiled. \"Chicks always dig a guy who drives a cool car.\"\n\nMakayla stood up straight. \"No, chicks dig a guy who can afford a cool car.\"\n\nShe caught a glimmer of light in her peripheral vision. \"There are cars coming,\" she said.\n\n\"Well, I guess tonight ain't the night. See you later, doll face.\"\n\nShe stepped back into the booth, glancing to see how close the oncoming cars were, and when she looked back to say goodbye to Tommy, he was already gone. \n\nShe didn't understand how he came and went so suddenly. Joanne had said that cars couldn't sneak up on you at night, that you saw their headlights too far off. But Tommy seemed to come and go in the blink of an eye.\n\nShe looked up at the EZ Pass monitor. It showed a split screen, looking down at the two fast lanes. She flipped open the little door labeled controls and looked inside. Among the controls was a button marked with a left pointing arrow. She pressed it and saw a few seconds of a WalMart delivery truck passing beneath the camera. Apparently, it worked on a motion sensor. \n\nThe view went live again, back to the empty road. She looked closely to see if the regular lane, the one Tommy drove in, was in the picture. It was not, the edge of the picture was aligned with the barrier between the lanes. \n\nHe's just got a really fast car, she told herself, realizing that was not a good explanation. Rather than dwell on it, she cued up one of the movies she had downloaded to her phone and began to watch it.\n\nMidway through the movie, she was distracted by movement in front of the booth. She looked out and saw a rabbit, or perhaps it was a snowshoe hare, cautiously hopping across the highway.\n\nShe smiled as she watched it, but suddenly a shape appeared above, moving swiftly. She barely had time to register that it was a large owl, before it had snatched the rabbit in its talons and disappeared into the night.\n\n\"Fuck!\" She sat back in her seat and shivered. Coyotes, owls, who knew what other dangerous things might come out of the dark?\n\nShe returned to her movie, but for the rest of the night, she felt uneasy, her mind continuously returning to the image of the owl, its wings spread wide and its razor sharp claws extended, appearing out of nowhere; and the rabbit, going about its business, unaware that death could fall upon her at any moment.\n\n****\n\nBy the next night it was clear that autumn had arrived. There was a chill in the air and swirls of red and brown leaves skittered along the pavement. Makayla kept her jacket on and reminded herself to start bringing one of her knit hats. Joanne had been wearing a pair of gloves with the fingers cut out and she thought it might be a good idea to get a pair for herself.\n\nShe realized she was anxiously waiting to see if Tommy would show up again. She was not disappointed. When headlights appeared in the northbound lane shortly after midnight, she knew it would be him.\n\n\"Don't you get cold sitting in that booth all night?\" he asked as he rolled to a stop.\n\n\"There's a space heater.\"\n\n\"It's nice and warm in here,\" he said, patting the seat next to him.\n\n\"Oh, and you're not gonna drive off with me the minute I get in?\"\n\n\"Not yet.\"\n\n\"I see. So you're still checking me out.\"\n\n\"Baby, I knew you were the right one the first time I laid eyes on you.\"\n\nMaKayla stood up straight, her hands on her hips. \"Promise you aren't going to drive off.\"\n\n\"Cross my heart and hope to...\" He stopped, and looked up at her with a sad expression. \"All I'm hoping tonight is you'll sit with me a while.\"\n\n\"All right, but if you take off with me in the car, that's kidnapping.\"\n\nHe chuckled. \"Honeypie, you sure ain't a kid no more.\"\n\nShe looked both ways and saw no traffic, then went around to the passenger side and got in.\n\nSinking into the plush seat, she said, \"This might be the most comfortable car seat I ever sat on.\"\n\nTommy ran his hand over the upholstery. \"This middle part here is even more comfortable.\"\n\nMakayla laughed and leaned back against the door.\n\n\"Don't get too full of yourself, buddy.\" \n\nTommy threw his hands up in a mock gesture of defeat.\n\n\"So where do you go every night?\" Makayla asked.\n\n\"I go where the road takes me, honey.\"\n\n\"Where are you going tonight?\"\n\n\"Doll face, my only plan was to come see you.\"\n\n\"Just come see me? Not get me to go riding with you?\"\n\n\"Not tonight.\"\n\n\"Why not?\"\n\n\"Tonight's not the night.\"\n\nHe turned up the radio. A DJ was talking much too loud and much too fast.\n\n\"...that was Teen Angel, and now here's a word from one of our sponsors...\"\n\nThere was a commercial for something called Ipana, and then the DJ was back.\n\n\"It's 52 degrees here at the Big Eightysix studios. Now here's one for the kids down at Acheron High, Tell Laura I Love Her...\"\n\n\"What's that?\" Makayla asked, \"Some oldies but goodies station?\"\n\n\"Nothing wrong with the oldies, baby,\" he said.\n\nMakayla became aware of how completely at ease she was feeling, sitting in Tommy's car. Something about it was just right, like she belonged here, as if meeting this strange man with the crazy car was not just happenstance, but an important event in her life.\n\nShe looked at Tommy, who was softly humming along with the radio. He glanced at her and grinned and without another thought she slid to the center of the seat.\n\n\"That's more like it, babydoll,\" he said. draping his arm over her shoulders.\n\n\"If I go with you, you have to let me drive this thing sometimes.\"\n\n\"Do you know how to handle a stick?\"\n\nShe put her hand on his thigh and squeezed. \"I've handled a few,\" she said.\n\nTommy howled. \"You are something else, girl!\"\n\n\"Yeah? What am I?\"\n\nHis voice dropped low and he said, \"Beautiful.\" He leaned his face in closer add MaKayla tilted her head, and they kissed.\n\nWhen their lips met, Makayla felt a sensation almost like an electric shock. It was not painful, but she had the distinct notion that some kind of energy had passed between them.\n\nTommy drew his head back. \"Was that okay?\" he asked. Makayla put her hand on the side of his head and pulled him back, kissing him again, pressing her tongue between his lips and against his.\n\nHe responded, putting his free hand on her hip, turning her toward him and holding her closer. Their kisses grew more passionate until, after a few minutes, MaKayla pushed him away and looked into the rearview mirror.\n\n\"We've got to keep our eyes open for any cars coming,\" she said.\n\nThey kissed again, and Tommy grew more assertive, exploring her mouth with his tongue and stroking her back with his hand. But Makayla caught a glimpse of light in the read view mirror, and pushed him back.\n\n\"Someone's coming,\" she said. She slid across the seat and opened the door.\n\n\"Alright, gorgeous,\" Tommy said, I'll see you tomorrow.\"\n\n\"You don't have to go,\" she said as she shut the door. But she knew he would go, and when the new car stopped at the booth, he was nowhere to be seen.\n\nShortly after the car had paid their toll and left, she heard a noise from the far side of the southbound lanes. At first she thought it was just leaves rattling in the wind, but then she remembered the coyotes. She tensed and slid open the drawer, ready to pull out the pepper spray if she needed it. She saw a dim shape moving just beyond the circle of light. When it moved closer, she saw that it was a yearling deer. Its mother, an elegant doe, was close behind it, with a younger fawn peeking out from between her legs. They stood at the edge of the road, looking at her. When she made no move towards them they lowered their heads and began to forage in the brush along the shoulder. A moment later she heard another rustling sound, and watched, her mouth dropping open, as a large buck, sporting a full rack of antlers, joined his family. \n\nMoving slowly, deliberately, she raised her hand from the drawer, reached into her jacket pocket and took out her phone. She opened the camera app and slipped carefully off her stool. Moving as quietly as she could, she unlatched the bottom door, pushed it open, and stepped outside.\n\nThe two adult deer raised their heads and stared at her for a moment, then went back to their feeding. \n\nMakayla lifted the phone before her eye and adjusted the camera, just trying to get all four animals in the picture. The buck took a step forward. She thought he was taking a defensive position, so she cautiously took a half step back. He continued to watch her, but did not move. She snapped one picture, then another and then zoomed in to try to frame just the buck's head and impressive antlers. But before she could take the picture, he vanished from the camera's view.\n\nSuddenly, she heard a loud, jarring blast of sound. A logging truck was roaring towards her, its air horn screaming.\n\nShe jumped backward as it closed in on her. The force of its wind knocked her off her feet. She slammed into the side of the booth and might have fallen under the logger's big rear wheels had she not been able to grab the handle of the bottom door and hold on.\n\nThe truck was gone as fast as it had arrived. Makayla leaned against the toll booth, panting, feeling the adrenaline rush slowly subside.\n\n\"Fucker wasn't in the EZ Pass lane,\" she muttered between gasps of breath. But when she looked across the road and saw the deer were gone, she realized the truck driver had probably seen them and veered into the inside lane to avoid hitting them.\n\nShe got back in the booth and sat down, her hands trembling. \"You're okay,\" she whispered to herself, \"Everything is alright.\" But it wasn't enough to tell herself that. She felt a deep need to be hugged, to be held and comforted. She wished Tommy would come back.\n\n****\n\nMakayla still felt anxious when she reported for work the next night. Joanne took notice.\n\n\"Long nights starting to get to you, dear? she asked.\n\n\"Maybe a little bit, MaKayla said, \"Sometimes I think I see things moving around in the dark that I'm pretty sure aren't really there.\"\n\n\"Well, your eyes are gonna play tricks on you, dear. You'll get used to it.\"\n\n\"Last night there were some deer in the outside lane and a big truck came roaring by and I guess he wanted to stay clear of them, so he came in right next to the booth. Scared me half to death.\"\n\n\"Those big boys can really throw a fright into you,\" Joanne nodded, \"Just gotta tell yourself they are professional drivers who know what they're doing.\" She hesitated for a second. \"Well, most of them do.\"\n\nWhile she waited for Tommy, MaKayla thought about how safe she had felt in his car, even though they were sitting right in the traffic lane. It seemed like a sort of sanctuary, a place where she knew she could never be hurt. That didn't make sense though, it was just a car, and an old car at that. She did not recall it having seat belts and it certainly did not have air bags.\n\nWhen the T-Bird pulled up to the booth that night she immediately jumped out, ran around it and got in the passenger seat.\n\n\"Listen honey,\" she said, \"Do you think you could pull your car over on the grass by the office? I get nervous sitting in the traffic lane.\"\n\nTommy peered through the windshield for a moment, then nodded. \"I think I can do that,\" he said.\n\nHe steered on to the narrow strip of lawn, put the car in park, and shut off the lights. For a split second after the car became dark and he was only silhouetted by the flood lights behind him, Makayla had the odd impression that she could see right through him. But when he turned in his seat to face her, he appeared as he always had. She moved over to him on the seat and they embraced and kissed.\n\n\"Seems like you got the jitters tonight, honeypie,\" he said, brushing her hair back from her face.\n\n\"It gets scary out here alone in the dark at night,\" she said.\n\n\"Well, you've got nothing to fear tonight,\" he said, kissing her again. She felt in her heart that it was true, she was safe in his arms. She couldn't understand why she should feel that way, she just seemed to know.\n\nHe looked into her eyes and moved his hand to cup her breast. He whispered, \"Is this okay?\"\n\n\"Yes,\" she said, \"is this?\" She reached into his lap and ran her hand down between his legs. \n\nHe moaned in response and fondled her breast more firmly. She tugged at his belt. \"Unfasten your pants,\" she said.\n\nIn a surprisingly shy voice, he asked her, \"Are you sure?\"\n\n\"Yes, I'm sure, Tommy.\"\n\nHe pulled his belt loose and unbuttoned the waist of his jeans. Makayla tugged down his zipper and slipped her hand inside his pants. He was wearing tight white jockey shorts and she had trouble trying to get the fly open. Seeing her struggle, he hooked his thumbs in the sides of his jeans and pulled them, and the underwear with them, halfway down his thighs. Under the floodlights, his bare flesh was pale. MaKayla wrapped her hand around his hardening shaft and slowly stroked it. \n\n\"Holy cow,\" he muttered\n\n\"Do you like that?\" she asked with a grin.\n\n\"You bet I do.\"\n\n\"What about this?\" She bent down and wrapped her lips around the head of his cock.\n\nHe let out a long, low moan. She raised her head long enough to remind him to watch for traffic, then returned her mouth to his cock and sucked him fervently.\n\nMaKayla surprised herself with the intensity of her desire for him. As his breathing grew heavy, that desire only increased. She sat back and looked out the rear window and then through the windshield, but realized she didn't care if there was any traffic. Let them drive by, she thought, let them skip their toll. It wasn't likely her bosses would find out; who would call to complain that they didn't pay their toll? And if they did, she still did not care. She wanted him more that she wanted keep her job.\n\nShe kicked off her shoes and unfastened her own pants. Tommy looked on with an expression of amazement as she slid back on the seat and slipped them off. When her panties followed, he moved closer.\n\nMakayla turned and straddled his lap, taking his head in her hands and kissing him deeply. She felt his stiff cock beneath her, reached down and grasped it. Rising on her knees, she guided it into place and slowly lowered herself down on it.\n\nTommy's hands seemed to be everywhere, on her hips, her breasts, in her hair. His hips pumped energetically, meeting Makayla's motions in perfect synchronization.\n\nA truck flew past in the EZ lane, but they scarcely noticed. Their passion mounted, and Tommy lifted Makayla off his lap and laid her down on the T-Bird's wide seat. He entered her again, smoothly and easily. She wrapped her legs around his hips, and after only a few thrusts, felt an orgasm sweep through her.\n\nTommy continued to fuck her, and she came again and again. Finally, he arched his back, groaned loudly and reached his own climax, pumping into her until she could feel his semen pooling beneath her. It was if he had not come in a very long time.\n\nThey sat up, side by side, holding hands and catching their breath. After a few minutes, Tommy just said, \"Wow.\"\n\nMakayla laughed. \"Yeah, that sums it up pretty well,\" she said.\n\n\"I think you missed a couple of toll there, Doll face.\"\n\n\"Yeah, I had better get back in my booth.\"\n\nShe found her uniform pants on the floor and picked them up. There were lights approaching.\n\n\"Shit!\" She kissed Tommy's cheek and opened the car door. She ran, naked from the waist down, across the lanes and managed to get into the booth, the bottom door closed, before the vehicle, a panel truck reached the plaza. She was afraid the driver sat high enough to see into the booth, but she draped her pants over her lap, and he did not seem to notice that she wasn't actually wearing them. He handed her a twenty. She made change and he pulled away. The T-Bird was gone, but her panties and shoes were in the grass where it had been parked.\n\n****\n\nJoanne kept puttering. MaKayla realized that getting her out of the plaza wouldn't make Tommy come any sooner, but still she couldn't wait for her to leave.\n\nShe was both exhilarated and anxious about the prospect of seeing Tommy again. Still in the afterglow of the previous evening, she longed to be in his area again. But would he even show up? Perhaps he had gotten what he wanted and would't be back.\n\nShe dismissed the notion that he would be satisfied with a one night quickie. She had felt a special bond between them, even from the first night. Surely, he felt it as well. But if that bond was real, it was time to tell him that late night rendezvous at the toll plaza would not be enough. She had decided that she would tell him tonight that she expected more. Waiting for JoAnne to finish her shift, she began to fear she might waver in her resolve.\n\nJoanne finally finished double checking the count in her cash drawer. It had been raining steadily all evening. Her raincoat was draped over the back of the stool, and it seemed to take forever for her to put it on. Naturally, one sleeve had been turned inside out. Makayla helped her get into it, and finally, bid her good night.\n\n\"Don't imagine it's going to be an eventful night for you, dear,\" JoAnne said.\n\n\"Well, you never know,\" Makayla replied, smiling to herself.\n\nOnly a few minutes into her shift, a line of southbound semi trucks shook the booth so violently that she thought that it might shake apart.\n\nBy midnight it was raining harder and only two cars had gone through the plaza. Makayla didn't like the dampness in the booth, but if the storm kept everyone at home tonight, that would be fine with her.",
        "Shortly after twelve, she did see a distance glow in southbound lanes. It quickly narrowed into a beam of light, reflecting off the wet pavement, and then into two sharp bright points. Makayla peered out through the back window. Something seemed off; the lights were approaching faster than usual. A quarter-mile out, the lanes veered, creating the center island on which the toll booth stood. She felt a sinking feeling in her stomach when she realized the lights had passed that point and had not altered their course. \n\nShe stood up and stared, to see the truck shift course, but the light came on. There is a curb, she remembered, but understood immediately that it wouldn't stop a truck that big, moving that fast. \n\nFor a second, she could see the outline of the cab, the headlines aimed at her like two great predatory eyes. It's the owl, she thought, and I'm the rabbit.\n\nShe raised her hand to shield her eyes, but her field of vision went white. She heard a deafening crash and felt the force of a great explosion mere inches from her. The smell of hot metal filled her nostrils and the taste of it was in her mouth. She felt a wave of sensation too overwhelming to process as pain, and the impression that she was moving at a great speed. And then, there was nothing at all.\n\n****\n\nThe world was a blur of darkness and glittering light. She blinked twice, then closed her eyes tight. When she opened them, her vision was clear.\n\nShe was not in her booth. The booth was gone.\n\nFeeling disoriented, she looked to her right. The office was there. It looked like it always had. But the wet pavement in front of it was littered with broken glass and small bits of debris.\n\nWith a rising sense of dread, she turned around. The booth had been smashed into a million pieces. They stretched down the road beyond the edge of the floodlights. Her stool lay, twisted grotesquely, in the far left lane. The rain pooling on the pavement was stained with a streak of red down the middle of the debris field.\n\nLooking further down the road, she could see the single remaining headlight of the truck. It was bend down toward the road, and in its reflected light, she could see that the cab and trailer had jackknifed and were blocking the width of the turnpike.\n\nThere was something laying in the dimness between the plaza and the truck. Her mind did not want to accept the knowledge of what it was.\n\nAs she gazed in terror, first one, then several coyotes emerged from the dark. One, larger than the rest, took several steps toward her. It stared at her, its tongue hanging from its mouth. Behind it, the rest of the pack began tearing at the bloody object, growling and snarling at each other.\n\nMakayla turned away in disgust, but felt compelled to look back. A pair of headlights appeared, and the coyotes scattered, some carrying pieces of their prize in their jaws. Makayla wondered how the approaching car had gotten past the truck, but as they drew nearer, she recognized them, and she understood.\n\nThe T-Bird pulled up, the exhaust sputtering, and came to a stop next to her. Tommy looked out the window.\n\n\"Hey, doll face,\" he asked with a grin, \"You ready to take a ride with me?\"\n\n\"Where to?\"\n\nHe shrugged. \n\nMakayla looked around at what was left of the plaza. \"Yeah,\" she said, \"I guess tonight's the night.\"\n\nShe walked around to the passenger side of the car and got in, sliding to the center of the front seat. She draped one arm behind Tommy and rested her other hand on his thigh. He leaned over and kissed her, then flicked on the radio. Chuck Berry was singing No Particular Place To Go.\n\nMakayla laid her head on Tommy's shoulder as he popped the clutch. His tires squealed and the car lurched forward, out of the pool of light and into the darkness."
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "horror",
        "ghost",
        "halloween",
        "ghost story"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/toll-booth"
}