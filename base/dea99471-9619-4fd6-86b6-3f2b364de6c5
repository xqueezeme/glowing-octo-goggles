{
    "title": "Master! Master! Pt. 14",
    "pages": [
        "Jenny gasped and panted as I pierced her, sheathing my manhood deep within her slender form. She was pressed against the shower wall, her long ears hanging down over her face from the weight of the water. Her parted lips drew me in and I joined them with mine. My hand slipped down her smooth thigh and I lifted her leg, granting me an angle with more room to maneuver. Her moans came in tandem with my thrusts, her body welcoming my cock as our tongues danced. She wrapped her arms around me and pulled me in closer, the feeling of her nipples against my chest was euphoric. The hot water pouring down on us was warping our senses, imitating the warmth and feeling of flesh on flesh and heightening everything we felt.\n\nI shivered from a cold touch, Leah pressing herself on my back. She was humming in joy as she rubbed her breasts against me. Without breaking away from Jenny, I offered up one of my hands to Leah. She was too short for me to slip into her sweetness, but I was able to taste her skin with my fingertips. She clutched my arm, trying to wrap herself around it while she licked up the hot water pouring down my body. When that wasn't enough, she got down on her knees and started sucking on my hand like it was coated in syrup. The feeling of her tongue slipping between my fingers was far greater than I expected it to be, my mind almost forgetting that I was already having sex with Jenny. \n\nOn the outside, she seems cute and innocent, but damn, Leah is perhaps the thirstiest girl in my harem, tied with Betty.\n\nI finally decided that she deserved some attention. I pulled out of Jenny and my member was in Leah's mouth before I could even point it in her direction. She took the whole thing, her throat welcoming my mass without issue. Once she had sucked it clean, she lied down on the shower floor and I attacked her, hammering her pussy like I was plowing snow. Her slippery body was perfect for the missionary position, as it took away all friction. Behind me, her tail was slapping the floor as I made her holler like an opera singer. \n\n\"Master,\" Jenny murmured, \"I still feel so hot down here.\"\n\nShe crouched down in front of me, her legs spread and her pussy gleaming. It took some effort to get the three of us in the right position, but I eagerly started slurping up her honeypot. Both Leah and Jenny were moaning, my cock in one and my tongue in the other. Jenny massaged her breasts with one hand and used the other to tickle her clitoris, every tentative touch she made raising the pitch of her voice. Both she and Leah cried out as they came, but I was still rearing to go. \n\nI sat up and pulled out of Leah, but she knew I wasn't done. Instead, I pointed my cock down lower, and with a lustful grin, she raised her hips to grant me better access. I penetrated her anus in a single stroke, driving deep inside her and sending bolts of electricity up her spine. I didn't give her any time to get accustomed to the sensation, I immediately started ramming her with all the strength and speed I could muster, turning her originally shrill moan into an almost semi-conscious gargle. Her eyes were rolling back into her head, the look on her face one of sexual madness. \n\nI'm not sure which of us was enjoying it more. To me, rooting around in her asshole was such an exquisite experience, both mentally and physically. She was so soft but so tight, and even though this was her second time, it had lost none of its kinkiness. Leah's slimy body, it was like it was made for fucking. Her trick before using the back of her knee was like an announcement that every single part of her could be used for sex, and I was taking full advantage of it. But I wanted even more stimulation. I grabbed one of her ankles and began sucking on her toes, licking up her delicious salve like my life depended on it. \n\nJenny was watching us with wide eyes, only now realizing that it was possible to play like this. Momo, Sonja, and Chloe would all be terrified by this, but she was intrigued.\n\n\"Jenny,\" I panted, \"get behind me and play with her tail. It'll help her cum.\"\n\nJenny snuck by me and examined Leah's tail. She was hesitant, her instincts making her think of snakes, but she pushed those thoughts aside. She picked up the scaly tail and began running her fingers up the length, amused by the slippery sensation. I could see the effect it was having on Leah, the soft touching making her arch her back. Jenny continued to play with Leah's tail, getting a sense of what to do and how to invoke the best reaction, but as she experimented, an idea came to her.\n\nShe crouched over Leah's tail, she and I back to back, and while pulling it upwards, began to grind against it with her pussy. The sensation was better than expected and she straddled the slimy appendage with greater force, riding it like was a giant tongue. The feel of it on her labia and clitoris were sending shivers up her body, the idea that a nonsexual body part could be used in such a way riling her up. She began to make noises of her own, rubbing back and forth against it while she massaged the tip. Instinct took over and she put the tip of Leah's tail in her mouth, sucking on it like a surrogate penis and relishing the taste of Leah's sweat.\n\nIt was too much for Leah to bear, to have her tail used and stimulated in such a way, paired with the anal pounding I was giving her. She experienced a gushing orgasm, spraying me with arousal like she was a Super Soaker, but the shower just washed it all away. I fell back, gasping for air. I still hadn't cum, but it always took me a while to shoot my load in the morning. Jenny turned around and I rested my head on my lap. She smiled and stroked my hair.\n\n\"Master, can I play that way too?\" she asked. \n\nI looked up in surprise. \"You want to? I assumed you were like Momo, Sonja, and Chloe. They all clench up at just the thought of it.\"\n\n\"It looks like fun, and I want to feel Master inside of me every way I can.\"\n\n\"Sure thing, but I'll leave the pacing to you.\"\n\nShe nodded with a grin and crawled over to the near-comatose Leah. \"Leah, how are you feeling?\"\n\nLeah slowly sat up with a tired smile on her face and began rubbing up against Jenny the way a cat would.\n\n\"I think she appreciated your technique. Come here, Leah, give Jenny some room to maneuver.\"\n\nLeah first lowered her head and rolled my cock around in her mouth, licking it clean. Perhaps she did it out of arousal, perhaps as a courtesy to Jenny, I'm not sure which. She then crawled over to me and Jenny crouched over my lap.\n\n\"How should I do this, Master? Which way should I face?\"\n\n\"Try with your back to me. Let me see that cute little tail of yours.\"\n\n\"Ok!\" \n\nShe turned around and grasped my member, stroking it to check the rigidity and slipperiness. Leah had done a good job getting it ready. She didn't hesitate, she guided it to her anus and lowered herself down onto it, panting and whimpering as she was lost her second virginity. Goddamn, that is a sensation I will never get used to. She was so hot and soft inside, the feeling was indescribable! And as always, the mental accomplishment was just as euphoric as the physical touch, the fact that I had dominated a woman's final sanctum.\n\n\"Are you ok? How does it feel?\"\n\n\"It feels... really weird, but also kind of good. It's so big, I don't know if I can move.\"\n\n\"Well just take your own rhythm and do whatever makes you comfortable.\"\n\nShe began making small bobs, rising up just an inch or so and then dropping, squeaking the way Chloe would. Turning her back on me was the right idea, the sight of her pert ass being penetrated was worth a million bucks. The sight of her poof ball tail made it even better. I'll be honest, her tail is my favorite, even above Elise's. As she got accustomed to the sodomy, she became braver and more energetic. In time, she was bouncing on her folded legs, using her knees and ankles to move her body in a linear piston movement. I could see it, the shaft of my cock momentarily exposed as she raised herself up, leaving only the head clutched in her tight ring, then she'd drop back down, greedily cramming my meat missile into her sin cave. Her hands, if not rested on her knees, would be busy massaging her breasts and playing with herself.\n\nI could've watched her ride me all day, but I had another girl to take care of as well. \"Ok Leah, give me a taste.\"\n\nHer smile brighter than the rising sun, she swung her leg over and began straddling my face. Her change in expression was immediate, her smile melting like ice cream as I slurped on her labia. I moved back and forth between her pussy and asshole, digging in deep with my tongue and sampling her erotic body. She was whimpering in happiness, capable only of voicing her euphoria in cries rather than words. She still had not regained all her strength from the backdoor bombardment I had unleashed earlier. Her stamina was failing, her legs soon unable to hold up her weight, and her back, weakened from arching and convulsing in ecstasy could not keep her upright.\n\nShe fell forward, holding herself on her knees and elbows with her pussy still locked on my face. But now with the new angle, I could continue my assault. As I focused my tongue directly on her clitoris, I began finger-blasting her asshole and even rubbing the tip of her tail. The three levels of stimulation were beyond her limits. Her whimpers turned into inhuman moans, her mind unable to function when saturated with such sexual bliss. It was as if the perverse euphoria was completely unraveling her existence.\n\nIt was now a question of who would break first; Leah, who was being attacked on three fronts, Jenny, who was experiencing her first anal fucking and riding my cock like a rodeo bull, or myself, as I was overdue for an eruption. Leah caved, once again spraying me with liquid lust and crying out at the top of her lungs. She collapsed beside me, out like a light. She never stood a chance.\n\n\"Master! Master! Master!\" \n\nJenny came a couple minutes later, screaming my name over and over with every climax that rushed through her. She had become still, unable to move her body as her womanhood went off. I gave in almost immediately afterward, injecting my semen deep into her anal cavity. She fell forward, unconscious like Leah but with her butt in the air. Below her poof ball tail, between her peachy ass cheeks, I could see her glazed donut. \n\nA knock came on the bathroom door. It was Sonja. \"Master, come on! Dr. Lawrence says you need to eat breakfast and go before the animals get here!\"\n\n\"I'll be down in just a minute!\"\n\nI then looked at Leah and Jenny, lost in their sex comas. They might end up skipping breakfast.\n\n----------------------------------------\n\nLorraine and I were carrying breakfast with us as Dr. Lawrence pushed us out the door. \"You can't be here when the animals show up! Go!\"\n\n\"Relax, Dad, we're not going to miss the bus!\" Lorraine shot back. \n\n\"Hold on, you promised you would let us read the notes you doctors have written!\"\n\n\"Fine, get in your cars and I'll bring them out.\"\n\nI did as told and climbed into my car, then sighed when Lorraine got into the passenger seat. She really wasn't going to leave me alone. Dr. Lawrence came out a minute later and handed us a portfolio.\n\n\"Now whatever you do, don't lose them and don't make copies.\"\n\n\"Yeah, yeah, we got it.\"\n\nWe drove off, and twenty minutes later, several vans pulled up. They belonged to various animal shelters, pet shops, and even the Maine Wildlife Park, and inside, a menagerie of animals could be heard barking, squawking, and making all manner of noises. Of course, everyone involved had to sign a confidentiality agreement before coming inside.\n\nCountless cages were either carried or wheeled inside, holding everything from mice to parakeets. There were no cows for Betty to talk to, but that was simply because they could simply go to the farm to perform the experiment. The dogs were able to walk on their own, but that was only with leashes on. The hybrids all watched with wide eyes as the animals were brought in, at last able to speak to their former kin.\n\n\"Good,\" said Dr. Lawrence, \"now that everyone is here, we can begin. The experiment for today is to study how each of you communicates with your animal counterparts. For this test, we've gathered multiple specimens of both genders and varying ages, and in many cases, both wild and born in captivity. I'd like you each to take one of the dorm rooms in the back of the mansion and spend time with your new friends.\"\n\n\"Oh, this is going to be fun,\" said Elise, rubbing her hands together.\n\n----------------------------------------\n\n\"'Male human subject, named \"Master\" by his hybrid companions, has provided extensive information on the cohabitation abilities of both species, both through interviews and direct performance.'\"\n\nLorraine and I were sitting on a bench in a nearby park, reading through our files.\n\n\"My name is never mentioned in this. I'm only referred to as \"the Mistress\" because that's what my boys call me,\" she said.\n\n\"That must be for security reasons. These journals will probably be published long before our identities are revealed to the public. Oh, listen to this:\n\n'The Master lives in a polygynous relationship with his female hybrid companions and routinely engages in sexual intercourse, either in groups or with each hybrid individually. Despite each of them showing a clear desire for attention, the females seem to get along without showing signs of jealousy or antagonism towards each other. They have a bold sexual appetite but lack a human knowledge and understanding of sex, as well as the cultural values associated with it. During their transformation process, all instincts towards procreation were lost, so they are unaware of the biological function of intercourse. For the female hybrids, sexual intercourse is seen as simply a game to be played with their Master.\n\nThe only exception to this theory is the cow-hybrid known as Betty. Due to her age and her experience with breeding, she possesses a far more mature understanding of sex and procreation and has even shown a clear and human sexuality.'\"\n\n\"Mine says pretty much the same thing, that I have a polyandrous relationship with my pillar men. 'Despite their primal and muscular appearance, the male hybrids appear timid and servile, but incredibly loyal. They approach sexual intercourse as a means of pleasing their Mistress, while the female hybrids and their Master act out of a desire for mutual enjoyment. Despite their similar existences, the two groups don't appear to show any romantic or sexual interest in each other. While they will play and exercise together, the male-female dynamic appears entirely platonic, both sides only appearing attracted to their creator.\"\n\n\"Dr. Lawrence told me that Dr. Moody, that pretty, young doctor, was the one studying our sexual relationships. I got to say, these notes are a lot more boring than I thought they would be.\"\n\n\"I know, I was hoping for something more along the lines of PornHub comments. Oh, hold on, here's something. 'Mistress frequently engages in acts of sexual depravity -- may be dangerous to the mental development of her male hybrids.'\n\nDangerous to the mental development? I'll take that as a compliment. What about you?\"\n\n\"'Master satisfies each girl fully, giving them all equal affection. He has built up a noticeable stamina to fulfill his sexual obligations.' Oh, check it out, her handwriting starts slipping towards the end. I bet she was writing this while watching the girls and I play.\"\n\n\"Her other hand was probably busy as well. I think she might be jealous of the girls.\"\n\n\"Well I AM a very generous lover, of course she would be jealous. 'Master = sexual provider + parental figure. Master shows strong paternal instincts towards his hybrids, likely due to their child-like personalities. Suggests would be an excellent parent if interspecies breeding ever becomes possible.'\"\n\nI stopped and stared at the notes, a small smile on my face. \n\nLorraine leaned over and read them. \"You know, that's actually true. You would make a good dad, I mean, as long as you'd remember not to play with your kids the same way you play with their mothers, who pretty much already are your kids.\"\n\n\"That's disgusting.\"\n\n\"Have you ever given a thought to having kids?\"\n\n\"No, it never crossed my mind before my girls showed up, and now, there's no way I could handle the added responsibility. Anyway, keep looking for any juicy comments. I want to see if she becomes a little more honest with herself.\"\n\n----------------------------------------\n\n\"Momo doesn't know why she's like this. Master did this to Momo but he doesn't know how.\"\n\nMomo was lying on her stomach on the floor of one of the mansion's bedrooms with four cats sitting in front of her, two males and two females. In reply, the cats made various small movements, such as closing their eyes, cocking their heads to one side, or yawning.\n\n\"Momo likes being big. What? No, it didn't hurt.\"\n\n\"So, you actually understand them?\" Dr. Lawrence asked, sitting in a chair in the corner.\n\n\"Yep. Momo doesn't know how to explain it, but it's like Momo hears words when they reply.\"\n\n\"Would you say it's like you're reading their thoughts?\"\n\n\"No, Momo just understands what they're saying, like when Master nods or shakes his head and Momo hears yes and no in her head.\"\n\n\"And they also understand what you say, right? When you talk to them?\"\n\n\"Uh-huh.\"\n\n\"Are you also replying the same way they are? I see them using body language, but I'm not sure I see you doing any.\"\n\n\"No, they just understand Momo's words.\"\n\n\"Do they understand my words?\"\n\nMomo relayed the question to the cats. \"No, they don't. They only understand Momo.\"\n\nDr. Lawrence was writing everything down, and while the experiment was clearly bearing fruit, the results were still frustrating. Everything about the hybrids seemed to defy all logic and reasoning. At this point, he was ready to believe that magic was real, but even then, if it couldn't be quantified or measured in some fashion, then there was nothing he could do.\n\n\"When the cats speak to you, does it feel like you're having the same kind of conversation you have with me?\"\n\n\"Not really. They don't use as many words.\"\n\n\"Can you ask them what they are thinking right now?\"\n\nMomo again relayed the question. \"Arya is hungry, Zoe wants to go outside, Apollo wants to take a nap, and Jake is confused.\"\n\n\"Momo, I'm going to go check on the others. You and your friends are free to do as you please. But tell them that they have to either stay with you or tell you where they are going. And can you tell them not to make any messes? If nature calls, they need to use the litter box.\" In the corner of the room was a pre-filled litter box from the grocery store.\n\nMomo voiced the request to the cats, then perked up when one of them wiggled his nose. \"No, Momo isn't gonna use it. Because Momo doesn't use the litterbox anymore. No, Momo isn't allowed to do that outside. Master taught Momo to use the toilet. You know, the big white thing in the bathroom? Momo didn't like learning to use it.\"\n\nDr. Lawrence left the bedroom while Momo continued speaking with the cats. She moved down the hall to the next room, where inside was Chloe and Dr. Moody. Chloe was lying on the floor, giggling as four mice ran around on her chest.\n\n\"How are things in here?\" Lawrence asked Moody, speaking softly to avoid interrupting the sight before them.\n\n\"Very well, this is the first time I've seen her so happy and energetic. Normally she's afraid of her own shadow, but when it comes to her original species, she really comes out of her shell.\"\n\n\"How have the mice been acting?\"\n\n\"Very interestingly, they're showing much more uniform thoughts and behaviors, as if they've been dosed with Ritalin.\"",
        "\"Has she told you about their conversations?\"\n\n\"Yes, she says that they are all questioning how she became what she is. They are actually asking her what happened and want an explanation. They are currently trying to figure it out. This is incredible, it's like they actually become smarter when they are with her.\"\n\n\"Chloe, how are you doing?\"\n\nShe sat up and the mice moved onto her lap. \"I'm doing good. My new friends are really nice.\"\n\n\"It's nice to see you without your anxiety.\"\n\nChloe smiled and picked up one of the mice. \"I just finally understand how big I've become.\"\n\nOn the other side of the hall, he found Tobi sitting cross-legged on the floor, facing four foxes from the Maine Wildlife Preserve. Like Momo, he was having a complete conversation with them. He would talk, and they would reply with body language and small noises. In the next bedroom, he found Alex doing yoga with iguanas and other lizards climbing all over him. Since he was mute, he had converse entirely with body language, but it was hard to tell if a conversation was actually happening. \n\nIt was quite the opposite with Steve. Dr. Lawrence could hear what was going on from the other end of the hall. He checked in, finding Steve surrounded by cockatoos and other songbirds on stands and perches. He was chattering nonstop while the birds squawked, chirped, and cried. In the corner was Dr. Henderson, the look on his face perfectly describing his building headache.\n\n\"How are things going on in here?\" Lawrence hollered from the doorway. \n\nHenderson turned to him, a dead look in his eyes. \"Do you want to tag in?\"\n\nLawrence simply ducked out and moved on to the next room. Inside, he found Jenny and Peter romping around the bedroom with several rabbits, laughing and cheering as they played. Dr. Wortz was supervising, and he had a smile on his face as he watched them. Lawrence then arrived at the end of the hall in the room Elise was in. He found her curled up on the bed, covered in snakes of varying size, but none of them were venomous, of course. She had a smile on her face as she coddled a big boa constrictor.\n\n\"Didn't they feed you before you came here? I don't know if we have anything here. I could heat up some cold cuts if you want. What? No, you can't eat those mice. Because you'll make Chloe sad, that's why.\"\n\n\"So you really understand them?\" Dr. Lawrence asked.\n\n\"This is absolutely amazing. It's like every move they make says a thousand words. Just by the way they stick their tongue out, I can tell whether they are confused, hungry, happy, or tired, and they all just adore me.\"\n\n\"Do they follow your commands?\"\n\n\"I suppose. I get the sense they do because they don't really have any reason not to. I bet if I asked them to do something they didn't want to do, I'd have to really coax them. I can ask them to come closer or to stay off the floor, but that's about it.\"\n\n\"What do they say?\"\n\n\"Just that they are confused by what I am. One of them is complaining about not being warm enough, this big boa wants some mice or rats to eat. I suppose you were expecting something profound, like some serpent answer to the meaning of life.\"\n\n\"From what I've seen, all of the animals have the same reaction. They're all curious as to the hybrids' existence. The fact that you can all communicate with your animal counterparts in astonishing.\"\n\n\"So what now?\"\n\n\"I'm going to check on Sonja and Leah, then I'm going to gather everyone into the living room.\"\n\nDr. Lawrence left the house and went onto the back patio. There, Betty was throwing a frisbee for Sonja and the other dogs. While she couldn't keep up with them in her human form, that didn't stop her from chasing after the plastic disc with everything she had. A fellow golden doodle named Harpo caught the frisbee and brought it back to Betty. Before Betty could throw it, Sonja pounced on him with a big smile on her face. She and the dogs began rolling around on the grass in a big pile, nipping at each other's necks with laugh-like snarls. \n\n\"Sonja, how are you doing?\" Dr. Lawrence asked.\n\n\"This is the most fun I've ever had!\" she squealed with her blonde hair now filthy with grass and soil.\n\nDown the hill, Dr. Lawrence could see Leah splashing around in a small pond with several salamanders.\n\n----------------------------------------\n\nThe vans were still parked in front of the mansion when Lorraine and I pulled up the driveway, but I didn't care. The day was over and I wanted to get away from this lunatic. We went inside and followed the sounds of voices to the living room, where we found everyone gathered in a large circle with their animals gathered around them. Dr. Lawrence was joined in the circle, while the rest of the doctors and the people who had brought the animals watched from the sidelines. To see foxes, dogs, cats, and other animals so perfectly behaved and calm was a strange sight, to say the least.\n\nAll the hybrids cheered in happiness when they saw us.\n\n\"Ah, welcome back,\" said Dr. Lawrence.\n\n\"What's going on here?\" Lorraine asked.\n\n\"We're having a sort of group therapy session, in which all the animals and hybrids are conversing with each other. I was hoping to have this finished before you got back, but you're here now, so you might as well take part. Go on, take a seat.\"\n\nI sat on one couch between Momo and Jenny and Lorraine sat on another between Peter and Steve. In Momo's lap were the four cats, and in Jenny's were two rabbits.\n\n\"See, Zoe? This is Master. He's the one Momo told you about.\"\n\nA skinny brown cat crawled from Momo's lap and into mine, sniffing me all over with great interest.\n\n\"Ok,\" said Dr. Lawrence, \"next question. Jenny, could you please ask one of your friends if they dream when they sleep?\"\n\nJenny held up a furry bunny to her face. \"Do you have dreams?\" she asked. I didn't see any kind of obvious reply from the rabbit, at least anything more than a nose twitch, but that seemed to be more than enough of a response. \"He dreams about humping vegetables.\"\n\n\"Who doesn't?\" Lorraine shot off.\n\n\"Last question for the day. Could each of you ask your friends, if they had the opportunity, whether or not they would like to become like you.\"\n\nThe question was repeated over again with the answers varying between yes, no, and undecided.\n\n\"All right, I suggest we call it a day. Good work, everyone.\"\n\n----------------------------------------\n\nWeeks passed and we performed experiment after experiment. During our downtime, I'd take the girls out to public places, or we'd just stay home and relax. The doctors continued to monitor us, and every night, the girls and I would put on a show for whoever was watching. Then the big day came, the day when everyone else was due to arrive. It was July 1st, a beautiful sunny day, and we were all waiting in front of the mansion.\n\nSonja began jumping up and down and pointing into the distance at the end of the driveway. \"There they are! There they are!\"\n\nTwo coach buses had appeared with a full police escort. They pulled up to the front of the house and the doors opened. The men and women came out, all still dressed in their sterile white lab clothes. Their only possessions were the toys and games I had gotten them in the hospital. They were nervous and tired when they stepped off, but when they saw me and Lorraine, huge smiles crossed their faces and they rushed over.\n\n\"Master!\" x 49\n\nA tidal wave of animal-eared girls washed over me, knocking me to the ground with endless hands reaching for me. But the fiftieth girl remained by the bus, scowling. Neija, no matter how much I had tried to bridge the gap between us at the hospital, retained her grudge. Momo, Sonja, Chloe, Leah, Jenny, and Betty stared in shock, face to face with an army of their own kind. The same thing was happening with Lorraine, buried under a mountain of buff men. \n\nOne of them got me into a headlock. It was Gloria, a gorilla. Of all the girls, she was the most muscular, even stronger than Betty and just shy of her physique being a turnoff. She had thick black hair not just on her head, but around her neck like a scarf. Not only did she have the hands of a lumberjack, her toes, while no longer as dexterous as they were when she was a gorilla, were still long enough for her to grab things around her. Back in the hospital, her favorite hobby was wrestling, and I had never won against her. But despite that, the smile on her face was of joyful innocence.\n\n\"Master, you said you would bulk up so you could put up more of a fight!\"\n\n\"Gloria, no amount of exercise would ever put me at your level,\" I said.\n\n\"Gloria, ease up on him.\" \n\nThe words came from Linda, the baboon I had transformed. Due to their similar appearances, they had become good friends at the hospital. She had white hair and a tail, and while she didn't have the same muscular strength as Gloria, she made up for it by having the biggest ass of any of the hybrids. You could rest a breakfast tray on it.\n\n\"Master, this house is so beautiful!\" said Talia, a colorful parrot. Like Steve, she had feathers instead of hair, radiant with green, red, and yellow shades.\n\n\"And the sun feels so good,\" said Levi, the snake woman I had created.\n\nLola curled up against me, blinding me with her humungous ears. \"I missed you, Master.\"\n\n\"I missed all of you too, I've been looking forward to this day for so long.\" I looked back at Momo and the others. \"Girls, meet the rest of the family.\"\n\n\"Hmph!\" Neija scoffed and walked past us but Momo chased after her.\n\n\"You're a cat, right?\" Momo asked.\n\nNeija gave her only the smallest glance \"I'm a lion, what do you want?\" \n\n\"But you're a cat, aren't you? A cat like Momo?\"\n\n\"You and I are nothing alike.\"\n\n\"Then you're a big cat! Momo has wanted to meet a big cat since she saw them on Master's computer!\" Momo pounced on her, hugging her tightly. \"Hello, big cat!\"\n\nFunny, she was acting more like a dog than a cat.\n\n\"Get the hell off me!\" Neija pushed her off and then stormed inside.\n\n\"All right, everyone, let's move inside and I can give you all a tour and show you to your rooms.\"\n\nLorraine and I lead our flocks through the mansion, both the males and females looking around in wonder. The halls were packed with people, spilling into every room we arrived at. We made our way to the back of the mansion, where all of the refurbished and new bedrooms were.\n\n\"Everyone, these are your rooms,\" I said, standing in one of many corridors. \"Unfortunately, there aren't enough rooms for everyone, so a few of you will have to double up. You can all decide who gets what room. At the end of every hall is a bathroom, just make sure you all share.\"\n\n\"How long do we have to stay in our rooms?\" Tim, Lorraine's effeminate chinchilla boy, asked.\n\n\"You don't have to. You're free to roam the house and the outside as much as you want, whenever you want. It can be the middle of the night, you can run laps around the house if you want. The only rules are to stay on the property, don't make messes, and don't disturb others.\"\n\nThe new hybrids were all in a state of shock. They had all grown up in the zoo, spending their lives behind fences. The idea of freedom was completely foreign to them.\n\nI saw Chloe move into the crowd from the edge, something that she would normally be far too shy to do. She came face to face with Lola, the two of them staring at each other. Minus their animal traits, they looked and acted so much alike they could have been sisters.\n\n\"You're Lola, aren't you?\" Chloe asked, wringing her tail in her hands.\n\n\"Are you Chloe?\" Lola asked in turn, hiding her arms behind her back to she could grip her own tail for comfort.\n\n\"Master told me a lot about you. He said he couldn't wait for us to meet.\"\n\n\"Yeah, he said the same thing to me.\"\n\nNo more words were spoken, both girls blushing in embarrassment, but they were also smiling.\n\n----------------------------------------\n\nThe tour ended with us all outside behind the house. All the hybrids, even my girls and Lorraine's boys, were running around the fields, in and out of the woods, jumping and playing in the sun. Lorraine, Elise, and I were sitting on the patio, watching them having the time of their life.\n\n\"It's like the liberation of France,\" said Elise.\n\n\"When I first started turning them at the zoo, and when I first saw them in that hospital, I felt so guilty for what I had done, for the life I had forced on them, but maybe with this, I can finally start to do right by them,\" I said.\n\n\"Has anyone ever told you that you're kind of a drama queen?\" asked Lorraine. \"Seriously, listen to yourself. 'I felt so guilty for what I had done, for the life I had forced on them, but maybe with this, I can finally start to do right by them.' That's the kind of thing you'd hear from the overacted character in every AMC show.\"\n\n\"Says the girl whose entire existence is alcoholism, sex jokes, and anime references. You're like the poster girl for every Spencer's and Hot Topic in America.\"\n\nElise ended up laughing so hard that she gave herself hiccups.\n\n\"I'm not taking shit from a vanilla fucker who couldn't even handle my pinky. You dish it out, but you can't take it.\"\n\n\"In the last week, how many Facebook posts have you shared of a picture of the Joker or some other bad guy with some edgy wannabe-individualist quote they never said?\" Lorraine wanted to respond but couldn't. \"Let me guess, at least one of them said something like 'throw me to the wolves, or I'll return leading the pack'. How many of them talked about not giving a fuck? I bet at least half of them were about people being fake or how many times you've been \"betrayed\" in the past.\"\n\nLorraine wordlessly got up and went back into the house and Elise gave me a high-five with her tail.\n\n----------------------------------------\n\nThe rest of the day was spent helping everyone get familiar with the house and with each other. I spoke with every girl, touching base with them to make sure they were happy. I had long since memorized all their names, getting to know each and every one of them during those weekends in the hospital. They picked out their rooms and played for hours in the sun. When it was time for the evening news, we had to bring in furniture from other rooms so that everyone would have a place to sit. My couch was pushed to the back of the room and as many girls as possible piled on, all of them wanting to snuggle up with me.\n\nI doubt many of them were really paying attention, and if they were, whether or not they actually understood. The only stories that caught their attention were the appearances of more hybrids. The rate of their appearances was increasing. Just a little while ago, there would be one report every few days, but now, there could be five or even more every night. Countless glances were directed back at me and Lorraine.\n\n\"Master, are you doing this?\" Talia asked. Jenny had asked the same thing when she first watched the news.\n\n\"No, I'm not, at least I don't think I am. The doctors and I think that these cases are happening naturally, unlike all of you who Lorraine and I created.\"\n\n\"What's going to happen to them?\" Saul, Lorraine's peacock man asked. He was sitting in back with us since his massive tail feathers would otherwise block everyone's view.\n\n\"They're going to homes like this one so they can be studied and kept safe. Dr. Lawrence told me that an adoption program is being developed so that they can be looked after in more relaxed environments.\"\n\nDinner came, and the sound in the dining room was absolutely thunderous, more than a hundred people all gathered around one long table. Actually, the table had to be extended for everyone to take a seat. No longer were Elise and I doing the cooking. The CDC had hired chefs to prepare huge bulk meals, setting out tables covered in food in the kitchen, buffet style, and everyone would fill up a plate and sit in the dining room. Normally Momo and others would eat from their bowls on the floor, but with so many new additions, they didn't want to be pushed out so they flanked me on either side.\n\n\"Mistress, what are we going to do tomorrow?\" Brock, Lorraine's rhino, asked.\n\n\"Well the doctors might want to perform some tests, but we can pretty much do whatever we want. I was thinking I might show you guys how to play on my Xbox tomorrow,\" she said.\n\n\"Master, what about us?\" Amanda, a grizzly bear asked. She had the same kind of hairstyle as Gloria and Linda, but with soft fur also growing from her hands. Her fingers were tipped with sharp claws and she had a poof ball tail like Jenny's, though smaller.\n\n\"I'm not sure. I guess we'll just figure it out in the morning.\"\n\nAfter dinner, there was plenty of time before bed, so the hybrids continued exploring the property and everything it had to offer. I had convinced the CDC to give them means of entertainment at the hospital, such as foosball tables, ping pong, and some video games, so they already knew how to enjoy many of the activities available at the mansion.\n\n----------------------------------------\n\nNeija stood in an empty hallway, staring out the window at the moon. \"What do you want?\" she demanded.\n\nFrom around the corner, Momo appeared. \"Momo wanted to see you.\"\n\n\"Well go away, I don't want to see you.\"\n\nRegardless, Momo walked over. \"What was it like being a big cat?\"\n\nNeija, who only knew of her original lion race, looked at her in confusion. \"Weren't you one as well?\"\n\n\"No, Momo was a small cat. That was back when it was just Momo and Master together. Momo was small enough to sit in his lap. Momo still does, but it's not quite the same.\"\n\nNeija looked back at the moon. \"I don't care, just leave me alone.\"\n\n\"Are you mad at Momo? Did Momo do something wrong?\"\n\n\"You really don't get it, do you? Your Master made me what I am simply to help keep you safe and then he left me behind. I'm just a tool for your benefit.\"\n\n\"Master didn't leave you behind. Master was worried about you every day, he told Momo, and Momo was worried too. He was counting down the days until he could see you again.\"\n\n\"He cares more about you than he does any of us. So why should I care about him?\"\n\n\"Because Master loves you.\"\n\nNeija scoffed and walked away. \"That's the same stupid answer he gave me the first time.\"\n\n----------------------------------------\n\nI continued wandering in an endless loop, checking in on everyone. The mansion was filled with happiness and life, all the hybrids playing games and running around like children. I made sure they had each picked their bedroom, taking a mental note of where everyone was sleeping. Almost half of the animals Lorraine and I turned came in pairs from the same exhibits, many of those pairs consisting of a brother or sister. Those siblings had chosen to bunk together in the double rooms.\n\nIt was getting late in the evening so I decided to bid everyone goodnight, though that alone took almost half an hour. Momo and the others were so busy playing with their new friends that I didn't want to disturb them and told them they could come to bed whenever they wanted. I, at last, arrived at the living room, where Chloe and Lola were lying on their stomachs on a long couch and playing checkers. It was so funny, how similar they looked.\n\n\"Goodnight, girls,\" I said.\n\nHearing me, Chloe popped off the couch and ran over.\n\n\"Oh, I'm coming too!\"\n\n\"No, that's ok, stay up as late as you want and have fun, keep playing with Lola.\" \n\n\"Ok,\" she replied as I rubbed the top of her head. I made my way upstairs and Chloe returned to her game.\n\n\"Why were you going to follow Master to his room?\" Lola asked.\n\n\"Because Master and I sleep in the same bed.\"\n\nLola perked up, her ears standing erect. \"You do? You share a room?\"\n\n\"We share the big bedroom with Momo, Sonja, Leah, Jenny, and sometimes Betty. We all sleep together.\"",
        "\"Do you... also play together?\"\n\n\"You know about playing?\"\n\nLola nodded. \"I don't know what it is exactly, but I do know that it's something special that I want to do with Master. Can you tell me what it is?\"\n\nChloe leaned over and whispered into Lola's ear, causing her face to turn red. \n\n----------------------------------------\n\nThis was the first time in almost a year that I had gone to bed alone. The closest I came was during those trips to New York when Lorraine and I shared a room, but I'd boot her out of my bed after sex. Now the bedroom was completely empty. I felt lonely when I got under the covers, then I stretched out all my limbs as far as I could and I suddenly didn't miss the girls. Sweet, blissful space.\n\nAbout ten minutes later, Chloe came into the room. I heard her soft footfalls on the floor, followed by the sounds of her clothes being discarded, then I looked up as she crawled onto the bed. \"Hey, Chloe.\"\n\n\"Sorry, Master, did I wake you up?\"\n\nI rubbed her head and gave her a kiss on the cheek. \"No, I was awake. How are you and Lola getting along?\"\n\n\"Really well,\" she said as she got under the covers. \"She's really friendly and likes the same things I do.\"\n\n\"I'm glad. You two are probably going to be closer than sisters.\"\n\nThe door opened again. \"Hello, Jenny,\" I said.\n\nShe stripped off her clothes and bounced over, leaping into the bed and snuggling up against me. I got the sense that she was happy because she was with me, rather than because of all the new additions to the house.\n\n\"Are you feeling ok?\" I asked as I stroked her hair.\n\n\"I'm just glad to have some quiet,\" she said.\n\nI began playing with her ears, helping her settle. Normally, Jenny would be upbeat and happy, much like Sonja but without the hyperactivity. However, like Chloe, she was used to being on the bottom tier of the food chain, so she was nervous when meeting new people. Considering how many of our new housemates were originally carnivores, her anxiety was understood.\n\n\"But you still had fun, didn't you?\"\n\n\"Yeah, I did.\"\n\n\"I think that once you get to know them and become friends, the noise won't bother you as much.\" The door opened a third time with Momo, Sonja, and Leah coming in. \"Good, everyone's here.\"\n\n\"It's so much fun having everyone here! There are so many people to run around and play with!\" Sonja hollered.\n\n\"What about you, Momo, what do you think?\"\n\n\"Momo is happy, but it's kinda noisy.\"\n\n\"Jenny said the same thing. Leah?\" She smiled and wagged her tail. \"Good. So, girls, what do you all think? Do you like having everyone here?\" They all nodded. \"I'm glad, I've been worried about having everyone under one roof. I hope you don't all mind sharing me.\"\n\n\"Master won't be too busy for us, will he?\" Momo asked. \n\nI had been expecting one of them to ask that, and it was no surprise that it was Momo who did. She was the first hybrid, and the only one to know what it felt like to have me all to herself. She had gotten jealous when Sonja joined us, but after convincing her that I loved her no less than before, she learned to welcome more members in our family. But this was a whole new ballgame, and I knew that deep down, she and every one of them had a fantasy of it just being the two of us. I did make me feel guilty to force that jealousy on them.\n\n\"Well I can't promise that I'll be able to do all the things I did before. Every girl deserves equal time and attention, they are my responsibility, just like you are. But think of it this way: while you won't get quite as much time with me as before, you now have a whole house full of friends and family. There will always be people to talk to, the play games with, to get to know. This is your chance to venture out a little bit. Besides, it will just be for a month.\n\nJust... promise me that the special playtime we do... you don't do it with any of the guys. That's just for us.\"\n\nThey all looked shocked at the last part. \"We only want to play with Master!\" they exclaimed. Even Leah gave a dolphin-like squeal.\n\nA tear almost came to my eye. Goddamn ninjas, hiding in my room and chopping onions.\n\n\"Master is going to play with all of them, right?\" Jenny asked.\n\nA nervous lap slipped out. \"Well Dr. Lawrence asked me not to play with any of them for at least a week. At which point, I would have about three weeks to play with fifty girls, which would mean deflowering two girls a day and a little extra, not to mention my manly obligations to all of you as your Master. You girls have definitely gotten me into good shape, but I'm not sure even I can go at a pace like that. I suppose it's up to whoever wants it.\"\n\nSonja's ears perked up. \"We should have a sleepover!\"\n\n\"What do you mean?\"\n\n\"Like you had with your friend when you were a kid! Let's have all the girls come sleep in our room and you can play with all of us at once!\"\n\n\"Sonja, honey, that doesn't exactly make it easier for\u2014\"\n\n\"Yeah, let's do that!\"\n\nThe voice came from behind the closed door. Momo went over to answer it and Lola with several other hybrids poured in like and undammed river, tripping and falling all over each other. I could see plenty others standing in the hall.\n\n\"Were you listening the whole time?\" I asked.\n\nOne of the girls got up, Liz, a tortoise. She had a bald head and a short, scaly tail. Rather than a solid shell, she had thick bone plates growing out of the skin on her back, almost like armor. \"We want to have that sleepover thing!\" she said.\n\nPoor Lola managed to squeeze out from under the pile. \"Yeah, can we? We all want to play with Master!\" she asked.\n\n\"Do any of you even know what playing means in this family?\"\n\nThey all flashed me guilty smiles. Crap, they knew.\n\n\"Are you sure you want this?\"\n\n\"Yeah!\" they cheered.\n\n\"Ok, then one week from tonight, bring all your mattresses into this room and I'll play with each and every one of you.\"\n\nAs all the girls celebrated, I couldn't help but wonder what kind of mess I had just gotten myself stuck in.\n\n----------------------------------------\n\nThe hybrids moved through the kitchen in a line with their trays, picking food put out on tables by the cooks. They then went to the dining room and took their seats along the table. I was a bit disappointed by this, part of me looking forward to seeing all the girls eating out of food bowls the way Momo, Sonja, and Chloe used to. Like during dinner the night before, the sound of forks and knives on plates was surpassed only by the noise of dozens of different conversations, but there was one topic that was circling around.\n\n\"What are you all so excited about?\" Neija asked as she pulled up a chair. \n\nNext to her was a Komodo dragon, Tammy, who had a slightly dark complexion and a long scaly tail. Those scales continued up her back and covered her scalp in place of hair. She also had a long, forked tongue that she extended almost every time she opened her mouth.\n\n\"Master said that in a week, we can have a sleepover in his room and he'll play with all of us,\" she said.\n\n\"Ugh, I can't believe you'd all just bend over and let him have his way with you,\" she spat.\n\n\"I think it sounds like fun. I want to see how people mate, and I certainly wouldn't mind breeding with Master. I wonder if I'll lay eggs like before...\"\n\n\"The doctors said we can't, remember?\"\n\n\"That doesn't mean I can't enjoy trying.\"\n\n\"You should give your Master more of a chance.\" The words came from across the table, spoken by Lorraine's chinchilla, Tim. \"He seems nice.\"\n\n\"He is NOT my Master.\"\n\n\"We're not in the hospital anymore. It's ok to relax.\"\n\n\"We're just back in another zoo.\"\n\nDown at the middle of the table, the conversation had reached me, Lorraine, and Elise.\n\n\"Am I hearing this right? You're going to have sex with every single one of them in one night?\" Elise gaped.\n\n\"They were flashing me puppy eyes, I couldn't exactly say no.\"\n\n\"You realize that this will probably kill you, right? Your dick is just going to disintegrate and then you'll die from exhaustion.\"\n\n\"Yeah, I know that's a risk.\"\n\n\"I can't believe it took you this long to come up with this,\" said Lorraine, \"I had this planned from the very beginning. Next week, I'm going to let all my boys run a train on me.\"\n\n\"You'll probably die as well,\" said Elise. \"Do you ever think about what our parents would say if they knew about the stuff you do?\"\n\n\"I'd like to think they'd be cheering me on as a set a world record. I'll become a legend! Can you imagine how much money I'd make if I sold the video recording?\"\n\n\"As much as I hate to ask this, I need some advice. I'm not sure if am up to the task.\"\n\n\"Of course you aren't, no man is! I'll say it again, this will kill you!\" Elise shrieked.\n\n\"Lorraine, do you know of any tricks I can use? I mean, it'll be a lot easier for you. You just have to lie there, probably tied to a table, knowing you. I'll need to be moving nonstop.\"\n\n\"I don't know, maybe some crystal meth mixed with crushed-up Viagra? Luckily there are plenty of doctors here to talk to.\"\n\n----------------------------------------\n\n\"Oh good God,\" Dr. Lawrence groaned with his face in his hands. I was speaking to him in the mansion's clinic.\n\n\"So that's what I'm up against. Is there some kind of pharmaceutical cocaine you can prescribe me?\"\n\n\"I'm not even going to bother reprimanding you. I'm just going to let this blow up in your face. Now get out, I have work to do.\"\n\n----------------------------------------\n\nWith the house now full, I found myself busier than I thought possible. Elise, Lorraine, and I had become camp counselors to over a hundred rowdy animals. I was making laps around the mansion, continuously checking in on everyone, making sure they were all accounted for. All the girls wanted a piece of me.\n\n\"Master, do you wanna play checkers?\"\n\n\"Master, let's wrestle!\"\n\n\"Master, will you throw a frisbee for us?\"\n\n\"Master, can I have a hug?\"\n\n\"Master, I think the Xbox is broken.\"\n\nI gave them all as much time and attention as I could spare, taking part in whatever activity they were up to, from playing tag in the backyard to drawing in the dining room. It was the middle of the afternoon when I finally collapsed on a couch in the living room, only to be set upon by a red panda girl, Kerrie, snuggling up against me. As per her name, she had bright red hair and red fluffy tail, but with furry white triangular ears. \n\n\"Yes, I love you too,\" I said as I kissed her on the forehead.\n\n\"I want to take a nap with Master,\" she said as she laid her head down on my lap.\n\n\"A nap sounds really inviting right now.\"\n\nI was about to close my eyes when I nearly jumped from my seat from a cold sensation around my neck. I looked over my shoulder at Leah, who had just tried to hug me from behind. \n\n\"Hey, Leah, what are you up to?\"\n\nShe circled around and got on a couch with a big smile. She clutched my arm like Kerrie had done and rubbed against me, but again I jerked, this time in pain. Leah moved back, afraid she had injured me. \n\nKerrie perked up. \"Master, are you ok?\"\n\n\"Don't worry about it, you two.\" I rolled up my sleeve to show her a large scrape on my arm like I had just skidded across pavement. \"I was wrestling with Gloria and she kinda forgot her own strength. With just one hand, she gave me the worst Indian Burn of my life.\" Leah automatically bent her head and began licking my arm like a cat cleaning itself. \"Oh, thanks, Leah, that feels pretty... whoa.\"\n\nMy arm, which had been red and stretched just moments ago, was now whitening with every lap of her tongue. The marks on my skin were disappearing by the second. After only a minute, I felt good as new.\n\n\"Holy shit! Leah, how long have you been able to do that?\"\n\nShe simply shrugged.\n\nI had read that salamanders could regrow lost limbs, but that was due to their immune system and macrophage cells. There was nothing about their saliva having anything to do with it. It must have something to do with the transformation. Now that I thought about it, the sweat on her skin, as delicious as it was, still paled to the taste of her mouth. Every time we kissed, it was like she'd just swallowed a spoonful of cake. Maybe it wasn't simply due to flavor, but a physical effect it had on me, like morphine. It would explain why even without needing to do anything, her blowjobs always felt the best.\n\n\"This could come in handy.\"\n\n----------------------------------------\n\nThe rest of the day was spent like the one before it, giving all the hybrids plenty of time to get used to the house, find everything it had to offer. After dinner, I had everyone gather back in the living room.\n\n\"Master, are we watching more news?\" Lola asked.\n\n\"No, something better. I'm going to show you all some documentaries. You've spent your lives living in that zoo, well I want to show you the outside world.\"\n\nI hooked up my computer to the TV and started the first episode of 'planet earth'. Considering how Momo, Sonja, and Chloe had reacted, this was going to be a fun night. Just the intro left all the hybrids without breath, the sight of the curvature of the planet. It started out with the Emperor Penguins in Antarctica, huddling over their eggs in a dark winter. Melissa, a Little Penguin, stared at her giant cousins. Like all bird hybrids, she had feathers instead of hair, covering both her head and tail. She was only twelves inches tall back when she transformed, so the Emperor Penguins looked like titans to her.\n\nIt then moved on to the familiar female polar bear breaking out of her den and crawling out into the snow, followed by her two cubs. Amanda, the grizzly bear, looked like she wanted to jump out of her seat at the sight of her relative. Sonja shared that reaction. The show continued, and having spent their lives in a zoo, the new hybrids gazed in wonder at the sight of open skies and fields, of wild landscapes without fences or barriers. Even Neija, who seemed perpetually unimpressed by everything the mansion had to offer, was left with her mouth hanging open. Endless animals were shown, some of them already in the room with us.\n\nTo the sight of a bird of paradise dancing to impress a mate, Saul, the peacock, scoffed at the male's failed attempts, muttering that he could dance circles around the bird.\n\n----------------------------------------\n\nI was lying on my back, groaning in bliss. Leah was drowning my cock with her saliva, painting every single spot with her tongue. I had just finished pleasuring the girls, leaving them all comatose and my member sore. I could have called it a night then and there, but I decided to further investigate Leah's ability. Every moment my cock stirred around her mouth, more and more of the soreness vanished, replaced with a feeling of blissful rejuvenation. It sank deep into my skin, my blood vessels and muscles feeling like they could remain firm for hours. She then moved lower, using her tongue to play with my balls and making them feel good as new. \n\n\"Good girl,\" I said as I rubbed her scalp. She smiled at me, and quick as a flash, I pushed her onto her back and entered her. She sucked on my tongue like a vacuum as I rammed my fully-restored erection deep into her womanhood. \n\nWith Leah helping me, this sleepover might just be possible.\n\nPlease comment!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "bunny girl",
        "salamander girl",
        "anal",
        "threesome",
        "comedy",
        "cute"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-14"
}