{
    "title": "Angel, Devil, Phantom, Fool.",
    "pages": [
        "This is my entry to the April Fools' 2018 contest. Thank you for reading and voting, and special thanks to SecondSamuel and SexyGeek for editing, encouragement and reading my smut.\n\n*All characters are 18 or older.\n\n***\n\nWhen I first met Whitney Everett, I was smitten with her effortless, winsome ways. It was as if her loveliness and grace wove a glamor around her, like the right perfume on the right woman. But over time, I learned that this Whitney was a mirage, shimmering on the edge of the horizon in paradisiacal perfection. Or a Seurat painting: From far away, her flaws smoothed out and coalesced into a pretty picture; get close enough, and you feel like you've been fooled.\n\nWe were both Theatre Majors, but Whitney's concentration was Acting and mine was Costume Design. While she went on stage, I stayed behind the curtain. And that's where I preferred to stay, really. Whenever I found myself in the spotlight, all I could think about was getting out of it as quickly as possible.\n\nOur personalities weren't the end of our differences either. I'd grown up in a family that struggled to stay in the middle class while there still was one and had acquired many of my sewing skills so I could alter hand-me-downs; Whitney had come from old money, and grew up going to cotillion clubs and debutante balls. I was on the petite side with an hourglass shape that was curvier on the bottom than the top; Whitney was willowy with an ass to die for and tits that I suspected had been enhanced. \n\nI couldn't really fault Whitney for her beauty and breeding, or what she wanted to do to her own body, as long as she was healthy and happy. But I was lacking in all the areas she wasn't, and for some reason, she took pleasure in exploiting my weak points whenever she could. The only reason she knew so many of them was because at the beginning of our relationship, when I was still viewing Whitney from the other side of a velvet rope, I told her things about myself that I would later regret- financial struggles, insecurities, shameful secrets and embarrassing sexual experiences.\n\nAfter my disillusionment, I tried avoiding Whitney as much as possible, but being in the same department made that difficult. In addition to taking several classes together, we frequently worked together on theater productions. All I could do was try not to make waves with one of the most popular and influential girls in the department, if not the entire college.\n\nThat past couple of weeks had been particularly touchy because Whitney and I had been paired up to make a promptbook for Into The Woods in our Concepts of Stage Production course. We'd divvied up who'd be in charge of what, and I'd taken on doing the illustrations for the costumes, set pieces, props management and production notes. It was due in the first week of April and being near the end of March, I was practically through with my portion of the project. Whitney, however, had barely started- which worried me because it was a huge grade. \n\nWhen I saw her waiting in front of the Albert Simons Center that Thursday afternoon, I had the faint hope that she'd been hard at work.\n\n\"Hi, Nina! Come sit with us,\" Whitney called out cheerfully, her matte scarlet lips curling into a catty grin. She was wearing a short floral dress belted around her minuscule waist, dirty blonde hair falling over her shoulders with a sort of cultivated carelessness. Perched on the edge of a low wall with her long tan legs crossed just so, Whitney looked like she was ready for a photo shoot.\n\n\"Hey, Whitney,\" I replied, situating myself on an adjacent wall. I said hello to Vanessa, Chelsea and Maddox, three of her besties, but none of them looked up from their phones. \n\n\"So I was just asking the girls what to do with my extra invitation.\"\n\nI looked at her dumbly, wondering what she could be talking about. \"Extra invitation to what?\"\n\n\"To the Swamp Fox Society's Fools' Masquerade,\" she answered with a mischievous gleam in her bright green eyes. \n\nCharleston was full of elite social clubs and they all had their own sets of customs and etiquette, a separate culture almost. Apparently, her inclusion should have been an honor, but a society name after Colonel Francis Marion's moniker sounded like a Peter Pan Syndrome support group. I couldn't imagine anything duller than one of their parties.\n\n\"I still have no idea what you're talking about.\"\n\n\"Are you kidding? It's only one of the most exclusive masked balls held in all of Charleston. My Daddy's on the board and I was able to snag an extra invitation for one of my friends. I'm just trying to figure out who'd have the most fun because Maddox can't come and neither can Chelsea,\" she pouted.\n\n\"What about Vanessa?\" \n\nVanessa started to say something, but Whitney interrupted like the answer had just dawned on her.\n\n\"What about you, Nina? Everyone will be wearing Venetian masks and Carnival costumes- you'll love it!\" Her enthusiasm alone was enough to make me suspicious.\n\n\"Come on, Whitney- is this just some elaborate way to get me to dress up and literally make a fool of myself in front of a whole bunch of people?\"\n\n\"Here- read it for yourself.\" And she reached into her Gucci bag and produced what looked like an oversized playing card featuring a commedia dell'arte Fool complete with belled-cap. \n\nTurning it over in my hands, I read the invitation. You are cordially invited to attend the Swamp Fox Society's APRIL FOOLS' MASQUERADE. Please wear a masque and your finest motley. The address given was for an estate on the Isle of Palms, so I assumed it would be very posh indeed. But her unexpected charity didn't leave me with a pleasant feeling.\n\nI passed the card back to her and said, \"I don't know, Whit, fancy parties aren't my thing...\" Parties, in general, weren't really my thing, but I probably didn't have to tell her that.\n\n\"Listen, Nina, I know I can be a real bitch sometimes so let me make it up to you. I really do think you'd have a blast. And it's not all dancing- there are games with prizes, entertainers, a ton of booze. I'll even pay for your mask if you're worried about how much they cost.\"\n\nWhether it was intended to or not, I felt the blow to my pride. \"But I won't know anyone there,\" I faltered, running out of excuses.\n\n\"Isn't that the point of a masquerade? Come on, I'll even give you a ride.\"\n\nI was about to make up some prior obligation but then I decided, what the hell. It did sound intriguing, and I doubted I'd ever have the opportunity to go to such a prestigious event again.\n\n\"Okay, why not. Thanks, Whitney,\" I said, taking the invitation from her taloned hands.\n\n***\n\nWhitney directed me to a costume boutique in the French Quarter downtown and said that 'Madame Felicienne' would be expecting me. Closer to Halloween, the shop catered to more macabre tastes, but throughout the year, they carried finely-made garments from various historical periods- the Medieval Age, the Renaissance, the Victorian Era, the Roaring Twenties. The boutique owner- pale with dark brown hair and eyes, graceful as a ballerina, slender as a willow tree- greeted me in a French accent embroidered with a Lowcountry twang. \n\nAfter making our introductions, I explained that I'd be attending an April Fools' Masquerade and needed a Venetian-style mask. I followed Mme. Felicienne's brisk stride to a room dedicated solely to Carnival costumes. There were pairs of mannequins, impeccably styled in matching male and female costumes; racks of gowns, bodysuits and capes in every color and material imaginable; and masks staring at me with their blank eyes everywhere I looked. \n\n\"You will want one in the Columbina style, yes? The Volto is too much for one as petite as you,\" she said, leading me from the masks that cover the entire face to ones that only covered half of it.\n\nThey were each as ornate as a Faberg\u00e9 egg and looked so delicate that each time I reached to touch them, I'd quickly withdraw my hand.\n\nMme. Felicienne laughed at my timidity. \"Do not be afraid to try them on, Mademoiselle Nina. Like many beautiful things, they are rather stronger than they appear.\"\n\nPicking up a black filigree style mask that mimicked the shape and markings of butterfly wings, the woman insisted I try it on. As I went to tie the ribbon underneath my long black ponytail, the Madame did it for me. This simple yet intimate act- the binding of a mask on my face, her fingers tickling my scalp, her body right behind mine- made me tingle all over.\n\nWe both examined my appearance in the mirror critically. I felt like I was looking through a cage.\n\n\"Non, non. Not quite right for your skin-tone,\" she declared. \"It's too harsh a contrast.\"\n\nI nodded and allowed her to undo the bow in the back, my eyes fluttering closed at the sensation of silk slipping over the base of my neck.\n\nNext, I tried on an asymmetrical one meant to mimic the shape of a swan, with an upsweep of white feathers tipped with gold. It was pretty, but the shape and style were not for me and the Madame agreed. I tried on several in different bright hues- emerald green, plum purple, royal blue- I decided I'd rather have something less garish. A deep burgundy mask with a corona of dark feathers drew my eye, but when I tried it on, it blended in too much with my raven-colored hair. \n\nI mused aloud that I wanted something elegant, ethereal, and as soon as I said those words Mme. Felicienne raised a finger and went to a back room. A minute later she returned with a white box.\n\n\"I bought several masks on my last trip to Venice that I haven't put on display yet. And I think this one might be parfait,\" she declared.\n\nThe mask was cream with a crackled finish, adorned with gold lace and wispy ostrich feathers. From the inset pearls to the hand-painted musical notes, every detail had been meticulously crafted like a piece of jewelry. When I tried it on, Mme. Felicienne clapped her hands together in approval. It was flattering for my face-shape, perfectly framing my large blue eyes and accentuating the contours of my full pink lips. \n\n\"I love it,\" I murmured. But after I took it off and discreetly checked the tag, my jaw dropped.\n\nSeeing my expression, Mme. Felicienne actually laughed. \"Oh, forget about the price- it's going on Mademoiselle Whitney's account. You must have it, my dear, it was made for you.\"\n\nI smiled despite myself and then nodded. \"Then I'll take it, si vous plait.\"\n\nWhen she asked if I'd care to try on any dresses, I told her that I planned on making my own. The woman looked at me skeptically, as if I'd said I was building my own car to get there too. \n\n\"Well, I've made dresses before, and I'm a costume-design student so I have access to plenty of machines and materials at school. I can make it work,\" I Tim-Gunned more confidently than I felt.\n\n\"Ah, I see- another couturi\u00e9re. Then may I recommend that you allow the mask to inspire the costume. Many people even chose to think of it as adopting another persona- a character if you will.\"\n\n\"Hmm, then I may have a character in mind.\"\n\n\"Oh?\" she inquired as she wrapped my purchase in parcel paper.\n\n\"Yes. An angel.\"\n\n***\n\nOver the next few weeks, I 'reappropriated' a variety of materials from the fashion design and costume departments to make my dress. I used an ivory bustier as the foundation for the garment and constructed the skirts from layers of floaty, translucent fabrics in shades of cream, gold and the palest pinks. It was long in the back but short and flirty in the front. The trims and accents took it from homemade dress to fashionable gown, and accessories like a capelet of feathers that resembled folded angel wings made it an ensemble.\n\nI was actually quite proud of it, and of how I looked in it, but I was still petrified when Whitney picked me up the night of the party. Since I knew I'd be sitting down, I wasn't wearing the capelet yet or the long bustled portion, which I'd made to detach from the shorter skirts to make things easier in the restroom. \n\nWhen I looked at myself in the mirror on the way out the door, I barely recognized the girl looking back- even without the full costume on. My dark curls were glossier and smoother than usual, thanks to some hair products, and I was actually wearing makeup, not to mention heels and silk stockings. I'd even gone so far as to put on false eyelashes and paint my nails.\n\nAs fate would have it, Whitney was dressed as a sexy Devil- complete with a filigree mask and a set of horns encrusted in Swarovski crystals. Her backless red column-dress skimmed over her curves, had a plunging neckline that showed off her 32 DD tits (having costumed her, I'd been up close and personal with them), and a slit that went all the way up the top of her thigh. \n\nThough her gown was skimpy, I could tell that it had cost a fortune nonetheless, and I began to worry that no matter how many pearl beads or sequins I embellished my dress with, it would never compare to the other girls'. But then, to my pleasant surprise, Whitney complimented my handiwork as best she could.\n\n\"Nina- you've really outdone yourself! You look beautiful and your dress...\" She trailed off when she noticed her date in a Guy Fawkes mask looking me up and down, then hastily added, \"I'm so glad you could find something that fit on such short notice.\"\n\nBeing a size zero, Whitney always seemed to regard my size six as ridiculously huge. But I figured she just didn't like her plus-one checking me out and gave her a simpering smile. \n\n\"Thank you, Whitney. The mask is really what made it all come together. If you need me to pay you back or anything...\"\n\n\"Oh no, Nina, I wouldn't dream of taking your money. Although, there is something you could do to make us even.\"\n\n\"Oh? What?\" I asked uneasily.\n\n\"It's just that I'm just so swamped with rehearsals and exams- if you could finish my half of the promptbook project, it would take a load off my mind.\"\n\n\"Oh, well um, I- I mean, I suppose,\" I stammered, feeling put on the spot to agree. Having never been a confrontational person, it was hard to know what else to say under the circumstances.\n\n\"Thanks, Nina- you're a lifesaver!\"\n\nThe awkward car ride ended at such a charming destination that it was almost worth it. Atop the wrought-iron gate outside were the words Guillard Estates, and I recognized the name as a well-established family in Charleston. I started to get butterflies in my tummy on the way to the door, noticing the many other fashionable guests in haute couture, their gaze falling on the lucky man with an Angel on one side and a Devil on the other.\n\nBefore we were allowed admittance, we had to show our invitations. When they looked at mine, I saw that its gold edging was unique. This must have indicated something because when we entered the anteroom, I was ushered to one side by a man in a gilded sun mask. \n\n\"Welcome to the masquerade, Miss. Please accept this fool's favor.\" He was holding out a small jester's mask brooch, which I supposed I was expected to wear. After pinning it onto my bodice, he bowed and wished me a pleasant evening. \n\nWhen I turned back to Whitney and her date, I nearly panicked to find that they were no longer by my side. Entering the reception hall, I could see that she wasn't there either. There were several doorways and parlors off the hall, as well as a grand staircase, so she could have gone anywhere. I thought to ask one of the servers carrying trays of champagne and hor d'oeuvres, or one of the guests milling about, but I felt too embarrassed to admit I'd been ditched at the door. \n\nI texted Whitney to find out where she was but didn't get a response. Tears began to sting my eyes, and I wondered if I should just call a cab home. Standing there, I noticed a man across the room was watching me. He was wearing a tuxedo and a black velvet cape with cowl and a Phantom of the Opera style mask that revealed enough of his face to show he had a strong, clean-shaven jawline and high cheekbones. The Phantom saluted me with his champagne flute, a smile curving the corners of his mouth, and I hastily looked away.\n\nNot wanting to just stand around waiting for Whitney to text me, I decided to venture into the ballroom, which had a sign hanging above it reading 'Square Dance Hoedown'. For a moment I watched the blurs of brightly colored dancers weaving intricate patterns on the checkered floor. Most of the tiles were black and white, but there were squares of Mardi Gras colors as well. A chamber orchestra-cum-zydeco band playing the music. The combination of the accordion and the harpsichord was jarring- as was the sea of masked visages.\n\nMany of the men's faces and heads were completely obscured by Volto masks and the cowls of their capes, which flared out behind them as they twirled around with their colorful partners. Often they would switch according to some complex dancing rule that I wasn't familiar with, or form synchronized formations of multiple dancers.\n\nAs I analyzed the crowd, I noticed that some of the women were curvier and others were thinner, but they were all very attractive. It also appeared that they fell into a narrow age range- from around twenty-one, like myself, to no older than thirty, if I had to hazard a guess. There was not one drooping jawline or crepey neck, no sagging tits or wrinkles, just smooth skin, slender limbs and taut curves. The only reason I was aware so keenly aware of this was because most of their dresses left little to the imagination.\n\nIt was harder to determine the men's ages since many of their ensembles left little-to-no skin exposed, but there was a certain definition to their bearing- a combination of practiced grace and controlled strength- that made me think they were more mature. That and the glint of grey or silver I saw on most any man's jaw that had been left uncovered.\n\nI was contemplating this disparity when a pair of glittering red horns growing out of dirty blonde hair caught my eye. I sighed with relief to see Whitney and her date gliding effortlessly with the other couples. \n\nWhen I felt a tap on the shoulder, I startled and turned around. It was the man in the Phantom mask. Now that he was next to me, I could see that he was even more handsome than I'd suspected. Older than me, but no silver stubble yet. His heavenly masculine scent was enough to make my heart race.\n\n\"Would you care to dance?\" he asked, extending his gloved hand. His deep, raspy voice was undeniably sexy.\n\n\"I would, but I'm not really that good.\" \n\nHe leaned in and confided, \"Neither am I.\"\n\n\"It looks pretty complicated, though. What if we bump into someone?\" For some reason, I found myself speaking in a breathier, more seductive voice than I'd ever used in person before. \n\n\"Then we'll just bow and curtsy. Or cut and run,\" he chuckled.\n\n\"Alright.\" And I put my hand in his and let him lead me out to the dancefloor. Despite my nerves, there was something about his presence that put me at ease. His hand felt nice holding mine, his other rested on my waist, our bodies close enough together to where my breasts grazed his chest, and the heat between us was palpable.\n\n\"You lied- you're a very good dancer,\" I remarked after we'd been incident free for a couple of minutes. \n\n\"You're not so bad yourself, Angel.\" \n\nAs he led us around the floor, I couldn't help but notice how firm and muscular he felt, from his biceps to his shoulders to his chest. \n\n\"So what should I call you- Phantom?\"\n\n\"Did the Phantom of the Opera have a name?\"\n\n\"Not in the musical, but in the book it was Erik. I'm a Theatre Major,\" I added, thinking that I probably sounded like a dork.\n\n\"How about Erik, then. And what should I call you?\"\n\n\"I like it when you call me Angel...\"\n\n\"Then Angel it is. I see you're a virgin here.\" ",
        "\"Excuse me?\"\n\n\"They gave this to you at the door, right?\" For a moment, his thumb traced the broach over my breast and my nipples instantly hardened.\n\n\"Yes. Is that what it means- that I'm a...\"\n\n\"A first-time fool, yes. Don't worry, it'll be fun.\"\n\n\"What will be fun?\"\n\nBut I didn't find out because we nearly collided with another couple that had stopped abruptly. And it wasn't just them- everyone in the ballroom had halted. It was like someone had pressed the pause button- violin bows hung mid-air, dancers mid-spin, fingers hovered above keys and holds became frozen in time. \n\n\"Lords and Ladies, Clowns and Columbines, the time has come for our first Hoedown of the evening,\" a mischievous voice announced to the motionless crowd. \n\nI glanced around until I identified the speaker as some kind of Emcee Fool wearing a codpiece and holding a phallic gold scepter. By his side was a female co-host in a Harlequin mask and a skintight bodysuit, holding out an open velvet drawstring bag for him to pick from. The Fool reached inside, stirring his hand around and as the drumroll reached its crescendo, he produced a shiny green doubloon.\n\n\"Ah ha! Green! If you're standing on a green square, please come forward!\"\n\nErik and I separated and looked down at our feet. Fortunately, neither of us was because I had no intention of going on stage and I didn't want him to either. A high-pitched squeal of delight rose over the general noise and then a lovely young lady sashayed forward. Several more voices announced they were on a green tile and stepped forward, followed at last by a girl who apparently had to be cajoled into stepping forward.\n\n\"Anyone else? No? Then let the games begin...\" \n\nLike everyone else, I returned my focus to the front. I leaned over to ask my dance partner if he knew what game they were about to play, but instead, my mouth just gaped open. The Fool was unveiling a set piece covered in green velvet. To my intense shock and everyone else's audible glee, it was a full-sized painting of a Joker, like one of those 'hole in the board' photo props- except the hole wasn't over the face, but over the crotch. \n\nAnd as if that wasn't enough, who should be among the contestants but Whitney Everett, poised as ever as she basked in the crowd's applause. There were three other women- one in purple, one in green and one in black and white- and two men- one in a full-faced white Volto and one in a half-faced Scaramouche mask- and none of them seemed fazed by the risqu\u00e9 reveal.\n\n\"Oh my god, that's the girl who invited me up there, dressed like a Devil,\" I told Erik in a hushed voice.\n\n\"Angel and Devil- cute.\"\n\n\"Believe me- we didn't plan it,\" I muttered.\n\n\"Now, one of you lucky gentlemen will position yourself in the old glory hole thusly,\" and to demonstrate, the Fool stood behind the board and stuck his codpiece through. The board was angled so the person standing behind it was still partially visible. \"I will then send one of these lovely young ladies to come forward,\" and here his co-host approached the protruding phallus with dramatic caution. \n\n\"And polish your knob with whatever method she chooses...\" His voice descended into a husky growl as his assistant fell to her knees and began pantomiming a porn-style blowjob. The Fool thrust his hips wildly as if thoroughly fucking her mouth right back.\n\n\"After the time's up,\" the Harlequin desisted and scampered away, rubbing her jaw as if she'd strained it, before the Fool emerged. \"You'll try to guess which gown just went down on the clown.\" And he selected his fellatrix by sliding the cock-shaped end of his scepter up between her legs. \"Guess right and you win! Guess wrong, and the other gentleman takes a turn. Cum and you forfeit. Are the rules clear?\"\n\n\"What do we win?\" one of the men shouted. \n\n\"Well naturally,\" the Fool answered, wrapping his arms around all the girls at once. \"To the victor goes the spoiled.\"\n\nThe audience seemed to approve of this prize, and the girls all blushed and smiled. It seemed as though I was the only person there shocked by the prospect of public anonymous sex. But I certainly wasn't the only one aroused by it. Everywhere I looked, hands were fondling breasts and asses, stroking bulges and reaching under skirts; lipsticked mouths kissed one another as narrowed eyes peered behind their stoic facades. \n\n\"Since there are only two of you gentlemen, a coin-toss will suffice to decide who goes first.\" The Harlequin produced a gold doubloon and the Fool pointed at the man who'd spoken up earlier. \"Crown or Clown?\"\n\nHe answered, \"Crown,\" and the drumroll began again as his assistant flipped the coin into the air, caught it in her palm and flipped it over onto the top of her other hand.\n\n\"Clown!\" she called out, and a trumpeter played the disappointing 'wah-wah' sound effect.\n\n\"Them's the breaks,\" the Fool muttered. \"Alright- let's get ready to play 'Glory Hole Guess Who!'\"\n\nAs the contestant in a hook-nosed Scaramouche mask was prepared for his grand entrance by the co-host's shiny gloved hands behind the glory-hole board, the host pulled out a ruler. Soon a fully erect cock was jutting out from the hole, and it was thick and long enough to elicit a gasp from every lady in the room and several of the men. \n\nAfter measuring his length and judging it to be impressive, the Fool mused aloud, \"My, my, my, I wonder which beauty is ready to handle this eight-and-a-half-inch beast?\" \n\nAll four girls immediately raised their hands like they'd just been asked if they'd like to try a delicious dessert and laughter rippled through the audience. Chuckling himself, the Fool used his scepter to choose the tall, tanned brunette wearing a purple corset dress that emphasized her tiny waist and massive tits.\n\nTaking her by the forearm, he led her forward and told her to 'assume the position'- which for her meant to fall to her knees. The Harlequin started a timer for ninety seconds and without hesitation, the girl in purple took his hardness into her hands. After stroking him firmly and with finesse, she wrapped her lips around the bulbous tip and sucked it like some kind of treat.\n\nI'd given a couple of my boyfriends blowjobs, but I'd never found them particularly enjoyable- just an exercise in not gagging and swallowing bitter cum. But the way this girl was moaning around his meat made it obvious that the exchange of pleasure wasn't just a one-way street. My pussy clenched involuntarily as I wondered if I would be able to take such a massive member into any of my tiny holes.\n\nWhen the buzzer went off, she almost seemed reluctant to stop. The Fool helped her to her feet and she returned to her original position looking considerably more flushed. Once he'd fastened his pants, the contestant came out to guess who'd just serviced his cock. \n\n\"No help from the audience, please,\" the Fool requested as the man examined the four girls' faces and hands for some sort of tell. After a moment of consideration, he decided on the one wearing a graphic black and white dress. \n\nThe bells on his jester's cap jingled loudly as he shook his head. \"Oh no! Close- but no cigar. Now, let's see if your opponent can do any better.\"\n\nAnd the Harlequin took the man with the white mask behind the board. I found myself wanting to know how his cock compared, and though it was slightly shorter at seven-and-a-half-inches long, it was thicker and darker, its crested tip flushed and glistening. I was so scandalized and tantalized at once that my cheeks were burning, my pussy was dripping, and my skin tingled all over. \n\nOut of the corner of my eye, I could see that my Phantom partner was closely gauging my reaction but I didn't dare meet his gaze.\n\nThis time it was the girl with the Cygnus-style mask, a fan of peacock feathers coming out of one side. As if to compete with the first girl, she took as much of his fat dick into her mouth as she could every time she went down and hollowed her cheeks out every time she came up.\n\n\"Whoa-ho keep that up and we might have a forfeit on our hands!\" the Fool laughed, clearly impressed by the show. \"And she might have 'forfeit' all over her face...\"\n\nThe minute and a half-passed orgasm free, but he too chose incorrectly and it was back to the first man. To my shameful delight, Whitney was chosen next. Not to be outdone by either of the previous contestants, she lifted her scarlet skirts to reveal her completely nude pussy, then turned so her perfectly-shaped ass was towards the board. I watched as enthralled as everyone else as she bent over, back slightly arched, spread her legs until she was perfectly positioned, then held onto her ankles while she impaled herself.\n\nBoth players cried out, \"Fuck!\" as they slammed together as far as the barrier between them would allow.\n\n\"Fuck indeed,\" murmured the Fool, fisting his codpiece lewdly while he watched.\n\nI've watched my fair share of porn, and it was always a turn on for me to see another woman get nailed. But for it to be in person, with someone I knew, was so raw, so intense, so in-my-face that I thought I might burst into flames. I wanted so badly to touch myself, as I would have if I was alone, but I'd never had the courage to before, even in front of a lover.\n\nAs if I'd broadcasted my need, warm, cotton-covered hands wrapped around my waist and drew me into his firm torso. \"Is this okay, Angel?\"\n\n\"Yes, thank you,\" and I put my hands over his to assure Erik that his touch was welcome. \"I can't believe this is actually happening. That she's up there getting...\"\n\n\"Fucked?\" The way he said the word gave me goosebumps.\n\n\"Yes,\" I breathed.\n\n\"In front of strangers?\"\n\n\"Yes.\"\n\n\"Does that turn you on?\"\n\n\"I didn't think it would but, yes, it's really turning me on.\"\n\n\"And is that the only thing you find arousing?\" Erik asked slyly, pressing me up against him so I could feel his impressive erection.\n\nResisting the urge to grind my ass against his hardness, I murmured. \"That's certainly another one. But I should tell you, I'm not really that kind of girl.\"\n\n\"What kind of girl?\"\n\n\"That kind of girl,\" I answered, nodding towards the stage. The ninety seconds had elapsed and it was guessing time.\n\n\"Oh, you mean a slut?\" he chuckled. \n\n\"No! I just mean I've never been to one of these kinds of parties before. I didn't even know that's what this was.\"\n\nThe man guessed incorrectly and another round began. The more I melted into Erik's warm body, the less upset I began to feel about being tricked.\n\n\"Normally I'm not either, but once or twice a year... See, the old Swamp Fox Society is all about swapping foxes- mistresses, trophy wives, daughters...\"\n\n\"Daughters?\" I asked with disbelief. The next hoedown decided to stick to giving a blowjob, but she began touching herself at the same time. The sounds of their mutual pleasure were making me even hotter.\n\n\"It's not my thing- but there are a few Daddy/daughter couples, or men who bring their daughters to share and share alike. Anyhow, it's usually very private, but the April Fools' Masquerade is one of their events that they like to invite guests to, partially for the anonymity. The board has ways of screening all of the potential guests first, of course, to ensure no one's under eighteen, or a whacko, and that everyone has a clean sexual history.\"\n\n\"Oh, that's comforting.\" It was more than a little weird to know that a group of strangers had done a background check on me before inviting me to a party- but it did confirm my suspicion that Whitney's invitation debacle was staged.\n\n\"It's tradition not to tell a first-timer about the Swamp Fox Society when you invite them if they don't already know- and I assume that you didn't.\"\n\n\"No I certainly didn't or else I wouldn't have come. I don't know why she'd play this kind of prank on me- unless she honestly thought I'd have fun...\"\n\n\"And are you having fun?\"\n\nLooking up over my shoulder I said, \"I'm having a tolerable time,\" while fluttering my feathery false eyelashes as coquettishly as possible.\n\n\"Tolerable? Oh? Is there anything I could do to make it better?\"\n\n\"Yes, actually. You could start by taking your gloves off...\" \n\nAt this point, the other man was being deep-throated by the busty girl in purple who'd gone first. She'd also undone her corset to free her tits, each with a triangle of untanned skin centered on her fat, rosy nipples. I vaguely wondered what they'd feel like in my hands; my mouth.\n\nAnd then his bare skin made contact with mine. Hot, coarse, electric. His hands slid up my arms, over my shoulders, along the curve of my neck. One continued up to cup my face and the other down my throat. Erik's fingers lightly traced my collarbone, my jawbone, the shell of my earlobe, the valley of my cleavage and the outline of my lips. \n\nJust this simple touch, delivered so dexterously, was enough to make me swoon. I leaned back against him and reached up under his cowl to hold onto him by his neck, lost in sensation. His lips brushed against my hair, my skin, the corner of my mouth... \n\nWhitney came on stage again and started tit-fucking Scaramouche mask, but I was too absorbed in our own amorous embrace to pay attention to theirs.\n\n\"Look, Angel, he won,\" Erik said a minute later, tilting my face towards the stage, though I desperately wanted to meet his kiss instead. I could feel the reverberations of his sonorous voice throughout, making it even more difficult to open my eyes. The victor stood triumphantly and the girls were all curtsying while the audience cheered. After I clapped politely myself, I rested my hands on his. \n\n\"Have a ball, ya'll!\" the Fool yelled out as the Harlequin escorted the winner and his four maidens off-stage through a velvet curtain. Once they were gone, our host gave us all a devilish grin. \"There will be a brief intermission before the next round. Meanwhile, if you'd like to watch the winner enjoy his prizes- please follow me!\" And with a flourish of his cock-cane, he began to usher a procession of voyeurs to a hallway behind a red curtain.\n\n\"Do you want to follow them?\" he inquired.\n\n\"Yes!\" I said so emphatically that he started laughing. It was gravelly and wicked and I could feel it vibrating in my sex.\n\nTogether, we went down the velvet-partitioned corridor to a dim room filled with low, backless sofas and plush cushions where other guests were making themselves comfortable. Very comfortable. The focus of everyone's attention was a large window looking into another room with a large opium bed, where the winner and his conquests were frolicking around, undressing. None of them seemed to pay any mind to their rapt audience, making me think it was a two-way mirror. \n\nOnce they'd stripped one another until they were completely naked but for their masks, the girls got in bed and began kissing and fingering each others' pussies while the masked man looked on. Soon his cock was being serviced by Whitney, who was sitting on Peacock-Girl's face, while the girl with big tits and the one in the black-and-white harlequin mask 69ed.\n\nSpeakers broadcasted their giggling, swearing and moaning into the room we were in, but those weren't the only sounds of debauchery. All around us, women were going down on men, men were undressing women, women were sitting in men's laps with their skirts lifted, slowly rocking back and forth. The smell of sex filled the air.\n\n\"You know, I don't mind if you want to mingle with the other guests. I'm not nearly as adventurous as most of the other women here,\" I said in a hoarse whisper, watching the man reposition Whitney at the edge of the bed on her hands and knees so he could fuck her from behind. \n\nHer expression was almost pained when he slammed inside of her, making her dangling breasts flop around and ass ripple with each impact. Then she started eating out Peacock-Girl, who was also eating out Big-Tits while she played with Harlequin-Mask's waxed pussy.\n\n\"Do you know the difference between a tourist and an adventurer?\" he asked before lightly tugging on my earlobe with his teeth.\n\n\"Tell me,\" I murmured helplessly.\n\n\"A tourist observes natives in their habitat and pretends to herself that she is slowly peeling back the mystery of their ways; erasing the boundaries between their cultures. An adventurer seeks strange and exotic experiences, but knows that she will never understand their customs or breach the barrier that separates their world from hers.\n\n\"You, my dear, are on an adventure as we speak. I'd like to continue taking it with you, if you don't mind that is.\"\n\n\"It would be my pleasure.\"\n\n\"I hope at some point this evening, it will be.\"\n\nErik and I watched as the man laid back on the bed to have both his cock and face mounted. Whitney and Harlequin-Mask had started preparing a strap-on. We stayed until they reconfigured themselves into another chain of mouths, pussies and phalluses. By then there were couplings and orgies going on around us and I was beginning to get restless. I either had to leave or get fucked, post haste.\n\nSensing my discomfort, Erik suggested we move on. As we exited, I noticed that the sign at the entrance of the corridor had the words 'Peeping Tomfoolery'. There was also a jester posted there who stopped us before we walked away. \n\n\"Your party favors, Miss,\" he said, handing me two more pins- one a golden treble clef, the other a window with a face peeping through the part in the curtains. I vaguely wondered how many more I would collect over the evening, and if Erik would be with me when I did.\n\n***\n\nAs we explored the sumptuous parlors where guests were openly making out in various states of undress, I noticed that the servants in these rooms were different from the ones in the reception hall. They were all female and wore black, oval-shaped masks that seemed to be held in place with a bit, which prevented them from speaking, amongst other things. Also scattered about were stacks of towels, bowls of condoms and dental dams, bottles of lubricants and oils, and a wide variety of toys from feathers to paddles to handcuffs.\n\nOff of the main rooms were corridors made out of hanging curtains and tapestries into various game rooms, all run by fools, jesters, harlequins and clowns. There was a sign in front of each with the name of the game: 'Master Simon Says', 'Hungman' and 'Treasure Cunt' were just a few of the suggestive titles. And roaming throughout the manor were minstrels and glee-maidens playing instruments, singing bawdy songs, or serenading lovers.\n\nUpstairs were several rooms labeled 'Boudoir', and beneath it a spinning arrow you could point to 'Empty', 'Full' or 'The More the Merrier'. The same went for the 'Powder Rooms', which fortunately did mean restroom- some of which included a whirlpool tub or massive shower. There was also a white door bearing the legend 'Paradise' with a Pantalone-masked attendant stationed there to grant admission, like St. Peter at the Pearl-Necklace Gates.\n\nThroughout the night, I noticed that some couples or small groups would play exclusively together, while others would trade off or pair up at random. It was made clear through signs and game hosts that forcing or attempting to force another into any act they didn't want to perform- staff included- would result in being ejected immediately, if not arrested. \n\nThis was one of the many rules in place to ensure every guest's pleasure and safety, lest their civilized affair devolve into an anonymous rape orgy- and surely there were other clubs out there for those kinds of parties.\n\n\"So what game do you want to play first?\" Erik asked when we were sitting in one of the parlors, sipping champagne and 'observing the natives' as it were. \n\n\"I don't know- is 'Cat-and-Mouse' like hide-and-seek, or is it something dirty?\"\n\n\"Depends on how you play hide-and-seek.\"\n\n***\n\nThere were no official rules for this room, which was like a dimly lit pleasure den where you could romp around hiding and seeking (and fucking) at your leisure. There were even cubby holes to store your shoes in by the entrance. Erik waited outside a minute while I sought out a place to hide. There were canopied beds covered in fake furs, tunnels to crawl through to secret rooms, ladders to climb to lofty niches, alcoves hidden behind tapestries, mini-mazes made with silk screens. ",
        "I happened upon a man idly stroking his cock who didn't mind my brief intrusion, and several naked women dashing through a tent filled with pillows, before I decided upon a place to hide. It was a sort of like the top of the most comfortable, palatial bunk-bed I'd ever been in, recessed into the wall and hidden behind layers of fabric. As if it had been built for a kid's playroom instead of an adult's, the room could also be exited via a slide.\n\nOnce I'd situated myself among the soft cushions, I realized that this was a very intimate space for us to be in together. But it was too late to change my mind because I heard Erik call out, \"Ready or not, here I come, Angel!\"\n\nMy breath hitched when I imagined him finding me here all alone with no one watching. I knew that neither the rules nor his sense of honor would permit any rape fantasy to come true, but I still imagined him pinning me down, taking me harder than I'd ever been taken, even as I struggled beneath him like a chaste butterfly; his Angel.\n\nAfter a moment of seeking, I heard Erik stammering an apology that sounded so awkward that I could only guess he'd happened upon the same man jacking-off that I had. I giggled, which he must have heard because the sounds of his searching grew nearer. The knowledge that I'd soon be found filled me with a sort of giddy anticipation in my tummy and further down. \n\nWhen I heard him climbing the ladder to my hideout, I made sure I was positioned in such a way that I looked casually seductive; as if I often lounged about posed like a centerfold model. The sight of Erik's masked face appearing in the opening startled me, even though I'd been expecting him. The wicked way he grinned at his discovery made me tremble.\n\n\"Found you,\" he murmured before crawling up next to me.\n\n\"I'm glad you did.\" \n\n\"I'm glad you came tonight. Even if you aren't that kind of girl... Especially if you're not that kind of girl.\"\n\nHe was staring back at me so intently that I looked up at the dark blue ceiling scattered with golden stars. \"I don't know what kind of girl I am. I guess the kind who gets tricked into taking an expensive mask and an invitation to a sex party in exchange for finishing the rest of a major project.\"\n\n\"Ouch... I hope she threw in the dress.\"\n\n\"No, I made it myself. Otherwise, I'd probably have to write her final paper as well.\"\n\n\"You made that? It's lovely. And you're beautiful,\" he said softly. \"If we happen upon your friend tonight, I'll have to thank her for her trickery.\"\n\nI don't respond well to compliments, so I simply said, \"She's not my friend.\"\n\n\"Then what is she?\"\n\n\"Classmate. Frenemy. Tormenter. I've tried being her friend, but...\"\n\n\"You're a nice girl and she's a total bitch?\" Erik supplied succinctly.\n\nI laughed. \"She's not a total bitch. And I'm not always such an angel.\"\n\n\"I hope not. Because your lips are so pretty that I'd very much like to kiss them.\"\n\n\"I'd like that too.\" \n\nAnd I met his kiss as he slanted his mouth over mine, my lips parting to let his tongue slide through. It felt so good to return his kisses, to lick and nibble his soft lips, lash my tongue against his, lap the sides of his mouth, and have him do the same. I found myself running my palm over his erection, amazed at how thick and hard it felt. How much I wanted it.\n\nThe intrusion of two half-naked girls startled both of us, and I realized just how close I'd come to taking out his cock. They told us that we should stay, but I decided to seize the opportunity to scurry away towards the exit.\n\n\"Catch me if you can!\" I taunted before launching myself down the slide. \n\nAfter coming out the bottom of the chute, I dashed into a maze of screens and beaded curtains. For a moment, I worried that Erik had decided two were better than one. But he was only being quiet to sneak up on me. I giggled hysterically when he grabbed me from behind and captured me in his steely grip. But my laughter soon gave way to moaning while he caressed me with his clever hands.\n\n\"Mmm, you're not very good at hiding- or running away,\" he murmured in my ear.\n\n\"Normally I'm an expert at both, but maybe I'm losing my touch.\"\n\n\"Or you're liking mine too much...\"\n\n\"Pretty sure of yourself, huh?\" I teased before slipping out of his lax hold and scampering away.\n\nWhenever Erik caught me among a pile of pillows made from satin, between sheets made of silk or on top of blankets of the softest velvet, we would get more daring. He'd steal a kiss, grind his erection against me or roll me on top of him to put his face between my breasts, which he'd unlaced my corset to make accessible but not completely exposed. \n\nAnd I would direct his hand to the apex of my thighs, to feel how wet I was through my panties. As he did, I'd rub the length of his cock, throbbing against the seam of his pants. But before either of us succumbed to our passion, we'd stop and resume the chase.\n\nWe were both flushed and out of breath when I suggested we try another game. By this time, he'd taken his cowl off so I could see that he had a boyish mop of blond hair.\n\n\"Did you have one in mind?\"\n\n\"The 'Sensual Pleasures' booths piqued my interest.\" There had been three fully enclosed stalls in a row, like dressing rooms, labeled 'Look', 'Touch', and 'Taste'. It looked like something I could play one-on-one with Erik, and he could play with me...\n\n\"Sounds excellent.\" And he let me lead the way.\n\n***\n\nAfter I put my cape and bustle back on, which I'd left with my shoes, we exited and I was given a pin that was a cat mask paired with a mouse mask, like a comedy/tragedy duo. The way Erik's fingers lingered over my breasts after he'd attached it to my bodice next to the others only increased the anticipation of playing a more intimate game. \n\nAnother group was just finishing up when we arrived and soon a woman in a skimpy dress and a jester's mask lead me to one side of the 'Look' stall, and a man in a black half-mask set in a dramatic expression took Erik to the other. Behind the curtain, I found that there was a thin board separating us with several sets of eye holes at different heights. \n\nThe rules were that we each use a spinner to decide which body part we showed the other- and the options on mine were 'Tits', 'Ass', 'Cunt', 'Face', and 'Go Wild'. Of course, we could choose to break the rules and reveal or not reveal whatever we wanted, but I was curious to see which one I'd get and whether I'd be brave enough to show it.\n\n\"Ladies first, Angel,\" Erik called out from the other side. \n\n\"Okay, here goes!\" I replied and flicked the spinner. Ass. Of course. I'd always thought my butt was too big for my small frame. I did my best to keep it toned (Booty Boot Camp, Brazilian Butt Lift, Buns and Thighs- anything derriere related) but it still made me feel self-conscious. I began hastily unbuckling my garter belts when I glanced back at the divider and saw that the eye holes were blocked from the other side: Erik was watching.\n\nUnder his gaze, my movements became more deliberate and sensual. I rested one foot on the tufted ottoman to show off my legs as I undid each buckle, surreptitiously giving him a glimpse under my skirt, then looked over my shoulder before I peeled down my panties. And once the scanty scrap of fabric was on the floor, I rucked my skirts up around my hips and knelt on the pouf to strike what I hoped was an enticing pose.\n\nApparently it was because I heard a sound of approval that was halfway between a growl and a groan. \"Damn, Angel, your ass is divine. Absolute perfection.\"\n\n\"Oh, such things you say,\" I muttered, blushing self-consciously as I exhibited myself just a little longer. \n\nI picked up my panties as seductively as possible and was about to tuck them away into one of my discreet pockets when Erik said, \"May I hold on to those for you?\"\n\n\"Why thank you.\" And I passed them through one of the holes in the wall. \"Now it's your turn.\"\n\nThen I heard Erik spin. I watched through the holes as he undid his bowtie, pulled the tails of his shirt out of his pants, and began to unbutton his buttons. He must have landed on the male equivalent of 'Tits'. \n\nLike the man himself, his movements were elegant and efficient, with a certain arrogant bravado- as if he knew that he was about to give me a treat. Which he was- I'd always thought there was something particularly sexy about a fit man in a tuxedo with his shirt open. \n\nAnd he didn't disappoint. Bronze skin free of any hair covered his lean musculature, his pecs and abs were defined but not bulky, and he had a taut line bisecting his chest that I wanted to run my tongue up and down. \n\n\"Mmm, Erik you're even hotter than I imagined.\"\n\n\"I'll take that as a left-handed compliment.\"\n\nA bell chimed when our turn was up and soon we were being ushered into the next booth.\n\nThe 'Touch' room was set up in a similar fashion, except instead of eye holes, there were arm holes at various heights. This time Erik went first, and much to my delight, I heard the sound of him undoing his belt buckle and pants' zipper. I waited until he told me he was ready, then reached my arms through the holes. \n\nErik's hands took mine and guided them behind himself towards my target- his ass. Firm on the sides, round underneath, plump in the middle, smooth and pert all over. I pulled him closer and squeezed a bit harder, wishing there was nothing between us, but knowing it wouldn't be the same if there wasn't. \n\n\"I gotta back up now or I'm gonna give this stall a glory hole...\"\n\n\"Oh, sorry...\"\n\n\"Don't be. Cause now it's your turn.\"\n\nWhen I landed on 'Cunt', I couldn't help but go weak in the knees. I'd wanted to feel his fingers directly on and in my pussy since he first pet me so tenderly. I still hesitated, since I wasn't accustomed to letting strange men touch me below the waist. But tonight was different- or I was different- and I told him to reach inside.\n\nI took one of his hands and slid it under my skirts and up between my legs to my sex that, aside from a trim landing strip, was completely bare. I gasped when his coarse fingertips made contact with the most intimate part of me. \n\n\"Mmm, you're so smooth... and wet...\" Erik groaned, his free hand sliding behind my ass to hold me stable. With deft, practiced motions, he stroked along my slit, grazed my clit with his thumb and every so slowly curled one finger up inside of my cunt. \"And tight...\"\n\n\"Oh fuck, Erik, you're really good at that,\" I sighed appreciatively, wishing he could make me cum- but not with his fingers.\n\n\"I have a few tricks up my sleeve...\" \n\n\"I'm sure you do.\"\n\nAfter another moment, a warning bell rang to let us know our time was up. I whimpered when his hands withdrew. He'd nearly brought me to an orgasm quicker than I can bring myself to one- which made me wonder how many orgasms he could give me, given more time.\n\nThe last booth was the one I was most excited about and it was my turn again to go first. When I spun, the arrow landed between 'Ass' and 'Tits' and considering the sense, I was kind and chose 'Tits'. Besides, my breasts were desperate for his attention. Inside this stall, there were strategically sized and shaped holes at various levels, as well as a small table with a variety of flavor enhancers. \n\nKnowing that Erik was watching, I slowly undid the bow in the front of my corset, then the ribbon laces, before exposing my breasts to him. In an instant, my nipples became like pointy caps for my creamy mounds of flesh. The sound he made was as animalistic as I'd hoped it would be. I liked knowing that beneath his polished exterior was a primal sexual being and I was the object of his desire. \n\n\"Babe, your tits are so fucking beautiful,\" declared Erik in an almost pained tone.\n\nIf only to torture him a little longer, I applied peach flavored body gloss around my pale areolas and nipples until they glistened, then topped them with something called honeysuckle dust. I brought one up to the most convenient pass-through and he graciously cradled it in his palm.\n\n\"And I thought you couldn't get any sweeter...\"\n\nFirst, his tongue made circles around my stiff peak, then he switched from licking to suckling, taking in as much of my breasts as he could as he latched on. It was so overwhelmingly erotic- having this stranger lavish me with his expert attention- that it took the pleasurable sensation to another level. When Erik was done with my left breast, I presented the right for him to suck clean- which he did with equally thorough attention. \n\n\"I can't wait to see what I get to taste,\" I mused as I laced and tied my corset up again, my breasts feeling incredibly tender and heavy when I did.\n\n\"Hopefully you'll find it appetizing.\"\n\n\"Hopefully you didn't land on 'Ass'!\"\n\nErik chuckled. \"Don't tempt me, Angel. You're tempting enough already.\"\n\nWhen I saw a glistening crest followed by a veiny shaft emerge from a lower hole, my mouth watered. I've only seen a few cocks in person, but this one seemed particularly magnificent. Thick and substantial but not intimidatingly so, twitching with need.\n\n\"How beautiful,\" I said, kneeling on the conveniently placed cushion before him. Now that I was closer, I could see and smell that he'd smeared on some kind of flavored gloss. Holding his manhood still with my hand, I extended my tongue and ran it along his shaft. \"Mmm, you taste like a salty mango.\"\n\n\"Fuck,\" Erik snarled when I lapped up the sensitive underside, feeling the different textures and contours of his flesh.\n\nKnowing how much my tasting session was pleasing him, I circled his meaty cockhead with my tongue, then took it into my mouth. \n\n\"Aww, Jesus Christ that feels good...\" Erik began stroking his cock in and out of my mouth. Never too deep or fast, just enough to show me what he wanted. The sound of his husky groans was music to my ears.\n\nI'd thoroughly cleaned off every trace of mango gloss by the time the warning bell rang. I could hear that Erik was disappointed when I stopped, and I found that I too had wanted to continue. To keep fellating him until his cum was running down my throat.\n\n***\n\nWe reunited outside the booths- me with a new pin that was a functional mini-spinner- and continued our exploration walking hand in hand. Oddly enough, it felt like we were a couple on a wholesome date at a County Fair.\n\n\"Hey, do you want to see what the group activities are like?\" I asked as casually as possible.\n\nErik gave me a mischievous look. \"I've just been waiting for you to ask.\"\n\n'Spin the Bottle' seemed like a good place to start for a neophyte like myself. Oversized cushions had been placed in a circle centering on one of those massive Nebuchadnezzar wine bottles. The players had been arranged alternating between male and female so if the Spinner landed on someone of the same sex, they could pick the person to their left. \n\nOf course, not everyone was bothered by kissing someone of the same sex, even some of the men. And it often turning into more than kissing, but a time limit was placed to prevent any couple from getting too carried away.\n\nWhen two spaces opened up next to each other, Erik and I filled them. He pulled his cushion closer to mine and wrapped his arm around me. I didn't feel like he did it to be possessive but to make me feel more comfortable- which it did. The bottle didn't point to either of us the next round, but we had an excellent view.\n\nThe Spinner- a redhead in a glittering black gown- crawled up to the man she'd picked, who was wearing one of the plain white half-masks given to guests who'd worn a Volto, should it become prohibitive. Straddling his lap, the woman ran her hands through his trim beard before leaning down for a kiss. Their lips smacked together and a growl sounded in the back of his throat.\n\nI shifted restlessly as I watched their passionate kiss continue, suddenly conscious that I wasn't wearing panties over my creaming quim. My breath hitched when Erik's hand ghosted up my inner thigh and over my bare mound. I forgot about my fear of anyone watching and spread my legs a little wider to give him better access. \n\n\"You feel even wetter than before,\" he hissed in my ear. \n\nI leaned against him, caressing his chest and further down while we watched the man in the white house-mask spin the bottle. It began to slow down in my direction, which made my heart leap, but it continued past me and stopped on a girl in an outrageously pink dress and a silver filigree mask. Her breasts were already threatening to spill out so when the spinner pulled her into his lap, he finished the job. As they kissed, he played with her luscious globes, pinching and pulling on her nipples. \n\nMy hand massaged Erik's hard-on through his pants as he rubbed my clit. I wished that I had the courage to go down on him in front of everyone; and so much more.\n\nThe woman in pink didn't bother covering her breasts when she took her spin. This time, the bottle slowed down and stopped directly on my space. I assumed that since I was a girl, she would choose the man to my left. But she approached me slowly, seductively, her eyes locked on mine. Desire flooded my pussy. I pulled away from Erik and on my knees to meet her.\n\nI'd never kissed another girl before, beyond experimental pecks on the lips, and having my first time be witnessed by a dozen or so strangers was a bit frightening. But then again, no one there knew who I was. I could be whoever I wanted to be- even myself.\n\nAt first, I merely let her tease my lips with hers, mashing them together and coaxing them apart, but then I responded back so forcefully that people around us chuckled. She didn't seem to mind it, though, nor did she mind went I cupped her breasts in my hands. Everywhere I touched was so soft and smooth that I wanted to kiss every part of her. \n\nWhen our kiss broke apart I gave into my burning curiosity and took one of her tits into my mouth. The noises of appreciation around us became even deeper and filled with desire. Before we could get too carried away, the buzzer stopped us. I was so dazed that when she stood up and offered her hand, it took me a moment to remember that we were still playing a game.\n\n\"Do you mind?\" I asked Erik before I accepted. I knew I didn't need his approval; I wanted it.\n\n\"Go ahead, Angel.\"\n\nThe Harlequin running the game pointed out the I was a 'First-Time Fool' and lead a round of applause for me. Usually this would have mortified me, but with my Phantom watching me, I merely curtsied graciously. Part of me was hoping that I'd land on a woman, both because I enjoyed it and because I didn't want to make Erik jealous. But the rest of me was thrilled when I landed on a particularly gorgeous looking man with his shirt open and a bulge that made me weak in the knees.\n\n\"Well, hello darlin',\" he drawled when I sat in his lap. I could feel Erik's gaze as I wrapped my arms around the man's neck, wriggling against his hard-on until I was situated comfortably. \n\nBefore we kissed, I stroked his black beard a moment, admiring his deep golden skin and lust filled eyes.\n\n\"I hope your man doesn't mind sharing,\" he rumbled, his hand splayed over my throat, thumb curling up over my chin.\n\n\"You'll have to ask him later,\" I said coyly, then bent down for my kiss. \n\nOur lips locked and his tongue attacked mine more aggressively than ardently, but skillfully nonetheless. I remained pliant to his lustful exploration of my mouth, but when he started reaching up my skirts to explore further I slapped his hand away. He growled in the back of his throat and tried again, so bit down on his lip as hard as I could. Blackbeard made a sharp sound of surprise and when we broke apart, his lower lip was bleeding.\n\n\"Feisty kitty,\" he scolded me in his gravelly voice.\n\nErik had gotten up to help me to my feet and when he did, he glared at Blackbeard with cold narrowed eyes. \"Is there a problem here?\"",
        "A look passed over the other man's face that made me think he recognized my Phantom and vise versa, but neither man called the other out, which I presumed was a rule of etiquette here. \"No, sir. My apologies, Miss,\" he said humbly. \n\n\"Sorry about that, Angel,\" he muttered as we walked back to our seats. \"Some men don't know how to keep their hands to themselves.\"\n\nWhen we sat back down, I noticed that Blackbeard had bowed out of the game and was leaving the room with his date.\n\nWhatever prestige or reputation Erik had that made him that intimidating piqued my interest, but I decided not to ask him anything more personal than he asked me. It was like the opposite of a first date- all sexual larking and no serious conversation. And considering how awkward the handful of first dates I've had in my life had felt, maybe I'd just been going about it the wrong way. \n\nOur physical attraction and sensual affection seemed so pure compared to those perfunctory introductions filled with half-truths and outright lies. We didn't have to construct a facade for ourselves to impress the other because we were already wearing one. Oscar Wilde really was right- give a man a mask, and he'll show you his cock. Something like that.\n\n***\n\nAs the game continued, we resumed making out while others observed and watching others while they did the same. After a couple more rounds passed, Erik suggested we relinquish our spots. \n\n\"But you didn't get to take a turn,\" I protested.\n\n\"I know, but I'll get to do plenty of spinning and kissing in the next game I have in mind.\"\n\n\"Oh, well then. Let's go play it.\"\n\nOn our way out, a clown presented me with a pin shaped like a wine bottle that spun in a circle. I wanted to know what game we were about to play, but I liked the element of surprise too much to ask and Erik didn't say. The sign in front said 'Blind Man's Muff', and the jester at the entry said another round was about to begin but there was only room for a female. We turned to go but the man about to play spoke up.\n\n\"I don't mind sitting out. Why don't you go ahead of me.\"\n\n\"Oh, that's not necessary,\" Erik said smoothly.\n\n\"Please, Sir, I insist.\" He said, moving aside so Erik could take his place. Did he know my Phantom too? \n\n\"Thank you, that's very kind. Angel- do you still want to play?\"\n\n\"Yes- I'd be delighted.\"\n\n\"I plan on it...\"\n\nWhen we entered the game room I was greeted with the sight of my most daring venture so far- four bondage swings arranged around a spinning chair. The other woman began situating themselves in the padded seats but I was looking at my swing like it was electrified.\n\n\"I take it you've never been in one of these before?\" \n\n\"No,\" I whispered. \"But I'll give it a go.\"\n\n\"That's my girl.\" \n\nWhen I'd stripped down to my bustier mini-dress and stockings, Erik held the swing still while I got on, then placed my feet in the stirrups one by one. The other girls seemed to have no qualms about being on display in such a vulnerable position, or ashamed of their naked sex and sexuality. I was trembling with nerves.\n\n\"Relax, sweetheart,\" he instructed me gently. \"You're beautiful all over- especially down there...\" He ran the back of his fingertips along my inner thighs and over my spread pussy reassuringly.\n\nWith every girl now situated in a swing, it was time for Erik to sit down. Funnily enough, I wasn't worried that my Phantom was going to share an intimate moment with three other women. In fact, I hoped he was a cunnilingus genius so they'd know what they were missing out on. And what I'd be getting more of later.\n\nFirst, there was the tasting round. After being blindfolded, Erik was spun around several times to disorient him and once he'd stopped, he was taken to the girl to my left, who they announced as Girl Number One. Her pussy was trimmed like mine to a landing strip, though she didn't have a springy puff above her slit.\n\n\"Oooohhh, fuck yes...\" she moaned as Erik began feasting on her open pussy. He too was making noises of enjoyment as he sucked and slurped, licked and lashed. \n\nI'd only had one man go down on me before and it wasn't pleasant for either one of us, apparently. He'd made it seem like eating a woman out was a dirty chore. Erik, however, looked like he couldn't get enough. The other two women were touching themselves while they watched him work and I found myself dying to do the same thing.\n\nWhen the time was up, he was turned clockwise towards Girl Number Two, who was fully waxed and perfectly smooth. Erik began lavishing her labia with as much finesse as he had with the first while she moaned theatrically like a porn star. She twisted her nipples and ground against his face to give everyone a show. Towards the end of her minute, these staged sounds had given way to real whimpers; and my hand was between my legs petting my own needy cunt the whole time.\n\nGirl Number Three was waxed as well, though her pussy-lips were thicker, and Erik's dived in without hesitation. As the woman's breathy cries mixed with the sound of his tongue churning her cream, I felt my own juices dripping in anticipation. \n\nFinally, it was my turn. Girl Number Four. I gasped at the mere feel of his hot breath blowing over my mound. Erik chuckled briefly, and I wondered if he knew it was me. But then his tongue made contact with my slippery folds and my mind went completely blank. I thought I'd be too worried about the other people in the room watching to really enjoy myself, but suspended there with Erik's head between my legs, tongue dipped inside me, there was no one but us; nothing but bliss washing over me.\n\nAll too soon, tasting time was over and the guessing rounds began. Once more, Erik was placed in the center and spun around to disorient him. Then he was brought in front of Girl Number Three and given twenty seconds to guess who she was.\n\n\"Hmm,\" Erik mused. \"This one is waxed, so it's either two or three... Girl Number Three,\" he decided. \n\nThe jester and the spectators in the room applauded. \n\n\"Excellent. Now for round two!\"\n\nAnd Erik was spun around again.\n\nThis time, he tasted Girl Number One, followed by Girl Number Three again. Erik correctly identified both girls in order and it was on to round three. This time, I was the first to be tasted, and I slid my hands under his cowl to hold on to his luxurious hair. Before moving on, he gave me a kiss on my inner thigh as if to let me know he knew it was me. Girl Number One was next, followed by Three and Two. Once again, Erik guessed all of them correctly.\n\nThen it was the fourth round. By this time, the pressure building inside of me to cum was more powerful than I'd felt in a long time. I had to stop masturbating several times so I wouldn't go teetering off the edge. I began to crave more than just his mouth or tongue. I wanted his cock. I wanted him to fuck me in that swing so badly that I was tempted to beg for it. Surely no one here would mind...\n\nErik got less time to taste or guess as every round he had to guess one more muff than the round before. He made it through seven before he guessed incorrectly. After the jester removed his blindfold for him, Erik came and helped me out of the swing. I was more than a little wobbly, so he told me to lean on him until I felt steadier.\n\n\"Are you okay?\"\n\n\"Yes, thank you. You were... That was...\"\n\n\"I'm glad you liked it,\" he said grinning. \"Do you want a taste?\"\n\nI nodded, and Erik kissed me with his cunt-flavored mouth. \n\n***\n\nBefore we departed, Erik was given a prize bag and I got another pin- a comedy mask with a blindfold over its eyes. On our way out, I nearly ran into none other than the Devil herself- Whitney Everett. Her hair and makeup were mussed, her breasts were muffin-topping out so much that her areolas were visible and there were several white crusty spots on her Prada gown. Her date's shirt was gaping open and I could see by the steel grey wires on his muscular chest that he was a good deal older than I'd suspected.\n\nWhen she realized it was me, a look of surprise dawned on her face. \"Wow! You're still here...\" Whitney's eyes darted over to my Phantom and her surprise only seemed to increase. \"And you made a friend.\"\n\n\"Yes, thankfully I did. It helped to have at least one friend at a party full of strangers,\" I said with sugary-sweet voice.\n\n\"Oh, please, don't take it personally- it's a tradition to invite someone without telling them what the party's going to be like.\"\n\n\"And then ditch them?\"\n\nWhitney sneered. \"What- did you expect me to babysit you the whole time?\"\n\n\"No, but I didn't expect to be the brunt of your April Fools' joke.\"\n\n\"Lighten up! You act like I pulled some cruel prank on you. I invited you to one of the hottest parties in town- some girls would kill to go to a thing like this. I even bought your mask cause I knew you wouldn't be able to afford one otherwise. You should be thanking me.\"\n\n\"You're so fucking full of yourself- you only bought my mask so I'd finish our project. You didn't think I'd really enjoy this party at all, did you?\"\n\n\"I figured you might if you loosened up your chastity belt. And apparently, I was right.\"\n\n\"You know, when I first met you I thought you were perfect. I thought you were everything I wanted to be. But now I see you're nothing more than a manipulative, attention-seeking whore!\"\n\nAs soon as I the words came out of my mouth, I regretted them. They were petty and cruel and true and if I could have taken them back, I would have.\n\nWhitney's date was trying to hold her back, urging her to let it go, but she lunged towards me with fire in her eyes. Fortunately someone was there to step between us. It was the Emcee Fool from the Hoedown.\n\n\"Ladies, ladies- fighting is strictly against the rules, no matter how many clothes you rip off each other! If, however, there's a score you'd like to settle, may I suggest the Sybian Showdown?\"\n\n\"The what showdown?\" My question earned a good deal of laughter, especially from Whitney.\n\n\"It wouldn't be much of a battle.\"\n\n\"We could give the other young lady a handicap. If she'd like to play that is...\" \n\nI didn't know what a 'Sybian' was, but I could only assume that the game would mean being in the spotlight, performing some sort of sex act for all to see and hear.\n\n\"Can I at least find out what a Sybian is first?\" I squeaked. And the Fool threw his head back laughing. \n\n\"This girl has moxie. Yes, let's show this young lady what a Sybian is- shall we?\"\n\n***\n\nThe four of us and several onlookers who'd witnessed our exchange followed the Fool to the game room where our battle was to take place. Once inside, I saw what I could only assume was a Sybian. Or rather a pair of them set up side-by-side. They reminded me of those bucking bronco rides minus the bull's head, since they'd both had been painted to resemble a Jersey cow wearing a saddle. The main difference, however, was that each of those saddles had a dildo poking out of them.\n\n\"You don't have to do this,\" Erik whispered in my ear.\n\n\"I know. But I'll do it anyway,\" I said to him, the Fool, and most of all, to Whitney.\n\nA pair of cowgirls were about to go, but the Fool called out for them to stop. \"Excuse me, ladies, but I must insist that you wait a little longer to take your turn because we have a very special showdown on our hands.\"\n\nEveryone in the room directed their attention towards us and suddenly I wanted to sink into the floor. But thankfully Erik was there holding me up.\n\n\"For the first time ever, we have a First-time Fool challenging her Invitor. It's Angel versus Devil! Naughty versus Nice! Only the Sybian can decide who gets to reign in Paradise!\"\n\nThe game was easy enough to understand- the vibration speed was gradually increased and whoever could stay on the longest won. I was allowed to use a smaller attachment than Whitney's, which was closer to the size of my Phantom's gorgeous cock. In fact, to give myself courage, I thought of this as a way to prepare myself for Erik to have his way with me. Which I prayed he'd want to do afterward.\n\n\"I can't tell you how much this turns me on, Angel, knowing I'm about to get to watch you cum. I'll be thinking about you riding me the whole time,\" he crooned softly, then gave me a good luck kiss.\n\n\"Your steeds have been readied, ladies. Are you ready to mount them?\"\n\nWe both nodded and approached our respective Sybians. I could hear people around us whispering to one another about who they thought would win and who they'd like to fuck the most. But I wasn't thinking about them watching me as I straddled my Sybian- or even Whitney, who'd stripped completely to show off her flawless body: I thought about Erik witnessing my pleasure. And when I positioned the silicone cock at my entrance, I imagined it was his, about to give it to me.\n\nMy cunt was so drenched already that I had no problem taking it inside, and was soon situated with my labia flush against the saddle. The feeling of finally being penetrated at last was enough to make me cry out and grab hold of the padded support in front of me. When I looked back up at Erik, he was undoing his fly to release his erection, and I lifted my skirt so he could have a view of my pussy.\n\n\"Ladies, get ready to start your engines!\" the Fool called out, standing between us now. Then he held up a bicycle horn and honked it three times in a row. On the third 'honk', a Harlequin turned on both of our Sybians at the same time.\n\nThe vibrations were more intense than I'd expected and I released a breathy \"Oh fuck!\" and doubled over. I found that leaning forward only increased the pressure on my clit. \"Mmm, unnggg, oh my fucking god,\" I said in something akin to a pained laugh. It felt so good it almost hurt, like I knew something inside me was about to break and let forth a floodgate of orgasms.\n\nI wanted to take my breasts out not only for Erik to see, but so I could touch them. They felt so full and sensitive. The only thing I could do to relieve them was to roll my nipples between my thumb and forefinger; gently at first, then more roughly, until my areolas were puckered all over around their stiff peaks. \n\nI flattened my palms and splayed my fingers on the bolstered base to give me more leverage as I rode my Sybian. I felt myself reaching a climax already and knew I should pace myself, but I couldn't help but race towards it. \n\nWhitney was fucking hers like a pro, moaning passionately, without restraint. I kept trying to stifle or censor myself, though the higher the speed got, the harder it was not to cry out. Or cry. Especially the first time I came. \n\nI wasn't ready for how strong it would feel, how I would feel it from deep in my core to the surface of my skin. My pussy clenched around the dildo, then my insides seem to spasm, sending waves of pleasure all the way down to my clit, which felt like it was swelling, emerging from its hood as it bloomed.\n\nWhen I glanced back up at Erik, he was stroking his cock firmly with the rhythm of my own rocking motion. Knowing that he was getting off on watching me get off, I began lifting and lowering myself on my Sybian like a lover. I leaned back on my hands until I felt its crested tip rasp against that tender spot inside. Another orgasm crashed, even more exquisite than before, and I let myself drown in its current.\n\nThe vibration speed was ramped up even more. By this time, Whitney had encouraged several guys to gather around her and had a cock in each hand and one in her mouth while a couple of other men jerked off. She proceeded to let each of them cum either in or on her. For some reason, watching their ropes of jizz shoot into her mouth or splash her in the face or drizzle down her tits make me orgasm so hard that I saw stars.\n\nSoon we were both leveled up to the highest speed. I could tell that Whitey had cum loudly several times herself, but she showed no signs of stopping. But I knew I was reaching my limit. I couldn't even look at Erik because I knew my face was contorted and misted with sweat. Another climax was gathering force, and when it broke with earth-shattering force, I felt a hot flood gush from my cunt.\n\nUnable to take it anymore, I raised up off the dildo and rolled off to the side.\n\n\"Oh fuck!\" I panted, squeezing my legs together. \n\nErik came over and pulled me up into his arms. \"That was so hot, Angel. I don't know if I've ever seen a woman cum so hard...\"\n\n\"It looks like we have a winner,\" the Fool declared after Whitney had stayed on a minute longer. \n\n\"I almost forgot we were competing,\" I mumbled to Erik. Though the competition barely mattered to me now.\n\n\"And the lady's prize is admittance to Paradise with whomever she chooses,\" he said, gesturing to the available men and women in the room. \"Provided they accept, of course.\" \n\n\"How many can I choose?\" Whitney asked playfully.\n\n\"Oh ho, greedy girl. Only as many as you can handle...\"\n\n\"Actually, I'm mainly interested in handling him,\" and she pointed directly at my Phantom.\n\nThere was a low murmur in the crowd and even the Fool looked a little shocked.\n\n\"Oh my, we really do have a devil on our hands! Well, Sir, do you accept?\"\n\nI smirked, waiting for Erik to reject Whitney in front of everyone. \n\n\"Yes,\" he stated unequivocally.\n\nSeveral people actually gasped and Whitney looked pleased as punch. I let Erik's arm slip away as he left my side. Shock quickly gave way to shame. Of course he'd pick Whitney over me, having seen how perfect her body was and learning what a poor pathetic loser I was.\n\nErik whispered something in the Fool's ear, who nodded before announcing, \"Well then, I'll lead the way!\" And they proceeded out of the room. \n\nA few people actually tried to console me, but I didn't say anything- just grabbed my cape and bustle with shaking hands. I stalked out the door a moment later and made my way towards the exit, but someone called after me.\n\n\"Miss, you forgot your pin.\"\n\n\"Stuff your stupid pins!\"\n\n\"That's not very nice to say, Angel!\"\n\nI spun around. It was Erik.\n\n\"What happened- lose your way?\"\n\n\"Not quite. I asked a few of the clowns to play an April Fools' joke on your frenemy back there.\"\n\nI sniffled, not believing my ears. \"Really? What?\"\n\n\"Well, she stopped by a powder room to freshen up and when she comes out they're going to play a little prank on her called Clown Bukakke.\"\n\n\"Um... what's Clown Bukkake?\"\n\nBut before he could reply, I heard a commotion break out and we hurried to the source. It was Whitney, shrieking and cursing. When she stalked by, Whitney bore all the evidence of having been doused in soda water, hit with cream pies, sprinkled with confetti and glitter bombed. \n\nSeveral clowns followed not far behind, hooting and chanting, \"April Fool! April Fool!\" \n\n\"That, my dear, is Clown Bukkake.\"\n\nI was so pleased with his artful deception that I threw my arms around him and gave him a kiss. \"I'm ready for you to pin me now,\" I whispered in his ear.\n\n\"Hmm, that makes two of us.\" After affixing a miniature Sybian on me, Erik said, \"There's one more thing I'd like to do with you tonight, Angel.\"\n\n\"And what's that?\" \n\n\"I'd like to take you to Paradise.\" \n\nI knew he meant the room, as well as a utopia of pleasures.\n\n\"Is it a game?\"\n\n\"No game, we make all the rules.\"\n\nI accepted without hesitation.\n\n***\n\nParadise was a sumptuous den, every surface soft and fine, from the plush carpeting to the fur textured walls. In the middle of the room was a round bed covered in silks sheets and everywhere I looked was some sort of sex toy or piece of furniture clearly designed for fucking in certain positions. Every other room had been altered and staged, but this one felt like it had been specially created.\n\n\"This is beautiful...\"\n\n\"You're beautiful... and sexy.\" \n\nErik came up and kissed me, wrapping his arm around me and cupping my face in his hand. I had my arm around his neck and wanted to stroke his right cheek but it was covered by his mask. ",
        "When his fingers brushed the edge of my mask on route to my jaw, he murmured, \"Should we take off our masks?\"\n\n\"Isn't that against the rules or something?\"\n\n\"I told you- we make all the rules in Paradise.\"\n\n\"But those are probably two-way mirrors,\" I said, pointing out the gilded framed mirrors placed to have an infinity effect. \"What if someone recognizes us?\"\n\n\"No one's watching in this room. Paradise is where people can share their identities discreetly if they wish. That's why there's a guard out front.\"\n\n\"Oh... Are you sure?\" \n\n\"I have it on good authority. I'd like for us to take off our masks, but if you're too afraid to see any more of my face than you have to, I understand.\"\n\n\"No! I think you're handsome. Very, very handsome. I'm just afraid that you'll be disappointed. But I am dying to take this mask off, so if you don't mind taking the risk...\"\n\nWe untied one another's masks and pulled them away. At last, I was able to see his high cheekbones and broad chin in context with the rest of his features. Together with his refined nose and elegantly arched brows, a lock of shaggy blond hair falling over one of his light blue eyes, he was even hotter than I'd thought before. \n\nIt was such a relief not to have anything on my face- and to see by Erik's expression that he was pleased with what he'd uncovered as well. He brushed along the contours of my face with his fingers and then his lips.\n\n\"Mmm, I've been wanting to take this off you all night,\" he said, tugging at the ribbons of my bustier until the bow unknotted. \n\n\"Me too...\" I told him, quickly undoing the buttons of his shirt. \n\nWhen Erik and I were bare to each other, I could see that he was every bit the hunk I'd imagined. Muscular without being bulky, he appeared to have the kind of strength that comes with flexibility. Broad in some areas, elegantly tapered in others, every line was evidence of his masculine efficiency. \n\nOn impulse, I ran my tongue along the shallow groove that started at his navel and ended between his pecs, savoring his salty flavor. I admired him from all angles, as he did me before throwing me on the bed. I shrieked, giggling, but the look on his face as he stared down silenced me. Erik crawled into bed next to me, his erection bobbing against my tummy.\n\n\"My name's Devon, by the way,\" he said, running his hand along my ribs down over my hips to grab a handful of my ass.\n\n\"Nina,\" I told him, chuckling.\n\n\"Nina. Short and sweet- it suits you.\" His mouth surrounded the tip of my breast and he sucked hard on one elongated nipple, then the other.\n\n\"Mmm, I'm still not sure how I got so lucky tonight,\" I mumbled, wrapping my fingers around the base of his cock and stroked from root to tip, my thumb brushing around the precum there ever so gently.\n\n\"Me neither. Usually, these parties are filled with spoiled brats and prospecting gold diggers. Most of the women are all too eager to fuck anyone and everyone.\" While he spoke, Devon's hands were between my legs, rubbing, searching, with just the right amount of pressure.\n\n\"Isn't that why men come to these things?\" My voice was breathier, higher, as the broad pads of his fingers worked their clever magic.\n\n\"I won't lie and say I haven't lusted after those women, but it's a rare delight to meet someone different. Someone so shy and reserved that all I want to do is coax her open and find out what drives her wild.\" There was a smokey, sensual quality to his voice, like a smooth brandy with a harsh whiskey finish. \n\n\"When you got off the Sybian after cumming so hard, it took every ounce of my willpower not to fuck you then and there...\"\n\n\"I don't think I would have minded that,\" I purred as his crooked fingers beckoned my pleasure forward.\n\n\"Should I get a condom? I always do but if you happen to be on birth control...\"\n\nI couldn't help but quake at the thought of him cumming inside of me. I'd only had one man cum in me before, and he'd barely started before he was finishing, but I still remembered rubbing my semen-slicked pussy until I orgasmed. \n\n\"Not that I've needed it for the past six months, but yes,\" I whispered. \"And I really want you to fill me up with your cum, Devon.\"\n\n\"I want that too.\" He laid on his back, his cock twitching against his belly, his balls hanging pendulously below, heavy with seed. \"I want you to ride me like you were riding that Sybian... You looked so beautiful, letting go like that.\"\n\nI'd never been on top of a man. I'd never really done much with a man period, so I was hesitant at first as I straddled his hips. But he looked so sexy sprawled beneath me, possessing me with his gaze, that I let a wanton part of me take over. A part that was sensual and seductive and shameless.\n\nWith my dripping cunt hovering over the crown of his manhood, I reached back and guided him to my tight entrance, before gradually taking him inside. Both of us moaned at how good it felt for him to be filling me, stretching me, claiming me. Looking down, I saw his shaft disappearing inside my flared cunt. The heady smell of our raw sex filled my nostrils.\n\n\"Oh, Devon, I've never taken a man so deep inside before...\" \n\n\"Does that feel better than some plastic dick?\" he grunted, arching his hips to get deeper. \n\nMy fingers twined with his as I held on for better leverage.\n\n\"Fuck yes, so much better. You're so thick... and long... and hot... Although you don't vibrate nearly as much,\" I teased breathlessly when I started fucking him.\n\nDevon laughed, thrusting back up in a rapid pistoning motion while I rolled my hips. His large hands grabbed my breasts, pinching my nipples gently, then hard, and then he pulled me closer so he could suckle them. The skilled motion of his mouth and cock more than made up for his lack of vibration. \n\nWhen I straightened up again, he yanked my hips down hard until he was finally sheathed to the hilt. I ground my clit around on his nest of pubes, loving how perfectly he filled me. Then I started rocking my hips for my own pleasure while his hands fisted restless on my thighs. I knew that Devon wanted to take me harder, to command my rhythm, but he restrained himself. I could almost see his muscles strain as he resisted the urge to pump me on top of his cock like any other fucktoy. \n\n\"Oh, fuck Devon, I'm about to cum... Can you feel it?\" I was bouncing on top of him in between churning my hips around. \n\n\"Yes, Angel, cum for me... Cum all around my cock,\" he commanded huskily.\n\nHis words and voice, tinged with desperation, broke the surface of the sweet tension building inside. A tidal wave of ecstasy crested and broke, then several more followed in its wake as I rode out my orgasm for as long as I could. \n\nWhen he flipped me onto my back, I thought he was going to slam his cream-coated dick right back inside of me. But he didn't. He took his time kissing me all over, nibbling and tugging on every part that ached for his attention. When he lowered his mouth to my sex, I felt like he'd found an exposed bundle of nerves.\n\n\"Please, Devon, fuck me! I need you to fuck me,\" I begged.\n\nIn an instant, he was stretched over me, his cock brushed against my thigh as I wrapped my legs around him. \"Is this what you want, Nina? For me to pound your pretty pussy?\"\n\n\"Yes, please!\" I groaned as he rubbed his cockhead over my labia.\n\n\"Fill you up with my cum?\" he snarled, circling my entrance.\n\n\"Yes, Devon, fuck me and fill me up with your cum. I need it so badly, please!\"\n\nFinally he notched the broad head of his cock inside my cleft and I lifted my hips up to meet him. The impact of his weight when he first entered me bordered on painful \"Unngg, Devon,\" I whimpered, nails digging into his shoulders.\n\n\"Does that feel good, Nina?\"\n\n\"So good,\" I cried.\n\nDevon began stroking in and out, his eyes on mine or looking down at where our bodies joined. He fucked me, but not hard and fast like someone racing towards his own release; he fucked me deeply, deliberately, for both of our pleasure. He was so gorgeous, his abs rippling while his hips circled around, his muscles straining, sweat gathering on the valley above the cupid's bow of his top lip.\n\n\"Your pussy feels so fucking good, angel. So tight. So perfect...\" And his tempo increased ever so slightly.\n\nI could tell we were both nearing a climax. I could feel him getting harder and thicker inside me, feel him hitting my sweet spots repeatedly, relentlessly. His movements became more desperate, his groans more urgent, his need delving inside of me. \n\n\"Oh, god, Devon, I'm so close... Oh, fuck yes, right there,\" I moaned as he lifted my ass, angling so his cock rubbed against my g-spot. He was screwing me into the mattress, his balls slapping against my ass as his frenzied race to our release reached its crescendo. I barely recognized the sound of my own wails.\n\n\"Yes, give it to me, Nina. I love feeling you cum around me...\"\n\nUnlike the orgasms I'd felt on the Sybian, this one unfurled petal by petal, a slow burn that ended with a sudden blossom of flame. I called out Devon's name as it consumed me, skimming over my nervous system as it radiated out from my core. As if this triggered his own release, he seized up, swearing and grunting with primal force. I could feel his cock pulsating as he shot his load in the very depths of me, his heart beating frantically as he collapsed a moment later, completely spent.\n\n\"Fuck, Angel, I haven't cum that hard in a long time...\"\n\n\"Me neither.\" \n\n\"Not even on the Sybian?\"\n\n\"It was intense- but it wasn't the same as having the real thing.\"\n\n\"Hmm... I know what you mean. It's like the difference between being with a fucktoy and being with a flesh and blood woman. Nothing compares to the real thing. And you're the real thing.\"\n\nI felt my cheeks burn. \"I like you a lot, Devon. I think we should go out sometime.\"\n\n\"I think so too. Although I hope you're not just interested in me for the sex.\"\n\n\"No- but that's the main reason.\"\n\nDevon turned me onto my stomach, slid his hand between my hip and the bed, and cupped my cunt in his palm. I moaned as his thumb rubbed around my interior, spreading his semen around as he massaged my swollen tissues. Then his body was stretched over mine and his cock was stiffening up against my thigh. \n\n\"I love feeling my cum inside you, Nina. I think I'm going to have to give you some more.\" And he shoved a pillow where his hand had been, angling me just right to sink in balls-deep.\n\n***\n\nI lost track of time in Paradise, and when we came back to earth, there was an air of desertion. Set pieces, curtains and signs were being taken down, toys cleaned and packed away, wine glasses and trash cans stuffed with used condoms were being emptied. It was like a carnival being taken down at closing time.\n\nWe were both wearing our masks again, but I felt that now I could almost see the rest of his face beneath it. We were also sporting JBF hair, a look that Devon wore very well, and that I would hopefully get more accustomed to. That and the feel of his cum leaking out of my pussy. My lips felt puffy and sore from all the kissing we'd done, and how long I spent cleaning my juices from his cock.\n\n\"I hope we haven't stayed too late,\" I whispered as we walked down the hall, since it felt more like a museum than a party house. \n\n\"Don't worry, there are always stragglers and overnighters,\" he said, gesturing to several people sleeping, naked and entwined together in heaps of exhausted passion.\n\n\"Well, I should probably order a Lyft.\"\n\n\"That's right- you came here with the Devil, didn't you?\"\n\n\"Yes I did- and I doubt she waited around to give me a ride.\"\n\n\"Let me take you home then.\"\n\n\"Oh, I don't want to put you out-\"\n\n\"Please- I insist.\"\n\nWhen we reached the front entry, a fool waiting near the door stopped me and counted the pins I was wearing. \n\n\"Congratulations, Miss,\" he said, handing me a stiff cream envelope.\n\n\"What's this?\"\n\n\"Door prize,\" Devon clarified. \"Find out what you won.\"\n\nI broke wax seal and pulled out the contents. \"Wow- dinner for two at Magnolia's. Valued at a hundred and fifty dollars! Oh my god, that's enough to pay Whitney back for the mask...\"\n\n\"Then let me buy it from you,\" he offered, pulling out his checkbook.\n\n\"Oh, no,\" I said blushing. \"I wasn't trying to get any money from you. I wouldn't have even gotten these if you'd hadn't been with me. You should have them.\"\n\n\"No, please, let me pay. My girlfriend's been begging me to take her there.\" And he began scribbling in the amount.\n\nI was stunned and when Devon handed me the check, I wanted to rip it up until I spied what he'd written on the 'notes' portion.\n\nApril Fool.\n\nI looked up, grinning. \"You jerk- I thought you were serious!\"\n\n\"Rarely,\" he chuckled. \"Unless I'm asking a beautiful woman to dinner.\"\n\n\"Is that your way of asking me out Mr.- Guillard?\" I read on the check he'd handed me. \"Isn't this Guillard Estate?\"\n\n\"Yes it is.\"\n\n\"So that's your home?\" I asked in disbelief.\n\n\"It's too large for me to call home. I mainly rent it out for events,\" he said with a shrug.\n\n\"Then this is your party too?\"\n\n\"Sort of. My father founded the Swamp Fox Society, and now that he's passed, I'm the Chairman of the Board, but mainly because the proceeds of our events go to charity. I didn't quite inherit the old man's fox hunting ways.\"\n\n\"I see... Then I really did catch a fox tonight, huh?'\n\nA silver car pulled around and a chauffeur stepped out to open the back passenger seat, but Devon stopped him. \n\n\"I'll be driving the young lady home, but thank you,\" he said, opening the door for me. \n\nWhen we got in the car, I wondered aloud whether Whitney would actually do her portion of the project if I paid her back for the mask. \n\n\"She might if she knew you had some leverage,\" Devon said slyly.\n\n\"What do you mean?\"\n\n\"Well, strictly speaking I'm not supposed to tell you this, but I happen to know who your frenemy's date was- and I don't think it's a piece of information she'd like getting circulated around the rumor mill.\"\n\n\"Oh? Why not?\"\n\n\"Because he's her father.\"\n\nRemembering what she'd said about her 'Daddy' being on the board, I realized Devon was telling the truth.\n\n\"I would never spread that kind of rumor though...\"\n\n\"I know that. But she doesn't.\"\n\nI couldn't imagine what would stun her more- that I knew one of her dirty secrets, or that I went home with Devon Guillard.\n\n\"Wow, this April Fools' Day sure has been full of surprises...\"\n\n'It certainly has been,\" he agreed, taking my hand. \"Though technically, it's no longer April first.\"\n\n\"Good, cause you know what comes after April firsts?\"\n\n\"What?\"\n\n\"April seconds.\""
    ],
    "authorname": "Alice_Rosaleen",
    "tags": [
        "exhibition",
        "voyeurism",
        "mask",
        "group sex",
        "erotic couplings",
        "orgy"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/angel-devil-phantom-fool"
}