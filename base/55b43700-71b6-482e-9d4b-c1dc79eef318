{
    "title": "You're Alex?",
    "pages": [
        "All of my writing is fiction, and the stories and characters are all products of my imagination. They were created for my fun and, hopefully, your enjoyment. Some of the events in the stories are not particularly condoned nor encouraged by the author but are there to create and enhance the story of the imaginary characters and their lives. Comments are always encouraged and carefully reviewed. All characters within the story that need to be are 18 years of age or older. I hope you enjoy! And take a second to vote and comment.\n\n<center>* * * * *</center>\n\n\"Did you get copies of your transcript, Alex?\" Angela Slagle's lips formed a tight line as she finished the question.\n\n\"Yes, I got them, mother,\" Alex replied, well aware that her mother was unhappy with her.\n\n\"It's very disappointing that you're so intent on doing this.\" Her voice was low and almost menacing as she confronted her daughter.\n\n\"It wasn't me who decided to move to Florida, Mother.\" Lately, Alex was beginning to stand up to her mother. She knew now that many of the rules and disciplines her mother and father had enforced were, as far as Alex was concerned, totally unreasonable. At an earlier age, she was unable and unwilling to rebel or resist, but now she was eighteen and much stronger-willed than she had been.\n\n\"Don't you dare get smart with me, Alex? I'm still your mother.\"\n\n\"I know, and I'm your daughter, and always will be. But I'm eighteen now, and, in the eyes of the world, I'm an adult.\"\n\n\"Just because you're eighteen doesn't mean you know all you need to know to get by in that world.\"\n\nAlex wanted to reply that she didn't know those things because her parents had so sheltered and controlled her that she hadn't been allowed to learn the things she needed. That was about to change, though.\n\n\"I'll learn a lot of it at college, I'm sure, Mother.\"\n\nAlex received a cold stare from her mother. \"I'm afraid you'll learn mostly the wrong things, Alex. That's why I want you in Florida with us, so we can be sure of what you're learning.\" Her attempt at a smile was weak and awkward.\n\nAlex eyed her mother, realizing that if she went to Florida with her parents and did her college there, she'd learn math and English, but not what she was anxious to learn and the things she wanted to experience. That's why she was nearly defying her parents, insisting on staying in Ohio and going to school there. There was one thing in particular that she wanted to learn, experience, whatever, even though it terrified her even to consider it.\n\n\"I still don't know how you're going to manage staying here. It's so expensive,\" Angela said, shaking her head.\n\n\"You guys are paying the tuition, and I've been saving. Plus, now that I'm eighteen, I can use the money grandpa left me.\" She'd been watching that money grow over the years and was anxious to use it. She was also sure that her parents had no idea how much was in the account. Her grandpa had set it up that way purposely. And this was her chance. She didn't want to live in a dorm, much to her parent's chagrin. She wanted an apartment and might be willing to have a roommate if she had to. It was a small price to pay for the freedom she was longing for. Plus, it might be fun to have someone else around to talk to. She'd been denied that as an only child.\n\n\"I just worry, Alex. This is such a change for you, honey.\" Her mother's tone was mellowing.\n\n\"I know, Mom. You just have to trust that you've raised me right and that I'll be fine.\" She sent a big smile toward her mother.\n\nAngela sighed. \"I hope so,\" she said, a certain lack of confidence in her voice.\n\nAlex was a little surprised at this reaction, as she thought her mother would have had more conviction that the eighteen years of parenting they'd completed had accomplished what they hoped for. They had certainly been able to keep her mostly in the dark about most of the \"other side of life,\" as her mom liked to call it. Despite her parents' many cautions, she was anxious to do at least a little exploration into that \"other side.\" Her parents would be moving before school started, so she'd be on her own early, a couple of weeks before school began. Her mother insisted on helping her find an apartment, and she had no way to refuse that and was comfortable with her helping since she'd be leaving soon.\n\nThey found a place that Angela thought would be acceptable, given that Alex patently refused to live in a dorm. Thankfully, Alex liked it as well and was anxious to move in. The apartment was one of the center units in a four-unit flat. It had two bedrooms, a living room, a small eating area, and, of course, an equally small kitchen and bathroom. The rent was a little higher due to the two bedrooms, but she could more than offset that by splitting the cost with a roommate.\n\nAlmost before Alex was ready, her parents had left, and she had moved into the apartment. She was registered for her classes, had her books and supplies ... everything but a roommate.\n\nTwo weeks to go.\n\nShe printed several notices and posted them on bulletin boards around the campus. She was nervous since she needed the roommate and their money to afford the apartment \u2014 at least without diving too heavily into her grandpa's money. If she had to give up and move to a dorm, it would be a defeat in the first thing she had done as an adult, and that wasn't going to happen. That just couldn't happen. But, so far, she had no responses to her notices.\n\nThe one luxury she'd allowed herself was cable TV. It also included the internet, which she needed for school. She was flipping through the mostly useless channels when there was a knock on the door. She opened it to see a tall, relatively handsome, youngish-looking male, his face changing from a smile to a look of puzzlement.\n\nHe coughed nervously and said, \"Oops.\"\n\nAlex raised her eyebrows. \"Oops?\" she questioned.\n\n\"Oh, sorry,\" he continued. \"I was, um, responding to the paper on the bulletin board about a roommate. It said to see Alex.\"\n\n\"I'm Alex,\" she said with mixed emotions.\n\n\"You're Alex? Guess I'll try again,\" he said despondently and turned to leave.\n\n\"Wait.\" Was she really going to do what had just popped into her mind?\n\nHe stopped.\n\n\"Are you having trouble finding an apartment?\"\n\n\"Sure am. Everything is filled, and I don't want to live in a dorm.\"\n\nAlex smiled. \"Same here,\" she said, biting her lower lip. She took a deep breath. \"I need a roommate. You're looking for a place to stay.\" She ended with a questioning look on her face.\n\nHe looked at Alex, then sort of shook his head. \"But you're a girl,\" he said softly.\n\nAlex giggled. \"I know,\" she replied, \"but we're both desperate. Do you think we could try this, you living here, with me, while you look for something else?\" She felt her cheeks reddening and couldn't believe she'd said that, knowing her mother would be having a cerebral hemorrhage if she'd heard the words. But, she'd said them, and it was now up to ... \"What's your name?\" she added nervously.\n\n\"Jamie, I'm Jamie,\" he sputtered out, looking at this girl who had just invited him to live with her. She was youngish-looking but pretty. Reasonably tall, but with the sweatpants and sweatshirt she was wearing, he couldn't tell much else about her except for the long and disarranged brunette hair and the brown eyes that were looking at him, waiting for an answer. For him, who had had only two dates in his life, this was like a fantasy waiting to happen. Finally, his Adam's apple bobbing, he said, \"Yeah, I'm okay with it if you're sure you are.\"\n\nIt was now or never. \"No reflection on you, but I don't have a lot of choices if I don't want to bankrupt myself.\"\n\nJamie laughed a little nervously. \"I, um, have my things in the car. Should I just, well, move in right now?\"\n\n\"If not, you'll be staying in your car tonight, right?\"\n\nHe shrugged. \"Yeah.\"\n\nTaken aback by what was happening so quickly, Alex looked into the apartment, checking things out as if a little mess would keep Jamie from moving in.\n\n\"Sure, bring it in,\" she said. \"Can I help you carry something?\"\n\n\"You don't have to do that. I can get it.\"\n\nAlex still followed him to his car, an older model that she wasn't sure she recognized. It was full of bags and boxes and miscellaneous items scattered on the floor of the back seat.\n\n\"Sorry, it's such a mess,\" he apologized.\n\n\"As of two minutes ago, we're roommates, and we'll get used to seeing each other's messes,\" Alex said with a laugh.\n\nJamie's body warmed when she said \"roommates,\" as that thought was finally working its way into his brain. Also, he liked the sound of her laugh... and her voice. He was going to be rooming, living with, ... a girl. Thoughts were racing through his mind at breakneck speed, and he hoped he'd be able to handle them all. He certainly hadn't prepared himself for this and would have to learn to handle it day by day. He wasn't even sure he'd be able to talk to her without stammering.\n\nAlex grabbed a couple of bags and followed Jamie toward the apartment, sizing him up as she walked. He was three or four inches taller than she was, solidly built with reddish hair and a few freckles. He came across as very, very shy, which made her much more comfortable as it closely matched her own demeanor. She hoped they weren't both so shy they'd not be able to talk together but doubted that would be the case.\n\nSince Alex had already been living in the apartment, Jamie took the empty bedroom. Like hers, it had a twin bed, a small closet, and two dressers with four drawers each. He looked around. \n\n\"I, um, I think what I have should fit in here.\"\n\nThey made a second trip to the car with Jamie telling her once again that she didn't have to help. \n\nShe decided to say something.\n\n\"Look, you don't have to treat me like a girl, being so polite and all. We're just roommates now, and we'll share what needs to be done. Sound okay?\"\n\n\"Sure,\" he replied, watching Alex as she stretched into the back seat to get a couple of bags. Seeing her butt stuck out toward him, even in the sweatpants, he knew he wasn't about to forget she was a girl. This was going to be an exciting time; he could sense that.\n\n***\n\nAlex sat on the old couch in the living room, watching through Jamie's bedroom door, as he unloaded his bags and boxes and stashed everything away. She was too far away to see clearly, of course, but it didn't seem that he had many clothes, and what he did have were quickly put away and out of sight. When he was finished, he came to the living room, glanced at Alex and the couch, then went to the overstuffed chair and sat down.\n\n\"Thank you so much,\" she said sincerely. \"I didn't know what I was going to do. Looks like it's a good thing we got together,\" she replied to a nod from Jamie. They talked about the rent, and he was more than happy as his share was less than he'd been planning to spend. \"I just thought of something,\" Alex said. \"I don't know about you, but my parents would have a seizure if they knew you were my roommate.\"\n\n\"Yeah, it's, um, a little different for a guy, I guess, but my mom would think I'm some kind of a pervert, rooming with a girl.\"\n\n\"But here's the good news, if there is any,\" she laughed. \"I'm Alex, and you can tell that to your mom, and she'll think ...\" She raised her eyebrows.\n\n\"Yeah, cool. Sounds like a guy.\" Jamie had a delighted smile.\n\n\"And you, Jamie. My parents will be satisfied with that name.\"\n\nThis odd arrangement was working out better than either could have planned. And, already, Alex was beginning to think of something else. If she was going to rebel and learn about that \"other side of life,\" this might help that happen. But, too early to be thinking that way just yet.\n\nThey discussed class schedules since they could impact the bathroom schedule. Alex had an eight o'clock every day while Jamie's earliest was ten. They both had a three o'clock, so they'd be getting home at the same time, which could make dinner much simpler. And, they spent a good bit of time talking about dinner and how that was going to work. Alex's mother had dutifully taught her daughter all she'd known about cooking, and, surprisingly, Jamie had helped his single mother with the cooking too.\n\n\"Are you a neatnik,\" Jamie asked suddenly.\n\nThe question took Alex by surprise. \"A little bit, I guess,\" she answered, chuckling.\n\n\"Good,\" he said decisively. \"I'm not, but I need to be. At least better than I am. This may help.\n\nThe next morning, Alex was up early and took her shower, checking to be sure the bathroom door locked securely. When she was finished, she put on her robe, tied it tightly, and hurried back to her room to dress. There was no lock on the bedroom door, but she wasn't worried about Jamie barging in there. She dressed, grabbed a light breakfast, and was off, walking the several blocks to campus. She intended to get off to a good start in college and was early for every class. She'd decided to wear shoes that looked nice but would be comfortable. \n\nShe quickly discovered her assumption was only half correct. She did look nice, but by the end of her day, she was miserable, almost limping by the time she returned to the apartment. Jamie was already there, lounging on the couch. As she came through the door, Jamie turned to say hello and started.\n\n\"What's wrong?\"\n\n\"My feet,\" she said, her pain obvious in her voice.\n\n\"Sit here,\" he said, jumping up.\n\nAlex sat down and carefully removed her shoes, tossing them away.\n\n\"Stupid choice,\" she said, disgust in her voice.\n\nJamie watched her, the expression on his face changing. He was obviously debating with himself about something. Finally, his lips pursed, he decided.\n\n\"I have an older sister,\" he began as Alex raised her head to look at him.\n\nWhere was he going with that?\n\nHe took a deep breath and continued. \"She had, um, lots of foot problems, with her arches ... and other stuff, too.\"\n\nAs he took another deep breath, Alex continued wondering where he was headed.\n\n\"I got really good at giving her, um, well, foot massages. She got so she loved them.\" He paused for a second, watching Alex's eyes widen, his nervousness evident. \"I'd, well, you know, be happy to do the same for you.\"\n\nAlex's cheeKs reddened in unison with Jamie's. Had he actually offered to give her a foot massage? His red face was a little reassuring as she decided he wasn't hitting on her. It was still far outside of what she could imagine. But, she was experiencing something entirely new to her. The idea of Jamie giving her a foot massage was affecting her heart rate and her breathing. The only thing she could possibly tie it to was her recently begun exploration of porn on the internet.\n\n\"Thank you, Jamie, but I couldn't ask you to do that.\" As she said that, she felt her cheeks redden even more, barely keeping pace with his. She had said it but wasn't sure she meant it.\n\n\"You didn't ask; I volunteered.\"\n\n\"I know, but still.\"\n\n\"We're roommates, and I can help out.\" He wasn't going to let it go.\n\nNow Alex was torn. Her feet were hurting, and this guy she had just met yesterday was offering to make them feel better. They were roommates, if awkwardly so. Maybe she needed to relax and let the feelings she was experiencing lead her.\n\n\"You sure?\"\n\nJame quickly sat down on the other end of the couch and looked at Alex.\n\nThe moment was here. Could she put her feet in ... in Jamie's lap? She'd never done that with any boy. She'd never done much of anything with any boy. It seemed so ... intimate was the word that came to mind. Jamie was watching ... and waiting. She decided and lifted her right foot and carefully laid it in his lap.\n\n\"Probably stink,\" she said with a nervous giggle, hoping it wasn't true.\n\n\"I doubt it.\" \n\nHe watched the second foot settle into his lap. Carefully, Jamie lifted one foot and began to massage the sole, noticing that his heart was beating harder than it had been just a minute ago. Her feet seemed much softer than his sister's had been. Added to that, her tight pants ended just below her knees, and her calves were at least partially on his lap as well. He continued to massage, moving from heel to arch, to the ball of her foot, and finally to her toes. He was switching feet periodically and enjoying every second of what he was doing.\n\nAlex was certainly not his sister.\n\nAlex watched as Jamie worked on her feet, amazed at how satisfying it was. The pain was nearly gone, and she began to observe Jamie. She was sure his shyness matched her own. But she wondered where that shyness had come from, as he was certainly what she'd consider handsome, a word she used sparingly. He wasn't athletic but seemed fit, probably from doing hard work. By this time, the massage had gotten so enjoyable that she wondered and hoped it could happen again in the future. In the meantime, she'd enjoy the sensations that were flooding her body. \n\n\"Is it helping?\" he asked, interrupting her reverie.\n\n\"Oh my gosh, yes,\" Alex replied, much more enthusiastically than she had intended, and she felt the heat in her cheeks once more. \"I mean,\" she stammered, \"it's really helped. My feet feel great.\"\n\n\"Good,\" Jamie said, his mind perfectly in agreement with Alex that her feet felt great.\n\n\"I need to do something to make this up to you,\" Alex said, already feeling more comfortable with her extraordinary roommate. As she said it, she prayed she had evaluated Jamie and his shyness correctly as she was giving him the opportunity to embarrass her horribly.\n\n\"How about you cook dinner tonight, and I'll do tomorrow?\" he said, a big smile on his face.\n\nAlex breathed a silent sigh of relief. \"Deal,\" she said, noticing that Jamie was still holding one of her feet. \"First things first, though. We better get some food.\"\n\nJamie chuckled. \"Good idea.\"\n\nAlex gently tugged her foot, and Jamie released it, a self-conscious look on his face. But she enjoyed that he held onto her foot after the massage had ended.\n\n\"Sorry,\" he mumbled.\n\n\"No apologies. Thank you for that unexpected surprise. I was in misery, and now I feel great.\" And excited she thought.\n\n\"That's great, then, but if you want, I'll run to the store, and you can rest here.\"\n\n\"I've got some Nikes, and I'll be fine with them as long as you drive. I'll be right back.\" \n\nAs she lowered her feet and rolled off the couch, her short, light-weight sweatshirt rode up her back far enough to reveal the bottom of her bra strap. Jamie marveled at the pale purity and smoothness of her skin. He'd seen girls in bathing suits and other skimpy clothing, but this was different, seeing this girl in this place. He determined at that moment that Alex was a beautiful girl.\n\nAlex quickly resettled her shirt, not looking at Jamie. She vowed to be more careful about that in the future, at the same time realizing that there was a high probability of other accidental exposures over the school year. Coupled with that, she wondered what it would be like if Jamie saw a little more of her than an accidental peek at her back. She knew it was the erotic stories she was reading at the website she had stumbled across. \"Erotic\" was a word she'd never heard spoken in her house\u2014she'd looked it up to be sure she understood it, even if she never spoke it. And it all fit in with learning about the \"other side\" of life.\n\nAnd Jamie, despite his shyness, was hopeful that another foot massage might be in order.\n\n***\n\nShopping at the grocery store was an interesting experience indeed. After ten minutes, they vowed to never do it again without making a list. Jamie pushed the cart, and Alex gathered the things she thought they'd need. It was a unique experience for her. They'd known each other for just a couple of days, but here they were, shopping like a married couple might do. What other similar experiences were in store for her?",
        "As they stood in line waiting for the person in front of them to be checked out, Alex was watching that process carefully, and for the first time, Jamie was able to study her without her being aware. He had decided she was a pretty girl but seeing her in profile only enhanced that opinion. She still looked younger than she was but seemed like she was smiling, even when she wasn't. He'd sort of seen her legs, at least part of them when he was massaging her feet. They were longer than he had first thought, and, even in the pants she was wearing, he could tell they were shapely. The final thing he noticed, since she was standing very straight and erect as she watched, was that the front of her light sweatshirt stood out quite a ways from her body, telling him she didn't lack in the boob department. He wondered why fate had smiled on him so favorably.\n\nAs they were checking out, Jamie noticed that most of the food was foreign to what he was used to eating. He was apprehensive about how that might work. How would he adapt to eating differently? He'd heard his uncle say that's what happened when you got married \u2014 you adapted to the eating habits of your wife. Jamie felt his cheeks getting warm as that thought zipped through his head. Still, this might be similar.\n\nJamie paid despite Alex's protestations that she had money.\n\n\"We'll settle when we get home,\" he assured her. He really needed to settle later as he didn't have the money to be paying for everything. And, he remembered her telling him that first day that she had money her grandfather had left to her. She didn't mention how much, but anything was more than he had.\n\n\"You up for hamburgers and tater tots?\" Alex asked when they were back in the car.\n\n\"Sounds normal.\"\n\n\"Normal?\"\n\n\"Used to eating hamburger, ... mac and cheese, and Raman.\"\n\nAlex eyed him for a few seconds. \"Listen,\" she said, blushing slightly, \"I don't want to offend you.\" She paused, but Jamie didn't look at her. \"I want you to let me pay for groceries.\"\n\nJamie held up his hand to stop her. \"No way,\" he said decisively. \"I can't let you do that.\"\n\n\"I think I told you my grandfather left me some money, and I want \u2014\"\n\n\"No!\" He interrupted a little more emphatically than he had intended. From the corner of his eye, he saw Alex flinch. \"Shit, I'm sorry,\" he added quickly, glancing at her, now doubly sorry due to his language.\n\nAlex watched as it was Jamie's turn to blush. She was trying to decide what to say next. She realized she had sort of insulted his masculinity and, even though they were just roommates, that characteristic seemed to be a part of the male gene pool. She had crossed the line. Even though she hadn't intended to offend Jamie, she knew she had. He was a male, and that wasn't going to change. \n\n\"Okay, we'll let that rest.\" She didn't want to start their time together with an argument.\n\nOn the drive back to the apartment, Jamie was chewing his lower lip. \"I should have said thank you. I guess I'm not used to people, you know, being nice to me.\" He pulled into his parking place.\n\nAs Alex climbed out of the car, her cell phone rang. She glanced at it. \"My mom,\" she said.\n\n\"I'll carry the groceries in, no problem.\"\n\nAlex smiled at him. \"Hi, mom.\"\n\n\"Hi, honey. How's everything going?\"\n\n\"Great, mom. It's only been a couple of weeks.\"\n\n\"I know, but I want college to be a good experience for you.\"\n\n\"I'm sure it will be, Mom. Probably be a couple of bumps along the way.\"\n\n\"Oh, I hope not, Alex.\"\n\nThere was no way to answer that; her mother was always foolishly confident that her daughter's life would be flawless and free of problems, despite her insisting on staying in Ohio.\n\n\"Just be sure you do things the way you've been raised to do them,\" her mother cautioned her. It sounded so simple and so like her mother.\n\nAlex gritted her teeth. A big part of why she was going to school in Ohio and not in Florida was so she didn't have to do things the way she had been raised to do them. She just needed the pluck to begin doing it.\n\n\"You don't need to worry about me, Mom. I remember all the things you've taught me.\" She wanted to add, \"and I'm going to do my best to ignore as many of them as I can.\"\n\n\"That's good, dear. You be careful, now.\"\n\n\"I sure will, Mom. You guys have fun in Florida.\"\n\nThey hung up. Alex had the entire school year to learn to be just a little bit bad. After her mother's call, though, she was itching to get started. She hurried inside as she was anxious to help stow the groceries so she'd know where things were. Jamie had gotten the refrigerator stocked and was starting on the cupboards.\n\n\"You like beer?\" she asked suddenly.\n\nJamie's head snapped around. \"What?\"\n\n\"You heard me,\" she giggled, feeling the heat in her cheeks.\n\nHe turned and looked at her, obviously puzzled. \"Only tasted it once.\"\n\n\"How was it?\"\n\n\"I don't remember much. It was okay, I guess. Why?\"\n\n\"We're in college now. We should be drinking beer, right?\"\n\n\"I can't afford to buy beer, and we're only eighteen.\"\n\n\"Good point,\" she said, disappointment in her voice. She'd have to find another way to rebel.\n\nShe cooked hamburgers and heated Tater Tots in the microwave. Two plastic containers of peaches were opened, and dinner was served. Their first meal together.\n\n***\n\nThe shower arrangement was working well with Alex showered, dressed, and off to class before Jamie was up. They did spend most evenings together, studying and talking, learning each other's backgrounds, hopes and dreams. They found that, in some ways, they were a lot alike. While Jamie had always been poor, he and his mother scrambling to pay their bills, his older sister long gone. Alex had always been well-cared for but, like Jamie, had been very restricted in her activities and experiences.\n\nShe had quietly begun doing something she had never dared do in the past. She was probing the internet, looking at porn for the first time. She was trying to avoid real hardcore but was only partially successful. It didn't take long for her curiosity to overcome her caution, and she saw things she hadn't imagined. One of the results was an expanding interest in her own body. \n\nHer room had an old and slightly yellowed full-length mirror, and she found herself standing in front of it, sometimes naked, as she compared her body to those she saw on the internet. She was surprised that, despite her natural self-doubt, she compared favorably with most of the ladies she saw. She had never considered herself in that way before as her mother almost forbade it without using that word. With her mother's prudish attitude, she wondered how she'd ever been conceived.\n\nOne of the porn sites had an ad for an erotic literature site, and she had gone to it, hesitantly for sure, but had read some of the stories and, despite her upbringing, found herself jealous of the experiences of some of the women. Plus, the way her body reacted to some of the things she read surprised her. All of this was causing her to view Jamie a little differently, too. After all, he was a male and probably had all those things ... guh. She wondered if he was looking at her in the same way. After all, he was a male.\n\nIn line with Alex's thinking, things were also changing for Jamie. He'd never had a girlfriend and, in fact, had never even been friendly with girls, his poor upbringing making most of them avoid him. But here he was, living with a girl that he was finding more fascinating with each passing day. Still, she was his roommate and maybe his friend, but nothing more. His experience from all those years made him reluctant to think of her in any other way.\n\nIt was nearly nine o'clock on an unusually warm September evening, and Alex and Jamie were diligently studying when Alex became aware of a drop of perspiration dripping down her chest between her breasts. She thought for a second, glanced at Jamie, and headed for her room. In her top dresser drawer, she found what she was searching for \u2014 a shirt she had purchased since she'd been at college. It was a bright orange, sleeveless T-shirt with two narrow straps that went over her shoulders. The front was lower than anything she'd ever worn, and when she looked at herself in the mirror, there was an inch, or maybe more, of cleavage clearly visible. She took a deep breath and headed back to Jamie.\n\n\"How's it going?\" she asked, heading directly toward him.\n\n\"Good,\" he said, still looking at his book. He lifted his head, smiling at her until his eyes went wide, his mouth dropping open.\n\nGathering every iota of courage she possessed, she said, \"How do you like my new shirt?\"\n\nJamie, however, wasn't checking the shirt. He was much more interested in observing all those parts of Alex that hadn't been visible previously. He determined, at that very instant, that she was utterly gorgeous. He was speechless.\n\nAlex watched his reaction, her heart racing as she had never been looked at this way before. \"Well,\" she forced herself to say, \"do you like it?\"\n\n\"Yes, you, you look great,\" he stammered. Then, realizing what he'd said, he added, \"It looks perfect on you.\"\n\n\"Thanks,\" she said. \"I love it.\" Satisfied, she plopped into the chair and went back to studying.\n\nJamie wasn't going to get much studying done as long as Alex, in her orange shirt, was in the room with him. He kept sneaking glances at her, and she obliged him by keeping her eyes on her book. Her skin was pale, smooth, and flawless. His mind was toying with him, tormenting him as he fought the desire to touch her, to run his hands over that skin. At that moment, that was as far as his thoughts went. Even that was causing labored breathing.\n\nHis near-agony went on until Alex finally decided it was time for bed. She stood, yawned, and stretched, the orange shirt pulled tight across her ample breasts.\n\nJamie felt his erection being painfully constricted by his pants that were suddenly too tight. He glanced down to see a visible lump on the front of those pants and wondered if Alex had gotten a glimpse of it. He'd never been this close to a girl who looked like Alex. He pondered if she was tormenting him on purpose or, well, just being a girl. Either way, the result for him was the same. As he watched her disappear into her bedroom and close the door, he was hoping there'd be more torture in his future.\n\nAlex closed the door, closed her eyes, and bit her lower lip. She'd done it. It wasn't exactly flashing the crowd at a football game, but, for her, it was nearly the same. She realized she had forgotten to do something while she was with Jamie \u2014 she'd forgotten to check his pants to see if his penis had gotten larger, and she'd have been able to see the lump it would have made. She'd read about that in the stories and had seen enough in the pictures on the internet to be a little nervous about it. She understood what happened when boys and girls got together. At least she thought she understood. She needed to find out for sure.\n\nWhile she had been curious about Jamie's reaction to her orange T-shirt, she was startled by her reactions. Her heart had pounded, and it seemed like something was heating her blood. Even more puzzling were the feelings in her nether regions. She recalled a tingling and a sensation like her muscles were contracting. Despite their strangeness, she had enjoyed the feelings and was anxious to repeat them.\n\nJamie dropped his book on the table when Alex's door closed. He went quickly to his room, picturing what had just happened, his roommate in that orange shirt, exposing that gorgeous skin and, finally, stretching and displaying the breasts he hadn't seen quite lIke that before. He stripped off his clothes and climbed into bed. His erection had not diminished and needed to be taken care of, and that didn't take long to accomplish. He felt almost guilty somehow, masturbating while picturing Alex. It didn't diminish his pleasure, however.\n\n***\n\nAlex made a stop at a department store in the mall closest to the university. She had a small list of items she wanted to pick up. She was thankful for her grandfather's money as it allowed her to do some things she otherwise wouldn't have been able to do. As she selected the items on her list, she remembered the sensations she'd experienced when she'd worn the orange shirt in front of Jamie and was anticipating that some of her purchases would recreate those feelings.\n\nShe had one class left to complete her academic day, and when it was finally over, she raced to the apartment, hopefully getting there ahead of Jamie so she could prepare for her evening. She didn't see his car, and a smile crossed her face. She raced inside and to her room, anticipating what lay ahead.\n\nAbout ten minutes later, Jamie came through the door. He saw that Alex's door was closed, so he knew she was home.\n\n\"Hey, Alex. Want me to go ahead and fix some dinner?\"\n\n\"Oh, would you? That would be wonderful,\" he heard through her door.\n\n\"What should I fix?\"\n\n\"Surprise me,\" she called, giggling as she thought of how she'd be surprising him.\n\nJamie went to work, deciding to surprise her with some BLT's. Of course, as soon as the bacon began cooking, the surprise was spoiled.\n\nWhen the sandwiches were ready, he looked up to see Alex coming out of her room ... and his mouth opened slightly, his eyes wide. She was barefoot and had on a tight, white T-shirt, and two things were making his eyes dart from one of them to the other. First, there were the nipples clearly visible through the thin shirt, enthralling bumps surrounded by a dark circle. The second was her legs, long and bare under the cut-off jean shorts she wore, a vision that he had neither seen nor imagined in his short time with Alex. When she momentarily turned her back to him, the bottoms of her butt cheeks were visible below the shorts. What had happened to the shy and dowdily dressed girl that had become his roommate? Not that he wanted anything to change now.\n\n\"Yum,\" she said, \"they smell delicious. Which one's mine?\"\n\nShe was standing close to him, and, for the first time, he could smell her perfume, even over the aroma of the bacon. He had trouble concentrating on the sandwiches with those very erect nipples just a foot or two from his face.\n\nThey ate the BLT's, chatting about their day and plans for the evening, Alex noticing that Jamie's eyes danced between her breasts and her bare legs.\n\nFinally, when everything that needed to be there was in the dishwasher, Alex looked at Jamie.\n\n\"Could I ask a big favor?\" she said, a bright smile on her face, her courage ratcheted up by the looks she had gotten from Jamie. It was a step-at-a-time process, the way she had planned it and the way she wanted it.\n\nAt this point, Jamie wasn't about to deny anything that Alex wanted.\n\n\"My feet are sooo sore,\" she said. \"Could I get another massage, like the one you gave me before?\" She paused. In a very breathy voice, she said, \"it was fantastic.\"\n\n\"Would love to, yeah, sure,\" Jamie answered, remembering that first massage and hardly able to believe his good fortune.\n\nHe hurried to the couch and sat down. Alex quickly joined him, swinging her bare legs up and onto his lap. He was watching her legs and didn't see her nibbling on her lower lip. As he took hold of one foot, he saw the bright red polish that hadn't been there the first time. Even seeing that had his heart pounding. Massaging her foot while holding her leg, with occasional peeks at those nipples that were becoming more prominent, was causing another reaction, and he wasn't sure how he'd handle that. \n\nAlex had one of her textbooks and pretended to be studying, allowing Jamie to look at whatever he wanted to without worrying about her catching him. But she was aware of everything that was happening, even the growing lump in his pants where her foot was resting. She was thankful for the erotic stories she had been reading as they were helping her understand what she was feeling and things she could do to entice Jamie further.\n\nHe had started massaging the other foot and was further tormented by her sultry-sounding, \"Oh, Jamie, that feels sooo good.\" He glanced at her face, the eyes partly closed, her tongue caressing her upper lip. He thought he might pass out. But that simple yet sensuous look emboldened him, pushing aside at least a little of his shyness. One hand continued work on Alex's foot while the other inched a little further up her calf.\n\nUsing courage that Alex's actions had pulled to the surface, he said, \"This calf muscle feels a little tight. Is it sore?\"\n\nA smile crossed Alex's face as she heard Jamie's words. \"It's been sore all day, but I can't ask you to work on that too.\"\n\nJamie was able to tear his eyes away from Alex's nipples long enough to meet her eyes. \"I've got all my studies finished, so plenty of time to take care of you.\"\n\n\"Jamie, that would be great. I owe you big time.\" She sent him her biggest smile.\n\nThis time, Jamie let it lie that she owed him. That was sounding more appealing, even if he wasn't sure at the moment how to capitalize on her offer. He watched her slide forward so that her calves were now on his lap, resting uncomfortably on the erection that refused to disappear. He began massaging her calf, her skin soft and smooth.\n\nAlex loved the feel of his hands on her leg. Of course, she'd never had a boy touch her legs as Jamie was doing, and the tingling sensations coursing through her body were exhilarating. She'd looked up from her book a few times and caught him looking at her chest. Or, more explicitly, at her nipple bumps. Those had even surprised her, as she had never before had a reason for them to get so long and hard. \n\nFrom the time she had moved so that her calves were in his lap, she had felt his erection under whichever leg wasn't being massaged. She changed position just often enough that she could rub her leg back and forth on that delightful lump. She couldn't see any reaction on his face but wondered if it was accomplishing what she hoped. If Jamie were like the boys in her stories, he'd enjoy what she was doing. His massaging had worked its way nearly to her knees, and she would have loved to tell him her thighs needed massaged too, but that was a little beyond what she was willing to do ... at least this evening.\n\nAlex was reading those stories and learning about what boys and girls do. In the stories, the girls and women always enjoyed the sexual things that happened, and she hoped that was true and not a fictional fantasy. So far, the new feelings she was having verified what the stories told her and were making her ready to make her most daring move yet. Alex's cheeks were already red as her anticipation heightened. As she began to lean forward toward Jamie, her cell phone sounded. She exhaled sharply and swore under her breath, something she never did, as she swung her legs off Jamie's lap.\n\n\"Hello, mother,\" she said, working to keep the disgust from her voice.\n\n\"Hi, honey. Just thought I'd give you a call and find out how everything's going.\"\n\n\"It's all good, Mom. All good.\"\n\n\"That's nice. You and the roommate still getting along well?\"\n\nShe looked at Jamie and smiled. \"We're getting along fine.\" At least we had been getting along fine until you called, she thought.\n\n\"Wonderful. Maybe, if you come to see us at Thanksgiving, you could bring her along. I bet she'd like Florida.\"\n\n\"I'll have to check with Jamie. I'll, um, let you know when I get more information. How are things in Florida?\"\n\n\"We're doing well and getting used to the heat and the horrible humidity. We spend most of our time in the air conditioning.\"\n\nAlex's eyes were watching Jamie's, and she was wondering what he was thinking. She was trying to concentrate on the conversation with her mother while, at the same time, thinking about what was happening with Jamie and what she wanted to happen.",
        "\"Anxious to come down and visit, Mom, but I'm trying to concentrate on my classes, so I can get off to a good start.\" That much was true, and her grades, so far, were rewards for her efforts.\n\n\"That's being very wise, darling, and we certainly can't argue with that. Listen, I'll let you go so you can get back to your studies.\"\n\nAlex was anxious to get back to what she'd been doing and hoped the evening hadn't been ruined. \"Thanks, Mom. I'll try to call more often. Bye-bye, now.\"\n\n\"Goodbye, Alex.\"\n\nShe tossed her phone on the table and headed for the couch. \n\nJamie watched her intently as he was afraid that the pleasures of his evening were over, and he wondered what had been about to happen when the phone rang. When she sat on the couch once again and raised her eyebrows in question, he gently patted his lap, and those bare legs were back again. Jamie was inexperienced in things like this and admittedly naive, but he was beginning to suspect there was more to his having Alex's legs in his lap than simple soreness. As she approached, he noticed that the nipple bumps on her shirt had virtually disappeared. When he began rubbing her legs once again, they reappeared rapidly.\n\nAlex was amazed at how quickly her body and emotions had returned to where they'd been before everything had been interrupted. She could feel it in her breathing, the extra heat her body was generating, and, of course, the way her nipples were pressing against her shirt, holding Jamie's eyes.\n\nShe had sensed that his fascination with massaging her feet and legs was sexual\u2014his erection confirmed that. But she knew there was more than that. His shyness matched her own, but she was sure he now looked at her differently than he did other girls.\n\nShe had made the decision before and wanted to continue what she had begun then, and, as Jamie gently rubbed her calf, she leaned forward until she was inches from his face. From that close, she could see his chest rising and falling. His hands had stopped and were just holding her leg, his eyes riveted to hers. She moved again until her lips touched his. Alex heard the smallest groan as she pressed harder against Jamie's lips, wondering what to do next.\n\nJamie was having trouble comprehending what was happening. Alex, the dowdy one, who, surprisingly, had invited him to be her roommate and who was transforming into a beautiful girl, was kissing him, her lips pressed hard against his. He felt her tongue moving across his lips, almost like she wanted to part them. \n\nAlex had read about French kissing but never experienced it, yet she was determined that tonight was the night. She felt her tongue slide between his lips and touch his, caressing it gently. Her heart was pounding, and there were sensations between her legs that were very foreign. As she heard another groan, she felt Jamie's tongue respond as it began almost dancing with hers. \n\nThey kissed for minutes until she, at last, broke away, smiling at him.\n\n\"Alex?\" he questioned, panting audibly. \n\n\"I liked that,\" she said simply, still smiling. She knew that in the stories she read, at this point, she should pull her shirt off over her head, revealing the nipples that were trying to punch holes in the thin material. Her growing courage hadn't grown quite that much yet, even as she watched his eyes bounce between her face and breasts. She still had one more thought for the evening, but that would come later.\n\n\"I've never kissed anyone like that before,\" she said. Her legs were still resting across his lap, his erection very obvious.\n\nJamie chuckled awkwardly. \" Me either.\" His mind kept repeating, girlfriend over and over. He wondered if that was possible. He hoped.\n\nAlex slid her legs off Jamie's lap, bumping across the noticeable lump there. He flinched and groaned. She started to say, \"Sorry,\" but stopped herself, not wanting to embarrass him. \"Thanks for another massage,\" she said, accompanied by what she hoped was a sensual smile.\n\n\"Anytime,\" he answered, struggling to catch his breath and somehow hide his erection.\n\nAlex stood. \"Listen,\" she began. \"I'm going to change things up a little. I need to get an early start tomorrow, so I'm going to grab a shower tonight and then finish studying in my room. Okay?\"\n\n\"No problem. I'll try to get some studying done too.\"\n\nAlex went straight to the bathroom, and Jamie heard the shower start. As he rearranged his shorts and his still-impressive erection, a thought escaped from his brain. She had gone straight into the bathroom and, unless she had stashed things there earlier, she had nothing but what she'd been wearing. She could still use those clothes, but that would be unusual. He might be holding a book, but his attention was fixed on that bathroom door.\n\nThe shower stopped. In short moments, the door opened, and Alex appeared, wrapped in a towel from chest to just below her ass. At her bedroom door, one hand released its hold on the towel and reached for the doorknob. The towel, now unfettered, fell away, and Jamie had a perfect view of a bare back, legs, and two gorgeous and very delectable butt cheeks. He sucked in his breath. It was like a dream. Alex's door closed, and Jamie needed to use the bathroom.\n\nHe crossed the room and closed the bathroom door. As he unzipped his pants, he noticed something lying beside him on the floor. Alex's clothes. He finished peeing, closed the lid, and sat down. There was the shirt, transparent, where he had seen the pink nipples and the rosy circle that surrounded them. The shorts were there, but his eyes were drawn to the pale pink bikini panties.\n\nBiting his lip, he hesitantly picked them up. Had she forgotten them ... or had she left them for him to find? Whichever, he had them and was very conscious of the wetness where they'd covered her crotch. He hesitated only momentarily before bringing them to his nose, inhaling the pungent, musky, and very unfamiliar odor. He was sure he'd never forget it. There was more, however. He'd heard guys talk about eating her out, and he'd used his imagination to figure out what that was. This wasn't a \"her,\" but as he pressed his tongue to the damp crotch, it was close enough. The taste matched the aroma. A few licks, and he was satisfied, carefully arranging the pile just as he had found it.\n\nJamie left the bathroom, turned off the lights, and went to his room, closing his door.\n\nThe doors to the two bedrooms were opposite each other, but the rooms shared a wall. She'd never done it before, but tonight she crouched beside that wall, her ear pressed against it. She was amazed as she was sure she could hear Jamie's breathing. Or perhaps it was his panting she was hearing. Other sounds, too, including groans and slapping. It didn't last too long, and Jamie's room grew silent.\n\nAlex wanted nothing more at that instant than to seewhat she had justheard. Coupled with that was that ever-growing feeling that she wanted him to see her ... naked. She wanted to flash him so he'd see more of her than just her buns. She was still tingling from dropping her towel and listening at the wall, and he had wasted no time in filling her ears with what she wanted to hear.\n\nAlex's forays into internet porn were beginning to explore things that were a bit more explicit as she wanted to match pictures and video with the stories she was reading. Not quite ready to add personal experience, she was moving slowly but steadily in that direction.\n\nAfter her massage, the kiss, mooning him, and listening to Jamie masturbate, she was anxious to take care of herself. Alex had masturbated only occasionally when she lived at home, and it was never a sexual thing. It simply felt good and was relaxing after a stressful day. Now though, with the sexual content, it had become much more fulfilling. She was in bed, naked and biting her lower lip as her hand went between her legs. She suddenly stopped as she heard sounds ... voices.\n\n\"Oh, fuck, Alan. There, right there. Oohhh, shit.\"\n\nShe hadn't met the couple in the next apartment, but they had waved several times. She thought, quickly decided, and put her ear to the wall.\n\n\"How's this, baby,\" a male voice said.\n\n\"Fuck, fuck, that's even better,\" the female voice replied.\n\nThe words stopped, but Alex could hear the blending moans and groans. She thought she might be hearing bodies slapping together, too. As she listened further, she became aware that her hand was between her legs once again, the rubbing of her clit sending shivers through her body. Her heart pounded, and her breathing was ragged. She hoped the neighbors wouldn't hear her when she orgasmed, which was close to happening.\n\n\"Don't stop, I'm coming,\" a loud female voice moaned, followed by loud, staccato groans.\n\nWith those sounds in her ear, Alex's body began to spasm as she clamped a hand over her mouth to restrain the groans that welled up from within.\n\nShe stayed by the wall for just a few more seconds, then crawled to her bed and climbed in. No night clothes tonight as she wanted to savor everything that had happened today ... and tonight. The sheets against her bare skin seemed appropriate, and she knew that if she didn't go to sleep quickly, she might experiment with a second orgasm \u2014 she'd read about that in her stories, never even imagining such a thing before. But everything that had happened had taken its toll, and, with no further sounds from next door, she quickly fell asleep.\n\n***\n\nThe following day, Jamie received a call from his mother. She was scheduled for minor surgery on Friday, tomorrow, and needed someone to drive her home and spend the night with her, just for safety. Alex bid him goodbye on Thursday night, and he was gone when she got home from classes on Friday.\n\nShe fixed herself a simple meal then went to Jamie's room. She sat on the edge of his bed, her mind careening from one thought to the next, unable to attach itself to any of them. She thought of her upbringing, the things her mother had instilled in her that were forbidden. She thought of her internet explorations, which led to her erotic stories, which caused her to rethink those things she had been taught. Perched on her roommate's bed, legs crossed under her, those feelings that had filled her body as he massaged her feet and legs, as she wore the orange shirt, went braless in the thin white shirt, and finally, mooned him, returned with vigor. There had also been the listening at the walls, each instance of which had intensified the feeling. She enjoyed those emotions and wanted more of them. \n\nShe wanted Jamie to see her naked. And she wanted to see him naked as well. She pushed her mind as hard as she dared, wanting to determine if it was just a passing predilection or if Jamie was really someone special in her life. And the getting naked \u2014 it was something she didn't understand even a little bit. It was so far outside of her life to this point that she wondered how it had stayed hidden all these years. But it was undoubtedly there, pushing itself into her mind and sometimes her body as well.\n\nThere was the ultimate question, too, the one that often nearly overwhelmed her mind and her thoughts these days\u2014that final step.\n\nShe was a virgin.\n\nFrom listening to the girls at her high school, conversations she'd managed to overhear, it was easy to believe there weren't many eighteen-year-old virgins left in the world \u2014 at least not in Ohio. She was sure some were bragging about and describing things that they only wished had happened. She was reasonably certain that her small circle of very shy girls were all virgins. Or too embarrassed to admit otherwise.\n\nIf she could stay a virgin but still experience the things she saw and read about, she'd do it. That wasn't going to happen, so she had to choose. She was making the choice, slowly but surely. Still, it was frightening. It was unknown, and that in itself made it frightening. It was going to happen despite her mother's imperative to \"act the way she'd been raised.\" She hadn't stayed in Ohio to do that.\n\n***\n\nWith Jamie gone, and her studying complete, Alex decided to do some shopping. She went to her room to change, and ... her brain was talking to her, making suggestions that had her shivering. She shook her head to no avail as the quiet voice only grew louder. Finally, she stopped and listened. Could she? That was the question. Doing it for Jamie was one thing, but going to the mall, actually walking to the mall since his car was not available ... ugh.\n\nShe rejected outright the thought of the thin, white shirt she'd worn the other night that clearly displayed her nipples and the dark circles of her areola. Maybe the orange shirt ... with no bra. She sensed her heart rate accelerating. And those shorts? She knew they left a tiny bit of butt-cheek showing. Could she do that?\n\nShe undressed and stood in front of the yellowed mirror. She picked up the orange shirt and, holding it, pinched both nipples until they were long and hard. She quickly put the shirt on \u2014 the bumps were readily apparent even through the medium-weight material of the top. Alex bit her lower lip. She had no idea whether or not there'd be anything to make her hippies react at the mall, but if they did, they'd be visible. She slipped her panties off and went to one of her dressers, returning with a pair of underwear she couldn't believe had cost what it had. They were bright red with a small triangle and a couple of strings\u2014a thong that she had never had on and wondered how it would feel.\n\nShe stepped into it, snugged it into place, turned her back toward the mirror, and looked over her shoulder. Once the string met her butt, it disappeared between the two globes of her ass. It felt strange and wildly different, and she knew she'd be aware of it the entire time she was wearing it. Turning to face the mirror, she saw a potential problem. Not for today, but perhaps for her future plans for the thong. Her muff was not nearly contained by the small triangle, and she'd need to take care of that, perhaps when she returned from the mall.\n\nShe was careful to wear her comfortable Nike's as it was nearly a half-mile walk to the mall, and she was not anxious to get the aching feet again, particularly with Jamie gone. As she walked along, the thought of those massages raced through her brain, raising memories that ... She looked down at her shirt where two bumps were becoming readily apparent. She had wondered about that before, and it had only taken about five minutes for it to happen. It was what it was and, since she had not worn a bra, it was evident that she wanted it to happen.\n\nShe was thinking further about the massages when she heard a voice.\n\n\"Hey, babe. Haven't seen you along here before.\"\n\nShe started and, when her eyes focused, she was face to face with a tall, dark-haired guy with an Ohio State shirt covering his very broad chest. Now, what to do? This was completely foreign.\n\n\"Um, just on my way to the mall,\" she was able to get out, averting her eyes.\n\n\"Going that way myself. Let's walk together.\" His words and big smile left her few choices.\n\nWhen she had finally looked at him, it was clear what was holding his interest. Of course, once she noted that, it only got worse. Could she walk along with this guy? She just ...\n\n\"My boyfriend is waiting for me there,\" she ventured. \"He's, well, kind of jealous.\" Then, gathering her courage, she added, \"Other than that, it would be fine.\"\n\n\"Well, I'm not here to cause trouble. Just hard to turn away from a pretty girl like you.\" His broad, white-toothed smile made her catch her breath. \"Have fun at the mall, and if you get tired of that boyfriend, I'll be around.\" Another smile and he retreated in the opposite direction.\n\nOh my gosh, oh my gosh, Alex thought as she watched the stranger's back disappearing. He was a good-looking guy, and he was interested in her. Maybe he just wanted to, what had she read, get into her pants? That thought gave her chills while, at the same time, making her blood feel like it was boiling as it coursed through her veins. It was a dichotomy she was going to have to get used to.\n\nA little further along, two young guys passed her with a smile, and, on a whim, she dropped the little purse she was carrying and bent to pick it up, giving her a chance to look behind her. The two had stopped and were watching her. She hadn't even thought about the view they'd get when she bent over. As they quickly turned and hurried off, she struggled to push the shorts a little lower, hoping to minimize the bun exposure, but her broad hips would have none of that.\n\nThe rest of her journey was uneventful as she listened to the birds, enjoyed the scenery, the warm breeze, and the walk itself. At the mall, she checked her shirt and found her beasts still prominent, but the nipples had retreated. There were a couple of things she wanted to pick up, and Victoria's Secret provided a wide selection of what she was after. She made her purchases, took her bag of goodies, and headed out for more shopping.\n\nAs she browsed, she saw herself reflected in the window of a store\u2014the bright orange shirt displaying the remnants of her nipple bumps, the very short shorts emphasizing her long legs, and the Victoria's Secret bag she was carrying. She smiled, wondering what had happened to the frumpy girl that watched her parents leave for Florida.\n\nFurther along in her roaming, she heard music \u2014 a violin was being played very beautifully, and she joined the crowd to listen. She'd been there a couple of minutes when she felt a pinch on her bare butt cheek. She spun around to see three young guys, obviously friends, gathered behind her.\n\nSurprisingly herself, she said gruffly, \"Which one,\" glaring at all three. Several people turned to watch the confrontation.\n\nAll three had innocent looks but guiltily turned and headed away. \n\nAlex got a few sympathetic looks from the bystanders as the violin continued to play. As her anger abated, she realized she was hungry and headed for the food court, anxious to grab a little snack before heading home. She searched the signs, trying to decide what might be satisfying, and finally decided on a salad from Subway. She paid and sat down at an empty table. She had been there no more than a minute when she heard a deep, baritone voice.\n\n\"Mind if I join you,\" he asked, smiling.\n\nLooking up, Alex saw the smile which was shining from a very handsome face. \"Um, sure,\" she answered as she had no basis for refusing him. As he sat down with his tray of food, Alex noted the black, wavy hair, the square jaw, the blue eyes ... and the three-piece suit, unusual for the mall.\n\n\"Thanks,\" he said very warmly. \"I just hate to eat alone, but I promise not to bother you.\" Another smile as he took his first bite of food, something oriental she could tell.\n\nIf she looked at him, she was sure he would bother her. He was ridiculously handsome. \"No worries,\" she ventured. \"I'm just shopping.\"\n\nGlancing at her with a knowing look, he asked, \"What year are you?\"\n\n\"Freshman,\" she answered cautiously, wondering where he was headed.\n\n\"First time away from home?\"\n\n\"Actually, my parents moved to Florida, and I stayed,\" she answered.\n\nHe took another bite of his meal, then smiled at her once more. \"I have a couple of hours to kill. Care to join me?\" The persona of his smile had changed.\n\nThe chill that raced through her this time was different than those she'd experienced recently. She didn't return his smile.\n\n\"No thanks,\" she said, hoping he couldn't see her trembling. Suddenly she was no longer interested in her salad, so she stood, tossed the remnants in a nearby can, and walked away, sorry that he'd be able to watch her butt as she left. \n\nWhen she had rounded a corner, she stopped, taking a moment to evaluate her time at the mall. The attention on the way had been exciting, and the looks she'd gotten had been expected. She hadn't worn this outfit to be ignored, going against the way she had lived for eighteen years. The proposal she'd gotten at the food court had frightened her, but he wasn't going to drag her away. She thought he'd decided to take a shot and had missed.",
        "The incident where she'd been listening to the violin puzzled her. She'd instinctively been angry, but now, as she thought about it, she had to smile. No one had ever touched her butt, or was it her ass since it was sticking out of her shorts? She wondered which of the three had done it, not that it mattered one whit. She began walking toward the exit, smiling and thinking, he pinched my ass.\n\nShe swung over one block on the walk home so she could stop by the supermarket. Thank goodness it had some self-checkout isles. Otherwise, she'd have been out of luck. She went to the section with medicines and vitamins and the like, the \"like\" being the important thing here. She was sure the isles in that section would be crowded with people, and she'd have to sneak around, but, luckily, they were nearly vacant. She found what she was looking for, but there were so many choices, and she had no idea which would best fill her needs. She took her time searching, finally deciding to look for something \"plain\" rather than those that advertised \"ribbed,\" or \"glow-in-the-dark,\" or \"multi-flavored.\" She finally gave up and grabbed a simple-looking box, clutching it tightly so no one could tell what she was holding. Close-by was another thing she'd decided to get. The box with the \"personal lubricant\" was a bit larger and harder to conceal, but she managed.\n\nShe checked out quickly, stashing the two items in the plastic bag as quickly as she could, paid, and left the store feeling daring and triumphant. She wondered if her mother had ever purchased either of the items but doubted it.\n\nAs she walked the rest of the way to the apartment, she pondered the things that had just happened. She'd dressed provocatively, faced the attention it had caused, and dealt with a pinch of her butt. But she'd snuck around purchasing the condoms and the lubricant. She wasn't completely \"liberated\" yet. Maybe once she ... she swallowed hard ... used them, she'd be over that last hump.\n\nBack at the apartment, she had one more thing to do while still \"in the mood,\" as it were. She showered, then sat on the edge of the tub and shaved her legs. A brief pause and a deep breath, along with more shaving, and soon she was finished. She stood, dried herself, and went to her room, to the mirror. She grinned at the glistening mons she saw, the top end of her cleft now visible too. She giggled as she thought of using her phone to take a photo of the mirror and texting it to Jamie. That caused a shiver to race through her once more. All in good time, she thought. There's no rush.\n\nShe managed to do a little studying, interrupted by her thoughts of what she might do on Saturday to entertain herself. She dismissed the ideas that kept surfacing in her brain and finally decided to just wait till tomorrow and see how she felt.\n\nIt didn't help that, once in bed and coming down from another incredible orgasm, she heard the sounds from the apartment next door again. She vowed to meet those two as quickly as she could, just to see what they were like.\n\nWith Jamie not there, Alex slept in on Saturday morning. Also, with him missing, when she was up and dressed, she went to McDonald's for a quick breakfast. She had her grandfather's money, but she hated to use it too often since Jamie had barely enough to live on. She tried to pick up extra snacks and things for them without him noticing.\n\nBack home, she had to decide how she might spend her day. The time she wasn't studying, at least. But, as she thought, there was some studying she needed to do to catch up. She went to her computer and turned it on, logging onto the internet. For the next hour, she watched videos and read articles about what she thought she'd be needing in the next few days. She laughed as she thought she might just talk to their neighbors and get all the information and advice she needed.\n\nShe reflected a lot about what she'd pretty well decided. In just this short time in the apartment, she'd determined she really liked Jamie, and she wanted him to be the one. She knew that if she simply wanted to lose her virginity, it would be uncomplicated. She was sure she could get lots of volunteers to help her. But for reasons she didn't thoroughly understand, she wanted it to be Jamie. Maybe because they would be sharing the same unique experience.\n\nTo help break the mood and remove temptation, Alex gathered up a couple of books and walked to the library. Her ploy worked well, and she accomplished even more than she had hoped. She was anxious for Jamie to get back \u2014 she'd discovered she missed him more than she'd anticipated she would, even though it had been only a couple of days. She hurried home so she wouldn't miss his arrival.\n\nAlex checked her phone. It was a few minutes past two o'clock, and Jamie was due any minute. She looked out the front window just as he was approaching the door, then jumped up as he came in, and, before he could drop his duffle bag, she engulfed him in a warm and very welcoming hug.\n\n\"Missed you,\" she whispered in his ear.\n\n\"Alex, I missed you too,\" he said with an affection and sincerity she didn't miss.\n\n\"Is your mom okay?\" \n\n\"Yeah, she did great.\" He looked at her and smiled. \"She wanted to know if I had a girlfriend yet.\"\n\n\"And what did you tell her?\" Alex asked with a nervous laugh.\n\nJamie paused and glanced at Alex. \"I told her, 'not yet, but who knows?'\"\n\nWho knows? I hope I know, Alex thought, as she reviewed what she had planned. They talked for a while, sharing what had happened in the time they had been apart. It had been a short time, but she had missed Jamie in a way she hadn't imagined. She wondered if he'd had similar feelings. Perhaps she'd find out soon.\n\nAlex prepared a simple meal while they talked, happy that things were back to \"normal.\" Her heart was already pounding, even though her plans for the evening were still a couple of hours away. \n\n\"Did you study at your mom's?\"\n\n\"I tried while she was in surgery ... got a little done. Why?\"\n\n\"Maybe we can get a little done now that our tummies are full.\" She laughed.\n\n\"Sounds like a good deal.\"\n\nSo, Jamie studied, and Alex tried, perhaps stuffing a few important things into her head before finally declaring, \"I think I'll take my shower tonight, again, if that's okay.\"\n\n\"No problem,\" Jamie said, looking up from his book. He had no trouble recalling what he had seen the last time she switched shower times. He was, of course, hopeful.\n\nAlex went to her room, remembering the anticipatory look on Jamie's face. She slowly removed her clothes and took a long look at herself. To her eyes, she looked very different than she had just a couple of months ago. She knew the difference was not in her body but in her brain.\n\nShe stood and walked to the door. A deep breath and she opened it and crossed the hall to the bathroom, closing the door behind her. She closed her eyes and exhaled. Had Jamie been watching?\n\nJamie's eyes were wide and staring at the closed door. He'd looked up just as she was going through the door, a brief profile of perfection. His book was forgotten as he was determined to watch that door until Alex reappeared. He rearranged his pants to make room for the erection that had appeared almost instantaneously. He could hear the shower, willing it to shut off. \n\nIt did. \n\nHe gave her two minutes to dry herself\u2014she took four. And then the door opened.\n\nHolding her breath, Alex walked from the bathroom to her bedroom and closed the door behind her, exhaling once again. Jamie had to have been watching. But whether he had or not, she had one more surprise to, well, perhaps \"torture him\" would be appropriate. She raided her dresser one more time, found what she had purchased yesterday, and put it on. A quick look in the mirror, a nibble of her lower lip, and she opened the door.\n\n\"Gonna do a little more studying before bed,\" she said, grabbing a book.\n\nJamie stared. Alex wore shortie pajamas, the bikini bottoms transparent except for the narrow piece that covered her cleft. The top was lacy and equally transparent, with two circular patches that hid her nipples. The scalloped lace bottom ended at her waist.\n\n\"Alex. You're ...\"\n\n\"Go ahead,\" she encouraged.\n\n\"Gorgeous,\" he added quietly.\n\nNo one had ever called her that before. She felt that she had tormented him into saying it, but she could ignore that.\n\n\"Are you hot?\" she asked innocently, smiling at him.\n\n\"Um, a little,\" he said hesitantly, wondering which \"hot\" she was referring to.\n\n\"Me too,\" she said, pulling the top off over her head. Her breasts were bare, about three feet from Jamie, and moving up and down with her breathing.\n\n\"Alex, what's happening here?\"\n\n\"It's pretty obvious, Jamie. Do you like?\"\n\n\"Are you kidding me?\" He replied, panting. \"I never thought I'd see anything like this ... those. Oh, shit, I can't even talk.\"\n\n\"You want to touch?\" She asked, a sensual smile on her face as she pushed her breasts toward him.\n\nJamie's Adam's apple bounced as he digested what Alex had said. Did he want to touch? Is water wet? Was she the most beautiful thing he'd ever seen? Did he want to touch? He met her eyes, a longing look on his face.\n\n\"You can, but I need to touch something too.\" She smiled as her eyes dropped to his crotch.\n\n\"Oh, shit. Really?\" he said, having no trouble reading her thoughts. As he jumped up and pulled off his pants and boxers, she moved to the couch beside him.\n\nAlex's eyes were riveted to his cock, the first she'd ever seen. She was instantly comparing it with those she'd watched on the internet and was happy that it compared favorably. She smiled as it seemed to twitch, bouncing with every movement of Jamie's body. She couldn't stand it any longer, and her hand moved quickly, grabbing hold of it and giving it two or three pumps.\n\nJamie's hand moved more hesitantly. She said I could touch them, he thought, almost unable to convince himself it was true and about to happen. Alex's grip on his cock was keeping him from thinking about anything but that, and, as she began rhythmically pumping, he could barely breathe.\n\nNot moving her gaze from his cock, she felt her breasts being lifted, caressed, and gently squeezed. She bit her lower lip as his fingers played with her nipples which were growing harder and longer than she thought possible. She was also sure that her pajama bottoms were soaked with her juices. Alex had never imagined the way her body would react to something as simple as a boy touching her breasts. How would it react to the rest of what she had planned?\n\nNow, however, she wanted Jamie to experience something he certainly hadn't been expecting. She began moving her hand faster and faster, hearing sounds from him that she'd never heard before as he repeated her name over and over, clinging tightly to her nipples. With a loud groan, he leaned back against the couch, pulling even harder on her nipples as a stream of hot milky fluid shot into the air, landing on her arm. Two more streams followed quickly as she felt his cock spasming in her hand. Several more smaller streams covered her hand. \n\nAlex slowed her pace as Jamie opened his eyes, reluctantly releasing her nipples. His eyes quickly found them again, though. \"That was amazing!\" she said. She meant that sincerely as his ejaculation had surprised her. Usually, in her internet watching, it seemed to be a trickle compared to what Jamie had done. And now, it covered her hand and part of her arm. Curious, she touched it cautiously with her other hand, then put it to her lips as Jamie watched. She wondered what he was thinking.\n\nJamie's mind was spinning. He was still struggling to breathe, his cock twitching occasionally. He could barely tear his eyes away from the large and perfectly shaped tits right in front of his face. But Alex was doing something, and he needed to follow that as well. He watched her dip a finger in the milky liquid, then touch it to her tongue. He thought his heart might explode. He had to be in some kind of dream world. What would she do next?\n\nBut Alex had completed what she'd planned for the evening. There were more things ahead, but she'd take care of them, one at a time. There was only one \"first time\" for each girl or woman, and she didn't want it to \"just happen.\" It was to be gradual and unique\u2014at least unique to her. She leaned forward and kissed him, feeling his hand touch her breast again.\n\n\"I better clean up,\" she said, giggling. She added quietly, \"I liked that.\"\n\nJamie wanted to ask her why they didn't do it again, then. And maybe more after that. He was far too timid to do that, however.\n\nAlex picked up her top and went to the bathroom, Jamie straining to keep from following her and squeezing her gorgeous ass. He relived what had just happened until he heard the shower shut off. The door opened, and a naked Alex appeared, waved, and disappeared into her room.\n\nShe climbed into bed and smiled. She hadn't been able to wait and had masturbated on the bathroom floor, carefully using a tiny bit of Jamie's ejaculate to lubricate her clit. She was afraid Jamie might have heard her before she'd been able to clamp her hand over her mouth. If he had, so be it. She smiled once more.\n\n***\n\nJamie was a mess. He sat through his classes, but they were the furthest things from his mind ... after last night. When he'd knocked on the apartment door that first time and Alex had answered, his first impression of her was simple. No makeup, stringy hair, clothes that were mostly too big for her and hid her figure was what he saw. Now that she was wearing makeup, fixing her hair, and wearing much more attractive clothes\u2014or taking them off, he thought of her as the most beautiful thing he'd ever seen. \n\nHe must have looked at his watch at least one hundred times during the day, anxious to get home and, well, see if Alex had any more adventures planned for their evening. He'd been thinking about some things he'd like to see happen but had decided he'd leave it to her. So far, he was delighted with her choices and hated to take the chance of spoiling things by going off in the wrong direction. Besides, he certainly wasn't an expert in this area and wondered how she was figuring things out. He'd begun exploring the internet and thought he might be learning a few things.\n\nAlex's day was much better. She'd enjoyed last night more than she had expected, still unable to predict how her body would react to these new experiences. But what had happened lately only encouraged her to keep going, which she intended to do.\n\nJamie was home when Alex came through the door. She thought she saw an anxious look on his face and had to smile. She didn't think it showed on her face, but a mix of anxiety and anticipation had taken possession of her\u2014she wanted things to happen.\n\n\"How were classes? \" she asked innocently, thinking of her day.\n\nJamie smiled. Why not? he thought, deciding that, at this point, he'd just be honest. \"I'm not even sure I was in any classes today.\" He shook his head, wondering how she'd reply.\n\n\"Me either,\" she said, her face reddening. \"All I could think of was ...\" Her voice trailed off. \"Last night,\" she added softly.\n\nAt Alex's last words, Jamie's erection came to life. He decided that, after last night, there was no reason to hide it.\n\nSince it seemed clear where both of them were headed, Alex giggled. \"Should we have dinner first?\"\n\n\"Sure,\" Jamie said, hearing the word, \"first,\" perfectly willing to let the suspense build.\n\nIf Jamie was willing to let the suspense build, Alex was happy to give it time to happen. She went to the refrigerator, got two potatoes, wrapped them with foil, and put them in the oven. \"An hour and fifteen minutes, and they'll be perfect,\" she said. \"How about pork chops?\"\n\n\"We have pork chops?\" he questioned.\n\n\"I picked them up the other day.\" She liked to stop at the store when Jamie wasn't along as he was hesitant to spend money on \"luxury food,\" as he called it. She had the money, and she enjoyed the good food. \"How about some spinach,\" she added.\n\n\"You sound like my mom,\" he said, laughing.\n\n\"We have vinegar.\"\n\n\"Perfect.\"\n\nThey were able to have a pleasant conversation, avoiding what was foremost on both of their minds. Alex finally began cooking the pork chops, and soon, dinner was served. They ate quietly, and everything was delicious. Jamie helped clean up, and, at last, they were ready for what the evening had in store. They went to the living room and sat on the couch.\n\n\"Listen,\" Alex said, \"is it okay if I take my shower now?\"\n\nJamie wasn't about to argue or disagree. \"Sure,\" he said. \"I can wait.\"\n\nAlex had to smile at his response. She hoped she could wait as well.\n\nShe went to the bathroom and undressed, climbing in the shower and turning on the water. She waited a minute or so before she called loudly. \n\n\"Jamie, can you come here a minute?\"\n\n\"Sure,\" he called, jumping up from the couch. What the heck could she possibly want?\n\n\"Whadaya need?\" he said through the door.\n\n\"Can you wash my back?\"\n\nJamie's heart stopped. Did she really say that? He moved before she had a chance to change her mind, opening the door and dashing to the shower. Not quite sure what to do next, he said, \"Hi.\"\n\n\"Hi. Can you wash my back?\" Her voice sounded different, a difference that he liked, and that made his body react, a total reaction he'd never experienced.\n\n\"Love to.\" He paused for a few seconds, puzzled. \"How should I do it?\" he asked, peeking through the split in the curtain.\n\n\"Up to you,\" she said, looking at him over her shoulder, her wet hair draped across her face. \n\nA deep breath and a second's thought. Jamie tore his clothes off and stepped through the curtain to the rear of the tub, closing it behind him. Alex's back was toward him ... and her delicious ass.\n\n\"Hi, again,\" Alex said, smiling and turning to face him.\n\nShe stood an arm's length from Jamie, beads of water dancing on her marvelous body, wet hair adorning her face. His eyes were drawn to her breasts, tantalizing drops of water clinging to each nipple. She held out a bar of soap and a washcloth.\n\nJamie took the soap. \"I'll use my hands.\"\n\nAlex turned and stepped into the spray. She closed her eyes, waiting for Jamie's touch. What she felt was not what she'd expected as his erection was bumping against her ass. That kept up for a moment before he stepped back and began washing her back.\n\nJamie filled his hands with lather and began rubbing, stroking, caressing, and adoring her back. Wet and foamy, his hands slid easily over her smooth skin. As she moved her arms and twisted gently to his ministrations, he could feel the gentle rippling of her muscles. He was washing her waist, then lower, rubbing her butt cheeks, squeezing more than was necessary with no complaining from Alex.\n\nIt was time, and Alex turned to face Jamie, hoping he'd take the cue. She was chewing her lower lip, trying to decide if it was from nervousness or anticipation. She watched as his hand moved up her stomach, then onto her breast. At first, he continued washing, then dropped the pretense and began massaging and squeezing, gently pulling and twisting her nipples. His deep breathing had her doing the same. The hot water felt cool against her burning skin. Unable to stand it any longer, she dropped to her knees, taking hold of Jamie's erection and meeting his eyes with hers.\n\nHis eyes were wide as he watched her hand stroking him. He was more than ready for a repeat of last night when he saw her looking up at him. She smiled through the water splashing on her face, then her head went down, her lips surrounding his cock. She groaned loudly as she pressed forward, feeling his cock bump against his throat.\n\n\"Alex,\" Jamie groaned, not sure he was comprehending what was happening. This had certainly not happened before, and he was losing control of his body. He could feel her mouth working, her lips and tongue producing unimaginable sensations. She slowed, her lips moving toward the base once again. He heard her gag, then once again, before she buried her face in his pubes. It was more than he could endure, and he tried to warn her.",
        "\"Alex, gonna come,\" he groaned, but she didn't change what she was doing, her mouth moving in and out on his cock. She'd heard his warning and was anxious for it to happen. She clasped his balls with one hand, her other squeezing his butt, holding him against her. She heard an even louder and longer groan, and hot liquid filled her mouth, his cock twitching with each squirt.\n\nAs Jamie recovered, Alex slowly and gently stroked his diminishing erection, fascinated by its feel, the way it had reacted to her touch, and particularly to her mouth. She couldn't imagine such things barely weeks ago. With her stroking, his cock was definitely getting hard and stiff again.\n\nWhat had happened had emboldened Jamie, and he took hold of her legs.\n\n\"Jamie, no.\"\n\nStartled, he sent a questioning look.\n\n\"The shower's getting cold.\" She smiled warmly. \"Let's go to my room.\" She pulled her legs free, stood up, and turned off the shower, then stepped out, Jamie right behind her, patting her ass. They dried quickly. Alex ran to her room and jumped onto her bed, licking her lips as Jamie joined her.\n\n\"What do you think you're going to do now?\" she asked in the huskiest voice he'd ever heard. which, of course, wasn't saying a lot.\n\n\"Whatever you want me to do ... and will let me do,\" he answered, smiling at her.\n\nAlex knew what she wanted him to do\u2014and what she was totally ready for yet, at least according to the plan she'd made. It was all going to happen, but in a matter of time. But, how to tell him right now? She gritted her teeth and said what she'd never envisioned herself being able to say. \n\n\"I want your face in my pussy.\"\n\nJamie stared at her for long seconds, his nostrils flaring. He smiled as his eyes left hers and dropped to the place she had just mentioned. He'd imagined what a pussy might look like, but that's all it had been\u2014imagination. What he was seeing was real and more inviting than his mind-pictures. He put his hands on her thighs, and that alone was enough to make his heart pound. The musky aroma brought back memories of the time he'd tasted her panties.\n\nHe pressed on her legs, spreading them further, the puffy labia opening to his eager tongue. This was all new, but his tongue seemed to know what to do as it slid between those lips to a delectable moan from Alex. \n\nShe pressed her hips against his face, savoring the electricity that was coursing through her body. His tongue began at the bottom of her cleft and moved slowly along until it touched her clit; that produced a tiny squeal, a jerking of her hips, and Alex's hands grasping his head. \n\nJamie liked that, and his tongue flicked away at the nub he'd found. Not satisfied, he used his hands to hold her labia apart, fascinated by the pinkness, the wetness, and the bright pink nub that responded so delightfully to his tongue. More flicks, more moans and squirming, and then his lips closed on her clit, sucking on it as his tongue rubbed back and forth across it.\n\nIt started where Jamie's tongue was tormenting her, then spread through every nerve and muscle of her body, curling her toes, clenching her fists, throwing her head backward, a loud moaning escaping her lips as wave after wave of euphoria spasmed through her body. Jamie wrapped his arms around her to keep from being \"bucked off\" her pussy.\n\n\"Oh God, Jamie, stop, stop!\" She was pulling his hair, trying to break the hold his arms had on her. She thought she might explode if he didn't.\n\nAfraid she was going to pull out hunks of his hair, Jamie released her, reluctant to move away from the most enticing place he'd ever been.\n\nIf Jamie didn't know what she was feeling ...\n\n\"Jamie.\"\n\nHe raised his head, smiled, and kissed her, gently nibbling her lower lip.\n\nHe knows.\n\nShe was ready, and she was sure he was too. She watched him watching her, sure he was waiting for her to say it. Surprising her, he reached out and took her hands in his, his courage growing with each passing second.\n\n\"Alex, you are the most beautiful ... \"\n\nWhen he paused, she spoke up. \"Jamie, don't be\u2014\"\n\n\"You are,\" he interrupted. \"Don't argue with me.\" He squeezed her hands. He was beginning to understand her and what she wanted and hoped he could enhance the experience for her ... and for him as well. \"Beautiful naked lady,\" he began, to reddening cheeks from Alex as she self-consciously pulled her legs together, \"tomorrow, if you are willing, I would like to take you to dinner.\"\n\nAlex smiled broadly. \"Are you asking me for a date?\"\n\n\"Only the third time I've ever done it.\" He sent her a questioning look.\n\n\"Three? You're way ahead of me. I'd love to have dinner with you. And then ...?\"\n\n\"And then ...\" he smiled.\n\nIt was her turn to lean forward and kiss him.\n\nThey were both enjoying this kissing thing.\n\n\"Jamie, I'm afraid I'll be cold tonight. I don't want to trouble you too much, but could you sleep with me?\" She giggled as she finished saying it.\n\nStill sitting beside her on the bed, he replied, \"Whatever you'd like, babe.\"\n\n\"Babe? What have you done with Jamie?\" She chucked.\n\n\"I hear he moved in with a, well, a babe. Changed him some.\"\n\nJamie lifted the edge of the covers, and Alex crawled under them, him right behind. He snuggled against her, arm around her waist. She pulled his hand to her breast. Soon they were both asleep, warm and content.\n\n***\n\nAlex was surprised when she woke up at the usual time. She was also momentarily surprised that there was an arm wrapped around her. She carefully rolled over and kissed a still soundly sleeping Jamie. She unwrapped his arm and slipped out of bed, quickly dressed, ate breakfast, and headed for her eight o'clock.\n\nShe tried to listen, focus, and concentrate, but it wasn't working. Before, it had been \"last night.\" Now, it was \"tonight,\" One was based on solid ground, on something that had been experienced and remembered. The other was an aspiration, a possibility, an illusion that had yet to be made real. Whatever it took, she was going to make sure it was real.\n\nDespite her anxiety, she felt very content. She wondered how her life would have been different if Jamie hadn't knocked on her door ... and if she hadn't gotten the surge of courage (or possibly desperation) that made her insist he be her roommate. Without that, she was sure she'd be in a far different place right now.\n\nShe floated from class to class until It was three-fifty and time to head home and dress for her dinner date. She had a dress she'd purchased before Jamie had moved in, hoping she'd have a reason to wear it sometime in the future. The future was tonight. She'd blushed when she'd tried it on and hoped she wouldn't be bright red all evening. She was laying out her clothes when Jamie got home.\n\n\"I need a favor, Jamie,\" she said, smiling at him.\n\n\"Are we negotiating?\" He asked, returning her smile.\n\nAlex shook her head and chuckled. \"You've changed.\"\n\n\"Change only happens when something or SOMEONE is the catalyst that forces it to happen.\n\n\"Jamie, where did you get that?\"\n\n\"Freshman psychology,\" he said, his expression changing drastically, \"and my heart.\"\n\nIt took about two seconds for the tears to begin. She hadn't imagined anything like what had just happened ... what he had just said. And now he was hugging her, his chin on her head.\n\n\"Are you okay?\"\n\n\"Jamie, I'm ... I'm ... yes, I'm okay.\" so okay she thought.\n\nHands on her cheeks, he tilted her head.\n\n\"But, you're crying.\" He looked puzzled.\n\n\"Because I'm happy.\"\n\n\"When I saw my mom cry, it was never because she was happy.\"\n\n\"I'm sorry for that, Jamie. But, I'm happy; I'm very happy.\"\n\nShe was afraid to kiss him with the feelings that were just waiting to overwhelm her and shorten their evening. So, she simply returned his hug, squeezing him hard enough that he grunted. This time she tilted her head, smiling at him, only to be nearly melted by his look.\n\n\"I'm happy, too,\" he said softly. \"Now, about that favor.\"\n\nShe'd nearly forgotten. \"I need to get ready, and I, well, would like to surprise you a little. So, I'll use the bathroom, and you stay in your room until I tell you I'm finished. I'll get dressed in my room and yell when I'm ready. It'll be kind of like you coming to the door to pick me up.\"\n\n\"Sounds cool.\"\n\nAlex brought everything she'd need to the bathroom. She put waves in her long, dark hair. She applied light makeup the way she'd learned from the internet, went to her room, and yelled to Jamie.\n\nShe dressed, checked herself in the mirror, and was ready.\n\n\"Ready,\" she called.\n\n\"Me too,\" she heard in return.\n\nA deep breath and she opened the door, walking slowly toward Jaime.\n\nHis eyes were wide. The flowered red dress plunged dangerously, revealing much of the skin that only he had seen. The ruffled skirt stopped inches above her knees, her long legs dazzling to his eyes. Her eyes were sultry, her lips glossy, her body enthralling.\n\n\"Say something,\" she encouraged.\n\n\"Wow,\" he said, sounding amazed, although that was the last thing he wanted. \"I ... um ... I'm not sure there's a word for how you look.\"\n\nAlex felt a shiver run through her body at Jamie's comment. It was beyond her ken. As he stood, she was surprised at his appearance. She was certain he had splurged and purchased new khaki slacks and a dress shirt for their date. It touched her deeply that he would do that since she knew how tight his finances were. But those two items, plus the sports coat she hadn't seen before, created someone she hadn't expected but who looked, well, yummy.\n\nAlex headed straight to Jamie and kissed him. \"Ready to go,\" she said.\n\n\"You smell fantastic.\"\n\n\"Thanks, and that's for you.\"\n\nJamie's heart was pounding at the sight of her, her aroma, and the thought of what lay ahead, both now and later. He was hoping his body wouldn't betray his feelings, at least until later.\n\nThey headed out the door, Alex holding his arm as they walked to the car.\n\n\"Longhorn SteakHouse okay?\" he asked as he opened her door.\n\n\"Oooh, that sounds wonderful,\" she said, bending to slide into the front seat.\n\nAs she bent, Jamie had a perfect view down the front of her dress. She's not wearing a bra he thought, biting his lower lip. He'd seen those fabulous breasts more than once, but this was different, seeing the smooth and flawless fullness ... in public. He watched her eyes meet his, and she smiled.\n\nAt the restaurant, they were seated, and Alex was studying the menu.\n\n\"Alex, you haven't seen it, but everyone that can see our table is looking, or has looked, at you.\"\n\n\"Jamie, no,\" she said, her cheeks reddening. She was looking straight at Jamie, afraid to let her eyes wander. \n\nHe reached across the table and took hold of both of her hands. \"Why wouldn't people look at you? You've dressed up, and you're gorgeous.\"\n\n\"But it's just for you, Jamie, not for them.\" She sounded almost frantic, not wanting others to look at her. He squeezed her hands. \"Thanks,\" he said simply.\n\nThey ordered and ate, Alex glancing around occasionally, sometimes catching others looking at her. She thought back to her mall trip in the orange shirt. This was really no different. Just that thought relaxed her, and she finished her meal smiling. When their server asked if they wanted dessert, they both chuckled, which brought a knowing wink from the server.\n\nAlex nearly ached to pay for dinner. She'd make it up to him somehow. As they drove home, she felt her body already responding to the anticipation building inside her. When they came through the front door with Jamie squeezing her butt, she thought she might pass out. Once inside, she stopped, but before she could turn around, Jamie stopped her.\n\n\"Don't move,\" he said, carefully lifting her hair and kissing the back of her neck.\n\nAlex's breath caught in her throat at the touch of his lips. She felt his hand on her back, then the zipper of her dress slowly lowering. A pair of kisses to her back and the straps were off her shoulders, her bare nipples hardening in the cool air. As the dress crumpled around her feet, she kicked it aside, trembling as she waited for Jamie's next move.\n\nHe was breathing heavily as his eyes moved across her bare back, then down to her ass barely covered by her lavender bikini panties, and then down those long, willowy legs, their shape bewitchingly enhanced by the red heels. He carefully hooked his thumbs over the lavender lace and kissed her back once more.\n\nNothing had actually happened yet, but Alex knew her body was already beginning to glisten \u2014 she could feel the heat from her blood as it raced through her body. Adding to her excitement was the change in Jamie, that he was suddenly much bolder than he had been while she had pushed things along, learning as she went. Now she could only wonder what he'd do next. That happened quickly as her panties were sliding down her legs. She felt him kiss her ass as he pushed the panties to the floor. \n\nJamie was shaking with a naked Alex just six inches from him, waiting for him to tell her what to do. Still fully dressed, he pressed his erection against her butt crack. He heard a quiet moan. He stepped around her, and their eyes met. He'd never seen a more sensual or inviting look, and he threw his arms around her, their lips meeting in a kiss charged with passion.\n\nAlex struggled to free Jamie of his sport coat and then his shirt, popping off a button in her haste. Her lips and tongue were fully engaged with Jamie, and now her breasts as well. She was frantic to get his clothes off so she could use her hands for more pleasurable pursuits. As Alex fought with his belt, she felt his hands helping her. The instant his pants were down, her hand was in his boxers, grasping and stroking his cock. She dropped to her knees, pulling the boxers down with her.\n\nOne more time, Jamie felt his cock engulfed by Alex's mouth. It was a heavenly feeling. His hands were on her breasts, lifting, squeezing, caressing, and pulling on the nipples, ecstatic feelings tearing through him with every touch. He felt his hips moving rhythmically, having sex with her mouth. As he realized what he was doing, he understood he wanted a different kind of sex \u2014 and felt sure that's what Alex wanted as well.\n\n\"Alex, stop, stop,\" Jamie said, barely able to speak.\n\nA startled face looked up at him, saliva dripping from her chin. \"Jamie?\" she questioned.\n\nHe sat beside her and kissed her.\n\n\"Beautiful lady, should we go to your room?\"\n\nShe took a deep breath. It was a simple question, but she knew what he was really asking. She hesitated for only a second, a lifetime of words, feelings, and hesitancy barely deflecting her from what she wanted. And who she wanted. She stood and headed to the bedroom with Jamie, knowing her life and who she was would be changed forever.\n\nBarely through the door, Jamie grabbed Alex around the waist and pulled her onto the bed beside him. One more time he felt he was living a dream, an astonishing fairy tale he hoped would never end. He hovered over her, absorbing her beauty and the passion he saw in her eyes. He lowered his lips to hers, their tongues dancing, Jamie's hands finding her breast, teasing the hard nipples as her arms squeezed him against her.\n\nAlex struggled as she wanted his cock in her before it was ... That thought caused a shiver of fear, a fear of the unexplored, the unknown ... and feared incompetence. Was Jamie feeling the same? The way he was exploring and devouring her, she doubted he had any reservations about tonight. \n\n\"Jamie,\" she gasped, \"I want it ... you ... in my mouth.\"\n\nWith a sensual smile, he said, \"You've done it all so far, Alex. Tonight it's my turn.\"\n\nIf it was possible, her heart pounded even harder at his words and his look. It surprised her, but it excited her that she would be going where he led her. It was the start of something she hoped would continue. She laid her arms back on the bed, opening herself to him. She groaned when he spread her legs, his hands parting her puffy labia and his tongue seeking that swollen nub that brought her extraordinary pleasure.\n\nJamie alternated between his tongue, lips, and fingers, reveling in the sounds he heard from Alex, the jerking of her hips, the way her hands locked in his hair and pulled his head against her pussy.\n\nAlex felt herself approaching the edge, the sensations from what Jamie was doing radiating throughout her entire body, curling her toes, squeezing her eyes shut as her body spasmed over and over, Jamie being unrelenting in working her clit until she squealed and begged him to stop.\n\nHe lifted his head and moved until he was face to face with Alex, his legs still between hers. When her eyes at last opened, he was ready and looking at her longingly. He was having trouble believing what was happening. But he wanted it, wanted her, and wanted to continue to explore together with her \u2014 the first time for both of them.\n\nThe look they shared said it all.\n\nJamie moved, and Alex felt his cock pressing against her labia. It was going to happen, and she wanted it. As his hand went between her legs, her arms went around him, holding onto him as if he were saving her from something. Maybe he was, but she was not concerned about that now. She wanted him to take her, to be inside of her. She groaned as she twisted her body, opening the drawer in the table beside the bed.\n\nJamie saw her and understood. He raised onto his elbows as she tore open the small packet. Her eyes found his, and he rolled to his side and watched her unroll the condom onto his cock. She lay back, and his hand went between her legs, guiding his erection toward a hot, wet, and inviting place. He felt the head slide into her opening and heard Alex gasp. \n\nIt was there, and she couldn't keep her hips from pushing against him, wanting him to enter, to fill her in a way that had never happened before. She opened her eyes to see him looking at her almost questioningly. As she pulled his head down to kiss him, she felt the pressure between her legs increase. She was anticipating pain, but what she felt was a gentle stretching and a gradual filling that continued as Jamie tenderly but firmly pushed his hips forward until they were solidly against her. It was what she'd wanted since soon after she'd met him, and she could barely deal with the feelings that were overwhelming her.\n\nAs Jamie felt his cock totally buried in Alex's pussy, the intense feelings that were radiating from his erection to the top of his head and the tips of his toes were something he'd never imagined in his young life. Still, he wanted more, and as he slowly withdrew, her mouth opened, a moan emerging as he firmly slid in a second time. \n\nAs Jamie's rhythmic thrusting increased in both pace and intensity, Alex struggled to keep her eyes open. She wanted to see his face at that special moment, and she knew it wouldn't be long in coming. She heard a long groan as he buried his face against her neck, his lips pulling hard on her soft skin. Her body was being pressed into the mattress by Jamie's unrelenting thrusts, each one driving her emotions to levels she'd never experienced. Suddenly he stilled, his pulsing cock buried as deeply as possible in that warm, wet tunnel that was holding him tightly. It went on for long seconds until she felt his lips release her.\n\nRaising his head and struggling to speak, Jamie stammered, \"Are ... are okay?\"\n\nShe pulled his head to her and kissed him \u2014 a very brief kiss as they were still panting. \"I'm better than I've ever been, '' she said, caressing his cheek.\n\n\"Oh, shit,\" Jamie said, dropping his eyes.\n\n\"What?\" Alex said, alarmed.\n\n\"I'm sorry. I ... you've got ... one of those red marks on your neck.\"\n\nAlex chucked. \"You mean a hickey?\" she said, touching the spot on her neck.\n\n\"I'm sorry,\" he said again, Starting to roll away from her.",
        "\"Don't move!\" She was still cherishing the feel of him inside her and didn't want it to end. When Jamie had settled over Alex once again, she smiled at him. \"It's fine,\" she said. \"Tomorrow, I'll walk around proudly displaying my hickey, and all the other girls and women will be jealous.\"\n\nJamie decided quickly that they would certainly be jealous, but mostly of her face and figure. He wasn't sure about the hickey, except that he had enjoyed, well, enjoyed it all.\n\n\"We just made love,\" Alex said softly, watching Jamie for a reaction.\n\nBefore this, it had just been an expression, something that was said when you had sex. But when Alex spoke those four words, it sounded different than it ever had before. Made love. Is that what we just did? he thought. Was she that special? He smiled.\n\n\"We did, didn't we?\" he said, kissing her gently.\n\nAlex's cell phone rang.\n\n\"Ignore it,\" she said, sure Jamie was about to jump up and bring it to her.\n\n\"Might be important,\" he cautioned. \"Besides, I need to ... \" He paused.\n\nSighing, Alex said, \"Okay,\" as she reluctantly felt Jamie's cock leave her pussy. She headed for her phone while Jamie ran to the bathroom.\n\nAnother big sigh from Alex. \"Hi, Mom.\"\n\n\"You never call, so I have to check up on you. Hope you weren't busy.\"\n\nAlex snorted, then recovered. \"No, everything is good.\" She switched the phone to speaker so he could listen.\n\n\"That's great. You going to make it down here for thanksgiving?\"\n\nShe sensed Jamie coming up behind her. \"No, Mom, I don't think soooo,\" she squawked as his hand went between her legs, one finger going inside her.\n\n\"What's wrong, honey?\" Angela sounded alarmed.\n\n\"Nothing,\" she answered, backing away from Jamie, a good-natured glare going in his direction.\n\n\"Jamie was just teasing me. We're getting along very well now.\" She could barely keep from laughing out loud at the irony.\n\nJamie was mouthing to Alex, \"YOUR MOTHER WOULD DIE,\" as he swept his hand across both of their nakedness.\n\n\"I'm so glad. You'll surely be here for Christmas, then.\"\n\n\"I think I can talk Jamie into going to Florida for Christmas.\" Jamie shook his head. She almost said, \"He said he'd love it,\" but caught herself just in time. \"Yes, we're going to Jamie's mother's place for Thanksgiving.\" A smile and a shake of the head confirmed that. \"And we'll be in Florida for Christmas. I think you'll love Jamie.\" I certainly do. she thought, but didn't add that. \"And, I know I've been bad about calling, but I'll be better. I promise.\"\n\n\"That would be wonderful, dear. You know we miss you. I'm going to get nosy again. Any boyfriend yet? We want grandchildren, you know.\"\n\nAlex giggled, and Jamie rolled his eyes. \"Well, I did have a date with a boy just tonight, so, who knows. I'm sure I'll have more information by Christmas when we visit.\" She began to back up as Jamie had a very sinister look on his face and was headed toward her again.\n\n\"That's wonderful news, dear,\" Angela replied as Jamie jumped behind Alex, squeezing a breast with one hand, the other between her legs, rubbing her clit.\n\nAlex was grimacing, savoring the now familiar sensations enveloping her body, still hearing her mother's voice in her ear.\n\n\" ... seem to be a nice boy?\"\n\n\"The best,\" she gasped, her breathing already labored, Jamie's renewed erection bumping against her ass, making her anxious to return to the bedroom. She bit her lip to steady herself, and Jamie's hand stopped momentarily. \"Can I call you back later?\"\n\n\"Sure, honey. Everything okay?\"\n\n\"Per-fect,\" she was able to say as Jamie's finger was back in motion. \"Bye.\" And she pressed the red \"END\" button, not wanting her mother to hear what was about to happen.\n\n\"That feels sooo good,\" she whispered in his ear, her back pressed against his chest.\n\n\"You have more condoms?\" was his reply.\n\n\"A whole box,\" she groaned, her body vibrating with ecstasy. \"But we can get more tomorrow if we need them.\"\n\nAs he guided her to the bedroom for their \"second time,\" he thought they'd be making a trip to get more, if not tomorrow, then surely the next day."
    ],
    "authorname": "PickFiction",
    "tags": [
        "shy",
        "experimenting",
        "oral sex",
        "love making"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/youre-alex"
}