{
    "title": "There and Back Again Ch. 085-086",
    "pages": [
        "Chapter Eighty-Five: Resolutions \n\nAs we moved forward, we fought another handful of darkspawn. I am actually getting sick of fighting darkspawn, surprise surprise. With so many of us, basically only the mages and Alistair, Oghren, and Sten got a hit in. Alistair smote -- smited? -- an Emissary, leaving him stunned and with precious little mana for me to gather; I gave him a nasty look, and he chuckled. There were no ogres -- honestly, how do ogres even fit through the ridiculously small, winding tunnels anyway? -- so the risk was actually minimal. \n\nThere were several traps I wasn't expecting: Aedan and Zev took turns disarming pit traps, flame traps, and even arrow turrets. The two rogues seemed to have some sort of competition going on for the disarming; whatever gets them through this sane, I suppose. \n\nWe did have to fight some golems, though the room filled with gas was less of a problem than predicted: Shale walked in, turned off the gas, and the golems didn't react to her at all. Then the mages froze the golems in place from outside the door, and Shale shattered them. We had to listen to disparaging comments on the weakness of flesh creatures that needed to breathe to survive, but it was worth it. There were some darkspawn corpses on the ground, so we knew that at least a few spawn had made it that far; they were the last we saw, however, and were so old and desiccated that the disgusting miasma of taint that made the rest of the Deep Roads stink was almost completely absent. It was wonderful. \n\nThe next set of golems were a little harder to take down; Oghren, with his massive hammer, and Shale were the only melee fighters able to do much damage. The mages did better -- a little ice went a long way -- but still. It made me worry about the fight once we reached Caridin. I mentioned my concern to Aedan, and he agreed; we began actively looking for blunt weapons for the rest of us as we walked. Alistair ended up with a mace, and the other melee fighters all either found clubs, hammers, or maces to carry as back-up weapons. They lacked the enchantments of everyone's primary gear, but were much better than chipping their blades, which was all they'd be able to do otherwise. I didn't take a blunt back-up weapon, not that it mattered much; I didn't really have the strength to hit hard enough anyway. I'd be lucky to disturb some dust if I hit a golem with something. I could barely even pick up Oghren's hammer. \n\nThe spirit anvil puzzle was a total pain. The spirits were able to shrug off a surprising amount of damage, and unlike the hack in game that I'd found, the spirit anvil was only interactable once for each spirit we killed, not four times. Which meant we had to go around, and around, and around killing spirits. And kept getting blasted with lightning while we were at it. Poor Anders had to give up on damage and just focus on healing electrical burns, even though he was one of the more effective at hurting the spirits. Luckily there were a couple of Lyrium deposits around; when he was out of mana, he could just run his fingers over the crystals and power back up. \n\nFinally the anvil broke, and the massive, four-sided stone face-thing actually fell from where it was anchored. We defeated a final round of apparently very angry spirits, before all of us collapsed, exhausted, on the floor. We'd have paused there and had a rest, I think, except we were all nervous that somehow Branka was going to find a way to sneak around us and get to Caridin before we could. So we picked up our weary selves and worked our way toward the exit opposite of where we entered. \n\nDown another long, narrow hallway we finally reached Caridin. The room was much like in-game; there was an enormous piece of equipment on a cliff projecting out over a river of lava below, a huge monument to those who'd been sacrificed to create the golems, and a massive, armoured golem, at least two feet taller than Shale, standing at the end of a corridor made up of deactivated golems. \n\nWe approached Caridin, who was far more surprised by our presence than we were by his; Sereda stepped forward, explaining what was happening. As expected, Branka interrupted the discussion, and she and Caridin ended up in a shouting match over the fate of the Anvil of the Void. Any uncertainties regarding my story for Oghren, Shale, or the other dwarves, were cleared up, as Caridin confirmed that dwarves were indeed used to create golems, and except in accidental cases like Caridin himself and Shale, could only function if someone held their control rod, afterwards. So they had no life, no free will, no independence whatsoever. \n\nThis, of course, offended Shale to no end, though Caridin admitted she'd known the consequences when she volunteered. But everyone was horrified to hear that people were forced to go through it after the volunteers ran out. Branka claimed she wouldn't do that...but Caridin had tried to stop them as well. There's just no way this isn't ending in a fight. \n\nI noticed Zev inching behind Branka while everyone talked; Aedan was more animated than usual, trying to keep attention on himself and off of the assassin. I headed over to Oghren, hoping to keep him out of the fight. Regardless of what Branka had turned into, Oghren didn't deserve to have to kill his wife. When Branka eventually got sick of arguing with Aedan, when she realised she wasn't going to get her way, she pulled out a handful of golem control rods. \n\nZev, expecting it, lodged a small poisoned dagger into her shoulder, through the gap in her armour, strategically paralyzing her arm and taking the control rods from her suddenly limp hand. I covered Oghren's eyes with a curse as Sereda killed the poisoned, disabled dwarf. The fight took only seconds, and everyone seemed to breathe a great sigh of relief as it was over. \n\nExcept Oghren, of course. In game, with limited dialogue options, I found it was hard to remember sometimes that we'd just killed his wife; looking at his unnaturally somber face, and watching him storm off shouting curses to the Ancestors and anyone else who would listen, it was impossible to forget. I wished there'd been something I could have done to change it...but Branka really couldn't return to Orzammar, not ever. I let Oghren go, knowing he'd need some time before he was able to talk about it. \n\nFinally somewhere safe, everyone took the opportunity to rest and relax. I saw Aedan and Sereda talking to Caridin, and then Aedan left the two to continue the discussion without him. We decided to camp for a night in Caridin's snug little haven, for once not needing to worry about darkspawn. There was even a sink, of sorts, with cold running water, which we used to replenish our water skins, and then take turns washing up with. When I looked surprised, Caridin reminded me Bownammar had been used by dwarves long before he'd set up his gauntlet of traps. He didn't need the water, but didn't see the point in destroying it. It wasn't possible to get truly clean, with a shallow basin of water, no soap, and no cloths, but it still felt heavenly, even cold. Even Oghren grumblingly agreed to tidy up a little bit. \n\n\"What I wouldn't give for a shower,\" I whined, and Alistair grinned at me in agreement. \n\n\"What's a shower?\" asked Sereda. I explained, and she looked intrigued. \n\nAfterwards, Oghren proceeded to get smashingly drunk and passed out in a corner; the rest of us curled up in our usual puppy pile and went to sleep without even setting watch. For the second night in weeks, we slept without armour, and I could feel Alistair's warm, hard body wrapped around mine. It was such a change from what I'd become accustomed to that I didn't even know what to think; I was half-inclined to roll over and do something inappropriate, due to the unfamiliar warmth that spread through me as I snuggled into his embrace. And then I remembered Aedan, my brother, was sleeping less than a metre away...and the impulse disappeared as fast as it had come. \n\nWaking once in the night to roll over, I noted Sereda still deep in conversation with Caridin. Part of me wanted to be suspicious, but I'd come to trust the pretty dwarf, mostly at least. If Gorim thinks she's all that, she can't be that bad...I fell asleep dreaming of golems. \n\nSereda and Aedan spent the next day talking with both Caridin and Shale in relative privacy. What are they talking about? Aedan would only wink at me periodically, and gave none of us the chance to corner him and ask questions. Zevran was annoyed; I could tell by the way he started flirting with me, Anders, and almost anyone else who got too close. I'd gotten used to his endless innuendos back when he'd first joined us, but they'd decreased since he and Aedan had gotten serious -- he was still a tease, but it was clear it wasn't serious. Now they were back. \n\nI sighed and dragged Zev off to the side. \n\n\"Stop it.\" \n\n\"What are you talking about, bella donna? Stop what?\" \n\n\"This. The flirting, trying to make Aedan jealous. He's not over there getting it on with a golem, for Pete's sake. He's doing his job.\" \n\n\"Which involves keeping secrets from those he supposedly trusts? That's hardly encouraging.\" \n\n\"What's this really all about? You're usually the last one to get uptight about secrets. Especially when it's clear he's working on some plan, and you know he'll fill us in later.\" \n\nHe paused for a few moments, and then sighed when I fixed him with a piercing stare. \"I do not like these Deep Roads. The odour is unacceptable, and the dampness objectionable. I do not like knowing there are darkspawn all around us, and sleeping in armour, in a pile for mutual comfort. I am...sick of this. I wish to see the sun.\" \n\nI hugged him, and he clung to me just a little too hard. \"I know. Me too. I'm sorry, hon.\" \n\n\"I suppose I'd best let you go before the dirty look I'm getting from Alistair turns into something more deadly.\" \n\nI squeezed one more time, then released him. \"We'll be done soon. Just hold on a little longer, alright?\" \n\nHe nodded and sighed, going to sit alone and sulk. I rolled my eyes and went over to plop myself into Alistair's lap. \n\n\"What's got his smalls in a twist?\" \n\nI grinned at Alistair and smoothed the wrinkle on his forehead from scowling. \"Claustrophobia, I think. And perhaps...missing privacy.\" \n\n\"Privacy?\" \n\n\"Mmmm. I miss it too.\" I turned to press my front against Alistair's chest, enjoying his warmth, and ran my hands over his broad shoulders. \"I miss you.\" I nuzzled my face into his neck. \"Sometimes I think I'll lose my mind if I don't get some time alone with you.\" \n\nHe pulled me close, one hand splayed on my lower back, one cradling my neck. \"I know what you mean. Once we get back to Orzammar, the minute we have a door we can close ...\" \n\n\"After a bath. Maybe two baths,\" I interjected, and he chuckled. \n\n\"How about in the bath?\" \n\n\"Deal.\" I cuddled with him a while longer, relishing the contact, even if it was torturous to suppress my libido...again. \n\nI suggested a few rounds of sparring, and challenged Zevran to the first fight; the winner would challenge whomever he wished. And the winner, between Zev and I, was a pre-ordained fact, but I managed not to do anything stupid, and at least provide a little bit of challenge. Zevran chose Alistair next, and the two went back and forth for quite some time; it was interesting, watching the totally different styles, but somehow the two men were quite well matched. Eventually Zevran won, with a dirty trick; he put his blade to Alistair's neck as my handsome warrior cleared dust out of his eyes with a mock glare. He came to sit with me and we watched Sten, Zevran, Bel, Oghren, and even Gorim go a few rounds. Anders healed the combatants between matches, and no one challenged the mages to a duel. None of us want a lightning bolt up the arse, thanks. \n\nAt supper, Aedan finally came out to join us. Caridin had agreed to forge a crown, he informed us. Sereda was with him, describing what she wanted; I hoped it would be at least slightly more attractive than the ugly golden helmet they used in game. \n\nAedan had other news, as well. \"Caridin is going to come back to Orzammar with us, after we destroy the Anvil of the Void.\" \n\nEveryone else nodded in acceptance; my jaw dropped in shock. \"He... What?\" \n\nAedan smirked at me. \"Sereda's even more persuasive than I am. She convinced him and Shale that while new golems should not be made, there is already an army of golems to be had, if only they can be gathered from the Deep Roads and control rods can be forged. Almost every lost Thaig has dozens of deactivated golems. Caridin thinks he can wake them, or perhaps even find a way to give them sentience like he and Shale have. The darkspawn tend to ignore the golems once they're inactive, and given that Caridin's going to be relatively hard to kill, he thinks he could even go alone with minimal risk. He has pledged to find as many as he can and bring them to aid in the Blight, if he has Sereda's help and funding in researching the control rods.\" \n\n\"I...\" I stuttered, looking for the appropriate words. I was absolutely astonished. I gaped like a fish for a few moments, and finally settled with giving Aedan a huge hug, which made him laugh. \n\n\"I can't even say how happy I am! Knowing Caridin would...I just...thank you!\" \n\n\"Thank Sereda. I told her what you said would happen, and she talked him into the rest.\" \n\nWhen Sereda and Caridin joined us, I squeezed her hand and thanked her profusely. No one else was as affected, but then, no one else had ever had to watch Caridin fall into the lava before. I turned to Shale -- who actually looked to be...smiling? -- and Caridin, who was standing sort of awkwardly at the back. \n\n\"The Warden has convinced me to lead the battalion of my brethren when we fight the Archdemon,\" Shale grated out. \"I find myself almost grateful to It for the opportunity. I shall stay in Orzammar and assist Caridin in his research, and come to the surface when called with as many golems as can be found.\" \n\nI smiled at Shale, pleased that she'd found a place that fit her. I'd never liked the idea of her wandering off with Wynne trying to be turned back into a dwarf, even though I could guess it was an unsuccessful venture, if the book 'Asunder' was to be believed. I wasn't sure Shale was cut out for a return to 'bodily functions'. \n\n\"How are you feeling about all of this, Paragon?\" asked Gorim. Sereda shot him a funny look, which he ignored. \n\n\"I find it...pleasant, to have a new purpose. For so long, my only goal has been to protect the Anvil, to find a way to destroy it. I had no hope for a future as the only sentient golem, no strength to return to dwarven society. But now, with Shale at my side, and the Queen's help, I can perhaps atone for the many lives lost to my vanity after I created the Anvil, and since then in search of it.\" \n\nWe all shuddered briefly, thinking about Branka and her mad obsession with the Anvil of the Void, and what she'd allowed to happen to find it. \n\n\"We leave tomorrow,\" Sereda declared. \"Back to gather the Legion, and the Warden-Commander, and then the fastest route to Orzammar we can find. We will pick up any golems we find along the way -- Caridin has forged a handful of control rods, in addition to those Branka had -- but further searching will wait until I take my throne in front of the Assembly.\" \n\nAll eyes turned to Aedan, who nodded his agreement. Sereda's face flushed, in irritation I assumed; the Princess would not have been used to deferring to someone else's authority. We spent another night sleeping without armour, and woke early to gear up and pack our things. We set out, after Sereda used Caridin's massive mallet to shatter the Anvil, which was surprisingly fragile, and pushed the remains into the lava. For the first time, we were optimistic and hopeful about the future for Orzammar and its dwarves. \n\nThe trip back to the Legion's front line was uneventful. We picked up a couple of golems I hadn't noticed that had been standing among the traps leading to the Anvil. They were sort of creepy, actually; they only spoke when directly questioned, and even then said very little; they had no apparent personality, no thoughts or feelings at all. They called Caridin 'Master' and ignored the rest of us entirely, just walking along silently at the back of the group. They were worse than the Tranquil! \n\nCaridin paused to pay his respects over the corpse of the Broodmother, who I'd explained was named Laryn, prior to her transformation. His guilt was almost palpable; if he had never created the Anvil, Branka would never have gone to such lengths searching for it. We knew it wasn't his fault, but convincing him of that was another matter. Oghren was also uncharacteristically subdued; I hoped Aedan would be able to get him to open up later on. Aedan pushed us to move on, trying to distract attention from it. \n\nI walked with Caridin a ways, largely in silence; we did speak a little, but it was awkward talking to him, between his booming voice and noisy footsteps. I had no desire to bring up painful memories, and he seemed a little bit reluctant to engage in idle chatter. He thanked me for giving Aedan and Sereda the means to help him; I nodded stiffly, not sure how to respond to that. I had a conversation with Shale and Caridin about what I could remember about Cadash Thaig; Caridin, intrigued by the Thaig's relative lack of darkspawn, promised to take Shale and find it on his travels to locate more golems. \n\nWith no darkspawn to fight and knowing where we were going, we made good time. We pushed past our usual bedtime, but made it back to the Legion in a single, long day. To say that they were shocked to see Caridin would be an understatement; the poor man -- golem -- actually had an entire platoon of dwarves kneeling in reverence when they learned who he was. Embarrassed, he urged everyone to stand, and spent the rest of the time hiding and avoiding contact with the dwarves. \n\nDuncan was awake, waiting for us; the smile he gave when he saw us was almost like the Duncan of old, before his encounter with the Archdemon. I ran into his arms and hugged him. He'd put a little bit of weight back on, it seemed, and the dark circles under his eyes had faded a bit. His gaze was clear, and his joy obvious. When I released him, Aedan and Alistair took turns embracing him, and then he went around shaking everyone else's hands. He told us they'd fought a few skirmishes against the spawn, but not many; Kardol thought that perhaps we had cleared enough of the creatures as we came through that, in combination with the Blight drawing them to the surface, Bownammar might remain largely darkspawn-free for some time. \n\nWe settled in for the night, and I snuggled against Alistair, with Duncan on my other side again after he quaffed one of Anders' sleeping potions. \n\nWe marched back to Orzammar with a handful of golems, and the entire Legion battalion under Kardol's command. It took a week -- he took us through a few shortcuts we'd missed on the way -- but due either to our large numbers or the lower number of darkspawn remaining in the tunnels, we were left almost completely alone. And the few darkspawn we saw often tried to run as soon as our strength became obvious. \n\nIt amazed me -- if such a relatively small group, only about sixty strong, could walk through the Deep Roads with such impunity, how had the dwarves ever lost their Thaigs in the first place? When I voiced that question, Sereda replied, and the answer was obvious -- politics. Saving one Thaig required those remaining in another to help out -- which would leave their own Thaig undefended. Unable to decide together on which Thaigs to defend and which to let go, they lost them all. And gaining them back was much harder; once the darkspawn had become entrenched, it took a lot more work to root them out, and almost everything had to be destroyed or at least scoured with fire before it could be habitable again. ",
        "Sereda insisted she had plans for regaining a couple of the closest Thaigs; by offering Caste changes in return for service, she felt those Casteless who could fight could be organised into military units to do the retaking, and perhaps some of those who couldn't fight might be convinced to help with scouring the stone with fire. Once done, she intended to gift part of the first Thaig cleared to the Casteless, in a bid to clear out Dust Town. \n\n\"After the Blight,\" she clarified, to everyone's evident satisfaction. \n\nFaren actually spent a fair bit of time with Sereda, discussing her ideas for the Casteless; she proposed schools, training programs, and offering dowries for Casted families that took a Casteless as a spouse; she also planned to change it such that the children could choose which of their parents' Castes to take, instead of having it forced upon them because of their gender. That meant that any children of a union with a Casteless dwarf would elevate the entire family. A noble hunter could guarantee being raised up, just by being pregnant, without having to wait to find out the gender of their offspring, and no women who became pregnant by a Casteless man would be discarded if they refused to abort or kill their sons. \n\nShe also proposed to allow people to maintain their caste even after a divorce, to prevent abuse of desperate Casteless dwarves. That possibility hadn't even occurred to me, but apparently it was all too common among nobles with their noble-hunter mistresses. \n\nIt still seemed a bit discriminatory, to me, but Faren was actually quite impressed by the depth of the plans Sereda had thought out. I supposed that, compared to how things were, anything would be a dramatic improvement. \n\nGorim didn't seem especially pleased to see Faren spending so much time with Sereda, but he also looked incredibly proud, listening to her describe the way she saw Orzammar's glorious future; her face lit up, and she gestured with her hands as she spoke, the most animated I'd seen her since we'd met. He seemed to be distancing himself from her, though; I noticed that he often slept in the pile with all of us, while she tended to curl up alone. It hurt to watch. \n\nOghren, on the other hand, stumbled along as if in a stupor, though for once I didn't think alcohol was the problem. I'd seen it before, with acquaintances on Earth -- he was depressed. Not that I could blame him; between his wife leaving him, cheating on him, turning into a crazy person, and then being killed, he had more than enough to be bothered by. \n\nI pulled Aedan into a conversation with Duncan and Oghren one day while walking. \n\n\"I have been thinking some more about how to bring down the Archdemon if we manage to prevent the darkspawn from taking Denerim,\" I began. They all nodded. A flying target was going to make a difficult kill. \"It occurred to me that I saw a weapon, back where I came from, that might be of use if it could be adapted. And I wondered who would be in the best position to do the needed adaptations.\" \n\nI went on to describe bolas. They were a mostly South American native weapon, though I thought that they might also have been used in Africa and Asia, and I'd seen similar things being used by the comic book character Batman. They consisted of weights, attached by ropes, that could be thrown to wrap around the legs of a creature and prevent it from getting away. The versions I could recall had either two or three weights, but either way the ropes would tangle and the creature would fall. I wondered whether something similar could be used to foul the wings of an Archdemon -- but somehow, if it was to work, they'd need to be launched. Hand-throwing would not be accurate enough, nor able to make the distances required for a flying creature. \n\nOghren claimed that the smith caste in Orzammar were likely to be the best placed to develop such a launcher, and Duncan agreed. Not only were they experts at making crossbows, but most of the ballista-type weapons in Thedas had been created by them as well. Sereda, overhearing the conversation, promised to help get us in touch with a crafter of some sort who could possibly make it work. \n\nThe week passed quickly; the Legion were nothing if not efficient at setting up and taking down camp, and with the Wardens to sense the darkspawn, it was even easier to progress. Everyone seemed to have an assigned task, and they carried them out with a minimum of fuss. It was an impressive feat to see sixty people ready to go with that degree of military precision. I'd worried that getting that many people moving would take a lot of extra time in the morning, but usually the Legion was waiting on us, not the other way around. \n\nThe closer we got to Orzammar, the lighter the oppression felt; I watched our entire group, and even several of the Legion, come out of their shells and be positively joyful as we approached the city. Zev and Anders were definitely the most noticeable; the two men were practically running towards Orzammar, with smiles and springing steps that made me grin. \n\nChapter Eighty-Six: *Foot, Meet Mouth \n\nEven though it was getting late when we came to the well-lit area that I knew led to the gates to Orzammar, no one was going to stop. We pushed on, too eager to be out of the Deep Roads to camp, and arrived at the gates in the middle of the night. As such, they were closed and locked, but Duncan knew the secret to opening the complicated structures, and he showed each of the Wardens so we would all be able to do it in an emergency. \n\nHe explained that the doors were anchored by dozens of feet of circumferential metal more than a foot thick, which was melded right into the stone all the way around using some strange dwarven technology he couldn't explain. They were unbreachable even by ogres and magic, and to anyone's knowledge, the darkspawn had never managed to tunnel around one. \n\nThere were two very surprised guards, who looked like they'd woken from a nap when the doors at their back swung open, and more than fifty dwarves and a group of Grey Wardens poured through. As previously agreed, almost all of the dwarves wore full helmets, so that Sereda and Gorim could pass unnoticed. Scrambling over themselves to welcome us back to Orzammar, one of the guards ran to get the captain, though Duncan tried to convince them not to bother. \n\nThe captain was less than impressed by the late-night disruption, but was polite enough when he realised who Duncan was. He urged us to head to the estate, which was not difficult to convince us to do, and we parted ways with the Legion. Kardol promised to come to the estate the next day, and went his own way. \n\nWhen we finally reached the estate, we crept in quietly, hoping not to disturb anyone. We needn't have bothered -- apparently gossip travels fast in Orzammar, and Mistress Leta was expecting us. She was in a housecoat and had her hair up, but despite that was her efficient, no-nonsense self. She had us leave everything except personal items in the common room, vowing to have someone take a look in the morning and clean what could be salvaged, burning the rest. \n\n7 \n\nShe organised us into lines for bathing in each of the three rooms containing a bathtub. With a sparkle in her eye, she informed us that no one would be sharing a bath that night, since there were too many of us who needed in there and we tended to take too long when we bathed with friends. I was impressed she managed not to look directly at Alistair or me while making the announcement, and was too tired to be too disappointed by bathing alone. \n\nI was allowed one of the first baths -- Mistress Leta made the others draw straws, but ushered me directly into a room with the water already drawn, and Sereda, after the requisite kneeling and bowing, was put in the room next to mine. It was probably sexist, and I didn't care in the least. I found a bucket and filled it with water, first just rinsing myself off fully dressed, before I peeled myself out of my now-wet leathers and did it again naked. I piled the destroyed armour in a corner -- it was definitely going to need burning -- and proceeded to use a washcloth and another bucket of water to scrub the worst of the filth off my skin. It had been more than a week since we'd used the rune-sink in Bownammar to clean up, and even that hadn't been thorough. The black water I sluiced down the drain was evidence enough of that. I washed my hair in the bucket next, using a harsh soap meant for that exact purpose. \n\nFinally satisfied that I at least wouldn't have to sit in a tub full of filth and taint, I climbed in. The water was bordering on too hot, that perfect temperature where it makes skin tingle without causing too much pain, and I sank down into with a sigh. I didn't soak for too long -- there were thirteen people who needed a bath as badly as I did, plus a mabari and a handful of golems who'd need to be scrubbed -- so after a brief dunk, I scrubbed myself clean again, using the nicer soaps Leliana always seemed to find us, and then washed and conditioned my hair and got out of the bath. I left brushing my teeth 'til last -- I'd long ago run out of toothpaste, but had gotten some baking soda from the kitchen and used that. \n\nAll I had clean were dresses and nighties, so I slipped into the nighty picked out by Mistress Leta and opened the door. I'd beaten Sereda out, and could hear the angry shouting of what must have been Oghren being forcibly bathed by Mistress Leta. Poor Alistair had drawn the shortest straw, apparently, and was going to have to wait to bathe last. I resisted hugging him and soiling my nighty, and instead headed to our room to wait. \n\nI was exhausted, and as much as I knew I wanted Alistair, I was pretty sure that wasn't going to happen before I'd gotten some rest; somehow, though, despite the fatigue, I wasn't ready to lay down and go to sleep, either. I tried, briefly, but the bed was too soft, the blankets too warm, the pillows rustled too noisily...I was up again in less than five minutes, trying not to hyperventilate. I puttered about the room, adjusting pillows and blankets and just generally wasting time, noticing all the while that the walls seemed awfully close, and were pushing in on me more and more as time went on. It was embarrassing, as I knew in my head everything was fine, but my heart rate skyrocketed and I felt short of breath; I had to escape. With a panicked squeak, I slipped out the door into the corridor. \n\nI could hear all the commotion from the bathing rooms down the hall, and decided against going down there; I'd end up getting dirty again and needing another bath. And I don't want to admit that I'm too scared to lay down alone. Instead I wandered, eventually making my way to the library, where I chose a book somewhat at random and curled up in a convenient armchair to wait for everyone to be done. \n\nSereda joined me a few minutes later; she also picked a book, and sat staring at the pages without reading. We sat together in companionable silence until others slowly started filtering in. Bel came in, nodded at both of us, and tucked himself on the floor in a corner, not even bothering to pick out a book; Sten walked in and stood quietly against a wall, looking strange and uncomfortable without armour. Faren was next, followed by Duncan, Jowan, Anders, Gorim, Aedan, Zevran, Prince, and finally Alistair. \n\nNo one spoke. This is surreal. I ran my fingers through Alistair's soft, damp hair as he sat at my feet and put his head in my lap; I squeezed a hand here or there, but otherwise all was completely silent. Once everyone had settled in, sprawled on the thick carpet or various pieces of furniture, I finally fell asleep. \n\nDuncan woke us once with ungodly screams, remaining confused for some time afterwards; Anders went in search of one of his sleeping potions, and once Duncan was out cold, we all settled in again. Leliana, Solona, and Morrigan found us there the following morning, waking us with a tinkle of laughter. All of us who'd been in the Deep Roads, with the exception of the golems who were apparently being washed in the dining hall, were there, blinking owlishly at the intrusion in our much-needed, rather uncomfortable sleep. \n\nGrumbling and generally cranky, everyone rose and limped towards the dining room for breakfast. No one explained what had brought us all to sleep in the library when we had perfectly good rooms with beds just down the hall; I wasn't sure I knew, if I was honest. I just knew I couldn't stand being alone, and apparently neither could anyone else. I suppose it was just another puppy pile -- on carpet in a library, but still. \n\nOnce everyone had been fed, we spent about half an hour telling the stories of all our adventures in the Deep Roads, and making introductions, for the benefit of Sereda and Caridin. Oghren wandered in after a while; the only one not to join the puppy pile in the library, he'd apparently passed out drunk in his room after being washed. I got the impression he didn't remember the bath -- he wasn't angry enough -- though clearly he should have suspected something, since he wore nothing but a pair of oversized trousers that kept threatening to fall right off. \n\nThey'd have to shave more than his back to call him an elf. I choked back a laugh, averted my eyes, and continued in the lively discussion with the girls we'd left behind. \n\nIt turned out they'd had some adventures of their own; Leliana had acquired a nug as a pet, unsurprisingly named Schmooples, and Solona had been convinced to do every annoying side quest in Orzammar that I remembered from the game, and then some. She'd agreed we would - eventually - escort Dagna to the Circle Tower, rescued a woman from Dust Town whose family had tried demanding she abandon her child in the Deep Roads, run the Lyrium smugglers who'd tried to take over from the Carta out of town, and made an agreement with Brother Burkel that she'd support his bid to open a Chantry if he agreed to run a school for Casteless children in Dust Town. And then she'd hounded every Casteless family in Dust Town to ensure they'd send their child to the new school. \n\nKardol arrived as we were all admiring Schmooples the nug - though I was fairly certain that, for the dwarves at least, admiring was mostly imagining the beast roasted on a stick - and he laughed with us as Leliana scooped her beloved pet up and carried him off to her room before anyone could go beyond imagining. \n\nGiven that everyone who'd come with us to the Deep Roads was still exhausted, we decided that we would petition the Assembly for a hearing the next day, and then boarded ourselves in and refused to answer the door. I had dreams of alone time with Alistair, but was interrupted by Leliana, Solona, and Morrigan, who dragged me off to talk privately. I shot an apologetic smile at Alistair as I was whisked away; he grinned and me and blew me a kiss when no one was looking. \n\nIt seemed being basically alone together had been good for the three women; Morrigan had never seemed to like Leli, but she tolerated her now, and Leli had stopped making comments about how she would 'fix' Morrigan's appearance. Morrigan seemed to have some grudging respect for Solona, while Solona and Leliana were giggling together like old friends. \n\nThe girls seemed concerned at how I was coping since seeing the broodmother, and I shuddered as I described my horror to them again. Nothing could quite compare to how disgusting, and smelly, and slimy that creature was, and how glad I was we had slaughtered it. And then I remembered having to fight more of them in Awakenings, and had to close my eyes and forcibly relax before I threw up. \n\nOnce satisfied that I was managing, and that being alone with all those men for such a long time hadn't damaged me in some way, Leliana and Morrigan wandered off, leaving me alone with Solona. The mage had a curious look on her face, and I waited silently to hear what she would say. \n\nWhen nothing seemed forthcoming, and the pregnant silence grew uncomfortable, I spoke. \n\n\"Solona? Everything okay?\" \n\nShe jumped, and I stifled a giggle. \"Um, yeah. I'm fine. I just...\" \n\nI took pity on her. \"You want to know how Anders handled it down there?\" \n\nShe nodded, and I saw unshed tears glisten in her eyes. \"He's never liked dark, confined spaces.\" \n\n\"No, he sure doesn't. But he was okay. Better than I expected, actually. Maybe it was having all of us there, maybe it's that the Deep Roads aren't quite as claustrophobic as a dungeon cell, or maybe it was just a facade to cover up his discomfort, but he did almost as well as any of us.\" \n\n\"He left me a letter, before he left.\" I nodded; he'd told me. \"I haven't opened it yet. I...Do you...\" She trailed off, looking helpless. \n\n\"Do you want me to open it for you?\" \n\nShe looked startled. \"Would you?\" \n\nI nodded. \"I would, though I don't need to, honestly. Want me to tell you what it says?\" \n\nShe thought about it for a minute. \"Yes. Please.\" \n\n\"It says that he still loves you, and that he wants a chance to explain. There were circumstances you aren't aware of, things that happened before you met, that drove his behaviour; and rather than explain it, he tried to protect you from it.\" \n\nShe scoffed. \"Excuses.\" \n\nI shrugged. \"Yes, they are. He was stupid, and he should have known better. That said, you sure you don't want at least an honest apology?\" \n\n\"The circumstances...you know? He told you?\" \n\nI nodded. \n\n\"And what do you think? If it was you, would you forgive him?\" \n\n\"I...no. Not exactly. But I'd feel a whole lot better about myself knowing why he did it, and knowing for sure that it wasn't about me. Wasn't my fault, somehow. Being a victim is worse than being an unfortunate bystander while other things were happening.\" \n\nShe was quiet, and I waited. She has to decide on her own. I won't push. But Maker, I hope she at least talks to him. \n\n\"I...need to think. And open that letter.\" \n\nI smiled sadly. \"You want me to stay with you? Or I can get Leliana, or Jowan?\" \n\n\"No, thanks. I think I need some time alone.\" \n\nShe got up and walked slowly up to her room, and I watched her go. She looked eighty years old, and tired. I didn't blame her. \n\nI walked through the dining room on my way to my own room, nodding to the collection of people there. Anders and Jowan were looking between me and Solona's retreating back with an obvious question on each of their minds. I shrugged. Not my place to talk about it. They were seated with Bel, Oghren, Sten, and Faren, who appeared to have initiated a drinking contest - at least, the dwarves had, while Sten watched with a disapproving stare. I assumed Duncan was sleeping, or maybe talking to Kardol or the messenger to the Assembly, and that Zev and Aedan had disappeared into their room to do what I wanted to be doing with Alistair. I wondered where Sereda and Gorim had gotten off to until I noticed one additional large bedroom on the main floor was occupied. I shrugged, hoping they knew what they were doing. \n\nEveryone who'd been in the Deep Roads had shaved and had their hair cut, and all looked back to their normal selves. Most of the normally clean-shaven men had kept their facial hair short-ish during our expedition -- I'd brought along my scissors -- but they'd gotten scruffy towards the end; Duncan had been positively bushy, and I imagined he'd cleaned up some as well. \n\nMorrigan found me in the hallway on the way to my room. The witch had waited for me, trying to look casual but failing; I wondered if she wanted something. \n\n\"Hey, Morrigan.\" I tried to keep my tiredness out of my voice, not wanting her to take it personally. \"How were things here, really, while I was gone?\" I raised my eyebrows. \n",
        "She laughed. \"'Twas fine. Putting up with the Orlesian fawning over that hairless bunny-creature was a trial, and the insipid Circle mage insisted on performing every do-gooder task she could find, but compared to being trapped in the Deep Roads with broodmothers, I do not feel I should complain.\" \n\nI chuckled. \"That bad, hey? I hoped...perhaps you might come to appreciate each other a little while we were gone.\" \n\nShe tossed her head, her hair down for once and somewhat wild around her face. \"I suppose the mage has some merits; she taught me a new spell. It may prove useful against the darkspawn -- or amusing against Anders, should he bother either of us again.\" She smirked. \"And Leliana did offer me this in return for helping her keep the nug safe as we left Dust Town.\" She fingered a beautiful golden bracelet on her wrist briefly. I knew it was the closest she'd come to admitting she liked someone. \n\nI admired the bracelet appropriately, and then looked at her speculatively. \"Did you need something from me?\" \n\n\"No, no. I...\" she looked uncomfortable, but then steeled herself, drawing up to her full height with a sniff. \"I merely meant to tell you I am happy you are back.\" She paused, looking away and flushing slightly as she realised how that must sound. \"Because it means we will be leaving soon, of course. I am tired of this underground city.\" \n\n\"Of course,\" I murmured, squeezing her hand once, lightly. I knew she meant she was happy to see me safe, though she would never admit to such a mundane feeling. It made me feel warm and fuzzy, though I knew she would be mortified if I made anything of it. I resisted the urge to hug her. \n\nShe took her leave awkwardly, and I watched her walk away with a bemused smile. \n\nI slipped into my room to find Alistair pacing impatiently. He looked acutely uncomfortable, and I instinctively wrapped my arms around his waist, tucking my nose into his neck and inhaling deeply. He smelled like soap and man and that smell that was all Alistair, with not even a whiff of the miasma of the Deep Roads, and he felt like sunshine in my veins. I sniffed again appreciatively. Just his scent is making me wet. Maker, it's been too long. He settled his arms around me and rested his head on mine with a sigh. \n\n\"I don't like it here,\" he complained. \"After everything...it's too dark, too close...\" \n\n\"I know. Me too. I think that's why we all ended up in the library last night. Being together keeps the scariness at bay.\" \n\n\"I want to see the sky.\" \n\n\"Yeah, that would be good. At least I get the feel of sunshine on my face; you don't even get that.\" \n\nHe pulled back and grinned at me. \"Happy to oblige, ma'am.\" The Starkhaven accent was back, and his grin turned into a smirk as I moaned softly. \n\nI reached up, grabbing a handful of sandy hair, and dragged him down for a needy, open-mouthed kiss. His arms tightened around me, hands clenching in the fabric of the nighty I still wore; I wriggled against his chest, which felt hot and hard through the thin cloth. \n\nEasing off, he gentled the kiss and softly stroked my back. I sniffed in irritation. \n\n\"Alistair?\" \n\n\"Yes, love?\" \n\n\"Make me forget?\" Forget the Deep Roads and Branka's horrible death gurgle and the broodmother and the fact that very soon, one way or the other, we were going to lose the only father either of us has ever known...I tugged his hair, taking advantage of his gasp to sweep my tongue into his open mouth, enjoying the taste of him, strong and sweet and heady. \n\nHe pulled my nighty up, lifting me to wrap my legs around his waist. Pressing me against the wall, he released me with one hand and I felt him fumble with his trousers. I tugged at his tunic, pulling it up over his head while he ditched his pants. \n\nHis erection was warm and leaking against my skin. I gasped as he adjusted us and slid into my tight channel, clinging to him and sucking his lower lip with abandon. He stumbled back until he fell onto the bed, still buried deep inside me, and I was suddenly riding him, cowgirl style. \n\nHis hands cupped my breasts, kneading and tweaking; breaking the kiss, he pulled me to him and nipped at my neck. \"I'm not...\" he paused, groaning, as I started to ride him, hard and fast, \"I'm not going to last. It's been too long...\" \n\n\"Me either. Shut up and don't stop,\" I gasped. \n\nHe chuckled darkly, moving his hands from my breasts to my waist, then one of them dipped down further to find my hard, swollen pearl. I picked up the pace, slamming myself down again and again as he massaged it in time. I felt him shudder, knew he was close; I leaned back, pulling away from his hungry mouth, letting his length stretch and press into that delicious spot inside me. He thrust with his hips once, twice, and then on the third, pinched my clit between his fingers; I stiffened and came, writhing and undulating as he emptied himself inside me. \n\nI collapsed down on his chest, panting, and he held me while we recovered. I rolled to one side and snuggled up against him, resting my head on his shoulder, and we held each other and talked and giggled like something out of a romance movie. Before long, he had other ideas, and his hands began to stray as he captured my lips in a soft, loving kiss. \n\nWe made love again, this time slow and soft, teasing and touching, drawing it out; when I came, with him buried inside me, pinning my hips to the bed, he gasped my name and came apart, his shallow thrusts prolonging my orgasm until I had to either stop and breathe, or pass out. We fell asleep, then, tangled together, sweaty, and sated. \n\nWhen I woke, I had no idea how much time had passed, but I was hungry, so that was a good indication that it was probably at least lunchtime. I disentangled myself from Alistair, pulling my nighty on over my now-chilled body, and poked my head out our door, hoping to see someone who had stone sense and could tell me the time. No one was there, but a covered tray sat on a small table outside our door. Mistress Leta strikes again, I assume. I grabbed it and brought it inside. \n\n\"Oh, you brought food? Excellent.\" \n\nI jumped, startled, and then giggled at Alistair's chuckle. \"Not I. I'm assuming Mistress Leta. I wonder what time it is?\" \n\n\"I really wish they had Chantry candles in Orzammar.\" \n\n\"What're Chantry candles?\" \n\n\"Oh, you know, the ones with hours marked off on them. You can tell what time it is by which mark the candle's burned down to. They have a real name, but I can never remember it.\" He sat up, swinging his long legs over the side of the bed, and looking around for trousers. \n\nI shook my head, pushing him back to sit against the headboard, still naked. I set the tray beside him and pulled off my own nighty, climbing up to straddle his legs. And then, also naked, with the evidence of his arousal growing between my thighs, I fed both of us, slowly, allowing the anticipation to build, while making small talk, and generally driving Alistair insane. By the time the last bite on the tray had been eaten, and I had meticulously wiped both of our mouths with the napkin, I was desperate. I couldn't even say what I'd eaten; it didn't matter, as his hazel eyes, pupils blown wide with desire, raked over my body. Before I could even respond, he'd lifted me off him, placing me down on the bed, and lowered his face to my core. \n\nHe brought me to one orgasm and then another with his questing tongue and dexterous fingers, but instead of sated, I was steadily becoming more and more desperate. I pulled his hair, tried to drag him up so he would take me, but he resisted. Finally, I pulled away and turned over onto my hands and knees, rear end in the air, face on the pillow, and hoped I looked irresistible. \n\n\"Please, Alistair.\" I shuddered in anticipation and arousal, feeling my own juices coat my upper thighs. \n\nHis answering growl was feral, and he gripped my hip with one hand, lining himself up with the other, and entered me in one smooth stroke. I clenched the pillow with both hands and wailed my satisfaction as he filled me. I felt one hand on my shoulder, and he pulled me up to press my back against his muscular chest. His hips stilled, but he reached around and tweaked a nipple with his fingers, and I gasped. \n\n\"Is this what you wanted, little minx?\" \n\nI nodded and writhed in his arms, trying to grind myself against his erection. He circled my waist with his arm, holding me still, and I huffed my objection. He chuckled, his breath gusting past my ear. \n\n\"You tease me through that entire meal, make me want you, make me wait, and now you expect to be given what you want?\" He flicked my nipple again for emphasis, and I twitched. \n\nI'd have been frightened, if his tone hadn't been smug; I could hear him grinning. Two can play at this game, buddy. \n\nI reached up, draping my arms up behind myself, one hand caressing his neck, the other fisting in his hair, and stretched, making my breasts jut forward proudly; I felt him throb inside me at the sight. And then I pulled out the big guns, and used my internal muscles to massage his hard length rhythmically. \n\nHe groaned and his hands gripped me tighter, and then he began thrusting, finally giving me what I wanted. Losing his patience, he picked up the pace, driving into me relentlessly, and I thrust back against him as well as I was able. Releasing his grip around my waist, he stroked a thick finger over my slightly-chafed clit; I squealed and came, twitching and shuddering in his arms, and with a growl he released himself, filling me yet again. \n\nAfter recovering from our exertions, we lay, sweaty and dishevelled, his head resting on my belly. I stroked his hair, much longer than I was used to -- apparently Leli and the scissors hadn't caught up to him yet -- and he practically purred. \n\n\"I suppose we should get up and see what's going on.\" \n\n\"I suppose.\" I sighed. \"Need a bath first, though.\" \n\nHe climbed to his feet and offered me a hand, which I took, groaning under my breath from the sore muscles we hadn't used in a while. He quickly dressed while I hunted for some clean clothes, finding a pair of panties and a linen dress. I took the opportunity while he was distracted to down one of the little bottles of healing potion I kept just for that reason, when I suddenly realised things were too quiet. I looked up to see Alistair watching me, eyes dark, a scowl on his face. \n\n\"What's that for?\" \n\nI tried for nonchalant. \"Nothing.\" I shrugged. \n\n\"You expect me to believe you're taking a healing potion for no reason? Last I heard they weren't addictive, and you haven't been injured in a while...\" \n\n\"Don't worry about it. I'm fine.\" I pulled the dress over my head to avoid making eye contact. \n\n\"Don't even try it, Sierra. I hurt you.\" The self-recrimination in his tone was obvious, and I sighed and turned to look at him. \n\n\"No, you didn't.\" I held my hand up to forestall his objection. \"I just get...a little chafed, I suppose. I want you, need you -- I swear the taint makes me insatiable -- but it leaves me a little worn out, after. That's not your fault, and from what Zevran says, it's normal and it gets better with regular, ah, performances.\" \n\n\"You talked about this with the assassin?\" His tone was irritated, and I sighed. He'd stopped calling Zevran that for the most part. \n\n\"No. He just...in Denerim, without me even saying anything, he gave me a potion after. So after a few days of that, I asked. He assures me it's completely normal to be a bit stiff and sore. Especially because of your Grey Warden stamina. And I actually like the feeling, but I don't want Aedan to notice. Because reasons. So I take a small potion just to ease the stiffness a bit.\" \n\nHe turned away, shoulders stiff, tension radiating out every pore. I sighed, and walked up behind him to press my face to his back and wrap my arms around him. After a few minutes, he finally relaxed a little and covered my hands with his own. \"Never again,\" he whispered. \n\nI pulled away. \"Never again?\" My eyes were wide in horror. \n\nHe turned. \"Not like that. I'm just never going to hurt you again.\" \n\n\"Alistair, I am not some delicate flower. I'm perfectly capable of telling you if you go too far, or if something hurts.\" \n\n\"I'm not taking the chance. I can...I can be gentler. I will be.\" \n\nI scowled. \"Don't bother. Because if you're going to treat me like some porcelain doll, despite my assurances that I'm fine, then I'm not going to bed with you. You're either with me all the way, like I am with you, or not at all. I thought we were past this condescending bullshit.\" \n\nI grabbed my toiletries and turned to storm out the door. \n\n\"Sierra...wait.\" He grabbed my arm before I could leave. \n\nI glared down at his hand, then up at his face. He's making puppy dog eyes at me, damn him. \"Let go of me.\" \n\n\"Not until you listen. Just for one second.\" \n\nI pulled my arm out of his grasp. \"I'll give you five. Better make it good.\" I crossed my arms under my breasts, shoulders hunched protectively. \n\n\"Look, I'm stronger than you. I don't want to hurt you, especially by accident, but I can't help it when I know you won't tell me.\" \n\n\"I'll tell you when -- if -- it's a problem, I can promise you that.\" \n\n\"And by then it'll have been too late, and I'll already have hurt you.\" \n\n\"Okay, let's just say that it's even possible you'll do something to hurt me eventually. Which I doubt very much, by the way. Is it going to be worse than breaking my leg? How about the Joining -- will it be worse than that? Worse than a smite? I can deal with a little pain, if we somehow get too crazy.\" \n\nHe was still scowling, still upset. I sighed. \n\n\"You think you're so much stronger than me?\" He nodded, looking confused. \"You think strength in your arms is all that matters? Fine.\" I dropped my bath supplies, instead reaching for my spare armour. I stripped out of my dress and started pulling it on, piece by piece. \"I'll make you a deal, then. If you soundly trounce me in a sparring match, you win and you can treat me like a porcelain doll for the rest of our lives. But if I can hold my own -- not win, but make a real fight of it -- then you drop this, right then and there, and I never hear about it again.\" \n\n\"I...if I'm trying not to hurt you, I am certainly not going to fight you, Sierra. Not for real.\" \n\n\"Put up or shut up, Alistair.\" I fixed him with a grim glare. He cowered back, and I sighed. \"Fine, if it worries you, you may name a champion, coward.\" \n\n\"I'm not going to get someone else to try to fight you either!\" \n\n\"Then I guess when you said 'never again', you really meant it.\" \n\n\"No, I-\" \n\n\"I'm going to find us somewhere to spar. I expect you, in your armour, in ten minutes.\" I turned and walked out the door, slamming it behind me."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-85-86"
}