{
    "title": "A Religious Girl's First Orgasm",
    "pages": [
        "Growing up in a religious household, to say that I was a virgin was an understatement. I'd never even realised that masturbation was a thing. That is, until I had my 18 birthday, and was preparing for college. \n\nI had been at an open day, when I overheard a group of other young visitors discussing what wild sexual activities they predicted in their journey of college. They were clearly friends, a few of them seemed to be more than that. And they got me thinking.  \n\nI didn't want to go to college not knowing anything and be left behind. I was 18, soon I would be away from my strict, religious parents, able to explore my body however I wanted. This thought shocked me, but it also intrigued me. Of course I'd felt the stirrings of something forbidden while growing up, at a movie when the characters kissed (before my parents would skip or ban the movie for being obscene) or when I saw a glimpse of a giggling couple hurrying out of a bush looking suspiciously disheveled. But I'd never dared indulge myself. Fear of being caught, of doing something wrong, had stopped me. Until now.\n\nThat open day had given me more ideas than my parents had bargained for. For the next few days I considered what I could do, for the first time in my life turning to the internet for sexual help. I didn't watch porn, no way was I prepared for that yet. But I found a few useful sites, mostly help columns which told of other girls struggling with how to take control of their body just like me. They suggested quiet, toys, in the shower, exploring with mirrors... so many naughty ideas. From this, I somewhat shakily came up with my plan. \n\nI would have to try at home, at night, after I said goodnight to my parents. Thinking of what I was about to do left me breathless, half of me scared, the other exhilarated. I chose to start after my shower once dinner was finished. The warm water was electrifying, and I found it touched me in new ways, ways I had never allowed myself to consider before. After I was clean, I hurried into my pajamas, and went downstairs to say goodnight to my parents.\n\n\"My, you look flushed, are you feeling alright?\" My mother asked, looking slightly concerned\n\nI put a hand to my check, surprised to feel it burning. \"Yeah just the shower was hot, goodnight guys\". After a quick kiss on the cheek, I was free. \n\nI hurried to my room, and closed the door soundly behind me. Then I paused for a minute, straining to hear any sounds. Hopefully my mother wouldn't follow me to check if I was okay. \n\nAfter a brief deliberation, I turned off the light, and crossed to my bed, before diving under the covers. Now that the moment had arrived, I found I wasn't scared. In fact, I was eager, willing, and bordering on desperate. I took a few shallow breaths, before allowing my mind to wander over what I wanted to do. I had no idea what I liked or didn't. I wasn't sure how hard or soft, slow or quick to move. But I was about to find out.\n\nMy fingers fumbled on my buttons, opening my pajama top, and releasing my breasts. The clothes I always wore hid them, made them look small, inconsequential. But once they were out, boy were they something. Smooth and firm, a strong C cup, with light pink nipples, that were suddenly erect. \n\nUsing both my hands, I began to lightly stroke the points. First going in delicate circles, barely touching the skin. It wasn't long before I realised I needed more. My fingers plucked at both nipples, squeezing them lightly. A shock ran through me, down my chest, through my belly and below. I repeated this, surprised at how good it felt. My head fell back onto my pillow with a sigh, as I slowly twisted and pulled at my newfound sensitivities. For several minutes I stayed here, occasionally grasping onto my entire breast and squeezing, feeling the soft skin between my fingers. My breathing was fast, I couldn't believe how much effort it took not to moan at the sensations. Soon I became aware of other needs. A heat had grown between my legs, and I found my hips raising slightly off the bed, moving along with my now greedy fingers. \n\nTaking a deep, steadying breath, I pushed my bottoms over my hips, and down off my feet. I had never been naked like this in bed. The feeling of the cloth of my body was intense. The blanket draped down, touching almost every part of me, sending shivers up my spine. \n\nI traced my fingers over my breasts, down my stomach, and touched for the first time (that wasn't just to clean) my lower lips. I didn't shave, but in my shower earlier I had trimmed with some scissors, and the hair felt soft and warm. At first, I simply stroked the hair. Moving my fingers from the top of my mound, down close to my anus, and back again. Very carefully, almost not even touching. But still, I could feel a wetness seeping through, and finally I widened my legs. \n\nMy lips felt puffy. I stroked my fingers through the wetness, surprised at how much there was already. I wonder if this was normal. My touch was becoming firmer, sliding up and down, exploring all of the folds and dips. Through my research, I'd found a diagram showing where everything was supposed to be, and it seemed the clit was meant to be positioned right... \n\nHere. My eyes flew open and I let out an involuntary gasp as my fingers probed around the swollen nub. I froze, eyes on my door, listening in case I had accidentally alerted my parents to the sinning that was happening. After a few minutes I decided it was safe, and returned my fingers to their newest discovery. I circled around my clit once more, this time prepared and able to bite my lip to stop the moans that were threatening to burst from me. My hips wiggled of their own accord onto my hands, desperate for more of this intense pleasure. But there was another place I wanted to visit first.\n\nI regretfully moved my fingers away from my heavenly button, and probed further down. I paused at the entrance, even more surprised at the amount of the juices leaking out. I felt around my hole, feeling the edges. It seemed so tight, but after a deep breath I slowly inserted my index finger deep into me. My legs tightened and my eyes rolled back into my head, my finger now exploring the wonderful pit it had found. Juices ran down my palm, and I began to thrust my finger in and out, my breath whizzing out of me at every extraction. \n\nWhy did I wait so long to do this? I just could not believe I had no idea how much pleasure could be found in my own body. My hand was moving rapidly now, my left also moving down to return to tweaking my now engorged clit. \n\nSuddenly my door burst open, I froze, eye snapping shut as I fought to control my breathing. My fingers still deep inside me, I pretended to be asleep. \n\n\"Honey? Are you okay? I just wanted to check on you since you seemed so flushed earlier... Honey?\" Mums voice quietened, I hoped she had walked out, but before I got the chance to check, I felt her lips on my forehead. \"Goodnight sleepy girl\", she chucked, before walking out and closing the door behind her. \n\nThe close call seemed only to heighten my excitement, and with sudden determination, I pushed a second finger inside me along with the first. There was some resistance, and a mild burning feeling, but they both fit. A grin crossed my face at the feeling of fullness, and I once again returned my left fingers to their nub rubbing. My knees bent up to my chest, opening my pussy up. I began furiously pumping my fingers into my slit, the blanket quieted the sounds of slurping my pussy was making, but I could still hear it. As my breath got faster and faster, I felt a powerful building sensation. The combination of pumping my pussy and rubbing my clit seemed to be working. Was I about to experience my first orgasm?\n\nMe head pushed into the pillow as my two hands worked together. I could feel my wetness pouring out now, my teeth gritted in the effort to not moan out loud. \n\nSuddenly my pussy began to tighten on my fingers, my clit burning hot as shocking waves of pleasure exploded out of me. My hips bucked against my hand, and my mouth opened wide, breathless. \n\nIt seemed to last a lifetime, each wave as delicious as the last, until it finally quieted, and left me gasping for air. I removed my sticky fingers, lay them on my stomach and soon feel fast asleep.\n\nThus, began my, soon to be busy, journey of cumming."
    ],
    "authorname": "LadyLoverWriter",
    "tags": [
        "firstorgasm",
        "caught",
        "girl",
        "masterbation",
        "religious"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-religious-girls-first-orgasm"
}