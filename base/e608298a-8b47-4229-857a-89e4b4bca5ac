{
    "title": "Shining Girl Ch. 06: Andy & Linda",
    "pages": [
        "This completes all the stories I'll write in the 'Shining Girl' world. Jack, Teruko, Andy, Linda, Harry and Sai Fong will still pop in an out of other stories as and when the mood takes me, but this story here is finished.\n\nI would like to express my heartfelt gratitude to GrandTeton for his editorial skills, his eye for nonsense, and his meticulous proof-reading; that this story makes any kind of sense at all is due mainly to his firm hand on my shoulder and a few well-placed \"you don't really want to say that, do you?\" type comments.\n\nAs usual, I would ask that you read this purely as a story; there's no message, no moral, no parable or instructive fable, it's just a stroll through the made-up world in my head that sometimes looks a lot like the real one in places.\n\nI welcome all comment, good, bad, indifferent and deranged, please note all the deliberately nasty comments will be deleted, unless they're funny.\n\nSo please, read and enjoy!\n\nbeachbum1958\n\n___________________________________________________\n\nPart 1\n\nI had Andy in my room, in my bed, and I was just the happiest girl in the world; right now, we had the house to ourselves; Miss Langley, our bitter depressive of a housekeeper, had gone away to make her own relatives miserable for two weeks, and Freddy was hiding under a rock somewhere far, far away, so Andy and I had that whole big house to ourselves for a whole two weeks.\n\nI knew what I wanted; I wanted my sexy big brother to fuck me relentlessly, to break that bed, with me under him when he did it; I wanted large helpings of 'Yee-haarr!' stirred in and seasoned with big smoochie-smoochie , and, lucky me, so did he.\n\nWhen we arrived home, the house was deserted; good, that meant the harridan had departed for the lesser circle of Hell she brooded in, so Andy and I could spend all day, every day, naked if the mood took us, and I intended to see it did, often.\n\nFrom the look in his eyes, Andy was up for it as well, but first, I had needs that I'd been tamping down all through that endless drive down the M5. Now, at last, we had the room and the opportunity to do something about it.\n\nThe house itself is a little way outside Bath, built of that lovely mellow sandstone, like so much of Bath, and stands in six acres of grounds, so no neighbours to hear the various noises I intended to make when my Andy did things to me that needed expressing!\n\nFirst off, though, I needed a shower, so, while Andy took our various cases and bags into the dressing room, I stripped off and slipped into my en suite bathroom, and stepped under the lovely hot water.\n\nI was in a world of my own, pleasurable thoughts of Andy and me playing and being together running through my mind, when a pair of big, warm hands slipped around my waist and cupped my boobs, squeezing the girls while a pair of hot lips grazed along my shoulder and up my neck, making me squirm as goosebumps prickled all over me.\n\n\"Hello Lindy-girl!\" he growled softly in my ear, lightly pinching my nipples at the same time, making me gasp and buck against him, my body thrilling with the sudden spike of pleasure that shot through me.\n\n\"Hello big brother!\" I husked back at him, grinding my bottom against that club-like penis of his now pressing against me. \"Are you going to do my back?\" I asked him softly, wriggling against him and feeling him grind back against me.\n\n\"I'm going to do all of you; just give me time!\" he murmured as he nibbled my ear, making me sag against him as the pleasure darted through me again, grounding in my pussy, making it twitch and buzz gently . He reached up and flicked the shower off, then turned his attention back to gently squeezing and fondling my breasts, my nipples zinging happily every time he brushed or gently squeezed them.\n\nNow his hand slipped down, circling and rubbing the flat of my tummy, and down some more, until he was sliding his finger gently against my labia, fireworks going off in my peripheral vision as he played and teased, and all the while his lips and tongue worked against my shoulder, my neck, and my ears.\n\nHis other hand squeezed and gently tugged my nipples, slowly but surely driving me out of my mind as he kissed, teased and frigged me all at once.\n\nI could feel my pussy warming and swelling, making ready for him; recent virgin or not, I was ready for a hammering session, and so was he, judging by the burning heat of that thing wedged between my cheeks. As he kissed my neck and tortured and teased my clitoris, he slowly leaned on me, until I was leaning against the shower wall, only the flat of my hands holding me upright.\n\nHis hands slid down to part my legs, and suddenly I realised what he wanted to do; he was going to have me here, now, in my shower; God that was so hot, and so naughty!\n\nI gasped as he probed between my thighs, sticking my bottom out to help him, then his hands were on my bum, pulling my cheeks gently apart, and his stiff cock bumped against me, then rubbed along my perineum and against my labia, setting off another shower of sparks in my head.\n\n\"Like that, Lindy, like that...!\" he muttered, and suddenly he was sliding into me, pushing my labia apart and making me cry out as he once more stretched me, but in another way entirely this time, and nice, oh, so nice!\n\nI pushed back against him as he pushed forward, filling me completely, and as he began sliding out again, his soft fingers once more found my clitoris, and began to gently rub and tease me as he slid in and out of me again and again, faster and more urgent, but gently, lovingly.\n\nMy mind was in a whirl; I'd never dreamed sex could be this good, this gentle, this exciting, the thousand things I was feeling at once all melding together into my perfect moment with Andy, and as I felt that happen inside me, so I climaxed in a sudden rush of pleasure, like pure, golden heat blasting through me, huge and unstoppable. I screamed as the whole world dissolved around me, my body shivering and quivering with the force of my release.\n\nAs I came, so did he, groaning as he held me tightly against him, his cock threshing inside me like a live thing as it throbbed and spat the last of his sperm into me; we'd made love three times that morning, plus I'd made him fill my mouth, so I wasn't sure he'd have anything left, but dry or not, his orgasm was as intense as mine, to judge by his stiff immobility as his cock pulsed and twitched inside me.\n\nHis arms relaxed and once more hugged me, instead of holding me immobile, and his lips once more played along my shoulders and the nape of my neck as he slowly slid from me, the sensation exquisite. I could feel his heart thudding against mine, my heart hammering madly as the aftershocks rippled through me.\n\nHe turned me around and kissed me gently, soft, affectionate pecks on my cheek, my lips, my neck, all the while holding me against him by the cheeks of my bum as I shuddered and twitched, and now I fully understood what had just happened here: we'd made love, not had sex, not fucked; we'd made love, and it had affected him as deeply as it had me.\n\n\"I love you, Lindy!\" he whispered into my neck, grazing lightly as he held me, his lips moving up to once more capture mine, and kiss me like a whirlwind, like a madman, like a man in love.\n\nI kissed him back no less wildly, trying to pull him into me, to cover my body with his and be part of him forever.\n\n\"I love you too, Andy, always!\" I whispered, melting as he grinned at me, pulling me closer for yet another heart-stopping kiss; then, with a wry grin, he flicked the shower back on so we could continue what he'd so wonderfully interrupted.\n\nI insisted on helping him dry off, taking my time to handle that lovely, muscular body of his, and he did the same for me; I'm sure he wasn't trying to heat me up, but he did, and I almost needed another shower, a cold one, this time! Once were dried off, and in my case, cooled-off, we slipped on a couple of robes and went downstairs to the pantry to find something to eat.\n\nOf course, Miss Langley being the vindictive old rat-bag that she was, and knowing full well we were coming home, had cleared all the food out of the fridge, and either shoved it in the freezer, or thrown it away, before buggering-off to inflict herself on her family. With nothing to eat in the house, there was only one thing for it.\n\n\"Chinese, Indian, Pizza, or do you want to find a restaurant somewhere?\" Andy grinned ruefully. A restaurant sounded good to me, so without further discussion we got dressed and jumped in the car to find somewhere in town we could park the car; luckily it was a weeknight; weekends are impossible to find a parking spot or somewhere to eat in Bath, and Andy didn't fancy driving all the way into Bristol just for a meal.\n\nWe eventually found a nice restaurant, serving traditional English food, which was becoming a rarity in Bath, what with all the French, Italian, Tapas, Mongolian, Korean, Sushi bars and Thai restaurants springing-up left, right, and centre.\n\nAfter an old-fashioned, satisfying roast-beef dinner, with all the trimmings, such as we never got at school, and hardly ever got at home, either, I wanted to get Andy home and curl-up with him; right now I was in the mood for a soft sofa, a couple of bottles of good M\u00e9doc or Daddy's excellent Tokay, a nice long talk, and Andy in my bed when I woke up in the morning, and I could feel the same need in him.\n\nWe had two weeks to play, hump ourselves giddy, and generally explore every nook, cranny, crevice, and ticklish-spot, so I was in no rush; Andy was a banquet for me, not a burger and fries, and I intended to take full advantage of this opportunity to see what made him gasp.\n\nThe parents were off in some trendy hot-spot, no doubt experimenting with the local talent; mother and Daddy would both have their hands full with whatever post-teenage playmates they'd scored, so they wouldn't be back for weeks, not even for Cowes Week coming up in a few days, one of the annual society hot-spots.\n\nDaddy didn't sail, so he'd be off somewhere like Grand Cayman or Mustique, being photographed with his hand under some starlet's skirt, and mother was probably somewhere in the Med or points east, doing the splits under some racing driver or rising tennis-star, so I had no fear of them walking in on us, not that I really cared.\n\nFreddy was...wherever he'd slunk off to after abandoning me to the tender mercies of Jack Fineman, so I probably wouldn't see him again this summer. No, I had the house, and Andy, to myself, and I intended to make full use of them both before Uni beckoned.\n\nOnce we arrived home, we wasted no time in stripping off, finding our robes, and lounging back on the huge Chesterfield in the family room, a mound of cushions and a couple of throws making a very acceptable bed for a warm summer night. While we lounged, we talked, mainly about university for me, what came next, and how we were going to make it work. Andy wasn't too concerned, so I took my cue from him.\n\n\"Like I said, Lindy, take your first year, and give it a fair shake. If it's not for you, fair enough, I'll come get you, and you can live with me in Edinburgh; I have to admit. The thought of having you with me makes me feel good deep inside!\"\n\nWhen he put it like that, it made me doubt my decision to go to uni; could I let him go for a year, have him all the way up at the other end of the country, while I roughed-it alone in London?\n\n(I should point out here that 'roughing-it' was a relative term; the house in London is in Eaton Square, slap in the middle of Mayfair and just around the corner from Buckingham Palace; it has six bedroomsuites over four floors, a private underground parking garage, a billiards room, a cinema, and a sauna, with an elevator connecting all the floors, so not your average student digs).\n\nI just wasn't sure now that I could happily rattle around alone in the place, just me and the cleaning service, for a whole year. There was no-one I could ask, no-one I trusted enough to share this with, certainly none of my school friends; what did I do?\n\nAndy saw my dilemma so tactfully changed the subject, talking about the parents, and our Edgeworth grandparents, and how they were likely to react. Mother's parents had passed away before Andy was born, so they were just pictures in an album to me, but Nana and Grandfather lived not too far away, near Midsomer Norton, and when I was younger, I'd always called on them, as my parents were patently useless when it came to parenting issues; it's hard to communicate with a parent whose responses are being filtered through several layers of Singapore Gin Sling and Tom Collins'...\n\nAfter a good meal, and a bottle of fruity, richly-rounded Tokay from Daddy's cellar, I could hardly keep my eyes open, and Andy made such a warm, comfortable bolster, while he talked about medical school, old friends he'd met yesterday and today for the first time in years. I nestled back against him, listening to his voice rumbling softly in his chest, enjoying his arm around me, and let my mind wander.\n\nI woke in full morning sunshine, Andy's arm still around me and holding me to him, his breathing slow and deep; he was still fast asleep. The throw had slipped onto the floor, but he was so warm, and the morning sun was so delicious, I just sighed happily and snuggled back against him, completely at peace with the world. Then my lovely haze was shattered.\n\n\"Lindy, dear, just what on earth are you two doing?\"\n\nI froze; Nana! Oh my God! I squeezed my eyes tight shut, hoping it was just my imagination, but no, there it came again, soft, but clear and distinct.\n\n\"Lindy, where are your clothes? And why is Andrew naked, too?\"\n\nI slowly turned to look, and sure enough, there was my grandmother standing at the end of the sofa, one eyebrow cocked in query. I started to clamber off the sofa, but she shushed me.\n\n\"Quietly, dear, let him sleep; I want to talk to you, first. Pick up your robe, Lindy, and come with me.\"\n\nI slipped my robe on and trudged along behind her, knowing that any story I came up with to explain my being naked, in bed, with my equally naked big brother, had better be stupendously good if I were to have any chance of slipping it past her; now I knew how they felt in France when they were marched up to the guillotine...\n\nWe went into the parlour, and Nana quietly closed the door so we could talk.\n\n\"Take a seat, please, Lindy, this won't take long.\"\n\nI sat in a huddle, arms wrapped around myself, unable to meet her eyes, so I was startled when I felt her hand brush against my hair, and as I looked up in puzzlement, she lifted my chin and looked into my eyes.\n\n\"So much like your mother, and your father too!\" she smiled. \"I think I know what you were doing, in fact I'm sure, but why don't you tell me anyway, eh? And before you ask, yes, your Grandfather saw you too, but don't worry, I sent him into the garden to inspect the Azaleas, he'll be a while. Now, talk to me, Lindy!\"\n\nGrandfather knew too? Oh Christ-bloody-Almighty, how much worse could this get? And yet we were still alive...\n\nI didn't know where to start, or how angry she was, if indeed she was, because, strangely, she actually didn't seem that perturbed, so I started from the beginning, how I'd always felt that Andy was special, how much I needed him around me, how much I missed him when he was gone, and what had happened at the school, then at the hotel afterwards, and the following morning, only yesterday.\n\nNana watched my face carefully while I talked, grinning as I told her what I'd done to Jack Fineman in the park when he'd tried to abduct me, and tutting about Freddy.\n\n\"Dear Freddy, such a waste; there are so many things your father should have told him, and given him; a bloody good thrashing now and then wouldn't have gone amiss, but I suppose in this day and age if one is no longer allowed to discipline one's own children, who exactly is going to?\"\n\nShe paused for a second, looking pensive, then resumed.\n\n\"What Andrew said about him is probably correct; he did a bloody stupid thing, but I don't think he actually meant anything by it; he was just trying to show you he was the Alpha-Male in your relationship. Poor, poor Freddy, socked in the eye and chased out of the park! I wonder where he is now. I'll have your Grandfather's people locate him, just to make sure he's alright.\"\n\nShe reached over to twitch my robe into something a little more modest, and smoothed my hair back out of my eyes; such a normal gesture from her that I began to really relax; so far no fireworks, no recriminations, no histrionics, I wasn't dead yet, and I was beginning to wonder why. At that moment, my Grandfather popped his head through the garden doors and smiled at me.\n\nI was always struck by how much Andy looked like Grandfather; that same burly, square-shouldered build, the same mop of curly black hair (peppered with iron-grey in Grandfather's case), the same grey-blue eyes, the same firm chin with that characteristic cleft in it; that's probably why I felt so comfortable around both of them. Andy obviously got the full set of Edgeworth dominants from Grandfather's side of the family; if I wanted to know what he was going to look like one day, all I had to do was look at my Grandfather. Even at his age, in his mid-sixties, Grandfather was still a very handsome man; Nana was very lucky.\n\nNana looked disapprovingly at him, making him grin apologetically.\n\n\"Really, George, we're not done, please go and find something to do! Shoo, go away!\"\n\nGrandfather grinned at me and blew me a quick kiss. Poor Grandfather, he towered over Nana, but she made the rules; I suppose it must be working for them, since they'd been married over forty years now. Nana made a shooing gesture, so he winked at me, gave me another grin, and disappeared from view. I squared my shoulders.\n\n\"So, Nana, you caught us 'in flagrante'; what's next? Are you going to tell Daddy and Mother?\"\n\nNana smiled, the merest twitch of the corners of her mouth, and once again I was struck by how much I looked like her; she had Daddy's features, that same chin, the same mouth, even the same nose, but her hair was the same rich auburn as Daddy's, whereas I had a sort of generic brown.\n\n\"No Lindy, I don't see that would serve any...purpose,\" she said, and I knew what she meant; she adored daddy, but she had no illusions about him; that was why the chairman of the board and most of the directors were Daddy's older brothers and their sons; Daddy was destined to be a playboy, Mother was only ever going to be a Socialite, which was why her brothers ran all their family industries. That was what they both wanted, so their brothers all gave him what they wanted, and in return they stayed away from anything as boring as actually taking an interest in the various businesses, which was probably a good thing for the economy of the country in the long run.\n\n\"Lindy,\" she continued, \"I just want to know one thing: where do you intend taking this...liaison with Andrew? He's your ha...he's your brother, there's no escaping that fact, how do you expect to carry this off?\"\n\nI hadn't thought too deeply about that; I'd been so caught-up in him, in being with him, I'd never really thought how we'd do this; I guess I had subconsciously been relying on Andy to automatically make it all right for me, the way he'd always done. She had that eyebrow quirked again; time for an answer.\n\n\"I...don't know, Nana; I suppose I'll go and live somewhere with Andy...Andrew, somewhere no-one knows us; I doubt the parents will pry too deeply,\" she smiled at that, \"so I suppose whatever we do will be whatever's best for us. I want him, I know I do, and I know he wants me too. One day he'll be a doctor, and I'll be very happy to be a doctor's wife and not Linda Eugenia Francesca Grosvenor-Edgeworth, society shark-bait and Socialite-in-Training. Until then, well, we shall have to see.\"",
        "Nana smiled delightedly.\n\n\"I'm so glad you know your own mind, darling! Andrew is a lucky boy! It's just a good thing they don't have all that 'Debutante, presentation at Court' nonsense anymore, I'm not sure how your darling mother would have handled it!\"\n\nI had to smile; Nana was one of the last of the real Debutantes; she'd 'come-out' and been presented at Court in 1957 before the Queen abolished all that stuff in 1958, and louche as she was, I suspect my mother would have jumped at the chance to shoe-horn me into one of those ridiculous dresses and trot me out in front of the Queen if that archaic nonsense still survived; at the very least, it would have got her photographed yet again for the Society pages of 'Tatler'; now, with me (hopefully) somewhere a long way away, playing bang-bang with Andy, even the remote chance of that ever happening was fading, and as for prancing around in front of 'The Germans' in a stupid frou-frou dress...\n\nWhile she was off the subject of my nakedness with my brother, I had a question of my own.\n\n\"Why are you here, anyway, Nana?\"\n\nShe looked blankly at me for a second, then grinned again.\n\n\"I'm having some old friends to dinner tonight, and they're bringing some of their eligible offspring, so I was planning on doing a little match-making.\"\n\nI looked pained at that, but she touched my arm reassuringly.\n\n\"Don't worry dear, I'm not about to foist some minor county society lout off on you, I actually popped-in to see if I could intercept you before you went off and did whatever it is you do, as I can't seem to pin you children down for five minutes these days, and what do I find instead? A scene straight out of 'Caligula'! Poor Barty Reeves-Wood is going to be devastated!\" she grinned mischievously.\n\nI wasn't devastated; the Reeves-Wood simpleton had halitosis that could blow a hole through a steel dinner-tray, and left a trail of tarnished silverware and asphyxiated houseplants and wildlife wherever he went. Last Christmas at Nana's house he'd tried to haul me under the mistletoe and I'd had to accidentally stand on his instep with a stiletto heel until his eyes crossed and he forgot all about me...\n\n\"If you're sure...\" I said, uncertain if I was ready to go that public this soon in our relationship, but Nana was a subversive who always threw fun dinner-parties; it would just be a real strain having to pretend Andy was nothing but my older brother, but what the hey...\n\nNana grinned disarmingly.\n\n\"I just thought you and Andrew might enjoy being dangled as bait; maybe it'll liven things up a little! Of course, now that you're both taken it might be a bit difficult...\" she trailed off suggestively.\n\n\"Excuse me just a second...\" I said, and opened the door to the family room, where Andy was still fast asleep on the sofa, looking so adorable I wanted to run over there and bite him.\n\n\"Andy, Andy!\" I called. His eyes snapped open and he sat up.\n\n\"What is it, what's wrong? Lindy...?\"\n\nI beckoned him closer.\n\n\"Come in here, baby, and put your robe on; Nana and Grandfather are here!\"\n\nHis eyes widened and his mouth dropped open in shock.\n\n\"Oh Jeez, you mean they...both of us...on the sofa...?\" and I nodded.\n\n\"They know, baby, and don't worry, it's all OK, Nana's alright, ditto Grandfather; he's been banished to the garden, you might have to go and find him in a minute, but Nana wants to talk to you now.\"\n\nHis eyes narrowed, and I had to grin.\n\n\"Really, Andy, it's all OK, just make yourself decent and come in here!\"\n\nSomewhat hesitantly, he followed me into the parlour, where Nana smiled brightly at him as she pecked him on the cheek.\n\n\"My goodness, Andrew, you really are the spit and image of George when he was your age; we shall all have to watch out for you, you handsome devil you!\"\n\nAndy, normally so quick on the draw with a witty riposte looked more than a little sandbagged by Nana's charm offensive, given the state she'd found us in.\n\n\"Erm, yes...lovely to see you, Gran...er...\" he floundered, while Nana's eyes gleamed happily, until finally she took pity on him.\n\n\"Calm yourself dear, you and Lindy are of age, and quite frankly, I can see why both of you embarked on this...whatever you want to call it. Do calm down, darling!\"\n\nAndy stopped alternately flashing beet red and deathly pale as Nana's words sank in.\n\n\"You mean you...I mean, you're not ...?\"\n\nNana chuckled musically, that sweet, indulgent laugh she seemed to keep especially for us.\n\n\"No dear, I'm not 'pregnant pause', or indeed anything. Just be a bit more discreet in future! Now, the reason I stopped by was to nab the pair of you for dinner tonight. Do come, darlings, it will be fun, and you look so dashing in a dinner jacket, dear! You'll both have to keep your hands off each other, but, as you're now a couple as they say, you can at least torture my friends' eligible sprouts from a distance!\"\n\nAndy grinned at that.\n\n\"You're a mean, hard woman, Gran, that's a terrible thing to do!\"\n\nNana grinned innocently.\n\n\"Yes, it is, isn't it? And so much fun, too! Eight o'clock sharp, dears, and Lindy, darling, wear something alluring; I want the devastation factor off the scale tonight! Andrew, please go and put something on, and go and find your Grandfather before he falls in the Koi pond again...\"\n\nWhen he'd left, something she'd said earlier rose up and demanded my attention.\n\n\"Nana, earlier, you almost said Andy...Andrew was my ...half-brother; is that true?\"\n\nNana looked sideways at me, then shook her head.\n\n\"I suppose I had better tell you, otherwise you'll never let it go. Yes, Andrew is your half-brother; his father is...your Grandfather.\"\n\nOK, I never saw that one coming; Grandfather George was...Andy's father? This was Level 9 on the scale of bizarre shit my family had gotten up to.\n\n\"Go on, please,\" I heard myself say as I tried to bring myself back into focus. Nana pulled me closer, once again rearranging my robe as she told the tale.\n\n\"When your parents got married, Chloe was already pregnant; she'd been up to her usual tricks, and she and George had been having a little fun, only she got caught by surprise and ended up preggers. Her dear mother had been my best friend, and I couldn't let her be alone and just have a child like that, so your father, who'd always been her good friend, agreed to marry her; I think he thought it was all a bit of a lark. So he did, just to give the baby a name.\"\n\nAh-ha, so that was why my parents seemed so unconcerned about each other's dalliances; they really weren't interested, they'd only gotten married to give Andy a name. Poor Andy, but now that uncanny resemblance to Grandfather made sense. I was still a little shaken, though.\n\n\"But Nana, doesn't that mean Andy's my uncle too, if he's daddy's half-brother...?\n\nNana smiled secretively, then winked, possibly the dirtiest wink I'd ever seen.\n\n\"Lindy, Lindy, that isn't so, and for a very good reason; Andrew isn't your uncle, because George isn't your father's father; your father comes by his decadent nature honestly, darling girl!\"\n\nNow I was shocked.\n\n\"Nana!\" I gasped, \"you mean...?\" and she smiled wickedly.\n\n\"Yes dear, I know, shocking isn't it! Your Grandfather and I have always had a ...relaxed attitude to what the other does; our marriage was pretty much arranged to tie up the family businesses, and we were hardly consulted; I wasn't exactly straining at the leash to get married, not with all those lovely Oxford and Cambridge undergrads to road-test, and George was having far too much fun bouncing French-Moroccan film actresses off the walls of his Mayfair penthouse; our parents had to literally frogmarch us down the aisle!\"\n\nShe paused to catch her breath, her eyes alight with memory.\n\n\"We just saw no need to...limit ourselves, just because our parents saw fit to shackle us together; he was absolutely gorgeous then, I have to admit, and I did love him, I still do, more than anything in the world, but I wasn't IN love with him, and he was pretty much the same about me; as long as we kept it off the lawn so as not to frighten the dogs, or off the ballroom floor to avoid stains, we did as we pleased. Your father's real father was such a sweet boy, if a little feckless, but he was so pretty; Nigel looks just like him, and so do you, and poor, confused little Freddy.\"\n\nMy head was spinning with all this information. Nana took my hand and squeezed it gently as she once more brushed the hair away from my face.\n\n\"Bit of a shock, eh, finding out your sweet old granny's actually a banged-out old society tart?\"\n\nI snapped around to stare at her, to see her wicked grin again.\n\n\"Relax Lindy, I told you all this so you'd know who and what we are, and probably explain a bit about your parents, too.\"\n\nBut there was one thing that felt so bad right now, and I could feel it in my chest, wanting to burst out.\n\n\"Nana, what you said...about...daddy, Grandfather, but he's not my Grandfather...?\"\n\nNana took me by the shoulders and pulled me around to look into my eyes.\n\n\"Don't you even think that, Linda! George is your Grandfather, you're his granddaughter, and he adores and worships you! It's not about the blood, it's about the bond; when you were six, and you had that bad bout of flu, it was he who put your cot outside on the terrace to cool you down, and sat up night after night to watch over you, and it was he who sat with you day after day while your parents were off God knows where, and it was he who press-ganged and threatened the best doctors in the country to look after you; it was he who taught you how to swim, played tea-party with you, took you to the seaside, make cupcakes with you and read you to sleep on his lap, and it was he who created all those funds so his favourite granddaughter would never want for anything! He is your Grandfather, in every way that counts, and you are his granddaughter, and don't you ever forget that!\"\n\nThat burst the floodgates, and I spent the next few minutes soaking Nana's designer blouse, but she didn't seem to mind. When my bellows had died down to the occasional snotty sniffle, she took me upstairs and pushed me in the shower while she went to find Grandfather and Andy. When I came down, most of the ravages repaired, in a light summer dress, I spotted the three of them under the Gazebo in the rose arbour, chatting amiably. Andy had found time to put on an England rugby shirt and a pair of shorts, and as I walked up, I was once again struck by just how much he resembled Grandfather; difference was, now I knew why. I slipped up next to Grandfather as he stood, and put my arms around his waist; right now I needed my Grandfather, and he seemed to understand that.\n\n\"Do you hate me, Grandfather?\" I asked him in a small voice, and he looked puzzled.\n\n\"Why would I do that, Lamb-chop?\" he replied, genuinely puzzled, and I indicated Andy.\n\n\"This morning...Andrew and me...\"\n\nGrandfather hugged me closer, and his morning smell, a sweet mixture of Walnut Mix pipe tobacco, fruit drops, and Yardley Citrus and Wood cologne once again washed over me.\n\n\"I was...shocked, Lamb-chop, but this is your home, and you're both of age, so no, I have nothing to say; you'll work it out, Lindy!\"\n\nI kissed him and took Andy's hand. He tried to pull me into his lap, but Nana looked pained.\n\n\"In a chair, darling, there are enough to go around!\"\n\nI grinned and sat sedately while Nana finished briefing Andy on the upcoming dinner, and then they were leaving. We walked the grandparents to their car, then stood waving at the front door until they were out of sight; I wonder what they would have thought if they'd known Andy had his hand up the back of my dress, inside my panties, gently tickling my bumhole and teasing my pussy. I was hopping from one foot to the next, trying not to squirm, getting an odd look and a knowing smile from Nana, and I promised myself I'd kill him, slowly, preferably by humping him to death...\n\nOnce they were out of sight, I spun round, only for him to get there first, his lips crushing mine even as his hands slid down to squeeze my bum, pulling me up tight against him so he could rub his bulging crotch against my suddenly tender slit.\n\nWe kissed and rubbed together, then he released my bum to slide my zipper down so he could pull my dress down in one quick move. As I was now standing there in just my panties, I grabbed his sports shirt and tugged it off him, then kissed him some more as he slid my panties down.\n\nI wanted to have him in my bed, but Andy had other ideas, tugging down his shorts so his thick, swollen cock jutted out from his groin; as soon as I saw that, I couldn't have cared less where we did it, just as long as I got that back inside me, where it belonged! Luckily our makeshift bed was still more or less intact, and suddenly Andy was pulling me onto him to sit astride him and slowly feed that wonderful pants-python into my sopping wet pussy. I nearly saw stars as he once again parted my lips as he slid into me, and I responded by humping and hunching madly on top of him while he rammed into me.\n\nNeither of us could keep up that kind of pace, and I broke first, screaming into his neck as my orgasm scythed through me, filling me with white light and pulsating, glowing heat. Andy barked out a sort of coughing groan as I tightened around him, then the feel of his cock swelling and pulsing inside me as he filled me with his thick spunk was more than enough to set me off again.\n\nI slumped down against his chest, savouring the texture of his chest hair against my cheek, the long, soft, almost downy black hairs beginning to shroud his chest and outline his abs, with the sexiest line of dark hairs leading to his navel. Andy was never going to be a bear, but I was glad he wasn't one of those waxed, spray-tanned, asexual, anaemic-looking shop-window mannequins, either.\n\nA trickle of sweat oozed down between his pectorals, and, on impulse, I intercepted it with my tongue-tip, just to see if it tasted as fresh as it smelled; I'm pleased to report that it did: tangy, salty, all kinds of other, more subtle hints, but all him, all Andy.\n\nI don't know how long we lay slumped there like that; I was captivated by the slow pulse of his heart, the sound of his breathing, the fresh, salt-tinged smell of clean male, and the comforting feel of his arms around me, with his big, soft hands clasped firmly around my bum; I knew for a fact that he would hold me like that forever if I were to ask him, and that was enough for me.\n\nI was almost asleep again when he patted my bottom, jarring me out of my reverie.\n\n\"Breakfast?\" he enquired, and with that I realised how hungry I was. I didn't want to move just yet; my Andy-pillow was far too comfortable, but then he tried a distraction tactic I'm sure the UN have outlawed; he began kissing me; little nibbles at first, but persistent, and I began to take an interest, and kissed him back, and before I knew it we were snogging like crazy. To my way of thinking, we hadn't done anything like enough kissing in the last two days, so, as long as he was still inside me, and still interested enough, it was time for some intense lip-hockey.\n\nAs we kissed, I could feel him firming-up again inside me; he'd never really gone completely soft, and now I could feel that lovely girth filling me again as he warmed-up. Suddenly, he rolled us onto our sides, then once again, so I was on my back underneath him, and he began to thrust into me. Since we'd already had one great session, I knew he'd take a while to get to the boil, and so I zoned-out as he hammered himself into me, mini-orgasms rolling through me again and again as I lost myself in what we were doing.\n\nThe feel and scent of him above me, his lips hungrily searching mine out again and again, the sensations deep inside me as he powered his thick cock into me endlessly: I was in heaven. I think I came at least ten times as he rammed into me, but when he shortened his strokes and pulled my legs up over his arms, I knew he was close, and when I came one last time, I tightened involuntarily around him, making him gasp out loud as I pushed him over the edge. His cock shuddered and pulsed inside me, once more flooding me with his creamy spunk.\n\nAndy slumped down, his heart hammering against mine, his body hot and shiny from his exertions; he looked so delicious I'd have gone around with him all over again; alas, it was not to be; poor lamb was drained by his exertions, as was I, so we spent the next little while recovering enough strength to stagger upstairs for a refreshing shower so we could go out and find brunch somewhere.\n\nWhen we got back home, after having done a little shopping to fill the fridge, Andy lured me upstairs and once again yanked my panties off; I should have fought him off manfully, defending my honour with mightb and main to the last of my strength, but I was far too busy tugging his pants down to give a shit; all I wanted was a mouthful of man, and Andy was too much of a gentleman to refuse me, only this time I didn't have it all my own way.\n\nHe manoeuvred me around somehow so my pussy was over his mouth, and, as I suckled him, he lapped away at me, driving me crazy, sending waves of good stuff charging through me, until I came in a screaming climax that set him off, flooding my mouth with tasty man-fat, pulse after pulse of the stuff, making me wonder where all this was coming from, after the morning we'd had. Still, I decanted him thoroughly, and once I'd licked him clean, we were able to finally sleep in my bed, his hands clutching my bum possessively while I kissed and licked his chest and neck until I fell asleep, fucked to perfection by my man.\n\nI awoke in the golden light of early evening, feeling rested and wonderfully refreshed. Andy was fast asleep, spooning me, his tummy and chest lovely and warm against my back, with his arm held protectively around me. I loved the feel of him hugging me; I always had. It occurred to me that we'd never actually had a cross word between us, nor a single argument; whatever he'd said, I always just took for granted he was right, and we'd never been at swords-point over anything, not even from my earliest memories; it was almost as if we were two halves of the same thing.\n\nFreddy was another story altogether; we'd never been able to develop even an entente-cordiale, let alone a normal sibling relationship; from early days everything about him had rubbed me up the wrong way, and our interactions would invariably degenerate to the point where I ended-up dragging him by the scruff of his neck to the Koi pond, with every intention of shoving him in and keeping my foot on his neck until he stopped squirming. Andy saved his life so many times...\n\nI suppose in hindsight he'd been pretty much harmless, if more than a little repulsive, but the episode in the park just two days ago had put him outside the pale with me. Andy was still protective toward him, even if currently furious, but he was lucky I wasn't deciding his fate just now, because being tied in a sack with a starving pack of rabid weasels would have been the least of his problems...\n\nAndy woke while I was musing, his big arm pulling me closer even as he kissed the back of my neck.\n\n\"Hi Lindy!\" he murmured, making me flush with pleasure and wriggle delightedly as the hairs on my neck stood up; every time he called me 'Lindy' it seemed to have an extra little spin on it, and only he could say my name that way. Even today, all these years later, no-one can call me 'Lindy' the way he does.\n\n\"Are you ready to go forth and torture Gran's dinner-guests?\" he murmured, roving his hands over me, not trying to excite me or anything, just re-acquainting himself, as it were.\n\nThe last thing I wanted to do was sit around a dining table while Nana and her depraved old swinger friends rehashed their glory days, but I couldn't very well tell Andy that; instead, I tried to think of a way to fend off that idiot, Barty Reeves-Wood. Barty was the kind of too-rich, public-school lout who calls girls 'totty' and slaps them on the bottom as though he had a right to; as those things piss me off, coupled with his disgusting habit of continually swilling good champagne like a hog in a dinner jacket, which gave him breath bad enough to take the shine off a marble fireplace, I resolved to make him truly miserable. The way I saw it, I was owed some compensation for not being able to sit next to Andy and interfere with him under the table.",
        "Mother and I are about the same size, and as she dresses far too age-inappropriately, I had no compunction about rummaging through one of her dressing rooms for a designer dress she'd never worn, and never will.\n\nWhen I came down, hair brushed and curled, I was buttoned into a tiny, figure-hugging, black, sequinned 'fuck-me' cocktail dress that was backless, side-less, and pretty much front-less, nude stockings, and a pair of Louboutin's with lethal steel spikes for heels that she probably wasn't even aware she owned.\n\nAndy was waiting for me at the foot of the stairs, looking delicious in his dinner jacket, crisp dress-shirt with a subtle pleated front, and antique carved Jet studs. He grinned when I did a twirl for him, then grabbed me to slide his hand up my dress and squeeze my bottom while he kissed me.\n\n\"Bloody hell, Lindy, I've changed my mind!\" he grinned. \"Screw the dinner, I'd rather rip that off and eat you!\"\n\nAs that was exactly the effect I'd been shooting for, I could relax; now, all I had to do was to manoeuvre Barty the idiot into position for me to clobber him good and proper; those spike heels were either going through his feet and into the floor, or I was going to hammer one in each ear and see if I couldn't make them meet in the middle. Nana wanted mischief and pyrotechnics; I would do my level best to give her some.\n\n*\n\nAll in all, it wasn't too bad an evening; I spent most of it trying to be demure while having to watch Andy being fawned-over by various incarnations of Lavinia Trust Fund-Obscene Wealth.\n\nI had Barty and his oik friends to deal with, although Andy made a point of periodically staring at them with one raised eyebrow whenever he thought I needed the assist, which wasn't often; boys like Barty only have three actual brain cells, all dedicated to throwing food around in restaurants, with the sexual sophistication of wart-hogs, the seduction technique of autistic orang-utans, and all the charm and charisma of a botched vasectomy.\n\nAll was going well. I kept Barty and his numbskull friends at bay by simply walking away whenever one of them tried to talk to me, which confused them, made Nana grin, and got me a big wink from Grandfather every time I did it, and then it happened.\n\nI was chatting with one of Nana's friends when a hand clamped on my bottom and a gust of dragon breath whistled in my ear, melting my ear wax, and making the nearest candles burn bright blue. The Barty idiot had somehow sneaked up on me, and now I was trapped, with that retard groping my bum like he had a right; he was actually trying to poke his finger into my bumhole through my dress!\n\nI just saw red as raw fury blazed-up inside me; this dick thought he had a right to do something like that to me, did he? I don't fucking think so! I stamped down hard on his instep, feeling a slight 'pop' as my needle-pointed killer spike heel went right through his shoe and into his foot, and swung my clenched fist into his crotch, just as Andy had drummed into me when I was young.\n\nBarty opened his mouth to scream, or vomit, or perhaps both, and suddenly he was sliding backwards as Andy effortlessly hauled him out of the room by the scruff of his neck. All his friends stood there open-mouthed, while the olds all pretended to be interested in the wallpaper; obviously they'd all had enough of idiot-boy and his antics too, even his parents.\n\nI followed, interested to see how Andy was planning on killing him, so it was a little disappointing that all he did was shove him head down in the fountain; then, as he surfaced, Andy grabbed the waistband of his trousers and yanked hard, ripping them completely off him, taking his boxers with them, which had to have hurt, while all his beefy-faced cronies watched in shocked silence. Andy hauled him upright by his hair and pulled him close.\n\n\"The next time you touch my sister, you limp-dicked imbecile, or even look at her, I'm going to shove my hand down your throat, grab your balls, and yank you inside-out; are you listening?\"\n\nBarty nodded, his face a picture of terror. Andy looked so menacing even I felt sorry for that idiot, but most of the girls were gazing at him adoringly, 'My Hero!' flashing on and off above them in big letters; obviously Barty and his oik friends had pissed them off too, which was tough luck for them, because he was going home with me, hah!\n\nAndy shook him once more.\n\n\"I'm going inside to say goodnight to my grandparents; when I come out, you had better be gone, because if you're still here...\"\n\nWith that he gave him what looked like a light push in the chest, but Barty went staggering. Andy walked up to me, and offered his arm.\n\n\"Coming, Lindy?\"\n\nLeaving Barty there shivering with terror while I tried manfully not to giggle (and believe me, there's no more ridiculous sight than a man in a dinner jacket, dress shirt and socks, naked from the waist down, with his wedding tackle swinging in the night breeze...) we strolled back into the house, where Nana was waiting with a mischievous grin on her face. Andy tried to apologise, but Nana wouldn't hear of it.\n\n\"Nonsense, Andrew, you were looking after your sister! I saw what that boorish oaf did, so did your Grandfather; if you hadn't done something, he certainly would have! As it is, Barty's father was laughing so hard your Grandfather had to take him into the billiards room and thump him on the back! Barty's getting scant sympathy tonight; his poor mother, though, she was absolutely mortified, poor dear; I must take her to lunch tomorrow!\"\n\nFrom that, I gathered that the night's entertainment had come up to scratch, and would provide gossip for weeks to come...\n\nWe took our leave, Andy once again handing me into the E-Type, not sparing the glances at my legs as my hem rode up nearly to my waist. He was silent on the way home, but I noted how his glance kept flicking to my thighs, where my stocking-tops were in plain view and then back to the road, so I helped matters by slowly easing my hem up even further, giving him a flash of bare thigh. Andy twigged on to what I was doing, his smile getting broader and broader, until he swung off the main road and down a quiet lane, eventually pulling into a lay-by and switching off the engine. It was a full moon, so the light was good, and I saw the expression on his face; he wanted to play; good, so did I!\n\nAndy jumped out of the car and came around to open my door and help me out, and I defy any woman in the world to climb out of a low-slung E-Type without giving any bystanders a free show; luckily the lane was empty. As I stood upright, he pulled me close, his lips finding mine even as his hands caressed my thighs and cupped the cheeks of my bottom. I was wearing a tiny little thong, more of a g-string than anything else, to minimise VPL, so my bum was effectively bare anyway, which just made him squeeze and pull my cheeks apart even more, making me gasp at the sensations as he stretched my bum-hole open.\n\nAll the while, he was kissing me hungrily, almost roughly, although to be honest, I was being just as physical; right there and then I wanted him more than anything in the world, and I could tell he was feeling the same way. I didn't want my brother to make love to me, either; I wanted him to bang me as hard as he could! \n\nHe broke our kiss and held me, panting, as his hands roamed around under my dress, touching, feeling, sliding over my body, and making me very hot. I needed a breather too; my internal temperature was off the scale, and when his hands found my nipples, I nearly fainted.\n\n\"Oooh God, yesss!\" I moaned, wrapping one leg around him so I could pull him even closer to feel that bulge once more tease and torture my sensitive slit.\n\n\"I've been wanting to do this all night!\" he moaned in my ear, \"I couldn't stand it any longer; if we hadn't left when we did I would have just dragged you upstairs, fuck what anybody thinks!\"\n\nAs he spoke he was gently pushing me backwards, until I was sitting on the bonnet of the Jag. Andy pressed forward, and suddenly I was reclining on that long, swooping bonnet, the metal feeling icy against my overheated skin. As his lips once more crushed mine, he reached under my dress and tugged my thong down, so his hand could rub and fondle my juicy pussy; I gasped as he slid a finger inside me, then two, frigging me as his thumb gently pressed against my clitoris, sending me higher and higher with every movement of his hand.\n\nI tugged my dress down to free my aching nipples; his lips immediately clamped around them, one after the other, licking, sucking, and gently biting them, making me even hotter, driving me crazy with need for him, and when he slid one finger into my bumhole as he frigged me, that was enough to send me over the top. My teeth clenched as I tried not to scream with the surging force of my release.\n\nAs I came, Andy was suddenly leaning over me, and his thick cock suddenly jamming into me was enough to set me off again, a whole string of orgasms blasting through me as he hammered his cock into me while I half sat-half reclined on the car bonnet. I laced my hands together behind his neck to support myself as I thrust my hips at him, meeting him thrust for thrust, and we fucked like crazed mink in a deserted country lane, in the middle of the night, on the bonnet of my mother's classic sportscar.\n\nI must have come half a dozen times, each better than the last, before Andy started his short, powerful strokes, and I knew he was nearly there, so I squeezed him, hard, as I kissed him, and that finally brought him on, a loud groan escaping his lips as I felt him swell inside me, then a series of pulsing, muscular tremors as he emptied himself inside me, his body rigid and his breath hissing through his teeth as he filled me up again.\n\nLuckily I was sitting almost upright, as I was able to hold him as he almost collapsed with the aftermath of such an explosive climax; he rested his weight on the car, but his chest was pressed to mine as he hugged me in a gentle bear-hug, and I could feel the runaway pattering of his heart against mine. I let him catch his breath, then nipped his earlobe with my lips.\n\n\"Better now, baby?\" I murmured, and in answer he shifted his weight so he could pull me closer and squeeze my bottom playfully.\n\n\"Much better, Lindy!\" he grinned, \"that was incredible, thank you!\"\n\n\"What brought this on, then?\" I grinned, and gasped as he pulled my bum cheeks apart again.\n\n\"When I saw that idiot touch you, I wanted to kill him; I can't help it, Lindy, all I know is that you're mine, and I'm yours, and no-one comes between us, and no-one touches you, only me! I can't help how I feel, baby-girl, I just got so jealous when I saw him pawing you like that!\"\n\nI was thrilling inside as he talked; I felt the exact same way, but I hadn't known how to say it; now he was saying it all for me, so I did the next best thing.\n\n\"Take me home, Andy; take me to your bed and show me how much you love me!\" I whispered in his ear.\n\nAndy smiled, and then he kissed me, a long, slow, tender kiss; never mind that my boobs were hanging out of my dress, or that my thong was hanging off one ankle, it was still the most romantic moment of my entire life, as we committed to each other in a deserted country lane late one moonlit summer night. Eventually we reluctantly stopped with the kissing; wonderful as it was, I didn't want to spend the night here; I wanted to bend my bed with Andy, so I let him help me up, pulled up my panties and rearranged myself back into my dress for the short drive home.\n\nOnce home, I slipped into the shower while Andy put away his suit then joined me, both of us actually taking a shower; no hanky-panky this time; we had the rest of the night for that, but the feel of his hands on me as he soaped my back and shoulders...words fail. Once we were pink and shiny clean, Andy helped me dry-off (such a kind boy, and he found such nice places to rub as well, I must keep him...) then helped me fluff out my hair as I blow-dried it, at which point I leapt frenziedly on him, and only some unfair tickling got him into position to do some really naughty things to bits of me that really needed it.\n\nAs we rolled around, his lips and tongue drove me frantic, licking and sucking me while his big, soft hands squeezed, rubbed, lightly pinched, and groped me, making me gasp and tingle with delight.\n\nFinally tired of horsing around, he trapped me on my back, holding me by the wrists as he gently licked a trail from between my breasts all the way to my slit, then long, slow lapping licks as he teased my labia and clitoris with the flat of his tongue. I was seeing stars all the while, and when he shoved his tongue-tip between my labia, I came, hard, flooding his face with my juices, which he eagerly lapped-up.\n\nAs I came back down, he rolled me onto my tummy, and once more pulled me up to his mouth, this time licking me from my bumhole to my clitoris in long, sweeping strokes of his tongue, alternating with poking the tip of his tongue into my most secret place, driving me wild with the sensations as he rimmed me. I was mewing and gasping, a complete wreck, when he pulled me to my knees and cupped his hands over my boobs, and as he squeezed and squashed my nipples, he slid his fat cock into me from the rear, taking me doggy-style. From this angle, his cock felt immense, and every ridge and vein rubbed every nerve-ending inside me, setting-off even more fireworks inside me.\n\nI dropped down onto my chest, holding the bedclothes as he pounded into me, the angle now so acute that I felt I couldn't take any more since my pussy was already stuffed so tight. Andy obviously felt the same, quickening his stroke as he hammered into me, his breath hitching and gasping, while orgasm chased orgasm through me, one after another.\n\nWhen he came, I swear my tummy bulged with the force of his ejaculation; I thought he'd filled me up earlier, but now I felt his cock swell and jam inside me as thick jets of spunk blasted into me and ran out along the sides of his cock, drenching my inner thighs as that enormous volume of spunk filled me to overflowing.\n\nI slumped down, utterly mind-warped by what he'd done to me, tremors shuddering through me as the aftermath of my orgasm took me. Andy stayed stock-still above me, his hands taking his weight on either side of me as his cock twitched and pulsed inside me, the last remnants of his spunk draining into me, and when he slumped down next to me, I rolled on my side so I could hold him close and once more feel his soft mat of chest hair tease and tickle my throbbing nipples.\n\nAndy held me close as he gasped for breath, while I burrowed against him, lost in his smell, the silky feel of his chest-hair as I gently licked him, savouring the feel of the long, soft hair against my tongue, and the strength of his arms as he hugged me close, his big hands once more gently roaming over me, touching and exploring, squeezing and fondling, just as I was doing to him.\n\n*\n\nWhen I woke, dawn was breaking, and the new day had brought me new insight. It was all clear to me, now; whatever I had been thinking and pondering before, the part of me deep inside that did the joined-up thinking had made a decision, and I knew it was the right one. Andy was still fast asleep, but a slight movement from me was all it took to snap him awake, then smile that lovely, slow, sweet smile of his.\n\n\"You're awake early, Princess...\" he murmured, pulling me closer into his warm chest. I hugged him back, but he twigged I wanted to say something, so let me go, instead pulling the bedclothes into a warm nest around me.\n\n\"What is it, Lindy, problem?\" he smiled, and I shook my head.\n\n\"Not a problem, Andy, but I've come to a decision...\"\n\nHe cocked an eyebrow, waiting for me to continue, so I took a deep breath, and plunged ahead.\n\n\"When you go back to Edinburgh, I'm coming with you. No, please, let me finish!\"\n\nAndy subsided, and waved me on.\n\n\"Go on, Lindy; if you're bound to do this, you need to be sure about why; please, go on.\"\n\nI took a deep breath, and unravelled my thoughts as best I could.\n\n\"I don't know why I'm going to university; I have no real career mapped-out, and I'm doing a degree because that's what you're supposed to do; PPE feels like something I'm supposed to do while I'm waiting for the right size trust-fund to come along and marry me, and I can't do that; I already have you. I think I should let my place go to someone who actually wants and needs it; if I go to university, all I'll be doing is marking time and turning into a dilettante, with no plan, and there's no future in that for me. The future I have is with you, I know that now. Does that make sense?\"\n\nAndy held me closer while I cried a little, but I knew I was right; I wasn't just having an episode of infatuation. My parents were wasters; if I went to university and took up space for three years studying for a pointless degree I'd never use, wouldn't that make me just as big a waster? At least this way my place would go to someone who wanted a proper career and would take the degree seriously; they deserved it more than I did.\n\nAndy held me and crooned to me while I sniffled against him, but eventually my tears dried up, and I was able to talk and think coherently again. Andy smiled as he jigged me against him, like he used to do when I was small, until I was ready to go on.\n\n\"I thought about this, I really did; uni and I are not meant to be; I only applied because I thought I was supposed to. Now I know I have real options, and that's the life I want; I'd rather be a doctor's wife than a dull-as-dust researcher for some deadbeat politician who's only in Parliament for the salary. Take me with you, please, baby!\"\n\nAndrew pulled me around to sit on his lap, and held me while he kissed my cheek, my hair, even my ear, making me squirm.\n\n\"Of course I'm taking you with me; try and stop me!\" he breathed in my ear, \"I just wanted to hear you tell me why I should!\"\n\n*\n\nThe summer break rolled past at breakneck speed, and before I knew it, it was nearing time for Andy to go back up north and resume his studies; only now, I was going with him. The summer together had cemented our relationship, welding us together into one, and Andy could no more leave me behind than I could let him go.\n\nIt was more than just the sex, although that was fantastic; it was the little things: waking in the morning to find myself spooned in his lap, his arm around me; the way he'd brush my hair from my forehead then kiss me quick as lightning, or pull me into his lap as we snacked in front of the TV, and the laughing, giggling, rough and tumble horseplay that inevitably turned into hot and sweaty, or sweet and gentle, lovemaking.\n\nI even decided to forgive Freddy; Grandfather's 'people' had found him alive and well and skulking around his bolt-hole in Aberystwyth, which relieved Andy (and me, too, I have to say; he may have been a complete arse, but he was still my brother).\n\nAs an interesting side-bar, I got a call from Sai Fong early one morning, humming and hawing a lot until she finally managed to get to the point; she knew, and said not to ask her how, that Andy and I, me and my brother, were now an item. What she wanted to know was, how had I managed it; just how did I get Andy to make that frenzied leap at me?\n\nAs she asked, a light went on; Harry, of course, she was planning on making her move! As I didn't blame her in the slightest, because Harry was just too gorgeous to let just anyone have him, I gave her the whole sordid (but exciting!) story of how I'd ended up in Andy's bed the night before the testimonial match, and waking to find him fast asleep with his hand on my bum while his night-wood was placed just right to rub against me, and how he'd woken to find me gripping him while I rubbed one out on him, and how it had gone from there, basically, that I'd seduced him when he was in no position to hold me off. I hope she was taking notes...",
        "Part 2:\n\nNot a cross word or a quizzical glance passed between Andy and me that entire summer; I knew what he wanted, when he wanted it, and he was the same with me. The Langley woman knew what was going on, but she held her tongue; loyalty to my mother, I suppose, as she'd once been her nanny, but her sour disapproving face was yet another reason to get out of there. August was almost out when suddenly the reality of what we were doing struck home...\n\nAndy and I were out in the pool; as had become our custom, he was wearing nothing much, and I was wearing a skimpy bikini that had somehow become pulled down to my knees, and while we were busily exploring and pushing each others' buttons, giggling and gasping away, a softly cleared throat jerked my eyes up; to my horror, my mother was standing on the pool sun patio, arms akimbo, her sunglasses pushed up on her forehead, and her skimpy designer dress showing that while she may have been a woman of 43, she still had the face and body of a 25 year-old.\n\n\"Are you having fun, dears?\" she grinned, \"no, don't answer that! Darlings, put something on, please, your father's somewhere around here!\"\n\nShe pulled her sunglasses off and smiled conspiratorially at us.\n\n\"Langley was right, but I just had to see for myself. Don't worry, it's just a flying visit; your father and I are on our way to Barbados, and we were passing through so we came to say hello! Andrew, darling, please, put that thing away!\"\n\nAndy blushed deep red as he pulled his swimming trunks up and wrestled his still solid erection into the small space, and I rearranged myself into something marginally more decent. Mother grinned once more and turned on her heel, sauntering back into the house, while Andy and I stared at each other; what the hell...?\n\nWe followed her into the house, belting robes around ourselves, to find her chatting with daddy; he smiled and waved at us before going back to his conversation with mother, like he'd last seen us that morning, not eight months before at Christmas. He mixed mother a drink, offering me one, but I declined; martinis are not my thing, especially not before lunch...\n\nDaddy sat down and beckoned me closer, patting the seat next to him.\n\n\"I hear you're going with Andrew to Edinburgh next month?\" he said, studying his drink. I didn't know what to say, so I just nodded. Daddy grinned, his eyes far away.\n\n\"Went to a bloody incredible party at St. Andrews once; it went on for days!\" He smiled. \"Of course, we were all banned for life from ever setting foot there again, but it was worth it!\"\n\nMother decided to join the conversation, her voice, as always, a languid drawl.\n\n\"I thought you were going to uni in London, Lindy; changed your mind, darling?\"\n\nThis conversation was getting surreal. If I didn't know better, I'd have sworn they were completely unconcerned about what Andy and I got up to, and were just trying to make polite conversation while they waited to have their next cocktail. I looked directly at her, and told her the truth.\n\n\"Andy and I would like to be together; he's at Edinburgh, so I'm going with him!\"\n\nShe looked right at me, eyes flat and disinterested, and without batting an eyelid, drawled \"That's nice dear; it'll be fun for both of you...\"\n\nDaddy was nodding in agreement, lost in contemplation of his martini, so Andy indicated with his head we should leave. I put my hand on daddy's arm, and he patted my hand distractedly.\n\n\"Have fun, you two!\" he murmured, dismissing us from his world, so we slipped back outside, stared at each other, and burst out laughing; I always knew my parents didn't live within even a loud shout of reality, but this took the serious biscuit. We decided against any hanky-panky while they were around, even though we'd just been given what amounted to carte-blanche. It seemed prudent not to push our luck, so we lounged on a pair of steamer chairs and talked about the weirdness of it all.\n\nEventually I needed a cold drink, after lying around in that hot sun, so I went indoors to get some cokes, and they were gone. I should have expected that, I suppose; playing 'concerned parents' wasn't actually something my parents were ever any good at, but I was saddened they'd not even bothered to say 'goodbye, see you next year' or whatever before boogieing out the door and back to their own lives.\n\nI sat down and thought about how little they must think of us, of me; any real parent would have hit the roof at finding their son and daughter on the brink of fucking in the swimming pool, but my parents had done...nothing, not even mentioned it; did they really think so little of me? That saddened me even more; the final understanding that they really didn't give a shit for anyone or anything except their own selfish whims. I suppose that finally drove home just how fractured and dysfunctional our family was (although using the term 'family' to describe us was pushing it).\n\nWith that realisation came the understanding that I needn't have a single second's guilt over what we were doing; the parents obviously didn't give two hoots, so why should I? But I did, though; sometimes a girl needs her mum, or her dad, someone to be there when it all goes wrong, to pick up the pieces and make it right, or to just be there, period. Andy had been doing that for me all my life, and Grandfather, but my parents had always been these dim, shadowy figures flitting in and out of my life with barely a passing glance at me, and having no real relevance in my life. Now I finally understood why Freddy was the way he was; no-one had ever bothered with him either, and he was just as lost, disconnected, and adrift as I was.\n\nAndy came looking for me, and found me crying on the sofa; his arms around me made it hurt even more; it should have been daddy, but it never had been. Andy held me while I cried for my parents for the first time in my life, realisation of what had always been missing finally flooding through me. Poor Andy pulled me onto his lap and rocked me like a five year-old until the tears began to ease; I could tell he was as affected as I was, but in a different way; when I looked at him, his eyes were slitted, his forehead was furrowed, and his lips were two bloodless lines; he was furious, and eventually I began to make out what he was muttering.\n\n\"Callous, thoughtless, heartless pair of bastards, I swear to God I'm going to kill those wastrels...how dare they swan in here like they had a right and make you cry, they don't deserve you Lindy, they never did, I'm so sorry baby, I wish I'd caught them, I'd soon make them understand how much they've hurt you, I'll mop the floor with those two fuckers...!\"\n\nHe pulled his robe off and mopped my eyes with it, the way he'd done when I was small, the memory making me grin through my tears.\n\n\"Don't you worry, Lindy-baby, we'll never do that to our children, I promise you! Our kids are going to live with us, where we go they'll go, and none of this 'boarding school' cop-out; the parents shoved us in those places so they wouldn't have to look after us, but we're not doing that to our kids, understand?\"\n\nI was gratified beyond my ability to express it; it had always been a sort of background, tacit understanding that we'd have children, that we'd stay together and have our own family, but this was the first time he'd ever stated it so baldly, and I loved him even more for it.\n\n\"Do you mean that, Andy?\" I whispered, \"You want...you want a family, with me? Really?\"\n\nHe turned me around so I was sitting astride him, hugging me to his chest. I listened to his voice rumbling in his chest as he answered me.\n\n\"Every word, Lindy, every single word! Mother and father are class A fuck-ups; they proved that today. I like to think I'm nothing like them. Our children will have everything we never had, and I don't mean things; I mean care, and attention, and first call on our time. I want to take our children to the park, go on holiday together, with them as a family, teach them to swim and to ride their bicycles; I want to sit down to dinner together every night and teach them table manners; I want to read to them at night, or punish them for fighting, everything real parents do. We were brought up by strangers, because those two wasters only wanted to please themselves; look at poor Freddy, look at how messed-up he is. That will never happen to our kids, I swear!\"\n\nHis words made me cry all over again, but happily this time, the new reality of who we were finally falling into place. I felt like a weight had fallen from my shoulders; for the first time in my life I felt truly, absolutely, completely free, unfettered by anybody else's expectations of me. Now, all that mattered to me was that I made Andy happy; anything else was incidental; this was our life from now-on.\n\nHis lips on my neck as he nuzzled me made me want more, and his warm breath made goosebumps prickle up and down my arms and between my shoulder blades. I wanted to resume what we'd been doing in the pool before Chloe and Nigel showed up (and that's how I thought of them now; 'parents' was not what they were, not any more, and perhaps never had been).\n\nAndy seemed to be feeling the same way, his nuzzling kisses soon moving around my throat and up to my lips, where I kissed him back as enthusiastically as he was kissing me. He stood up, carrying me as easily as a baby, and took me up to our room, where his nimble fingers quickly undid the straps and ties of my bikini, stripping me naked even as I tugged his trunks off and fondled his thick, steely cock.\n\nAs he pushed me gently onto the bed, I captured his erect member and slid him into my mouth. Andy reciprocated by pulling me round to straddle his face, and began licking and lapping at my pussy, sending thrill after thrill through me. His tongue explored all my holes, lapping and stabbing at my clitoris, probing between my labia and making me gasp when he shoved his tongue deep inside me, and the thrilling sensation when his pointed tongue-tip explored and gently inserted itself into my tight bum hole made me see stars.\n\nI was coming almost continuously as he licked, sucked and rimmed me, and I worked my lips and tongue over his straining cock again and again, but I knew what he wanted, and when he pulled me on top of him and slid his cock into me, I came almost immediately, orgasm after orgasm thundering through me as his cock hammered my pussy, and his fingers rammed and plundered my bum hole, opening me, loosening me, dampening and lubricating me with my own juices.\n\nI knew what he wanted now, even if he didn't really know himself, but now I wanted it as well; Andy was my world now, there was only him, and I wanted him to have everything of me I had to give.\n\nWhen I judged he was ready, I slid off him, and took hold of his slick, glistening cock, rubbing the wet, glossy tip over my tight hole. His eyes widened as he realised what I was doing as I lowered myself onto him, taking him into my anus, relaxing and seeing stars even as I slowly forced myself down onto him; luckily he'd relaxed me somewhat, but it was a really tight fight even with that...\n\nAndy was gasping as his cock was squeezed so tightly by my bum; taking him this way made his cock feel twice as thick, but the feeling as he slid slowly into my arse was incredible. When I had him all the way inside me, I tried squeezing him, grinning as his eyes nearly popped out of their sockets.\n\n\"Oh Christ Lin, that's...oh God!\" he gasped, and when I began to slide him out again, I nearly screamed at how incredible it felt. Andy pumped slowly, gently, not forcing anything, but I didn't care; the feeling as my man fucked my arse was so incredible, all I wanted was for it to go on and on. Andy tried his best, but it was having an effect on him too, and when he rolled over so I was now underneath him, with my bum tilted up so he could ram into me, a kind of madness took over, and we humped and hammered at each other, the sensations as his cock slid in and out of that place almost indescribable.\n\nWhen I came, it was like a giant wind blew through me, sucking all thought and reason from me, leaving only pleasure behind; I screamed like a banshee, my pussy squirting all over his midsection even as my bum tightened, trapping him.\n\nAndy gave a great, coughing roar, his cock swelled up to what felt like an impossible size in the confines of my bum, and jet after jet of hot spunk shot deep into me, filling my insides with his burning heat, blinding and deafening me to any and everything except his lips on mine, and his big, soft hands as they held my buttocks apart and my legs wide open.\n\nI finally let my legs drop back to the bed, and Andy slowly withdrew from me, even that withdrawal triggering smaller, less intense, but still wonderful, orgasms, and we lay side-by-side, his arms around me and his lips playing gently across my face, even as his soft hands squeezed and fondled my bottom. I was lost in a haze of well-being; my man had literally fucked hell out of me, I'd wrung every last drop of spunk out of him, and now it was time to rest, to bask in each other, and to feel our love as we held each other close.\n\nWhen I woke, it was already late afternoon. As usual, when I woke, Andy snapped awake as well, then paused as, like me, his time-sense reoriented, then he relaxed, pulling me closer to him.\n\n\"What do you want to do today, Lin?\" he murmured in my ear. I already knew what I wanted to do; while I was sleeping, the decision had been made for me.\n\n\"Let's pack up our stuff, baby,\" I said, \"this isn't my home anymore; I want to go home with you, to Edinburgh. I've got no reason to stay here any longer, not now...not after this morning.\"\n\nI could feel his eyes boring into the back of my neck, then he patted me on my flank and kissed my ear.\n\n\"You're right, baby-girl; let's go home.\"\n\nWe showered, and then, while he packed his stuff, I called Nana and Grandfather to tell them of our decision. Nana was curious as to why we'd decided to go back so early; Andy wasn't due back at university for another three weeks, and so, quite without meaning to, I told her about the events of the morning, and why I felt I had to leave, and my tears came again, as the memory of their indifference tumbled around in my mind once again.\n\nNana was sad but understanding; after all, she had no illusions about her son and his nature, and she knew exactly what my mother was like; once she'd calmed me, all she asked from me was my assurance that I knew what I was doing, and to be sure I would be happy. I assured her that as long as I had Andy with me, I had everything I needed, which was what she wanted to hear.\n\nGrandfather spoke to me too; he sounded sad, but he also understood how hurt I was, and why I had to leave.\n\n\"Just remember, Lamb-Chop; I'm only a phone-call away; anytime you need anything just call me, I'll sort it out for you. Some of my people will be in touch with you soon; you need to think about your finances. Leave it with me, but expect a call, sweetheart. I love you, Lamb-Chop, always remember that.\"\n\nWe left the E-Type behind; gorgeous as it was, the luggage space was laughable, so Andy plumped for daddy's custom Land Rover County; he'd never notice, nor care, it was gone; the man had once wrapped a Lamborghini Countach around a tree and left it to be towed away for scrap without a backward glance, so a missing jeep wasn't going to raise his temperature any. We left without a backward glance; that place meant nothing to me now; my home was where Andy, my half-brother, my lover was.\n\n*\n\nLife with Andy in Edinburgh soon settled into domestic normality; I found a job in one of the many little bookshop /coffee-shops that dotted the city, so my days were filled with quiet interest, and after a few abortive attempts, the regulars discovered that I was serious about my boyfriend, the huge bloke who collected me every evening, so left me alone, instead flirting with me when they could get away with it. I was quite flattered and gratified by it all; I'd never been what you could call the belle of the ball, so it was fun to banter with the students, knowing it was never going anywhere.\n\nAnd so life ambled along. It was almost idyllic: Andy collecting me after work, me making dinner for us in the enormous flat he'd completely neglected to tell me he'd bought, in a beautifully restored Regency house, and our free weekends together playing with each other, grocery shopping together, watching TV in bed, and falling even deeper in love.\n\nAnd then one day almost a year after we'd upped-stakes, it all came to a grinding halt. Andy came to the bookstore to collect me, and hustled me out of there, his face pale and drawn, with none of the verbal sparring and banter we indulged in as a matter of course.\n\nHis expression was set and tense, and all he would say was \"Later, Lin, we need to get home!\"\n\nBy the time we got in I was feeling more than a little scared; Andy looked terrible, white and strained, almost as if he was on the verge of tears, and as soon as we got in the front door I rounded on him.\n\n\"What's going on, Andy, what's happened?\"\n\nHe looked at me, sombrely, and he looked frightful, like he was sick. My heart leaped into my mouth.\n\n\"Lin...it's Jack, Jack Cameron...\" and I was shocked to see tears in his eyes. I took his hands, and squeezed them.\n\n\"What about Jack, baby, what happened to him?\"\n\nHe looked at me, tears spilling down his cheeks.\n\n\"This afternoon...he was mugged...the bastard shot him, he shot him in the head...he's in surgery now, but they don't expect him to live...!\"\n\nI sagged, feeling a sick hollow in the pit of my stomach; Jack, my teenage crush, quiet, handsome Jack Cameron, one of the sweetest, most gentle, most caring people I knew...\n\nEven through my shock and distress, I knew what we had to do.\n\n\"Andy, we have to go, baby, it's Jack, he needs us now, he needs you, Andy; he needs everyone, all his friends. Get packed, we have to go!\"\n\nAndy snapped out of it, rushing to cram essentials into a large flight bag while I did the same, followed by a quick tour to lock up; then we were haring down the motorway, stopping only to refuel and go potty. Andy drove through the night to get us to the National Hospital for Neurosurgery in central London first thing in the morning; we arrived there just after 5 a.m., so dozed in the car for a couple of hours until the main doors were unlocked.\n\nThey let us see him even though it was outside visiting hours, and we weren't immediate family, which made me tremble in fear for him; it was like they were waiving the rules because they didn't matter anymore, because they knew they were losing him...\n\nWhen I saw him, all my worst fears crystallised; he was swaddled in sheets to immobilise him, his head heavily bandaged, respirator tubes in his mouth, more tubes in his nose, drains in his head emptying into catchbottles, drips in his arms and chest, and wires everywhere, his head, his chest, festooning him; he looked so small and vulnerable, his face pale and bloodless, with monitors and flickering readouts surrounding him, none of the 'beep, beep' you see in the movies, silent numbers and wavy lines the only outward signs he was still clinging to life.\n\nHarry was already there; he must have been there all night, along with Jack's mother. His sister, Teruko, had been there all day and night, and Sai Fong had taken her home just before we'd arrived, to get some rest, some food, and a change of clothes while Harry sat with him. When he told us that Jack was in a deep coma, and that he was only just clinging to life, despite all they'd done for him, I had hysterics; Jack's mum had to take me away and calm me down, poor lady, even though she must have been in nearly the same state as I was. Andy and Harry just sat there, stunned and silent at what had happened to their best friend, Athos to their Porthos and Aramis.",
        "Andy eventually found me in the waiting room, with Jack's mum. I couldn't go back in that terrible room, not to see Jack like that, not when I remembered him so tall and sweet, and handsome, always ready with a joke and a big-brotherly hug for me; he knew I'd had a crush on him for years, but he'd never led me on, or made fun of me; he'd just acted like I was his little sister, and now, to see him like that...\n\nAndy could see I was in no fit state to stay there any longer, so he took me back to the house in Eaton Square, then sat holding me all day while I cried for Jack and what had been done to him. Eventually I cried myself to sleep, waking in the early evening to find he'd ordered-in pizza and Chinese. I picked distractedly at the food, not really hungry, my head full of images of our friend wrapped in sheets that looked ominously like a shroud, no sign of life or vitality, just the slow traces on the monitor screens telling us he was still alive, but just barely.\n\nAt last I gave up trying to pretend to eat; Andy was obviously feeling the same, so we went to bed to try and get some rest for that long, long drive back to Edinburgh the next morning. I fell asleep quickly, but woke up in the middle of the night to feel Andy trembling against me; I switched on the light, and poor Andy was crying silently for his friend, his best friend since they were both six years old, which started me off again; I didn't feel contempt for him, a grown-man crying; if you can't grieve for your closest friends, what kind of person does that make you?\n\n*\n\nWe stopped at the hospital to see Jack once more before we made our way home again; his condition was unchanged, but a whole bunch of his old friends from school, comrades all, had congregated in the foyer, anxious for news; it felt so bad telling them that he was in a coma, and was going to stay that way for the foreseeable future, and there was only a slim chance he'd survive. I was in tears again, and Harry took me from Andy and hugged me, trying to make me feel better; Sai Fong was sitting in a corner, her face set and expressionless, and something told me she didn't want anyone speaking to her or disturbing her while she grieved, so I left her in peace; when she was ready, she'd call me.\n\nWe hardly spoke on that long trip home, over 400 miles; what was there to say? Harry and David and all the others were trying to be upbeat and positive, but I knew, deep in my heart, that we were going to lose him, and that scared me more than I could say; Jack had been a part of my life, in one way or another, since I was a little girl; he was Andy's best friend and companion, together with Harry, and I knew him and loved him almost as well as I knew and loved my brother. I'd never met his half sister, Teruko; she'd never crossed my path, but I'd seen pictures of her; Jack had always carried a picture of her in his wallet, so I knew she was a real beauty; how was she taking all this?\n\nWe spent the rest of that summer in close touch with Harry; he and Sai Fong had taken it on themselves to care for Teruko; she spent all her time, day and night, at Jack's bedside, and Sai and Harry had to physically force her to eat, rest, and sleep. But she never left his side, which definitely made her a star in my book, and told me she was much more to Jack than just his little sister.\n\nSummer turned into autumn, and we began to hear about little improvements in him; his eyes were opening and tracking movement, he'd begun to move around on the bed, and they'd had to restrain him as he sometimes threshed around; Harry and his mother kept us updated on the little, baby-steps progress he was making, but it all seemed to be good news.\n\nThen one morning in early December, I got an excited call from Sai Fong.\n\n\"Lin, it's Jack...he woke up; Lindy, oh my God, he woke up!\"\n\nI screamed, bringing Andy running, and he took the phone from me because I was on the verge of hysterics again, but in a good way; he was back, he'd come back! While I hazed-out, Andy talked with Sai, then hung up, a huge, happy grin, the first one I'd seen in the longest time, creasing his face.\n\n\"Lin, LIN! Calm down baby, there's more; shush, listen!\"\n\nHis voice cut through the fog, and I began to pay attention to him.\n\n\"Lin, Jack's awake, but he's got retrograde amnesia; that means he doesn't know who or where he is, or what happened, but he can still talk, so the memory loss isn't total. The specialists think the amnesia is only temporary. I know you'd like to run down there, so would I, but the best thing we can do for him right now is let him rediscover the world slowly. Teruko, his mother, Harry and Sai Fong, they're about as much as he can handle right now, and I don't want to scare him with too many people and things he's forgotten; he must be really scared and confused right now, so we have to keep away until he's ready for us, okay?\"\n\nHe was a 4th Year medical student, I assumed he knew what he was talking about, so I let it go, but I was singing inside; Jack was back, he was going to be okay! I had to cry; the only thing I'd wanted through that whole terrible summer and bleak autumn was for Jack to come back, to be alright, and now he had, tears of happiness were in order.\n\nAndy bear-hugged me, his happiness transmitting itself to me and mingling with mine, and quite without knowing it, I began kissing him; his neck, his chin, his ears, his cheek, and lips, peppering him with small, happy kisses even as the tears rolled down my cheeks. He responded by holding and squeezing me against him, and then somehow we were on the couch, his hands touching, squeezing, fondling me as his lips found mine, and his tongue brushed and circled mine, kissing me properly, happily, for the first time in what seemed like forever.\n\nAs I wriggled against him, he pushed my panties down as he squeezed and kneaded the cheeks of my bum, and I responded by rubbing my mound against the increasing bulge in his jeans, wanting him so much as the fear for our dearest friend dissipated and joy replaced it. I think deep down we were celebrating life, and how it had found a way to bring Jack back and it felt good, and right, to be doing this now, with the best news in the world still echoing inside us.\n\nI found myself naked, with Andy rearing above me, his lovely thick cock prodding at my wet slit, and I took him and guided him into me. Andy is a large man, and I'm only slightly built, but he's a tender and considerate lover, and when he entered me it felt wonderful, slow and gentle, no jamming himself in to get himself off; he knew how happy I was, and his first aim was to make me even happier.\n\nWe made love all afternoon, months of tension and apprehension melting away as my big brother made love to me as only he could, and I gave myself to him as many times as he wanted, in any and every way he wanted. I don't remember falling asleep, but when he kissed me awake dusk was filling the room, and the emptiness inside told me we'd better get something to eat to replace the energy we'd used-up bouncing around like mad, happy things all day.\n\nTwo weeks later, we heard that Jack's memory had returned; going home had been the trigger that finally unlocked his memories, and, other than a few blank spots, he seemed to have made a good recovery.\n\nIn the run-up to Christmas, Andy picked me up early one afternoon and told me we were going shopping; as I didn't actually need anything, I was curious what we were buying, until we arrived at a small but quite exclusive boutique on Prince's Street.\n\n\"Buy a nice dress, Lin, we're going to the Old Boy's Dance on New year's Eve; Jack, Harry, Teruko and Sai are going to be there, so get something stunning, I want to show you off!\"\n\nWhat a sweet boy!\n\n*\n\nThe dance itself was great; I spent a lot of time re-connecting with old friends, sisters and girlfriends of Andy's friends. We saw Jack and Teruko, but kept our distance; they were obviously completely wrapped up in each other, and we didn't want to intrude.\n\nJack looked terrible, thin and drawn, just a shadow of his former self, which was understandable, and he seemed to be leaning on Teruko on occasion, which concerned me; should he even have been there? Harry and Sai hovered around him a lot, I noticed, obviously as concerned as I was, and keeping close in case he needed them.\n\nEveryone else kept a discreet distance, and deliberately didn't see him dancing closely with Teruko, which I thought was sweet and considerate, instead giving him understanding little pats or quick squeezes on arm or shoulder.\n\nThen, as he'd led Teruko back to their table, the last person in the world I'd expected to see, Slimy Fineman, appeared from nowhere and punched poor Jack between his shoulder blades, nearly sending him flying; Andy was at my side, and suddenly he was behind Slimy, holding him off the ground by the scruff of his neck.\n\nI was outraged; Jack was obviously still weak from his ordeal, everyone could see it, and that despicable coward saw his chance to have a go at a man who'd normally have wiped the floor with him, and I think he'd have tried if Teruko hadn't stopped him, then rounded on Slimy and told that piece of shit exactly what she thought of him, and just how far beneath notice he was.\n\nAndy shook Slimy, hard, saw me and winked, so I did what I'd wanted to do for over a year; I slapped that bastard so hard it made my shoulder hurt, while telling him exactly what I thought of him, which got a loud cheer. Andy dragged him outside, and I felt confident that now he had him, after what he'd tried to do to me, Andy was going to dismember him and chuck the bits in the river.\n\nWhile Andy was (hopefully) killing Slimy, Jack introduced me to his sister, stumbling a little over my name; it was obvious to me he'd almost completely forgotten me, which saddened me a little, obviously there were still a few blank-spots left, understandably enough, but most of the old Jack still there, which was a definite plus. I felt quite disappointed when Andy came back and told us he'd shoved Slimy in a cab after giving him a heartfelt warning about his future if he ever showed his face again.\n\nTeruko was stunning; Japanese doll features and a fair, 'peaches and cream' complexion, huge, dark, Anim\u00e9-girl eyes, and long, smoky blonde hair. No wonder Jack was in love with her; with her and Sai Fong in the same room, I felt small, and plain and ordinary, because I definitely wasn't in their class when it came to sheer physical beauty; luckily, I had Andy, and he only wanted me, because I wasn't even in the running when it came to the girl Jack really wanted.\n\nI finally understood why he'd treated me with such amused tolerance when I'd spent my teenage years gazing longingly at him and hanging on his every word; he had Teruko, and she trumped me hands down!\n\nAs we talked, I could see him beginning to remember me and putting me back in his world, and when he finally twigged that Andy and I were a couple, the acceptance and understanding were all I could have wished for.\n\n*\n\nWe saw Jack and Teruko (and Harry and Sai) on a fairly regular basis over the next three years; Andy was taking his surgical qualification, and both Sai and Teruko were in university, both of them waiting to graduate before they got married.\n\nAs I explained earlier, I'd never really wanted to go to uni; I was happy to work at the bookshop, eventually becoming manager, living in domestic bliss with Andy, and being there for him when the work got too much for him. The poor boy was really stressing, and I like to think I helped him through all that, but the fact is, his main crutch was David Denham, who was going through the same thing in London, so they would swap horror stories, check techniques, and commiserate when they got the sharp end from a lecturer or mentor.\n\nHarry and Sai got married in the lovely 17th century Wren church on Ludgate in London; I love Sai Fong like my own sister, but I have to admit I was deeply, hatefully jealous of her; she'd found a way to marry her beloved Harry, something I'd never have, and when Jack married Teruko in St. Chad's church in Shrewsbury, right opposite the park where I'd tried to brain Slimy, my depression about the whole marriage thing hit a new low. I wanted so much to be Andy's wife, but I couldn't work out a way that didn't get us jailed for fraud, or incest, or both.\n\nAnd then David got married; he married a stunning American girl called Lori, with jet black hair and violet eyes; she looked like Disney's Snow White, except she was so beautiful it almost hurt to look at her. I heard a rumour from Sai that she was his half-sister, which made it even worse for me; all of my favourite people in the world could tie the knot with the girl who should have been forever barred from doing it with them, everyone had what they wanted, and I couldn't, and it was tearing me apart; all I wanted was to give that one thing to Andy, to put him up there with all the people he loved best in the world, and I couldn't, and it hurt so much.\n\nAndy knew this was an issue with me; he told me constantly that a marriage was in the heart, not just a piece of paper, and I believed him, but it was almost too much to bear, knowing I'd never have that white dress, the Wedding March from Lohengrin, bridesmaids, bouquets, and bells ringing to tell the world I had married the man I loved, and that I'd never have the chance to tell him \"I do...\" in front of all the people who mattered most to us. Superficial? Maybe, but it still means so much to a girl...\n\nI think Andy knew that only too well, because the next thing I knew, Grandfather was knocking on the door and sweeping me up as I dissolved in tears. I knew he was there because he knew what was going on with me; the one thing my Grandfather could never be accused of is not knowing what's going-on around him.\n\nI love being around my Grandfather; he gives-off this air of wanting me around; everything I do or say is immediately of interest to him, and I can tell it's genuine, not just a cultivated mask to keep the granddaughter quiet; he's genuinely interested and concerned for me. Even with all that, though, he could never make this come out right for me, and that just made it worse; even Grandfather, king of the fixers, couldn't fix this...\n\nGrandfather waited until the storm had passed, then led to me to couch so he could sit and hold me properly.\n\n\"You know why I'm here, Lamb-Chop,\" he said, \"Andrew told me what's going on with you; is it really that important? I mean, you have Andrew, all he wants is you, he's never going anywhere; would a ceremony and a piece of paper really make that much difference to your lives together?\"\n\nI tried to explain what I was feeling inside, the knowledge that I couldn't give him this one thing that all his best friends had done so easily, that being a wife in actuality was important to me.\n\nHe nodded while I laid out my reasons, and my hopes, and why they were never going to come together, then looked keenly at me.\n\n\"Lamb-Chop, I can sort this for you, but you have to be sure it's really what you want; there's no going back; tell me now this is what you want, and I'll make it happen for you, but you have to swear you'll never, ever mention this to anyone. Are you absolutely sure this is what you want?\"\n\nI gazed at him in wonder, but he looked deadly serious.\n\n\"Yes Grandfather, I'm quite sure. Please help me!\"\n\nGrandfather smiled as he hugged me.\n\n\"Give me a few days, okay? In the meantime, relax, Lamb-Chop, we'll sort this out for you, I promise!\"\n\n*\n\nA week later, a courier knocked at the door with a package for me. Bursting with curiosity, I tore it open, and there inside was a birth certificate for 'Linda Eugenia Francesca Montagu-Hillingdon' with the same birthday as me. There was a passport in the same name, with my photograph inside the back cover, and a driving license, again with my picture, and also in the same name. I was astonished; they were all legal identity documents, and apparently all genuine; even the birth certificate looked and felt the proper age. Only Grandfather could have pulled-off something like this; I knew he had some very curious, shadowy contacts, in some very shady corners of the business world, and fingers in some very dubious pies, but this...\n\nThe phone suddenly ringing nearly made me jump out of my skin; when I answered it, it was grandfather.\n\n\"Lamb-Chop, you should have a...a package; have you opened it?\"\n\nI answered in the affirmative, and his warm chuckle filled my ear.\n\n\"Good, it arrived on time. Darling, I'm at London City Airport, waiting for my flight, I should be with you in about three hours, we'll talk then; until then, don't talk to anyone about you-know-what. Love you, Lamb-Chop!\"\n\nThree hours later I answered the door, and there he was, looking as pleased as Punch. I was full of questions as to what this all meant, and how he'd done it.\n\n\"Lindy, my second-cousin once removed is now your mother; her name was Sabrina Montagu-Hillingdon, so your surname is Hillingdon, too. She passed away a couple of years ago in St. Moritz, skiing accident, but all her records now show that you are in fact her daughter. All your funds and trust holdings are now in your new name, all her properties, trusts, and investments formerly held in probate are also now yours, because you're her daughter and always have been, so these are for you.\"\n\nHe handed me a packet of cheque-books and withdrawal slips all in my new name. I was frankly astonished at how completely I'd disappeared, and told him so. Grandfather grinned at that.\n\n\"Lamb-Chop, once you marry Andrew, you'll get your Grosvenor-Edgeworth name back, the only difference being you were legally Linda Montagu-Hillingdon when you married him, complete with the papers to prove it, and you'll be legally married, according to the laws of the land, not some dodgy legal sleight of hand somewhere overseas. I promised you I'd help you, Lamb-Chop, and I always keep my promises!\"\n\nI was still a little confused as to how he'd done it all, and just a little worried; a house of cards is not the most stable of structures...\n\n\"Grandfather, how is this all possible? Surely there are records that people can check...\" I trailed-off as I saw him shake his head, grinning happily.\n\n\"Lindy, believe me, all the records that matter have been changed, expunged, or physically removed and destroyed. There are people who owed me, and I called-in those favours; all it took was money and a little pressure, et voil\u00e0. Rest easy, Lamb-Chop; no-one is ever going to know, or be able to work it out, because all the trails stop exactly where they should: at you, Linda Montagu-Hillingdon, now and forever, amen!\"\n\n*\n\nWe published the banns the following week; Andy had been astonished at how completely Grandfather and his 'people' had covered my tracks and re-invented me, but that didn't stop him getting down on one knee and proposing formally; I was half-tempted to tell him I'd think about it, but I couldn't be that cruel to my sweet Andy, so I said 'yes, I'd be honoured!'\n\nWith that, I leaped on him, kissing him wildly while he squeezed, groped, kissed and licked; the knowledge we could get married, properly, legally, had had a powerful aphrodisiac effect, and I wanted to take this further. While I kissed and nibbled him, his hands slid into my panties and edged them down far enough for him to squeeze and knead my cheeks, pulling them apart and making me mew and squeal mid-kiss as he stretched my bum hole open.\n\nAndy didn't want to do this here, on the couch, and suddenly I wanted to be in a bed with him, naked, his lips on mine as he rammed that thing of his into me; right now, I didn't care where he stuck that thing, just so long as he did me properly! When he stood up, a naughty idea came to me, and I slid to my knees, fumbling with the fastening of his jeans, and then suddenly I had his cock in my hands. He smelled delicious, fresh and salty, with just a faint, almost metallic edge, and when I licked him from his balls to the tip, he groaned softly.",
        "I pushed his jeans down as he pulled his top off, and I shrugged out of my summer dress, and then we were naked. I wanted to try something new, something I'd seen but not attempted yet, and my head bobbed as I suckled on him, taking him deeper each time, until his whole cock was in my mouth, my gag reflex trying to come out, but I quelled it as I worked my throat, making swallowing motions, massaging his cock-head with the muscles of my throat.\n\nAndy knew what I was attempting, and he kept stock-still as I worked him into my throat, but when my throat began pulsing, he gasped, his hands clamping around my head as he tried to push me away.\n\nThis was not what I wanted, and I stroked his thighs and pulled him closer with my hands on his solid buttocks, letting him know that I was handling it. I kept doing what I was doing, and he trembled with the effort of not just jamming that thing in my throat all the way down, but he was close, and when I squeezed his balls firmly as I worked my throat, I felt him throb, the spunk actually pulsing through his cock on its journey into my mouth.\n\nI pulled back when I felt that, squeezing and fisting him at the same time, and a powerful jet of sperm splashed across my face and lips; the second landed in my open mouth, the third jet also splashing across my face and in my hair. Four more jets of spunk hosed out of him, streaking my face and chest to run and drip from my nipples.\n\nAndy stumbled back as the powerful jets of spunk gave way to a thick trickle, slumping down on the sofa with his breath hissing through his teeth; even from where I was kneeling I could see the pulse throbbing in his neck. I wiped the huge runoff of spunk off my face and neck with his shirt and climbed onto the sofa next to him, his arm pulling me close as he squeezed and fondled me, a smile playing on his lips.\n\n\"Where'd you learn that, Lindy?\" he smiled, and I grinned back as I winked at him.\n\n\"Boarding School, where else, sweetie?\"\n\nAndy laughed at that, releasing the tension, and jumping to his feet, pulling me after him.\n\n\"Why Andrew, where are we going?\" I simpered, knowing full well what was coming next, but I wanted him to say it. He grinned and jiggled my bottom.\n\n\"We're going to bed, Lindy; I feel like fucking you senseless; are you ready?\"\n\nWhat could I say, when he put it like that...?\n\n*\n\nOnce he'd dragged me into bed (or was it the other way around...?) he proceeded to do things to me with his tongue that felt so wonderful they couldn't have been good for me, and his hands on my bum cheeks, holding them open so he could stab me with his tongue, were soft, gentle, but firm and not to be denied, as if I would...\n\nAt one point he actually had me bent double, my legs spread and held open with his hands on my ankles, and my pussy almost pointing at the ceiling, as he licked both my holes relentlessly, sending electric pulses of almost unbearable pleasure shooting through me.\n\nJust when I thought I'd pass-out from it, he knelt-up and pulled my legs over his shoulder, and before I knew what was happening, he slammed his fat cock into me. The sudden invasion did what his licking and kissing had led up to as a gigantic orgasm roared through me, blanking my senses as the pleasure, bordering on pain, consumed me, taking me to a place where pleasure existed and I was just a bystander as my body shook and quivered. I could feel his fingers probing and pushing inside my bum even as his lips and teeth grazed and pulled at my nipples and his cock delighted my pussy, more pleasure rippling through me as he took and owned every part of me. When he withdrew from me and leaned forward to press his cock against my tight hole, I gladly relaxed to allow him in, relishing the invasion and the fullness as he sodomised me, his ridged cock sawing against every nerve ending in my anus, pleasure tingling and whirling inside me even as his lips found mine.\n\nMy fingers found and teased my clitoris, wanking myself as I delighted in what he was doing to me, and once again orgasm built inside me, the pressure huge and unstoppable, and when I came, I screamed in his mouth even as my pussy convulsed, my juices spraying across him. My bum contracted tightly around his cock, making it feel even thicker and more solid inside me, and that was enough to make him come, his cock twitching and throbbing like a live thing inside me as his body heat filled my insides, feeling hot and depraved, and adding to my pleasure.\n\nAndy stopped pulsing inside me and let my legs down off his shoulders, sliding his still-hard cock out of me, a sharp throb of pleasure making me gasp as he did so, and slumped down next to me, nearly as breathless and winded as I was, but not too winded to kiss me madly, crazily, his hands touching, rubbing, caressing every inch of me. I eventually came up for air and held him off, difficult as that was, so I could ask him something.\n\n\"What was that for, Andy, why the big smoochie?\"\n\nHe grinned happily, and slid his hand down to cup and lightly squeeze my bottom.\n\n\"Baby-Girl, it's not every day I get to kiss my fianc\u00e9e for the first time!\"\n\nI smiled happily even as my eyes brimmed; that's right, I was his fianc\u00e9e, for real and actual, and he was mine, and we were getting married!\n\n*\n\nAlmost two years to the day since I ran away to Scotland with Andy, we were married in a small church in Staffordshire, in one of the villages on the Chillingmore Estate, home of one of Andy's old school friends. We'd planned a small, intimate wedding, just Harry, Jack, who was Andy's best man, Sai and Teruko, and David and Lori. Freddy had never answered my request to come to my wedding and sit on my side; in fact I'd not seen or heard from him since that infamous day of the reception at Shrewsbury School. Grandfather was giving me away, and Nana was going to do duty for my numbskull parents and cry like she'd always wanted to.\n\nSomehow the word had gotten out that Andy was getting married, and a throng of his old school friends, fellow former medical students, and a couple of famous faces from the Lions line-up had all invited themselves, so Grandfather had hurriedly re-arranged the reception and transferred it to a golf club near Leamington Spa to cater for all the extra bodies; once a fixer, always a fixer...\n\nI'd stayed with Harry and Sai the night before the wedding at their father's place in Cosford; Sai and Teruko were my bridesmaids, and the morning of the wedding was complete bedlam crossed with utter chaos, with both of them fussing and panicking over dresses, hair, makeup, tiara, veil, and bouquets, with Nana adding to the confusion, and Grandfather doing a disappearing act with Harry's granddad; it would be fair to say that we were all a little fraught, with several hours still to go.\n\nWe'd just about calmed everything down to DEFCON 2 when Grandfather came creeping in, looking strangely furtive; I immediately twigged that something was wrong, and his words brought my day crashing down around my ears.\n\n\"Lindy...I'm sorry, something's come up...I'm very sorry, Lamb-Chop, but I can't give you away...I'm so sorry!\"\n\nOf all the things to go wrong, this was the worst; why now, why today, of all days? I could feel my eyes welling-up, ready to ruin all Sai and Teruko's meticulous plasterwork.\n\n\"Grandfather, please, not today, please...not today!\" I managed to choke out, but he shook his head sorrowfully.\n\n\"I can't Lindy, I...I just can't! You'll have to find someone else...I'm sorry, but I can't do it!\"\n\nI was ready to have hysterics by now.\n\n\"Why? Why not? Who else is there?\" I almost screamed in his face.\n\n\"There's me, Lindy. I'll do it!\" said a deep, vaguely familiar voice. I spun round, and there was Freddy, but such a different Freddy; he was at least Andy's height now, not so well-built, but not the skinny famine-victim I remembered. He looked amazing, like Daddy, well and smartly dressed, hair neat and well-groomed, and clear-skinned and fresh-faced; my God, he was handsome!\n\n\"Freddy...?\" I whispered, in complete shock, and from the corner of my eye I saw Nana and Grandfather grinning happily. I rounded on them, not sure whether to be happy or furious.\n\n\"You knew, you knew all along, you put me through all that...!\"\n\nFreddy cleared his throat meaningfully.\n\n\"How about it Lin, will I do?\"\n\nI nodded, still a little dazed, but a happy daze. I noticed a girl, who definitely looked familiar, with her arm though his, and then her name came to me.\n\n\"Cornelia? Cornelia Sykes? Don't tell me you and Freddy...?\"\n\nShe nodded and grinned.\n\n\"A year now, and...\" she patted her stomach meaningfully, and Freddy nodded happily.\n\n\"You're going to be an aunt, Lin!\"\n\nCornelia winked at me.\n\n\"I always knew you had a thing for your brother, Lin, I just got them mixed-up, that's all!\"\n\n*\n\nAndy and I were married in the proper, High Church style, in a beautiful, simple, traditional service. I got my white dress, my bridesmaids, bouquets and bells, but most of all, I got Andy, the best thing that ever happened to me.\n\nThree years have passed since then; Freddy and Cornelia have a lovely little girl, she looks just like Nana, with the same striking hair and eyes. Freddy works for the Civil Service, in the Foreign and Commonwealth Office, a job he got on his own merits; Grandfather didn't have to pull any strings to get him there, and I think he'll do well; a career in the Diplomatic Service definitely seems on the cards for him, and if he keeps going the way he is now, one day he'll be an Ambassador, I feel sure. Andy and I have no worries for him, believe me.\n\nAndy is a junior consultant on the General Surgery team in a hospital in Kidderminster right now, and we live in a lovely old house in Great Malvern, in the Malvern Hills, a wedding gift from Nana and Grandfather, which is good, because we needed it; four weeks after the wedding I came-up positive and my little girl is two and a bit now, and a real handful. She has Andy's thick curly black hair and pale grey-blue eyes, but she has my features and a lot of my stubbornness too. I hope the one that's on the way is like her too, I love a challenge...\n\nNigel and Chloe know about us, about Freddy, and his daughter, and his burgeoning career, and about Andy and me and our little girl, but so far haven't made an appearance or a comment; what could they say? Any adverse comment from either of them would have me going for the jugular; I may look like my father, but I have none of his laissez-faire nature, and any threat to my family, to Andy or my baby, is going to rain mayhem down on their well-shaped, empty skulls. I think they suspect I'm capable of doing just that, so choose to be King Log when it comes to their children and the choices we made.\n\nAs it is, I'm happy, my husband and baby are happy, and Freddy's happy at last. I think we earned the life we have, so we have a lot to be proud of."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "jack and teruko",
        "slimy fineman",
        "harry and sai fong",
        "andy",
        "brother and sister",
        "oral",
        "anal",
        "romance",
        "marriage",
        "linda"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/shining-girl-ch-06-andy-and-linda"
}