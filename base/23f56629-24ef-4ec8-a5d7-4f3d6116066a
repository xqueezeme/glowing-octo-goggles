{
    "title": "The New Neighbor Ch. 02",
    "pages": [
        "\"I didn't expect, we would move this fast\", Brenda says. It's one in the morning and we're still cuddled up together, on the couch.\n\n\"I planned to seduce you, with my cooking skills and at the end of the evening, be graced with a kiss.\"\n\n\"And I would have graced you,\" she says smiling at me, \"if the food was any good.\"\n\nWe never did make it to the dinner table.\n\n\"My plan was, to be in this position, your arms around me, wearing some more clothes and then telling you, that as women go, I'm a little different. I was nervous all day about that moment. In the past, it has had mixed reactions.\"\n\n\"I'm sorry about that, I hope my reaction was to your liking,\" I smile while saying this, knowing the answer. She turns her face to me and while her lips touch mine she mouths, \"yes it was.\"\n\nI pull her in close, our naked flesh gliding over one another. Every time she places her hand on a new location on my body, I feel an exotic rush. I've never felt this attracted to another person. When her hand forms around my cock, I hum in excitement and respond by locating its desired home. My fingers make little circles around her rosebud, but when I apply pressure, Brenda jumps up and says, \"no.\"\n\nNot in a dismissive or rejective way, she adds, \"this is going somewhere wonderful but it's,\" turning to the wall clock, \"almost three in the morning, and I have to work soon.\"\n\nBeing raised right, upon hearing, no, I help her to her feet, give her a little kiss on the lips and start looking for my clothes. All the while being apologetic about letting it get so late.\n\n\"You have no idea how hard it is, to make you leave. If I had all the time in the world, we'd be in bed right now.\"\n\n\"Will I see you tomorrow?\"\n\n\"Count on it. And I have Sunday off, so we can take our time.\"\n\nIn the hallway, we have the hardest time letting go, when I'm finally back in my apartment, my phone chimes.\n\n\"I miss you.\"\n\n\"I miss you, too.\"\n\nI'm a little restless at first, but I soon calm down and find a deep sleep. I dream of a beautiful face in ecstasy and a pare of breast bouncing up with each deep thrust. There is also a moment of violence, where I gleefully kick the shit out of the little twerps, who hurt Brenda. This fades and the dreams focus back on a woman and they slowly get more vivid. We continue on the couch, I'm nursing on one of her breasts, while she's undulating with me inside her. I'm kneeling behind her, controlling her body. I dream of being awoken with her warm mouth around me.\n\nWhen it gets too good, as with every dream, you wake up. Me with a racing heart and raging, well you know.\n\nIt takes me a while to relieve my bursting bladder and when I shuffle into the living room, the little light on my phone is blinking. A private message from Brenda and one from Nicole in our Nathan, Brenda Nicole group. Ignoring the temporary Parisian, I select Brenda's text chain. A long message, those can spell trouble. Previous relationships usually ended with long messages. This one at least starts off good.\n\n\"Let me start by saying, last night was wonderful. You were the perfect gentlemen, I expected you to be. But I meant what I said, I didn't expect us to go this fast. I've been hurt in the past. People who used me for a sexual kink, or thought they could handle dating a trans woman, were embarrassed to be seen with me, or even mistreated me after sex. So last night was wonderful, but now, in the clear light of day, I want you to think if this is something you really want. Because I'm fully out and proud and only want to be with someone who embraces that. Dating me would no longer make you a heterosexual CIS man. I'm sorry if this overwhelms you, but I need to protect myself. Take your time, and let me know what you think.\"\n\nI read the message carefully, several times. I fully understand her point, but I had made up my mind last night and now in the clear light of day, as she put it, it hasn't changed. I never gave a shit about labels nor what anyone thinks of me. I'm in this life to make myself happy and if along the way I can do that, with and for other people, all the better. But now to come up with a good response. Jump the gun and go all out, with a declaration of love and gay pride, would seem and feel disingenuous.\n\n\"I could say that I understand where you're coming from, but of course I don't. As a heterosexual CIS male (had to look that up), I've never had to face what you did. But last night, after you told me, that you didn't start out in life as a woman, I looked at myself in the mirror and said, out loud, that I didn't care. Of course, I was immediately attracted to you, from the second I saw you. I mean, have you seen, you? But it was your kindness and warmth, and your fierce and loving friendship with Nicole, that sealed it, for me. I have no regrets about last night and want to see more of you. I will never ask you to hide who you are. Writing all this, I realize, words will not convince you, you might have even heard all this before. I have to earn your trust, and that's what I intend to do. So may I propose the following? Last night was a spoiler. We skipped ahead in the book a few chapters. Let's start at the beginning now.\"\n\nI sent the message and had the next one already typed.\n\n\"Hi, Brenda,\n\nI'm sorry if this is forward, but I find myself really attracted to you. I value your friendship very much, so if the feeling is not mutual, forget this message, but I'd kick myself if I didn't ask. Would you like to go out on a date with me? Dinner and something fun, like paintball, laser tag, dragon-riding, snooker, go-carting, or maybe just a walk on the beach.\n\nKind regards,\n\nNathan\"\n\nEven though I was fairly certain she'd say yes, I was still quite nervous. That coupled with the fact that Brenda once had told me, that she didn't answer her phone when at work, made the following hours crawl by.\n\nI clean up the uneaten and by now spoiled dinner, from last night. Do some chores and shopping and then remember the message from Nicole. She was having a blast in Paris. Excited messages about where she'd eaten, that she'd seen the Mona Lisa and a bunch of pictures of her, near and on the Eiffel tower. Her last message read \", can you guys still pick me up from the bus depot, tomorrow at 1600?\"\n\nTo which Brenda already had replied, \"of course I'll be there,\" and I added, \"me too!\"\n\nSeconds later, my phone rang. Brenda.\n\n\"Hi.\"\n\n\"Hi.\"\n\nMercifully cutting right to the chase, \"thank you for your kind message and yes, I would love to go on a date with you.\"\n\nI did a little dance in my living room.\n\n\"That's wonderful! What time may I escort you? And do you have any preference for dinner and or the fun thing?\"\n\n\"I'll be ready at six-thirty and leave myself in your capable hands.\"\n\n\"Great! See you tonight!\"\n\n\"Looking forward to it.\"\n\nThis ended the call and started my panic. Like a dumbass, I had booked nothing and have no idea what the fun thing should be. It was now five. A thousand impossible options spring to mind and not knowing what to do, I start cleaning, my already clean apartment.\n\nThen, savior in the form of a text, \"I'm intrigued by the dragon-riding and would love to go racing with you sometime, but I've had a long day, so can the fun thing be something, not too strenuous?\"\n\nThen I remember a company outing to a bowling alley, a few months ago. Lanes are usually available at short notice.\n\n\"It's a bit mundane, but how do you feel about bowling?\"\n\n\"That would be lovely.\"\n\nI reserve a lane at seven and a table at a nice Italian place, for eight-thirty. These tasks completed, I rush to the supermarket, where I score some flowers. On the way back I place them on the dashboard of the passenger side of my car. I figure that'd be a nice surprise.\n\nRunning through a shower and deciding on black jeans and a button-down shirt with a sports jacket, it's now a quarter to six, and so the longest forty-five minutes of my life begin.\n\nWhen finally the wait is over, I knock on her door.\n\nAnd then, the most female of responses, \"just a minute, finishing up!\"\n\nMore waiting.\n\nWhen finally the door opened, everything I remember from last night, is standing in front of me. She's also gone for jeans and sneakers, probably because of the bowling, but the top showing her belly covered by a jacket, had me gasping for air.\n\n\"You look beautiful, thank you for coming with me tonight.\"\n\n\"You look very handsome and thank you for asking.\"\n\nShe locks the door and I, a little unsure of how much physical contact she wants, put my hands in my pockets and hook out my elbow. She laces her arm through and we're off. Making sure to open every door for her, especially when we get to the car \",awh, are those for me?\"\n\n\"Of course!\"\n\nDuring the ten-minute car ride, we do the, how was your day and did you see the messages from Nicole, thing. I have on my favorite playlist and she commented on liking the songs. So, up the volume goes.\n\nAt the lanes, it quickly becomes apparent that we're both terrible at this game. Seeing this, she offers a challenge, \"oke, what does the winner get?\"\n\n\"A home-cooked meal?\" I offer.\n\nSitting on the benches next to each other, waiting for the frame to clear, she gets in close and whispers, \"I was thinking something a bit more intimate, than that.\"\n\nMy heart starts racing, this was supposed to be the first chapter of the book, so acting accordingly. \"What did you have in mind?\"\n\n\"The winner goes home with the losers undergarments, which they have to take off in the restaurant.\"\n\nI move slightly away from her, so I could regard her completely, cock an eyebrow, extend a hand and say, \"deal.\"\n\nShe shakes it, kisses me on the cheek, and moves away, to pick up a ball. Now that we have something to play for, I really like bowling. Like I stated before, the game always felt somewhat mundane, but now, I'm playing the most exciting frames of bowling in my life. We decide on best out of three.\n\nI'm having the hardest time concentrating, not just because of the possible price or prize, but also getting to look at Brenda throwing the ball. Her perfect ass extending out at the apex of her throw. It was creating a problem in my pants. Because of our combined lack of skill, the scoreline kept very close. At the tenth round of the first frame, I had fifty-six and she forty-nine. Brenda got to roll first. A strike! By the grace of all that is pure, the next one goes in the gutter and I have to score four to win. Of course, the first one misses everything and it looks like, all those little white motherfuckers, at the end of the lane, start mocking me. Brenda is ecstatic. Comes up behind me, her arms around me, and whispers, \"I hope you're wearing something sexy.\"\n\nIn my male bravado, I retort, \"it's not over yet,\" and step back out, for my last roll.\n\n\"Miss it! You suck! Choke!\" Brenda heckles me.\n\nI decide on slow and straight down the middle. A few pins drop and we both anxiously look up at the scoreboard. I downed five pins.\n\n\"Victory!\" I yell, raised arms above me.\n\n\"Not yet buddy boy. I'm winning the next one.\"\n\nLike the last frame, we make a complete hash of it. However in my overconfidence of winning the previous frame, I roll gutterball after gutterball and when the tenth round comes again, I'm trailing more than 10 points.\n\nThis of course much to the delight of my bowling partner, \"those briefs are coming home with me,\" she whispers in my ear. And then to emphasize her point, or merely to distract me, licks the lobe.\n\nThe last and final round, who's going commando?\n\nShort answer, me. In the last round, Brenda pulls out all the stops. Kisses my neck before my roll, backs her ass into my face while I'm sitting down, \"oh, I didn't see you there.\" My head is spinning and the other is standing at attention. Me still wanting to be the perfect chapter one gentleman, I decide to let this happen and not retaliate.\n\nShe mocks me by raising her hand and claiming, \"victory!\"\n\nI bow, before walking over and pulling her into a hug. I kiss her on the cheek and surrender to the superior bowler.\n\n\"What color are they?\" Grinning from ear to ear.\n\n\"Black.\" Doing the same.\n\n\"Would the Queen of bowling like to be escorted to her victory meal, now?\"\n\n\"Queen, I like that. Yes, she would.\"\n\nIn the car, she thanks me and says it was a lot of fun. \"How a silly bet can make even the mundane, interesting.\"\n\nWe laugh and make jolly, the twenty-minute ride to the restaurant. Brenda claiming her Queendom and subjugating me as her serf, I swearing fealty to my bowling Queen.\n\nWhen Brenda steps out of the car door, I had opened for her, I bow and proclaim, \" my Queen.\"\n\nShe puts her hand on my chest and looks at me, seriously.\n\n\"Thank you for letting me have my fun. I know you were being a gentleman and not teasing me back, for that reason. I used that, a little, sorry.\"\n\nI take her hand and place the other on her cheek, \"Don't worry about it, I had so much fun with you.\"\n\n\"Kiss me.\"\n\nI lean down and my lips find hers. In the parking lot of an Italian restaurant, I have one of the best and most meaningful kisses of my life. We slowly separate and stare into each other eyes for a while. She breaks the tension, \"oh, you're trouble, let go inside.\"\n\nShe brings the flowers with her into the restaurant and a helpful waiter puts them in a bucket normally reserved as a wine cooler. The food is perfect and the dinner conversation is open and honest. She tells me about her past, feeling trapped in the wrong body, the beginning of her transformation, and what her process was and still is. She says, she thought it was funny I had to look up what CIS meant. I tell her that I'm not that interested in labels, but I did some digging and for now, pan would suit me best. She reaches for my hand and just smiles.\n\nWhen the mains have been cleared, Brenda looks at me with a mocking serious face.\n\n\"Time to pay the Queen. To the victor go the spoils. I'll order your dessert, you go fetch me, my prize.\"\n\nStanding up I say, \"yes, your grace.\"\n\nVery happy I booked a fancy restaurant, cause that usually means the bathrooms are clean. This is no exception. I kick off my shoes, undo my belt and pants.\n\n\"Here goes nothing.\"\n\nThe underwear goes down and after putting everything else back on, I walk back into the restaurant, commando style. My underwear in my fist.\n\nI walk up behind Brenda and kiss her neck as I slide my hand into her lap.\n\n\"Your prize, my Queen.\"\n\n\"Thank you, serf, you may be seated.\"\n\nGiggling, she torts, \"comfy?\"\n\nEqually amused I reply, \"no.\"\n\n\"Thank you for honoring the bargain. Very sporting of you.\"\n\nTo which I merely nod.\n\nDinner comes to a close and after dessert, I take her hand and we walk to the car. Thank the maker for automatic transmissions, because I hold her hand the whole way home. The car ride is silent, punctuated by some of my favorite songs.\n\nStanding in front of her open door, she appears nervous.\n\n\"I would like to invite you in, but...\"\n\nI stop her from speaking by holding up my hand and pulling her in close with my other.\n\n\"If it's okay with you, I would like chapter one to end with a kiss at the door and a promise that I'll call you tomorrow.\"\n\n\"That would be lovely.\"\n\nOur goodnight kiss is slow but passionate. After my tongue leaves the warmth of her mouth, she lays her head on my chest.\n\n\"Thank you, for a lovely evening.\"\n\n\"You made it lovely.\"\n\nWith that, I give her a small peck on the lips and let her go inside.\n\nJust before I go to bed, I get a message from Brenda. It's a picture of her body, she's wearing a bra and my underwear. The text reads, \"a little big, but very comfortable.\"\n\n\"Even in my boring briefs, you look so sexy.\"\n\n*kissy-face*\n\n-----\n\nEven though I live across the hall, I promised I'd call, so after waking, washing, dressing, and eating, I do.\n\n\"Goodmorning,\" I hear a sultry or perhaps sleepy voice greet me.\n\n\"And a good morning to you as well. Did you sleep well?\"\n\n\"I dreamt of you, so yes.\"\n\n\"Must have been the influence of my conquered underpants, you were wearing.\"\n\n\"Were?\"\n\n\"No way.\"\n\nThe audio call switches to video. And I see a familiar pair of underpants around some very sexy hips. The camera is raised to her face, \"would you like to come over later, to,\" she hesitates and the with a cute smile continues, \"cuddle?\"\n\n\"I would love to.\"\n\n\"I'll text you when I'm ready. Probably after lunch.\"\n\n\"Okay, see you soon.\"\n\nAfter an air-kiss, she closes the connection. It being nine, I take my pent-up energy to the gym and work out like a beast for 2 hours. I'm not the biggest gym rat in the world, but today I felt like one of those CrossFit champions. I could run faster and lift more than I'm used to.\n\nI never shower at the gym, so when I meet Brenda at the entrance of the apartment building after she's gone shopping, I look and probably smell, awful.\n\n\"What the hell have you been doing?\"\n\n\"Tried to tame a dragon for our next date. It did not go well.\"\n\nAfter a burst of laughter, \"if your dragon taming skills are anything like your bowling, I guess I'll be waiting a while for my dragon ride.\"\n\n\"I would think so.\"\n\nI take the shopping bags from her and we enter the elevator. As soon as the doors close, I'm pushed to the wall and Brenda forcefully kisses me. Usually, I'm annoyed with how slow the building's elevator is, right now it's way too fast. When the doors begin to open, Brenda disengages from me and starts walking down the hall. Thankfully it's just me and her because my gym shorts are not capable of holding back my excitement.\n\nShe opens the door to her place, and with whimsy says, \"in here please.\"\n\nWhen inside she closes the door behind me and guides me to her kitchen.\n\n\"You may place the bags over there,\" pointing to the kitchen counter.\n\n\"Yes, my Queen.\"\n\n\"That's right, I'm the Queen.\"\n\nAfter having completed this task, I'm taken by the hand and led to her bathroom.\n\n\"Shower.\"\n\n\"But, I have no clean clothes here.\"\n\n\"Give me your keys, I'll fetch some for you. When I get back I expect to hear running water.\"\n\n\"Yes, my Queen.\"\n\nI give her my keys and get naked quickly. After my workout, the warm water feels fantastic. A few minutes later the bathroom door opens. In walks Brenda with some of my clothes. As I turn off the water, I do notice the sheer lack of garments.\n\n\"That's a shirt and underwear, you couldn't find pants.\"\n\nAll this is very amusing to Brenda, \"no, this is all you get.\"\n\nWe're both enjoying this little powerplay.\n\n\"Go head, dry yourself.\"\n\nI comply, while Brenda is enjoys the view, I towel off. After which I'm handed my shirt and then underpants. When I'm 'fully' dressed, she saunters over to me and whispers, \"Your Queen needs a massage, you will wait here until called. If you do a good job, you will be fed.\"\n\nNot being able to hold my excitement, she says sternly, \"only a massage!\"\n\n\"Yes, my Queen.\" At which she marches off.\n\nI'm overjoyed, only a massage, is more than I hoped for today. I patiently wait for my queue and when it comes, I hurry out, to find her lying in bed. She's naked, save for the towel covering her ample backside.\n\n\"You may proceed.\"\n\nShe's in the middle of the bed, so I figure the best approach is to straddle her. This is met with an approving moan. Starting at her neck and slowly making my way down. I feel this beautiful creature underneath me, start to relax. Muscles that at first resisted my manipulation, now move freely under my hands. Every time one gives up its resistance, Brenda moans. I take my time, not just for her pleasure, but equally my own. That I'm allowed to touch someone this wonderful, is bliss. When I arrive at her glutes, I bend over and whisper, \"would you like me to go lower?\"\n\n\"No, this is fine, for now. Thank you, you may wait outside.\"",
        "A little disappointed, but still very happy, I choose one small act of defiance and kiss her on the neck.\n\n\"Naughty serf!\" Brenda giggles.\n\nI dismount and get out of the bedroom, closing the door behind me. Not wanting to just stand there, I make myself useful and start unpacking the grocery bags. When everything is stalled out on the counter, cause I don't know where anything goes, Brenda emerges from the bedroom, wearing a very similar outfit to mine. She lifts her shirt a little, \"like my new underpants?\"\n\nThey're mine, of course.\n\n\"I've seen you in sexier stuff.\"\n\n\"Sure, but these are sooo comfortable.\" She turns and shows me her behind, \"I just had to alter them a little.\"\n\nThere's a clothespin at the back, bunching the pants up over her hips, so they stay up.\n\n\"Nice hack.\"\n\n\"Thank you,\" she says while coming in close, \"and thank you for my massage, you're very good at that.\"\n\n\"It was my absolute pleasure,\" I get out before her lips touch mine. There in her little kitchen, we make out like horny teenagers. My undergarments are not able to hide the excitement I feel. Knowing she's not ready, I don't pull at her clothes and angle my erection away from her a little.\n\nThe kiss stops and she looks a little forlornly, \"I'm not ready, yet. I know that, you know,\" she points at me and us and the situation.\n\nI stop her panic and say, \"I'm here to cuddle, I will not push you for more, even though our friend down there,\" pointing at my soldier, standing at attention, \"has other plans. You are safe with me. Take your time.\"\n\nWith that she relaxes and allows me to wrap my arms around her, \"and please, keep playing your sexy little powerplay games with me, I really enjoy that.\"\n\n\"I'm usually very submissive in the bedroom, maybe because I'm scared that the guy will not enjoy a strong woman, especially one like me, but with you, I feel comfortable. I get the feeling you're not going to run away.\"\n\n\"I will not, my Queen.\"\n\nWe have a good tension-breaking laugh at that. Then I turn her around and lightly slap her on the ass, \"I believe I was promised food, my Queen.\"\n\nHer hands now on the counter and her ass at attention, she turns her head to me with a sexy smile on her face.\n\nI grab her by the hair and turn her face a little more my way, my face now very close to her's I whisper, \"I can be dominant too.\"\n\nAfter another slap on her ample hindquarters, a little harder this time, I walk out of the kitchen, \"now, make some food for your man.\"\n\nThere is a bar separating the kitchen and the living room, so when I sit down at the dinner table I can still see Brenda with her hands on the counter, smiling at me.\n\nI give her an air kiss and she goes to work. While she works we make small talk and eventually land on the topic of Nicole.\n\n\"Would you like to ride with me, when we pick her up?\"\n\n\"I'm going straight from work.\"\n\n\"I can pick you up there.\"\n\n\"That would be lovely.\"\n\n\"Do you think she'll suspect anything?\"\n\n\"Sweety, she knows.\"\n\n\"How?\"\n\n\"I talk to her every night and we don't have secrets,\" she looks at me with a little concern, \"are you okay with that?\"\n\n\"Of course! Secrets are highly overrated.\"\n\n\"Good!\" as she smiles and continues with her meal prep.\n\n\"So, she also knows what we talked about, two nights ago, about your plans for her and me and,...\"\n\n\"Well, sort of. I've implied that if she doesn't find anyone, she could experience her first time with someone she knows and would be very safe with. You still okay with that?\"\n\n\"I am, under one condition. You and I need to be in a more, how do I put it, stable place first. If that makes any sense.\"\n\nShe looks a little puzzled. \"I want us to be in a healthy and sexual relationship, before we start complicating it, with a third party.\"\n\n\"That's fair.\" She walks over to me, leans forward, and kisses me. \"Thank you, that's actually very smart of you.\"\n\nI pull her onto my lap and say, \"I'm falling in love with you, Brenda. And as much as I like and would like to help Nicole, my feelings for you come first.\"\n\n\"I'm falling for you too.\"\n\nThe kiss we share is slow and it lingers and only stops when the smells and sounds from the kitchen grow stronger. With a small slap on the ass, I bark \"Don't burn your man's food, woman.\"\n\nThis is received with the merriment it was intended and Brenda hops back into the kitchen. Lunch is great, after which we spend the rest of the day watching movies on her couch, while doing the primary thing I was invited over for, cuddling.\n\nAfter an order-in dinner we resume our places on the couch and while browsing through Netflix, land on IT, \"you want to watch this?\"\n\n\"I'm not much for horror, but we've been watching romcoms all day, so I suppose we could watch something you pick.\"\n\nWe, don't watch anything. I watch IT, while Brenda is under the blanket she's pulled over us. Every once in a while she looks up at the TV, but then the clown jumps up and she's right back under the covers.\n\n\"You really don't want me to turn it off?\" I ask for the third or fourth time.\n\n\"No, it's fine, you enjoy, I'll be down here, enjoying myself.\"\n\n\"How are you enjoying yourself?\"\n\n\"I'm cuddled up against my man, his arms around me and my hand on his chest. I'm doing just fine, thank you.\"\n\n\"That is nice,\" I comment while her hand goes under my shirt and finds my bear chest.\n\nWhen the movie is over, my eyes start getting heavy. I haven't felt Brenda move since the third act. Looking down, her eyes are closed and she's breathing slowly. I close my eyes and drift off.\n\nWhen I wake, the early morning light is coming into the living room. We hadn't bothered closing the curtains. Brenda is still lying on top of me, breathing slow. I slowly stroke her hair, which in turn starts her fingers moving on my chest.\n\n\"I think it's time to go to bed. I don't really want to, but I'm kicking you out.\"\n\n\"I think it's almost time for work.\"\n\n\"What do you mean?\"\n\nShe pushes up onto my chest and looks around, \"you stayed the night?\"\n\n\"Is that okay?\"\n\n\"Yes, of course, it is.\" She leans in and kisses me. \"I slept really well, thank you.\"\n\n\"As did I.\"\n\nWe get to her front door and I look at myself and accusingly at her.\n\nWith a big smile on her face, she says, \"Hey, that's not my problem, you came here unprepared.\"\n\n\"Alright.\" I theatrically puff up my chest and proudly step out into the hallway in my underwear and t-shirt.\n\n\"Whoohoo, sexy man in the hallway! Come and get him, ladies!\"\n\nI stick my tongue out at her and retort, \"See you this afternoon. Text me the address.\"\n\n\"Have a good day,\" I get out just before I close the door, \"you too!\"\n\n----\n\n\"I'm here to pick up Brenda,\" I tell the receptionist.\n\n\"It looks like her shift just ended. I'll page her for you.\"\n\nI thank the woman behind the desk and take a seat in the waiting area. After a few minutes, Brenda emerges from behind the security doors. My face forms into an involuntary smile, as soon as I see her.\n\nI jump up from my chair and walk over to greet her. As I bend over for a kiss, she pulls back and quickly glances over to the lady at reception.\n\n\"Oh, I'm sorry, not appropriate?\" I apologize.\n\n\"No, it's just, they know about me here, so they'll know that you,\" I don't give her time to finish. I pull her head into me and kiss her on the lips.\n\nWhen I pull back, Brenda is beaming, as I ask, \"how was your day, sweety.\"\n\n\"It's great now.\"\n\n\"Good, now let's go pick up cockblock,.. I'm mean Nicole.\"\n\nFor this, I get punched in the arm.\n\nWaiting for the bus to arrive, Brenda starts to pace up and down the platform while shivering. It's not the warmest time of year and the platform offers no protection against the wind shear.\n\n\"I have a better solution against the cold, than pacing.\"\n\n\"I know we could wait in the car, but I want to be here when the bus arrives,\" she calls from the other end while turning around.\n\n\"No, something better,\" I open my coat and gesture her over.\n\nWhen she stands in front of me, I wrap the two sides of my coat around her and pull her in tight. The left side of her head is now resting against my chest and I cover the other side with my hand.\n\n\"How's that?\"\n\nBrenda answers with an approving hum. \"Let me know when the bus arrives.\"\n\nWe spend a romantic few moments inside my coat when I see a large vehicle round the corner. \"I think, that's it.\"\n\nAs the coach comes to a halt, the big logo reading, \"The cheapest way to see Europe's capitals!\", Brenda unfurls from my coat and eagerly starts looking through the windows in search of her friend.\n\nWhen they make eye contact through the glass, they both screech in excitement and frantically start waving. It's like Nicole has come back from combat and not a half week in Paris.\n\nIt takes at least five minutes for all the senior citizens to get off the bus before Nicole can finally emerge and jump into the arms of her best friend. Nicole is beaming, even after letting go of her friend and greeting me.\n\n\"Hi Nate, thanks for coming to pick me up.\"\n\nI even get a small and very short hug, which for the Nicole I knew, a few months or even weeks ago, would be an overly familiar gesture. Now she seems somewhat comfortable with it.\n\n\"Had fun?\"\n\n\"So much fun! I brought you presents and I've got cheeses, French cheeses and I've made lots of pictures and,\" at which point Brenda interrupts, \"sweety, I'm cold, can we get your stuff and go home.\"\n\n\"Sure, but you guys are coming over right?\"\n\nI look at Brenda, shrug and we both say in unison, \"sure!\"\n\n\"Great, I can tell you everything!\"\n\nWhile Nicole gets in line to retrieve her bag from the belly of the bus, I ask, \"did she take a detour through Amsterdam and get hooked on speed?\"\n\n\"I think it's great to see her this excited.\"\n\n\"So do I, it's just a version of her I've never seen. I even got a hug.\"\n\n\"You just be nice and soon, I'll give you a lot more than just a hug.\"\n\nThat shuts me up. Moments later Nicole arrives with her trolley and what must be at least five plastic bags.\n\n\"I bought souvenirs!\"\n\n\"That's wonderful, lets get to the car, so you can do a show and tell.\"\n\nThe whole ride home the car is filled with an endless barrage of, \"and then, and then, and then.\" Punctuated by Brenda's, \"oh my god! That is so cool. Awesome.\"\n\nSo happy for Nicole, I pretend to be a hole in the air and just drive the car, so that the two friends can catch up.\n\n\"And I got something for you too.\"\n\nThat was directed at me because when I don't respond, I once again get punched in the arm by Brenda.\n\n\"Oh, that's so cool! Did you steal the Eiffel tower and put it in one of those shopping bags?\"\n\n\"Close!\", Nicole exclaims.\n\n\"And you, with the punching,\" as I give Brenda my most evil stare, \"don't make me put you over my knee.\"\n\nSeductively she bites her lower lip and says back, \"mmm, I just might enjoy that.\"\n\nAnd then punches me again.\n\n\"Brenda!\"\n\nAt Nicole's prudish exclamation, we both burst out laughing and thankfully Nicole joins in.\n\n\"I'm going to have to have a serious talk with you, mister.\"\n\n\"Uh Oh,\" I turn to look at Brenda, \"we've been busted.\"\n\n\"You're in trouble now,\" Brenda laughs, \"I guess you'll be the one, going over someone's knee.\"\n\nAnother burst of laughter from every occupant in the car, when we get home the frivolity continues. One of the shopping bags is opened and a line of little Eiffel towers is setup on the kitchen counter.\n\nAfter being given orders, by Nicole, to set the table, the two ladies disappear into her bedroom, with the trolley and remaining shopping bags. Through the door, I hear giggling and the occasional screech of excitement. I dutifully set the table for three, however, when the ladies emerge, being told off. \"No, facing the TV, so I can show the pictures!\"\n\nDoing my best Igor impersonation I say, \"Apologies my ladies, I will humbly correct my mistake.\"\n\n\"Very good,\" Brenda says. She walks over to me and kisses my cheek. \"I'm going to take a quick shower, I have nursing home, all over me.\"\n\nI make eyes at her that scream, \"don't leave me alone with her!\"\n\nSmiling and ignoring me, she leaves.\n\n\"So, I'm guessing you liked Paris,\" I start a lame attempt, at small talk.\n\n\"No, that's not what we're going to talk about.\"\n\n\"oh.\"\n\n\"She's my best friend.\"\n\n\"I know,\" I reply sheepishly. I get the feeling, if I don't act well in these next few moments, I'm getting one of those Eiffel towers, in the eye.\n\n\"I like you very much and you are a good friend, but if you hurt her, I'll never talk to you again.\"\n\nOf course, it wasn't going to be a threat of violence. Nicole knows what it's like to never be talked to again, so that coming from her, might as well be a death sentence.\n\n\"I won't hurt her, I promise you.\"\n\n\"And don't hide her from the world. Other guys have done that, and it's not what she likes.\"\n\n\"I've already been out on a date with her and picked her up from work, where I kissed her in front of the receptionist lady.\"\n\n\"She told me, you kissed her in front of Darlene, she's the biggest gossip in that place. By tomorrow, even the deaf-mute patients will know.\"\n\n\"Good. Nicole, I've never felt this for anyone and I will tell the world how I feel about her.\"\n\nNot entirely convinced, \"Okay, well, we'll see. But you've been warned.\"\n\n\"I have. I will not let you down.\"\n\nSticking a finger in my face she says with the last bit of anger in her, \"Don't let her down, you now know the consequence if you do.\"\n\n\"I'd expect nothing less. I'm sure she knows, but Brenda's really lucky, with a friend like you.\"\n\nA small smile cracks the anger dam, on my adversary's face, \"you can stop that right there, I'm immune to sucking up.\"\n\n\"You more of a sucking down girl?\"\n\nShe now fully smiles and makes a hand gesture as if she's going to strike me. Instead, she turns and reaches for one of the towers.\n\n\"Here, I brought this for you.\"\n\n\"Thank you, that's very sweet.\"\n\nI step forward and before she can object, kiss her on the cheek. Her face immediately goes bright red. Realizing this, she spins and rushes for the fridge, sticking her head inside.\n\n\"Do you want anything to drink?\"\n\n\"You just got back from holiday, do you have anything to drink?\"\n\nHer head still in the fridge, \"no, of course not, silly of me.\"\n\nNot wanting to torture her, \"I could run down the shop and get us some,\" she interrupts, \"yes! Great idea.\"\n\nOn my way out I ask what to get, \"anything, just go quickly, uhm,.. I mean come back quickly.\"\n\nI didn't need to ask that last question, I was just having a little more fun embarrassing her. After coming back from the shop with, wine for Brenda and me and apple juice for Nicole, I run into the object of my desires in the hallway.\n\n\"What are you doing here? Tell me you two didn't get into an argument!\"\n\n\"No, nothing like that. First I was given a very stern warning about not hurting you. Don't be angry with her, it was heartfelt. You are very lucky to have her as a friend. Then I was given an Eiffel tower as a present, and to thank her, I kissed her on the cheek. This turned her face bright red and I offered to get us drinks, so she could compose herself.\"\n\n\"Well alright then, let's go in.\"\n\nInside, Nicole had used her alone time, to decorate the apartment. There's a French flag hanging over the kitchen counter. The lights are covered with red doilies, so now the apartment looks like a whorehouse. French music is coming from the tiny Bluetooth speaker and the first foto is queued up on the TV, a blurry shot of the coach.\n\n\"Tada!\"\n\n\"Oh sweety, it looks wonderful.\"\n\nOn the table, there is a baguette and some cheeses and pat\u00e9s.\n\n\"Please sit!\"\n\nI take the drinks out of the bag and place them among the food.\n\n\"Thank you,\" Nicole says, avoiding my eye line and pours herself a drink.\n\n\"Where's your bottle opener?\"\n\n\"I don't have one.\"\n\n\"What kind of French traveler are you?\" I snicker, \"I'll go get one.\"\n\nWhen I get back, I get the feeling I'm interrupting a conversation. Because after I open the door the highspeed chatter abruptly stops. Ignoring this, I open the first bottle and pour out two glasses.\n\n\"What were you two talking about?\" I ask, teasing.\n\n\"Is that French wine?\"\n\n\"Of course, had to stick with the theme of the evening. It's a Chateau 'change of subject'.\"\n\n\"Can I have some?\"\n\nBrenda and I share a look.\n\n\"Uhm, yeah, sure.\"\n\nI pour out a third glass and set it next to Nicole's plate.\n\n\"Enjoy.\"\n\n\"Thanks. You guys want to see some pictures?\"\n\n\"It's why we're here sweety, start the show!\"\n\nWhile enjoying some cracking good food, Nicole regales us with the sights and stories of Paris, one blurry picture at a time.\n\nAfter about a hundred pictures I ask, \"how's the wine?\"\n\n\"A little bitter, but I kinda like it.\"\n\n\"You want some more?\"\n\n\"No, I'd better not, but I'd like to try again some time.\"\n\n\"Deal, I'll get a vintage which is a little sweeter.\"\n\n\"Cool,\" and goes right back into Paris.\n\nLike the messages she sent, she has taken a photo of every angle of the Eiffel tower. And then a hundred more, while going up.\n\nAfter we've had our fill of the French delights, we clear the table and install ourselves on the couch, to look at, what I assume are the last four million photos.\n\nNicole in the middle, resuming her cockblock role, we sit, thighs touching. A few weeks ago, this would not have happened, I would have been on the floor or in one of the dinner table chairs. It's cozy and somewhat intimate. Nicole chatters on, gives her color commentary with each picture. Having to talk fast because, thankfully, she can't pause the slideshow.\n\nI do the old yawn and stretch, so my hand ends up in Brenda's neck, which I slowly start to massage. Nicole is so engaged, she doesn't notice.\n\nThe last photo is of Brenda and me waiting for her at the bus terminal.\n\n\"So, what do you think?\"\n\n\"That was great sweety! It looks like you had so much fun.\"\n\n\"That was a slideshow of someone who is free and enjoying life. Thanks for sharing that with us.\"\n\n\"Yes sweety, thank you.\" Brenda leans in and kisses Nicole on the cheek, I follow suit, and like before, she turns bright red. She ducks into Brenda's arms, trying the hide her blush.\n\nBrenda looks at me with mock disapproval. I simply smirk back. Brenda decides to throw a little oil on the fire, \"was it my kiss or his?\"\n\nA begging grunt escapes from Nicole.\n\n\"Ah, so it was his.\"\n\n\"Stop it,\" Nicole begs.\n\n\"Maybe we should try again, just to make sure.\"\n\nBrenda starts laying kisses on Nicole, who after a few of those, starts giggling fiercely when Brenda also starts tickling her. When she can't take any more, Nicole jumps up and exclaims, \"okay, bedtime!\"\n\n\"Did you hear that Nate, we are invited to her bed, how French of you, Nikky\"\n\n\"That's nice, I'll go get my pajamas,\" I add.\n\n\"Stop it, both of you,\" Nicole exclaims, thankfully still enjoying the teasing, \"and don't think I didn't notice you, with the arm. I might have grown up sheltered, but I know about the yawn and stretch.\"\n\nBrenda and I look at each other and in unison exclaim, \"busted!\"\n\nWe both stand up from the couch and grab Nicole in a three-way hug.\n\n\"It's good to have you back Nikky.\"\n\n\"Good to be back, Brenny.\"\n\nWhen we release I thank Nicole for the great food and fun evening.\n\n\"Thanks for picking me up,\" then, collecting all of her courage she almost jumps forward and kisses me on the cheek and then bravely stands in front of us, beaming while her cheeks burn bright red.\n\nWe're escorted out of the door and walk hand in hand to our floor.\n\n\"That was fun.\"\n\n\"It really was.\"\n\nHugging in front of her door, I'm hoping to get invited in. Those hopes are quickly dashed, when Brenda says, \"I'm pulling doubles, the rest of the week.\"\n\n\"That sucks. When can I see you again?\"",
        "\"A friend is having an art exhibition Saturday night. Want to be my date?\"\n\n\"Yes! I would love to.\"\n\n\"It's going to be an LGTBQ+ affair. You ready for that?\"\n\n\"No idea, we'll find out,\" I say enthusiastically.\n\n\"It's a date then.\"\n\n\"Looking forward to it.\"\n\n\"We might need to do something about your clothing. I looked through your closet the other day, and you need some fancy dress things.\"\n\n\"Fair enough, take me shopping on Saturday.\"\n\n\"Shopping and showing my man off. Play your cards right and Saturday night will be something else.\"\n\n\"Realy, like what?\" I say, playing dumb.\n\nShe pulls my ear to her mouth and whispers, \"I will fuck your brains out.\"\n\nAnd just like that, she's gone. The door closed behind her, leaving me with a raging hard-on.\n\n----\n\nSaturday slowly rolls around. During the week, we text and call, during which it becomes clear that our romantic shopping trip is going to have a third wheel. Guess who? Brenda of course gives me the option of saying no, but not really. So cockblock, draws up plans in our group text, that we will arrive at the giant mall at precisely ten in the morning. There will be two hours of shopping, lunch and then more shopping.\n\nI give in to all of it because I do enjoy spending time with both of them, but mainly because Brenda ensures me that the evening's activities will be a two-person affair.\n\nThe mall is a thirty-minute drive, so when my doorbell rings at eight, I'm pleasantly surprised to find Brenda, standing there, on her own.\n\n\"Come in.\"\n\nAs soon as I close the door, I'm taken by the hand and dragged to my bedroom, where I am pushed on the bed. She jumps on me and we settle into our favorite cuddle position. Brenda lying on top of me, head resting on my chest and hand under my shirt.\n\n\"I've missed you.\"\n\n\"I missed you too.\"\n\n\"And I was just sitting at home thinking, if he's awake I can just go over there and do this.\"\n\n\"Excellent thinking.\"\n\n\"So, you don't mind?\" She asks sarcastically.\n\n\"On second thought, terrible idea,\" I retort.\n\n\"In that case,\" Brenda tries to get up. I grip her tight to me.\n\n\"No, you said it was a bad idea, so I should go,\" now giggling.\n\nA play fight ensues, where Brenda tries to get off the bed and I stop her. We struggle and throw each other across my bed. When Brenda, decides to fight dirty and sinks her teeth into my shoulder, I stop using half strength and force her onto her back and pin her down with my pelvis onto her's and her arms over her head.\n\n\"Mercy?\" She coyly asks.\n\nI let her hands go, but keep my position and lower myself down to her. We kiss, her hands no longer fighting, now caressing my lower back, the occasional use of her nails into my flesh.\n\nAfter a few moments of this, I start to undulate my pelvis and thrust into her. This is of course blocked by the layers of clothes we're still wearing, but it feels fantastic non the less.\n\nWhen I lower my kisses to her neck, a small voice comes underneath me says, \"if you keep doing that, we are not going to make our shopping trip.\"\n\n\"Then I'll just keep doing this and wear jeans and a shirt tonight.\"\n\nShe burst out laughing, \"oh no you don't,\" and gives me a little push.\n\nI stop and lift myself of her.\n\n\"I came here to do this,\" she gestures at us, indicating the fooling around, \"and to take some measurements.\"\n\nShe produces a tape measure from her pocket. \"Stand up, and take those clothes off.\"\n\n\"Quid pro quo, Clarice,\" I say in the process of removing my shirt. When my pants fall down and I step out of them she says, \"fair enough.\"\n\nWithin the blink of an eye, we're both down to our undergarments. The sexiest woman I've ever known is standing in my bedroom in her underwear. It's all I can do from grabbing her and having my way with her. But I want today to be special as well, and with the promise of my brains being fucked out of its head tonight, I restrain myself.\n\nThis becomes so much harder, no pun intended, when she starts measuring me. Her soft gentle hands move over my body. When she gets to the tent that is supposed to represent my underwear, she asks, \"does the gentleman usually wear it straight out?\"\n\n\"Only in the presence of half naked Queens.\"\n\n\"And when those are not in the vicinity?\"\n\n\"Left.\"\n\nShe makes notes in her phone of everything and then while pretending to take the final set of notes after she's asked me for my shoe size, I hear, *click*.\n\n\"Hey!\"\n\n\"That's for research purposes.\"\n\n\"Fair enough, I'll need to do some research myself.\"\n\nI march out to the living room and retrieve my phone. When I return Nicole has her sweats back on and poses for me.\n\n\"Sneaky girl.\"\n\nShe pulls me in close and kisses me, \"I promise, you can do all the research you want, tonight.\"\n\n\"Now, go take a cold shower, put on some tight jeans, while I rummage around in your closet, so I can check out some sizes.\"\n\nShe points me in the direction of my shower and waits for me to leave. All the while with a huge grin on her face.\n\nWhen I get back, Nicole is waiting on the couch for me, \"I've put some clothes out for you, please put them on and come cuddle with me.\"\n\nI do as I'm told and when she's in my arms and staring into my eyes she says, \"thank you for letting me do this. It feels really nice when you play along with me.\"\n\n\"I enjoy every second of it. Please never be afraid to play with me.\"\n\nWe kiss and cuddle until it's almost time to go. During which time, I ask how Nicole stuck her nose into our shopping trip.\n\n\"She bought sexy lingerie in Paris, but because she always wore the same thing, she had no idea of the sizes and was too embarrassed and nervous to ask. Especially in a French store. So now I'm going to help her get something that fits.\"\n\n\"And is sexy.\"\n\n\"Yes.\"\n\n\"And why does Nicole need sexy lingerie?\"\n\nShe looks at me a little quizzically and somewhat annoyed, \"you know why.\"\n\n\"Okay, only teasing a little. I should make myself scarce, for that part of the shopping expedition?\"\n\n\"Yes, please. After lunch just say you want to look at something, boy-ish.\"\n\n\"The tech store it is.\"\n\n\"And please don't mention any of this. She's very nervous.\"\n\n\"Mum's the word.\"\n\nNicole leaves to get ready and ten minutes later we're in the car heading for the mall. All three of us. To add insult to injury, the two of them decided I am to be the chauffeur for the day, and they both sit in the back.\n\n\"Oh chauffeur, please change the music.\"\n\n\"Oh chauffeur, do you have any snacks on board.\"\n\nIt's early Saturday morning and quiet on the road, so on the onramp to the highway, I get my own back and fly through the banked corner at high speed, bunching the two of them up together on the backseat. When we're through, I am berated for my reckless driving. I simply respond by asking if the music is to their liking?\n\nThat cures them of their chauffeur jokes. And we arrive at the mall without further incident.\n\n\"Now remember what we talked about.\"\n\n\"Yes mommy,\" Nicole jabs back, annoyed.\n\n\"What did you gals talk about?\"\n\n\"Nicole is going to have to be on her own, while you and I go looking for your outfit.\"\n\nI'm over the moon about this. Nicole is bossy at the best of times, I really wasn't looking forward to her judging every outfit I'm forced to try on. I don't say this, of course, I simply reply, \"mkay.\"\n\nUpon entering the mall we go our separate ways. Brenda calls after Nicole, \"remember twelve o'clock at the pizza place, I'll text you if we're done sooner.\"\n\nNicole trundles off, sticking a thumb into the air.\n\n\"You're that worried about her?\"\n\n\"A little.\"\n\n\"She just survived a few days in Paris.\"\n\n\"And I was worried the entire time.\"\n\n\"Come here,\" I say while pulling her into me. I take her face in my hands and give her a small kiss, \"you really are very sweet.\"\n\nShe smiles, takes my hand, and leads me to our, what turns out to be, first of many destinations. I'm given everything in the store to wear, and when my size is not available, a clerk is commandeered into the back, to seak the proper fit. At one point she has every clerk in a gentlemen's store running around, fetching stuff. None of it meets the approval of Brenda, though. After four shops, she slumps her shoulders a little and mumbles, \"fine.\" Then drags me off to a men's store. This store is much more relaxed than the others and the owner actually seems to know his stuff. It doesn't take him and Brenda long to agree on something and when I emerge from the fitting room, wearing a suit, for the first time since we started shopping, my opinion is asked.\n\n\"It's okay.\"\n\n\"Yeah, it needs something,\" the clerk says, \"How does he feel about ties?\"\n\n\"He, has a strongly negative opinion of them,\" I bark before anyone else can answer.\n\n\"What about a cravat?\" He tries to fix.\n\n\"Veto,\" I reply.\n\n\"What about a waistcoat in a different color or motive?\" I suggest.\n\nThis stuns both him and Brenda.\n\n\"What?\" I shrug.\n\nThe store clerk hops to and in passing Brenda whispers, \"you might have a live one here.\"\n\nBrenda hums positively in response.\n\nI point to the clerk and then to Brenda, \"What's this?\"\n\n\"He's a friend.\"\n\n\"So why not introduce me?\"\n\n\"I don't know. I thought you might be, you know.\"\n\n\"Embarrassed? No, none of that. Please introduce me to your friend and that goes double for tonight. I don't need to meet everyone, but I'd like to meet some of your friends and god forbid talk to them.\"\n\nShe smiles and nods, \"sorry.\"\n\nI take her hand and say, \"that's okay.\"\n\nWhen the clerk comes back with a bounty of waistcoats, Brenda steps in, \"Ben this is Nathan, my..\" unsure of what to say next, I extend my hand to Ben and take over, \"boyfriend, but is still new, so labeling is, you know, still a thing.\"\n\nHe takes my hand and says, \"beginner labels, tricky, tricky. It's nice to meet you, Nathan.\"\n\n\"Now bitch, where have you been hiding him, and does he have any brothers?\"\n\n\"He's been hiding across the hall from her, and alas, all I can bring to the table is a married sister,\" I answer for Brenda.\n\nBen leans over to Brenda, \"oh, I like him. He's got sas.\"\n\n\"So do I.\"\n\n\"So is this outfit for tonight?\" Ben asks, no longer hiding his most fabulous self.\n\n\"Yes! He's my plus one.\"\n\n\"I'm her plus one,\" I respond with a smile.\n\n\"Will you be there too?\" I ask.\n\n\"Of course darling, I'm dressing at least a third of the guests.\"\n\n\"Good, it'll be nice to have a familiar face there.\"\n\n\"Don't worry, none of us really bite, unless you ask. And a handsome guy like you, you'll be very popular.\"\n\n\"I'm not worried about that, I'm just hoping to make a good impression on her friends. Or at the very least meeting, some of her 'other' friends.\"\n\n\"So, I take it you're familiar with her royal frumpiness?\" Ben says in the dryest way possible.\n\nI burst out laughing, while Ben gets a smack from Brenda, to which he replies, \"oh, so violent.\"\n\n\"That's what I've been saying.\"\n\n\"I know, right?\"\n\n\"I've been threatening to put her over my knee.\"\n\n\"Do it, she needs a good spanking.\"\n\nBen and I are now laughing like two old buddies. Brenda in faux anger turns and says, \"I think you two can figure this out, without me. I'm going to find Nicole. Make him look presentable please.\"\n\n\"Say hi to her, from me,\" Ben says.\n\n\"I will.\"\n\nAfter Brenda's cleared the store, Ben turns, \"you be nice to that girl.\"\n\n\"I will, threats have already been made by Nicole. I walk the plank if I hurt her.\"\n\n\"Good.\"\n\n\"It's good to see, she has friends that care so much for her. So far, I thought it was just Nicole and me.\"\n\n\"Oh no, there's loads, you'll meet some tonight.\"\n\n\"Looking forward to it.\"\n\nBen gives me a puzzling, but amused look, \"you are, aren't you?\"\n\n\"Yep.\"\n\n\"Just to be sure, you know about her situation,\" he asks while moving his hand over his crotch.\n\n\"Yes Ben, intimately.\"\n\n\"Good, perfect, let's get you sorted then.\"\n\nBen and I settle on an outfit. At the counter I ask Ben to wrap the outfit, so Brenda can't see what we finally settled on. While wrapping Ben says, \"don't worry too much about tonight, it's going to be fine.\"\n\n\"What do you mean?\"\n\n\"Look, it doesn't take a very sophisticate gaydar to know you, you've been playing for the other team, up until now.\"\n\n\"I have.\"\n\n\"So tonight is going to be something new. But everyone is very friendly and when they see how Nicole looks at you, they'll be very welcoming. And if not, come find me, you can hang with us.\"\n\n\"Us?\"\n\n\"Me and my husband.\"\n\n\"Cool, thanks. I'll be sure to introduce myself.\"\n\n\"You two will get along famously. He was straight as an arrow before he met me.\"\n\n\"Not sure what I am now,\" I volunteer.\n\n\"Oh, don't worry about the labels, save for one, love. If that's what you feel, you'll be fine.\" He hands me the bag.\n\n\"Thanks, for the help and the advice.\"\n\n\"Anytime. See you tonight.\"\n\n\"And you as well.\"\n\nAt lunch, I'm pestered by both of them to see the outfit, but I was smart enough to throw it in the trunk of the car, before joining frumpy and giggles for lunch.\n\n\"Well, then just go get it.\"\n\n\"Nope.\"\n\n\"Come on!\"\n\nI lie and say, \"sorry, orders from Ben, I'm not to show you until tonight.\"\n\nThat shuts Brenda up, but Nicole continues, \"but then, you can show me.\"\n\n\"Ben wasn't specific about you, but I'm making an executive decision, Brenda gets to see it first. She can send you a picture tonight.\"\n\nHaving finally won an argument, I triumphantly recline in my chair and smirk while the two girls stew in their defeat. Pizza and drinks are ordered and having dealt with their defeat, further shopping is discussed. As promised, I feign interest in some gizmo at the tech store and the girls agree on shopping elsewhere.\n\nAfter lunch and while waiting for Brenda, Nicole and I stand at the upper deck overlooking the entire mall. I put my arm around her and ask, \"having fun?\"\n\nShe smiles and utters, \"yeah.\"\n\nAfter causing a little redness to appear on her cheeks, I let go, and say, \"me too.\"\n\nOn my own now, I ignore whatever gizmo I was talking about and head for the drugstore. In the hope that tonight ends like I've been dreaming of, and further hope that Brenda might want to spend some nights at my place. So I buy essentials. Massage oil, candles, and the same hair products I've seen in Brenda's shower. At the counter, I add condoms and lube. Having no further interest in the shopping experience, I find a food court and order a drink.\n\nAfter what feels like ten hours, I get a text, \"we've got everything. Can our chauffeur please drive us home?\"\n\nTexting to meet them at the entrance, we find each other five minutes later. Nicole is carrying two big bags from a women's store, while Brenda's only got a small bag, from a famous ladies' store that has a secret. Bouncing in front of us Nicole is excited about everything she's bought and wants to do a fashion show tonight. Brenda reminds her about the art gallery we're going to.\n\n\"Are you sure I can't come?\" she asks, looking back at us.\n\n\"Nathan is my plus one tonight. You'll just have to amuse yourself with the gift I got you.\"\n\nNicole rips her head forward and remains silent. I look over at Brenda and mouth, \"what gift?\"\n\nA mischievous smile comes over her face and very quietly she makes a noise, \"bzzzzz\", quickly putting a finger to her mouth to make sure I don't respond.\n\nI wink, as we make it to the car. Opening the trunk, both ladies dump their bags and grab the one I had left in the car earlier. On discovering it's wrapped up, they have to admit defeat again, \"you think I was born yesterday?\"\n\nI close the trunk and we head home. Brenda now sitting next to me, a hand placed on my leg.\n\nWhen we get home, Brenda has to sternly confirm, that we'll see Nicole tomorrow, after which, like an angry teenager, she stomps off.\n\n\"She'll be fine as soon as she starts playing with my gift.\"\n\n\"You actually bought her a vibrator.\"\n\n\"She didn't have one, and that girl needs some release.\"\n\n\"I'm not arguing with you, just amazed she even took it.\"\n\nStanding in front of my door Brenda excitedly says, \"let's go, I want to see the outfit.\"\n\nIgnoring her. \"What time does this thing start?\"\n\n\"At eight, now keys in the door, it's inspection time.\"\n\n\"That means I have time to take you out to dinner beforehand.\"\n\n\"Yeah sure, stop stalling.\"\n\nI put my bags on the floor and lead Brenda, by the arm, to her apartment. She protests but I have a considerable size advantage so in a few steps she is infront of her door.\n\n\"I'll pick you up at six.\"\n\nNot giving her time to respond in objection I press her to the door and kiss her. After I release and march back to my place while saying, \"see you tonight.\"\n\n\"So, mean!\"\n\nBen and I settled on a navy blue suit with a plaid waistcoat. I told Ben about a pocket watch I own and he said that would be the perfect accessory. Never having worn anything this complicated, I spend the best part of an hour getting ready. A personal record. I quickly book a table at a restaurant near the venue and just before six, I'm good to go.\n\nI knock on my girls' door and wait. Nervous. Is she going to like the suit, are her friends going to like me, am I going to be comfortable enough to be myself tonight. I realize that if tonight doesn't go well, I'm back to square one or worst, alone. My chain of thought is interrupted by the opening door. Behind it, something so beautiful comes into view, that I'm in danger of losing my balance. Brenda is wearing a navy blue, evening gown, a split in the dress revealing one of her legs and at the top, her shoulders and arms free. Not knowing anything about dress technology, I suppose the dress is being held up by her ample bosom, otherwise, it could be that she's simply ignoring the laws of physics right now.\n\nWe both haven't said anything yet. We're just staring.\n\n\"You look,\" and I trail off.\n\n\"So do you.\"\n\n\"Wow, just amazing\"\n\n\"Thank you, you look so handsome,\" and then in a sing-song manner, \"I'm going to have the hottest date tonight!\"\n\n\"And I'll be with the prettiest woman.\"\n\nI step in closer and get warned no making out, it'll ruin the make-up. I peck her on the lips and she whispers, \"the make-up and the fact that I'm so horny, that I would rip all of our clothes of, and we won't make it to the party.\"\n\n\"That feeling is mutual. Nice color by the way.\"\n\n\"I called Ben and begged him to tell me what color you were wearing,\" she confesses.\n\nI turn her to the hallway mirror and stand behind her, putting my arms around her waist, \"we look good.\"\n\n\"Hell yes, we do! Let me get my phone.\"\n\nBrenda walks into the living room to fetch her clutch. This is when I see her from behind. When she bends over to pick it up, I'm grateful that I'm wearing quality garments, a cheaper brand, and my zipper would have buckled under the pressure.\n\n\"What are you staring at?\"\n\nI was still trying to look at her ass when Brenda turns. Caught and having no response, I smile and shrug. Standing in front of me again she teases, \"were you staring at my ass?\"\n\nStill not being able to form words, Brenda teases again, \"were you staring at the place where your cock needs to go tonight?\"\n\nShe emphasizes the word cock, by shoving her ass into my groin.\n\n\"Now smile for the camera,\" she says holding her phone up to the mirror. I put one hand on her shoulder and the other on her hip and smile. A few clicks later and the photo is in our threeway text group.\n\nOn the way to the car, I tell Brenda where we're having dinner.\n\n\"That's almost next to the gallery!\"\n\n\"Yeah, thought that might be useful, not having to walk a long way, especially in those,\" pointing down to her high heel shoes.\n\n\"I mean it's next to the gallery, so we'll probably see a lot of people who are going to the opening, there.\"\n\n\"So?\"\n\n\"So, you know.\"\n",
        "\"I thought I was supposed to be the nervous one, tonight.\"\n\n\"Yes well, right now, I am too.\"\n\n\"Don't worry, we'll be fine,\" I say with undeserved authority. It seems to help, because when I help her into the car, she says, \"thank you for being my plus one tonight.\"\n\n\"It's my pleasure.\"\n\nAfter having parked the car we walk through the city her arm through mine. Most everyone is staring at us. I've never had this kind of attention. It might be because of my suit, but more likley it's because of the heavenly creature walking next to me. At the restaurant, while being shown to our table, Brenda waves and says hi to several people that catch her eye line. I assume they all know her.\n\nWe're seated at a corner booth, allowing us to comfortably touch each other. I hold her hand throughout most of the dinner. A few times some of Brenda's friends come over to the table. I'm introduced as her date and without fail we get complimented on our matching attire.\n\nAfter dessert has been cleared from the table, she asks if I'm ready.\n\n\"I am, your friends seem nice,\" speaking in a manner of saying, \"I can't see, what were you were worried about?\"\n\n\"They're still at their best behavior right now. No alcohol has been spilled yet.\"\n\nI take her hand and lead her out of the restaurant. On our way we're stopped, by what even my feeble gaydar can see is a very happy man.\n\n\"Darling, where did you find this specimen and where can I get one?\"\n\nI extend a hand and say, \"Nathan, nice to meet you.\"\n\n\"And he has manners as well, so jealous, bitch. Brice, it is a pleasure.\"\n\nWhile taking his hand, I squeeze a little harder than is acceptable and say, \"I'm sure it is, but don't call her that.\"\n\nA small hush falls over the three of us and the dinner guests at Brice's table. Brenda steps in and places a hand on my chest and nervously says, \"It's a term of endearment.\"\n\nI cock my head and give a mischievous smile, \"I know, bitch.\"\n\n\"Oh, he is delightful.\"\n\n\"We'll see you in there, again nice to meet you, Brice,\" looking at Brice's table, \"Brice's friends.\"\n\nAs soon as we're outside Brenda throws the punch to my arm I was expecting. I catch her hand and whisper in her ear, \"you are going over my knee tonight,\" I finish by kissing her on the ear.\n\nWhile I release the grip on her fist, Brenda interlaces her fingers into mine and says, \"promises, promises.\"\n\nUpon entering the party, going on inside the gallery, we are swamped by a throng of people, all of whom, I assume, Brenda knows. Introductions are made, hands shaken and cheeks kissed. The consensus is that we look spectacular. A word that I've now heard every synonym for. One of which is fire. The person calling us fire, befuddled for a second when I say, \"no, we're wearing blue, so we must be water.\"\n\nHis befuddlement is lifted when Brenda rescues him with, \"he's fucking with you.\"\n\n\"Not yet he's not. But you can come home with me, sexy?\"\n\n\"Not this time sweety, I'm going home with her,\" I tilt my head toward Brenda, \"I'm her plus one.\"\n\n\"You, are a plus fourteen.\"\n\nI give a small bow and thank the dark-toned gentleman with the purple eyeliner and matching sweater and jeans. And while doing so thinking, \"bet Ben didn't dress this guy.\"\n\nWe're guided around the exhibits, in a small group, by one of the artists' little minions. While praising the artwork we are occasionally asked what we think of the pieces. Even though I think all of it is either utter crap or I'm just not capable of comprehending it, I compliment the artist's work with curt answers. Nice, cool, lovely, and so on. The only masterpiece in this place is on my arm. I decide to whisper this into Brenda's ear. A wide smile appears on her face, \"thank you sweety, but pay attention to Merigold.\"\n\n\"Why, is there going to be a quiz afterward?\"\n\n\"Yes,\" Merigold, our guide, response annoyed.\n\nI mouth sorry and Merigold goes on about the metaphysical bla bla of the intrinsic value of the bla bla. It is completely lost on me. But I make like a big boy and follow along. The tour ends and we all thank our guide, who takes advantage of a small gap of silence to inform us all of the quiz. My panicked eyes meet those of Merigold and she smiles an evil smile, \"ha ha.\"\n\nBrenda is nearly in tears, laughing at me.\n\nI extend a hand to the guide, \"you got me. Good one.\"\n\n\"Should I be nice to this one?\" She looks over to Brenda.\n\n\"Yes Meri, please do.\"\n\n\"Alright then,\" and takes my hand.\n\n\"Nathan\"\n\n\"And I'm still Merigold.\"\n\n\"Pleasure.\"\n\n\"I'm sure, now get out of the way, I have another group to lead.\"\n\n\"Stop messing with the newbies, Meri,\" a friendly voice comes through the crowd. It's Ben.\n\nMerigold stomps off and Ben greets us, \"stand next to each other,\" we do. \"You guys look spectacular together.\"\n\n\"Thanks, nice to see you again, and thanks for the rescue.\"\n\n\"You're welcome. Come have a drink with us.\" Ben walks us over to a table where three men are standing. I'm introduced to Kyle, Ben's husband, then Billy and Alvis. Kyle looks like any other boring white guy, you've ever met, working in an office. Billy and Alvis though. Billy is a short stocky gentleman, who looks like a mix of steampunk and my little pony. Alvis is a tall, lanky nordic looking man wearing a too-tight sweater and Afgan scarf combination.\n\nI ask them, \"so, are you two also marrie....\" the last word is cut short by both of them, \"No!\" Alvis finishes, \"we're, complicated.\"\n\n\"Is he behaving himself?\" Brenda asks of Ben.\n\n\"Yes, threats and ultimatums were made and so far nobody has cried.\"\n\n\"These two have been keeping a careful watch over me, while Benny has been running around, fixing his haute couture,\" Kyle offers up.\n\n\"We've got you covered Ben,\" Billy responds.\n\n\"Wait, what's going on. Are you some sort of psychopath, who needs minding to? Should I be worried?\" I ask Kyle.\n\n\"No, nothing so dramatic, there was an incident at one of these, a few years ago.\"\n\n\"An incident? Try several incidents hubby-o-mine,\" Ben kisses his husband on the cheek, \"now stay here and behave. Brenda, let's go, I have to correct a few fashion, Faux Pas. We'll be back with drinks.\"\n\nBrenda is led off and I'm left with the curious three. \"What incidents?\"\n\n\"It's nothing really.\"\n\n\"Oh really,\" Alvis responds.\n\n\"A few of these ago I may have mentioned that some of the artworks on display, were made by a mentally challenged ape-like creature.\"\n\n\"I believe the words, deranged Orangatang, were used.\"\n\nIf I had a drink, this would be the part in the comedy movie, where I do a spit-take. I lean over to Kyle and quiet enough, so his two minders don't hear, I say, \"couldn't agree more.\"\n\n\"What did he say?\" Billy inquires.\n\nNot wanting Kyle to be forced to answer and doing my best, to change the subject I ask, \"so Billy, when you're not guarding the resident artists, from the razor-sharp whit of my man Kyle over here, what does a Steampunk princess do?\"\n\nBilly slaps Alvis and says, \"see, I told you people would get it.\"\n\nAlvis shrugs and looks at me somewhat annoyed, in a way of saying, \"did you have to pull on that thread, now I have to hear about it all night.\"\n\nI make my best, I'm sorry face, to Alvis. Billy in the excitement of having his outfit recognized misses my silent conversation with his complication and launches into the outfit's origins. Through the loud music I miss most of it, but I think there is a link between the Victorian age, Disney princesses, and steam.\n\nA tray of drinks is set on the table and my arm once again feels complete when Brenda hugs her body to it.\n\n\"Fashion emergency handled?\" Kyle asks while picking up his beer bottle. This is replied to with a snarky 'yes', while Kyle's beer bottle is ripped from his hands and its contents poured into a glass. \"We are not at a sports bar, husband.\"\n\nBrenda looks up at me, \"having fun?\"\n\n\"Yes, I am. Did you know that Billy is a Steampunk princess?\"\n\nWe both look at Billy, who strikes a pose.\n\n\"Oh, so that's what it is. Thanks, that's been bothering me all night,\" Ben says and then slips a card over to Billy, \"come see me, and we'll sort that out,\" gesturing at Billy's attire.\n\nAlvis snatches the card from the table and says, \"Thank you Ben, we will.\"\n\nBrenda walks over to a disappointed Billy and hugs him, \"let them talk sweety, you look fabulous.\"\n\n\"Thank you Brenny. Now, your nice and everything, but would it be possible to get a consolation hug from him,\" he points at me, smiling mischievously.\n\nBrenda steps back and says, \"no he's mine,\" but I cut her off, \"sure,\" walk over, carefully maneuver Brenda out of my path and hug the steam powered midget.\n\nWhen I let him go, Billy's a little dazed, Alvis annoyed, Brenda amused and the married couple is chuckling. My work done, a put my arms around Brenda and say, \"I still like your friends, even in a more inebriated state.\"\n\nHugging me back, she replies, \"I'm so happy you're here with me.\"\n\n\"Me too.\"\n\nWhile we enjoy our drinks the crowd is hushed and the gallery owner steps up with a microphone. The speech that follows I'm sure was in the English language, but like Merigold's tour, I understand next to nothing of what is being said. When it's finally over I try to turn my attention back to the table but am corrected by Brenda. The mike is handed over to someone else. I think it's the artist, but I'm not sure, the same artistic drivel flows forward. After the fourth speaker a thunderous applause ripples through the crowd, I dutifully join in. When it dies down and with some trepidation, I look at Brenda and admit I didn't get any of that and I hope that doesn't offend her.\n\nShe puts her hand to my cheek, \"Of course I'm not offended, but your concern is kind of sweet. I'm not sure you're supposed to understand any of this. It is more of a feeling. What do you feel when you see the pieces. Understand?\"\n\n\"Not really, but I'll give it a shot.\"\n\n\"Go look around, see what you fancy.\"\n\nI pull her close, \"I've already found what I fancy.\"\n\nPlayfully she pushes me away, \"go look and come back with a piece you like and tell me why. I'll be over here, waiting.\"\n\nI shuffle through the crowd looking at one thing, stranger than the other. Thinking \"Deranged Orangatangs, is right,\" I bump into Merigold.\n\n\"Watch where you're going, ya big ape.\"\n\n\"Orangatang, you mean,\" I smile back.\n\n\"Met Kyle have we. You're not going to be a problem are you?\"\n\n\"Haven't made anyone cry so far.\"\n\n\"Where is your better-looking blue half?\"\n\n\"With Ben and Kyle. I've been sent on a mission.\"\n\n\"Oh really, planning on stealing something, are we?\"\n\nI explain the mission to Merigold, who is curious but interrupts me two-thirds into my plan of execution.\n\n\"Follow me CIS boy.\"\n\n\"Yes ma'am.\"\n\n\"I'll forgive you your weak pronoun game, this time. But Brenda had better get you up to speed.\"\n\nNot daring another response, I follow.\n\n\"Here you go. This is the most mainstream stuff we have, enjoy.\" and with that, she marches off.\n\nI yell, \"thanks,\" and get a wave from Merigold, showing me her back.\n\nI find myself looking at a row of four paintings. Picking one of what I think is a boat on the water, I snap a picture and make my way back. Upon showing my find, I say, \"I like the sea and I like boats.\"\n\nA chorus of laughter erupts from the table. Brenda thankfully among the chorus. Ben end's the laugh train with, \"so he has some things to learn, but I think you really do have a live one here.\"\n\nShe looks up at me, \"so do I.\"\n\nI put my arm around her and just before I get the chance to kiss her, she turns the others and announces our imminent departure. A chant of disapproval follows. I ask, \"You sure, I don't mind staying longer, I really am having fun.\"\n\nBolstered by my statement the rest chime in, trying to convince Brenda to stay. \"No, you can play with him some other time, but for the rest of the night he's mine.\"\n\nI turn myself to the others and pull a one-eighty, \"sorry everyone, but we bid you farewell.\"\n\nI turn to leave, but Brenda makes some proper goodby's and I follow suit. Promises for dinner parties and late-night clubbing are made and we are off.\n\nOutside Brenda clings to my arm and beams up at me, \"did I do good?\"\n\n\"You were perfect.\"\n\nKnowing what comes next, I try not to break every speed limit on the way home. Red lights have never stayed red this long in the entire history of modern transport and every senior citizen has chosen this moment to show me, that they really can't handle their cars anymore. When we finally make it home and to our floor, Brenda says, \"give me five minutes.\"\n\n\"Sure\"\n\nI head inside my apartment and she calls, \"and don't take off the suit.\"\n\n\"Roger.\"\n\nFive minutes later I find Brenda's front door open. Unlike last time she's not waiting for me in the hallway. I close the front door and go into the living room. She's waiting for me, naked, save for a bra that doesn't cover her nipples and a pair of panties that look like they have been painted on.\n\n\"Hey there, stud\"\n\n\"Hey yourself, sexy\"\n\nI stand in front of her and she begins, \"I'm all yours tonight, but may I make a small request?\"\n\n\"Of course.\"\n\n\"I'm really horny, so could you fuck me, hard?\"\n\nAs a response, I pull her in tight and roughly kiss her, forcing my tongue into her waiting mouth. We make out, just standing there, in her living room, me in a suit and Brenda, nearly naked. I could do this all night, but I have promises to keep and requests to honor.\n\nMy first act starts, with my hand snaking from her ass up to her neck and into her hair, getting a good grip for what comes next. I pull Brenda off me by the hair and drag her over to the couch, where I sit down and lay her over my knees.\n\n\"First, a promise I needed to keep.\"\n\nA firm slap lands on her right cheek, Brenda moaning in approval, \"thank you, sir, may I have another.\"\n\nI oblige, nine more times, each cheek turning a nice shade of red. All the while keeping her head up, my hand still with a firm grasp of her hair.\n\nWhen I'm done, by her hair, Brenda is pulled up to standing attention and when I line her mouth up to mine, I stick my tongue in it, resuming our passionate make-out. I squeeze her erect nipples and softly stroke her reddened butt cheeks.\n\nMy cock is begging to come out from behind its layers. So when the kissing slows a little, I push Brenda away from me and order, \"undress me.\"\n\n\"Yes, master.\"\n\nShe starts with the buttons of my sport coat and moving behind me takes the coat off. Next is the waistcoat, buttons are removed and the coat discarded. My shoes are next, on her knees she unlaces them and I help by lifting my feet one by one. Barefoot now, my shirt is opened, \"so many, damn buttons.\"\n\nEvery button reveals a new bare piece of skin that is kissed and nibbled upon. When the shirt falls to the floor, Brenda attacks my nipples, sucking and biting. When she gets a little too enthusiastic, I pull her off my chest, by her hair, and growl, \"don't make me put you over my knee again, keep going with the task at hand.\"\n\n\"Yes, master.\"\n\nShe kneels and opens my pants, button then the zipper. Impatient, she pulls both pants and underwear down, my cock springing to freedom. I step through the pants and kick them aside. Brenda, still on her knees, looks up, expectantly.\n\nI put my hand on her head and order, \"go ahead.\"\n\nBrenda opens her mouth and her lips glide over my cock. This is the sensation I've been longing for all week. Slowly and longingly her mouth makes love to my cock. Brenda tries, but can't quite swallow it whole. While trying she looks up, begging with her eyes. I comply and help her get further down. I hold her in place until she gags and has to come up for air. I give her a second and pull her back onto me. She holds it a little longer but has to come up for a breath before reaching her goal. My cock is now dripping with her slime.\n\nFinding it time for the main event, I pick Brenda up into my arms and carry her to the bed. I lay her on her stomach, slide the g-string wire aside and attack her ass with a passion. As with her mouth, my tongue invades her and I try to go deep. Brenda responds with moans of pleasure. While doing this, I look over the bed and see the condom, Brenda has laid out. I reach for it and with skill, I didn't know I had, place it over my dick, while still digging my tongue deeper into my lovers' ass.\n\n\"Oh master, this feels so good!\" escapes from Brenda, after I've been exploring her innermost reaches for a few minutes.\n\nI pop up and kneel next to her face, \"get it nice and wet.\"\n\nBrenda eagerly complies and tries again to get her nose up to my body.\n\n\"Help me, please,\" a small subservient voice begs when she comes up for air.\n\nI put my hand on the back of her head and pull her until a lack of oxygen becomes an issue then let her go. We repeat this process a few times, when she looks up and smiles. Knowing my queue, I kneel over her prone body and place my head at her entrance. Shifting my weight forward I insert myself up to the root. I lean forward, now able to kiss my prey. Our tongues intertwine, while I let Brenda get used to the displacement in her anal space. Through our kissing, I hear words forming in Brenda's mouth, but I can't quite make them out. When I remove my tongue, I hear, \"please, fuck me.\"\n\nI sit up, set my hands on her back, and drawback until I'm almost out of her. What happens next could be filmed and shown on animal planet. I ravage her body, using it for my pleasure. A film of sweat forms over our bodies and when I lie flat on top of her so I can kiss her neck, my body glides over hers. I draw her head back by her hair and my lips find her throat. And when I bite my prey moans, \"Oh, baby.\" Moans become cries then shrieks, and at one point her entire body shakes, I keep pounding, honoring Brenda's request to get fucked, hard. Hovering over her again, giving my cock the best leverage, for maximum penetration, I pick up the pace. Loud slaps echo through the room as my hips make contact with her ass.\n\nBrenda starts to beg, \"please cum for me! I need your cum. Please give it to me!\" This makes my blood boil over and I oblige. With every wave of cum, I slam in deep. When it dies down, I drape myself over her and sink my teeth into her neck, growling.\n\n\"thank you, thank you, thank you, thank you, thank you,\" Brenda exclaims in quick procession.\n\n\"You are very welcome.\"\n\nWe both pass out for a while. When I come to, the room is dark. There was still some daylight when we started. Brenda feels me stirring and says, \"hi lover.\"\n\nWit and whimsy are not available at this moment so I simply reply with, \"hi,\" and I kiss her neck.\n\nAn approving moan is followed by, \"I want to kiss you.\"\n\nI slowly extract myself from her and toss the filled latex in the trashcan next to the bed. Brenda has turned to her side and I cuddle in close, finding her lips. We stay intertwined like this, kissing and touching for what seems like hours. When we finally come up for air, I feel compelled to ask, \"not too rough?\"\n\n\"No, you were perfect. I loved every second.\"\n\n\"So did I.\"\n\n\"Yes? Did you enjoy spanking your unruly Queen?\" Brenda says, teasing.\n\n\"Very. I hope you learned your lesson, your grace.\"\n\n\"I may need a few more. And did you enjoy choking me with that nice cock of yours?\"\n\n\"Certainly, very pleasurable.\"\n\n\"Mmm, well, I do like giving pleasure. And finally, did you enjoy fucking me into a coma?\"\n\n\"That was my favorite part.\"\n\nBrenda kisses me and then replies, \"mine too.\"\n\nWithout warning, she hops up from the bed and I watch that gorgeous body stumble out of the bedroom. She grabs the door for balance, turns to look at me, winks, and then smacks her ass, \"you really did a number on me.\"\n\nStill holding the door for balance, she lets the lace panties fall to the floor and takes off the bra.",
        "\"Need help?\"\n\n\"No, I'll manage, be right back,\" and then tosses the bra at my face. I examen it for a second, decide it will not fit me, and place it on the nightstand.\n\nBrenda disappears to what I assume is the bathroom. I sit up against the headboard of the bed and stare blankly at the door. Any minute now the object of my desires will walk through it. Even now, I still can't believe, that will happen. Harder to believe still is what has happened. Most of the women I've been with only ever wanted to make love, and I was fine with that, more than fine, it was wonderful. But I always had a fantasy for more, rougher and harder. I spanked, choked, and fucked this woman and when she comes back, she'll most likely smile, cuddle up to me and one day soon, let me do it all over again. My cock, which became hard again, about five minutes after leaving Brenda's body, jumps in excitement.\n\nRight now though, after the rough stuff, I'd like something more tender. I want to express love, not just lust.\n\nI'm not wrong. She walks back in, smiling, a little more stable on her feet, closes the door behind her, and comes to sit in my lap, wrapping an arm around me. In her other hand is a water bottle, \"here, drink.\" She's smiling, ear to ear.\n\nShe puts the bottle to my lips and cold fluid fills my mouth and throat.\n\n\"Don't want you to dehydrate. I might need you for something later tonight.\"\n\nWhen the bottle is empty she tosses it and I ask, \"need a painting hung?\"\n\nKissing my neck and ear, she whispers, \"No, I need a man to make love to me,\" taking my cock in her hand, \"and I think, you might just be able to do the job.\"\n\n\"I volunteer as tribute.\"\n\nSlowly enunciating every syllable, Brenda says, \"Excellent.\"\n\nWe slowly begin to make out. Hands, mouths, and feet touch and are touched. I guide Brenda on her back and lay next to her. I have an arm around her, her head resting on it. This gives my other hand free reign of the rest of her body. I suck in one nipple while the other is squeezed and pulled. Brenda in the meantime has a firm grip on my cock, which is still a little desensitized from the previous activities, but damn if it doesn't feel nice.\n\nI switch to kissing her ear, neck, and throat, moving slowly from one to the other. Every time I get to her ear, I whisper sweet nothings into it, \"you're so sexy, you have the most beautiful breast I've ever seen, you taste so good, thank you for sharing yourself with me.\"\n\nWhile doing this, my lover's breathing starts to speed up and become deep. From the corner of my eye, I see that Brenda's clit has recovered as well, and stands away from her body.\n\nI want to show love and I always felt a certain appreciation when a woman would suck my dick, to say the least. I know and feel that Brenda is a woman, so I'll expect and hope that she enjoys receiving oral stimulation. I know the other women I've been with did.\n\nThe little CIS man in my brain goes, \"you've never even been close to another cock, let alone put one in your mouth. You will not do this!\"\n\nThe more I please and tease Brenda, the softer that stupid voice becomes. When it's gone I rise up, lie on top of this sexy woman and kiss her deeply. Tongues wrestle and so does my cock with her clit. It feels deep and right. When I need to come up for air, I once again kiss my way to her ear and whisper, \"I want to kiss every part of you.\"\n\nBrenda raises her arms above her head and stretches her body underneath me. In mock exhaustion, she exclaims \"you do, as you please.\"\n\nI start at her outstretched hands, forcing me to move my body up. While sucking on her fingers, Brenda takes advantage of the opportunity and maneuvers her mouth over my cock. I feel her lips and tongue, take hold. A wave of pleasure comes over me and it's with great restraint, that I kiss my way down her arms, thus extracting myself from the warmth of Brenda's mouth.\n\n\"Ahw,.. you took my toy from me.\"\n\nArriving at an armpit, I turn my lips toward her and say, \"you'll get it back,\" then, I get back to my job. When my tongue glides over my current target, Brenda jolts and giggles, \"ticklish.\"\n\nShe should of course, not have shared that with me. I have a perfect mount, and her arms are still over her head. They now stay there, because I pin them in place, then attack both of her armpits, one after the other. Brenda screams and squirms, but to no avail. She's under my control.\n\nStill giggling, she begs, \"please stop, please stop, I can't, please stop, I can't\"\n\nStill keeping her pinned, I relent and look her in the eyes. She stops giggling and we stare at each other for a moment.\n\n\"God, you're beautiful,\" I break the silence.\n\nShe purses her lips and I accept the invitation. When I release Brenda's arms I'm expecting some form of retaliation, but none comes, so I get back to the business at hand, the kissing all over, of my lover's body.\n\nI pay special attention to her breasts and belly button. When my mouth comes close to her clit, I notice a slight twinge on her part, so instead of diving in, I move down her left leg. Making sure to kiss behind the knee, I end up at her foot, of which I suck every toe. While on little pinky, I grab the right leg and move it toward my mouth. A seamless transition later, five toes are sucked and I move up the right leg.\n\nWhen I reach her hips, I lay down between her legs and start kissing around her clit. The little CIS voice tries one more time but I shout it down. When I kiss the base, another twinge from Brenda. I look up and our eyes meet. I see a slight concern come over her.\n\n\"You don't have to if you don't want.\"\n\nI assume, that this is the part, where some of her previous partners may have boaked and bolted. I don't want to mince words right now, so I do the only thing I can think of and the only thing that feels natural. My mouth swallows her while holding eye contact. Brenda takes in a gulp of air and smiles a little nervously. I let her go and say, \"don't worry, I have one of these too, I know how to handle it,\" then getting back to work.\n\nNo more little CIS voice. I see the pleasure I'm giving and want to give more. I wet one of my fingers and insert it into her. My other hand reaches up to pinch her nipple.\n\nPutting pressure on the head of her clit and then swirling around it with my tongue, Brenda starts to buck and tells me to stop, or she'll cum.\n\nI kiss my way up to her face and am greeted with an open mouth. Time passes and two lovers share deep and passionate kisses. When I prop myself up and look in her eyes, I ask, \"you ok?\"\n\nBrenda nods.\n\n\"A little nervous back there, were we?\"\n\nAnother nod.\n\n\"So was I. But I loved it.\"\n\nA big smile comes across her face. Still not speaking, with her head she gestures toward one of the nightstands. I reach over and open the top drawer. I retrieve a condom and lube.\n\nI place on the shielding and make sure we're both good and wet. With my knees, I push Brenda's legs further open and line up.\n\nThere is another sharp intake of air and I reassure her, that I'll go slow. Brenda then slowly succumbs to me, letting me in. I once again am the luckiest man alive. On the way down we maintain eye contact. Brenda does this for her reasons, I want to make sure I can stop if I go too fast, and looking in her eyes is paradise.\n\nWhen my hips make contact with hers, I lean down and we commence kissing. I don't move, waiting for Brenda to give me a sign, she's ready. It comes in the form of her hands, guiding my hips up and then pulling them in. I let her dictate the pace and slow, very slow, we make love.\n\nShe moves her hands to my back and I keep the pace shes' set for me. I can feel every inch of myself as I move in and out of her. I bow my head next to hers pressing our flesh together as we both tightly embrace. I go deep and hold still for a moment, waiting for my lover's breathing to slow, when it does I continue. I repeat this cycle, hoping it will drive her wild. After a few runs, I once again go as deep as I can and hold. Teeth sink into my shoulder and Brenda moans the way a wolf would if it was caught in a trap. I hold extra long, and the pleading moans grow louder and teeth sink deeper.\n\nBefore Brenda can draw blood I prop myself up on my elbow and ask, \"you want to be in control for a while?\"\n\nStill not speaking she smiles and eagerly nods her head. We disengage and I lay on my back, propped up against the beds' headboard. Brenda mounts me and with a hand guides me in. When ass touches hips, she whips her head up and stares into my eyes. Smiling an almost evil smile, she proceeds to pick up the pace. We're still making love, this isn't the animalistic fucking of earlier this night, but lust is taking over. She moves one of my hands, which were both firmly attached to her breasts, to her ass. Taking the hand by the wrist she slaps herself with it and then lets go while nodding at me.\n\nI get the hint and repeat the action. Soft and playful she gets five on either side. Tiny moans escape from her with each impact.\n\nI take her face in both hands, to get her attention, \"sit up straight, and dance for me.\"\n\nFrom hunched over, she creates a ninety-degree angle to my body and starts to sway her hips. Over the next few minutes, I thoroughly enjoy my very private and very intimate lapdance. I experienced one before at a friend's bachelor party. That was uncomfortable and a little gross, this however is one of the best experiences of my life. Brenda's got all the right moves, her hands gliding over her body. When I place my hands on her hips, she smacks them and gives me the naughty finger. She grabs both my hands and places them over my head, pointing to them, indicating they should stay there. I'm mean it's only right, you're not allowed to touch the talent. And talented she is.\n\nThe erotic display and tightness of her ass are making me reach climax. My breathing picks up and my legs tighten. Brenda picks up on the queues, quickly bends forward takes my hands, and indicates to wrap them around her. Then she picks up the pace and soon thereafter we both cum. A wet sticky film forms between us and then trickles down the sides of my stomach. Everything literally shudders to a halt.\n\nAfter coming to our senses, Brenda gets up, in the process my cock comes out of the condom and spills its contents over the bed. We leave the bed for what it is and head for the shower. Up to this point, Brenda still hasn't spoken and I'm getting a little worried about her silence.\n\nMy worried thoughts are driven to the back of my mind by the combination of warm water and sexy lips. Under the steaming shower, I hold Brenda in my arms while we kiss. I let go of her lips and place her head against my chest. When after a few minutes I turn off the water, she looks up and with a mousy voice, croaks, \"hi.\"\n\n\"Found your voice?\"\n\n\"I couldn't find the words.\"\n\n\"Not to worry, I still understood you.\"\n\n\"Yes you did, you speak fluent, horny girl.\"\n\n\"That dance you did, was one of the most erotic things I've ever seen. Thank you.\"\n\n\"You're very welcome. I was holding back a little though.\"\n\n\"Why?\"\n\n\"The entire time I was bursting to cum. That is why you were not allowed to touch me. And where did you learn that edge play, you nearly drove me out of my mind?\"\n\n\"I don't know, just felt like doing it,\" I shrug.\n\nBrenda leaves the shower and hands me a towel, mumbling, \"I'm dating a sex savant.\"\n\nLaughing kissing and hugging, we towel off and make our way back to the bedroom. What we find is the ravages of intense sex. Sheets and covers are dislodged and wet with sweat and cum.\n\n\"I just want to go to bed,\" Brenda whines a little and moves to open a dresser door. I stop her, \"You know, we could just leave this and sleep somewhere else.\"\n\n\"I know I have a comfortable couch, but I want to be with you in a bed tonight.\"\n\n\"And we can, there's a clean one very close by.\"\n\n\"I don't want to go to a hotel.\"\n\n\"No no, a little closer.\"\n\n\"Nicole's?\"\n\n\"Jesus, did I really literally fuck your brains out?\"\n\n\"Oh, your bed!\"\n\n\"Yes, dear. We'll take care of this tomorrow. Throw on a robe and let's go.\"\n\nShe does and we do, after I jump into my pants and cover my upper body with the jacket. In my place, naked again, I lay her down and she rolls to her side, inviting me to spoon her.\n\n\"Good night, sexy.\"\n\n\"Good night, my love.\"\n\nWe fall into a deep sleep."
    ],
    "authorname": "RobertMcCullum",
    "tags": [
        "transgender woman",
        "virgin",
        "love",
        "party",
        "rough sex",
        "shopping",
        "paris",
        "cuddling",
        "transwoman",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-new-neighbor-ch-02-3"
}