{
    "title": "A Project for Bethany Ch. 04",
    "pages": [
        "Matthew woke up with a shiver and a moan. Bethany's teasing finger on his nipple got its first reaction from Matthew's cock when it grew to hardness while she watched. Only then did his brain catch up, coming up from the depths of sleep to an awakening in full arousal.\n\n\"Morning Matty,\" Bethany said softly.\n\n\"Good morning Miss Bethany,\" Matthew replied softly as he fought back the remnants of sleep to awaken completely.\n\nLaying naked in bed, Matthew was exposed for his pretty erotic tormentor. He always went to sleep covered in a sheet or light blanket, but Bethany's choice to keep the apartment warm enough for them both to be comfortable in the nude or sparsely attired just as regularly ensured that his nudity was fully exposed when he woke.\n\nBethany was wearing a bright red sports bra that held her lovely round breasts tight to her chest with matching cycling shorts that hugged her curves from waist to mid-thigh. Her face shone from the light layer of sweat she wore from her workout on the stationary cycle and her hair was in a loose braid that draped forward over one shoulder. Matthew could only admire how pretty she looked when she was flushed from physical activity and wore no make-up.\n\n\"It took you long enough to come around, I thought you'd never wake up. Did I interrupt a sexy dream?\"\n\n\"I ... uh, ... don't remember,\" Matthew stumbled over his response.\n\nBethany laughed, her finger on Matthew's nipple never pausing in its teasing strokes.\n\n\"I bet,\" she said, \"you were probably dreaming about sliding your kinky tongue between my pussy lips.\"\n\nMatthew blushed at the image, his cock throbbed and bounced with an involuntary muscle spasm.\n\n\"Oh, look,\" Bethany said as she slid her hand down to scoop up the bead of precum, \"your brain may not remember, but the little head never forgets.\"\n\nMatthew opened his lips obediently as Bethany moved her finger over his mouth. Without a word he softly sucked Bethany's finger clean until it was pulled away.\n\nBethany smiled at Matthew's quiet acquiescence. Her fingertip continued to scoop up Matthew's seeping precum, alternating between feeding it to him and coating his nipple with the slippery liquid.\n\n\"No masturbating today, Matty,\" Bethany instructed in a calm voice, \"I want you to use the big plug while you exercise this morning, and wear your cage for the day after you clean up.\"\n\n\"Yes, Miss Bethany,\" Matthew as his mind and body continued to respond to the teasing fingertip as it moved from cock to lips and nipple.\n\n\"Oh, one more thing,\" Bethany added as she held up the collar, \"I am taking this for now. I am going to ask you later if you want to be formally collared, by me. You can give me your answer at that time.\"\n\n\"Yes ma'am,\" Matthew whispered.\n\n\"Good boy,\" Bethany said brightly.\n\nSmiling, Bethany leaned down over Matthew. At first, he thought her lips were going to contact his own, but she redirected her movements when her face was inches from Matthew's. Turning slightly, Bethany brought her lips down to kiss Matthew's pre-cum covered nipple. Following that kiss with a swirl of her tongue around Matthew's nipple, Bethany spread her lips around the nipple until she caught it gently between her front teeth. Biting just hard enough to hear Matthew's soft moan, she released his nipple and sat up.\n\n\"Well,\" Bethany exclaimed, \"things to do, and try not to be too distracted today Matty.\"\n\nWith that advice, Bethany was already heading out of the bedroom before Matthew could react.\n\nA few hours later, Matthew sat at his desk, caged and plugged. Working out with the large plug stretching his bottom, and afterward going down to the medium size, the later plug was sufficiently comfortable that he gently rocked on it as he absentmindedly switched between reading stories on Literotica and watching short porn videos. More and more, his choices of both types of media matched the things that he did with Bethany or that she suggested he might like. Accompanying stories of men willingly submitting to chastity for their partners and videos of edging play and cum eating, Matthew found the combination of plug and cage to be an addictive drug on its own. \n\nThe routine they had settled into was a delicious cycle of stimulation and frustration for Matthew. Each morning he saw Bethany as they worked out, together or one after the other. When she placed the key on the counter with her empty coffee mug, the message was clear. Matthew was to wash the mug and any other dishes for her as usual, and then he could use the key to unlock his cock when he showered and shaved. Once the cage was locked in place again, the key was to be returned to Bethany or hung on her bedroom doorknob for her to find.\n\nMatthew had become accustomed to wearing the medium-sized plug for his workout and morning coffee. After Bethany's suggestion that he should, he wore it occasionally, and then every day after she checked for it and found it missing once or twice. Those occasions were clearly identified as having disappointed her when Matthew was next over her lap for a maintenance spanking.\n\nIn the afternoons, once Matthew had completed his daily rounds of online job searches and sending of applications or resumes, he often wore the large plug for up to an hour at a time with breaks of similar length between sessions. In a short time, it also provided a comfortably filling sensation, one that his horny mind missed if he started browsing online without an inserted plug.\n\nBethany had been pleased when she discovered Matthew had advanced his training to regular use of the large plug. The first time she found him wearing it, she went to her bedroom and returned to show Matthew the bulbous black plug he had seen during their first video session.\n\n\"Are you ready to try this one yet, Matty,\" Bethany had asked with a mischievous smile curling the edges of her lips. \n\n\"I think I may be soon,\" Matthew replied quietly, his ass clenching slightly on the plug he was wearing as he recalled the strain and sensation of taking a new larger insertion.\n\n\"That's wonderful, we'll try it soon,\" Bethany said lightly as she carried it back to her room.\n\nEach time Matthew used the large training plug, he again imagined Bethany pressing the heavy black plug into his well-lubed bottom. It was an image that made his cock throb in its cage and that he pictured more and more as he felt the time must be getting closer. He might have even admitted to himself that he was looking forward to it.\n\n*** *** *** *** *** *** *** *** \n\nThe sensations of, and his reactions to, the way Bethany woke him up that morning continued to be replayed in Matthew's thoughts. Paused at his desk, fingers hovering over the keyboard as a half-written resume covering letter illuminated the screen, Matthew was surprised when one of Bethany's monitors came to life over his desktop screen. \n\nThe display showed Bethany in her bedroom. She was framed by the camera from the waist up and was wearing a high-collared white blouse with long sleeves with a line of many small black buttons down the front. She was now in elegant makeup with her hair cascading over her shoulders. In her perfectly manicured hands she held the heavy black anal plug that was so often in Matthew's thoughts.\n\n\"Oh, sorry, I don't need this right now,\" Bethany said with a mischievous grin as she tossed the plug over to her bed.\n\n\"Uh ... can I help you, Miss Bethany?\" Matthew stammered.\n\n\"You know,\" Bethany continued cheerily, \" I never thought we could use this as an intercom, well, as a one-way system at least, since I have the control, but it is rather effective.\"\n\nMatthew bit his lip as he waited silently.\n\n\"Clean up and come and see me in half an hour please,\" Bethany instructed with a slightly more direct tone, \"I have something I want to try with you. Your usual apartment attire will be fine.\"\n\n\"Yes ma'am,\" Matthew replied, the screen darkening as soon as he acknowledged Bethany's request.\n\nWearing nothing but the chastity cage which secured his cock, Matthew knocked on Bethany's bedroom door exactly 30 minutes later. \n\n\"Come in,\" Bethany's voice sounded through the closed door.\n\nMatthew slipped inside the room and quietly closed the door behind him. He stood quietly beside the wall waiting to be directed. He was now in Bethany's private space and he would not make any presumptions of what was expected of him. Bethany was sitting at her desk and turned in her chair to face Matthew. She still wore the white blouse and Matthew could no see that she had paired it with a knee-length black skirt that hugged her waist and hips and flared to a circular hem as the loose fabric draped over her thighs. On her legs, she wore striped thigh-high stockings, and on her feet were black leather ballet slippers.\n\n\"Hi, Matty,\" Bethany said in a chatty tone as she stood up, \"come lay on the bed, full spread-eagle please, I want us to try something.\"\n\nCurious, and equally aroused, Matthew followed Bethany's instructions. Adopting the requested position, his curiosity was piqued as Bethany circled the bed buckling manacles on each of Matthew's wrists and ankles, and leaving little slack in the straps that linked them to the corner of the bed platform. \n\nWith Matthew secured to the bed, Bethany sat on the mattress beside his right hip facing him and picked up the video system control tablet to adjust her cameras. Matthew raised his head and could see in her monitors over the desk as she oriented and zoomed the desk camera to frame both Bethany and Matthew's thighs and torso. Next she adjusted the wall camera she was facing until it also captured her and Matthew's midsection.\n\nSetting down the tablet, Bethany slid her hands over Matthew's body. In one hand she cradled his balls beneath the cage, while the other captured his stiff nipple between thumb and fingertip.\n\n\"I wanted to experiment with camera setups for our teasing videos,\" Bethany explained with a smile, \"If you're not busy, we could do some test footage for me to play with in my editing suite.\"\n\n\"No ... uh .. it's okay,\" Matthew said as he suppressed a low groan in response to Bethany's teasing hands.\n\n\"Oh, good,\" Bethany's mischievous tone showing that she knew Matthew wouldn't have anything more demanding on his mind.\n\n\"For this to work, please try to stay quiet when I'm speaking. The occasional moan or groan is fine, but no talking, or I'll have to find something to fill that pretty mouth of yours.\"\n\n\"Yes, Miss Bethany,\" Matthew replied, \"I will be quiet.\"\n\n\"Good boy,\" Bethany said as she continued to tease his nipple. \n\nWith her other hand, Bethany fished one finger behind her high collar and pulled out the leather thong that held the key to Matthew's chastity cage. Letting the key dangle outside her blouse, she arranged the thong around her neck outside her collar.\n\n\"Just in case we need it,\" she told Matthew with a less than subtle wink.\n\nBethany looked at the camera on the side wall as she started speaking. As she continued, she occasionally switched her posture and the direction of her gaze to present to the second active camera.\n\n\"Hi folks, I just wanted to introduce to you a new idea for a series of videos I've been developing. Based on your feedback, I've noticed that some of my regular viewers are really interested in anything to do with teasing and denial play, and I've found a perfect playmate for just that sort of video.\"\n\n\"As you may have noticed, I've got a new playmate here. This is Matty. He's been living in with me for a while and he's a very obedient boy. His bed is on the other side of the wall from my headboard and I know he listens when I play with men and women for my clients and my other video series. He's told me that when he listens, he likes to stroke his cock and tries to cum when I do, and as often as I do. Since we've been having so much fun at the same time, I thought we could harness all that horny energy.\"\n\nBethany lifted Matthew's caged cock to display it to the cameras,\n\n\"As you can see, I've had to lock up Matty's cock to keep it under control while we prepare for our new video series. I've been training him to wear the cage for play, and depending on just how frustrated we want a teasing subject, we may have to consider longer periods of wear between teasing sessions to ensure he doesn't cum without permission, or accidentally cum all over himself when he hears me being fucked by a nice thick cock.\"\n\nLeaning forward, Bethany slid the key on the leather thong around her neck into the cage lock. Twisting the key slightly, she withdrew the internal lock mechanism to release the cage shaft from its base ring. With practiced movements, she freed the two parts of the cage from Matthew's cock and set them aside.\n\n\"Mmmm, look how he grows when he's released. And he's only been caged since waking up this morning. \n\nBethany supported Matthew's cock in an upright position and stroked the edges of the head with one gentle fingertip as she spoke.\n\n\"I'm looking for ideas that we can develop into teasing sessions. Tell me what you want to see me do with this obedient boy's drippy, throbbing, denied, cock. Do you want to see any toys used? Tell me which ones. Should he be allowed to cum, or should he go back into the cage after a tease? What role play scenarios would you like to see? I know some of you want to hear me give you jack-off and cum-eating instructions, and I'm sure we can incorporate that into some of the sessions. Don't hold back, give me all your sexy ideas and I will choose some to explore as we develop the video series.\"\n\nBethany released Matthew's cock, letting it return to its erect position of rest about 45 degrees upward from his stomach. A thick droplet of precum dripped slowly from the urethral opening. Bethany let the cameras continue recording as she slid off the bed and walked out of the view before she stopped them.\n\n\"Well done, Matty,\" Bethany said brightly as she stopped the recording cameras.\n\nSliding back onto the bed beside the bound man, Bethany bent low and kissed Matthew delicately on the cheek. \n\n\"I think this will work out just fine,\" she said, \"I've already got quite a few ideas for a series of clips, but if I can cut that into an introduction, it will engage some of my fans and both get fresh ideas and a waiting audience.\"\n\nAs if just noticing Matthew's dilemma, bound, exposed, and with a very hard and dripping cock, Bethany asked, \"And what are we going to do with you now?\"\n\n\"Please, Miss Bethany,\" Matthew whispered, the intent of his begging not needing to be expressed. \n\nBethany scooped up the pooling precum from Matthew's stomach and fed it to him with two dripping fingertips. Her other hand, almost absent-mindedly, returned to teasing his nipple. \n\n\"Well, I wasn't planning to let you cum this early in the day. Should I get the ice bowl and cloth to help get the cage back on?\"\n\nMatthew choked back a low groan of frustration. He dared not speak, because he knew this was solely Bethany's decision.\n\n\"Perhaps,\" Bethany concluded as she released the four binding straps, \"I'll just let you figure out how to get the cage back on. Bring me the key back as soon as you can, and no cumming.\"\n\n\"Yes, Miss Bethany,\" Matthew said softly as he slid off the bed, cage, and key in hand.\n\n*** *** *** *** *** *** *** *** \n\nWith his mind constantly revisiting his wake-up by Bethany and the introductory teasing session, Matthew did his best to keep himself busy. Every movement seemed to ensure he was reminded of the cage he was wearing and of the delightful control Bethany exercised over his life in the apartment. As he pondered the way she had coaxed and encouraged his participation and submission, he realized more and more that he enjoyed, even needed, what she offered. Whenever Bethany got around to asking if he wanted to be collared, Matthew was sure his reply would be willing acceptance.\n\nDuring the day, Bethany conducted three video sessions with clients. After each, she took a short break to walk around the apartment and checked in with Matthew. She knew that her presence would keep his state of arousal on a steady simmer, especially as she appeared in the attire she wore at each client's request.\n\nThe first time Bethany appeared, she wore a red and yellow cheerleader's outfit that no high school or college would have permitted in their arena. The outfit consisted of a cropped top with long sleeves and a deeply scooped neckline that barely contained her breasts. Around her hips, she wore a brief skirt with a hem that readily exposed the fact that she wore nothing underneath. On her feet were bright white tennis shoes. Catching Matthew in the kitchen, Bethany spun in her outfit and giggled as she spoke.\n\n\"Want to meet me under the bleachers after the game, Matty? Do you like this outfit? Mr. G. sent it to me to wear for him. The colors are the ones his old college used and he says it reminds him of when his late wife was a cheerleader. He says I remind him of her as he has me chat and flirt with him. Apparently, they were a very kinky couple in college and for many years after.\"\n\nWith a mischievous smile at Matthew, Bethany stood and lifted one leg upwards in a vertical split. Matthew nervously bit his lip and he watched her expose her pretty pussy and the fact that she wore the jeweled anal plug that he remembered so well. Speechless, Matthew could only watch as Bethany danced away toward her bedroom.\n\nMatthew groaned as Bethany disappeared into her room. Quietly trying to compose himself, he noticed that he could feel each heartbeat as the blood pulsed in his confined cock.\n\nAfter her next session, Bethany found Matthew at his desk where he was struggling to concentrate on reviewing his resume. He was just sighing with relief as the music that Bethany had been playing finally stopped, the heavy bass beat was almost felt more than heard. Bethany walked into the room as Matthew turned his chair to face the door. Matthew groaned audibly at her appearance. Bethany laughed lightly, pleased at the reaction she invoked.\n\nBethany stood tall in clear acrylic stripper shoes with white gladiator straps encircling her legs to her upper calves. With a full two inches of platform under the balls of her feet, they had at least six inches of tapered clear plastic heel. Other than her shoes, Bethany wore the tiniest of bikini bottoms with a sequined triangle that barely covered her pussy lips held in place by silver strings tied at each hip. Draped around her neck was a sheer white scarf that hung low enough on each side to provide a hint of modesty in concealing her breasts and nipples.\n\nThe grace and confidence that Bethany showed as she moved in the heels were remarkable. Matthew could only stare as she came forward with bold strides. \n\n\"What do you think about this outfit, Matty? I may have never actually been a stripper, but I can play one on the internet apparently. A few of the boys, and one or two of the ladies, at a bank downtown wanted a lunchtime show, so I gave them one. They'll be thinking about it when they slide into bed beside their girlfriends or boyfriends tonight.\"\n\nBending over to place a hand on each of Matthew's thighs and her lips next to his ear, Bethany whispered.\n\n\"Too bad I don't have time to give you a lap dance. But maybe you'll be thinking of me doing that while I get back to work.\"\n\n\"Yes. Miss Bethany,\" Matthew whispered as he watched her go.\n\nAfter her third session, Bethany found Matthew laying on his bed trying to focus on a book, a task at which he was failing miserably as he read the same paragraphs over and over. Bethany swept into the room and spun the desk chair around to sit down. She was wearing an unbuttoned pink blouse that exposed a sheer demi-cup bra of dark blue lace and two very erect nipples. On her lower body, she wore stylish tight jeans with all the necessary rips and tears across the thighs to make her look ready for a class at the local college. Her feet, which she raised to place on the edge of the mattress, were bare. Bethany had removed the makeup she wore earlier and her hair was in a single ponytail at the side of her head.",
        "\"I never knew Mrs. G. was so kinky when I was taking her freshman English course,\" Bethany said with a grin, \"I think that she has a thing for her son's girlfriend. It's just a suspicion, mind you, but she wants me to play as the girl, who's definitely older than she has me look right now, and act all shy and surprised when I catch her riding her Sybian. She loves it when I get all curious and want her to tell me everything about how it feels and how hard she can cum on it while I'm there. I don't know if she'll ever seduce the young lady ... maybe if she breaks up with her son, or maybe after they get married. Who knows what kinky people will do, right, Matty?\"\n\nBefore Matthew could reply, Bethany had bounced back to her feet. \n\n\"Come out to the living room in five minutes Matty, please,\" she said as she breezed out of the bedroom.\n\nAs instructed, Matthew walked up the hall and into the living room. Bethany was still dressed in her jeans and pink blouse and she was sitting on the dining room chair placed as it always was for spanking.\n\nSeeing Matthew appear, Bethany smiled sweetly and patted her lap. Her expectation was clear.\n\nMatthew sighed softly as he lowered his body across Bethany's lap. Having experienced heightened arousal all day, he was teetering on the line between being overly excited at the contact with Bethany's bare skin where her jeans exposed her thighs and sliding comfortably into subspace as he submitted to her simple request to position himself. \n\nBethany placed one hand on Matthew's back to steady him. With the other, she caressed his exposed ass cheeks.\n\n\"if we're going to formalize our relationship, Matthew,\" Bethany said, \"we need to make sure we have a common understanding between us. If you accept my collar, it means I am in control. Everything is still negotiable, but within the bounds of those negotiations, I expect your submission and obedience. Is that clear?\"\n\n\"Yes, Miss Bethany, very clear,\" Matthew replied softly.\n\n\"Good boy. Now I know we've discussed many of the things that interest us, so we both have a good idea of what the future could hold if you accept my proposal.\"\n\n\"Yes, ma'am,\" Matthew said, his voice breaking slightly as Bethany's fingertips found and pressed on the plug in his bottom.\n\n\"I know you've been over my lap at least once a week since our first time soon after you moved in, but those have mostly been for general maintenance of your behavior. I will say I am pleased with the balance we have achieved. Rest assured, those spankings will continue for our mutual benefit. But you should know that other types of spanking can and will be added to our schedule as I see fit.\"\n\n\"Yes ma'am,\" Matthew said, his voice rising slightly as the pressure on the plug increased when he started to speak.\n\n\"There will be stricter spankings, Matthew, when and if I decide that will please me. Sometimes I just need a little more edge in my play, and I'm sure you'll be up to the task when I decide to train you for it. But in balance, there will also be more gentle ones, to remind you that we are still having fun together. I suppose we can call those ones the \"girlfriend experience\" if you assume that a confident and kinky girlfriend would want to spank your sexy butt as I do.\"\n\n\"Yes, Miss Bethany.\"\n\n\"I suppose,\" Bethany said as she started to spank Matthew, \"that it's a good thing I'm wearing a casual girlfriend outfit right now.\"\n\nBethany's hand rose and fell as she covered Matthew's ass with spanks varying in placement and force. Though never quite hitting with a stinging strike, her experienced approach soon warmed Matthew's ass to a blushing pink. \n\nPausing every few minutes and returning to her caressing touch, Bethany made sure that Matthew was doing okay. Each time she asked, his soft reply from the warm verges of subspace that his consciousness floated in confirmed that he was okay to continue if Bethany chose to do so. The effect of a firm but caring hand soon had Matthew trembling slightly from the balance of arousal and submission as he held his position over Bethany's lap. With a final poke at Matthew's plug, Bethany announced that the spanking was over.\n\n\"Corner time, Matty.\"\n\nIn a comfortable haze, Matthew obeyed. He moved into the designated corner and stood there, feet apart and hands behind his head. His mind still whirled from the feeling of Bethany's thighs, the warmth she had raised in his ass, and the dangling weight of his cock cage.\n\nBethany came up close behind Matthew and cupped his ass cheeks.\n\n\"We're going to continue in shortly, Matty. You stay here and I'll be right back.\"\n\n\"Yes, Miss Bethany, thank you, Miss Bethany,\" Matthew whispered as she stepped away. \n\nAs he stood in his corner, Matthew wasn't certain but half-imagined he could hear Bethany's Hitachi Magic Wand buzzing while she was in her bedroom.\n\nFifteen minutes later, Matthew was startled from a daze as Bethany's hands cupped his ass cheeks again. A shiver went up Matthew's spine as Bethany's hands moved to circle his waist. With knowing fingers she slipped the key into the lock of the chastity cage and removed the tube and ring from Matthew's cock and balls. Automatically, Matthew's cock immediately grew to hardness.\n\n\"Turn around, slut boy,\" Bethany said in a tone that suggested she was in control, but not over-demanding.\n\nObediently, Matthew turned. His eyes widened as he saw that Bethany had changed. \n\nWith light touches of dramatic makeup, Bethany had enhanced her cheekbones, added eye-shadow, and painted her lips a deep red. She wore a tight leather vest that exposed her cleavage through the crisscrossing laces that held the two front panels across her full breasts. Matching the vest, she wore a tight pair of black leather booty shorts. Her legs and feet were bare. As Matthew took in her radically changed appearance, Bethany stepped over to the coffee table. She put down the pieces of the cock cage and picked up her hairbrush paddle, which Matthew knew had not been sitting there earlier. \n\n\"It's time to refocus a slut boy's mind with a maintenance spanking. Don't expect me to dress like this for them all the time, I just thought that since you've been enjoying my outfit changes today I would continue.\"\n\n\"Uh,..\" Matthew blurted, \"yes Miss Bethany, thank you.\" \n\nBethany laughed at his flustered reaction.\n\n\"We'll see if you're still thanking me after I properly redden that cute ass of yours. Now, let's go, Matthew.\"\n\nMatthew was soon over Bethany's lap again, his throbbing cock trapped between her bare thighs. Before beginning, Bethany offered a warning, not because Matthew needed to be told, but rather to ensure it was firmly placed in his thoughts.\n\n\"If you cum on my legs or feet, Matthew, you will be licking up every drop.\"\n\nThe ongoing arousal of being in contact with Bethany's bare thighs struggled against the effects of the steady work of the paddle. Applied with the same energy as Matthew's regular maintenance spankings, Bethany didn't let the fact that this was Matthew's second spanking modify her approach. As she spanked, Bethany outlined a few of the changes Matthew could expect if he agreed to be collared.\n\n\"You'll be spending more time plugged and caged Matthew, and all of your orgasms will be under my control. No more laying in bed stroking yourself to orgasm while I am doing a session unless I want you to be doing that. You'll still be able to listen and sometimes even watch on the monitors, but there will be no cumming without permission. As my slut boy for teasing videos, I'm going to want to keep you very horny and very drippy for any time we have a session scheduled. If the series is as successful as I imagine it could be, it may also mean some live sessions for us to cater to some of my special clients. If that happens, I may have to keep you very denied to make sure you're ready. I like the way we have things around the apartment now and don't see a lot of changes in our usual routines. But if any of my fellow dominants visit, you will serve them as you serve me, and I expect you to treat submissive ladies with proper respect too.\"\n\n\"Yes, Mistress Bethany,\" Matthew moaned when she paused to make sure he understood the proposed changes.\n\n\"You are such a good boy,\" Bethany said as her paddle covered Matthew's ass with one final intense flurry of strikes. \n\nMatthew struggled to lay still as Bethany switched gears and the strictness of the paddle was replaced by her caressing hand. The coolness of her palm on his flesh made Matthew moan with a balance of pleasure at its touch and the lingering pain of the spanking.\n\nWith Matthew still balanced across her lap, Bethany held her thighs together, trapping his erection between her soft thighs. Feeling the new pressure of her flesh surrounding his cock, Matthew froze in place, which did nothing to stop the sudden shiver of erotic reaction that coursed through his body. Pressing on the plug in his ass, Bethany added to Matthew's torment by subtly relaxing and tensing her thighs to tease his throbbing cock. \n\nMatthew moaned deeply, lost in the feelings of this new dilemma. Bethany chose that moment to break the spell. \n\n\"Down,\" she ordered, \"on your knees.\"\n\nMatthew knelt facing Bethany, his knees spread wide and his hands behind his back as she had taught him. Bethany reached forward with one slender foot and rubbed the sole across the tip of Matthew's hard cock. When she next raised her foot to Matthew's lips, he obediently licked his precum from the ball of her foot and lapped at her toes as long as she held her foot to his mouth.\n\nSmiling at Matthew's response, Bethany brought both of her feet to Matthew's cock. With one foot under his erection and trapped by the other foot over it, she slowly started stroking with the limited movement her position allowed.\n\n\"Look at me Matty,\" Bethany quietly instructed, \"my eyes are up here.\"\n\nMatthew met his sexy tormentor's gaze.\n\n\"Good boy,\" Bethany said, \"does Matty want to cum? Would you like to cum all over my feet?\"\n\n\"If Mistress desires,\" Matthew moaned in a low voice.\n\nMatthew's body trembled as he fought to hold his kneeling position and also be careful not to pull his cock away from Bethany's teasing feet. His mind whirled between the virtual bondage of posture and his deep desire to surrender to the erotic teasing. \n\n\"I do desire, Matty,\" Bethany said, \"I want you to cum on my feet. I want you to fuck my feet just like this and cover them with your cum.\"\n\nMatthew moaned deeply. His hips jerked forward in response to the realization that Bethany was telling him to cum. To cum for her. To cum on her. Matthew even lusted for the fact that she would expect him to clean her feet with his tongue when he was done. That act too would add to the time he could touch his Mistress' body. \n\nOverwhelmed with the day's teasing and so ready to please, Matthew was soon shaking in a full-body orgasm that left Bethany's feet dripping with his cum. For good measure, Bethany had caught almost every drop between her feet and quickly spread the cum over her soles and toes to ensure it wouldn't be lost to the floor. Her tactic also ensured that Matthew would have to lick and suck every bit of each sexy foot to get them clean.\n\nAs Matthew's orgasm ended and he regained control of his movements, he lowered himself to his next task. Pleased that he didn't need to be told what to do, Bethany smiled as she watched him gently support her cum covered feet and start licking. She enjoyed every delightful moment of Matthew's very thorough cum cleaning foot worship.\n\n\"You have proven to be a very good boy today, Matty,\" Bethany said as she moved her feet back, \"we are almost done. It's time for you to go back to your corner for a little while.\"\n\nKnowing that the corner always followed a spanking, Matthew quietly and quickly returned to his appointed spot and assumed his position. He could not resist licking his lips to taste any remaining trace of his cum, and to refresh the memory of licking it from Bethany's sexy feet. He barely even noticed that he was in his corner and not wearing his cage this time, his cock having been so effectively drained by Bethany's teasing and milking.\n\n\"Turn around Matthew!\" Bethany's tone was sharp enough to startle and commanding enough to brook no disobedience.\n\nMatthew turned and gasped at the sight that met his eyes.\n\nBethany had changed again. This time she wore a full-body suit of black leather covering her body from wrists and ankles to her pretty neck. A heavy leather waist cincher circled her body from hips to under her breasts, defining her hourglass figure and adding depth and texture to the commanding style of her attire. On her feet were black calf-height boots, laced and tied up the fronts and with two-inch heels that she moved on with ease and confidence. Bethany's hair was in a tight bun on the back of her head. In her hands was a black riding crop.\n\n\"Is this the look of a dominatrix that lives in your imagination when you think about submitting Matthew?\"\n\n\"Uh, ... I don't know, ... maybe, ... sometimes,\" Matthew replied, flustered and stumbling over his words.\n\nBethany stepped closer.\n\n\"Or is this the image you have when you really need to be punished?\"\n\nStaring, open-mouthed, Matthew had no ready reply.\n\nWith a smirk, Bethany stepped back and turned. She was sitting on the chair before she spoke again.\n\n\"Come here, Matthew,\" she ordered, her crop pointing at the floor in front of her. \n\nMatthew moved quickly to stand in front of Bethany. His mind was whirling, trying to comprehend her dramatic choice of clothing and her very new commanding attitude. \n\nWith taps of the tip of her crop, Bethany directed Matthew's stance. Legs apart with about 18 inches between his feet, hands at the small of his back, shoulders and elbows straining slightly rearward to ensure an erect posture. Satisfied, the tip of her crop traced over the naked male form that was on display for her and at her command. Bethany was pleased to see the effects of Matthew's workout routine had built up and defined the musculature of his body. His runner's physique wasn't about to bulk out at any time, but the new definition of his muscles was enough to show progress.\n\n\"We have sampled erotic and maintenance spankings, Matthew, but we are not yet done. While I have been pleased with your progress as a willing submissive, I feel it necessary that you have at least a hint of what a punishment spanking might entail. It has not yet been necessary, and I do hope that it will not be in the future. My own preference for punishment is to deny attention, and if serious enough, to end relationships, is that clear?\"\n\n\"Yes Mistress,\" Matthew managed to say with a mouth that suddenly seemed very dry.\n\nBethany placed the crop on the floor and revealed a paddle that she had tucked between herself and the chair back when she sat down. Made of inflexible black acrylic, the business end of the paddle was ten inches long and three wide. Matthew inwardly gave a sigh of relief, the paddle appeared light enough to not be able to carry any real force with each swing. He was glad of that perception since he could still feel the heat of the maintenance spanking in his ass. As Bethany laid the paddle across her knees, Matthew could see that her name in bold capitals, \"BETH\", was cut out of the plastic.\n\n\"I am going to take you across my lap one more time, Matthew,\" Bethany explained, \"and I will give you twelve strokes with this paddle. It's not the heaviest paddle I have, but I think the effect it offers will be sufficient.\"\n\nBethany picked up the paddle and with her other hand patted her thigh.\n\n\"Assume your position, Matthew,\" she directed.\n\nLaying once more across Bethany's lap, Matthew allowed himself a few reassuring thoughts.\n\n\"It's a lightweight paddle,\" he told himself, \"and she's not all that strong. This won't be so bad.\"\n\nMatthew's assessment overlooked a number of relevant facts. Bethany had also benefited from her regular workouts and weightlifting. The speed at which a light paddle can be swung, especially if it has cutouts that ensure there is no air resistance before or at the point of contact, can be surprising. And the many edges of the perforated paddle would each add to the impact effect of the paddle. All of these contributed to prove Matthew's expectations to be very wrong. Distracted by Bethany's appearance and behavior, he also hadn't accounted for how sensitive he was from two prior spankings.\n\nMatthew gasped at the first impact. The second strike resulted in a low moan. The third made him close his mouth and eyes tightly to hold everything together as best he could. Bethany paused, her now familiar caress between series of spanks checked Matthew's bottom for any particular pain points that she should be careful of. Talking softly as she did so, she also checked in with Matthew that he felt ready to continue.\n\nThe next three rounds of three strokes were each as much of a shock to Matthew, and a pleasure to Bethany, as the first. Matthew was left with full understanding that he did not want to be punished like this by Bethany, ever. Bethany was left quite certain that if she had to spank Matthew this strictly, she was going to enjoy the depths of his submission that would be necessary to have him submit. \n\n\"Corner,\" Bethany said in a low voice after making sure Matthew was still okay after the last series of strokes.\n\nMatthew obeyed. Bethany went directly to her room. Matthew was too distracted to hear the Hitachi Magic Wand even though Bethany hadn't fully closed her bedroom door. \n\nFifteen minutes later, Bethany stirred Matthew from his reverie when she caught his hand and pulled him gently from the corner. She led him to the chair and, taking her seat once again, indicated that Matthew should kneel in front of her. \n\nBethany's leather outfit had disappeared. She was dressed in a simple blouse and knee-length gray skirt with bare legs and feet. With a freshly cleaned face, Bethany was without makeup and had her hair tied back in a loose braid. Relaxed and smiling, she reached out to stroke Matthew's cheek.\n\n\"We've had a busy day, Matty. I think you enjoyed the slow tease, keeping your cock locked up, and your bottom filled, all while getting to see me in so many sexy outfits.\"\n\n\"Yes, Miss Bethany,\" Matthew said softly.\n\n\"And it was time that you got to experience the three spankings one after another. I know you enjoyed the girlfriend experience spanking, and you took the maintenance spanking as well as you always do. I needed you to experience the last one, to show you want a punishment spanking would be like. It wasn't what you wanted to feel, but now that you have, I think we can agree you probably don't want another one like that, or more severe.\"\n\n\"No, ma'am, I do not,\" Matthew whispered, his mind full of the sensations and emotions that had accompanied the application of the acrylic paddle.\n\n\"You also got a nice milking today. I wanted to make sure of that so that you weren't making any important decisions with a mind clouded by horniness. What do you boys call that on the internet, post nut clarity?\"\n\n\"Yes, Miss Bethany, and thank you for milking me today,\" Matthew replied.\n\n\"Oh, you are very welcome, Matty,\" Bethany said brightly, \"I suppose that if we might be rationing your orgasms going forward, we should try to make each of them memorable.\"\n\n\"Yes ma'am,\" Matthew said, as the scope of her predictions for the future took hold.\n\nBethany slid her fingertips under Matthew's chin and lifted his face until their eyes met.\n\n\"Matthew, it would please me if you would surrender yourself to me and accept my collar to wear. With that submission, you will agree that I am your Domme and you are my submissive. If you do not wish to commit at this time, we can continue as we have been and talk further about our arrangement in a few days.\"",
        "Matthew stared deep into Bethany's eyes. He licked dry lips as he started to form a reply. When he spoke it was with a voice cracked by the full emotions of the day.\n\n\"Yes, please, Miss Bethany, I wish to submit and wear your collar.\"\n\nBethany's face lit up at the words she heard and a brilliant smile spread across her lips. \n\n\"That's wonderful, Matty, we shall have to have a little party to celebrate,\" Bethany said happily.\n\n\"Oh, don't worry,\" she added when she saw a look of concern cross Matthew's face, \"if the rules say we can only gather with five people, then I will only invite three to join us. It will take a few days to arrange because I need everyone to have a recent Covid test to ensure we all stay safe. For now, I will put away the collar you have been wearing, the next one you feel will be the one that makes you mine. I do want to place my collar around your neck with close friends as witnesses.\"\n\n\"Yes ma'am,\" Matthew said softly, his eyes still gazing deeply into Bethany's\n\nA few days later, Matthew was deep into a cycle of online erotica and videos, with collaring and lifestyle submission a basis of new searches and interests, when he heard Bethany calling him into the living room. Thoroughly aroused to the point that he could feel each pulse in his confined cock, he quickly and obediently walked into the living room.\n\nMatthew stopped suddenly when he realized that Bethany was not alone. Wearing only his cage, he realized that any possibility of retaining modesty had disappeared by the time he noticed there was another lady in the room.\n\n\"Say hello to Nurse Betty, Matty, she's going to do our Covid tests.\"\n\n\"Uh, ... hello Betty,\" Matthew stammered quietly.\n\n\"Please address me as Nurse Betty, Matthew,\" the woman said in a strong and clear voice that didn't need to be raised to emphasize her expectation of obedience.\n\n\"Yes, Nurse Betty, sorry, Nurse Betty,\" Matthew blurted out.\n\nThe woman was a full six feet in height, imposing even in her low shoes. She was broad-shouldered and built with the strength and control of a powerlifter, which happened to be one of her fitness hobbies. Matthew noted that she wore a set of crisp, tailored, nurses scrubs of bright white material. Over her generously proportioned left breast was a red cross symbol and her name, \"Nurse Betty.\" Her complete lack of a reaction to Matthew's appearance clearly showed that being met by a naked submissive in a client's home was neither unexpected nor unusual for her.\n\nNurse Betty was standing beside the kitchen counter with a modern version of a classic leather medical bag open on the countertop. Bethany sat in one of the bar chairs with her back against the edge of the counter to brace herself for the upcoming procedure.\n\nNurse Betty held up a long cotton swab but first turned back to look at Matthew.\n\n\"Stand there,\" Nurse Betty said, indicating a spot on the opposite side of Bethany.\n\n\"I will swab Miss Bethany first, and then do you, Matthew.\"\n\nMatthew inhaled deeply as he watched Nurse Betty slide the swab to the back of Bethany's sinus cavity. While he knew that Bethany and her occasional work visitors were regularly tested, at her clients' cost, and he'd read about the procedure, it was the first time he had seen it done. \n\nMatthew didn't realize how noticeable his reactionary wince and shiver were until Nurse Betty spoke while she was sealing the first swab in its sterile container. Her tone was a mixture of encouragement and amusement, with just a hint of condescension over Matthew's reaction.\n\n\"Be brave, Matty, and I'll see if there's a treat in my bag that Miss Bethany will let you have.\"\n\nMatthew next found himself in the chair for Nurse Betty's attention. He knew how easily he slipped into an acquiescent level of subspace at the first touch or teasing words from Bethany. Nurse Betty's presence and the power of her voice as she directed him to the stool and adjusted his posture had him there almost immediately. Nurse Betty's hand supporting the back of his head was both controlling and calming and the procedure was done before he realized it.\n\n\"Thank you, Matty, you may go back to your room now,\" Bethany said, her voice pulling Matthew out of his reverie.\n\nAs he walked away, taking measured steps as if each movement of his body had to be individually controlled, he heard Nurse Betty speaking to Bethany.\n\n\"Well, he's a sweet and obedient boy, isn't he? How is his training coming along?\"\n\n\"We're making excellent progress,\" Bethany replied.\n\n\"Is there anything else that I can help with?\" Nurse Betty asked, \"I could give him a full physical, or a thorough prostate massage, maybe a colonic irrigation.\"\n\n\"Nurse Betty,\" Bethany laughed, \"if he needs anything like that, I'll be sure to book a session at your after-hours clinic.\"\n\n\"Overnight stays can be arranged if you want to board him for a night.\"\n\n\"You are incorrigible,\" Bethany told the woman.\n\n\"It's one of my best attributes,\" Nurse Betty countered, \"shall I have the lab send the results by email and bill you directly?\"\n\n\"Yes, please, Betty,\" Bethany said as she held the door for the woman to depart, \"and thank you as always for the timely service.\"\n\nMatthew had stood in his bedroom doorway hearing the women talk while Nurse Betty prepared to leave. As their conversation ended, he peeked around the corner of the door frame to see Nurse Betty step close to Bethany and then lean down to kiss the beautiful brunette full on the lips.\n\n\"Always available to serve you, Miss Bethany,\" Nurse Betty said as she disappeared from Matthew's view and into the building hallway.\n\nThe following afternoon, Bethany entered Matthew's bedroom. Dressed in yoga pants and a loose hoodie, she smiled as she approached him at his desk and then sat on his bed. She watched as Matthew turned his desk chair around to face her. Placing one bare foot between Matthew's thighs, Bethany slid her toes under his balls and held them there as she spoke.\n\n\"Our tests came back and we are clear. I've also heard from all three of our guests too. They all passed with flying colors. I've told them all to be here tomorrow for 7 p.m. to see Miss Bethany officially collar Matty.\"\n\n\"I am ready, Miss Bethany,\" Matthew said nervously, his eyes and dry lips failing to support that claim.\n\n\"Don't worry Matty,\" Bethany said as she flexed her toes to distract him from his current thoughts.\n\n\"If it wasn't for Covid restrictions, we would have been attending monthly munches and you would have met quite a few kinky friends of mine. Then we could have had your collaring as part of a fetish party. But we do the best we can, so that means the two of us, and three guests. And all you have to do is be on your best behavior, just like you are for me every day.\"\n\n\"Yes Miss Bethany, I won't disappoint you,\" Matthew said as he realized that three guests might be less stressful than a room full of kinksters.\n\nBethany pulled her foot back and got to her feet. She leaned down and kissed Matthew on the cheek.\n\n\"Always my good boy,\" Bethany said as she turned and left the room.\n\nThat night Bethany returned as Matthew lay in bed in quiet contemplation. As had become his habit, Matthew wore only the cage on his cock. Laying on his back with his hands behind his head, he pushed away stray thoughts as he relaxed to clear his mind to sleep.\n\nMatthew hardly realized that Bethany was there until she lowered herself to lay on the mattress beside him. She was dressed in yellow pajamas of fine smooth silk. Tucking herself close, she laid her head on Matthew's raised bicep and trailed her hand down his chest to his caged cock.\n\n\"I just wanted to come in and say goodnight, Matty, and tell you how pleased I am about tomorrow.\"\n\n\"Thank you, Miss Bethany,\" Matthew replied quietly, \" am looking forward to tomorrow too.\"\n\nWith one hand, Bethany deftly unlocked the cage and freed Matthew's cock. As she removed the two parts of the cage, she dropped them and the key to the floor behind her. Her hand then returned to Matthew's crotch, at first just to cup and hold his smooth balls.\n\n\"You don't know how long I've waited for this,\" Bethany said softly, her hand tightening just enough to be noticed, \"All those times I hung out with Janie while we were in high school and you never paid me any attention.\"\n\nMatthew moaned softly as he spoke, \"You were my little sister's friend, it wouldn't be right.\"\n\nBethany raised her hand to Matthew's lips, holding her open palm over his mouth.\n\n\"Lick Matty, get it wet.\"\n\nWith her freshly licked hand, Bethany took hold of Matthew's straining cock and began stroking slowly. When she felt the need, she brought her hand up for more lubrication by Matthew's tongue.\n\n\"So many missed opportunities, Matty,\" Bethany said as she stroked, \"Matthew the Good, always so noble. In high school, I was little Janie's friend that you wouldn't even look at. When I was a senior in high school and you were a sophomore at the college, you wouldn't date high school girls. When you were a senior, you didn't date sophomores. All those times I visited and slept over with Janie. When I was younger I always tried to dress in cute ways that I thought boys, that is to say, you, would like. By the time I was 18, I would put on my sluttiest little dresses or sexiest swimsuits and you just hid in your room with your computers or suddenly had somewhere else to be. I always told Janie I would have you one day, but I don't think we imagined then exactly how this would turn out.\"\n\nMatthew moaned as he reacted to Bethany's stroking hand and the realization that all those times Bethany had paraded herself around his parents' house was for his benefit. \n\nBethany continued.\n\n\"All those years, you had a series of boring girlfriends who never quite discovered what really made you tick. But I shouldn't complain, because I discovered so much about myself in my own adventures. I think we're both benefiting from that knowledge right now.\"\n\n\"Yes, Miss Bethany,\" Matthew moaned.\n\n\"Yes, Miss Bethany, I love hearing you say that,\" Bethany said as a shiver passed through Matthew's body from head to toe.\n\n\"Please, Miss Bethany, if you keep doing that I am going to cum,\" Matthew said hoarsely.\n\n\"Does my slutty boy want to cum for me?\"\n\n\"Yes, ma'am, please may I cum.\"\n\nBethany smiled at Matthew's request. She slid down the mattress and raised her body up beside Matthew's. Maintaining the steady pace of her stroking, she lowered her face to Matthew's cock and slid her open lips over the head. The stroking combined with the warm tight feel of Bethany's lips locked tightly around the head of his cock was enough to trigger Matthew's orgasm.\n\nWith a guttural moan, his whole body shuddering, Matthew's balls began pumping their load of cum into Bethany's waiting mouth. As soon as his orgasm started, Bethany stropped stroking the shaft of Matthew's cock and steadied it with only a light touch of her fingertips. The result was a partially ruined orgasm as Matthew experienced no ongoing contact except for the ring of Bethany's lips.\n\nMatthew's body slumped as the last contraction of his orgasm passed. Overwhelmed with the physical and emotional effects of his orgasm, he could only watch as Bethany milked the last drops of his cum into her mouth.\n\nBethany slid her lips off the head of Matthew's cock and kept them tightly closed. In a smooth movement, she slid back up beside Matthew and raised her face over his. Without being told what to expect, Matthew knew. As Bethany's lips neared his for a kiss, he opened his lips to accept the creamy treat she had saved for him to swallow.\n\nBethany let the first part of Matthew's cum drip from her lips into Matthew's waiting mouth. After that, she locked her lips to his in a deep French kiss that saw her tongue dominate the exchange and ensure Matthew tasted and received every drop of his own cum. \n\nFinally breaking the kiss, Bethany whispered one last message before slipping from the bed to go to her own.\n\n\"Have lots of sweet slut-boy dreams Matty, tomorrow you wear my collar.\"\n\nMatthew wasn't even certain if his reply was spoken aloud.\n\n\"Yes, Miss Bethany.\"\n\n \n"
    ],
    "authorname": "royalrogue",
    "tags": [
        "cfnm",
        "cum",
        "cum eating",
        "anal plugs",
        "female domination",
        "femdom",
        "male submission",
        "spanking",
        "teasing"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-project-for-bethany-ch-04"
}