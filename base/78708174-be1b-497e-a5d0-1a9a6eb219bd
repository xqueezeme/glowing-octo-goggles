{
    "title": "The Lady's Maid",
    "pages": [
        "Authour's Note:\n\nThis 18th century historical romance is my contribution for the Wine and Old Lace event. \n\nIn this story, you can expect to find descriptions of lesbian and heterosexual sex, melodrama, a betrothment, and overly romantic language.\n\nSpecial thanks to the team of people who beta read and edited for me. This story would not be what it is without Bebop3, blackrandl1958, norafares, OneAuthor, and Pixel the Cat. \n\n**\n\n\"You will marry him.\"\n\n\"Father, no. Please \u2014\"\n\n\"Charlotte, you will marry the Digbys' son. That is final.\"\n\n\"But \u2014\"\n\n\"Final!\"\n\nFather's last word was punctuated by a loud thump as he slammed his hand onto the thick oak desk. My brothers stood by him in stony silence. Neither Edmund nor Philip would meet my gaze, though Philip's face betrayed a look of sadness.\n\nMy mouth opened and closed, but I did not speak another word. Emotions swirled through me, anger, betrayal and disbelief, all muddied up into a ball of agony that settled deep inside my chest.\n\nI had known something strange was happening when Father called us into his study after dinner. He never allowed me into the study, which of course meant I had stolen my way into the room on multiple occasions without his knowledge. To invite me in there specifically was highly suspect.\n\nStill, the announcement that he had betrothed me to a man I had never met, a man whose name he did not even tell me, was shocking.\n\nFather's last shout hung off the tension in the air. I stared down at the oak desk, looking but not seeing, until Father cleared his throat.\n\n\"You are twenty years old. It's time you marry.\" His voice was softer, but the grumbling firmness was still there. \"Another London Season has come and gone. I have bought you all the finest dresses and sent you to all the best events. You have never once shown any inclination towards a man. So, I have found one for you. The Digbys are well-respected. Despite your tendency to frolic around the woods like a boy, they have agreed to marry you to him, and so you will marry him. They will arrive in a few days' time so you may meet him before the wedding.\"\n\n\"I do not want to marry anyone, Father. Please...\"\n\n\"You will marry him, or you will be sent to a convent.\"\n\nMy jaw trembled as I finally looked into Father's eyes.\n\n\"Mother would have never let you do this to me.\" My voice came out in a hiss, and I was unable to keep the anger from boiling over as I whirled around to leave.\n\n\"I did not dismiss you!\" he roared, but by the time he finished speaking, I had slammed the study door behind me.\n\nFather had not remarried after Mother had died a few years earlier, leaving me to assume the responsibilities as lady of the house. I had done so begrudgingly, a fact well known to everyone except Edith Hathaway. Father was now courting Edith, and it was common knowledge that she was bitter that I ran the household. I was absolutely certain that Father's sudden willingness to hoist me off on the first man who would take me was a result of her interference. I would be taken to my new husband's household leaving Edith to marry my father and take over as lady of his house.\n\nIt did not bode well for any woman who would eventually marry Edmund, as he would be the eventual heir to the family estate. Perhaps that is why Edmund had not yet married, either. Edith was an ambitious woman. Her face was pretty for her years, likely why my father sought after her, but all the beauty in the world could not mask the toad-like nefariousness that lay inside her soul.\n\nIf she would have simply married my father, I would have handed the reins to her gladly. I did not want to be the lady of the house. Not my father's house, not anyone's house. I wanted to work in the stables, hunt with the men, run through the woods and find mushrooms and berries and all manner of earthly treasure. I did not want to manage the household, or embroider hoops of flowers, or change my dress three times a day.\n\nThe one and only benefit to being the lady of the house was my lady's maid, Alice.\n\nAlice was the daughter of Mrs. Clayton, our housekeeper. She had been my dearest friend and closest confidante since we were children. A condition of my assuming the position of lady of the house was that Alice continue to be my companion. Father insisted she was not of high enough birth to be a lady's companion, but that she could be my lady's maid. Alice accepted the role gladly, as the title was of no importance to her. We only wished to be with each other day in and day out, as it had always been.\n\nShe was there after I stormed through the house and into my room, struggling to keep the tears from falling.\n\n\"Charlotte!\" She rushed across the room and tried to embrace me, but I struggled away. \"What's wrong?\"\n\nThe tears spilled from my eyes as I threw myself onto the bed, burying my face against the pillow. The bed sank under Alice's weight as she perched beside me. She touched my back tentatively, her soft hand a comforting weight against my spine.\n\n\"Charlotte?\"\n\nHer voice was quiet, gravely concerned. I tried to speak through my tears, but the words were stuttered, unintelligible with anger. She patted my back softly, making gentle circles with her fingers until the sobs subsided and I could draw in a breath.\n\n\"He's forcing me to marry.\"\n\nThe words were muffled against my pillow, but Alice heard them. I did not need to see her face to know what she felt. Her hand stopped moving, resting heavily against my back, and her breath caught in her throat.\n\nWe sat that way for some time. Once it became difficult for me to breathe against the pillow, I shifted, and Alice helped me sit back up. She got up and crossed the room, dampening a cloth for me to press against my tear-swollen eyes, before sitting back next to me on the edge of the bed.\n\n\"Tell me what happened,\" she asked softly.\n\nAs I dabbed the cloth against my face, I told her what my father had done, and about my suspicions that Edith was behind it. Alice listened thoughtfully, holding my hand as I choked out the story. I grew angrier with each moment, and more despairing with each breath.\n\n\"He didn't tell me his name.'\" I looked at Alice, her brown eyes reflecting the sadness of my own. \"How can I marry him without even a name?\"\n\n\"I wish I had some comfort for you.\" She shook her head sadly. \"I am sorry, Charlotte. I never wanted this day to come.\"\n\nShe took my hand and brought me to the vanity, directing me to sit so she could unpin my hair. I watched in the mirror as her fingers worked through the tangles, brushing out the kinks and knots as she went.\n\n\"He'll be here in a few days,\" I said. \"What do you suppose he will be like?\"\n\n\"Handsome, I hope.\"\n\n\"I imagine he will think he is.\"\n\nDespite the hanging sadness, we both giggled.\n\n\"Have you ever met the Digbys?\" Alice asked.\n\n\"No. Or at least, not that I recall.\"\n\n\"The name seems familiar. Perhaps in London?\"\n\nAlice had a point. If the Digbys had a son of my age, it seemed unusual I would not have met him during the Season, though I had not put much effort into meeting manageable suitors, as my father had pointed out.\n\n\"Perhaps,\" I said. \"I have heard of them, but if I have met their son, I do not remember it. They live quite a distance south from here.\"\n\n\"And you'll go live there, then. After the wedding.\" It was not a question.\n\nAnother small crack appeared on my precariously shattering heart, and I did not respond.\n\nAlice finished handling my hair and had me stand to help remove the corset I had donned for dinner. Relief flowed through me as blood rushed back through my body. My chemise hung loosely around my body as I sighed.\n\n\"I think he'll be delicate,\" I declared as she put my clothing away and I removed my stockings and garters.\n\n\"Delicate?\"\n\n\"Yes. Very fashionable and proper.\"\n\n\"Wearing his very best all the time?\"\n\n\"Of course. He'll own a stable full of horses and all the best hunting gear, but will never use it.\"\n\n\"Afraid to get his hands dirty, you think?\" Alice laughed softly as she returned to where I was standing.\n\nI nodded in response, trying to find laughter in myself but failing.\n\n\"You will get through this.\" She reached forward and took my hand again.\n\n\"It feels like a lifetime of unhappiness is coming for me, and there is nothing I can do to stop it.\"\n\nAlice began removing my chemise and I shivered as the cool air replaced it. \"Why do you say that?\"\n\n\"I don't want to marry.\" The chemise dropped to the floor as I looked at her. \"I don't like men, Alice. Why would he be any different?\"\n\nHer fingers trailed up from the hand she was holding to my shoulder, then traced a waving pattern down my breast.\n\n\"You certainly exaggerate. Do you forget that I have known you for our entire lives?\"\n\n\"I do not like how men act.\"\n\n\"You like how they look. Have you forgotten William?\"\n\nI could not help but smile. William, the stable boy who had been just a few years older than myself and Alice, had a penchant for removing his shirt on particularly warm days. Perhaps he had known Alice and I were hiding in the hayloft of the stables, and perhaps not, but we had spied on him numerous times while he had worked for my father.\n\nAlice's other hand moved to my chest as well. \"See, you do remember him.\"\n\n\"I will admit, he was handsome.\"\n\n\"And he was always kind to you. Remember? He would take us riding all the time.\"\n\n\"Well, yes, he was certainly kind.\"\n\n\"See? Men aren't so bad,\" she whispered.\n\nMy response was to kiss her as her fingers began to glide across my breast, her fingertips skimming my hardening nipples. Her lips were soft and warm, tasting vaguely of the wine she had with her dinner.\n\nFor years, Alice and I had found comfort in each other's arms, hunger in each other's lips, and pleasure in each other's bodies. Now we were finding solace, sharing the devastation of loss that came with knowing our lives were about to change.\n\nHer tongue touched my lips and I parted them, my own tongue meeting hers in a gentle battle. Both of her hands were on my breasts and she circled my nipples with her thumbs. My body was responding in a way only Alice could make it, trickles of desire dancing across my skin and down to the moistening junction between my legs.\n\n\"Let me undress you,\" I murmured.\n\nAlice was far more proficient at dressing and undressing me than I was undressing her, though I could certainly manage it. But by the time I had revealed her pale body, I had lost my patience. I pulled her to the bed urgently, bringing her down on top of me as we fell onto the blankets.\n\nMy hands moved up Alice's shapely waist as she pressed against me. Her breasts pushed against mine, her nipples hard points on the otherwise tender skin above me. We kissed again, and again, and again, urgently fierce and achingly desperate. Alice nudged my legs apart and nestled one of her legs between them. I knew she could feel the wetness between my legs against her thigh. It mirrored her own, scorching and slick against my skin.\n\nShe rolled her hips against me, that tantalizing moisture helping her glide along my leg. My swollen bud brushed against her thigh and I stifled the small cry that threatened to burst past my lips. Alice sensed it and knelt over me, her hands leaving my breasts.\n\n\"Is this what you want?\" she asked, moving her hand between my legs.\n\n\"I want you,\" I said. \"Just you, completely.\"\n\nShe leaned down to kiss me as she slipped one of her fingers into the mouth of my arousal, and that time I could not stop myself from moaning. I felt the smile cross her lips as she heard me, and her finger curled delightfully inside me. She removed her finger and pushed it back in, making me writhe beneath her.\n\nWith a final kiss on my lips, she pulled away and removed her fingers from inside me. I sighed softly, trying to mask my disappointment, but she lowered her head to my breasts to distract me. Alice kissed my breasts completely, ensuring her lips touched every inch of me, before sucking on my nipple. She ran her tongue back and forth across it, making me squirm beneath her again.\n\nThe faint giggle she made vibrated against my nipple, muffled by my breasts as she continued her teasing.\n\n\"Alice, please... I can't stand to wait right now.\"\n\n\"I'm certain you can,\" she said, but began directing her mouth lower and lower down my body. She kissed my stomach, inch by inch getting closer to my mound. By the time she reached her destination, I was begging for her mouth to work its magic.\n\nAlice's magic started with her putting her mouth everywhere but where I wanted it. She kissed the inside of my thighs, tickled the sensitive spot where my legs met my abdomen, and licked the slick juices from my lower lips. My legs tensed as her tongue pushed its way into my inner lips, teasing the dripping hole, before finally flicking across the sensitive bud just above it.\n\nI urged her on softly, my hands moving to entangle in her soft brown hair as she started to suck the little nub between my legs. She moved fluidly, using her tongue to make intricate circles and patterns around my nub before using the tip to bring me the pleasure I desired so strongly.\n\nIt did not take long for Alice to bring me to a place of unimaginable bliss, a crushing wave of happiness filling my body and spilling out as I tried not to scream. There was no controlling my body as the wave hit me, my limbs numbing as every part of me reacted to the feeling of the earth shattering beneath me.\n\nWhen I stilled, Alice withdrew her face from my loins. Slickness coated her chin as she looked up at me, driving me wild with renewed desire. I sat up and pushed her down, kissing her hard and tasting the juices I had left on her face. She touched my body wherever she could, hands everywhere, as I pinned her against the pillow.\n\nI was straddling Alice's hips when I caught her wrists and gripped them tight, holding Alice in place as I began kissing her body. She squealed as I teased her rosy nipples, her legs kicking slightly beneath me as I circled my tongue around them. I kissed along the underside of her breasts, pushing my face against them and tasting every inch of her that I could.\n\nHer breasts were not my destination, however, just a stop along the way. When I was certain she'd had enough, I moved my attention down to her crevice.\n\n\"Give me a kiss, Charlotte,\" she whispered. \"Bring me there.\"\n\nI did not tease Alice the way she had teased me. I wanted her too much and loved her too greatly. My tongue found the tender bud between her folds easily, the pathway burned into my memory after years of practice. Alice's thighs trembled slightly as I licked her, filling my mouth with the juices of her arousal.\n\nAs I rolled my tongue against the button of her pleasure, I brought my fingers to Alice's entrance and pushed my finger just slightly inside. She made another soft squeal as I pushed it in further, feeling the tightness of her walls bearing down on my digit. I moved my hand in tandem with my tongue, giving her my love both inside and outside of her.\n\nAlice's breath began to quicken, and she squirmed beneath me. Her thighs pressed against the sides of my face as her hands came to my hair, stroking it softly. I knew she was close to bliss and that the moment it was achieved, she would shove my face against her mound so strongly that I could not breathe. Eager for that moment, I licked and sucked and fingered her, listening as she grew closer and closer to the moment of pleasure.\n\nWhen she arrived there, it was magic. Alice arched her back, her breasts thrust in the air as she hugged my head against her. Her thighs were tight against my ears, and her cries of pleasure were muffled. I did not stop licking her, nor remove my fingers from inside her, until a final shudder moved through her body and her legs collapsed onto the bed.\n\nI moved back up to the pillow and pulled one of the blankets across our bodies. My eyes were set on Alice as she recovered, her breasts heaving as she took in breath, her eyes closed as she basked in the afterglow of our lovemaking. In the light of the room, she was an angel. Golden light glowed around her, highlighting each mussed hair on her head as her silhouette cut a shadow into the glow.\n\nWe had been in that moment a thousand times before, but that time was different. Instead of the swelling of love and joy that usually filled me, my stomach instead had knotted. Trepidation and sadness raised their dismal heads and the pain of the ever-cracking heart in my chest grew.\n\nWhen Alice opened her eyes, she saw tears in mine. No words were necessary, and she wrapped her arms around me as my spirit broke all over again. I cried in her arms as she stroked my hair, and felt her own tears drop against my skin.\n\n\"I don't want to marry.\"\n\n\"I know. I know you don't.\"\n\n\"I want you. I only want you.\"\n\n\"You will always have me.\"\n\n\"But not like this.\"\n\n\"No, not like this. But I am thankful we had as long as we did. And you know I will always love you as my dearest friend.\"\n\nShe kissed the top of my head and we lay in silence, our naked bodies pressed together as though time stood still. If we moved, it would break the spell, and in the morning, I would be somebody's betrothed.\n\n\"Perhaps it will be a blessing if he is delicate and proper,\" Alice said suddenly.\n\n\"Why?\"\n\n\"If he is small and soft and has smooth hands, you can pretend he is me.\"\n\nI choked on a laugh, and soon we were giggling. Alice spoke in hushed and soothing tones, and despite the tears on my face, I fell asleep with her comforting arms around me.\n\n**\n\nAlice left sometime during the night as she usually did, and came to my room to wake me the next morning. By the time I was dressed and downstairs, word of my betrothment had spread to the entirety of the house staff. Likely under penalty of dismissal by my father, each person congratulated me, though their anxiety was thinly veiled. My marriage meant the lady of the house would change, and the stories that preceded Edith Hathaway were not pleasant.\n\nEdmund came to me shortly after breakfast, followed closely by Phillip.\n\nMy brothers were lovely. We had grown up together, and Mother had always encouraged a closeness between us. While I was the eldest, I was also the daughter, which meant Edmund felt the need to offer me some protection. As children, he would defend me to anyone, until I one day managed to knock him down while play-fighting in the woods.\n\nOn our return to the house, Mrs. Clayton had fretted over my torn dress, mud-splattered on every hem, threads sticking out from the embroidery. Though it was Edmund that I had knocked down, he took full responsibility. Mother was amused, but Father gave Edmund a lashing that he would not soon forget. As for Edmund, he still protected me, in a way. He made sure I knew how to properly fight, taught me to use a hunting bow, and glowered over any child or stable boy who so much as raised an eyebrow at the lack of propriety in my activities.\n\nHe glanced around the room to ensure none of the other servants were listening before leaning towards Alice and me.\n\n\"Charlotte, Alice, would you like to come down to the stables with Philip and me? We would like to go riding along the creek today.\"\n\nMy heart was still stony, and while riding sounded lovely, I did not know if I wanted to be around Edmund and Philip. My plan had been to eat breakfast, then retire to the sitting room under the pretense of reading while I moped about my upcoming nuptials.\n\nI opened my mouth to decline, but Alice spoke before I could even shake my head.\n\n\"That sounds lovely, Edmund. Give us a moment so I may help Charlotte change her dress and we will meet you by the stables in half an hour.\"\n\nEdmund's face lit with a smile. \"Wonderful. We will meet you there.\"",
        "As Alice ushered me back to my room, I glared at her.\n\n\"I did not want to go riding,\" I complained.\n\n\"Oh, hush. You always want to go riding. I saw your face brighten just a touch under your miserable grimace.\"\n\n\"My brothers were there when Father made his pronouncement. Likely as not, they knew before I did. I expect they will try to convince me this is for the best, because I expect Father has instructed them to do so.\"\n\nDespite my protests, Alice and I were at the stables a half-hour later. Philip had already mounted his horse, a strong-looking brown that had a temper only Philip seemed to be able to manage. They had readied my favourite mount, a gentle dappled beast with a calm demeanour that had the ability to run at speeds that put the other horses to shame.\n\nThe despair came out of nowhere as I settled into the saddle. I tried to maintain an expression of neutrality, but yet another crack appeared on my heart. When I left home, I would not be able to take my horse. The Digbys would have their own, and it would seem trivial to ask that I bring one of my own. What need would I have for it? Married ladies did not spend their time riding.\n\nWe trotted along quietly for some time, stopping only once we reached the creek. Philip and Edmund chattered back and forth, and even Alice joined in their festivities and joking. But I remained quiet, lost in the scars that were overtaking my heart.\n\nAlice had packed a small picnic, and we spread a blanket on the ground as the horses grazed nearby.\n\n\"Charlotte, we wanted to talk to you about\u2014\"\n\n\"Don't.\"\n\nEdmund sighed. \"Why not?\"\n\n\"Because Father has clearly asked you to make me change my thoughts regarding the whole asinine thing, and I refuse to.\"\n\n\"He didn't, though,\" Philip said quietly.\n\nPhilip was the quieter of the two, the youngest, but he had outgrown Edmund by a few inches already. He was still only a boy, just fifteen, but he had the serious demeanour of a man three times his age. While Edmund was fiercely protective of me, Philip was a quiet voice of reason. I loved him fiercely, and could not deny my younger brother when he begged my attention.\n\nWhen he spoke, I sighed. \"Right, then. Say your piece.\"\n\nEdmund hesitated, tearing small pieces of bread from the piece in his hands as he thought. \"Father only told us yesterday afternoon what he intended. I asked him not to. Philip even protested, and you know how he hates to dispute what Father says. But his mind is set.\"\n\nAlice discreetly took my hand, sensing my need for comfort.\n\n\"I do not want you to go.\" The sadness in Philip's voice tore at me, and I could not bring myself to look at him. \"We tried all night to think of a way that we could stop this. Anything that might allow us to resume our lives as they are now.\"\n\n\"The only way out is to run away, or to be sent to the convent,\" I said.\n\nBoth of my brothers looked miserable. Running away was just as bad, if not worse. I would lose everything, and I did not know how to survive in that kind of world. As for the convent, well. There was a reason that it was seen as a punishment.\n\n\"We are so sorry,\" Edmund whispered. \"Charlotte, please believe that we are so very sorry.\"\n\nI dashed a hand across my cheek, preventing a tear from rolling down my face.\n\n\"I believe you. I am very sorry, too.\"\n\n\"Is there anything we can do to make it easier?\"\n\nI smiled, squeezing Alice's hand. \"Be here with me, come riding with me, run through the woods with me. Until the Digbys arrive, pretend with me that nothing has changed.\"\n\n**\n\nI tried very hard over the following days to look happy, but I was so obviously miserable that most of the staff began to avoid me. Visitors came and went constantly, bringing their congratulations and unwanted advice, and it took all I had to hold in my frustrated screams. So many attended the house that I barely had time to spend with Alice or my brothers, despite my wish to have a few days more with them.\n\nWe all played pretend. The staff pretended to be happy, even though their workload would increase tenfold with Edith's strictness. Friends and acquaintances pretended I would make a good wife. My father pretended he cared about my feelings and that he was not pushing me aside to make way for his second wife-to-be. During the day, Alice and I pretended to be nothing more than childhood friends. At night, we pretended that it was not one of the last times we would be in each other's arms.\n\nOn the morning that the Digby family was set to arrive at the house, Alice was doing all she could to make it look as though I had slept.\n\nI had slept some, though fitfully and not nearly long enough, and my eyes reflected it. Puffy and red, they protruded from my pale skin as Alice frantically applied various remedies so the Digbys did not think I was ill.\n\n\"If they think I am sickly, perhaps they will call it off,\" I said as Alice rubbed a paste on my face.\n\n\"You look tired, not sickly,\" she replied. \"If anything, it will just make your father angry. Best we avoid that as much as we can.\"\n\nAs she scrubbed and patted and rubbed, I looked in the mirror thoughtfully. \"Alice, will you come with me to my new home?\"\n\nShe paused, catching my eye in the mirror. \"Do you think they will let me?\"\n\n\"I will ask, but would you want to?\"\n\nShe hesitated, though I did not blame her. Alice was my best friend, but she still had her mother, father, and siblings. If she came with me to my new home, she would have to leave them all behind. After a moment, she leaned against the dressing table and sighed.\n\n\"It would break my heart every day to be near you, and not be able to be with you. There, we will get no concessions. I will be your lady's maid only. Everyone will call me Miss Clayton, and should I so much as slip and refer to you as Charlotte, I could be beaten by the housekeeper for my familiarity. I cannot pretend that things would be the same there.\"\n\nThere was a lump in my throat that threatened to choke me. They were taking everything from me: my home, my freedom, and my Alice.\n\n\"The only thing that would be worse would be to lose you completely.\"\n\nI looked up at her, confused.\n\n\"Does this mean you will?\"\n\n\"Yes, of course. You must insist that I come with you. Otherwise, I will lose both my dearest friend and my position. Things may be different there, but at least we can experience it together.\" Alice returned her attention to my skin, applying a soothing balm beneath my eyes. \"Perhaps they will have a man there for me to marry. The pool of potential suitors around here is rather limited.\"\n\nI laughed, truly laughed, for the first time that day.\n\n\"It will be one of my first orders of business. Finding a suitable husband for my lady's maid.\"\n\nIt was that revelation that gave me enough hope to proceed through the day. After Alice had done all she could to make me look as though I hadn't slept on the floor of a stable, she put me in a fine dress that was once my mother's. It was a beautiful blue dress with embroidery all around the hem in golden thread, and I used to envy it horribly when Mother would wear it.\n\nI despised wearing it myself, but I needed my mother that day. The physical discomfort of the dress was worth the memory of comfort it gave me.\n\nAlice brought food up from the kitchen, but I could not eat it. She brought wine and I sipped some, though it only added dizziness to my growing nausea. I longed to take the blue dress off, put on an old wool one, and run into the woods with Alice. We could gather mushrooms, or swim naked in the creek. Anything we wanted. We could run.\n\nInstead, we waited for the knock on my door to say that my husband-to-be and his parents had arrived.\n\nBy the time it came, I had found a numb sense of acceptance, and held my face stoically as I was escorted through the house to the back sitting-room. Just before the butler opened the door, Alice squeezed my hand. I squeezed it back, hoping the clamminess of my palm would go away before I had to greet my husband-to-be.\n\n\"Mr. and Mrs. Digby, may I present Miss Charlotte Blythe.\"\n\nI stepped into the room, hoping they could not see the way I trembled.\n\nMr. Digby was sitting in one of the chairs by the fire, across from my father. He was a stout man with a drooping face and hanging jowls, the very epitome of a humanized bulldog. Mrs. Digby sat to one side of him, and even seated I could tell she fulfilled every measure of grace and beauty. She was tall, incredibly thin, and perfectly coiffed. The pair of them were an odd juxtaposition, and though neither of them smiled, their faces were kind.\n\n\"Digby, this is my daughter,\" Father said.\n\n\"Lovely to meet you, dear,\" Mrs. Digby said kindly. Her voice was smooth and warm.\n\nI curtsied politely, nodding my head.\n\nMr. Digby stood up. \"Yes, yes. Miss Blythe, please meet my son, Thomas.\"\n\nThere would be no pretending my husband-to-be was a woman. As he unfolded himself from the chair he barely fit into, I had to tilt my head up to look at him.\n\nThomas was built like an oak tree. His body looked hard beneath his clothes, broad in the shoulders and torso, and his legs were as thick as branches. My father was a tall man, but Thomas towered over him still by a few inches. If he thought he was handsome, he was correct. Thomas had the graceful features of his mother, with his father's thick hair and dark eyes. His hands were large, and he extended one to me.\n\nI could not speak as he took my fingers in his, astounded by how small my hand appeared in contrast. I had expected Thomas to be around my age, but I was certain he was at least five years older, maybe more. He was not a boy, not a young man, but a full-grown giant of a man.\n\nMadly, I wondered if I would even survive consummating my marriage to him. He appeared as though he could crush me without a second thought. Thomas dropped to one knee in front of me and kissed my knuckles as he looked into my eyes.\n\n\"It is a pleasure, Miss Blythe,\" he said softly.\n\nThe voice that came from his lips was not what I had expected. It sounded distantly musical, deep but warm, almost tender. Still, it sounded forced, as though he was purposely attempting to mask the booming power of his regular speech. His breath against my cold hand felt scorching, and I was sure he could not only see but feel how nervous I was. Perhaps he was used to terrifying women, or perhaps he mistook it for excitement or eagerness.\n\n\"It is g-good to meet you, Mr. Digby,\" I stuttered.\n\n\"Please call me Thomas.\" He released my hand and stood, and again I had to tilt my head up to see him. \"We are to be wed, so it seems natural.\"\n\nI nodded. \"Yes, Thomas.\"\n\nI should have told him to refer to me as Charlotte, but my mind was racing in so many directions, I did not even think of it.\n\n\"Well, perhaps we should allow Thomas and Miss Blythe to acquaint themselves,\" said Mr. Digby as he struggled out of his chair.\n\n\"Very well,\" said Father. \"Charlotte, Miss Clayton may escort you.\"\n\n\"And take your valet,\" Mrs. Digby said to Thomas.\n\nWe retired to the smaller sitting room at the front of the house, Alice trailing awkwardly alongside Thomas's valet. When we arrived, they hovered near the door as Thomas and I took seats near the window.\n\nIt was quiet for a few moments as we determinedly looked away from each other.\n\n\"I am not sure what to say,\" Thomas said finally.\n\n\"I do not know, either.\"\n\n\"You seem very sad.\"\n\n\"That is entirely forward of you.\"\n\n\"I apologize.\" Thomas raised his hands. \"I know we have not met before, but I had hoped that you would be excited to marry.\"\n\n\"Forgive me,\" I said, trying to keep my tone from being too icy. \"I did not even know your name until a few moments ago. It is hard to be excited when so much is unknown.\"\n\n\"May I ask, Miss Blythe, why you are marrying this way instead of by courting?\"\n\nMy mouth dropped open.\n\n\"Yes, yes, that's entirely forward of me,\" Thomas said before I could react. \"But since we are marrying, I thought perhaps we could have these discussions before it happens.\"\n\nWhat was I to say? I had not courted any man, though some had tried. I did not want to marry, not then, nor ever, but my father did not approve of that decision. I knew more and more people who married by way of courting first, rather than their parents choosing for them, but it was not unheard of not to court.\n\nOf course, it was almost unheard of for parents to simply decide their children would wed without consulting them at all. Which meant Thomas had, perhaps, chosen to have his parents arrange a marriage for him. I could not think as to why. I was certain that more than one girl had imagined herself melting into his arms, bearing his children, and running his household.\n\nBut what was I to say? That my father was making me marry him? That I did not want to melt into his arms, bear his children, or run his household? That I had no say in the matter, and if I did, I would choose to run away with my lady's maid and be condemned for it?\n\n\"Why are you?\" I asked.\n\n\"My parents did not like the women I was courting. We agreed that if I had not found a suitable wife by my twenty-seventh birthday, they would arrange a marriage for me.\"\n\nI did not respond, still unable to determine what I should say to Thomas.\n\n\"Miss Blythe?\"\n\nSighing, I looked at Thomas. \"I did not want to marry,\" I said. \"My father was unhappy about that.\"\n\nHe seemed confused by my revelation, but did not press further.\n\nFrom the other side of the room, I could hear Alice whispering to the valet. She was quiet enough that I could not make out what she was saying, but their meeting seemed to be going much more successfully than mine. I clenched my teeth for a moment.\n\n\"Miss Blythe, I wish to know you better. Will you tell me of your family?\"\n\nI glanced back at Thomas. \"Well, you have met my father. My mother is no longer with us. And I have two brothers, Edmund and Philip, who I am sure you will meet shortly.\"\n\n\"My condolences on the loss of your mother.\"\n\n\"Thank you.\"\n\nAnother tense pause followed.\n\n\"Well, you have met my mother and father. I believe you will very much like my mother. She is very well known to host lively gatherings, and our home is the center of many social circles. She will introduce you to all the most important people and make sure you feel as welcome in our home as you do in your own.\"\n\nConsidering I was feeling particularly unwelcome in my own home, that did not bode well.\n\n\"That sounds lovely.\"\n\nYet another silence full of tension and the muted whispers of Alice, followed by the muted responses of Thomas's valet.\n\n\"I assume you have many hobbies?\" asked Thomas.\n\n\"Some.\"\n\nHis frustration was palpable. \"Do you enjoy reading?\"\n\n\"Yes.\"\n\n\"What kind of reading do you enjoy?\"\n\nI was torn between being honest and saying what I thought Thomas would want to hear. Pressing my lips together, I chose to be honest.\n\n\"I like books about geography and history. It is astounding how very large the world is.\"\n\n\"That's surprisingly intellectual,\" Thomas said, eyebrows raised.\n\nI stared at him blankly. Dear God, I thought. My future husband just insinuated that he thought I would lack intelligence.\n\nWell, it was to be expected. Thomas clearly had a picture of what he wanted in a wife. A woman to take after his mother, to host parties and be proper. Someone he could show off, like a trophy or a particularly large boar killed during a hunt.\n\n\"I enjoy reading historical books, as well. Have you read much about Genghis Khan? Just before we journeyed here, I read about the Mongol Empire; it was astounding, the extent of it! And Genghis Khan, he was...\"\n\nHe kept talking and I'm sure I kept hearing, but the longer he spoke, the less I cared to listen.\n\nThe rest of the afternoon passed tensely. I do not know if he pinpointed the exact moment where things tumbled chaotically downhill, but for me, it was his surprise at my choice of reading material. Lord bless him, Thomas tried to improve my mood, but I was most certain he left that day with the intent of begging his parents not to make him go through with it. As he spoke, my disdain for him grew, and as I responded, he seemed more and more certain that this was a grave mistake.\n\nThomas was bland and infuriating at the same time. He spoke of books, trying to impress me with facts that I already knew. He spoke of hunting, telling me of techniques I'd learned as a child and bragging of kills that were not worthy of being bragged about. And riding, and how he could tame the wildest of horses and make them submit with hardly any effort. I bit my tongue before telling him that my brother Philip was likely more successful with horses than he was. And I did not speak the biting thought I had, that Thomas's submission technique was likely just being so large and muscular that he could grapple with the beast until it was too tired to do anything but listen.\n\nThe longer he blustered, the less I cared for him. I knew only too well how men like him would treat me. Thomas did not know that I knew how to ride or shoot a bow. He assumed I was a woman who would stay inside, hosting parties, and doting on him at all times.\n\nI was not that woman, and I did not want to be that wife. Though my father hated it, I spent most of my days outdoors. I had ridden horses all my life and had the groomsmen teach me archery and fighting until my father threatened to dismiss them for doing so. My brothers then took over my lessons, ensuring I was well prepared should women ever have to be invited into a battle.\n\nI knew Father had hoped I would settle as I grew older, but Mother had encouraged me to learn as my brothers did. Father would do anything for her, and so until she passed, he had not said anything.\n\nThose days were gone, however, along with Mother.\n\nOnce our meeting was through, Alice escorted me back to my room to prepare for dinner.\n\n\"There is time before dinner, isn't there?\" I asked as she closed the door.\n\n\"Time for what?\"\n\nI looked out the window. \"I feel as though I'm suffocating.\"\n\nAlice ushered me to the dressing area and began to remove my mother's blue dress.\n\n\"That may be due to this corset,\" she said.\n\nShe helped me change to the old wool dress I wore whenever we explored the woods. We stole through the house and past the garden, avoiding the stables as we made our way to the woods. I had no intention of doing anything in particular, but we brought a basket to collect mushrooms or flowers or whatever treasures awaited discovery. Once in the trees, I finally felt my breath return to me.\n\nThe woods were not so thick as to block the sunlight, but enough that it offered some semblance of coverage from the outside world. There was a path that wound through much of it, but Alice and I rarely followed it. We had made our own path down to the creek, and that was where we headed.\n\nLeaves shuffled overhead as a slight wind shook them, and shadows danced around us as we pushed further through the trees. All at once the babbling of the creek reached our ears, and we hurried towards the bank. A small clearing waited for us, where we found handfuls of wildflowers lending their colour to the greenery surrounding us.\n\n\"Thank you, Alice. I can breathe now.\"\n\n\"There, you see. It must have been the corset. Your mother's chest was not as large as yours.\"\n\n\"I think it may be the crushing realization that I'm doomed to marriage with a brute of a man.\"\n\n\"A brute?\" Alice laughed. \"He certainly seemed proper enough.\"\n\n\"He spoke the entire time of drinking and roughhousing and sport. Watch over the coming weeks, I am certain he will reveal how boorish he can be.\"\n\n\"You enjoy drinking and roughhousing and sport.\"\n\n\"Yes, but he will not approve. I can tell already that he wants a wife who will sit at home, mind the children, and keep her mouth closed.\"",
        "\"That was not my impression. He seemed very smart. Nervous, certainly, but also excited. Did you not see that he could not keep his eyes from you?\"\n\n\"I did not get that impression at all.\"\n\n\"He was a bit unusual, perhaps, but it is an unusual situation.\"\n\n\"And you could tell this from across the room?\"\n\n\"Charlotte, he just seemed... I think you may be looking at this with some prejudice because you do not want to marry. He seemed decent. If anything, he seemed to boast a bit due to nerves. I truly believe he wanted to impress you.\"\n\n\"How could you have possibly heard anything? You were whispering with the valet the entire afternoon.\"\n\nAlice had the decency to blush. \"Jack is very sweet. I do not know if he's courting anyone, but perhaps he could be considered for that order of business you had.\"\n\nIt felt as though each time my heart pounded, the cracking and shattering grew closer and stronger. I could not breathe without feeling heartbreak. And there was Alice, already looking to replace me with a husband of her own.\n\n\"You have moved on quickly.\" The lump in my throat made my voice soft, almost hoarse.\n\nAlice's face fell and she reached for me, but I stepped away.\n\n\"Charlotte, no! That is not what I intended.\"\n\n\"Isn't it, Alice? You have already started laying claims on a husband for yourself, when I have just found out that my own husband will lock me in his home like a nightingale in a cage. I will be there for his display, his pleasure, and nothing else. And you want to marry his valet.\"\n\n\"Do not be like this,\" she scoffed. \"I was trying to find some happiness in this cloud you are under. Jack and I were listening to you speak with Thomas. Jack also told me that Thomas has spoken of nothing for days but his excitement to meet you. Before ever even seeing you, he was ready to love you. Charlotte, you may not have noticed, but Thomas was completely enamoured and wanted nothing more than to know you better.\"\n\n\"He prattled on the entire time, acting like I knew nothing about reading or hunting or\u2014\"\n\n\"Because he doesn't know that you know about those things!\" Alice interrupted fiercely. \"You would barely answer a single question he asked you. Will you truly fault him for trying to share knowledge that he did not know you already have?\"\n\n\"What was I to say?\" My voice shook, rage prickling through my chest, seeping through the scars on my heart and filling me with an anger I did not know possible. \"The first thing he said was about how his mother hosts wonderful parties and how she'll teach me to do the same!\"\n\n\"He was trying to make you feel welcome to his family.\"\n\n\"Mark my words, Alice, he wants a wife who will pump out children, stay quiet, and stay proper. I am the worst possible choice for him to marry. I will do nothing but bring him disappointment and shame.\"\n\nShe reached for me again, catching my wrist in her hand as I struggled not to cry.\n\n\"Charlotte. You must tell Thomas what kind of woman you are. It is the only chance for the two of you to make a happy life together. You do not have to be unhappy with him forever, you know.\"\n\n\"You want me to marry him, then.\"\n\nA great sigh heaved from Alice's chest. \"Charlotte, you know I wish you did not have to marry at all. It is happening, however, so I am trying to hope that it will be as happy a marriage as possible.\" She turned me to face her, touching my cheek gently. \"I will forever love you, however it may be. It is my wish that you are happy, and that he pleases you, and that you love him, too, in time. I am sorry I joked about marrying Jack. I was only trying to lift your spirits.\"\n\nIt was in that moment that I realized how lucky I was to have Alice in my life. My love, my friend, the woman I wanted more than anything in the world, who was losing as much as I was by this event, was trying to remain uplifted. The only thing worse than losing each other would be losing the other to someone who did not want them. For Alice, she had to maintain the hope that Thomas would treat me as she would have.\n\nI kissed her suddenly, and she was shocked enough to drop the basket of wildflowers.\n\n\"Charlotte, here?\"\n\n\"I have so few days left to be yours. Yes, here. While we still can.\"\n\nHer lips touched mine again and we kissed passionately, urgently. There was no soft bed to fall on, no door for us to lock or pillows to muffle our cries. It was just us, the wind blowing through the trees and grass, the flowing of the creek, and the scent of wildflowers. We held each other closely, pulling up our skirts to access each other's gardens.\n\nAlice was already wet when my fingers breached her entrance. Her lips never left mine, and I felt the vibrations of her moan as I sunk my fingers inside of her. She pushed her body forward, pressing against me as I fingered her, and finally found my own dripping mound amongst the layers of skirts.\n\nHer fingers matched mine, dipping inside of me, and I tasted her breath as I inhaled sharply. She spread my wetness about, bringing her fingers in and out of me before focusing on my most sensitive place. I mirrored her movements, our hands moving furiously beneath the other's skirt as we kissed.\n\nShe finished before I did, and I watched her beautiful face contort as I brought her to the place of bliss. Her hand paused on my bud only for a moment, long enough for me to watch her lips form into a round shape as her head tilted back. Breathing hard, she opened her eyes and resumed her motions, clutching me as she panted.\n\nMy finish came with the power of a lightning strike, tingling from every point of my body. I gripped Alice's shoulder as my body shuddered and thrashed, pleasure enveloping me in a haze of joy. She held me tightly and I felt as though I was glowing, floating above the woods with only her and her fingers and her lips.\n\nThe intense waves of pleasure subsided to an aching memory in our bodies, and we fell to the grass as we regained our breaths. Alice began to collect the wildflowers that had fallen from the basket.\n\nWe both froze when a loud snap and rustling came from a thicket around 100 feet away. I whirled towards the source of the noise, blood rushing from my face as my heart began to race.\n\n\"Is someone there?\" Alice whispered, barely loud enough for me to hear her. \"Did they see us?\"\n\nI stared at the source of the noise, refusing to even blink. Aside from the pounding of my heart in my ears and the babbling of the creek, I heard nothing. There was no shadow, no form of a person that I could make out, yet someone could easily be hiding amongst the trees.\n\nActing more bravely than I felt, I stood and began taking tentative steps towards the thicket.\n\n\"Charlotte, no!\" Alice whispered.\n\nI waved my hand at her and began walking slowly towards the noise. Still, nothing moved, and no sounds came. Closer and closer I crept, terrified yet determined.\n\nWhen I was 20 feet away, the thicket rustled again. I screeched as a sudden blur of movement darted out from the thicket and raced towards the creek. Once I realized what it was, I began to shriek with laughter.\n\n\"What?\" exclaimed Alice. \"Charlotte, what is it?\"\n\n\"A badger!\" I called back, doubling over. \"Just a badger. Oh, dear. That gave me a fright.\"\n\nAlice laughed as I rushed back towards her.\n\n\"Leave it to us to be terrified by a badger,\" I said, still giggling.\n\n\"I thought it was a person. I thought somebody saw us,\" she replied, shaking her head.\n\nNeither of us needed to state how shaken we were at the thought that we may have been discovered.\n\nWe returned shortly thereafter, taking a few moments to calm our trembling hands before heading back up the path. As we left the woods, I glanced towards the stables. Even at a distance, I knew the large figure standing near the fence was Thomas. Philip's horse, the large brown with a temper, was nuzzling Thomas's hand as he talked with one of the stable boys. I should have been encouraged that Thomas's stories about doing well with horses were true, but all I felt was anger.\n\nAs we walked back to the house, Thomas turned his head in our direction. Even from that distance, I saw the way his face lit up upon catching sight of us. He raised a hand in greeting. I took Alice's arm and turned my head away, hoping he would think I just had not seen him. As soon as we entered the house, the melancholy of the entire day began to clamp onto my lungs again, and I wondered if that was the sensation I was to feel for the rest of my life.\n\n**\n\nI was wrong about Thomas being a brute, and being wrong only served to infuriate me more.\n\nIn the weeks that followed our first meeting, Thomas was nothing short of a perfect gentleman. We spent little time together, and even less of it alone \u2014 alone, aside from Alice and Thomas's valet Jack, of course. And though I tried, for my sake and for Alice's, to be polite and charming and hopeful about the marriage, I simply could not.\n\nAt our third meeting, he brought me a gift.\n\n\"They are the height of fashion right now,\" he explained confidently as I opened the box, revealing a delicate, beautiful pair of long silk gloves. \"The first day we met, you wore that incredible blue dress. I thought these would go with it perfectly.\"\n\nWell, I was certain that it was actually Mrs. Digby who thought they would go with the dress. I did not imagine Thomas knew the first thing about ladies' fashion. The gloves were remarkable and slid on my skin like butter across a warm plate. They were highly impractical, matched a dress I hated wearing, and were the shade of blue that I always associated with my mother.\n\n\"Thank you,\" I said politely, and closed the box. Thomas's face fell, but he recovered with haste and took my hand to kiss my fingers lightly.\n\nHe brought another gift the next time we met.\n\n\"I thought perhaps you could wear it at our wedding,\" he said softly. He seemed certain that I would love whatever he had presented me with. I opened the box to find a necklace with a large pendant of a basket holding flowers. The flower petals were made of tiny blue jewels, and he insisted on fastening it to my neck immediately.\n\n\"It is beautiful,\" I said politely. \"Thank you.\"\n\nI caught him staring a few moments later, eyes fixed on the large pendant hanging in the center of my chest. When he realized I had seen him, he cleared his throat and turned away hastily.\n\nHe brought me other gifts. Slippers, ribbons, flowers. Gifts for a woman who would sit quietly by his side with nothing more to offer the world than her beauteous face. A woman who was not what I could be, and as time went on, a woman I felt guilty for not being. I was selfish, truly, and was certain I could not be happy as a married woman. A small part of me pitied Thomas, as I could not see how he would ever be happy with me as his wife.\n\nThere was one that differed, and it was the only one I truly enjoyed. At that meeting, he did not hand me a box, but a package wrapped in paper.\n\n\"I hope you will enjoy this,\" he said.\n\nUnlike with his previous gifts, he spoke nervously, and fidgeted slightly as I unwrapped it carefully. Under the paper was a book.\n\n\"It's the one I mentioned, about the history of the Mongols. I hope it is not too violent a subject, but I thought perhaps we could discuss it when you finish reading.\"\n\nThomas would have been well within his right to be frustrated. He did not have to continue treating me with kindness. I was often short with him, polite but quiet, and did not offer much information during our meetings. A logical reaction to receiving the gift would have been to soften towards him, to feel more accepting of the situation.\n\nLogic, however, was not how I generally handled my feelings. Instead, I resented Thomas even more, simply because he was showing that he was not the boorish moron I had expected him to be.\n\nI thanked him politely for the book and set it to the side. Thomas swallowed, a forced smile on his lips, and kissed my fingers lightly.\n\nThe weeks went by too quickly for my liking. Mrs. Digby handled the wedding preparations. At first, she tried to make it seem as though she was just offering friendly advice, but when she realized I had no interest in the day, she took over completely. It seemed to endear me to her, somehow, that she be given full reign over planning my wedding day, as though I had given her a gift in allowing her to do the work I did not want to do. Aside from asking me for the names of guests I would like to attend, she made the rest of the plans herself.\n\nMy father and Mr. Digby knew each other from business dealings, and found that they had much in common. Both liked to hunt, eat, and bluster about every possible way the world was changing. After dinner, they could be found sitting about, smoking pipes and bemoaning the state of society almost every evening.\n\nEdmund and Philip spent more time with Thomas than I did. Once Philip realized that he and Thomas shared the same respect and command of the large brown horse, they spent many days riding together and talking of all things equine. In the evenings, Edmund and Thomas drank heavily, laughing and storytelling around the evening fire.\n\nEven Alice seemed to enjoy the Digbys' presence. She and Jack spent many an afternoon having whispered discussions at the edge of the sitting room. I do not know if she ever broached the topic of courting him, or if perhaps that would come after the wedding was complete. She did like him, I knew that much. While Mrs. Clayton was devastated to hear that Alice was intent on following me to live with Thomas, she was ecstatic at Alice's prospect of moving up in the world.\n\nYes, everyone seemed exceptionally pleased with the benefits my marriage to Thomas brought them. Aside from myself, and likely Thomas, as well.\n\nI should not discount the attempts those around me made to offer me comfort. Each morning, a small bundle of flowers waited outside my door. If it were not for the fact that they were my favourite wildflowers, I would have thought it was another attempt at romance from Thomas. But Thomas did not know what kind of wildflowers I loved. Days went by before Alice caught Philip leaving the bouquet outside my room. He requested her silence on the matter, but Alice's loyalty lay first and foremost with me.\n\nAlice was my true place of comfort, the only thing I felt I could cling to for normalcy. Not once did she waver in her strength, and I could not have made it through without her. My selfishness at the time did not allow me to consider how much she would also lose by way of my marriage to Thomas, and she did not allow me to see her pain at it. In retrospect, I regretted my self-absorption and the way it blinded me to Alice's plight. But my dear, sweet, strong and loyal and beautiful Alice did not let my immaturity stop her from loving me.\n\nAs I spent more time with Thomas, I fought the softening of my heart towards him. Lord knows he tried everything he could to pull forth the smallest hint that I was not dreading being wed to him. After dinner one evening, Alice was whispering in my ear as we walked slowly towards the exit. I do not remember what she was saying, but it did make me smile. As I turned to leave, I caught Thomas's eye. He was looking longingly at the pair of us. When our eyes met, he looked away hurriedly, and I wondered if perhaps he had eyes for Alice instead of for me.\n\nWhen I spoke of those concerns to Alice, she laughed. \"He was longing for you, Charlotte. Everyone can see how he desires you. Your future husband wears his heart on his sleeve and his thoughts on his face.\"\n\nIt is easy to see those things when looking back. At the time, I enveloped myself in woe and refused to see the brightness around me. I chose to see only the bad, refused to find any sense of happiness, and it is only due to the strength of character of those closest to me that they did not abandon me in that place of despair.\n\nOn the morning of the wedding, I woke bleary-eyed and unrested.\n\n\"It's time, Charlotte.\"\n\nI ignored Alice and brought the pillow over my head, pressing it to my ears.\n\n\"Really, Charlotte.\" The bed shifted as she sat on the edge and I felt her hand touch my back. Her voice was muffled, but not enough to drown her out. \"I promised Mrs. Digby that you were out of bed an hour ago. She'll have my head if you're not ready in time.\"\n\n\"Please, Alice,\" I begged. \"Do not make me go out there. Tell them I died.\"\n\n\"I will not. Not only are you not dead, death is not better than marriage.\"\n\n\"How would you know? You've done neither.\"\n\n\"And neither have you.\"\n\nShe pried the pillow from my hands as I slumped, unmoving, against the mattress. Grabbing my arm, Alice began to tug me out of the bed.\n\n\"Come on, Charlotte.\"\n\n\"I regret to inform you that I am now dead.\"\n\nShe tried not to laugh, but a snort escaped. \"You are certainly chatty for a dead person.\"\n\n\"I am speaking to you from the beyond, as a spirit. I cannot properly rest and go to Heaven until you tell Thomas that I have regretfully died.\"\n\n\"I will do no such thing.\"\n\nShe succeeded in pulling me to the edge of the bed, where she used my chest as leverage to flip me onto my back.\n\n\"You look like you haven't slept a wink, but that is far from dead.\"\n\n\"Perhaps I am under a curse. You could try to break the spell.\"\n\nAlice touched my hand softly. \"I cannot kiss you on your wedding day, Charlotte. We have risked too much already. It isn't right.\"\n\nMy eyes were closed, luckily, so she did not see the pain in them as she spoke. When I was certain there were no tears pooling there, I opened my eyes and glanced at Alice.\n\nShe was still sitting on the edge of my bed, looking down at me with an expression of pity and loss. When she saw I was looking, she smiled.\n\n\"There you are. Truly, I am ecstatic that your death was not of the permanent sort.\"\n\n\"Alice...\"\n\n\"Please, Charlotte.\" Her face shifted to the sad expression she had just worn. \"Mr. Digby is a good match for you, even if you do not think so. I believe truly that he will make you happy. For today, let us just pretend. Please, let us pretend to be happy. Let us enjoy what we can.\"\n\nI nodded softly and swung my legs to the edge of the bed.\n\n\"Well, let us be on with it, then.\"\n\nI am certain that many women enjoy their wedding preparations, especially when their dearest friend is with them. Alice and I tried to enjoy ourselves, but the overwhelming sadness permeated every action. Sadness was woven through the braids Alice put in my hair, tangled in the skirts of the dress Father had bought for me, tied around my neck as Alice clasped the necklace Thomas had given me. Even the bracelets I wore, passed down from my mother, were drenched in a feeling so blue it made me shiver.\n\nThe day passed in much of a blur. I did everything dutifully. I recited my vows and smiled blandly at the overly ecstatic guests. I kissed my new husband chastely, noting how very different his lips were from Alice's. I thanked the guests for coming and sat obediently at the table while a proper feast was served, though only a few bites passed my lips.\n\nThe night passed on, and more wine was served and spilled. Alice was dutifully by my side, Edmund and Philip were each dancing with lovely young ladies, and Thomas was being congratulated repeatedly by people I had never met. Acquaintances I had known for years gave polite congratulations, then bawdy insinuations, until at one point a group of guests began demanding we proceed with the bedding.\n\n\"Let's let the lovebirds get on with it, shall we?\" hollered Henry Lawrence.\n\nHe was a lanky man with stringy hair and a penchant for peering up the dresses of ladies. Despite his tendencies, he was from a good family and had attempted to court me at one point. I had turned him down as politely as I could, but he was highly insistent at the time. The leering grin on his face told me he had never quite forgiven me for my rejection, and was looking forward to what little he would see by insisting on a bedding ceremony.",
        "\"Ah, I don't believe we'll be doing a bedding ceremony,\" protested Thomas.\n\nA man with unruly blonde hair whose name I did not know clapped him on the back. \"What, you afraid, boy? Don't think you can perform under pressure?\"\n\nThe laughter was roaring, and it echoed in my ears as I looked on, horrified. I had told Mrs. Digby that I refused to be involved in such an obscene tradition. She was sitting nearby, and I looked at her helplessly as the men surrounding us insisted on a bedding.\n\nMrs. Digby, with all her gracious gracefulness and propriety, stood up. \"Gentlemen, please. A bedding ceremony is so antiquated. Wouldn't you rather have another drink?\"\n\nMost of the men cheered, but Henry and the blond man insisted on.\n\n\"Come on, Digby, we all want to see our dear Charlotte be strummed.\" Henry threw an arm around my shoulders. \"Your new wife's a little minx. She's been the talk of the town for years. Let us have a gander at her before she gets all plumped up with children.\"\n\n\"Henry Lawrence, you absolute unlicked quim!\" I spat. \"Take your hands off me.\"\n\n\"Oh, don't be such a sorning twat, Charlotte, you\u2014\"\n\nHe was interrupted by Thomas roughly grabbing his collar.\n\n\"Watch your tongue, man,\" he growled. \"That is my wife, and I'll thank you to not only respect the good lady, but to remove your hands from her lest I remove yours from your wrist.\"\n\nThomas was not only a good deal taller than Henry, but outweighed him significantly. In fact, Henry was so outmatched that he had difficulty extracting his arm from around me as he hurried to comply with Thomas's demands. Once completed, Thomas let go and Henry glared as he straightened his shirt.\n\n\"I'm sorry to see you end your evening so early,\" Thomas said jovially. \"Thank you for coming, Mr. Lawrence, and good evening to you.\"\n\nHenry did not look at either of us as he strode from the gallery, pushing past Alice as she scurried towards me.\n\n\"Char... I mean, milady. Are you all right?\"\n\nI was shaking, but not from distress. Rather, I was enraged at Henry's behaviour, and confused by Thomas's immediate protection. I wanted to scream. I wanted to slap Henry across his face and spit at him. I wanted to push down the flare of gratitude and bashful appreciation at watching Thomas defend me.\n\n\"Thank you, Miss Clayton. I am fine.\"\n\nA large hand tentatively touched my shoulder, and I turned to find Thomas hovering beside me. Hesitantly, he brought the hand to my cheek, lightly touching my face.\n\n\"Are you certain?\" he asked.\n\nCertain of what, exactly? I was not certain of anything, because the moment his fingers grazed my skin, a sense of warmth and comfort flowed through my body. I looked at Thomas, stricken by confusion, seeing him in a way I had not seen him before.\n\nI have spoken of Thomas's attractiveness, his broad shoulders and earnest face. In that moment, though, I was stunned by the way he looked at me. Concern filled his eyes, and I forgot of my anger and despondence. My body told me to kiss him, to let him embrace me, and I nearly stepped forward to do so.\n\n\"Charlotte? Are you certain you are all right?\" he repeated.\n\nThe moment fled, leaving me more confused than ever.\n\n\"I am. Thank you, Thomas. I appreciate your standing up for me.\"\n\nHe bowed slightly. \"You are my wife. I vowed to protect you.\"\n\n\"Still, you have my thanks.\"\n\nHe smiled softly. \"You take care of yourself well. 'Unlicked quim,' was it?\"\n\nMy mouth dropped open. In the heat of the moment, I hadn't thought of the fact that Thomas, the Digbys, my father, and every notable noble person in the area was present when I shouted at Henry.\n\n\"My apologies for speaking so rudely, I was not... err, that is...\"\n\n\"Please do not apologize. I intend on adding that insult to my repertoire.\"\n\nHe looked about to say something else, but was interrupted by Edmund barreling across the room and complimenting him on his fine removal of the unsavoury Mr. Lawrence. I managed to turn from them without rolling my eyes. Men, I thought cynically. Men and their absolute need to appear masculine, to celebrate strength and roughhousing and defending their honour.\n\nI noted a distinct lack of Philip's presence. The lady he had been dancing with was looking at the exit. I followed her gaze and saw the back of Philip's form disappearing out the door Henry had exited from. My heart swelled with both worry and pride as I realized Philip was going after him.\n\nMrs. Digby was still close by, and she put a comforting hand on my forearm. \"How awful, Charlotte, dear. I hope that unruly young man's behaviour does not spoil the evening for you.\"\n\n\"Not at all, Mrs. Digby.\" I glanced at Thomas, who was rubbing the back of his neck as he laughed at Edmund's impression of Henry's exit. He was a surprising man, in some ways. \"It has been a lovely evening, Mr. Lawrence's behaviour notwithstanding.\"\n\n\"Thank you, dear.\" She patted my arm. \"I am so happy to have you join our family. I love my son, but I always yearned for a daughter. I know that I may never take your mother's place, but I hope in time we can have a wonderful friendship.\"\n\n\"I hope for the same, Mrs. Digby.\" I took her hand and squeezed it lightly.\n\nI could not keep from smiling. For all the frustrations and sadness I was experiencing, Mrs. Digby truly seemed to be an earnest woman. At least there was that, I thought. At least I had Mrs. Digby, for now.\n\nGlancing back at Thomas, I watched as Edmund clapped him on the back. They both laughed again. In the midst of Thomas's laughter, his eyes flicked to me, and I saw the yearning in them as he gazed at me. There was not to be a public bedding, but a bedding would still need to occur.\n\nThe thought made my stomach flip with nervousness. But somewhere below my stomach, a flicker of something else was growing, so small and light that I could easily have confused it with nerves had I not felt that same flicker in the past with Alice.\n\nMy body did not seem to be on the same page as my mind with regards to my marriage. Though, even my mind was curious to find out what would happen that night. I could no longer bring myself to deny Thomas's attractiveness.\n\nI turned to Mrs. Digby, hoping my face was not turning red. \"May I ask your leave to return to my room? I refuse to be involved in such an obscene sight as a bedding ceremony, but I should like some time to myself before...\"\n\nI trailed off, and Mrs. Digby smiled knowingly.\n\n\"You need not ask me for leave from your own wedding, my dear. But of course, you should take some time for yourself.\" She squeezed my hand, her voice lowering. \"Do not be nervous. Whatever may be, I know my son loves you. Good night, dear.\"\n\nAlice escorted me back to my room after I bid farewell to the few acquaintances I truly had wanted to see. She spoke softly to me as we walked, but I could not bring myself to respond.\n\nNo words were exchanged between us as she helped me remove the cumbersome dress and corset I had been suffering from all day. I could not stand to look at her as I waited, and instead held her hand as we sat at the edge of the bed. The room was warmed by the fire, but a persistent chill seemed to engulf my bones.\n\nI tried to see things as Alice would. She had said she hoped I would at least be happy, that though the circumstances were unfair, I should try to see the good that came of it.\n\nIt was unimaginably difficult to do that, especially with Alice sitting beside me and holding my hand. All I wanted was for her to finish undressing me, to take me in her arms and to make love to me. I did not want Thomas. I wanted her.\n\nExcept I did want Thomas. The memory of his fingers brushing against my cheek awakened an entirely new set of emotions, and the confusion from those mixed with the sadness and anger and depression had me dizzy. Those looks he had given me, those gazes and stares. The way he had defended me. Deep inside, something in me had cracked and I could no longer deny that I desired him.\n\nHow could I possibly, though? How could I possibly desire both Thomas and Alice? And how could I possibly have desire for anyone other than Alice? The guilt of wanting my own husband over my lover battled with the guilt of wanting my lover over my own husband. It seemed that no matter which side won, I would be left with nothing but guilt.\n\nEternity seemed to pass as we waited, suspended in silence and sadness, until three soft taps at the door signalled Thomas's arrival. With a final squeeze of my hand, Alice stood to open the door.\n\n\"Good evening, Mr. Digby,\" she greeted softly.\n\n\"Good evening, Miss Clayton.\"\n\nA tense moment passed. I lifted my head, feeling as though a thousand pounds of weight were crushing against me, and looked towards Alice and Thomas.\n\nShe met my eyes, and the shadow of an encouraging smile crossed her lips.\n\n\"Thank you, Miss Clayton. That will be all for tonight.\" My voice was choked, the words passing through what felt like grains of sand within my throat.\n\n\"Yes, milady.\" With a final glance, she left the room, closing the door softly behind her.\n\nThomas glanced about my room, eyes falling along the walls, to the mantel and its various trinkets, and to my dressing table. His face was serious but nervous, and when he looked at me, I felt nothing but dread.\n\n\"May I call you Charlotte now?\" he asked, breaking the silence.\n\n\"I am no longer Miss Blythe.\"\n\nHe moved through the room slowly, approaching me at the bed. My hands were cold, and I hoped he could not see how badly they were trembling. I thought perhaps he would simply push me down and have his way with me. As large as he was, any struggle I could make would be in vain, and as I was his wife, it was well within his rights to do so.\n\nMy shoulders tensed as he stepped closer, and when he was within arms' reach, I closed my eyes. However, his touch never came. Instead, he sat beside me on the bed, slightly further away than Alice had been sitting just moments before.\n\nI opened my eyes and glanced warily at Thomas. He was staring at his hands, which were clasped in his lap. Again, the room was drenched in silence, until I could no longer stand it.\n\n\"What will you have me do?\" I asked.\n\nHe turned his head to look at me.\n\n\"I must apologize,\" he said.\n\n\"What must you apologize for?\"\n\n\"That you have been made to marry me against your wishes. Knowing the unhappiness it was causing you, I asked permission that we not proceed, but neither my parents nor your father would agree.\"\n\nHis revelation rendered me speechless, and I could only gape at him. Thomas looked back down at his hands, his own despondence clear, and a surge of guilt filled my chest.\n\n\"I cannot undo our marriage, Charlotte. But I will do what I can to make it easier. I am not a man who breaks vows, and I vowed to care for you as my wife. I will never purposely hurt you.\"\n\nIt was not what I expected, nor did I understand it. Thomas had no discernible reason to act as gentlemanly as he was. As his wife, it was expected that I would handle whatever he asked of me. Yet, his concern was ensuring my comfort.\n\n\"I am sorry,\" I whispered, and I tentatively reached out and touched his hand. \"You do not deserve my unhappiness, but I cannot help feeling as I do.\"\n\n\"I know.\" He turned his hand in his lap, clasping mine in it. \"Perhaps, in time, we will build happiness together.\"\n\nHis hand was larger than Alice's, enveloping mine almost completely in a dry warmth that contrasted my chilled skin. Where her fingers had been dainty and soft, his were strong and calloused. Again, the thought crossed my mind that he could crush me, yet he was as gentle as could be. And with that, the reminder that we must consummate our marriage returned, bringing with it a nervous knot that settled in the pit of my stomach just above the renewed flicker of desire.\n\n\"May I ask a forward question?\" I said suddenly.\n\n\"Certainly.\"\n\n\"And you will answer truthfully?\"\n\n\"Of course.\"\n\n\"Have you been with a woman before?\"\n\nWhatever Thomas had expected me to ask, it was not that. His eyes widened almost comically, and it was all I could do to keep the instinctive reflex of laughter from escaping. As it stood, I had to press my lips together to keep from giggling while looking up at Thomas.\n\n\"As it happens, well, ah... yes,\" he stuttered. \"Does this upset you?\"\n\nI shook my head. \"It was just a curiosity.\"\n\n\"Will you answer truthfully if I ask you?\"\n\n\"I will.\"\n\nHe smirked, a light laugh dancing through his eyes. \"And?\"\n\n\"I have not been with a man before.\"\n\nThomas tilted his head slightly, his face serious again. \"And what about a woman?\"\n\nI froze, eyes wide. He couldn't possibly...\n\n\"Surely, you jest,\" I murmured.\n\n\"It will not upset me to hear the truth.\"\n\nHe knew. Somehow, he knew.\n\nBut what did he know? Had he heard rumours? Had he seen something, sensed something?\n\nDid he know it was Alice, and did he know she was coming with us when we left in two days' time?\n\nQuestions swirled around in my mind, my heart racing as quickly as the thoughts did. Still frozen, unable to speak nor move, I stared at Thomas helplessly.\n\nHe gazed back at me patiently, eyes steady as he looked into my eyes. Moments passed, and when my thoughts began to settle, I sighed.\n\n\"It seems that you know the answer already. I will not deny it. Does this change how you think of me?\"\n\n\"No.\" He took my other hand and brought it to the first, collecting both in his warm grip. \"It helps me to understand.\"\n\nI had thought I knew who Thomas Digby was, what he would be like to marry. It was clear that I had been mistaken. Most men would deem that I was not worthy of their understanding, nor their kindness, nor would they accept that I had lain with a woman before, yet Thomas was showing me patience and acceptance of an unimaginable level.\n\nHe looked at me with quiet longing, an expression on his face that was almost pained as he gazed at me. I did not doubt Mrs. Digby's claim that he loved me, nor Alice's statement that he was enamoured with me from before we even met.\n\n<br >It would have been much easier to hate him if he did not love me.\n\n\"Thank you, Thomas,\" I said softly. \"And thank you for defending me tonight.\"\n\n\"Thank you for the new insult. 'Unlicked quim.' I adore the phrase.\"\n\nWe chuckled quietly, and despite efforts to remain miserable, Thomas began to heal some of the cracks in my heart at that moment.\n\nHis hands shifted and he touched my cheek again. Just like earlier in the evening, a feeling of comfort and desire trickled through me. \"We must consummate our marriage, Charlotte. I know you do not like men, but will it be all right for you?\"\n\nI did not know how to tell him that I appreciated men as much as women. I certainly appreciated Thomas's handsomeness, the strength of his arms and the ruggedness of his looks. How could I explain that my love for Alice was based on her soul, not her body? That my sadness was not due to his being a man, but to the loss of my love and my freedom?\n\nHe took my silence as an answer. \"Would you prefer if we asked Miss Clayton back to help?\"\n\nI could not imagine Alice being in the room, seeing her as I submitted myself to another person. Flushing horribly red, I shook my head.\n\n\"It will be all right.\" I paused, then steeled my reserve. \"I would like to try now, in any case.\"\n\nThomas nodded, and brought his arms around me. With a tenderness I did not think possible, he brought his lips to mine and kissed me. I closed my eyes and kissed him back, willing thoughts of Alice out of my head.\n\nHis arms were comforting around me, thick and warm and strong. The feel of his lips matched: steady, powerful, but not demanding. The kiss lasted only a moment, a precursor to what was to come, and Thomas pulled back slowly.\n\n\"I think this should work better if we were to undress,\" he said.\n\nNervously, I nodded and stood up from the edge of the bed. With Thomas's eyes on me, I removed the rest of my clothing, then made to sit back down. He reached out and took my wrist, stopping me.\n\n\"May I look at you?\"\n\nI nodded again and moved in front of him as his eyes travelled down my body. He could not hide the desire from his face, could not stop himself from staring at my nakedness, drinking in the most private corners of my body.\n\n\"That Henry Lawrence was a mewling twat, but he was not wrong in his appreciation of your beauty. Charlotte, you are lovely.\"\n\n\"Thank you, Thomas.\" My voice was immeasurably quiet, and I struggled to keep it from wavering.\n\n\"May I touch you?\"\n\nOnce more, I nodded. Thomas stood and stepped closer to me. His strong hands came to my shoulders, touching my bare skin lightly as he leaned down to kiss me again. He moved slowly and carefully, his hands touching first my arms, then my waist, then up my ribs to the undersides of my breasts. He hesitated only for a moment before cradling my breasts, one in each hand.\n\nHe may not have been Alice, but my body still responded. Beneath his palms, my nipples hardened, and a shiver of anticipation crawled down my spine. Thomas explored my breasts thoroughly as we kissed, his fingers working along my flesh, tugging gently at my nipples and running along the sensitive skin between my bosoms.\n\nOnce he was finished outlining my breasts, his hands moved back down my body. Suddenly, he pulled me closer to him, our bodies pressed together as his hands wrapped around to my backside. I gasped as he gripped the flesh of my buttocks, the pressure of his fingers unexpected as they dug in.\n\nThomas continued kissing me as he released my rear, hands now travelling up my back as I pressed against him. Once he reached my shoulders again, he stepped back.\n\nHe was still wearing the clothing he had worn for our wedding, and he asked if I could assist with unclasping his cufflinks and buckles. My trembling fingers unhooked and unbuckled, and Thomas removed the rest of his clothing, saying nothing as I watched.\n\nI had never seen a man without his clothing before, aside from when William the stable boy had taken off his shirt. But that was just the top part; what lay below was a mystery. I knew what was there, theoretically. Alice and I had once found an anatomy book in the study, and we had been stricken at the drawing of the man. Anecdotally, I also knew what happened to a man's body when he was with a woman. Mrs. Clayton had taken time before the wedding to speak to me about the process, seeing as my mother was not there to do so herself.\n\nWith only an anatomical drawing and a short conversation with our housekeeper, I had conjured up an image of what I thought would be there when Thomas removed his breeches. With that in mind, I had prepared myself for what was to come, telling myself that I was not afraid and that there was nothing to worry about.\n\nThat image was not accurate in the slightest, and I was quite afraid and had plenty to worry about.\n\nWhen Mrs. Clayton had told me a man's member grew stiff, I had pictured the proportions of the drawing in the book, only poking out a bit. Neither Mrs. Clayton nor the book had given any mention to the fact that a man's member grew larger when stiff. I suddenly understood why Mrs. Clayton had said there might be pain when he stuck it inside of me. While Alice had put her fingers into me countless times, her fingers were not so thick as the bulging appendage now before me.\n\nI am not sure what the expression on my face looked like, but Thomas cleared his throat uncomfortably and I tore my eyes away from the protrusion between his legs. As I met his eyes, the discomfort in his face changed, and he laughed.\n\n\"I did not doubt your honesty that you had never been with a man before, but now I am most certain that you have not.\"\n\n\"It is not what I expected,\" I admitted. \"I thought... or, well, rather, I did not think...\"\n",
        "My words trailed out as I stuttered, and Thomas took pity on me. He reached forward and brought his arms around me again, pulling me close to him. My breasts met his chest, and his manhood touched my stomach. It was warmer than the rest of him, hard and smooth against my skin. As we touched, I felt the telltale signs of wetness between my legs. It was not possible for me to deny any longer that I wanted Thomas's love.\n\n\"I have heard the first time may be difficult for a woman,\" he said. \"Charlotte, I vow to you, I will try to keep you from pain.\"\n\nHe kissed me again, then guided me onto the bed and lay me on my back. Once there, he kissed me once more and resumed touching me. Again, he teased my breasts, his large hands gripping and releasing them, before his hand moved down my stomach and to my mound.\n\nA smile crossed Thomas's lips as he felt the dampness growing there, and his finger traced my folds lightly before nestling between them. His mouth commanded my attention momentarily, distracting me from the finger that dipped further into my crevice.\n\nWhen his finger breached my entrance, a staggered gasp left my lips. It did not hurt, much like Alice's fingers had never hurt, but it did not feel the same as when Alice's hands were there. Thomas moved his hand slowly, probing me with one finger at first, and then with two. I could not stop myself from writhing slightly beneath him when the second one entered.\n\n\"Are you in pain?\" he asked, his lips brushing mine as he spoke.\n\n\"No,\" I answered. \"No, it just feels... well, I do not know how to describe it. Different, I suppose.\"\n\nThomas did me the courtesy of not asking what it was different from. He kissed me softly, still gently moving his fingers inside me.\n\n\"It will be easier if you relax,\" he murmured.\n\nI tried to do as he said, willing every muscle of my body to unclench, but it was much easier to request than to do. Though the feeling of his hand working against me felt nice, the nerves and the sadness and the stress of the entirety of the past month were still heavy on my mind.\n\nWhen Thomas realized I was as relaxed as possible, given the circumstances, he withdrew his fingers. With a final tender kiss, he pulled away and brought both hands to my thighs, guiding them apart, and moved his body between my legs.\n\nI glanced down at his manhood. It was close to my mound, and from where I lay it appeared even more intimidating than it had when Thomas stood in front of me. I swallowed and attempted to relax, though the tightness in my hips and back would not dissipate, even as Thomas lifted my legs and positioned them on either side of his thighs.\n\nThomas held himself over me with one arm, bringing the other down to his manhood. Closer and closer he positioned himself, until I felt the tip of his rod at my entrance, ready to breach my hole and commit me as his wife for eternity. In that moment, even Thomas appeared unsteady, and he looked into my eyes with a pleading desperation.\n\n\"Yes,\" I said simply. The buildup was becoming maddening, and I wanted him to continue before I lost my nerve.\n\nProceed he did. Suddenly, the tip of his rod was pushing past my entrance, and Thomas's sex was entwined in my own. I waited for the pain to begin, but as he delved deeper and deeper inside of me, it never came. Instead, my body began to feel strangely full, and then all at once empty as Thomas pulled back.\n\nI looked down at the joining of our bodies. The tip of Thomas's manhood remained inside me, and he began sinking into me again. The feeling of fullness increased, further that time, and before I knew it, Thomas's pelvis was flush against my own. I breathed deeply, staring at the meeting of our bodies, my lips parted as I took in the sight. Unlike with Alice's fingers or even his fingers, every inch of my tunnel was stuffed, and I could feel myself surrounding his manhood. My lips were stretched open, gripping him as though to keep him there, my body wanting his presence more than I did.\n\nThomas pulled back again, and burrowed inside me more quickly on the return. A small puff of breath escaped my lips as he plunged back in, the very air from my lungs being pushed out as his arousal took its place inside me. Again, and again, he withdrew and re-entered, more and more quickly each time.\n\nHe shifted then, elbows resting on either side of me as his rhythm increased. Not only was his member forcing breath after breath of air out of me, but his torso was now crushing against my ribs. I tried to move my legs so that he could better access my entrance without lying against me, but he outweighed me by too much. Resigning myself to taking shallow breaths as though I was wearing the tightest of corsets, I lay on the bed, feeling the alien sensation of my body being penetrated by him.\n\nIt was an overwhelmingly good feeling. The absence of pain and presence of pleasure was surprising to me, after expecting and being told for the entirety of my life that a woman's duty to her husband was at worst, painful, and at best, neutral. No woman was expected to enjoy it. I contemplated the conundrum, wondering if perhaps something was wrong with me.\n\nAs his shaft pistoned in and out of me, Thomas's breathing grew heavier. The sounds of his hips meeting mine, skin slapping against skin, filled the room and mixed with his grunts. All at once, his thrusting grew frenzied. This must be it, I mused, the part where he finishes.\n\nI was correct, and moments later Thomas stilled and I felt his manhood spasming. Inside me, a sudden warmth and wetness as his seed spilled into my womb. I closed my eyes briefly as I felt it, yet another foreign sensation inside my body, and wondered if that seed would plant and make me a mother.\n\nThomas lay on top of me for a time, before sitting up and removing himself from inside me. He brushed the hair off his forehead and looked at me, lying naked beneath him.\n\n\"Are you hurt?\" he asked.\n\nI shook my head.\n\n\"Did it... was it acceptable?\"\n\nI had no inclination of what he was asking, so I simply nodded.\n\nConcern crossed Thomas's face, but he did not ask anything further. He kissed my forehead lightly and moved off the bed, passing me my chemise as he pulled his clothing on haphazardly.\n\nI was unsure if Thomas would wish to spend the night in my room, but it did not seem he expected to. Neither of us seem inclined to talk or continue on with further lovemaking, and I felt a pang of gratitude towards him for his consideration that I would want to be alone. Once he was dressed, he took my hand and kissed it before bidding me good night.\n\nOnce he had left, I got out of the bed. I had started the day a virgin and ended it a woman. It had not felt the same as my lovemaking with Alice. The place of bliss was gone, that place I had found with her the very first time we were in each other's arms. Perhaps it was because I did not love Thomas the same way I loved her. My body was frustrated, expecting the powerful ending it was used to, but did not receive. Looking at myself in the mirror, I did not notice any change, but I felt an entirely different person.\n\nTurning back to my bed, I made to lay down again, but stopped quite suddenly.\n\nThe blankets were pushed back and the sheets were exposed. Where I had lain with Thomas, a small spot of moisture showed on them, but it was what was not present that concerned me.\n\nMrs. Clayton had told me I would bleed. Every virgin does, she said. But the sheets were white, aside from that spot of wetness.\n\nI began to panic. The maids would see the sheets the next day, and gossip would follow as they told whoever would listen that I did not bleed on my wedding night. People would question whether the marriage was legitimate, and my father would be furious at the thought that we did not consummate. Worse, they would say that I was not a virgin, that Thomas had married a sullied woman.\n\nI could imagine Henry Lawrence hearing the news and twisting it, construing a story that he had me before my husband. Thomas had defended me to him; would he do the same again, if my virginity was suspect? I had been truthful when answering his questions. Perhaps he would trust if I denied such charges against me.\n\nBut it was not just Thomas that I had to worry for. What about Mrs. Digby, my brothers, my father? What about Alice?\n\nNone of it was true. I was a virgin, and we had consummated the marriage. What was I to do?\n\nI contemplated calling for Alice to ask her help, but that would only lead to questions. Instead, I closed my eyes and tried to think of what she would tell me.\n\nShe would be sensible. \"Perhaps you did not bleed because of our lovemaking. Perhaps that is why it did not hurt.\"\n\nYes, that was possible. But what to do?\n\n\"Thomas did not look at the sheets. The maids would not know if the blood came from something else.\"\n\nOh, Alice. Even in my mind, she was the most intelligent person I knew.\n\nI searched my dressing table for a sewing needle and found one with ease. Rushing back to the bed, I pricked my finger and let the blood drip onto the sheets. Then, putting the needle back where I found it, I lay back down and tried to sleep, but succeeded only in staring at the ceiling until light began breaking through the window.\n\n**\n\n\"Charlotte, you must wake up.\"\n\nI was awake, and had been since Alice had entered the room. At some point during the long night, I had dozed off, but it must have only been a short while before she arrived. I remembered the stretches of light as dawn broke, shadows on the ceiling lengthening and withdrawing as my mind raced unforgivingly.\n\nMy eyes were still closed, however, and I did not open them as Alice moved quietly around the room. Once upon a time, she would have crawled onto the bed, nuzzling me awake as I pretended to sleep, and I would only react when her hands found the slick eagerness waiting for her between my legs.\n\nI did not expect Alice to play that game, and was not pretending to sleep in the hope that she would. Rather, it was the yearning to speak with her, to tell her of the previous night, to express my fears that I was strange for feeling no pain. I wanted to confess about the blood, ask for her advice, feel her comfort. It was all of those thoughts and emotions that kept me from opening my eyes, because while I wanted nothing more than to share those things with Alice, I felt that I couldn't.\n\nShe finally came to the edge of the bed and gently shook my shoulder.\n\n\"Charlotte, I know you are not really asleep. You know I cannot wake you as you wish.\"\n\nAnger flared in my heart. \"I do not wish for that,\" I muttered. \"I wish to stay in bed today.\"\n\n\"Are you ill?\"\n\nIll from heartbreak, perhaps.\n\n\"No.\"\n\n\"Mrs. Digby has requested to see you this morning. Will you have me tell her you are too tired?\"\n\nClenching my jaw, I opened my eyes.\n\n\"No, thank you. I will attend.\"\n\nAlice looked at me with concern as she helped me out of bed.\n\n\"Are you angry with me?\"\n\n\"No, Alice. I am fine.\"\n\n\"Speak with me. How are you feeling? Was last night\u2014\"\n\n\"It was fine, thank you. I am feeling well today.\"\n\nShe looked stricken at my response as I walked to the dressing area, a black cloud hanging over my head. After a moment, she followed, her head bowed.\n\n\"Very well. What dress would you like to wear today?\"\n\nThe following days were painfully lonely. I could not bring myself to speak with Alice about anything, and the further I withdrew from her, the lonelier I felt. But it would not be fair to confide in Alice. It was easier to isolate myself, to lick the wounds of my broken heart on my own, than it was to open them all over again.\n\nTo Alice's credit, she treated me kindly. She did not share her own pain with me, or direct her anger towards me. I knew she was frustrated\u2014one does not have a friendship such as ours without sensing the other's emotions\u2014but she kept it to herself.\n\nThomas came to my room once more before we left my home forever, with much the same results as his first visit. He did not ask again if I would like Alice to come to the room, though his brow still furrowed in concern when he finished. Again, I was confused by his question of if our joining had been acceptable. It was pleasant, I had said, but still, he seemed confused.\n\nIt would be a three-day journey back to the Digbys' estate. The night before we left, my father held a large feast. It was merry, and lively, and as sincere as a pageant wagon show. I wept after Alice had left my room, my belongings already packed and ready to be loaded into a wagon. Philip and Edmund had put on brave faces, but even my brothers could not hide their sadness. I was being torn from my family, displaced from my home, and entering a world where I knew no one and nothing.\n\nWe were to leave before the first light of day. Once the wagons were packed and our final farewells said, Alice and I climbed into the carriage with Mrs. Digby as Thomas and Mr. Digby mounted their horses to ride alongside.\n\n\"It must be so difficult, dear,\" said Mrs. Digby as we rattled along the road. \"I do not blame you for being somber.\"\n\nI tried to smile politely. \"Thank you, Mrs. Digby. Endings and beginnings are bittersweet. I am sure I will feel better shortly.\"\n\nThat evening, Thomas and I shared a bed for the first time.\n\nHe was in good spirits after the day's journey, and as he joined me in the bed, I expected he would pull me to him. I was tired, still saddened by our departure, but knew it was my duty to him and so was prepared.\n\nWhen he came into the room, I was already in the bed. It was chilly in the room and I had left my shift own, drawing the blankets up as I waited. I watched as he undressed, the small spark of excitement overtaking the sadness and tiredness.\n\nHe crawled into the bed next to me, a serious look on his face. I blinked at him expectantly, waiting for him to reach for me, embrace me, undress me.\n\nThomas did reach for me, but only to draw me close and kiss my forehead.\n\n\"Sleep well, Charlotte.\" Moments later, his eyes were closed and he drew breath deeply.\n\nTired though I was, I stared a long time at Thomas's sleeping form. I did not know how to interpret his behaviour, nor my reaction to it. I was not relieved or happy that he did not want to make love to me. I was concerned, wondering if I had done or said something wrong. How was I to find love and happiness in my marriage if Thomas did not want what every man wanted?\n\nThomas did not try to make love to me even once during our journey. I did not know what to think of it. Mrs. Clayton had said he would probably want it every night, perhaps even more than once a night. On top of all my despair at leaving home and having to act as a proper lady, I was certain I had done something wrong and that Thomas did not want me. I was torn between wanting Thomas's attention and wanting to be left alone, unhappy with either outcome and yet craving both.\n\nI was certain he still wanted me. He must, I thought. It felt like every time I saw him, I caught him looking at me with that yearning expression. I could almost see him imagining me naked, his eyes tracing the curves of my breasts. Yet he did not reach for me, aside to kiss my forehead. I was frustrated, confused, and guilt-ridden. Lonely and dejected, and so homesick that I could cry.\n\nAfter breakfast on the final day of travel, I determined that perhaps I needed air. Thomas had been kind and understanding thus far, so I thought he may allow me more freedoms than I had thought.\n\n\"Thomas, may I ask you for a favour?\"\n\nMrs. Digby was just ahead of me, almost ready to enter the carriage, when I stopped in front of Thomas. He was just about to mount the horse, but turned to me eagerly. His face betrayed his delight at my approach.\n\n\"Of course, Charlotte. What would you like?\"\n\n\"I was wondering, perhaps, if I could ride alongside the carriage with you today.\"\n\nOut of the corner of my eye, I saw Mrs. Digby's mouth drop. It was not unheard of for a lady to ride a horse, but it was also certainly not the most proper of behaviours. I hoped she would not judge me too harshly.\n\nThomas's expression was frozen in a half-smile for just a moment before a full grin broke out on his face.\n\n\"Darling, I would sincerely enjoy that. Father?\" He turned to Mr. Digby, who had just approached his horse. \"May we make a change today? My wife would like to ride. Perhaps she could borrow your horse.\"\n\nMrs. Digby was certainly questioning my sanity, but declared it was a lovely idea. Mr. Digby tried not to show his relief at being able to ride in the carriage, but it was certainly there. I panicked for a moment about Alice, as without me in the carriage she would need to sit in the wagon with the other staff, but she grinned joyfully as she settled beside Jack the valet.\n\nThe sadness and frustration disappeared as soon as Thomas finished helping me onto the horse and I was able to trot alongside the party. The air was fresh, a relief from the stuffiness of the carriage, and the quiet of the countryside was a relief from Mrs. Digby's chatter.\n\nIt was the quiet that I needed most, as it turned out. With only the noise of the carriage and wagons creaking along the road, and the soft murmur of the staff chatting idly, I was able to calm my thoughts for the first time in days. My heart still ached and the sense of isolation did not disappear, but I felt at peace for the first time since that evening in my father's study. I knew it would be short-lived, but it was a relief.\n\nThomas did not say much as we rode. I do not think he knew what to say. His horse gave him some difficulties, I think sensing the same nervousness in him that I sensed. It was not that I didn't care about what Thomas may have been feeling, but I was so engrossed in my own emotional turmoil that I could not think of how to offer comfort to him. We rode in silence, and I watched the countryside go by.\n\nAfter a while, I grew bored of the steady pace. We came upon a wide field bordered by trees, not unlike the woods near my home. I gazed longingly at the field, wishing to run through it and explore the distant woods.\n\nIt popped into my head suddenly. Why shouldn't I? Why shouldn't I take this horse and run, disappear into the trees and live amongst the wilderness? I could hunt. I could fight, protect myself. I could go, run, disappear and never return.\n\nThomas was just ahead of me, and I hurried to catch up to him. He looked at me when I trotted alongside him.\n\n\"Thomas, I am going to run the horse.\"\n\n\"What? Charlotte, wait\u2014\"\n\nHis response did not reach my ears as I directed the horse towards the fields alongside the road and began galloping.\n\nThe beast had been mild-mannered throughout, but as soon as we began running, its spirit broke free. Wind whipped my hair back from my head and the scent of the grass filled my nose as we raced forward. For a few moments, I felt untethered, unworried, and unbreakable.\n\nI did not intend to disappear. The thought may have popped into my head, and as wildly invigorating as it would be to survive on my own, I knew I was giving myself more credit than was due. But the taste of it, the very taste and feel of a moment's freedom as we broke through the tall grass and the world flew by, was what my spirit needed.\n\nLeaving Thomas was not an option, just as leaving Alice was not an option. Neither of them deserved my desertion, no matter my own unhappiness, but I needed that moment. I needed that wind, and that thought, that option of running and running until I could not be found. It was enough to lift me, to comfort me, to replace the need to seek comfort from those around me.\n\nAs we reached the edge of the woods, I had the horse slow until we were nearly stopped. From behind me, I heard hooves slowing, and Thomas's horse came up beside us.\n\nHe looked over at me and I smiled, truly smiled at him, for what may have been the first time in our marriage. Thomas's mouth was open, and his indignation turned to astonishment, before finally turning to laughter.",
        "\"You worried me,\" he said.\n\n\"I apologize.\"\n\n\"No need. You looked beautiful riding through the field like that.\"\n\nHis words made me blush, but I could not stop myself from smiling. He did not need to know what had prompted the sudden decision, and I would not ever tell him.\n\n\"I used to ride often at home,\" I said. \"My brothers and I were always racing.\"\n\n\"I did not know that.\" Thomas turned his horse, and we walked them slowly towards the road as we talked. \"We should ride together when we are home. There is a horse I have in mind for you, a perfect match, I think.\"\n\n\"Is that so?\"\n\n\"Yes. It can be a bit tricky to control, but I believe you could. And it is beautiful. Pure grey, with a mane like silk.\"\n\nMy own horse. I smiled at the thought.\n\n\"Would you race me back?\"\n\nHe grinned and guided his horse beside me. The race back to the road was all too short. As we returned to the party, I caught Alice's eye from where she was sitting with Jack. She grinned from her spot on the wagon, her eyes sparkling.\n\nThomas and I raced our horses two or three times more on the journey, though when we arrived in the nearest town to the Digbys' estate, Mrs. Digby insisted we stop and that I return to the carriage. I obeyed dutifully, climbing in with Alice following behind me.\n\n\"I did not know you rode, my dear,\" Mrs. Digby said.\n\n\"Occasionally,\" I replied. \"I hope I did not upset you by asking to ride today.\"\n\n\"Not at all. I know how stuffy the carriage can be, especially if you are not used to travel.\" She smiled politely.\n\n\"Thank you, Mrs. Digby. I do appreciate time outdoors, and it was lovely to spend some time with Thomas.\"\n\n\"Oh, if you love to be outdoors, you will adore the garden at home.\" Excitement crossed Mrs. Digby's face. \"Mr. Lancelot Brown\u2014Capability Brown, he calls himself\u2014the most distinguished landscape architect in the country, plotted the entire thing. It's the envy of all the neighbours. I'll plan an afternoon tea for us so you can meet some of the ladies nearby. Oh, it will be such an event. The flowers will be...\"\n\nMrs. Digby kept talking as the cheer I'd found during my ride began to trickle out of me. Thomas may have promised me a horse, and that we could ride together, but it was sure to be an uncommon occurrence. The expectations were clear from Mrs. Digby's chatter: I was to be a lady. I was to act as a lady would. I was to hold social events and conduct myself in a manner befitting the Digbys' status.\n\nThe arrival at the Digbys' country house was mildly chaotic. As soon as we disembarked, Mrs. Digby began giving orders, and a team of servants obeyed her every command. I waited politely outside the carriage with Alice until Thomas returned from stabling his horse and took my arm. His face was bright, eyes filled with excitement as he brought me to the house.\n\nHe showed me to the room that would be mine, a door down from his own.\n\n\"Mother commissioned the furniture especially for you,\" Thomas said. \"A man named Chippendale. She says he is the most renowned furniture designer in London.\"\n\nI nodded and suppressed the urge to laugh. Mrs. Digby should have spared the expense, as the supposed intricacies of Mr. Chippendale's designs were lost on me. Edith Hathaway, who was likely already imagining the commissions she would make to redesign my father's home, would have been more impressed.\n\nThomas escorted me through the rest of the house. Everything was larger and more expensive than what had been in my home. Mother would have not cared for much of the grandeur on display, but there was an extravagant clock that would have made Edith green with envy. I was more envious of the room dedicated solely to books; the Digbys owned more than I had ever seen in my life.\n\nAs we strolled through the house, I began to feel overwhelmingly homesick. Aside from Mrs. Digby and Alice, I did not know any other people there. I did not know how I was to spend my days, nor would I have any friends or acquaintances to visit with.\n\nThe grounds were as lovely as Mrs. Digby had made them sound. The gardens were meticulously kept, and flowers of all colours bloomed prettily everywhere we turned. There were thick woods bordering the property, and I longed to rush into them to see what treasures lay there. We walked down to the stables, where Thomas greeted everyone happily as he introduced me to the men there.\n\nThen, the pasture. Thomas let go of my arm and pointed to a horse grazing a short distance away.\n\n\"That one,\" he said. \"You will love it.\"\n\nI looked at the horse. It was every bit as beautiful as he said, nearly glowing in the soft afternoon light. I tried to smile, but the sight of the animal did nothing to bring happiness to me. It was just another freedom that was being torn from me.\n\nIt did not go unnoticed by Thomas, who tenderly brushed his fingers against my cheek as he regarded my sadness.\n\n\"Earlier today, you were as happy as I've ever seen you. Now you have withdrawn. What have I said to make you unhappy, Charlotte?\"\n\nI shook my head. \"You have said nothing wrong. Your home is beautiful.\"\n\n\"Our home. This is your home now, as well.\"\n\nI nodded. \"Yes. My home.\"\n\n\"And the horse. You seemed so excited earlier.\"\n\n\"I am pleased, Thomas. It is beautiful. Everything is lovely.\"\n\n\"I do not believe you.\"\n\nI sighed, looking up at him as I tried to plead with my eyes for him to let the conversation go. \"I am happy to be here.\"\n\n\"You are not. Charlotte, do not lie to me.\" He took my hand, gripping it firmly. \"You are unhappy. I know you are. Please do me the courtesy of being honest.\"\n\nThe words stung and I had to look away. Just like everything else, I was failing at being a wife.\n\n\"At my home, I could ride horses or go through the woods or come and go however I pleased. Here, I cannot. Here, I have expectations of me. I am first and foremost your wife.\"\n\n\"You are, first and foremost, Charlotte,\" he retorted. \"You are not some inanimate object that I wish to display. I do not wish to own you.\"\n\n\"It does not matter, Thomas, do you not see that? You are just one of the people whose expectations I must meet.\" Tears welled in my eyes and I looked away, focusing on the beautiful grey horse in the distance. \"I am a failure as a wife. You deserve more than what I am capable of giving, and I will only let you down.\"\n\n\"Charlotte...\"\n\n\"I would like to return to my room, please.\"\n\nWe walked back to the house in silence, and Alice was waiting to prepare me for dinner. We returned to my room promptly and she began combing out my hair.\n\n\"Honestly, Charlotte, had I known you would be riding today, I would have done this differently,\" she said as she tried to untangle the knots.\n\n\"I did not plan to,\" I said.\n\n\"I am glad you did. You seemed to enjoy it.\"\n\nWhen I did not respond, she sighed.\n\n\"Charlotte, please speak with me. You are still my dearest friend. I feel that we have lost our closeness and I do not like it.\"\n\n\"Alice, I love you dearly. I feel as though sharing my misery right now would only serve to hurt you.\"\n\n\"It hurts me more to see you so dreadfully unhappy.\" She put my brush down and knelt beside me, taking my hand. \"Our history together is no matter. Please, share your misery with me. Let our souls be close if our bodies cannot.\"\n\nHow could I refuse anything to my Alice? Before I was aware of myself, I had begun telling Alice every thought and action and fear and sadness that had befallen me since the morning of the wedding. I told her of my wedding night with Thomas and how he knew I had been with a woman before. I told her that it hadn't hurt, that I hadn't bled, and what I had done to my sheets.\n\nShe giggled at that admission, having seen the sheets herself the following morning. I told her that laying with him was not the same as laying with her, that the explosive pleasure we both felt was not present with him, and that he had only come to me one other night since we wed.\n\nAnd I told her of my moments of joy with Thomas that day, how freeing it had been to ride again, and how the world had begun closing in on me as he showed me around. I told her of the woods, and how I longed to see them, and how alone I felt. The confusion of wanting and not wanting Thomas, the duelling relief and concern of not having to make love to him, and the crushing sense of failure I felt as his wife.\n\nAnd I cried, of course I cried, and she held me and comforted me as only Alice could.\n\nWhen I was through with my sniffling, Alice returned to fixing my hair.\n\n\"Perhaps it was the travelling,\" she said.\n\n\"The travelling?\"\n\n\"Yes. Perhaps he was too tired. Watch, I think he will come to you tonight, and if not tonight then most certainly tomorrow.\" I did not respond, and she continued brushing my hair out. \"Perhaps Thomas would take you into the woods, too.\"\n\nPerhaps he would have, had I not confessed to him how horrible of a wife I was.\n\n\"He will come for you, I am certain,\" Alice continued. \"And he will make you see you are not a failure. He only wants your happiness, Charlotte.\"\n\nI did not believe her in that moment, but Thomas was entirely capable of surprising me. I should not have underestimated him. Had I been less narrow-minded, I may have seen that Thomas was far more accepting of the unusual than I thought him.\n\n\"I have prattled on too much, Alice. Tell me of your day. I saw you whispering with Jack.\"\n\nShe giggled, flushing as I mentioned his name.\n\n\"Charlotte, he's such a character. He makes me laugh.\"\n\n\"Should I be looking to arrange a wedding for the two of you, then?\"\n\nShe waved her hand. \"It is too early for that. I do not know if he would even want to wed me. The stories he tells! He is a... a gallanting kind of man.\"\n\n\"He has been around, you mean.\"\n\n\"Well, he may piss more than he drinks, but the stories he tells, Charlotte... he is certainly not a gentleman. And I truly think I like that about him.\"\n\nShe regaled me with some of the stories Jack had told her, and I was certain he must have exaggerated some of them, but he sounded like the perfect match for Alice.\n\nLater that evening, Alice had come to my room to help prepare me for sleep. It would be my first night there, and I was not used to the shadows cast about the place. They made me nervous, and Alice's presence was a comfort. We were sitting on one of Mr. Chippendale's beautiful settees, talking quietly by the fireplace and avoiding the chill of the room, when the telltale three soft knocks came at my door.\n\nAlice grinned. \"I told you, Charlotte.\"\n\nMy heart had begun pounding, but I smiled in spite of it. \"I suppose you were right, then.\"\n\nA log in the fireplace cracked as Alice patted my hand and went to the door.\n\n\"Good evening, Mr. Digby.\"\n\n\"Good evening, Miss Clayton.\"\n\nThomas stepped into the room. He had an odd look on his face, and I was unsure of what it meant. Nevertheless, I knew what he desired.\n\n\"Thank you, Miss Clayton. That will be all for tonight.\"\n\nAlice nodded and made to leave, but Thomas stopped her.\n\n\"No, not yet. Please stay a moment, Miss Clayton.\"\n\nAlice froze, then glanced back at me as though I had some inkling of what was happening. I looked at her helplessly as Thomas closed the door and turned the lock.\n\nMy heart dropped, and then began pounding so loudly I was certain it could be heard across the room. I trembled, suddenly cold, despite the fire nearby. A tense moment passed where both Alice and I looked at Thomas, who seemed to be wrestling with something in his mind. Finally, he motioned for her to join me in the sitting area.\n\nTentatively, Alice stepped towards me and sat primly at the edge of the unoccupied chair. Thomas stepped in front of us, made to sit next to me on the settee, then changed his mind and remained standing.\n\nHe turned to me first, opened his mouth to speak, then closed it again and turned away. Baffled, I glanced quickly at Alice before speaking.\n\n\"Thomas, what is the meaning of this?\"\n\nHe inhaled deeply, then turned back to me. Again, he looked as though he was about to speak, then froze. He held my eye for a long moment, then turned to Alice.\n\n\"Miss Clayton, I require your assistance.\"\n\nShe looked shaken, but nodded. \"Certainly, Mr. Digby.\"\n\n\"I need you to show me how to make my wife react the way she did with you, that day in the woods by the creek.\"\n\nWhatever we had expected, that was not it. I could not imagine that my face looked any different than Alice's, which was wide-eyed and jaw-dropped. As she processed his words, she looked back at me wildly.\n\n\"I thought you said it was a badger!\"\n\n\"It was a badger! I saw the damned thing!\"\n\n\"I was not near the badger,\" Thomas interrupted. \"I had not meant to follow you into the wood, I had just gone to explore. I came across you on the other side, and had intended to turn back so you would not think I was interrupting when I saw you kiss Miss Clayton.\"\n\n\"And now you want... you want her to do what, exactly?\"\n\nThomas cleared his throat, then knelt in front of me and took my hand.\n\n\"When I saw you in the woods, stomping around in an old wool dress and free of care, I thought it must be fate that our parents decided we should wed. I thought you were the perfect woman for me, that you would love the grounds here, that you were different from all the women who just wanted to sit indoors and sew and gossip.\n\n\"And you are. I know that you are not like that. And then I saw you kiss Miss Clayton and I did not know what to think. I told myself to leave, that I should not spy as I was, but then your hands disappeared into her dress and I could not move. And when I realized you were happy, and enjoying whatever it was she was doing to you, I thought I was about the luckiest man on Earth. That you would enjoy\u2014\"\n\nHe stopped suddenly and glanced at Alice, as if remembering she was there. He did not need to finish what he was saying; we knew what he meant. Looking back at me, Thomas continued.\n\n\"And then you grew more and more unhappy. A million times, I wanted to tell you what I thought, but we were never alone. I thought perhaps once we were wed, I could tell you all these things. That I did not want you to be just another lady, that I was excited that you would enjoy... well. I wanted to make you react the way Miss Clayton did, but I could not, and I do not know why.\"\n\n\"I do not know either,\" I whispered. \"It does not feel bad, Thomas. It is just... not the same.\"\n\n\"I want to make you happy, Charlotte. Your concerns about the expectations of you, about not being free to do as you wish\u2014those I can show you are unfounded with time. But to pleasure you in bed\u2014that I thought I knew how to do, but I have failed. You have not failed me in any way, you must believe me. I know you do not love me, and perhaps you never will, but I wish to do all I can to make you happy.\"\n\nHe turned back to Alice, still holding my hand. \"Miss Clayton, I feel as though we have the same wish. Am I wrong in my assumption?\"\n\nAlice looked at me, and suddenly I saw the sparkle in her eye as she pressed her lips together. The damned girl was trying not to laugh!\n\n\"No, Mr. Digby.\" Even with her soft response, I could hear that she was holding back laughter.\n\nThomas seemed not to notice. \"Will you help me, Miss Clayton?\"\n\nHer face broke into a smile as she began to giggle. Thomas looked devastated for a moment before Alice nodded eagerly, grinning widely.\n\n\"Yes, Mr. Digby. Of course.\" She stood up suddenly, laughter still bubbling from her throat. \"Charlotte, did I not say? Did I not tell you that men aren't so bad, and that Mr. Digby was a good match for you, and that he would be here tonight and that he wanted to make you happy?\"\n\nThomas looked to see my reaction. I had pressed my lips together, and I knew my chin trembled, but I tried to compose myself.\n\n\"Yes, you did,\" I said.\n\nAs I met Thomas's eyes, I could not keep myself from starting to giggle, and soon I had lost my breath from laughing so hard. When tears began streaming from my eyes, I took gasping breaths to calm myself.\n\nThomas still looked confused, but a smile had broken his face as well.\n\n\"But Alice, what about... well, you know.\"\n\n\"What is it that I know?\"\n\nI did not want to state it outright with Thomas in the room, but I was worried about the potential harm our actions could cause between Alice and Jack. Pursing my lips, I thought for a moment.\n\n\"You spoke earlier of some stories.\"\n\nShe frowned for a moment, then understood. \"Oh! Do not worry about that, Charlotte. I told you, nothing has happened. Frankly, even if something were to happen between us, he would likely beg for me to share details.\"\n\n\"Do you speak of Jack?\" Thomas asked.\n\nWe both looked at him in surprise. Thomas chuckled.\n\n\"Believe only half of what he says, but the rest is true. He is the last person who would be astounded by what I have proposed.\"\n\nAlice smiled. \"See, Charlotte. You should listen to me more often.\"\n\nWe broke into gales of laughter again, and I turned to Thomas.\n\n\"I am sorry,\" I gasped. \"Truly, Thomas. My mind has been all too many places and I have been unable to break my sadness, but you have been so kind and so truly good to me. I have not been deserving of such treatment\u2014\"\n\n\"You most certainly are deserving of kindness and happiness,\" he interrupted, standing as he spoke. \"Now, I am done discussing this. I am done with laughter. Miss Clayton, if you would be so kind as to finish undressing my wife.\"\n\nWith a gleam in her eye that was usually reserved for when she looked at me, Alice nodded. \"Yes, Mr. Digby.\"\n\nHer gaze lingered on him, and I simply knew Alice was hiding her excitement for the situation. She could not hide the reddening in her cheeks, the way she licked her lips, or the direction of her eyes. Taking my hand, Alice brought me to my feet and removed the rest of my garments, though she simply piled them on the settee instead of putting them away as she generally would. I shivered as her fingers brushed against my skin, already hungry with anticipation, and could not keep my eyes off Thomas. He, in turn, had a serious look to his face as he watched Alice and me, staring as she worked, taking in the curves of my body as they were revealed.\n\nOnce I was naked, both Alice and I looked to Thomas. He stared a moment longer, drinking in my body, then looked into my eyes with an intense consideration.\n\nHis voice came out deeply and hoarsely. \"Miss Clayton, if you would, please escort my wife to the bed.\"\n\n\"Certainly, Mr. Digby. How would you have her positioned?\"\n\n\"Lay her on her back, please.\"\n\nThey spoke as though I were barely present, and it excited me. Alice took my arm and led me to the bed, laying me down as Thomas directed. She fluffed a pillow under my head, ensured I was comfortable, and then stepped obediently away from the bed and looked to Thomas as he moved to the end of the bed.\n\nHe stood with his hands behind his back, staring down at me, then motioned for Alice to join him. She went next to him and regarded me in much the same way.\n\n\"Miss Clayton, do you believe it would be more effective for you to direct me on what to do, or for me to watch and follow your example?\"\n\nAlice's eyes sparkled as she considered the question. \"Well, Mr. Digby, perhaps we should test both methods.\"\n\nOh, dear.\n\nThomas grinned, his teeth glinting in the low light of the room, and I felt my stomach flutter. I was as helpless as a rabbit, and not only was he a wolf, but there was a pair of them.\n\n\"That is an excellent suggestion, Miss Clayton. Why don't we begin with observation? And don't be shy. Do exactly what you would have in the past, and tell me exactly what you are doing to her.\"\n\n\"Yes, Mr. Digby. I hope you do not mind, but I will need to remove my dress as well.\"\n\nThomas, of course, did not mind.",
        "When Alice was suitably naked, she climbed onto the bed and straddled my hips, effectively pinning me to the bed and informing me of how excited she was all at once. She leaned down, her face coming closer and closer to mine. I parted my lips, waiting for her kiss, only to have her stop when she was so close that I could feel her breath.\n\n\"You see, Mr. Digby, I begin by kissing her. She likes soft kisses at first, but then to have her tongue touched like this.\"\n\nHer lips pressed against mine and I sighed in relief, rejoicing in the feel of her mouth. Fingers touched my chin and tilted my head up more, and then her tongue was slipping past my lips and twirling with my own. Thomas moved from the end of the bed to the side, to better see what Alice was doing.\n\nShe pulled back suddenly and turned to him. \"Then, I begin to touch her breasts. It is very important, you see. We know that men love to touch women's breasts, but many of them do not know it feels very nice for us as well. And Charlotte, she has the most sensitive little nipples and the most beautiful breasts, don't you think? You would be remiss not to suckle them, at least a little bit.\"\n\nI watched as Thomas listened. His lips were parted, and he nodded absentmindedly in agreement with what Alice said. As she spoke, her hands cupped my breasts, tweaking my nipples and pinching them between her forefinger and thumb. Thomas inhaled sharply, shifting where he stood as his eyes followed her hands. I gasped as she rubbed my breasts, the feeling familiar and altogether foreign, like a distant memory just barely fading back into existence. Her thumbs grazed my nipples as if to punctuate her sentence, and then her head was lowering, her lips trailing along my cleavage.\n\nI could not keep myself from moaning when she finally took my nipple into her mouth. My head tilted back against the pillow, eyes fluttering shut as Alice licked and sucked, her hand holding my breast firmly. The sensation was pure magic, each action she took sending a tickle of warmth from her mouth to between my legs. I squirmed beneath Alice's hips.\n\n\"Please, Alice,\" I gasped.\n\nShe pulled her mouth away and looked at Thomas. \"And that, Mr. Digby, is when you know she is so wet that you could simply slide inside of her without so much as a moment of resistance.\"\n\n\"Is... is that so?\" Thomas said. His voice was strained, as were the front of his breeches.\n\n\"Yes, I certainly imagine so, sir. But you can push her even further.\"\n\n\"Oh Alice, no, please...\"\n\n\"Oh yes, Charlotte,\" she giggled. \"Pardon me, milady, but I would like to thoroughly educate Mr. Digby, so you will simply have to wait.\"\n\nShe flicked my nipple and then brought her mouth down to my stomach, kissing my ribs and licking her way down towards my mound. As she slid lower and lower, I was certain she could taste her own wetness on my skin. Her own core was dripping, positively drenched with arousal, and the only thing I wanted more than her mouth on me was to put my mouth on her.\n\nAs her head settled between my thighs, I lifted my legs, eager for her to kiss my innermost lips. But Alice stopped again and turned back to Thomas.\n\n\"Mr. Digby, this part requires some delicate movements. If you'd like, this would be a good time to exercise some practical application.\"\n\nI did not know if Thomas had been aware of what he was getting into, but I desperately hoped he would join Alice on the bed. To have his head next to Alice's, pressed between my thighs, was so exciting it made me tremble.\n\nIf he had any reservations, I did not see them. As the only person in the room still fully clothed, he needed a moment to undress. The room was positively thick with the scent of arousal, intoxicating the three of us more thoroughly than an entire cask of wine. Alice passed the time by lazily trailing her fingers along my inner thigh, gazing at Thomas as he removed his clothing.\n\n\"Miss Clayton, if you stared any harder at my husband while he was undressing, your eyes would fall from your skull,\" I teased.\n\n\"What? I can appreciate a view, can I not?\" She giggled, then flashed a wicked smile at me. \"Besides, I have never seen a man naked. I should like to see what all the fuss is about.\"\n\nThomas smiled, seemingly in spite of himself, as he removed the last bits of his clothing. He faced the two of us on the bed, spreading his arms and raising his eyebrows at Alice.\n\nShe had gone quiet, making much the same face as I had when first seeing Thomas's manhood. He had very clearly been enjoying the show Alice was putting on, and his member was as thick and swollen as I'd ever seen it. Without thinking, I bit my lip, suddenly craving the fullness only Thomas could provide.\n\nI would need to wait for that, however.\n\nAlice had turned to me, shocked. \"He puts that inside of you?\"\n\n\"Repeatedly,\" I said.\n\nShe looked back at Thomas. \"Mr. Digby, forgive my brashness, but I can certainly see now what all the fuss is about.\"\n\nHe chuckled good-naturedly, then joined us on the bed.\n\n\"Thank you, Miss Clayton. Now, may we proceed with the lesson?\"\n\nAs if remembering that she was nestled between my legs with my most private bits on complete display just inches from her face, Alice turned back to me. \"Yes, Mr. Digby. Now, I know men have some different, uh, tools in their arsenal, but this is usually how I made Charlotte scream in delight. You can use your hands, certainly, and I believe with some practice, even just your... uh... tool, but we'll begin with our mouths.\"\n\nHe listened obediently as Charlotte pointed out the most ticklish spots on me, proving her point by licking and sucking my thighs and inner lips, tracing her fingers along my slit and pulling my folds apart to show Thomas exactly what he was looking for. She had him kiss and lick the same spots when she was done, all the while avoiding pressing her face into my dripping canal. By the time she got to the place I wanted him most, directing him there without ever touching it, I was nearly weeping with desire.\n\nHer head was next to Thomas's, and they studied me as though I were a painting. Thomas asked questions that I barely heard, too distracted by the need I had for one of them\u2014either, at that point, it didn't matter who\u2014to release me from the prison of my desire.\n\n\"Now, Mr. Digby, I will demonstrate,\" Alice finally said. She brought her face to my mound, and looked up at me while she darted her tongue out to lick my slit all the way up to my bud.\n\nThe noise I made was animalistic at best, and a stream of pleading poured from my mouth as she began to suck on my sensitive bud. Thomas watched carefully, his breath cool against my flushed skin as Alice licked me greedily. Her tongue traced around my bud, then flicked it, then gently lapped at the juices dripping from my entrance.\n\nWhen she pulled back, I nearly cried. My hands took on a life of their own, reaching for her desperately, but she caught my wrists and pushed them back to the bed.\n\n\"Your turn,\" she said to Thomas. \"Start slow, and gentler than you think. She'll direct you if she wants more.\"\n\n\"Direct me?\"\n\n\"Well, she'll either outright ask, or she'll grab your hair and push your head into her. You'll learn quickly.\"\n\nWith that, she pushed Thomas's head towards me. He stuck his tongue out tentatively, licking my slit for a few moments before pulling back.\n\n\"Miss Clayton, you failed to mention how delightful she tastes,\" he said, then pushed his head back into my mound.\n\nAlice giggled and I could only moan.\n\nHe took her advice to be gentle, only at that point I was so aroused that I needed more. Alice did not stop me that time, and I gripped Thomas's hair tightly as I pushed myself up into him. He certainly learned quickly, increasing the intensity of his tongue against me.\n\nI cried out, urging him on. Alice was saying something to him, but I could not make out what it was. That is, until her fingers made their way to my entrance and pushed inside of me as Thomas kept licking.\n\nAgain, an unidentifiable noise from deep within my throat filled the room. My entire body was aflame; my nerves standing at the edge of a cliff and ready for the inevitable crash that was about to push me over the edge. Alice knew what was coming as my tunnel tightened around her fingers; she ordered Thomas not to stop what he was doing just in time for me to push his head into my core and hold him there as my vision exploded into a white light.\n\nEven with Alice, I had never felt pleasure the way I felt it in that moment. It was as though I was outside my body and inside it, all at once. My mind turned to jelly, my legs to liquid, and my toes curled over as I spasmed beneath my husband.\n\nI could not think, I could not see, I could not hear. There was only feeling, pure unimaginable bliss, that lasted for a length of time that I could not even recall. When it ended, my senses returned. Hearing came first, and some distant voice was telling Thomas to pull away. Then I could see them, my Alice and my Thomas, both grinning stupidly as they looked up at me. Then, some time after, my thoughts returned, manifesting as I mumbled \"Oh, dear Lord.\"\n\n\"Well done, Mr. Digby,\" Alice said.\n\n\"Charlotte, are you all right?\" Thomas asked.\n\nI only groaned and leaned back against the pillow as Alice burst into gales of laughter.\n\n\"Now, Mr. Digby. Our lessons are about to enter the theoretical, as I'm not sure specifically how to make that happen when you make love to her, but I do have some suspicions.\"\n\n\"She can do that again?\" Thomas asked.\n\n\"Well, certainly!\"\n\n\"More than once?\"\n\n\"Oh yes, Mr. Digby. Multiple times, if you do it well.\"\n\n\"I am not sure I am capable of moving, much less surviving that again.\" I opened my eyes, still trying to will some semblance of structure back into my bones so I could sit up. \"Thomas, would you perhaps allow me to show my gratitude to Alice before we continue?\"\n\nIt was the only point during that strange and wonderful event that Alice appeared nervous. It was one thing for her to assist my husband with bringing me pleasure; it was another entirely for me to ask to return the favour. But, as was the tradition with Thomas, he served to surprise us both when he enthusiastically agreed.\n\nThe problem lay in the fact that I could barely support my own weight in that moment, and that Alice was not the only one who deserved my gratitude. However, the problem had a solution I was certain would be more than suitable.\n\n\"Alice, my dear, I wonder if you would assist me in thanking my husband for his part in this memorable evening.\"\n\n\"Of course, Charlotte. What would you have me do?\"\n\nAt that, I looked at Thomas. \"My darling, I believe you should experience the bliss that accompanies Alice's talented little mouth. If you would stand again at the edge here, and Miss Clayton, if you would lower yourself to my face, please.\"\n\nWe shifted so that Alice could perch herself over my mouth, and as soon as her dripping folds were upon my face, I went to work. She gasped as I ravished her inner lips, though it was the last sound that I heard from her that was not muffled. She leaned forward, and Thomas's deep groan filled my ears.\n\nMy eyes were only capable of seeing Alice's body, and the weight of her bearing down on my head had dulled my ability to hear, but not completely. I could certainly imagine the scene that was occurring between my dearest friend and my husband. The wet sounds were clearly from Alice's mouth as she used it on Thomas's member, and the subtle shift of her body was evidence of her movements on him. Thomas was breathing heavily, making soft but deep noises, and I could imagine his hand resting on her head, his hips thrusting forward ever so slightly.\n\nAlice's noises were of the most sensual I had ever heard. Every so often, she made a soft choking sound, though mostly I could hear the tiniest of moans as I licked her thoroughly. Her juices coated my face, slick and glistening and delectably arousing. I brought my hands up to Alice's buttocks and gripped them tightly, at which point a high-pitched sound escaped her busy mouth and she ground her hips against me.\n\nSoon, it was no longer about what my tongue was doing to Alice, and was completely about what Alice was doing to my mouth. The wet noises from her own increased in pace as her hips rolled, crushing me beneath her as I tried to maintain contact with her bud. And those high-pitched noises, whines of pleasure, were almost constant.\n\nSuddenly, they became louder, and I realized that Thomas had withdrawn himself from Alice's mouth. It was with good reason; moments later, she wailed as she came, pushing against me with all her might. I had no choice but to simply let her use my face, and when she finally let up and moved off of me, I took a deep and gasping breath.\n\n\"Oh no, Charlotte! Did I hurt you?\" she gasped as she flopped to the bed.\n\n\"Not at all.\" Without thinking, I pulled her head to me and kissed her passionately. It was only when I thought about where her mouth had just been that I pulled back, hoping Thomas would not be upset that I had kissed her in such a way.\n\nHe was not, though his eyes were hungry for release. I moved away from Alice and knelt on the bed, facing him completely.\n\n\"Thomas, I am ready.\"\n\nHe came to me immediately, joining me on the bed as he took me in his arms. His manhood pressed against my stomach, wet with Alice's saliva, as he kissed me with abandon. I wrapped my arms about his shoulders, our bodies completely against each other as we kissed frantically.\n\nWhen we parted, he made to lay me back, but Alice stopped him.\n\n\"With all due respect, Mr. Digby, may I suggest that you enter her from behind?\"\n\nThomas touched my cheek. \"Is that acceptable, Charlotte?\"\n\n\"You may enter me however you please, Thomas. Just do so quickly.\"\n\nThe thick member between us twitched of its own accord, and Thomas kissed me before finally showing the strength and power I had been so nervous about at one point. He pushed me to the bed and flipped me to my stomach as though I weighed nothing, and as I lifted myself to my hands and knees, he grabbed my hips and buried himself in my waiting entrance.\n\nI could not control the noise that left my lips, my elbows buckling as he rammed himself inside me. The feeling of his length sheathed into me was familiar, but the sensation was entirely new at the same time. I had thought, during our previous lovemaking, that the entirety of my tunnel was around him, but he seemed to be hitting areas I had not known even existed within me.\n\nThomas pumped his hips, impaling me again and again as I bent forward until my face was nearly pressed into a pillow. Alice scurried forward, one hand resting gently on my back while the other snaked past my hip and to the nub between my legs. As Thomas burrowed inside me, she began to rub that sensitive spot, and I knew immediately that I would be visiting that land of white light and explosive pleasure again.\n\nMy moans were unintentional, uncontrollable, and constant. The sound urged Thomas on, soon mixed with the slapping of his skin against mine. His fingers dug in, gripping my hips with a bruising force that was painful yet so wanted and so necessary. I surrendered myself completely to him and to Alice, though there was no other choice; I could not have moved if I had wanted to, but nothing in the world could have made me want to leave.\n\nAgain and again Thomas breached me and Alice fingered me. My breasts bounced with the force of his penetrations, my rear absorbing the majority of his crashing power. My toes began to curl again, my fingers trembled, and the knot in the pit of my stomach unravelled as they sent me to the edge. I fell, I dropped, and my body lit up as I cried out.\n\nI could not keep myself from clenching around Thomas's shaft, and from somewhere I heard him groan as his thrusting grew erratic. His cry of pleasure echoed in my ears and suddenly I felt it, the warmth of his seed, the frantic contractions of his manhood as he emptied himself inside me. In unison we finished, finally in sync, finally surrendered to each other, and in that moment, I could not tell anyone why I had ever thought marrying him would make me unhappy.\n\nAlice took her hand from me as Thomas withdrew. I was almost disappointed at the sudden emptiness, but it would not be for long. My husband would bring me there again, I knew, and again, and forever.\n\nI crawled under the blankets, my body completely spent. Alice stood from the bed and began dressing, though her smile spread from ear to ear and she could not stop giggling as she looked at me.\n\nThomas kissed my forehead. \"Thank you, my darling,\" he whispered. \"I will endeavour to make you this happy every time we make love. I cannot tell you how much it pleases me to see you writhe beneath me like you did.\"\n\nHe made to move off the bed, but I caught hold of his wrist. \"Thomas, will you stay with me tonight? Please?\"\n\nThe smile that crossed his face was as bright as I had ever seen. He pulled the blankets back and settled in beside me, his body warm against mine as he lay back.\n\nAlice came to the side of the bed, still grinning, though her giggling had ceased.\n\n\"Will there be anything else, milady?\"\n\nI laughed as my eyes closed, nearly taken by sleep already.\n\n\"Thank you, Miss Clayton. That will be all for tonight.\"\n\n**\n\nThank you for taking the time to read my story. I hope you enjoyed it! \n\nWhile I have tried to remain true to the era, some anachronisms may have slipped past. These errors are entirely my own. \n\nI owe a huge amount of thanks to Bebop3, blackrandl1958, norafares, OneAuthor, and Pixel the Cat for their work beta reading and editing this story, and especially to blankrandl1958 for arranging this event. "
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "2 women 1 man",
        "betrothal",
        "bisexual female",
        "ffm",
        "historical romance",
        "lesbian lover",
        "marriage",
        "wine and old lace story",
        "romantic",
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-ladys-maid"
}